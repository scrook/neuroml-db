// Cell: bNAC219_L4_SBC_dbf40425f3_0_0
/*
{
  "id" : "bNAC219_L4_SBC_dbf40425f3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.3423, -11.8978, -0.346949, 1.26325", "1.17089, -10.8121, -0.257447, 2.15137", "0.999487, -9.72644, -0.167944, 3.69246", "0.82808, -8.64076, -0.0784414, 4.66934", "0.656673, -7.55509, 0.0110612, 5.3975", "0.485265, -6.46941, 0.100564, 6.12566", "0.313858, -5.38373, 0.190067, 6.8492", "0.142451, -4.29806, 0.279569, 7.51566", "-0.0289566, -3.21238, 0.369072, 8.33755", "-0.200364, -2.12671, 0.458575, 9.12608", "-0.371771, -1.04103, 0.548077, 9.58359", "-0.543179, 0.0446457, 0.63758, 9.3128", "-0.714586, 1.13032, 0.727082, 8.90825", "-0.885993, 2.216, 0.816585, 8.11721", "-1.0574, 3.30167, 0.906088, 7.32616", "-1.22881, 4.38735, 0.99559, 6.82145", "-1.40021, 5.47303, 1.08509, 6.25581", "-1.57162, 6.5587, 1.1746, 5.62926", "-1.74303, 7.64438, 1.2641, 5.00484", "-1.91444, 8.73005, 1.3536, 3.68472", "-2.08584, 9.81573, 1.4431, 2.38364" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "0.426774, -11.5043, 6.72196, 2.22", "-0.0898681, -15.283, 8.71181, 2.22", "-0.624404, -19.1926, 10.7706, 1.94", "-1.10289, -22.6923, 12.6135, 1.66", "-1.56407, -26.0653, 14.3897, 1.66", "-2.50881, -32.975, 18.0284, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000811785828
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-1.13322, 9.93566, -0.05804, 2.22", "0.526777, 15.9757, 1.76196, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000811785828
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.02678, -1.06434, -14.6681, 2.49", "6.08639, -2.2695, -14.743, 1.94", "8.02239, -4.47142, -14.8799, 1.94", "11.7069, -8.66206, -15.1405, 1.94", "14.0269, -11.3008, -15.3045, 2.49", "15.4863, -12.9606, -15.4077, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000811785828
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.08584, 9.81573, 1.4431, 0.83", "-4.42507, 24.6322, 1.4431, 0.83", "-6.7643, 39.4487, 1.4431, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-2.50881, -32.975, 18.0284, 0.83", "-4.10938, -33.7588, 26.8342, 0.83", "-4.21665, -33.8917, 27.9647, 0.83", "-4.32648, -34.7529, 36.3853, 0.55", "-4.20364, -34.9025, 38.1569, 0.55", "-3.44177, -35.5024, 44.0285, 0.55", "-3.24204, -35.6061, 45.1449, 0.28", "-2.86613, -35.7994, 47.6195, 0.55", "-2.41095, -35.9496, 49.9226, 0.55", "-1.50738, -36.174, 52.6301, 0.55", "0.114442, -36.4024, 56.8791, 0.28", "1.95595, -36.5918, 61.3036, 0.83" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-2.50881, -32.975, 18.0284, 1.39", "-3.02425, -37.2887, 21.2744, 1.39", "-3.75676, -43.4188, 25.8875, 1.39", "-4.42955, -49.0493, 30.1245, 1.39", "-4.91287, -53.094, 33.1682, 1.11", "-5.32605, -56.5519, 35.7703, 1.39" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "0.526777, 15.9757, 1.76196, 0.83", "4.02678, 19.9957, 3.83196, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "0.526777, 15.9757, 1.76196, 1.39", "-0.123225, 20.1657, 3.81196, 1.39" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "15.4863, -12.9606, -15.4077, 0.83", "16.7965, -14.8709, -14.5233, 0.83", "19.5032, -19.2919, -11.5141, 0.83", "21.8798, -23.1737, -8.87178, 1.11", "25.5816, -29.2203, -4.75603, 1.11", "27.9278, -33.0526, -2.14752, 1.11", "30.2287, -36.8109, 0.410616, 1.11", "34.9656, -44.7779, 6.71583, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "15.4863, -12.9606, -15.4077, 1.94", "17.0647, -13.6398, -19.3894, 1.94", "19.9215, -14.8692, -26.596, 1.94", "22.4354, -15.951, -32.9378, 1.94", "25.2715, -17.1714, -40.0923, 2.49" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-6.7643, 39.4487, 1.4431, 0.55", "-9.10353, 54.2652, 1.4431, 0.55", "-11.4428, 69.0816, 1.4431, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-5.32605, -56.5519, 35.7703, 0.83", "-8.84217, -57.1466, 39.2349, 0.83", "-11.5897, -57.6113, 41.9421, 0.83", "-15.6543, -58.2988, 45.9471, 0.83" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-5.32605, -56.5519, 35.7703, 1.11", "-5.78614, -61.4032, 34.5748, 1.11", "-6.05096, -65.1724, 33.6565, 1.11", "-6.345, -69.5911, 32.9123, 1.11", "-6.47761, -72.7713, 32.5475, 1.11", "-6.65643, -77.1956, 32.1636, 1.11", "-6.85805, -83.3767, 31.8286, 1.11", "-6.93904, -87.0176, 31.8331, 1.11", "-6.98484, -93.6719, 32.2448, 1.11", "-7.04268, -101.531, 32.9455, 1.11", "-7.05766, -105.737, 33.494, 1.11", "-7.10403, -109.791, 34.1789, 1.11", "-7.26753, -115.129, 35.4074, 1.11", "-7.30045, -117.176, 35.917, 1.11" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "4.02678, 19.9957, 3.83196, 0.28", "4.57376, 23.3744, 5.64517, 0.28", "5.92743, 31.736, 10.1325, 0.28", "6.35084, 34.3514, 11.5361, 0.28", "6.86087, 37.5019, 13.2268, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "4.02678, 19.9957, 3.83196, 0.55", "5.74555, 22.4401, 6.55596, 0.55", "7.24601, 24.3703, 8.47586, 0.55", "7.67242, 24.9384, 8.97381, 0.83", "11.2577, 29.7109, 13.1956, 0.55", "12.1931, 30.9873, 14.3338, 0.55", "15.3456, 35.3065, 18.0801, 0.55", "16.505, 37.0028, 19.5778, 0.55", "17.5457, 38.5059, 20.8411, 0.55", "19.7035, 41.5907, 23.1834, 0.55", "22.4088, 45.5891, 25.9403, 0.55", "23.3925, 47.1981, 26.9919, 0.55", "25.2865, 50.4245, 29.1226, 0.55", "26.8931, 53.223, 31.0023, 0.55", "28.063, 55.2077, 32.3002, 0.28", "29.4765, 57.7414, 33.642, 0.55", "31.3988, 61.2529, 35.2394, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.123225, 20.1657, 3.81196, 0.83", "-2.88722, 21.7165, 3.79009, 0.83", "-4.39352, 22.6529, 3.64955, 0.55", "-5.37835, 23.2257, 3.5278, 0.55", "-10.7078, 26.0518, 2.81803, 0.55", "-17.3962, 29.5987, 1.92728, 0.55", "-20.5113, 31.2506, 1.51242, 0.55", "-24.5505, 33.3854, 0.956861, 0.55", "-28.5381, 35.3926, 0.355156, 0.55", "-30.5352, 36.3307, 0.0160508, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-0.123225, 20.1657, 3.81196, 0.83", "0.449983, 22.9651, 9.93565, 0.83", "0.885744, 25.0933, 14.5909, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "34.9656, -44.7779, 6.71583, 0.55", "34.9556, -50.098, 2.59544, 0.55", "35.0246, -53.5437, -0.119456, 0.55", "35.0732, -54.6411, -0.950908, 0.55", "35.2915, -58.1282, -3.46334, 0.83", "35.4065, -59.7519, -4.54461, 1.11", "35.7614, -62.9126, -6.4515, 0.83", "35.9058, -63.805, -6.85056, 0.83", "36.2457, -65.3812, -7.55524, 0.28", "36.5251, -66.4194, -7.94532, 0.55", "37.0636, -68.1876, -8.55324, 0.28", "37.8773, -70.8339, -9.59077, 0.28", "38.2932, -72.3355, -10.1689, 0.28", "38.7773, -74.4456, -11.0239, 0.83", "38.9738, -75.491, -11.4597, 0.83", "39.5667, -79.2457, -13.0035, 0.28", "39.6449, -79.9432, -13.2698, 1.11", "39.7508, -81.7649, -13.9334, 0.83", "39.9436, -85.8093, -15.2551, 0.28", "40.0032, -87.4599, -15.6903, 0.83", "40.0389, -88.5652, -15.9393, 0.28", "40.1013, -91.0432, -16.3374, 0.55", "40.204, -94.4949, -16.9093, 0.28", "40.2153, -94.8709, -16.9791, 0.55", "40.2535, -96.5262, -17.3275, 0.28", "40.2762, -97.0756, -17.4484, 0.83", "40.3706, -99.0352, -17.8923, 0.28", "40.5504, -101.021, -18.3139, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "34.9656, -44.7779, 6.71583, 0.83", "37.395, -50.7171, 6.66389, 0.83", "38.2332, -53.0977, 6.22857, 0.83", "38.9811, -55.2411, 5.89495, 0.83", "40.2777, -58.9571, 5.31657, 0.83", "41.3641, -62.0709, 4.83192, 0.83", "43.5671, -68.3847, 3.84921, 0.83", "44.2248, -70.6884, 3.15379, 0.83", "45.2478, -74.5529, 1.79465, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "25.2715, -17.1714, -40.0923, 0.83", "31.2454, -12.8861, -39.6518, 0.83", "36.1673, -9.22078, -38.9474, 1.11", "39.7345, -6.56429, -38.4368, 1.11", "44.8163, -2.77995, -37.7094, 1.66", "47.6455, -0.673109, -37.3045, 1.11", "52.4484, 2.90354, -36.617, 1.11", "53.8763, 4.01168, -36.1903, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "25.2715, -17.1714, -40.0923, 1.39", "24.9403, -19.9461, -42.9431, 1.39", "24.6923, -22.0234, -45.0775, 1.11", "24.1, -26.9845, -50.1746, 0.83", "23.9189, -28.5012, -51.733, 0.83", "23.6174, -31.0273, -54.3284, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-15.6543, -58.2988, 45.9471, 0.83", "-14.8631, -60.9515, 47.8788, 0.83", "-13.809, -64.4854, 50.4522, 0.83", "-12.3279, -69.4511, 54.0683, 0.83", "-11.0434, -73.7578, 57.2044, 0.55", "-9.83689, -77.8025, 60.1498, 0.28" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-15.6543, -58.2988, 45.9471, 0.83", "-17.1305, -57.2847, 48.024, 0.83", "-17.8793, -56.7702, 49.0777, 0.83", "-19.8225, -55.4352, 51.8117, 0.83", "-21.2456, -54.4575, 53.814, 0.83", "-22.9063, -53.3166, 56.1506, 0.83" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-7.30045, -117.176, 35.917, 0.55", "-9.09541, -117.935, 36.1564, 0.55", "-11.6418, -119.276, 36.7828, 0.55", "-14.8976, -121.255, 37.7272, 0.55", "-17.1109, -122.782, 38.3967, 0.55", "-18.8775, -124.001, 38.9311, 0.55", "-19.9874, -124.766, 39.2668, 0.55", "-23.4429, -127.466, 40.4725, 0.55", "-24.7364, -128.598, 41.0128, 0.28", "-26.4769, -130.568, 41.8929, 0.55" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-7.30045, -117.176, 35.917, 1.11", "-7.05971, -119.455, 35.7645, 1.11", "-5.92645, -130.182, 35.0466, 1.11", "-5.7045, -132.283, 34.906, 1.11", "-5.46579, -134.543, 34.7548, 1.11", "-4.95797, -139.35, 34.4331, 1.11", "-4.48807, -143.797, 34.1354, 1.11" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-30.5352, 36.3307, 0.0160508, 0.28", "-33.6829, 36.2567, -0.116969, 0.28", "-35.4997, 36.1334, -0.506171, 0.28", "-36.4554, 36.0239, -0.779035, 0.28", "-38.791, 35.7246, -1.77987, 0.55", "-40.3915, 35.5195, -2.46569, 0.55", "-42.7954, 35.2115, -3.49578, 0.55", "-46.3337, 34.693, -5.2964, 1.11", "-48.3497, 34.3691, -6.4978, 0.55", "-51.7555, 33.6478, -8.84187, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-30.5352, 36.3307, 0.0160508, 0.55", "-34.3056, 37.2117, -1.01698, 0.55", "-35.8947, 37.6114, -1.74657, 0.55", "-37.1607, 37.953, -2.29559, 0.55", "-41.0337, 39.0694, -3.88835, 0.55", "-45.3275, 40.431, -5.56513, 0.55", "-47.0221, 41.0217, -6.20095, 0.55", "-50.6658, 42.5848, -8.19664, 0.55", "-53.4758, 44.0224, -9.96175, 0.28", "-54.2231, 44.4334, -10.4879, 0.55", "-55.1775, 45.0271, -11.2908, 0.28", "-55.7522, 45.4817, -11.7839, 0.55", "-59.9292, 49.1321, -15.7877, 0.28", "-60.4648, 49.5835, -16.3727, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "0.885744, 25.0933, 14.5909, 0.55", "0.854502, 27.2641, 16.7139, 0.55", "0.674555, 30.1114, 18.9352, 0.55", "-0.0980239, 35.1408, 21.1099, 0.28", "-0.568701, 39.2095, 22.3772, 0.83", "-0.636916, 40.4119, 22.6574, 0.83", "-0.678138, 44.2201, 23.4203, 0.83", "-0.626763, 47.0583, 23.774, 0.28", "-0.203068, 56.3372, 24.351, 0.55", "0.0506619, 60.0621, 24.3213, 0.55", "0.513529, 65.2966, 24.1531, 0.55", "0.739911, 67.2896, 24.1368, 0.55", "1.05068, 69.5048, 24.2075, 0.55", "1.24949, 70.6354, 24.2415, 0.28", "1.41532, 71.3987, 24.2152, 0.55", "1.62339, 73.8797, 23.8335, 0.28", "1.60627, 75.204, 23.4414, 0.28", "1.56155, 76.267, 23.0338, 0.83", "1.46632, 78.3443, 22.0594, 0.28", "1.31507, 81.5306, 20.3915, 0.83", "1.2444, 83.6318, 19.1498, 0.28", "1.21884, 84.318, 18.6639, 0.55", "1.20877, 85.4162, 17.7961, 0.28", "1.18107, 86.373, 16.9549, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.885744, 25.0933, 14.5909, 0.83", "1.36344, 27.4411, 18.3145, 0.83", "2.12733, 31.1955, 24.2691, 0.83", "2.64929, 33.7609, 28.3377, 0.83", "2.88177, 34.9035, 30.1498, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "45.2478, -74.5529, 1.79465, 0.55", "49.7204, -74.2121, 2.18535, 0.55", "52.8779, -73.9714, 2.46117, 0.55", "54.8323, -73.8225, 2.63189, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "45.2478, -74.5529, 1.79465, 0.83", "46.1872, -76.9828, 1.5144, 0.83", "46.5067, -78.1587, 1.78835, 0.83", "46.6698, -79.0135, 2.27374, 0.28", "46.8966, -80.8325, 3.51192, 0.55", "46.9617, -81.8133, 4.15584, 0.28", "47.0877, -83.4633, 5.30699, 0.83", "47.3645, -88.5207, 9.0048, 0.83", "47.6356, -92.1003, 11.479, 0.83", "47.7433, -93.3532, 12.3035, 0.83", "47.9989, -96.3378, 14.3106, 0.83", "48.3566, -100.873, 17.3049, 0.55", "48.6135, -103.703, 19.046, 0.55", "49.1343, -106.907, 20.4667, 0.55", "49.2996, -107.681, 20.7202, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "53.8763, 4.01168, -36.1903, 0.83", "54.4865, 5.20693, -36.8583, 0.83", "56.6305, 9.40652, -39.2057, 0.83", "59.1014, 14.2464, -41.9109, 0.83", "60.6614, 17.3021, -43.6189, 0.83", "62.594, 21.0874, -45.7346, 0.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "53.8763, 4.01168, -36.1903, 1.39", "54.4767, 4.14417, -37.8356, 1.39", "55.0308, 4.25787, -39.2859, 0.28", "56.9833, 4.52814, -43.8778, 0.83", "58.3217, 4.59987, -47.0652, 0.83", "61.6105, 4.80816, -54.3335, 1.66", "62.6624, 4.87573, -56.473, 0.28", "63.8119, 4.9109, -58.5941, 0.83", "64.8754, 4.94265, -60.4643, 0.83", "66.9836, 4.99503, -64.0637, 1.39", "68.5992, 5.00689, -66.7818, 0.55", "70.7049, 4.88736, -70.1434, 0.55", "71.9061, 4.81094, -72.1502, 0.83", "74.8732, 4.6592, -77.1422, 0.28", "77.5103, 4.55253, -81.7416, 0.28", "80.5725, 4.37163, -87.0102, 0.55", "82.4482, 4.09165, -90.5917, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "23.6174, -31.0273, -54.3284, 0.55", "26.6982, -29.8746, -57.1006, 0.55", "28.3498, -29.0768, -58.8147, 2.49", "30.7374, -27.4382, -62.429, 2.49", "30.2048, -26.9692, -64.0361, 0.55", "29.6768, -26.4458, -65.8392, 2.77", "29.068, -25.5608, -68.2271, 0.28", "28.5937, -24.8947, -69.7675, 0.28", "28.0759, -23.9195, -71.892, 1.66", "27.3954, -21.4364, -76.6535, 0.28", "27.3187, -19.3268, -80.4318, 1.66", "27.5309, -17.7707, -83.0536, 0.28", "27.7268, -17.0001, -84.3143, 1.66", "28.949, -13.8305, -88.8949, 0.55", "29.6942, -12.2203, -90.8205, 0.55", "30.6334, -10.3418, -92.6314, 0.55", "31.2346, -9.09503, -93.6043, 0.55", "32.9097, -5.43093, -96.0066, 1.39", "33.5294, -4.00664, -96.6983, 0.55", "34.039, -2.77307, -97.0594, 0.55", "34.5185, -1.70147, -97.4734, 0.28", "36.0719, 1.16443, -99.2557, 0.55", "36.9934, 2.36676, -100.348, 2.22", "38.6718, 3.8305, -102.292, 0.28", "39.5912, 4.36907, -103.463, 1.11", "42.6934, 5.23618, -108.431, 1.11", "45.2097, 5.12688, -113.151, 0.28", "45.3677, 5.05677, -113.501, 0.83", "45.8384, 4.71995, -114.636, 0.28", "45.9703, 4.58078, -114.983, 0.83", "47.8887, 2.19309, -119.901, 0.28", "48.6064, 1.27479, -121.485, 0.83", "49.9503, -0.3876, -124.244, 0.55", "50.3985, -0.888431, -125.293, 0.83", "51.0011, -1.50338, -126.713, 0.28", "51.2906, -1.7909, -127.436, 1.11", "51.7109, -2.21461, -128.526, 0.55", "52.8167, -3.50548, -131.758, 1.66", "54.5936, -6.34713, -138.17, 0.55", "54.8782, -6.94673, -139.391, 1.39", "55.8346, -9.52437, -144.16, 0.55", "55.9595, -10.0593, -144.994, 0.55", "56.0997, -11.477, -146.71, 0.83", "56.0921, -13.0996, -148.0, 0.28", "55.9997, -13.8528, -148.337, 0.55", "55.4795, -16.6437, -149.541, 0.28", "55.3276, -17.3849, -150.011, 0.55", "54.878, -20.4852, -152.673, 0.28", "54.8257, -21.0599, -153.336, 0.83", "54.81, -21.6309, -154.149, 0.55", "54.7794, -23.481, -157.06, 1.11", "54.8792, -26.7191, -162.791, 0.28", "54.9168, -27.4261, -164.193, 0.28", "55.036, -28.8481, -167.372, 1.39", "55.1985, -30.3664, -170.959, 0.55", "55.2571, -30.7342, -171.88, 0.55", "55.6103, -32.2792, -176.011, 0.55", "56.0207, -33.9333, -180.653, 0.28", "56.2608, -35.1801, -184.41, 1.39" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "23.6174, -31.0273, -54.3284, 2.22", "24.5132, -32.462, -55.4393, 2.22", "25.7661, -34.7771, -57.7835, 0.55", "26.8198, -36.8955, -60.2776, 2.77", "27.7665, -38.4865, -62.587, 0.55", "29.6587, -41.5165, -67.2196, 0.55", "31.0666, -43.8567, -70.794, 0.55", "31.2705, -44.2425, -71.4462, 1.11", "32.3484, -46.3945, -75.7002, 2.77", "33.8634, -49.2542, -81.895, 0.28", "33.9966, -49.4777, -82.3805, 0.28", "34.4521, -50.0713, -83.5484, 0.83", "36.1033, -51.8818, -87.0183, 0.28", "37.5542, -53.2681, -89.7292, 2.22", "38.4162, -53.849, -90.9593, 0.28", "38.9839, -54.1452, -91.5589, 2.22", "40.3566, -54.7949, -92.884, 0.55", "41.3846, -55.2599, -93.8655, 0.55", "42.1102, -55.6132, -94.7548, 2.22", "44.8661, -57.1174, -98.8399, 0.28", "45.3018, -57.408, -99.6919, 1.11", "47.0761, -58.7466, -103.747, 0.28", "48.1452, -59.6647, -106.527, 1.39", "50.7798, -62.1909, -114.267, 0.28", "51.2682, -62.7313, -115.836, 1.39", "53.1883, -65.1827, -122.405, 0.28", "53.2559, -65.2721, -122.651, 0.83", "53.4067, -65.4808, -123.227, 0.83", "54.3669, -66.9228, -126.783, 0.55", "54.9148, -67.9244, -128.541, 0.28", "55.2735, -68.6498, -129.656, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-4.48807, -143.797, 34.1354, 0.83", "-4.28267, -144.702, 41.234, 0.83", "-3.98686, -145.437, 45.1397, 0.83", "-3.82189, -145.847, 47.3177, 0.83", "-3.18368, -147.433, 55.7442, 0.83", "-2.88367, -148.179, 59.7051, 0.83", "-2.76339, -148.478, 61.2933, 0.28", "-2.55687, -148.747, 62.1054, 0.28" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-4.48807, -143.797, 34.1354, 1.11", "-4.00034, -148.307, 35.0509, 1.11", "-3.61821, -151.081, 35.4869, 1.11", "-3.24668, -153.266, 35.7597, 1.11", "-2.60274, -156.847, 36.1146, 1.11", "-2.17912, -159.312, 36.3075, 1.11", "-1.48391, -163.244, 36.5692, 1.11", "-0.645538, -167.628, 36.7026, 1.11", "-0.0995977, -170.432, 36.7688, 1.11", "0.718745, -174.558, 36.8166, 1.11", "1.63933, -179.473, 36.7646, 1.11", "2.00354, -181.441, 36.7429, 1.11", "2.64947, -185.834, 36.6948, 1.11" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "2.88177, 34.9035, 30.1498, 0.55", "3.28212, 36.4769, 30.0715, 0.55", "3.89747, 38.6772, 30.088, 0.55", "5.31309, 43.8224, 30.2744, 0.55", "6.78459, 48.7433, 30.4022, 0.28", "7.2346, 50.3705, 30.6189, 0.28", "7.45129, 51.1982, 30.7772, 0.55", "7.93774, 53.1598, 31.3337, 0.28", "8.20224, 54.4264, 31.9318, 0.28", "8.47513, 56.3621, 33.2185, 0.55", "8.73164, 60.8341, 36.1945, 0.28", "8.752, 61.2969, 36.5261, 0.28", "8.75331, 62.2059, 37.2285, 0.55", "8.55543, 65.2786, 39.8478, 0.28", "8.55162, 65.3146, 39.8823, 0.55", "8.22453, 66.8496, 41.5319, 0.28", "7.97031, 68.0414, 42.5923, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "2.88177, 34.9035, 30.1498, 0.55", "2.61376, 38.162, 32.4582, 0.55", "2.33256, 41.5811, 34.8803, 0.55", "1.99137, 45.7296, 37.819, 0.55", "1.77568, 48.352, 39.6767, 0.55", "1.53732, 51.2502, 41.7297, 0.55", "1.37127, 53.2692, 43.16, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "49.2996, -107.681, 20.7202, 0.55", "50.2587, -108.529, 20.1256, 0.55", "51.0568, -109.234, 19.6308, 0.28", "51.4798, -109.608, 19.3685, 0.28", "52.1568, -110.207, 18.9487, 0.55", "53.101, -111.042, 18.3634, 0.28", "55.8986, -113.515, 16.6289, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "49.2996, -107.681, 20.7202, 0.28", "49.0145, -110.398, 20.7202, 0.28", "48.9867, -110.787, 20.7202, 0.55", "48.9966, -112.176, 20.7202, 0.28", "49.1107, -113.042, 20.7202, 0.55", "49.3152, -114.439, 20.7302, 0.28", "49.4047, -115.05, 20.7346, 0.55", "49.7237, -116.508, 20.7474, 0.28", "50.1962, -118.559, 20.7673, 0.55", "50.7694, -121.058, 20.7959, 0.28", "51.2239, -122.763, 20.8186, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "62.594, 21.0874, -45.7346, 0.55", "64.0542, 27.2842, -51.3489, 0.55", "64.284, 28.7152, -52.5177, 0.55", "64.3219, 29.4304, -53.0133, 0.83", "64.3318, 30.4428, -53.5446, 0.28", "64.3169, 31.7132, -54.121, 0.83", "64.1528, 35.9839, -55.8793, 0.28", "64.0242, 36.8247, -56.0789, 0.55", "63.5836, 39.3252, -56.6873, 0.28", "62.773, 43.9033, -57.7885, 0.28", "62.6784, 44.4941, -57.923, 0.83", "62.5521, 45.4772, -58.1065, 0.28", "62.3988, 46.9531, -58.1972, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "62.594, 21.0874, -45.7346, 0.55", "65.7262, 23.0882, -46.8231, 0.55", "67.8086, 24.4957, -47.5299, 0.55", "71.2204, 26.8675, -48.5945, 1.94", "72.9298, 28.1168, -49.244, 0.55", "75.6617, 30.2239, -50.3465, 0.55", "78.1487, 32.2149, -51.3528, 0.55", "80.1174, 33.8997, -52.2833, 1.11", "82.1349, 35.5675, -53.1919, 1.11", "85.0838, 37.8316, -54.5821, 0.28", "87.194, 39.3518, -55.585, 1.11", "89.017, 40.5374, -56.475, 0.83", "91.3463, 41.7093, -57.6607, 0.28", "94.0961, 42.794, -59.3027, 0.83", "97.4659, 43.8224, -61.5473, 0.55", "98.4294, 44.0761, -62.1834, 0.55", "100.985, 44.7319, -64.1921, 0.28", "103.289, 45.3836, -66.1636, 1.11", "107.093, 46.6659, -69.5657, 0.55", "109.962, 47.8597, -72.2558, 0.28", "111.587, 48.7163, -73.7409, 1.94", "115.112, 51.0172, -77.0775, 0.28", "116.103, 51.7491, -78.0521, 0.83", "116.946, 52.4635, -78.9316, 0.28", "118.102, 53.6959, -79.9941, 1.11", "119.406, 55.5509, -81.235, 0.28", "119.678, 56.0305, -81.5043, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "2.64947, -185.834, 36.6948, 0.55", "5.30777, -189.997, 36.6948, 0.55", "6.6827, -191.922, 36.6948, 0.55", "8.4012, -194.327, 36.6948, 0.55", "10.4957, -197.26, 36.6948, 0.55", "13.5906, -201.592, 36.6948, 0.55", "16.6196, -205.833, 36.6948, 0.55", "19.2008, -209.276, 36.6948, 0.55" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "2.64947, -185.834, 36.6948, 0.83", "3.03223, -188.315, 36.9209, 0.83", "3.33136, -191.793, 37.2241, 0.83", "3.69886, -196.861, 37.6371, 0.83", "3.83472, -200.223, 37.8817, 0.83", "3.98887, -204.281, 38.1488, 0.83", "4.10068, -207.327, 38.3301, 0.83", "4.17641, -212.979, 38.6426, 0.83", "4.14101, -215.702, 38.7662, 0.83", "4.08312, -220.539, 38.9288, 0.83", "4.07466, -223.636, 38.9959, 0.83", "4.0778, -226.979, 38.9944, 0.83", "4.11891, -229.464, 38.9944, 0.83", "4.42888, -236.437, 38.9944, 0.83", "4.54765, -239.388, 38.9944, 0.83" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "51.2239, -122.763, 20.8186, 0.28", "52.636, -125.525, 20.8186, 0.28", "52.8866, -126.015, 20.8186, 0.55", "53.7792, -127.761, 20.8186, 0.28", "54.4588, -129.09, 20.8186, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "51.2239, -122.763, 20.8186, 0.28", "50.5578, -128.018, 20.8186, 0.28", "50.3148, -129.935, 20.8186, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "19.2008, -209.276, 36.6948, 0.55", "21.4076, -210.898, 36.6948, 0.55", "23.329, -212.47, 36.6948, 0.55", "24.457, -213.424, 36.4965, 0.28", "25.6817, -214.519, 36.0871, 0.55", "27.0894, -215.789, 35.5693, 0.28", "28.0633, -216.698, 35.2042, 0.55", "28.8295, -217.438, 34.8878, 0.55", "32.2948, -220.854, 33.4248, 0.55", "35.579, -223.983, 31.8038, 0.55", "36.9935, -225.199, 31.0727, 0.28", "38.3261, -226.227, 30.2968, 0.55", "39.0742, -226.726, 29.845, 0.28", "41.7642, -228.224, 28.1164, 0.55", "44.935, -229.761, 26.016, 0.28", "46.5897, -230.452, 24.8875, 0.55", "50.4805, -231.939, 22.0771, 0.28", "51.1297, -232.162, 21.5907, 0.55", "54.2952, -233.199, 19.1369, 0.28", "55.8043, -233.703, 17.9167, 0.83", "56.699, -234.028, 17.2917, 0.83" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "19.2008, -209.276, 36.6948, 0.28", "22.7847, -212.057, 37.3115, 0.28", "25.261, -213.978, 37.7376, 0.28", "28.1183, -216.195, 38.2292, 0.28" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "4.54765, -239.388, 38.9944, 0.55", "5.81597, -242.886, 38.9687, 0.55", "7.07834, -246.812, 38.9454, 0.55", "8.25394, -250.48, 38.9286, 0.55", "9.07688, -252.701, 38.9202, 0.55", "10.0021, -255.097, 38.9121, 0.55", "11.4674, -258.913, 38.9007, 0.55", "12.2866, -260.998, 38.8326, 0.55", "14.1903, -265.46, 38.6394, 0.55", "15.7165, -268.717, 38.6714, 0.55", "16.2403, -269.748, 38.724, 0.55", "17.0261, -271.222, 38.8519, 0.55", "18.984, -275.154, 39.4843, 0.55", "21.2518, -279.875, 40.7465, 0.55", "23.1707, -284.244, 42.199, 0.55", "23.3592, -284.727, 42.3857, 0.55", "23.754, -285.703, 42.8305, 0.55", "25.0346, -288.972, 44.7357, 0.55", "25.5509, -290.925, 46.4149, 0.55" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "4.54765, -239.388, 38.9944, 0.83", "4.54045, -241.898, 38.9944, 0.83", "4.59065, -243.996, 38.8141, 0.83", "4.63558, -246.965, 38.5008, 0.83", "4.75491, -250.553, 38.1919, 0.83", "4.80095, -251.928, 38.0922, 0.83", "4.98158, -255.396, 37.8724, 0.83", "5.44126, -261.688, 37.5596, 0.83", "5.6514, -263.965, 37.4767, 0.83", "6.09588, -268.688, 37.3749, 0.83", "6.46141, -272.014, 37.3593, 0.83", "6.74546, -274.77, 37.3989, 0.83", "6.9582, -277.127, 37.4976, 0.83", "7.07293, -278.365, 37.5964, 0.83", "7.2545, -281.396, 37.7892, 0.83", "7.19827, -283.69, 37.9293, 0.55", "7.02482, -285.46, 38.05, 0.55", "6.35056, -289.252, 38.3107, 0.55", "5.88871, -291.147, 38.4292, 0.28", "5.08637, -293.654, 38.4651, 0.55", "3.80589, -296.963, 38.3785, 0.55", "2.94837, -298.894, 38.2603, 0.28", "2.39494, -299.999, 38.1565, 0.83", "0.96635, -302.447, 37.8499, 0.83", "-0.929881, -305.568, 37.3329, 0.83", "-1.65599, -306.749, 37.0559, 0.28", "-2.75861, -308.466, 36.4531, 0.83", "-3.89419, -310.175, 35.7714, 0.28" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_19", "dend_0", "apic_16", "apic_1", "dend_29", "dend_20", "dend_10", "dend_1", "apic_13", "apic_2", "dend_31", "dend_30", "dend_26", "dend_21", "dend_18", "dend_11", "dend_5", "dend_2", "apic_15", "apic_14", "apic_12", "apic_3", "dend_28", "dend_27", "dend_25", "dend_22", "dend_17", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "apic_11", "apic_4", "dend_24", "dend_23", "dend_16", "dend_13", "dend_9", "dend_8", "apic_8", "apic_5", "dend_15", "dend_14", "apic_10", "apic_9", "apic_7", "apic_6" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_19", "dend_0", "apic_16", "apic_1", "dend_29", "dend_20", "dend_10", "dend_1", "apic_13", "apic_2", "dend_31", "dend_30", "dend_26", "dend_21", "dend_18", "dend_11", "dend_5", "dend_2", "apic_15", "apic_14", "apic_12", "apic_3", "dend_28", "dend_27", "dend_25", "dend_22", "dend_17", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "apic_11", "apic_4", "dend_24", "dend_23", "dend_16", "dend_13", "dend_9", "dend_8", "apic_8", "apic_5", "dend_15", "dend_14", "apic_10", "apic_9", "apic_7", "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_19", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_29", "dend_20", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_13", "apic_13", "apic_13", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_9", "apic_9", "apic_9", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L4_SBC_dbf40425f3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_16, id: apic_16, parent: apic_0
create apic_16
public apic_16
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_29, id: dend_29, parent: dend_19
create dend_29
public dend_29
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_13, id: apic_13, parent: apic_1
create apic_13
public apic_13
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_15, id: apic_15, parent: apic_13
create apic_15
public apic_15
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_12, id: apic_12, parent: apic_2
create apic_12
public apic_12
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_11, id: apic_11, parent: apic_3
create apic_11
public apic_11
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: apic_8, id: apic_8, parent: apic_4
create apic_8
public apic_8
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_19, dend_0, apic_16, apic_1, dend_29, dend_20, dend_10, dend_1, apic_13, apic_2, dend_31, dend_30, dend_26, dend_21, dend_18, dend_11, dend_5, dend_2, apic_15, apic_14, apic_12, apic_3, dend_28, dend_27, dend_25, dend_22, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, apic_11, apic_4, dend_24, dend_23, dend_16, dend_13, dend_9, dend_8, apic_8, apic_5, dend_15, dend_14, apic_10, apic_9, apic_7, apic_6]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_19, dend_0, apic_16, apic_1, dend_29, dend_20, dend_10, dend_1, apic_13, apic_2, dend_31, dend_30, dend_26, dend_21, dend_18, dend_11, dend_5, dend_2, apic_15, apic_14, apic_12, apic_3, dend_28, dend_27, dend_25, dend_22, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, apic_11, apic_4, dend_24, dend_23, dend_16, dend_13, dend_9, dend_8, apic_8, apic_5, dend_15, dend_14, apic_10, apic_9, apic_7, apic_6]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_50
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_19, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_1, apic_1, apic_1, apic_1, apic_1, dend_29, dend_20, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_13, apic_13, apic_13, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4500000811785828)
    connect dend_19(0), soma_0(0.4500000811785828)
    connect dend_0(0), soma_0(0.4500000811785828)
    connect axon_0(0), soma_0(1.0)
    connect apic_16(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_29(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_13(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_15(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_12(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_11(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect apic_8(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.3423, -11.8978, -0.346949, 1.26325 ) }
    soma_0 { pt3dadd( 1.17089, -10.8121, -0.257447, 2.15137 ) }
    soma_0 { pt3dadd( 0.999487, -9.72644, -0.167944, 3.69246 ) }
    soma_0 { pt3dadd( 0.82808, -8.64076, -0.0784414, 4.66934 ) }
    soma_0 { pt3dadd( 0.656673, -7.55509, 0.0110612, 5.3975 ) }
    soma_0 { pt3dadd( 0.485265, -6.46941, 0.100564, 6.12566 ) }
    soma_0 { pt3dadd( 0.313858, -5.38373, 0.190067, 6.8492 ) }
    soma_0 { pt3dadd( 0.142451, -4.29806, 0.279569, 7.51566 ) }
    soma_0 { pt3dadd( -0.0289566, -3.21238, 0.369072, 8.33755 ) }
    soma_0 { pt3dadd( -0.200364, -2.12671, 0.458575, 9.12608 ) }
    soma_0 { pt3dadd( -0.371771, -1.04103, 0.548077, 9.58359 ) }
    soma_0 { pt3dadd( -0.543179, 0.0446457, 0.63758, 9.3128 ) }
    soma_0 { pt3dadd( -0.714586, 1.13032, 0.727082, 8.90825 ) }
    soma_0 { pt3dadd( -0.885993, 2.216, 0.816585, 8.11721 ) }
    soma_0 { pt3dadd( -1.0574, 3.30167, 0.906088, 7.32616 ) }
    soma_0 { pt3dadd( -1.22881, 4.38735, 0.99559, 6.82145 ) }
    soma_0 { pt3dadd( -1.40021, 5.47303, 1.08509, 6.25581 ) }
    soma_0 { pt3dadd( -1.57162, 6.5587, 1.1746, 5.62926 ) }
    soma_0 { pt3dadd( -1.74303, 7.64438, 1.2641, 5.00484 ) }
    soma_0 { pt3dadd( -1.91444, 8.73005, 1.3536, 3.68472 ) }
    soma_0 { pt3dadd( -2.08584, 9.81573, 1.4431, 2.38364 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 0.426774, -11.5043, 6.72196, 2.22 ) }
    apic_0 { pt3dadd( -0.0898681, -15.283, 8.71181, 2.22 ) }
    apic_0 { pt3dadd( -0.624404, -19.1926, 10.7706, 1.94 ) }
    apic_0 { pt3dadd( -1.10289, -22.6923, 12.6135, 1.66 ) }
    apic_0 { pt3dadd( -1.56407, -26.0653, 14.3897, 1.66 ) }
    apic_0 { pt3dadd( -2.50881, -32.975, 18.0284, 1.66 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 27/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -1.13322, 9.93566, -0.05804, 2.22 ) }
    dend_19 { pt3dadd( 0.526777, 15.9757, 1.76196, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 29/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.02678, -1.06434, -14.6681, 2.49 ) }
    dend_0 { pt3dadd( 6.08639, -2.2695, -14.743, 1.94 ) }
    dend_0 { pt3dadd( 8.02239, -4.47142, -14.8799, 1.94 ) }
    dend_0 { pt3dadd( 11.7069, -8.66206, -15.1405, 1.94 ) }
    dend_0 { pt3dadd( 14.0269, -11.3008, -15.3045, 2.49 ) }
    dend_0 { pt3dadd( 15.4863, -12.9606, -15.4077, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 35/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.08584, 9.81573, 1.4431, 0.83 ) }
    axon_0 { pt3dadd( -4.42507, 24.6322, 1.4431, 0.83 ) }
    axon_0 { pt3dadd( -6.7643, 39.4487, 1.4431, 0.83 ) }
    // Section: apic_16, id: apic_16, parent: apic_0 (entry count 38/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -2.50881, -32.975, 18.0284, 0.83 ) }
    apic_16 { pt3dadd( -4.10938, -33.7588, 26.8342, 0.83 ) }
    apic_16 { pt3dadd( -4.21665, -33.8917, 27.9647, 0.83 ) }
    apic_16 { pt3dadd( -4.32648, -34.7529, 36.3853, 0.55 ) }
    apic_16 { pt3dadd( -4.20364, -34.9025, 38.1569, 0.55 ) }
    apic_16 { pt3dadd( -3.44177, -35.5024, 44.0285, 0.55 ) }
    apic_16 { pt3dadd( -3.24204, -35.6061, 45.1449, 0.28 ) }
    apic_16 { pt3dadd( -2.86613, -35.7994, 47.6195, 0.55 ) }
    apic_16 { pt3dadd( -2.41095, -35.9496, 49.9226, 0.55 ) }
    apic_16 { pt3dadd( -1.50738, -36.174, 52.6301, 0.55 ) }
    apic_16 { pt3dadd( 0.114442, -36.4024, 56.8791, 0.28 ) }
    apic_16 { pt3dadd( 1.95595, -36.5918, 61.3036, 0.83 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 50/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -2.50881, -32.975, 18.0284, 1.39 ) }
    apic_1 { pt3dadd( -3.02425, -37.2887, 21.2744, 1.39 ) }
    apic_1 { pt3dadd( -3.75676, -43.4188, 25.8875, 1.39 ) }
    apic_1 { pt3dadd( -4.42955, -49.0493, 30.1245, 1.39 ) }
    apic_1 { pt3dadd( -4.91287, -53.094, 33.1682, 1.11 ) }
    apic_1 { pt3dadd( -5.32605, -56.5519, 35.7703, 1.39 ) }
    // Section: dend_29, id: dend_29, parent: dend_19 (entry count 56/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 0.526777, 15.9757, 1.76196, 0.83 ) }
    dend_29 { pt3dadd( 4.02678, 19.9957, 3.83196, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 58/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 0.526777, 15.9757, 1.76196, 1.39 ) }
    dend_20 { pt3dadd( -0.123225, 20.1657, 3.81196, 1.39 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 60/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 15.4863, -12.9606, -15.4077, 0.83 ) }
    dend_10 { pt3dadd( 16.7965, -14.8709, -14.5233, 0.83 ) }
    dend_10 { pt3dadd( 19.5032, -19.2919, -11.5141, 0.83 ) }
    dend_10 { pt3dadd( 21.8798, -23.1737, -8.87178, 1.11 ) }
    dend_10 { pt3dadd( 25.5816, -29.2203, -4.75603, 1.11 ) }
    dend_10 { pt3dadd( 27.9278, -33.0526, -2.14752, 1.11 ) }
    dend_10 { pt3dadd( 30.2287, -36.8109, 0.410616, 1.11 ) }
    dend_10 { pt3dadd( 34.9656, -44.7779, 6.71583, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 68/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 15.4863, -12.9606, -15.4077, 1.94 ) }
    dend_1 { pt3dadd( 17.0647, -13.6398, -19.3894, 1.94 ) }
    dend_1 { pt3dadd( 19.9215, -14.8692, -26.596, 1.94 ) }
    dend_1 { pt3dadd( 22.4354, -15.951, -32.9378, 1.94 ) }
    dend_1 { pt3dadd( 25.2715, -17.1714, -40.0923, 2.49 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 73/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -6.7643, 39.4487, 1.4431, 0.55 ) }
    axon_1 { pt3dadd( -9.10353, 54.2652, 1.4431, 0.55 ) }
    axon_1 { pt3dadd( -11.4428, 69.0816, 1.4431, 0.55 ) }
    // Section: apic_13, id: apic_13, parent: apic_1 (entry count 76/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -5.32605, -56.5519, 35.7703, 0.83 ) }
    apic_13 { pt3dadd( -8.84217, -57.1466, 39.2349, 0.83 ) }
    apic_13 { pt3dadd( -11.5897, -57.6113, 41.9421, 0.83 ) }
    apic_13 { pt3dadd( -15.6543, -58.2988, 45.9471, 0.83 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 80/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -5.32605, -56.5519, 35.7703, 1.11 ) }
    apic_2 { pt3dadd( -5.78614, -61.4032, 34.5748, 1.11 ) }
    apic_2 { pt3dadd( -6.05096, -65.1724, 33.6565, 1.11 ) }
    apic_2 { pt3dadd( -6.345, -69.5911, 32.9123, 1.11 ) }
    apic_2 { pt3dadd( -6.47761, -72.7713, 32.5475, 1.11 ) }
    apic_2 { pt3dadd( -6.65643, -77.1956, 32.1636, 1.11 ) }
    apic_2 { pt3dadd( -6.85805, -83.3767, 31.8286, 1.11 ) }
    apic_2 { pt3dadd( -6.93904, -87.0176, 31.8331, 1.11 ) }
    apic_2 { pt3dadd( -6.98484, -93.6719, 32.2448, 1.11 ) }
    apic_2 { pt3dadd( -7.04268, -101.531, 32.9455, 1.11 ) }
    apic_2 { pt3dadd( -7.05766, -105.737, 33.494, 1.11 ) }
    apic_2 { pt3dadd( -7.10403, -109.791, 34.1789, 1.11 ) }
    apic_2 { pt3dadd( -7.26753, -115.129, 35.4074, 1.11 ) }
    apic_2 { pt3dadd( -7.30045, -117.176, 35.917, 1.11 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 94/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 4.02678, 19.9957, 3.83196, 0.28 ) }
    dend_31 { pt3dadd( 4.57376, 23.3744, 5.64517, 0.28 ) }
    dend_31 { pt3dadd( 5.92743, 31.736, 10.1325, 0.28 ) }
    dend_31 { pt3dadd( 6.35084, 34.3514, 11.5361, 0.28 ) }
    dend_31 { pt3dadd( 6.86087, 37.5019, 13.2268, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 4.02678, 19.9957, 3.83196, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_30 { pt3dadd( 5.74555, 22.4401, 6.55596, 0.55 ) }
    dend_30 { pt3dadd( 7.24601, 24.3703, 8.47586, 0.55 ) }
    dend_30 { pt3dadd( 7.67242, 24.9384, 8.97381, 0.83 ) }
    dend_30 { pt3dadd( 11.2577, 29.7109, 13.1956, 0.55 ) }
    dend_30 { pt3dadd( 12.1931, 30.9873, 14.3338, 0.55 ) }
    dend_30 { pt3dadd( 15.3456, 35.3065, 18.0801, 0.55 ) }
    dend_30 { pt3dadd( 16.505, 37.0028, 19.5778, 0.55 ) }
    dend_30 { pt3dadd( 17.5457, 38.5059, 20.8411, 0.55 ) }
    dend_30 { pt3dadd( 19.7035, 41.5907, 23.1834, 0.55 ) }
    dend_30 { pt3dadd( 22.4088, 45.5891, 25.9403, 0.55 ) }
    dend_30 { pt3dadd( 23.3925, 47.1981, 26.9919, 0.55 ) }
    dend_30 { pt3dadd( 25.2865, 50.4245, 29.1226, 0.55 ) }
    dend_30 { pt3dadd( 26.8931, 53.223, 31.0023, 0.55 ) }
    dend_30 { pt3dadd( 28.063, 55.2077, 32.3002, 0.28 ) }
    dend_30 { pt3dadd( 29.4765, 57.7414, 33.642, 0.55 ) }
    dend_30 { pt3dadd( 31.3988, 61.2529, 35.2394, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 16/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.123225, 20.1657, 3.81196, 0.83 ) }
    dend_26 { pt3dadd( -2.88722, 21.7165, 3.79009, 0.83 ) }
    dend_26 { pt3dadd( -4.39352, 22.6529, 3.64955, 0.55 ) }
    dend_26 { pt3dadd( -5.37835, 23.2257, 3.5278, 0.55 ) }
    dend_26 { pt3dadd( -10.7078, 26.0518, 2.81803, 0.55 ) }
    dend_26 { pt3dadd( -17.3962, 29.5987, 1.92728, 0.55 ) }
    dend_26 { pt3dadd( -20.5113, 31.2506, 1.51242, 0.55 ) }
    dend_26 { pt3dadd( -24.5505, 33.3854, 0.956861, 0.55 ) }
    dend_26 { pt3dadd( -28.5381, 35.3926, 0.355156, 0.55 ) }
    dend_26 { pt3dadd( -30.5352, 36.3307, 0.0160508, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 26/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -0.123225, 20.1657, 3.81196, 0.83 ) }
    dend_21 { pt3dadd( 0.449983, 22.9651, 9.93565, 0.83 ) }
    dend_21 { pt3dadd( 0.885744, 25.0933, 14.5909, 1.11 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 29/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 34.9656, -44.7779, 6.71583, 0.55 ) }
    dend_18 { pt3dadd( 34.9556, -50.098, 2.59544, 0.55 ) }
    dend_18 { pt3dadd( 35.0246, -53.5437, -0.119456, 0.55 ) }
    dend_18 { pt3dadd( 35.0732, -54.6411, -0.950908, 0.55 ) }
    dend_18 { pt3dadd( 35.2915, -58.1282, -3.46334, 0.83 ) }
    dend_18 { pt3dadd( 35.4065, -59.7519, -4.54461, 1.11 ) }
    dend_18 { pt3dadd( 35.7614, -62.9126, -6.4515, 0.83 ) }
    dend_18 { pt3dadd( 35.9058, -63.805, -6.85056, 0.83 ) }
    dend_18 { pt3dadd( 36.2457, -65.3812, -7.55524, 0.28 ) }
    dend_18 { pt3dadd( 36.5251, -66.4194, -7.94532, 0.55 ) }
    dend_18 { pt3dadd( 37.0636, -68.1876, -8.55324, 0.28 ) }
    dend_18 { pt3dadd( 37.8773, -70.8339, -9.59077, 0.28 ) }
    dend_18 { pt3dadd( 38.2932, -72.3355, -10.1689, 0.28 ) }
    dend_18 { pt3dadd( 38.7773, -74.4456, -11.0239, 0.83 ) }
    dend_18 { pt3dadd( 38.9738, -75.491, -11.4597, 0.83 ) }
    dend_18 { pt3dadd( 39.5667, -79.2457, -13.0035, 0.28 ) }
    dend_18 { pt3dadd( 39.6449, -79.9432, -13.2698, 1.11 ) }
    dend_18 { pt3dadd( 39.7508, -81.7649, -13.9334, 0.83 ) }
    dend_18 { pt3dadd( 39.9436, -85.8093, -15.2551, 0.28 ) }
    dend_18 { pt3dadd( 40.0032, -87.4599, -15.6903, 0.83 ) }
    dend_18 { pt3dadd( 40.0389, -88.5652, -15.9393, 0.28 ) }
    dend_18 { pt3dadd( 40.1013, -91.0432, -16.3374, 0.55 ) }
    dend_18 { pt3dadd( 40.204, -94.4949, -16.9093, 0.28 ) }
    dend_18 { pt3dadd( 40.2153, -94.8709, -16.9791, 0.55 ) }
    dend_18 { pt3dadd( 40.2535, -96.5262, -17.3275, 0.28 ) }
    dend_18 { pt3dadd( 40.2762, -97.0756, -17.4484, 0.83 ) }
    dend_18 { pt3dadd( 40.3706, -99.0352, -17.8923, 0.28 ) }
    dend_18 { pt3dadd( 40.5504, -101.021, -18.3139, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 57/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 34.9656, -44.7779, 6.71583, 0.83 ) }
    dend_11 { pt3dadd( 37.395, -50.7171, 6.66389, 0.83 ) }
    dend_11 { pt3dadd( 38.2332, -53.0977, 6.22857, 0.83 ) }
    dend_11 { pt3dadd( 38.9811, -55.2411, 5.89495, 0.83 ) }
    dend_11 { pt3dadd( 40.2777, -58.9571, 5.31657, 0.83 ) }
    dend_11 { pt3dadd( 41.3641, -62.0709, 4.83192, 0.83 ) }
    dend_11 { pt3dadd( 43.5671, -68.3847, 3.84921, 0.83 ) }
    dend_11 { pt3dadd( 44.2248, -70.6884, 3.15379, 0.83 ) }
    dend_11 { pt3dadd( 45.2478, -74.5529, 1.79465, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 25.2715, -17.1714, -40.0923, 0.83 ) }
    dend_5 { pt3dadd( 31.2454, -12.8861, -39.6518, 0.83 ) }
    dend_5 { pt3dadd( 36.1673, -9.22078, -38.9474, 1.11 ) }
    dend_5 { pt3dadd( 39.7345, -6.56429, -38.4368, 1.11 ) }
    dend_5 { pt3dadd( 44.8163, -2.77995, -37.7094, 1.66 ) }
    dend_5 { pt3dadd( 47.6455, -0.673109, -37.3045, 1.11 ) }
    dend_5 { pt3dadd( 52.4484, 2.90354, -36.617, 1.11 ) }
    dend_5 { pt3dadd( 53.8763, 4.01168, -36.1903, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 74/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 25.2715, -17.1714, -40.0923, 1.39 ) }
    dend_2 { pt3dadd( 24.9403, -19.9461, -42.9431, 1.39 ) }
    dend_2 { pt3dadd( 24.6923, -22.0234, -45.0775, 1.11 ) }
    dend_2 { pt3dadd( 24.1, -26.9845, -50.1746, 0.83 ) }
    dend_2 { pt3dadd( 23.9189, -28.5012, -51.733, 0.83 ) }
    dend_2 { pt3dadd( 23.6174, -31.0273, -54.3284, 0.83 ) }
    // Section: apic_15, id: apic_15, parent: apic_13 (entry count 80/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -15.6543, -58.2988, 45.9471, 0.83 ) }
    apic_15 { pt3dadd( -14.8631, -60.9515, 47.8788, 0.83 ) }
    apic_15 { pt3dadd( -13.809, -64.4854, 50.4522, 0.83 ) }
    apic_15 { pt3dadd( -12.3279, -69.4511, 54.0683, 0.83 ) }
    apic_15 { pt3dadd( -11.0434, -73.7578, 57.2044, 0.55 ) }
    apic_15 { pt3dadd( -9.83689, -77.8025, 60.1498, 0.28 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 86/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -15.6543, -58.2988, 45.9471, 0.83 ) }
    apic_14 { pt3dadd( -17.1305, -57.2847, 48.024, 0.83 ) }
    apic_14 { pt3dadd( -17.8793, -56.7702, 49.0777, 0.83 ) }
    apic_14 { pt3dadd( -19.8225, -55.4352, 51.8117, 0.83 ) }
    apic_14 { pt3dadd( -21.2456, -54.4575, 53.814, 0.83 ) }
    apic_14 { pt3dadd( -22.9063, -53.3166, 56.1506, 0.83 ) }
    // Section: apic_12, id: apic_12, parent: apic_2 (entry count 92/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -7.30045, -117.176, 35.917, 0.55 ) }
    apic_12 { pt3dadd( -9.09541, -117.935, 36.1564, 0.55 ) }
    apic_12 { pt3dadd( -11.6418, -119.276, 36.7828, 0.55 ) }
    apic_12 { pt3dadd( -14.8976, -121.255, 37.7272, 0.55 ) }
    apic_12 { pt3dadd( -17.1109, -122.782, 38.3967, 0.55 ) }
    apic_12 { pt3dadd( -18.8775, -124.001, 38.9311, 0.55 ) }
    apic_12 { pt3dadd( -19.9874, -124.766, 39.2668, 0.55 ) }
    apic_12 { pt3dadd( -23.4429, -127.466, 40.4725, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_12 { pt3dadd( -24.7364, -128.598, 41.0128, 0.28 ) }
    apic_12 { pt3dadd( -26.4769, -130.568, 41.8929, 0.55 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 2/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -7.30045, -117.176, 35.917, 1.11 ) }
    apic_3 { pt3dadd( -7.05971, -119.455, 35.7645, 1.11 ) }
    apic_3 { pt3dadd( -5.92645, -130.182, 35.0466, 1.11 ) }
    apic_3 { pt3dadd( -5.7045, -132.283, 34.906, 1.11 ) }
    apic_3 { pt3dadd( -5.46579, -134.543, 34.7548, 1.11 ) }
    apic_3 { pt3dadd( -4.95797, -139.35, 34.4331, 1.11 ) }
    apic_3 { pt3dadd( -4.48807, -143.797, 34.1354, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 9/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -30.5352, 36.3307, 0.0160508, 0.28 ) }
    dend_28 { pt3dadd( -33.6829, 36.2567, -0.116969, 0.28 ) }
    dend_28 { pt3dadd( -35.4997, 36.1334, -0.506171, 0.28 ) }
    dend_28 { pt3dadd( -36.4554, 36.0239, -0.779035, 0.28 ) }
    dend_28 { pt3dadd( -38.791, 35.7246, -1.77987, 0.55 ) }
    dend_28 { pt3dadd( -40.3915, 35.5195, -2.46569, 0.55 ) }
    dend_28 { pt3dadd( -42.7954, 35.2115, -3.49578, 0.55 ) }
    dend_28 { pt3dadd( -46.3337, 34.693, -5.2964, 1.11 ) }
    dend_28 { pt3dadd( -48.3497, 34.3691, -6.4978, 0.55 ) }
    dend_28 { pt3dadd( -51.7555, 33.6478, -8.84187, 0.28 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 19/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -30.5352, 36.3307, 0.0160508, 0.55 ) }
    dend_27 { pt3dadd( -34.3056, 37.2117, -1.01698, 0.55 ) }
    dend_27 { pt3dadd( -35.8947, 37.6114, -1.74657, 0.55 ) }
    dend_27 { pt3dadd( -37.1607, 37.953, -2.29559, 0.55 ) }
    dend_27 { pt3dadd( -41.0337, 39.0694, -3.88835, 0.55 ) }
    dend_27 { pt3dadd( -45.3275, 40.431, -5.56513, 0.55 ) }
    dend_27 { pt3dadd( -47.0221, 41.0217, -6.20095, 0.55 ) }
    dend_27 { pt3dadd( -50.6658, 42.5848, -8.19664, 0.55 ) }
    dend_27 { pt3dadd( -53.4758, 44.0224, -9.96175, 0.28 ) }
    dend_27 { pt3dadd( -54.2231, 44.4334, -10.4879, 0.55 ) }
    dend_27 { pt3dadd( -55.1775, 45.0271, -11.2908, 0.28 ) }
    dend_27 { pt3dadd( -55.7522, 45.4817, -11.7839, 0.55 ) }
    dend_27 { pt3dadd( -59.9292, 49.1321, -15.7877, 0.28 ) }
    dend_27 { pt3dadd( -60.4648, 49.5835, -16.3727, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 33/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 0.885744, 25.0933, 14.5909, 0.55 ) }
    dend_25 { pt3dadd( 0.854502, 27.2641, 16.7139, 0.55 ) }
    dend_25 { pt3dadd( 0.674555, 30.1114, 18.9352, 0.55 ) }
    dend_25 { pt3dadd( -0.0980239, 35.1408, 21.1099, 0.28 ) }
    dend_25 { pt3dadd( -0.568701, 39.2095, 22.3772, 0.83 ) }
    dend_25 { pt3dadd( -0.636916, 40.4119, 22.6574, 0.83 ) }
    dend_25 { pt3dadd( -0.678138, 44.2201, 23.4203, 0.83 ) }
    dend_25 { pt3dadd( -0.626763, 47.0583, 23.774, 0.28 ) }
    dend_25 { pt3dadd( -0.203068, 56.3372, 24.351, 0.55 ) }
    dend_25 { pt3dadd( 0.0506619, 60.0621, 24.3213, 0.55 ) }
    dend_25 { pt3dadd( 0.513529, 65.2966, 24.1531, 0.55 ) }
    dend_25 { pt3dadd( 0.739911, 67.2896, 24.1368, 0.55 ) }
    dend_25 { pt3dadd( 1.05068, 69.5048, 24.2075, 0.55 ) }
    dend_25 { pt3dadd( 1.24949, 70.6354, 24.2415, 0.28 ) }
    dend_25 { pt3dadd( 1.41532, 71.3987, 24.2152, 0.55 ) }
    dend_25 { pt3dadd( 1.62339, 73.8797, 23.8335, 0.28 ) }
    dend_25 { pt3dadd( 1.60627, 75.204, 23.4414, 0.28 ) }
    dend_25 { pt3dadd( 1.56155, 76.267, 23.0338, 0.83 ) }
    dend_25 { pt3dadd( 1.46632, 78.3443, 22.0594, 0.28 ) }
    dend_25 { pt3dadd( 1.31507, 81.5306, 20.3915, 0.83 ) }
    dend_25 { pt3dadd( 1.2444, 83.6318, 19.1498, 0.28 ) }
    dend_25 { pt3dadd( 1.21884, 84.318, 18.6639, 0.55 ) }
    dend_25 { pt3dadd( 1.20877, 85.4162, 17.7961, 0.28 ) }
    dend_25 { pt3dadd( 1.18107, 86.373, 16.9549, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 57/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.885744, 25.0933, 14.5909, 0.83 ) }
    dend_22 { pt3dadd( 1.36344, 27.4411, 18.3145, 0.83 ) }
    dend_22 { pt3dadd( 2.12733, 31.1955, 24.2691, 0.83 ) }
    dend_22 { pt3dadd( 2.64929, 33.7609, 28.3377, 0.83 ) }
    dend_22 { pt3dadd( 2.88177, 34.9035, 30.1498, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 62/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 45.2478, -74.5529, 1.79465, 0.55 ) }
    dend_17 { pt3dadd( 49.7204, -74.2121, 2.18535, 0.55 ) }
    dend_17 { pt3dadd( 52.8779, -73.9714, 2.46117, 0.55 ) }
    dend_17 { pt3dadd( 54.8323, -73.8225, 2.63189, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 66/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 45.2478, -74.5529, 1.79465, 0.83 ) }
    dend_12 { pt3dadd( 46.1872, -76.9828, 1.5144, 0.83 ) }
    dend_12 { pt3dadd( 46.5067, -78.1587, 1.78835, 0.83 ) }
    dend_12 { pt3dadd( 46.6698, -79.0135, 2.27374, 0.28 ) }
    dend_12 { pt3dadd( 46.8966, -80.8325, 3.51192, 0.55 ) }
    dend_12 { pt3dadd( 46.9617, -81.8133, 4.15584, 0.28 ) }
    dend_12 { pt3dadd( 47.0877, -83.4633, 5.30699, 0.83 ) }
    dend_12 { pt3dadd( 47.3645, -88.5207, 9.0048, 0.83 ) }
    dend_12 { pt3dadd( 47.6356, -92.1003, 11.479, 0.83 ) }
    dend_12 { pt3dadd( 47.7433, -93.3532, 12.3035, 0.83 ) }
    dend_12 { pt3dadd( 47.9989, -96.3378, 14.3106, 0.83 ) }
    dend_12 { pt3dadd( 48.3566, -100.873, 17.3049, 0.55 ) }
    dend_12 { pt3dadd( 48.6135, -103.703, 19.046, 0.55 ) }
    dend_12 { pt3dadd( 49.1343, -106.907, 20.4667, 0.55 ) }
    dend_12 { pt3dadd( 49.2996, -107.681, 20.7202, 0.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 81/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 53.8763, 4.01168, -36.1903, 0.83 ) }
    dend_7 { pt3dadd( 54.4865, 5.20693, -36.8583, 0.83 ) }
    dend_7 { pt3dadd( 56.6305, 9.40652, -39.2057, 0.83 ) }
    dend_7 { pt3dadd( 59.1014, 14.2464, -41.9109, 0.83 ) }
    dend_7 { pt3dadd( 60.6614, 17.3021, -43.6189, 0.83 ) }
    dend_7 { pt3dadd( 62.594, 21.0874, -45.7346, 0.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 87/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 53.8763, 4.01168, -36.1903, 1.39 ) }
    dend_6 { pt3dadd( 54.4767, 4.14417, -37.8356, 1.39 ) }
    dend_6 { pt3dadd( 55.0308, 4.25787, -39.2859, 0.28 ) }
    dend_6 { pt3dadd( 56.9833, 4.52814, -43.8778, 0.83 ) }
    dend_6 { pt3dadd( 58.3217, 4.59987, -47.0652, 0.83 ) }
    dend_6 { pt3dadd( 61.6105, 4.80816, -54.3335, 1.66 ) }
    dend_6 { pt3dadd( 62.6624, 4.87573, -56.473, 0.28 ) }
    dend_6 { pt3dadd( 63.8119, 4.9109, -58.5941, 0.83 ) }
    dend_6 { pt3dadd( 64.8754, 4.94265, -60.4643, 0.83 ) }
    dend_6 { pt3dadd( 66.9836, 4.99503, -64.0637, 1.39 ) }
    dend_6 { pt3dadd( 68.5992, 5.00689, -66.7818, 0.55 ) }
    dend_6 { pt3dadd( 70.7049, 4.88736, -70.1434, 0.55 ) }
    dend_6 { pt3dadd( 71.9061, 4.81094, -72.1502, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_6 { pt3dadd( 74.8732, 4.6592, -77.1422, 0.28 ) }
    dend_6 { pt3dadd( 77.5103, 4.55253, -81.7416, 0.28 ) }
    dend_6 { pt3dadd( 80.5725, 4.37163, -87.0102, 0.55 ) }
    dend_6 { pt3dadd( 82.4482, 4.09165, -90.5917, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 4/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 23.6174, -31.0273, -54.3284, 0.55 ) }
    dend_4 { pt3dadd( 26.6982, -29.8746, -57.1006, 0.55 ) }
    dend_4 { pt3dadd( 28.3498, -29.0768, -58.8147, 2.49 ) }
    dend_4 { pt3dadd( 30.7374, -27.4382, -62.429, 2.49 ) }
    dend_4 { pt3dadd( 30.2048, -26.9692, -64.0361, 0.55 ) }
    dend_4 { pt3dadd( 29.6768, -26.4458, -65.8392, 2.77 ) }
    dend_4 { pt3dadd( 29.068, -25.5608, -68.2271, 0.28 ) }
    dend_4 { pt3dadd( 28.5937, -24.8947, -69.7675, 0.28 ) }
    dend_4 { pt3dadd( 28.0759, -23.9195, -71.892, 1.66 ) }
    dend_4 { pt3dadd( 27.3954, -21.4364, -76.6535, 0.28 ) }
    dend_4 { pt3dadd( 27.3187, -19.3268, -80.4318, 1.66 ) }
    dend_4 { pt3dadd( 27.5309, -17.7707, -83.0536, 0.28 ) }
    dend_4 { pt3dadd( 27.7268, -17.0001, -84.3143, 1.66 ) }
    dend_4 { pt3dadd( 28.949, -13.8305, -88.8949, 0.55 ) }
    dend_4 { pt3dadd( 29.6942, -12.2203, -90.8205, 0.55 ) }
    dend_4 { pt3dadd( 30.6334, -10.3418, -92.6314, 0.55 ) }
    dend_4 { pt3dadd( 31.2346, -9.09503, -93.6043, 0.55 ) }
    dend_4 { pt3dadd( 32.9097, -5.43093, -96.0066, 1.39 ) }
    dend_4 { pt3dadd( 33.5294, -4.00664, -96.6983, 0.55 ) }
    dend_4 { pt3dadd( 34.039, -2.77307, -97.0594, 0.55 ) }
    dend_4 { pt3dadd( 34.5185, -1.70147, -97.4734, 0.28 ) }
    dend_4 { pt3dadd( 36.0719, 1.16443, -99.2557, 0.55 ) }
    dend_4 { pt3dadd( 36.9934, 2.36676, -100.348, 2.22 ) }
    dend_4 { pt3dadd( 38.6718, 3.8305, -102.292, 0.28 ) }
    dend_4 { pt3dadd( 39.5912, 4.36907, -103.463, 1.11 ) }
    dend_4 { pt3dadd( 42.6934, 5.23618, -108.431, 1.11 ) }
    dend_4 { pt3dadd( 45.2097, 5.12688, -113.151, 0.28 ) }
    dend_4 { pt3dadd( 45.3677, 5.05677, -113.501, 0.83 ) }
    dend_4 { pt3dadd( 45.8384, 4.71995, -114.636, 0.28 ) }
    dend_4 { pt3dadd( 45.9703, 4.58078, -114.983, 0.83 ) }
    dend_4 { pt3dadd( 47.8887, 2.19309, -119.901, 0.28 ) }
    dend_4 { pt3dadd( 48.6064, 1.27479, -121.485, 0.83 ) }
    dend_4 { pt3dadd( 49.9503, -0.3876, -124.244, 0.55 ) }
    dend_4 { pt3dadd( 50.3985, -0.888431, -125.293, 0.83 ) }
    dend_4 { pt3dadd( 51.0011, -1.50338, -126.713, 0.28 ) }
    dend_4 { pt3dadd( 51.2906, -1.7909, -127.436, 1.11 ) }
    dend_4 { pt3dadd( 51.7109, -2.21461, -128.526, 0.55 ) }
    dend_4 { pt3dadd( 52.8167, -3.50548, -131.758, 1.66 ) }
    dend_4 { pt3dadd( 54.5936, -6.34713, -138.17, 0.55 ) }
    dend_4 { pt3dadd( 54.8782, -6.94673, -139.391, 1.39 ) }
    dend_4 { pt3dadd( 55.8346, -9.52437, -144.16, 0.55 ) }
    dend_4 { pt3dadd( 55.9595, -10.0593, -144.994, 0.55 ) }
    dend_4 { pt3dadd( 56.0997, -11.477, -146.71, 0.83 ) }
    dend_4 { pt3dadd( 56.0921, -13.0996, -148.0, 0.28 ) }
    dend_4 { pt3dadd( 55.9997, -13.8528, -148.337, 0.55 ) }
    dend_4 { pt3dadd( 55.4795, -16.6437, -149.541, 0.28 ) }
    dend_4 { pt3dadd( 55.3276, -17.3849, -150.011, 0.55 ) }
    dend_4 { pt3dadd( 54.878, -20.4852, -152.673, 0.28 ) }
    dend_4 { pt3dadd( 54.8257, -21.0599, -153.336, 0.83 ) }
    dend_4 { pt3dadd( 54.81, -21.6309, -154.149, 0.55 ) }
    dend_4 { pt3dadd( 54.7794, -23.481, -157.06, 1.11 ) }
    dend_4 { pt3dadd( 54.8792, -26.7191, -162.791, 0.28 ) }
    dend_4 { pt3dadd( 54.9168, -27.4261, -164.193, 0.28 ) }
    dend_4 { pt3dadd( 55.036, -28.8481, -167.372, 1.39 ) }
    dend_4 { pt3dadd( 55.1985, -30.3664, -170.959, 0.55 ) }
    dend_4 { pt3dadd( 55.2571, -30.7342, -171.88, 0.55 ) }
    dend_4 { pt3dadd( 55.6103, -32.2792, -176.011, 0.55 ) }
    dend_4 { pt3dadd( 56.0207, -33.9333, -180.653, 0.28 ) }
    dend_4 { pt3dadd( 56.2608, -35.1801, -184.41, 1.39 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 63/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 23.6174, -31.0273, -54.3284, 2.22 ) }
    dend_3 { pt3dadd( 24.5132, -32.462, -55.4393, 2.22 ) }
    dend_3 { pt3dadd( 25.7661, -34.7771, -57.7835, 0.55 ) }
    dend_3 { pt3dadd( 26.8198, -36.8955, -60.2776, 2.77 ) }
    dend_3 { pt3dadd( 27.7665, -38.4865, -62.587, 0.55 ) }
    dend_3 { pt3dadd( 29.6587, -41.5165, -67.2196, 0.55 ) }
    dend_3 { pt3dadd( 31.0666, -43.8567, -70.794, 0.55 ) }
    dend_3 { pt3dadd( 31.2705, -44.2425, -71.4462, 1.11 ) }
    dend_3 { pt3dadd( 32.3484, -46.3945, -75.7002, 2.77 ) }
    dend_3 { pt3dadd( 33.8634, -49.2542, -81.895, 0.28 ) }
    dend_3 { pt3dadd( 33.9966, -49.4777, -82.3805, 0.28 ) }
    dend_3 { pt3dadd( 34.4521, -50.0713, -83.5484, 0.83 ) }
    dend_3 { pt3dadd( 36.1033, -51.8818, -87.0183, 0.28 ) }
    dend_3 { pt3dadd( 37.5542, -53.2681, -89.7292, 2.22 ) }
    dend_3 { pt3dadd( 38.4162, -53.849, -90.9593, 0.28 ) }
    dend_3 { pt3dadd( 38.9839, -54.1452, -91.5589, 2.22 ) }
    dend_3 { pt3dadd( 40.3566, -54.7949, -92.884, 0.55 ) }
    dend_3 { pt3dadd( 41.3846, -55.2599, -93.8655, 0.55 ) }
    dend_3 { pt3dadd( 42.1102, -55.6132, -94.7548, 2.22 ) }
    dend_3 { pt3dadd( 44.8661, -57.1174, -98.8399, 0.28 ) }
    dend_3 { pt3dadd( 45.3018, -57.408, -99.6919, 1.11 ) }
    dend_3 { pt3dadd( 47.0761, -58.7466, -103.747, 0.28 ) }
    dend_3 { pt3dadd( 48.1452, -59.6647, -106.527, 1.39 ) }
    dend_3 { pt3dadd( 50.7798, -62.1909, -114.267, 0.28 ) }
    dend_3 { pt3dadd( 51.2682, -62.7313, -115.836, 1.39 ) }
    dend_3 { pt3dadd( 53.1883, -65.1827, -122.405, 0.28 ) }
    dend_3 { pt3dadd( 53.2559, -65.2721, -122.651, 0.83 ) }
    dend_3 { pt3dadd( 53.4067, -65.4808, -123.227, 0.83 ) }
    dend_3 { pt3dadd( 54.3669, -66.9228, -126.783, 0.55 ) }
    dend_3 { pt3dadd( 54.9148, -67.9244, -128.541, 0.28 ) }
    dend_3 { pt3dadd( 55.2735, -68.6498, -129.656, 1.11 ) }
    // Section: apic_11, id: apic_11, parent: apic_3 (entry count 94/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -4.48807, -143.797, 34.1354, 0.83 ) }
    apic_11 { pt3dadd( -4.28267, -144.702, 41.234, 0.83 ) }
    apic_11 { pt3dadd( -3.98686, -145.437, 45.1397, 0.83 ) }
    apic_11 { pt3dadd( -3.82189, -145.847, 47.3177, 0.83 ) }
    apic_11 { pt3dadd( -3.18368, -147.433, 55.7442, 0.83 ) }
    apic_11 { pt3dadd( -2.88367, -148.179, 59.7051, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_11 { pt3dadd( -2.76339, -148.478, 61.2933, 0.28 ) }
    apic_11 { pt3dadd( -2.55687, -148.747, 62.1054, 0.28 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 2/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -4.48807, -143.797, 34.1354, 1.11 ) }
    apic_4 { pt3dadd( -4.00034, -148.307, 35.0509, 1.11 ) }
    apic_4 { pt3dadd( -3.61821, -151.081, 35.4869, 1.11 ) }
    apic_4 { pt3dadd( -3.24668, -153.266, 35.7597, 1.11 ) }
    apic_4 { pt3dadd( -2.60274, -156.847, 36.1146, 1.11 ) }
    apic_4 { pt3dadd( -2.17912, -159.312, 36.3075, 1.11 ) }
    apic_4 { pt3dadd( -1.48391, -163.244, 36.5692, 1.11 ) }
    apic_4 { pt3dadd( -0.645538, -167.628, 36.7026, 1.11 ) }
    apic_4 { pt3dadd( -0.0995977, -170.432, 36.7688, 1.11 ) }
    apic_4 { pt3dadd( 0.718745, -174.558, 36.8166, 1.11 ) }
    apic_4 { pt3dadd( 1.63933, -179.473, 36.7646, 1.11 ) }
    apic_4 { pt3dadd( 2.00354, -181.441, 36.7429, 1.11 ) }
    apic_4 { pt3dadd( 2.64947, -185.834, 36.6948, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 15/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 2.88177, 34.9035, 30.1498, 0.55 ) }
    dend_24 { pt3dadd( 3.28212, 36.4769, 30.0715, 0.55 ) }
    dend_24 { pt3dadd( 3.89747, 38.6772, 30.088, 0.55 ) }
    dend_24 { pt3dadd( 5.31309, 43.8224, 30.2744, 0.55 ) }
    dend_24 { pt3dadd( 6.78459, 48.7433, 30.4022, 0.28 ) }
    dend_24 { pt3dadd( 7.2346, 50.3705, 30.6189, 0.28 ) }
    dend_24 { pt3dadd( 7.45129, 51.1982, 30.7772, 0.55 ) }
    dend_24 { pt3dadd( 7.93774, 53.1598, 31.3337, 0.28 ) }
    dend_24 { pt3dadd( 8.20224, 54.4264, 31.9318, 0.28 ) }
    dend_24 { pt3dadd( 8.47513, 56.3621, 33.2185, 0.55 ) }
    dend_24 { pt3dadd( 8.73164, 60.8341, 36.1945, 0.28 ) }
    dend_24 { pt3dadd( 8.752, 61.2969, 36.5261, 0.28 ) }
    dend_24 { pt3dadd( 8.75331, 62.2059, 37.2285, 0.55 ) }
    dend_24 { pt3dadd( 8.55543, 65.2786, 39.8478, 0.28 ) }
    dend_24 { pt3dadd( 8.55162, 65.3146, 39.8823, 0.55 ) }
    dend_24 { pt3dadd( 8.22453, 66.8496, 41.5319, 0.28 ) }
    dend_24 { pt3dadd( 7.97031, 68.0414, 42.5923, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 32/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 2.88177, 34.9035, 30.1498, 0.55 ) }
    dend_23 { pt3dadd( 2.61376, 38.162, 32.4582, 0.55 ) }
    dend_23 { pt3dadd( 2.33256, 41.5811, 34.8803, 0.55 ) }
    dend_23 { pt3dadd( 1.99137, 45.7296, 37.819, 0.55 ) }
    dend_23 { pt3dadd( 1.77568, 48.352, 39.6767, 0.55 ) }
    dend_23 { pt3dadd( 1.53732, 51.2502, 41.7297, 0.55 ) }
    dend_23 { pt3dadd( 1.37127, 53.2692, 43.16, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 39/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 49.2996, -107.681, 20.7202, 0.55 ) }
    dend_16 { pt3dadd( 50.2587, -108.529, 20.1256, 0.55 ) }
    dend_16 { pt3dadd( 51.0568, -109.234, 19.6308, 0.28 ) }
    dend_16 { pt3dadd( 51.4798, -109.608, 19.3685, 0.28 ) }
    dend_16 { pt3dadd( 52.1568, -110.207, 18.9487, 0.55 ) }
    dend_16 { pt3dadd( 53.101, -111.042, 18.3634, 0.28 ) }
    dend_16 { pt3dadd( 55.8986, -113.515, 16.6289, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 46/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 49.2996, -107.681, 20.7202, 0.28 ) }
    dend_13 { pt3dadd( 49.0145, -110.398, 20.7202, 0.28 ) }
    dend_13 { pt3dadd( 48.9867, -110.787, 20.7202, 0.55 ) }
    dend_13 { pt3dadd( 48.9966, -112.176, 20.7202, 0.28 ) }
    dend_13 { pt3dadd( 49.1107, -113.042, 20.7202, 0.55 ) }
    dend_13 { pt3dadd( 49.3152, -114.439, 20.7302, 0.28 ) }
    dend_13 { pt3dadd( 49.4047, -115.05, 20.7346, 0.55 ) }
    dend_13 { pt3dadd( 49.7237, -116.508, 20.7474, 0.28 ) }
    dend_13 { pt3dadd( 50.1962, -118.559, 20.7673, 0.55 ) }
    dend_13 { pt3dadd( 50.7694, -121.058, 20.7959, 0.28 ) }
    dend_13 { pt3dadd( 51.2239, -122.763, 20.8186, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 57/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 62.594, 21.0874, -45.7346, 0.55 ) }
    dend_9 { pt3dadd( 64.0542, 27.2842, -51.3489, 0.55 ) }
    dend_9 { pt3dadd( 64.284, 28.7152, -52.5177, 0.55 ) }
    dend_9 { pt3dadd( 64.3219, 29.4304, -53.0133, 0.83 ) }
    dend_9 { pt3dadd( 64.3318, 30.4428, -53.5446, 0.28 ) }
    dend_9 { pt3dadd( 64.3169, 31.7132, -54.121, 0.83 ) }
    dend_9 { pt3dadd( 64.1528, 35.9839, -55.8793, 0.28 ) }
    dend_9 { pt3dadd( 64.0242, 36.8247, -56.0789, 0.55 ) }
    dend_9 { pt3dadd( 63.5836, 39.3252, -56.6873, 0.28 ) }
    dend_9 { pt3dadd( 62.773, 43.9033, -57.7885, 0.28 ) }
    dend_9 { pt3dadd( 62.6784, 44.4941, -57.923, 0.83 ) }
    dend_9 { pt3dadd( 62.5521, 45.4772, -58.1065, 0.28 ) }
    dend_9 { pt3dadd( 62.3988, 46.9531, -58.1972, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 70/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 62.594, 21.0874, -45.7346, 0.55 ) }
    dend_8 { pt3dadd( 65.7262, 23.0882, -46.8231, 0.55 ) }
    dend_8 { pt3dadd( 67.8086, 24.4957, -47.5299, 0.55 ) }
    dend_8 { pt3dadd( 71.2204, 26.8675, -48.5945, 1.94 ) }
    dend_8 { pt3dadd( 72.9298, 28.1168, -49.244, 0.55 ) }
    dend_8 { pt3dadd( 75.6617, 30.2239, -50.3465, 0.55 ) }
    dend_8 { pt3dadd( 78.1487, 32.2149, -51.3528, 0.55 ) }
    dend_8 { pt3dadd( 80.1174, 33.8997, -52.2833, 1.11 ) }
    dend_8 { pt3dadd( 82.1349, 35.5675, -53.1919, 1.11 ) }
    dend_8 { pt3dadd( 85.0838, 37.8316, -54.5821, 0.28 ) }
    dend_8 { pt3dadd( 87.194, 39.3518, -55.585, 1.11 ) }
    dend_8 { pt3dadd( 89.017, 40.5374, -56.475, 0.83 ) }
    dend_8 { pt3dadd( 91.3463, 41.7093, -57.6607, 0.28 ) }
    dend_8 { pt3dadd( 94.0961, 42.794, -59.3027, 0.83 ) }
    dend_8 { pt3dadd( 97.4659, 43.8224, -61.5473, 0.55 ) }
    dend_8 { pt3dadd( 98.4294, 44.0761, -62.1834, 0.55 ) }
    dend_8 { pt3dadd( 100.985, 44.7319, -64.1921, 0.28 ) }
    dend_8 { pt3dadd( 103.289, 45.3836, -66.1636, 1.11 ) }
    dend_8 { pt3dadd( 107.093, 46.6659, -69.5657, 0.55 ) }
    dend_8 { pt3dadd( 109.962, 47.8597, -72.2558, 0.28 ) }
    dend_8 { pt3dadd( 111.587, 48.7163, -73.7409, 1.94 ) }
    dend_8 { pt3dadd( 115.112, 51.0172, -77.0775, 0.28 ) }
    dend_8 { pt3dadd( 116.103, 51.7491, -78.0521, 0.83 ) }
    dend_8 { pt3dadd( 116.946, 52.4635, -78.9316, 0.28 ) }
    dend_8 { pt3dadd( 118.102, 53.6959, -79.9941, 1.11 ) }
    dend_8 { pt3dadd( 119.406, 55.5509, -81.235, 0.28 ) }
    dend_8 { pt3dadd( 119.678, 56.0305, -81.5043, 0.55 ) }
    // Section: apic_8, id: apic_8, parent: apic_4 (entry count 97/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 2.64947, -185.834, 36.6948, 0.55 ) }
    apic_8 { pt3dadd( 5.30777, -189.997, 36.6948, 0.55 ) }
    apic_8 { pt3dadd( 6.6827, -191.922, 36.6948, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    apic_8 { pt3dadd( 8.4012, -194.327, 36.6948, 0.55 ) }
    apic_8 { pt3dadd( 10.4957, -197.26, 36.6948, 0.55 ) }
    apic_8 { pt3dadd( 13.5906, -201.592, 36.6948, 0.55 ) }
    apic_8 { pt3dadd( 16.6196, -205.833, 36.6948, 0.55 ) }
    apic_8 { pt3dadd( 19.2008, -209.276, 36.6948, 0.55 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 5/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 2.64947, -185.834, 36.6948, 0.83 ) }
    apic_5 { pt3dadd( 3.03223, -188.315, 36.9209, 0.83 ) }
    apic_5 { pt3dadd( 3.33136, -191.793, 37.2241, 0.83 ) }
    apic_5 { pt3dadd( 3.69886, -196.861, 37.6371, 0.83 ) }
    apic_5 { pt3dadd( 3.83472, -200.223, 37.8817, 0.83 ) }
    apic_5 { pt3dadd( 3.98887, -204.281, 38.1488, 0.83 ) }
    apic_5 { pt3dadd( 4.10068, -207.327, 38.3301, 0.83 ) }
    apic_5 { pt3dadd( 4.17641, -212.979, 38.6426, 0.83 ) }
    apic_5 { pt3dadd( 4.14101, -215.702, 38.7662, 0.83 ) }
    apic_5 { pt3dadd( 4.08312, -220.539, 38.9288, 0.83 ) }
    apic_5 { pt3dadd( 4.07466, -223.636, 38.9959, 0.83 ) }
    apic_5 { pt3dadd( 4.0778, -226.979, 38.9944, 0.83 ) }
    apic_5 { pt3dadd( 4.11891, -229.464, 38.9944, 0.83 ) }
    apic_5 { pt3dadd( 4.42888, -236.437, 38.9944, 0.83 ) }
    apic_5 { pt3dadd( 4.54765, -239.388, 38.9944, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 20/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 51.2239, -122.763, 20.8186, 0.28 ) }
    dend_15 { pt3dadd( 52.636, -125.525, 20.8186, 0.28 ) }
    dend_15 { pt3dadd( 52.8866, -126.015, 20.8186, 0.55 ) }
    dend_15 { pt3dadd( 53.7792, -127.761, 20.8186, 0.28 ) }
    dend_15 { pt3dadd( 54.4588, -129.09, 20.8186, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 25/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 51.2239, -122.763, 20.8186, 0.28 ) }
    dend_14 { pt3dadd( 50.5578, -128.018, 20.8186, 0.28 ) }
    dend_14 { pt3dadd( 50.3148, -129.935, 20.8186, 0.83 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 28/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 19.2008, -209.276, 36.6948, 0.55 ) }
    apic_10 { pt3dadd( 21.4076, -210.898, 36.6948, 0.55 ) }
    apic_10 { pt3dadd( 23.329, -212.47, 36.6948, 0.55 ) }
    apic_10 { pt3dadd( 24.457, -213.424, 36.4965, 0.28 ) }
    apic_10 { pt3dadd( 25.6817, -214.519, 36.0871, 0.55 ) }
    apic_10 { pt3dadd( 27.0894, -215.789, 35.5693, 0.28 ) }
    apic_10 { pt3dadd( 28.0633, -216.698, 35.2042, 0.55 ) }
    apic_10 { pt3dadd( 28.8295, -217.438, 34.8878, 0.55 ) }
    apic_10 { pt3dadd( 32.2948, -220.854, 33.4248, 0.55 ) }
    apic_10 { pt3dadd( 35.579, -223.983, 31.8038, 0.55 ) }
    apic_10 { pt3dadd( 36.9935, -225.199, 31.0727, 0.28 ) }
    apic_10 { pt3dadd( 38.3261, -226.227, 30.2968, 0.55 ) }
    apic_10 { pt3dadd( 39.0742, -226.726, 29.845, 0.28 ) }
    apic_10 { pt3dadd( 41.7642, -228.224, 28.1164, 0.55 ) }
    apic_10 { pt3dadd( 44.935, -229.761, 26.016, 0.28 ) }
    apic_10 { pt3dadd( 46.5897, -230.452, 24.8875, 0.55 ) }
    apic_10 { pt3dadd( 50.4805, -231.939, 22.0771, 0.28 ) }
    apic_10 { pt3dadd( 51.1297, -232.162, 21.5907, 0.55 ) }
    apic_10 { pt3dadd( 54.2952, -233.199, 19.1369, 0.28 ) }
    apic_10 { pt3dadd( 55.8043, -233.703, 17.9167, 0.83 ) }
    apic_10 { pt3dadd( 56.699, -234.028, 17.2917, 0.83 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 49/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 19.2008, -209.276, 36.6948, 0.28 ) }
    apic_9 { pt3dadd( 22.7847, -212.057, 37.3115, 0.28 ) }
    apic_9 { pt3dadd( 25.261, -213.978, 37.7376, 0.28 ) }
    apic_9 { pt3dadd( 28.1183, -216.195, 38.2292, 0.28 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 53/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 4.54765, -239.388, 38.9944, 0.55 ) }
    apic_7 { pt3dadd( 5.81597, -242.886, 38.9687, 0.55 ) }
    apic_7 { pt3dadd( 7.07834, -246.812, 38.9454, 0.55 ) }
    apic_7 { pt3dadd( 8.25394, -250.48, 38.9286, 0.55 ) }
    apic_7 { pt3dadd( 9.07688, -252.701, 38.9202, 0.55 ) }
    apic_7 { pt3dadd( 10.0021, -255.097, 38.9121, 0.55 ) }
    apic_7 { pt3dadd( 11.4674, -258.913, 38.9007, 0.55 ) }
    apic_7 { pt3dadd( 12.2866, -260.998, 38.8326, 0.55 ) }
    apic_7 { pt3dadd( 14.1903, -265.46, 38.6394, 0.55 ) }
    apic_7 { pt3dadd( 15.7165, -268.717, 38.6714, 0.55 ) }
    apic_7 { pt3dadd( 16.2403, -269.748, 38.724, 0.55 ) }
    apic_7 { pt3dadd( 17.0261, -271.222, 38.8519, 0.55 ) }
    apic_7 { pt3dadd( 18.984, -275.154, 39.4843, 0.55 ) }
    apic_7 { pt3dadd( 21.2518, -279.875, 40.7465, 0.55 ) }
    apic_7 { pt3dadd( 23.1707, -284.244, 42.199, 0.55 ) }
    apic_7 { pt3dadd( 23.3592, -284.727, 42.3857, 0.55 ) }
    apic_7 { pt3dadd( 23.754, -285.703, 42.8305, 0.55 ) }
    apic_7 { pt3dadd( 25.0346, -288.972, 44.7357, 0.55 ) }
    apic_7 { pt3dadd( 25.5509, -290.925, 46.4149, 0.55 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 72/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 4.54765, -239.388, 38.9944, 0.83 ) }
    apic_6 { pt3dadd( 4.54045, -241.898, 38.9944, 0.83 ) }
    apic_6 { pt3dadd( 4.59065, -243.996, 38.8141, 0.83 ) }
    apic_6 { pt3dadd( 4.63558, -246.965, 38.5008, 0.83 ) }
    apic_6 { pt3dadd( 4.75491, -250.553, 38.1919, 0.83 ) }
    apic_6 { pt3dadd( 4.80095, -251.928, 38.0922, 0.83 ) }
    apic_6 { pt3dadd( 4.98158, -255.396, 37.8724, 0.83 ) }
    apic_6 { pt3dadd( 5.44126, -261.688, 37.5596, 0.83 ) }
    apic_6 { pt3dadd( 5.6514, -263.965, 37.4767, 0.83 ) }
    apic_6 { pt3dadd( 6.09588, -268.688, 37.3749, 0.83 ) }
    apic_6 { pt3dadd( 6.46141, -272.014, 37.3593, 0.83 ) }
    apic_6 { pt3dadd( 6.74546, -274.77, 37.3989, 0.83 ) }
    apic_6 { pt3dadd( 6.9582, -277.127, 37.4976, 0.83 ) }
    apic_6 { pt3dadd( 7.07293, -278.365, 37.5964, 0.83 ) }
    apic_6 { pt3dadd( 7.2545, -281.396, 37.7892, 0.83 ) }
    apic_6 { pt3dadd( 7.19827, -283.69, 37.9293, 0.55 ) }
    apic_6 { pt3dadd( 7.02482, -285.46, 38.05, 0.55 ) }
    apic_6 { pt3dadd( 6.35056, -289.252, 38.3107, 0.55 ) }
    apic_6 { pt3dadd( 5.88871, -291.147, 38.4292, 0.28 ) }
    apic_6 { pt3dadd( 5.08637, -293.654, 38.4651, 0.55 ) }
    apic_6 { pt3dadd( 3.80589, -296.963, 38.3785, 0.55 ) }
    apic_6 { pt3dadd( 2.94837, -298.894, 38.2603, 0.28 ) }
    apic_6 { pt3dadd( 2.39494, -299.999, 38.1565, 0.83 ) }
    apic_6 { pt3dadd( 0.96635, -302.447, 37.8499, 0.83 ) }
    apic_6 { pt3dadd( -0.929881, -305.568, 37.3329, 0.83 ) }
    apic_6 { pt3dadd( -1.65599, -306.749, 37.0559, 0.28 ) }
    apic_6 { pt3dadd( -2.75861, -308.466, 36.4531, 0.83 ) }
    apic_6 { pt3dadd( -3.89419, -310.175, 35.7714, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_19, dend_0, apic_16, apic_1, dend_29, dend_20, dend_10, dend_1, apic_13, apic_2, dend_31, dend_30, dend_26, dend_21, dend_18, dend_11, dend_5, dend_2, apic_15, apic_14, apic_12, apic_3, dend_28, dend_27, dend_25, dend_22, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, apic_11, apic_4, dend_24, dend_23, dend_16, dend_13, dend_9, dend_8, apic_8, apic_5, dend_15, dend_14, apic_10, apic_9, apic_7, apic_6]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_16 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_13 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    apic_15 ModelViewParmSubset_2.append()
    apic_14 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_19, dend_0, apic_16, apic_1, dend_29, dend_20, dend_10, dend_1, apic_13, apic_2, dend_31, dend_30, dend_26, dend_21, dend_18, dend_11, dend_5, dend_2, apic_15, apic_14, apic_12, apic_3, dend_28, dend_27, dend_25, dend_22, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, apic_11, apic_4, dend_24, dend_23, dend_16, dend_13, dend_9, dend_8, apic_8, apic_5, dend_15, dend_14, apic_10, apic_9, apic_7, apic_6]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_10 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_6 = new SectionList()
    apic_16 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_14 = new SectionList()
    apic_2 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_30 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_18 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_25 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_6 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_4 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_38 = new SectionList()
    apic_4 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_8 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_46 = new SectionList()
    apic_5 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    apic_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_51 = new SectionList()
    apic_7 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_52 = new SectionList()
    apic_6 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_19 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_20 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_29 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_21 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_22 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_26 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_7 = new SectionList()
    apic_1 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_23 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_13 = new SectionList()
    apic_13 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_28 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_24 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_24 = new SectionList()
    apic_14 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_27 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_23 = new SectionList()
    apic_15 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_17 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_9 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_12 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_25 = new SectionList()
    apic_12 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_16 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_3 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_13 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_15 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_14 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_37 = new SectionList()
    apic_11 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_45 = new SectionList()
    apic_8 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_50 = new SectionList()
    apic_9 OneSecGrp_SectionRef_50.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_19, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_1, apic_1, apic_1, apic_1, apic_1, dend_29, dend_20, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_13, apic_13, apic_13, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_19 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_29 all.append()
    dend_20 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    apic_16 nseg = 3
    dend_10 nseg = 3
    apic_2 nseg = 3
    dend_30 nseg = 3
    dend_18 nseg = 3
    dend_25 nseg = 3
    dend_6 nseg = 3
    dend_4 nseg = 9
    dend_3 nseg = 5
    apic_4 nseg = 3
    dend_8 nseg = 3
    apic_5 nseg = 3
    apic_10 nseg = 3
    apic_7 nseg = 3
    apic_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L4_SBC_dbf40425f3_0_0


