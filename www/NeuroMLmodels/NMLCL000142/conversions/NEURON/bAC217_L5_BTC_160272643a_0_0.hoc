// Cell: bAC217_L5_BTC_160272643a_0_0
/*
{
  "id" : "bAC217_L5_BTC_160272643a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.79879, 12.4163, -5.65686, 1.10185", "-0.780248, 11.3268, -5.18349, 1.63297", "-0.761706, 10.2373, -4.71013, 2.68141", "-0.743165, 9.14783, -4.23676, 3.59289", "-0.724623, 8.05833, -3.7634, 4.52551", "-0.706081, 6.96884, -3.29004, 5.77296", "-0.687539, 5.87934, -2.81667, 7.05591", "-0.668997, 4.78984, -2.34331, 7.8981", "-0.650455, 3.70034, -1.86994, 8.60513", "-0.631913, 2.61085, -1.39658, 9.05081", "-0.613372, 1.52135, -0.923215, 9.49138", "-0.59483, 0.431853, -0.449851, 9.92405", "-0.576288, -0.657644, 0.0235132, 10.0896", "-0.557746, -1.74714, 0.496877, 9.7354", "-0.539204, -2.83664, 0.970241, 9.3741", "-0.520662, -3.92614, 1.44361, 8.98289", "-0.50212, -5.01563, 1.91697, 8.2325", "-0.483579, -6.10513, 2.39033, 7.41598", "-0.465037, -7.19463, 2.8637, 6.43666", "-0.446495, -8.28412, 3.33706, 5.40957", "-0.427953, -9.37362, 3.81043, 3.13747" ]
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "0.562971, 12.6462, -13.8565, 1.39", "1.54506, 14.0854, -8.28904, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999961371666685
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.72297, 1.56867, 2.93347, 1.11", "6.49681, 3.2069, 3.83187, 1.11", "7.82162, 4.4879, 4.505, 1.11", "8.42852, 5.13253, 4.81394, 1.11", "9.42669, 6.1841, 5.41808, 1.66", "10.0459, 6.85728, 5.81007, 0.83", "10.8211, 7.67299, 6.29705, 0.83", "11.3563, 8.21666, 6.63922, 1.11", "11.9445, 8.82954, 7.017, 0.28", "13.4408, 10.3349, 8.08222, 0.83", "14.4368, 11.3634, 8.82248, 0.83", "15.3816, 12.3455, 9.54692, 0.83", "16.1209, 13.02, 10.1295, 0.83", "16.9217, 13.6515, 10.758, 0.83", "18.206, 14.6125, 11.7591, 0.83", "18.8066, 15.0643, 12.2206, 0.83", "19.9793, 15.8727, 13.2123, 0.83", "21.5512, 16.937, 14.6472, 0.83", "22.2476, 17.3483, 15.2939, 0.83", "25.4447, 19.5352, 16.8, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999961371666685
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.09703, -7.47183, 2.32347, 2.77", "-1.98601, -12.2246, 2.95705, 2.77", "-2.36674, -14.2601, 3.22839, 2.49", "-2.81288, -16.6453, 3.54636, 2.49", "-3.31925, -19.3525, 3.90724, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999961371666685
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.427953, -9.37362, 3.81043, 1.04129", "-0.172709, -24.3714, 3.81043, 1.04129", "0.0825348, -39.3693, 3.81043, 1.04129" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "1.54506, 14.0854, -8.28904, 0.55", "0.171572, 16.0982, -17.5506, 0.55", "0.0530917, 16.2718, -18.3496, 2.49", "-0.895169, 17.6615, -24.7438, 2.22", "-1.50111, 18.5495, -28.8298, 2.22", "-2.42629, 19.9054, -35.0684, 2.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "1.54506, 14.0854, -8.28904, 1.39", "2.68191, 16.1815, -14.988, 1.39", "3.77686, 18.3515, -20.8353, 1.11", "5.12077, 21.1771, -27.6206, 1.11", "5.79932, 22.6068, -30.836, 1.11", "6.45786, 23.9037, -33.8989, 1.11", "6.80197, 24.5813, -35.4993, 1.11", "7.25309, 25.5113, -37.3685, 1.11", "8.39663, 27.9204, -41.7386, 1.11", "8.73898, 28.5764, -42.8758, 1.11", "10.6364, 32.2284, -50.4042, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "25.4447, 19.5352, 16.8, 0.83", "21.7123, 14.6283, 11.1374, 0.83", "17.7847, 9.05951, 6.20617, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "25.4447, 19.5352, 16.8, 0.83", "14.5897, 16.4366, 19.7964, 0.83", "4.60823, 11.9865, 24.0847, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-3.31925, -19.3525, 3.90724, 1.11", "-0.346055, -21.5447, 3.57402, 1.11", "1.60401, -22.9534, 3.35824, 1.11", "4.27826, -24.8356, 3.05671, 1.11", "7.06618, -26.6453, 2.92858, 1.11", "10.9086, -29.0879, 2.85507, 1.11", "16.4847, -32.5627, 2.77293, 1.11", "17.888, -33.4, 2.85621, 1.11", "20.9997, -35.1648, 3.06853, 1.11", "26.314, -38.1313, 3.50778, 1.11", "30.4693, -40.4371, 3.90428, 1.11", "36.1533, -43.6616, 4.70049, 1.11", "40.5267, -46.2772, 5.53956, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.31925, -19.3525, 3.90724, 2.49", "-4.60279, -23.5296, 10.8004, 2.49", "-5.03984, -24.9519, 13.1476, 2.49" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "0.0825348, -39.3693, 3.81043, 0.28", "0.337779, -54.3671, 3.81043, 0.28", "0.593023, -69.3649, 3.81043, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.42629, 19.9054, -35.0684, 1.11", "-1.95087, 19.523, -39.9515, 1.11", "-1.50921, 19.1677, -44.4877, 1.11", "-1.28633, 18.9884, -46.7769, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.42629, 19.9054, -35.0684, 1.94", "-1.51827, 21.6412, -29.5205, 1.94" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "10.6364, 32.2284, -50.4042, 0.55", "11.1532, 32.9901, -52.0863, 0.55", "11.8068, 33.9105, -53.675, 1.39", "12.4695, 34.764, -54.9373, 0.55", "17.0559, 40.5406, -62.3095, 0.55", "18.2369, 42.0285, -63.8675, 0.55", "20.4532, 44.7871, -66.0585, 0.55", "21.2531, 45.8937, -66.902, 0.83", "22.2241, 47.2943, -67.8752, 0.55", "23.0276, 48.5113, -68.6859, 0.55", "24.7734, 50.9665, -70.2104, 0.55", "27.0594, 54.1015, -72.7091, 0.83", "31.5331, 59.712, -77.9942, 0.55", "32.3375, 60.6957, -79.1537, 0.55", "34.4931, 63.127, -82.7108, 0.55", "35.4307, 64.0007, -84.3357, 0.55", "37.1702, 65.2904, -87.2444, 0.55", "38.6002, 66.1329, -89.3983, 0.83", "43.2856, 68.4079, -95.0867, 0.83", "44.9567, 69.1674, -97.0626, 0.28", "48.3399, 70.6267, -100.758, 0.28", "50.8111, 71.7515, -103.466, 0.28", "52.5869, 72.5506, -105.312, 0.55", "53.3977, 72.8784, -106.028, 0.28", "57.1986, 74.1584, -108.343, 0.28", "59.0136, 74.819, -109.926, 0.28", "60.4806, 75.3293, -111.569, 0.28", "61.1852, 75.5504, -112.455, 0.28", "64.1091, 76.3924, -116.573, 0.28", "64.9236, 76.5961, -117.754, 0.28", "71.6981, 78.2868, -129.133, 0.28", "73.9846, 78.723, -133.23, 0.55", "75.185, 78.9054, -135.304, 0.55", "77.3148, 79.2306, -138.819, 0.28", "78.3469, 79.4098, -140.448, 0.28", "82.8693, 80.1528, -146.454, 0.28", "85.2888, 80.5515, -149.064, 0.28", "88.1956, 81.1681, -152.234, 0.28", "96.1284, 83.1259, -160.473, 0.28", "98.3358, 83.6682, -162.624, 0.28", "100.391, 84.2131, -164.563, 0.28", "104.083, 85.2655, -167.738, 0.55", "105.306, 85.6597, -168.857, 0.28", "106.772, 86.134, -170.223, 0.28", "112.97, 87.9165, -175.382, 0.28", "114.207, 88.2174, -176.433, 0.28", "117.337, 88.8551, -179.16, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "10.6364, 32.2284, -50.4042, 1.11", "15.9027, 36.6475, -48.7613, 1.11", "17.2712, 38.4225, -48.9987, 1.11", "18.8424, 40.4526, -49.3856, 0.55", "19.8532, 41.5603, -50.042, 0.55", "20.589, 42.2999, -50.6061, 0.55", "21.4147, 43.0929, -51.2459, 0.55", "22.8442, 44.5575, -52.5946, 0.55", "24.2208, 45.951, -53.9372, 0.55", "27.5783, 49.1146, -57.1224, 0.55", "28.0069, 49.4691, -57.544, 0.83", "29.1178, 50.2968, -58.6839, 0.83", "30.126, 50.9719, -59.7691, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "40.5267, -46.2772, 5.53956, 0.55", "42.0224, -48.6, 6.06561, 0.55", "43.6542, -50.715, 6.5181, 0.55", "44.9252, -52.3624, 6.87055, 0.55", "47.2277, -55.3468, 7.50906, 0.28", "48.5711, -57.088, 7.88158, 0.28", "49.8308, -58.7208, 8.2309, 0.28", "51.1095, -60.1246, 8.7837, 0.28", "55.9156, -66.223, 10.7043, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "40.5267, -46.2772, 5.53956, 0.83", "41.728, -46.9876, 5.11195, 0.83", "43.9209, -48.1838, 4.40142, 0.83", "45.9703, -49.1168, 3.78235, 0.83", "47.4404, -49.7511, 3.35928, 0.83", "48.3945, -50.175, 3.09825, 0.83", "52.4348, -51.9578, 2.04951, 0.83", "54.612, -52.9899, 1.5367, 0.83", "56.8621, -54.1091, 0.976422, 0.83", "58.3651, -54.8937, 0.568422, 0.83", "60.8566, -56.4286, -0.472688, 0.83", "63.6018, -58.33, -1.90319, 0.83", "66.3308, -60.3396, -3.43816, 0.83", "69.3088, -62.5532, -5.10944, 0.83", "72.9273, -65.2706, -7.26726, 0.83", "79.0175, -69.6047, -10.9881, 0.83", "80.7534, -70.7721, -12.0456, 0.83", "83.6818, -72.689, -13.7697, 0.83", "87.7713, -75.2162, -15.9657, 0.83", "92.8734, -78.1814, -18.3032, 0.55", "94.9158, -79.2743, -19.1068, 0.55", "97.6668, -80.6265, -19.9488, 0.55", "100.508, -81.9751, -20.8288, 0.55", "103.813, -83.5743, -21.7027, 0.55", "107.452, -85.334, -22.3068, 0.55", "108.727, -85.8555, -22.3167, 0.55", "109.52, -86.1761, -22.2695, 0.28", "113.812, -87.7988, -21.8112, 0.28", "118.092, -89.2925, -21.1901, 0.28", "121.286, -90.3724, -20.5762, 0.28", "126.541, -92.2066, -19.329, 0.28", "129.739, -93.2959, -18.5175, 0.28", "130.984, -93.6963, -18.1897, 0.28", "138.632, -98.578, -21.9495, 0.28", "146.798, -102.424, -25.7213, 0.28", "154.618, -108.1, -27.6875, 0.28", "162.467, -114.102, -27.5881, 0.28", "169.588, -120.702, -29.5809, 0.28", "175.893, -127.758, -32.6242, 0.28", "183.265, -133.103, -36.3609, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-5.03984, -24.9519, 13.1476, 0.83", "-7.40657, -26.6482, 10.5565, 0.83", "-9.01011, -27.7461, 9.02786, 0.83", "-15.0729, -31.5782, 3.81147, 0.83", "-19.9769, -34.9033, -0.501143, 0.83", "-21.6636, -36.1124, -1.99278, 0.83", "-25.5952, -39.1315, -5.35407, 0.83", "-26.7092, -39.9751, -6.16148, 0.83", "-28.8783, -41.6328, -7.45074, 0.83", "-31.5728, -43.6728, -8.55242, 0.83", "-32.073, -44.0516, -8.76712, 0.83", "-34.279, -45.5501, -9.36388, 0.83", "-36.9259, -47.2624, -9.75984, 0.83", "-39.7723, -49.0771, -10.0818, 0.83", "-42.0865, -50.4722, -10.1964, 0.83", "-46.4775, -52.7959, -10.2007, 0.83", "-49.3682, -54.231, -10.2219, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.03984, -24.9519, 13.1476, 2.22", "-6.73783, -29.0193, 12.8665, 2.22", "-8.6881, -33.6911, 12.5437, 2.22", "-9.68687, -36.0836, 12.3784, 2.22", "-10.4966, -38.0233, 12.2444, 2.22", "-14.0264, -46.4788, 11.6602, 2.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-1.28633, 18.9884, -46.7769, 0.83", "-1.67951, 19.4003, -47.9997, 0.83", "-2.60093, 21.2435, -54.3216, 0.83", "-3.2086, 22.877, -59.9438, 0.83", "-3.38473, 23.5696, -62.6023, 0.83", "-3.4427, 23.7851, -63.4521, 0.83", "-3.82264, 25.7526, -72.1329, 0.83", "-4.13374, 28.657, -86.177, 0.83", "-4.15389, 29.1984, -88.8748, 0.83", "-4.5232, 31.5414, -98.74, 0.55", "-4.71583, 32.1836, -101.129, 0.83", "-6.09125, 35.7097, -112.507, 0.55", "-6.36703, 36.1974, -113.786, 0.55", "-7.14814, 37.3875, -116.206, 0.55", "-9.98246, 41.9445, -124.844, 0.55", "-10.9511, 43.5781, -127.436, 0.83", "-14.3352, 50.364, -136.753, 0.55", "-15.8934, 53.9696, -140.969, 0.55", "-16.3441, 55.4322, -142.734, 0.55", "-17.4721, 61.3646, -149.939, 0.55", "-17.8239, 65.3138, -154.719, 0.55", "-18.0173, 68.9277, -158.837, 0.83", "-18.1048, 71.3625, -161.212, 0.55", "-18.1042, 77.1769, -166.733, 0.55", "-17.9911, 80.1298, -169.736, 0.55", "-17.7861, 84.4797, -174.101, 0.55", "-17.6344, 86.2599, -176.133, 0.55", "-17.5356, 88.2143, -178.488, 0.83", "-17.5087, 90.2702, -180.762, 0.55", "-17.6944, 97.7513, -188.242, 0.55", "-17.7018, 99.9476, -190.548, 0.55", "-17.7036, 103.311, -194.199, 0.55", "-17.8058, 106.037, -197.116, 0.55", "-17.9329, 108.6, -199.793, 0.83", "-17.9475, 109.033, -200.266, 0.55", "-18.4293, 115.408, -207.2, 0.55", "-18.6578, 118.575, -211.011, 0.55", "-18.8912, 122.162, -215.503, 0.83", "-18.9956, 124.124, -218.096, 0.55", "-19.3345, 130.75, -227.318, 0.55", "-19.4425, 132.383, -229.58, 0.55", "-19.8635, 135.461, -233.78, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.28633, 18.9884, -46.7769, 1.11", "-1.32217, 18.9021, -45.8674, 1.11", "-1.36306, 18.8037, -44.8298, 1.11", "-1.79971, 17.7527, -33.7489, 1.11", "-1.85849, 17.6112, -32.2571, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-1.51827, 21.6412, -29.5205, 1.11", "-3.13008, 22.924, -29.3779, 1.11", "-4.01375, 23.6527, -29.2824, 1.11", "-5.73429, 25.2288, -29.2473, 1.11", "-7.21516, 26.6879, -29.3276, 1.11", "-9.76803, 29.3012, -29.7733, 1.11", "-12.1138, 31.6934, -30.0136, 1.11", "-14.7395, 34.3047, -30.1213, 1.11", "-17.0866, 36.5766, -29.9866, 1.11", "-19.4012, 38.757, -29.6278, 0.83", "-22.278, 41.3248, -29.0381, 0.83", "-27.2137, 45.3943, -27.6621, 0.83", "-29.8667, 47.4302, -26.8351, 0.83", "-33.6559, 50.1642, -25.5459, 0.83", "-35.4821, 51.3893, -24.9169, 0.83", "-37.6375, 52.7715, -24.2508, 0.83", "-39.3603, 53.849, -23.8405, 0.83", "-42.275, 55.6935, -23.4466, 0.83", "-45.2972, 57.6836, -23.1556, 0.83", "-47.5209, 59.1463, -23.037, 0.55", "-49.3405, 60.3715, -22.9516, 0.55", "-50.7858, 61.3428, -22.8653, 0.55", "-56.2077, 65.1296, -22.2924, 0.55", "-57.708, 66.2037, -22.0948, 0.83", "-60.0119, 67.9744, -21.823, 0.83", "-62.2056, 69.7727, -21.5407, 0.83", "-64.1279, 71.4683, -21.3735, 0.83", "-66.6794, 73.8019, -21.1971, 0.55", "-68.4853, 75.4891, -21.1749, 0.55", "-71.4904, 78.3752, -21.0138, 0.55", "-72.0016, 78.9077, -20.9726, 0.55", "-74.3766, 81.4588, -20.729, 0.55", "-76.4988, 83.7288, -20.5319, 0.55", "-77.1029, 84.3416, -20.5105, 0.55", "-78.0646, 85.332, -20.4078, 0.55", "-78.9057, 86.2479, -20.22, 0.55", "-80.7298, 88.2415, -19.7425, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.51827, 21.6412, -29.5205, 1.66", "-1.22673, 25.795, -28.7372, 1.66", "-1.07085, 28.0158, -28.3183, 1.66", "-0.794703, 31.9502, -27.5764, 1.39", "-0.531167, 35.7049, -26.8682, 1.39" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-49.3682, -54.231, -10.2219, 0.55", "-54.8493, -58.2747, -6.77425, 0.55", "-59.8374, -61.9546, -3.63673, 0.55", "-61.4839, -63.1693, -2.60103, 0.28", "-63.7217, -64.8202, -1.19343, 0.28", "-68.8352, -68.5927, 2.023, 0.28", "-71.3444, -70.4438, 3.60131, 0.28", "-82.4291, -76.4879, 10.0559, 0.28", "-93.4855, -81.4985, 17.3097, 0.28", "-103.153, -87.4679, 25.7963, 0.28", "-114.273, -92.7705, 32.7595, 0.28", "-125.349, -95.5629, 40.9864, 0.28", "-137.567, -95.8874, 47.9012, 0.28", "-148.503, -95.7118, 56.7047, 0.28", "-159.714, -93.0311, 64.7453, 0.28", "-170.112, -87.954, 72.813, 0.28", "-179.671, -81.5682, 81.0647, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-49.3682, -54.231, -10.2219, 0.55", "-51.3123, -54.4652, -11.6079, 0.55", "-55.1903, -55.1446, -14.0833, 0.55", "-57.2399, -55.5275, -15.1637, 0.55", "-61.603, -56.5514, -17.0003, 0.55", "-66.222, -57.6353, -18.9446, 0.55", "-66.7484, -57.7589, -19.1662, 0.55", "-70.7732, -58.8552, -20.7491, 0.55", "-75.5644, -60.3102, -22.5459, 0.55", "-81.4279, -62.1777, -24.2848, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-14.0264, -46.4788, 11.6602, 0.83", "-15.2985, -48.2224, 10.1439, 0.83", "-15.624, -48.6601, 9.74412, 0.83", "-16.362, -49.6257, 8.76136, 0.83", "-16.6803, -50.0611, 8.35382, 0.83", "-18.748, -52.7507, 5.6584, 0.83", "-19.474, -53.6951, 4.712, 0.83", "-20.1493, -54.4445, 3.85879, 0.83", "-21.6946, -56.082, 1.86738, 0.83", "-22.686, -57.1032, 0.529142, 0.83", "-24.0803, -58.5763, -1.34163, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-14.0264, -46.4788, 11.6602, 1.94", "-15.4304, -60.508, 19.4149, 1.94", "-15.6821, -64.4825, 21.372, 1.94", "-15.6997, -67.4046, 22.6812, 1.94", "-15.7203, -71.7362, 24.3671, 1.94", "-15.735, -74.8403, 25.5751, 1.94", "-15.7477, -77.5299, 26.6219, 1.94", "-16.1788, -83.2447, 26.5107, 1.94", "-16.1213, -85.6435, 26.5923, 1.94", "-15.7048, -88.3775, 27.0435, 1.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-19.8635, 135.461, -233.78, 0.55", "-17.4891, 140.511, -243.326, 0.55", "-16.6509, 142.294, -246.696, 0.83", "-13.584, 148.818, -259.027, 0.28" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-19.8635, 135.461, -233.78, 0.28", "-21.8906, 140.284, -236.128, 0.28", "-23.8577, 144.964, -238.407, 0.55", "-27.329, 153.222, -242.429, 0.55", "-29.663, 158.775, -245.133, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-1.85849, 17.6112, -32.2571, 0.83", "3.67552, 16.397, -36.8203, 0.83", "13.283, 14.3864, -45.4939, 0.83", "15.5754, 13.7539, -47.8127, 0.83", "17.6015, 13.195, -49.8621, 0.83", "22.8041, 11.7597, -55.1247, 0.83", "24.8522, 11.1947, -57.1963, 0.83", "30.9916, 9.15958, -64.0119, 0.83", "36.9403, 7.52059, -69.7084, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-1.85849, 17.6112, -32.2571, 0.83", "0.848149, 30.5372, -8.43417, 0.83", "1.48888, 32.7621, -3.67263, 0.83", "2.28356, 34.6678, 1.43435, 0.83", "2.89895, 34.573, 4.65796, 0.83", "2.37633, 35.3009, 2.26332, 0.83", "1.69246, 36.2485, -0.409294, 0.83", "0.322859, 38.1545, -4.67104, 0.83", "-0.419538, 38.9826, -6.60686, 0.83", "-3.19131, 41.8968, -13.0103, 0.83", "-5.06638, 43.5129, -16.5668, 0.83", "-7.61593, 45.2391, -20.5381, 0.83", "-9.40687, 46.3022, -22.7678, 0.83", "-11.4874, 47.4066, -24.7267, 0.83", "-15.2511, 49.2917, -27.2738, 0.83", "-18.2875, 50.7996, -28.5878, 0.83", "-20.3211, 51.9354, -29.3077, 0.83", "-22.663, 53.4463, -30.0464, 0.83", "-26.2405, 56.0177, -31.4452, 0.83", "-29.5772, 58.6904, -33.175, 0.83", "-31.2341, 60.2785, -33.9328, 0.83", "-35.3356, 64.4055, -35.8921, 0.83", "-38.1463, 67.4027, -37.401, 0.83", "-41.914, 71.6605, -39.9463, 0.55", "-44.7779, 75.3165, -42.5101, 0.55", "-50.3574, 84.0962, -49.493, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-80.7298, 88.2415, -19.7425, 0.55", "-82.8243, 88.4556, -19.2121, 0.55", "-87.3196, 88.915, -18.0738, 0.55", "-92.0017, 89.3935, -16.8882, 0.55", "-101.379, 89.5935, -14.3753, 0.55", "-110.826, 90.3943, -12.272, 0.55", "-119.652, 92.5891, -8.81179, 0.55", "-128.39, 93.3488, -4.64, 0.55", "-137.158, 92.6329, -0.52372, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-80.7298, 88.2415, -19.7425, 0.55", "-81.3147, 90.3411, -19.5842, 0.55", "-81.5614, 91.519, -19.6424, 0.55", "-82.1379, 95.3107, -20.1085, 0.55", "-82.651, 98.5732, -20.29, 0.55", "-83.1098, 101.526, -20.3584, 0.55", "-83.48, 103.781, -20.4144, 0.55", "-83.9764, 107.078, -20.5136, 0.55", "-84.3142, 109.511, -20.699, 0.55", "-84.9506, 114.302, -21.5288, 0.28", "-85.225, 116.069, -21.7878, 0.55", "-85.6086, 118.153, -22.0677, 0.28", "-86.1089, 120.367, -22.3304, 0.28", "-86.6223, 122.369, -22.5164, 0.55", "-87.4098, 125.399, -23.1037, 0.55", "-88.254, 129.268, -24.5343, 0.55", "-88.7986, 137.327, -24.4819, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.531167, 35.7049, -26.8682, 1.11", "-1.27052, 37.2516, -26.0199, 1.11", "-2.59011, 40.0516, -24.257, 1.11", "-4.12836, 43.2609, -22.0496, 1.11", "-4.96542, 45.0899, -20.8292, 0.83", "-8.6902, 53.2489, -14.7425, 1.11", "-9.4486, 55.0066, -13.4098, 1.11", "-10.7191, 57.9471, -10.7447, 1.11", "-12.2966, 61.4253, -7.23303, 1.11", "-12.9324, 62.7124, -5.79395, 1.11", "-15.0639, 66.879, -1.16961, 1.11", "-15.8366, 68.2401, 0.254497, 0.55", "-17.7162, 71.2984, 3.65912, 0.55", "-18.762, 72.8969, 5.50406, 0.55", "-20.4547, 75.2855, 8.20753, 0.83", "-21.3505, 76.4991, 9.56412, 0.83", "-23.3314, 79.4174, 12.5663, 0.83", "-23.7951, 80.2137, 13.3732, 0.83", "-24.9019, 82.6679, 15.6299, 0.83", "-25.3663, 84.042, 16.8049, 0.83", "-26.9228, 89.1369, 20.6893, 0.83", "-27.8309, 92.4846, 23.0198, 0.83", "-28.2664, 94.4666, 24.2337, 0.83", "-28.9829, 98.1245, 26.2458, 0.83", "-29.4398, 101.05, 27.6886, 0.83", "-29.7685, 103.527, 28.7854, 0.83", "-30.1182, 106.445, 29.545, 0.83", "-30.3283, 107.657, 29.733, 0.83", "-30.8178, 109.585, 29.9451, 0.83", "-33.4937, 116.198, 37.5477, 0.83", "-34.7201, 123.129, 45.2654, 0.83", "-35.4078, 129.972, 53.1211, 0.83", "-35.177, 137.282, 60.6145, 0.83", "-33.2532, 144.539, 67.9161, 0.83", "-29.5637, 152.841, 73.2882, 0.83", "-26.3008, 162.06, 77.4471, 0.83", "-23.0556, 171.625, 80.8522, 0.83", "-19.3283, 180.494, 85.3018, 0.83", "-15.6286, 190.046, 88.2583, 0.83", "-10.6396, 198.66, 91.8664, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-0.531167, 35.7049, -26.8682, 1.11", "2.23565, 36.2596, -25.967, 1.11", "4.63276, 36.755, -25.0373, 1.11", "7.50572, 37.4392, -23.9762, 1.11", "9.85098, 38.0457, -23.1339, 1.11", "12.7466, 38.8079, -22.2428, 1.11", "16.237, 39.8116, -21.2817, 1.11", "19.4542, 40.8313, -20.5471, 1.11", "27.6216, 43.7408, -19.164, 1.11", "31.2434, 45.3146, -18.753, 0.83", "35.5199, 47.5136, -18.6184, 0.83", "37.7719, 48.8796, -18.7327, 0.83", "41.4197, 51.4393, -19.2447, 0.83", "43.9579, 53.5789, -19.8936, 0.83", "47.0049, 56.8092, -21.087, 0.83", "49.3239, 59.6289, -22.1189, 0.83", "50.8785, 61.6342, -22.7489, 0.83", "51.8056, 62.7635, -23.0518, 0.83", "54.791, 66.1166, -23.6555, 0.83", "57.0505, 68.2635, -23.9336, 0.83", "58.6779, 69.5747, -23.9667, 0.83", "61.3293, 71.3931, -23.83, 0.83", "63.636, 72.8244, -23.6682, 0.83", "66.2148, 74.3378, -23.3647, 0.83", "67.7049, 75.2183, -23.1054, 0.83", "69.7503, 76.5009, -22.7599, 0.83", "73.7977, 79.3145, -22.0864, 0.83", "75.8797, 81.0043, -21.9886, 0.83", "77.7747, 82.6845, -22.0519, 0.83", "80.3093, 85.0763, -22.2693, 0.83", "82.9699, 87.7551, -22.5844, 0.83", "85.4087, 90.3057, -22.9497, 0.83", "90.5773, 95.8187, -24.3113, 0.83", "91.7104, 97.0232, -24.7307, 0.55", "93.7134, 99.1283, -25.7519, 0.55", "94.9942, 100.532, -26.5555, 0.55", "97.1196, 103.032, -27.8886, 0.55", "101.307, 108.431, -30.3176, 0.55", "102.195, 109.671, -30.7156, 0.55", "104.462, 112.981, -31.5895, 0.83", "107.302, 117.256, -32.3641, 0.55", "110.152, 121.84, -32.7892, 0.55", "111.487, 124.278, -32.7734, 0.28", "112.795, 127.002, -32.4986, 0.28", "113.983, 129.689, -32.1887, 0.55", "115.633, 133.755, -31.6225, 0.28", "116.698, 136.343, -31.4335, 0.55", "117.734, 138.811, -31.5794, 0.55", "118.613, 141.004, -31.7093, 0.28", "119.551, 143.515, -31.8168, 0.28", "120.352, 145.761, -31.8844, 0.28", "122.21, 150.868, -32.0444, 0.55", "124.536, 156.735, -32.1707, 0.28", "126.396, 161.214, -32.2287, 0.28", "128.223, 165.466, -32.2245, 0.28", "128.847, 166.93, -32.1894, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-179.671, -81.5682, 81.0647, 0.28", "-186.632, -83.5946, 86.6016, 0.28", "-193.648, -85.3082, 92.1636, 0.28", "-200.11, -86.7134, 98.4288, 0.28", "-207.23, -88.8714, 103.714, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-179.671, -81.5682, 81.0647, 0.28", "-187.25, -84.12, 87.4591, 0.28", "-194.03, -87.745, 94.2464, 0.28", "-201.599, -92.1946, 99.6237, 0.28", "-209.713, -96.937, 103.893, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-24.0803, -58.5763, -1.34163, 0.83", "-24.1106, -60.183, -3.70486, 0.83", "-24.3547, -61.4594, -6.10536, 0.83", "-24.6513, -62.6003, -8.3375, 0.83", "-24.7908, -63.1685, -9.37094, 0.83", "-25.303, -65.3122, -13.0092, 0.83", "-25.7247, -66.782, -15.4365, 0.83", "-26.5881, -69.3244, -19.7222, 0.83", "-26.979, -70.3293, -21.5092, 0.55", "-27.3884, -71.5269, -23.5287, 0.55", "-27.5871, -72.0811, -24.4165, 0.55", "-28.1243, -73.7505, -26.7448, 0.55", "-28.4099, -74.6657, -27.9711, 0.55", "-28.8759, -77.3716, -31.2645, 0.55", "-29.072, -78.4501, -32.8445, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-24.0803, -58.5763, -1.34163, 0.83", "-27.4951, -62.8616, 0.123457, 0.83", "-28.9371, -64.5185, 0.759042, 0.83", "-30.3395, -66.2285, 1.35423, 0.83", "-33.0683, -69.6559, 2.48511, 0.83", "-34.7642, -71.811, 3.17807, 0.83", "-36.8283, -74.3782, 4.02685, 0.83", "-37.9823, -75.9136, 4.60056, 0.83", "-40.1509, -78.5174, 5.60165, 0.83", "-41.0611, -79.5359, 5.98137, 0.83", "-42.3437, -80.9354, 6.45813, 0.83", "-43.4264, -82.2549, 6.86053, 0.83", "-44.7367, -84.0919, 7.33585, 0.83", "-46.313, -86.8893, 8.3941, 0.83", "-48.175, -91.0526, 10.2622, 0.83", "-49.1781, -93.74, 11.5618, 0.83", "-50.2491, -97.155, 13.2191, 0.83", "-50.7229, -99.3784, 14.3136, 0.83", "-52.0828, -108.722, 18.8794, 0.83", "-52.4018, -111.932, 20.3703, 0.83", "-52.6166, -114.202, 21.4678, 0.83", "-52.9731, -117.744, 23.2897, 0.83", "-53.3678, -122.517, 25.8888, 0.83", "-53.6622, -125.363, 27.4173, 0.83", "-54.3895, -129.533, 29.5431, 0.83", "-54.9735, -132.801, 31.3049, 0.83", "-56.0243, -138.293, 34.5622, 0.83", "-57.3151, -143.645, 38.0132, 0.83", "-58.1102, -146.065, 39.6961, 0.83", "-59.119, -148.727, 41.8913, 0.83", "-60.1936, -150.976, 44.0761, 0.83", "-62.0498, -154.125, 47.287, 0.83", "-63.6134, -156.011, 49.7144, 0.83", "-65.0351, -157.556, 51.9338, 0.83", "-66.979, -159.788, 55.4068, 0.83", "-67.9407, -160.878, 57.1851, 0.83", "-68.8412, -161.805, 58.7974, 0.83", "-71.9587, -165.118, 64.0407, 0.83", "-73.1814, -166.406, 66.1714, 0.55", "-73.5697, -166.86, 66.7771, 0.55", "-75.3423, -169.02, 69.0027, 0.55", "-76.1444, -169.802, 69.8341, 0.28", "-77.0611, -170.479, 70.6307, 0.28", "-79.2458, -171.456, 71.8454, 0.28", "-82.3691, -172.507, 73.6518, 0.28", "-83.515, -172.902, 74.3126, 0.28", "-86.4363, -173.989, 75.9811, 0.28", "-91.8824, -184.591, 83.4765, 0.28", "-100.142, -193.474, 90.4808, 0.28", "-110.35, -200.759, 96.5626, 0.28", "-120.39, -206.117, 104.424, 0.28", "-128.97, -212.403, 113.306, 0.28" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-15.7048, -88.3775, 27.0435, 0.55", "-14.1379, -94.1729, 30.7149, 0.55", "-13.6449, -95.9966, 31.8703, 0.55", "-13.098, -98.0195, 33.1518, 0.55", "-12.6055, -99.8414, 34.3059, 0.55", "-8.36891, -107.417, 38.9442, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-15.7048, -88.3775, 27.0435, 1.66", "-16.6851, -90.5173, 27.4835, 1.66", "-17.197, -91.9865, 27.7527, 1.66", "-18.1193, -95.4747, 28.289, 1.11", "-18.6801, -97.8525, 28.8947, 1.11", "-19.1639, -100.095, 29.5417, 1.11", "-19.5043, -102.395, 30.4494, 1.11", "-19.5812, -104.104, 31.2693, 1.11", "-19.5651, -106.607, 32.5579, 1.11", "-19.3641, -111.546, 35.1818, 1.11", "-19.2545, -113.108, 35.9885, 1.11", "-18.7703, -118.263, 38.7133, 1.11", "-18.5222, -120.249, 39.7027, 1.11", "-18.1359, -123.043, 41.0931, 1.11", "-17.7993, -124.929, 41.9638, 1.39", "-17.3589, -126.848, 42.552, 1.39", "-17.0591, -128.293, 42.872, 1.11", "-16.6383, -131.826, 42.8704, 1.39", "-17.1979, -144.463, 44.8299, 1.39", "-17.7229, -156.927, 47.6219, 1.39", "-17.5702, -169.385, 50.4699, 1.39", "-18.4624, -181.719, 53.6736, 1.39", "-19.8917, -194.127, 56.3961, 1.39", "-19.4654, -206.849, 57.7738, 1.39", "-18.9284, -219.644, 57.4691, 1.39", "-16.5625, -231.993, 55.291, 1.39", "-14.7156, -244.229, 52.2008, 1.39" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "36.9403, 7.52059, -69.7084, 0.55", "39.5345, 11.3279, -70.9682, 0.55", "43.9825, 17.6578, -71.9808, 0.55", "51.7458, 28.1755, -73.7911, 0.55", "53.719, 30.6958, -74.6144, 0.55", "68.3485, 48.9811, -82.0207, 0.55", "76.4847, 59.3738, -87.0656, 0.55", "77.3144, 60.3846, -87.5816, 0.83", "79.1621, 62.6063, -88.7054, 0.28", "83.5476, 66.7581, -93.4182, 0.28", "84.3492, 67.3956, -94.5757, 0.28", "86.3149, 68.7182, -97.7251, 0.28", "88.1441, 70.0125, -100.665, 0.28", "90.6042, 71.4668, -104.617, 0.28", "98.4832, 75.3674, -116.384, 0.28", "99.0519, 75.5955, -117.14, 0.83", "100.555, 75.8476, -119.248, 0.28", "101.21, 75.8683, -120.119, 0.83", "110.907, 74.9865, -132.848, 0.28", "112.65, 74.6537, -135.103, 0.28", "114.458, 73.9978, -137.432, 0.28", "124.988, 69.5722, -151.542, 0.28", "131.942, 66.0856, -161.422, 0.28", "132.903, 65.4869, -162.776, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "36.9403, 7.52059, -69.7084, 0.55", "43.1351, 7.43433, -73.478, 0.55", "45.0241, 7.29399, -74.8562, 1.11", "50.3854, 6.87221, -78.603, 0.55", "51.6113, 6.79271, -79.4066, 0.55", "52.7311, 6.7069, -80.1564, 0.55", "55.2622, 6.53495, -81.7412, 1.11", "64.8165, 6.07723, -87.2404, 0.28", "67.2671, 5.92503, -88.5305, 0.28", "70.8366, 5.73404, -90.0711, 0.55", "76.9497, 5.16639, -92.7279, 0.28", "80.9607, 4.79758, -94.3588, 0.28", "82.6915, 4.68177, -94.9689, 0.55", "84.6788, 4.69558, -95.4266, 0.55", "89.027, 4.87504, -96.4436, 0.28", "96.029, 5.52589, -97.8702, 0.28", "100.597, 5.99847, -99.3417, 0.28", "102.66, 6.19048, -100.21, 0.55", "105.851, 6.47542, -101.643, 0.28", "108.466, 6.70202, -102.876, 0.55", "110.738, 6.91245, -104.01, 0.55", "121.317, 7.94664, -109.011, 0.28", "126.756, 8.12619, -112.007, 0.28", "128.797, 8.08062, -113.222, 0.28", "130.348, 7.95581, -114.226, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-50.3574, 84.0962, -49.493, 0.28", "-49.7467, 86.1774, -47.4903, 0.28", "-48.9744, 88.7341, -44.6404, 0.28", "-48.4998, 90.3823, -42.8835, 0.55", "-48.3391, 91.0498, -42.2803, 0.28", "-46.1444, 100.167, -34.0415, 0.28", "-45.7351, 101.867, -32.5052, 0.28", "-43.9444, 108.882, -25.0939, 0.28", "-43.5351, 110.207, -23.4022, 0.83", "-40.6095, 118.404, -11.3724, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-50.3574, 84.0962, -49.493, 0.55", "-54.3479, 85.2492, -56.4893, 0.55", "-56.7462, 86.0007, -60.2326, 0.55", "-58.9062, 86.6802, -64.0279, 0.55", "-60.2962, 87.1863, -66.4661, 0.55", "-63.2287, 88.3309, -71.3005, 0.55", "-65.2309, 89.1592, -74.1801, 0.28", "-66.2096, 89.5985, -75.3048, 0.83", "-76.0594, 93.9433, -85.2123, 0.83", "-77.8813, 94.7281, -86.825, 0.83", "-80.426, 95.8327, -88.6969, 0.83", "-85.8093, 98.1398, -91.8193, 0.83", "-88.1911, 99.1011, -92.9727, 0.28", "-91.4291, 100.451, -94.1123, 0.28", "-93.2863, 101.258, -94.4164, 0.55", "-95.4289, 102.142, -94.8269, 0.28", "-98.0065, 103.23, -95.3747, 0.28", "-100.852, 104.487, -96.0612, 0.28", "-104.171, 106.12, -96.866, 0.28", "-105.246, 106.771, -97.0943, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_20", "dend_17", "dend_0", "dend_24", "dend_21", "dend_19", "dend_18", "dend_14", "dend_1", "dend_32", "dend_25", "dend_23", "dend_22", "dend_16", "dend_15", "dend_9", "dend_2", "dend_40", "dend_33", "dend_29", "dend_26", "dend_11", "dend_10", "dend_6", "dend_3", "dend_42", "dend_41", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_13", "dend_12", "dend_8", "dend_7", "dend_5", "dend_4", "dend_39", "dend_38", "dend_36", "dend_35" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_20", "dend_17", "dend_0", "dend_24", "dend_21", "dend_19", "dend_18", "dend_14", "dend_1", "dend_32", "dend_25", "dend_23", "dend_22", "dend_16", "dend_15", "dend_9", "dend_2", "dend_40", "dend_33", "dend_29", "dend_26", "dend_11", "dend_10", "dend_6", "dend_3", "dend_42", "dend_41", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_13", "dend_12", "dend_8", "dend_7", "dend_5", "dend_4", "dend_39", "dend_38", "dend_36", "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "axon_1", "axon_1", "dend_32", "dend_32", "dend_32", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_BTC_160272643a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_20, dend_17, dend_0, dend_24, dend_21, dend_19, dend_18, dend_14, dend_1, dend_32, dend_25, dend_23, dend_22, dend_16, dend_15, dend_9, dend_2, dend_40, dend_33, dend_29, dend_26, dend_11, dend_10, dend_6, dend_3, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_28, dend_27, dend_13, dend_12, dend_8, dend_7, dend_5, dend_4, dend_39, dend_38, dend_36, dend_35]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_20, dend_17, dend_0, dend_24, dend_21, dend_19, dend_18, dend_14, dend_1, dend_32, dend_25, dend_23, dend_22, dend_16, dend_15, dend_9, dend_2, dend_40, dend_33, dend_29, dend_26, dend_11, dend_10, dend_6, dend_3, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_28, dend_27, dend_13, dend_12, dend_8, dend_7, dend_5, dend_4, dend_39, dend_38, dend_36, dend_35]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_29
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, axon_1, axon_1, dend_32, dend_32, dend_32, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_20(0), soma_0(0.49999961371666685)
    connect dend_17(0), soma_0(0.49999961371666685)
    connect dend_0(0), soma_0(0.49999961371666685)
    connect axon_0(0), soma_0(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.79879, 12.4163, -5.65686, 1.10185 ) }
    soma_0 { pt3dadd( -0.780248, 11.3268, -5.18349, 1.63297 ) }
    soma_0 { pt3dadd( -0.761706, 10.2373, -4.71013, 2.68141 ) }
    soma_0 { pt3dadd( -0.743165, 9.14783, -4.23676, 3.59289 ) }
    soma_0 { pt3dadd( -0.724623, 8.05833, -3.7634, 4.52551 ) }
    soma_0 { pt3dadd( -0.706081, 6.96884, -3.29004, 5.77296 ) }
    soma_0 { pt3dadd( -0.687539, 5.87934, -2.81667, 7.05591 ) }
    soma_0 { pt3dadd( -0.668997, 4.78984, -2.34331, 7.8981 ) }
    soma_0 { pt3dadd( -0.650455, 3.70034, -1.86994, 8.60513 ) }
    soma_0 { pt3dadd( -0.631913, 2.61085, -1.39658, 9.05081 ) }
    soma_0 { pt3dadd( -0.613372, 1.52135, -0.923215, 9.49138 ) }
    soma_0 { pt3dadd( -0.59483, 0.431853, -0.449851, 9.92405 ) }
    soma_0 { pt3dadd( -0.576288, -0.657644, 0.0235132, 10.0896 ) }
    soma_0 { pt3dadd( -0.557746, -1.74714, 0.496877, 9.7354 ) }
    soma_0 { pt3dadd( -0.539204, -2.83664, 0.970241, 9.3741 ) }
    soma_0 { pt3dadd( -0.520662, -3.92614, 1.44361, 8.98289 ) }
    soma_0 { pt3dadd( -0.50212, -5.01563, 1.91697, 8.2325 ) }
    soma_0 { pt3dadd( -0.483579, -6.10513, 2.39033, 7.41598 ) }
    soma_0 { pt3dadd( -0.465037, -7.19463, 2.8637, 6.43666 ) }
    soma_0 { pt3dadd( -0.446495, -8.28412, 3.33706, 5.40957 ) }
    soma_0 { pt3dadd( -0.427953, -9.37362, 3.81043, 3.13747 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 21/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 0.562971, 12.6462, -13.8565, 1.39 ) }
    dend_20 { pt3dadd( 1.54506, 14.0854, -8.28904, 1.39 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 23/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.72297, 1.56867, 2.93347, 1.11 ) }
    dend_17 { pt3dadd( 6.49681, 3.2069, 3.83187, 1.11 ) }
    dend_17 { pt3dadd( 7.82162, 4.4879, 4.505, 1.11 ) }
    dend_17 { pt3dadd( 8.42852, 5.13253, 4.81394, 1.11 ) }
    dend_17 { pt3dadd( 9.42669, 6.1841, 5.41808, 1.66 ) }
    dend_17 { pt3dadd( 10.0459, 6.85728, 5.81007, 0.83 ) }
    dend_17 { pt3dadd( 10.8211, 7.67299, 6.29705, 0.83 ) }
    dend_17 { pt3dadd( 11.3563, 8.21666, 6.63922, 1.11 ) }
    dend_17 { pt3dadd( 11.9445, 8.82954, 7.017, 0.28 ) }
    dend_17 { pt3dadd( 13.4408, 10.3349, 8.08222, 0.83 ) }
    dend_17 { pt3dadd( 14.4368, 11.3634, 8.82248, 0.83 ) }
    dend_17 { pt3dadd( 15.3816, 12.3455, 9.54692, 0.83 ) }
    dend_17 { pt3dadd( 16.1209, 13.02, 10.1295, 0.83 ) }
    dend_17 { pt3dadd( 16.9217, 13.6515, 10.758, 0.83 ) }
    dend_17 { pt3dadd( 18.206, 14.6125, 11.7591, 0.83 ) }
    dend_17 { pt3dadd( 18.8066, 15.0643, 12.2206, 0.83 ) }
    dend_17 { pt3dadd( 19.9793, 15.8727, 13.2123, 0.83 ) }
    dend_17 { pt3dadd( 21.5512, 16.937, 14.6472, 0.83 ) }
    dend_17 { pt3dadd( 22.2476, 17.3483, 15.2939, 0.83 ) }
    dend_17 { pt3dadd( 25.4447, 19.5352, 16.8, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 43/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.09703, -7.47183, 2.32347, 2.77 ) }
    dend_0 { pt3dadd( -1.98601, -12.2246, 2.95705, 2.77 ) }
    dend_0 { pt3dadd( -2.36674, -14.2601, 3.22839, 2.49 ) }
    dend_0 { pt3dadd( -2.81288, -16.6453, 3.54636, 2.49 ) }
    dend_0 { pt3dadd( -3.31925, -19.3525, 3.90724, 2.77 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 48/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.427953, -9.37362, 3.81043, 1.04129 ) }
    axon_0 { pt3dadd( -0.172709, -24.3714, 3.81043, 1.04129 ) }
    axon_0 { pt3dadd( 0.0825348, -39.3693, 3.81043, 1.04129 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 1.54506, 14.0854, -8.28904, 0.55 ) }
    dend_24 { pt3dadd( 0.171572, 16.0982, -17.5506, 0.55 ) }
    dend_24 { pt3dadd( 0.0530917, 16.2718, -18.3496, 2.49 ) }
    dend_24 { pt3dadd( -0.895169, 17.6615, -24.7438, 2.22 ) }
    dend_24 { pt3dadd( -1.50111, 18.5495, -28.8298, 2.22 ) }
    dend_24 { pt3dadd( -2.42629, 19.9054, -35.0684, 2.22 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 1.54506, 14.0854, -8.28904, 1.39 ) }
    dend_21 { pt3dadd( 2.68191, 16.1815, -14.988, 1.39 ) }
    dend_21 { pt3dadd( 3.77686, 18.3515, -20.8353, 1.11 ) }
    dend_21 { pt3dadd( 5.12077, 21.1771, -27.6206, 1.11 ) }
    dend_21 { pt3dadd( 5.79932, 22.6068, -30.836, 1.11 ) }
    dend_21 { pt3dadd( 6.45786, 23.9037, -33.8989, 1.11 ) }
    dend_21 { pt3dadd( 6.80197, 24.5813, -35.4993, 1.11 ) }
    dend_21 { pt3dadd( 7.25309, 25.5113, -37.3685, 1.11 ) }
    dend_21 { pt3dadd( 8.39663, 27.9204, -41.7386, 1.11 ) }
    dend_21 { pt3dadd( 8.73898, 28.5764, -42.8758, 1.11 ) }
    dend_21 { pt3dadd( 10.6364, 32.2284, -50.4042, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 68/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 25.4447, 19.5352, 16.8, 0.83 ) }
    dend_19 { pt3dadd( 21.7123, 14.6283, 11.1374, 0.83 ) }
    dend_19 { pt3dadd( 17.7847, 9.05951, 6.20617, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 71/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 25.4447, 19.5352, 16.8, 0.83 ) }
    dend_18 { pt3dadd( 14.5897, 16.4366, 19.7964, 0.83 ) }
    dend_18 { pt3dadd( 4.60823, 11.9865, 24.0847, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 74/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -3.31925, -19.3525, 3.90724, 1.11 ) }
    dend_14 { pt3dadd( -0.346055, -21.5447, 3.57402, 1.11 ) }
    dend_14 { pt3dadd( 1.60401, -22.9534, 3.35824, 1.11 ) }
    dend_14 { pt3dadd( 4.27826, -24.8356, 3.05671, 1.11 ) }
    dend_14 { pt3dadd( 7.06618, -26.6453, 2.92858, 1.11 ) }
    dend_14 { pt3dadd( 10.9086, -29.0879, 2.85507, 1.11 ) }
    dend_14 { pt3dadd( 16.4847, -32.5627, 2.77293, 1.11 ) }
    dend_14 { pt3dadd( 17.888, -33.4, 2.85621, 1.11 ) }
    dend_14 { pt3dadd( 20.9997, -35.1648, 3.06853, 1.11 ) }
    dend_14 { pt3dadd( 26.314, -38.1313, 3.50778, 1.11 ) }
    dend_14 { pt3dadd( 30.4693, -40.4371, 3.90428, 1.11 ) }
    dend_14 { pt3dadd( 36.1533, -43.6616, 4.70049, 1.11 ) }
    dend_14 { pt3dadd( 40.5267, -46.2772, 5.53956, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 87/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.31925, -19.3525, 3.90724, 2.49 ) }
    dend_1 { pt3dadd( -4.60279, -23.5296, 10.8004, 2.49 ) }
    dend_1 { pt3dadd( -5.03984, -24.9519, 13.1476, 2.49 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 90/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 0.0825348, -39.3693, 3.81043, 0.28 ) }
    axon_1 { pt3dadd( 0.337779, -54.3671, 3.81043, 0.28 ) }
    axon_1 { pt3dadd( 0.593023, -69.3649, 3.81043, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 93/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.42629, 19.9054, -35.0684, 1.11 ) }
    dend_32 { pt3dadd( -1.95087, 19.523, -39.9515, 1.11 ) }
    dend_32 { pt3dadd( -1.50921, 19.1677, -44.4877, 1.11 ) }
    dend_32 { pt3dadd( -1.28633, 18.9884, -46.7769, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 97/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.42629, 19.9054, -35.0684, 1.94 ) }
    dend_25 { pt3dadd( -1.51827, 21.6412, -29.5205, 1.94 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 99/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 10.6364, 32.2284, -50.4042, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( 11.1532, 32.9901, -52.0863, 0.55 ) }
    dend_23 { pt3dadd( 11.8068, 33.9105, -53.675, 1.39 ) }
    dend_23 { pt3dadd( 12.4695, 34.764, -54.9373, 0.55 ) }
    dend_23 { pt3dadd( 17.0559, 40.5406, -62.3095, 0.55 ) }
    dend_23 { pt3dadd( 18.2369, 42.0285, -63.8675, 0.55 ) }
    dend_23 { pt3dadd( 20.4532, 44.7871, -66.0585, 0.55 ) }
    dend_23 { pt3dadd( 21.2531, 45.8937, -66.902, 0.83 ) }
    dend_23 { pt3dadd( 22.2241, 47.2943, -67.8752, 0.55 ) }
    dend_23 { pt3dadd( 23.0276, 48.5113, -68.6859, 0.55 ) }
    dend_23 { pt3dadd( 24.7734, 50.9665, -70.2104, 0.55 ) }
    dend_23 { pt3dadd( 27.0594, 54.1015, -72.7091, 0.83 ) }
    dend_23 { pt3dadd( 31.5331, 59.712, -77.9942, 0.55 ) }
    dend_23 { pt3dadd( 32.3375, 60.6957, -79.1537, 0.55 ) }
    dend_23 { pt3dadd( 34.4931, 63.127, -82.7108, 0.55 ) }
    dend_23 { pt3dadd( 35.4307, 64.0007, -84.3357, 0.55 ) }
    dend_23 { pt3dadd( 37.1702, 65.2904, -87.2444, 0.55 ) }
    dend_23 { pt3dadd( 38.6002, 66.1329, -89.3983, 0.83 ) }
    dend_23 { pt3dadd( 43.2856, 68.4079, -95.0867, 0.83 ) }
    dend_23 { pt3dadd( 44.9567, 69.1674, -97.0626, 0.28 ) }
    dend_23 { pt3dadd( 48.3399, 70.6267, -100.758, 0.28 ) }
    dend_23 { pt3dadd( 50.8111, 71.7515, -103.466, 0.28 ) }
    dend_23 { pt3dadd( 52.5869, 72.5506, -105.312, 0.55 ) }
    dend_23 { pt3dadd( 53.3977, 72.8784, -106.028, 0.28 ) }
    dend_23 { pt3dadd( 57.1986, 74.1584, -108.343, 0.28 ) }
    dend_23 { pt3dadd( 59.0136, 74.819, -109.926, 0.28 ) }
    dend_23 { pt3dadd( 60.4806, 75.3293, -111.569, 0.28 ) }
    dend_23 { pt3dadd( 61.1852, 75.5504, -112.455, 0.28 ) }
    dend_23 { pt3dadd( 64.1091, 76.3924, -116.573, 0.28 ) }
    dend_23 { pt3dadd( 64.9236, 76.5961, -117.754, 0.28 ) }
    dend_23 { pt3dadd( 71.6981, 78.2868, -129.133, 0.28 ) }
    dend_23 { pt3dadd( 73.9846, 78.723, -133.23, 0.55 ) }
    dend_23 { pt3dadd( 75.185, 78.9054, -135.304, 0.55 ) }
    dend_23 { pt3dadd( 77.3148, 79.2306, -138.819, 0.28 ) }
    dend_23 { pt3dadd( 78.3469, 79.4098, -140.448, 0.28 ) }
    dend_23 { pt3dadd( 82.8693, 80.1528, -146.454, 0.28 ) }
    dend_23 { pt3dadd( 85.2888, 80.5515, -149.064, 0.28 ) }
    dend_23 { pt3dadd( 88.1956, 81.1681, -152.234, 0.28 ) }
    dend_23 { pt3dadd( 96.1284, 83.1259, -160.473, 0.28 ) }
    dend_23 { pt3dadd( 98.3358, 83.6682, -162.624, 0.28 ) }
    dend_23 { pt3dadd( 100.391, 84.2131, -164.563, 0.28 ) }
    dend_23 { pt3dadd( 104.083, 85.2655, -167.738, 0.55 ) }
    dend_23 { pt3dadd( 105.306, 85.6597, -168.857, 0.28 ) }
    dend_23 { pt3dadd( 106.772, 86.134, -170.223, 0.28 ) }
    dend_23 { pt3dadd( 112.97, 87.9165, -175.382, 0.28 ) }
    dend_23 { pt3dadd( 114.207, 88.2174, -176.433, 0.28 ) }
    dend_23 { pt3dadd( 117.337, 88.8551, -179.16, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 46/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 10.6364, 32.2284, -50.4042, 1.11 ) }
    dend_22 { pt3dadd( 15.9027, 36.6475, -48.7613, 1.11 ) }
    dend_22 { pt3dadd( 17.2712, 38.4225, -48.9987, 1.11 ) }
    dend_22 { pt3dadd( 18.8424, 40.4526, -49.3856, 0.55 ) }
    dend_22 { pt3dadd( 19.8532, 41.5603, -50.042, 0.55 ) }
    dend_22 { pt3dadd( 20.589, 42.2999, -50.6061, 0.55 ) }
    dend_22 { pt3dadd( 21.4147, 43.0929, -51.2459, 0.55 ) }
    dend_22 { pt3dadd( 22.8442, 44.5575, -52.5946, 0.55 ) }
    dend_22 { pt3dadd( 24.2208, 45.951, -53.9372, 0.55 ) }
    dend_22 { pt3dadd( 27.5783, 49.1146, -57.1224, 0.55 ) }
    dend_22 { pt3dadd( 28.0069, 49.4691, -57.544, 0.83 ) }
    dend_22 { pt3dadd( 29.1178, 50.2968, -58.6839, 0.83 ) }
    dend_22 { pt3dadd( 30.126, 50.9719, -59.7691, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 59/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 40.5267, -46.2772, 5.53956, 0.55 ) }
    dend_16 { pt3dadd( 42.0224, -48.6, 6.06561, 0.55 ) }
    dend_16 { pt3dadd( 43.6542, -50.715, 6.5181, 0.55 ) }
    dend_16 { pt3dadd( 44.9252, -52.3624, 6.87055, 0.55 ) }
    dend_16 { pt3dadd( 47.2277, -55.3468, 7.50906, 0.28 ) }
    dend_16 { pt3dadd( 48.5711, -57.088, 7.88158, 0.28 ) }
    dend_16 { pt3dadd( 49.8308, -58.7208, 8.2309, 0.28 ) }
    dend_16 { pt3dadd( 51.1095, -60.1246, 8.7837, 0.28 ) }
    dend_16 { pt3dadd( 55.9156, -66.223, 10.7043, 0.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 40.5267, -46.2772, 5.53956, 0.83 ) }
    dend_15 { pt3dadd( 41.728, -46.9876, 5.11195, 0.83 ) }
    dend_15 { pt3dadd( 43.9209, -48.1838, 4.40142, 0.83 ) }
    dend_15 { pt3dadd( 45.9703, -49.1168, 3.78235, 0.83 ) }
    dend_15 { pt3dadd( 47.4404, -49.7511, 3.35928, 0.83 ) }
    dend_15 { pt3dadd( 48.3945, -50.175, 3.09825, 0.83 ) }
    dend_15 { pt3dadd( 52.4348, -51.9578, 2.04951, 0.83 ) }
    dend_15 { pt3dadd( 54.612, -52.9899, 1.5367, 0.83 ) }
    dend_15 { pt3dadd( 56.8621, -54.1091, 0.976422, 0.83 ) }
    dend_15 { pt3dadd( 58.3651, -54.8937, 0.568422, 0.83 ) }
    dend_15 { pt3dadd( 60.8566, -56.4286, -0.472688, 0.83 ) }
    dend_15 { pt3dadd( 63.6018, -58.33, -1.90319, 0.83 ) }
    dend_15 { pt3dadd( 66.3308, -60.3396, -3.43816, 0.83 ) }
    dend_15 { pt3dadd( 69.3088, -62.5532, -5.10944, 0.83 ) }
    dend_15 { pt3dadd( 72.9273, -65.2706, -7.26726, 0.83 ) }
    dend_15 { pt3dadd( 79.0175, -69.6047, -10.9881, 0.83 ) }
    dend_15 { pt3dadd( 80.7534, -70.7721, -12.0456, 0.83 ) }
    dend_15 { pt3dadd( 83.6818, -72.689, -13.7697, 0.83 ) }
    dend_15 { pt3dadd( 87.7713, -75.2162, -15.9657, 0.83 ) }
    dend_15 { pt3dadd( 92.8734, -78.1814, -18.3032, 0.55 ) }
    dend_15 { pt3dadd( 94.9158, -79.2743, -19.1068, 0.55 ) }
    dend_15 { pt3dadd( 97.6668, -80.6265, -19.9488, 0.55 ) }
    dend_15 { pt3dadd( 100.508, -81.9751, -20.8288, 0.55 ) }
    dend_15 { pt3dadd( 103.813, -83.5743, -21.7027, 0.55 ) }
    dend_15 { pt3dadd( 107.452, -85.334, -22.3068, 0.55 ) }
    dend_15 { pt3dadd( 108.727, -85.8555, -22.3167, 0.55 ) }
    dend_15 { pt3dadd( 109.52, -86.1761, -22.2695, 0.28 ) }
    dend_15 { pt3dadd( 113.812, -87.7988, -21.8112, 0.28 ) }
    dend_15 { pt3dadd( 118.092, -89.2925, -21.1901, 0.28 ) }
    dend_15 { pt3dadd( 121.286, -90.3724, -20.5762, 0.28 ) }
    dend_15 { pt3dadd( 126.541, -92.2066, -19.329, 0.28 ) }
    dend_15 { pt3dadd( 129.739, -93.2959, -18.5175, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_15 { pt3dadd( 130.984, -93.6963, -18.1897, 0.28 ) }
    dend_15 { pt3dadd( 138.632, -98.578, -21.9495, 0.28 ) }
    dend_15 { pt3dadd( 146.798, -102.424, -25.7213, 0.28 ) }
    dend_15 { pt3dadd( 154.618, -108.1, -27.6875, 0.28 ) }
    dend_15 { pt3dadd( 162.467, -114.102, -27.5881, 0.28 ) }
    dend_15 { pt3dadd( 169.588, -120.702, -29.5809, 0.28 ) }
    dend_15 { pt3dadd( 175.893, -127.758, -32.6242, 0.28 ) }
    dend_15 { pt3dadd( 183.265, -133.103, -36.3609, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 8/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -5.03984, -24.9519, 13.1476, 0.83 ) }
    dend_9 { pt3dadd( -7.40657, -26.6482, 10.5565, 0.83 ) }
    dend_9 { pt3dadd( -9.01011, -27.7461, 9.02786, 0.83 ) }
    dend_9 { pt3dadd( -15.0729, -31.5782, 3.81147, 0.83 ) }
    dend_9 { pt3dadd( -19.9769, -34.9033, -0.501143, 0.83 ) }
    dend_9 { pt3dadd( -21.6636, -36.1124, -1.99278, 0.83 ) }
    dend_9 { pt3dadd( -25.5952, -39.1315, -5.35407, 0.83 ) }
    dend_9 { pt3dadd( -26.7092, -39.9751, -6.16148, 0.83 ) }
    dend_9 { pt3dadd( -28.8783, -41.6328, -7.45074, 0.83 ) }
    dend_9 { pt3dadd( -31.5728, -43.6728, -8.55242, 0.83 ) }
    dend_9 { pt3dadd( -32.073, -44.0516, -8.76712, 0.83 ) }
    dend_9 { pt3dadd( -34.279, -45.5501, -9.36388, 0.83 ) }
    dend_9 { pt3dadd( -36.9259, -47.2624, -9.75984, 0.83 ) }
    dend_9 { pt3dadd( -39.7723, -49.0771, -10.0818, 0.83 ) }
    dend_9 { pt3dadd( -42.0865, -50.4722, -10.1964, 0.83 ) }
    dend_9 { pt3dadd( -46.4775, -52.7959, -10.2007, 0.83 ) }
    dend_9 { pt3dadd( -49.3682, -54.231, -10.2219, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 25/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.03984, -24.9519, 13.1476, 2.22 ) }
    dend_2 { pt3dadd( -6.73783, -29.0193, 12.8665, 2.22 ) }
    dend_2 { pt3dadd( -8.6881, -33.6911, 12.5437, 2.22 ) }
    dend_2 { pt3dadd( -9.68687, -36.0836, 12.3784, 2.22 ) }
    dend_2 { pt3dadd( -10.4966, -38.0233, 12.2444, 2.22 ) }
    dend_2 { pt3dadd( -14.0264, -46.4788, 11.6602, 2.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 31/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -1.28633, 18.9884, -46.7769, 0.83 ) }
    dend_40 { pt3dadd( -1.67951, 19.4003, -47.9997, 0.83 ) }
    dend_40 { pt3dadd( -2.60093, 21.2435, -54.3216, 0.83 ) }
    dend_40 { pt3dadd( -3.2086, 22.877, -59.9438, 0.83 ) }
    dend_40 { pt3dadd( -3.38473, 23.5696, -62.6023, 0.83 ) }
    dend_40 { pt3dadd( -3.4427, 23.7851, -63.4521, 0.83 ) }
    dend_40 { pt3dadd( -3.82264, 25.7526, -72.1329, 0.83 ) }
    dend_40 { pt3dadd( -4.13374, 28.657, -86.177, 0.83 ) }
    dend_40 { pt3dadd( -4.15389, 29.1984, -88.8748, 0.83 ) }
    dend_40 { pt3dadd( -4.5232, 31.5414, -98.74, 0.55 ) }
    dend_40 { pt3dadd( -4.71583, 32.1836, -101.129, 0.83 ) }
    dend_40 { pt3dadd( -6.09125, 35.7097, -112.507, 0.55 ) }
    dend_40 { pt3dadd( -6.36703, 36.1974, -113.786, 0.55 ) }
    dend_40 { pt3dadd( -7.14814, 37.3875, -116.206, 0.55 ) }
    dend_40 { pt3dadd( -9.98246, 41.9445, -124.844, 0.55 ) }
    dend_40 { pt3dadd( -10.9511, 43.5781, -127.436, 0.83 ) }
    dend_40 { pt3dadd( -14.3352, 50.364, -136.753, 0.55 ) }
    dend_40 { pt3dadd( -15.8934, 53.9696, -140.969, 0.55 ) }
    dend_40 { pt3dadd( -16.3441, 55.4322, -142.734, 0.55 ) }
    dend_40 { pt3dadd( -17.4721, 61.3646, -149.939, 0.55 ) }
    dend_40 { pt3dadd( -17.8239, 65.3138, -154.719, 0.55 ) }
    dend_40 { pt3dadd( -18.0173, 68.9277, -158.837, 0.83 ) }
    dend_40 { pt3dadd( -18.1048, 71.3625, -161.212, 0.55 ) }
    dend_40 { pt3dadd( -18.1042, 77.1769, -166.733, 0.55 ) }
    dend_40 { pt3dadd( -17.9911, 80.1298, -169.736, 0.55 ) }
    dend_40 { pt3dadd( -17.7861, 84.4797, -174.101, 0.55 ) }
    dend_40 { pt3dadd( -17.6344, 86.2599, -176.133, 0.55 ) }
    dend_40 { pt3dadd( -17.5356, 88.2143, -178.488, 0.83 ) }
    dend_40 { pt3dadd( -17.5087, 90.2702, -180.762, 0.55 ) }
    dend_40 { pt3dadd( -17.6944, 97.7513, -188.242, 0.55 ) }
    dend_40 { pt3dadd( -17.7018, 99.9476, -190.548, 0.55 ) }
    dend_40 { pt3dadd( -17.7036, 103.311, -194.199, 0.55 ) }
    dend_40 { pt3dadd( -17.8058, 106.037, -197.116, 0.55 ) }
    dend_40 { pt3dadd( -17.9329, 108.6, -199.793, 0.83 ) }
    dend_40 { pt3dadd( -17.9475, 109.033, -200.266, 0.55 ) }
    dend_40 { pt3dadd( -18.4293, 115.408, -207.2, 0.55 ) }
    dend_40 { pt3dadd( -18.6578, 118.575, -211.011, 0.55 ) }
    dend_40 { pt3dadd( -18.8912, 122.162, -215.503, 0.83 ) }
    dend_40 { pt3dadd( -18.9956, 124.124, -218.096, 0.55 ) }
    dend_40 { pt3dadd( -19.3345, 130.75, -227.318, 0.55 ) }
    dend_40 { pt3dadd( -19.4425, 132.383, -229.58, 0.55 ) }
    dend_40 { pt3dadd( -19.8635, 135.461, -233.78, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 73/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.28633, 18.9884, -46.7769, 1.11 ) }
    dend_33 { pt3dadd( -1.32217, 18.9021, -45.8674, 1.11 ) }
    dend_33 { pt3dadd( -1.36306, 18.8037, -44.8298, 1.11 ) }
    dend_33 { pt3dadd( -1.79971, 17.7527, -33.7489, 1.11 ) }
    dend_33 { pt3dadd( -1.85849, 17.6112, -32.2571, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 78/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -1.51827, 21.6412, -29.5205, 1.11 ) }
    dend_29 { pt3dadd( -3.13008, 22.924, -29.3779, 1.11 ) }
    dend_29 { pt3dadd( -4.01375, 23.6527, -29.2824, 1.11 ) }
    dend_29 { pt3dadd( -5.73429, 25.2288, -29.2473, 1.11 ) }
    dend_29 { pt3dadd( -7.21516, 26.6879, -29.3276, 1.11 ) }
    dend_29 { pt3dadd( -9.76803, 29.3012, -29.7733, 1.11 ) }
    dend_29 { pt3dadd( -12.1138, 31.6934, -30.0136, 1.11 ) }
    dend_29 { pt3dadd( -14.7395, 34.3047, -30.1213, 1.11 ) }
    dend_29 { pt3dadd( -17.0866, 36.5766, -29.9866, 1.11 ) }
    dend_29 { pt3dadd( -19.4012, 38.757, -29.6278, 0.83 ) }
    dend_29 { pt3dadd( -22.278, 41.3248, -29.0381, 0.83 ) }
    dend_29 { pt3dadd( -27.2137, 45.3943, -27.6621, 0.83 ) }
    dend_29 { pt3dadd( -29.8667, 47.4302, -26.8351, 0.83 ) }
    dend_29 { pt3dadd( -33.6559, 50.1642, -25.5459, 0.83 ) }
    dend_29 { pt3dadd( -35.4821, 51.3893, -24.9169, 0.83 ) }
    dend_29 { pt3dadd( -37.6375, 52.7715, -24.2508, 0.83 ) }
    dend_29 { pt3dadd( -39.3603, 53.849, -23.8405, 0.83 ) }
    dend_29 { pt3dadd( -42.275, 55.6935, -23.4466, 0.83 ) }
    dend_29 { pt3dadd( -45.2972, 57.6836, -23.1556, 0.83 ) }
    dend_29 { pt3dadd( -47.5209, 59.1463, -23.037, 0.55 ) }
    dend_29 { pt3dadd( -49.3405, 60.3715, -22.9516, 0.55 ) }
    dend_29 { pt3dadd( -50.7858, 61.3428, -22.8653, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_29 { pt3dadd( -56.2077, 65.1296, -22.2924, 0.55 ) }
    dend_29 { pt3dadd( -57.708, 66.2037, -22.0948, 0.83 ) }
    dend_29 { pt3dadd( -60.0119, 67.9744, -21.823, 0.83 ) }
    dend_29 { pt3dadd( -62.2056, 69.7727, -21.5407, 0.83 ) }
    dend_29 { pt3dadd( -64.1279, 71.4683, -21.3735, 0.83 ) }
    dend_29 { pt3dadd( -66.6794, 73.8019, -21.1971, 0.55 ) }
    dend_29 { pt3dadd( -68.4853, 75.4891, -21.1749, 0.55 ) }
    dend_29 { pt3dadd( -71.4904, 78.3752, -21.0138, 0.55 ) }
    dend_29 { pt3dadd( -72.0016, 78.9077, -20.9726, 0.55 ) }
    dend_29 { pt3dadd( -74.3766, 81.4588, -20.729, 0.55 ) }
    dend_29 { pt3dadd( -76.4988, 83.7288, -20.5319, 0.55 ) }
    dend_29 { pt3dadd( -77.1029, 84.3416, -20.5105, 0.55 ) }
    dend_29 { pt3dadd( -78.0646, 85.332, -20.4078, 0.55 ) }
    dend_29 { pt3dadd( -78.9057, 86.2479, -20.22, 0.55 ) }
    dend_29 { pt3dadd( -80.7298, 88.2415, -19.7425, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 15/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.51827, 21.6412, -29.5205, 1.66 ) }
    dend_26 { pt3dadd( -1.22673, 25.795, -28.7372, 1.66 ) }
    dend_26 { pt3dadd( -1.07085, 28.0158, -28.3183, 1.66 ) }
    dend_26 { pt3dadd( -0.794703, 31.9502, -27.5764, 1.39 ) }
    dend_26 { pt3dadd( -0.531167, 35.7049, -26.8682, 1.39 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 20/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -49.3682, -54.231, -10.2219, 0.55 ) }
    dend_11 { pt3dadd( -54.8493, -58.2747, -6.77425, 0.55 ) }
    dend_11 { pt3dadd( -59.8374, -61.9546, -3.63673, 0.55 ) }
    dend_11 { pt3dadd( -61.4839, -63.1693, -2.60103, 0.28 ) }
    dend_11 { pt3dadd( -63.7217, -64.8202, -1.19343, 0.28 ) }
    dend_11 { pt3dadd( -68.8352, -68.5927, 2.023, 0.28 ) }
    dend_11 { pt3dadd( -71.3444, -70.4438, 3.60131, 0.28 ) }
    dend_11 { pt3dadd( -82.4291, -76.4879, 10.0559, 0.28 ) }
    dend_11 { pt3dadd( -93.4855, -81.4985, 17.3097, 0.28 ) }
    dend_11 { pt3dadd( -103.153, -87.4679, 25.7963, 0.28 ) }
    dend_11 { pt3dadd( -114.273, -92.7705, 32.7595, 0.28 ) }
    dend_11 { pt3dadd( -125.349, -95.5629, 40.9864, 0.28 ) }
    dend_11 { pt3dadd( -137.567, -95.8874, 47.9012, 0.28 ) }
    dend_11 { pt3dadd( -148.503, -95.7118, 56.7047, 0.28 ) }
    dend_11 { pt3dadd( -159.714, -93.0311, 64.7453, 0.28 ) }
    dend_11 { pt3dadd( -170.112, -87.954, 72.813, 0.28 ) }
    dend_11 { pt3dadd( -179.671, -81.5682, 81.0647, 0.28 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 37/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -49.3682, -54.231, -10.2219, 0.55 ) }
    dend_10 { pt3dadd( -51.3123, -54.4652, -11.6079, 0.55 ) }
    dend_10 { pt3dadd( -55.1903, -55.1446, -14.0833, 0.55 ) }
    dend_10 { pt3dadd( -57.2399, -55.5275, -15.1637, 0.55 ) }
    dend_10 { pt3dadd( -61.603, -56.5514, -17.0003, 0.55 ) }
    dend_10 { pt3dadd( -66.222, -57.6353, -18.9446, 0.55 ) }
    dend_10 { pt3dadd( -66.7484, -57.7589, -19.1662, 0.55 ) }
    dend_10 { pt3dadd( -70.7732, -58.8552, -20.7491, 0.55 ) }
    dend_10 { pt3dadd( -75.5644, -60.3102, -22.5459, 0.55 ) }
    dend_10 { pt3dadd( -81.4279, -62.1777, -24.2848, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 47/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -14.0264, -46.4788, 11.6602, 0.83 ) }
    dend_6 { pt3dadd( -15.2985, -48.2224, 10.1439, 0.83 ) }
    dend_6 { pt3dadd( -15.624, -48.6601, 9.74412, 0.83 ) }
    dend_6 { pt3dadd( -16.362, -49.6257, 8.76136, 0.83 ) }
    dend_6 { pt3dadd( -16.6803, -50.0611, 8.35382, 0.83 ) }
    dend_6 { pt3dadd( -18.748, -52.7507, 5.6584, 0.83 ) }
    dend_6 { pt3dadd( -19.474, -53.6951, 4.712, 0.83 ) }
    dend_6 { pt3dadd( -20.1493, -54.4445, 3.85879, 0.83 ) }
    dend_6 { pt3dadd( -21.6946, -56.082, 1.86738, 0.83 ) }
    dend_6 { pt3dadd( -22.686, -57.1032, 0.529142, 0.83 ) }
    dend_6 { pt3dadd( -24.0803, -58.5763, -1.34163, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 58/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -14.0264, -46.4788, 11.6602, 1.94 ) }
    dend_3 { pt3dadd( -15.4304, -60.508, 19.4149, 1.94 ) }
    dend_3 { pt3dadd( -15.6821, -64.4825, 21.372, 1.94 ) }
    dend_3 { pt3dadd( -15.6997, -67.4046, 22.6812, 1.94 ) }
    dend_3 { pt3dadd( -15.7203, -71.7362, 24.3671, 1.94 ) }
    dend_3 { pt3dadd( -15.735, -74.8403, 25.5751, 1.94 ) }
    dend_3 { pt3dadd( -15.7477, -77.5299, 26.6219, 1.94 ) }
    dend_3 { pt3dadd( -16.1788, -83.2447, 26.5107, 1.94 ) }
    dend_3 { pt3dadd( -16.1213, -85.6435, 26.5923, 1.94 ) }
    dend_3 { pt3dadd( -15.7048, -88.3775, 27.0435, 1.66 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 68/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -19.8635, 135.461, -233.78, 0.55 ) }
    dend_42 { pt3dadd( -17.4891, 140.511, -243.326, 0.55 ) }
    dend_42 { pt3dadd( -16.6509, 142.294, -246.696, 0.83 ) }
    dend_42 { pt3dadd( -13.584, 148.818, -259.027, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 72/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -19.8635, 135.461, -233.78, 0.28 ) }
    dend_41 { pt3dadd( -21.8906, 140.284, -236.128, 0.28 ) }
    dend_41 { pt3dadd( -23.8577, 144.964, -238.407, 0.55 ) }
    dend_41 { pt3dadd( -27.329, 153.222, -242.429, 0.55 ) }
    dend_41 { pt3dadd( -29.663, 158.775, -245.133, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 77/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -1.85849, 17.6112, -32.2571, 0.83 ) }
    dend_37 { pt3dadd( 3.67552, 16.397, -36.8203, 0.83 ) }
    dend_37 { pt3dadd( 13.283, 14.3864, -45.4939, 0.83 ) }
    dend_37 { pt3dadd( 15.5754, 13.7539, -47.8127, 0.83 ) }
    dend_37 { pt3dadd( 17.6015, 13.195, -49.8621, 0.83 ) }
    dend_37 { pt3dadd( 22.8041, 11.7597, -55.1247, 0.83 ) }
    dend_37 { pt3dadd( 24.8522, 11.1947, -57.1963, 0.83 ) }
    dend_37 { pt3dadd( 30.9916, 9.15958, -64.0119, 0.83 ) }
    dend_37 { pt3dadd( 36.9403, 7.52059, -69.7084, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 86/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -1.85849, 17.6112, -32.2571, 0.83 ) }
    dend_34 { pt3dadd( 0.848149, 30.5372, -8.43417, 0.83 ) }
    dend_34 { pt3dadd( 1.48888, 32.7621, -3.67263, 0.83 ) }
    dend_34 { pt3dadd( 2.28356, 34.6678, 1.43435, 0.83 ) }
    dend_34 { pt3dadd( 2.89895, 34.573, 4.65796, 0.83 ) }
    dend_34 { pt3dadd( 2.37633, 35.3009, 2.26332, 0.83 ) }
    dend_34 { pt3dadd( 1.69246, 36.2485, -0.409294, 0.83 ) }
    dend_34 { pt3dadd( 0.322859, 38.1545, -4.67104, 0.83 ) }
    dend_34 { pt3dadd( -0.419538, 38.9826, -6.60686, 0.83 ) }
    dend_34 { pt3dadd( -3.19131, 41.8968, -13.0103, 0.83 ) }
    dend_34 { pt3dadd( -5.06638, 43.5129, -16.5668, 0.83 ) }
    dend_34 { pt3dadd( -7.61593, 45.2391, -20.5381, 0.83 ) }
    dend_34 { pt3dadd( -9.40687, 46.3022, -22.7678, 0.83 ) }
    dend_34 { pt3dadd( -11.4874, 47.4066, -24.7267, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_34 { pt3dadd( -15.2511, 49.2917, -27.2738, 0.83 ) }
    dend_34 { pt3dadd( -18.2875, 50.7996, -28.5878, 0.83 ) }
    dend_34 { pt3dadd( -20.3211, 51.9354, -29.3077, 0.83 ) }
    dend_34 { pt3dadd( -22.663, 53.4463, -30.0464, 0.83 ) }
    dend_34 { pt3dadd( -26.2405, 56.0177, -31.4452, 0.83 ) }
    dend_34 { pt3dadd( -29.5772, 58.6904, -33.175, 0.83 ) }
    dend_34 { pt3dadd( -31.2341, 60.2785, -33.9328, 0.83 ) }
    dend_34 { pt3dadd( -35.3356, 64.4055, -35.8921, 0.83 ) }
    dend_34 { pt3dadd( -38.1463, 67.4027, -37.401, 0.83 ) }
    dend_34 { pt3dadd( -41.914, 71.6605, -39.9463, 0.55 ) }
    dend_34 { pt3dadd( -44.7779, 75.3165, -42.5101, 0.55 ) }
    dend_34 { pt3dadd( -50.3574, 84.0962, -49.493, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 12/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -80.7298, 88.2415, -19.7425, 0.55 ) }
    dend_31 { pt3dadd( -82.8243, 88.4556, -19.2121, 0.55 ) }
    dend_31 { pt3dadd( -87.3196, 88.915, -18.0738, 0.55 ) }
    dend_31 { pt3dadd( -92.0017, 89.3935, -16.8882, 0.55 ) }
    dend_31 { pt3dadd( -101.379, 89.5935, -14.3753, 0.55 ) }
    dend_31 { pt3dadd( -110.826, 90.3943, -12.272, 0.55 ) }
    dend_31 { pt3dadd( -119.652, 92.5891, -8.81179, 0.55 ) }
    dend_31 { pt3dadd( -128.39, 93.3488, -4.64, 0.55 ) }
    dend_31 { pt3dadd( -137.158, 92.6329, -0.52372, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -80.7298, 88.2415, -19.7425, 0.55 ) }
    dend_30 { pt3dadd( -81.3147, 90.3411, -19.5842, 0.55 ) }
    dend_30 { pt3dadd( -81.5614, 91.519, -19.6424, 0.55 ) }
    dend_30 { pt3dadd( -82.1379, 95.3107, -20.1085, 0.55 ) }
    dend_30 { pt3dadd( -82.651, 98.5732, -20.29, 0.55 ) }
    dend_30 { pt3dadd( -83.1098, 101.526, -20.3584, 0.55 ) }
    dend_30 { pt3dadd( -83.48, 103.781, -20.4144, 0.55 ) }
    dend_30 { pt3dadd( -83.9764, 107.078, -20.5136, 0.55 ) }
    dend_30 { pt3dadd( -84.3142, 109.511, -20.699, 0.55 ) }
    dend_30 { pt3dadd( -84.9506, 114.302, -21.5288, 0.28 ) }
    dend_30 { pt3dadd( -85.225, 116.069, -21.7878, 0.55 ) }
    dend_30 { pt3dadd( -85.6086, 118.153, -22.0677, 0.28 ) }
    dend_30 { pt3dadd( -86.1089, 120.367, -22.3304, 0.28 ) }
    dend_30 { pt3dadd( -86.6223, 122.369, -22.5164, 0.55 ) }
    dend_30 { pt3dadd( -87.4098, 125.399, -23.1037, 0.55 ) }
    dend_30 { pt3dadd( -88.254, 129.268, -24.5343, 0.55 ) }
    dend_30 { pt3dadd( -88.7986, 137.327, -24.4819, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.531167, 35.7049, -26.8682, 1.11 ) }
    dend_28 { pt3dadd( -1.27052, 37.2516, -26.0199, 1.11 ) }
    dend_28 { pt3dadd( -2.59011, 40.0516, -24.257, 1.11 ) }
    dend_28 { pt3dadd( -4.12836, 43.2609, -22.0496, 1.11 ) }
    dend_28 { pt3dadd( -4.96542, 45.0899, -20.8292, 0.83 ) }
    dend_28 { pt3dadd( -8.6902, 53.2489, -14.7425, 1.11 ) }
    dend_28 { pt3dadd( -9.4486, 55.0066, -13.4098, 1.11 ) }
    dend_28 { pt3dadd( -10.7191, 57.9471, -10.7447, 1.11 ) }
    dend_28 { pt3dadd( -12.2966, 61.4253, -7.23303, 1.11 ) }
    dend_28 { pt3dadd( -12.9324, 62.7124, -5.79395, 1.11 ) }
    dend_28 { pt3dadd( -15.0639, 66.879, -1.16961, 1.11 ) }
    dend_28 { pt3dadd( -15.8366, 68.2401, 0.254497, 0.55 ) }
    dend_28 { pt3dadd( -17.7162, 71.2984, 3.65912, 0.55 ) }
    dend_28 { pt3dadd( -18.762, 72.8969, 5.50406, 0.55 ) }
    dend_28 { pt3dadd( -20.4547, 75.2855, 8.20753, 0.83 ) }
    dend_28 { pt3dadd( -21.3505, 76.4991, 9.56412, 0.83 ) }
    dend_28 { pt3dadd( -23.3314, 79.4174, 12.5663, 0.83 ) }
    dend_28 { pt3dadd( -23.7951, 80.2137, 13.3732, 0.83 ) }
    dend_28 { pt3dadd( -24.9019, 82.6679, 15.6299, 0.83 ) }
    dend_28 { pt3dadd( -25.3663, 84.042, 16.8049, 0.83 ) }
    dend_28 { pt3dadd( -26.9228, 89.1369, 20.6893, 0.83 ) }
    dend_28 { pt3dadd( -27.8309, 92.4846, 23.0198, 0.83 ) }
    dend_28 { pt3dadd( -28.2664, 94.4666, 24.2337, 0.83 ) }
    dend_28 { pt3dadd( -28.9829, 98.1245, 26.2458, 0.83 ) }
    dend_28 { pt3dadd( -29.4398, 101.05, 27.6886, 0.83 ) }
    dend_28 { pt3dadd( -29.7685, 103.527, 28.7854, 0.83 ) }
    dend_28 { pt3dadd( -30.1182, 106.445, 29.545, 0.83 ) }
    dend_28 { pt3dadd( -30.3283, 107.657, 29.733, 0.83 ) }
    dend_28 { pt3dadd( -30.8178, 109.585, 29.9451, 0.83 ) }
    dend_28 { pt3dadd( -33.4937, 116.198, 37.5477, 0.83 ) }
    dend_28 { pt3dadd( -34.7201, 123.129, 45.2654, 0.83 ) }
    dend_28 { pt3dadd( -35.4078, 129.972, 53.1211, 0.83 ) }
    dend_28 { pt3dadd( -35.177, 137.282, 60.6145, 0.83 ) }
    dend_28 { pt3dadd( -33.2532, 144.539, 67.9161, 0.83 ) }
    dend_28 { pt3dadd( -29.5637, 152.841, 73.2882, 0.83 ) }
    dend_28 { pt3dadd( -26.3008, 162.06, 77.4471, 0.83 ) }
    dend_28 { pt3dadd( -23.0556, 171.625, 80.8522, 0.83 ) }
    dend_28 { pt3dadd( -19.3283, 180.494, 85.3018, 0.83 ) }
    dend_28 { pt3dadd( -15.6286, 190.046, 88.2583, 0.83 ) }
    dend_28 { pt3dadd( -10.6396, 198.66, 91.8664, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 78/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -0.531167, 35.7049, -26.8682, 1.11 ) }
    dend_27 { pt3dadd( 2.23565, 36.2596, -25.967, 1.11 ) }
    dend_27 { pt3dadd( 4.63276, 36.755, -25.0373, 1.11 ) }
    dend_27 { pt3dadd( 7.50572, 37.4392, -23.9762, 1.11 ) }
    dend_27 { pt3dadd( 9.85098, 38.0457, -23.1339, 1.11 ) }
    dend_27 { pt3dadd( 12.7466, 38.8079, -22.2428, 1.11 ) }
    dend_27 { pt3dadd( 16.237, 39.8116, -21.2817, 1.11 ) }
    dend_27 { pt3dadd( 19.4542, 40.8313, -20.5471, 1.11 ) }
    dend_27 { pt3dadd( 27.6216, 43.7408, -19.164, 1.11 ) }
    dend_27 { pt3dadd( 31.2434, 45.3146, -18.753, 0.83 ) }
    dend_27 { pt3dadd( 35.5199, 47.5136, -18.6184, 0.83 ) }
    dend_27 { pt3dadd( 37.7719, 48.8796, -18.7327, 0.83 ) }
    dend_27 { pt3dadd( 41.4197, 51.4393, -19.2447, 0.83 ) }
    dend_27 { pt3dadd( 43.9579, 53.5789, -19.8936, 0.83 ) }
    dend_27 { pt3dadd( 47.0049, 56.8092, -21.087, 0.83 ) }
    dend_27 { pt3dadd( 49.3239, 59.6289, -22.1189, 0.83 ) }
    dend_27 { pt3dadd( 50.8785, 61.6342, -22.7489, 0.83 ) }
    dend_27 { pt3dadd( 51.8056, 62.7635, -23.0518, 0.83 ) }
    dend_27 { pt3dadd( 54.791, 66.1166, -23.6555, 0.83 ) }
    dend_27 { pt3dadd( 57.0505, 68.2635, -23.9336, 0.83 ) }
    dend_27 { pt3dadd( 58.6779, 69.5747, -23.9667, 0.83 ) }
    dend_27 { pt3dadd( 61.3293, 71.3931, -23.83, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_27 { pt3dadd( 63.636, 72.8244, -23.6682, 0.83 ) }
    dend_27 { pt3dadd( 66.2148, 74.3378, -23.3647, 0.83 ) }
    dend_27 { pt3dadd( 67.7049, 75.2183, -23.1054, 0.83 ) }
    dend_27 { pt3dadd( 69.7503, 76.5009, -22.7599, 0.83 ) }
    dend_27 { pt3dadd( 73.7977, 79.3145, -22.0864, 0.83 ) }
    dend_27 { pt3dadd( 75.8797, 81.0043, -21.9886, 0.83 ) }
    dend_27 { pt3dadd( 77.7747, 82.6845, -22.0519, 0.83 ) }
    dend_27 { pt3dadd( 80.3093, 85.0763, -22.2693, 0.83 ) }
    dend_27 { pt3dadd( 82.9699, 87.7551, -22.5844, 0.83 ) }
    dend_27 { pt3dadd( 85.4087, 90.3057, -22.9497, 0.83 ) }
    dend_27 { pt3dadd( 90.5773, 95.8187, -24.3113, 0.83 ) }
    dend_27 { pt3dadd( 91.7104, 97.0232, -24.7307, 0.55 ) }
    dend_27 { pt3dadd( 93.7134, 99.1283, -25.7519, 0.55 ) }
    dend_27 { pt3dadd( 94.9942, 100.532, -26.5555, 0.55 ) }
    dend_27 { pt3dadd( 97.1196, 103.032, -27.8886, 0.55 ) }
    dend_27 { pt3dadd( 101.307, 108.431, -30.3176, 0.55 ) }
    dend_27 { pt3dadd( 102.195, 109.671, -30.7156, 0.55 ) }
    dend_27 { pt3dadd( 104.462, 112.981, -31.5895, 0.83 ) }
    dend_27 { pt3dadd( 107.302, 117.256, -32.3641, 0.55 ) }
    dend_27 { pt3dadd( 110.152, 121.84, -32.7892, 0.55 ) }
    dend_27 { pt3dadd( 111.487, 124.278, -32.7734, 0.28 ) }
    dend_27 { pt3dadd( 112.795, 127.002, -32.4986, 0.28 ) }
    dend_27 { pt3dadd( 113.983, 129.689, -32.1887, 0.55 ) }
    dend_27 { pt3dadd( 115.633, 133.755, -31.6225, 0.28 ) }
    dend_27 { pt3dadd( 116.698, 136.343, -31.4335, 0.55 ) }
    dend_27 { pt3dadd( 117.734, 138.811, -31.5794, 0.55 ) }
    dend_27 { pt3dadd( 118.613, 141.004, -31.7093, 0.28 ) }
    dend_27 { pt3dadd( 119.551, 143.515, -31.8168, 0.28 ) }
    dend_27 { pt3dadd( 120.352, 145.761, -31.8844, 0.28 ) }
    dend_27 { pt3dadd( 122.21, 150.868, -32.0444, 0.55 ) }
    dend_27 { pt3dadd( 124.536, 156.735, -32.1707, 0.28 ) }
    dend_27 { pt3dadd( 126.396, 161.214, -32.2287, 0.28 ) }
    dend_27 { pt3dadd( 128.223, 165.466, -32.2245, 0.28 ) }
    dend_27 { pt3dadd( 128.847, 166.93, -32.1894, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 34/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -179.671, -81.5682, 81.0647, 0.28 ) }
    dend_13 { pt3dadd( -186.632, -83.5946, 86.6016, 0.28 ) }
    dend_13 { pt3dadd( -193.648, -85.3082, 92.1636, 0.28 ) }
    dend_13 { pt3dadd( -200.11, -86.7134, 98.4288, 0.28 ) }
    dend_13 { pt3dadd( -207.23, -88.8714, 103.714, 0.28 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -179.671, -81.5682, 81.0647, 0.28 ) }
    dend_12 { pt3dadd( -187.25, -84.12, 87.4591, 0.28 ) }
    dend_12 { pt3dadd( -194.03, -87.745, 94.2464, 0.28 ) }
    dend_12 { pt3dadd( -201.599, -92.1946, 99.6237, 0.28 ) }
    dend_12 { pt3dadd( -209.713, -96.937, 103.893, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 44/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -24.0803, -58.5763, -1.34163, 0.83 ) }
    dend_8 { pt3dadd( -24.1106, -60.183, -3.70486, 0.83 ) }
    dend_8 { pt3dadd( -24.3547, -61.4594, -6.10536, 0.83 ) }
    dend_8 { pt3dadd( -24.6513, -62.6003, -8.3375, 0.83 ) }
    dend_8 { pt3dadd( -24.7908, -63.1685, -9.37094, 0.83 ) }
    dend_8 { pt3dadd( -25.303, -65.3122, -13.0092, 0.83 ) }
    dend_8 { pt3dadd( -25.7247, -66.782, -15.4365, 0.83 ) }
    dend_8 { pt3dadd( -26.5881, -69.3244, -19.7222, 0.83 ) }
    dend_8 { pt3dadd( -26.979, -70.3293, -21.5092, 0.55 ) }
    dend_8 { pt3dadd( -27.3884, -71.5269, -23.5287, 0.55 ) }
    dend_8 { pt3dadd( -27.5871, -72.0811, -24.4165, 0.55 ) }
    dend_8 { pt3dadd( -28.1243, -73.7505, -26.7448, 0.55 ) }
    dend_8 { pt3dadd( -28.4099, -74.6657, -27.9711, 0.55 ) }
    dend_8 { pt3dadd( -28.8759, -77.3716, -31.2645, 0.55 ) }
    dend_8 { pt3dadd( -29.072, -78.4501, -32.8445, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 59/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -24.0803, -58.5763, -1.34163, 0.83 ) }
    dend_7 { pt3dadd( -27.4951, -62.8616, 0.123457, 0.83 ) }
    dend_7 { pt3dadd( -28.9371, -64.5185, 0.759042, 0.83 ) }
    dend_7 { pt3dadd( -30.3395, -66.2285, 1.35423, 0.83 ) }
    dend_7 { pt3dadd( -33.0683, -69.6559, 2.48511, 0.83 ) }
    dend_7 { pt3dadd( -34.7642, -71.811, 3.17807, 0.83 ) }
    dend_7 { pt3dadd( -36.8283, -74.3782, 4.02685, 0.83 ) }
    dend_7 { pt3dadd( -37.9823, -75.9136, 4.60056, 0.83 ) }
    dend_7 { pt3dadd( -40.1509, -78.5174, 5.60165, 0.83 ) }
    dend_7 { pt3dadd( -41.0611, -79.5359, 5.98137, 0.83 ) }
    dend_7 { pt3dadd( -42.3437, -80.9354, 6.45813, 0.83 ) }
    dend_7 { pt3dadd( -43.4264, -82.2549, 6.86053, 0.83 ) }
    dend_7 { pt3dadd( -44.7367, -84.0919, 7.33585, 0.83 ) }
    dend_7 { pt3dadd( -46.313, -86.8893, 8.3941, 0.83 ) }
    dend_7 { pt3dadd( -48.175, -91.0526, 10.2622, 0.83 ) }
    dend_7 { pt3dadd( -49.1781, -93.74, 11.5618, 0.83 ) }
    dend_7 { pt3dadd( -50.2491, -97.155, 13.2191, 0.83 ) }
    dend_7 { pt3dadd( -50.7229, -99.3784, 14.3136, 0.83 ) }
    dend_7 { pt3dadd( -52.0828, -108.722, 18.8794, 0.83 ) }
    dend_7 { pt3dadd( -52.4018, -111.932, 20.3703, 0.83 ) }
    dend_7 { pt3dadd( -52.6166, -114.202, 21.4678, 0.83 ) }
    dend_7 { pt3dadd( -52.9731, -117.744, 23.2897, 0.83 ) }
    dend_7 { pt3dadd( -53.3678, -122.517, 25.8888, 0.83 ) }
    dend_7 { pt3dadd( -53.6622, -125.363, 27.4173, 0.83 ) }
    dend_7 { pt3dadd( -54.3895, -129.533, 29.5431, 0.83 ) }
    dend_7 { pt3dadd( -54.9735, -132.801, 31.3049, 0.83 ) }
    dend_7 { pt3dadd( -56.0243, -138.293, 34.5622, 0.83 ) }
    dend_7 { pt3dadd( -57.3151, -143.645, 38.0132, 0.83 ) }
    dend_7 { pt3dadd( -58.1102, -146.065, 39.6961, 0.83 ) }
    dend_7 { pt3dadd( -59.119, -148.727, 41.8913, 0.83 ) }
    dend_7 { pt3dadd( -60.1936, -150.976, 44.0761, 0.83 ) }
    dend_7 { pt3dadd( -62.0498, -154.125, 47.287, 0.83 ) }
    dend_7 { pt3dadd( -63.6134, -156.011, 49.7144, 0.83 ) }
    dend_7 { pt3dadd( -65.0351, -157.556, 51.9338, 0.83 ) }
    dend_7 { pt3dadd( -66.979, -159.788, 55.4068, 0.83 ) }
    dend_7 { pt3dadd( -67.9407, -160.878, 57.1851, 0.83 ) }
    dend_7 { pt3dadd( -68.8412, -161.805, 58.7974, 0.83 ) }
    dend_7 { pt3dadd( -71.9587, -165.118, 64.0407, 0.83 ) }
    dend_7 { pt3dadd( -73.1814, -166.406, 66.1714, 0.55 ) }
    dend_7 { pt3dadd( -73.5697, -166.86, 66.7771, 0.55 ) }
    dend_7 { pt3dadd( -75.3423, -169.02, 69.0027, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_7 { pt3dadd( -76.1444, -169.802, 69.8341, 0.28 ) }
    dend_7 { pt3dadd( -77.0611, -170.479, 70.6307, 0.28 ) }
    dend_7 { pt3dadd( -79.2458, -171.456, 71.8454, 0.28 ) }
    dend_7 { pt3dadd( -82.3691, -172.507, 73.6518, 0.28 ) }
    dend_7 { pt3dadd( -83.515, -172.902, 74.3126, 0.28 ) }
    dend_7 { pt3dadd( -86.4363, -173.989, 75.9811, 0.28 ) }
    dend_7 { pt3dadd( -91.8824, -184.591, 83.4765, 0.28 ) }
    dend_7 { pt3dadd( -100.142, -193.474, 90.4808, 0.28 ) }
    dend_7 { pt3dadd( -110.35, -200.759, 96.5626, 0.28 ) }
    dend_7 { pt3dadd( -120.39, -206.117, 104.424, 0.28 ) }
    dend_7 { pt3dadd( -128.97, -212.403, 113.306, 0.28 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 11/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -15.7048, -88.3775, 27.0435, 0.55 ) }
    dend_5 { pt3dadd( -14.1379, -94.1729, 30.7149, 0.55 ) }
    dend_5 { pt3dadd( -13.6449, -95.9966, 31.8703, 0.55 ) }
    dend_5 { pt3dadd( -13.098, -98.0195, 33.1518, 0.55 ) }
    dend_5 { pt3dadd( -12.6055, -99.8414, 34.3059, 0.55 ) }
    dend_5 { pt3dadd( -8.36891, -107.417, 38.9442, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 17/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -15.7048, -88.3775, 27.0435, 1.66 ) }
    dend_4 { pt3dadd( -16.6851, -90.5173, 27.4835, 1.66 ) }
    dend_4 { pt3dadd( -17.197, -91.9865, 27.7527, 1.66 ) }
    dend_4 { pt3dadd( -18.1193, -95.4747, 28.289, 1.11 ) }
    dend_4 { pt3dadd( -18.6801, -97.8525, 28.8947, 1.11 ) }
    dend_4 { pt3dadd( -19.1639, -100.095, 29.5417, 1.11 ) }
    dend_4 { pt3dadd( -19.5043, -102.395, 30.4494, 1.11 ) }
    dend_4 { pt3dadd( -19.5812, -104.104, 31.2693, 1.11 ) }
    dend_4 { pt3dadd( -19.5651, -106.607, 32.5579, 1.11 ) }
    dend_4 { pt3dadd( -19.3641, -111.546, 35.1818, 1.11 ) }
    dend_4 { pt3dadd( -19.2545, -113.108, 35.9885, 1.11 ) }
    dend_4 { pt3dadd( -18.7703, -118.263, 38.7133, 1.11 ) }
    dend_4 { pt3dadd( -18.5222, -120.249, 39.7027, 1.11 ) }
    dend_4 { pt3dadd( -18.1359, -123.043, 41.0931, 1.11 ) }
    dend_4 { pt3dadd( -17.7993, -124.929, 41.9638, 1.39 ) }
    dend_4 { pt3dadd( -17.3589, -126.848, 42.552, 1.39 ) }
    dend_4 { pt3dadd( -17.0591, -128.293, 42.872, 1.11 ) }
    dend_4 { pt3dadd( -16.6383, -131.826, 42.8704, 1.39 ) }
    dend_4 { pt3dadd( -17.1979, -144.463, 44.8299, 1.39 ) }
    dend_4 { pt3dadd( -17.7229, -156.927, 47.6219, 1.39 ) }
    dend_4 { pt3dadd( -17.5702, -169.385, 50.4699, 1.39 ) }
    dend_4 { pt3dadd( -18.4624, -181.719, 53.6736, 1.39 ) }
    dend_4 { pt3dadd( -19.8917, -194.127, 56.3961, 1.39 ) }
    dend_4 { pt3dadd( -19.4654, -206.849, 57.7738, 1.39 ) }
    dend_4 { pt3dadd( -18.9284, -219.644, 57.4691, 1.39 ) }
    dend_4 { pt3dadd( -16.5625, -231.993, 55.291, 1.39 ) }
    dend_4 { pt3dadd( -14.7156, -244.229, 52.2008, 1.39 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 36.9403, 7.52059, -69.7084, 0.55 ) }
    dend_39 { pt3dadd( 39.5345, 11.3279, -70.9682, 0.55 ) }
    dend_39 { pt3dadd( 43.9825, 17.6578, -71.9808, 0.55 ) }
    dend_39 { pt3dadd( 51.7458, 28.1755, -73.7911, 0.55 ) }
    dend_39 { pt3dadd( 53.719, 30.6958, -74.6144, 0.55 ) }
    dend_39 { pt3dadd( 68.3485, 48.9811, -82.0207, 0.55 ) }
    dend_39 { pt3dadd( 76.4847, 59.3738, -87.0656, 0.55 ) }
    dend_39 { pt3dadd( 77.3144, 60.3846, -87.5816, 0.83 ) }
    dend_39 { pt3dadd( 79.1621, 62.6063, -88.7054, 0.28 ) }
    dend_39 { pt3dadd( 83.5476, 66.7581, -93.4182, 0.28 ) }
    dend_39 { pt3dadd( 84.3492, 67.3956, -94.5757, 0.28 ) }
    dend_39 { pt3dadd( 86.3149, 68.7182, -97.7251, 0.28 ) }
    dend_39 { pt3dadd( 88.1441, 70.0125, -100.665, 0.28 ) }
    dend_39 { pt3dadd( 90.6042, 71.4668, -104.617, 0.28 ) }
    dend_39 { pt3dadd( 98.4832, 75.3674, -116.384, 0.28 ) }
    dend_39 { pt3dadd( 99.0519, 75.5955, -117.14, 0.83 ) }
    dend_39 { pt3dadd( 100.555, 75.8476, -119.248, 0.28 ) }
    dend_39 { pt3dadd( 101.21, 75.8683, -120.119, 0.83 ) }
    dend_39 { pt3dadd( 110.907, 74.9865, -132.848, 0.28 ) }
    dend_39 { pt3dadd( 112.65, 74.6537, -135.103, 0.28 ) }
    dend_39 { pt3dadd( 114.458, 73.9978, -137.432, 0.28 ) }
    dend_39 { pt3dadd( 124.988, 69.5722, -151.542, 0.28 ) }
    dend_39 { pt3dadd( 131.942, 66.0856, -161.422, 0.28 ) }
    dend_39 { pt3dadd( 132.903, 65.4869, -162.776, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 68/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 36.9403, 7.52059, -69.7084, 0.55 ) }
    dend_38 { pt3dadd( 43.1351, 7.43433, -73.478, 0.55 ) }
    dend_38 { pt3dadd( 45.0241, 7.29399, -74.8562, 1.11 ) }
    dend_38 { pt3dadd( 50.3854, 6.87221, -78.603, 0.55 ) }
    dend_38 { pt3dadd( 51.6113, 6.79271, -79.4066, 0.55 ) }
    dend_38 { pt3dadd( 52.7311, 6.7069, -80.1564, 0.55 ) }
    dend_38 { pt3dadd( 55.2622, 6.53495, -81.7412, 1.11 ) }
    dend_38 { pt3dadd( 64.8165, 6.07723, -87.2404, 0.28 ) }
    dend_38 { pt3dadd( 67.2671, 5.92503, -88.5305, 0.28 ) }
    dend_38 { pt3dadd( 70.8366, 5.73404, -90.0711, 0.55 ) }
    dend_38 { pt3dadd( 76.9497, 5.16639, -92.7279, 0.28 ) }
    dend_38 { pt3dadd( 80.9607, 4.79758, -94.3588, 0.28 ) }
    dend_38 { pt3dadd( 82.6915, 4.68177, -94.9689, 0.55 ) }
    dend_38 { pt3dadd( 84.6788, 4.69558, -95.4266, 0.55 ) }
    dend_38 { pt3dadd( 89.027, 4.87504, -96.4436, 0.28 ) }
    dend_38 { pt3dadd( 96.029, 5.52589, -97.8702, 0.28 ) }
    dend_38 { pt3dadd( 100.597, 5.99847, -99.3417, 0.28 ) }
    dend_38 { pt3dadd( 102.66, 6.19048, -100.21, 0.55 ) }
    dend_38 { pt3dadd( 105.851, 6.47542, -101.643, 0.28 ) }
    dend_38 { pt3dadd( 108.466, 6.70202, -102.876, 0.55 ) }
    dend_38 { pt3dadd( 110.738, 6.91245, -104.01, 0.55 ) }
    dend_38 { pt3dadd( 121.317, 7.94664, -109.011, 0.28 ) }
    dend_38 { pt3dadd( 126.756, 8.12619, -112.007, 0.28 ) }
    dend_38 { pt3dadd( 128.797, 8.08062, -113.222, 0.28 ) }
    dend_38 { pt3dadd( 130.348, 7.95581, -114.226, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 93/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -50.3574, 84.0962, -49.493, 0.28 ) }
    dend_36 { pt3dadd( -49.7467, 86.1774, -47.4903, 0.28 ) }
    dend_36 { pt3dadd( -48.9744, 88.7341, -44.6404, 0.28 ) }
    dend_36 { pt3dadd( -48.4998, 90.3823, -42.8835, 0.55 ) }
    dend_36 { pt3dadd( -48.3391, 91.0498, -42.2803, 0.28 ) }
    dend_36 { pt3dadd( -46.1444, 100.167, -34.0415, 0.28 ) }
    dend_36 { pt3dadd( -45.7351, 101.867, -32.5052, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( -43.9444, 108.882, -25.0939, 0.28 ) }
    dend_36 { pt3dadd( -43.5351, 110.207, -23.4022, 0.83 ) }
    dend_36 { pt3dadd( -40.6095, 118.404, -11.3724, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 3/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -50.3574, 84.0962, -49.493, 0.55 ) }
    dend_35 { pt3dadd( -54.3479, 85.2492, -56.4893, 0.55 ) }
    dend_35 { pt3dadd( -56.7462, 86.0007, -60.2326, 0.55 ) }
    dend_35 { pt3dadd( -58.9062, 86.6802, -64.0279, 0.55 ) }
    dend_35 { pt3dadd( -60.2962, 87.1863, -66.4661, 0.55 ) }
    dend_35 { pt3dadd( -63.2287, 88.3309, -71.3005, 0.55 ) }
    dend_35 { pt3dadd( -65.2309, 89.1592, -74.1801, 0.28 ) }
    dend_35 { pt3dadd( -66.2096, 89.5985, -75.3048, 0.83 ) }
    dend_35 { pt3dadd( -76.0594, 93.9433, -85.2123, 0.83 ) }
    dend_35 { pt3dadd( -77.8813, 94.7281, -86.825, 0.83 ) }
    dend_35 { pt3dadd( -80.426, 95.8327, -88.6969, 0.83 ) }
    dend_35 { pt3dadd( -85.8093, 98.1398, -91.8193, 0.83 ) }
    dend_35 { pt3dadd( -88.1911, 99.1011, -92.9727, 0.28 ) }
    dend_35 { pt3dadd( -91.4291, 100.451, -94.1123, 0.28 ) }
    dend_35 { pt3dadd( -93.2863, 101.258, -94.4164, 0.55 ) }
    dend_35 { pt3dadd( -95.4289, 102.142, -94.8269, 0.28 ) }
    dend_35 { pt3dadd( -98.0065, 103.23, -95.3747, 0.28 ) }
    dend_35 { pt3dadd( -100.852, 104.487, -96.0612, 0.28 ) }
    dend_35 { pt3dadd( -104.171, 106.12, -96.866, 0.28 ) }
    dend_35 { pt3dadd( -105.246, 106.771, -97.0943, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_20, dend_17, dend_0, dend_24, dend_21, dend_19, dend_18, dend_14, dend_1, dend_32, dend_25, dend_23, dend_22, dend_16, dend_15, dend_9, dend_2, dend_40, dend_33, dend_29, dend_26, dend_11, dend_10, dend_6, dend_3, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_28, dend_27, dend_13, dend_12, dend_8, dend_7, dend_5, dend_4, dend_39, dend_38, dend_36, dend_35]}
    ModelViewParmSubset_2 = new SectionList()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_20, dend_17, dend_0, dend_24, dend_21, dend_19, dend_18, dend_14, dend_1, dend_32, dend_25, dend_23, dend_22, dend_16, dend_15, dend_9, dend_2, dend_40, dend_33, dend_29, dend_26, dend_11, dend_10, dend_6, dend_3, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_28, dend_27, dend_13, dend_12, dend_8, dend_7, dend_5, dend_4, dend_39, dend_38, dend_36, dend_35]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_21 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_14 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_23 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_15 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_9 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_40 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_29 OneSecGrp_SectionRef_23.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_3 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_37 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_31 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_30 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_28 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_27 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_7 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_4 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_39 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_38 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_36 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_20 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_17 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_24 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_25 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_32 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_2 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_19 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_26 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_18 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_16 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_8 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_10 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_13 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_41 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_42 OneSecGrp_SectionRef_29.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, axon_1, axon_1, dend_32, dend_32, dend_32, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 3
    dend_14 nseg = 3
    dend_23 nseg = 9
    dend_15 nseg = 9
    dend_9 nseg = 3
    dend_40 nseg = 11
    dend_29 nseg = 5
    dend_11 nseg = 9
    dend_3 nseg = 3
    dend_37 nseg = 3
    dend_34 nseg = 7
    dend_31 nseg = 3
    dend_30 nseg = 3
    dend_28 nseg = 11
    dend_27 nseg = 9
    dend_12 nseg = 3
    dend_7 nseg = 11
    dend_4 nseg = 9
    dend_39 nseg = 9
    dend_38 nseg = 5
    dend_36 nseg = 3
    dend_35 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_BTC_160272643a_0_0


