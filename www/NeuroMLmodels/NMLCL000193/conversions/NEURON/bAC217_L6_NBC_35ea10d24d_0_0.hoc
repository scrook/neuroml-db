// Cell: bAC217_L6_NBC_35ea10d24d_0_0
/*
{
  "id" : "bAC217_L6_NBC_35ea10d24d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.873478, -12.1204, -1.0889, 3.2264", "-0.698655, -10.9282, -0.984246, 5.56239", "-0.523832, -9.73588, -0.879587, 7.69458", "-0.349009, -8.5436, -0.774929, 10.6304", "-0.174186, -7.35132, -0.670271, 12.3889", "6.37175E-4, -6.15904, -0.565612, 13.0429", "0.17546, -4.96676, -0.460954, 13.3962", "0.350283, -3.77448, -0.356295, 13.6031", "0.525106, -2.5822, -0.251637, 13.7768", "0.699929, -1.38992, -0.146979, 13.7572", "0.874752, -0.197642, -0.0423202, 13.4519", "1.04958, 0.994638, 0.0623382, 13.1714", "1.2244, 2.18692, 0.166997, 12.4149", "1.39922, 3.3792, 0.271655, 11.5059", "1.57404, 4.57148, 0.376313, 10.5982", "1.74887, 5.76376, 0.480972, 9.84377", "1.92369, 6.95604, 0.58563, 9.16735", "2.09851, 8.14832, 0.690289, 7.18404", "2.27334, 9.34059, 0.794947, 5.28238", "2.44816, 10.5329, 0.899606, 3.93844", "2.62298, 11.7252, 1.00426, 2.5386" ]
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "3.61398, 12.4986, -0.788928, 2.06", "3.61398, 12.4986, -0.788928, 2.06", "3.93492, 14.029, -0.788928, 2.06", "4.00054, 14.3419, -0.788928, 2.06", "4.40714, 16.2808, -0.788928, 2.06", "4.78343, 18.0751, -0.788928, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.65398, 10.4091, -2.84893, 1.77", "4.18248, 11.5348, -4.5573, 1.62", "4.63372, 12.2707, -5.49899, 1.62", "4.65078, 12.2941, -5.53996, 1.62", "5.05139, 12.7514, -6.50933, 1.47", "5.09187, 12.7875, -6.6016, 1.47", "6.07263, 13.4354, -8.71928, 1.47", "6.97985, 13.7211, -10.4408, 1.92", "8.63081, 14.0626, -13.5657, 1.92", "9.18752, 14.1435, -14.6323, 1.92", "9.75223, 14.1638, -15.7433, 1.92", "10.2935, 14.1511, -16.8271, 1.84", "11.0565, 14.0192, -18.3811, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.85602, 8.41412, 2.46107, 1.62", "-2.85602, 8.41412, 2.46107, 1.62", "-3.42098, 9.03105, 2.65979, 1.62", "-3.47179, 9.08581, 2.67639, 1.62", "-4.69638, 10.4611, 3.05683, 1.84", "-5.68808, 11.5915, 3.35765, 1.84", "-6.75499, 12.8075, 3.68129, 1.62", "-7.93653, 14.1588, 4.04712, 1.62", "-9.29375, 15.7201, 4.48262, 1.92", "-9.98729, 16.5276, 4.70717, 1.92", "-10.035, 16.5856, 4.723, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.07398, -9.26789, 1.15107, 2.21", "6.07398, -9.26789, 1.15107, 2.21", "6.64646, -10.3286, 2.64645, 1.84", "7.39587, -11.7172, 4.604, 1.84", "7.41842, -11.759, 4.6629, 1.84", "8.193, -13.1942, 6.68624, 1.62", "9.00733, -14.703, 8.81333, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.38602, -11.7039, -1.22893, 3.24", "-2.38602, -11.7039, -1.22893, 3.24", "-2.79412, -13.0853, -1.21254, 3.24", "-3.28742, -14.755, -1.19274, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.62298, 11.7252, 1.00426, 0.670433", "4.79915, 26.5665, 1.00426, 0.670433", "6.97531, 41.4078, 1.00426, 0.670433" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "4.78343, 18.0751, -0.788928, 1.47", "5.52277, 19.0957, 0.417078, 1.47", "7.69063, 21.9738, 2.99241, 1.18", "7.73136, 22.0289, 3.02767, 1.18", "8.78357, 23.348, 3.58829, 1.18", "10.0277, 24.8243, 4.00284, 1.18", "10.0704, 24.8738, 4.01317, 1.18", "11.295, 26.2508, 3.96911, 1.4", "12.5265, 27.5876, 3.67632, 1.4", "13.8706, 29.1502, 3.3459, 1.18", "14.7399, 30.2557, 3.11201, 1.18", "14.7918, 30.3272, 3.10362, 1.18", "15.5414, 31.3993, 3.05342, 1.18", "15.5905, 31.473, 3.06109, 1.18", "16.5053, 32.8909, 3.45169, 1.18", "16.5498, 32.9603, 3.48385, 1.18", "17.8487, 34.8087, 4.46511, 1.18", "17.8849, 34.8567, 4.49256, 1.18", "18.8197, 35.9846, 5.1438, 1.18", "19.6945, 36.9976, 5.70471, 1.18", "21.2365, 38.7073, 6.64051, 1.03", "22.5408, 40.2229, 7.3881, 1.03", "22.5796, 40.2714, 7.41064, 1.03", "23.7374, 41.7501, 8.05812, 0.81", "24.6708, 42.9902, 8.54508, 0.81", "24.7068, 43.0422, 8.56509, 0.81", "26.015, 45.1165, 9.28302, 1.03", "27.22, 47.2812, 10.106, 1.03" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "4.78343, 18.0751, -0.788928, 1.11", "3.12332, 21.8976, 0.788037, 1.11", "2.65909, 23.1646, 1.07595, 1.11", "2.21171, 24.3855, 1.35341, 1.03", "1.42228, 26.54, 1.84301, 1.25", "1.38966, 26.629, 1.86324, 1.25", "0.490139, 29.0839, 2.42111, 1.25", "-0.117433, 30.8198, 2.37921, 1.47" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "11.0565, 14.0192, -18.3811, 1.55", "12.5285, 9.52231, -22.0741, 1.55", "12.9831, 8.2561, -22.8263, 0.81", "13.3832, 7.1006, -23.3267, 0.81", "13.9406, 5.42239, -23.9444, 0.81", "13.9684, 5.31663, -23.9867, 0.81", "14.2197, 3.94622, -24.6928, 1.11", "14.3339, 2.97403, -25.0768, 0.81", "14.2935, 1.67956, -25.9342, 0.59", "14.2726, 1.56039, -26.0403, 0.59", "13.8176, -0.0817271, -27.7067, 0.59", "13.2274, -2.00132, -29.6778, 1.25", "13.209, -2.05455, -29.7346, 1.25", "12.498, -4.03038, -31.8234, 1.18", "11.7239, -6.16399, -34.1032, 0.81", "10.9703, -8.37518, -36.369, 0.52", "10.7052, -9.24104, -37.18, 0.52", "10.6842, -9.30916, -37.2379, 0.52", "10.4876, -9.95716, -37.7741, 0.52" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "11.0565, 14.0192, -18.3811, 1.4", "13.4945, 13.2895, -19.1194, 1.4", "16.3824, 12.4251, -19.994, 1.4", "16.4479, 12.4055, -20.0138, 1.4", "17.9657, 11.9511, -20.4735, 1.4", "18.1125, 11.9072, -20.5179, 1.4" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-10.035, 16.5856, 4.723, 0.88", "-10.5292, 17.8707, 5.12818, 0.88", "-10.7807, 18.5944, 5.34381, 0.88", "-11.1481, 19.8107, 5.67758, 0.88", "-11.6929, 21.8041, 6.20004, 0.74", "-11.9947, 23.0988, 6.53986, 0.74", "-12.1523, 23.9175, 6.74534, 1.03", "-12.162, 24.0074, 6.76397, 1.03", "-12.1996, 24.9834, 6.99937, 1.03", "-12.1987, 25.1099, 7.03222, 1.03", "-12.2372, 26.375, 7.45167, 0.88", "-12.4473, 27.664, 8.0512, 1.18", "-12.4681, 27.7316, 8.0886, 1.18", "-12.9751, 28.9885, 8.85053, 1.18", "-13.5591, 30.1569, 9.62643, 0.81", "-14.3532, 31.531, 10.5908, 0.81", "-15.4573, 33.2121, 11.7939, 0.81", "-16.2568, 34.3413, 12.6088, 0.81", "-16.2969, 34.3976, 12.6473, 0.81", "-16.9785, 35.3929, 13.2542, 0.66", "-17.0147, 35.4553, 13.2878, 0.66", "-17.4799, 36.699, 13.7474, 0.66", "-17.5331, 37.0236, 13.8528, 0.66", "-17.5801, 38.0811, 14.2662, 0.96", "-17.5628, 39.2698, 14.7694, 0.96", "-17.5308, 39.7118, 14.9669, 0.96", "-17.4723, 40.3222, 15.2561, 0.96", "-17.2608, 41.8906, 16.0789, 0.81", "-17.0632, 43.1837, 16.7918, 0.81", "-16.8729, 44.21, 17.3953, 0.81", "-16.8556, 44.3097, 17.4624, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-10.035, 16.5856, 4.723, 0.88", "-10.0168, 17.1457, 4.71815, 0.88", "-9.98409, 17.8118, 4.70701, 0.74", "-9.93521, 18.6129, 4.6881, 0.74", "-9.93102, 18.6763, 4.68599, 0.74", "-9.81462, 20.0675, 4.63815, 0.74", "-9.72113, 21.0244, 4.60896, 0.88", "-9.66366, 21.5515, 4.58178, 0.88", "-9.64523, 21.7102, 4.5726, 0.88", "-9.5605, 22.4408, 4.5327, 0.74", "-9.46438, 23.3413, 4.51604, 0.74", "-9.36287, 24.409, 4.5314, 0.74", "-9.28489, 25.4098, 4.57101, 1.62", "-9.21336, 26.4886, 4.62997, 1.62", "-9.15334, 27.7375, 4.73759, 1.33", "-9.12213, 28.6508, 4.84435, 0.96", "-9.10633, 29.5059, 4.96435, 0.96", "-9.09507, 30.2257, 5.08424, 0.96", "-9.09364, 30.2882, 5.09617, 0.96", "-9.07518, 31.2011, 5.27033, 0.96", "-9.0413, 32.2572, 5.45069, 0.74", "-9.0056, 33.0527, 5.55161, 0.74", "-9.00214, 33.1158, 5.55867, 0.74", "-8.96659, 33.7101, 5.5436, 1.03", "-8.96236, 33.782, 5.53374, 1.03", "-8.92795, 34.4243, 5.37883, 1.03", "-8.92579, 34.4851, 5.36112, 1.03", "-8.89365, 35.5818, 4.92177, 1.03", "-8.8555, 37.0722, 4.22465, 1.03", "-8.854, 37.1359, 4.19132, 1.03", "-8.82495, 38.279, 3.55166, 1.03", "-8.8237, 38.3331, 3.51991, 1.03", "-8.80954, 39.4876, 2.85675, 0.88", "-8.80925, 39.5499, 2.82101, 0.88", "-8.81126, 39.9784, 2.6316, 0.88", "-8.81276, 40.0371, 2.60849, 0.88", "-8.831, 40.6065, 2.41995, 0.88", "-8.84173, 40.9539, 2.35399, 0.88", "-8.85466, 41.6433, 2.3102, 0.88", "-8.85489, 41.7068, 2.30672, 0.88", "-8.81987, 42.4546, 2.27787, 0.88", "-8.80286, 42.7508, 2.26783, 0.88", "-8.72725, 43.7514, 2.24251, 0.88", "-8.62934, 44.8126, 2.23308, 1.03", "-8.62212, 44.8849, 2.23459, 1.03", "-8.4819, 46.0956, 2.26031, 1.03" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "9.00733, -14.703, 8.81333, 1.11", "10.6529, -17.3973, 9.50061, 1.11", "11.3449, -18.4862, 9.68463, 1.11", "11.4186, -18.5882, 9.67096, 1.11", "12.0743, -19.3602, 9.46613, 1.33", "12.9968, -20.3012, 9.13446, 1.11", "14.4592, -21.6555, 8.61753, 1.11", "14.5004, -21.6923, 8.59862, 1.11", "16.4883, -23.313, 7.67854, 1.25", "17.9926, -24.4875, 6.97527, 1.55", "19.4386, -25.5128, 6.29393, 1.55", "20.3002, -26.0815, 5.86566, 1.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "9.00733, -14.703, 8.81333, 1.47", "8.12855, -20.6115, 16.6483, 1.47", "7.97914, -22.1083, 18.3688, 1.03", "8.0148, -23.1635, 19.3122, 1.03", "8.25535, -25.0897, 20.7807, 0.88", "8.27404, -25.1739, 20.8391, 0.88", "8.84781, -27.3202, 22.2593, 0.88", "8.87711, -27.3876, 22.2875, 0.88", "10.5329, -30.4851, 23.7508, 0.88", "11.3427, -31.7098, 24.4437, 1.47", "12.9416, -33.7674, 25.7902, 0.88", "12.9994, -33.835, 25.843, 0.88", "14.6234, -35.4467, 27.3866, 0.74", "14.7478, -35.5574, 27.5183, 0.74", "15.9558, -36.4534, 28.9593, 0.74", "16.0321, -36.5014, 29.0476, 0.74", "17.2388, -37.1648, 30.5234, 1.33", "18.182, -37.6855, 31.8257, 0.96", "19.6403, -38.5228, 33.9293, 1.11", "19.6867, -38.5513, 33.9997, 1.11", "20.4462, -39.0957, 35.2312, 1.11", "21.6958, -40.135, 37.124, 0.81", "22.6431, -41.0126, 38.4537, 1.25", "23.3909, -41.9005, 39.5375, 0.88", "23.432, -41.9592, 39.5925, 0.88", "24.2996, -43.5462, 40.7561, 0.81", "24.8277, -45.0632, 41.4815, 0.81", "24.8549, -45.1898, 41.5083, 0.81", "25.0771, -47.2893, 41.743, 0.81", "25.0793, -47.3686, 41.7492, 0.81", "25.0721, -48.821, 41.8141, 0.81", "25.0942, -50.1679, 41.9308, 1.18", "25.171, -51.5134, 42.161, 0.88", "25.4793, -53.0318, 42.7767, 0.59", "25.8803, -54.1595, 43.7373, 0.59", "25.9078, -54.229, 43.8084, 0.59", "26.8082, -56.2487, 46.2356, 0.59", "26.8363, -56.3095, 46.3135, 0.59", "27.9429, -58.5533, 49.0215, 0.81", "28.8909, -60.517, 51.2861, 0.81", "29.4377, -61.736, 52.6413, 0.81", "29.4734, -61.8176, 52.7323, 0.81", "30.2986, -63.8168, 54.9038, 0.74", "31.1478, -65.673, 56.9015, 0.52", "32.2095, -67.7767, 59.066, 0.52", "32.2995, -67.9118, 59.2127, 0.52", "33.6526, -69.555, 61.3077, 0.52", "33.6945, -69.6056, 61.3689, 0.52", "34.3123, -70.3859, 62.2895, 0.52", "34.3967, -70.5234, 62.4292, 0.52", "35.0052, -71.7977, 63.1688, 0.52", "35.1095, -72.0746, 63.2842, 0.52", "35.9855, -74.6239, 64.1222, 0.52", "36.5573, -76.1577, 64.6737, 0.52", "36.7113, -76.5764, 64.831, 0.52", "37.1955, -77.9138, 65.3402, 0.52", "37.2407, -78.0368, 65.3884, 0.52", "38.0902, -79.6914, 66.1504, 0.52", "38.7267, -80.2858, 66.6067, 0.88", "38.8739, -80.3795, 66.6878, 0.88" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-3.28742, -14.755, -1.19274, 0.59", "-4.11658, -14.9925, -1.3543, 0.59", "-5.42414, -15.3981, -1.45103, 0.59", "-7.03627, -15.9313, -1.45235, 0.59", "-7.66901, -16.1596, -1.42414, 0.59", "-9.90682, -17.0823, -1.26443, 0.88", "-10.9965, -17.5891, -1.20737, 0.88", "-12.2059, -18.2211, -1.11772, 0.96", "-13.2291, -18.8071, -1.03615, 1.25", "-14.2185, -19.4419, -0.999987, 1.47", "-15.4898, -20.2349, -1.28, 1.11", "-17.0209, -21.1323, -2.06377, 1.03", "-17.7433, -21.5223, -2.53857, 1.03", "-17.8221, -21.5614, -2.59835, 1.03", "-19.4295, -22.3323, -3.91287, 1.55", "-22.7478, -23.8977, -6.73664, 0.66", "-24.0203, -24.5234, -7.81549, 0.66", "-24.7339, -24.9281, -8.42268, 0.66", "-24.7818, -24.9612, -8.46212, 0.66", "-25.5186, -25.5744, -9.02122, 0.74", "-26.1462, -26.2483, -9.42139, 1.03", "-26.8857, -27.4691, -9.90013, 1.03", "-27.8135, -29.0984, -10.4674, 1.25", "-28.3467, -30.0497, -10.8306, 1.18", "-28.4068, -30.1491, -10.8713, 1.18", "-28.8963, -30.8118, -11.2347, 0.52", "-28.944, -30.8535, -11.2662, 0.52", "-29.8241, -31.193, -11.7641, 0.52", "-29.8871, -31.2023, -11.7924, 0.52", "-30.355, -31.2327, -12.0365, 0.52", "-31.8311, -31.2884, -12.8215, 0.88", "-32.8829, -31.3069, -13.3849, 1.25", "-34.2975, -31.3459, -14.1682, 1.25", "-35.0648, -31.3772, -14.6069, 0.88", "-36.4463, -31.5329, -15.3871, 0.88", "-37.0521, -31.6935, -15.7611, 0.52", "-37.3889, -31.8722, -15.9717, 0.52", "-37.6277, -32.0759, -16.1735, 0.52", "-37.9103, -32.3326, -16.452, 0.52", "-38.437, -32.7798, -17.0234, 0.52", "-39.4398, -33.5783, -18.1348, 0.88", "-40.0898, -34.0739, -18.8732, 1.25", "-41.8969, -35.3593, -20.8296, 1.62", "-43.4086, -36.3781, -22.3196, 1.55", "-44.7306, -37.2208, -23.5313, 0.81", "-44.8045, -37.2659, -23.5935, 0.81", "-45.2192, -37.5316, -23.8948, 0.37", "-46.1763, -38.2389, -24.4893, 0.37", "-47.2933, -39.2906, -24.8934, 0.37", "-47.3401, -39.3441, -24.9007, 0.37", "-48.0219, -40.1323, -25.0166, 1.03", "-48.6873, -40.8845, -25.155, 1.47", "-49.3945, -41.687, -25.314, 0.96", "-49.9437, -42.3141, -25.4488, 0.29", "-51.4426, -43.9987, -25.8307, 0.29", "-53.4555, -46.2058, -26.3282, 0.29", "-54.4646, -47.2578, -26.5624, 0.29", "-55.1561, -47.9373, -26.7385, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.28742, -14.755, -1.19274, 2.36", "-3.37318, -15.0758, -1.23488, 2.36", "-3.68035, -16.1716, -1.33617, 2.36", "-4.2142, -18.0762, -1.51221, 1.99", "-4.72093, -19.884, -1.67932, 1.99", "-5.17218, -21.4939, -1.82812, 2.14", "-5.67173, -23.2762, -1.99285, 3.02", "-5.96723, -24.2524, -2.07408, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.97531, 41.4078, 1.00426, 0.670433", "9.15148, 56.2491, 1.00426, 0.670433", "11.3276, 71.0904, 1.00426, 0.670433" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "27.22, 47.2812, 10.106, 0.74", "26.9772, 50.9443, 11.7938, 0.74", "26.9785, 51.0338, 11.8187, 0.74", "27.0979, 52.2275, 12.1026, 0.74", "27.2639, 53.3083, 12.3291, 0.59", "27.4741, 54.423, 12.5326, 0.59", "27.6644, 55.3444, 12.6792, 0.59", "27.685, 55.4232, 12.6806, 0.59", "27.9834, 56.5268, 12.7528, 0.22", "28.1534, 57.1175, 12.8171, 0.81", "28.3623, 57.8686, 12.9225, 1.03", "28.5576, 58.498, 13.0773, 1.03", "28.9437, 59.6946, 13.4282, 0.81", "29.3725, 60.942, 13.8203, 0.59", "29.9374, 62.5641, 14.3331, 0.59", "29.9739, 62.6651, 14.3718, 0.59", "30.8407, 64.9612, 15.3516, 0.59", "30.8677, 65.0305, 15.3824, 0.59", "31.2013, 65.9266, 15.8155, 0.44", "31.4951, 66.8408, 16.3322, 0.44", "31.9679, 68.8239, 17.4844, 0.44", "32.0623, 69.3806, 17.791, 0.96", "32.1099, 70.0869, 18.1212, 0.96", "32.1496, 71.4518, 18.7325, 0.59", "32.1441, 72.699, 19.2372, 0.29", "32.1211, 73.6325, 19.5549, 0.29", "32.1122, 73.8035, 19.5892, 0.29", "32.0206, 75.594, 19.7914, 0.29", "32.0179, 75.6874, 19.7909, 0.29", "32.0241, 76.7886, 19.581, 0.29", "32.0274, 76.956, 19.5305, 0.81", "32.0168, 77.7592, 19.2516, 0.81", "31.9728, 78.2953, 19.0449, 0.29", "31.7194, 79.2027, 18.6545, 0.29", "31.2754, 80.152, 18.2248, 0.29", "31.1654, 80.3319, 18.1396, 0.29", "30.6077, 81.0829, 17.7302, 0.29", "30.3207, 81.4136, 17.5312, 0.29", "29.0038, 82.703, 16.6978, 0.29", "27.8406, 83.6753, 15.999, 0.29", "27.7658, 83.7343, 15.9566, 0.29", "26.3625, 84.8199, 15.1376, 0.29", "26.2407, 84.9111, 15.0631, 0.29", "25.5245, 85.4271, 14.6081, 0.29", "24.8694, 85.8418, 14.1674, 0.81", "24.0621, 86.2636, 13.6759, 0.81", "22.7504, 97.6942, 15.4661, 0.81", "21.4762, 108.68, 18.9454, 0.81" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "27.22, 47.2812, 10.106, 1.03", "28.8531, 47.7202, 11.3318, 1.03", "29.8412, 48.0098, 12.0267, 0.74", "31.2031, 48.5675, 12.8755, 0.74", "31.2491, 48.5938, 12.9007, 0.74", "32.0585, 49.1619, 13.1893, 0.52", "32.6118, 49.6028, 13.2879, 0.52", "32.6809, 49.6712, 13.2757, 0.52", "33.5705, 50.6847, 13.1141, 0.81", "34.2116, 51.4716, 12.9835, 1.11", "35.3817, 52.8988, 13.0454, 0.66", "35.9299, 53.5766, 13.2054, 0.59", "36.5866, 54.272, 13.6857, 0.59", "37.6984, 55.2887, 14.9332, 0.59", "37.7413, 55.3184, 14.9912, 0.59", "39.0352, 56.0618, 16.8369, 0.59", "39.0765, 56.0835, 16.8992, 0.59", "40.0535, 56.6184, 18.3114, 1.25", "40.0988, 56.6466, 18.3683, 1.25", "40.9944, 57.3309, 19.1797, 0.96", "42.1916, 58.3433, 19.9528, 0.66", "42.2613, 58.4059, 19.9805, 0.66", "43.232, 59.3263, 20.2714, 0.59", "44.2476, 60.3697, 20.4532, 0.59", "45.0997, 61.284, 20.576, 0.59", "45.6722, 61.9522, 20.6272, 0.59", "45.9636, 62.2777, 20.6408, 0.59", "46.3316, 62.6415, 20.6683, 0.81", "46.9865, 63.2053, 20.7331, 0.81", "47.2409, 63.399, 20.7656, 0.81", "48.2314, 64.1237, 20.9383, 0.81", "49.2044, 64.8274, 21.112, 0.44", "50.0518, 65.4317, 21.2638, 0.44", "50.1363, 65.4912, 21.2786, 0.44", "50.9527, 66.0702, 21.4474, 0.81", "51.4367, 66.4289, 21.5559, 0.96", "52.0844, 66.9472, 21.7299, 0.81", "52.1343, 66.9927, 21.7448, 0.81", "52.9339, 67.8483, 21.9441, 0.52", "53.7975, 68.8488, 22.1253, 0.52", "54.24, 69.4038, 22.235, 0.81", "55.0901, 70.5273, 22.4655, 0.52", "55.2194, 70.6988, 22.5096, 0.52", "56.6903, 72.61, 23.064, 0.37", "56.7326, 72.6628, 23.0805, 0.37", "57.7019, 73.8277, 23.4536, 0.37", "58.2292, 74.4281, 23.6704, 1.03", "59.4038, 75.6734, 24.1747, 1.03", "59.4506, 75.7195, 24.1964, 1.03", "60.2202, 76.4072, 24.6079, 1.03", "60.2687, 76.4513, 24.6298, 1.03", "60.9993, 77.1537, 24.8753, 0.66", "61.0543, 77.2081, 24.8921, 0.66", "61.5309, 77.7327, 24.994, 0.66", "61.6036, 77.8168, 25.011, 0.66", "62.058, 78.393, 25.1389, 0.66", "63.0109, 79.6249, 25.4163, 0.29" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-0.117433, 30.8198, 2.37921, 0.96", "-0.109913, 31.3525, 2.38817, 0.96", "-0.16166, 32.4515, 2.40504, 0.74", "-0.356394, 33.8749, 2.45031, 0.74", "-0.367528, 33.9368, 2.45254, 0.74", "-0.652578, 35.1846, 2.51026, 0.66", "-0.948027, 36.3407, 2.57072, 0.66", "-1.00388, 36.5035, 2.5877, 0.66", "-1.5542, 37.491, 2.74802, 1.03", "-1.58988, 37.5397, 2.76185, 1.03", "-2.08491, 38.1438, 3.01521, 1.03", "-2.12797, 38.1931, 3.0445, 1.03", "-2.59457, 38.7182, 3.39845, 0.81", "-3.46412, 39.7804, 4.19021, 0.81", "-4.07203, 40.5868, 4.81272, 0.81", "-4.73451, 41.5214, 5.61026, 0.66", "-5.33648, 42.4415, 6.43473, 0.66", "-5.36572, 42.4908, 6.47794, 0.66", "-5.95222, 43.6594, 7.44561, 1.03", "-6.26123, 44.4128, 8.0483, 1.03", "-6.65179, 45.5107, 8.92856, 0.96", "-6.80384, 46.0542, 9.3602, 0.96", "-6.9715, 46.863, 9.95389, 0.52", "-7.10651, 47.7014, 10.5345, 0.52", "-7.11168, 47.7548, 10.5664, 0.52", "-7.14479, 48.9501, 11.2079, 1.11", "-7.1256, 49.8705, 11.5866, 1.11", "-7.07109, 50.8222, 12.0006, 1.03", "-7.06694, 50.8792, 12.0263, 1.03", "-7.07272, 51.5588, 12.3284, 0.66", "-7.08112, 51.6258, 12.3564, 0.66", "-7.39459, 52.3435, 12.6457, 0.44", "-7.92417, 52.9938, 12.9937, 0.44", "-8.15031, 53.1889, 13.1498, 0.44", "-8.67064, 53.634, 13.6911, 0.44", "-8.78757, 53.7487, 13.8628, 0.44", "-9.28534, 54.3912, 14.8156, 0.44", "-9.30206, 54.4293, 14.8733, 0.44", "-9.44544, 55.269, 16.0343, 0.74", "-9.40623, 56.3789, 17.5319, 0.52", "-9.29914, 57.0643, 18.3736, 0.66", "-9.17484, 57.6303, 19.0199, 0.66", "-8.86358, 58.7584, 20.1447, 1.47", "-8.74113, 59.1988, 20.5291, 1.47", "-8.26781, 61.0052, 21.7381, 0.66", "-8.051, 61.9854, 22.2641, 0.66", "-8.02622, 62.1234, 22.333, 0.66", "-7.92231, 63.3134, 22.8804, 0.66", "-7.92127, 63.3799, 22.9107, 0.66", "-7.91717, 65.202, 23.7833, 0.66", "-7.91868, 65.2589, 23.8093, 0.66", "-7.97858, 66.1195, 24.3197, 0.66", "-8.08251, 67.3609, 25.1597, 0.66", "-8.20473, 68.5804, 26.0621, 0.88", "-8.21725, 68.7666, 26.1928, 0.88", "-8.21985, 69.7803, 26.8983, 0.88", "-8.16159, 71.2106, 27.793, 1.11", "-8.11963, 71.718, 28.0767, 0.88", "-8.04741, 72.4641, 28.4638, 0.59", "-7.99528, 73.8408, 29.0922, 0.59", "-8.0141, 74.9108, 29.5826, 0.44", "-8.06047, 75.6262, 29.9015, 0.44", "-8.07777, 75.736, 29.9421, 0.44", "-8.34999, 76.5789, 30.2638, 0.44", "-8.55009, 76.9587, 30.417, 0.44", "-8.82388, 77.3179, 30.5499, 0.44", "-8.96906, 77.4999, 30.5981, 0.44", "-9.16616, 77.9374, 30.6866, 0.74", "-9.35019, 78.8237, 30.8254, 0.96", "-9.34819, 78.8864, 30.8318, 0.96", "-9.28518, 79.3428, 30.8676, 0.96", "-9.26987, 79.4145, 30.8717, 0.96", "-9.00332, 80.5563, 30.9266, 0.44", "-8.989, 80.6283, 30.93, 0.44", "-8.89709, 81.5579, 30.9834, 0.44", "-8.89532, 81.6694, 30.9903, 0.44", "-8.93478, 82.4489, 31.0236, 0.44", "-9.02042, 83.2142, 31.0426, 0.96", "-9.22079, 84.3907, 31.0727, 0.96", "-9.55513, 85.8299, 31.1338, 0.96", "-9.78456, 86.6257, 31.1784, 0.96", "-9.99429, 87.3263, 31.2209, 0.44", "-10.3365, 88.4441, 31.2956, 0.44", "-10.7467, 89.8135, 31.3941, 0.44", "-11.0582, 90.9322, 31.4925, 0.44", "-11.0865, 91.0466, 31.5051, 0.44", "-11.2638, 91.8768, 31.6281, 0.44", "-11.3851, 92.5385, 31.7536, 0.74", "-11.4683, 93.0877, 31.8693, 0.81", "-11.5958, 94.0182, 32.0766, 0.81", "-11.6085, 94.1195, 32.1006, 0.81", "-11.7886, 94.9719, 32.3297, 0.29", "-11.9075, 95.3182, 32.4398, 0.29", "-11.9723, 95.4751, 32.4897, 0.29", "-12.209, 95.9906, 32.6429, 0.29", "-12.3036, 96.175, 32.6923, 0.29", "-12.5471, 96.6478, 32.8046, 0.29", "-12.5987, 96.7433, 32.8245, 0.29", "-13.0497, 97.6077, 32.9942, 0.29", "-13.2805, 98.0541, 33.0874, 0.29", "-13.3172, 98.127, 33.1033, 0.29", "-13.4529, 98.3883, 33.1667, 0.88", "-13.7437, 99.0641, 33.3183, 0.88", "-14.1536, 100.029, 33.5051, 0.88", "-14.3925, 100.549, 33.6, 0.88", "-14.4241, 100.614, 33.611, 0.88", "-14.9378, 101.599, 33.7686, 0.29", "-15.7366, 103.07, 33.9869, 0.29", "-16.1045, 103.743, 34.0627, 0.59", "-16.5027, 104.456, 34.1167, 0.59", "-16.8091, 105.001, 34.1427, 0.29", "-17.1924, 105.646, 34.1675, 0.29", "-17.2725, 105.767, 34.1718, 0.29", "-17.7499, 106.39, 34.2087, 0.29", "-17.8121, 106.48, 34.2175, 0.29", "-18.2056, 107.077, 34.2729, 0.29", "-18.3579, 107.305, 34.2994, 0.29", "-18.6758, 107.782, 34.4264, 0.29", "-18.7202, 107.848, 34.4507, 0.29", "-19.2683, 108.627, 34.7991, 0.29", "-19.4901, 108.934, 34.9447, 1.11", "-19.9633, 109.576, 35.2609, 1.33", "-20.6874, 110.582, 35.7593, 0.74", "-21.2027, 111.34, 36.0932, 0.44", "-21.7249, 112.157, 36.4004, 0.44", "-21.8441, 112.355, 36.4619, 0.44", "-22.0272, 112.676, 36.5382, 0.44", "-22.103, 112.812, 36.5487, 0.44", "-22.6821, 113.865, 36.4916, 0.44", "-23.0787, 114.584, 36.4314, 1.11", "-23.4729, 115.303, 36.3596, 1.55", "-23.7706, 115.875, 36.3052, 1.55", "-24.4049, 117.135, 36.195, 0.22", "-24.7883, 117.943, 36.1381, 0.22", "-25.1663, 118.789, 36.1021, 0.22", "-25.2073, 118.892, 36.0983, 0.22", "-25.5335, 119.832, 36.0855, 0.22", "-25.6265, 120.13, 36.0967, 0.22", "-25.8236, 120.864, 36.179, 0.22", "-25.9906, 121.391, 36.2475, 0.96", "-26.0899, 121.674, 36.2869, 0.96", "-26.2685, 122.114, 36.3702, 0.22", "-26.5182, 122.642, 36.4952, 0.22", "-26.6073, 122.83, 36.5434, 0.22", "-27.3166, 124.366, 36.9567, 0.22", "-27.3722, 124.504, 37.0019, 0.22", "-27.6464, 125.258, 37.2798, 0.81", "-27.6673, 125.323, 37.3058, 0.81", "-27.8857, 126.072, 37.6345, 1.33", "-28.0087, 126.538, 37.8573, 1.33", "-28.3061, 127.445, 38.3927, 0.15", "-28.4843, 127.881, 38.6674, 0.15", "-28.5301, 127.966, 38.7194, 0.15", "-28.9906, 128.722, 39.1854, 0.15", "-29.0596, 128.819, 39.2462, 0.15", "-30.5578, 130.736, 40.4247, 0.15", "-30.664, 130.86, 40.4861, 0.15", "-32.105, 132.364, 41.1081, 0.15", "-32.2182, 132.472, 41.144, 1.03", "-32.7756, 132.94, 41.2505, 1.03", "-32.8317, 132.983, 41.2559, 1.03", "-34.2164, 133.867, 41.1027, 0.15", "-35.3422, 134.53, 40.9148, 0.15", "-35.4849, 134.596, 40.8725, 0.59", "-36.0012, 134.839, 40.7168, 0.59", "-39.8435, 144.31, 42.7632, 0.59", "-45.7569, 152.645, 44.2677, 0.59", "-51.9444, 160.261, 47.3397, 0.59", "-58.2436, 167.91, 50.0904, 0.59", "-64.8944, 174.991, 53.3505, 0.59", "-70.0971, 183.406, 56.3612, 0.59", "-75.3928, 192.007, 58.63, 0.59" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-0.117433, 30.8198, 2.37921, 0.66", "-0.76932, 31.5921, 1.91768, 0.66", "-1.78507, 32.3923, 1.25872, 0.52", "-2.41397, 32.8009, 0.908936, 0.52", "-2.47693, 32.8409, 0.878936, 0.52", "-3.63821, 33.5768, 0.366281, 0.52", "-3.78755, 33.6756, 0.301857, 0.52", "-5.54889, 34.9599, -0.424813, 0.88", "-6.20852, 35.5414, -0.654785, 0.96", "-6.88798, 36.3771, -0.854077, 0.96", "-6.93225, 36.4456, -0.864538, 0.96", "-7.5036, 37.5536, -0.983157, 0.66", "-8.19284, 39.0759, -1.13087, 0.66", "-8.81446, 40.6423, -1.24901, 0.66", "-9.73392, 42.8337, -1.40627, 0.66", "-9.7693, 42.9081, -1.41318, 0.66", "-10.6041, 44.4319, -1.56392, 0.44", "-11.2134, 45.372, -1.65498, 0.44", "-11.863, 46.1836, -1.74284, 0.88", "-12.9263, 47.3331, -1.89207, 0.88", "-13.8629, 48.2795, -2.01198, 0.44", "-14.4996, 48.933, -2.07979, 0.96", "-15.1395, 49.5874, -2.12573, 1.25", "-15.9852, 50.4617, -2.18539, 1.25", "-17.0395, 51.5516, -2.17728, 0.52", "-18.0097, 52.5846, -2.06432, 0.29", "-18.1874, 52.7871, -2.01984, 0.29", "-18.8082, 53.5302, -1.81767, 0.29", "-19.2425, 54.0969, -1.63767, 0.29", "-20.0566, 55.2751, -1.21422, 0.29", "-20.6221, 56.2178, -0.859578, 0.29", "-20.9592, 56.8935, -0.641404, 0.29", "-21.1946, 57.4592, -0.496843, 0.29", "-21.574, 58.5863, -0.280403, 0.66", "-21.8147, 59.4267, -0.156876, 0.96", "-22.1362, 60.6558, -0.0447359, 0.96", "-22.328, 61.4309, 0.0339186, 0.96", "-22.523, 62.2102, 0.122007, 0.52", "-22.6829, 62.79, 0.19633, 0.37", "-22.8457, 63.2784, 0.315026, 0.37", "-22.9133, 63.4393, 0.375485, 0.37", "-23.3391, 64.2045, 0.774227, 0.37", "-23.5215, 64.4728, 0.937592, 0.37", "-23.9012, 64.9816, 1.25463, 0.37", "-24.831, 66.1784, 1.99168, 0.37", "-24.9686, 66.3543, 2.0977, 0.37", "-25.6995, 67.2799, 2.5559, 0.37", "-26.1431, 67.8337, 2.75951, 0.66", "-26.7166, 68.5731, 2.93513, 0.66", "-27.5139, 69.6763, 3.02963, 0.66", "-27.5599, 69.7442, 3.02547, 0.66", "-28.5428, 71.3411, 2.87379, 0.29", "-29.0153, 72.1839, 2.75332, 0.29", "-29.1335, 72.4112, 2.71428, 0.29", "-29.6059, 73.4169, 2.53119, 0.88", "-29.9325, 74.2204, 2.39165, 0.88", "-30.1117, 74.718, 2.35659, 0.88", "-30.3225, 75.4008, 2.38861, 0.37", "-30.3482, 75.4922, 2.39425, 0.37", "-30.5213, 76.0702, 2.44811, 0.37", "-30.6022, 76.3157, 2.48375, 0.37", "-31.1466, 77.7066, 2.74235, 0.37", "-31.1795, 77.7817, 2.75397, 0.37", "-31.4561, 78.3665, 2.83431, 1.11", "-32.1302, 79.7066, 2.9903, 1.11", "-32.7956, 80.9553, 3.11627, 1.11", "-33.5095, 82.2426, 3.17183, 1.11", "-34.0586, 83.2033, 3.16219, 1.11", "-34.3021, 83.6195, 3.14086, 0.44", "-34.9704, 84.6091, 3.06965, 0.44", "-35.1575, 84.8575, 3.04861, 0.44", "-36.1502, 86.0842, 2.96201, 0.44", "-36.2032, 86.1464, 2.96064, 0.44", "-36.915, 86.968, 3.01182, 0.44", "-38.9268, 89.2828, 3.26129, 0.44", "-39.3789, 89.7951, 3.33851, 1.33", "-39.9948, 90.5296, 3.47876, 1.62", "-40.7534, 91.5274, 3.71758, 0.96", "-41.2255, 92.2132, 3.88062, 0.37", "-41.9048, 93.3077, 4.14064, 0.37", "-41.9483, 93.3891, 4.15966, 0.37", "-42.9636, 95.385, 4.5986, 0.37", "-43.7584, 97.0267, 4.92675, 0.37", "-44.1961, 97.9679, 5.09769, 0.74", "-44.4266, 98.467, 5.1775, 0.29", "-44.506, 98.6436, 5.20588, 0.29", "-45.3232, 100.497, 5.50165, 0.29", "-45.3909, 100.659, 5.52672, 0.29", "-45.7432, 101.523, 5.64997, 1.55", "-46.1079, 102.472, 5.78359, 1.62", "-46.4194, 103.288, 5.89566, 1.03", "-46.4499, 103.364, 5.90595, 1.03", "-46.7259, 104.024, 5.99262, 0.37", "-46.7587, 104.099, 6.00203, 0.37", "-47.1941, 105.039, 6.11116, 0.37", "-47.7262, 106.115, 6.23581, 1.11", "-48.1595, 106.965, 6.34787, 1.11", "-48.3856, 107.398, 6.41221, 0.52", "-48.4708, 107.571, 6.43943, 0.52", "-48.7926, 108.291, 6.55301, 0.52", "-48.9308, 108.628, 6.6063, 0.52", "-49.1694, 109.274, 6.70623, 0.52", "-49.3624, 109.823, 6.78745, 1.11", "-49.8365, 111.213, 6.98302, 1.11", "-50.0855, 111.91, 7.07703, 0.37", "-50.4491, 112.881, 7.20156, 0.37", "-50.5489, 113.12, 7.23102, 0.37", "-51.0013, 114.093, 7.34368, 0.37", "-51.1823, 114.443, 7.38412, 0.37", "-51.7746, 115.444, 7.50638, 0.37", "-52.1641, 116.058, 7.58277, 0.88", "-52.5999, 116.713, 7.66489, 0.88", "-52.6462, 116.781, 7.67342, 0.88", "-52.7998, 116.997, 7.70247, 0.29", "-52.9012, 117.139, 7.72235, 0.29", "-53.7036, 118.29, 7.88653, 0.29", "-53.7501, 118.357, 7.89139, 0.29", "-54.324, 119.158, 7.9063, 0.81", "-54.7312, 119.698, 7.89816, 1.11", "-54.9793, 119.987, 7.88757, 1.11", "-55.0363, 120.045, 7.88377, 1.11", "-55.8678, 120.746, 7.81642, 0.22", "-56.4481, 121.189, 7.78046, 0.22", "-56.5491, 121.258, 7.7752, 0.22", "-57.4349, 121.875, 7.75004, 0.22", "-57.6378, 122.028, 7.74833, 0.22", "-58.2808, 122.56, 7.76797, 0.22", "-58.677, 122.944, 7.81099, 0.22", "-58.7519, 123.032, 7.8177, 0.66", "-59.0946, 123.522, 7.8126, 0.66", "-59.4271, 124.107, 7.77397, 0.15", "-59.5507, 124.323, 7.75818, 0.15", "-60.0377, 125.181, 7.68771, 0.15", "-60.1274, 125.333, 7.68319, 0.15", "-60.5725, 126.053, 7.69663, 0.59", "-61.3405, 127.158, 7.79151, 0.59", "-61.7555, 127.715, 7.88248, 0.59", "-61.8122, 127.788, 7.89829, 0.59", "-62.2926, 128.386, 8.0614, 0.22", "-62.3433, 128.448, 8.07898, 0.22", "-62.854, 129.045, 8.25937, 0.22", "-63.1356, 129.367, 8.33445, 0.22", "-63.8383, 130.176, 8.47187, 0.22", "-64.1353, 130.533, 8.51771, 0.22", "-64.3986, 130.85, 8.54802, 0.74", "-65.0917, 131.687, 8.62076, 0.74", "-65.5173, 132.205, 8.66279, 0.22", "-65.6198, 132.333, 8.67282, 0.22", "-67.2197, 134.286, 8.84243, 0.22", "-67.4649, 134.571, 8.84862, 0.81", "-68.2961, 135.5, 8.82586, 0.81", "-68.35, 135.561, 8.81858, 0.81", "-68.608, 135.848, 8.76011, 0.15", "-69.5535, 136.876, 8.46837, 0.15", "-70.5688, 137.952, 8.02835, 0.66", "-70.8872, 138.312, 7.889, 0.66", "-71.7191, 139.329, 7.52121, 0.15", "-71.9993, 139.695, 7.40835, 0.37", "-72.184, 139.945, 7.32569, 0.15", "-72.2266, 140.011, 7.3039, 0.15", "-72.8924, 141.117, 7.06453, 0.15", "-73.07, 141.413, 7.00089, 1.03", "-73.4203, 141.954, 6.83515, 1.03", "-74.046, 142.931, 6.4794, 0.22", "-74.0879, 142.996, 6.45241, 0.22", "-74.941, 144.315, 5.7805, 0.22", "-74.9804, 144.378, 5.7468, 0.22", "-75.6258, 145.447, 5.2112, 0.88", "-75.925, 145.974, 5.0246, 0.88", "-75.9635, 146.047, 5.02134, 0.88", "-76.2871, 146.668, 5.13673, 0.22", "-77.0047, 148.092, 5.58027, 0.22", "-77.0398, 148.162, 5.60643, 0.22", "-77.6337, 149.314, 6.11849, 0.22", "-78.4142, 150.708, 6.74101, 0.22", "-79.0865, 151.848, 7.24681, 0.22", "-79.5808, 152.665, 7.60183, 1.11", "-79.6722, 152.812, 7.66366, 1.11", "-79.9302, 153.22, 7.81054, 0.22", "-80.7448, 154.484, 8.08455, 0.22", "-80.9913, 154.843, 8.11688, 0.66", "-81.5772, 155.648, 8.17941, 0.66" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "18.1125, 11.9072, -20.5179, 0.81", "18.6207, 11.8882, -21.7048, 0.81", "18.6447, 11.891, -21.7529, 0.81", "18.9097, 11.9363, -22.2599, 0.81", "19.0324, 11.9711, -22.474, 0.81", "19.4454, 12.1169, -23.1578, 0.52", "21.0531, 12.8032, -25.6527, 0.81", "21.5089, 13.0737, -26.2623, 0.81", "21.5406, 13.094, -26.3013, 0.81", "22.0504, 13.4627, -26.8948, 0.81", "22.1131, 13.5077, -26.9614, 0.81", "22.4799, 13.7261, -27.2891, 0.81", "23.1529, 13.9495, -27.6231, 0.52", "23.4059, 13.9563, -28.083, 0.52", "23.4686, 13.9568, -28.206, 0.52", "23.7876, 13.9233, -28.9153, 0.81", "24.314, 13.8402, -30.2015, 0.81", "24.3297, 13.8366, -30.2458, 0.81", "25.109, 13.6605, -32.8219, 0.74", "25.3356, 13.6536, -33.6077, 1.84" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "18.1125, 11.9072, -20.5179, 1.4", "18.1575, 11.9383, -20.468, 1.4", "21.2746, 14.0173, -17.6187, 0.96", "21.5023, 14.1644, -17.4583, 0.96", "23.1798, 15.204, -16.532, 0.96", "23.2799, 15.2658, -16.4871, 0.96", "25.0821, 16.3744, -15.7708, 0.96", "25.1564, 16.4202, -15.7524, 0.96", "26.6384, 17.3672, -15.6881, 1.18", "27.8074, 18.1661, -15.6427, 0.88", "28.8926, 18.9574, -15.6094, 0.88", "28.9641, 19.0111, -15.6075, 0.88", "29.6059, 19.4977, -15.6348, 0.88", "30.5055, 20.1853, -15.712, 0.88", "30.576, 20.2398, -15.7204, 0.88", "32.7985, 21.9431, -16.0034, 0.88", "32.8995, 22.0184, -16.0161, 0.88", "35.2259, 23.6395, -16.3772, 1.18", "36.8864, 24.7445, -16.6712, 1.18", "37.2998, 25.0101, -16.7507, 1.18", "39.1006, 26.2127, -17.1252, 1.18", "39.4211, 26.4346, -17.1991, 1.18", "41.5762, 27.8518, -17.6292, 1.18", "41.8191, 27.988, -17.6611, 1.18", "42.4445, 28.2685, -17.7234, 0.52", "44.0621, 28.8243, -17.8004, 0.52", "44.1486, 28.8449, -17.7995, 0.52", "45.7902, 29.1351, -17.678, 0.88", "47.6075, 29.3388, -17.4024, 0.88", "47.9348, 29.3691, -17.3591, 0.88", "49.2007, 29.4742, -17.2118, 1.25", "49.4773, 29.5046, -17.1842, 1.25", "50.6665, 29.7564, -17.0949, 1.25", "50.8363, 29.8082, -17.0863, 1.25", "52.7447, 30.5088, -17.1028, 1.11", "54.6654, 31.2684, -17.1841, 1.11", "56.2048, 31.8737, -17.2702, 0.81", "57.9296, 32.53, -17.3757, 0.81", "58.2072, 32.6234, -17.3889, 0.81", "60.6894, 33.3587, -17.4589, 0.81", "60.82, 33.3926, -17.4603, 0.81", "63.596, 34.0046, -17.4521, 0.81", "63.7289, 34.0281, -17.448, 0.81", "66.6924, 34.4661, -17.2769, 0.81", "67.8867, 34.6566, -17.2465, 0.96", "68.1757, 34.7055, -17.2448, 0.96", "69.4752, 34.9522, -17.2909, 0.74", "71.2076, 35.3284, -17.4168, 0.74", "71.2938, 35.3486, -17.4246, 0.74", "74.8889, 36.2258, -17.9355, 0.74", "75.9901, 36.4933, -18.1085, 1.4", "78.2465, 37.0332, -18.4871, 1.77", "79.5835, 37.351, -18.7354, 1.77", "79.9481, 37.4353, -18.806, 1.77", "81.8803, 37.8712, -19.1248, 1.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-16.8556, 44.3097, 17.4624, 0.44", "-18.2428, 44.727, 18.2149, 0.44", "-19.5159, 45.1584, 18.8663, 0.44", "-20.936, 45.6724, 19.5722, 0.44", "-20.9879, 45.6917, 19.5968, 0.44", "-22.5441, 46.2792, 20.3185, 0.74", "-23.1782, 46.5033, 20.5979, 0.74", "-23.5821, 46.656, 20.7442, 0.37", "-23.6366, 46.6733, 20.764, 0.37", "-24.3929, 46.8628, 20.9671, 0.37", "-24.4417, 46.8717, 20.9818, 0.37", "-25.3046, 46.9868, 21.2563, 0.37", "-25.3787, 46.9971, 21.283, 0.37", "-26.4501, 47.1961, 21.7479, 0.37", "-26.5203, 47.2127, 21.7814, 0.37", "-27.5685, 47.5438, 22.2845, 0.37", "-28.1038, 47.7588, 22.511, 0.37", "-28.1621, 47.791, 22.5309, 0.37", "-29.0081, 48.2972, 22.7341, 0.37", "-29.0592, 48.3292, 22.7434, 0.37", "-29.8555, 48.7997, 22.8409, 0.59", "-30.6364, 49.2342, 22.8861, 0.59", "-31.6473, 49.7346, 22.928, 0.81", "-32.5198, 50.151, 22.9529, 0.81", "-33.3433, 50.542, 22.9607, 0.29", "-33.7399, 50.7365, 22.9729, 0.29", "-33.855, 50.7957, 22.9861, 0.29", "-34.7474, 51.2153, 23.156, 0.29", "-34.8771, 51.2682, 23.1863, 0.29", "-35.6497, 51.5473, 23.3711, 0.59", "-36.2424, 51.7221, 23.5008, 0.59", "-37.5575, 52.0407, 23.7935, 0.15", "-38.4825, 52.2246, 23.9858, 0.37", "-38.7939, 52.2703, 24.0464, 0.74", "-39.3642, 52.3181, 24.1714, 0.37", "-39.8282, 52.3141, 24.2877, 0.37", "-39.894, 52.3112, 24.3078, 0.37", "-40.32, 52.3325, 24.4765, 0.22", "-40.4027, 52.4, 24.5618, 0.22", "-40.9102, 53.0521, 25.2687, 0.22", "-40.9491, 53.106, 25.3251, 0.22", "-41.3521, 53.6818, 25.8799, 0.22", "-41.4664, 53.8037, 26.0355, 0.22", "-41.7207, 53.9992, 26.3549, 0.22", "-41.7608, 54.0218, 26.3947, 0.22", "-42.6839, 54.4539, 27.1817, 0.74", "-43.0581, 54.6014, 27.4631, 0.74", "-44.6551, 55.1296, 28.5426, 0.59", "-45.7671, 55.467, 29.2182, 0.37", "-46.8764, 55.729, 29.8628, 0.37", "-46.936, 55.7338, 29.8971, 0.37", "-47.498, 55.6724, 30.2579, 0.37", "-47.5973, 55.6543, 30.324, 0.37", "-48.406, 55.4576, 30.859, 0.37", "-49.4905, 55.2026, 31.7212, 0.88", "-50.9079, 54.9543, 33.1597, 0.88", "-52.0784, 54.918, 34.7866, 0.37", "-52.5738, 54.9805, 35.6889, 0.37", "-52.6135, 54.9895, 35.7711, 0.37", "-53.1429, 55.2452, 37.1615, 0.37", "-53.4484, 55.6554, 38.2501, 0.37", "-53.7385, 56.6907, 40.0674, 0.37", "-53.7382, 56.7226, 40.12, 0.37", "-60.8483, 57.3325, 44.947, 0.37" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-16.8556, 44.3097, 17.4624, 0.52", "-17.202, 45.3173, 18.2955, 0.52", "-17.5625, 46.1197, 18.8556, 0.52", "-17.5881, 46.1628, 18.8875, 0.52", "-18.2012, 46.9909, 19.5322, 0.52", "-18.253, 47.0548, 19.5865, 0.52", "-18.8757, 47.854, 20.2599, 0.52", "-19.5173, 48.6316, 20.9035, 0.74", "-20.2493, 49.5517, 21.6609, 0.74", "-20.9517, 50.5853, 22.51, 0.59", "-21.4734, 51.4093, 23.2946, 0.59", "-21.92, 52.1364, 24.0924, 0.66", "-21.9438, 52.1775, 24.1424, 0.66", "-22.2045, 52.692, 24.8155, 0.66", "-22.7661, 54.0341, 26.5944, 0.52", "-23.2555, 55.5398, 28.6361, 0.52", "-23.4329, 56.2762, 29.6434, 0.52", "-23.4436, 56.3371, 29.728, 0.52", "-23.5097, 56.8568, 30.3871, 0.52", "-23.516, 56.9638, 30.5111, 0.52", "-23.4306, 57.9376, 31.3423, 0.96", "-23.2608, 58.792, 31.8354, 0.96", "-23.1997, 59.3311, 32.0954, 0.52", "-23.2167, 60.3263, 32.5602, 0.52", "-23.2298, 60.3904, 32.5863, 0.52", "-23.518, 61.3281, 32.8996, 0.74", "-23.5486, 61.3996, 32.9187, 0.74", "-24.0057, 62.3803, 33.2697, 0.74", "-24.0297, 62.4398, 33.2976, 0.74", "-24.3334, 63.3485, 33.7813, 0.37", "-24.5285, 63.8732, 34.1274, 0.37", "-24.5456, 63.9218, 34.158, 0.37", "-24.9939, 65.3049, 34.992, 0.37", "-25.2133, 65.9838, 35.4457, 0.59", "-25.6371, 67.1088, 36.2019, 0.81", "-26.3817, 68.6114, 37.3026, 0.52", "-26.9209, 69.5164, 37.992, 0.52", "-27.5939, 70.4708, 38.7195, 0.52", "-28.4402, 71.4355, 39.4038, 0.29", "-29.142, 72.0508, 39.8819, 0.29", "-30.2799, 72.7991, 40.5247, 0.29", "-30.3819, 72.8546, 40.5746, 0.29", "-30.9986, 73.1112, 40.8809, 0.15", "-31.9934, 73.4207, 41.3086, 0.15", "-33.1509, 73.7989, 41.6891, 0.81", "-33.7258, 74.0125, 41.8998, 0.81", "-37.8923, 82.2111, 45.7425, 0.81" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-8.4819, 46.0956, 2.26031, 0.66", "-8.30638, 46.3551, 2.26125, 0.66", "-8.09181, 46.744, 2.2206, 0.66", "-8.02707, 46.8939, 2.19999, 0.66", "-7.65476, 47.882, 2.05267, 0.66", "-7.63731, 47.9471, 2.04388, 0.66", "-7.42792, 48.9517, 1.90208, 0.66", "-7.35133, 49.4651, 1.81287, 0.66", "-7.31345, 49.9751, 1.73137, 0.29", "-7.31125, 50.0426, 1.72176, 0.29", "-7.29017, 51.1214, 1.5472, 0.29", "-7.27088, 51.6087, 1.47384, 0.29", "-7.26751, 51.6763, 1.46556, 0.29", "-7.16291, 52.8736, 1.31526, 0.29", "-7.14497, 53.0327, 1.29505, 0.29", "-6.96561, 54.4147, 1.13103, 0.29", "-6.95481, 54.4818, 1.12499, 0.29", "-6.88347, 54.9766, 1.0811, 0.96", "-6.76458, 55.9041, 1.02776, 0.96", "-6.75357, 55.9814, 1.02694, 0.96", "-6.6682, 56.546, 1.04188, 0.81", "-6.48982, 57.7736, 1.11824, 0.59", "-6.26734, 59.2588, 1.21045, 0.52", "-6.16417, 59.9183, 1.22076, 0.37", "-5.95286, 61.4039, 1.18165, 0.37", "-5.84633, 62.1995, 1.13718, 1.03", "-5.76401, 62.8521, 1.08315, 1.03", "-5.75717, 62.9098, 1.07659, 1.03", "-5.57711, 64.3161, 0.829456, 0.52", "-5.47932, 65.2336, 0.611732, 0.52", "-5.46633, 65.3925, 0.568503, 0.52", "-5.36063, 66.7907, 0.252603, 0.44", "-5.35693, 66.8483, 0.243818, 0.44", "-5.32289, 68.2443, 0.225203, 1.33", "-5.32821, 69.452, 0.394597, 1.4", "-5.33069, 69.5529, 0.418532, 1.4", "-5.38216, 70.5226, 0.724246, 0.22", "-5.48317, 71.7143, 1.20889, 0.22", "-5.62611, 72.9908, 1.79364, 0.59", "-5.72905, 73.5855, 2.10426, 0.59", "-5.84959, 74.1504, 2.39063, 0.22", "-5.86518, 74.2094, 2.41989, 0.22", "-6.00221, 74.6395, 2.61818, 0.22", "-6.20163, 75.1616, 2.85825, 0.22", "-6.48457, 75.8255, 3.09611, 0.22", "-6.5453, 75.9555, 3.14333, 0.22", "-7.01883, 76.9634, 3.51105, 0.81", "-7.0454, 77.0222, 3.53112, 0.81", "-7.35218, 77.6988, 3.74441, 0.81", "-7.46611, 77.9685, 3.8144, 0.81", "-7.76891, 78.7265, 3.98544, 0.22", "-7.80386, 78.8146, 4.00032, 0.22", "-8.15544, 79.6972, 4.08649, 0.22", "-8.32419, 80.1194, 4.11703, 0.22", "-8.60826, 80.8291, 4.151, 0.22", "-8.87379, 81.5038, 4.11339, 1.03", "-9.11401, 82.1182, 4.03349, 1.03", "-9.38717, 82.8289, 3.90221, 0.66", "-9.75, 83.816, 3.67069, 0.22", "-10.0569, 84.7211, 3.42821, 0.22", "-10.543, 86.216, 2.95769, 0.22", "-10.5635, 86.2862, 2.93255, 0.22", "-10.6935, 86.7684, 2.75418, 0.88", "-10.7976, 87.1582, 2.61965, 0.88", "-11.0095, 87.9536, 2.38084, 0.22", "-11.0248, 88.0082, 2.36797, 0.22", "-11.5283, 89.5432, 2.15593, 0.22", "-11.5707, 89.6525, 2.14054, 0.22", "-11.8573, 90.2691, 2.0038, 0.22", "-11.8899, 90.3251, 1.98601, 0.22", "-12.2189, 90.803, 1.80488, 0.96", "-12.6711, 91.4201, 1.55484, 0.96", "-12.7145, 91.478, 1.53048, 0.96", "-13.2836, 92.3599, 1.1209, 0.37", "-13.6438, 93.0595, 0.802876, 0.29", "-14.0169, 93.939, 0.4479, 0.15", "-14.0374, 93.9992, 0.425273, 0.15", "-14.2189, 94.578, 0.229109, 0.15", "-14.4922, 95.4856, -0.0452517, 1.03", "-14.7572, 96.424, -0.271559, 1.03", "-14.8752, 96.8975, -0.377685, 1.03", "-14.988, 97.4047, -0.476059, 0.22", "-15.212, 98.488, -0.638229, 0.22", "-15.2248, 98.5546, -0.644693, 0.22", "-15.3467, 99.2876, -0.663882, 0.96", "-15.4554, 100.094, -0.667799, 1.11", "-15.4829, 100.688, -0.645657, 0.22", "-15.4602, 101.335, -0.594356, 0.22", "-15.3928, 101.827, -0.563652, 0.22", "-15.3449, 102.106, -0.552894, 0.22", "-15.3352, 102.173, -0.549481, 0.22", "-15.1703, 103.586, -0.522814, 0.22", "-15.1509, 103.688, -0.529045, 0.22", "-14.9541, 104.499, -0.668554, 0.22", "-14.9348, 104.573, -0.685036, 0.22", "-14.4078, 106.546, -1.15664, 0.22", "-13.787, 108.838, -1.74574, 0.22", "-13.1806, 111.033, -2.37522, 0.22", "-12.708, 112.688, -2.86758, 1.33", "-12.5095, 113.334, -3.07147, 1.33" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-8.4819, 46.0956, 2.26031, 0.74", "-8.99228, 47.3028, 2.38771, 0.74", "-9.35044, 48.0562, 2.42474, 0.37", "-9.69792, 48.7614, 2.44363, 0.37", "-9.80965, 48.9866, 2.4454, 0.37", "-10.2901, 49.9479, 2.44106, 0.22", "-10.3256, 50.0196, 2.44008, 0.22", "-10.9064, 51.1284, 2.34733, 0.22", "-10.9456, 51.1975, 2.34066, 0.22", "-11.3676, 51.8987, 2.2809, 0.22", "-11.5283, 52.1546, 2.26194, 0.88", "-11.8931, 52.7586, 2.2336, 0.88", "-12.1046, 53.126, 2.22454, 0.44", "-12.3047, 53.5594, 2.23148, 0.29", "-12.4679, 53.9763, 2.24325, 0.29", "-12.492, 54.0525, 2.25221, 0.29", "-12.7069, 54.8679, 2.39466, 0.29", "-12.7914, 55.2213, 2.46737, 0.29", "-13.0482, 56.435, 2.73426, 0.29", "-13.0697, 56.5367, 2.75577, 0.29", "-13.31, 57.4289, 2.95097, 0.29", "-13.4671, 57.884, 3.06136, 0.29", "-13.7271, 58.4538, 3.19948, 0.29", "-13.8121, 58.5992, 3.22893, 0.29", "-14.2007, 59.1402, 3.31369, 0.88", "-14.8125, 59.9305, 3.36792, 0.88", "-14.8555, 59.983, 3.36624, 0.88", "-15.2134, 60.4289, 3.34365, 0.44", "-15.6487, 60.9919, 3.30596, 0.37", "-15.7469, 61.1398, 3.29485, 0.37", "-16.2485, 62.0124, 3.23085, 0.37", "-16.3829, 62.2844, 3.2096, 0.37", "-16.7015, 63.0012, 3.17414, 0.37", "-16.7653, 63.1608, 3.17164, 0.37", "-17.226, 64.5463, 3.06105, 0.37", "-17.3096, 64.8356, 3.01905, 1.11", "-17.331, 64.9111, 3.00216, 1.11", "-17.5708, 65.6663, 2.77586, 1.11", "-17.6031, 65.7456, 2.74481, 1.11", "-18.1783, 66.8572, 2.22189, 0.74", "-18.4637, 67.2714, 1.97788, 0.29", "-18.8982, 67.8184, 1.63874, 0.29", "-19.0054, 67.94, 1.55882, 0.29", "-19.5234, 68.4591, 1.19935, 0.74", "-19.7661, 68.7088, 1.05554, 0.74", "-20.0476, 68.9967, 0.927105, 0.29", "-20.1019, 69.062, 0.897304, 0.29", "-20.6573, 69.9283, 0.549377, 0.22", "-20.6975, 70.0057, 0.523558, 0.22", "-21.1179, 70.9367, 0.29802, 0.22", "-21.1817, 71.0937, 0.271621, 0.22", "-21.5237, 71.8346, 0.178597, 0.74", "-21.9308, 72.6348, 0.103559, 0.74", "-22.482, 73.6139, 0.0807106, 0.74", "-22.8419, 74.1904, 0.0797675, 0.44", "-23.1825, 74.6791, 0.0889267, 0.22", "-24.2772, 76.1425, 0.139108, 0.22", "-24.3531, 76.2357, 0.144636, 0.22", "-24.8779, 76.8284, 0.173413, 0.81", "-25.4964, 77.5355, 0.250687, 0.96", "-25.5674, 77.6214, 0.262099, 0.96", "-25.9956, 78.1823, 0.371046, 0.96", "-26.0368, 78.2486, 0.386894, 0.96", "-26.2927, 78.7099, 0.482827, 0.29", "-27.1227, 80.387, 0.771738, 0.29", "-27.1575, 80.4577, 0.785392, 0.29", "-27.4073, 80.9195, 0.86138, 0.88", "-27.8494, 81.691, 0.968133, 0.88", "-28.3681, 82.5228, 1.04661, 0.88", "-28.7197, 83.0463, 1.0744, 0.29", "-29.1819, 83.6749, 1.07129, 0.15", "-30.155, 84.9285, 1.05437, 0.15", "-30.5894, 85.4544, 1.03976, 0.44", "-31.1675, 86.1303, 1.00911, 0.44", "-31.2192, 86.19, 1.00556, 0.44", "-31.4661, 86.4723, 0.980514, 0.81", "-32.5667, 87.6714, 0.883224, 0.81", "-33.1489, 88.2592, 0.850785, 0.22", "-33.791, 88.8636, 0.821111, 0.22", "-33.9747, 89.0293, 0.814939, 0.22", "-34.9719, 89.9033, 0.781193, 0.22", "-36.0349, 90.7965, 0.749854, 0.22", "-36.0955, 90.8463, 0.749429, 0.22", "-36.7589, 91.4167, 0.752491, 0.22", "-36.9339, 91.5927, 0.751018, 0.74", "-37.4008, 92.2171, 0.736062, 0.74", "-37.5384, 92.4807, 0.723137, 0.74", "-37.755, 92.9662, 0.702424, 0.74", "-37.8961, 93.2662, 0.696738, 0.74", "-38.3892, 94.1995, 0.680531, 0.22", "-38.6999, 94.7822, 0.639623, 0.22", "-39.2735, 95.8248, 0.552063, 0.22", "-39.7229, 96.6572, 0.479686, 0.88", "-40.3801, 97.8598, 0.394327, 1.25", "-41.0219, 99.0097, 0.322846, 1.25", "-41.9171, 100.546, 0.231426, 1.25", "-42.5413, 101.578, 0.161853, 0.59", "-43.1433, 102.577, 0.0491155, 0.59", "-43.7737, 103.586, -0.126759, 0.15", "-44.3531, 104.46, -0.308065, 0.15", "-44.6351, 104.86, -0.402823, 0.37", "-44.9462, 105.232, -0.510172, 0.37", "-45.789, 106.162, -0.891633, 0.22", "-46.5012, 106.941, -1.39869, 0.22", "-46.5475, 107.0, -1.44776, 0.22", "-46.6914, 107.217, -1.64167, 0.74", "-47.063, 107.866, -2.19224, 0.74", "-47.0958, 107.925, -2.23343, 0.74", "-47.8463, 109.251, -3.16916, 0.15", "-48.1547, 109.776, -3.54947, 0.15", "-48.2417, 109.913, -3.64032, 0.15", "-48.6176, 110.487, -4.01927, 0.15", "-49.5121, 111.817, -4.86923, 0.15", "-50.2732, 112.891, -5.4963, 0.88", "-50.8359, 113.625, -5.84899, 0.88", "-51.6613, 114.714, -6.40179, 0.66", "-57.2296, 124.495, -8.09284, 0.66" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "20.3002, -26.0815, 5.86566, 1.03", "20.7241, -26.6682, 5.50046, 1.03", "20.767, -26.7235, 5.47738, 1.03", "21.1571, -27.2248, 5.29499, 1.03", "21.3202, -27.42, 5.24072, 1.03", "22.2419, -28.4752, 5.00954, 1.03", "22.2725, -28.5084, 5.00347, 1.03", "23.4678, -29.7449, 4.87374, 0.88", "23.5378, -29.8123, 4.87252, 0.88", "24.6407, -30.8, 4.98048, 0.88", "25.0596, -31.1455, 5.07769, 0.88", "25.4407, -31.4332, 5.21304, 1.25", "25.9369, -31.7826, 5.42472, 1.25", "26.9074, -32.3999, 5.90952, 0.74", "27.8551, -32.9819, 6.37825, 0.74", "28.6476, -33.4497, 6.76519, 0.74", "28.6784, -33.4681, 6.77874, 0.74", "29.1179, -33.7328, 6.95435, 1.47", "29.7343, -34.0861, 7.16048, 1.47", "31.076, -34.8287, 7.4063, 0.66", "31.6857, -35.1616, 7.44619, 0.66", "32.4144, -35.5675, 7.43912, 1.33", "32.453, -35.5902, 7.43737, 1.33", "33.0528, -35.9764, 7.39795, 1.33", "34.1237, -36.6723, 7.30924, 1.18", "34.9595, -37.2266, 7.22059, 1.18", "35.0118, -37.2625, 7.21451, 1.18", "35.8911, -37.8875, 7.11069, 0.88", "37.3326, -38.9929, 6.9584, 0.88" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "20.3002, -26.0815, 5.86566, 0.74", "20.3315, -26.0949, 5.91491, 0.74", "20.7409, -26.2533, 6.7755, 0.74", "20.7654, -26.2635, 6.82905, 0.74", "21.8039, -26.7098, 8.85936, 0.74", "23.3848, -27.3164, 11.642, 0.74", "23.415, -27.3272, 11.6924, 0.74", "25.1075, -27.8456, 14.2605, 1.4", "25.5603, -27.9701, 14.9097, 0.74", "26.5338, -28.1722, 16.1069, 0.74", "27.7981, -28.3184, 17.3226, 0.74", "27.8677, -28.3241, 17.37, 0.74", "29.3436, -28.5622, 18.2591, 0.74", "29.389, -28.5731, 18.2804, 0.74", "30.1067, -28.7591, 18.6724, 0.74", "30.1945, -28.7812, 18.7205, 0.74", "31.7368, -29.1368, 19.4576, 0.74", "33.314, -29.4722, 20.1935, 0.74", "34.1219, -29.6385, 20.562, 0.74", "35.9864, -30.0112, 21.3329, 0.74", "37.6919, -30.3791, 21.9667, 0.74", "39.1664, -30.6945, 22.4496, 1.25", "40.3639, -30.9629, 22.8282, 0.52", "40.8998, -31.0952, 23.0019, 0.52", "42.0819, -31.438, 23.4087, 0.66", "43.6912, -31.9857, 23.999, 0.66", "43.7506, -32.0084, 24.0248, 0.66", "45.7058, -32.6995, 24.9207, 0.66", "46.2173, -32.8525, 25.1298, 0.96", "46.9598, -33.06, 25.4056, 0.66", "48.0956, -33.3221, 25.7767, 0.52", "48.1519, -33.3368, 25.7908, 0.52", "49.3213, -33.7412, 26.0287, 0.52", "50.3378, -34.1957, 26.2214, 0.52", "51.209, -34.6553, 26.4956, 0.52", "51.2506, -34.6803, 26.5136, 0.52", "52.287, -35.3029, 26.9853, 0.52", "53.1889, -35.8147, 27.4236, 0.52", "54.2429, -36.3867, 27.9458, 1.25", "55.222, -36.7821, 28.5193, 0.52", "56.3796, -37.1502, 29.2291, 0.52", "58.1127, -37.6101, 30.301, 0.52", "58.23, -37.6296, 30.3709, 0.52", "59.0285, -37.7085, 30.8194, 0.52", "61.7444, -37.6846, 32.1956, 0.37", "62.2637, -37.6309, 32.4501, 0.37", "62.3759, -37.6059, 32.5065, 0.37", "63.3084, -37.3184, 33.0066, 0.37", "63.5743, -37.2399, 33.1621, 0.37", "64.858, -36.864, 33.9499, 0.37", "64.9101, -36.8513, 33.9764, 0.37", "65.9947, -36.5598, 34.6016, 0.37", "66.044, -36.5462, 34.6327, 0.37", "67.3823, -36.193, 35.5916, 0.29", "67.4554, -36.1734, 35.6418, 0.29", "68.0947, -35.9869, 36.0621, 0.29", "68.1474, -35.9719, 36.086, 0.29", "68.7181, -35.793, 36.2602, 0.29", "68.8432, -35.7554, 36.2896, 0.29", "69.8668, -35.4695, 36.465, 0.29", "69.9779, -35.4348, 36.493, 0.29", "71.071, -35.0669, 36.8225, 0.29", "72.3868, -34.5588, 37.2512, 0.29", "72.4394, -34.5366, 37.2697, 0.29", "73.7564, -33.9411, 37.7618, 0.29", "74.8865, -33.3643, 38.2283, 0.59", "75.514, -33.0161, 38.5007, 0.74", "76.1435, -32.6032, 38.8021, 0.74", "76.1898, -32.5705, 38.823, 0.74", "82.6449, -33.1009, 44.3698, 0.74", "88.4499, -33.1785, 50.6126, 0.74", "94.2394, -34.7654, 56.6887, 0.74" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "38.8739, -80.3795, 66.6878, 0.52", "39.2181, -80.7719, 66.8906, 0.52", "39.3625, -80.9691, 66.9788, 0.66", "39.5678, -81.3154, 67.1113, 0.52", "39.7683, -81.7115, 67.2495, 0.29", "39.9804, -82.231, 67.3994, 0.44", "39.9897, -82.2574, 67.4061, 0.44", "40.0686, -82.5721, 67.4393, 0.44", "40.1016, -82.889, 67.4544, 0.74", "40.1016, -82.9888, 67.4548, 0.74", "40.0899, -83.3126, 67.4396, 0.74", "40.0894, -83.3413, 67.4355, 0.74", "40.1288, -83.7422, 67.4099, 0.74", "40.1958, -84.0613, 67.4875, 0.44", "40.204, -84.0865, 67.4983, 0.44", "40.3441, -84.4736, 67.6866, 0.37", "40.3596, -84.5122, 67.7086, 0.37", "40.6635, -85.2093, 68.1624, 0.37", "41.1218, -86.1441, 68.8967, 0.44", "41.2693, -86.4235, 69.1483, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "38.8739, -80.3795, 66.6878, 0.66", "39.7671, -80.5469, 67.2065, 0.66", "40.2266, -80.6283, 67.571, 0.29", "40.8586, -80.7402, 68.0725, 0.29", "40.9192, -80.7509, 68.1205, 0.29", "41.7192, -80.8926, 68.7552, 0.29", "41.8285, -80.912, 68.8418, 0.29", "42.8359, -81.1002, 69.4003, 0.74", "50.2979, -81.7007, 75.6413, 0.74", "58.9153, -83.3356, 79.9998, 0.74", "66.8109, -85.9212, 85.2229, 0.74", "75.4821, -89.1347, 88.6612, 0.74" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-55.1561, -47.9373, -26.7385, 0.29", "-57.9881, -49.047, -28.473, 0.29", "-59.6559, -49.7607, -29.5297, 0.29", "-61.2688, -50.4902, -30.5343, 0.29", "-63.6945, -51.609, -32.0318, 0.88", "-64.6619, -52.0751, -32.6831, 1.18", "-65.7262, -52.598, -33.4342, 0.59", "-67.1284, -53.4154, -34.5282, 0.52", "-67.5011, -53.6453, -34.9058, 0.88", "-67.5469, -53.6748, -34.9582, 0.88", "-68.8074, -54.5033, -36.3395, 0.37", "-68.8524, -54.5318, -36.3931, 0.37", "-70.8618, -55.8186, -38.8216, 0.37", "-71.5843, -56.3286, -39.5794, 1.25", "-71.6266, -56.3594, -39.6179, 1.25", "-72.4909, -56.9945, -40.2513, 1.25", "-72.5555, -57.0408, -40.2864, 1.25", "-73.2367, -57.572, -40.5843, 0.29", "-74.738, -58.836, -40.9741, 0.15", "-75.2026, -59.2454, -41.1202, 0.59", "-75.5601, -59.5628, -41.2555, 0.59", "-76.3264, -60.2414, -41.5888, 0.15", "-77.4091, -61.1396, -42.0567, 0.15", "-77.4654, -61.1811, -42.0863, 0.15", "-78.522, -61.9069, -42.6403, 0.88", "-78.5796, -61.9456, -42.6712, 0.88", "-79.3381, -62.4505, -43.0807, 0.88", "-80.4107, -63.1368, -43.7174, 0.22", "-82.4253, -64.4468, -44.9711, 0.22", "-83.6134, -65.3912, -45.8797, 0.22", "-85.4895, -67.2897, -47.8518, 0.22", "-85.5261, -67.3343, -47.9019, 0.22", "-86.4481, -69.1467, -50.1449, 0.22", "-86.6709, -70.2248, -51.3219, 0.22", "-86.4835, -72.942, -53.8252, 0.22", "-85.6313, -75.4384, -55.66, 0.22", "-85.6024, -75.491, -55.6886, 0.22", "-83.2615, -79.1317, -56.8131, 0.22", "-79.1618, -84.5911, -57.2428, 0.22", "-79.1184, -84.6507, -57.2204, 0.22", "-77.7559, -86.5343, -56.0254, 0.22", "-77.7147, -86.5939, -55.9767, 0.22", "-76.4656, -88.5321, -54.1324, 0.22", "-76.4419, -88.5769, -54.0759, 0.22", "-75.0959, -92.8838, -48.649, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-55.1561, -47.9373, -26.7385, 1.18", "-57.2809, -51.061, -26.4252, 1.18", "-59.0439, -53.1446, -26.6686, 1.18", "-60.262, -54.4468, -26.9878, 0.52", "-61.7215, -55.9296, -27.4632, 0.52", "-61.7806, -55.9885, -27.4843, 0.52", "-62.97, -57.0956, -28.0546, 0.52", "-64.457, -58.4372, -28.7862, 0.52", "-64.5749, -58.5237, -28.8748, 0.52", "-65.5424, -59.0794, -29.8068, 0.37", "-65.5952, -59.1112, -29.8654, 0.37", "-67.0624, -60.1071, -31.4195, 1.11", "-67.7642, -60.6549, -32.1413, 1.11", "-67.8253, -60.7061, -32.1981, 1.11", "-69.4485, -62.0479, -33.6512, 0.22", "-70.496, -62.8999, -34.5267, 0.22", "-71.3296, -63.644, -35.1731, 0.29", "-71.4132, -63.7272, -35.2293, 0.29", "-71.8712, -64.1428, -35.584, 0.81", "-71.9338, -64.1949, -35.6382, 0.81", "-72.5977, -64.7562, -36.2223, 0.81", "-73.8786, -65.8253, -37.4462, 0.37", "-73.9299, -65.87, -37.4983, 0.37", "-76.0503, -67.871, -39.6669, 0.15", "-76.8721, -68.8372, -40.5941, 0.96", "-77.5075, -69.7318, -41.3592, 1.4", "-78.0132, -70.7555, -42.1294, 0.52", "-78.0249, -70.8205, -42.1656, 0.52", "-78.0069, -72.1125, -42.7598, 0.29", "-77.4806, -74.366, -43.4887, 0.29", "-77.4514, -74.4591, -43.5141, 0.29", "-76.7829, -76.3095, -43.9542, 0.29", "-75.7516, -79.2854, -44.5373, 0.29", "-75.6956, -79.4634, -44.5676, 0.29", "-75.0573, -81.9145, -44.8444, 0.29", "-75.0066, -82.1402, -44.8595, 0.29", "-74.7251, -83.6255, -44.8938, 0.15", "-74.4758, -85.7999, -44.7266, 0.15", "-74.476, -85.8867, -44.7129, 0.15", "-74.5925, -87.6416, -44.44, 0.88" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-5.96723, -24.2524, -2.07408, 0.88", "-8.24862, -25.4195, -6.52037, 0.88", "-9.01147, -25.8423, -7.89456, 0.88", "-9.8583, -26.3116, -9.42006, 0.88", "-9.89272, -26.3307, -9.48203, 0.88", "-10.4777, -26.6549, -10.5359, 0.88", "-11.9748, -27.4847, -13.2327, 1.4", "-12.3342, -27.7493, -13.6868, 1.4" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-5.96723, -24.2524, -2.07408, 0.81", "-7.45622, -27.1878, -0.863969, 0.81", "-8.52633, -29.2974, 0.0057212, 0.81", "-9.32425, -30.8704, 0.654191, 0.81", "-10.0302, -32.2621, 1.22792, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.96723, -24.2524, -2.07408, 2.5", "-5.86391, -24.9482, -1.92676, 2.5", "-5.61827, -26.7445, -1.65706, 1.03", "-5.39057, -28.1939, -1.56061, 0.59", "-5.1464, -29.3713, -1.56143, 0.59", "-5.12575, -29.44, -1.57077, 0.59", "-4.86454, -30.2095, -1.72107, 0.59", "-4.31315, -31.4928, -2.14989, 0.59", "-3.35483, -33.2935, -2.99676, 1.03", "-2.47235, -34.7544, -3.79277, 0.81", "-0.759315, -37.3005, -5.17046, 0.81", "-0.726766, -37.3463, -5.19453, 0.81", "1.10849, -39.8102, -6.47161, 0.81", "3.01519, -42.4306, -7.72484, 0.81", "3.05161, -42.488, -7.74722, 0.81", "3.89876, -44.2377, -8.26911, 0.52", "4.34906, -45.4865, -8.52896, 0.52", "4.47477, -45.9435, -8.59401, 0.74", "4.93121, -48.5536, -8.77407, 1.11", "5.27933, -51.4182, -8.91505, 1.11", "5.50115, -53.3555, -9.04021, 0.81", "5.5197, -53.5096, -9.05274, 0.81", "5.92966, -55.8314, -9.17489, 0.59", "5.94529, -55.8915, -9.17707, 0.59", "6.53973, -57.5887, -9.17317, 0.59", "6.56403, -57.6455, -9.1709, 0.59", "7.26913, -59.2025, -9.07937, 0.59", "8.13546, -61.1814, -8.99824, 0.44", "8.70303, -62.5551, -9.00186, 0.44", "8.89415, -63.0967, -9.01047, 1.03", "8.91463, -63.1661, -9.01233, 1.03", "9.19518, -64.2675, -9.08645, 1.03", "9.21082, -64.3477, -9.10076, 1.03", "9.41821, -65.2408, -9.37733, 0.52", "9.82738, -66.3833, -9.8078, 0.52", "9.92142, -66.5848, -9.88998, 0.52", "10.4727, -67.603, -10.3164, 0.74", "11.0742, -68.6598, -10.7383, 0.88", "11.6588, -69.6835, -11.0747, 0.66", "12.1597, -70.5912, -11.3034, 0.44", "12.699, -71.7109, -11.5079, 0.44", "12.7246, -71.778, -11.5161, 0.44", "13.259, -73.5044, -11.637, 0.44", "13.5026, -74.4743, -11.675, 0.88", "13.7323, -75.5917, -11.7241, 1.18", "14.1246, -77.4409, -11.7998, 0.88", "14.422, -78.6896, -11.8406, 1.18", "14.4423, -78.759, -11.8438, 1.18", "15.156, -80.8001, -11.9711, 0.66", "15.1878, -80.8759, -11.9781, 0.66", "16.2437, -82.7992, -12.192, 0.66", "16.2839, -82.858, -12.1995, 0.66", "17.4105, -84.2597, -12.4251, 0.66", "17.4553, -84.3142, -12.4355, 0.66", "18.1094, -85.1047, -12.6308, 0.29", "18.7096, -85.972, -12.9175, 0.29", "18.7439, -86.03, -12.9418, 0.29", "19.2551, -87.0111, -13.3601, 0.81", "19.8456, -88.2031, -13.8929, 1.18", "20.3458, -89.2079, -14.3491, 0.88", "20.966, -90.464, -14.9177, 0.29", "21.3699, -91.2615, -15.2786, 0.29", "21.5185, -91.5293, -15.4004, 0.29", "22.4031, -92.9322, -15.9942, 0.66", "22.9058, -93.636, -16.255, 1.03", "23.4629, -94.3926, -16.4547, 0.37", "23.5047, -94.4498, -16.4644, 0.37", "24.1341, -95.3932, -16.5375, 0.37", "24.6947, -96.2534, -16.4837, 0.81", "25.1168, -96.9312, -16.368, 0.81", "25.8059, -97.972, -16.1495, 0.52", "25.8458, -98.0296, -16.1361, 0.52", "26.9159, -99.4414, -15.8163, 0.88", "28.0865, -100.844, -15.49, 0.52", "28.4625, -101.215, -15.3852, 0.52", "29.2264, -101.685, -15.1693, 0.74", "29.427, -101.754, -15.1172, 0.74", "30.2968, -101.856, -14.8378, 0.52", "30.3722, -101.852, -14.8139, 0.52", "32.1307, -101.555, -14.2587, 0.29", "34.1078, -101.094, -13.5415, 0.22", "34.4348, -100.998, -13.4048, 0.37", "36.2116, -100.411, -12.6113, 0.81", "39.3393, -110.092, -14.433, 0.81", "42.4752, -119.869, -15.6372, 0.81", "44.5031, -130.013, -15.1394, 0.81", "47.4426, -139.927, -15.3534, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "21.4762, 108.68, 18.9454, 0.29", "17.6254, 114.766, 24.0613, 0.29", "12.5452, 119.481, 29.4197, 0.29", "7.96637, 124.32, 35.117, 0.29", "2.39178, 129.663, 39.3288, 0.29", "-2.42494, 136.198, 42.9008, 0.29" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "21.4762, 108.68, 18.9454, 0.74", "21.4336, 119.471, 19.299, 0.29", "20.7861, 130.08, 21.0048, 0.29", "20.0331, 140.825, 21.5717, 0.29" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "63.0109, 79.6249, 25.4163, 0.37", "63.0484, 79.7107, 25.4421, 0.37", "63.468, 80.5531, 25.6275, 0.37", "63.5263, 80.6562, 25.6479, 0.37", "63.8836, 81.3313, 25.8535, 0.59", "64.2825, 82.0956, 26.1121, 0.59", "64.3708, 82.2659, 26.1703, 0.59", "64.9887, 83.4127, 26.5734, 0.29", "65.2476, 83.8279, 26.7293, 0.29", "66.3298, 85.4084, 27.3007, 0.15", "66.4, 85.5073, 27.3416, 0.15", "66.7228, 85.9552, 27.5536, 0.15", "67.0277, 86.382, 27.7636, 0.15", "67.7181, 87.3363, 28.2272, 0.15", "68.0511, 87.7864, 28.4189, 0.44", "68.8849, 88.8436, 28.825, 0.29", "69.4799, 89.6197, 29.1285, 0.29", "69.7617, 90.0056, 29.2832, 0.29", "70.3883, 90.9717, 29.6514, 0.29", "70.7268, 91.6028, 29.857, 0.74", "76.9013, 101.731, 32.3143, 0.74", "83.9194, 111.528, 33.4822, 0.74", "90.3334, 121.765, 34.6652, 0.74" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "63.0109, 79.6249, 25.4163, 0.29", "63.1272, 79.5412, 25.4257, 0.29", "63.2169, 79.4956, 25.4328, 0.29", "63.9774, 79.1482, 25.4919, 0.29", "64.186, 79.0661, 25.508, 0.29", "64.8112, 78.8387, 25.556, 0.29", "65.0965, 78.7349, 25.5778, 0.29", "66.833, 78.1409, 25.7106, 0.29", "66.9284, 78.1109, 25.7178, 0.29", "67.8464, 77.8778, 25.787, 0.88", "67.9578, 77.8533, 25.7954, 0.88", "81.7325, 74.6168, 27.8817, 0.88", "94.5394, 69.9734, 32.3643, 0.88", "107.193, 66.8237, 38.2391, 0.88", "120.343, 64.1916, 43.1768, 0.88" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "25.3356, 13.6536, -33.6077, 0.74", "24.9497, 16.1639, -37.2043, 0.74", "24.9734, 17.0912, -38.8135, 0.74", "24.9779, 17.1404, -38.9027, 0.74", "25.0964, 17.6823, -39.963, 0.74", "25.2758, 18.3402, -41.2852, 0.74", "25.6887, 19.5325, -43.835, 0.59", "26.5237, 21.4054, -47.8953, 0.59", "26.586, 21.5183, -48.1602, 0.59", "27.3625, 22.8504, -51.2928, 0.59", "27.3865, 22.8879, -51.3837, 0.59", "28.2741, 24.1748, -54.6364, 0.29", "28.2995, 24.2138, -54.7264, 0.29", "28.4912, 24.6227, -55.5517, 0.29", "28.7074, 25.4018, -57.0818, 0.29", "28.6995, 25.4436, -57.1584, 0.29", "28.3947, 25.6494, -57.8479, 0.29", "28.2061, 25.6726, -58.1015, 0.29", "27.6309, 25.74, -58.8796, 0.29", "26.9715, 25.7895, -59.7596, 0.74", "26.4454, 25.8875, -61.0333, 0.74", "25.6246, 26.3669, -64.2225, 0.37", "25.6137, 26.3823, -64.3215, 0.37", "25.5432, 26.5906, -65.6375, 0.37", "25.5394, 26.6131, -65.7888, 0.37", "25.4026, 27.6095, -71.7271, 0.37", "25.3868, 27.7948, -72.7547, 1.03", "25.103, 28.9041, -78.5699, 1.03", "25.0939, 28.922, -78.6687, 1.03", "24.6484, 29.5559, -81.9927, 0.29", "24.4264, 29.8268, -83.1725, 0.29", "24.3645, 29.8986, -83.3928, 0.29", "23.8435, 30.5997, -85.1091, 0.29", "23.8186, 30.6474, -85.196, 0.29", "23.1813, 32.3379, -88.0789, 0.29", "23.1684, 32.3923, -88.1647, 0.29", "22.97, 33.7057, -90.3975, 1.33", "22.926, 34.1901, -91.2292, 1.33", "22.8878, 36.0457, -94.4713, 0.29", "22.8415, 36.708, -95.6867, 0.29", "22.8208, 36.7791, -95.8229, 0.29", "22.5075, 37.4572, -97.1164, 1.03", "22.3428, 37.6859, -97.5596, 1.03", "22.3156, 37.7199, -97.6514, 1.03", "21.8384, 38.4461, -99.3518, 0.22", "21.3253, 39.2723, -101.379, 0.22", "21.3023, 39.3072, -101.472, 0.22", "20.7791, 40.0982, -103.61, 1.18", "19.5191, 42.1236, -108.774, 0.22", "19.0911, 42.9989, -110.924, 0.22", "18.6936, 44.1527, -113.707, 1.18", "18.5157, 45.4112, -117.162, 0.15", "18.5109, 45.5135, -117.463, 0.15", "18.5547, 46.1921, -119.263, 0.15", "18.7137, 47.4438, -122.176, 0.15", "18.9255, 48.6478, -124.872, 1.62", "19.6323, 51.8302, -131.191, 0.22", "19.6452, 51.8772, -131.281, 0.22", "20.1197, 53.5434, -134.544, 0.22", "20.3563, 54.349, -136.183, 1.25", "20.4012, 54.6618, -136.71, 1.25", "20.4057, 54.7394, -136.799, 1.25" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "25.3356, 13.6536, -33.6077, 0.96", "25.5031, 13.6162, -33.7187, 0.96", "26.8413, 13.3192, -34.6271, 0.74", "28.5664, 12.8703, -35.6961, 0.74", "30.4717, 12.412, -36.928, 0.74", "30.5655, 12.3936, -36.9989, 0.74", "33.3761, 12.039, -39.457, 0.74", "33.4375, 12.0367, -39.5145, 0.74", "35.3626, 12.1653, -41.5295, 0.74", "36.9389, 12.3867, -43.1938, 0.74", "38.7093, 12.8587, -45.11, 1.62", "40.2002, 13.3827, -46.8324, 0.66", "41.3854, 13.8555, -48.232, 0.52", "43.055, 14.538, -50.2132, 1.25", "44.2162, 14.9916, -51.6027, 1.25", "47.6551, 16.11, -55.4303, 0.59", "49.9745, 16.7761, -58.0758, 0.96", "52.47, 17.4378, -61.0633, 0.96", "52.524, 17.4497, -61.1269, 0.96", "56.4368, 18.1246, -65.4745, 0.96", "57.5533, 18.257, -66.6924, 1.47", "60.9918, 18.4277, -70.1662, 0.74", "61.0644, 18.43, -70.2293, 0.74", "64.8454, 18.5516, -73.2274, 0.74", "66.1041, 18.6034, -74.1407, 1.47", "67.8405, 18.6783, -75.1819, 0.59", "68.1498, 18.6875, -75.3643, 0.59", "70.3252, 18.6673, -76.4757, 0.59", "70.4956, 18.6656, -76.5787, 0.59", "72.2016, 18.6301, -77.9275, 2.14", "72.6188, 18.6052, -78.2709, 2.14", "74.6573, 18.3277, -80.0003, 0.66", "75.2613, 18.2209, -80.5424, 0.66", "75.3189, 18.2124, -80.6033, 0.66", "77.4461, 18.188, -83.2307, 0.66", "77.4969, 18.1944, -83.2975, 0.66", "79.303, 18.6713, -85.8065, 0.66", "79.5367, 18.78, -86.1557, 1.18", "81.0932, 19.712, -88.6663, 0.81", "82.6951, 20.7445, -91.2942, 0.44", "83.1948, 21.13, -92.1768, 0.44", "83.234, 21.1585, -92.2461, 0.44", "84.5548, 22.0938, -94.5831, 0.44", "84.6215, 22.1233, -94.6884, 0.44", "85.6365, 22.2757, -96.1372, 0.44", "85.6881, 22.2809, -96.2035, 0.44", "86.8309, 22.4003, -97.6921, 1.4", "86.8939, 22.4077, -97.7645, 1.4", "87.4848, 22.4806, -98.3952, 1.4", "91.0302, 23.0011, -102.479, 0.52", "93.329, 23.4044, -105.24, 0.37", "93.3852, 23.4132, -105.302, 0.37", "96.4713, 23.8756, -108.492, 0.37", "96.538, 23.8861, -108.56, 0.37", "100.209, 24.4988, -112.351, 0.37", "100.277, 24.5086, -112.419, 0.37", "102.753, 24.8046, -114.866, 0.37", "102.812, 24.8121, -114.926, 0.37", "104.816, 25.0856, -117.078, 0.29", "107.197, 25.391, -119.513, 0.29", "107.258, 25.398, -119.57, 0.29", "111.545, 25.8082, -123.416, 0.29", "113.572, 26.0133, -125.312, 1.62", "113.635, 26.0182, -125.368, 1.62", "114.841, 26.0533, -126.286, 1.62", "116.005, 26.089, -127.081, 0.29", "117.743, 26.1695, -128.321, 0.29", "120.164, 26.2136, -130.029, 0.29", "120.234, 26.2115, -130.077, 0.29", "122.311, 26.1506, -131.77, 0.29", "122.846, 26.136, -132.267, 1.11", "124.965, 26.0843, -134.334, 0.29", "126.468, 26.024, -135.836, 0.29", "128.376, 25.9257, -137.538, 1.47", "130.212, 25.8599, -139.142, 0.15", "130.276, 25.8556, -139.197, 0.15", "131.441, 25.7096, -140.082, 0.15", "131.522, 25.6982, -140.131, 0.15", "133.172, 25.4559, -141.051, 0.15", "133.326, 25.4223, -141.138, 0.15", "134.972, 24.9909, -142.1, 0.15", "136.293, 24.6327, -142.986, 1.11", "136.783, 24.4891, -143.366, 1.11", "136.843, 24.4788, -143.424, 1.11", "138.675, 24.3717, -145.529, 0.37", "139.13, 24.4065, -146.08, 0.59", "139.471, 24.4913, -146.486, 0.59", "139.55, 24.5143, -146.572, 0.59", "141.76, 25.1373, -148.88, 0.29", "142.155, 25.2068, -149.226, 0.22", "142.223, 25.2144, -149.275, 0.22", "143.272, 25.2871, -149.99, 0.22", "143.781, 25.3047, -150.334, 0.22", "145.282, 25.3099, -151.285, 1.03", "148.169, 25.2101, -152.941, 0.22", "149.09, 25.1791, -153.487, 0.22", "149.162, 25.1763, -153.531, 0.22", "150.9, 25.1007, -154.664, 1.11", "151.49, 25.0837, -155.05, 1.11", "151.607, 25.0821, -155.12, 1.11" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "81.8803, 37.8712, -19.1248, 0.44", "82.4929, 38.2026, -19.0923, 0.44", "83.0033, 38.482, -19.1271, 0.44", "83.259, 38.6217, -19.1559, 0.44", "84.7737, 39.3216, -19.8666, 0.44", "84.8281, 39.3468, -19.8999, 0.44", "85.4097, 39.6207, -20.2925, 0.81", "86.3554, 40.0637, -20.9737, 0.81", "86.4094, 40.0894, -21.0245, 0.81", "88.2271, 41.055, -22.9236, 0.22", "88.5684, 41.2575, -23.3252, 0.22", "88.628, 41.2931, -23.4031, 0.22", "88.8708, 41.4585, -23.7498, 0.44", "89.6903, 42.0847, -24.9525, 0.29", "90.5563, 42.8242, -26.2422, 0.29", "91.8754, 44.0695, -28.3747, 0.96", "92.8845, 45.0326, -30.1505, 0.44", "93.3191, 45.4379, -30.8743, 0.44", "93.4917, 45.5988, -31.1533, 1.03", "93.7207, 45.8223, -31.4781, 1.03", "94.8054, 46.9746, -32.9657, 0.29", "94.8658, 47.0317, -33.0176, 0.29", "96.3851, 48.2534, -33.8579, 0.29", "96.5004, 48.3293, -33.9101, 0.29", "97.784, 49.1, -34.377, 0.29", "97.8762, 49.1569, -34.4021, 0.29", "99.4756, 50.173, -34.8079, 0.29", "99.5384, 50.2122, -34.8345, 0.29", "100.161, 50.5706, -35.1776, 0.29", "100.286, 50.6391, -35.2478, 0.29", "101.132, 51.0905, -35.6596, 1.03", "102.515, 51.8371, -36.1233, 0.29", "102.703, 51.9388, -36.1488, 0.29", "104.608, 52.8634, -36.3685, 0.29", "104.67, 52.8914, -36.3749, 0.29", "105.927, 53.4206, -36.4198, 0.81", "106.57, 53.6938, -36.3969, 0.22", "108.151, 54.4402, -36.2208, 0.22", "109.043, 54.8787, -36.1958, 1.03", "109.155, 54.9376, -36.2039, 1.03", "110.123, 55.4797, -36.3615, 0.15", "111.051, 56.0552, -36.6378, 0.15", "111.105, 56.0931, -36.6574, 0.15", "112.274, 57.0348, -37.2768, 0.81", "112.382, 57.1205, -37.3308, 0.81", "112.662, 57.2934, -37.4707, 0.81", "112.752, 57.3372, -37.5182, 0.81", "113.238, 57.522, -37.7353, 0.15", "113.298, 57.5445, -37.7576, 0.15", "114.454, 57.9471, -38.0223, 0.15", "115.558, 58.2937, -38.2692, 0.74", "115.774, 58.3538, -38.3163, 0.74", "115.848, 58.3738, -38.3317, 0.74" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "81.8803, 37.8712, -19.1248, 0.66", "82.1761, 37.6833, -19.1434, 0.66", "82.2393, 37.6456, -19.152, 0.66", "83.3103, 37.1028, -19.3135, 0.66", "83.5881, 36.9911, -19.3682, 0.66", "84.5894, 36.6408, -19.5837, 0.66", "85.5776, 36.3821, -19.7773, 1.18", "85.7443, 36.3524, -19.8098, 1.18", "86.5162, 36.2917, -19.9412, 1.18", "87.3667, 36.3154, -20.0793, 0.44", "87.4485, 36.323, -20.0901, 0.44", "88.6563, 36.5003, -20.1897, 0.44", "88.9854, 36.5439, -20.2546, 0.44", "89.861, 36.6524, -20.5317, 0.44", "89.9278, 36.6601, -20.5589, 0.44", "90.5142, 36.7361, -20.8313, 0.74", "90.5867, 36.7496, -20.869, 0.74", "92.732, 37.2951, -22.0944, 0.44", "94.0687, 37.7385, -22.7082, 0.44", "94.1339, 37.7648, -22.7266, 0.44", "94.8337, 38.0921, -22.7656, 0.88", "95.6103, 38.4989, -22.6805, 0.88", "96.2993, 38.8959, -22.5127, 0.88", "97.6393, 39.7518, -21.9036, 0.44", "99.1172, 40.6907, -21.1092, 0.44", "100.366, 41.4674, -20.3797, 1.25", "100.428, 41.5057, -20.3409, 1.25", "101.083, 41.8955, -19.9204, 1.25", "102.36, 42.6012, -19.1322, 0.37", "103.265, 43.0284, -18.7596, 0.37", "103.398, 43.0786, -18.7322, 0.37", "104.563, 43.4122, -18.7149, 0.37", "104.663, 43.435, -18.721, 0.37", "105.901, 43.6534, -18.8991, 0.37", "108.02, 43.9683, -19.345, 1.03", "108.911, 44.0731, -19.5244, 1.92", "109.388, 44.1198, -19.6123, 0.29", "110.299, 44.1899, -19.8015, 0.29", "110.441, 44.2029, -19.8315, 0.29", "111.494, 44.3266, -20.035, 0.29", "112.156, 44.3873, -20.0904, 0.74", "112.238, 44.392, -20.1002, 0.74", "113.568, 44.4653, -20.2571, 0.74", "113.64, 44.4691, -20.2645, 0.74", "114.326, 44.5143, -20.3038, 0.22", "115.216, 44.5862, -20.3162, 0.22", "115.365, 44.6092, -20.2772, 0.22", "116.003, 44.7415, -19.9443, 0.96", "116.309, 44.8194, -19.7277, 0.96", "116.901, 44.984, -19.2861, 0.96", "116.957, 45.0008, -19.2427, 0.96", "118.729, 45.5766, -17.8532, 0.37", "118.814, 45.6031, -17.7883, 0.37", "120.239, 46.0112, -16.8087, 0.37", "120.299, 46.0273, -16.7716, 0.37", "120.837, 46.1592, -16.5002, 0.59", "121.048, 46.207, -16.4272, 0.22", "121.117, 46.2226, -16.4135, 0.22", "122.125, 46.504, -16.1474, 0.22", "122.191, 46.5252, -16.1271, 0.22", "122.609, 46.6555, -15.9992, 0.44", "122.831, 46.7149, -15.9331, 0.44", "123.804, 46.9326, -15.649, 0.22", "126.05, 47.3535, -15.0423, 0.22", "126.721, 47.4565, -14.8739, 1.03", "127.398, 47.5427, -14.7168, 0.22", "128.761, 47.6733, -14.4219, 0.22", "129.14, 47.6976, -14.3515, 0.22", "131.043, 47.7836, -14.068, 0.22", "133.354, 47.847, -13.7356, 0.22", "134.524, 47.8864, -13.5763, 1.18", "135.536, 47.9307, -13.4465, 1.18", "136.222, 47.9746, -13.3652, 0.15", "138.499, 48.149, -13.1128, 0.15", "138.581, 48.1558, -13.1045, 0.52", "139.187, 48.2199, -13.0508, 0.15", "139.331, 48.2389, -13.0401, 0.15", "141.229, 48.5659, -12.912, 0.15", "141.751, 48.667, -12.8746, 0.96", "142.501, 48.8205, -12.836, 0.96", "142.724, 48.8685, -12.8267, 0.96", "143.399, 49.0318, -12.8072, 0.15", "144.94, 49.4879, -12.7888, 0.15", "145.017, 49.5171, -12.7902, 0.15", "145.301, 49.6416, -12.7925, 0.81", "145.366, 49.6741, -12.7919, 0.81", "146.032, 50.0424, -12.7582, 0.81", "146.484, 50.3278, -12.7095, 0.81", "146.545, 50.3671, -12.703, 0.81", "147.025, 50.6646, -12.6536, 0.15", "147.096, 50.7078, -12.6466, 0.15", "147.878, 51.1836, -12.5726, 0.15", "147.971, 51.2413, -12.5584, 0.15", "149.528, 52.2292, -12.2531, 0.15", "149.863, 52.4563, -12.1785, 0.44", "150.038, 52.5837, -12.136, 0.44", "150.163, 52.6825, -12.1025, 0.44", "150.844, 53.2715, -11.8939, 0.15", "151.016, 53.4282, -11.8338, 0.15", "151.399, 53.8376, -11.6491, 0.15", "151.717, 54.1715, -11.4967, 0.88", "152.092, 54.5413, -11.3377, 0.88", "152.205, 54.6441, -11.3039, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-60.8483, 57.3325, 44.947, 0.37", "-67.53, 59.3327, 52.1353, 0.37", "-73.8554, 61.476, 59.6035, 0.37", "-80.093, 62.9479, 67.2883, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-60.8483, 57.3325, 44.947, 0.29", "-70.5913, 61.0306, 48.001, 0.37", "-80.6821, 64.9782, 48.5429, 0.37", "-90.2442, 70.018, 49.8359, 0.37", "-98.4457, 77.3029, 49.7644, 0.37", "-105.87, 85.3817, 48.9094, 0.37", "-112.468, 94.2549, 49.6421, 0.37", "-118.89, 102.927, 52.2534, 0.37", "-123.462, 112.734, 55.1652, 0.37", "-129.295, 121.367, 59.0713, 0.37", "-132.699, 131.503, 62.5853, 0.37", "-135.256, 141.097, 67.8919, 0.37", "-138.747, 149.851, 73.9381, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-37.8923, 82.2111, 45.7425, 0.29", "-41.3068, 89.0135, 50.896, 0.29", "-44.074, 96.4255, 55.6625, 0.29", "-45.3841, 103.612, 61.3137, 0.29", "-46.2612, 110.472, 67.4065, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-37.8923, 82.2111, 45.7425, 0.74", "-43.8456, 91.004, 51.6582, 0.29", "-50.6092, 98.8671, 57.8789, 0.29", "-57.447, 107.046, 63.6128, 0.29", "-64.5795, 114.069, 70.323, 0.29", "-72.778, 120.598, 76.1765, 0.29", "-81.1431, 126.726, 82.1885, 0.29", "-89.4577, 132.504, 88.5844, 0.29", "-97.1549, 140.386, 93.506, 0.29", "-104.15, 148.626, 98.9482, 0.29", "-112.274, 155.905, 104.027, 0.29", "-119.859, 162.791, 110.341, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "37.3326, -38.9929, 6.9584, 0.59", "38.8266, -39.1471, 7.03797, 0.59", "39.1247, -39.1745, 7.04224, 0.59", "39.6858, -39.2236, 7.04295, 0.59", "41.2638, -39.4221, 7.05699, 0.44", "42.5113, -39.6011, 7.07203, 0.44", "44.0642, -39.9025, 7.02523, 0.81", "45.3404, -40.2407, 6.92231, 0.52", "45.4333, -40.2752, 6.91549, 0.52", "46.7954, -40.9393, 6.75461, 0.22", "46.8929, -40.9967, 6.73914, 0.22", "48.4072, -42.1212, 6.45186, 0.52", "49.6408, -43.2217, 6.18651, 0.44", "50.9583, -44.5238, 5.87822, 0.44", "52.1482, -45.7643, 5.58594, 0.22", "52.2927, -45.9214, 5.54846, 0.22", "52.8642, -46.5511, 5.4154, 0.22", "53.2265, -46.9333, 5.41394, 0.22", "53.9531, -47.6703, 5.60899, 0.22", "54.0303, -47.7408, 5.65749, 0.22", "54.607, -48.2649, 6.11915, 1.03", "54.6687, -48.326, 6.17054, 1.03", "56.3203, -50.1029, 7.61456, 0.22", "57.1319, -51.0768, 8.36723, 0.22", "57.1837, -51.1427, 8.42396, 0.22", "57.7977, -51.9103, 9.0707, 0.37", "58.2481, -52.4454, 9.55681, 0.59", "58.6539, -52.8763, 9.93623, 0.59", "58.719, -52.9379, 9.98258, 0.59", "60.0146, -53.9423, 10.8779, 0.22", "61.018, -54.6247, 11.5342, 0.22", "62.0642, -55.2487, 12.1957, 0.74", "62.8311, -55.6678, 12.6519, 0.74", "63.8267, -56.2399, 13.1802, 0.74", "63.9025, -56.2983, 13.2113, 0.74", "64.5929, -56.9532, 13.3967, 0.37", "64.7367, -57.114, 13.4238, 0.22", "64.8016, -57.1921, 13.4288, 0.22", "65.6493, -58.2602, 13.4698, 0.22", "67.3041, -60.4087, 13.5075, 0.22", "67.3701, -60.4859, 13.5071, 0.22", "68.0995, -61.2871, 13.4837, 0.59", "68.8281, -62.0633, 13.4572, 1.03", "69.5625, -62.8165, 13.4266, 0.44", "69.9071, -63.1369, 13.4083, 0.22", "72.2463, -64.968, 13.2643, 0.22", "72.3259, -65.0293, 13.2609, 0.22", "84.9715, -71.6015, 13.1262, 0.22", "95.9881, -80.8513, 12.797, 0.22", "107.768, -88.4855, 10.1375, 0.22", "118.833, -97.573, 8.88987, 0.22", "128.872, -107.972, 8.50115, 0.22" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "37.3326, -38.9929, 6.9584, 0.88", "37.5471, -39.7368, 6.90187, 0.88", "37.8798, -41.2782, 6.81134, 0.66", "37.897, -41.3702, 6.8066, 0.66", "38.1785, -42.7305, 6.74833, 0.66", "38.5749, -44.5638, 6.67832, 0.59", "38.8158, -45.6203, 6.59516, 0.81", "39.131, -46.9734, 6.47414, 0.81", "39.1796, -47.1659, 6.44792, 0.81", "39.5457, -48.4814, 6.22554, 0.52", "39.5769, -48.5671, 6.20674, 0.52", "40.3931, -49.5901, 5.90702, 0.37", "40.4918, -49.6679, 5.8798, 0.37", "41.3416, -50.1132, 5.70065, 0.37", "41.8454, -50.326, 5.61479, 0.37", "42.8425, -50.6702, 5.493, 0.37", "44.6199, -51.275, 5.22808, 0.22", "44.82, -51.342, 5.20401, 0.22", "45.9069, -51.7858, 5.05237, 0.81", "46.081, -51.8645, 5.0243, 0.81", "46.9071, -52.3799, 4.91885, 1.18", "48.2401, -53.5233, 4.83196, 0.88", "48.7288, -54.086, 4.84164, 0.29", "49.8351, -55.5734, 4.95887, 0.29", "49.9021, -55.684, 4.97932, 0.29", "50.9625, -57.6202, 5.44261, 0.29", "51.3601, -58.4094, 5.61647, 0.81", "51.8755, -59.4515, 5.84062, 0.81", "52.3608, -60.4548, 6.03959, 0.81", "53.3285, -62.451, 6.42765, 0.44", "53.9839, -63.8208, 6.65883, 0.44", "54.8039, -65.5359, 6.8397, 1.11", "55.1637, -66.2535, 6.88015, 1.11" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "94.2394, -34.7654, 56.6887, 0.29", "99.321, -35.4222, 64.1267, 0.29", "103.221, -37.1026, 72.1178, 0.29", "106.226, -40.5125, 80.0035, 0.29", "107.598, -45.7919, 87.4012, 0.29", "109.98, -50.5133, 94.8813, 0.29", "110.814, -55.6513, 102.448, 0.29", "110.899, -60.6663, 110.134, 0.29", "111.21, -67.4088, 116.506, 0.29", "112.814, -73.855, 122.959, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "94.2394, -34.7654, 56.6887, 0.74", "102.892, -35.9369, 59.1585, 0.29", "111.375, -35.5603, 62.3466, 0.29", "120.214, -33.8725, 63.6294, 0.29", "128.819, -32.0649, 65.9327, 0.29", "137.773, -32.0471, 67.3719, 0.29", "146.465, -30.4177, 69.4624, 0.29", "154.985, -27.173, 70.0734, 0.29", "163.078, -23.3224, 71.9215, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "41.2693, -86.4235, 69.1483, 0.37", "41.5852, -86.7818, 69.2876, 0.37", "42.1562, -87.5566, 69.725, 0.37", "42.7561, -88.6725, 70.426, 0.22", "42.7789, -88.7305, 70.4613, 0.22", "43.1672, -90.4699, 71.3872, 0.52", "43.2555, -91.1073, 71.6996, 0.52", "43.2198, -92.3159, 72.2502, 0.37", "42.9747, -93.5581, 72.6901, 0.22", "42.751, -94.3209, 72.8783, 0.22", "42.234, -95.7297, 73.0052, 0.22", "42.2033, -95.7946, 73.0016, 0.22", "41.8004, -96.5434, 72.9039, 0.22", "40.8126, -98.2405, 72.6298, 0.22", "40.3855, -99.012, 72.5059, 0.22", "39.6144, -100.584, 72.2585, 0.22", "38.5504, -103.014, 71.8868, 0.15", "37.7364, -105.079, 71.5806, 0.15", "36.7639, -107.835, 71.1495, 0.15", "35.9212, -110.395, 70.7302, 0.15", "34.8084, -114.056, 70.1402, 0.15", "34.4865, -115.321, 69.9375, 0.59", "34.2499, -116.569, 69.7301, 0.59", "34.0956, -117.735, 69.5274, 0.29", "34.0641, -118.404, 69.3767, 0.29", "33.0434, -128.75, 69.243, 0.29", "31.0424, -138.783, 70.7929, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "41.2693, -86.4235, 69.1483, 0.59", "41.6433, -86.7016, 69.2254, 0.59", "42.6786, -87.5556, 69.6192, 0.22", "43.188, -87.9578, 69.7415, 0.22", "45.0756, -89.4358, 70.1216, 0.22", "45.1373, -89.4829, 70.1261, 0.22", "46.7571, -90.7197, 70.245, 0.22", "48.6188, -92.1879, 70.4146, 0.22", "50.9868, -94.1535, 70.6971, 0.22", "51.0466, -94.2033, 70.7014, 0.22", "53.0536, -95.7334, 70.5814, 0.22", "62.3865, -101.654, 71.2382, 0.22", "71.9512, -106.541, 73.7485, 0.22", "82.0703, -110.872, 74.0154, 0.22", "92.7549, -113.298, 73.5603, 0.22", "102.693, -118.035, 72.9917, 0.22", "113.151, -121.176, 74.1266, 0.22", "123.617, -124.408, 74.8996, 0.22", "134.262, -126.885, 75.8062, 0.22", "144.86, -127.402, 78.5275, 0.22", "155.171, -128.875, 81.9269, 0.22", "165.863, -129.562, 84.1996, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-12.3342, -27.7493, -13.6868, 0.96", "-12.7748, -29.2549, -17.991, 0.96", "-12.8892, -29.6459, -19.1086, 0.96", "-12.8954, -29.6669, -19.1688, 0.96" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-12.3342, -27.7493, -13.6868, 1.4", "-12.6421, -27.8476, -13.6967, 1.4", "-13.6674, -28.1723, -13.7062, 1.03", "-13.7388, -28.1949, -13.704, 1.03", "-14.6279, -28.4881, -13.6658, 0.59", "-15.5686, -28.8358, -13.5638, 0.59", "-16.5493, -29.237, -13.4592, 0.66", "-16.6032, -29.2631, -13.4528, 0.66", "-17.6189, -29.8293, -13.3139, 0.66", "-18.4087, -30.3318, -13.2134, 0.44", "-19.4581, -31.1043, -13.0811, 0.44", "-20.043, -31.5985, -13.02, 0.66", "-20.8104, -32.2753, -12.9685, 0.66", "-20.9102, -32.3519, -12.9657, 0.66", "-21.8232, -32.8895, -12.9872, 0.66", "-21.8985, -32.9156, -12.9861, 0.66", "-22.6224, -33.0213, -12.9646, 0.66", "-23.5554, -33.0485, -12.8711, 0.88", "-24.8237, -33.0111, -12.7171, 1.03", "-25.8679, -32.9567, -12.5756, 0.74", "-27.2134, -32.8964, -12.3711, 0.66", "-28.4584, -32.8706, -12.1712, 0.66", "-29.2457, -32.8946, -12.0258, 0.66", "-30.3927, -33.0235, -11.7693, 0.66", "-30.4423, -33.0353, -11.7572, 0.66", "-31.7309, -33.4957, -11.4367, 0.66", "-31.7849, -33.5197, -11.4252, 0.66", "-32.8551, -34.0118, -11.2111, 0.66", "-32.9027, -34.0329, -11.2033, 0.66", "-34.0246, -34.471, -11.0371, 0.66", "-34.2032, -34.5299, -11.0186, 1.03", "-34.8438, -34.6866, -10.9908, 0.52", "-35.8805, -34.9054, -10.9907, 0.52", "-35.9319, -34.9155, -10.9913, 0.52", "-36.5382, -35.0462, -10.9952, 0.66", "-37.3186, -35.224, -10.9988, 0.66", "-38.123, -35.4386, -11.0043, 1.4", "-38.6211, -35.593, -11.0061, 0.81", "-39.6319, -35.9281, -11.0188, 0.52", "-40.5676, -36.2456, -11.0245, 0.37", "-41.3739, -36.5254, -11.0229, 0.81", "-42.0276, -36.7723, -11.0182, 0.96", "-42.7383, -37.0582, -11.0129, 0.96", "-43.6837, -37.4502, -11.015, 0.66", "-44.4475, -37.771, -11.0327, 0.66", "-44.5164, -37.8012, -11.0332, 0.66", "-45.6812, -38.3244, -11.0339, 0.66", "-45.7289, -38.3468, -11.0355, 0.66", "-46.6072, -38.8112, -11.0941, 0.66", "-47.7875, -39.5079, -11.2097, 0.66", "-48.7127, -40.0842, -11.3375, 0.66", "-48.7502, -40.1093, -11.3428, 0.66", "-49.5873, -40.6955, -11.4529, 0.66", "-50.4589, -41.3266, -11.544, 0.66", "-50.8758, -41.6205, -11.5741, 0.44", "-50.9202, -41.6494, -11.5757, 0.44", "-51.3779, -41.8964, -11.61, 0.44", "-51.9476, -42.1236, -11.6775, 0.44", "-52.7, -42.3146, -11.8251, 0.88", "-53.6966, -42.471, -12.1056, 0.96", "-54.1109, -42.5202, -12.2465, 0.96", "-55.1065, -42.6232, -12.6509, 0.44", "-56.0152, -42.6999, -13.0883, 0.44", "-56.8622, -42.787, -13.5458, 0.44", "-57.4845, -42.8596, -13.9105, 0.44", "-57.5286, -42.868, -13.9373, 0.44", "-58.036, -43.01, -14.227, 0.66", "-58.0806, -43.0293, -14.2469, 0.66", "-58.6794, -43.3833, -14.5078, 0.66", "-58.7271, -43.4158, -14.5259, 0.66", "-59.2151, -43.7575, -14.7308, 0.52", "-59.7345, -44.0887, -14.9702, 0.29", "-60.3924, -44.4479, -15.305, 0.29", "-60.9767, -44.7335, -15.6274, 0.96", "-61.6593, -45.0163, -16.0079, 0.96", "-62.4402, -45.2984, -16.3937, 0.88", "-63.29, -45.5533, -16.7598, 0.74", "-64.4493, -45.8347, -17.1634, 0.52", "-64.4919, -45.8424, -17.1749, 0.52", "-65.5343, -45.9948, -17.3568, 0.52", "-66.4658, -46.094, -17.4525, 0.96", "-67.2404, -46.1715, -17.4515, 1.18", "-68.0546, -46.2735, -17.3707, 0.59", "-68.4055, -46.3329, -17.311, 0.29", "-68.6961, -46.3927, -17.2776, 0.15", "-68.754, -46.4078, -17.2779, 0.29", "-69.1551, -46.5241, -17.3822, 0.29", "-69.4384, -46.5939, -17.4927, 0.29", "-69.7893, -46.657, -17.7045, 0.29", "-70.4193, -46.7188, -18.1165, 0.29", "-70.8819, -46.7318, -18.4067, 0.44", "-71.4826, -46.7213, -18.7714, 0.96", "-72.0811, -46.6961, -19.1155, 1.33", "-73.0212, -46.6509, -19.5902, 1.33", "-73.6348, -46.6369, -19.8479, 0.52", "-74.3086, -46.6581, -20.0656, 0.22", "-74.366, -46.665, -20.0806, 0.22", "-74.9658, -46.8119, -20.2229, 0.22", "-75.4623, -46.9876, -20.3338, 0.52", "-75.9649, -47.2005, -20.4239, 0.88", "-76.0118, -47.2217, -20.4349, 0.88", "-76.4938, -47.4418, -20.5734, 0.88", "-77.4859, -47.8479, -20.8589, 0.22", "-77.5334, -47.8652, -20.8731, 0.22", "-78.3389, -48.1256, -21.0916, 0.22", "-78.7717, -48.2522, -21.2026, 0.22", "-78.8139, -48.2639, -21.2124, 0.22", "-79.4633, -48.4537, -21.3468, 0.22", "-79.6912, -48.5357, -21.3832, 0.22", "-80.7648, -48.9787, -21.5693, 0.22", "-81.3411, -49.2604, -21.6767, 1.25", "-81.3861, -49.287, -21.6847, 1.25", "-82.0514, -49.7143, -21.8039, 1.62", "-82.6193, -50.1206, -21.9196, 1.62", "-83.2053, -50.5737, -22.0341, 0.22", "-83.4683, -50.8028, -22.08, 0.22", "-84.5264, -51.8037, -22.2279, 0.22", "-84.6071, -51.8845, -22.2385, 0.22", "-85.0009, -52.2979, -22.2866, 0.22", "-85.4308, -52.7608, -22.3374, 0.96", "-86.0594, -53.4498, -22.4078, 0.96", "-86.5416, -53.9229, -22.4592, 0.15", "-87.0106, -54.3426, -22.5053, 0.15", "-87.0589, -54.3794, -22.5081, 0.15", "-87.8412, -54.8745, -22.5218, 0.15", "-87.9762, -54.9507, -22.5221, 0.15", "-88.6702, -55.3032, -22.5491, 0.15", "-88.7173, -55.3266, -22.5525, 0.15", "-89.6133, -55.7806, -22.6411, 0.15", "-89.8884, -55.9299, -22.6745, 0.88", "-90.4867, -56.2722, -22.7631, 1.11", "-91.0833, -56.6306, -22.8445, 0.66", "-91.3544, -56.8071, -22.8842, 0.22", "-91.7305, -57.0402, -22.942, 0.15", "-91.7756, -57.0666, -22.9498, 0.15", "-92.3297, -57.3647, -23.0214, 0.15", "-92.7884, -57.5809, -23.0564, 0.15", "-93.1346, -57.7414, -23.0641, 0.37", "-93.3926, -57.8584, -23.0726, 0.15", "-93.4993, -57.9076, -23.0812, 0.15", "-94.0989, -58.2046, -23.1505, 0.15", "-94.6551, -58.4946, -23.2337, 0.15", "-94.9503, -58.646, -23.2855, 0.81", "-95.5554, -58.9461, -23.3892, 0.81", "-96.0544, -59.1676, -23.4733, 0.22", "-96.6196, -59.3898, -23.5674, 0.22", "-96.7237, -59.4275, -23.5874, 0.22", "-97.2975, -59.6614, -23.7043, 0.22", "-97.3448, -59.6822, -23.7142, 0.22", "-98.3235, -60.1638, -23.9128, 0.22", "-98.4186, -60.2166, -23.9439, 0.22", "-98.9436, -60.5998, -24.4004, 0.22", "-99.3227, -60.942, -24.8624, 0.22", "-99.3708, -60.9891, -24.9434, 0.22", "-99.5742, -61.1907, -25.3202, 0.96", "-100.164, -61.7617, -26.4319, 0.66", "-101.136, -62.5878, -28.2144, 0.22", "-101.493, -62.8572, -28.8181, 0.22", "-102.384, -63.493, -30.1599, 0.52", "-102.7, -63.7118, -30.5731, 0.96", "-103.243, -64.0584, -31.161, 0.96", "-103.946, -64.4763, -31.6853, 0.15", "-104.704, -64.9015, -32.0431, 0.22", "-105.493, -65.337, -32.3281, 0.22", "-105.729, -65.4715, -32.3707, 0.22", "-106.075, -65.6646, -32.4007, 0.44", "-106.511, -65.9308, -32.3744, 0.74", "-106.556, -65.9584, -32.3651, 0.74", "-106.993, -66.2052, -32.3055, 0.74", "-107.04, -66.2299, -32.3014, 0.74", "-107.78, -66.6589, -32.2638, 0.22", "-108.583, -67.1413, -32.2835, 0.22", "-108.628, -67.1685, -32.2864, 0.22", "-109.416, -67.6096, -32.3618, 0.22", "-109.938, -67.8945, -32.4246, 0.22", "-110.039, -67.9452, -32.4387, 0.22", "-111.447, -68.6184, -32.7176, 0.22", "-111.566, -68.672, -32.7411, 0.22", "-112.973, -69.3257, -32.9226, 0.22", "-113.189, -69.4285, -32.9375, 0.22", "-113.819, -69.7271, -32.9661, 0.52", "-114.488, -70.033, -32.9816, 1.33", "-115.148, -70.3205, -32.9776, 1.55", "-116.332, -70.8003, -32.9549, 0.37", "-116.695, -70.9358, -32.9377, 0.22", "-116.949, -71.0279, -32.9243, 0.22", "-117.779, -71.3406, -32.8807, 0.22", "-117.884, -71.3811, -32.8689, 0.22", "-118.297, -71.5451, -32.8351, 0.22", "-118.365, -71.5759, -32.8363, 0.22", "-118.701, -71.7577, -32.8176, 0.59", "-119.147, -72.0057, -32.7812, 0.59", "-119.768, -72.3838, -32.7131, 0.22", "-119.877, -72.4442, -32.7022, 0.22", "-120.229, -72.6247, -32.6685, 0.22", "-120.533, -72.7695, -32.6484, 0.22", "-121.517, -73.2002, -32.6036, 0.22", "-121.677, -73.2684, -32.5958, 0.66", "-121.933, -73.3768, -32.5927, 0.22", "-121.982, -73.3965, -32.5893, 0.22", "-122.821, -73.7231, -32.4914, 0.22", "-122.89, -73.7493, -32.4809, 0.22", "-123.384, -73.9219, -32.3956, 0.66", "-124.016, -74.1138, -32.2939, 0.66", "-124.648, -74.328, -32.2037, 0.22", "-124.697, -74.3449, -32.1974, 0.22", "-125.194, -74.5059, -32.202, 0.22", "-125.666, -74.6517, -32.2609, 0.22", "-125.825, -74.6978, -32.3098, 0.22", "-127.152, -75.0713, -32.877, 0.22", "-127.204, -75.0853, -32.9036, 0.22", "-128.4, -75.3732, -33.5511, 0.15", "-128.874, -75.4847, -33.8197, 1.11", "-129.686, -75.6633, -34.4048, 0.44", "-130.015, -75.7284, -34.7111, 0.44", "-130.091, -75.7451, -34.7917, 0.44", "-130.726, -75.9155, -35.4884, 0.44", "-131.101, -76.0414, -35.9723, 0.81", "-132.517, -76.6059, -37.9341, 0.22", "-133.645, -77.1001, -39.5458, 0.74", "-134.029, -77.2856, -40.0955, 0.74", "-134.062, -77.3032, -40.1422, 0.74", "-135.407, -78.1325, -42.1949, 0.22", "-135.938, -78.489, -43.0147, 0.22", "-136.037, -78.5626, -43.1407, 0.22", "-136.674, -79.0543, -43.8409, 0.22", "-136.943, -79.2494, -44.1015, 0.88", "-138.185, -80.1552, -45.186, 0.22", "-138.274, -80.2212, -45.2449, 0.22", "-139.357, -81.0438, -46.067, 0.22", "-139.549, -81.1886, -46.2188, 0.81", "-140.004, -81.5154, -46.5981, 0.52" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-10.0302, -32.2621, 1.22792, 0.29", "-7.53435, -33.1238, -3.71041, 0.29", "-7.07474, -33.1908, -4.44135, 0.44", "-7.03022, -33.1889, -4.4956, 0.44", "-6.0063, -33.0576, -5.55544, 0.44", "-7.07744, -33.2848, -4.6032, 0.44", "-7.17749, -33.3109, -4.52328, 0.44", "-8.54023, -33.8545, -3.67099, 0.44", "-9.35287, -34.1797, -3.22797, 0.44", "-9.41084, -34.208, -3.19887, 0.44", "-9.87562, -34.4922, -3.01205, 0.66", "-9.92473, -34.5412, -2.99319, 0.66", "-10.4597, -35.2356, -2.82558, 0.66", "-10.4948, -35.2988, -2.8167, 0.66", "-10.9694, -36.1505, -2.69081, 0.44", "-11.0054, -36.213, -2.68128, 0.44", "-11.5098, -37.0969, -2.52085, 0.44", "-11.5461, -37.1589, -2.50887, 0.44", "-12.0262, -38.0273, -2.34579, 0.44", "-12.3473, -38.6293, -2.18652, 0.74", "-12.6949, -39.2577, -1.90146, 0.74", "-13.1834, -40.1034, -1.43445, 0.59", "-13.2203, -40.1659, -1.3951, 0.59", "-13.9209, -41.273, -0.600496, 0.59", "-14.6421, -42.2597, 0.296468, 0.81", "-15.7862, -43.5186, 1.74436, 0.52", "-16.458, -44.1467, 2.56628, 0.52", "-16.5036, -44.1865, 2.62054, 0.52", "-17.5851, -45.1595, 3.90224, 0.52", "-18.5924, -46.1294, 5.07076, 0.74", "-19.422, -47.0345, 5.98532, 0.52", "-19.8626, -47.5792, 6.44659, 0.52", "-20.464, -48.3562, 7.08661, 0.52", "-21.4053, -49.4852, 7.9352, 0.52", "-22.312, -50.4301, 8.51533, 0.81", "-22.3639, -50.4877, 8.54259, 0.81", "-22.8053, -50.9564, 8.74645, 0.74", "-24.0319, -51.8915, 9.24135, 0.59", "-25.4148, -52.4141, 9.63194, 0.81", "-26.6629, -52.5157, 9.85956, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-10.0302, -32.2621, 1.22792, 0.74", "-10.0253, -32.4513, 1.19761, 0.74", "-10.0419, -33.2996, 1.03316, 1.18", "-10.0966, -34.6718, 0.749185, 1.03", "-10.1755, -36.8087, 0.315971, 0.74", "-10.2392, -38.5833, -0.0923597, 0.66", "-10.3314, -40.6672, -0.582, 0.66", "-10.3721, -41.4227, -0.810142, 1.03", "-10.3815, -41.5773, -0.864196, 1.03", "-10.425, -42.4745, -1.18359, 0.81", "-10.4373, -44.0151, -1.61754, 0.81", "-10.3815, -45.7341, -1.95969, 0.81", "-10.2225, -47.8538, -2.24377, 0.52", "-10.0755, -49.3148, -2.35203, 0.74", "-9.86314, -51.5487, -2.30028, 1.03", "-9.64398, -53.9819, -2.01238, 0.96", "-9.63597, -54.074, -1.99365, 0.96", "-9.53584, -55.3696, -1.66852, 1.18", "-9.42236, -57.3149, -1.10522, 1.03", "-9.33096, -60.0697, -0.32445, 1.03", "-9.32288, -62.1181, 0.233182, 0.96", "-9.32456, -63.8311, 0.657963, 0.81", "-9.31896, -65.1039, 0.962874, 1.03", "-9.26403, -66.0213, 1.17418, 0.74", "-9.14167, -66.949, 1.36231, 0.59", "-9.12331, -67.0277, 1.37814, 0.59", "-8.69834, -68.4222, 1.7128, 0.59", "-8.6427, -68.5814, 1.76202, 0.59", "-7.61443, -71.6396, 2.94288, 0.59", "-7.59656, -71.7132, 2.97427, 0.59", "-7.23589, -73.6601, 3.85115, 0.59", "-7.221, -73.8196, 3.92375, 0.59", "-7.24498, -74.8928, 4.40986, 1.03", "-7.43057, -77.3517, 5.53701, 0.81", "-7.93446, -80.1847, 6.85356, 0.81", "-7.94698, -80.2479, 6.88192, 0.81", "-8.28792, -81.6675, 7.47023, 1.55", "-8.53831, -82.6743, 7.8703, 1.92" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-2.42494, 136.198, 42.9008, 0.37", "-10.249, 141.45, 44.1151, 0.37" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-2.42494, 136.198, 42.9008, 0.29", "-3.29447, 141.429, 50.1247, 0.37", "-4.88549, 147.208, 56.8336, 0.37", "-6.32069, 151.858, 64.3289, 0.37", "-8.68437, 157.327, 71.0544, 0.37", "-10.6538, 163.454, 77.3758, 0.37" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "20.4057, 54.7394, -136.799, 0.22", "21.559, 56.6191, -138.38, 0.22", "22.4428, 58.1112, -139.601, 0.22", "22.4873, 58.1823, -139.668, 0.22", "23.7089, 60.1853, -141.536, 0.22", "24.0319, 60.7974, -142.062, 1.03", "24.2061, 61.1388, -142.386, 1.03", "24.2244, 61.1828, -142.424, 1.03", "24.6783, 62.4575, -143.746, 0.22", "24.9843, 63.3599, -144.747, 0.22", "25.2511, 64.3935, -145.912, 0.22", "25.5615, 65.9969, -147.906, 0.22", "25.6109, 67.0096, -149.084, 0.22", "25.543, 68.6712, -151.189, 0.22", "25.5378, 68.714, -151.246, 0.22", "25.2856, 69.6541, -152.498, 0.22", "24.5904, 71.4606, -154.648, 0.22", "23.7055, 73.4992, -156.97, 0.22", "22.5164, 76.0843, -159.937, 0.22", "22.4263, 76.2917, -160.159, 0.44", "21.1117, 79.5343, -163.534, 0.15", "20.2695, 81.9862, -165.882, 0.15", "19.2416, 85.4947, -168.841, 0.15", "19.2234, 85.5737, -168.903, 0.15", "18.8952, 87.2083, -169.992, 0.15", "18.883, 87.2994, -170.051, 0.15", "19.0604, 89.7322, -171.538, 0.15", "19.0976, 89.884, -171.614, 0.15", "19.3713, 90.9022, -171.747, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "20.4057, 54.7394, -136.799, 0.22", "19.1697, 56.6777, -138.096, 0.22", "18.3842, 57.9434, -138.819, 0.22", "18.2618, 58.1439, -138.954, 0.22", "17.2332, 60.0721, -140.224, 0.22", "16.9732, 60.6702, -140.576, 0.66", "16.721, 61.3171, -140.938, 0.22", "16.2957, 62.7311, -141.601, 0.22", "15.8503, 64.8077, -142.548, 0.22", "15.6563, 66.6887, -143.338, 0.22", "15.586, 69.0042, -144.261, 0.22", "15.5869, 69.0811, -144.291, 0.22", "15.6531, 70.3419, -144.758, 0.22", "15.6628, 70.4199, -144.782, 0.22", "16.17, 73.5452, -145.342, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-46.2612, 110.472, 67.4065, 0.37", "-48.1638, 116.488, 72.1318, 0.37", "-49.7061, 122.583, 76.902, 0.37", "-51.5468, 127.651, 82.5764, 0.37", "-52.0822, 133.321, 88.018, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-46.2612, 110.472, 67.4065, 0.29", "-48.4909, 118.571, 73.4288, 0.37", "-49.7027, 126.461, 79.9787, 0.37", "-50.3411, 135.044, 85.7716, 0.37", "-49.7419, 143.574, 91.6422, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "55.1637, -66.2535, 6.88015, 0.74", "54.5535, -67.6381, 7.38966, 0.74", "54.1279, -68.9174, 7.55978, 0.59", "53.7093, -70.1761, 7.72715, 0.59", "53.6853, -70.2484, 7.73676, 0.59", "53.0645, -72.1147, 7.98492, 0.59", "53.0365, -72.1991, 7.99613, 0.59", "51.9734, -75.2738, 8.65539, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "55.1637, -66.2535, 6.88015, 1.11", "55.5113, -66.6785, 6.66051, 1.11", "56.6414, -68.1193, 6.09275, 0.52", "56.7581, -68.2832, 6.05665, 0.52", "57.5783, -69.6259, 5.88164, 0.52", "57.6214, -69.7056, 5.86662, 0.52", "58.4104, -71.2503, 5.53206, 0.74", "58.4523, -71.3453, 5.51443, 0.74", "59.2369, -73.3855, 5.23841, 0.74", "59.6752, -74.7576, 5.02386, 0.74", "60.0798, -76.3144, 4.74954, 0.29", "60.0993, -76.4035, 4.73338, 0.29", "60.1866, -76.8658, 4.617, 0.29", "60.2071, -76.9654, 4.58839, 0.29", "60.4621, -78.1435, 4.19611, 0.29", "60.7426, -79.1364, 3.88343, 0.52", "60.7696, -79.2218, 3.86151, 0.52", "61.3507, -80.9837, 3.39532, 0.52", "61.7451, -82.2552, 3.06389, 0.52", "61.7665, -82.329, 3.04491, 0.52", "61.9157, -82.9419, 2.88989, 0.22", "62.0122, -83.4883, 2.76528, 0.22", "62.0256, -83.5899, 2.73895, 0.22", "62.1419, -84.7969, 2.43361, 0.22", "62.1618, -84.8992, 2.41491, 0.22", "62.7301, -86.6458, 2.32222, 0.22", "62.8099, -86.8364, 2.3284, 0.22", "63.5541, -88.3574, 2.46354, 0.81", "63.9951, -89.1533, 2.56831, 0.81", "65.3246, -91.3185, 2.93904, 0.37", "66.4076, -93.0167, 3.29684, 0.37", "66.9254, -93.7906, 3.50354, 0.44", "67.1552, -94.1364, 3.60557, 0.15", "68.2272, -95.763, 4.16634, 0.15", "68.2753, -95.8375, 4.18981, 0.15", "68.3796, -96.0115, 4.22234, 0.66", "68.5872, -96.4003, 4.24535, 0.88", "68.6487, -96.5151, 4.25072, 0.88", "69.0582, -97.3056, 4.28829, 0.88", "77.3944, -107.317, 3.85707, 0.88", "84.715, -118.029, 2.20501, 0.88" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-12.8954, -29.6669, -19.1688, 0.59", "-11.6689, -29.7457, -26.0561, 0.59", "-11.6399, -29.7557, -26.1277, 0.59", "-10.6307, -30.3188, -26.9311, 0.59", "-10.5782, -30.3483, -26.9645, 0.59", "-9.34225, -31.0275, -28.0598, 0.59", "-9.19532, -31.1061, -28.1972, 0.59", "-7.1515, -32.3147, -29.7341, 0.59", "-6.27533, -32.8644, -30.546, 1.03", "-4.67131, -34.0244, -32.5642, 0.88", "-3.10832, -35.3771, -35.4, 0.74", "-2.8501, -35.6431, -36.0494, 0.74", "-2.30648, -36.2552, -37.802, 0.74", "-2.2907, -36.2733, -37.8661, 0.74", "-1.83914, -36.7325, -39.6039, 1.03", "-1.17964, -37.4162, -41.8485, 0.29", "-0.834003, -37.6504, -42.6418, 0.44", "-0.0824553, -37.9743, -43.8463, 0.88", "0.681511, -38.172, -44.6967, 1.03", "1.52596, -38.3283, -45.5604, 1.03", "1.5777, -38.3319, -45.6046, 1.03", "3.07833, -38.3375, -46.7788, 1.03", "4.24576, -38.2823, -47.7765, 0.44", "4.29594, -38.2782, -47.8223, 0.44", "6.00991, -38.1638, -50.2014, 0.74", "6.49641, -38.2159, -51.0343, 0.74", "6.52768, -38.2263, -51.094, 0.74", "6.72217, -38.3376, -51.4892, 0.74", "6.75485, -38.3607, -51.5564, 0.74", "8.28447, -39.7071, -54.6786, 0.88", "9.11578, -40.6084, -56.4983, 0.88", "10.0577, -41.6417, -58.648, 0.59", "10.4047, -42.01, -59.4405, 0.88", "10.4342, -42.0415, -59.5062, 0.88", "11.126, -42.8416, -61.1069, 0.52", "11.8466, -43.8044, -62.969, 0.37", "12.1198, -44.2629, -63.8908, 0.37", "12.1382, -44.295, -63.949, 0.37", "12.51, -44.8914, -65.006, 0.37", "13.267, -46.1, -66.8926, 0.37", "14.1626, -47.464, -68.9476, 0.37", "14.2194, -47.5447, -69.0668, 0.37", "14.8328, -48.3625, -70.4293, 0.37", "16.1866, -49.9729, -73.4641, 0.37", "16.67, -50.4598, -74.5099, 0.37", "17.5602, -51.1922, -76.2259, 0.96", "17.9774, -51.4836, -77.0296, 0.96", "19.3796, -52.3939, -79.8508, 0.44", "19.4119, -52.4117, -79.9197, 0.44", "19.8069, -52.5977, -80.6871, 1.33", "20.1815, -52.7682, -81.6636, 1.33", "21.5103, -53.3977, -85.3729, 0.66", "21.5737, -53.4301, -85.5862, 0.66", "22.19, -53.7753, -87.7126, 1.55", "22.4696, -53.9409, -88.7244, 1.55", "24.5199, -55.2056, -96.7154, 0.81", "24.7568, -55.3598, -97.7021, 1.77", "25.7115, -56.0059, -101.683, 0.44", "26.1075, -56.2888, -103.298, 0.44", "26.1235, -56.3018, -103.363, 0.44", "26.6826, -56.8245, -105.558, 0.88", "26.7059, -56.8526, -105.628, 0.88", "27.2601, -57.6543, -107.404, 0.37", "27.6022, -58.1582, -108.309, 0.37", "28.0781, -58.8613, -109.612, 0.74", "28.2626, -59.173, -110.25, 0.74", "28.7203, -60.0396, -112.062, 0.37", "28.7354, -60.0681, -112.123, 0.37", "28.9996, -60.6011, -113.265, 0.37", "29.4135, -61.3746, -114.981, 1.18", "30.6978, -63.5455, -119.883, 0.44", "30.7146, -63.5694, -119.945, 0.44", "31.0183, -63.9535, -121.051, 0.44", "31.5862, -64.5611, -123.011, 0.44", "31.8013, -64.7517, -123.708, 0.44", "31.8761, -64.802, -123.903, 0.44", "33.0788, -65.325, -126.223, 0.37", "33.11, -65.3403, -126.293, 0.37", "33.5105, -65.5395, -127.325, 0.37", "34.1217, -65.993, -129.317, 0.37", "34.1764, -66.051, -129.535, 0.37", "34.3799, -66.3132, -130.343, 0.37", "35.0325, -67.3073, -132.92, 0.37", "35.051, -67.3368, -132.99, 0.37", "35.8953, -68.6343, -135.951, 0.15", "36.3916, -69.3437, -137.489, 0.88", "36.6604, -69.7039, -138.234, 0.88", "36.6822, -69.7346, -138.292, 0.88", "37.5919, -71.1389, -140.748, 0.29", "38.6911, -72.8826, -143.671, 0.29", "39.4555, -74.1144, -145.662, 0.29", "40.5205, -75.8935, -148.503, 0.96", "41.8669, -78.1969, -152.222, 0.22", "42.6232, -79.5176, -154.338, 0.37", "43.4498, -81.0179, -156.699, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-12.8954, -29.6669, -19.1688, 0.74", "-13.6932, -31.7292, -20.7045, 0.74", "-13.713, -31.8018, -20.7465, 0.74", "-13.9445, -32.8313, -21.2705, 0.74", "-14.2634, -34.5071, -21.9879, 0.74", "-14.6046, -35.9831, -22.5661, 0.74", "-14.6333, -36.0707, -22.6014, 0.74", "-15.1562, -37.4571, -22.9965, 0.74", "-15.2303, -37.6195, -23.0438, 0.74", "-15.8513, -38.7182, -23.3734, 0.74", "-16.5049, -39.6882, -23.6358, 0.74", "-17.4577, -41.0352, -24.1375, 0.44", "-17.4972, -41.1036, -24.1706, 0.44", "-17.8248, -41.7922, -24.6384, 0.66", "-17.8448, -41.8475, -24.6823, 0.66", "-18.0355, -42.5082, -25.3135, 0.96", "-18.3371, -43.8689, -26.6975, 0.96", "-18.6041, -45.1373, -28.1471, 1.18", "-19.0333, -46.584, -30.1576, 1.18", "-19.5442, -47.8204, -32.1399, 1.18", "-20.1699, -48.9948, -34.2401, 0.96", "-20.2231, -49.063, -34.3841, 0.96", "-21.1779, -49.8653, -36.4407, 0.88", "-22.6002, -50.6886, -39.0043, 0.44", "-23.259, -50.939, -39.9374, 0.66", "-23.314, -50.9541, -39.9982, 0.66", "-24.6636, -51.3028, -41.1909, 0.66", "-25.6749, -51.5922, -41.9811, 0.44", "-25.7521, -51.619, -42.0302, 0.44", "-27.4209, -52.3905, -42.9787, 0.74", "-28.0741, -52.7774, -43.4133, 0.74", "-28.1292, -52.8202, -43.4604, 0.74", "-28.8434, -53.5437, -44.5742, 0.44", "-29.1649, -53.8916, -45.1173, 0.44", "-29.4165, -54.1453, -45.5164, 0.44", "-30.0883, -54.8278, -46.5141, 0.44", "-31.1847, -55.8937, -48.1036, 0.81", "-33.4059, -57.975, -51.2279, 0.96", "-34.5724, -59.0863, -52.8492, 1.77", "-36.2375, -60.7198, -55.2168, 1.47", "-36.9521, -61.4622, -56.2233, 1.47", "-38.3228, -63.096, -58.1706, 1.47", "-38.3538, -63.1538, -58.2249, 1.47", "-38.6317, -63.9878, -58.9022, 1.55", "-39.1174, -66.1114, -60.6181, 1.11", "-39.2667, -67.0807, -61.3445, 0.66", "-39.5103, -68.7255, -62.5368, 0.37", "-39.8403, -71.2448, -64.1233, 0.37", "-40.1432, -73.264, -65.368, 0.37", "-40.3954, -74.6384, -66.184, 0.37", "-40.4273, -74.7712, -66.2628, 0.37", "-40.7438, -75.7063, -66.8456, 0.37", "-41.471, -77.1542, -68.0127, 0.37", "-42.222, -78.4572, -69.021, 0.22", "-42.5018, -78.9818, -69.3942, 0.22", "-43.4937, -80.8716, -70.6777, 1.25", "-44.1027, -82.0, -71.4046, 1.62", "-46.0237, -85.4186, -73.5912, 0.22", "-47.6018, -87.9631, -75.2133, 0.22", "-47.6426, -88.0293, -75.2489, 0.22", "-48.2765, -89.1167, -75.7583, 0.22", "-48.3277, -89.1937, -75.7899, 0.22", "-49.8081, -91.1428, -76.6706, 0.22", "-49.9186, -91.272, -76.7362, 0.22", "-50.8169, -92.3071, -77.4424, 0.22", "-50.9713, -92.4978, -77.5708, 0.22", "-52.2388, -94.1741, -78.6311, 0.22", "-52.8804, -95.218, -79.212, 0.22", "-53.493, -96.4202, -79.7979, 0.96", "-53.8755, -97.3473, -80.2066, 1.25", "-54.1865, -98.1843, -80.6213, 0.52", "-54.495, -99.0432, -81.0538, 0.15", "-55.2806, -101.199, -82.3151, 0.15", "-55.345, -101.355, -82.418, 0.15", "-55.9532, -102.737, -83.3384, 0.15", "-57.0353, -104.954, -84.9052, 0.15", "-57.237, -105.33, -85.1925, 1.4", "-58.5566, -107.674, -87.075, 1.4", "-59.0324, -108.485, -87.7522, 0.22", "-59.565, -109.408, -88.5282, 0.22", "-59.887, -109.971, -89.0222, 0.22", "-60.6269, -111.323, -90.1494, 0.22", "-60.6604, -111.384, -90.1995, 0.22", "-61.3625, -112.693, -91.1536, 1.03", "-61.8301, -113.583, -91.7918, 1.33", "-62.4944, -115.034, -92.7437, 0.74", "-62.8099, -115.917, -93.1881, 0.22", "-63.0988, -116.967, -93.5351, 0.22", "-63.4027, -118.315, -93.7915, 0.22", "-63.42, -118.4, -93.7937, 0.22", "-63.5943, -119.111, -93.827, 1.03", "-63.9086, -120.237, -93.8679, 0.74", "-64.2037, -121.253, -93.9052, 0.74", "-64.586, -122.463, -94.0007, 0.44", "-65.0608, -123.784, -94.1865, 0.22", "-66.1569, -126.58, -94.6504, 0.15", "-66.3736, -127.059, -94.7567, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-26.6629, -52.5157, 9.85956, 0.52", "-26.8401, -52.6876, 9.75294, 0.52", "-27.4097, -53.2925, 9.72796, 0.52", "-28.5081, -54.4907, 10.0199, 0.44", "-29.0006, -55.0873, 10.2247, 0.44", "-29.0357, -55.1304, 10.2435, 0.44", "-29.8878, -56.1826, 10.7472, 0.44", "-30.8305, -57.2409, 11.3685, 0.44", "-30.9475, -57.3638, 11.4589, 0.44", "-31.7681, -58.135, 12.1306, 0.44", "-32.3827, -58.6332, 12.5735, 0.44", "-32.4258, -58.6637, 12.5973, 0.44", "-33.5061, -59.3239, 13.0447, 0.44", "-34.1581, -59.6764, 13.251, 0.37", "-34.5258, -59.846, 13.3746, 0.37", "-35.0855, -60.0908, 13.6057, 0.66", "-35.8168, -60.4301, 13.942, 0.66", "-36.7346, -60.8921, 14.4272, 0.29", "-37.2352, -61.183, 14.7639, 0.29", "-38.2531, -61.8431, 15.5221, 0.29", "-39.1768, -62.5228, 16.2922, 0.29", "-39.2193, -62.5546, 16.3315, 0.29", "-39.3729, -62.6702, 16.4894, 0.96", "-39.9064, -63.0919, 17.0524, 0.37", "-40.4264, -63.5585, 17.6598, 0.37", "-40.4587, -63.5905, 17.6958, 0.37", "-41.4536, -64.48, 18.6843, 0.37", "-41.6048, -64.6114, 18.8308, 0.74", "-41.8111, -64.7788, 19.0216, 0.29", "-42.6809, -65.4146, 19.7688, 0.29", "-43.1909, -65.7625, 20.2488, 0.29", "-49.0283, -70.7059, 23.4832, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-26.6629, -52.5157, 9.85956, 0.81", "-26.8355, -52.3649, 9.90106, 0.81", "-27.1682, -52.079, 9.99042, 0.44", "-27.7591, -51.4938, 10.1602, 0.44", "-28.5805, -50.6804, 10.3964, 0.44", "-29.213, -50.054, 10.5782, 0.44", "-30.23, -49.0468, 10.8705, 0.22", "-30.6119, -48.6633, 10.9946, 0.22", "-31.2647, -48.0321, 11.2479, 0.22", "-38.1424, -41.5632, 13.2334, 0.22", "-46.3013, -36.714, 14.4554, 0.22", "-53.1624, -30.2421, 16.4872, 0.22", "-58.7623, -22.6313, 18.7613, 0.22", "-64.9395, -15.6493, 21.3487, 0.22", "-72.3429, -9.5992, 22.504, 0.22", "-79.9993, -3.763, 22.5165, 0.22", "-88.5402, 0.509477, 22.2756, 0.22", "-97.339, 4.11572, 22.8056, 0.22", "-106.328, 6.44715, 24.7283, 0.22", "-115.425, 7.67628, 27.0473, 0.22", "-124.535, 8.64483, 29.4236, 0.22", "-132.968, 10.2805, 33.4082, 0.22", "-140.95, 10.7213, 38.4726, 0.22", "-148.642, 12.3388, 43.7498, 0.22", "-156.007, 15.2306, 48.9838, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.53831, -82.6743, 7.8703, 0.37", "-12.1586, -82.7203, 6.78677, 0.37", "-12.3895, -82.7248, 6.73331, 0.37", "-13.8405, -82.7733, 6.46021, 0.37", "-14.8031, -82.8262, 6.37484, 0.22", "-15.918, -82.8874, 6.27598, 0.22", "-17.5606, -82.9775, 6.1303, 0.22", "-18.0035, -83.0054, 6.17036, 0.44", "-19.0817, -83.098, 6.2664, 0.44", "-20.6989, -83.2848, 6.39774, 0.22", "-31.3746, -82.1182, 3.29019, 0.22", "-41.6107, -82.4708, -1.17968, 0.22", "-52.2342, -80.7493, -4.23085, 0.22", "-62.9517, -78.8377, -6.81259, 0.22" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-8.53831, -82.6743, 7.8703, 1.33", "-7.9839, -83.5197, 8.05369, 1.33", "-7.4403, -84.4477, 8.19663, 0.88", "-7.41325, -84.5094, 8.20598, 0.88", "-6.847, -86.108, 8.43749, 0.66", "-6.24595, -88.1389, 8.71669, 0.66", "-5.67425, -90.3751, 9.01837, 0.66", "-5.24699, -92.356, 9.27817, 0.66", "-4.75655, -95.0111, 9.61802, 0.96", "-4.56682, -96.3277, 9.77425, 1.69", "-4.45705, -97.4923, 9.90036, 1.25", "-4.38551, -98.6836, 10.0206, 0.96", "-4.38049, -98.7631, 10.0286, 0.96", "-4.21541, -100.33, 10.2399, 0.59", "-3.80633, -103.041, 10.6436, 0.59", "-3.3184, -105.651, 11.0866, 0.96", "-2.76044, -108.301, 11.5764, 1.11", "-2.4111, -109.952, 11.8928, 0.74", "-2.08674, -111.494, 12.2045, 0.74", "-1.91527, -112.412, 12.3846, 0.52", "-1.71383, -113.616, 12.6193, 0.52", "-1.69683, -113.785, 12.6467, 0.52", "-1.70458, -115.448, 12.7592, 0.52", "-1.71248, -115.553, 12.7574, 0.52", "-1.91336, -117.445, 12.6994, 0.44", "-1.92183, -117.536, 12.7016, 0.44", "-1.96788, -118.395, 12.7924, 0.44", "-1.99192, -120.882, 13.179, 0.44", "-1.98989, -120.96, 13.1968, 0.44", "-1.93191, -122.259, 13.5526, 0.88", "-1.82319, -124.522, 14.2648, 0.88", "-1.80661, -126.994, 15.0698, 0.88", "-1.81022, -127.069, 15.0949, 0.88", "-2.0001, -128.405, 15.5725, 1.25", "-2.18793, -129.338, 15.8949, 1.33", "-2.48821, -130.447, 16.2574, 0.96", "-2.98319, -131.839, 16.7023, 0.52", "-3.33366, -132.77, 16.916, 0.52", "-3.84904, -134.213, 17.1373, 1.18", "-4.27484, -135.482, 17.2279, 1.18", "-4.30148, -135.569, 17.2305, 1.18", "-4.64019, -136.932, 17.1873, 0.96", "-4.97132, -138.595, 17.0209, 0.96", "-5.11278, -139.529, 16.8742, 1.25", "-5.1945, -140.603, 16.6679, 1.03", "-5.19544, -140.693, 16.6519, 1.03", "-5.13727, -141.868, 16.4752, 0.88", "-5.00678, -143.217, 16.3698, 0.88", "-4.84986, -144.479, 16.3648, 0.59", "-4.64179, -146.065, 16.4078, 0.52", "-4.56469, -146.66, 16.4414, 0.52", "-4.54647, -146.848, 16.4576, 0.52", "-4.43896, -148.497, 16.6699, 0.52", "-4.4406, -148.608, 16.6886, 0.52", "-4.59714, -150.024, 16.9597, 0.74", "-4.61139, -150.101, 16.9733, 0.74", "-4.81725, -151.246, 17.1529, 0.81", "-4.92302, -151.909, 17.2468, 0.81", "-5.06179, -152.92, 17.3593, 0.29", "-5.16145, -153.743, 17.4503, 0.29", "-5.16923, -153.834, 17.4608, 0.29", "-5.2162, -155.004, 17.5957, 0.29", "-5.21475, -155.095, 17.6061, 0.29", "-5.10997, -156.279, 17.737, 0.29", "-4.95019, -157.301, 17.7984, 0.29", "-4.85729, -157.783, 17.818, 0.88", "-4.70112, -158.511, 17.8437, 0.88", "-4.65026, -158.739, 17.851, 0.88", "-4.50181, -159.587, 17.9245, 0.59", "-4.28705, -160.929, 18.0888, 0.59", "-4.27859, -161.019, 18.1013, 0.59", "-4.19663, -163.114, 18.4396, 0.59", "-4.19187, -164.026, 18.6, 0.29", "-4.24161, -166.005, 18.9591, 0.29", "-4.25701, -166.251, 19.0045, 0.29", "-4.45043, -168.139, 19.385, 0.29", "-4.701, -169.979, 19.7191, 0.37", "-4.84622, -170.79, 19.846, 1.18", "-5.12195, -172.189, 20.0277, 1.33", "-5.35129, -173.326, 20.1294, 0.74", "-5.68178, -174.854, 20.2499, 0.52", "-5.94643, -176.015, 20.3252, 0.52", "-6.151, -176.887, 20.3609, 0.52", "-6.17163, -176.976, 20.3637, 0.52", "-6.43198, -178.197, 20.3875, 0.52", "-6.47757, -178.444, 20.3891, 0.52", "-6.63286, -179.347, 20.3887, 0.52", "-6.74729, -180.017, 20.4113, 0.88", "-6.90448, -180.94, 20.4553, 1.03", "-7.06704, -181.943, 20.5157, 0.59", "-7.07901, -182.022, 20.5216, 0.59", "-7.24676, -183.669, 20.6278, 0.29", "-7.30601, -184.834, 20.6978, 0.29", "-7.30363, -184.939, 20.7038, 0.29", "-7.18959, -186.121, 20.7693, 0.29", "-7.15576, -186.37, 20.7653, 0.29", "-6.99818, -187.449, 20.6739, 0.29", "-6.98684, -187.527, 20.6609, 0.29", "-6.90331, -188.521, 20.4415, 0.29", "-6.90298, -188.599, 20.4237, 0.29", "-7.0, -190.116, 20.1113, 0.29", "-7.04468, -190.464, 20.0582, 0.29", "-7.22673, -191.538, 19.9346, 0.29", "-7.33028, -192.154, 19.8822, 1.03", "-7.46833, -193.012, 19.8378, 1.47", "-7.61179, -194.101, 19.8292, 0.37", "-7.79999, -195.754, 19.9223, 0.37", "-7.80992, -195.833, 19.9276, 0.37", "-7.91674, -196.6, 19.9863, 0.81", "-8.02304, -197.258, 20.0416, 0.88", "-8.13125, -197.834, 20.086, 0.88", "-8.39603, -199.123, 20.1797, 0.22", "-8.67179, -200.436, 20.2799, 0.22", "-8.68822, -200.525, 20.2868, 0.22", "-8.76046, -200.934, 20.3176, 0.37", "-8.88109, -201.794, 20.3833, 0.37", "-9.01735, -203.167, 20.4883, 0.29", "-9.01963, -203.259, 20.4956, 0.29", "-8.97066, -204.681, 20.6242, 0.29", "-8.96014, -204.84, 20.6417, 0.29", "-8.79463, -206.487, 20.8499, 0.22", "-8.72313, -207.067, 20.9294, 0.66", "-8.6111, -208.027, 21.0653, 0.81", "-8.53365, -208.788, 21.1754, 0.96", "-8.46059, -209.665, 21.3442, 0.37", "-8.45354, -209.743, 21.3619, 0.37", "-8.31417, -211.202, 21.7189, 0.15", "-8.26898, -211.796, 21.8609, 0.74", "-8.24648, -212.61, 22.0404, 0.74", "-8.27684, -213.91, 22.2926, 0.22", "-8.34831, -214.931, 22.4596, 0.22", "-8.45681, -215.802, 22.582, 0.22", "-8.57835, -216.42, 22.6507, 0.59", "-8.78837, -217.255, 22.7084, 0.59", "-8.99259, -217.877, 22.7164, 0.22", "-9.06917, -218.048, 22.7062, 0.22", "-9.47093, -218.776, 22.6701, 0.22", "-9.65047, -219.077, 22.6662, 0.44", "-9.89171, -219.499, 22.6699, 0.44", "-9.92513, -219.583, 22.6749, 0.44", "-10.2092, -220.572, 22.7609, 0.22", "-10.2668, -220.898, 22.7576, 0.22", "-10.3179, -221.605, 22.693, 0.22", "-10.3228, -221.774, 22.6701, 0.22", "-10.3323, -223.852, 22.3202, 0.22", "-10.3311, -223.963, 22.2988, 0.22", "-10.2387, -225.731, 21.9017, 0.22", "-10.1233, -227.59, 21.4366, 0.22", "-10.097, -227.926, 21.3399, 0.52", "-10.0919, -228.001, 21.315, 0.52", "-10.0783, -228.439, 21.1133, 0.52", "-11.3236, -239.762, 20.2951, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "51.9734, -75.2738, 8.65539, 0.44", "51.8261, -75.8197, 8.69563, 0.44", "51.8714, -75.9493, 8.70784, 0.44", "52.0995, -76.5216, 8.76413, 0.44", "52.2345, -76.847, 8.79531, 0.44", "52.5482, -77.5796, 8.85947, 0.44", "52.5757, -77.6423, 8.8646, 0.44", "54.0543, -80.7935, 9.06235, 0.44", "54.0856, -80.8544, 9.06616, 0.44", "54.3063, -81.2478, 9.09131, 1.33", "54.8617, -82.1087, 9.14506, 1.4", "55.1139, -82.4402, 9.18561, 0.37", "55.1575, -82.4915, 9.19442, 0.37", "55.8067, -83.1063, 9.3351, 0.29", "55.8565, -83.1503, 9.34596, 0.29", "57.2541, -84.2539, 9.63055, 0.29", "58.5833, -85.2112, 9.87149, 0.29", "58.638, -85.2489, 9.88043, 0.29", "60.951, -86.7887, 10.2242, 0.29", "61.0806, -86.8697, 10.2439, 0.29", "62.6101, -87.7792, 10.4717, 0.52", "64.1978, -88.6533, 10.6896, 0.29", "64.7873, -88.9498, 10.7554, 0.59", "65.2656, -89.1658, 10.8137, 0.59", "66.6549, -89.691, 11.0086, 0.44", "66.8423, -89.7587, 11.036, 0.44", "67.623, -90.1104, 11.0932, 0.29", "67.7421, -90.1702, 11.096, 0.29", "68.6186, -90.6323, 11.0974, 0.29", "68.8012, -90.7357, 11.0919, 0.29", "69.6131, -91.2407, 11.0296, 0.29", "73.3199, -93.6862, 10.7112, 0.29", "73.3823, -93.7302, 10.705, 0.29", "81.5332, -98.6823, 11.2872, 0.29" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "51.9734, -75.2738, 8.65539, 0.52", "51.8215, -75.0966, 8.65124, 0.52", "51.7648, -75.0418, 8.65625, 0.52", "50.9684, -74.3387, 8.7674, 0.37", "49.723, -73.3269, 8.95324, 0.37", "48.7099, -72.546, 9.05988, 0.59", "47.5558, -71.7207, 9.01041, 0.59", "46.2893, -70.8667, 8.81818, 0.22", "46.2339, -70.8317, 8.80499, 0.22", "45.0417, -70.1975, 8.43133, 0.22", "44.2592, -69.8458, 8.11325, 0.22", "42.1788, -68.9659, 7.0182, 0.22", "41.9269, -68.8596, 6.84772, 0.66", "41.8715, -68.8318, 6.80168, 0.66", "41.0873, -68.4516, 6.11261, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "84.715, -118.029, 2.20501, 0.29", "90.6024, -127.708, 1.02173, 0.29", "96.5667, -137.403, 1.13954, 0.29", "102.873, -146.853, 1.426, 0.29", "108.737, -156.518, 2.67525, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "84.715, -118.029, 2.20501, 0.74", "89.014, -125.179, 1.2812, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-49.0283, -70.7059, 23.4832, 0.37", "-53.7444, -76.1622, 30.7651, 0.37", "-58.3751, -82.9955, 36.9689, 0.37", "-62.5209, -89.4453, 43.8436, 0.37", "-66.8505, -96.1727, 50.357, 0.37", "-72.3636, -102.065, 56.7225, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-49.0283, -70.7059, 23.4832, 0.29", "-57.9457, -77.2145, 24.7277, 0.37", "-65.4037, -85.2335, 27.0393, 0.37", "-73.5489, -91.4324, 31.2647, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-62.9517, -78.8377, -6.81259, 0.37", "-66.8814, -78.6082, -8.60619, 0.37", "-70.6276, -78.7674, -10.7616, 0.37", "-74.3573, -79.8628, -12.6829, 0.37", "-78.4386, -80.9251, -13.6966, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-62.9517, -78.8377, -6.81259, 0.29", "-72.9444, -78.1495, -7.34406, 0.37", "-82.8837, -78.2327, -6.00884, 0.37", "-92.6687, -77.3179, -3.99413, 0.37", "-101.739, -75.0715, -0.293145, 0.37", "-109.419, -71.5651, 5.22076, 0.37", "-115.495, -66.2448, 11.3829, 0.37", "-121.419, -62.4358, 18.6158, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "41.0873, -68.4516, 6.11261, 0.37", "41.1572, -68.6623, 6.09184, 0.37", "41.9185, -70.698, 5.73944, 0.37", "41.9879, -70.8728, 5.70381, 0.37", "42.9573, -73.3156, 5.20582, 0.37", "42.9893, -73.3963, 5.18937, 0.37", "44.2892, -76.6716, 4.52166, 0.37", "44.3296, -76.7643, 4.50224, 0.37", "44.9502, -77.9379, 4.20913, 0.37", "51.2961, -91.1567, 3.60938, 0.37", "55.5512, -105.25, 3.81264, 0.37", "59.816, -119.294, 4.74673, 0.37", "63.9525, -132.793, 8.52387, 0.37", "68.4535, -146.19, 12.2276, 0.37", "70.8719, -160.023, 16.3178, 0.37", "72.0795, -174.619, 17.8392, 0.37", "75.5826, -188.782, 19.6186, 0.37", "79.1883, -202.829, 21.8976, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "41.0873, -68.4516, 6.11261, 0.37", "41.0029, -68.4277, 6.06273, 0.37", "40.9382, -68.4144, 6.03584, 0.37", "39.8627, -68.2219, 5.64926, 0.22", "39.5087, -68.1367, 5.54278, 0.22", "38.5924, -67.8812, 5.2971, 0.22", "38.5165, -67.8562, 5.27975, 0.22", "37.4068, -67.4522, 5.07101, 0.22", "37.2649, -67.3977, 5.04946, 0.22", "36.328, -67.0229, 4.93783, 0.22", "36.078, -66.9192, 4.90303, 0.22", "35.0429, -66.4646, 4.74559, 0.22", "34.9244, -66.4107, 4.72735, 0.22", "33.1572, -65.5733, 4.4382, 0.22", "32.9752, -65.4875, 4.40641, 0.22", "31.2575, -64.6823, 4.09198, 0.22", "31.1863, -64.6427, 4.08033, 0.22", "29.9956, -63.8807, 3.91525, 0.22", "29.7591, -63.6851, 3.89459, 0.22", "29.1334, -63.0086, 3.88292, 0.22", "28.8233, -62.6168, 3.89336, 0.22", "27.9041, -61.2455, 3.97487, 0.22", "27.8227, -61.1174, 3.9837, 0.22", "26.8273, -59.4238, 4.12337, 0.22", "26.7816, -59.3379, 4.12971, 0.22", "26.2039, -58.1508, 4.20464, 0.22", "26.015, -57.7512, 4.21652, 0.22", "25.532, -56.7486, 4.19635, 0.22", "25.4631, -56.6057, 4.19019, 0.22", "24.9371, -55.589, 4.12078, 0.22", "24.9004, -55.5251, 4.1157, 0.22", "24.59, -55.0278, 4.07177, 0.29", "24.3049, -54.6307, 4.01462, 0.29", "23.6081, -53.8042, 3.85383, 0.29", "23.1414, -53.3128, 3.74905, 0.29", "22.7406, -52.9397, 3.6655, 0.29", "22.6648, -52.8719, 3.64938, 0.29", "21.8216, -52.145, 3.46764, 0.29", "21.7591, -52.092, 3.4541, 0.29", "20.9839, -51.4306, 3.29204, 0.29", "20.7406, -51.2232, 3.24617, 0.29", "20.1133, -50.7123, 3.14911, 0.29", "19.7261, -50.4086, 3.10727, 0.44", "19.3839, -50.1209, 3.09634, 0.52", "18.9886, -49.7569, 3.08625, 0.52", "18.9376, -49.7045, 3.08539, 0.52", "18.6648, -49.3878, 3.08368, 0.29", "18.3948, -49.0367, 3.08057, 0.29", "17.684, -48.0724, 3.06528, 0.29", "17.6374, -48.0158, 3.06336, 0.29", "17.2013, -47.522, 3.03993, 0.29", "17.0182, -47.3125, 3.02506, 0.29", "16.7943, -47.0628, 3.00156, 0.29", "16.648, -46.8968, 2.98528, 0.29", "15.9001, -46.0698, 2.89791, 0.29", "15.7451, -45.9008, 2.88138, 0.29", "15.1593, -45.2408, 2.82623, 0.29", "14.9156, -44.9567, 2.80719, 0.29", "13.9961, -43.8387, 2.75276, 0.29", "13.8994, -43.7146, 2.74866, 0.29", "13.3472, -42.9647, 2.7344, 0.52", "13.002, -42.4942, 2.72437, 0.52", "12.7534, -42.1323, 2.71952, 0.52", "12.5776, -41.836, 2.71618, 0.37", "11.8474, -40.3735, 2.60761, 0.37", "11.8186, -40.3055, 2.60015, 0.37", "11.619, -39.6884, 2.5187, 0.52", "11.3509, -38.715, 2.37162, 0.81", "11.1266, -37.863, 2.23306, 0.81", "10.794, -36.7416, 2.05127, 0.37", "10.7418, -36.5929, 2.02906, 0.37", "10.4446, -35.8488, 1.92526, 0.37", "10.2923, -35.5422, 1.88112, 0.37", "9.80958, -34.6875, 1.75288, 0.29", "9.08046, -33.4589, 1.59018, 0.29", "7.93113, -31.6026, 1.39273, 0.29", "7.86492, -31.4955, 1.38118, 0.29", "6.8715, -29.8842, 1.20364, 0.29", "6.81862, -29.7931, 1.19693, 0.29", "6.26637, -28.7561, 1.15808, 0.29", "6.12065, -28.4607, 1.16436, 0.29", "5.68347, -27.5278, 1.24419, 0.29", "5.56756, -27.2446, 1.27861, 0.29", "5.15703, -26.061, 1.46554, 0.29", "5.12916, -25.9814, 1.47658, 0.29", "4.45765, -24.0595, 1.7194, 0.29", "4.40756, -23.909, 1.73626, 0.29", "4.00333, -22.659, 1.85739, 0.29", "3.95738, -22.5065, 1.86924, 0.29", "3.20344, -19.7514, 2.01539, 0.29", "3.16713, -19.5959, 2.02425, 0.29", "3.02038, -18.8326, 2.07091, 0.29", "2.98814, -18.6762, 2.08026, 0.29", "2.72236, -17.5434, 2.11691, 0.29", "2.66551, -17.316, 2.11963, 0.29", "2.18224, -15.5037, 2.10292, 0.29", "2.09174, -15.1995, 2.09665, 0.29", "1.60795, -13.701, 2.05899, 0.29", "1.15737, -12.4805, 2.10048, 0.29", "1.09187, -12.3176, 2.1064, 0.29", "0.577645, -11.1227, 2.15786, 0.29", "0.508408, -10.98, 2.16639, 0.29", "-0.332782, -9.19705, 2.33363, 0.29", "-0.983495, -7.66836, 2.61309, 0.29", "-6.09542, 1.49577, 1.48659, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-121.419, -62.4358, 18.6158, 0.37", "-128.808, -59.9415, 22.5523, 0.37", "-136.318, -58.4313, 26.7048, 0.37", "-143.414, -56.602, 31.4442, 0.37", "-150.786, -56.0559, 36.0314, 0.37", "-157.738, -56.3641, 41.2425, 0.37", "-163.826, -56.3476, 47.4628, 0.37", "-170.621, -57.4802, 52.7601, 0.37", "-177.683, -57.6623, 57.8282, 0.37", "-184.628, -57.6907, 63.0623, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-121.419, -62.4358, 18.6158, 0.29", "-129.22, -63.2993, 27.4186, 0.37", "-136.409, -65.7165, 36.4375, 0.37", "-145.351, -68.7058, 43.5131, 0.37", "-154.565, -70.7368, 50.5732, 0.37", "-163.443, -72.7129, 58.0649, 0.37", "-171.131, -74.8534, 66.7356, 0.37", "-179.019, -75.1636, 75.5069, 0.37", "-186.218, -75.5757, 84.8531, 0.37", "-193.813, -75.1049, 93.8954, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_69", "dend_58", "dend_45", "dend_24", "dend_0", "dend_73", "dend_70", "dend_68", "dend_59", "dend_49", "dend_46", "dend_30", "dend_25", "dend_21", "dend_1", "dend_77", "dend_74", "dend_72", "dend_71", "dend_63", "dend_60", "dend_55", "dend_50", "dend_48", "dend_47", "dend_34", "dend_31", "dend_27", "dend_26", "dend_23", "dend_22", "dend_16", "dend_3", "dend_2", "dend_79", "dend_78", "dend_76", "dend_75", "dend_65", "dend_64", "dend_62", "dend_61", "dend_57", "dend_56", "dend_52", "dend_51", "dend_44", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_18", "dend_17", "dend_11", "dend_4", "dend_81", "dend_80", "dend_67", "dend_66", "dend_54", "dend_53", "dend_39", "dend_36", "dend_20", "dend_19", "dend_13", "dend_12", "dend_6", "dend_5", "dend_43", "dend_40", "dend_38", "dend_37", "dend_15", "dend_14", "dend_10", "dend_7", "dend_42", "dend_41", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_69", "dend_58", "dend_45", "dend_24", "dend_0", "dend_73", "dend_70", "dend_68", "dend_59", "dend_49", "dend_46", "dend_30", "dend_25", "dend_21", "dend_1", "dend_77", "dend_74", "dend_72", "dend_71", "dend_63", "dend_60", "dend_55", "dend_50", "dend_48", "dend_47", "dend_34", "dend_31", "dend_27", "dend_26", "dend_23", "dend_22", "dend_16", "dend_3", "dend_2", "dend_79", "dend_78", "dend_76", "dend_75", "dend_65", "dend_64", "dend_62", "dend_61", "dend_57", "dend_56", "dend_52", "dend_51", "dend_44", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_18", "dend_17", "dend_11", "dend_4", "dend_81", "dend_80", "dend_67", "dend_66", "dend_54", "dend_53", "dend_39", "dend_36", "dend_20", "dend_19", "dend_13", "dend_12", "dend_6", "dend_5", "dend_43", "dend_40", "dend_38", "dend_37", "dend_15", "dend_14", "dend_10", "dend_7", "dend_42", "dend_41", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_81", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_NBC_35ea10d24d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_69, id: dend_69, parent: soma_0
create dend_69
public dend_69
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_73, id: dend_73, parent: dend_69
create dend_73
public dend_73
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_30, id: dend_30, parent: dend_24
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_0
create dend_21
public dend_21
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_77, id: dend_77, parent: dend_73
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_63, id: dend_63, parent: dend_59
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_49
create dend_55
public dend_55
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_44, id: dend_44, parent: dend_34
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_81, id: dend_81, parent: dend_79
create dend_81
public dend_81
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_63
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_69, dend_69, dend_69, dend_69, dend_69, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_0, dend_0, dend_0, axon_0, axon_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_37, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_69(0), soma_0(0.499998293907579)
    connect dend_58(0), soma_0(0.499998293907579)
    connect dend_45(0), soma_0(0.499998293907579)
    connect dend_24(0), soma_0(0.499998293907579)
    connect dend_0(0), soma_0(0.499998293907579)
    connect axon_0(0), soma_0(1.0)
    connect dend_73(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_30(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_77(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_63(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_55(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_44(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_81(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.873478, -12.1204, -1.0889, 3.2264 ) }
    soma_0 { pt3dadd( -0.698655, -10.9282, -0.984246, 5.56239 ) }
    soma_0 { pt3dadd( -0.523832, -9.73588, -0.879587, 7.69458 ) }
    soma_0 { pt3dadd( -0.349009, -8.5436, -0.774929, 10.6304 ) }
    soma_0 { pt3dadd( -0.174186, -7.35132, -0.670271, 12.3889 ) }
    soma_0 { pt3dadd( 6.37175E-4, -6.15904, -0.565612, 13.0429 ) }
    soma_0 { pt3dadd( 0.17546, -4.96676, -0.460954, 13.3962 ) }
    soma_0 { pt3dadd( 0.350283, -3.77448, -0.356295, 13.6031 ) }
    soma_0 { pt3dadd( 0.525106, -2.5822, -0.251637, 13.7768 ) }
    soma_0 { pt3dadd( 0.699929, -1.38992, -0.146979, 13.7572 ) }
    soma_0 { pt3dadd( 0.874752, -0.197642, -0.0423202, 13.4519 ) }
    soma_0 { pt3dadd( 1.04958, 0.994638, 0.0623382, 13.1714 ) }
    soma_0 { pt3dadd( 1.2244, 2.18692, 0.166997, 12.4149 ) }
    soma_0 { pt3dadd( 1.39922, 3.3792, 0.271655, 11.5059 ) }
    soma_0 { pt3dadd( 1.57404, 4.57148, 0.376313, 10.5982 ) }
    soma_0 { pt3dadd( 1.74887, 5.76376, 0.480972, 9.84377 ) }
    soma_0 { pt3dadd( 1.92369, 6.95604, 0.58563, 9.16735 ) }
    soma_0 { pt3dadd( 2.09851, 8.14832, 0.690289, 7.18404 ) }
    soma_0 { pt3dadd( 2.27334, 9.34059, 0.794947, 5.28238 ) }
    soma_0 { pt3dadd( 2.44816, 10.5329, 0.899606, 3.93844 ) }
    soma_0 { pt3dadd( 2.62298, 11.7252, 1.00426, 2.5386 ) }
    // Section: dend_69, id: dend_69, parent: soma_0 (entry count 21/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 3.61398, 12.4986, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 3.61398, 12.4986, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 3.93492, 14.029, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 4.00054, 14.3419, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 4.40714, 16.2808, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 4.78343, 18.0751, -0.788928, 2.06 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 27/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.65398, 10.4091, -2.84893, 1.77 ) }
    dend_58 { pt3dadd( 4.18248, 11.5348, -4.5573, 1.62 ) }
    dend_58 { pt3dadd( 4.63372, 12.2707, -5.49899, 1.62 ) }
    dend_58 { pt3dadd( 4.65078, 12.2941, -5.53996, 1.62 ) }
    dend_58 { pt3dadd( 5.05139, 12.7514, -6.50933, 1.47 ) }
    dend_58 { pt3dadd( 5.09187, 12.7875, -6.6016, 1.47 ) }
    dend_58 { pt3dadd( 6.07263, 13.4354, -8.71928, 1.47 ) }
    dend_58 { pt3dadd( 6.97985, 13.7211, -10.4408, 1.92 ) }
    dend_58 { pt3dadd( 8.63081, 14.0626, -13.5657, 1.92 ) }
    dend_58 { pt3dadd( 9.18752, 14.1435, -14.6323, 1.92 ) }
    dend_58 { pt3dadd( 9.75223, 14.1638, -15.7433, 1.92 ) }
    dend_58 { pt3dadd( 10.2935, 14.1511, -16.8271, 1.84 ) }
    dend_58 { pt3dadd( 11.0565, 14.0192, -18.3811, 1.84 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 40/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.85602, 8.41412, 2.46107, 1.62 ) }
    dend_45 { pt3dadd( -2.85602, 8.41412, 2.46107, 1.62 ) }
    dend_45 { pt3dadd( -3.42098, 9.03105, 2.65979, 1.62 ) }
    dend_45 { pt3dadd( -3.47179, 9.08581, 2.67639, 1.62 ) }
    dend_45 { pt3dadd( -4.69638, 10.4611, 3.05683, 1.84 ) }
    dend_45 { pt3dadd( -5.68808, 11.5915, 3.35765, 1.84 ) }
    dend_45 { pt3dadd( -6.75499, 12.8075, 3.68129, 1.62 ) }
    dend_45 { pt3dadd( -7.93653, 14.1588, 4.04712, 1.62 ) }
    dend_45 { pt3dadd( -9.29375, 15.7201, 4.48262, 1.92 ) }
    dend_45 { pt3dadd( -9.98729, 16.5276, 4.70717, 1.92 ) }
    dend_45 { pt3dadd( -10.035, 16.5856, 4.723, 1.92 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.07398, -9.26789, 1.15107, 2.21 ) }
    dend_24 { pt3dadd( 6.07398, -9.26789, 1.15107, 2.21 ) }
    dend_24 { pt3dadd( 6.64646, -10.3286, 2.64645, 1.84 ) }
    dend_24 { pt3dadd( 7.39587, -11.7172, 4.604, 1.84 ) }
    dend_24 { pt3dadd( 7.41842, -11.759, 4.6629, 1.84 ) }
    dend_24 { pt3dadd( 8.193, -13.1942, 6.68624, 1.62 ) }
    dend_24 { pt3dadd( 9.00733, -14.703, 8.81333, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.38602, -11.7039, -1.22893, 3.24 ) }
    dend_0 { pt3dadd( -2.38602, -11.7039, -1.22893, 3.24 ) }
    dend_0 { pt3dadd( -2.79412, -13.0853, -1.21254, 3.24 ) }
    dend_0 { pt3dadd( -3.28742, -14.755, -1.19274, 2.87 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 62/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.62298, 11.7252, 1.00426, 0.670433 ) }
    axon_0 { pt3dadd( 4.79915, 26.5665, 1.00426, 0.670433 ) }
    axon_0 { pt3dadd( 6.97531, 41.4078, 1.00426, 0.670433 ) }
    // Section: dend_73, id: dend_73, parent: dend_69 (entry count 65/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 4.78343, 18.0751, -0.788928, 1.47 ) }
    dend_73 { pt3dadd( 5.52277, 19.0957, 0.417078, 1.47 ) }
    dend_73 { pt3dadd( 7.69063, 21.9738, 2.99241, 1.18 ) }
    dend_73 { pt3dadd( 7.73136, 22.0289, 3.02767, 1.18 ) }
    dend_73 { pt3dadd( 8.78357, 23.348, 3.58829, 1.18 ) }
    dend_73 { pt3dadd( 10.0277, 24.8243, 4.00284, 1.18 ) }
    dend_73 { pt3dadd( 10.0704, 24.8738, 4.01317, 1.18 ) }
    dend_73 { pt3dadd( 11.295, 26.2508, 3.96911, 1.4 ) }
    dend_73 { pt3dadd( 12.5265, 27.5876, 3.67632, 1.4 ) }
    dend_73 { pt3dadd( 13.8706, 29.1502, 3.3459, 1.18 ) }
    dend_73 { pt3dadd( 14.7399, 30.2557, 3.11201, 1.18 ) }
    dend_73 { pt3dadd( 14.7918, 30.3272, 3.10362, 1.18 ) }
    dend_73 { pt3dadd( 15.5414, 31.3993, 3.05342, 1.18 ) }
    dend_73 { pt3dadd( 15.5905, 31.473, 3.06109, 1.18 ) }
    dend_73 { pt3dadd( 16.5053, 32.8909, 3.45169, 1.18 ) }
    dend_73 { pt3dadd( 16.5498, 32.9603, 3.48385, 1.18 ) }
    dend_73 { pt3dadd( 17.8487, 34.8087, 4.46511, 1.18 ) }
    dend_73 { pt3dadd( 17.8849, 34.8567, 4.49256, 1.18 ) }
    dend_73 { pt3dadd( 18.8197, 35.9846, 5.1438, 1.18 ) }
    dend_73 { pt3dadd( 19.6945, 36.9976, 5.70471, 1.18 ) }
    dend_73 { pt3dadd( 21.2365, 38.7073, 6.64051, 1.03 ) }
    dend_73 { pt3dadd( 22.5408, 40.2229, 7.3881, 1.03 ) }
    dend_73 { pt3dadd( 22.5796, 40.2714, 7.41064, 1.03 ) }
    dend_73 { pt3dadd( 23.7374, 41.7501, 8.05812, 0.81 ) }
    dend_73 { pt3dadd( 24.6708, 42.9902, 8.54508, 0.81 ) }
    dend_73 { pt3dadd( 24.7068, 43.0422, 8.56509, 0.81 ) }
    dend_73 { pt3dadd( 26.015, 45.1165, 9.28302, 1.03 ) }
    dend_73 { pt3dadd( 27.22, 47.2812, 10.106, 1.03 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 93/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 4.78343, 18.0751, -0.788928, 1.11 ) }
    dend_70 { pt3dadd( 3.12332, 21.8976, 0.788037, 1.11 ) }
    dend_70 { pt3dadd( 2.65909, 23.1646, 1.07595, 1.11 ) }
    dend_70 { pt3dadd( 2.21171, 24.3855, 1.35341, 1.03 ) }
    dend_70 { pt3dadd( 1.42228, 26.54, 1.84301, 1.25 ) }
    dend_70 { pt3dadd( 1.38966, 26.629, 1.86324, 1.25 ) }
    dend_70 { pt3dadd( 0.490139, 29.0839, 2.42111, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_70 { pt3dadd( -0.117433, 30.8198, 2.37921, 1.47 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 1/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 11.0565, 14.0192, -18.3811, 1.55 ) }
    dend_68 { pt3dadd( 12.5285, 9.52231, -22.0741, 1.55 ) }
    dend_68 { pt3dadd( 12.9831, 8.2561, -22.8263, 0.81 ) }
    dend_68 { pt3dadd( 13.3832, 7.1006, -23.3267, 0.81 ) }
    dend_68 { pt3dadd( 13.9406, 5.42239, -23.9444, 0.81 ) }
    dend_68 { pt3dadd( 13.9684, 5.31663, -23.9867, 0.81 ) }
    dend_68 { pt3dadd( 14.2197, 3.94622, -24.6928, 1.11 ) }
    dend_68 { pt3dadd( 14.3339, 2.97403, -25.0768, 0.81 ) }
    dend_68 { pt3dadd( 14.2935, 1.67956, -25.9342, 0.59 ) }
    dend_68 { pt3dadd( 14.2726, 1.56039, -26.0403, 0.59 ) }
    dend_68 { pt3dadd( 13.8176, -0.0817271, -27.7067, 0.59 ) }
    dend_68 { pt3dadd( 13.2274, -2.00132, -29.6778, 1.25 ) }
    dend_68 { pt3dadd( 13.209, -2.05455, -29.7346, 1.25 ) }
    dend_68 { pt3dadd( 12.498, -4.03038, -31.8234, 1.18 ) }
    dend_68 { pt3dadd( 11.7239, -6.16399, -34.1032, 0.81 ) }
    dend_68 { pt3dadd( 10.9703, -8.37518, -36.369, 0.52 ) }
    dend_68 { pt3dadd( 10.7052, -9.24104, -37.18, 0.52 ) }
    dend_68 { pt3dadd( 10.6842, -9.30916, -37.2379, 0.52 ) }
    dend_68 { pt3dadd( 10.4876, -9.95716, -37.7741, 0.52 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 20/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 11.0565, 14.0192, -18.3811, 1.4 ) }
    dend_59 { pt3dadd( 13.4945, 13.2895, -19.1194, 1.4 ) }
    dend_59 { pt3dadd( 16.3824, 12.4251, -19.994, 1.4 ) }
    dend_59 { pt3dadd( 16.4479, 12.4055, -20.0138, 1.4 ) }
    dend_59 { pt3dadd( 17.9657, 11.9511, -20.4735, 1.4 ) }
    dend_59 { pt3dadd( 18.1125, 11.9072, -20.5179, 1.4 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 26/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -10.035, 16.5856, 4.723, 0.88 ) }
    dend_49 { pt3dadd( -10.5292, 17.8707, 5.12818, 0.88 ) }
    dend_49 { pt3dadd( -10.7807, 18.5944, 5.34381, 0.88 ) }
    dend_49 { pt3dadd( -11.1481, 19.8107, 5.67758, 0.88 ) }
    dend_49 { pt3dadd( -11.6929, 21.8041, 6.20004, 0.74 ) }
    dend_49 { pt3dadd( -11.9947, 23.0988, 6.53986, 0.74 ) }
    dend_49 { pt3dadd( -12.1523, 23.9175, 6.74534, 1.03 ) }
    dend_49 { pt3dadd( -12.162, 24.0074, 6.76397, 1.03 ) }
    dend_49 { pt3dadd( -12.1996, 24.9834, 6.99937, 1.03 ) }
    dend_49 { pt3dadd( -12.1987, 25.1099, 7.03222, 1.03 ) }
    dend_49 { pt3dadd( -12.2372, 26.375, 7.45167, 0.88 ) }
    dend_49 { pt3dadd( -12.4473, 27.664, 8.0512, 1.18 ) }
    dend_49 { pt3dadd( -12.4681, 27.7316, 8.0886, 1.18 ) }
    dend_49 { pt3dadd( -12.9751, 28.9885, 8.85053, 1.18 ) }
    dend_49 { pt3dadd( -13.5591, 30.1569, 9.62643, 0.81 ) }
    dend_49 { pt3dadd( -14.3532, 31.531, 10.5908, 0.81 ) }
    dend_49 { pt3dadd( -15.4573, 33.2121, 11.7939, 0.81 ) }
    dend_49 { pt3dadd( -16.2568, 34.3413, 12.6088, 0.81 ) }
    dend_49 { pt3dadd( -16.2969, 34.3976, 12.6473, 0.81 ) }
    dend_49 { pt3dadd( -16.9785, 35.3929, 13.2542, 0.66 ) }
    dend_49 { pt3dadd( -17.0147, 35.4553, 13.2878, 0.66 ) }
    dend_49 { pt3dadd( -17.4799, 36.699, 13.7474, 0.66 ) }
    dend_49 { pt3dadd( -17.5331, 37.0236, 13.8528, 0.66 ) }
    dend_49 { pt3dadd( -17.5801, 38.0811, 14.2662, 0.96 ) }
    dend_49 { pt3dadd( -17.5628, 39.2698, 14.7694, 0.96 ) }
    dend_49 { pt3dadd( -17.5308, 39.7118, 14.9669, 0.96 ) }
    dend_49 { pt3dadd( -17.4723, 40.3222, 15.2561, 0.96 ) }
    dend_49 { pt3dadd( -17.2608, 41.8906, 16.0789, 0.81 ) }
    dend_49 { pt3dadd( -17.0632, 43.1837, 16.7918, 0.81 ) }
    dend_49 { pt3dadd( -16.8729, 44.21, 17.3953, 0.81 ) }
    dend_49 { pt3dadd( -16.8556, 44.3097, 17.4624, 0.81 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 57/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -10.035, 16.5856, 4.723, 0.88 ) }
    dend_46 { pt3dadd( -10.0168, 17.1457, 4.71815, 0.88 ) }
    dend_46 { pt3dadd( -9.98409, 17.8118, 4.70701, 0.74 ) }
    dend_46 { pt3dadd( -9.93521, 18.6129, 4.6881, 0.74 ) }
    dend_46 { pt3dadd( -9.93102, 18.6763, 4.68599, 0.74 ) }
    dend_46 { pt3dadd( -9.81462, 20.0675, 4.63815, 0.74 ) }
    dend_46 { pt3dadd( -9.72113, 21.0244, 4.60896, 0.88 ) }
    dend_46 { pt3dadd( -9.66366, 21.5515, 4.58178, 0.88 ) }
    dend_46 { pt3dadd( -9.64523, 21.7102, 4.5726, 0.88 ) }
    dend_46 { pt3dadd( -9.5605, 22.4408, 4.5327, 0.74 ) }
    dend_46 { pt3dadd( -9.46438, 23.3413, 4.51604, 0.74 ) }
    dend_46 { pt3dadd( -9.36287, 24.409, 4.5314, 0.74 ) }
    dend_46 { pt3dadd( -9.28489, 25.4098, 4.57101, 1.62 ) }
    dend_46 { pt3dadd( -9.21336, 26.4886, 4.62997, 1.62 ) }
    dend_46 { pt3dadd( -9.15334, 27.7375, 4.73759, 1.33 ) }
    dend_46 { pt3dadd( -9.12213, 28.6508, 4.84435, 0.96 ) }
    dend_46 { pt3dadd( -9.10633, 29.5059, 4.96435, 0.96 ) }
    dend_46 { pt3dadd( -9.09507, 30.2257, 5.08424, 0.96 ) }
    dend_46 { pt3dadd( -9.09364, 30.2882, 5.09617, 0.96 ) }
    dend_46 { pt3dadd( -9.07518, 31.2011, 5.27033, 0.96 ) }
    dend_46 { pt3dadd( -9.0413, 32.2572, 5.45069, 0.74 ) }
    dend_46 { pt3dadd( -9.0056, 33.0527, 5.55161, 0.74 ) }
    dend_46 { pt3dadd( -9.00214, 33.1158, 5.55867, 0.74 ) }
    dend_46 { pt3dadd( -8.96659, 33.7101, 5.5436, 1.03 ) }
    dend_46 { pt3dadd( -8.96236, 33.782, 5.53374, 1.03 ) }
    dend_46 { pt3dadd( -8.92795, 34.4243, 5.37883, 1.03 ) }
    dend_46 { pt3dadd( -8.92579, 34.4851, 5.36112, 1.03 ) }
    dend_46 { pt3dadd( -8.89365, 35.5818, 4.92177, 1.03 ) }
    dend_46 { pt3dadd( -8.8555, 37.0722, 4.22465, 1.03 ) }
    dend_46 { pt3dadd( -8.854, 37.1359, 4.19132, 1.03 ) }
    dend_46 { pt3dadd( -8.82495, 38.279, 3.55166, 1.03 ) }
    dend_46 { pt3dadd( -8.8237, 38.3331, 3.51991, 1.03 ) }
    dend_46 { pt3dadd( -8.80954, 39.4876, 2.85675, 0.88 ) }
    dend_46 { pt3dadd( -8.80925, 39.5499, 2.82101, 0.88 ) }
    dend_46 { pt3dadd( -8.81126, 39.9784, 2.6316, 0.88 ) }
    dend_46 { pt3dadd( -8.81276, 40.0371, 2.60849, 0.88 ) }
    dend_46 { pt3dadd( -8.831, 40.6065, 2.41995, 0.88 ) }
    dend_46 { pt3dadd( -8.84173, 40.9539, 2.35399, 0.88 ) }
    dend_46 { pt3dadd( -8.85466, 41.6433, 2.3102, 0.88 ) }
    dend_46 { pt3dadd( -8.85489, 41.7068, 2.30672, 0.88 ) }
    dend_46 { pt3dadd( -8.81987, 42.4546, 2.27787, 0.88 ) }
    dend_46 { pt3dadd( -8.80286, 42.7508, 2.26783, 0.88 ) }
    dend_46 { pt3dadd( -8.72725, 43.7514, 2.24251, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_46 { pt3dadd( -8.62934, 44.8126, 2.23308, 1.03 ) }
    dend_46 { pt3dadd( -8.62212, 44.8849, 2.23459, 1.03 ) }
    dend_46 { pt3dadd( -8.4819, 46.0956, 2.26031, 1.03 ) }
    // Section: dend_30, id: dend_30, parent: dend_24 (entry count 3/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 9.00733, -14.703, 8.81333, 1.11 ) }
    dend_30 { pt3dadd( 10.6529, -17.3973, 9.50061, 1.11 ) }
    dend_30 { pt3dadd( 11.3449, -18.4862, 9.68463, 1.11 ) }
    dend_30 { pt3dadd( 11.4186, -18.5882, 9.67096, 1.11 ) }
    dend_30 { pt3dadd( 12.0743, -19.3602, 9.46613, 1.33 ) }
    dend_30 { pt3dadd( 12.9968, -20.3012, 9.13446, 1.11 ) }
    dend_30 { pt3dadd( 14.4592, -21.6555, 8.61753, 1.11 ) }
    dend_30 { pt3dadd( 14.5004, -21.6923, 8.59862, 1.11 ) }
    dend_30 { pt3dadd( 16.4883, -23.313, 7.67854, 1.25 ) }
    dend_30 { pt3dadd( 17.9926, -24.4875, 6.97527, 1.55 ) }
    dend_30 { pt3dadd( 19.4386, -25.5128, 6.29393, 1.55 ) }
    dend_30 { pt3dadd( 20.3002, -26.0815, 5.86566, 1.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 15/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 9.00733, -14.703, 8.81333, 1.47 ) }
    dend_25 { pt3dadd( 8.12855, -20.6115, 16.6483, 1.47 ) }
    dend_25 { pt3dadd( 7.97914, -22.1083, 18.3688, 1.03 ) }
    dend_25 { pt3dadd( 8.0148, -23.1635, 19.3122, 1.03 ) }
    dend_25 { pt3dadd( 8.25535, -25.0897, 20.7807, 0.88 ) }
    dend_25 { pt3dadd( 8.27404, -25.1739, 20.8391, 0.88 ) }
    dend_25 { pt3dadd( 8.84781, -27.3202, 22.2593, 0.88 ) }
    dend_25 { pt3dadd( 8.87711, -27.3876, 22.2875, 0.88 ) }
    dend_25 { pt3dadd( 10.5329, -30.4851, 23.7508, 0.88 ) }
    dend_25 { pt3dadd( 11.3427, -31.7098, 24.4437, 1.47 ) }
    dend_25 { pt3dadd( 12.9416, -33.7674, 25.7902, 0.88 ) }
    dend_25 { pt3dadd( 12.9994, -33.835, 25.843, 0.88 ) }
    dend_25 { pt3dadd( 14.6234, -35.4467, 27.3866, 0.74 ) }
    dend_25 { pt3dadd( 14.7478, -35.5574, 27.5183, 0.74 ) }
    dend_25 { pt3dadd( 15.9558, -36.4534, 28.9593, 0.74 ) }
    dend_25 { pt3dadd( 16.0321, -36.5014, 29.0476, 0.74 ) }
    dend_25 { pt3dadd( 17.2388, -37.1648, 30.5234, 1.33 ) }
    dend_25 { pt3dadd( 18.182, -37.6855, 31.8257, 0.96 ) }
    dend_25 { pt3dadd( 19.6403, -38.5228, 33.9293, 1.11 ) }
    dend_25 { pt3dadd( 19.6867, -38.5513, 33.9997, 1.11 ) }
    dend_25 { pt3dadd( 20.4462, -39.0957, 35.2312, 1.11 ) }
    dend_25 { pt3dadd( 21.6958, -40.135, 37.124, 0.81 ) }
    dend_25 { pt3dadd( 22.6431, -41.0126, 38.4537, 1.25 ) }
    dend_25 { pt3dadd( 23.3909, -41.9005, 39.5375, 0.88 ) }
    dend_25 { pt3dadd( 23.432, -41.9592, 39.5925, 0.88 ) }
    dend_25 { pt3dadd( 24.2996, -43.5462, 40.7561, 0.81 ) }
    dend_25 { pt3dadd( 24.8277, -45.0632, 41.4815, 0.81 ) }
    dend_25 { pt3dadd( 24.8549, -45.1898, 41.5083, 0.81 ) }
    dend_25 { pt3dadd( 25.0771, -47.2893, 41.743, 0.81 ) }
    dend_25 { pt3dadd( 25.0793, -47.3686, 41.7492, 0.81 ) }
    dend_25 { pt3dadd( 25.0721, -48.821, 41.8141, 0.81 ) }
    dend_25 { pt3dadd( 25.0942, -50.1679, 41.9308, 1.18 ) }
    dend_25 { pt3dadd( 25.171, -51.5134, 42.161, 0.88 ) }
    dend_25 { pt3dadd( 25.4793, -53.0318, 42.7767, 0.59 ) }
    dend_25 { pt3dadd( 25.8803, -54.1595, 43.7373, 0.59 ) }
    dend_25 { pt3dadd( 25.9078, -54.229, 43.8084, 0.59 ) }
    dend_25 { pt3dadd( 26.8082, -56.2487, 46.2356, 0.59 ) }
    dend_25 { pt3dadd( 26.8363, -56.3095, 46.3135, 0.59 ) }
    dend_25 { pt3dadd( 27.9429, -58.5533, 49.0215, 0.81 ) }
    dend_25 { pt3dadd( 28.8909, -60.517, 51.2861, 0.81 ) }
    dend_25 { pt3dadd( 29.4377, -61.736, 52.6413, 0.81 ) }
    dend_25 { pt3dadd( 29.4734, -61.8176, 52.7323, 0.81 ) }
    dend_25 { pt3dadd( 30.2986, -63.8168, 54.9038, 0.74 ) }
    dend_25 { pt3dadd( 31.1478, -65.673, 56.9015, 0.52 ) }
    dend_25 { pt3dadd( 32.2095, -67.7767, 59.066, 0.52 ) }
    dend_25 { pt3dadd( 32.2995, -67.9118, 59.2127, 0.52 ) }
    dend_25 { pt3dadd( 33.6526, -69.555, 61.3077, 0.52 ) }
    dend_25 { pt3dadd( 33.6945, -69.6056, 61.3689, 0.52 ) }
    dend_25 { pt3dadd( 34.3123, -70.3859, 62.2895, 0.52 ) }
    dend_25 { pt3dadd( 34.3967, -70.5234, 62.4292, 0.52 ) }
    dend_25 { pt3dadd( 35.0052, -71.7977, 63.1688, 0.52 ) }
    dend_25 { pt3dadd( 35.1095, -72.0746, 63.2842, 0.52 ) }
    dend_25 { pt3dadd( 35.9855, -74.6239, 64.1222, 0.52 ) }
    dend_25 { pt3dadd( 36.5573, -76.1577, 64.6737, 0.52 ) }
    dend_25 { pt3dadd( 36.7113, -76.5764, 64.831, 0.52 ) }
    dend_25 { pt3dadd( 37.1955, -77.9138, 65.3402, 0.52 ) }
    dend_25 { pt3dadd( 37.2407, -78.0368, 65.3884, 0.52 ) }
    dend_25 { pt3dadd( 38.0902, -79.6914, 66.1504, 0.52 ) }
    dend_25 { pt3dadd( 38.7267, -80.2858, 66.6067, 0.88 ) }
    dend_25 { pt3dadd( 38.8739, -80.3795, 66.6878, 0.88 ) }
    // Section: dend_21, id: dend_21, parent: dend_0 (entry count 75/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -3.28742, -14.755, -1.19274, 0.59 ) }
    dend_21 { pt3dadd( -4.11658, -14.9925, -1.3543, 0.59 ) }
    dend_21 { pt3dadd( -5.42414, -15.3981, -1.45103, 0.59 ) }
    dend_21 { pt3dadd( -7.03627, -15.9313, -1.45235, 0.59 ) }
    dend_21 { pt3dadd( -7.66901, -16.1596, -1.42414, 0.59 ) }
    dend_21 { pt3dadd( -9.90682, -17.0823, -1.26443, 0.88 ) }
    dend_21 { pt3dadd( -10.9965, -17.5891, -1.20737, 0.88 ) }
    dend_21 { pt3dadd( -12.2059, -18.2211, -1.11772, 0.96 ) }
    dend_21 { pt3dadd( -13.2291, -18.8071, -1.03615, 1.25 ) }
    dend_21 { pt3dadd( -14.2185, -19.4419, -0.999987, 1.47 ) }
    dend_21 { pt3dadd( -15.4898, -20.2349, -1.28, 1.11 ) }
    dend_21 { pt3dadd( -17.0209, -21.1323, -2.06377, 1.03 ) }
    dend_21 { pt3dadd( -17.7433, -21.5223, -2.53857, 1.03 ) }
    dend_21 { pt3dadd( -17.8221, -21.5614, -2.59835, 1.03 ) }
    dend_21 { pt3dadd( -19.4295, -22.3323, -3.91287, 1.55 ) }
    dend_21 { pt3dadd( -22.7478, -23.8977, -6.73664, 0.66 ) }
    dend_21 { pt3dadd( -24.0203, -24.5234, -7.81549, 0.66 ) }
    dend_21 { pt3dadd( -24.7339, -24.9281, -8.42268, 0.66 ) }
    dend_21 { pt3dadd( -24.7818, -24.9612, -8.46212, 0.66 ) }
    dend_21 { pt3dadd( -25.5186, -25.5744, -9.02122, 0.74 ) }
    dend_21 { pt3dadd( -26.1462, -26.2483, -9.42139, 1.03 ) }
    dend_21 { pt3dadd( -26.8857, -27.4691, -9.90013, 1.03 ) }
    dend_21 { pt3dadd( -27.8135, -29.0984, -10.4674, 1.25 ) }
    dend_21 { pt3dadd( -28.3467, -30.0497, -10.8306, 1.18 ) }
    dend_21 { pt3dadd( -28.4068, -30.1491, -10.8713, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( -28.8963, -30.8118, -11.2347, 0.52 ) }
    dend_21 { pt3dadd( -28.944, -30.8535, -11.2662, 0.52 ) }
    dend_21 { pt3dadd( -29.8241, -31.193, -11.7641, 0.52 ) }
    dend_21 { pt3dadd( -29.8871, -31.2023, -11.7924, 0.52 ) }
    dend_21 { pt3dadd( -30.355, -31.2327, -12.0365, 0.52 ) }
    dend_21 { pt3dadd( -31.8311, -31.2884, -12.8215, 0.88 ) }
    dend_21 { pt3dadd( -32.8829, -31.3069, -13.3849, 1.25 ) }
    dend_21 { pt3dadd( -34.2975, -31.3459, -14.1682, 1.25 ) }
    dend_21 { pt3dadd( -35.0648, -31.3772, -14.6069, 0.88 ) }
    dend_21 { pt3dadd( -36.4463, -31.5329, -15.3871, 0.88 ) }
    dend_21 { pt3dadd( -37.0521, -31.6935, -15.7611, 0.52 ) }
    dend_21 { pt3dadd( -37.3889, -31.8722, -15.9717, 0.52 ) }
    dend_21 { pt3dadd( -37.6277, -32.0759, -16.1735, 0.52 ) }
    dend_21 { pt3dadd( -37.9103, -32.3326, -16.452, 0.52 ) }
    dend_21 { pt3dadd( -38.437, -32.7798, -17.0234, 0.52 ) }
    dend_21 { pt3dadd( -39.4398, -33.5783, -18.1348, 0.88 ) }
    dend_21 { pt3dadd( -40.0898, -34.0739, -18.8732, 1.25 ) }
    dend_21 { pt3dadd( -41.8969, -35.3593, -20.8296, 1.62 ) }
    dend_21 { pt3dadd( -43.4086, -36.3781, -22.3196, 1.55 ) }
    dend_21 { pt3dadd( -44.7306, -37.2208, -23.5313, 0.81 ) }
    dend_21 { pt3dadd( -44.8045, -37.2659, -23.5935, 0.81 ) }
    dend_21 { pt3dadd( -45.2192, -37.5316, -23.8948, 0.37 ) }
    dend_21 { pt3dadd( -46.1763, -38.2389, -24.4893, 0.37 ) }
    dend_21 { pt3dadd( -47.2933, -39.2906, -24.8934, 0.37 ) }
    dend_21 { pt3dadd( -47.3401, -39.3441, -24.9007, 0.37 ) }
    dend_21 { pt3dadd( -48.0219, -40.1323, -25.0166, 1.03 ) }
    dend_21 { pt3dadd( -48.6873, -40.8845, -25.155, 1.47 ) }
    dend_21 { pt3dadd( -49.3945, -41.687, -25.314, 0.96 ) }
    dend_21 { pt3dadd( -49.9437, -42.3141, -25.4488, 0.29 ) }
    dend_21 { pt3dadd( -51.4426, -43.9987, -25.8307, 0.29 ) }
    dend_21 { pt3dadd( -53.4555, -46.2058, -26.3282, 0.29 ) }
    dend_21 { pt3dadd( -54.4646, -47.2578, -26.5624, 0.29 ) }
    dend_21 { pt3dadd( -55.1561, -47.9373, -26.7385, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 33/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.28742, -14.755, -1.19274, 2.36 ) }
    dend_1 { pt3dadd( -3.37318, -15.0758, -1.23488, 2.36 ) }
    dend_1 { pt3dadd( -3.68035, -16.1716, -1.33617, 2.36 ) }
    dend_1 { pt3dadd( -4.2142, -18.0762, -1.51221, 1.99 ) }
    dend_1 { pt3dadd( -4.72093, -19.884, -1.67932, 1.99 ) }
    dend_1 { pt3dadd( -5.17218, -21.4939, -1.82812, 2.14 ) }
    dend_1 { pt3dadd( -5.67173, -23.2762, -1.99285, 3.02 ) }
    dend_1 { pt3dadd( -5.96723, -24.2524, -2.07408, 3.02 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 41/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.97531, 41.4078, 1.00426, 0.670433 ) }
    axon_1 { pt3dadd( 9.15148, 56.2491, 1.00426, 0.670433 ) }
    axon_1 { pt3dadd( 11.3276, 71.0904, 1.00426, 0.670433 ) }
    // Section: dend_77, id: dend_77, parent: dend_73 (entry count 44/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 27.22, 47.2812, 10.106, 0.74 ) }
    dend_77 { pt3dadd( 26.9772, 50.9443, 11.7938, 0.74 ) }
    dend_77 { pt3dadd( 26.9785, 51.0338, 11.8187, 0.74 ) }
    dend_77 { pt3dadd( 27.0979, 52.2275, 12.1026, 0.74 ) }
    dend_77 { pt3dadd( 27.2639, 53.3083, 12.3291, 0.59 ) }
    dend_77 { pt3dadd( 27.4741, 54.423, 12.5326, 0.59 ) }
    dend_77 { pt3dadd( 27.6644, 55.3444, 12.6792, 0.59 ) }
    dend_77 { pt3dadd( 27.685, 55.4232, 12.6806, 0.59 ) }
    dend_77 { pt3dadd( 27.9834, 56.5268, 12.7528, 0.22 ) }
    dend_77 { pt3dadd( 28.1534, 57.1175, 12.8171, 0.81 ) }
    dend_77 { pt3dadd( 28.3623, 57.8686, 12.9225, 1.03 ) }
    dend_77 { pt3dadd( 28.5576, 58.498, 13.0773, 1.03 ) }
    dend_77 { pt3dadd( 28.9437, 59.6946, 13.4282, 0.81 ) }
    dend_77 { pt3dadd( 29.3725, 60.942, 13.8203, 0.59 ) }
    dend_77 { pt3dadd( 29.9374, 62.5641, 14.3331, 0.59 ) }
    dend_77 { pt3dadd( 29.9739, 62.6651, 14.3718, 0.59 ) }
    dend_77 { pt3dadd( 30.8407, 64.9612, 15.3516, 0.59 ) }
    dend_77 { pt3dadd( 30.8677, 65.0305, 15.3824, 0.59 ) }
    dend_77 { pt3dadd( 31.2013, 65.9266, 15.8155, 0.44 ) }
    dend_77 { pt3dadd( 31.4951, 66.8408, 16.3322, 0.44 ) }
    dend_77 { pt3dadd( 31.9679, 68.8239, 17.4844, 0.44 ) }
    dend_77 { pt3dadd( 32.0623, 69.3806, 17.791, 0.96 ) }
    dend_77 { pt3dadd( 32.1099, 70.0869, 18.1212, 0.96 ) }
    dend_77 { pt3dadd( 32.1496, 71.4518, 18.7325, 0.59 ) }
    dend_77 { pt3dadd( 32.1441, 72.699, 19.2372, 0.29 ) }
    dend_77 { pt3dadd( 32.1211, 73.6325, 19.5549, 0.29 ) }
    dend_77 { pt3dadd( 32.1122, 73.8035, 19.5892, 0.29 ) }
    dend_77 { pt3dadd( 32.0206, 75.594, 19.7914, 0.29 ) }
    dend_77 { pt3dadd( 32.0179, 75.6874, 19.7909, 0.29 ) }
    dend_77 { pt3dadd( 32.0241, 76.7886, 19.581, 0.29 ) }
    dend_77 { pt3dadd( 32.0274, 76.956, 19.5305, 0.81 ) }
    dend_77 { pt3dadd( 32.0168, 77.7592, 19.2516, 0.81 ) }
    dend_77 { pt3dadd( 31.9728, 78.2953, 19.0449, 0.29 ) }
    dend_77 { pt3dadd( 31.7194, 79.2027, 18.6545, 0.29 ) }
    dend_77 { pt3dadd( 31.2754, 80.152, 18.2248, 0.29 ) }
    dend_77 { pt3dadd( 31.1654, 80.3319, 18.1396, 0.29 ) }
    dend_77 { pt3dadd( 30.6077, 81.0829, 17.7302, 0.29 ) }
    dend_77 { pt3dadd( 30.3207, 81.4136, 17.5312, 0.29 ) }
    dend_77 { pt3dadd( 29.0038, 82.703, 16.6978, 0.29 ) }
    dend_77 { pt3dadd( 27.8406, 83.6753, 15.999, 0.29 ) }
    dend_77 { pt3dadd( 27.7658, 83.7343, 15.9566, 0.29 ) }
    dend_77 { pt3dadd( 26.3625, 84.8199, 15.1376, 0.29 ) }
    dend_77 { pt3dadd( 26.2407, 84.9111, 15.0631, 0.29 ) }
    dend_77 { pt3dadd( 25.5245, 85.4271, 14.6081, 0.29 ) }
    dend_77 { pt3dadd( 24.8694, 85.8418, 14.1674, 0.81 ) }
    dend_77 { pt3dadd( 24.0621, 86.2636, 13.6759, 0.81 ) }
    dend_77 { pt3dadd( 22.7504, 97.6942, 15.4661, 0.81 ) }
    dend_77 { pt3dadd( 21.4762, 108.68, 18.9454, 0.81 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 92/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 27.22, 47.2812, 10.106, 1.03 ) }
    dend_74 { pt3dadd( 28.8531, 47.7202, 11.3318, 1.03 ) }
    dend_74 { pt3dadd( 29.8412, 48.0098, 12.0267, 0.74 ) }
    dend_74 { pt3dadd( 31.2031, 48.5675, 12.8755, 0.74 ) }
    dend_74 { pt3dadd( 31.2491, 48.5938, 12.9007, 0.74 ) }
    dend_74 { pt3dadd( 32.0585, 49.1619, 13.1893, 0.52 ) }
    dend_74 { pt3dadd( 32.6118, 49.6028, 13.2879, 0.52 ) }
    dend_74 { pt3dadd( 32.6809, 49.6712, 13.2757, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_74 { pt3dadd( 33.5705, 50.6847, 13.1141, 0.81 ) }
    dend_74 { pt3dadd( 34.2116, 51.4716, 12.9835, 1.11 ) }
    dend_74 { pt3dadd( 35.3817, 52.8988, 13.0454, 0.66 ) }
    dend_74 { pt3dadd( 35.9299, 53.5766, 13.2054, 0.59 ) }
    dend_74 { pt3dadd( 36.5866, 54.272, 13.6857, 0.59 ) }
    dend_74 { pt3dadd( 37.6984, 55.2887, 14.9332, 0.59 ) }
    dend_74 { pt3dadd( 37.7413, 55.3184, 14.9912, 0.59 ) }
    dend_74 { pt3dadd( 39.0352, 56.0618, 16.8369, 0.59 ) }
    dend_74 { pt3dadd( 39.0765, 56.0835, 16.8992, 0.59 ) }
    dend_74 { pt3dadd( 40.0535, 56.6184, 18.3114, 1.25 ) }
    dend_74 { pt3dadd( 40.0988, 56.6466, 18.3683, 1.25 ) }
    dend_74 { pt3dadd( 40.9944, 57.3309, 19.1797, 0.96 ) }
    dend_74 { pt3dadd( 42.1916, 58.3433, 19.9528, 0.66 ) }
    dend_74 { pt3dadd( 42.2613, 58.4059, 19.9805, 0.66 ) }
    dend_74 { pt3dadd( 43.232, 59.3263, 20.2714, 0.59 ) }
    dend_74 { pt3dadd( 44.2476, 60.3697, 20.4532, 0.59 ) }
    dend_74 { pt3dadd( 45.0997, 61.284, 20.576, 0.59 ) }
    dend_74 { pt3dadd( 45.6722, 61.9522, 20.6272, 0.59 ) }
    dend_74 { pt3dadd( 45.9636, 62.2777, 20.6408, 0.59 ) }
    dend_74 { pt3dadd( 46.3316, 62.6415, 20.6683, 0.81 ) }
    dend_74 { pt3dadd( 46.9865, 63.2053, 20.7331, 0.81 ) }
    dend_74 { pt3dadd( 47.2409, 63.399, 20.7656, 0.81 ) }
    dend_74 { pt3dadd( 48.2314, 64.1237, 20.9383, 0.81 ) }
    dend_74 { pt3dadd( 49.2044, 64.8274, 21.112, 0.44 ) }
    dend_74 { pt3dadd( 50.0518, 65.4317, 21.2638, 0.44 ) }
    dend_74 { pt3dadd( 50.1363, 65.4912, 21.2786, 0.44 ) }
    dend_74 { pt3dadd( 50.9527, 66.0702, 21.4474, 0.81 ) }
    dend_74 { pt3dadd( 51.4367, 66.4289, 21.5559, 0.96 ) }
    dend_74 { pt3dadd( 52.0844, 66.9472, 21.7299, 0.81 ) }
    dend_74 { pt3dadd( 52.1343, 66.9927, 21.7448, 0.81 ) }
    dend_74 { pt3dadd( 52.9339, 67.8483, 21.9441, 0.52 ) }
    dend_74 { pt3dadd( 53.7975, 68.8488, 22.1253, 0.52 ) }
    dend_74 { pt3dadd( 54.24, 69.4038, 22.235, 0.81 ) }
    dend_74 { pt3dadd( 55.0901, 70.5273, 22.4655, 0.52 ) }
    dend_74 { pt3dadd( 55.2194, 70.6988, 22.5096, 0.52 ) }
    dend_74 { pt3dadd( 56.6903, 72.61, 23.064, 0.37 ) }
    dend_74 { pt3dadd( 56.7326, 72.6628, 23.0805, 0.37 ) }
    dend_74 { pt3dadd( 57.7019, 73.8277, 23.4536, 0.37 ) }
    dend_74 { pt3dadd( 58.2292, 74.4281, 23.6704, 1.03 ) }
    dend_74 { pt3dadd( 59.4038, 75.6734, 24.1747, 1.03 ) }
    dend_74 { pt3dadd( 59.4506, 75.7195, 24.1964, 1.03 ) }
    dend_74 { pt3dadd( 60.2202, 76.4072, 24.6079, 1.03 ) }
    dend_74 { pt3dadd( 60.2687, 76.4513, 24.6298, 1.03 ) }
    dend_74 { pt3dadd( 60.9993, 77.1537, 24.8753, 0.66 ) }
    dend_74 { pt3dadd( 61.0543, 77.2081, 24.8921, 0.66 ) }
    dend_74 { pt3dadd( 61.5309, 77.7327, 24.994, 0.66 ) }
    dend_74 { pt3dadd( 61.6036, 77.8168, 25.011, 0.66 ) }
    dend_74 { pt3dadd( 62.058, 78.393, 25.1389, 0.66 ) }
    dend_74 { pt3dadd( 63.0109, 79.6249, 25.4163, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 49/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -0.117433, 30.8198, 2.37921, 0.96 ) }
    dend_72 { pt3dadd( -0.109913, 31.3525, 2.38817, 0.96 ) }
    dend_72 { pt3dadd( -0.16166, 32.4515, 2.40504, 0.74 ) }
    dend_72 { pt3dadd( -0.356394, 33.8749, 2.45031, 0.74 ) }
    dend_72 { pt3dadd( -0.367528, 33.9368, 2.45254, 0.74 ) }
    dend_72 { pt3dadd( -0.652578, 35.1846, 2.51026, 0.66 ) }
    dend_72 { pt3dadd( -0.948027, 36.3407, 2.57072, 0.66 ) }
    dend_72 { pt3dadd( -1.00388, 36.5035, 2.5877, 0.66 ) }
    dend_72 { pt3dadd( -1.5542, 37.491, 2.74802, 1.03 ) }
    dend_72 { pt3dadd( -1.58988, 37.5397, 2.76185, 1.03 ) }
    dend_72 { pt3dadd( -2.08491, 38.1438, 3.01521, 1.03 ) }
    dend_72 { pt3dadd( -2.12797, 38.1931, 3.0445, 1.03 ) }
    dend_72 { pt3dadd( -2.59457, 38.7182, 3.39845, 0.81 ) }
    dend_72 { pt3dadd( -3.46412, 39.7804, 4.19021, 0.81 ) }
    dend_72 { pt3dadd( -4.07203, 40.5868, 4.81272, 0.81 ) }
    dend_72 { pt3dadd( -4.73451, 41.5214, 5.61026, 0.66 ) }
    dend_72 { pt3dadd( -5.33648, 42.4415, 6.43473, 0.66 ) }
    dend_72 { pt3dadd( -5.36572, 42.4908, 6.47794, 0.66 ) }
    dend_72 { pt3dadd( -5.95222, 43.6594, 7.44561, 1.03 ) }
    dend_72 { pt3dadd( -6.26123, 44.4128, 8.0483, 1.03 ) }
    dend_72 { pt3dadd( -6.65179, 45.5107, 8.92856, 0.96 ) }
    dend_72 { pt3dadd( -6.80384, 46.0542, 9.3602, 0.96 ) }
    dend_72 { pt3dadd( -6.9715, 46.863, 9.95389, 0.52 ) }
    dend_72 { pt3dadd( -7.10651, 47.7014, 10.5345, 0.52 ) }
    dend_72 { pt3dadd( -7.11168, 47.7548, 10.5664, 0.52 ) }
    dend_72 { pt3dadd( -7.14479, 48.9501, 11.2079, 1.11 ) }
    dend_72 { pt3dadd( -7.1256, 49.8705, 11.5866, 1.11 ) }
    dend_72 { pt3dadd( -7.07109, 50.8222, 12.0006, 1.03 ) }
    dend_72 { pt3dadd( -7.06694, 50.8792, 12.0263, 1.03 ) }
    dend_72 { pt3dadd( -7.07272, 51.5588, 12.3284, 0.66 ) }
    dend_72 { pt3dadd( -7.08112, 51.6258, 12.3564, 0.66 ) }
    dend_72 { pt3dadd( -7.39459, 52.3435, 12.6457, 0.44 ) }
    dend_72 { pt3dadd( -7.92417, 52.9938, 12.9937, 0.44 ) }
    dend_72 { pt3dadd( -8.15031, 53.1889, 13.1498, 0.44 ) }
    dend_72 { pt3dadd( -8.67064, 53.634, 13.6911, 0.44 ) }
    dend_72 { pt3dadd( -8.78757, 53.7487, 13.8628, 0.44 ) }
    dend_72 { pt3dadd( -9.28534, 54.3912, 14.8156, 0.44 ) }
    dend_72 { pt3dadd( -9.30206, 54.4293, 14.8733, 0.44 ) }
    dend_72 { pt3dadd( -9.44544, 55.269, 16.0343, 0.74 ) }
    dend_72 { pt3dadd( -9.40623, 56.3789, 17.5319, 0.52 ) }
    dend_72 { pt3dadd( -9.29914, 57.0643, 18.3736, 0.66 ) }
    dend_72 { pt3dadd( -9.17484, 57.6303, 19.0199, 0.66 ) }
    dend_72 { pt3dadd( -8.86358, 58.7584, 20.1447, 1.47 ) }
    dend_72 { pt3dadd( -8.74113, 59.1988, 20.5291, 1.47 ) }
    dend_72 { pt3dadd( -8.26781, 61.0052, 21.7381, 0.66 ) }
    dend_72 { pt3dadd( -8.051, 61.9854, 22.2641, 0.66 ) }
    dend_72 { pt3dadd( -8.02622, 62.1234, 22.333, 0.66 ) }
    dend_72 { pt3dadd( -7.92231, 63.3134, 22.8804, 0.66 ) }
    dend_72 { pt3dadd( -7.92127, 63.3799, 22.9107, 0.66 ) }
    dend_72 { pt3dadd( -7.91717, 65.202, 23.7833, 0.66 ) }
    dend_72 { pt3dadd( -7.91868, 65.2589, 23.8093, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_72 { pt3dadd( -7.97858, 66.1195, 24.3197, 0.66 ) }
    dend_72 { pt3dadd( -8.08251, 67.3609, 25.1597, 0.66 ) }
    dend_72 { pt3dadd( -8.20473, 68.5804, 26.0621, 0.88 ) }
    dend_72 { pt3dadd( -8.21725, 68.7666, 26.1928, 0.88 ) }
    dend_72 { pt3dadd( -8.21985, 69.7803, 26.8983, 0.88 ) }
    dend_72 { pt3dadd( -8.16159, 71.2106, 27.793, 1.11 ) }
    dend_72 { pt3dadd( -8.11963, 71.718, 28.0767, 0.88 ) }
    dend_72 { pt3dadd( -8.04741, 72.4641, 28.4638, 0.59 ) }
    dend_72 { pt3dadd( -7.99528, 73.8408, 29.0922, 0.59 ) }
    dend_72 { pt3dadd( -8.0141, 74.9108, 29.5826, 0.44 ) }
    dend_72 { pt3dadd( -8.06047, 75.6262, 29.9015, 0.44 ) }
    dend_72 { pt3dadd( -8.07777, 75.736, 29.9421, 0.44 ) }
    dend_72 { pt3dadd( -8.34999, 76.5789, 30.2638, 0.44 ) }
    dend_72 { pt3dadd( -8.55009, 76.9587, 30.417, 0.44 ) }
    dend_72 { pt3dadd( -8.82388, 77.3179, 30.5499, 0.44 ) }
    dend_72 { pt3dadd( -8.96906, 77.4999, 30.5981, 0.44 ) }
    dend_72 { pt3dadd( -9.16616, 77.9374, 30.6866, 0.74 ) }
    dend_72 { pt3dadd( -9.35019, 78.8237, 30.8254, 0.96 ) }
    dend_72 { pt3dadd( -9.34819, 78.8864, 30.8318, 0.96 ) }
    dend_72 { pt3dadd( -9.28518, 79.3428, 30.8676, 0.96 ) }
    dend_72 { pt3dadd( -9.26987, 79.4145, 30.8717, 0.96 ) }
    dend_72 { pt3dadd( -9.00332, 80.5563, 30.9266, 0.44 ) }
    dend_72 { pt3dadd( -8.989, 80.6283, 30.93, 0.44 ) }
    dend_72 { pt3dadd( -8.89709, 81.5579, 30.9834, 0.44 ) }
    dend_72 { pt3dadd( -8.89532, 81.6694, 30.9903, 0.44 ) }
    dend_72 { pt3dadd( -8.93478, 82.4489, 31.0236, 0.44 ) }
    dend_72 { pt3dadd( -9.02042, 83.2142, 31.0426, 0.96 ) }
    dend_72 { pt3dadd( -9.22079, 84.3907, 31.0727, 0.96 ) }
    dend_72 { pt3dadd( -9.55513, 85.8299, 31.1338, 0.96 ) }
    dend_72 { pt3dadd( -9.78456, 86.6257, 31.1784, 0.96 ) }
    dend_72 { pt3dadd( -9.99429, 87.3263, 31.2209, 0.44 ) }
    dend_72 { pt3dadd( -10.3365, 88.4441, 31.2956, 0.44 ) }
    dend_72 { pt3dadd( -10.7467, 89.8135, 31.3941, 0.44 ) }
    dend_72 { pt3dadd( -11.0582, 90.9322, 31.4925, 0.44 ) }
    dend_72 { pt3dadd( -11.0865, 91.0466, 31.5051, 0.44 ) }
    dend_72 { pt3dadd( -11.2638, 91.8768, 31.6281, 0.44 ) }
    dend_72 { pt3dadd( -11.3851, 92.5385, 31.7536, 0.74 ) }
    dend_72 { pt3dadd( -11.4683, 93.0877, 31.8693, 0.81 ) }
    dend_72 { pt3dadd( -11.5958, 94.0182, 32.0766, 0.81 ) }
    dend_72 { pt3dadd( -11.6085, 94.1195, 32.1006, 0.81 ) }
    dend_72 { pt3dadd( -11.7886, 94.9719, 32.3297, 0.29 ) }
    dend_72 { pt3dadd( -11.9075, 95.3182, 32.4398, 0.29 ) }
    dend_72 { pt3dadd( -11.9723, 95.4751, 32.4897, 0.29 ) }
    dend_72 { pt3dadd( -12.209, 95.9906, 32.6429, 0.29 ) }
    dend_72 { pt3dadd( -12.3036, 96.175, 32.6923, 0.29 ) }
    dend_72 { pt3dadd( -12.5471, 96.6478, 32.8046, 0.29 ) }
    dend_72 { pt3dadd( -12.5987, 96.7433, 32.8245, 0.29 ) }
    dend_72 { pt3dadd( -13.0497, 97.6077, 32.9942, 0.29 ) }
    dend_72 { pt3dadd( -13.2805, 98.0541, 33.0874, 0.29 ) }
    dend_72 { pt3dadd( -13.3172, 98.127, 33.1033, 0.29 ) }
    dend_72 { pt3dadd( -13.4529, 98.3883, 33.1667, 0.88 ) }
    dend_72 { pt3dadd( -13.7437, 99.0641, 33.3183, 0.88 ) }
    dend_72 { pt3dadd( -14.1536, 100.029, 33.5051, 0.88 ) }
    dend_72 { pt3dadd( -14.3925, 100.549, 33.6, 0.88 ) }
    dend_72 { pt3dadd( -14.4241, 100.614, 33.611, 0.88 ) }
    dend_72 { pt3dadd( -14.9378, 101.599, 33.7686, 0.29 ) }
    dend_72 { pt3dadd( -15.7366, 103.07, 33.9869, 0.29 ) }
    dend_72 { pt3dadd( -16.1045, 103.743, 34.0627, 0.59 ) }
    dend_72 { pt3dadd( -16.5027, 104.456, 34.1167, 0.59 ) }
    dend_72 { pt3dadd( -16.8091, 105.001, 34.1427, 0.29 ) }
    dend_72 { pt3dadd( -17.1924, 105.646, 34.1675, 0.29 ) }
    dend_72 { pt3dadd( -17.2725, 105.767, 34.1718, 0.29 ) }
    dend_72 { pt3dadd( -17.7499, 106.39, 34.2087, 0.29 ) }
    dend_72 { pt3dadd( -17.8121, 106.48, 34.2175, 0.29 ) }
    dend_72 { pt3dadd( -18.2056, 107.077, 34.2729, 0.29 ) }
    dend_72 { pt3dadd( -18.3579, 107.305, 34.2994, 0.29 ) }
    dend_72 { pt3dadd( -18.6758, 107.782, 34.4264, 0.29 ) }
    dend_72 { pt3dadd( -18.7202, 107.848, 34.4507, 0.29 ) }
    dend_72 { pt3dadd( -19.2683, 108.627, 34.7991, 0.29 ) }
    dend_72 { pt3dadd( -19.4901, 108.934, 34.9447, 1.11 ) }
    dend_72 { pt3dadd( -19.9633, 109.576, 35.2609, 1.33 ) }
    dend_72 { pt3dadd( -20.6874, 110.582, 35.7593, 0.74 ) }
    dend_72 { pt3dadd( -21.2027, 111.34, 36.0932, 0.44 ) }
    dend_72 { pt3dadd( -21.7249, 112.157, 36.4004, 0.44 ) }
    dend_72 { pt3dadd( -21.8441, 112.355, 36.4619, 0.44 ) }
    dend_72 { pt3dadd( -22.0272, 112.676, 36.5382, 0.44 ) }
    dend_72 { pt3dadd( -22.103, 112.812, 36.5487, 0.44 ) }
    dend_72 { pt3dadd( -22.6821, 113.865, 36.4916, 0.44 ) }
    dend_72 { pt3dadd( -23.0787, 114.584, 36.4314, 1.11 ) }
    dend_72 { pt3dadd( -23.4729, 115.303, 36.3596, 1.55 ) }
    dend_72 { pt3dadd( -23.7706, 115.875, 36.3052, 1.55 ) }
    dend_72 { pt3dadd( -24.4049, 117.135, 36.195, 0.22 ) }
    dend_72 { pt3dadd( -24.7883, 117.943, 36.1381, 0.22 ) }
    dend_72 { pt3dadd( -25.1663, 118.789, 36.1021, 0.22 ) }
    dend_72 { pt3dadd( -25.2073, 118.892, 36.0983, 0.22 ) }
    dend_72 { pt3dadd( -25.5335, 119.832, 36.0855, 0.22 ) }
    dend_72 { pt3dadd( -25.6265, 120.13, 36.0967, 0.22 ) }
    dend_72 { pt3dadd( -25.8236, 120.864, 36.179, 0.22 ) }
    dend_72 { pt3dadd( -25.9906, 121.391, 36.2475, 0.96 ) }
    dend_72 { pt3dadd( -26.0899, 121.674, 36.2869, 0.96 ) }
    dend_72 { pt3dadd( -26.2685, 122.114, 36.3702, 0.22 ) }
    dend_72 { pt3dadd( -26.5182, 122.642, 36.4952, 0.22 ) }
    dend_72 { pt3dadd( -26.6073, 122.83, 36.5434, 0.22 ) }
    dend_72 { pt3dadd( -27.3166, 124.366, 36.9567, 0.22 ) }
    dend_72 { pt3dadd( -27.3722, 124.504, 37.0019, 0.22 ) }
    dend_72 { pt3dadd( -27.6464, 125.258, 37.2798, 0.81 ) }
    dend_72 { pt3dadd( -27.6673, 125.323, 37.3058, 0.81 ) }
    dend_72 { pt3dadd( -27.8857, 126.072, 37.6345, 1.33 ) }
    dend_72 { pt3dadd( -28.0087, 126.538, 37.8573, 1.33 ) }
    dend_72 { pt3dadd( -28.3061, 127.445, 38.3927, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_72 { pt3dadd( -28.4843, 127.881, 38.6674, 0.15 ) }
    dend_72 { pt3dadd( -28.5301, 127.966, 38.7194, 0.15 ) }
    dend_72 { pt3dadd( -28.9906, 128.722, 39.1854, 0.15 ) }
    dend_72 { pt3dadd( -29.0596, 128.819, 39.2462, 0.15 ) }
    dend_72 { pt3dadd( -30.5578, 130.736, 40.4247, 0.15 ) }
    dend_72 { pt3dadd( -30.664, 130.86, 40.4861, 0.15 ) }
    dend_72 { pt3dadd( -32.105, 132.364, 41.1081, 0.15 ) }
    dend_72 { pt3dadd( -32.2182, 132.472, 41.144, 1.03 ) }
    dend_72 { pt3dadd( -32.7756, 132.94, 41.2505, 1.03 ) }
    dend_72 { pt3dadd( -32.8317, 132.983, 41.2559, 1.03 ) }
    dend_72 { pt3dadd( -34.2164, 133.867, 41.1027, 0.15 ) }
    dend_72 { pt3dadd( -35.3422, 134.53, 40.9148, 0.15 ) }
    dend_72 { pt3dadd( -35.4849, 134.596, 40.8725, 0.59 ) }
    dend_72 { pt3dadd( -36.0012, 134.839, 40.7168, 0.59 ) }
    dend_72 { pt3dadd( -39.8435, 144.31, 42.7632, 0.59 ) }
    dend_72 { pt3dadd( -45.7569, 152.645, 44.2677, 0.59 ) }
    dend_72 { pt3dadd( -51.9444, 160.261, 47.3397, 0.59 ) }
    dend_72 { pt3dadd( -58.2436, 167.91, 50.0904, 0.59 ) }
    dend_72 { pt3dadd( -64.8944, 174.991, 53.3505, 0.59 ) }
    dend_72 { pt3dadd( -70.0971, 183.406, 56.3612, 0.59 ) }
    dend_72 { pt3dadd( -75.3928, 192.007, 58.63, 0.59 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 21/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -0.117433, 30.8198, 2.37921, 0.66 ) }
    dend_71 { pt3dadd( -0.76932, 31.5921, 1.91768, 0.66 ) }
    dend_71 { pt3dadd( -1.78507, 32.3923, 1.25872, 0.52 ) }
    dend_71 { pt3dadd( -2.41397, 32.8009, 0.908936, 0.52 ) }
    dend_71 { pt3dadd( -2.47693, 32.8409, 0.878936, 0.52 ) }
    dend_71 { pt3dadd( -3.63821, 33.5768, 0.366281, 0.52 ) }
    dend_71 { pt3dadd( -3.78755, 33.6756, 0.301857, 0.52 ) }
    dend_71 { pt3dadd( -5.54889, 34.9599, -0.424813, 0.88 ) }
    dend_71 { pt3dadd( -6.20852, 35.5414, -0.654785, 0.96 ) }
    dend_71 { pt3dadd( -6.88798, 36.3771, -0.854077, 0.96 ) }
    dend_71 { pt3dadd( -6.93225, 36.4456, -0.864538, 0.96 ) }
    dend_71 { pt3dadd( -7.5036, 37.5536, -0.983157, 0.66 ) }
    dend_71 { pt3dadd( -8.19284, 39.0759, -1.13087, 0.66 ) }
    dend_71 { pt3dadd( -8.81446, 40.6423, -1.24901, 0.66 ) }
    dend_71 { pt3dadd( -9.73392, 42.8337, -1.40627, 0.66 ) }
    dend_71 { pt3dadd( -9.7693, 42.9081, -1.41318, 0.66 ) }
    dend_71 { pt3dadd( -10.6041, 44.4319, -1.56392, 0.44 ) }
    dend_71 { pt3dadd( -11.2134, 45.372, -1.65498, 0.44 ) }
    dend_71 { pt3dadd( -11.863, 46.1836, -1.74284, 0.88 ) }
    dend_71 { pt3dadd( -12.9263, 47.3331, -1.89207, 0.88 ) }
    dend_71 { pt3dadd( -13.8629, 48.2795, -2.01198, 0.44 ) }
    dend_71 { pt3dadd( -14.4996, 48.933, -2.07979, 0.96 ) }
    dend_71 { pt3dadd( -15.1395, 49.5874, -2.12573, 1.25 ) }
    dend_71 { pt3dadd( -15.9852, 50.4617, -2.18539, 1.25 ) }
    dend_71 { pt3dadd( -17.0395, 51.5516, -2.17728, 0.52 ) }
    dend_71 { pt3dadd( -18.0097, 52.5846, -2.06432, 0.29 ) }
    dend_71 { pt3dadd( -18.1874, 52.7871, -2.01984, 0.29 ) }
    dend_71 { pt3dadd( -18.8082, 53.5302, -1.81767, 0.29 ) }
    dend_71 { pt3dadd( -19.2425, 54.0969, -1.63767, 0.29 ) }
    dend_71 { pt3dadd( -20.0566, 55.2751, -1.21422, 0.29 ) }
    dend_71 { pt3dadd( -20.6221, 56.2178, -0.859578, 0.29 ) }
    dend_71 { pt3dadd( -20.9592, 56.8935, -0.641404, 0.29 ) }
    dend_71 { pt3dadd( -21.1946, 57.4592, -0.496843, 0.29 ) }
    dend_71 { pt3dadd( -21.574, 58.5863, -0.280403, 0.66 ) }
    dend_71 { pt3dadd( -21.8147, 59.4267, -0.156876, 0.96 ) }
    dend_71 { pt3dadd( -22.1362, 60.6558, -0.0447359, 0.96 ) }
    dend_71 { pt3dadd( -22.328, 61.4309, 0.0339186, 0.96 ) }
    dend_71 { pt3dadd( -22.523, 62.2102, 0.122007, 0.52 ) }
    dend_71 { pt3dadd( -22.6829, 62.79, 0.19633, 0.37 ) }
    dend_71 { pt3dadd( -22.8457, 63.2784, 0.315026, 0.37 ) }
    dend_71 { pt3dadd( -22.9133, 63.4393, 0.375485, 0.37 ) }
    dend_71 { pt3dadd( -23.3391, 64.2045, 0.774227, 0.37 ) }
    dend_71 { pt3dadd( -23.5215, 64.4728, 0.937592, 0.37 ) }
    dend_71 { pt3dadd( -23.9012, 64.9816, 1.25463, 0.37 ) }
    dend_71 { pt3dadd( -24.831, 66.1784, 1.99168, 0.37 ) }
    dend_71 { pt3dadd( -24.9686, 66.3543, 2.0977, 0.37 ) }
    dend_71 { pt3dadd( -25.6995, 67.2799, 2.5559, 0.37 ) }
    dend_71 { pt3dadd( -26.1431, 67.8337, 2.75951, 0.66 ) }
    dend_71 { pt3dadd( -26.7166, 68.5731, 2.93513, 0.66 ) }
    dend_71 { pt3dadd( -27.5139, 69.6763, 3.02963, 0.66 ) }
    dend_71 { pt3dadd( -27.5599, 69.7442, 3.02547, 0.66 ) }
    dend_71 { pt3dadd( -28.5428, 71.3411, 2.87379, 0.29 ) }
    dend_71 { pt3dadd( -29.0153, 72.1839, 2.75332, 0.29 ) }
    dend_71 { pt3dadd( -29.1335, 72.4112, 2.71428, 0.29 ) }
    dend_71 { pt3dadd( -29.6059, 73.4169, 2.53119, 0.88 ) }
    dend_71 { pt3dadd( -29.9325, 74.2204, 2.39165, 0.88 ) }
    dend_71 { pt3dadd( -30.1117, 74.718, 2.35659, 0.88 ) }
    dend_71 { pt3dadd( -30.3225, 75.4008, 2.38861, 0.37 ) }
    dend_71 { pt3dadd( -30.3482, 75.4922, 2.39425, 0.37 ) }
    dend_71 { pt3dadd( -30.5213, 76.0702, 2.44811, 0.37 ) }
    dend_71 { pt3dadd( -30.6022, 76.3157, 2.48375, 0.37 ) }
    dend_71 { pt3dadd( -31.1466, 77.7066, 2.74235, 0.37 ) }
    dend_71 { pt3dadd( -31.1795, 77.7817, 2.75397, 0.37 ) }
    dend_71 { pt3dadd( -31.4561, 78.3665, 2.83431, 1.11 ) }
    dend_71 { pt3dadd( -32.1302, 79.7066, 2.9903, 1.11 ) }
    dend_71 { pt3dadd( -32.7956, 80.9553, 3.11627, 1.11 ) }
    dend_71 { pt3dadd( -33.5095, 82.2426, 3.17183, 1.11 ) }
    dend_71 { pt3dadd( -34.0586, 83.2033, 3.16219, 1.11 ) }
    dend_71 { pt3dadd( -34.3021, 83.6195, 3.14086, 0.44 ) }
    dend_71 { pt3dadd( -34.9704, 84.6091, 3.06965, 0.44 ) }
    dend_71 { pt3dadd( -35.1575, 84.8575, 3.04861, 0.44 ) }
    dend_71 { pt3dadd( -36.1502, 86.0842, 2.96201, 0.44 ) }
    dend_71 { pt3dadd( -36.2032, 86.1464, 2.96064, 0.44 ) }
    dend_71 { pt3dadd( -36.915, 86.968, 3.01182, 0.44 ) }
    dend_71 { pt3dadd( -38.9268, 89.2828, 3.26129, 0.44 ) }
    dend_71 { pt3dadd( -39.3789, 89.7951, 3.33851, 1.33 ) }
    dend_71 { pt3dadd( -39.9948, 90.5296, 3.47876, 1.62 ) }
    dend_71 { pt3dadd( -40.7534, 91.5274, 3.71758, 0.96 ) }
    dend_71 { pt3dadd( -41.2255, 92.2132, 3.88062, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_71 { pt3dadd( -41.9048, 93.3077, 4.14064, 0.37 ) }
    dend_71 { pt3dadd( -41.9483, 93.3891, 4.15966, 0.37 ) }
    dend_71 { pt3dadd( -42.9636, 95.385, 4.5986, 0.37 ) }
    dend_71 { pt3dadd( -43.7584, 97.0267, 4.92675, 0.37 ) }
    dend_71 { pt3dadd( -44.1961, 97.9679, 5.09769, 0.74 ) }
    dend_71 { pt3dadd( -44.4266, 98.467, 5.1775, 0.29 ) }
    dend_71 { pt3dadd( -44.506, 98.6436, 5.20588, 0.29 ) }
    dend_71 { pt3dadd( -45.3232, 100.497, 5.50165, 0.29 ) }
    dend_71 { pt3dadd( -45.3909, 100.659, 5.52672, 0.29 ) }
    dend_71 { pt3dadd( -45.7432, 101.523, 5.64997, 1.55 ) }
    dend_71 { pt3dadd( -46.1079, 102.472, 5.78359, 1.62 ) }
    dend_71 { pt3dadd( -46.4194, 103.288, 5.89566, 1.03 ) }
    dend_71 { pt3dadd( -46.4499, 103.364, 5.90595, 1.03 ) }
    dend_71 { pt3dadd( -46.7259, 104.024, 5.99262, 0.37 ) }
    dend_71 { pt3dadd( -46.7587, 104.099, 6.00203, 0.37 ) }
    dend_71 { pt3dadd( -47.1941, 105.039, 6.11116, 0.37 ) }
    dend_71 { pt3dadd( -47.7262, 106.115, 6.23581, 1.11 ) }
    dend_71 { pt3dadd( -48.1595, 106.965, 6.34787, 1.11 ) }
    dend_71 { pt3dadd( -48.3856, 107.398, 6.41221, 0.52 ) }
    dend_71 { pt3dadd( -48.4708, 107.571, 6.43943, 0.52 ) }
    dend_71 { pt3dadd( -48.7926, 108.291, 6.55301, 0.52 ) }
    dend_71 { pt3dadd( -48.9308, 108.628, 6.6063, 0.52 ) }
    dend_71 { pt3dadd( -49.1694, 109.274, 6.70623, 0.52 ) }
    dend_71 { pt3dadd( -49.3624, 109.823, 6.78745, 1.11 ) }
    dend_71 { pt3dadd( -49.8365, 111.213, 6.98302, 1.11 ) }
    dend_71 { pt3dadd( -50.0855, 111.91, 7.07703, 0.37 ) }
    dend_71 { pt3dadd( -50.4491, 112.881, 7.20156, 0.37 ) }
    dend_71 { pt3dadd( -50.5489, 113.12, 7.23102, 0.37 ) }
    dend_71 { pt3dadd( -51.0013, 114.093, 7.34368, 0.37 ) }
    dend_71 { pt3dadd( -51.1823, 114.443, 7.38412, 0.37 ) }
    dend_71 { pt3dadd( -51.7746, 115.444, 7.50638, 0.37 ) }
    dend_71 { pt3dadd( -52.1641, 116.058, 7.58277, 0.88 ) }
    dend_71 { pt3dadd( -52.5999, 116.713, 7.66489, 0.88 ) }
    dend_71 { pt3dadd( -52.6462, 116.781, 7.67342, 0.88 ) }
    dend_71 { pt3dadd( -52.7998, 116.997, 7.70247, 0.29 ) }
    dend_71 { pt3dadd( -52.9012, 117.139, 7.72235, 0.29 ) }
    dend_71 { pt3dadd( -53.7036, 118.29, 7.88653, 0.29 ) }
    dend_71 { pt3dadd( -53.7501, 118.357, 7.89139, 0.29 ) }
    dend_71 { pt3dadd( -54.324, 119.158, 7.9063, 0.81 ) }
    dend_71 { pt3dadd( -54.7312, 119.698, 7.89816, 1.11 ) }
    dend_71 { pt3dadd( -54.9793, 119.987, 7.88757, 1.11 ) }
    dend_71 { pt3dadd( -55.0363, 120.045, 7.88377, 1.11 ) }
    dend_71 { pt3dadd( -55.8678, 120.746, 7.81642, 0.22 ) }
    dend_71 { pt3dadd( -56.4481, 121.189, 7.78046, 0.22 ) }
    dend_71 { pt3dadd( -56.5491, 121.258, 7.7752, 0.22 ) }
    dend_71 { pt3dadd( -57.4349, 121.875, 7.75004, 0.22 ) }
    dend_71 { pt3dadd( -57.6378, 122.028, 7.74833, 0.22 ) }
    dend_71 { pt3dadd( -58.2808, 122.56, 7.76797, 0.22 ) }
    dend_71 { pt3dadd( -58.677, 122.944, 7.81099, 0.22 ) }
    dend_71 { pt3dadd( -58.7519, 123.032, 7.8177, 0.66 ) }
    dend_71 { pt3dadd( -59.0946, 123.522, 7.8126, 0.66 ) }
    dend_71 { pt3dadd( -59.4271, 124.107, 7.77397, 0.15 ) }
    dend_71 { pt3dadd( -59.5507, 124.323, 7.75818, 0.15 ) }
    dend_71 { pt3dadd( -60.0377, 125.181, 7.68771, 0.15 ) }
    dend_71 { pt3dadd( -60.1274, 125.333, 7.68319, 0.15 ) }
    dend_71 { pt3dadd( -60.5725, 126.053, 7.69663, 0.59 ) }
    dend_71 { pt3dadd( -61.3405, 127.158, 7.79151, 0.59 ) }
    dend_71 { pt3dadd( -61.7555, 127.715, 7.88248, 0.59 ) }
    dend_71 { pt3dadd( -61.8122, 127.788, 7.89829, 0.59 ) }
    dend_71 { pt3dadd( -62.2926, 128.386, 8.0614, 0.22 ) }
    dend_71 { pt3dadd( -62.3433, 128.448, 8.07898, 0.22 ) }
    dend_71 { pt3dadd( -62.854, 129.045, 8.25937, 0.22 ) }
    dend_71 { pt3dadd( -63.1356, 129.367, 8.33445, 0.22 ) }
    dend_71 { pt3dadd( -63.8383, 130.176, 8.47187, 0.22 ) }
    dend_71 { pt3dadd( -64.1353, 130.533, 8.51771, 0.22 ) }
    dend_71 { pt3dadd( -64.3986, 130.85, 8.54802, 0.74 ) }
    dend_71 { pt3dadd( -65.0917, 131.687, 8.62076, 0.74 ) }
    dend_71 { pt3dadd( -65.5173, 132.205, 8.66279, 0.22 ) }
    dend_71 { pt3dadd( -65.6198, 132.333, 8.67282, 0.22 ) }
    dend_71 { pt3dadd( -67.2197, 134.286, 8.84243, 0.22 ) }
    dend_71 { pt3dadd( -67.4649, 134.571, 8.84862, 0.81 ) }
    dend_71 { pt3dadd( -68.2961, 135.5, 8.82586, 0.81 ) }
    dend_71 { pt3dadd( -68.35, 135.561, 8.81858, 0.81 ) }
    dend_71 { pt3dadd( -68.608, 135.848, 8.76011, 0.15 ) }
    dend_71 { pt3dadd( -69.5535, 136.876, 8.46837, 0.15 ) }
    dend_71 { pt3dadd( -70.5688, 137.952, 8.02835, 0.66 ) }
    dend_71 { pt3dadd( -70.8872, 138.312, 7.889, 0.66 ) }
    dend_71 { pt3dadd( -71.7191, 139.329, 7.52121, 0.15 ) }
    dend_71 { pt3dadd( -71.9993, 139.695, 7.40835, 0.37 ) }
    dend_71 { pt3dadd( -72.184, 139.945, 7.32569, 0.15 ) }
    dend_71 { pt3dadd( -72.2266, 140.011, 7.3039, 0.15 ) }
    dend_71 { pt3dadd( -72.8924, 141.117, 7.06453, 0.15 ) }
    dend_71 { pt3dadd( -73.07, 141.413, 7.00089, 1.03 ) }
    dend_71 { pt3dadd( -73.4203, 141.954, 6.83515, 1.03 ) }
    dend_71 { pt3dadd( -74.046, 142.931, 6.4794, 0.22 ) }
    dend_71 { pt3dadd( -74.0879, 142.996, 6.45241, 0.22 ) }
    dend_71 { pt3dadd( -74.941, 144.315, 5.7805, 0.22 ) }
    dend_71 { pt3dadd( -74.9804, 144.378, 5.7468, 0.22 ) }
    dend_71 { pt3dadd( -75.6258, 145.447, 5.2112, 0.88 ) }
    dend_71 { pt3dadd( -75.925, 145.974, 5.0246, 0.88 ) }
    dend_71 { pt3dadd( -75.9635, 146.047, 5.02134, 0.88 ) }
    dend_71 { pt3dadd( -76.2871, 146.668, 5.13673, 0.22 ) }
    dend_71 { pt3dadd( -77.0047, 148.092, 5.58027, 0.22 ) }
    dend_71 { pt3dadd( -77.0398, 148.162, 5.60643, 0.22 ) }
    dend_71 { pt3dadd( -77.6337, 149.314, 6.11849, 0.22 ) }
    dend_71 { pt3dadd( -78.4142, 150.708, 6.74101, 0.22 ) }
    dend_71 { pt3dadd( -79.0865, 151.848, 7.24681, 0.22 ) }
    dend_71 { pt3dadd( -79.5808, 152.665, 7.60183, 1.11 ) }
    dend_71 { pt3dadd( -79.6722, 152.812, 7.66366, 1.11 ) }
    dend_71 { pt3dadd( -79.9302, 153.22, 7.81054, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_71 { pt3dadd( -80.7448, 154.484, 8.08455, 0.22 ) }
    dend_71 { pt3dadd( -80.9913, 154.843, 8.11688, 0.66 ) }
    dend_71 { pt3dadd( -81.5772, 155.648, 8.17941, 0.66 ) }
    // Section: dend_63, id: dend_63, parent: dend_59 (entry count 3/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 18.1125, 11.9072, -20.5179, 0.81 ) }
    dend_63 { pt3dadd( 18.6207, 11.8882, -21.7048, 0.81 ) }
    dend_63 { pt3dadd( 18.6447, 11.891, -21.7529, 0.81 ) }
    dend_63 { pt3dadd( 18.9097, 11.9363, -22.2599, 0.81 ) }
    dend_63 { pt3dadd( 19.0324, 11.9711, -22.474, 0.81 ) }
    dend_63 { pt3dadd( 19.4454, 12.1169, -23.1578, 0.52 ) }
    dend_63 { pt3dadd( 21.0531, 12.8032, -25.6527, 0.81 ) }
    dend_63 { pt3dadd( 21.5089, 13.0737, -26.2623, 0.81 ) }
    dend_63 { pt3dadd( 21.5406, 13.094, -26.3013, 0.81 ) }
    dend_63 { pt3dadd( 22.0504, 13.4627, -26.8948, 0.81 ) }
    dend_63 { pt3dadd( 22.1131, 13.5077, -26.9614, 0.81 ) }
    dend_63 { pt3dadd( 22.4799, 13.7261, -27.2891, 0.81 ) }
    dend_63 { pt3dadd( 23.1529, 13.9495, -27.6231, 0.52 ) }
    dend_63 { pt3dadd( 23.4059, 13.9563, -28.083, 0.52 ) }
    dend_63 { pt3dadd( 23.4686, 13.9568, -28.206, 0.52 ) }
    dend_63 { pt3dadd( 23.7876, 13.9233, -28.9153, 0.81 ) }
    dend_63 { pt3dadd( 24.314, 13.8402, -30.2015, 0.81 ) }
    dend_63 { pt3dadd( 24.3297, 13.8366, -30.2458, 0.81 ) }
    dend_63 { pt3dadd( 25.109, 13.6605, -32.8219, 0.74 ) }
    dend_63 { pt3dadd( 25.3356, 13.6536, -33.6077, 1.84 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 23/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 18.1125, 11.9072, -20.5179, 1.4 ) }
    dend_60 { pt3dadd( 18.1575, 11.9383, -20.468, 1.4 ) }
    dend_60 { pt3dadd( 21.2746, 14.0173, -17.6187, 0.96 ) }
    dend_60 { pt3dadd( 21.5023, 14.1644, -17.4583, 0.96 ) }
    dend_60 { pt3dadd( 23.1798, 15.204, -16.532, 0.96 ) }
    dend_60 { pt3dadd( 23.2799, 15.2658, -16.4871, 0.96 ) }
    dend_60 { pt3dadd( 25.0821, 16.3744, -15.7708, 0.96 ) }
    dend_60 { pt3dadd( 25.1564, 16.4202, -15.7524, 0.96 ) }
    dend_60 { pt3dadd( 26.6384, 17.3672, -15.6881, 1.18 ) }
    dend_60 { pt3dadd( 27.8074, 18.1661, -15.6427, 0.88 ) }
    dend_60 { pt3dadd( 28.8926, 18.9574, -15.6094, 0.88 ) }
    dend_60 { pt3dadd( 28.9641, 19.0111, -15.6075, 0.88 ) }
    dend_60 { pt3dadd( 29.6059, 19.4977, -15.6348, 0.88 ) }
    dend_60 { pt3dadd( 30.5055, 20.1853, -15.712, 0.88 ) }
    dend_60 { pt3dadd( 30.576, 20.2398, -15.7204, 0.88 ) }
    dend_60 { pt3dadd( 32.7985, 21.9431, -16.0034, 0.88 ) }
    dend_60 { pt3dadd( 32.8995, 22.0184, -16.0161, 0.88 ) }
    dend_60 { pt3dadd( 35.2259, 23.6395, -16.3772, 1.18 ) }
    dend_60 { pt3dadd( 36.8864, 24.7445, -16.6712, 1.18 ) }
    dend_60 { pt3dadd( 37.2998, 25.0101, -16.7507, 1.18 ) }
    dend_60 { pt3dadd( 39.1006, 26.2127, -17.1252, 1.18 ) }
    dend_60 { pt3dadd( 39.4211, 26.4346, -17.1991, 1.18 ) }
    dend_60 { pt3dadd( 41.5762, 27.8518, -17.6292, 1.18 ) }
    dend_60 { pt3dadd( 41.8191, 27.988, -17.6611, 1.18 ) }
    dend_60 { pt3dadd( 42.4445, 28.2685, -17.7234, 0.52 ) }
    dend_60 { pt3dadd( 44.0621, 28.8243, -17.8004, 0.52 ) }
    dend_60 { pt3dadd( 44.1486, 28.8449, -17.7995, 0.52 ) }
    dend_60 { pt3dadd( 45.7902, 29.1351, -17.678, 0.88 ) }
    dend_60 { pt3dadd( 47.6075, 29.3388, -17.4024, 0.88 ) }
    dend_60 { pt3dadd( 47.9348, 29.3691, -17.3591, 0.88 ) }
    dend_60 { pt3dadd( 49.2007, 29.4742, -17.2118, 1.25 ) }
    dend_60 { pt3dadd( 49.4773, 29.5046, -17.1842, 1.25 ) }
    dend_60 { pt3dadd( 50.6665, 29.7564, -17.0949, 1.25 ) }
    dend_60 { pt3dadd( 50.8363, 29.8082, -17.0863, 1.25 ) }
    dend_60 { pt3dadd( 52.7447, 30.5088, -17.1028, 1.11 ) }
    dend_60 { pt3dadd( 54.6654, 31.2684, -17.1841, 1.11 ) }
    dend_60 { pt3dadd( 56.2048, 31.8737, -17.2702, 0.81 ) }
    dend_60 { pt3dadd( 57.9296, 32.53, -17.3757, 0.81 ) }
    dend_60 { pt3dadd( 58.2072, 32.6234, -17.3889, 0.81 ) }
    dend_60 { pt3dadd( 60.6894, 33.3587, -17.4589, 0.81 ) }
    dend_60 { pt3dadd( 60.82, 33.3926, -17.4603, 0.81 ) }
    dend_60 { pt3dadd( 63.596, 34.0046, -17.4521, 0.81 ) }
    dend_60 { pt3dadd( 63.7289, 34.0281, -17.448, 0.81 ) }
    dend_60 { pt3dadd( 66.6924, 34.4661, -17.2769, 0.81 ) }
    dend_60 { pt3dadd( 67.8867, 34.6566, -17.2465, 0.96 ) }
    dend_60 { pt3dadd( 68.1757, 34.7055, -17.2448, 0.96 ) }
    dend_60 { pt3dadd( 69.4752, 34.9522, -17.2909, 0.74 ) }
    dend_60 { pt3dadd( 71.2076, 35.3284, -17.4168, 0.74 ) }
    dend_60 { pt3dadd( 71.2938, 35.3486, -17.4246, 0.74 ) }
    dend_60 { pt3dadd( 74.8889, 36.2258, -17.9355, 0.74 ) }
    dend_60 { pt3dadd( 75.9901, 36.4933, -18.1085, 1.4 ) }
    dend_60 { pt3dadd( 78.2465, 37.0332, -18.4871, 1.77 ) }
    dend_60 { pt3dadd( 79.5835, 37.351, -18.7354, 1.77 ) }
    dend_60 { pt3dadd( 79.9481, 37.4353, -18.806, 1.77 ) }
    dend_60 { pt3dadd( 81.8803, 37.8712, -19.1248, 1.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_49 (entry count 78/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -16.8556, 44.3097, 17.4624, 0.44 ) }
    dend_55 { pt3dadd( -18.2428, 44.727, 18.2149, 0.44 ) }
    dend_55 { pt3dadd( -19.5159, 45.1584, 18.8663, 0.44 ) }
    dend_55 { pt3dadd( -20.936, 45.6724, 19.5722, 0.44 ) }
    dend_55 { pt3dadd( -20.9879, 45.6917, 19.5968, 0.44 ) }
    dend_55 { pt3dadd( -22.5441, 46.2792, 20.3185, 0.74 ) }
    dend_55 { pt3dadd( -23.1782, 46.5033, 20.5979, 0.74 ) }
    dend_55 { pt3dadd( -23.5821, 46.656, 20.7442, 0.37 ) }
    dend_55 { pt3dadd( -23.6366, 46.6733, 20.764, 0.37 ) }
    dend_55 { pt3dadd( -24.3929, 46.8628, 20.9671, 0.37 ) }
    dend_55 { pt3dadd( -24.4417, 46.8717, 20.9818, 0.37 ) }
    dend_55 { pt3dadd( -25.3046, 46.9868, 21.2563, 0.37 ) }
    dend_55 { pt3dadd( -25.3787, 46.9971, 21.283, 0.37 ) }
    dend_55 { pt3dadd( -26.4501, 47.1961, 21.7479, 0.37 ) }
    dend_55 { pt3dadd( -26.5203, 47.2127, 21.7814, 0.37 ) }
    dend_55 { pt3dadd( -27.5685, 47.5438, 22.2845, 0.37 ) }
    dend_55 { pt3dadd( -28.1038, 47.7588, 22.511, 0.37 ) }
    dend_55 { pt3dadd( -28.1621, 47.791, 22.5309, 0.37 ) }
    dend_55 { pt3dadd( -29.0081, 48.2972, 22.7341, 0.37 ) }
    dend_55 { pt3dadd( -29.0592, 48.3292, 22.7434, 0.37 ) }
    dend_55 { pt3dadd( -29.8555, 48.7997, 22.8409, 0.59 ) }
    dend_55 { pt3dadd( -30.6364, 49.2342, 22.8861, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( -31.6473, 49.7346, 22.928, 0.81 ) }
    dend_55 { pt3dadd( -32.5198, 50.151, 22.9529, 0.81 ) }
    dend_55 { pt3dadd( -33.3433, 50.542, 22.9607, 0.29 ) }
    dend_55 { pt3dadd( -33.7399, 50.7365, 22.9729, 0.29 ) }
    dend_55 { pt3dadd( -33.855, 50.7957, 22.9861, 0.29 ) }
    dend_55 { pt3dadd( -34.7474, 51.2153, 23.156, 0.29 ) }
    dend_55 { pt3dadd( -34.8771, 51.2682, 23.1863, 0.29 ) }
    dend_55 { pt3dadd( -35.6497, 51.5473, 23.3711, 0.59 ) }
    dend_55 { pt3dadd( -36.2424, 51.7221, 23.5008, 0.59 ) }
    dend_55 { pt3dadd( -37.5575, 52.0407, 23.7935, 0.15 ) }
    dend_55 { pt3dadd( -38.4825, 52.2246, 23.9858, 0.37 ) }
    dend_55 { pt3dadd( -38.7939, 52.2703, 24.0464, 0.74 ) }
    dend_55 { pt3dadd( -39.3642, 52.3181, 24.1714, 0.37 ) }
    dend_55 { pt3dadd( -39.8282, 52.3141, 24.2877, 0.37 ) }
    dend_55 { pt3dadd( -39.894, 52.3112, 24.3078, 0.37 ) }
    dend_55 { pt3dadd( -40.32, 52.3325, 24.4765, 0.22 ) }
    dend_55 { pt3dadd( -40.4027, 52.4, 24.5618, 0.22 ) }
    dend_55 { pt3dadd( -40.9102, 53.0521, 25.2687, 0.22 ) }
    dend_55 { pt3dadd( -40.9491, 53.106, 25.3251, 0.22 ) }
    dend_55 { pt3dadd( -41.3521, 53.6818, 25.8799, 0.22 ) }
    dend_55 { pt3dadd( -41.4664, 53.8037, 26.0355, 0.22 ) }
    dend_55 { pt3dadd( -41.7207, 53.9992, 26.3549, 0.22 ) }
    dend_55 { pt3dadd( -41.7608, 54.0218, 26.3947, 0.22 ) }
    dend_55 { pt3dadd( -42.6839, 54.4539, 27.1817, 0.74 ) }
    dend_55 { pt3dadd( -43.0581, 54.6014, 27.4631, 0.74 ) }
    dend_55 { pt3dadd( -44.6551, 55.1296, 28.5426, 0.59 ) }
    dend_55 { pt3dadd( -45.7671, 55.467, 29.2182, 0.37 ) }
    dend_55 { pt3dadd( -46.8764, 55.729, 29.8628, 0.37 ) }
    dend_55 { pt3dadd( -46.936, 55.7338, 29.8971, 0.37 ) }
    dend_55 { pt3dadd( -47.498, 55.6724, 30.2579, 0.37 ) }
    dend_55 { pt3dadd( -47.5973, 55.6543, 30.324, 0.37 ) }
    dend_55 { pt3dadd( -48.406, 55.4576, 30.859, 0.37 ) }
    dend_55 { pt3dadd( -49.4905, 55.2026, 31.7212, 0.88 ) }
    dend_55 { pt3dadd( -50.9079, 54.9543, 33.1597, 0.88 ) }
    dend_55 { pt3dadd( -52.0784, 54.918, 34.7866, 0.37 ) }
    dend_55 { pt3dadd( -52.5738, 54.9805, 35.6889, 0.37 ) }
    dend_55 { pt3dadd( -52.6135, 54.9895, 35.7711, 0.37 ) }
    dend_55 { pt3dadd( -53.1429, 55.2452, 37.1615, 0.37 ) }
    dend_55 { pt3dadd( -53.4484, 55.6554, 38.2501, 0.37 ) }
    dend_55 { pt3dadd( -53.7385, 56.6907, 40.0674, 0.37 ) }
    dend_55 { pt3dadd( -53.7382, 56.7226, 40.12, 0.37 ) }
    dend_55 { pt3dadd( -60.8483, 57.3325, 44.947, 0.37 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 42/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -16.8556, 44.3097, 17.4624, 0.52 ) }
    dend_50 { pt3dadd( -17.202, 45.3173, 18.2955, 0.52 ) }
    dend_50 { pt3dadd( -17.5625, 46.1197, 18.8556, 0.52 ) }
    dend_50 { pt3dadd( -17.5881, 46.1628, 18.8875, 0.52 ) }
    dend_50 { pt3dadd( -18.2012, 46.9909, 19.5322, 0.52 ) }
    dend_50 { pt3dadd( -18.253, 47.0548, 19.5865, 0.52 ) }
    dend_50 { pt3dadd( -18.8757, 47.854, 20.2599, 0.52 ) }
    dend_50 { pt3dadd( -19.5173, 48.6316, 20.9035, 0.74 ) }
    dend_50 { pt3dadd( -20.2493, 49.5517, 21.6609, 0.74 ) }
    dend_50 { pt3dadd( -20.9517, 50.5853, 22.51, 0.59 ) }
    dend_50 { pt3dadd( -21.4734, 51.4093, 23.2946, 0.59 ) }
    dend_50 { pt3dadd( -21.92, 52.1364, 24.0924, 0.66 ) }
    dend_50 { pt3dadd( -21.9438, 52.1775, 24.1424, 0.66 ) }
    dend_50 { pt3dadd( -22.2045, 52.692, 24.8155, 0.66 ) }
    dend_50 { pt3dadd( -22.7661, 54.0341, 26.5944, 0.52 ) }
    dend_50 { pt3dadd( -23.2555, 55.5398, 28.6361, 0.52 ) }
    dend_50 { pt3dadd( -23.4329, 56.2762, 29.6434, 0.52 ) }
    dend_50 { pt3dadd( -23.4436, 56.3371, 29.728, 0.52 ) }
    dend_50 { pt3dadd( -23.5097, 56.8568, 30.3871, 0.52 ) }
    dend_50 { pt3dadd( -23.516, 56.9638, 30.5111, 0.52 ) }
    dend_50 { pt3dadd( -23.4306, 57.9376, 31.3423, 0.96 ) }
    dend_50 { pt3dadd( -23.2608, 58.792, 31.8354, 0.96 ) }
    dend_50 { pt3dadd( -23.1997, 59.3311, 32.0954, 0.52 ) }
    dend_50 { pt3dadd( -23.2167, 60.3263, 32.5602, 0.52 ) }
    dend_50 { pt3dadd( -23.2298, 60.3904, 32.5863, 0.52 ) }
    dend_50 { pt3dadd( -23.518, 61.3281, 32.8996, 0.74 ) }
    dend_50 { pt3dadd( -23.5486, 61.3996, 32.9187, 0.74 ) }
    dend_50 { pt3dadd( -24.0057, 62.3803, 33.2697, 0.74 ) }
    dend_50 { pt3dadd( -24.0297, 62.4398, 33.2976, 0.74 ) }
    dend_50 { pt3dadd( -24.3334, 63.3485, 33.7813, 0.37 ) }
    dend_50 { pt3dadd( -24.5285, 63.8732, 34.1274, 0.37 ) }
    dend_50 { pt3dadd( -24.5456, 63.9218, 34.158, 0.37 ) }
    dend_50 { pt3dadd( -24.9939, 65.3049, 34.992, 0.37 ) }
    dend_50 { pt3dadd( -25.2133, 65.9838, 35.4457, 0.59 ) }
    dend_50 { pt3dadd( -25.6371, 67.1088, 36.2019, 0.81 ) }
    dend_50 { pt3dadd( -26.3817, 68.6114, 37.3026, 0.52 ) }
    dend_50 { pt3dadd( -26.9209, 69.5164, 37.992, 0.52 ) }
    dend_50 { pt3dadd( -27.5939, 70.4708, 38.7195, 0.52 ) }
    dend_50 { pt3dadd( -28.4402, 71.4355, 39.4038, 0.29 ) }
    dend_50 { pt3dadd( -29.142, 72.0508, 39.8819, 0.29 ) }
    dend_50 { pt3dadd( -30.2799, 72.7991, 40.5247, 0.29 ) }
    dend_50 { pt3dadd( -30.3819, 72.8546, 40.5746, 0.29 ) }
    dend_50 { pt3dadd( -30.9986, 73.1112, 40.8809, 0.15 ) }
    dend_50 { pt3dadd( -31.9934, 73.4207, 41.3086, 0.15 ) }
    dend_50 { pt3dadd( -33.1509, 73.7989, 41.6891, 0.81 ) }
    dend_50 { pt3dadd( -33.7258, 74.0125, 41.8998, 0.81 ) }
    dend_50 { pt3dadd( -37.8923, 82.2111, 45.7425, 0.81 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 89/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -8.4819, 46.0956, 2.26031, 0.66 ) }
    dend_48 { pt3dadd( -8.30638, 46.3551, 2.26125, 0.66 ) }
    dend_48 { pt3dadd( -8.09181, 46.744, 2.2206, 0.66 ) }
    dend_48 { pt3dadd( -8.02707, 46.8939, 2.19999, 0.66 ) }
    dend_48 { pt3dadd( -7.65476, 47.882, 2.05267, 0.66 ) }
    dend_48 { pt3dadd( -7.63731, 47.9471, 2.04388, 0.66 ) }
    dend_48 { pt3dadd( -7.42792, 48.9517, 1.90208, 0.66 ) }
    dend_48 { pt3dadd( -7.35133, 49.4651, 1.81287, 0.66 ) }
    dend_48 { pt3dadd( -7.31345, 49.9751, 1.73137, 0.29 ) }
    dend_48 { pt3dadd( -7.31125, 50.0426, 1.72176, 0.29 ) }
    dend_48 { pt3dadd( -7.29017, 51.1214, 1.5472, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_48 { pt3dadd( -7.27088, 51.6087, 1.47384, 0.29 ) }
    dend_48 { pt3dadd( -7.26751, 51.6763, 1.46556, 0.29 ) }
    dend_48 { pt3dadd( -7.16291, 52.8736, 1.31526, 0.29 ) }
    dend_48 { pt3dadd( -7.14497, 53.0327, 1.29505, 0.29 ) }
    dend_48 { pt3dadd( -6.96561, 54.4147, 1.13103, 0.29 ) }
    dend_48 { pt3dadd( -6.95481, 54.4818, 1.12499, 0.29 ) }
    dend_48 { pt3dadd( -6.88347, 54.9766, 1.0811, 0.96 ) }
    dend_48 { pt3dadd( -6.76458, 55.9041, 1.02776, 0.96 ) }
    dend_48 { pt3dadd( -6.75357, 55.9814, 1.02694, 0.96 ) }
    dend_48 { pt3dadd( -6.6682, 56.546, 1.04188, 0.81 ) }
    dend_48 { pt3dadd( -6.48982, 57.7736, 1.11824, 0.59 ) }
    dend_48 { pt3dadd( -6.26734, 59.2588, 1.21045, 0.52 ) }
    dend_48 { pt3dadd( -6.16417, 59.9183, 1.22076, 0.37 ) }
    dend_48 { pt3dadd( -5.95286, 61.4039, 1.18165, 0.37 ) }
    dend_48 { pt3dadd( -5.84633, 62.1995, 1.13718, 1.03 ) }
    dend_48 { pt3dadd( -5.76401, 62.8521, 1.08315, 1.03 ) }
    dend_48 { pt3dadd( -5.75717, 62.9098, 1.07659, 1.03 ) }
    dend_48 { pt3dadd( -5.57711, 64.3161, 0.829456, 0.52 ) }
    dend_48 { pt3dadd( -5.47932, 65.2336, 0.611732, 0.52 ) }
    dend_48 { pt3dadd( -5.46633, 65.3925, 0.568503, 0.52 ) }
    dend_48 { pt3dadd( -5.36063, 66.7907, 0.252603, 0.44 ) }
    dend_48 { pt3dadd( -5.35693, 66.8483, 0.243818, 0.44 ) }
    dend_48 { pt3dadd( -5.32289, 68.2443, 0.225203, 1.33 ) }
    dend_48 { pt3dadd( -5.32821, 69.452, 0.394597, 1.4 ) }
    dend_48 { pt3dadd( -5.33069, 69.5529, 0.418532, 1.4 ) }
    dend_48 { pt3dadd( -5.38216, 70.5226, 0.724246, 0.22 ) }
    dend_48 { pt3dadd( -5.48317, 71.7143, 1.20889, 0.22 ) }
    dend_48 { pt3dadd( -5.62611, 72.9908, 1.79364, 0.59 ) }
    dend_48 { pt3dadd( -5.72905, 73.5855, 2.10426, 0.59 ) }
    dend_48 { pt3dadd( -5.84959, 74.1504, 2.39063, 0.22 ) }
    dend_48 { pt3dadd( -5.86518, 74.2094, 2.41989, 0.22 ) }
    dend_48 { pt3dadd( -6.00221, 74.6395, 2.61818, 0.22 ) }
    dend_48 { pt3dadd( -6.20163, 75.1616, 2.85825, 0.22 ) }
    dend_48 { pt3dadd( -6.48457, 75.8255, 3.09611, 0.22 ) }
    dend_48 { pt3dadd( -6.5453, 75.9555, 3.14333, 0.22 ) }
    dend_48 { pt3dadd( -7.01883, 76.9634, 3.51105, 0.81 ) }
    dend_48 { pt3dadd( -7.0454, 77.0222, 3.53112, 0.81 ) }
    dend_48 { pt3dadd( -7.35218, 77.6988, 3.74441, 0.81 ) }
    dend_48 { pt3dadd( -7.46611, 77.9685, 3.8144, 0.81 ) }
    dend_48 { pt3dadd( -7.76891, 78.7265, 3.98544, 0.22 ) }
    dend_48 { pt3dadd( -7.80386, 78.8146, 4.00032, 0.22 ) }
    dend_48 { pt3dadd( -8.15544, 79.6972, 4.08649, 0.22 ) }
    dend_48 { pt3dadd( -8.32419, 80.1194, 4.11703, 0.22 ) }
    dend_48 { pt3dadd( -8.60826, 80.8291, 4.151, 0.22 ) }
    dend_48 { pt3dadd( -8.87379, 81.5038, 4.11339, 1.03 ) }
    dend_48 { pt3dadd( -9.11401, 82.1182, 4.03349, 1.03 ) }
    dend_48 { pt3dadd( -9.38717, 82.8289, 3.90221, 0.66 ) }
    dend_48 { pt3dadd( -9.75, 83.816, 3.67069, 0.22 ) }
    dend_48 { pt3dadd( -10.0569, 84.7211, 3.42821, 0.22 ) }
    dend_48 { pt3dadd( -10.543, 86.216, 2.95769, 0.22 ) }
    dend_48 { pt3dadd( -10.5635, 86.2862, 2.93255, 0.22 ) }
    dend_48 { pt3dadd( -10.6935, 86.7684, 2.75418, 0.88 ) }
    dend_48 { pt3dadd( -10.7976, 87.1582, 2.61965, 0.88 ) }
    dend_48 { pt3dadd( -11.0095, 87.9536, 2.38084, 0.22 ) }
    dend_48 { pt3dadd( -11.0248, 88.0082, 2.36797, 0.22 ) }
    dend_48 { pt3dadd( -11.5283, 89.5432, 2.15593, 0.22 ) }
    dend_48 { pt3dadd( -11.5707, 89.6525, 2.14054, 0.22 ) }
    dend_48 { pt3dadd( -11.8573, 90.2691, 2.0038, 0.22 ) }
    dend_48 { pt3dadd( -11.8899, 90.3251, 1.98601, 0.22 ) }
    dend_48 { pt3dadd( -12.2189, 90.803, 1.80488, 0.96 ) }
    dend_48 { pt3dadd( -12.6711, 91.4201, 1.55484, 0.96 ) }
    dend_48 { pt3dadd( -12.7145, 91.478, 1.53048, 0.96 ) }
    dend_48 { pt3dadd( -13.2836, 92.3599, 1.1209, 0.37 ) }
    dend_48 { pt3dadd( -13.6438, 93.0595, 0.802876, 0.29 ) }
    dend_48 { pt3dadd( -14.0169, 93.939, 0.4479, 0.15 ) }
    dend_48 { pt3dadd( -14.0374, 93.9992, 0.425273, 0.15 ) }
    dend_48 { pt3dadd( -14.2189, 94.578, 0.229109, 0.15 ) }
    dend_48 { pt3dadd( -14.4922, 95.4856, -0.0452517, 1.03 ) }
    dend_48 { pt3dadd( -14.7572, 96.424, -0.271559, 1.03 ) }
    dend_48 { pt3dadd( -14.8752, 96.8975, -0.377685, 1.03 ) }
    dend_48 { pt3dadd( -14.988, 97.4047, -0.476059, 0.22 ) }
    dend_48 { pt3dadd( -15.212, 98.488, -0.638229, 0.22 ) }
    dend_48 { pt3dadd( -15.2248, 98.5546, -0.644693, 0.22 ) }
    dend_48 { pt3dadd( -15.3467, 99.2876, -0.663882, 0.96 ) }
    dend_48 { pt3dadd( -15.4554, 100.094, -0.667799, 1.11 ) }
    dend_48 { pt3dadd( -15.4829, 100.688, -0.645657, 0.22 ) }
    dend_48 { pt3dadd( -15.4602, 101.335, -0.594356, 0.22 ) }
    dend_48 { pt3dadd( -15.3928, 101.827, -0.563652, 0.22 ) }
    dend_48 { pt3dadd( -15.3449, 102.106, -0.552894, 0.22 ) }
    dend_48 { pt3dadd( -15.3352, 102.173, -0.549481, 0.22 ) }
    dend_48 { pt3dadd( -15.1703, 103.586, -0.522814, 0.22 ) }
    dend_48 { pt3dadd( -15.1509, 103.688, -0.529045, 0.22 ) }
    dend_48 { pt3dadd( -14.9541, 104.499, -0.668554, 0.22 ) }
    dend_48 { pt3dadd( -14.9348, 104.573, -0.685036, 0.22 ) }
    dend_48 { pt3dadd( -14.4078, 106.546, -1.15664, 0.22 ) }
    dend_48 { pt3dadd( -13.787, 108.838, -1.74574, 0.22 ) }
    dend_48 { pt3dadd( -13.1806, 111.033, -2.37522, 0.22 ) }
    dend_48 { pt3dadd( -12.708, 112.688, -2.86758, 1.33 ) }
    dend_48 { pt3dadd( -12.5095, 113.334, -3.07147, 1.33 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 89/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -8.4819, 46.0956, 2.26031, 0.74 ) }
    dend_47 { pt3dadd( -8.99228, 47.3028, 2.38771, 0.74 ) }
    dend_47 { pt3dadd( -9.35044, 48.0562, 2.42474, 0.37 ) }
    dend_47 { pt3dadd( -9.69792, 48.7614, 2.44363, 0.37 ) }
    dend_47 { pt3dadd( -9.80965, 48.9866, 2.4454, 0.37 ) }
    dend_47 { pt3dadd( -10.2901, 49.9479, 2.44106, 0.22 ) }
    dend_47 { pt3dadd( -10.3256, 50.0196, 2.44008, 0.22 ) }
    dend_47 { pt3dadd( -10.9064, 51.1284, 2.34733, 0.22 ) }
    dend_47 { pt3dadd( -10.9456, 51.1975, 2.34066, 0.22 ) }
    dend_47 { pt3dadd( -11.3676, 51.8987, 2.2809, 0.22 ) }
    dend_47 { pt3dadd( -11.5283, 52.1546, 2.26194, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_47 { pt3dadd( -11.8931, 52.7586, 2.2336, 0.88 ) }
    dend_47 { pt3dadd( -12.1046, 53.126, 2.22454, 0.44 ) }
    dend_47 { pt3dadd( -12.3047, 53.5594, 2.23148, 0.29 ) }
    dend_47 { pt3dadd( -12.4679, 53.9763, 2.24325, 0.29 ) }
    dend_47 { pt3dadd( -12.492, 54.0525, 2.25221, 0.29 ) }
    dend_47 { pt3dadd( -12.7069, 54.8679, 2.39466, 0.29 ) }
    dend_47 { pt3dadd( -12.7914, 55.2213, 2.46737, 0.29 ) }
    dend_47 { pt3dadd( -13.0482, 56.435, 2.73426, 0.29 ) }
    dend_47 { pt3dadd( -13.0697, 56.5367, 2.75577, 0.29 ) }
    dend_47 { pt3dadd( -13.31, 57.4289, 2.95097, 0.29 ) }
    dend_47 { pt3dadd( -13.4671, 57.884, 3.06136, 0.29 ) }
    dend_47 { pt3dadd( -13.7271, 58.4538, 3.19948, 0.29 ) }
    dend_47 { pt3dadd( -13.8121, 58.5992, 3.22893, 0.29 ) }
    dend_47 { pt3dadd( -14.2007, 59.1402, 3.31369, 0.88 ) }
    dend_47 { pt3dadd( -14.8125, 59.9305, 3.36792, 0.88 ) }
    dend_47 { pt3dadd( -14.8555, 59.983, 3.36624, 0.88 ) }
    dend_47 { pt3dadd( -15.2134, 60.4289, 3.34365, 0.44 ) }
    dend_47 { pt3dadd( -15.6487, 60.9919, 3.30596, 0.37 ) }
    dend_47 { pt3dadd( -15.7469, 61.1398, 3.29485, 0.37 ) }
    dend_47 { pt3dadd( -16.2485, 62.0124, 3.23085, 0.37 ) }
    dend_47 { pt3dadd( -16.3829, 62.2844, 3.2096, 0.37 ) }
    dend_47 { pt3dadd( -16.7015, 63.0012, 3.17414, 0.37 ) }
    dend_47 { pt3dadd( -16.7653, 63.1608, 3.17164, 0.37 ) }
    dend_47 { pt3dadd( -17.226, 64.5463, 3.06105, 0.37 ) }
    dend_47 { pt3dadd( -17.3096, 64.8356, 3.01905, 1.11 ) }
    dend_47 { pt3dadd( -17.331, 64.9111, 3.00216, 1.11 ) }
    dend_47 { pt3dadd( -17.5708, 65.6663, 2.77586, 1.11 ) }
    dend_47 { pt3dadd( -17.6031, 65.7456, 2.74481, 1.11 ) }
    dend_47 { pt3dadd( -18.1783, 66.8572, 2.22189, 0.74 ) }
    dend_47 { pt3dadd( -18.4637, 67.2714, 1.97788, 0.29 ) }
    dend_47 { pt3dadd( -18.8982, 67.8184, 1.63874, 0.29 ) }
    dend_47 { pt3dadd( -19.0054, 67.94, 1.55882, 0.29 ) }
    dend_47 { pt3dadd( -19.5234, 68.4591, 1.19935, 0.74 ) }
    dend_47 { pt3dadd( -19.7661, 68.7088, 1.05554, 0.74 ) }
    dend_47 { pt3dadd( -20.0476, 68.9967, 0.927105, 0.29 ) }
    dend_47 { pt3dadd( -20.1019, 69.062, 0.897304, 0.29 ) }
    dend_47 { pt3dadd( -20.6573, 69.9283, 0.549377, 0.22 ) }
    dend_47 { pt3dadd( -20.6975, 70.0057, 0.523558, 0.22 ) }
    dend_47 { pt3dadd( -21.1179, 70.9367, 0.29802, 0.22 ) }
    dend_47 { pt3dadd( -21.1817, 71.0937, 0.271621, 0.22 ) }
    dend_47 { pt3dadd( -21.5237, 71.8346, 0.178597, 0.74 ) }
    dend_47 { pt3dadd( -21.9308, 72.6348, 0.103559, 0.74 ) }
    dend_47 { pt3dadd( -22.482, 73.6139, 0.0807106, 0.74 ) }
    dend_47 { pt3dadd( -22.8419, 74.1904, 0.0797675, 0.44 ) }
    dend_47 { pt3dadd( -23.1825, 74.6791, 0.0889267, 0.22 ) }
    dend_47 { pt3dadd( -24.2772, 76.1425, 0.139108, 0.22 ) }
    dend_47 { pt3dadd( -24.3531, 76.2357, 0.144636, 0.22 ) }
    dend_47 { pt3dadd( -24.8779, 76.8284, 0.173413, 0.81 ) }
    dend_47 { pt3dadd( -25.4964, 77.5355, 0.250687, 0.96 ) }
    dend_47 { pt3dadd( -25.5674, 77.6214, 0.262099, 0.96 ) }
    dend_47 { pt3dadd( -25.9956, 78.1823, 0.371046, 0.96 ) }
    dend_47 { pt3dadd( -26.0368, 78.2486, 0.386894, 0.96 ) }
    dend_47 { pt3dadd( -26.2927, 78.7099, 0.482827, 0.29 ) }
    dend_47 { pt3dadd( -27.1227, 80.387, 0.771738, 0.29 ) }
    dend_47 { pt3dadd( -27.1575, 80.4577, 0.785392, 0.29 ) }
    dend_47 { pt3dadd( -27.4073, 80.9195, 0.86138, 0.88 ) }
    dend_47 { pt3dadd( -27.8494, 81.691, 0.968133, 0.88 ) }
    dend_47 { pt3dadd( -28.3681, 82.5228, 1.04661, 0.88 ) }
    dend_47 { pt3dadd( -28.7197, 83.0463, 1.0744, 0.29 ) }
    dend_47 { pt3dadd( -29.1819, 83.6749, 1.07129, 0.15 ) }
    dend_47 { pt3dadd( -30.155, 84.9285, 1.05437, 0.15 ) }
    dend_47 { pt3dadd( -30.5894, 85.4544, 1.03976, 0.44 ) }
    dend_47 { pt3dadd( -31.1675, 86.1303, 1.00911, 0.44 ) }
    dend_47 { pt3dadd( -31.2192, 86.19, 1.00556, 0.44 ) }
    dend_47 { pt3dadd( -31.4661, 86.4723, 0.980514, 0.81 ) }
    dend_47 { pt3dadd( -32.5667, 87.6714, 0.883224, 0.81 ) }
    dend_47 { pt3dadd( -33.1489, 88.2592, 0.850785, 0.22 ) }
    dend_47 { pt3dadd( -33.791, 88.8636, 0.821111, 0.22 ) }
    dend_47 { pt3dadd( -33.9747, 89.0293, 0.814939, 0.22 ) }
    dend_47 { pt3dadd( -34.9719, 89.9033, 0.781193, 0.22 ) }
    dend_47 { pt3dadd( -36.0349, 90.7965, 0.749854, 0.22 ) }
    dend_47 { pt3dadd( -36.0955, 90.8463, 0.749429, 0.22 ) }
    dend_47 { pt3dadd( -36.7589, 91.4167, 0.752491, 0.22 ) }
    dend_47 { pt3dadd( -36.9339, 91.5927, 0.751018, 0.74 ) }
    dend_47 { pt3dadd( -37.4008, 92.2171, 0.736062, 0.74 ) }
    dend_47 { pt3dadd( -37.5384, 92.4807, 0.723137, 0.74 ) }
    dend_47 { pt3dadd( -37.755, 92.9662, 0.702424, 0.74 ) }
    dend_47 { pt3dadd( -37.8961, 93.2662, 0.696738, 0.74 ) }
    dend_47 { pt3dadd( -38.3892, 94.1995, 0.680531, 0.22 ) }
    dend_47 { pt3dadd( -38.6999, 94.7822, 0.639623, 0.22 ) }
    dend_47 { pt3dadd( -39.2735, 95.8248, 0.552063, 0.22 ) }
    dend_47 { pt3dadd( -39.7229, 96.6572, 0.479686, 0.88 ) }
    dend_47 { pt3dadd( -40.3801, 97.8598, 0.394327, 1.25 ) }
    dend_47 { pt3dadd( -41.0219, 99.0097, 0.322846, 1.25 ) }
    dend_47 { pt3dadd( -41.9171, 100.546, 0.231426, 1.25 ) }
    dend_47 { pt3dadd( -42.5413, 101.578, 0.161853, 0.59 ) }
    dend_47 { pt3dadd( -43.1433, 102.577, 0.0491155, 0.59 ) }
    dend_47 { pt3dadd( -43.7737, 103.586, -0.126759, 0.15 ) }
    dend_47 { pt3dadd( -44.3531, 104.46, -0.308065, 0.15 ) }
    dend_47 { pt3dadd( -44.6351, 104.86, -0.402823, 0.37 ) }
    dend_47 { pt3dadd( -44.9462, 105.232, -0.510172, 0.37 ) }
    dend_47 { pt3dadd( -45.789, 106.162, -0.891633, 0.22 ) }
    dend_47 { pt3dadd( -46.5012, 106.941, -1.39869, 0.22 ) }
    dend_47 { pt3dadd( -46.5475, 107.0, -1.44776, 0.22 ) }
    dend_47 { pt3dadd( -46.6914, 107.217, -1.64167, 0.74 ) }
    dend_47 { pt3dadd( -47.063, 107.866, -2.19224, 0.74 ) }
    dend_47 { pt3dadd( -47.0958, 107.925, -2.23343, 0.74 ) }
    dend_47 { pt3dadd( -47.8463, 109.251, -3.16916, 0.15 ) }
    dend_47 { pt3dadd( -48.1547, 109.776, -3.54947, 0.15 ) }
    dend_47 { pt3dadd( -48.2417, 109.913, -3.64032, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_47 { pt3dadd( -48.6176, 110.487, -4.01927, 0.15 ) }
    dend_47 { pt3dadd( -49.5121, 111.817, -4.86923, 0.15 ) }
    dend_47 { pt3dadd( -50.2732, 112.891, -5.4963, 0.88 ) }
    dend_47 { pt3dadd( -50.8359, 113.625, -5.84899, 0.88 ) }
    dend_47 { pt3dadd( -51.6613, 114.714, -6.40179, 0.66 ) }
    dend_47 { pt3dadd( -57.2296, 124.495, -8.09284, 0.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 6/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 20.3002, -26.0815, 5.86566, 1.03 ) }
    dend_34 { pt3dadd( 20.7241, -26.6682, 5.50046, 1.03 ) }
    dend_34 { pt3dadd( 20.767, -26.7235, 5.47738, 1.03 ) }
    dend_34 { pt3dadd( 21.1571, -27.2248, 5.29499, 1.03 ) }
    dend_34 { pt3dadd( 21.3202, -27.42, 5.24072, 1.03 ) }
    dend_34 { pt3dadd( 22.2419, -28.4752, 5.00954, 1.03 ) }
    dend_34 { pt3dadd( 22.2725, -28.5084, 5.00347, 1.03 ) }
    dend_34 { pt3dadd( 23.4678, -29.7449, 4.87374, 0.88 ) }
    dend_34 { pt3dadd( 23.5378, -29.8123, 4.87252, 0.88 ) }
    dend_34 { pt3dadd( 24.6407, -30.8, 4.98048, 0.88 ) }
    dend_34 { pt3dadd( 25.0596, -31.1455, 5.07769, 0.88 ) }
    dend_34 { pt3dadd( 25.4407, -31.4332, 5.21304, 1.25 ) }
    dend_34 { pt3dadd( 25.9369, -31.7826, 5.42472, 1.25 ) }
    dend_34 { pt3dadd( 26.9074, -32.3999, 5.90952, 0.74 ) }
    dend_34 { pt3dadd( 27.8551, -32.9819, 6.37825, 0.74 ) }
    dend_34 { pt3dadd( 28.6476, -33.4497, 6.76519, 0.74 ) }
    dend_34 { pt3dadd( 28.6784, -33.4681, 6.77874, 0.74 ) }
    dend_34 { pt3dadd( 29.1179, -33.7328, 6.95435, 1.47 ) }
    dend_34 { pt3dadd( 29.7343, -34.0861, 7.16048, 1.47 ) }
    dend_34 { pt3dadd( 31.076, -34.8287, 7.4063, 0.66 ) }
    dend_34 { pt3dadd( 31.6857, -35.1616, 7.44619, 0.66 ) }
    dend_34 { pt3dadd( 32.4144, -35.5675, 7.43912, 1.33 ) }
    dend_34 { pt3dadd( 32.453, -35.5902, 7.43737, 1.33 ) }
    dend_34 { pt3dadd( 33.0528, -35.9764, 7.39795, 1.33 ) }
    dend_34 { pt3dadd( 34.1237, -36.6723, 7.30924, 1.18 ) }
    dend_34 { pt3dadd( 34.9595, -37.2266, 7.22059, 1.18 ) }
    dend_34 { pt3dadd( 35.0118, -37.2625, 7.21451, 1.18 ) }
    dend_34 { pt3dadd( 35.8911, -37.8875, 7.11069, 0.88 ) }
    dend_34 { pt3dadd( 37.3326, -38.9929, 6.9584, 0.88 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 35/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 20.3002, -26.0815, 5.86566, 0.74 ) }
    dend_31 { pt3dadd( 20.3315, -26.0949, 5.91491, 0.74 ) }
    dend_31 { pt3dadd( 20.7409, -26.2533, 6.7755, 0.74 ) }
    dend_31 { pt3dadd( 20.7654, -26.2635, 6.82905, 0.74 ) }
    dend_31 { pt3dadd( 21.8039, -26.7098, 8.85936, 0.74 ) }
    dend_31 { pt3dadd( 23.3848, -27.3164, 11.642, 0.74 ) }
    dend_31 { pt3dadd( 23.415, -27.3272, 11.6924, 0.74 ) }
    dend_31 { pt3dadd( 25.1075, -27.8456, 14.2605, 1.4 ) }
    dend_31 { pt3dadd( 25.5603, -27.9701, 14.9097, 0.74 ) }
    dend_31 { pt3dadd( 26.5338, -28.1722, 16.1069, 0.74 ) }
    dend_31 { pt3dadd( 27.7981, -28.3184, 17.3226, 0.74 ) }
    dend_31 { pt3dadd( 27.8677, -28.3241, 17.37, 0.74 ) }
    dend_31 { pt3dadd( 29.3436, -28.5622, 18.2591, 0.74 ) }
    dend_31 { pt3dadd( 29.389, -28.5731, 18.2804, 0.74 ) }
    dend_31 { pt3dadd( 30.1067, -28.7591, 18.6724, 0.74 ) }
    dend_31 { pt3dadd( 30.1945, -28.7812, 18.7205, 0.74 ) }
    dend_31 { pt3dadd( 31.7368, -29.1368, 19.4576, 0.74 ) }
    dend_31 { pt3dadd( 33.314, -29.4722, 20.1935, 0.74 ) }
    dend_31 { pt3dadd( 34.1219, -29.6385, 20.562, 0.74 ) }
    dend_31 { pt3dadd( 35.9864, -30.0112, 21.3329, 0.74 ) }
    dend_31 { pt3dadd( 37.6919, -30.3791, 21.9667, 0.74 ) }
    dend_31 { pt3dadd( 39.1664, -30.6945, 22.4496, 1.25 ) }
    dend_31 { pt3dadd( 40.3639, -30.9629, 22.8282, 0.52 ) }
    dend_31 { pt3dadd( 40.8998, -31.0952, 23.0019, 0.52 ) }
    dend_31 { pt3dadd( 42.0819, -31.438, 23.4087, 0.66 ) }
    dend_31 { pt3dadd( 43.6912, -31.9857, 23.999, 0.66 ) }
    dend_31 { pt3dadd( 43.7506, -32.0084, 24.0248, 0.66 ) }
    dend_31 { pt3dadd( 45.7058, -32.6995, 24.9207, 0.66 ) }
    dend_31 { pt3dadd( 46.2173, -32.8525, 25.1298, 0.96 ) }
    dend_31 { pt3dadd( 46.9598, -33.06, 25.4056, 0.66 ) }
    dend_31 { pt3dadd( 48.0956, -33.3221, 25.7767, 0.52 ) }
    dend_31 { pt3dadd( 48.1519, -33.3368, 25.7908, 0.52 ) }
    dend_31 { pt3dadd( 49.3213, -33.7412, 26.0287, 0.52 ) }
    dend_31 { pt3dadd( 50.3378, -34.1957, 26.2214, 0.52 ) }
    dend_31 { pt3dadd( 51.209, -34.6553, 26.4956, 0.52 ) }
    dend_31 { pt3dadd( 51.2506, -34.6803, 26.5136, 0.52 ) }
    dend_31 { pt3dadd( 52.287, -35.3029, 26.9853, 0.52 ) }
    dend_31 { pt3dadd( 53.1889, -35.8147, 27.4236, 0.52 ) }
    dend_31 { pt3dadd( 54.2429, -36.3867, 27.9458, 1.25 ) }
    dend_31 { pt3dadd( 55.222, -36.7821, 28.5193, 0.52 ) }
    dend_31 { pt3dadd( 56.3796, -37.1502, 29.2291, 0.52 ) }
    dend_31 { pt3dadd( 58.1127, -37.6101, 30.301, 0.52 ) }
    dend_31 { pt3dadd( 58.23, -37.6296, 30.3709, 0.52 ) }
    dend_31 { pt3dadd( 59.0285, -37.7085, 30.8194, 0.52 ) }
    dend_31 { pt3dadd( 61.7444, -37.6846, 32.1956, 0.37 ) }
    dend_31 { pt3dadd( 62.2637, -37.6309, 32.4501, 0.37 ) }
    dend_31 { pt3dadd( 62.3759, -37.6059, 32.5065, 0.37 ) }
    dend_31 { pt3dadd( 63.3084, -37.3184, 33.0066, 0.37 ) }
    dend_31 { pt3dadd( 63.5743, -37.2399, 33.1621, 0.37 ) }
    dend_31 { pt3dadd( 64.858, -36.864, 33.9499, 0.37 ) }
    dend_31 { pt3dadd( 64.9101, -36.8513, 33.9764, 0.37 ) }
    dend_31 { pt3dadd( 65.9947, -36.5598, 34.6016, 0.37 ) }
    dend_31 { pt3dadd( 66.044, -36.5462, 34.6327, 0.37 ) }
    dend_31 { pt3dadd( 67.3823, -36.193, 35.5916, 0.29 ) }
    dend_31 { pt3dadd( 67.4554, -36.1734, 35.6418, 0.29 ) }
    dend_31 { pt3dadd( 68.0947, -35.9869, 36.0621, 0.29 ) }
    dend_31 { pt3dadd( 68.1474, -35.9719, 36.086, 0.29 ) }
    dend_31 { pt3dadd( 68.7181, -35.793, 36.2602, 0.29 ) }
    dend_31 { pt3dadd( 68.8432, -35.7554, 36.2896, 0.29 ) }
    dend_31 { pt3dadd( 69.8668, -35.4695, 36.465, 0.29 ) }
    dend_31 { pt3dadd( 69.9779, -35.4348, 36.493, 0.29 ) }
    dend_31 { pt3dadd( 71.071, -35.0669, 36.8225, 0.29 ) }
    dend_31 { pt3dadd( 72.3868, -34.5588, 37.2512, 0.29 ) }
    dend_31 { pt3dadd( 72.4394, -34.5366, 37.2697, 0.29 ) }
    dend_31 { pt3dadd( 73.7564, -33.9411, 37.7618, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 74.8865, -33.3643, 38.2283, 0.59 ) }
    dend_31 { pt3dadd( 75.514, -33.0161, 38.5007, 0.74 ) }
    dend_31 { pt3dadd( 76.1435, -32.6032, 38.8021, 0.74 ) }
    dend_31 { pt3dadd( 76.1898, -32.5705, 38.823, 0.74 ) }
    dend_31 { pt3dadd( 82.6449, -33.1009, 44.3698, 0.74 ) }
    dend_31 { pt3dadd( 88.4499, -33.1785, 50.6126, 0.74 ) }
    dend_31 { pt3dadd( 94.2394, -34.7654, 56.6887, 0.74 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 7/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 38.8739, -80.3795, 66.6878, 0.52 ) }
    dend_27 { pt3dadd( 39.2181, -80.7719, 66.8906, 0.52 ) }
    dend_27 { pt3dadd( 39.3625, -80.9691, 66.9788, 0.66 ) }
    dend_27 { pt3dadd( 39.5678, -81.3154, 67.1113, 0.52 ) }
    dend_27 { pt3dadd( 39.7683, -81.7115, 67.2495, 0.29 ) }
    dend_27 { pt3dadd( 39.9804, -82.231, 67.3994, 0.44 ) }
    dend_27 { pt3dadd( 39.9897, -82.2574, 67.4061, 0.44 ) }
    dend_27 { pt3dadd( 40.0686, -82.5721, 67.4393, 0.44 ) }
    dend_27 { pt3dadd( 40.1016, -82.889, 67.4544, 0.74 ) }
    dend_27 { pt3dadd( 40.1016, -82.9888, 67.4548, 0.74 ) }
    dend_27 { pt3dadd( 40.0899, -83.3126, 67.4396, 0.74 ) }
    dend_27 { pt3dadd( 40.0894, -83.3413, 67.4355, 0.74 ) }
    dend_27 { pt3dadd( 40.1288, -83.7422, 67.4099, 0.74 ) }
    dend_27 { pt3dadd( 40.1958, -84.0613, 67.4875, 0.44 ) }
    dend_27 { pt3dadd( 40.204, -84.0865, 67.4983, 0.44 ) }
    dend_27 { pt3dadd( 40.3441, -84.4736, 67.6866, 0.37 ) }
    dend_27 { pt3dadd( 40.3596, -84.5122, 67.7086, 0.37 ) }
    dend_27 { pt3dadd( 40.6635, -85.2093, 68.1624, 0.37 ) }
    dend_27 { pt3dadd( 41.1218, -86.1441, 68.8967, 0.44 ) }
    dend_27 { pt3dadd( 41.2693, -86.4235, 69.1483, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 27/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 38.8739, -80.3795, 66.6878, 0.66 ) }
    dend_26 { pt3dadd( 39.7671, -80.5469, 67.2065, 0.66 ) }
    dend_26 { pt3dadd( 40.2266, -80.6283, 67.571, 0.29 ) }
    dend_26 { pt3dadd( 40.8586, -80.7402, 68.0725, 0.29 ) }
    dend_26 { pt3dadd( 40.9192, -80.7509, 68.1205, 0.29 ) }
    dend_26 { pt3dadd( 41.7192, -80.8926, 68.7552, 0.29 ) }
    dend_26 { pt3dadd( 41.8285, -80.912, 68.8418, 0.29 ) }
    dend_26 { pt3dadd( 42.8359, -81.1002, 69.4003, 0.74 ) }
    dend_26 { pt3dadd( 50.2979, -81.7007, 75.6413, 0.74 ) }
    dend_26 { pt3dadd( 58.9153, -83.3356, 79.9998, 0.74 ) }
    dend_26 { pt3dadd( 66.8109, -85.9212, 85.2229, 0.74 ) }
    dend_26 { pt3dadd( 75.4821, -89.1347, 88.6612, 0.74 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 39/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -55.1561, -47.9373, -26.7385, 0.29 ) }
    dend_23 { pt3dadd( -57.9881, -49.047, -28.473, 0.29 ) }
    dend_23 { pt3dadd( -59.6559, -49.7607, -29.5297, 0.29 ) }
    dend_23 { pt3dadd( -61.2688, -50.4902, -30.5343, 0.29 ) }
    dend_23 { pt3dadd( -63.6945, -51.609, -32.0318, 0.88 ) }
    dend_23 { pt3dadd( -64.6619, -52.0751, -32.6831, 1.18 ) }
    dend_23 { pt3dadd( -65.7262, -52.598, -33.4342, 0.59 ) }
    dend_23 { pt3dadd( -67.1284, -53.4154, -34.5282, 0.52 ) }
    dend_23 { pt3dadd( -67.5011, -53.6453, -34.9058, 0.88 ) }
    dend_23 { pt3dadd( -67.5469, -53.6748, -34.9582, 0.88 ) }
    dend_23 { pt3dadd( -68.8074, -54.5033, -36.3395, 0.37 ) }
    dend_23 { pt3dadd( -68.8524, -54.5318, -36.3931, 0.37 ) }
    dend_23 { pt3dadd( -70.8618, -55.8186, -38.8216, 0.37 ) }
    dend_23 { pt3dadd( -71.5843, -56.3286, -39.5794, 1.25 ) }
    dend_23 { pt3dadd( -71.6266, -56.3594, -39.6179, 1.25 ) }
    dend_23 { pt3dadd( -72.4909, -56.9945, -40.2513, 1.25 ) }
    dend_23 { pt3dadd( -72.5555, -57.0408, -40.2864, 1.25 ) }
    dend_23 { pt3dadd( -73.2367, -57.572, -40.5843, 0.29 ) }
    dend_23 { pt3dadd( -74.738, -58.836, -40.9741, 0.15 ) }
    dend_23 { pt3dadd( -75.2026, -59.2454, -41.1202, 0.59 ) }
    dend_23 { pt3dadd( -75.5601, -59.5628, -41.2555, 0.59 ) }
    dend_23 { pt3dadd( -76.3264, -60.2414, -41.5888, 0.15 ) }
    dend_23 { pt3dadd( -77.4091, -61.1396, -42.0567, 0.15 ) }
    dend_23 { pt3dadd( -77.4654, -61.1811, -42.0863, 0.15 ) }
    dend_23 { pt3dadd( -78.522, -61.9069, -42.6403, 0.88 ) }
    dend_23 { pt3dadd( -78.5796, -61.9456, -42.6712, 0.88 ) }
    dend_23 { pt3dadd( -79.3381, -62.4505, -43.0807, 0.88 ) }
    dend_23 { pt3dadd( -80.4107, -63.1368, -43.7174, 0.22 ) }
    dend_23 { pt3dadd( -82.4253, -64.4468, -44.9711, 0.22 ) }
    dend_23 { pt3dadd( -83.6134, -65.3912, -45.8797, 0.22 ) }
    dend_23 { pt3dadd( -85.4895, -67.2897, -47.8518, 0.22 ) }
    dend_23 { pt3dadd( -85.5261, -67.3343, -47.9019, 0.22 ) }
    dend_23 { pt3dadd( -86.4481, -69.1467, -50.1449, 0.22 ) }
    dend_23 { pt3dadd( -86.6709, -70.2248, -51.3219, 0.22 ) }
    dend_23 { pt3dadd( -86.4835, -72.942, -53.8252, 0.22 ) }
    dend_23 { pt3dadd( -85.6313, -75.4384, -55.66, 0.22 ) }
    dend_23 { pt3dadd( -85.6024, -75.491, -55.6886, 0.22 ) }
    dend_23 { pt3dadd( -83.2615, -79.1317, -56.8131, 0.22 ) }
    dend_23 { pt3dadd( -79.1618, -84.5911, -57.2428, 0.22 ) }
    dend_23 { pt3dadd( -79.1184, -84.6507, -57.2204, 0.22 ) }
    dend_23 { pt3dadd( -77.7559, -86.5343, -56.0254, 0.22 ) }
    dend_23 { pt3dadd( -77.7147, -86.5939, -55.9767, 0.22 ) }
    dend_23 { pt3dadd( -76.4656, -88.5321, -54.1324, 0.22 ) }
    dend_23 { pt3dadd( -76.4419, -88.5769, -54.0759, 0.22 ) }
    dend_23 { pt3dadd( -75.0959, -92.8838, -48.649, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 84/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -55.1561, -47.9373, -26.7385, 1.18 ) }
    dend_22 { pt3dadd( -57.2809, -51.061, -26.4252, 1.18 ) }
    dend_22 { pt3dadd( -59.0439, -53.1446, -26.6686, 1.18 ) }
    dend_22 { pt3dadd( -60.262, -54.4468, -26.9878, 0.52 ) }
    dend_22 { pt3dadd( -61.7215, -55.9296, -27.4632, 0.52 ) }
    dend_22 { pt3dadd( -61.7806, -55.9885, -27.4843, 0.52 ) }
    dend_22 { pt3dadd( -62.97, -57.0956, -28.0546, 0.52 ) }
    dend_22 { pt3dadd( -64.457, -58.4372, -28.7862, 0.52 ) }
    dend_22 { pt3dadd( -64.5749, -58.5237, -28.8748, 0.52 ) }
    dend_22 { pt3dadd( -65.5424, -59.0794, -29.8068, 0.37 ) }
    dend_22 { pt3dadd( -65.5952, -59.1112, -29.8654, 0.37 ) }
    dend_22 { pt3dadd( -67.0624, -60.1071, -31.4195, 1.11 ) }
    dend_22 { pt3dadd( -67.7642, -60.6549, -32.1413, 1.11 ) }
    dend_22 { pt3dadd( -67.8253, -60.7061, -32.1981, 1.11 ) }
    dend_22 { pt3dadd( -69.4485, -62.0479, -33.6512, 0.22 ) }
    dend_22 { pt3dadd( -70.496, -62.8999, -34.5267, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_22 { pt3dadd( -71.3296, -63.644, -35.1731, 0.29 ) }
    dend_22 { pt3dadd( -71.4132, -63.7272, -35.2293, 0.29 ) }
    dend_22 { pt3dadd( -71.8712, -64.1428, -35.584, 0.81 ) }
    dend_22 { pt3dadd( -71.9338, -64.1949, -35.6382, 0.81 ) }
    dend_22 { pt3dadd( -72.5977, -64.7562, -36.2223, 0.81 ) }
    dend_22 { pt3dadd( -73.8786, -65.8253, -37.4462, 0.37 ) }
    dend_22 { pt3dadd( -73.9299, -65.87, -37.4983, 0.37 ) }
    dend_22 { pt3dadd( -76.0503, -67.871, -39.6669, 0.15 ) }
    dend_22 { pt3dadd( -76.8721, -68.8372, -40.5941, 0.96 ) }
    dend_22 { pt3dadd( -77.5075, -69.7318, -41.3592, 1.4 ) }
    dend_22 { pt3dadd( -78.0132, -70.7555, -42.1294, 0.52 ) }
    dend_22 { pt3dadd( -78.0249, -70.8205, -42.1656, 0.52 ) }
    dend_22 { pt3dadd( -78.0069, -72.1125, -42.7598, 0.29 ) }
    dend_22 { pt3dadd( -77.4806, -74.366, -43.4887, 0.29 ) }
    dend_22 { pt3dadd( -77.4514, -74.4591, -43.5141, 0.29 ) }
    dend_22 { pt3dadd( -76.7829, -76.3095, -43.9542, 0.29 ) }
    dend_22 { pt3dadd( -75.7516, -79.2854, -44.5373, 0.29 ) }
    dend_22 { pt3dadd( -75.6956, -79.4634, -44.5676, 0.29 ) }
    dend_22 { pt3dadd( -75.0573, -81.9145, -44.8444, 0.29 ) }
    dend_22 { pt3dadd( -75.0066, -82.1402, -44.8595, 0.29 ) }
    dend_22 { pt3dadd( -74.7251, -83.6255, -44.8938, 0.15 ) }
    dend_22 { pt3dadd( -74.4758, -85.7999, -44.7266, 0.15 ) }
    dend_22 { pt3dadd( -74.476, -85.8867, -44.7129, 0.15 ) }
    dend_22 { pt3dadd( -74.5925, -87.6416, -44.44, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -5.96723, -24.2524, -2.07408, 0.88 ) }
    dend_16 { pt3dadd( -8.24862, -25.4195, -6.52037, 0.88 ) }
    dend_16 { pt3dadd( -9.01147, -25.8423, -7.89456, 0.88 ) }
    dend_16 { pt3dadd( -9.8583, -26.3116, -9.42006, 0.88 ) }
    dend_16 { pt3dadd( -9.89272, -26.3307, -9.48203, 0.88 ) }
    dend_16 { pt3dadd( -10.4777, -26.6549, -10.5359, 0.88 ) }
    dend_16 { pt3dadd( -11.9748, -27.4847, -13.2327, 1.4 ) }
    dend_16 { pt3dadd( -12.3342, -27.7493, -13.6868, 1.4 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 32/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -5.96723, -24.2524, -2.07408, 0.81 ) }
    dend_3 { pt3dadd( -7.45622, -27.1878, -0.863969, 0.81 ) }
    dend_3 { pt3dadd( -8.52633, -29.2974, 0.0057212, 0.81 ) }
    dend_3 { pt3dadd( -9.32425, -30.8704, 0.654191, 0.81 ) }
    dend_3 { pt3dadd( -10.0302, -32.2621, 1.22792, 0.81 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 37/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.96723, -24.2524, -2.07408, 2.5 ) }
    dend_2 { pt3dadd( -5.86391, -24.9482, -1.92676, 2.5 ) }
    dend_2 { pt3dadd( -5.61827, -26.7445, -1.65706, 1.03 ) }
    dend_2 { pt3dadd( -5.39057, -28.1939, -1.56061, 0.59 ) }
    dend_2 { pt3dadd( -5.1464, -29.3713, -1.56143, 0.59 ) }
    dend_2 { pt3dadd( -5.12575, -29.44, -1.57077, 0.59 ) }
    dend_2 { pt3dadd( -4.86454, -30.2095, -1.72107, 0.59 ) }
    dend_2 { pt3dadd( -4.31315, -31.4928, -2.14989, 0.59 ) }
    dend_2 { pt3dadd( -3.35483, -33.2935, -2.99676, 1.03 ) }
    dend_2 { pt3dadd( -2.47235, -34.7544, -3.79277, 0.81 ) }
    dend_2 { pt3dadd( -0.759315, -37.3005, -5.17046, 0.81 ) }
    dend_2 { pt3dadd( -0.726766, -37.3463, -5.19453, 0.81 ) }
    dend_2 { pt3dadd( 1.10849, -39.8102, -6.47161, 0.81 ) }
    dend_2 { pt3dadd( 3.01519, -42.4306, -7.72484, 0.81 ) }
    dend_2 { pt3dadd( 3.05161, -42.488, -7.74722, 0.81 ) }
    dend_2 { pt3dadd( 3.89876, -44.2377, -8.26911, 0.52 ) }
    dend_2 { pt3dadd( 4.34906, -45.4865, -8.52896, 0.52 ) }
    dend_2 { pt3dadd( 4.47477, -45.9435, -8.59401, 0.74 ) }
    dend_2 { pt3dadd( 4.93121, -48.5536, -8.77407, 1.11 ) }
    dend_2 { pt3dadd( 5.27933, -51.4182, -8.91505, 1.11 ) }
    dend_2 { pt3dadd( 5.50115, -53.3555, -9.04021, 0.81 ) }
    dend_2 { pt3dadd( 5.5197, -53.5096, -9.05274, 0.81 ) }
    dend_2 { pt3dadd( 5.92966, -55.8314, -9.17489, 0.59 ) }
    dend_2 { pt3dadd( 5.94529, -55.8915, -9.17707, 0.59 ) }
    dend_2 { pt3dadd( 6.53973, -57.5887, -9.17317, 0.59 ) }
    dend_2 { pt3dadd( 6.56403, -57.6455, -9.1709, 0.59 ) }
    dend_2 { pt3dadd( 7.26913, -59.2025, -9.07937, 0.59 ) }
    dend_2 { pt3dadd( 8.13546, -61.1814, -8.99824, 0.44 ) }
    dend_2 { pt3dadd( 8.70303, -62.5551, -9.00186, 0.44 ) }
    dend_2 { pt3dadd( 8.89415, -63.0967, -9.01047, 1.03 ) }
    dend_2 { pt3dadd( 8.91463, -63.1661, -9.01233, 1.03 ) }
    dend_2 { pt3dadd( 9.19518, -64.2675, -9.08645, 1.03 ) }
    dend_2 { pt3dadd( 9.21082, -64.3477, -9.10076, 1.03 ) }
    dend_2 { pt3dadd( 9.41821, -65.2408, -9.37733, 0.52 ) }
    dend_2 { pt3dadd( 9.82738, -66.3833, -9.8078, 0.52 ) }
    dend_2 { pt3dadd( 9.92142, -66.5848, -9.88998, 0.52 ) }
    dend_2 { pt3dadd( 10.4727, -67.603, -10.3164, 0.74 ) }
    dend_2 { pt3dadd( 11.0742, -68.6598, -10.7383, 0.88 ) }
    dend_2 { pt3dadd( 11.6588, -69.6835, -11.0747, 0.66 ) }
    dend_2 { pt3dadd( 12.1597, -70.5912, -11.3034, 0.44 ) }
    dend_2 { pt3dadd( 12.699, -71.7109, -11.5079, 0.44 ) }
    dend_2 { pt3dadd( 12.7246, -71.778, -11.5161, 0.44 ) }
    dend_2 { pt3dadd( 13.259, -73.5044, -11.637, 0.44 ) }
    dend_2 { pt3dadd( 13.5026, -74.4743, -11.675, 0.88 ) }
    dend_2 { pt3dadd( 13.7323, -75.5917, -11.7241, 1.18 ) }
    dend_2 { pt3dadd( 14.1246, -77.4409, -11.7998, 0.88 ) }
    dend_2 { pt3dadd( 14.422, -78.6896, -11.8406, 1.18 ) }
    dend_2 { pt3dadd( 14.4423, -78.759, -11.8438, 1.18 ) }
    dend_2 { pt3dadd( 15.156, -80.8001, -11.9711, 0.66 ) }
    dend_2 { pt3dadd( 15.1878, -80.8759, -11.9781, 0.66 ) }
    dend_2 { pt3dadd( 16.2437, -82.7992, -12.192, 0.66 ) }
    dend_2 { pt3dadd( 16.2839, -82.858, -12.1995, 0.66 ) }
    dend_2 { pt3dadd( 17.4105, -84.2597, -12.4251, 0.66 ) }
    dend_2 { pt3dadd( 17.4553, -84.3142, -12.4355, 0.66 ) }
    dend_2 { pt3dadd( 18.1094, -85.1047, -12.6308, 0.29 ) }
    dend_2 { pt3dadd( 18.7096, -85.972, -12.9175, 0.29 ) }
    dend_2 { pt3dadd( 18.7439, -86.03, -12.9418, 0.29 ) }
    dend_2 { pt3dadd( 19.2551, -87.0111, -13.3601, 0.81 ) }
    dend_2 { pt3dadd( 19.8456, -88.2031, -13.8929, 1.18 ) }
    dend_2 { pt3dadd( 20.3458, -89.2079, -14.3491, 0.88 ) }
    dend_2 { pt3dadd( 20.966, -90.464, -14.9177, 0.29 ) }
    dend_2 { pt3dadd( 21.3699, -91.2615, -15.2786, 0.29 ) }
    dend_2 { pt3dadd( 21.5185, -91.5293, -15.4004, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 22.4031, -92.9322, -15.9942, 0.66 ) }
    dend_2 { pt3dadd( 22.9058, -93.636, -16.255, 1.03 ) }
    dend_2 { pt3dadd( 23.4629, -94.3926, -16.4547, 0.37 ) }
    dend_2 { pt3dadd( 23.5047, -94.4498, -16.4644, 0.37 ) }
    dend_2 { pt3dadd( 24.1341, -95.3932, -16.5375, 0.37 ) }
    dend_2 { pt3dadd( 24.6947, -96.2534, -16.4837, 0.81 ) }
    dend_2 { pt3dadd( 25.1168, -96.9312, -16.368, 0.81 ) }
    dend_2 { pt3dadd( 25.8059, -97.972, -16.1495, 0.52 ) }
    dend_2 { pt3dadd( 25.8458, -98.0296, -16.1361, 0.52 ) }
    dend_2 { pt3dadd( 26.9159, -99.4414, -15.8163, 0.88 ) }
    dend_2 { pt3dadd( 28.0865, -100.844, -15.49, 0.52 ) }
    dend_2 { pt3dadd( 28.4625, -101.215, -15.3852, 0.52 ) }
    dend_2 { pt3dadd( 29.2264, -101.685, -15.1693, 0.74 ) }
    dend_2 { pt3dadd( 29.427, -101.754, -15.1172, 0.74 ) }
    dend_2 { pt3dadd( 30.2968, -101.856, -14.8378, 0.52 ) }
    dend_2 { pt3dadd( 30.3722, -101.852, -14.8139, 0.52 ) }
    dend_2 { pt3dadd( 32.1307, -101.555, -14.2587, 0.29 ) }
    dend_2 { pt3dadd( 34.1078, -101.094, -13.5415, 0.22 ) }
    dend_2 { pt3dadd( 34.4348, -100.998, -13.4048, 0.37 ) }
    dend_2 { pt3dadd( 36.2116, -100.411, -12.6113, 0.81 ) }
    dend_2 { pt3dadd( 39.3393, -110.092, -14.433, 0.81 ) }
    dend_2 { pt3dadd( 42.4752, -119.869, -15.6372, 0.81 ) }
    dend_2 { pt3dadd( 44.5031, -130.013, -15.1394, 0.81 ) }
    dend_2 { pt3dadd( 47.4426, -139.927, -15.3534, 0.81 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 24/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 21.4762, 108.68, 18.9454, 0.29 ) }
    dend_79 { pt3dadd( 17.6254, 114.766, 24.0613, 0.29 ) }
    dend_79 { pt3dadd( 12.5452, 119.481, 29.4197, 0.29 ) }
    dend_79 { pt3dadd( 7.96637, 124.32, 35.117, 0.29 ) }
    dend_79 { pt3dadd( 2.39178, 129.663, 39.3288, 0.29 ) }
    dend_79 { pt3dadd( -2.42494, 136.198, 42.9008, 0.29 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 30/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 21.4762, 108.68, 18.9454, 0.74 ) }
    dend_78 { pt3dadd( 21.4336, 119.471, 19.299, 0.29 ) }
    dend_78 { pt3dadd( 20.7861, 130.08, 21.0048, 0.29 ) }
    dend_78 { pt3dadd( 20.0331, 140.825, 21.5717, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 34/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 63.0109, 79.6249, 25.4163, 0.37 ) }
    dend_76 { pt3dadd( 63.0484, 79.7107, 25.4421, 0.37 ) }
    dend_76 { pt3dadd( 63.468, 80.5531, 25.6275, 0.37 ) }
    dend_76 { pt3dadd( 63.5263, 80.6562, 25.6479, 0.37 ) }
    dend_76 { pt3dadd( 63.8836, 81.3313, 25.8535, 0.59 ) }
    dend_76 { pt3dadd( 64.2825, 82.0956, 26.1121, 0.59 ) }
    dend_76 { pt3dadd( 64.3708, 82.2659, 26.1703, 0.59 ) }
    dend_76 { pt3dadd( 64.9887, 83.4127, 26.5734, 0.29 ) }
    dend_76 { pt3dadd( 65.2476, 83.8279, 26.7293, 0.29 ) }
    dend_76 { pt3dadd( 66.3298, 85.4084, 27.3007, 0.15 ) }
    dend_76 { pt3dadd( 66.4, 85.5073, 27.3416, 0.15 ) }
    dend_76 { pt3dadd( 66.7228, 85.9552, 27.5536, 0.15 ) }
    dend_76 { pt3dadd( 67.0277, 86.382, 27.7636, 0.15 ) }
    dend_76 { pt3dadd( 67.7181, 87.3363, 28.2272, 0.15 ) }
    dend_76 { pt3dadd( 68.0511, 87.7864, 28.4189, 0.44 ) }
    dend_76 { pt3dadd( 68.8849, 88.8436, 28.825, 0.29 ) }
    dend_76 { pt3dadd( 69.4799, 89.6197, 29.1285, 0.29 ) }
    dend_76 { pt3dadd( 69.7617, 90.0056, 29.2832, 0.29 ) }
    dend_76 { pt3dadd( 70.3883, 90.9717, 29.6514, 0.29 ) }
    dend_76 { pt3dadd( 70.7268, 91.6028, 29.857, 0.74 ) }
    dend_76 { pt3dadd( 76.9013, 101.731, 32.3143, 0.74 ) }
    dend_76 { pt3dadd( 83.9194, 111.528, 33.4822, 0.74 ) }
    dend_76 { pt3dadd( 90.3334, 121.765, 34.6652, 0.74 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 57/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 63.0109, 79.6249, 25.4163, 0.29 ) }
    dend_75 { pt3dadd( 63.1272, 79.5412, 25.4257, 0.29 ) }
    dend_75 { pt3dadd( 63.2169, 79.4956, 25.4328, 0.29 ) }
    dend_75 { pt3dadd( 63.9774, 79.1482, 25.4919, 0.29 ) }
    dend_75 { pt3dadd( 64.186, 79.0661, 25.508, 0.29 ) }
    dend_75 { pt3dadd( 64.8112, 78.8387, 25.556, 0.29 ) }
    dend_75 { pt3dadd( 65.0965, 78.7349, 25.5778, 0.29 ) }
    dend_75 { pt3dadd( 66.833, 78.1409, 25.7106, 0.29 ) }
    dend_75 { pt3dadd( 66.9284, 78.1109, 25.7178, 0.29 ) }
    dend_75 { pt3dadd( 67.8464, 77.8778, 25.787, 0.88 ) }
    dend_75 { pt3dadd( 67.9578, 77.8533, 25.7954, 0.88 ) }
    dend_75 { pt3dadd( 81.7325, 74.6168, 27.8817, 0.88 ) }
    dend_75 { pt3dadd( 94.5394, 69.9734, 32.3643, 0.88 ) }
    dend_75 { pt3dadd( 107.193, 66.8237, 38.2391, 0.88 ) }
    dend_75 { pt3dadd( 120.343, 64.1916, 43.1768, 0.88 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 72/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 25.3356, 13.6536, -33.6077, 0.74 ) }
    dend_65 { pt3dadd( 24.9497, 16.1639, -37.2043, 0.74 ) }
    dend_65 { pt3dadd( 24.9734, 17.0912, -38.8135, 0.74 ) }
    dend_65 { pt3dadd( 24.9779, 17.1404, -38.9027, 0.74 ) }
    dend_65 { pt3dadd( 25.0964, 17.6823, -39.963, 0.74 ) }
    dend_65 { pt3dadd( 25.2758, 18.3402, -41.2852, 0.74 ) }
    dend_65 { pt3dadd( 25.6887, 19.5325, -43.835, 0.59 ) }
    dend_65 { pt3dadd( 26.5237, 21.4054, -47.8953, 0.59 ) }
    dend_65 { pt3dadd( 26.586, 21.5183, -48.1602, 0.59 ) }
    dend_65 { pt3dadd( 27.3625, 22.8504, -51.2928, 0.59 ) }
    dend_65 { pt3dadd( 27.3865, 22.8879, -51.3837, 0.59 ) }
    dend_65 { pt3dadd( 28.2741, 24.1748, -54.6364, 0.29 ) }
    dend_65 { pt3dadd( 28.2995, 24.2138, -54.7264, 0.29 ) }
    dend_65 { pt3dadd( 28.4912, 24.6227, -55.5517, 0.29 ) }
    dend_65 { pt3dadd( 28.7074, 25.4018, -57.0818, 0.29 ) }
    dend_65 { pt3dadd( 28.6995, 25.4436, -57.1584, 0.29 ) }
    dend_65 { pt3dadd( 28.3947, 25.6494, -57.8479, 0.29 ) }
    dend_65 { pt3dadd( 28.2061, 25.6726, -58.1015, 0.29 ) }
    dend_65 { pt3dadd( 27.6309, 25.74, -58.8796, 0.29 ) }
    dend_65 { pt3dadd( 26.9715, 25.7895, -59.7596, 0.74 ) }
    dend_65 { pt3dadd( 26.4454, 25.8875, -61.0333, 0.74 ) }
    dend_65 { pt3dadd( 25.6246, 26.3669, -64.2225, 0.37 ) }
    dend_65 { pt3dadd( 25.6137, 26.3823, -64.3215, 0.37 ) }
    dend_65 { pt3dadd( 25.5432, 26.5906, -65.6375, 0.37 ) }
    dend_65 { pt3dadd( 25.5394, 26.6131, -65.7888, 0.37 ) }
    dend_65 { pt3dadd( 25.4026, 27.6095, -71.7271, 0.37 ) }
    dend_65 { pt3dadd( 25.3868, 27.7948, -72.7547, 1.03 ) }
    dend_65 { pt3dadd( 25.103, 28.9041, -78.5699, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_65 { pt3dadd( 25.0939, 28.922, -78.6687, 1.03 ) }
    dend_65 { pt3dadd( 24.6484, 29.5559, -81.9927, 0.29 ) }
    dend_65 { pt3dadd( 24.4264, 29.8268, -83.1725, 0.29 ) }
    dend_65 { pt3dadd( 24.3645, 29.8986, -83.3928, 0.29 ) }
    dend_65 { pt3dadd( 23.8435, 30.5997, -85.1091, 0.29 ) }
    dend_65 { pt3dadd( 23.8186, 30.6474, -85.196, 0.29 ) }
    dend_65 { pt3dadd( 23.1813, 32.3379, -88.0789, 0.29 ) }
    dend_65 { pt3dadd( 23.1684, 32.3923, -88.1647, 0.29 ) }
    dend_65 { pt3dadd( 22.97, 33.7057, -90.3975, 1.33 ) }
    dend_65 { pt3dadd( 22.926, 34.1901, -91.2292, 1.33 ) }
    dend_65 { pt3dadd( 22.8878, 36.0457, -94.4713, 0.29 ) }
    dend_65 { pt3dadd( 22.8415, 36.708, -95.6867, 0.29 ) }
    dend_65 { pt3dadd( 22.8208, 36.7791, -95.8229, 0.29 ) }
    dend_65 { pt3dadd( 22.5075, 37.4572, -97.1164, 1.03 ) }
    dend_65 { pt3dadd( 22.3428, 37.6859, -97.5596, 1.03 ) }
    dend_65 { pt3dadd( 22.3156, 37.7199, -97.6514, 1.03 ) }
    dend_65 { pt3dadd( 21.8384, 38.4461, -99.3518, 0.22 ) }
    dend_65 { pt3dadd( 21.3253, 39.2723, -101.379, 0.22 ) }
    dend_65 { pt3dadd( 21.3023, 39.3072, -101.472, 0.22 ) }
    dend_65 { pt3dadd( 20.7791, 40.0982, -103.61, 1.18 ) }
    dend_65 { pt3dadd( 19.5191, 42.1236, -108.774, 0.22 ) }
    dend_65 { pt3dadd( 19.0911, 42.9989, -110.924, 0.22 ) }
    dend_65 { pt3dadd( 18.6936, 44.1527, -113.707, 1.18 ) }
    dend_65 { pt3dadd( 18.5157, 45.4112, -117.162, 0.15 ) }
    dend_65 { pt3dadd( 18.5109, 45.5135, -117.463, 0.15 ) }
    dend_65 { pt3dadd( 18.5547, 46.1921, -119.263, 0.15 ) }
    dend_65 { pt3dadd( 18.7137, 47.4438, -122.176, 0.15 ) }
    dend_65 { pt3dadd( 18.9255, 48.6478, -124.872, 1.62 ) }
    dend_65 { pt3dadd( 19.6323, 51.8302, -131.191, 0.22 ) }
    dend_65 { pt3dadd( 19.6452, 51.8772, -131.281, 0.22 ) }
    dend_65 { pt3dadd( 20.1197, 53.5434, -134.544, 0.22 ) }
    dend_65 { pt3dadd( 20.3563, 54.349, -136.183, 1.25 ) }
    dend_65 { pt3dadd( 20.4012, 54.6618, -136.71, 1.25 ) }
    dend_65 { pt3dadd( 20.4057, 54.7394, -136.799, 1.25 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 34/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 25.3356, 13.6536, -33.6077, 0.96 ) }
    dend_64 { pt3dadd( 25.5031, 13.6162, -33.7187, 0.96 ) }
    dend_64 { pt3dadd( 26.8413, 13.3192, -34.6271, 0.74 ) }
    dend_64 { pt3dadd( 28.5664, 12.8703, -35.6961, 0.74 ) }
    dend_64 { pt3dadd( 30.4717, 12.412, -36.928, 0.74 ) }
    dend_64 { pt3dadd( 30.5655, 12.3936, -36.9989, 0.74 ) }
    dend_64 { pt3dadd( 33.3761, 12.039, -39.457, 0.74 ) }
    dend_64 { pt3dadd( 33.4375, 12.0367, -39.5145, 0.74 ) }
    dend_64 { pt3dadd( 35.3626, 12.1653, -41.5295, 0.74 ) }
    dend_64 { pt3dadd( 36.9389, 12.3867, -43.1938, 0.74 ) }
    dend_64 { pt3dadd( 38.7093, 12.8587, -45.11, 1.62 ) }
    dend_64 { pt3dadd( 40.2002, 13.3827, -46.8324, 0.66 ) }
    dend_64 { pt3dadd( 41.3854, 13.8555, -48.232, 0.52 ) }
    dend_64 { pt3dadd( 43.055, 14.538, -50.2132, 1.25 ) }
    dend_64 { pt3dadd( 44.2162, 14.9916, -51.6027, 1.25 ) }
    dend_64 { pt3dadd( 47.6551, 16.11, -55.4303, 0.59 ) }
    dend_64 { pt3dadd( 49.9745, 16.7761, -58.0758, 0.96 ) }
    dend_64 { pt3dadd( 52.47, 17.4378, -61.0633, 0.96 ) }
    dend_64 { pt3dadd( 52.524, 17.4497, -61.1269, 0.96 ) }
    dend_64 { pt3dadd( 56.4368, 18.1246, -65.4745, 0.96 ) }
    dend_64 { pt3dadd( 57.5533, 18.257, -66.6924, 1.47 ) }
    dend_64 { pt3dadd( 60.9918, 18.4277, -70.1662, 0.74 ) }
    dend_64 { pt3dadd( 61.0644, 18.43, -70.2293, 0.74 ) }
    dend_64 { pt3dadd( 64.8454, 18.5516, -73.2274, 0.74 ) }
    dend_64 { pt3dadd( 66.1041, 18.6034, -74.1407, 1.47 ) }
    dend_64 { pt3dadd( 67.8405, 18.6783, -75.1819, 0.59 ) }
    dend_64 { pt3dadd( 68.1498, 18.6875, -75.3643, 0.59 ) }
    dend_64 { pt3dadd( 70.3252, 18.6673, -76.4757, 0.59 ) }
    dend_64 { pt3dadd( 70.4956, 18.6656, -76.5787, 0.59 ) }
    dend_64 { pt3dadd( 72.2016, 18.6301, -77.9275, 2.14 ) }
    dend_64 { pt3dadd( 72.6188, 18.6052, -78.2709, 2.14 ) }
    dend_64 { pt3dadd( 74.6573, 18.3277, -80.0003, 0.66 ) }
    dend_64 { pt3dadd( 75.2613, 18.2209, -80.5424, 0.66 ) }
    dend_64 { pt3dadd( 75.3189, 18.2124, -80.6033, 0.66 ) }
    dend_64 { pt3dadd( 77.4461, 18.188, -83.2307, 0.66 ) }
    dend_64 { pt3dadd( 77.4969, 18.1944, -83.2975, 0.66 ) }
    dend_64 { pt3dadd( 79.303, 18.6713, -85.8065, 0.66 ) }
    dend_64 { pt3dadd( 79.5367, 18.78, -86.1557, 1.18 ) }
    dend_64 { pt3dadd( 81.0932, 19.712, -88.6663, 0.81 ) }
    dend_64 { pt3dadd( 82.6951, 20.7445, -91.2942, 0.44 ) }
    dend_64 { pt3dadd( 83.1948, 21.13, -92.1768, 0.44 ) }
    dend_64 { pt3dadd( 83.234, 21.1585, -92.2461, 0.44 ) }
    dend_64 { pt3dadd( 84.5548, 22.0938, -94.5831, 0.44 ) }
    dend_64 { pt3dadd( 84.6215, 22.1233, -94.6884, 0.44 ) }
    dend_64 { pt3dadd( 85.6365, 22.2757, -96.1372, 0.44 ) }
    dend_64 { pt3dadd( 85.6881, 22.2809, -96.2035, 0.44 ) }
    dend_64 { pt3dadd( 86.8309, 22.4003, -97.6921, 1.4 ) }
    dend_64 { pt3dadd( 86.8939, 22.4077, -97.7645, 1.4 ) }
    dend_64 { pt3dadd( 87.4848, 22.4806, -98.3952, 1.4 ) }
    dend_64 { pt3dadd( 91.0302, 23.0011, -102.479, 0.52 ) }
    dend_64 { pt3dadd( 93.329, 23.4044, -105.24, 0.37 ) }
    dend_64 { pt3dadd( 93.3852, 23.4132, -105.302, 0.37 ) }
    dend_64 { pt3dadd( 96.4713, 23.8756, -108.492, 0.37 ) }
    dend_64 { pt3dadd( 96.538, 23.8861, -108.56, 0.37 ) }
    dend_64 { pt3dadd( 100.209, 24.4988, -112.351, 0.37 ) }
    dend_64 { pt3dadd( 100.277, 24.5086, -112.419, 0.37 ) }
    dend_64 { pt3dadd( 102.753, 24.8046, -114.866, 0.37 ) }
    dend_64 { pt3dadd( 102.812, 24.8121, -114.926, 0.37 ) }
    dend_64 { pt3dadd( 104.816, 25.0856, -117.078, 0.29 ) }
    dend_64 { pt3dadd( 107.197, 25.391, -119.513, 0.29 ) }
    dend_64 { pt3dadd( 107.258, 25.398, -119.57, 0.29 ) }
    dend_64 { pt3dadd( 111.545, 25.8082, -123.416, 0.29 ) }
    dend_64 { pt3dadd( 113.572, 26.0133, -125.312, 1.62 ) }
    dend_64 { pt3dadd( 113.635, 26.0182, -125.368, 1.62 ) }
    dend_64 { pt3dadd( 114.841, 26.0533, -126.286, 1.62 ) }
    dend_64 { pt3dadd( 116.005, 26.089, -127.081, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_64 { pt3dadd( 117.743, 26.1695, -128.321, 0.29 ) }
    dend_64 { pt3dadd( 120.164, 26.2136, -130.029, 0.29 ) }
    dend_64 { pt3dadd( 120.234, 26.2115, -130.077, 0.29 ) }
    dend_64 { pt3dadd( 122.311, 26.1506, -131.77, 0.29 ) }
    dend_64 { pt3dadd( 122.846, 26.136, -132.267, 1.11 ) }
    dend_64 { pt3dadd( 124.965, 26.0843, -134.334, 0.29 ) }
    dend_64 { pt3dadd( 126.468, 26.024, -135.836, 0.29 ) }
    dend_64 { pt3dadd( 128.376, 25.9257, -137.538, 1.47 ) }
    dend_64 { pt3dadd( 130.212, 25.8599, -139.142, 0.15 ) }
    dend_64 { pt3dadd( 130.276, 25.8556, -139.197, 0.15 ) }
    dend_64 { pt3dadd( 131.441, 25.7096, -140.082, 0.15 ) }
    dend_64 { pt3dadd( 131.522, 25.6982, -140.131, 0.15 ) }
    dend_64 { pt3dadd( 133.172, 25.4559, -141.051, 0.15 ) }
    dend_64 { pt3dadd( 133.326, 25.4223, -141.138, 0.15 ) }
    dend_64 { pt3dadd( 134.972, 24.9909, -142.1, 0.15 ) }
    dend_64 { pt3dadd( 136.293, 24.6327, -142.986, 1.11 ) }
    dend_64 { pt3dadd( 136.783, 24.4891, -143.366, 1.11 ) }
    dend_64 { pt3dadd( 136.843, 24.4788, -143.424, 1.11 ) }
    dend_64 { pt3dadd( 138.675, 24.3717, -145.529, 0.37 ) }
    dend_64 { pt3dadd( 139.13, 24.4065, -146.08, 0.59 ) }
    dend_64 { pt3dadd( 139.471, 24.4913, -146.486, 0.59 ) }
    dend_64 { pt3dadd( 139.55, 24.5143, -146.572, 0.59 ) }
    dend_64 { pt3dadd( 141.76, 25.1373, -148.88, 0.29 ) }
    dend_64 { pt3dadd( 142.155, 25.2068, -149.226, 0.22 ) }
    dend_64 { pt3dadd( 142.223, 25.2144, -149.275, 0.22 ) }
    dend_64 { pt3dadd( 143.272, 25.2871, -149.99, 0.22 ) }
    dend_64 { pt3dadd( 143.781, 25.3047, -150.334, 0.22 ) }
    dend_64 { pt3dadd( 145.282, 25.3099, -151.285, 1.03 ) }
    dend_64 { pt3dadd( 148.169, 25.2101, -152.941, 0.22 ) }
    dend_64 { pt3dadd( 149.09, 25.1791, -153.487, 0.22 ) }
    dend_64 { pt3dadd( 149.162, 25.1763, -153.531, 0.22 ) }
    dend_64 { pt3dadd( 150.9, 25.1007, -154.664, 1.11 ) }
    dend_64 { pt3dadd( 151.49, 25.0837, -155.05, 1.11 ) }
    dend_64 { pt3dadd( 151.607, 25.0821, -155.12, 1.11 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 34/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 81.8803, 37.8712, -19.1248, 0.44 ) }
    dend_62 { pt3dadd( 82.4929, 38.2026, -19.0923, 0.44 ) }
    dend_62 { pt3dadd( 83.0033, 38.482, -19.1271, 0.44 ) }
    dend_62 { pt3dadd( 83.259, 38.6217, -19.1559, 0.44 ) }
    dend_62 { pt3dadd( 84.7737, 39.3216, -19.8666, 0.44 ) }
    dend_62 { pt3dadd( 84.8281, 39.3468, -19.8999, 0.44 ) }
    dend_62 { pt3dadd( 85.4097, 39.6207, -20.2925, 0.81 ) }
    dend_62 { pt3dadd( 86.3554, 40.0637, -20.9737, 0.81 ) }
    dend_62 { pt3dadd( 86.4094, 40.0894, -21.0245, 0.81 ) }
    dend_62 { pt3dadd( 88.2271, 41.055, -22.9236, 0.22 ) }
    dend_62 { pt3dadd( 88.5684, 41.2575, -23.3252, 0.22 ) }
    dend_62 { pt3dadd( 88.628, 41.2931, -23.4031, 0.22 ) }
    dend_62 { pt3dadd( 88.8708, 41.4585, -23.7498, 0.44 ) }
    dend_62 { pt3dadd( 89.6903, 42.0847, -24.9525, 0.29 ) }
    dend_62 { pt3dadd( 90.5563, 42.8242, -26.2422, 0.29 ) }
    dend_62 { pt3dadd( 91.8754, 44.0695, -28.3747, 0.96 ) }
    dend_62 { pt3dadd( 92.8845, 45.0326, -30.1505, 0.44 ) }
    dend_62 { pt3dadd( 93.3191, 45.4379, -30.8743, 0.44 ) }
    dend_62 { pt3dadd( 93.4917, 45.5988, -31.1533, 1.03 ) }
    dend_62 { pt3dadd( 93.7207, 45.8223, -31.4781, 1.03 ) }
    dend_62 { pt3dadd( 94.8054, 46.9746, -32.9657, 0.29 ) }
    dend_62 { pt3dadd( 94.8658, 47.0317, -33.0176, 0.29 ) }
    dend_62 { pt3dadd( 96.3851, 48.2534, -33.8579, 0.29 ) }
    dend_62 { pt3dadd( 96.5004, 48.3293, -33.9101, 0.29 ) }
    dend_62 { pt3dadd( 97.784, 49.1, -34.377, 0.29 ) }
    dend_62 { pt3dadd( 97.8762, 49.1569, -34.4021, 0.29 ) }
    dend_62 { pt3dadd( 99.4756, 50.173, -34.8079, 0.29 ) }
    dend_62 { pt3dadd( 99.5384, 50.2122, -34.8345, 0.29 ) }
    dend_62 { pt3dadd( 100.161, 50.5706, -35.1776, 0.29 ) }
    dend_62 { pt3dadd( 100.286, 50.6391, -35.2478, 0.29 ) }
    dend_62 { pt3dadd( 101.132, 51.0905, -35.6596, 1.03 ) }
    dend_62 { pt3dadd( 102.515, 51.8371, -36.1233, 0.29 ) }
    dend_62 { pt3dadd( 102.703, 51.9388, -36.1488, 0.29 ) }
    dend_62 { pt3dadd( 104.608, 52.8634, -36.3685, 0.29 ) }
    dend_62 { pt3dadd( 104.67, 52.8914, -36.3749, 0.29 ) }
    dend_62 { pt3dadd( 105.927, 53.4206, -36.4198, 0.81 ) }
    dend_62 { pt3dadd( 106.57, 53.6938, -36.3969, 0.22 ) }
    dend_62 { pt3dadd( 108.151, 54.4402, -36.2208, 0.22 ) }
    dend_62 { pt3dadd( 109.043, 54.8787, -36.1958, 1.03 ) }
    dend_62 { pt3dadd( 109.155, 54.9376, -36.2039, 1.03 ) }
    dend_62 { pt3dadd( 110.123, 55.4797, -36.3615, 0.15 ) }
    dend_62 { pt3dadd( 111.051, 56.0552, -36.6378, 0.15 ) }
    dend_62 { pt3dadd( 111.105, 56.0931, -36.6574, 0.15 ) }
    dend_62 { pt3dadd( 112.274, 57.0348, -37.2768, 0.81 ) }
    dend_62 { pt3dadd( 112.382, 57.1205, -37.3308, 0.81 ) }
    dend_62 { pt3dadd( 112.662, 57.2934, -37.4707, 0.81 ) }
    dend_62 { pt3dadd( 112.752, 57.3372, -37.5182, 0.81 ) }
    dend_62 { pt3dadd( 113.238, 57.522, -37.7353, 0.15 ) }
    dend_62 { pt3dadd( 113.298, 57.5445, -37.7576, 0.15 ) }
    dend_62 { pt3dadd( 114.454, 57.9471, -38.0223, 0.15 ) }
    dend_62 { pt3dadd( 115.558, 58.2937, -38.2692, 0.74 ) }
    dend_62 { pt3dadd( 115.774, 58.3538, -38.3163, 0.74 ) }
    dend_62 { pt3dadd( 115.848, 58.3738, -38.3317, 0.74 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 87/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 81.8803, 37.8712, -19.1248, 0.66 ) }
    dend_61 { pt3dadd( 82.1761, 37.6833, -19.1434, 0.66 ) }
    dend_61 { pt3dadd( 82.2393, 37.6456, -19.152, 0.66 ) }
    dend_61 { pt3dadd( 83.3103, 37.1028, -19.3135, 0.66 ) }
    dend_61 { pt3dadd( 83.5881, 36.9911, -19.3682, 0.66 ) }
    dend_61 { pt3dadd( 84.5894, 36.6408, -19.5837, 0.66 ) }
    dend_61 { pt3dadd( 85.5776, 36.3821, -19.7773, 1.18 ) }
    dend_61 { pt3dadd( 85.7443, 36.3524, -19.8098, 1.18 ) }
    dend_61 { pt3dadd( 86.5162, 36.2917, -19.9412, 1.18 ) }
    dend_61 { pt3dadd( 87.3667, 36.3154, -20.0793, 0.44 ) }
    dend_61 { pt3dadd( 87.4485, 36.323, -20.0901, 0.44 ) }
    dend_61 { pt3dadd( 88.6563, 36.5003, -20.1897, 0.44 ) }
    dend_61 { pt3dadd( 88.9854, 36.5439, -20.2546, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_61 { pt3dadd( 89.861, 36.6524, -20.5317, 0.44 ) }
    dend_61 { pt3dadd( 89.9278, 36.6601, -20.5589, 0.44 ) }
    dend_61 { pt3dadd( 90.5142, 36.7361, -20.8313, 0.74 ) }
    dend_61 { pt3dadd( 90.5867, 36.7496, -20.869, 0.74 ) }
    dend_61 { pt3dadd( 92.732, 37.2951, -22.0944, 0.44 ) }
    dend_61 { pt3dadd( 94.0687, 37.7385, -22.7082, 0.44 ) }
    dend_61 { pt3dadd( 94.1339, 37.7648, -22.7266, 0.44 ) }
    dend_61 { pt3dadd( 94.8337, 38.0921, -22.7656, 0.88 ) }
    dend_61 { pt3dadd( 95.6103, 38.4989, -22.6805, 0.88 ) }
    dend_61 { pt3dadd( 96.2993, 38.8959, -22.5127, 0.88 ) }
    dend_61 { pt3dadd( 97.6393, 39.7518, -21.9036, 0.44 ) }
    dend_61 { pt3dadd( 99.1172, 40.6907, -21.1092, 0.44 ) }
    dend_61 { pt3dadd( 100.366, 41.4674, -20.3797, 1.25 ) }
    dend_61 { pt3dadd( 100.428, 41.5057, -20.3409, 1.25 ) }
    dend_61 { pt3dadd( 101.083, 41.8955, -19.9204, 1.25 ) }
    dend_61 { pt3dadd( 102.36, 42.6012, -19.1322, 0.37 ) }
    dend_61 { pt3dadd( 103.265, 43.0284, -18.7596, 0.37 ) }
    dend_61 { pt3dadd( 103.398, 43.0786, -18.7322, 0.37 ) }
    dend_61 { pt3dadd( 104.563, 43.4122, -18.7149, 0.37 ) }
    dend_61 { pt3dadd( 104.663, 43.435, -18.721, 0.37 ) }
    dend_61 { pt3dadd( 105.901, 43.6534, -18.8991, 0.37 ) }
    dend_61 { pt3dadd( 108.02, 43.9683, -19.345, 1.03 ) }
    dend_61 { pt3dadd( 108.911, 44.0731, -19.5244, 1.92 ) }
    dend_61 { pt3dadd( 109.388, 44.1198, -19.6123, 0.29 ) }
    dend_61 { pt3dadd( 110.299, 44.1899, -19.8015, 0.29 ) }
    dend_61 { pt3dadd( 110.441, 44.2029, -19.8315, 0.29 ) }
    dend_61 { pt3dadd( 111.494, 44.3266, -20.035, 0.29 ) }
    dend_61 { pt3dadd( 112.156, 44.3873, -20.0904, 0.74 ) }
    dend_61 { pt3dadd( 112.238, 44.392, -20.1002, 0.74 ) }
    dend_61 { pt3dadd( 113.568, 44.4653, -20.2571, 0.74 ) }
    dend_61 { pt3dadd( 113.64, 44.4691, -20.2645, 0.74 ) }
    dend_61 { pt3dadd( 114.326, 44.5143, -20.3038, 0.22 ) }
    dend_61 { pt3dadd( 115.216, 44.5862, -20.3162, 0.22 ) }
    dend_61 { pt3dadd( 115.365, 44.6092, -20.2772, 0.22 ) }
    dend_61 { pt3dadd( 116.003, 44.7415, -19.9443, 0.96 ) }
    dend_61 { pt3dadd( 116.309, 44.8194, -19.7277, 0.96 ) }
    dend_61 { pt3dadd( 116.901, 44.984, -19.2861, 0.96 ) }
    dend_61 { pt3dadd( 116.957, 45.0008, -19.2427, 0.96 ) }
    dend_61 { pt3dadd( 118.729, 45.5766, -17.8532, 0.37 ) }
    dend_61 { pt3dadd( 118.814, 45.6031, -17.7883, 0.37 ) }
    dend_61 { pt3dadd( 120.239, 46.0112, -16.8087, 0.37 ) }
    dend_61 { pt3dadd( 120.299, 46.0273, -16.7716, 0.37 ) }
    dend_61 { pt3dadd( 120.837, 46.1592, -16.5002, 0.59 ) }
    dend_61 { pt3dadd( 121.048, 46.207, -16.4272, 0.22 ) }
    dend_61 { pt3dadd( 121.117, 46.2226, -16.4135, 0.22 ) }
    dend_61 { pt3dadd( 122.125, 46.504, -16.1474, 0.22 ) }
    dend_61 { pt3dadd( 122.191, 46.5252, -16.1271, 0.22 ) }
    dend_61 { pt3dadd( 122.609, 46.6555, -15.9992, 0.44 ) }
    dend_61 { pt3dadd( 122.831, 46.7149, -15.9331, 0.44 ) }
    dend_61 { pt3dadd( 123.804, 46.9326, -15.649, 0.22 ) }
    dend_61 { pt3dadd( 126.05, 47.3535, -15.0423, 0.22 ) }
    dend_61 { pt3dadd( 126.721, 47.4565, -14.8739, 1.03 ) }
    dend_61 { pt3dadd( 127.398, 47.5427, -14.7168, 0.22 ) }
    dend_61 { pt3dadd( 128.761, 47.6733, -14.4219, 0.22 ) }
    dend_61 { pt3dadd( 129.14, 47.6976, -14.3515, 0.22 ) }
    dend_61 { pt3dadd( 131.043, 47.7836, -14.068, 0.22 ) }
    dend_61 { pt3dadd( 133.354, 47.847, -13.7356, 0.22 ) }
    dend_61 { pt3dadd( 134.524, 47.8864, -13.5763, 1.18 ) }
    dend_61 { pt3dadd( 135.536, 47.9307, -13.4465, 1.18 ) }
    dend_61 { pt3dadd( 136.222, 47.9746, -13.3652, 0.15 ) }
    dend_61 { pt3dadd( 138.499, 48.149, -13.1128, 0.15 ) }
    dend_61 { pt3dadd( 138.581, 48.1558, -13.1045, 0.52 ) }
    dend_61 { pt3dadd( 139.187, 48.2199, -13.0508, 0.15 ) }
    dend_61 { pt3dadd( 139.331, 48.2389, -13.0401, 0.15 ) }
    dend_61 { pt3dadd( 141.229, 48.5659, -12.912, 0.15 ) }
    dend_61 { pt3dadd( 141.751, 48.667, -12.8746, 0.96 ) }
    dend_61 { pt3dadd( 142.501, 48.8205, -12.836, 0.96 ) }
    dend_61 { pt3dadd( 142.724, 48.8685, -12.8267, 0.96 ) }
    dend_61 { pt3dadd( 143.399, 49.0318, -12.8072, 0.15 ) }
    dend_61 { pt3dadd( 144.94, 49.4879, -12.7888, 0.15 ) }
    dend_61 { pt3dadd( 145.017, 49.5171, -12.7902, 0.15 ) }
    dend_61 { pt3dadd( 145.301, 49.6416, -12.7925, 0.81 ) }
    dend_61 { pt3dadd( 145.366, 49.6741, -12.7919, 0.81 ) }
    dend_61 { pt3dadd( 146.032, 50.0424, -12.7582, 0.81 ) }
    dend_61 { pt3dadd( 146.484, 50.3278, -12.7095, 0.81 ) }
    dend_61 { pt3dadd( 146.545, 50.3671, -12.703, 0.81 ) }
    dend_61 { pt3dadd( 147.025, 50.6646, -12.6536, 0.15 ) }
    dend_61 { pt3dadd( 147.096, 50.7078, -12.6466, 0.15 ) }
    dend_61 { pt3dadd( 147.878, 51.1836, -12.5726, 0.15 ) }
    dend_61 { pt3dadd( 147.971, 51.2413, -12.5584, 0.15 ) }
    dend_61 { pt3dadd( 149.528, 52.2292, -12.2531, 0.15 ) }
    dend_61 { pt3dadd( 149.863, 52.4563, -12.1785, 0.44 ) }
    dend_61 { pt3dadd( 150.038, 52.5837, -12.136, 0.44 ) }
    dend_61 { pt3dadd( 150.163, 52.6825, -12.1025, 0.44 ) }
    dend_61 { pt3dadd( 150.844, 53.2715, -11.8939, 0.15 ) }
    dend_61 { pt3dadd( 151.016, 53.4282, -11.8338, 0.15 ) }
    dend_61 { pt3dadd( 151.399, 53.8376, -11.6491, 0.15 ) }
    dend_61 { pt3dadd( 151.717, 54.1715, -11.4967, 0.88 ) }
    dend_61 { pt3dadd( 152.092, 54.5413, -11.3377, 0.88 ) }
    dend_61 { pt3dadd( 152.205, 54.6441, -11.3039, 0.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 90/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -60.8483, 57.3325, 44.947, 0.37 ) }
    dend_57 { pt3dadd( -67.53, 59.3327, 52.1353, 0.37 ) }
    dend_57 { pt3dadd( -73.8554, 61.476, 59.6035, 0.37 ) }
    dend_57 { pt3dadd( -80.093, 62.9479, 67.2883, 0.37 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 94/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -60.8483, 57.3325, 44.947, 0.29 ) }
    dend_56 { pt3dadd( -70.5913, 61.0306, 48.001, 0.37 ) }
    dend_56 { pt3dadd( -80.6821, 64.9782, 48.5429, 0.37 ) }
    dend_56 { pt3dadd( -90.2442, 70.018, 49.8359, 0.37 ) }
    dend_56 { pt3dadd( -98.4457, 77.3029, 49.7644, 0.37 ) }
    dend_56 { pt3dadd( -105.87, 85.3817, 48.9094, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_56 { pt3dadd( -112.468, 94.2549, 49.6421, 0.37 ) }
    dend_56 { pt3dadd( -118.89, 102.927, 52.2534, 0.37 ) }
    dend_56 { pt3dadd( -123.462, 112.734, 55.1652, 0.37 ) }
    dend_56 { pt3dadd( -129.295, 121.367, 59.0713, 0.37 ) }
    dend_56 { pt3dadd( -132.699, 131.503, 62.5853, 0.37 ) }
    dend_56 { pt3dadd( -135.256, 141.097, 67.8919, 0.37 ) }
    dend_56 { pt3dadd( -138.747, 149.851, 73.9381, 0.37 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 7/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -37.8923, 82.2111, 45.7425, 0.29 ) }
    dend_52 { pt3dadd( -41.3068, 89.0135, 50.896, 0.29 ) }
    dend_52 { pt3dadd( -44.074, 96.4255, 55.6625, 0.29 ) }
    dend_52 { pt3dadd( -45.3841, 103.612, 61.3137, 0.29 ) }
    dend_52 { pt3dadd( -46.2612, 110.472, 67.4065, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 12/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -37.8923, 82.2111, 45.7425, 0.74 ) }
    dend_51 { pt3dadd( -43.8456, 91.004, 51.6582, 0.29 ) }
    dend_51 { pt3dadd( -50.6092, 98.8671, 57.8789, 0.29 ) }
    dend_51 { pt3dadd( -57.447, 107.046, 63.6128, 0.29 ) }
    dend_51 { pt3dadd( -64.5795, 114.069, 70.323, 0.29 ) }
    dend_51 { pt3dadd( -72.778, 120.598, 76.1765, 0.29 ) }
    dend_51 { pt3dadd( -81.1431, 126.726, 82.1885, 0.29 ) }
    dend_51 { pt3dadd( -89.4577, 132.504, 88.5844, 0.29 ) }
    dend_51 { pt3dadd( -97.1549, 140.386, 93.506, 0.29 ) }
    dend_51 { pt3dadd( -104.15, 148.626, 98.9482, 0.29 ) }
    dend_51 { pt3dadd( -112.274, 155.905, 104.027, 0.29 ) }
    dend_51 { pt3dadd( -119.859, 162.791, 110.341, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_34 (entry count 24/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 37.3326, -38.9929, 6.9584, 0.59 ) }
    dend_44 { pt3dadd( 38.8266, -39.1471, 7.03797, 0.59 ) }
    dend_44 { pt3dadd( 39.1247, -39.1745, 7.04224, 0.59 ) }
    dend_44 { pt3dadd( 39.6858, -39.2236, 7.04295, 0.59 ) }
    dend_44 { pt3dadd( 41.2638, -39.4221, 7.05699, 0.44 ) }
    dend_44 { pt3dadd( 42.5113, -39.6011, 7.07203, 0.44 ) }
    dend_44 { pt3dadd( 44.0642, -39.9025, 7.02523, 0.81 ) }
    dend_44 { pt3dadd( 45.3404, -40.2407, 6.92231, 0.52 ) }
    dend_44 { pt3dadd( 45.4333, -40.2752, 6.91549, 0.52 ) }
    dend_44 { pt3dadd( 46.7954, -40.9393, 6.75461, 0.22 ) }
    dend_44 { pt3dadd( 46.8929, -40.9967, 6.73914, 0.22 ) }
    dend_44 { pt3dadd( 48.4072, -42.1212, 6.45186, 0.52 ) }
    dend_44 { pt3dadd( 49.6408, -43.2217, 6.18651, 0.44 ) }
    dend_44 { pt3dadd( 50.9583, -44.5238, 5.87822, 0.44 ) }
    dend_44 { pt3dadd( 52.1482, -45.7643, 5.58594, 0.22 ) }
    dend_44 { pt3dadd( 52.2927, -45.9214, 5.54846, 0.22 ) }
    dend_44 { pt3dadd( 52.8642, -46.5511, 5.4154, 0.22 ) }
    dend_44 { pt3dadd( 53.2265, -46.9333, 5.41394, 0.22 ) }
    dend_44 { pt3dadd( 53.9531, -47.6703, 5.60899, 0.22 ) }
    dend_44 { pt3dadd( 54.0303, -47.7408, 5.65749, 0.22 ) }
    dend_44 { pt3dadd( 54.607, -48.2649, 6.11915, 1.03 ) }
    dend_44 { pt3dadd( 54.6687, -48.326, 6.17054, 1.03 ) }
    dend_44 { pt3dadd( 56.3203, -50.1029, 7.61456, 0.22 ) }
    dend_44 { pt3dadd( 57.1319, -51.0768, 8.36723, 0.22 ) }
    dend_44 { pt3dadd( 57.1837, -51.1427, 8.42396, 0.22 ) }
    dend_44 { pt3dadd( 57.7977, -51.9103, 9.0707, 0.37 ) }
    dend_44 { pt3dadd( 58.2481, -52.4454, 9.55681, 0.59 ) }
    dend_44 { pt3dadd( 58.6539, -52.8763, 9.93623, 0.59 ) }
    dend_44 { pt3dadd( 58.719, -52.9379, 9.98258, 0.59 ) }
    dend_44 { pt3dadd( 60.0146, -53.9423, 10.8779, 0.22 ) }
    dend_44 { pt3dadd( 61.018, -54.6247, 11.5342, 0.22 ) }
    dend_44 { pt3dadd( 62.0642, -55.2487, 12.1957, 0.74 ) }
    dend_44 { pt3dadd( 62.8311, -55.6678, 12.6519, 0.74 ) }
    dend_44 { pt3dadd( 63.8267, -56.2399, 13.1802, 0.74 ) }
    dend_44 { pt3dadd( 63.9025, -56.2983, 13.2113, 0.74 ) }
    dend_44 { pt3dadd( 64.5929, -56.9532, 13.3967, 0.37 ) }
    dend_44 { pt3dadd( 64.7367, -57.114, 13.4238, 0.22 ) }
    dend_44 { pt3dadd( 64.8016, -57.1921, 13.4288, 0.22 ) }
    dend_44 { pt3dadd( 65.6493, -58.2602, 13.4698, 0.22 ) }
    dend_44 { pt3dadd( 67.3041, -60.4087, 13.5075, 0.22 ) }
    dend_44 { pt3dadd( 67.3701, -60.4859, 13.5071, 0.22 ) }
    dend_44 { pt3dadd( 68.0995, -61.2871, 13.4837, 0.59 ) }
    dend_44 { pt3dadd( 68.8281, -62.0633, 13.4572, 1.03 ) }
    dend_44 { pt3dadd( 69.5625, -62.8165, 13.4266, 0.44 ) }
    dend_44 { pt3dadd( 69.9071, -63.1369, 13.4083, 0.22 ) }
    dend_44 { pt3dadd( 72.2463, -64.968, 13.2643, 0.22 ) }
    dend_44 { pt3dadd( 72.3259, -65.0293, 13.2609, 0.22 ) }
    dend_44 { pt3dadd( 84.9715, -71.6015, 13.1262, 0.22 ) }
    dend_44 { pt3dadd( 95.9881, -80.8513, 12.797, 0.22 ) }
    dend_44 { pt3dadd( 107.768, -88.4855, 10.1375, 0.22 ) }
    dend_44 { pt3dadd( 118.833, -97.573, 8.88987, 0.22 ) }
    dend_44 { pt3dadd( 128.872, -107.972, 8.50115, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 76/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 37.3326, -38.9929, 6.9584, 0.88 ) }
    dend_35 { pt3dadd( 37.5471, -39.7368, 6.90187, 0.88 ) }
    dend_35 { pt3dadd( 37.8798, -41.2782, 6.81134, 0.66 ) }
    dend_35 { pt3dadd( 37.897, -41.3702, 6.8066, 0.66 ) }
    dend_35 { pt3dadd( 38.1785, -42.7305, 6.74833, 0.66 ) }
    dend_35 { pt3dadd( 38.5749, -44.5638, 6.67832, 0.59 ) }
    dend_35 { pt3dadd( 38.8158, -45.6203, 6.59516, 0.81 ) }
    dend_35 { pt3dadd( 39.131, -46.9734, 6.47414, 0.81 ) }
    dend_35 { pt3dadd( 39.1796, -47.1659, 6.44792, 0.81 ) }
    dend_35 { pt3dadd( 39.5457, -48.4814, 6.22554, 0.52 ) }
    dend_35 { pt3dadd( 39.5769, -48.5671, 6.20674, 0.52 ) }
    dend_35 { pt3dadd( 40.3931, -49.5901, 5.90702, 0.37 ) }
    dend_35 { pt3dadd( 40.4918, -49.6679, 5.8798, 0.37 ) }
    dend_35 { pt3dadd( 41.3416, -50.1132, 5.70065, 0.37 ) }
    dend_35 { pt3dadd( 41.8454, -50.326, 5.61479, 0.37 ) }
    dend_35 { pt3dadd( 42.8425, -50.6702, 5.493, 0.37 ) }
    dend_35 { pt3dadd( 44.6199, -51.275, 5.22808, 0.22 ) }
    dend_35 { pt3dadd( 44.82, -51.342, 5.20401, 0.22 ) }
    dend_35 { pt3dadd( 45.9069, -51.7858, 5.05237, 0.81 ) }
    dend_35 { pt3dadd( 46.081, -51.8645, 5.0243, 0.81 ) }
    dend_35 { pt3dadd( 46.9071, -52.3799, 4.91885, 1.18 ) }
    dend_35 { pt3dadd( 48.2401, -53.5233, 4.83196, 0.88 ) }
    dend_35 { pt3dadd( 48.7288, -54.086, 4.84164, 0.29 ) }
    dend_35 { pt3dadd( 49.8351, -55.5734, 4.95887, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( 49.9021, -55.684, 4.97932, 0.29 ) }
    dend_35 { pt3dadd( 50.9625, -57.6202, 5.44261, 0.29 ) }
    dend_35 { pt3dadd( 51.3601, -58.4094, 5.61647, 0.81 ) }
    dend_35 { pt3dadd( 51.8755, -59.4515, 5.84062, 0.81 ) }
    dend_35 { pt3dadd( 52.3608, -60.4548, 6.03959, 0.81 ) }
    dend_35 { pt3dadd( 53.3285, -62.451, 6.42765, 0.44 ) }
    dend_35 { pt3dadd( 53.9839, -63.8208, 6.65883, 0.44 ) }
    dend_35 { pt3dadd( 54.8039, -65.5359, 6.8397, 1.11 ) }
    dend_35 { pt3dadd( 55.1637, -66.2535, 6.88015, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 9/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 94.2394, -34.7654, 56.6887, 0.29 ) }
    dend_33 { pt3dadd( 99.321, -35.4222, 64.1267, 0.29 ) }
    dend_33 { pt3dadd( 103.221, -37.1026, 72.1178, 0.29 ) }
    dend_33 { pt3dadd( 106.226, -40.5125, 80.0035, 0.29 ) }
    dend_33 { pt3dadd( 107.598, -45.7919, 87.4012, 0.29 ) }
    dend_33 { pt3dadd( 109.98, -50.5133, 94.8813, 0.29 ) }
    dend_33 { pt3dadd( 110.814, -55.6513, 102.448, 0.29 ) }
    dend_33 { pt3dadd( 110.899, -60.6663, 110.134, 0.29 ) }
    dend_33 { pt3dadd( 111.21, -67.4088, 116.506, 0.29 ) }
    dend_33 { pt3dadd( 112.814, -73.855, 122.959, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 19/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 94.2394, -34.7654, 56.6887, 0.74 ) }
    dend_32 { pt3dadd( 102.892, -35.9369, 59.1585, 0.29 ) }
    dend_32 { pt3dadd( 111.375, -35.5603, 62.3466, 0.29 ) }
    dend_32 { pt3dadd( 120.214, -33.8725, 63.6294, 0.29 ) }
    dend_32 { pt3dadd( 128.819, -32.0649, 65.9327, 0.29 ) }
    dend_32 { pt3dadd( 137.773, -32.0471, 67.3719, 0.29 ) }
    dend_32 { pt3dadd( 146.465, -30.4177, 69.4624, 0.29 ) }
    dend_32 { pt3dadd( 154.985, -27.173, 70.0734, 0.29 ) }
    dend_32 { pt3dadd( 163.078, -23.3224, 71.9215, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 28/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 41.2693, -86.4235, 69.1483, 0.37 ) }
    dend_29 { pt3dadd( 41.5852, -86.7818, 69.2876, 0.37 ) }
    dend_29 { pt3dadd( 42.1562, -87.5566, 69.725, 0.37 ) }
    dend_29 { pt3dadd( 42.7561, -88.6725, 70.426, 0.22 ) }
    dend_29 { pt3dadd( 42.7789, -88.7305, 70.4613, 0.22 ) }
    dend_29 { pt3dadd( 43.1672, -90.4699, 71.3872, 0.52 ) }
    dend_29 { pt3dadd( 43.2555, -91.1073, 71.6996, 0.52 ) }
    dend_29 { pt3dadd( 43.2198, -92.3159, 72.2502, 0.37 ) }
    dend_29 { pt3dadd( 42.9747, -93.5581, 72.6901, 0.22 ) }
    dend_29 { pt3dadd( 42.751, -94.3209, 72.8783, 0.22 ) }
    dend_29 { pt3dadd( 42.234, -95.7297, 73.0052, 0.22 ) }
    dend_29 { pt3dadd( 42.2033, -95.7946, 73.0016, 0.22 ) }
    dend_29 { pt3dadd( 41.8004, -96.5434, 72.9039, 0.22 ) }
    dend_29 { pt3dadd( 40.8126, -98.2405, 72.6298, 0.22 ) }
    dend_29 { pt3dadd( 40.3855, -99.012, 72.5059, 0.22 ) }
    dend_29 { pt3dadd( 39.6144, -100.584, 72.2585, 0.22 ) }
    dend_29 { pt3dadd( 38.5504, -103.014, 71.8868, 0.15 ) }
    dend_29 { pt3dadd( 37.7364, -105.079, 71.5806, 0.15 ) }
    dend_29 { pt3dadd( 36.7639, -107.835, 71.1495, 0.15 ) }
    dend_29 { pt3dadd( 35.9212, -110.395, 70.7302, 0.15 ) }
    dend_29 { pt3dadd( 34.8084, -114.056, 70.1402, 0.15 ) }
    dend_29 { pt3dadd( 34.4865, -115.321, 69.9375, 0.59 ) }
    dend_29 { pt3dadd( 34.2499, -116.569, 69.7301, 0.59 ) }
    dend_29 { pt3dadd( 34.0956, -117.735, 69.5274, 0.29 ) }
    dend_29 { pt3dadd( 34.0641, -118.404, 69.3767, 0.29 ) }
    dend_29 { pt3dadd( 33.0434, -128.75, 69.243, 0.29 ) }
    dend_29 { pt3dadd( 31.0424, -138.783, 70.7929, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 41.2693, -86.4235, 69.1483, 0.59 ) }
    dend_28 { pt3dadd( 41.6433, -86.7016, 69.2254, 0.59 ) }
    dend_28 { pt3dadd( 42.6786, -87.5556, 69.6192, 0.22 ) }
    dend_28 { pt3dadd( 43.188, -87.9578, 69.7415, 0.22 ) }
    dend_28 { pt3dadd( 45.0756, -89.4358, 70.1216, 0.22 ) }
    dend_28 { pt3dadd( 45.1373, -89.4829, 70.1261, 0.22 ) }
    dend_28 { pt3dadd( 46.7571, -90.7197, 70.245, 0.22 ) }
    dend_28 { pt3dadd( 48.6188, -92.1879, 70.4146, 0.22 ) }
    dend_28 { pt3dadd( 50.9868, -94.1535, 70.6971, 0.22 ) }
    dend_28 { pt3dadd( 51.0466, -94.2033, 70.7014, 0.22 ) }
    dend_28 { pt3dadd( 53.0536, -95.7334, 70.5814, 0.22 ) }
    dend_28 { pt3dadd( 62.3865, -101.654, 71.2382, 0.22 ) }
    dend_28 { pt3dadd( 71.9512, -106.541, 73.7485, 0.22 ) }
    dend_28 { pt3dadd( 82.0703, -110.872, 74.0154, 0.22 ) }
    dend_28 { pt3dadd( 92.7549, -113.298, 73.5603, 0.22 ) }
    dend_28 { pt3dadd( 102.693, -118.035, 72.9917, 0.22 ) }
    dend_28 { pt3dadd( 113.151, -121.176, 74.1266, 0.22 ) }
    dend_28 { pt3dadd( 123.617, -124.408, 74.8996, 0.22 ) }
    dend_28 { pt3dadd( 134.262, -126.885, 75.8062, 0.22 ) }
    dend_28 { pt3dadd( 144.86, -127.402, 78.5275, 0.22 ) }
    dend_28 { pt3dadd( 155.171, -128.875, 81.9269, 0.22 ) }
    dend_28 { pt3dadd( 165.863, -129.562, 84.1996, 0.22 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 77/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -12.3342, -27.7493, -13.6868, 0.96 ) }
    dend_18 { pt3dadd( -12.7748, -29.2549, -17.991, 0.96 ) }
    dend_18 { pt3dadd( -12.8892, -29.6459, -19.1086, 0.96 ) }
    dend_18 { pt3dadd( -12.8954, -29.6669, -19.1688, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 81/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -12.3342, -27.7493, -13.6868, 1.4 ) }
    dend_17 { pt3dadd( -12.6421, -27.8476, -13.6967, 1.4 ) }
    dend_17 { pt3dadd( -13.6674, -28.1723, -13.7062, 1.03 ) }
    dend_17 { pt3dadd( -13.7388, -28.1949, -13.704, 1.03 ) }
    dend_17 { pt3dadd( -14.6279, -28.4881, -13.6658, 0.59 ) }
    dend_17 { pt3dadd( -15.5686, -28.8358, -13.5638, 0.59 ) }
    dend_17 { pt3dadd( -16.5493, -29.237, -13.4592, 0.66 ) }
    dend_17 { pt3dadd( -16.6032, -29.2631, -13.4528, 0.66 ) }
    dend_17 { pt3dadd( -17.6189, -29.8293, -13.3139, 0.66 ) }
    dend_17 { pt3dadd( -18.4087, -30.3318, -13.2134, 0.44 ) }
    dend_17 { pt3dadd( -19.4581, -31.1043, -13.0811, 0.44 ) }
    dend_17 { pt3dadd( -20.043, -31.5985, -13.02, 0.66 ) }
    dend_17 { pt3dadd( -20.8104, -32.2753, -12.9685, 0.66 ) }
    dend_17 { pt3dadd( -20.9102, -32.3519, -12.9657, 0.66 ) }
    dend_17 { pt3dadd( -21.8232, -32.8895, -12.9872, 0.66 ) }
    dend_17 { pt3dadd( -21.8985, -32.9156, -12.9861, 0.66 ) }
    dend_17 { pt3dadd( -22.6224, -33.0213, -12.9646, 0.66 ) }
    dend_17 { pt3dadd( -23.5554, -33.0485, -12.8711, 0.88 ) }
    dend_17 { pt3dadd( -24.8237, -33.0111, -12.7171, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_17 { pt3dadd( -25.8679, -32.9567, -12.5756, 0.74 ) }
    dend_17 { pt3dadd( -27.2134, -32.8964, -12.3711, 0.66 ) }
    dend_17 { pt3dadd( -28.4584, -32.8706, -12.1712, 0.66 ) }
    dend_17 { pt3dadd( -29.2457, -32.8946, -12.0258, 0.66 ) }
    dend_17 { pt3dadd( -30.3927, -33.0235, -11.7693, 0.66 ) }
    dend_17 { pt3dadd( -30.4423, -33.0353, -11.7572, 0.66 ) }
    dend_17 { pt3dadd( -31.7309, -33.4957, -11.4367, 0.66 ) }
    dend_17 { pt3dadd( -31.7849, -33.5197, -11.4252, 0.66 ) }
    dend_17 { pt3dadd( -32.8551, -34.0118, -11.2111, 0.66 ) }
    dend_17 { pt3dadd( -32.9027, -34.0329, -11.2033, 0.66 ) }
    dend_17 { pt3dadd( -34.0246, -34.471, -11.0371, 0.66 ) }
    dend_17 { pt3dadd( -34.2032, -34.5299, -11.0186, 1.03 ) }
    dend_17 { pt3dadd( -34.8438, -34.6866, -10.9908, 0.52 ) }
    dend_17 { pt3dadd( -35.8805, -34.9054, -10.9907, 0.52 ) }
    dend_17 { pt3dadd( -35.9319, -34.9155, -10.9913, 0.52 ) }
    dend_17 { pt3dadd( -36.5382, -35.0462, -10.9952, 0.66 ) }
    dend_17 { pt3dadd( -37.3186, -35.224, -10.9988, 0.66 ) }
    dend_17 { pt3dadd( -38.123, -35.4386, -11.0043, 1.4 ) }
    dend_17 { pt3dadd( -38.6211, -35.593, -11.0061, 0.81 ) }
    dend_17 { pt3dadd( -39.6319, -35.9281, -11.0188, 0.52 ) }
    dend_17 { pt3dadd( -40.5676, -36.2456, -11.0245, 0.37 ) }
    dend_17 { pt3dadd( -41.3739, -36.5254, -11.0229, 0.81 ) }
    dend_17 { pt3dadd( -42.0276, -36.7723, -11.0182, 0.96 ) }
    dend_17 { pt3dadd( -42.7383, -37.0582, -11.0129, 0.96 ) }
    dend_17 { pt3dadd( -43.6837, -37.4502, -11.015, 0.66 ) }
    dend_17 { pt3dadd( -44.4475, -37.771, -11.0327, 0.66 ) }
    dend_17 { pt3dadd( -44.5164, -37.8012, -11.0332, 0.66 ) }
    dend_17 { pt3dadd( -45.6812, -38.3244, -11.0339, 0.66 ) }
    dend_17 { pt3dadd( -45.7289, -38.3468, -11.0355, 0.66 ) }
    dend_17 { pt3dadd( -46.6072, -38.8112, -11.0941, 0.66 ) }
    dend_17 { pt3dadd( -47.7875, -39.5079, -11.2097, 0.66 ) }
    dend_17 { pt3dadd( -48.7127, -40.0842, -11.3375, 0.66 ) }
    dend_17 { pt3dadd( -48.7502, -40.1093, -11.3428, 0.66 ) }
    dend_17 { pt3dadd( -49.5873, -40.6955, -11.4529, 0.66 ) }
    dend_17 { pt3dadd( -50.4589, -41.3266, -11.544, 0.66 ) }
    dend_17 { pt3dadd( -50.8758, -41.6205, -11.5741, 0.44 ) }
    dend_17 { pt3dadd( -50.9202, -41.6494, -11.5757, 0.44 ) }
    dend_17 { pt3dadd( -51.3779, -41.8964, -11.61, 0.44 ) }
    dend_17 { pt3dadd( -51.9476, -42.1236, -11.6775, 0.44 ) }
    dend_17 { pt3dadd( -52.7, -42.3146, -11.8251, 0.88 ) }
    dend_17 { pt3dadd( -53.6966, -42.471, -12.1056, 0.96 ) }
    dend_17 { pt3dadd( -54.1109, -42.5202, -12.2465, 0.96 ) }
    dend_17 { pt3dadd( -55.1065, -42.6232, -12.6509, 0.44 ) }
    dend_17 { pt3dadd( -56.0152, -42.6999, -13.0883, 0.44 ) }
    dend_17 { pt3dadd( -56.8622, -42.787, -13.5458, 0.44 ) }
    dend_17 { pt3dadd( -57.4845, -42.8596, -13.9105, 0.44 ) }
    dend_17 { pt3dadd( -57.5286, -42.868, -13.9373, 0.44 ) }
    dend_17 { pt3dadd( -58.036, -43.01, -14.227, 0.66 ) }
    dend_17 { pt3dadd( -58.0806, -43.0293, -14.2469, 0.66 ) }
    dend_17 { pt3dadd( -58.6794, -43.3833, -14.5078, 0.66 ) }
    dend_17 { pt3dadd( -58.7271, -43.4158, -14.5259, 0.66 ) }
    dend_17 { pt3dadd( -59.2151, -43.7575, -14.7308, 0.52 ) }
    dend_17 { pt3dadd( -59.7345, -44.0887, -14.9702, 0.29 ) }
    dend_17 { pt3dadd( -60.3924, -44.4479, -15.305, 0.29 ) }
    dend_17 { pt3dadd( -60.9767, -44.7335, -15.6274, 0.96 ) }
    dend_17 { pt3dadd( -61.6593, -45.0163, -16.0079, 0.96 ) }
    dend_17 { pt3dadd( -62.4402, -45.2984, -16.3937, 0.88 ) }
    dend_17 { pt3dadd( -63.29, -45.5533, -16.7598, 0.74 ) }
    dend_17 { pt3dadd( -64.4493, -45.8347, -17.1634, 0.52 ) }
    dend_17 { pt3dadd( -64.4919, -45.8424, -17.1749, 0.52 ) }
    dend_17 { pt3dadd( -65.5343, -45.9948, -17.3568, 0.52 ) }
    dend_17 { pt3dadd( -66.4658, -46.094, -17.4525, 0.96 ) }
    dend_17 { pt3dadd( -67.2404, -46.1715, -17.4515, 1.18 ) }
    dend_17 { pt3dadd( -68.0546, -46.2735, -17.3707, 0.59 ) }
    dend_17 { pt3dadd( -68.4055, -46.3329, -17.311, 0.29 ) }
    dend_17 { pt3dadd( -68.6961, -46.3927, -17.2776, 0.15 ) }
    dend_17 { pt3dadd( -68.754, -46.4078, -17.2779, 0.29 ) }
    dend_17 { pt3dadd( -69.1551, -46.5241, -17.3822, 0.29 ) }
    dend_17 { pt3dadd( -69.4384, -46.5939, -17.4927, 0.29 ) }
    dend_17 { pt3dadd( -69.7893, -46.657, -17.7045, 0.29 ) }
    dend_17 { pt3dadd( -70.4193, -46.7188, -18.1165, 0.29 ) }
    dend_17 { pt3dadd( -70.8819, -46.7318, -18.4067, 0.44 ) }
    dend_17 { pt3dadd( -71.4826, -46.7213, -18.7714, 0.96 ) }
    dend_17 { pt3dadd( -72.0811, -46.6961, -19.1155, 1.33 ) }
    dend_17 { pt3dadd( -73.0212, -46.6509, -19.5902, 1.33 ) }
    dend_17 { pt3dadd( -73.6348, -46.6369, -19.8479, 0.52 ) }
    dend_17 { pt3dadd( -74.3086, -46.6581, -20.0656, 0.22 ) }
    dend_17 { pt3dadd( -74.366, -46.665, -20.0806, 0.22 ) }
    dend_17 { pt3dadd( -74.9658, -46.8119, -20.2229, 0.22 ) }
    dend_17 { pt3dadd( -75.4623, -46.9876, -20.3338, 0.52 ) }
    dend_17 { pt3dadd( -75.9649, -47.2005, -20.4239, 0.88 ) }
    dend_17 { pt3dadd( -76.0118, -47.2217, -20.4349, 0.88 ) }
    dend_17 { pt3dadd( -76.4938, -47.4418, -20.5734, 0.88 ) }
    dend_17 { pt3dadd( -77.4859, -47.8479, -20.8589, 0.22 ) }
    dend_17 { pt3dadd( -77.5334, -47.8652, -20.8731, 0.22 ) }
    dend_17 { pt3dadd( -78.3389, -48.1256, -21.0916, 0.22 ) }
    dend_17 { pt3dadd( -78.7717, -48.2522, -21.2026, 0.22 ) }
    dend_17 { pt3dadd( -78.8139, -48.2639, -21.2124, 0.22 ) }
    dend_17 { pt3dadd( -79.4633, -48.4537, -21.3468, 0.22 ) }
    dend_17 { pt3dadd( -79.6912, -48.5357, -21.3832, 0.22 ) }
    dend_17 { pt3dadd( -80.7648, -48.9787, -21.5693, 0.22 ) }
    dend_17 { pt3dadd( -81.3411, -49.2604, -21.6767, 1.25 ) }
    dend_17 { pt3dadd( -81.3861, -49.287, -21.6847, 1.25 ) }
    dend_17 { pt3dadd( -82.0514, -49.7143, -21.8039, 1.62 ) }
    dend_17 { pt3dadd( -82.6193, -50.1206, -21.9196, 1.62 ) }
    dend_17 { pt3dadd( -83.2053, -50.5737, -22.0341, 0.22 ) }
    dend_17 { pt3dadd( -83.4683, -50.8028, -22.08, 0.22 ) }
    dend_17 { pt3dadd( -84.5264, -51.8037, -22.2279, 0.22 ) }
    dend_17 { pt3dadd( -84.6071, -51.8845, -22.2385, 0.22 ) }
    dend_17 { pt3dadd( -85.0009, -52.2979, -22.2866, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_17 { pt3dadd( -85.4308, -52.7608, -22.3374, 0.96 ) }
    dend_17 { pt3dadd( -86.0594, -53.4498, -22.4078, 0.96 ) }
    dend_17 { pt3dadd( -86.5416, -53.9229, -22.4592, 0.15 ) }
    dend_17 { pt3dadd( -87.0106, -54.3426, -22.5053, 0.15 ) }
    dend_17 { pt3dadd( -87.0589, -54.3794, -22.5081, 0.15 ) }
    dend_17 { pt3dadd( -87.8412, -54.8745, -22.5218, 0.15 ) }
    dend_17 { pt3dadd( -87.9762, -54.9507, -22.5221, 0.15 ) }
    dend_17 { pt3dadd( -88.6702, -55.3032, -22.5491, 0.15 ) }
    dend_17 { pt3dadd( -88.7173, -55.3266, -22.5525, 0.15 ) }
    dend_17 { pt3dadd( -89.6133, -55.7806, -22.6411, 0.15 ) }
    dend_17 { pt3dadd( -89.8884, -55.9299, -22.6745, 0.88 ) }
    dend_17 { pt3dadd( -90.4867, -56.2722, -22.7631, 1.11 ) }
    dend_17 { pt3dadd( -91.0833, -56.6306, -22.8445, 0.66 ) }
    dend_17 { pt3dadd( -91.3544, -56.8071, -22.8842, 0.22 ) }
    dend_17 { pt3dadd( -91.7305, -57.0402, -22.942, 0.15 ) }
    dend_17 { pt3dadd( -91.7756, -57.0666, -22.9498, 0.15 ) }
    dend_17 { pt3dadd( -92.3297, -57.3647, -23.0214, 0.15 ) }
    dend_17 { pt3dadd( -92.7884, -57.5809, -23.0564, 0.15 ) }
    dend_17 { pt3dadd( -93.1346, -57.7414, -23.0641, 0.37 ) }
    dend_17 { pt3dadd( -93.3926, -57.8584, -23.0726, 0.15 ) }
    dend_17 { pt3dadd( -93.4993, -57.9076, -23.0812, 0.15 ) }
    dend_17 { pt3dadd( -94.0989, -58.2046, -23.1505, 0.15 ) }
    dend_17 { pt3dadd( -94.6551, -58.4946, -23.2337, 0.15 ) }
    dend_17 { pt3dadd( -94.9503, -58.646, -23.2855, 0.81 ) }
    dend_17 { pt3dadd( -95.5554, -58.9461, -23.3892, 0.81 ) }
    dend_17 { pt3dadd( -96.0544, -59.1676, -23.4733, 0.22 ) }
    dend_17 { pt3dadd( -96.6196, -59.3898, -23.5674, 0.22 ) }
    dend_17 { pt3dadd( -96.7237, -59.4275, -23.5874, 0.22 ) }
    dend_17 { pt3dadd( -97.2975, -59.6614, -23.7043, 0.22 ) }
    dend_17 { pt3dadd( -97.3448, -59.6822, -23.7142, 0.22 ) }
    dend_17 { pt3dadd( -98.3235, -60.1638, -23.9128, 0.22 ) }
    dend_17 { pt3dadd( -98.4186, -60.2166, -23.9439, 0.22 ) }
    dend_17 { pt3dadd( -98.9436, -60.5998, -24.4004, 0.22 ) }
    dend_17 { pt3dadd( -99.3227, -60.942, -24.8624, 0.22 ) }
    dend_17 { pt3dadd( -99.3708, -60.9891, -24.9434, 0.22 ) }
    dend_17 { pt3dadd( -99.5742, -61.1907, -25.3202, 0.96 ) }
    dend_17 { pt3dadd( -100.164, -61.7617, -26.4319, 0.66 ) }
    dend_17 { pt3dadd( -101.136, -62.5878, -28.2144, 0.22 ) }
    dend_17 { pt3dadd( -101.493, -62.8572, -28.8181, 0.22 ) }
    dend_17 { pt3dadd( -102.384, -63.493, -30.1599, 0.52 ) }
    dend_17 { pt3dadd( -102.7, -63.7118, -30.5731, 0.96 ) }
    dend_17 { pt3dadd( -103.243, -64.0584, -31.161, 0.96 ) }
    dend_17 { pt3dadd( -103.946, -64.4763, -31.6853, 0.15 ) }
    dend_17 { pt3dadd( -104.704, -64.9015, -32.0431, 0.22 ) }
    dend_17 { pt3dadd( -105.493, -65.337, -32.3281, 0.22 ) }
    dend_17 { pt3dadd( -105.729, -65.4715, -32.3707, 0.22 ) }
    dend_17 { pt3dadd( -106.075, -65.6646, -32.4007, 0.44 ) }
    dend_17 { pt3dadd( -106.511, -65.9308, -32.3744, 0.74 ) }
    dend_17 { pt3dadd( -106.556, -65.9584, -32.3651, 0.74 ) }
    dend_17 { pt3dadd( -106.993, -66.2052, -32.3055, 0.74 ) }
    dend_17 { pt3dadd( -107.04, -66.2299, -32.3014, 0.74 ) }
    dend_17 { pt3dadd( -107.78, -66.6589, -32.2638, 0.22 ) }
    dend_17 { pt3dadd( -108.583, -67.1413, -32.2835, 0.22 ) }
    dend_17 { pt3dadd( -108.628, -67.1685, -32.2864, 0.22 ) }
    dend_17 { pt3dadd( -109.416, -67.6096, -32.3618, 0.22 ) }
    dend_17 { pt3dadd( -109.938, -67.8945, -32.4246, 0.22 ) }
    dend_17 { pt3dadd( -110.039, -67.9452, -32.4387, 0.22 ) }
    dend_17 { pt3dadd( -111.447, -68.6184, -32.7176, 0.22 ) }
    dend_17 { pt3dadd( -111.566, -68.672, -32.7411, 0.22 ) }
    dend_17 { pt3dadd( -112.973, -69.3257, -32.9226, 0.22 ) }
    dend_17 { pt3dadd( -113.189, -69.4285, -32.9375, 0.22 ) }
    dend_17 { pt3dadd( -113.819, -69.7271, -32.9661, 0.52 ) }
    dend_17 { pt3dadd( -114.488, -70.033, -32.9816, 1.33 ) }
    dend_17 { pt3dadd( -115.148, -70.3205, -32.9776, 1.55 ) }
    dend_17 { pt3dadd( -116.332, -70.8003, -32.9549, 0.37 ) }
    dend_17 { pt3dadd( -116.695, -70.9358, -32.9377, 0.22 ) }
    dend_17 { pt3dadd( -116.949, -71.0279, -32.9243, 0.22 ) }
    dend_17 { pt3dadd( -117.779, -71.3406, -32.8807, 0.22 ) }
    dend_17 { pt3dadd( -117.884, -71.3811, -32.8689, 0.22 ) }
    dend_17 { pt3dadd( -118.297, -71.5451, -32.8351, 0.22 ) }
    dend_17 { pt3dadd( -118.365, -71.5759, -32.8363, 0.22 ) }
    dend_17 { pt3dadd( -118.701, -71.7577, -32.8176, 0.59 ) }
    dend_17 { pt3dadd( -119.147, -72.0057, -32.7812, 0.59 ) }
    dend_17 { pt3dadd( -119.768, -72.3838, -32.7131, 0.22 ) }
    dend_17 { pt3dadd( -119.877, -72.4442, -32.7022, 0.22 ) }
    dend_17 { pt3dadd( -120.229, -72.6247, -32.6685, 0.22 ) }
    dend_17 { pt3dadd( -120.533, -72.7695, -32.6484, 0.22 ) }
    dend_17 { pt3dadd( -121.517, -73.2002, -32.6036, 0.22 ) }
    dend_17 { pt3dadd( -121.677, -73.2684, -32.5958, 0.66 ) }
    dend_17 { pt3dadd( -121.933, -73.3768, -32.5927, 0.22 ) }
    dend_17 { pt3dadd( -121.982, -73.3965, -32.5893, 0.22 ) }
    dend_17 { pt3dadd( -122.821, -73.7231, -32.4914, 0.22 ) }
    dend_17 { pt3dadd( -122.89, -73.7493, -32.4809, 0.22 ) }
    dend_17 { pt3dadd( -123.384, -73.9219, -32.3956, 0.66 ) }
    dend_17 { pt3dadd( -124.016, -74.1138, -32.2939, 0.66 ) }
    dend_17 { pt3dadd( -124.648, -74.328, -32.2037, 0.22 ) }
    dend_17 { pt3dadd( -124.697, -74.3449, -32.1974, 0.22 ) }
    dend_17 { pt3dadd( -125.194, -74.5059, -32.202, 0.22 ) }
    dend_17 { pt3dadd( -125.666, -74.6517, -32.2609, 0.22 ) }
    dend_17 { pt3dadd( -125.825, -74.6978, -32.3098, 0.22 ) }
    dend_17 { pt3dadd( -127.152, -75.0713, -32.877, 0.22 ) }
    dend_17 { pt3dadd( -127.204, -75.0853, -32.9036, 0.22 ) }
    dend_17 { pt3dadd( -128.4, -75.3732, -33.5511, 0.15 ) }
    dend_17 { pt3dadd( -128.874, -75.4847, -33.8197, 1.11 ) }
    dend_17 { pt3dadd( -129.686, -75.6633, -34.4048, 0.44 ) }
    dend_17 { pt3dadd( -130.015, -75.7284, -34.7111, 0.44 ) }
    dend_17 { pt3dadd( -130.091, -75.7451, -34.7917, 0.44 ) }
    dend_17 { pt3dadd( -130.726, -75.9155, -35.4884, 0.44 ) }
    dend_17 { pt3dadd( -131.101, -76.0414, -35.9723, 0.81 ) }
    dend_17 { pt3dadd( -132.517, -76.6059, -37.9341, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_17 { pt3dadd( -133.645, -77.1001, -39.5458, 0.74 ) }
    dend_17 { pt3dadd( -134.029, -77.2856, -40.0955, 0.74 ) }
    dend_17 { pt3dadd( -134.062, -77.3032, -40.1422, 0.74 ) }
    dend_17 { pt3dadd( -135.407, -78.1325, -42.1949, 0.22 ) }
    dend_17 { pt3dadd( -135.938, -78.489, -43.0147, 0.22 ) }
    dend_17 { pt3dadd( -136.037, -78.5626, -43.1407, 0.22 ) }
    dend_17 { pt3dadd( -136.674, -79.0543, -43.8409, 0.22 ) }
    dend_17 { pt3dadd( -136.943, -79.2494, -44.1015, 0.88 ) }
    dend_17 { pt3dadd( -138.185, -80.1552, -45.186, 0.22 ) }
    dend_17 { pt3dadd( -138.274, -80.2212, -45.2449, 0.22 ) }
    dend_17 { pt3dadd( -139.357, -81.0438, -46.067, 0.22 ) }
    dend_17 { pt3dadd( -139.549, -81.1886, -46.2188, 0.81 ) }
    dend_17 { pt3dadd( -140.004, -81.5154, -46.5981, 0.52 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 13/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -10.0302, -32.2621, 1.22792, 0.29 ) }
    dend_11 { pt3dadd( -7.53435, -33.1238, -3.71041, 0.29 ) }
    dend_11 { pt3dadd( -7.07474, -33.1908, -4.44135, 0.44 ) }
    dend_11 { pt3dadd( -7.03022, -33.1889, -4.4956, 0.44 ) }
    dend_11 { pt3dadd( -6.0063, -33.0576, -5.55544, 0.44 ) }
    dend_11 { pt3dadd( -7.07744, -33.2848, -4.6032, 0.44 ) }
    dend_11 { pt3dadd( -7.17749, -33.3109, -4.52328, 0.44 ) }
    dend_11 { pt3dadd( -8.54023, -33.8545, -3.67099, 0.44 ) }
    dend_11 { pt3dadd( -9.35287, -34.1797, -3.22797, 0.44 ) }
    dend_11 { pt3dadd( -9.41084, -34.208, -3.19887, 0.44 ) }
    dend_11 { pt3dadd( -9.87562, -34.4922, -3.01205, 0.66 ) }
    dend_11 { pt3dadd( -9.92473, -34.5412, -2.99319, 0.66 ) }
    dend_11 { pt3dadd( -10.4597, -35.2356, -2.82558, 0.66 ) }
    dend_11 { pt3dadd( -10.4948, -35.2988, -2.8167, 0.66 ) }
    dend_11 { pt3dadd( -10.9694, -36.1505, -2.69081, 0.44 ) }
    dend_11 { pt3dadd( -11.0054, -36.213, -2.68128, 0.44 ) }
    dend_11 { pt3dadd( -11.5098, -37.0969, -2.52085, 0.44 ) }
    dend_11 { pt3dadd( -11.5461, -37.1589, -2.50887, 0.44 ) }
    dend_11 { pt3dadd( -12.0262, -38.0273, -2.34579, 0.44 ) }
    dend_11 { pt3dadd( -12.3473, -38.6293, -2.18652, 0.74 ) }
    dend_11 { pt3dadd( -12.6949, -39.2577, -1.90146, 0.74 ) }
    dend_11 { pt3dadd( -13.1834, -40.1034, -1.43445, 0.59 ) }
    dend_11 { pt3dadd( -13.2203, -40.1659, -1.3951, 0.59 ) }
    dend_11 { pt3dadd( -13.9209, -41.273, -0.600496, 0.59 ) }
    dend_11 { pt3dadd( -14.6421, -42.2597, 0.296468, 0.81 ) }
    dend_11 { pt3dadd( -15.7862, -43.5186, 1.74436, 0.52 ) }
    dend_11 { pt3dadd( -16.458, -44.1467, 2.56628, 0.52 ) }
    dend_11 { pt3dadd( -16.5036, -44.1865, 2.62054, 0.52 ) }
    dend_11 { pt3dadd( -17.5851, -45.1595, 3.90224, 0.52 ) }
    dend_11 { pt3dadd( -18.5924, -46.1294, 5.07076, 0.74 ) }
    dend_11 { pt3dadd( -19.422, -47.0345, 5.98532, 0.52 ) }
    dend_11 { pt3dadd( -19.8626, -47.5792, 6.44659, 0.52 ) }
    dend_11 { pt3dadd( -20.464, -48.3562, 7.08661, 0.52 ) }
    dend_11 { pt3dadd( -21.4053, -49.4852, 7.9352, 0.52 ) }
    dend_11 { pt3dadd( -22.312, -50.4301, 8.51533, 0.81 ) }
    dend_11 { pt3dadd( -22.3639, -50.4877, 8.54259, 0.81 ) }
    dend_11 { pt3dadd( -22.8053, -50.9564, 8.74645, 0.74 ) }
    dend_11 { pt3dadd( -24.0319, -51.8915, 9.24135, 0.59 ) }
    dend_11 { pt3dadd( -25.4148, -52.4141, 9.63194, 0.81 ) }
    dend_11 { pt3dadd( -26.6629, -52.5157, 9.85956, 0.81 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 53/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -10.0302, -32.2621, 1.22792, 0.74 ) }
    dend_4 { pt3dadd( -10.0253, -32.4513, 1.19761, 0.74 ) }
    dend_4 { pt3dadd( -10.0419, -33.2996, 1.03316, 1.18 ) }
    dend_4 { pt3dadd( -10.0966, -34.6718, 0.749185, 1.03 ) }
    dend_4 { pt3dadd( -10.1755, -36.8087, 0.315971, 0.74 ) }
    dend_4 { pt3dadd( -10.2392, -38.5833, -0.0923597, 0.66 ) }
    dend_4 { pt3dadd( -10.3314, -40.6672, -0.582, 0.66 ) }
    dend_4 { pt3dadd( -10.3721, -41.4227, -0.810142, 1.03 ) }
    dend_4 { pt3dadd( -10.3815, -41.5773, -0.864196, 1.03 ) }
    dend_4 { pt3dadd( -10.425, -42.4745, -1.18359, 0.81 ) }
    dend_4 { pt3dadd( -10.4373, -44.0151, -1.61754, 0.81 ) }
    dend_4 { pt3dadd( -10.3815, -45.7341, -1.95969, 0.81 ) }
    dend_4 { pt3dadd( -10.2225, -47.8538, -2.24377, 0.52 ) }
    dend_4 { pt3dadd( -10.0755, -49.3148, -2.35203, 0.74 ) }
    dend_4 { pt3dadd( -9.86314, -51.5487, -2.30028, 1.03 ) }
    dend_4 { pt3dadd( -9.64398, -53.9819, -2.01238, 0.96 ) }
    dend_4 { pt3dadd( -9.63597, -54.074, -1.99365, 0.96 ) }
    dend_4 { pt3dadd( -9.53584, -55.3696, -1.66852, 1.18 ) }
    dend_4 { pt3dadd( -9.42236, -57.3149, -1.10522, 1.03 ) }
    dend_4 { pt3dadd( -9.33096, -60.0697, -0.32445, 1.03 ) }
    dend_4 { pt3dadd( -9.32288, -62.1181, 0.233182, 0.96 ) }
    dend_4 { pt3dadd( -9.32456, -63.8311, 0.657963, 0.81 ) }
    dend_4 { pt3dadd( -9.31896, -65.1039, 0.962874, 1.03 ) }
    dend_4 { pt3dadd( -9.26403, -66.0213, 1.17418, 0.74 ) }
    dend_4 { pt3dadd( -9.14167, -66.949, 1.36231, 0.59 ) }
    dend_4 { pt3dadd( -9.12331, -67.0277, 1.37814, 0.59 ) }
    dend_4 { pt3dadd( -8.69834, -68.4222, 1.7128, 0.59 ) }
    dend_4 { pt3dadd( -8.6427, -68.5814, 1.76202, 0.59 ) }
    dend_4 { pt3dadd( -7.61443, -71.6396, 2.94288, 0.59 ) }
    dend_4 { pt3dadd( -7.59656, -71.7132, 2.97427, 0.59 ) }
    dend_4 { pt3dadd( -7.23589, -73.6601, 3.85115, 0.59 ) }
    dend_4 { pt3dadd( -7.221, -73.8196, 3.92375, 0.59 ) }
    dend_4 { pt3dadd( -7.24498, -74.8928, 4.40986, 1.03 ) }
    dend_4 { pt3dadd( -7.43057, -77.3517, 5.53701, 0.81 ) }
    dend_4 { pt3dadd( -7.93446, -80.1847, 6.85356, 0.81 ) }
    dend_4 { pt3dadd( -7.94698, -80.2479, 6.88192, 0.81 ) }
    dend_4 { pt3dadd( -8.28792, -81.6675, 7.47023, 1.55 ) }
    dend_4 { pt3dadd( -8.53831, -82.6743, 7.8703, 1.92 ) }
    // Section: dend_81, id: dend_81, parent: dend_79 (entry count 91/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -2.42494, 136.198, 42.9008, 0.37 ) }
    dend_81 { pt3dadd( -10.249, 141.45, 44.1151, 0.37 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 93/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -2.42494, 136.198, 42.9008, 0.29 ) }
    dend_80 { pt3dadd( -3.29447, 141.429, 50.1247, 0.37 ) }
    dend_80 { pt3dadd( -4.88549, 147.208, 56.8336, 0.37 ) }
    dend_80 { pt3dadd( -6.32069, 151.858, 64.3289, 0.37 ) }
    dend_80 { pt3dadd( -8.68437, 157.327, 71.0544, 0.37 ) }
    dend_80 { pt3dadd( -10.6538, 163.454, 77.3758, 0.37 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 99/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 20.4057, 54.7394, -136.799, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_67 { pt3dadd( 21.559, 56.6191, -138.38, 0.22 ) }
    dend_67 { pt3dadd( 22.4428, 58.1112, -139.601, 0.22 ) }
    dend_67 { pt3dadd( 22.4873, 58.1823, -139.668, 0.22 ) }
    dend_67 { pt3dadd( 23.7089, 60.1853, -141.536, 0.22 ) }
    dend_67 { pt3dadd( 24.0319, 60.7974, -142.062, 1.03 ) }
    dend_67 { pt3dadd( 24.2061, 61.1388, -142.386, 1.03 ) }
    dend_67 { pt3dadd( 24.2244, 61.1828, -142.424, 1.03 ) }
    dend_67 { pt3dadd( 24.6783, 62.4575, -143.746, 0.22 ) }
    dend_67 { pt3dadd( 24.9843, 63.3599, -144.747, 0.22 ) }
    dend_67 { pt3dadd( 25.2511, 64.3935, -145.912, 0.22 ) }
    dend_67 { pt3dadd( 25.5615, 65.9969, -147.906, 0.22 ) }
    dend_67 { pt3dadd( 25.6109, 67.0096, -149.084, 0.22 ) }
    dend_67 { pt3dadd( 25.543, 68.6712, -151.189, 0.22 ) }
    dend_67 { pt3dadd( 25.5378, 68.714, -151.246, 0.22 ) }
    dend_67 { pt3dadd( 25.2856, 69.6541, -152.498, 0.22 ) }
    dend_67 { pt3dadd( 24.5904, 71.4606, -154.648, 0.22 ) }
    dend_67 { pt3dadd( 23.7055, 73.4992, -156.97, 0.22 ) }
    dend_67 { pt3dadd( 22.5164, 76.0843, -159.937, 0.22 ) }
    dend_67 { pt3dadd( 22.4263, 76.2917, -160.159, 0.44 ) }
    dend_67 { pt3dadd( 21.1117, 79.5343, -163.534, 0.15 ) }
    dend_67 { pt3dadd( 20.2695, 81.9862, -165.882, 0.15 ) }
    dend_67 { pt3dadd( 19.2416, 85.4947, -168.841, 0.15 ) }
    dend_67 { pt3dadd( 19.2234, 85.5737, -168.903, 0.15 ) }
    dend_67 { pt3dadd( 18.8952, 87.2083, -169.992, 0.15 ) }
    dend_67 { pt3dadd( 18.883, 87.2994, -170.051, 0.15 ) }
    dend_67 { pt3dadd( 19.0604, 89.7322, -171.538, 0.15 ) }
    dend_67 { pt3dadd( 19.0976, 89.884, -171.614, 0.15 ) }
    dend_67 { pt3dadd( 19.3713, 90.9022, -171.747, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 28/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 20.4057, 54.7394, -136.799, 0.22 ) }
    dend_66 { pt3dadd( 19.1697, 56.6777, -138.096, 0.22 ) }
    dend_66 { pt3dadd( 18.3842, 57.9434, -138.819, 0.22 ) }
    dend_66 { pt3dadd( 18.2618, 58.1439, -138.954, 0.22 ) }
    dend_66 { pt3dadd( 17.2332, 60.0721, -140.224, 0.22 ) }
    dend_66 { pt3dadd( 16.9732, 60.6702, -140.576, 0.66 ) }
    dend_66 { pt3dadd( 16.721, 61.3171, -140.938, 0.22 ) }
    dend_66 { pt3dadd( 16.2957, 62.7311, -141.601, 0.22 ) }
    dend_66 { pt3dadd( 15.8503, 64.8077, -142.548, 0.22 ) }
    dend_66 { pt3dadd( 15.6563, 66.6887, -143.338, 0.22 ) }
    dend_66 { pt3dadd( 15.586, 69.0042, -144.261, 0.22 ) }
    dend_66 { pt3dadd( 15.5869, 69.0811, -144.291, 0.22 ) }
    dend_66 { pt3dadd( 15.6531, 70.3419, -144.758, 0.22 ) }
    dend_66 { pt3dadd( 15.6628, 70.4199, -144.782, 0.22 ) }
    dend_66 { pt3dadd( 16.17, 73.5452, -145.342, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 43/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -46.2612, 110.472, 67.4065, 0.37 ) }
    dend_54 { pt3dadd( -48.1638, 116.488, 72.1318, 0.37 ) }
    dend_54 { pt3dadd( -49.7061, 122.583, 76.902, 0.37 ) }
    dend_54 { pt3dadd( -51.5468, 127.651, 82.5764, 0.37 ) }
    dend_54 { pt3dadd( -52.0822, 133.321, 88.018, 0.37 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 48/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -46.2612, 110.472, 67.4065, 0.29 ) }
    dend_53 { pt3dadd( -48.4909, 118.571, 73.4288, 0.37 ) }
    dend_53 { pt3dadd( -49.7027, 126.461, 79.9787, 0.37 ) }
    dend_53 { pt3dadd( -50.3411, 135.044, 85.7716, 0.37 ) }
    dend_53 { pt3dadd( -49.7419, 143.574, 91.6422, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 53/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 55.1637, -66.2535, 6.88015, 0.74 ) }
    dend_39 { pt3dadd( 54.5535, -67.6381, 7.38966, 0.74 ) }
    dend_39 { pt3dadd( 54.1279, -68.9174, 7.55978, 0.59 ) }
    dend_39 { pt3dadd( 53.7093, -70.1761, 7.72715, 0.59 ) }
    dend_39 { pt3dadd( 53.6853, -70.2484, 7.73676, 0.59 ) }
    dend_39 { pt3dadd( 53.0645, -72.1147, 7.98492, 0.59 ) }
    dend_39 { pt3dadd( 53.0365, -72.1991, 7.99613, 0.59 ) }
    dend_39 { pt3dadd( 51.9734, -75.2738, 8.65539, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 61/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 55.1637, -66.2535, 6.88015, 1.11 ) }
    dend_36 { pt3dadd( 55.5113, -66.6785, 6.66051, 1.11 ) }
    dend_36 { pt3dadd( 56.6414, -68.1193, 6.09275, 0.52 ) }
    dend_36 { pt3dadd( 56.7581, -68.2832, 6.05665, 0.52 ) }
    dend_36 { pt3dadd( 57.5783, -69.6259, 5.88164, 0.52 ) }
    dend_36 { pt3dadd( 57.6214, -69.7056, 5.86662, 0.52 ) }
    dend_36 { pt3dadd( 58.4104, -71.2503, 5.53206, 0.74 ) }
    dend_36 { pt3dadd( 58.4523, -71.3453, 5.51443, 0.74 ) }
    dend_36 { pt3dadd( 59.2369, -73.3855, 5.23841, 0.74 ) }
    dend_36 { pt3dadd( 59.6752, -74.7576, 5.02386, 0.74 ) }
    dend_36 { pt3dadd( 60.0798, -76.3144, 4.74954, 0.29 ) }
    dend_36 { pt3dadd( 60.0993, -76.4035, 4.73338, 0.29 ) }
    dend_36 { pt3dadd( 60.1866, -76.8658, 4.617, 0.29 ) }
    dend_36 { pt3dadd( 60.2071, -76.9654, 4.58839, 0.29 ) }
    dend_36 { pt3dadd( 60.4621, -78.1435, 4.19611, 0.29 ) }
    dend_36 { pt3dadd( 60.7426, -79.1364, 3.88343, 0.52 ) }
    dend_36 { pt3dadd( 60.7696, -79.2218, 3.86151, 0.52 ) }
    dend_36 { pt3dadd( 61.3507, -80.9837, 3.39532, 0.52 ) }
    dend_36 { pt3dadd( 61.7451, -82.2552, 3.06389, 0.52 ) }
    dend_36 { pt3dadd( 61.7665, -82.329, 3.04491, 0.52 ) }
    dend_36 { pt3dadd( 61.9157, -82.9419, 2.88989, 0.22 ) }
    dend_36 { pt3dadd( 62.0122, -83.4883, 2.76528, 0.22 ) }
    dend_36 { pt3dadd( 62.0256, -83.5899, 2.73895, 0.22 ) }
    dend_36 { pt3dadd( 62.1419, -84.7969, 2.43361, 0.22 ) }
    dend_36 { pt3dadd( 62.1618, -84.8992, 2.41491, 0.22 ) }
    dend_36 { pt3dadd( 62.7301, -86.6458, 2.32222, 0.22 ) }
    dend_36 { pt3dadd( 62.8099, -86.8364, 2.3284, 0.22 ) }
    dend_36 { pt3dadd( 63.5541, -88.3574, 2.46354, 0.81 ) }
    dend_36 { pt3dadd( 63.9951, -89.1533, 2.56831, 0.81 ) }
    dend_36 { pt3dadd( 65.3246, -91.3185, 2.93904, 0.37 ) }
    dend_36 { pt3dadd( 66.4076, -93.0167, 3.29684, 0.37 ) }
    dend_36 { pt3dadd( 66.9254, -93.7906, 3.50354, 0.44 ) }
    dend_36 { pt3dadd( 67.1552, -94.1364, 3.60557, 0.15 ) }
    dend_36 { pt3dadd( 68.2272, -95.763, 4.16634, 0.15 ) }
    dend_36 { pt3dadd( 68.2753, -95.8375, 4.18981, 0.15 ) }
    dend_36 { pt3dadd( 68.3796, -96.0115, 4.22234, 0.66 ) }
    dend_36 { pt3dadd( 68.5872, -96.4003, 4.24535, 0.88 ) }
    dend_36 { pt3dadd( 68.6487, -96.5151, 4.25072, 0.88 ) }
    dend_36 { pt3dadd( 69.0582, -97.3056, 4.28829, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_36 { pt3dadd( 77.3944, -107.317, 3.85707, 0.88 ) }
    dend_36 { pt3dadd( 84.715, -118.029, 2.20501, 0.88 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -12.8954, -29.6669, -19.1688, 0.59 ) }
    dend_20 { pt3dadd( -11.6689, -29.7457, -26.0561, 0.59 ) }
    dend_20 { pt3dadd( -11.6399, -29.7557, -26.1277, 0.59 ) }
    dend_20 { pt3dadd( -10.6307, -30.3188, -26.9311, 0.59 ) }
    dend_20 { pt3dadd( -10.5782, -30.3483, -26.9645, 0.59 ) }
    dend_20 { pt3dadd( -9.34225, -31.0275, -28.0598, 0.59 ) }
    dend_20 { pt3dadd( -9.19532, -31.1061, -28.1972, 0.59 ) }
    dend_20 { pt3dadd( -7.1515, -32.3147, -29.7341, 0.59 ) }
    dend_20 { pt3dadd( -6.27533, -32.8644, -30.546, 1.03 ) }
    dend_20 { pt3dadd( -4.67131, -34.0244, -32.5642, 0.88 ) }
    dend_20 { pt3dadd( -3.10832, -35.3771, -35.4, 0.74 ) }
    dend_20 { pt3dadd( -2.8501, -35.6431, -36.0494, 0.74 ) }
    dend_20 { pt3dadd( -2.30648, -36.2552, -37.802, 0.74 ) }
    dend_20 { pt3dadd( -2.2907, -36.2733, -37.8661, 0.74 ) }
    dend_20 { pt3dadd( -1.83914, -36.7325, -39.6039, 1.03 ) }
    dend_20 { pt3dadd( -1.17964, -37.4162, -41.8485, 0.29 ) }
    dend_20 { pt3dadd( -0.834003, -37.6504, -42.6418, 0.44 ) }
    dend_20 { pt3dadd( -0.0824553, -37.9743, -43.8463, 0.88 ) }
    dend_20 { pt3dadd( 0.681511, -38.172, -44.6967, 1.03 ) }
    dend_20 { pt3dadd( 1.52596, -38.3283, -45.5604, 1.03 ) }
    dend_20 { pt3dadd( 1.5777, -38.3319, -45.6046, 1.03 ) }
    dend_20 { pt3dadd( 3.07833, -38.3375, -46.7788, 1.03 ) }
    dend_20 { pt3dadd( 4.24576, -38.2823, -47.7765, 0.44 ) }
    dend_20 { pt3dadd( 4.29594, -38.2782, -47.8223, 0.44 ) }
    dend_20 { pt3dadd( 6.00991, -38.1638, -50.2014, 0.74 ) }
    dend_20 { pt3dadd( 6.49641, -38.2159, -51.0343, 0.74 ) }
    dend_20 { pt3dadd( 6.52768, -38.2263, -51.094, 0.74 ) }
    dend_20 { pt3dadd( 6.72217, -38.3376, -51.4892, 0.74 ) }
    dend_20 { pt3dadd( 6.75485, -38.3607, -51.5564, 0.74 ) }
    dend_20 { pt3dadd( 8.28447, -39.7071, -54.6786, 0.88 ) }
    dend_20 { pt3dadd( 9.11578, -40.6084, -56.4983, 0.88 ) }
    dend_20 { pt3dadd( 10.0577, -41.6417, -58.648, 0.59 ) }
    dend_20 { pt3dadd( 10.4047, -42.01, -59.4405, 0.88 ) }
    dend_20 { pt3dadd( 10.4342, -42.0415, -59.5062, 0.88 ) }
    dend_20 { pt3dadd( 11.126, -42.8416, -61.1069, 0.52 ) }
    dend_20 { pt3dadd( 11.8466, -43.8044, -62.969, 0.37 ) }
    dend_20 { pt3dadd( 12.1198, -44.2629, -63.8908, 0.37 ) }
    dend_20 { pt3dadd( 12.1382, -44.295, -63.949, 0.37 ) }
    dend_20 { pt3dadd( 12.51, -44.8914, -65.006, 0.37 ) }
    dend_20 { pt3dadd( 13.267, -46.1, -66.8926, 0.37 ) }
    dend_20 { pt3dadd( 14.1626, -47.464, -68.9476, 0.37 ) }
    dend_20 { pt3dadd( 14.2194, -47.5447, -69.0668, 0.37 ) }
    dend_20 { pt3dadd( 14.8328, -48.3625, -70.4293, 0.37 ) }
    dend_20 { pt3dadd( 16.1866, -49.9729, -73.4641, 0.37 ) }
    dend_20 { pt3dadd( 16.67, -50.4598, -74.5099, 0.37 ) }
    dend_20 { pt3dadd( 17.5602, -51.1922, -76.2259, 0.96 ) }
    dend_20 { pt3dadd( 17.9774, -51.4836, -77.0296, 0.96 ) }
    dend_20 { pt3dadd( 19.3796, -52.3939, -79.8508, 0.44 ) }
    dend_20 { pt3dadd( 19.4119, -52.4117, -79.9197, 0.44 ) }
    dend_20 { pt3dadd( 19.8069, -52.5977, -80.6871, 1.33 ) }
    dend_20 { pt3dadd( 20.1815, -52.7682, -81.6636, 1.33 ) }
    dend_20 { pt3dadd( 21.5103, -53.3977, -85.3729, 0.66 ) }
    dend_20 { pt3dadd( 21.5737, -53.4301, -85.5862, 0.66 ) }
    dend_20 { pt3dadd( 22.19, -53.7753, -87.7126, 1.55 ) }
    dend_20 { pt3dadd( 22.4696, -53.9409, -88.7244, 1.55 ) }
    dend_20 { pt3dadd( 24.5199, -55.2056, -96.7154, 0.81 ) }
    dend_20 { pt3dadd( 24.7568, -55.3598, -97.7021, 1.77 ) }
    dend_20 { pt3dadd( 25.7115, -56.0059, -101.683, 0.44 ) }
    dend_20 { pt3dadd( 26.1075, -56.2888, -103.298, 0.44 ) }
    dend_20 { pt3dadd( 26.1235, -56.3018, -103.363, 0.44 ) }
    dend_20 { pt3dadd( 26.6826, -56.8245, -105.558, 0.88 ) }
    dend_20 { pt3dadd( 26.7059, -56.8526, -105.628, 0.88 ) }
    dend_20 { pt3dadd( 27.2601, -57.6543, -107.404, 0.37 ) }
    dend_20 { pt3dadd( 27.6022, -58.1582, -108.309, 0.37 ) }
    dend_20 { pt3dadd( 28.0781, -58.8613, -109.612, 0.74 ) }
    dend_20 { pt3dadd( 28.2626, -59.173, -110.25, 0.74 ) }
    dend_20 { pt3dadd( 28.7203, -60.0396, -112.062, 0.37 ) }
    dend_20 { pt3dadd( 28.7354, -60.0681, -112.123, 0.37 ) }
    dend_20 { pt3dadd( 28.9996, -60.6011, -113.265, 0.37 ) }
    dend_20 { pt3dadd( 29.4135, -61.3746, -114.981, 1.18 ) }
    dend_20 { pt3dadd( 30.6978, -63.5455, -119.883, 0.44 ) }
    dend_20 { pt3dadd( 30.7146, -63.5694, -119.945, 0.44 ) }
    dend_20 { pt3dadd( 31.0183, -63.9535, -121.051, 0.44 ) }
    dend_20 { pt3dadd( 31.5862, -64.5611, -123.011, 0.44 ) }
    dend_20 { pt3dadd( 31.8013, -64.7517, -123.708, 0.44 ) }
    dend_20 { pt3dadd( 31.8761, -64.802, -123.903, 0.44 ) }
    dend_20 { pt3dadd( 33.0788, -65.325, -126.223, 0.37 ) }
    dend_20 { pt3dadd( 33.11, -65.3403, -126.293, 0.37 ) }
    dend_20 { pt3dadd( 33.5105, -65.5395, -127.325, 0.37 ) }
    dend_20 { pt3dadd( 34.1217, -65.993, -129.317, 0.37 ) }
    dend_20 { pt3dadd( 34.1764, -66.051, -129.535, 0.37 ) }
    dend_20 { pt3dadd( 34.3799, -66.3132, -130.343, 0.37 ) }
    dend_20 { pt3dadd( 35.0325, -67.3073, -132.92, 0.37 ) }
    dend_20 { pt3dadd( 35.051, -67.3368, -132.99, 0.37 ) }
    dend_20 { pt3dadd( 35.8953, -68.6343, -135.951, 0.15 ) }
    dend_20 { pt3dadd( 36.3916, -69.3437, -137.489, 0.88 ) }
    dend_20 { pt3dadd( 36.6604, -69.7039, -138.234, 0.88 ) }
    dend_20 { pt3dadd( 36.6822, -69.7346, -138.292, 0.88 ) }
    dend_20 { pt3dadd( 37.5919, -71.1389, -140.748, 0.29 ) }
    dend_20 { pt3dadd( 38.6911, -72.8826, -143.671, 0.29 ) }
    dend_20 { pt3dadd( 39.4555, -74.1144, -145.662, 0.29 ) }
    dend_20 { pt3dadd( 40.5205, -75.8935, -148.503, 0.96 ) }
    dend_20 { pt3dadd( 41.8669, -78.1969, -152.222, 0.22 ) }
    dend_20 { pt3dadd( 42.6232, -79.5176, -154.338, 0.37 ) }
    dend_20 { pt3dadd( 43.4498, -81.0179, -156.699, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -12.8954, -29.6669, -19.1688, 0.74 ) }
    dend_19 { pt3dadd( -13.6932, -31.7292, -20.7045, 0.74 ) }
    dend_19 { pt3dadd( -13.713, -31.8018, -20.7465, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_19 { pt3dadd( -13.9445, -32.8313, -21.2705, 0.74 ) }
    dend_19 { pt3dadd( -14.2634, -34.5071, -21.9879, 0.74 ) }
    dend_19 { pt3dadd( -14.6046, -35.9831, -22.5661, 0.74 ) }
    dend_19 { pt3dadd( -14.6333, -36.0707, -22.6014, 0.74 ) }
    dend_19 { pt3dadd( -15.1562, -37.4571, -22.9965, 0.74 ) }
    dend_19 { pt3dadd( -15.2303, -37.6195, -23.0438, 0.74 ) }
    dend_19 { pt3dadd( -15.8513, -38.7182, -23.3734, 0.74 ) }
    dend_19 { pt3dadd( -16.5049, -39.6882, -23.6358, 0.74 ) }
    dend_19 { pt3dadd( -17.4577, -41.0352, -24.1375, 0.44 ) }
    dend_19 { pt3dadd( -17.4972, -41.1036, -24.1706, 0.44 ) }
    dend_19 { pt3dadd( -17.8248, -41.7922, -24.6384, 0.66 ) }
    dend_19 { pt3dadd( -17.8448, -41.8475, -24.6823, 0.66 ) }
    dend_19 { pt3dadd( -18.0355, -42.5082, -25.3135, 0.96 ) }
    dend_19 { pt3dadd( -18.3371, -43.8689, -26.6975, 0.96 ) }
    dend_19 { pt3dadd( -18.6041, -45.1373, -28.1471, 1.18 ) }
    dend_19 { pt3dadd( -19.0333, -46.584, -30.1576, 1.18 ) }
    dend_19 { pt3dadd( -19.5442, -47.8204, -32.1399, 1.18 ) }
    dend_19 { pt3dadd( -20.1699, -48.9948, -34.2401, 0.96 ) }
    dend_19 { pt3dadd( -20.2231, -49.063, -34.3841, 0.96 ) }
    dend_19 { pt3dadd( -21.1779, -49.8653, -36.4407, 0.88 ) }
    dend_19 { pt3dadd( -22.6002, -50.6886, -39.0043, 0.44 ) }
    dend_19 { pt3dadd( -23.259, -50.939, -39.9374, 0.66 ) }
    dend_19 { pt3dadd( -23.314, -50.9541, -39.9982, 0.66 ) }
    dend_19 { pt3dadd( -24.6636, -51.3028, -41.1909, 0.66 ) }
    dend_19 { pt3dadd( -25.6749, -51.5922, -41.9811, 0.44 ) }
    dend_19 { pt3dadd( -25.7521, -51.619, -42.0302, 0.44 ) }
    dend_19 { pt3dadd( -27.4209, -52.3905, -42.9787, 0.74 ) }
    dend_19 { pt3dadd( -28.0741, -52.7774, -43.4133, 0.74 ) }
    dend_19 { pt3dadd( -28.1292, -52.8202, -43.4604, 0.74 ) }
    dend_19 { pt3dadd( -28.8434, -53.5437, -44.5742, 0.44 ) }
    dend_19 { pt3dadd( -29.1649, -53.8916, -45.1173, 0.44 ) }
    dend_19 { pt3dadd( -29.4165, -54.1453, -45.5164, 0.44 ) }
    dend_19 { pt3dadd( -30.0883, -54.8278, -46.5141, 0.44 ) }
    dend_19 { pt3dadd( -31.1847, -55.8937, -48.1036, 0.81 ) }
    dend_19 { pt3dadd( -33.4059, -57.975, -51.2279, 0.96 ) }
    dend_19 { pt3dadd( -34.5724, -59.0863, -52.8492, 1.77 ) }
    dend_19 { pt3dadd( -36.2375, -60.7198, -55.2168, 1.47 ) }
    dend_19 { pt3dadd( -36.9521, -61.4622, -56.2233, 1.47 ) }
    dend_19 { pt3dadd( -38.3228, -63.096, -58.1706, 1.47 ) }
    dend_19 { pt3dadd( -38.3538, -63.1538, -58.2249, 1.47 ) }
    dend_19 { pt3dadd( -38.6317, -63.9878, -58.9022, 1.55 ) }
    dend_19 { pt3dadd( -39.1174, -66.1114, -60.6181, 1.11 ) }
    dend_19 { pt3dadd( -39.2667, -67.0807, -61.3445, 0.66 ) }
    dend_19 { pt3dadd( -39.5103, -68.7255, -62.5368, 0.37 ) }
    dend_19 { pt3dadd( -39.8403, -71.2448, -64.1233, 0.37 ) }
    dend_19 { pt3dadd( -40.1432, -73.264, -65.368, 0.37 ) }
    dend_19 { pt3dadd( -40.3954, -74.6384, -66.184, 0.37 ) }
    dend_19 { pt3dadd( -40.4273, -74.7712, -66.2628, 0.37 ) }
    dend_19 { pt3dadd( -40.7438, -75.7063, -66.8456, 0.37 ) }
    dend_19 { pt3dadd( -41.471, -77.1542, -68.0127, 0.37 ) }
    dend_19 { pt3dadd( -42.222, -78.4572, -69.021, 0.22 ) }
    dend_19 { pt3dadd( -42.5018, -78.9818, -69.3942, 0.22 ) }
    dend_19 { pt3dadd( -43.4937, -80.8716, -70.6777, 1.25 ) }
    dend_19 { pt3dadd( -44.1027, -82.0, -71.4046, 1.62 ) }
    dend_19 { pt3dadd( -46.0237, -85.4186, -73.5912, 0.22 ) }
    dend_19 { pt3dadd( -47.6018, -87.9631, -75.2133, 0.22 ) }
    dend_19 { pt3dadd( -47.6426, -88.0293, -75.2489, 0.22 ) }
    dend_19 { pt3dadd( -48.2765, -89.1167, -75.7583, 0.22 ) }
    dend_19 { pt3dadd( -48.3277, -89.1937, -75.7899, 0.22 ) }
    dend_19 { pt3dadd( -49.8081, -91.1428, -76.6706, 0.22 ) }
    dend_19 { pt3dadd( -49.9186, -91.272, -76.7362, 0.22 ) }
    dend_19 { pt3dadd( -50.8169, -92.3071, -77.4424, 0.22 ) }
    dend_19 { pt3dadd( -50.9713, -92.4978, -77.5708, 0.22 ) }
    dend_19 { pt3dadd( -52.2388, -94.1741, -78.6311, 0.22 ) }
    dend_19 { pt3dadd( -52.8804, -95.218, -79.212, 0.22 ) }
    dend_19 { pt3dadd( -53.493, -96.4202, -79.7979, 0.96 ) }
    dend_19 { pt3dadd( -53.8755, -97.3473, -80.2066, 1.25 ) }
    dend_19 { pt3dadd( -54.1865, -98.1843, -80.6213, 0.52 ) }
    dend_19 { pt3dadd( -54.495, -99.0432, -81.0538, 0.15 ) }
    dend_19 { pt3dadd( -55.2806, -101.199, -82.3151, 0.15 ) }
    dend_19 { pt3dadd( -55.345, -101.355, -82.418, 0.15 ) }
    dend_19 { pt3dadd( -55.9532, -102.737, -83.3384, 0.15 ) }
    dend_19 { pt3dadd( -57.0353, -104.954, -84.9052, 0.15 ) }
    dend_19 { pt3dadd( -57.237, -105.33, -85.1925, 1.4 ) }
    dend_19 { pt3dadd( -58.5566, -107.674, -87.075, 1.4 ) }
    dend_19 { pt3dadd( -59.0324, -108.485, -87.7522, 0.22 ) }
    dend_19 { pt3dadd( -59.565, -109.408, -88.5282, 0.22 ) }
    dend_19 { pt3dadd( -59.887, -109.971, -89.0222, 0.22 ) }
    dend_19 { pt3dadd( -60.6269, -111.323, -90.1494, 0.22 ) }
    dend_19 { pt3dadd( -60.6604, -111.384, -90.1995, 0.22 ) }
    dend_19 { pt3dadd( -61.3625, -112.693, -91.1536, 1.03 ) }
    dend_19 { pt3dadd( -61.8301, -113.583, -91.7918, 1.33 ) }
    dend_19 { pt3dadd( -62.4944, -115.034, -92.7437, 0.74 ) }
    dend_19 { pt3dadd( -62.8099, -115.917, -93.1881, 0.22 ) }
    dend_19 { pt3dadd( -63.0988, -116.967, -93.5351, 0.22 ) }
    dend_19 { pt3dadd( -63.4027, -118.315, -93.7915, 0.22 ) }
    dend_19 { pt3dadd( -63.42, -118.4, -93.7937, 0.22 ) }
    dend_19 { pt3dadd( -63.5943, -119.111, -93.827, 1.03 ) }
    dend_19 { pt3dadd( -63.9086, -120.237, -93.8679, 0.74 ) }
    dend_19 { pt3dadd( -64.2037, -121.253, -93.9052, 0.74 ) }
    dend_19 { pt3dadd( -64.586, -122.463, -94.0007, 0.44 ) }
    dend_19 { pt3dadd( -65.0608, -123.784, -94.1865, 0.22 ) }
    dend_19 { pt3dadd( -66.1569, -126.58, -94.6504, 0.15 ) }
    dend_19 { pt3dadd( -66.3736, -127.059, -94.7567, 1.03 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 94/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -26.6629, -52.5157, 9.85956, 0.52 ) }
    dend_13 { pt3dadd( -26.8401, -52.6876, 9.75294, 0.52 ) }
    dend_13 { pt3dadd( -27.4097, -53.2925, 9.72796, 0.52 ) }
    dend_13 { pt3dadd( -28.5081, -54.4907, 10.0199, 0.44 ) }
    dend_13 { pt3dadd( -29.0006, -55.0873, 10.2247, 0.44 ) }
    dend_13 { pt3dadd( -29.0357, -55.1304, 10.2435, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_13 { pt3dadd( -29.8878, -56.1826, 10.7472, 0.44 ) }
    dend_13 { pt3dadd( -30.8305, -57.2409, 11.3685, 0.44 ) }
    dend_13 { pt3dadd( -30.9475, -57.3638, 11.4589, 0.44 ) }
    dend_13 { pt3dadd( -31.7681, -58.135, 12.1306, 0.44 ) }
    dend_13 { pt3dadd( -32.3827, -58.6332, 12.5735, 0.44 ) }
    dend_13 { pt3dadd( -32.4258, -58.6637, 12.5973, 0.44 ) }
    dend_13 { pt3dadd( -33.5061, -59.3239, 13.0447, 0.44 ) }
    dend_13 { pt3dadd( -34.1581, -59.6764, 13.251, 0.37 ) }
    dend_13 { pt3dadd( -34.5258, -59.846, 13.3746, 0.37 ) }
    dend_13 { pt3dadd( -35.0855, -60.0908, 13.6057, 0.66 ) }
    dend_13 { pt3dadd( -35.8168, -60.4301, 13.942, 0.66 ) }
    dend_13 { pt3dadd( -36.7346, -60.8921, 14.4272, 0.29 ) }
    dend_13 { pt3dadd( -37.2352, -61.183, 14.7639, 0.29 ) }
    dend_13 { pt3dadd( -38.2531, -61.8431, 15.5221, 0.29 ) }
    dend_13 { pt3dadd( -39.1768, -62.5228, 16.2922, 0.29 ) }
    dend_13 { pt3dadd( -39.2193, -62.5546, 16.3315, 0.29 ) }
    dend_13 { pt3dadd( -39.3729, -62.6702, 16.4894, 0.96 ) }
    dend_13 { pt3dadd( -39.9064, -63.0919, 17.0524, 0.37 ) }
    dend_13 { pt3dadd( -40.4264, -63.5585, 17.6598, 0.37 ) }
    dend_13 { pt3dadd( -40.4587, -63.5905, 17.6958, 0.37 ) }
    dend_13 { pt3dadd( -41.4536, -64.48, 18.6843, 0.37 ) }
    dend_13 { pt3dadd( -41.6048, -64.6114, 18.8308, 0.74 ) }
    dend_13 { pt3dadd( -41.8111, -64.7788, 19.0216, 0.29 ) }
    dend_13 { pt3dadd( -42.6809, -65.4146, 19.7688, 0.29 ) }
    dend_13 { pt3dadd( -43.1909, -65.7625, 20.2488, 0.29 ) }
    dend_13 { pt3dadd( -49.0283, -70.7059, 23.4832, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 26/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -26.6629, -52.5157, 9.85956, 0.81 ) }
    dend_12 { pt3dadd( -26.8355, -52.3649, 9.90106, 0.81 ) }
    dend_12 { pt3dadd( -27.1682, -52.079, 9.99042, 0.44 ) }
    dend_12 { pt3dadd( -27.7591, -51.4938, 10.1602, 0.44 ) }
    dend_12 { pt3dadd( -28.5805, -50.6804, 10.3964, 0.44 ) }
    dend_12 { pt3dadd( -29.213, -50.054, 10.5782, 0.44 ) }
    dend_12 { pt3dadd( -30.23, -49.0468, 10.8705, 0.22 ) }
    dend_12 { pt3dadd( -30.6119, -48.6633, 10.9946, 0.22 ) }
    dend_12 { pt3dadd( -31.2647, -48.0321, 11.2479, 0.22 ) }
    dend_12 { pt3dadd( -38.1424, -41.5632, 13.2334, 0.22 ) }
    dend_12 { pt3dadd( -46.3013, -36.714, 14.4554, 0.22 ) }
    dend_12 { pt3dadd( -53.1624, -30.2421, 16.4872, 0.22 ) }
    dend_12 { pt3dadd( -58.7623, -22.6313, 18.7613, 0.22 ) }
    dend_12 { pt3dadd( -64.9395, -15.6493, 21.3487, 0.22 ) }
    dend_12 { pt3dadd( -72.3429, -9.5992, 22.504, 0.22 ) }
    dend_12 { pt3dadd( -79.9993, -3.763, 22.5165, 0.22 ) }
    dend_12 { pt3dadd( -88.5402, 0.509477, 22.2756, 0.22 ) }
    dend_12 { pt3dadd( -97.339, 4.11572, 22.8056, 0.22 ) }
    dend_12 { pt3dadd( -106.328, 6.44715, 24.7283, 0.22 ) }
    dend_12 { pt3dadd( -115.425, 7.67628, 27.0473, 0.22 ) }
    dend_12 { pt3dadd( -124.535, 8.64483, 29.4236, 0.22 ) }
    dend_12 { pt3dadd( -132.968, 10.2805, 33.4082, 0.22 ) }
    dend_12 { pt3dadd( -140.95, 10.7213, 38.4726, 0.22 ) }
    dend_12 { pt3dadd( -148.642, 12.3388, 43.7498, 0.22 ) }
    dend_12 { pt3dadd( -156.007, 15.2306, 48.9838, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.53831, -82.6743, 7.8703, 0.37 ) }
    dend_6 { pt3dadd( -12.1586, -82.7203, 6.78677, 0.37 ) }
    dend_6 { pt3dadd( -12.3895, -82.7248, 6.73331, 0.37 ) }
    dend_6 { pt3dadd( -13.8405, -82.7733, 6.46021, 0.37 ) }
    dend_6 { pt3dadd( -14.8031, -82.8262, 6.37484, 0.22 ) }
    dend_6 { pt3dadd( -15.918, -82.8874, 6.27598, 0.22 ) }
    dend_6 { pt3dadd( -17.5606, -82.9775, 6.1303, 0.22 ) }
    dend_6 { pt3dadd( -18.0035, -83.0054, 6.17036, 0.44 ) }
    dend_6 { pt3dadd( -19.0817, -83.098, 6.2664, 0.44 ) }
    dend_6 { pt3dadd( -20.6989, -83.2848, 6.39774, 0.22 ) }
    dend_6 { pt3dadd( -31.3746, -82.1182, 3.29019, 0.22 ) }
    dend_6 { pt3dadd( -41.6107, -82.4708, -1.17968, 0.22 ) }
    dend_6 { pt3dadd( -52.2342, -80.7493, -4.23085, 0.22 ) }
    dend_6 { pt3dadd( -62.9517, -78.8377, -6.81259, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 65/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -8.53831, -82.6743, 7.8703, 1.33 ) }
    dend_5 { pt3dadd( -7.9839, -83.5197, 8.05369, 1.33 ) }
    dend_5 { pt3dadd( -7.4403, -84.4477, 8.19663, 0.88 ) }
    dend_5 { pt3dadd( -7.41325, -84.5094, 8.20598, 0.88 ) }
    dend_5 { pt3dadd( -6.847, -86.108, 8.43749, 0.66 ) }
    dend_5 { pt3dadd( -6.24595, -88.1389, 8.71669, 0.66 ) }
    dend_5 { pt3dadd( -5.67425, -90.3751, 9.01837, 0.66 ) }
    dend_5 { pt3dadd( -5.24699, -92.356, 9.27817, 0.66 ) }
    dend_5 { pt3dadd( -4.75655, -95.0111, 9.61802, 0.96 ) }
    dend_5 { pt3dadd( -4.56682, -96.3277, 9.77425, 1.69 ) }
    dend_5 { pt3dadd( -4.45705, -97.4923, 9.90036, 1.25 ) }
    dend_5 { pt3dadd( -4.38551, -98.6836, 10.0206, 0.96 ) }
    dend_5 { pt3dadd( -4.38049, -98.7631, 10.0286, 0.96 ) }
    dend_5 { pt3dadd( -4.21541, -100.33, 10.2399, 0.59 ) }
    dend_5 { pt3dadd( -3.80633, -103.041, 10.6436, 0.59 ) }
    dend_5 { pt3dadd( -3.3184, -105.651, 11.0866, 0.96 ) }
    dend_5 { pt3dadd( -2.76044, -108.301, 11.5764, 1.11 ) }
    dend_5 { pt3dadd( -2.4111, -109.952, 11.8928, 0.74 ) }
    dend_5 { pt3dadd( -2.08674, -111.494, 12.2045, 0.74 ) }
    dend_5 { pt3dadd( -1.91527, -112.412, 12.3846, 0.52 ) }
    dend_5 { pt3dadd( -1.71383, -113.616, 12.6193, 0.52 ) }
    dend_5 { pt3dadd( -1.69683, -113.785, 12.6467, 0.52 ) }
    dend_5 { pt3dadd( -1.70458, -115.448, 12.7592, 0.52 ) }
    dend_5 { pt3dadd( -1.71248, -115.553, 12.7574, 0.52 ) }
    dend_5 { pt3dadd( -1.91336, -117.445, 12.6994, 0.44 ) }
    dend_5 { pt3dadd( -1.92183, -117.536, 12.7016, 0.44 ) }
    dend_5 { pt3dadd( -1.96788, -118.395, 12.7924, 0.44 ) }
    dend_5 { pt3dadd( -1.99192, -120.882, 13.179, 0.44 ) }
    dend_5 { pt3dadd( -1.98989, -120.96, 13.1968, 0.44 ) }
    dend_5 { pt3dadd( -1.93191, -122.259, 13.5526, 0.88 ) }
    dend_5 { pt3dadd( -1.82319, -124.522, 14.2648, 0.88 ) }
    dend_5 { pt3dadd( -1.80661, -126.994, 15.0698, 0.88 ) }
    dend_5 { pt3dadd( -1.81022, -127.069, 15.0949, 0.88 ) }
    dend_5 { pt3dadd( -2.0001, -128.405, 15.5725, 1.25 ) }
    dend_5 { pt3dadd( -2.18793, -129.338, 15.8949, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_5 { pt3dadd( -2.48821, -130.447, 16.2574, 0.96 ) }
    dend_5 { pt3dadd( -2.98319, -131.839, 16.7023, 0.52 ) }
    dend_5 { pt3dadd( -3.33366, -132.77, 16.916, 0.52 ) }
    dend_5 { pt3dadd( -3.84904, -134.213, 17.1373, 1.18 ) }
    dend_5 { pt3dadd( -4.27484, -135.482, 17.2279, 1.18 ) }
    dend_5 { pt3dadd( -4.30148, -135.569, 17.2305, 1.18 ) }
    dend_5 { pt3dadd( -4.64019, -136.932, 17.1873, 0.96 ) }
    dend_5 { pt3dadd( -4.97132, -138.595, 17.0209, 0.96 ) }
    dend_5 { pt3dadd( -5.11278, -139.529, 16.8742, 1.25 ) }
    dend_5 { pt3dadd( -5.1945, -140.603, 16.6679, 1.03 ) }
    dend_5 { pt3dadd( -5.19544, -140.693, 16.6519, 1.03 ) }
    dend_5 { pt3dadd( -5.13727, -141.868, 16.4752, 0.88 ) }
    dend_5 { pt3dadd( -5.00678, -143.217, 16.3698, 0.88 ) }
    dend_5 { pt3dadd( -4.84986, -144.479, 16.3648, 0.59 ) }
    dend_5 { pt3dadd( -4.64179, -146.065, 16.4078, 0.52 ) }
    dend_5 { pt3dadd( -4.56469, -146.66, 16.4414, 0.52 ) }
    dend_5 { pt3dadd( -4.54647, -146.848, 16.4576, 0.52 ) }
    dend_5 { pt3dadd( -4.43896, -148.497, 16.6699, 0.52 ) }
    dend_5 { pt3dadd( -4.4406, -148.608, 16.6886, 0.52 ) }
    dend_5 { pt3dadd( -4.59714, -150.024, 16.9597, 0.74 ) }
    dend_5 { pt3dadd( -4.61139, -150.101, 16.9733, 0.74 ) }
    dend_5 { pt3dadd( -4.81725, -151.246, 17.1529, 0.81 ) }
    dend_5 { pt3dadd( -4.92302, -151.909, 17.2468, 0.81 ) }
    dend_5 { pt3dadd( -5.06179, -152.92, 17.3593, 0.29 ) }
    dend_5 { pt3dadd( -5.16145, -153.743, 17.4503, 0.29 ) }
    dend_5 { pt3dadd( -5.16923, -153.834, 17.4608, 0.29 ) }
    dend_5 { pt3dadd( -5.2162, -155.004, 17.5957, 0.29 ) }
    dend_5 { pt3dadd( -5.21475, -155.095, 17.6061, 0.29 ) }
    dend_5 { pt3dadd( -5.10997, -156.279, 17.737, 0.29 ) }
    dend_5 { pt3dadd( -4.95019, -157.301, 17.7984, 0.29 ) }
    dend_5 { pt3dadd( -4.85729, -157.783, 17.818, 0.88 ) }
    dend_5 { pt3dadd( -4.70112, -158.511, 17.8437, 0.88 ) }
    dend_5 { pt3dadd( -4.65026, -158.739, 17.851, 0.88 ) }
    dend_5 { pt3dadd( -4.50181, -159.587, 17.9245, 0.59 ) }
    dend_5 { pt3dadd( -4.28705, -160.929, 18.0888, 0.59 ) }
    dend_5 { pt3dadd( -4.27859, -161.019, 18.1013, 0.59 ) }
    dend_5 { pt3dadd( -4.19663, -163.114, 18.4396, 0.59 ) }
    dend_5 { pt3dadd( -4.19187, -164.026, 18.6, 0.29 ) }
    dend_5 { pt3dadd( -4.24161, -166.005, 18.9591, 0.29 ) }
    dend_5 { pt3dadd( -4.25701, -166.251, 19.0045, 0.29 ) }
    dend_5 { pt3dadd( -4.45043, -168.139, 19.385, 0.29 ) }
    dend_5 { pt3dadd( -4.701, -169.979, 19.7191, 0.37 ) }
    dend_5 { pt3dadd( -4.84622, -170.79, 19.846, 1.18 ) }
    dend_5 { pt3dadd( -5.12195, -172.189, 20.0277, 1.33 ) }
    dend_5 { pt3dadd( -5.35129, -173.326, 20.1294, 0.74 ) }
    dend_5 { pt3dadd( -5.68178, -174.854, 20.2499, 0.52 ) }
    dend_5 { pt3dadd( -5.94643, -176.015, 20.3252, 0.52 ) }
    dend_5 { pt3dadd( -6.151, -176.887, 20.3609, 0.52 ) }
    dend_5 { pt3dadd( -6.17163, -176.976, 20.3637, 0.52 ) }
    dend_5 { pt3dadd( -6.43198, -178.197, 20.3875, 0.52 ) }
    dend_5 { pt3dadd( -6.47757, -178.444, 20.3891, 0.52 ) }
    dend_5 { pt3dadd( -6.63286, -179.347, 20.3887, 0.52 ) }
    dend_5 { pt3dadd( -6.74729, -180.017, 20.4113, 0.88 ) }
    dend_5 { pt3dadd( -6.90448, -180.94, 20.4553, 1.03 ) }
    dend_5 { pt3dadd( -7.06704, -181.943, 20.5157, 0.59 ) }
    dend_5 { pt3dadd( -7.07901, -182.022, 20.5216, 0.59 ) }
    dend_5 { pt3dadd( -7.24676, -183.669, 20.6278, 0.29 ) }
    dend_5 { pt3dadd( -7.30601, -184.834, 20.6978, 0.29 ) }
    dend_5 { pt3dadd( -7.30363, -184.939, 20.7038, 0.29 ) }
    dend_5 { pt3dadd( -7.18959, -186.121, 20.7693, 0.29 ) }
    dend_5 { pt3dadd( -7.15576, -186.37, 20.7653, 0.29 ) }
    dend_5 { pt3dadd( -6.99818, -187.449, 20.6739, 0.29 ) }
    dend_5 { pt3dadd( -6.98684, -187.527, 20.6609, 0.29 ) }
    dend_5 { pt3dadd( -6.90331, -188.521, 20.4415, 0.29 ) }
    dend_5 { pt3dadd( -6.90298, -188.599, 20.4237, 0.29 ) }
    dend_5 { pt3dadd( -7.0, -190.116, 20.1113, 0.29 ) }
    dend_5 { pt3dadd( -7.04468, -190.464, 20.0582, 0.29 ) }
    dend_5 { pt3dadd( -7.22673, -191.538, 19.9346, 0.29 ) }
    dend_5 { pt3dadd( -7.33028, -192.154, 19.8822, 1.03 ) }
    dend_5 { pt3dadd( -7.46833, -193.012, 19.8378, 1.47 ) }
    dend_5 { pt3dadd( -7.61179, -194.101, 19.8292, 0.37 ) }
    dend_5 { pt3dadd( -7.79999, -195.754, 19.9223, 0.37 ) }
    dend_5 { pt3dadd( -7.80992, -195.833, 19.9276, 0.37 ) }
    dend_5 { pt3dadd( -7.91674, -196.6, 19.9863, 0.81 ) }
    dend_5 { pt3dadd( -8.02304, -197.258, 20.0416, 0.88 ) }
    dend_5 { pt3dadd( -8.13125, -197.834, 20.086, 0.88 ) }
    dend_5 { pt3dadd( -8.39603, -199.123, 20.1797, 0.22 ) }
    dend_5 { pt3dadd( -8.67179, -200.436, 20.2799, 0.22 ) }
    dend_5 { pt3dadd( -8.68822, -200.525, 20.2868, 0.22 ) }
    dend_5 { pt3dadd( -8.76046, -200.934, 20.3176, 0.37 ) }
    dend_5 { pt3dadd( -8.88109, -201.794, 20.3833, 0.37 ) }
    dend_5 { pt3dadd( -9.01735, -203.167, 20.4883, 0.29 ) }
    dend_5 { pt3dadd( -9.01963, -203.259, 20.4956, 0.29 ) }
    dend_5 { pt3dadd( -8.97066, -204.681, 20.6242, 0.29 ) }
    dend_5 { pt3dadd( -8.96014, -204.84, 20.6417, 0.29 ) }
    dend_5 { pt3dadd( -8.79463, -206.487, 20.8499, 0.22 ) }
    dend_5 { pt3dadd( -8.72313, -207.067, 20.9294, 0.66 ) }
    dend_5 { pt3dadd( -8.6111, -208.027, 21.0653, 0.81 ) }
    dend_5 { pt3dadd( -8.53365, -208.788, 21.1754, 0.96 ) }
    dend_5 { pt3dadd( -8.46059, -209.665, 21.3442, 0.37 ) }
    dend_5 { pt3dadd( -8.45354, -209.743, 21.3619, 0.37 ) }
    dend_5 { pt3dadd( -8.31417, -211.202, 21.7189, 0.15 ) }
    dend_5 { pt3dadd( -8.26898, -211.796, 21.8609, 0.74 ) }
    dend_5 { pt3dadd( -8.24648, -212.61, 22.0404, 0.74 ) }
    dend_5 { pt3dadd( -8.27684, -213.91, 22.2926, 0.22 ) }
    dend_5 { pt3dadd( -8.34831, -214.931, 22.4596, 0.22 ) }
    dend_5 { pt3dadd( -8.45681, -215.802, 22.582, 0.22 ) }
    dend_5 { pt3dadd( -8.57835, -216.42, 22.6507, 0.59 ) }
    dend_5 { pt3dadd( -8.78837, -217.255, 22.7084, 0.59 ) }
    dend_5 { pt3dadd( -8.99259, -217.877, 22.7164, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_5 { pt3dadd( -9.06917, -218.048, 22.7062, 0.22 ) }
    dend_5 { pt3dadd( -9.47093, -218.776, 22.6701, 0.22 ) }
    dend_5 { pt3dadd( -9.65047, -219.077, 22.6662, 0.44 ) }
    dend_5 { pt3dadd( -9.89171, -219.499, 22.6699, 0.44 ) }
    dend_5 { pt3dadd( -9.92513, -219.583, 22.6749, 0.44 ) }
    dend_5 { pt3dadd( -10.2092, -220.572, 22.7609, 0.22 ) }
    dend_5 { pt3dadd( -10.2668, -220.898, 22.7576, 0.22 ) }
    dend_5 { pt3dadd( -10.3179, -221.605, 22.693, 0.22 ) }
    dend_5 { pt3dadd( -10.3228, -221.774, 22.6701, 0.22 ) }
    dend_5 { pt3dadd( -10.3323, -223.852, 22.3202, 0.22 ) }
    dend_5 { pt3dadd( -10.3311, -223.963, 22.2988, 0.22 ) }
    dend_5 { pt3dadd( -10.2387, -225.731, 21.9017, 0.22 ) }
    dend_5 { pt3dadd( -10.1233, -227.59, 21.4366, 0.22 ) }
    dend_5 { pt3dadd( -10.097, -227.926, 21.3399, 0.52 ) }
    dend_5 { pt3dadd( -10.0919, -228.001, 21.315, 0.52 ) }
    dend_5 { pt3dadd( -10.0783, -228.439, 21.1133, 0.52 ) }
    dend_5 { pt3dadd( -11.3236, -239.762, 20.2951, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 17/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 51.9734, -75.2738, 8.65539, 0.44 ) }
    dend_43 { pt3dadd( 51.8261, -75.8197, 8.69563, 0.44 ) }
    dend_43 { pt3dadd( 51.8714, -75.9493, 8.70784, 0.44 ) }
    dend_43 { pt3dadd( 52.0995, -76.5216, 8.76413, 0.44 ) }
    dend_43 { pt3dadd( 52.2345, -76.847, 8.79531, 0.44 ) }
    dend_43 { pt3dadd( 52.5482, -77.5796, 8.85947, 0.44 ) }
    dend_43 { pt3dadd( 52.5757, -77.6423, 8.8646, 0.44 ) }
    dend_43 { pt3dadd( 54.0543, -80.7935, 9.06235, 0.44 ) }
    dend_43 { pt3dadd( 54.0856, -80.8544, 9.06616, 0.44 ) }
    dend_43 { pt3dadd( 54.3063, -81.2478, 9.09131, 1.33 ) }
    dend_43 { pt3dadd( 54.8617, -82.1087, 9.14506, 1.4 ) }
    dend_43 { pt3dadd( 55.1139, -82.4402, 9.18561, 0.37 ) }
    dend_43 { pt3dadd( 55.1575, -82.4915, 9.19442, 0.37 ) }
    dend_43 { pt3dadd( 55.8067, -83.1063, 9.3351, 0.29 ) }
    dend_43 { pt3dadd( 55.8565, -83.1503, 9.34596, 0.29 ) }
    dend_43 { pt3dadd( 57.2541, -84.2539, 9.63055, 0.29 ) }
    dend_43 { pt3dadd( 58.5833, -85.2112, 9.87149, 0.29 ) }
    dend_43 { pt3dadd( 58.638, -85.2489, 9.88043, 0.29 ) }
    dend_43 { pt3dadd( 60.951, -86.7887, 10.2242, 0.29 ) }
    dend_43 { pt3dadd( 61.0806, -86.8697, 10.2439, 0.29 ) }
    dend_43 { pt3dadd( 62.6101, -87.7792, 10.4717, 0.52 ) }
    dend_43 { pt3dadd( 64.1978, -88.6533, 10.6896, 0.29 ) }
    dend_43 { pt3dadd( 64.7873, -88.9498, 10.7554, 0.59 ) }
    dend_43 { pt3dadd( 65.2656, -89.1658, 10.8137, 0.59 ) }
    dend_43 { pt3dadd( 66.6549, -89.691, 11.0086, 0.44 ) }
    dend_43 { pt3dadd( 66.8423, -89.7587, 11.036, 0.44 ) }
    dend_43 { pt3dadd( 67.623, -90.1104, 11.0932, 0.29 ) }
    dend_43 { pt3dadd( 67.7421, -90.1702, 11.096, 0.29 ) }
    dend_43 { pt3dadd( 68.6186, -90.6323, 11.0974, 0.29 ) }
    dend_43 { pt3dadd( 68.8012, -90.7357, 11.0919, 0.29 ) }
    dend_43 { pt3dadd( 69.6131, -91.2407, 11.0296, 0.29 ) }
    dend_43 { pt3dadd( 73.3199, -93.6862, 10.7112, 0.29 ) }
    dend_43 { pt3dadd( 73.3823, -93.7302, 10.705, 0.29 ) }
    dend_43 { pt3dadd( 81.5332, -98.6823, 11.2872, 0.29 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 51/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 51.9734, -75.2738, 8.65539, 0.52 ) }
    dend_40 { pt3dadd( 51.8215, -75.0966, 8.65124, 0.52 ) }
    dend_40 { pt3dadd( 51.7648, -75.0418, 8.65625, 0.52 ) }
    dend_40 { pt3dadd( 50.9684, -74.3387, 8.7674, 0.37 ) }
    dend_40 { pt3dadd( 49.723, -73.3269, 8.95324, 0.37 ) }
    dend_40 { pt3dadd( 48.7099, -72.546, 9.05988, 0.59 ) }
    dend_40 { pt3dadd( 47.5558, -71.7207, 9.01041, 0.59 ) }
    dend_40 { pt3dadd( 46.2893, -70.8667, 8.81818, 0.22 ) }
    dend_40 { pt3dadd( 46.2339, -70.8317, 8.80499, 0.22 ) }
    dend_40 { pt3dadd( 45.0417, -70.1975, 8.43133, 0.22 ) }
    dend_40 { pt3dadd( 44.2592, -69.8458, 8.11325, 0.22 ) }
    dend_40 { pt3dadd( 42.1788, -68.9659, 7.0182, 0.22 ) }
    dend_40 { pt3dadd( 41.9269, -68.8596, 6.84772, 0.66 ) }
    dend_40 { pt3dadd( 41.8715, -68.8318, 6.80168, 0.66 ) }
    dend_40 { pt3dadd( 41.0873, -68.4516, 6.11261, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 66/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 84.715, -118.029, 2.20501, 0.29 ) }
    dend_38 { pt3dadd( 90.6024, -127.708, 1.02173, 0.29 ) }
    dend_38 { pt3dadd( 96.5667, -137.403, 1.13954, 0.29 ) }
    dend_38 { pt3dadd( 102.873, -146.853, 1.426, 0.29 ) }
    dend_38 { pt3dadd( 108.737, -156.518, 2.67525, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 71/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 84.715, -118.029, 2.20501, 0.74 ) }
    dend_37 { pt3dadd( 89.014, -125.179, 1.2812, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 73/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -49.0283, -70.7059, 23.4832, 0.37 ) }
    dend_15 { pt3dadd( -53.7444, -76.1622, 30.7651, 0.37 ) }
    dend_15 { pt3dadd( -58.3751, -82.9955, 36.9689, 0.37 ) }
    dend_15 { pt3dadd( -62.5209, -89.4453, 43.8436, 0.37 ) }
    dend_15 { pt3dadd( -66.8505, -96.1727, 50.357, 0.37 ) }
    dend_15 { pt3dadd( -72.3636, -102.065, 56.7225, 0.37 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 79/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -49.0283, -70.7059, 23.4832, 0.29 ) }
    dend_14 { pt3dadd( -57.9457, -77.2145, 24.7277, 0.37 ) }
    dend_14 { pt3dadd( -65.4037, -85.2335, 27.0393, 0.37 ) }
    dend_14 { pt3dadd( -73.5489, -91.4324, 31.2647, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 83/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -62.9517, -78.8377, -6.81259, 0.37 ) }
    dend_10 { pt3dadd( -66.8814, -78.6082, -8.60619, 0.37 ) }
    dend_10 { pt3dadd( -70.6276, -78.7674, -10.7616, 0.37 ) }
    dend_10 { pt3dadd( -74.3573, -79.8628, -12.6829, 0.37 ) }
    dend_10 { pt3dadd( -78.4386, -80.9251, -13.6966, 0.37 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -62.9517, -78.8377, -6.81259, 0.29 ) }
    dend_7 { pt3dadd( -72.9444, -78.1495, -7.34406, 0.37 ) }
    dend_7 { pt3dadd( -82.8837, -78.2327, -6.00884, 0.37 ) }
    dend_7 { pt3dadd( -92.6687, -77.3179, -3.99413, 0.37 ) }
    dend_7 { pt3dadd( -101.739, -75.0715, -0.293145, 0.37 ) }
    dend_7 { pt3dadd( -109.419, -71.5651, 5.22076, 0.37 ) }
    dend_7 { pt3dadd( -115.495, -66.2448, 11.3829, 0.37 ) }
    dend_7 { pt3dadd( -121.419, -62.4358, 18.6158, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 96/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 41.0873, -68.4516, 6.11261, 0.37 ) }
    dend_42 { pt3dadd( 41.1572, -68.6623, 6.09184, 0.37 ) }
    dend_42 { pt3dadd( 41.9185, -70.698, 5.73944, 0.37 ) }
    dend_42 { pt3dadd( 41.9879, -70.8728, 5.70381, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_42 { pt3dadd( 42.9573, -73.3156, 5.20582, 0.37 ) }
    dend_42 { pt3dadd( 42.9893, -73.3963, 5.18937, 0.37 ) }
    dend_42 { pt3dadd( 44.2892, -76.6716, 4.52166, 0.37 ) }
    dend_42 { pt3dadd( 44.3296, -76.7643, 4.50224, 0.37 ) }
    dend_42 { pt3dadd( 44.9502, -77.9379, 4.20913, 0.37 ) }
    dend_42 { pt3dadd( 51.2961, -91.1567, 3.60938, 0.37 ) }
    dend_42 { pt3dadd( 55.5512, -105.25, 3.81264, 0.37 ) }
    dend_42 { pt3dadd( 59.816, -119.294, 4.74673, 0.37 ) }
    dend_42 { pt3dadd( 63.9525, -132.793, 8.52387, 0.37 ) }
    dend_42 { pt3dadd( 68.4535, -146.19, 12.2276, 0.37 ) }
    dend_42 { pt3dadd( 70.8719, -160.023, 16.3178, 0.37 ) }
    dend_42 { pt3dadd( 72.0795, -174.619, 17.8392, 0.37 ) }
    dend_42 { pt3dadd( 75.5826, -188.782, 19.6186, 0.37 ) }
    dend_42 { pt3dadd( 79.1883, -202.829, 21.8976, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 14/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 41.0873, -68.4516, 6.11261, 0.37 ) }
    dend_41 { pt3dadd( 41.0029, -68.4277, 6.06273, 0.37 ) }
    dend_41 { pt3dadd( 40.9382, -68.4144, 6.03584, 0.37 ) }
    dend_41 { pt3dadd( 39.8627, -68.2219, 5.64926, 0.22 ) }
    dend_41 { pt3dadd( 39.5087, -68.1367, 5.54278, 0.22 ) }
    dend_41 { pt3dadd( 38.5924, -67.8812, 5.2971, 0.22 ) }
    dend_41 { pt3dadd( 38.5165, -67.8562, 5.27975, 0.22 ) }
    dend_41 { pt3dadd( 37.4068, -67.4522, 5.07101, 0.22 ) }
    dend_41 { pt3dadd( 37.2649, -67.3977, 5.04946, 0.22 ) }
    dend_41 { pt3dadd( 36.328, -67.0229, 4.93783, 0.22 ) }
    dend_41 { pt3dadd( 36.078, -66.9192, 4.90303, 0.22 ) }
    dend_41 { pt3dadd( 35.0429, -66.4646, 4.74559, 0.22 ) }
    dend_41 { pt3dadd( 34.9244, -66.4107, 4.72735, 0.22 ) }
    dend_41 { pt3dadd( 33.1572, -65.5733, 4.4382, 0.22 ) }
    dend_41 { pt3dadd( 32.9752, -65.4875, 4.40641, 0.22 ) }
    dend_41 { pt3dadd( 31.2575, -64.6823, 4.09198, 0.22 ) }
    dend_41 { pt3dadd( 31.1863, -64.6427, 4.08033, 0.22 ) }
    dend_41 { pt3dadd( 29.9956, -63.8807, 3.91525, 0.22 ) }
    dend_41 { pt3dadd( 29.7591, -63.6851, 3.89459, 0.22 ) }
    dend_41 { pt3dadd( 29.1334, -63.0086, 3.88292, 0.22 ) }
    dend_41 { pt3dadd( 28.8233, -62.6168, 3.89336, 0.22 ) }
    dend_41 { pt3dadd( 27.9041, -61.2455, 3.97487, 0.22 ) }
    dend_41 { pt3dadd( 27.8227, -61.1174, 3.9837, 0.22 ) }
    dend_41 { pt3dadd( 26.8273, -59.4238, 4.12337, 0.22 ) }
    dend_41 { pt3dadd( 26.7816, -59.3379, 4.12971, 0.22 ) }
    dend_41 { pt3dadd( 26.2039, -58.1508, 4.20464, 0.22 ) }
    dend_41 { pt3dadd( 26.015, -57.7512, 4.21652, 0.22 ) }
    dend_41 { pt3dadd( 25.532, -56.7486, 4.19635, 0.22 ) }
    dend_41 { pt3dadd( 25.4631, -56.6057, 4.19019, 0.22 ) }
    dend_41 { pt3dadd( 24.9371, -55.589, 4.12078, 0.22 ) }
    dend_41 { pt3dadd( 24.9004, -55.5251, 4.1157, 0.22 ) }
    dend_41 { pt3dadd( 24.59, -55.0278, 4.07177, 0.29 ) }
    dend_41 { pt3dadd( 24.3049, -54.6307, 4.01462, 0.29 ) }
    dend_41 { pt3dadd( 23.6081, -53.8042, 3.85383, 0.29 ) }
    dend_41 { pt3dadd( 23.1414, -53.3128, 3.74905, 0.29 ) }
    dend_41 { pt3dadd( 22.7406, -52.9397, 3.6655, 0.29 ) }
    dend_41 { pt3dadd( 22.6648, -52.8719, 3.64938, 0.29 ) }
    dend_41 { pt3dadd( 21.8216, -52.145, 3.46764, 0.29 ) }
    dend_41 { pt3dadd( 21.7591, -52.092, 3.4541, 0.29 ) }
    dend_41 { pt3dadd( 20.9839, -51.4306, 3.29204, 0.29 ) }
    dend_41 { pt3dadd( 20.7406, -51.2232, 3.24617, 0.29 ) }
    dend_41 { pt3dadd( 20.1133, -50.7123, 3.14911, 0.29 ) }
    dend_41 { pt3dadd( 19.7261, -50.4086, 3.10727, 0.44 ) }
    dend_41 { pt3dadd( 19.3839, -50.1209, 3.09634, 0.52 ) }
    dend_41 { pt3dadd( 18.9886, -49.7569, 3.08625, 0.52 ) }
    dend_41 { pt3dadd( 18.9376, -49.7045, 3.08539, 0.52 ) }
    dend_41 { pt3dadd( 18.6648, -49.3878, 3.08368, 0.29 ) }
    dend_41 { pt3dadd( 18.3948, -49.0367, 3.08057, 0.29 ) }
    dend_41 { pt3dadd( 17.684, -48.0724, 3.06528, 0.29 ) }
    dend_41 { pt3dadd( 17.6374, -48.0158, 3.06336, 0.29 ) }
    dend_41 { pt3dadd( 17.2013, -47.522, 3.03993, 0.29 ) }
    dend_41 { pt3dadd( 17.0182, -47.3125, 3.02506, 0.29 ) }
    dend_41 { pt3dadd( 16.7943, -47.0628, 3.00156, 0.29 ) }
    dend_41 { pt3dadd( 16.648, -46.8968, 2.98528, 0.29 ) }
    dend_41 { pt3dadd( 15.9001, -46.0698, 2.89791, 0.29 ) }
    dend_41 { pt3dadd( 15.7451, -45.9008, 2.88138, 0.29 ) }
    dend_41 { pt3dadd( 15.1593, -45.2408, 2.82623, 0.29 ) }
    dend_41 { pt3dadd( 14.9156, -44.9567, 2.80719, 0.29 ) }
    dend_41 { pt3dadd( 13.9961, -43.8387, 2.75276, 0.29 ) }
    dend_41 { pt3dadd( 13.8994, -43.7146, 2.74866, 0.29 ) }
    dend_41 { pt3dadd( 13.3472, -42.9647, 2.7344, 0.52 ) }
    dend_41 { pt3dadd( 13.002, -42.4942, 2.72437, 0.52 ) }
    dend_41 { pt3dadd( 12.7534, -42.1323, 2.71952, 0.52 ) }
    dend_41 { pt3dadd( 12.5776, -41.836, 2.71618, 0.37 ) }
    dend_41 { pt3dadd( 11.8474, -40.3735, 2.60761, 0.37 ) }
    dend_41 { pt3dadd( 11.8186, -40.3055, 2.60015, 0.37 ) }
    dend_41 { pt3dadd( 11.619, -39.6884, 2.5187, 0.52 ) }
    dend_41 { pt3dadd( 11.3509, -38.715, 2.37162, 0.81 ) }
    dend_41 { pt3dadd( 11.1266, -37.863, 2.23306, 0.81 ) }
    dend_41 { pt3dadd( 10.794, -36.7416, 2.05127, 0.37 ) }
    dend_41 { pt3dadd( 10.7418, -36.5929, 2.02906, 0.37 ) }
    dend_41 { pt3dadd( 10.4446, -35.8488, 1.92526, 0.37 ) }
    dend_41 { pt3dadd( 10.2923, -35.5422, 1.88112, 0.37 ) }
    dend_41 { pt3dadd( 9.80958, -34.6875, 1.75288, 0.29 ) }
    dend_41 { pt3dadd( 9.08046, -33.4589, 1.59018, 0.29 ) }
    dend_41 { pt3dadd( 7.93113, -31.6026, 1.39273, 0.29 ) }
    dend_41 { pt3dadd( 7.86492, -31.4955, 1.38118, 0.29 ) }
    dend_41 { pt3dadd( 6.8715, -29.8842, 1.20364, 0.29 ) }
    dend_41 { pt3dadd( 6.81862, -29.7931, 1.19693, 0.29 ) }
    dend_41 { pt3dadd( 6.26637, -28.7561, 1.15808, 0.29 ) }
    dend_41 { pt3dadd( 6.12065, -28.4607, 1.16436, 0.29 ) }
    dend_41 { pt3dadd( 5.68347, -27.5278, 1.24419, 0.29 ) }
    dend_41 { pt3dadd( 5.56756, -27.2446, 1.27861, 0.29 ) }
    dend_41 { pt3dadd( 5.15703, -26.061, 1.46554, 0.29 ) }
    dend_41 { pt3dadd( 5.12916, -25.9814, 1.47658, 0.29 ) }
    dend_41 { pt3dadd( 4.45765, -24.0595, 1.7194, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_41 { pt3dadd( 4.40756, -23.909, 1.73626, 0.29 ) }
    dend_41 { pt3dadd( 4.00333, -22.659, 1.85739, 0.29 ) }
    dend_41 { pt3dadd( 3.95738, -22.5065, 1.86924, 0.29 ) }
    dend_41 { pt3dadd( 3.20344, -19.7514, 2.01539, 0.29 ) }
    dend_41 { pt3dadd( 3.16713, -19.5959, 2.02425, 0.29 ) }
    dend_41 { pt3dadd( 3.02038, -18.8326, 2.07091, 0.29 ) }
    dend_41 { pt3dadd( 2.98814, -18.6762, 2.08026, 0.29 ) }
    dend_41 { pt3dadd( 2.72236, -17.5434, 2.11691, 0.29 ) }
    dend_41 { pt3dadd( 2.66551, -17.316, 2.11963, 0.29 ) }
    dend_41 { pt3dadd( 2.18224, -15.5037, 2.10292, 0.29 ) }
    dend_41 { pt3dadd( 2.09174, -15.1995, 2.09665, 0.29 ) }
    dend_41 { pt3dadd( 1.60795, -13.701, 2.05899, 0.29 ) }
    dend_41 { pt3dadd( 1.15737, -12.4805, 2.10048, 0.29 ) }
    dend_41 { pt3dadd( 1.09187, -12.3176, 2.1064, 0.29 ) }
    dend_41 { pt3dadd( 0.577645, -11.1227, 2.15786, 0.29 ) }
    dend_41 { pt3dadd( 0.508408, -10.98, 2.16639, 0.29 ) }
    dend_41 { pt3dadd( -0.332782, -9.19705, 2.33363, 0.29 ) }
    dend_41 { pt3dadd( -0.983495, -7.66836, 2.61309, 0.29 ) }
    dend_41 { pt3dadd( -6.09542, 1.49577, 1.48659, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 19/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -121.419, -62.4358, 18.6158, 0.37 ) }
    dend_9 { pt3dadd( -128.808, -59.9415, 22.5523, 0.37 ) }
    dend_9 { pt3dadd( -136.318, -58.4313, 26.7048, 0.37 ) }
    dend_9 { pt3dadd( -143.414, -56.602, 31.4442, 0.37 ) }
    dend_9 { pt3dadd( -150.786, -56.0559, 36.0314, 0.37 ) }
    dend_9 { pt3dadd( -157.738, -56.3641, 41.2425, 0.37 ) }
    dend_9 { pt3dadd( -163.826, -56.3476, 47.4628, 0.37 ) }
    dend_9 { pt3dadd( -170.621, -57.4802, 52.7601, 0.37 ) }
    dend_9 { pt3dadd( -177.683, -57.6623, 57.8282, 0.37 ) }
    dend_9 { pt3dadd( -184.628, -57.6907, 63.0623, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 29/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -121.419, -62.4358, 18.6158, 0.29 ) }
    dend_8 { pt3dadd( -129.22, -63.2993, 27.4186, 0.37 ) }
    dend_8 { pt3dadd( -136.409, -65.7165, 36.4375, 0.37 ) }
    dend_8 { pt3dadd( -145.351, -68.7058, 43.5131, 0.37 ) }
    dend_8 { pt3dadd( -154.565, -70.7368, 50.5732, 0.37 ) }
    dend_8 { pt3dadd( -163.443, -72.7129, 58.0649, 0.37 ) }
    dend_8 { pt3dadd( -171.131, -74.8534, 66.7356, 0.37 ) }
    dend_8 { pt3dadd( -179.019, -75.1636, 75.5069, 0.37 ) }
    dend_8 { pt3dadd( -186.218, -75.5757, 84.8531, 0.37 ) }
    dend_8 { pt3dadd( -193.813, -75.1049, 93.8954, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_69 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_25 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_77 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_74 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_72 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_71 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_60 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_55 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_48 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_47 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_26 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_22 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_2 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_79 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_76 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_75 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_65 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_64 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_62 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_61 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_56 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_51 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_33 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_32 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_29 OneSecGrp_SectionRef_54.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_28 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_11 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_4 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_80 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_67 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_53 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_36 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_20 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_19 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_12 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_6 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_5 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_38 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_15 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_7 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_42 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_41 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_9 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_8 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_69 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_24 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_45 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_58 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_70 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_59 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_18 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_63 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_46 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_49 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_73 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_34 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_68 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_35 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_39 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_13 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_40 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_14 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_57 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_43 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_78 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_10 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_37 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_54 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_81 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_66 OneSecGrp_SectionRef_63.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_69, dend_69, dend_69, dend_69, dend_69, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_0, dend_0, dend_0, axon_0, axon_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_37, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_81 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 5
    dend_21 nseg = 3
    dend_77 nseg = 3
    dend_74 nseg = 3
    dend_72 nseg = 9
    dend_71 nseg = 7
    dend_60 nseg = 3
    dend_55 nseg = 3
    dend_50 nseg = 3
    dend_48 nseg = 3
    dend_47 nseg = 5
    dend_31 nseg = 5
    dend_26 nseg = 3
    dend_23 nseg = 3
    dend_22 nseg = 3
    dend_2 nseg = 7
    dend_79 nseg = 3
    dend_76 nseg = 3
    dend_75 nseg = 3
    dend_65 nseg = 5
    dend_64 nseg = 9
    dend_62 nseg = 3
    dend_61 nseg = 3
    dend_56 nseg = 7
    dend_51 nseg = 7
    dend_44 nseg = 5
    dend_33 nseg = 5
    dend_32 nseg = 3
    dend_29 nseg = 3
    dend_28 nseg = 7
    dend_17 nseg = 7
    dend_11 nseg = 3
    dend_4 nseg = 3
    dend_80 nseg = 3
    dend_67 nseg = 3
    dend_53 nseg = 3
    dend_36 nseg = 3
    dend_20 nseg = 9
    dend_19 nseg = 7
    dend_12 nseg = 7
    dend_6 nseg = 3
    dend_5 nseg = 9
    dend_38 nseg = 3
    dend_15 nseg = 3
    dend_7 nseg = 3
    dend_42 nseg = 7
    dend_41 nseg = 5
    dend_9 nseg = 3
    dend_8 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_NBC_35ea10d24d_0_0


