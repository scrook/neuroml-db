// Cell: cACint209_L4_SBC_12caedd28c_0_0
/*
{
  "id" : "cACint209_L4_SBC_12caedd28c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.13028, -11.6226, 1.65672, 3.3543", "1.89603, -10.6065, 1.5057, 5.84145", "1.66177, -9.59039, 1.35468, 8.98469", "1.42751, -8.57427, 1.20366, 10.1954", "1.19325, -7.55816, 1.05265, 11.9017", "0.958989, -6.54205, 0.901631, 13.2141", "0.72473, -5.52593, 0.750614, 14.1624", "0.490471, -4.50982, 0.599597, 14.8105", "0.256212, -3.49371, 0.44858, 15.133", "0.0219531, -2.47759, 0.297563, 15.4087", "-0.212306, -1.46148, 0.146546, 15.7558", "-0.446565, -0.445366, -0.00447116, 16.1589", "-0.680824, 0.570747, -0.155488, 16.481", "-0.915083, 1.58686, -0.306505, 16.3666", "-1.14934, 2.60297, -0.457522, 16.058", "-1.3836, 3.61909, -0.608539, 15.598", "-1.61786, 4.6352, -0.759556, 14.7754", "-1.85212, 5.65131, -0.910573, 13.4156", "-2.08638, 6.66743, -1.06159, 9.84057", "-2.32064, 7.68354, -1.21261, 7.78253", "-2.5549, 8.69965, -1.36362, 4.37258" ]
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "5.64816, 4.60987, -4.16268, 1.4", "6.43715, 5.42174, -4.47654, 1.4", "7.40919, 6.35221, -4.86418, 1.55", "8.32148, 7.19536, -5.25045, 1.77", "9.28029, 8.04839, -5.64519, 1.77", "10.2181, 8.86892, -6.0571, 1.55", "11.3868, 9.86026, -6.61963, 1.25", "12.0717, 10.4007, -6.98727, 1.4", "12.9415, 11.0722, -7.43951, 1.4", "13.7555, 11.7142, -7.84934, 1.77", "14.5583, 12.3857, -8.20637, 2.28", "15.3231, 13.056, -8.45602, 2.28", "16.2026, 13.8371, -8.69535, 2.36", "17.3578, 14.8903, -8.94014, 1.84", "18.4632, 15.9162, -9.07723, 1.11", "19.4368, 16.8476, -9.11055, 1.33", "20.783, 18.144, -8.95764, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999975618502873
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "5.20816, 3.88837, 3.65732, 2.28", "5.57825, 4.37084, 4.46212, 2.28", "6.65145, 5.76079, 6.64824, 2.28", "7.05631, 6.28774, 7.4166, 2.06", "8.15527, 7.73862, 9.41095, 2.14", "8.64379, 8.37951, 10.2696, 1.47", "9.55449, 9.51952, 11.805, 0.96", "9.83222, 9.85297, 12.259, 1.4", "10.1839, 10.2422, 12.7762, 1.4", "10.7369, 10.7876, 13.559, 1.55", "11.2902, 11.2711, 14.2878, 1.69", "12.1083, 11.9164, 15.4213, 1.47", "12.653, 12.3554, 16.1951, 1.33", "13.185, 12.8301, 16.9771, 1.84", "13.5647, 13.2118, 17.5307, 2.06", "14.1138, 13.8871, 18.2883, 2.28", "14.8933, 15.0982, 19.2546, 1.99", "15.4292, 16.1511, 19.8165, 1.47", "15.8609, 17.1356, 20.1641, 1.47", "16.2034, 18.0815, 20.3581, 1.33", "16.6321, 19.5406, 20.4826, 1.62", "16.8839, 20.6892, 20.4401, 1.55", "17.0423, 21.6463, 20.3279, 1.33", "17.1736, 22.5711, 20.1983, 1.18", "17.2989, 23.4585, 20.1097, 0.96", "17.4206, 24.2046, 20.079, 0.96", "17.6519, 25.2896, 20.1324, 0.96", "18.0162, 26.6082, 20.3239, 1.18", "18.3144, 27.4422, 20.5038, 1.4", "18.7468, 28.4491, 20.7687, 1.4", "19.06, 29.0999, 20.953, 1.47", "19.4854, 29.9638, 21.1866, 1.25", "19.8254, 30.6654, 21.3221, 1.03", "20.3322, 31.8102, 21.4157, 0.96", "20.8048, 32.9612, 21.3866, 0.81", "21.1004, 33.7772, 21.2896, 0.66", "21.4005, 34.6951, 21.1645, 0.74", "21.7958, 36.0258, 20.9774, 0.59", "22.0733, 37.0012, 20.8538, 0.44", "22.3652, 38.0313, 20.7592, 0.44", "22.6991, 39.1451, 20.691, 0.59", "23.023, 40.1401, 20.6841, 0.88", "23.3991, 41.2447, 20.7293, 1.77", "23.6382, 41.9468, 20.8245, 1.92", "23.9565, 42.8841, 20.9894, 1.4", "24.2768, 43.8074, 21.1865, 1.18", "24.6855, 44.8235, 21.4372, 0.52", "24.9438, 45.3807, 21.5812, 0.66", "25.4995, 46.4151, 21.9156, 0.66", "25.6764, 46.7039, 22.0251, 0.88", "26.2522, 47.5297, 22.3848, 0.66", "26.7344, 48.1535, 22.6853, 0.52", "27.2675, 48.7469, 22.9598, 0.81", "27.7165, 49.212, 23.1804, 0.81", "28.2702, 49.7827, 23.422, 0.74", "28.56, 50.106, 23.5571, 0.52", "29.084, 50.7411, 23.8037, 0.29", "29.6508, 51.5101, 24.0621, 0.29", "30.2977, 52.4714, 24.3432, 0.44", "30.984, 53.5662, 24.5957, 0.59", "31.6791, 54.7586, 24.8062, 0.59", "32.1367, 55.5697, 24.9149, 0.88", "32.4442, 56.1333, 24.9679, 1.11", "32.7167, 56.6494, 24.9947, 1.33", "33.3242, 57.7341, 25.0018, 1.62", "33.7835, 58.5392, 25.0029, 2.06", "34.1313, 59.1247, 24.9951, 2.43", "34.5742, 59.8668, 25.0011, 2.58", "34.9316, 60.4703, 25.0239, 2.58", "35.2955, 61.1008, 25.0706, 2.36", "35.6038, 61.673, 25.135, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999975618502873,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "6.55816, -6.17364, -1.59268, 0.96", "6.94493, -6.33592, -1.7336, 0.96", "7.52113, -6.63796, -2.03831, 0.74", "8.04205, -6.96108, -2.39937, 0.81", "8.62942, -7.29257, -3.11151, 0.81", "8.92589, -7.43576, -3.58702, 1.25", "9.3098, -7.5761, -4.24476, 1.03", "9.82445, -7.71472, -5.21251, 1.03", "10.3374, -7.82365, -6.21448, 1.25", "11.8366, -8.1054, -9.04931, 1.25", "12.3998, -8.21704, -10.0323, 1.25", "12.8462, -8.3245, -10.7125, 0.74", "13.3923, -8.47656, -11.3901, 0.59", "14.0149, -8.69148, -12.0299, 0.81", "14.8567, -9.07003, -12.7194, 0.96", "15.6141, -9.50523, -13.2268, 1.18", "16.5089, -10.0424, -13.8659, 0.96", "17.588, -10.7039, -14.6906, 1.03", "18.5318, -11.2717, -15.4729, 1.03", "19.0457, -11.5684, -15.9101, 0.88", "19.9937, -12.0876, -16.7277, 0.88", "20.9602, -12.5887, -17.5326, 0.88", "21.6076, -12.9208, -18.036, 0.74", "22.8942, -13.554, -18.9523, 0.59", "23.4951, -13.8182, -19.3822, 0.81", "24.0094, -14.0198, -19.8003, 0.81", "24.7462, -14.2824, -20.439, 0.37", "25.2844, -14.4639, -20.9094, 0.37", "26.0418, -14.7037, -21.569, 1.18", "27.1508, -15.0373, -22.5085, 1.69", "28.7602, -15.5475, -23.8666, 0.37", "29.3474, -15.7726, -24.3434, 0.59", "30.1683, -16.1581, -24.9823, 0.22", "30.8787, -16.5669, -25.5179, 1.03", "31.2518, -16.8218, -25.7863, 1.25", "31.6612, -17.1476, -26.0494, 1.25", "32.5915, -17.9462, -26.6977, 0.22", "33.1393, -18.4188, -27.1294, 1.03", "33.8056, -19.0122, -27.7116, 1.55", "34.1368, -19.3124, -28.0215, 1.77", "34.6185, -19.7579, -28.4852, 1.4", "35.7862, -20.7783, -29.6323, 0.37", "36.1129, -21.0258, -29.9369, 0.37", "36.6991, -21.4051, -30.431, 0.59", "37.239, -21.6555, -30.7765, 0.81", "37.8357, -21.8552, -31.0909, 0.81", "38.7117, -22.0572, -31.4816, 1.18", "39.5609, -22.1896, -31.7995, 0.88", "40.8118, -22.3143, -32.2494, 0.22", "42.7508, -22.4087, -32.9355, 0.22", "43.5141, -22.4354, -33.1956, 0.81", "44.0067, -22.454, -33.3581, 1.25", "44.6412, -22.4949, -33.5788, 1.4", "45.3837, -22.5636, -33.8616, 1.03", "46.235, -22.7084, -34.2379, 0.22", "47.4821, -23.064, -34.8846, 0.22", "47.9118, -23.225, -35.1183, 0.96", "48.5256, -23.4889, -35.4822, 1.18", "48.9132, -23.6657, -35.7628, 1.33", "50.371, -24.3806, -37.016, 0.22", "50.7489, -24.577, -37.395, 0.74", "51.1368, -24.7893, -37.8249, 1.33", "51.8543, -25.1832, -38.6612, 1.55", "53.0413, -25.8362, -40.1005, 0.66", "53.6492, -26.1673, -40.8664, 0.29", "54.1469, -26.4263, -41.5059, 0.52", "54.9435, -26.8246, -42.5045, 0.29", "55.6859, -27.1739, -43.4386, 0.96", "56.2719, -27.4469, -44.1774, 0.96", "57.3203, -27.9171, -45.4388, 0.29", "57.9684, -28.1746, -46.2304, 0.29", "58.602, -28.4082, -47.0203, 1.03", "59.4866, -28.7157, -48.1003, 1.03", "60.4625, -29.0652, -49.1754, 0.37", "61.1287, -29.3326, -49.9397, 0.22", "61.9568, -29.6889, -50.9098, 0.88", "62.5139, -29.9578, -51.5376, 0.88", "63.6919, -30.5868, -52.8104, 0.22", "64.9258, -31.303, -54.1038, 1.03", "67.3508, -32.9239, -56.641, 0.22", "67.907, -33.3595, -57.2427, 0.44", "69.0187, -34.3524, -58.4621, 0.29", "69.7258, -35.0211, -59.2533, 0.81", "70.128, -35.4421, -59.7297, 0.81", "71.5074, -37.0457, -61.3527, 0.22", "72.6724, -38.5519, -62.5174, 0.66", "73.0622, -39.1194, -62.9457, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999975618502873,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.56184, -3.97013, -7.16268, 0.66", "-8.15275, -4.23572, -6.92168, 0.66", "-8.80896, -4.50539, -6.71364, 0.74", "-10.1534, -5.04165, -6.39493, 0.59", "-10.7944, -5.31583, -6.28268, 0.59", "-11.6011, -5.66968, -6.18169, 0.74", "-12.5107, -6.06751, -6.09759, 0.96", "-13.0753, -6.32594, -6.08196, 1.4", "-13.7119, -6.63047, -6.07704, 1.4", "-15.1042, -7.35267, -6.10951, 1.25", "-16.2827, -8.03281, -6.12763, 0.74", "-17.3915, -8.72353, -6.1206, 0.37", "-18.4549, -9.44291, -6.08061, 0.37", "-19.5873, -10.2252, -6.02276, 1.03", "-20.1423, -10.6133, -5.98234, 1.4", "-20.8452, -11.1115, -5.93773, 1.33", "-21.6602, -11.7105, -5.89481, 0.74", "-22.5863, -12.3753, -5.87395, 0.22", "-23.103, -12.6968, -5.89739, 0.22", "-23.4942, -12.9096, -5.96332, 0.22", "-24.7693, -13.5193, -6.31755, 1.25", "-25.1231, -13.6615, -6.46508, 1.55", "-25.5341, -13.8137, -6.68052, 1.55", "-26.5005, -14.1526, -7.23212, 1.18", "-27.2677, -14.4684, -7.66967, 1.33", "-28.0856, -14.8461, -8.12214, 1.55", "-29.3301, -15.5082, -8.76994, 0.74", "-30.8773, -16.4774, -9.49907, 0.44", "-31.4577, -16.9306, -9.74873, 0.44", "-32.5988, -18.0314, -10.1712, 0.29", "-33.1449, -18.6422, -10.3324, 0.59", "-33.7195, -19.3678, -10.4479, 0.81", "-34.2084, -20.0674, -10.5083, 0.37", "-35.151, -21.5444, -10.5762, 0.29", "-35.8378, -22.6616, -10.6099, 0.74", "-36.386, -23.564, -10.6527, 1.25", "-36.9476, -24.4531, -10.7333, 1.77", "-37.5004, -25.3079, -10.837, 2.06", "-38.0054, -26.1228, -10.948, 1.77", "-38.6426, -27.2275, -11.2136, 0.66", "-39.1813, -28.2308, -11.563, 0.29", "-39.6408, -29.1467, -11.9549, 0.22", "-40.0081, -29.9064, -12.3191, 0.22", "-40.3671, -30.6663, -12.7552, 0.22", "-41.3645, -32.649, -14.1075, 0.96", "-41.6309, -33.125, -14.4686, 1.4", "-41.8803, -33.5235, -14.7722, 1.55", "-42.3203, -34.1615, -15.2862, 0.96", "-43.1531, -35.1963, -16.1966, 0.37", "-44.0377, -36.1514, -17.0252, 0.15", "-45.0191, -37.1634, -17.8325, 0.15", "-45.5031, -37.6794, -18.2179, 1.18", "-46.0866, -38.3249, -18.6607, 1.69", "-46.2753, -38.5484, -18.794, 1.92", "-47.0463, -39.5683, -19.2656, 1.18", "-47.542, -40.3753, -19.5854, 0.59", "-48.2625, -42.0094, -20.1447, 0.22", "-48.534, -42.8672, -20.4105, 0.22", "-48.6774, -43.5309, -20.6232, 0.96", "-48.7538, -44.0939, -20.8193, 1.25", "-48.7997, -44.9463, -21.1733, 1.4", "-48.8065, -46.572, -21.9242, 0.22", "-48.777, -47.2287, -22.2707, 1.03", "-48.7157, -48.5641, -23.0361, 1.18", "-48.7068, -49.0817, -23.3493, 0.88", "-48.7326, -50.5687, -24.291, 0.22", "-48.7731, -51.2875, -24.7686, 0.66", "-48.8257, -51.7896, -25.1214, 0.81", "-48.9407, -52.5633, -25.6346, 0.52", "-49.0475, -53.0634, -25.9423, 0.22", "-49.2072, -53.6059, -26.3126, 0.66", "-49.495, -54.2306, -26.7918, 0.81", "-49.749, -54.6994, -27.1596, 0.81", "-49.9368, -55.0273, -27.4066, 1.03", "-50.5066, -56.0044, -28.1282, 0.88", "-51.1091, -57.0277, -28.8628, 0.52", "-52.7661, -59.7749, -30.673, 0.22", "-53.6069, -61.0979, -31.4947, 0.22", "-54.1603, -61.9332, -31.9844, 1.03", "-54.5577, -62.5205, -32.2936, 1.25", "-54.9914, -63.1373, -32.5579, 1.18", "-56.5168, -65.1784, -33.2157, 0.15", "-57.1749, -65.9327, -33.4598, 0.15", "-57.5729, -66.3371, -33.6549, 0.88", "-58.2145, -66.9364, -34.0902, 1.18", "-58.9549, -67.5771, -34.7, 0.52", "-59.5779, -68.1387, -35.5107, 0.22", "-60.8643, -69.327, -37.7666, 0.88", "-61.724, -70.1179, -39.381, 1.18", "-62.6346, -70.9264, -41.1299, 0.88", "-63.2772, -71.4734, -42.379, 0.66", "-65.9451, -73.7568, -47.6148, 0.29", "-67.1198, -74.7523, -49.849, 0.37", "-68.0203, -75.508, -51.4555, 0.22", "-68.394, -75.8014, -52.0333, 0.66", "-68.961, -76.2267, -52.7996, 0.88", "-70.5807, -77.3891, -54.695, 0.22", "-71.3814, -77.9115, -55.4103, 0.66", "-71.9432, -78.2881, -55.8876, 0.66", "-73.7867, -79.5798, -57.5996, 0.22", "-74.5087, -80.0982, -58.2852, 0.44", "-75.2496, -80.6177, -58.9719, 0.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999975618502873,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.08184, 2.70862, -1.34268, 0.96", "-8.08184, 2.70862, -1.34268, 0.96", "-8.25865, 2.91249, -1.40635, 0.96", "-8.6916, 3.30967, -1.53736, 0.66", "-9.04803, 3.5693, -1.62526, 0.66", "-9.58511, 3.89907, -1.74186, 1.33", "-9.99731, 4.1274, -1.82097, 1.84", "-10.4733, 4.35731, -1.89989, 1.84", "-11.123, 4.61681, -2.00186, 1.25", "-11.7397, 4.81525, -2.09084, 0.81", "-12.2305, 4.93971, -2.14022, 0.74", "-12.7617, 5.05882, -2.17809, 0.74", "-13.2678, 5.17009, -2.19891, 0.88", "-13.7618, 5.277, -2.21792, 0.88", "-14.058, 5.34385, -2.23747, 0.88", "-14.6577, 5.4758, -2.2884, 1.33", "-15.0699, 5.55395, -2.32658, 1.55", "-15.471, 5.61406, -2.3695, 1.55", "-16.0623, 5.68716, -2.44448, 1.33", "-16.7276, 5.75102, -2.53657, 0.74", "-17.1217, 5.77828, -2.60035, 0.52", "-17.7304, 5.80483, -2.71975, 0.52", "-18.1896, 5.80898, -2.80864, 0.88", "-18.6194, 5.81001, -2.88733, 0.88", "-19.0608, 5.81325, -2.9652, 0.96", "-19.4653, 5.81508, -3.01181, 0.96", "-19.7935, 5.81245, -3.02552, 0.81", "-20.298, 5.80581, -3.01433, 0.59", "-20.7518, 5.79981, -2.96987, 0.52", "-21.3104, 5.79317, -2.87872, 0.44", "-21.9471, 5.78724, -2.75358, 0.37", "-22.8077, 5.76877, -2.55099, 1.25", "-23.2039, 5.7553, -2.43941, 1.99", "-23.5776, 5.73638, -2.31553, 2.28", "-23.913, 5.71053, -2.18419, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999975618502873
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.541846, -10.8731, 0.0273224, 3.32", "-0.541846, -10.8731, 0.0273224, 3.32", "-0.318648, -12.3621, 0.0273224, 3.32", "-0.047963, -14.168, 0.0273224, 3.61", "-0.015557, -14.3842, 0.0273224, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999975618502873
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.5549, 8.69965, -1.36362, 1.01124", "-5.92467, 23.3162, -1.36362, 1.01124", "-9.29444, 37.9328, -1.36362, 1.01124" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "20.783, 18.144, -8.95764, 0.29", "21.6112, 18.3645, -8.60282, 0.29", "22.0668, 18.5176, -8.34406, 0.29", "22.5818, 18.7511, -8.03468, 0.88", "23.0683, 19.0217, -7.74193, 1.18", "23.4855, 19.2941, -7.47319, 0.96", "24.0475, 19.722, -7.10249, 0.44", "24.7125, 20.3856, -6.64204, 0.59", "25.3354, 21.1056, -6.27008, 0.96", "25.6312, 21.5034, -6.09571, 1.4", "25.9857, 22.0251, -5.89489, 1.55", "26.3518, 22.582, -5.70129, 1.55", "26.7695, 23.217, -5.47776, 1.18", "27.3272, 23.9829, -5.21683, 0.59", "27.9171, 24.7387, -4.93151, 0.59", "28.2033, 25.0734, -4.78802, 0.59", "28.5958, 25.4878, -4.59012, 0.44", "29.1617, 26.0223, -4.24288, 0.44", "29.6461, 26.4329, -3.90926, 0.52", "30.0792, 26.7732, -3.59273, 0.81", "30.5781, 27.1287, -3.24791, 0.96", "31.2059, 27.5488, -2.81721, 0.66", "32.0373, 28.0851, -2.24931, 0.88", "32.349, 28.2774, -2.04057, 0.88", "32.6786, 28.4775, -1.8149, 0.88", "33.4457, 28.9438, -1.30463, 0.66", "34.3289, 29.5034, -0.78242, 0.52", "34.9521, 29.9105, -0.464796, 1.25", "35.3757, 30.1996, -0.286176, 1.47", "35.7132, 30.4376, -0.150963, 1.47", "36.1915, 30.7776, 0.0270045, 0.52", "36.9556, 31.3277, 0.281434, 0.22", "37.5194, 31.747, 0.466203, 0.88", "37.8118, 31.9761, 0.545697, 1.47", "38.1224, 32.2292, 0.617032, 1.55", "38.4816, 32.5284, 0.684428, 1.18", "39.2919, 33.2254, 0.766411, 0.22", "40.1454, 33.9865, 0.801052, 0.22", "40.8143, 34.5933, 0.806748, 0.96", "41.1171, 34.8588, 0.801831, 1.25", "41.4815, 35.1724, 0.787486, 1.33", "42.5085, 36.0394, 0.767484, 0.37", "43.1017, 36.5141, 0.800202, 1.4", "43.5402, 36.8498, 0.835408, 1.99", "43.8803, 37.0994, 0.894775, 2.21", "44.2047, 37.3344, 0.971831, 2.21", "45.2329, 38.0563, 1.33308, 0.66", "45.8914, 38.4836, 1.68781, 0.66" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "20.783, 18.144, -8.95764, 0.81", "21.2247, 19.6596, -9.06375, 0.81", "21.6049, 20.6454, -9.12197, 1.11", "22.0382, 21.6425, -9.17583, 1.11", "22.5034, 22.6732, -9.23004, 0.81", "22.9653, 23.7039, -9.28484, 0.81", "23.4662, 24.8418, -9.36846, 0.44", "24.2688, 26.5774, -9.54134, 0.44", "24.6591, 27.4283, -9.64783, 1.18", "25.0093, 28.218, -9.76665, 2.28", "25.2413, 28.7665, -9.863, 2.5", "25.5722, 29.6086, -10.0324, 2.28", "25.8758, 30.4989, -10.2063, 1.55", "25.9657, 30.8226, -10.2638, 1.55", "26.2902, 32.0129, -10.4328, 0.81", "26.533, 32.8878, -10.532, 1.03", "26.7055, 33.5172, -10.5841, 1.03", "26.9785, 34.4984, -10.6173, 0.88", "27.1735, 35.1995, -10.6282, 0.88", "27.4772, 36.2946, -10.6465, 0.66", "27.6897, 37.0717, -10.6616, 0.74", "27.9485, 38.0145, -10.6905, 0.29", "28.2075, 38.9352, -10.7384, 0.29", "28.4816, 39.9683, -10.8379, 0.74", "28.6395, 40.6256, -10.9219, 0.96", "28.774, 41.2737, -11.0237, 1.18", "28.86, 41.7322, -11.1207, 1.18", "28.947, 42.2425, -11.2567, 0.88", "29.0716, 43.1128, -11.5347, 0.66", "29.191, 44.0147, -11.8347, 0.37", "29.2735, 44.6332, -12.0506, 0.52", "29.3943, 45.5061, -12.3733, 0.52", "29.5431, 46.5033, -12.7422, 0.59", "29.659, 47.1978, -12.9993, 1.03", "29.8413, 48.1161, -13.3365, 2.21", "29.9229, 48.5062, -13.479, 2.43", "30.0622, 49.1944, -13.7351, 2.58" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "35.6038, 61.673, 25.135, 0.29", "36.517, 64.2245, 23.0339, 0.29", "36.9663, 65.4263, 22.0818, 0.29", "37.1926, 66.0502, 21.6643, 0.29", "37.429, 66.7461, 21.2722, 0.74", "37.6506, 67.4148, 20.871, 0.96", "37.8544, 68.0451, 20.4885, 0.96", "38.149, 69.0099, 19.9791, 0.22", "38.76, 71.2245, 18.8034, 0.22", "39.0617, 72.4489, 18.2117, 1.77", "39.4411, 74.254, 17.4239, 1.92", "39.5226, 74.7289, 17.2482, 1.99", "39.6156, 75.4851, 16.9693, 1.47", "39.6997, 76.5122, 16.5897, 0.22", "39.7442, 77.6895, 16.173, 0.22", "39.7541, 78.3977, 15.9235, 0.66", "39.752, 79.103, 15.6996, 0.96", "39.7164, 80.9902, 14.9197, 0.22", "39.7005, 81.6654, 14.5902, 0.22", "39.6637, 82.7108, 14.0425, 1.77", "39.6242, 83.4492, 13.6459, 2.06", "39.5938, 83.8631, 13.427, 2.06", "39.385, 86.0334, 12.348, 0.22", "39.2691, 86.9245, 11.9578, 0.22", "39.0527, 88.3876, 11.3632, 1.55", "38.9817, 88.8351, 11.1899, 1.99", "38.8939, 89.4868, 10.8754, 1.99", "38.6643, 91.4698, 9.81845, 0.22", "38.5316, 92.8544, 9.05787, 0.22", "38.44, 94.0778, 8.34615, 1.47", "38.4118, 94.7939, 7.92264, 1.69", "38.4356, 99.0616, 5.60145, 0.15", "38.48, 99.8011, 5.20889, 0.15", "38.5596, 100.483, 4.81796, 0.59", "38.6116, 100.8, 4.62852, 0.59", "38.7732, 101.705, 4.02288, 0.22", "39.039, 103.146, 3.21421, 0.22", "39.4586, 105.468, 2.11061, 1.47", "39.7282, 106.967, 1.37826, 1.84", "39.8277, 107.502, 1.11203, 2.43", "40.6205, 111.601, -0.913384, 0.22", "41.4491, 115.752, -2.93874, 0.22", "41.7204, 116.996, -3.50616, 1.4", "41.9355, 117.892, -3.84452, 1.62", "42.2475, 119.026, -4.24331, 0.29", "42.4683, 119.663, -4.49438, 0.52", "42.7882, 120.35, -4.78703, 0.66", "43.363, 121.383, -5.34338, 0.22", "43.8428, 122.238, -5.83573, 1.47", "44.5571, 123.558, -6.59178, 1.69", "45.8612, 126.093, -8.0349, 0.29", "46.2516, 126.897, -8.49816, 0.44", "47.1339, 128.88, -9.6841, 0.22", "47.6917, 130.313, -10.5707, 0.66", "47.872, 130.867, -10.8955, 0.66", "48.019, 131.495, -11.2364, 1.11", "48.1146, 132.238, -11.644, 1.33", "48.1868, 133.498, -12.4005, 1.47", "48.1567, 134.208, -12.8986, 1.47", "48.0082, 135.578, -13.8373, 0.22", "47.9154, 136.207, -14.2705, 0.22", "47.8058, 136.803, -14.6654, 0.74", "47.6731, 137.372, -15.0147, 1.03", "47.1825, 139.117, -16.0107, 0.22", "46.9386, 139.833, -16.4143, 0.22", "46.7661, 140.262, -16.6932, 0.66", "46.6031, 140.636, -16.9644, 0.96", "45.942, 142.098, -18.0435, 0.22", "45.6006, 142.823, -18.5597, 0.44", "45.4243, 143.18, -18.8053, 1.18", "44.8008, 144.391, -19.7688, 1.4", "44.5641, 144.824, -20.1596, 1.18" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "35.6038, 61.673, 25.135, 1.33", "36.0281, 62.2493, 25.3831, 1.33", "37.1318, 63.7123, 25.6995, 0.29", "38.1461, 65.0252, 25.8383, 1.18", "38.6857, 65.7124, 25.8799, 1.92", "39.265, 66.4747, 25.9302, 1.99", "39.6754, 67.0404, 25.9803, 1.62", "41.0102, 69.0451, 26.1516, 0.37", "41.4261, 69.7617, 26.2278, 0.37", "41.7356, 70.4209, 26.3128, 0.37", "42.1472, 71.6707, 26.5609, 0.52", "42.294, 72.5162, 26.8163, 0.59", "42.3495, 73.4501, 27.1943, 0.44", "42.3286, 74.1784, 27.5595, 0.44", "42.2973, 74.7487, 27.8265, 0.44", "42.2505, 75.6857, 28.2354, 0.29", "42.2066, 76.634, 28.621, 0.66", "42.191, 77.407, 28.909, 0.88", "42.1884, 77.8776, 29.0906, 0.88", "42.196, 78.5664, 29.3477, 0.74", "42.2265, 79.903, 29.8332, 0.29", "42.2477, 80.6098, 30.1025, 0.29", "42.2632, 81.4108, 30.4075, 0.29", "42.2417, 82.9875, 31.0688, 0.74", "42.1871, 83.9533, 31.4977, 1.84", "42.1445, 84.4793, 31.7418, 2.36", "42.0783, 85.4596, 32.1923, 2.36", "41.9878, 87.3479, 33.0592, 0.44", "41.9318, 88.5271, 33.6325, 0.44", "41.8838, 89.622, 34.1816, 0.44", "41.8608, 90.2491, 34.5148, 0.44", "41.8826, 92.0455, 35.4095, 2.06", "41.9202, 92.5827, 35.6418, 2.58", "42.0434, 93.4625, 35.9958, 2.58", "42.1079, 93.7685, 36.1199, 2.58", "42.3634, 94.6442, 36.6162, 1.62", "42.8013, 95.9823, 37.7659, 0.29", "43.0658, 96.7499, 38.583, 0.29", "43.374, 97.6745, 39.6492, 0.74", "43.6702, 98.6052, 40.7601, 0.96", "44.1662, 100.42, 42.8599, 1.25", "44.6527, 102.55, 45.2558, 1.69", "44.7263, 102.945, 45.6793, 2.21", "44.844, 103.635, 46.339, 2.21", "44.9949, 104.624, 47.1425, 1.18", "45.2215, 106.471, 48.3943, 0.22", "45.3074, 107.407, 48.9089, 0.22", "45.5076, 110.053, 50.1906, 1.25", "45.5443, 110.74, 50.527, 2.06", "45.5655, 111.586, 50.9403, 2.28", "45.5458, 112.484, 51.3801, 1.99", "45.5138, 112.868, 51.5778, 1.99", "45.3627, 113.896, 52.0608, 1.03", "45.1602, 114.863, 52.4872, 0.22", "45.0014, 115.601, 52.8308, 0.52", "44.911, 116.076, 53.0544, 0.66", "44.8269, 116.693, 53.373, 0.66", "44.7389, 117.448, 53.7913, 0.37", "44.6167, 119.002, 54.7571, 0.96", "44.5996, 119.554, 55.1399, 1.18", "44.604, 120.09, 55.529, 1.47", "44.6568, 120.96, 56.1646, 1.47" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-23.913, 5.71053, -2.18419, 1.18", "-25.6384, 5.97759, -1.19758, 1.18", "-26.6956, 6.14174, -0.783625, 0.29", "-27.8973, 6.32755, -0.473747, 0.29", "-28.7737, 6.45728, -0.383656, 0.52", "-29.2456, 6.53239, -0.325945, 0.74", "-29.7961, 6.62285, -0.229722, 0.88", "-30.6629, 6.77685, -0.149813, 0.88", "-30.9588, 6.82911, -0.111219, 0.88", "-32.2045, 7.02272, 0.151229, 0.29", "-33.4554, 7.17806, 0.552882, 0.29", "-34.5354, 7.28923, 0.986575, 1.25", "-35.0949, 7.33641, 1.25958, 1.77", "-35.4455, 7.36391, 1.44774, 2.21", "-35.9573, 7.40205, 1.71894, 2.21", "-36.6899, 7.45811, 2.09614, 1.92", "-37.4506, 7.51672, 2.44159, 1.4", "-38.7621, 7.6364, 3.01374, 0.29", "-39.835, 7.7528, 3.47671, 0.22", "-40.9097, 7.88059, 3.92431, 0.22", "-41.6317, 7.96978, 4.19319, 0.59", "-41.9238, 8.00488, 4.29389, 0.74", "-42.5537, 8.07318, 4.49691, 0.74", "-43.1216, 8.12218, 4.67791, 0.74", "-44.0148, 8.179, 4.98422, 0.22", "-44.7373, 8.21618, 5.24515, 0.29", "-45.595, 8.23902, 5.56977, 0.29", "-47.0237, 8.24401, 6.12461, 1.77", "-47.6464, 8.25325, 6.36843, 2.5", "-47.9906, 8.26634, 6.49899, 2.73", "-48.5816, 8.3004, 6.71629, 2.73", "-49.6103, 8.38307, 7.07049, 1.47", "-50.5898, 8.48517, 7.34744, 0.22", "-51.5643, 8.59953, 7.56475, 0.29", "-52.5687, 8.72688, 7.75218, 0.37", "-53.2156, 8.82291, 7.86323, 0.44", "-53.755, 8.91926, 7.95693, 0.44", "-54.6911, 9.12442, 8.11877, 0.22", "-55.2248, 9.24781, 8.21875, 0.88", "-55.5431, 9.32166, 8.28545, 1.47", "-56.0318, 9.44102, 8.3928, 1.62", "-56.5237, 9.57036, 8.49863, 1.69", "-57.1339, 9.71716, 8.62817, 1.33", "-57.3943, 9.76367, 8.68395, 1.33", "-58.9229, 9.95977, 9.01839, 0.22", "-59.7769, 10.0377, 9.21533, 0.37", "-60.1093, 10.0602, 9.2924, 0.37", "-60.8844, 10.1015, 9.46695, 0.22", "-62.3541, 10.1498, 9.81046, 0.22", "-63.0225, 10.1614, 9.9817, 0.22", "-64.1894, 10.1881, 10.2864, 1.62", "-64.6711, 10.2165, 10.4161, 2.14", "-65.2014, 10.2636, 10.5557, 2.36", "-65.8056, 10.347, 10.7058, 2.06", "-67.508, 10.6475, 11.0846, 0.22", "-69.2725, 10.9996, 11.4457, 0.22", "-70.8016, 11.3388, 11.7326, 1.47", "-71.3445, 11.4689, 11.8296, 2.14", "-72.0569, 11.6548, 11.947, 2.58", "-73.5592, 12.1172, 12.1562, 0.22", "-74.3456, 12.4071, 12.2596, 0.22", "-74.9519, 12.6716, 12.3462, 0.66", "-75.2665, 12.8295, 12.3934, 0.66", "-75.8784, 13.1695, 12.5045, 0.44", "-76.9138, 13.823, 12.7313, 0.22", "-77.5145, 14.2882, 12.8834, 0.22", "-78.3502, 15.0338, 13.1182, 1.33", "-78.5425, 15.2199, 13.1755, 1.77", "-78.8584, 15.5402, 13.2711, 1.77", "-79.2888, 15.9912, 13.3991, 1.47", "-80.271, 16.9656, 13.6802, 0.22", "-81.1947, 17.8524, 13.8936, 0.22", "-81.7725, 18.387, 14.0115, 1.77", "-82.1587, 18.7291, 14.0789, 2.06", "-82.6126, 19.1167, 14.1601, 1.77", "-83.9765, 20.2419, 14.3978, 0.15", "-85.4001, 21.3571, 14.6466, 0.15", "-86.4572, 22.1521, 14.8414, 1.33", "-86.79, 22.4054, 14.9067, 2.06", "-87.3645, 22.8463, 15.0221, 2.21", "-88.5959, 23.7936, 15.284, 0.22", "-89.456, 24.4546, 15.4844, 0.22", "-89.8909, 24.7584, 15.6037, 0.22", "-90.5532, 25.2015, 15.8015, 1.33", "-90.899, 25.4245, 15.9049, 1.99", "-91.3691, 25.7129, 16.0362, 2.21", "-91.7605, 25.9404, 16.1565, 2.21", "-93.0482, 26.6552, 16.5494, 0.22", "-93.6444, 26.9772, 16.7697, 0.22", "-94.0774, 27.2107, 16.9615, 0.74", "-94.4176, 27.4091, 17.1347, 0.96", "-94.873, 27.6811, 17.376, 0.96", "-95.4362, 28.0322, 17.6985, 0.37", "-96.4175, 28.7308, 18.3823, 0.59", "-96.7155, 28.9483, 18.6086, 1.33", "-97.1995, 29.3156, 19.0316, 1.33", "-106.33, 32.5223, 23.6018, 1.33" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-23.913, 5.71053, -2.18419, 0.52", "-24.8898, 6.57926, -3.10886, 0.52", "-25.1919, 6.85127, -3.40413, 0.37", "-25.6186, 7.2322, -3.81, 0.81", "-26.048, 7.61857, -4.20192, 0.96", "-26.5381, 8.07746, -4.67886, 0.66", "-26.9577, 8.47414, -5.08606, 0.88", "-27.3213, 8.84319, -5.46356, 0.88", "-27.57, 9.07812, -5.71604, 0.81", "-27.8575, 9.30476, -5.97816, 0.66", "-28.6281, 9.84507, -6.60466, 0.52", "-28.9215, 10.0341, -6.82702, 0.66", "-29.455, 10.349, -7.24275, 0.52", "-29.8733, 10.5781, -7.58113, 0.29", "-30.6738, 10.958, -8.18339, 1.62", "-31.2376, 11.2079, -8.57203, 2.43", "-31.6448, 11.3833, -8.82612, 2.73", "-32.3006, 11.676, -9.21934, 2.87", "-33.0829, 12.0471, -9.64824, 2.14", "-33.9991, 12.5138, -10.0798, 0.52", "-34.6644, 12.8765, -10.3332, 0.29", "-35.2063, 13.1801, -10.4924, 0.29", "-35.6777, 13.452, -10.6042, 0.74", "-36.1297, 13.713, -10.695, 0.96", "-37.1917, 14.3307, -10.9221, 0.22", "-37.5246, 14.5227, -11.0096, 0.88", "-38.0008, 14.7525, -11.1339, 1.33", "-38.428, 14.9299, -11.2387, 1.47", "-39.026, 15.1337, -11.3828, 1.84", "-39.4492, 15.2511, -11.4899, 1.84", "-40.7595, 15.5407, -11.8321, 0.29", "-41.9567, 15.7662, -12.1236, 0.29", "-42.8485, 15.9177, -12.3153, 1.25", "-43.4712, 16.0214, -12.4259, 1.84", "-44.0781, 16.1215, -12.5217, 1.84", "-45.2192, 16.3065, -12.6851, 0.22", "-45.897, 16.4131, -12.774, 0.22", "-47.1283, 16.6182, -12.9128, 0.22", "-48.1148, 16.7935, -12.9868, 1.4", "-48.5537, 16.8833, -12.9967, 1.99", "-49.0077, 16.9834, -12.9781, 2.28", "-49.373, 17.0744, -12.9358, 2.28", "-50.6208, 17.4082, -12.7262, 0.22", "-51.0663, 17.5214, -12.6181, 0.22", "-51.4997, 17.6227, -12.4932, 0.52", "-51.8404, 17.702, -12.3882, 0.52", "-52.8255, 17.9319, -12.0741, 0.22", "-53.9349, 18.2079, -11.722, 0.22", "-54.9246, 18.4617, -11.4251, 1.25", "-55.77, 18.6752, -11.1979, 2.28", "-56.2025, 18.7806, -11.0928, 2.5", "-56.7178, 18.9043, -10.9799, 2.5", "-57.9262, 19.2028, -10.7699, 0.22", "-59.4879, 19.6011, -10.5231, 0.22", "-59.9813, 19.7364, -10.456, 0.66", "-60.5084, 19.885, -10.3786, 0.81", "-60.7488, 19.9618, -10.3461, 0.88", "-62.336, 20.5515, -10.1487, 0.22", "-63.1199, 20.8909, -10.0505, 1.47", "-63.5483, 21.1056, -9.9973, 1.99", "-64.0275, 21.3646, -9.93457, 1.99", "-65.4932, 22.2557, -9.72493, 0.22", "-66.075, 22.6635, -9.64599, 0.22", "-66.8555, 23.3132, -9.55497, 0.22", "-67.1027, 23.5417, -9.5448, 0.44", "-67.4402, 23.865, -9.54651, 0.59", "-67.8462, 24.2694, -9.56518, 0.29", "-68.2385, 24.7041, -9.57642, 0.29", "-68.426, 24.9508, -9.59794, 1.03", "-68.721, 25.4725, -9.68701, 1.25", "-68.8001, 25.6342, -9.72775, 1.4" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-0.015557, -14.3842, 0.0273224, 1.4", "-1.04663, -14.4636, -0.989966, 1.4", "-1.71568, -14.511, -1.57177, 1.03", "-4.48923, -14.6452, -3.91393, 1.03", "-5.12559, -14.6426, -4.43069, 1.18", "-5.96774, -14.5863, -5.11649, 1.18", "-6.94235, -14.4547, -5.92861, 0.81", "-7.85382, -14.1835, -6.75851, 0.81", "-8.66963, -13.8055, -7.53916, 0.59", "-9.33427, -13.3346, -8.12604, 0.74", "-10.0043, -12.6867, -8.83338, 0.74", "-10.4644, -12.1471, -9.39325, 0.96", "-11.0943, -11.3579, -10.1572, 1.11", "-11.5367, -10.8084, -10.67, 1.11", "-12.2666, -9.97359, -11.4415, 1.03", "-13.3057, -8.91623, -12.5279, 0.88", "-14.422, -7.92531, -13.6203, 0.66", "-15.1108, -7.39229, -14.2965, 0.81", "-15.6901, -6.99214, -14.8773, 0.66", "-16.4927, -6.45828, -15.7014, 0.66", "-17.496, -5.77549, -16.8095, 0.88", "-17.7898, -5.54171, -17.1604, 1.18", "-18.4643, -4.8967, -18.0585, 1.18", "-18.8092, -4.49831, -18.5958, 1.33", "-19.4647, -3.59736, -19.7273, 0.59", "-20.0085, -2.70185, -20.7356, 0.59", "-20.3208, -2.0833, -21.3227, 0.59", "-20.559, -1.53024, -21.8278, 0.88", "-20.838, -0.785181, -22.4436, 1.03", "-21.0877, -0.0448488, -23.0259, 1.18", "-21.2633, 0.515255, -23.4698, 0.88", "-21.5231, 1.29656, -24.0792, 0.74", "-22.0365, 2.68477, -25.175, 0.52", "-22.361, 3.49842, -25.8159, 0.37", "-22.7548, 4.44438, -26.535, 0.37", "-22.9935, 5.00329, -26.9571, 0.59", "-23.2662, 5.63553, -27.447, 0.59", "-23.5039, 6.17499, -27.8661, 0.59", "-23.7292, 6.66294, -28.1909, 0.59" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.015557, -14.3842, 0.0273224, 3.68", "0.0371755, -14.9246, 0.0667783, 3.68", "0.0708128, -15.6491, 0.126896, 3.09", "0.0753238, -16.3807, 0.193187, 3.09", "0.0841197, -17.8072, 0.322447, 2.8", "0.0922537, -19.1265, 0.441982, 2.73", "0.098323, -20.1108, 0.531173, 2.5", "0.0633675, -21.1219, 0.636006, 2.8", "0.00466954, -22.037, 0.742598, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-9.29444, 37.9328, -1.36362, 0.385346", "-12.6642, 52.5494, -1.36362, 0.385346", "-16.034, 67.166, -1.36362, 0.385346" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "45.8914, 38.4836, 1.68781, 0.52", "46.858, 39.6117, 2.58827, 0.52", "47.5842, 40.4382, 3.29101, 1.18", "48.3559, 41.2734, 4.03946, 1.47", "49.0063, 41.972, 4.70864, 1.47", "49.8778, 42.8974, 5.592, 0.59", "50.4054, 43.4648, 6.15037, 1.11", "50.8279, 43.9246, 6.71359, 1.4", "51.1579, 44.3059, 7.25081, 1.4", "52.0219, 45.35, 8.78011, 0.74", "52.5043, 45.9471, 9.68969, 1.18", "53.2179, 46.8462, 11.1252, 1.47", "54.8489, 48.9523, 14.6019, 0.52", "55.4725, 49.7917, 15.9977, 1.25", "55.7777, 50.2244, 16.7466, 1.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "45.8914, 38.4836, 1.68781, 0.29", "44.6221, 39.1675, 2.02108, 0.29", "43.6626, 39.6995, 2.28676, 0.29", "42.84, 40.1555, 2.51452, 0.29", "41.7286, 40.7717, 2.82227, 0.96", "41.1986, 41.0656, 2.96902, 1.11", "40.7753, 41.3003, 3.08624, 1.11", "40.3432, 41.5547, 3.22694, 0.66", "31.9704, 44.301, 3.79445, 0.66", "23.2682, 45.6964, 2.99256, 0.66", "14.5069, 46.6164, 2.10015, 0.66" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "30.0622, 49.1944, -13.7351, 0.29", "29.6637, 50.9586, -13.2436, 0.29", "29.4044, 52.4504, -12.878, 0.29", "29.2914, 53.1893, -12.699, 0.66", "29.0968, 54.5261, -12.3692, 0.66", "28.8711, 55.9966, -12.0076, 0.22", "28.5205, 58.1804, -11.4816, 0.29", "28.315, 59.652, -11.1213, 0.74", "28.175, 60.6742, -10.8888, 0.74", "28.0464, 61.6031, -10.6826, 0.22", "27.8602, 62.9971, -10.3726, 0.22", "27.7326, 64.2618, -10.0584, 1.03", "27.6997, 64.9863, -9.8571, 1.77", "27.7106, 65.6632, -9.66579, 1.99", "27.7849, 66.6343, -9.37399, 1.47", "27.9931, 68.4011, -8.80876, 0.29", "28.1932, 69.8271, -8.38892, 0.29", "28.3, 71.0697, -8.10183, 0.96", "28.3296, 71.9059, -7.94211, 1.4", "28.3147, 73.0103, -7.76771, 1.4", "28.2617, 73.964, -7.65304, 0.88", "28.0269, 76.334, -7.44043, 0.22", "27.4255, 80.7863, -7.12671, 0.22", "27.2562, 81.934, -7.06739, 0.81", "27.0277, 83.406, -7.00663, 1.99", "26.9233, 84.1075, -6.98281, 2.21", "26.8172, 84.8921, -6.94423, 1.84", "26.6648, 86.1294, -6.85589, 1.18", "26.5106, 87.8225, -6.73848, 0.37", "26.4287, 89.0556, -6.63568, 0.22", "26.225, 93.2629, -6.16397, 0.22", "26.1866, 94.6887, -5.94757, 0.66", "26.1837, 95.3359, -5.82946, 0.66", "26.1922, 97.0891, -5.4772, 0.29", "26.2058, 98.0954, -5.25774, 0.29", "26.2355, 99.3054, -4.98627, 1.62", "26.2316, 100.326, -4.74622, 1.84", "26.1486, 101.269, -4.57669, 1.84", "25.8687, 103.048, -4.32425, 0.37", "25.7083, 103.793, -4.24565, 0.37", "25.5215, 104.56, -4.19647, 0.37", "25.1116, 106.121, -4.1514, 0.22", "24.159, 109.648, -4.11434, 0.22", "23.8847, 110.632, -4.11255, 0.88", "23.6606, 111.437, -4.10713, 0.88", "23.5079, 111.985, -4.10405, 0.88", "22.9735, 113.892, -4.08827, 0.22", "22.7025, 114.819, -4.0722, 1.11", "22.4164, 115.698, -4.02599, 1.25", "22.2757, 116.064, -3.98594, 1.25", "21.7221, 117.277, -3.76434, 0.22", "20.1301, 120.254, -2.91533, 0.22", "19.6083, 121.097, -2.54787, 1.18", "19.2149, 121.688, -2.09389, 1.62", "18.459, 122.857, -0.932763, 0.37", "18.1108, 123.403, -0.324292, 0.22", "17.6923, 124.057, 0.462625, 0.88", "17.2909, 124.692, 1.24307, 1.11", "15.656, 127.544, 4.39704, 0.22", "14.2596, 130.164, 7.18752, 0.22", "13.8449, 131.033, 8.0587, 0.22", "13.5694, 131.644, 8.61971, 0.81", "13.1892, 132.505, 9.31855, 1.03", "12.8606, 133.248, 9.804, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "30.0622, 49.1944, -13.7351, 0.22", "31.0073, 50.7308, -14.5255, 0.22", "31.5497, 51.5995, -14.943, 0.22", "31.8223, 52.0531, -15.1786, 0.66", "32.0778, 52.4851, -15.4188, 0.88", "32.3327, 52.9471, -15.6661, 0.59", "32.4914, 53.2638, -15.8247, 1.03", "32.7672, 53.9069, -16.1062, 1.99", "33.0487, 54.6787, -16.4342, 1.84", "33.1735, 55.0769, -16.5885, 1.4", "33.493, 56.3443, -16.9759, 0.22", "33.7025, 57.3373, -17.2189, 0.22", "33.8016, 57.8547, -17.3233, 0.66", "33.8983, 58.4256, -17.4173, 0.66", "34.0672, 59.4752, -17.5412, 0.29", "34.2834, 60.9494, -17.6865, 0.29", "34.4152, 61.8203, -17.7485, 1.33", "34.4774, 62.1868, -17.7701, 1.92", "34.5352, 62.4711, -17.7915, 2.21", "34.6305, 62.8089, -17.8295, 2.43", "34.7607, 63.187, -17.8828, 2.43", "35.0799, 64.0518, -18.0292, 0.37", "35.324, 64.6872, -18.1487, 0.22", "35.8409, 66.0243, -18.4381, 0.22", "36.8119, 68.5201, -19.0557, 0.22", "37.3609, 69.9248, -19.4368, 0.96", "37.6156, 70.5857, -19.6166, 1.33", "37.7729, 71.0112, -19.7363, 2.06", "37.9913, 71.6153, -19.899, 2.06", "38.1444, 72.0627, -20.0171, 0.96", "38.4736, 73.1137, -20.2783, 0.22", "39.1236, 75.2595, -20.7477, 0.22", "39.541, 76.6485, -21.0045, 1.18", "39.6665, 77.0799, -21.0772, 1.69", "39.794, 77.5268, -21.1445, 1.69", "40.1167, 78.7155, -21.3275, 0.22", "40.6661, 80.8733, -21.7168, 0.22", "40.7766, 81.3405, -21.8138, 0.66", "40.86, 81.7023, -21.8913, 0.66", "41.0112, 82.3741, -22.0534, 0.37", "41.1293, 82.8886, -22.1911, 1.03", "41.232, 83.3292, -22.3307, 1.69", "41.362, 83.7868, -22.4907, 1.69", "41.5355, 84.2579, -22.6457, 1.4", "41.8073, 84.8515, -22.8167, 0.15", "42.0161, 85.2215, -22.9253, 0.44", "42.1381, 85.4024, -22.9744, 0.44", "42.6118, 86.0302, -23.1243, 0.15", "42.9872, 86.4893, -23.2356, 0.15", "43.2591, 86.805, -23.3181, 0.52", "43.5902, 87.1802, -23.4564, 0.74", "44.0311, 87.6759, -23.6788, 0.22", "44.4394, 88.1385, -23.9112, 1.47", "44.8009, 88.5611, -24.1367, 1.92", "45.1619, 89.0009, -24.3919, 2.06", "45.8537, 89.8776, -24.9225, 0.59", "46.3086, 90.4936, -25.2886, 0.22", "46.9094, 91.3632, -25.7761, 0.22", "47.2151, 91.8384, -26.0266, 1.03", "47.4883, 92.31, -26.2144, 1.25", "47.5694, 92.4679, -26.251, 1.4", "48.1161, 93.6701, -26.3254, 0.22", "48.3472, 94.2499, -26.2898, 1.03", "48.5197, 94.715, -26.2062, 1.25", "48.9777, 95.9521, -25.8934, 0.15", "49.2786, 96.7698, -25.6412, 0.59", "49.433, 97.2174, -25.4844, 0.81", "49.6955, 98.0856, -25.1241, 0.22", "49.7876, 98.4334, -24.9789, 0.22", "49.892, 98.8805, -24.7827, 1.03", "49.9544, 99.2456, -24.626, 1.4", "50.0357, 99.7301, -24.4327, 1.55", "50.2533, 100.835, -23.9545, 0.22", "50.407, 101.525, -23.6267, 1.18", "50.4872, 101.846, -23.4659, 1.62", "50.6127, 102.264, -23.2302, 1.77", "50.9116, 103.052, -22.7417, 0.52", "51.2681, 103.696, -22.3435, 1.03", "51.4068, 103.878, -22.2429, 1.03", "51.746, 104.269, -22.0663, 0.44", "52.2041, 104.769, -21.8797, 0.74", "52.5875, 105.176, -21.7614, 0.66", "53.8083, 106.469, -21.5074, 0.22", "55.1309, 107.858, -21.4197, 0.22", "55.6215, 108.37, -21.4412, 0.96", "55.7609, 108.516, -21.4672, 1.25", "56.013, 108.781, -21.5554, 1.25", "56.5434, 109.329, -21.8268, 0.22", "57.2316, 110.022, -22.3788, 0.22", "57.5424, 110.327, -22.6875, 0.96", "57.9433, 110.704, -23.0821, 1.33", "58.1124, 110.856, -23.2552, 1.33", "58.3949, 111.088, -23.5556, 0.52", "58.9104, 111.464, -24.188, 0.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "44.5641, 144.824, -20.1596, 0.29", "43.2722, 145.723, -21.4589, 0.29", "42.4695, 146.291, -22.2432, 0.29", "41.803, 146.765, -22.9156, 0.52", "41.08, 147.285, -23.6635, 0.74", "40.2667, 147.87, -24.5048, 0.22", "38.9656, 148.806, -25.8507, 0.22", "38.3227, 149.287, -26.5126, 0.96", "37.5784, 149.804, -27.2967, 1.18", "37.1919, 150.066, -27.6838, 1.18" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "44.5641, 144.824, -20.1596, 0.29", "45.1313, 147.738, -20.4438, 0.29", "45.3772, 149.002, -20.567, 1.18", "45.4478, 149.364, -20.6024, 1.18", "45.952, 151.955, -20.855, 0.22", "46.1906, 153.181, -20.9746, 0.44" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "44.6568, 120.96, 56.1646, 0.37", "44.6504, 122.106, 55.9328, 0.37", "44.641, 122.778, 55.7987, 0.44", "44.6215, 123.941, 55.5871, 0.22", "44.558, 124.584, 55.4806, 0.37", "44.5129, 124.945, 55.4239, 0.37", "44.2455, 127.0, 55.1127, 0.22", "44.1457, 127.713, 55.0129, 0.44", "44.0627, 128.272, 54.9369, 0.44", "43.4461, 132.028, 54.4329, 0.22", "43.2247, 133.402, 54.2568, 0.44", "43.1575, 133.846, 54.2019, 0.44", "42.7267, 136.923, 53.8324, 0.22", "42.5104, 138.552, 53.5888, 0.66", "42.484, 138.718, 53.5503, 0.96", "42.0876, 140.243, 53.038, 0.22", "41.8249, 140.978, 52.7603, 0.66", "41.6492, 141.402, 52.5852, 0.96", "41.3103, 142.138, 52.2609, 0.96", "39.7317, 145.566, 50.771, 0.22", "37.7505, 149.96, 48.8941, 0.22", "36.7226, 152.161, 47.9233, 0.22", "36.2779, 153.095, 47.507, 0.96", "35.8804, 153.941, 47.1506, 1.62", "35.2934, 155.248, 46.6506, 1.47", "35.0824, 155.791, 46.4664, 1.4", "34.5199, 157.533, 45.8849, 0.37", "34.1172, 158.95, 45.4468, 0.37", "33.8149, 160.235, 45.1025, 1.11", "33.6328, 161.018, 44.9627, 1.55", "33.4421, 161.8, 44.8932, 1.77", "33.273, 162.495, 44.8936, 1.77", "33.0621, 163.365, 44.9645, 0.81", "32.1784, 166.051, 45.2534, 0.22", "31.0621, 168.588, 45.4996, 0.22", "30.5069, 169.577, 45.5862, 0.96", "29.9961, 170.349, 45.6422, 1.33", "29.3844, 171.167, 45.7076, 1.77", "27.8185, 172.983, 45.8818, 0.22", "26.5487, 174.248, 46.0217, 0.22", "25.5166, 175.243, 46.0859, 1.33", "25.1235, 175.632, 46.1144, 1.77", "24.5281, 176.216, 46.2232, 2.28", "24.1377, 176.588, 46.3428, 2.28", "23.2207, 177.562, 46.7342, 0.74", "22.4307, 178.573, 47.126, 1.25", "21.9401, 179.431, 47.3677, 1.77", "21.0227, 181.38, 47.7063, 1.11", "20.6852, 182.24, 47.7568, 1.11", "20.0977, 183.831, 47.5844, 0.22", "19.2789, 185.885, 47.0488, 0.22", "18.4671, 187.704, 46.3925, 1.77", "18.1756, 188.31, 46.14, 2.06", "17.8838, 188.907, 45.8555, 2.28", "16.6797, 191.331, 44.6113, 0.22", "15.3234, 193.945, 43.1988, 0.22", "14.6555, 195.227, 42.4684, 0.22", "14.1892, 196.202, 41.889, 0.66", "13.7759, 197.146, 41.3406, 0.88", "12.8219, 199.682, 39.889, 0.44", "12.4486, 201.193, 39.0591, 0.29", "12.3414, 202.084, 38.5151, 0.52", "12.2888, 203.072, 37.8793, 0.66", "8.94778, 214.77, 36.9471, 0.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "44.6568, 120.96, 56.1646, 0.29", "45.9005, 121.444, 56.3015, 0.29", "47.522, 122.075, 56.4799, 0.29", "48.5859, 122.489, 56.5969, 0.29", "49.0897, 122.685, 56.6523, 0.59", "57.8477, 124.337, 57.246, 0.59" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-68.8001, 25.6342, -9.72775, 0.22", "-68.4337, 27.1133, -9.67756, 0.22", "-68.1762, 28.2644, -9.31128, 0.22", "-67.9803, 29.2936, -8.87953, 1.03", "-67.8873, 29.9917, -8.54932, 1.33", "-67.8359, 30.6103, -8.24864, 1.33", "-67.8147, 31.1683, -7.96513, 1.33", "-68.0124, 33.458, -6.59414, 0.22", "-68.1403, 34.094, -6.15628, 0.22", "-68.4377, 35.0133, -5.47835, 0.66", "-68.686, 35.5968, -5.04064, 0.88", "-69.0213, 36.2685, -4.51806, 0.88", "-69.4552, 37.0591, -3.90844, 0.22", "-69.9515, 37.8966, -3.27677, 0.66", "-70.3063, 38.5697, -2.7346, 1.4", "-70.6237, 39.27, -2.1027, 1.4", "-70.9633, 40.1247, -1.2437, 1.11", "-71.2131, 40.768, -0.579522, 0.96", "-71.319, 41.1187, -0.161229, 1.18", "-71.4532, 41.7093, 0.546415, 1.18", "-71.6517, 42.8263, 1.88988, 0.74", "-71.7357, 43.3983, 2.55777, 0.44", "-71.8788, 44.3547, 3.62991, 0.66", "-72.1987, 46.6266, 6.06923, 0.52", "-72.3149, 47.5974, 7.02132, 0.22", "-72.4118, 48.5659, 7.85112, 0.44", "-72.4473, 49.2604, 8.37623, 0.44", "-72.4906, 49.9912, 8.89552, 0.22", "-72.5716, 51.145, 9.69551, 0.22", "-72.7901, 52.5732, 10.5656, 0.22", "-72.9664, 53.4374, 11.0941, 0.22", "-73.4866, 55.5113, 12.3286, 0.22", "-73.727, 56.3516, 12.8326, 1.33", "-74.0632, 57.4204, 13.4806, 1.62", "-74.5195, 58.6391, 14.25, 0.22", "-74.9448, 59.6791, 14.8975, 0.22", "-75.2276, 60.4043, 15.3163, 0.81", "-75.4396, 61.0122, 15.637, 0.96", "-75.6249, 61.7202, 16.0069, 0.96", "-75.8703, 63.0737, 16.7314, 0.29", "-75.9576, 64.3642, 17.479, 0.22", "-75.8876, 65.6223, 18.1876, 0.81", "-75.7383, 66.5369, 18.6695, 1.11", "-75.5534, 67.2346, 19.0171, 1.11", "-75.0086, 68.7743, 19.5884, 0.29", "-74.6005, 69.6704, 19.7685, 0.22", "-74.0113, 70.8986, 19.8595, 0.22", "-73.7719, 71.4045, 19.8496, 0.29", "-73.241, 72.5896, 19.7319, 0.29", "-72.3007, 74.8798, 19.3649, 0.22", "-71.405, 77.3168, 18.8537, 0.22", "-70.8551, 79.0293, 18.4761, 0.22", "-70.6705, 79.684, 18.3368, 0.52", "-70.5657, 80.1045, 18.2598, 0.52", "-70.1948, 81.867, 17.9929, 0.22", "-70.0472, 82.7419, 17.9502, 0.22", "-69.9534, 83.4529, 18.0023, 0.44", "-69.8753, 84.0169, 18.0675, 0.44", "-69.7083, 85.2186, 18.2336, 0.15", "-69.5725, 86.1397, 18.4134, 0.37", "-69.2444, 88.2809, 18.9487, 0.22", "-68.9035, 90.4711, 19.5437, 0.52", "-68.7362, 91.5159, 19.8647, 0.52", "-68.6569, 92.0096, 20.0414, 0.52", "-68.407, 93.9495, 20.8158, 0.22", "-68.3365, 94.8183, 21.1759, 0.22", "-68.3137, 95.4853, 21.4445, 0.59", "-68.3204, 96.5852, 21.794, 0.88", "-68.321, 97.372, 22.0825, 0.88", "-68.3055, 98.8771, 22.6017, 0.22", "-68.2687, 99.9071, 22.9417, 0.37", "-68.2372, 100.324, 23.0967, 0.37", "-68.045, 101.645, 23.5974, 0.15", "-67.6408, 103.839, 24.3462, 0.15", "-67.3223, 105.355, 24.8272, 1.11", "-67.0878, 106.363, 25.1395, 1.77", "-66.7821, 107.764, 25.5543, 1.25", "-66.292, 110.636, 26.2786, 0.22", "-66.0172, 113.042, 26.7661, 0.22", "-65.9679, 114.01, 26.8881, 0.44", "-65.963, 114.544, 26.9299, 0.44", "-65.9951, 116.285, 26.9643, 0.22", "-66.0791, 118.669, 26.913, 0.22", "-66.1328, 119.711, 26.8798, 0.37", "-66.1765, 121.104, 26.8441, 0.37", "-66.1762, 122.945, 26.8535, 0.37", "-66.1409, 124.431, 26.8638, 0.44", "-66.0605, 125.552, 26.8696, 0.96", "-65.9258, 126.49, 26.8985, 1.62", "-65.8071, 127.117, 26.9331, 1.77", "-65.5645, 128.336, 27.0684, 1.77", "-66.2764, 139.605, 30.9383, 1.77" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-68.8001, 25.6342, -9.72775, 1.25", "-70.0905, 25.1964, -10.054, 1.25", "-70.9827, 24.9978, -10.3066, 1.69", "-71.7356, 24.8754, -10.5111, 1.92", "-73.4145, 24.7568, -10.946, 1.55", "-73.8777, 24.7408, -11.0584, 1.77", "-76.0449, 24.7173, -11.5494, 0.22", "-77.2885, 24.7961, -11.8311, 0.44", "-78.0362, 24.8859, -11.9841, 0.44", "-81.3419, 25.4182, -12.5707, 0.22", "-82.0026, 25.5435, -12.6626, 0.59", "-82.7305, 25.6914, -12.7502, 0.59", "-86.3827, 26.484, -13.1592, 0.22", "-87.8476, 26.804, -13.3455, 0.22", "-88.8748, 27.0358, -13.4932, 1.03", "-89.309, 27.1347, -13.564, 1.33", "-89.766, 27.2419, -13.6524, 1.33", "-92.0328, 27.741, -14.2196, 0.22", "-94.0642, 28.1538, -14.8062, 0.22", "-94.5368, 28.2425, -14.9358, 0.74", "-95.7849, 28.475, -15.237, 1.55", "-96.6221, 28.6339, -15.4103, 2.06", "-97.872, 28.8746, -15.6255, 1.99", "-100.363, 29.3498, -15.9378, 0.22", "-104.004, 29.979, -16.3627, 0.22", "-105.684, 30.253, -16.5441, 0.22", "-106.524, 30.3755, -16.6198, 0.96", "-106.983, 30.4268, -16.6611, 1.18", "-107.778, 30.5009, -16.7283, 1.18", "-109.362, 30.5436, -16.9541, 0.22", "-110.69, 30.5116, -17.197, 0.22", "-111.233, 30.4913, -17.2999, 1.18", "-112.33, 30.4634, -17.4747, 1.47", "-112.823, 30.4608, -17.53, 1.47", "-115.165, 30.4911, -17.7133, 0.22", "-116.209, 30.5337, -17.7529, 0.74", "-116.862, 30.5566, -17.7519, 0.74", "-119.003, 30.6083, -17.6787, 0.22", "-120.713, 30.5693, -17.4926, 1.62", "-121.082, 30.5447, -17.436, 2.21", "-121.926, 30.4502, -17.2655, 2.43", "-125.819, 29.8681, -16.3593, 0.22", "-127.333, 29.603, -15.9253, 0.22", "-130.64, 28.9168, -14.7897, 0.22", "-131.381, 28.7457, -14.5062, 1.33", "-132.025, 28.5841, -14.2381, 1.92", "-132.544, 28.4412, -14.0042, 2.06", "-135.301, 27.6146, -12.5294, 0.15", "-137.255, 26.9613, -11.3805, 0.15", "-137.854, 26.7481, -10.9979, 0.88", "-138.603, 26.4701, -10.4983, 1.11", "-139.086, 26.2829, -10.1659, 1.11", "-142.458, 24.9087, -7.84369, 0.22", "-145.985, 23.3629, -5.41828, 0.22", "-147.454, 22.6992, -4.40599, 1.18", "-148.232, 22.3468, -3.87737, 1.92", "-148.696, 22.136, -3.56423, 1.92", "-153.521, 19.9252, -0.372695, 0.22", "-156.938, 18.3534, 1.7546, 0.22", "-157.507, 18.101, 2.08982, 0.96", "-158.167, 17.8024, 2.45978, 1.25" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-23.7292, 6.66294, -28.1909, 0.59", "-23.917, 8.19503, -28.6517, 0.59", "-24.1101, 9.40686, -29.0288, 0.74", "-24.2916, 10.391, -29.324, 1.18", "-24.5019, 11.4044, -29.6923, 1.33", "-24.7747, 12.5385, -30.1626, 0.88", "-25.0067, 13.3888, -30.535, 0.52", "-25.3952, 14.5751, -31.1537, 0.74", "-25.6629, 15.2527, -31.5434, 0.88", "-26.2735, 16.5559, -32.3489, 0.37", "-26.7173, 17.343, -32.8251, 0.52", "-27.0757, 17.8804, -33.1644, 0.74", "-27.6528, 18.6528, -33.6581, 0.74", "-28.0711, 19.1456, -33.9842, 0.29", "-28.8751, 20.0075, -34.5388, 0.22", "-29.8176, 20.9127, -35.0608, 0.22", "-30.6994, 21.7238, -35.5265, 0.96", "-31.2103, 22.1675, -35.7882, 1.47", "-31.8274, 22.6585, -36.0703, 1.69", "-32.2616, 22.98, -36.2729, 1.77", "-32.9507, 23.4318, -36.5779, 1.77" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "0.00466954, -22.037, 0.742598, 1.33", "-1.31237, -22.8081, 1.28752, 1.33", "-2.48874, -23.6268, 1.81711, 0.81", "-3.36794, -24.3485, 2.31777, 1.11", "-3.75239, -24.7152, 2.58218, 1.11", "-4.31612, -25.3364, 3.05581, 0.81", "-4.9292, -26.1227, 3.67676, 1.03", "-5.3003, -26.7789, 4.24686, 1.11", "-5.69659, -27.7467, 5.08181, 1.33", "-5.91337, -28.3621, 5.64051, 1.47", "-6.19255, -29.1046, 6.36821, 1.33", "-6.50504, -29.8429, 7.20002, 1.18", "-6.89643, -30.5592, 8.18328, 0.96", "-7.15483, -30.9105, 8.77125, 0.66", "-7.50127, -31.2432, 9.43831, 0.81", "-7.98216, -31.6036, 10.287, 0.66", "-8.67764, -32.0233, 11.376, 0.59", "-9.10693, -32.2484, 11.9833, 0.74", "-9.95881, -32.7016, 13.1314, 1.18", "-10.5502, -33.0249, 13.8739, 1.33", "-11.2558, -33.4645, 14.6715, 1.47", "-11.7782, -33.8229, 15.2182, 1.25", "-12.3227, -34.2214, 15.7466, 1.25", "-12.9919, -34.7527, 16.419, 1.03", "-13.7115, -35.3403, 17.1514, 0.29", "-14.527, -36.064, 18.0318, 0.29", "-15.2893, -36.799, 18.8954, 0.66", "-15.826, -37.3872, 19.5534, 1.03", "-16.5377, -38.2426, 20.4613, 1.18", "-16.962, -38.7817, 21.0027, 1.62", "-17.2945, -39.2227, 21.4228, 1.62", "-17.6817, -39.7196, 21.8302, 1.33", "-18.2046, -40.3577, 22.2371, 0.74", "-18.8645, -41.1238, 22.621, 0.37", "-19.2849, -41.5647, 22.7972, 0.44", "-19.8293, -42.098, 22.9894, 0.22", "-20.5619, -42.7459, 23.2241, 1.11", "-20.923, -43.0666, 23.3522, 1.55", "-21.3053, -43.43, 23.5104, 1.77", "-21.8216, -43.9978, 23.7801, 1.55", "-22.5429, -44.9545, 24.3483, 0.22", "-22.8597, -45.4284, 24.7033, 0.22", "-23.3876, -46.1529, 25.3735, 0.81", "-23.6827, -46.5237, 25.7143, 0.96", "-23.9551, -46.8524, 25.9978, 0.96", "-24.5287, -47.5554, 26.524, 0.22", "-25.0223, -48.101, 26.8606, 0.22", "-25.9433, -49.0086, 27.2754, 0.22", "-26.8121, -49.7331, 27.5723, 1.69", "-27.3029, -50.1074, 27.7152, 2.5", "-27.8167, -50.4753, 27.8448, 2.28", "-28.9644, -51.2644, 28.1297, 0.96", "-29.8953, -51.9059, 28.4158, 0.66", "-30.9234, -52.6149, 28.8612, 1.47", "-31.1318, -52.7504, 28.989, 1.99", "-31.5348, -53.0123, 29.2797, 1.99", "-32.5132, -53.6809, 30.0728, 1.11", "-33.1137, -54.126, 30.6028, 0.59", "-33.7288, -54.603, 31.1841, 1.11", "-34.5222, -55.2569, 31.9457, 0.66", "-35.3207, -55.9373, 32.7377, 0.37", "-35.8083, -56.3756, 33.2432, 0.29", "-36.2703, -56.8221, 33.7203, 0.29", "-43.0341, -62.1865, 39.5034, 0.29", "-49.7555, -65.958, 46.5261, 0.29", "-56.1042, -70.6303, 53.3226, 0.29", "-62.7513, -74.279, 60.4829, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.00466954, -22.037, 0.742598, 2.87", "0.484515, -24.1769, 0.157512, 2.87", "0.794628, -25.5725, -0.249369, 3.02", "1.10874, -27.039, -0.703834, 3.17", "1.62131, -29.5525, -1.52324, 2.58", "1.91718, -31.1746, -2.12512, 2.73", "2.28081, -33.2322, -2.98015, 2.73", "2.60715, -35.1839, -3.9226, 2.36", "2.97372, -37.3058, -5.04159, 2.36", "3.30826, -39.2541, -6.1077, 2.73", "3.70016, -41.6044, -7.3823, 1.77", "4.00501, -43.5579, -8.42993, 1.77", "4.18678, -44.7134, -9.06699, 1.84", "4.36344, -45.8352, -9.6889, 2.06", "4.59345, -47.2001, -10.4245, 2.21", "4.8337, -48.4829, -11.0311, 2.28", "5.13444, -49.9118, -11.4517, 2.95" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "55.7777, 50.2244, 16.7466, 0.52", "55.0532, 52.5173, 20.1071, 0.52", "54.6892, 53.6359, 21.6032, 0.29", "54.506, 54.1853, 22.2607, 0.74", "54.2289, 54.9793, 23.164, 1.03", "54.0209, 55.6096, 23.8427, 1.03", "53.6258, 56.9294, 25.2093, 0.29", "53.5521, 57.3194, 25.6506, 0.29", "53.5256, 57.7896, 26.1529, 0.52", "53.5815, 58.3194, 26.6895, 0.52", "53.7259, 58.7688, 27.1187, 0.37", "53.9734, 59.1799, 27.5084, 0.52", "54.767, 59.9654, 28.2921, 0.29", "55.3564, 60.4588, 28.817, 0.52", "56.2413, 61.0782, 29.5353, 1.11", "57.1236, 61.6014, 30.1724, 0.66", "57.6176, 61.8476, 30.5116, 0.96", "58.1524, 62.0628, 30.8472, 1.47", "58.6444, 67.0144, 38.0331, 1.47" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "55.7777, 50.2244, 16.7466, 0.59", "56.1608, 50.5992, 17.3183, 0.59", "56.6564, 51.1055, 18.0282, 1.11", "56.8951, 51.3543, 18.3601, 1.55", "57.2408, 51.7234, 18.8173, 2.14", "58.1302, 52.7169, 19.9514, 0.22", "58.4231, 53.0655, 20.2932, 0.22", "58.6089, 53.301, 20.4989, 0.44", "58.7608, 53.5073, 20.658, 0.44", "58.9961, 53.854, 20.9069, 0.22", "59.4386, 54.7051, 21.4438, 0.22", "59.8303, 55.6682, 22.0036, 1.18", "60.0037, 56.1768, 22.3048, 1.77", "60.1669, 56.7519, 22.6407, 2.28", "60.2713, 57.2203, 22.9095, 2.28", "60.5355, 58.7346, 23.7881, 0.22", "60.5847, 59.2026, 24.0555, 0.22", "60.602, 59.6771, 24.334, 1.47", "60.6028, 59.8989, 24.4508, 1.92", "60.6017, 60.1922, 24.592, 1.92", "63.6451, 65.6315, 27.4903, 1.92" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-32.9507, 23.4318, -36.5779, 0.29", "-34.0799, 25.8967, -38.3003, 0.29", "-34.4662, 26.6985, -38.8785, 0.22", "-34.4685, 26.6603, -38.0996, 0.74", "-34.6256, 26.8902, -37.6622, 0.88", "-35.1399, 27.572, -36.616, 0.88", "-35.7208, 28.3097, -35.6328, 0.29", "-36.2592, 28.9374, -34.7269, 0.29", "-39.9494, 32.9842, -28.0348, 0.29", "-40.6742, 33.7503, -26.5849, 0.29", "-41.193, 34.2669, -25.4487, 0.96", "-41.5176, 34.5648, -24.6503, 1.47", "-41.8823, 34.8678, -23.6288, 1.69" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-32.9507, 23.4318, -36.5779, 0.22", "-34.866, 23.2494, -36.7418, 0.22", "-36.0059, 23.1354, -36.811, 0.22", "-37.8167, 22.9577, -36.8766, 0.22", "-38.9464, 22.8411, -36.8498, 1.18", "-39.2765, 22.807, -36.8326, 1.4", "-39.9673, 22.733, -36.7888, 1.4", "-41.0351, 22.5979, -36.6829, 0.81", "-42.2769, 22.465, -36.5332, 0.22", "-43.725, 22.3124, -36.4302, 0.22", "-44.3264, 22.2553, -36.4208, 1.4", "-44.7858, 22.2026, -36.4752, 1.77", "-45.2827, 22.131, -36.6056, 1.77", "-46.0714, 22.003, -36.9061, 1.25", "-47.7656, 21.668, -37.7515, 0.22", "-48.6254, 21.4511, -38.2328, 0.22", "-50.2272, 20.9937, -39.0947, 0.22", "-51.1568, 20.732, -39.5568, 1.25", "-51.4561, 20.6464, -39.694, 1.55", "-52.2162, 20.432, -40.0092, 1.55", "-53.5633, 20.0897, -40.4822, 1.03", "-54.6097, 19.8555, -40.7861, 0.22", "-56.0544, 19.6131, -41.1326, 1.03", "-56.7372, 19.5356, -41.283, 1.33", "-58.1851, 19.44, -41.6118, 0.22", "-59.1054, 19.4213, -41.8182, 0.22", "-60.2725, 19.4454, -42.1092, 1.25", "-60.9922, 19.4662, -42.3019, 1.4", "-61.9475, 19.508, -42.5596, 0.22", "-63.4663, 19.602, -42.9544, 0.22", "-64.2517, 19.658, -43.151, 1.03", "-64.8862, 19.6803, -43.3246, 1.25", "-65.5826, 19.6782, -43.5274, 1.25", "-67.417, 19.5818, -44.1035, 0.22", "-68.0425, 19.5031, -44.3651, 0.88", "-68.4921, 19.4264, -44.581, 0.88", "-70.0966, 19.0946, -45.4013, 0.22", "-70.5237, 18.9884, -45.6293, 1.03", "-71.4683, 18.7071, -46.1762, 1.18", "-73.7936, 17.9513, -47.5859, 0.22", "-74.6465, 17.6764, -48.11, 0.22", "-75.5013, 17.4114, -48.6319, 0.96", "-76.0934, 17.2432, -48.9829, 1.18", "-77.4883, 16.8892, -49.8164, 0.15", "-78.9467, 16.579, -50.655, 0.15", "-79.504, 16.4921, -50.9371, 0.15", "-80.3291, 16.4028, -51.3301, 1.11", "-81.0334, 16.3739, -51.6269, 1.33", "-81.9007, 16.3856, -51.9622, 1.33", "-82.262, 16.4073, -52.0866, 1.33", "-84.6579, 16.5998, -52.8636, 0.22", "-85.9964, 16.719, -53.2625, 0.22", "-86.9747, 16.8151, -53.5556, 0.81", "-87.9384, 16.9228, -53.8885, 0.96", "-88.4873, 16.9906, -54.0895, 0.44", "-90.3605, 17.2586, -54.8078, 0.22", "-91.0725, 17.3826, -55.1129, 0.59", "-91.8731, 17.5221, -55.476, 0.59", "-93.6322, 17.8198, -56.289, 0.22", "-95.6713, 18.1731, -57.2134, 0.22", "-97.2521, 18.4544, -57.9585, 0.22", "-98.3829, 18.6634, -58.5047, 0.96", "-99.2186, 18.8133, -58.8992, 0.96" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "5.13444, -49.9118, -11.4517, 2.06", "5.89261, -50.2288, -11.3228, 2.06", "6.98062, -50.6402, -11.149, 0.81", "7.99397, -50.9965, -11.0129, 1.03", "9.36184, -51.4394, -10.8847, 0.96", "10.0022, -51.6247, -10.8483, 0.66", "11.1085, -51.9212, -10.8358, 0.66", "11.8647, -52.0788, -10.8578, 0.81", "12.3206, -52.1571, -10.9072, 0.81", "12.9971, -52.2741, -11.0849, 0.81", "13.6277, -52.4109, -11.3703, 0.44", "14.1061, -52.5461, -11.6607, 0.44", "14.4956, -52.6723, -11.9499, 0.96", "15.013, -52.8672, -12.3554, 1.4", "15.4151, -53.0488, -12.6898, 1.62", "15.8183, -53.2831, -13.0566, 1.62", "16.1884, -53.5558, -13.4293, 1.62" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "5.13444, -49.9118, -11.4517, 1.33", "4.06509, -51.8854, -11.5966, 1.33", "3.37954, -53.2706, -11.6913, 1.18", "2.52463, -55.1541, -11.7655, 1.03", "2.04197, -56.3433, -11.7901, 1.03", "1.76636, -57.1391, -11.8052, 1.47", "1.54879, -57.8802, -11.8233, 1.47", "1.39254, -58.793, -11.8572, 1.18", "1.35361, -59.7093, -11.9397, 1.03", "1.41606, -60.7777, -12.1289, 0.74", "1.5402, -61.8983, -12.4085, 0.88", "1.67275, -62.7555, -12.6916, 1.11", "1.86598, -63.7665, -13.1199, 1.4", "2.1408, -64.9238, -13.7247, 1.62", "2.47418, -66.0833, -14.459, 1.69", "2.67982, -66.7361, -14.914, 1.25", "2.98984, -67.7192, -15.6292, 0.88", "3.25101, -68.5981, -16.2715, 0.52", "3.40921, -69.1904, -16.6849, 0.66", "3.65747, -70.2495, -17.3968, 1.11", "3.83471, -71.1029, -17.9349, 1.55", "3.95481, -71.7956, -18.3441, 2.14", "4.0534, -72.5155, -18.7352, 2.14", "4.15834, -73.3654, -19.1513, 2.28", "4.28621, -74.4422, -19.6423, 2.06", "4.46379, -75.9288, -20.3011, 1.92", "4.61086, -76.932, -20.759, 1.92", "4.78962, -77.9205, -21.2153, 1.77", "4.95036, -78.6538, -21.5574, 2.21", "5.14655, -79.5, -21.9504, 2.5" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-41.8823, 34.8678, -23.6288, 0.59", "-42.3856, 36.4218, -26.8584, 0.59", "-42.5825, 36.9985, -27.9195, 0.29", "-42.6941, 37.3016, -28.3853, 0.29", "-42.8945, 37.8105, -29.0778, 0.52", "-43.0608, 38.2157, -29.5882, 0.52", "-43.3101, 38.7916, -30.2446, 0.44", "-43.6445, 39.4837, -30.7929, 0.22", "-44.1152, 40.4711, -31.5117, 0.22", "-44.2765, 40.8121, -31.755, 0.74", "-44.6202, 41.5338, -32.2676, 0.74", "-44.9882, 42.2534, -32.7565, 0.22", "-45.213, 42.6789, -33.0256, 0.22", "-45.4054, 43.0551, -33.2702, 0.81", "-45.7229, 43.6899, -33.729, 1.03", "-45.9737, 44.2227, -34.1434, 1.4" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-41.8823, 34.8678, -23.6288, 0.22", "-43.2062, 35.7373, -23.8192, 0.22", "-45.0776, 37.1024, -24.2134, 0.22", "-45.758, 37.6431, -24.4005, 0.22", "-46.1367, 37.9688, -24.515, 0.52", "-46.5859, 38.3736, -24.6545, 0.52", "-47.068, 38.8214, -24.8038, 0.29", "-48.0812, 39.9189, -25.1795, 0.74", "-48.6664, 40.6105, -25.46, 0.88", "-49.1892, 41.2215, -25.6879, 0.88", "-49.73, 41.8341, -25.8879, 0.29", "-50.2483, 42.4198, -26.0588, 1.25", "-50.8644, 43.1171, -26.2488, 1.25", "-52.2421, 44.6526, -26.6182, 0.22", "-54.1083, 46.7044, -27.0904, 0.22", "-54.9977, 47.6707, -27.3091, 0.81", "-55.3142, 48.0152, -27.3866, 1.18", "-55.5976, 48.3218, -27.4576, 1.18", "-56.1655, 48.923, -27.5764, 0.22", "-56.6481, 49.4474, -27.675, 0.22", "-56.9575, 49.7957, -27.7741, 0.66", "-57.324, 50.2123, -27.927, 0.66", "-57.7436, 50.6493, -28.1068, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "16.1884, -53.5558, -13.4293, 0.66", "17.0283, -53.5079, -14.6074, 0.66", "17.6299, -53.4996, -15.5089, 0.52", "18.1516, -53.5068, -16.3896, 0.52", "18.9073, -53.5087, -17.7751, 0.88", "19.3131, -53.4933, -18.5441, 0.96", "19.9628, -53.443, -19.7541, 1.03", "20.4377, -53.3996, -20.6217, 1.11", "21.0376, -53.3322, -21.7449, 0.74", "21.2968, -53.2868, -22.2694, 0.59", "21.6497, -53.1951, -23.0113, 0.52", "21.9586, -53.0818, -23.6749, 0.74", "22.5547, -52.8637, -24.8869, 0.74", "23.1776, -52.6724, -26.0689, 0.52", "23.9404, -52.4919, -27.4762, 0.66", "24.4053, -52.4032, -28.3091, 0.81", "24.8942, -52.3253, -29.1807, 0.66", "25.5722, -52.2249, -30.3307, 0.52", "26.2901, -52.1273, -31.5113, 1.4", "26.7639, -52.0685, -32.2515, 2.06", "27.3333, -52.0114, -33.0503, 1.92", "27.9273, -51.9673, -33.8308, 1.77", "28.7791, -51.913, -34.9272, 1.62", "29.6725, -51.8373, -36.0395, 0.88", "30.417, -51.7724, -36.9399, 0.22", "31.4418, -51.7218, -38.1475, 0.22", "32.1009, -51.7212, -38.8866, 1.03", "32.5137, -51.7319, -39.2937, 1.55", "32.8829, -51.75, -39.5955, 1.84", "33.6633, -51.7964, -40.0969, 1.25", "35.1729, -51.9056, -41.0299, 0.22", "36.1061, -51.9939, -41.5953, 0.22", "36.9101, -52.09, -42.0921, 1.55", "37.7412, -52.2039, -42.6001, 2.06", "38.2651, -52.2877, -42.9301, 2.06", "39.9377, -52.6158, -44.0117, 0.52", "41.1788, -52.8984, -44.8554, 0.22", "42.0119, -53.1071, -45.4676, 1.11", "42.3111, -53.1847, -45.6943, 1.4", "42.8105, -53.3164, -46.078, 1.4", "43.996, -53.6098, -46.9178, 0.22", "45.0188, -53.8365, -47.5973, 0.22", "45.7027, -53.9641, -48.0835, 0.74", "46.3017, -54.0572, -48.5196, 0.96", "46.9697, -54.1414, -49.0189, 0.37", "48.006, -54.2079, -49.7929, 0.15", "49.4247, -54.2087, -50.8593, 1.47", "49.9534, -54.1859, -51.2657, 1.77", "50.3843, -54.1544, -51.6122, 1.62", "51.0161, -54.0853, -52.1111, 0.74", "52.7308, -53.852, -53.3655, 0.22", "53.5235, -53.73, -53.9099, 1.18", "54.0733, -53.6441, -54.2546, 1.69", "54.6573, -53.5682, -54.6093, 1.77", "56.2724, -53.4045, -55.5612, 0.22", "57.8166, -53.3062, -56.433, 0.22", "58.3811, -53.2926, -56.7239, 0.52", "58.7357, -53.2946, -56.8889, 0.52", "60.4702, -53.3632, -57.7328, 0.22", "61.2819, -53.4335, -58.174, 1.11", "61.7051, -53.4879, -58.4401, 1.62", "62.1053, -53.5437, -58.7161, 1.84", "62.4787, -53.5946, -58.9859, 1.55", "64.5188, -53.8451, -60.5565, 0.15", "66.5216, -54.0774, -62.131, 0.15", "67.3286, -54.1712, -62.7818, 1.03", "67.758, -54.2136, -63.1347, 1.33", "68.2988, -54.2443, -63.5566, 1.33", "69.7088, -54.2747, -64.5587, 0.22", "70.7546, -54.2597, -65.2081, 1.18", "71.307, -54.2425, -65.5392, 1.77", "72.0577, -54.2257, -65.9803, 1.77", "74.3639, -54.2164, -67.3158, 0.22", "75.0844, -54.2392, -67.7387, 0.74", "75.4454, -54.2639, -67.9661, 0.74", "77.8515, -54.5263, -69.6094, 0.22", "78.6649, -54.6523, -70.1908, 0.81", "79.1948, -54.7759, -70.5941, 1.03", "80.3748, -55.1876, -71.6211, 0.22", "81.3409, -55.5738, -72.5364, 0.22", "81.8225, -55.783, -73.0148, 1.18", "82.1875, -55.9454, -73.4082, 1.4", "82.4521, -56.0526, -73.7086, 1.4", "84.0362, -56.6223, -75.5334, 0.22", "84.7363, -56.854, -76.3646, 0.81", "85.1623, -56.986, -76.8977, 0.81", "86.4207, -57.334, -78.5821, 0.22", "87.1744, -57.5183, -79.6704, 0.96", "87.6558, -57.5946, -80.4067, 1.25", "88.649, -57.6327, -82.1098, 0.22", "89.3031, -57.5941, -83.3785, 0.22", "89.5788, -57.5472, -83.977, 0.66", "89.8702, -57.4517, -84.686, 0.66", "90.6624, -57.1223, -86.5052, 0.29", "91.3034, -56.8232, -87.9168, 0.74", "91.7637, -56.5956, -88.8523, 1.33", "92.184, -56.415, -89.6151, 1.33", "93.6665, -55.9457, -92.059, 0.22", "94.7173, -55.8948, -93.3245, 0.22", "95.3564, -55.9402, -93.954, 0.74", "95.7393, -55.9802, -94.2915, 0.74", "96.4851, -56.0598, -94.9506, 0.59", "97.8715, -56.2389, -96.1286, 0.15", "102.514, -56.9785, -99.8617, 0.15", "103.944, -57.2335, -101.035, 0.66", "104.604, -57.355, -101.577, 0.96", "106.27, -57.6613, -102.974, 0.88" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "16.1884, -53.5558, -13.4293, 1.03", "16.8118, -54.4986, -13.5563, 1.03", "17.3203, -55.2694, -13.723, 0.74", "17.9125, -56.1431, -14.01, 0.96", "18.3889, -56.8321, -14.3332, 0.66", "18.7445, -57.3451, -14.6489, 0.52", "19.4186, -58.3617, -15.4282, 0.52", "19.6657, -58.7443, -15.7884, 0.52", "20.122, -59.505, -16.5959, 0.96", "20.5054, -60.2101, -17.4259, 1.03", "20.8296, -60.8385, -18.2235, 0.81", "21.2783, -61.7142, -19.3487, 0.59", "21.6041, -62.326, -20.1179, 0.88", "21.8156, -62.729, -20.5947, 0.88", "22.1632, -63.4117, -21.3375, 0.52", "22.3777, -63.8262, -21.7549, 0.52", "22.7484, -64.5184, -22.4044, 0.96", "22.8801, -64.7859, -22.6399, 1.25", "23.0692, -65.2175, -23.0092, 1.25", "23.503, -66.2476, -23.8279, 0.59", "23.8281, -67.0279, -24.4004, 0.44", "24.0777, -67.5859, -24.7879, 0.29", "24.568, -68.5526, -25.4544, 0.29", "24.9239, -69.1185, -25.8549, 0.29", "25.3794, -69.6737, -26.2961, 0.44", "25.6883, -69.9816, -26.5774, 0.44", "26.2793, -70.4764, -27.1271, 0.59", "26.7905, -70.8365, -27.6134, 0.59", "27.6005, -71.3044, -28.2731, 1.25", "28.5994, -71.8598, -29.0234, 2.58", "29.3312, -72.2839, -29.5169, 3.32", "29.9894, -72.6742, -29.8909, 3.46", "30.5015, -72.9908, -30.1304, 3.09", "32.2433, -74.107, -30.7486, 0.29", "32.8288, -74.5017, -30.8839, 0.29", "33.8263, -75.2417, -31.0088, 1.18", "34.5344, -75.8151, -31.0527, 1.69", "34.8951, -76.1421, -31.0716, 1.69", "35.3242, -76.5742, -31.1092, 1.62", "36.0127, -77.3501, -31.2268, 0.96", "36.961, -78.4269, -31.4403, 0.22", "37.5935, -79.1423, -31.6299, 0.22", "38.2003, -79.8274, -31.8566, 1.25", "38.6184, -80.2613, -32.0383, 1.77", "38.972, -80.605, -32.2126, 1.92", "39.4141, -80.9879, -32.4526, 1.69", "39.7613, -81.2592, -32.6641, 1.25", "40.2958, -81.6798, -33.0083, 0.88", "41.0835, -82.3525, -33.5094, 0.22", "41.4717, -82.744, -33.7539, 0.74", "41.7962, -83.1531, -33.9546, 0.96", "42.2199, -83.7861, -34.2275, 1.11", "42.4937, -84.2579, -34.4066, 1.11", "42.8751, -84.999, -34.6539, 0.81", "43.2201, -85.7759, -34.8704, 0.52", "43.6219, -86.7408, -35.122, 0.22", "43.8689, -87.3653, -35.2724, 0.22", "44.1322, -88.0241, -35.4206, 0.81", "44.3292, -88.5094, -35.5616, 1.18", "44.5066, -88.9192, -35.7149, 1.4", "44.6752, -89.2623, -35.8682, 1.4", "44.886, -89.6562, -36.0684, 1.11", "45.1746, -90.1777, -36.3461, 0.81", "45.8924, -91.3619, -37.0286, 0.22", "46.652, -92.4675, -37.687, 0.22", "47.0436, -92.9932, -38.0006, 1.25", "47.5384, -93.6111, -38.3576, 1.77", "47.7643, -93.8782, -38.5059, 1.99", "48.128, -94.294, -38.7259, 1.69", "49.4448, -95.7367, -39.4635, 0.22", "50.6503, -97.0073, -39.9935, 0.22", "51.4333, -97.79, -40.2604, 1.25", "51.9056, -98.2405, -40.3825, 1.69", "52.4109, -98.6955, -40.4859, 1.92", "52.9115, -99.1112, -40.5662, 1.99", "54.9126, -100.628, -40.7922, 0.29", "55.9661, -101.37, -40.8822, 0.37", "56.4742, -101.725, -40.9333, 0.37", "57.4257, -102.373, -41.0471, 0.29", "58.4461, -103.054, -41.1969, 0.29", "58.9475, -103.39, -41.2904, 0.44", "59.0329, -103.448, -41.3147, 0.44", "59.9262, -104.057, -41.5286, 0.22", "60.7484, -104.599, -41.6985, 1.47", "61.3598, -104.992, -41.8102, 2.28", "62.015, -105.395, -41.9069, 2.87", "62.4725, -105.666, -41.9656, 3.09", "63.175, -106.081, -42.0537, 2.5", "64.8329, -107.051, -42.1986, 0.59", "65.6194, -107.516, -42.2414, 0.52", "66.2938, -107.914, -42.268, 0.44", "66.8928, -108.265, -42.2801, 0.44", "67.7702, -108.766, -42.2852, 0.37", "68.8696, -109.385, -42.2666, 0.22", "69.7634, -109.879, -42.2152, 0.22", "70.7689, -110.406, -42.1817, 0.96", "71.3171, -110.67, -42.1852, 1.25", "71.99, -110.964, -42.2117, 1.47", "72.6626, -111.233, -42.2706, 1.47", "73.6209, -111.589, -42.4266, 0.66", "74.6967, -111.99, -42.6731, 0.22", "75.8703, -112.431, -43.0118, 0.22", "76.4984, -112.669, -43.2256, 0.66", "77.0245, -112.867, -43.4219, 0.88", "77.507, -113.048, -43.6246, 0.88", "78.9263, -113.589, -44.3377, 0.22", "79.8535, -113.952, -44.8636, 0.66", "80.3003, -114.133, -45.1429, 0.81", "80.681, -114.297, -45.3866, 0.44", "81.6113, -114.721, -45.9974, 0.22", "82.5002, -115.133, -46.6011, 0.44", "83.1064, -115.399, -47.0212, 0.66", "83.6028, -115.618, -47.3737, 1.47", "84.1067, -115.817, -47.7629, 2.28", "84.532, -115.96, -48.1022, 2.65", "84.8951, -116.057, -48.3881, 2.65", "85.7004, -116.231, -48.9982, 1.69", "86.543, -116.376, -49.6528, 0.74", "87.6826, -116.524, -50.5314, 0.22", "88.1882, -116.576, -50.9127, 0.37", "88.8832, -116.654, -51.4119, 0.37", "89.535, -116.74, -51.8631, 1.03", "90.1854, -116.849, -52.2755, 1.84", "90.734, -116.955, -52.577, 2.14", "91.0867, -117.04, -52.7489, 2.28", "91.8514, -117.239, -53.1125, 1.55", "92.625, -117.476, -53.4693, 0.66", "93.5974, -117.809, -53.9053, 0.29", "94.3501, -118.091, -54.2314, 0.81", "94.9747, -118.338, -54.5002, 0.96", "96.0169, -118.766, -54.9351, 0.22", "97.0206, -119.184, -55.3357, 0.22", "97.8074, -119.498, -55.6362, 1.33", "98.2083, -119.653, -55.7876, 1.84", "98.6301, -119.81, -55.9447, 2.14", "99.0241, -119.95, -56.0901, 2.14", "100.166, -120.335, -56.5083, 0.59", "101.724, -120.827, -57.0809, 0.22", "102.899, -121.191, -57.521, 1.11", "103.285, -121.314, -57.6632, 1.77", "103.645, -121.433, -57.7914, 2.06", "104.09, -121.593, -57.9394, 2.06", "104.828, -121.893, -58.1502, 1.03", "106.434, -122.631, -58.5146, 0.22", "107.1, -122.955, -58.6393, 0.81", "107.576, -123.204, -58.7197, 0.81", "108.381, -123.661, -58.8201, 0.29", "109.12, -124.111, -58.8699, 0.22", "110.022, -124.693, -58.8878, 1.18", "110.721, -125.18, -58.8776, 1.77", "111.261, -125.553, -58.8757, 1.92", "113.2, -126.845, -58.9, 0.22", "114.369, -127.553, -58.9208, 1.11", "114.799, -127.787, -58.9316, 1.47", "115.184, -127.973, -58.9401, 1.77", "115.917, -128.274, -58.9595, 1.77", "116.899, -128.576, -59.0194, 0.74", "117.861, -128.765, -59.1391, 0.29", "118.487, -128.85, -59.242, 0.66", "119.209, -128.928, -59.3716, 0.66", "119.837, -128.982, -59.4896, 0.37", "121.06, -129.085, -59.7922, 0.22", "121.666, -129.138, -59.992, 0.81", "122.026, -129.174, -60.1317, 1.03", "122.535, -129.226, -60.3648, 0.81", "123.24, -129.294, -60.731, 0.52", "124.339, -129.371, -61.3421, 0.15", "125.359, -129.419, -61.9392, 1.18", "126.034, -129.434, -62.3392, 2.06", "126.699, -129.436, -62.732, 2.43", "127.182, -129.433, -63.0269, 2.14", "128.609, -129.418, -63.9328, 0.22", "129.498, -129.428, -64.5026, 0.66", "130.033, -129.456, -64.8617, 0.81", "130.494, -129.502, -65.1758, 0.88", "131.673, -129.689, -65.9742, 0.22", "132.396, -129.847, -66.4729, 0.22", "133.524, -130.156, -67.2521, 1.33", "134.142, -130.346, -67.6797, 2.5", "134.725, -130.534, -68.0606, 2.36", "135.508, -130.76, -68.4658, 1.55", "136.801, -131.088, -68.9632, 0.74", "137.532, -131.248, -69.1589, 0.66", "138.202, -131.358, -69.269, 0.44", "139.332, -131.496, -69.3547, 0.22", "141.388, -131.688, -69.3411, 0.22", "142.034, -131.734, -69.297, 0.22", "142.839, -131.779, -69.1917, 0.88", "143.551, -131.81, -69.0537, 1.11", "144.307, -131.825, -68.891, 1.11", "144.741, -131.823, -68.792, 0.74", "145.901, -131.816, -68.5464, 0.29", "146.806, -131.81, -68.372, 0.52", "147.838, -131.775, -68.1926, 0.74", "149.476, -131.697, -67.9242, 0.29", "150.579, -131.617, -67.7887, 1.18", "151.225, -131.544, -67.748, 1.62", "152.078, -131.417, -67.7511, 2.14", "153.06, -131.244, -67.8499, 2.14", "153.396, -131.179, -67.9201, 2.14", "154.751, -130.897, -68.3008, 0.22", "156.105, -130.609, -68.765, 0.22", "156.78, -130.455, -69.0214, 0.66", "157.323, -130.34, -69.2518, 0.81", "158.631, -130.118, -69.8641, 0.22", "159.209, -130.058, -70.1442, 0.66", "159.638, -130.062, -70.3611, 0.88", "161.067, -130.269, -71.0957, 0.22", "161.671, -130.421, -71.4106, 0.37", "162.052, -130.562, -71.6163, 0.37", "163.327, -131.209, -72.2878, 0.22", "164.301, -131.872, -72.7682, 0.22", "165.274, -132.735, -73.1903, 1.77", "165.635, -133.15, -73.3346, 2.14", "165.994, -133.639, -73.4661, 2.28", "166.453, -134.425, -73.6207, 1.55", "167.167, -136.047, -73.8383, 0.22", "167.513, -137.058, -73.9515, 0.44", "167.727, -137.838, -74.0416, 0.81", "167.876, -138.432, -74.1327, 0.81", "168.109, -139.516, -74.432, 0.22", "168.24, -140.113, -74.6995, 0.22", "168.382, -140.652, -75.0163, 0.96", "168.504, -141.027, -75.2617, 1.18", "168.717, -141.598, -75.6657, 1.18", "169.326, -143.03, -76.723, 0.22", "170.094, -144.688, -77.9781, 0.22", "170.378, -145.265, -78.4144, 0.74", "170.658, -145.741, -78.7754, 0.81", "171.164, -146.489, -79.3321, 0.52", "171.877, -147.398, -79.9827, 1.47", "172.421, -147.989, -80.3675, 2.06", "172.905, -148.47, -80.6574, 1.84", "174.467, -149.935, -81.4507, 0.22", "174.92, -150.321, -81.6262, 0.44", "175.185, -150.527, -81.6937, 0.44", "175.938, -151.049, -81.8146, 0.22", "176.53, -151.445, -81.861, 0.66", "176.852, -151.65, -81.8689, 1.18", "177.489, -152.023, -81.8655, 1.18", "178.549, -152.587, -81.8596, 0.29", "179.743, -153.142, -81.8366, 0.29", "180.433, -153.429, -81.8236, 0.29", "181.575, -153.879, -81.7745, 0.22", "182.359, -154.202, -81.6971, 0.22", "183.827, -154.832, -81.5044, 1.11", "184.752, -155.233, -81.3437, 2.21", "185.375, -155.516, -81.2186, 2.43", "186.267, -155.912, -81.0234, 2.14", "188.243, -156.789, -80.5816, 0.15", "188.688, -156.975, -80.47, 0.15", "189.287, -157.206, -80.3108, 0.52", "189.455, -157.267, -80.2592, 0.66", "190.64, -157.646, -79.8294, 0.22", "191.436, -157.866, -79.5286, 0.22", "192.894, -158.252, -78.9437, 0.96", "193.308, -158.381, -78.7627, 0.96", "194.8, -158.897, -78.0822, 0.22", "195.841, -159.298, -77.6167, 0.59", "196.179, -159.455, -77.4617, 0.59", "196.728, -159.746, -77.2184, 0.37", "197.412, -160.162, -76.9301, 0.66", "197.783, -160.418, -76.7637, 0.66", "198.424, -160.969, -76.4617, 0.29", "199.204, -161.794, -76.0766, 0.44", "199.734, -162.415, -75.7965, 0.29", "200.384, -163.203, -75.437, 0.66", "200.667, -163.547, -75.2784, 0.66", "201.279, -164.353, -74.8966, 0.22", "201.581, -164.813, -74.6797, 0.22", "201.954, -165.44, -74.3701, 0.44", "202.239, -165.921, -74.1411, 0.44", "202.721, -166.737, -73.7996, 0.66", "203.267, -167.688, -73.4265, 1.4", "203.798, -168.677, -73.062, 2.06", "204.393, -169.933, -72.6773, 1.92", "204.895, -171.164, -72.4085, 0.29", "205.28, -172.201, -72.2733, 0.59", "205.537, -172.931, -72.2456, 0.96", "205.782, -173.571, -72.2914, 0.96", "206.229, -174.64, -72.4737, 0.29", "206.55, -175.38, -72.6867, 0.74", "206.831, -175.988, -72.8963, 0.74", "207.295, -176.879, -73.2516, 0.22", "207.635, -177.476, -73.5119, 0.52", "207.79, -177.727, -73.6256, 0.52", "208.913, -179.414, -74.4098, 0.22", "209.378, -180.036, -74.7052, 0.66", "209.687, -180.407, -74.8902, 0.88", "209.995, -180.74, -75.0635, 0.88", "210.868, -181.547, -75.5135, 0.22", "212.105, -182.504, -76.1432, 0.22", "213.161, -183.126, -76.6076, 0.96", "213.927, -183.507, -76.9113, 1.4", "214.352, -183.689, -77.0664, 1.55", "215.633, -184.155, -77.4889, 0.22", "216.626, -184.461, -77.7757, 0.22", "217.745, -184.837, -78.0479, 0.52", "218.054, -184.994, -78.1152, 0.52", "218.684, -185.464, -78.2389, 0.22", "219.116, -185.9, -78.3206, 0.44", "219.553, -186.458, -78.3992, 0.44", "220.201, -187.433, -78.5298, 0.22", "220.915, -188.67, -78.7518, 0.22", "221.193, -189.198, -78.8358, 0.44", "221.402, -189.651, -78.8966, 0.44", "230.139, -194.332, -82.7026, 0.44" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "5.14655, -79.5, -21.9504, 1.03", "4.56595, -80.7733, -23.202, 1.03", "4.18459, -81.9102, -24.2922, 1.55", "4.00844, -82.6148, -24.9647, 1.4", "3.88507, -83.3157, -25.5921, 1.11", "3.73998, -84.449, -26.5337, 0.81", "3.66726, -85.1759, -27.1005, 0.81", "3.64296, -86.0362, -27.6928, 0.88", "3.67581, -86.9147, -28.2167, 0.96", "3.73671, -87.8566, -28.7384, 1.62", "3.75992, -88.6321, -29.1391, 2.14", "3.74125, -89.4323, -29.5089, 2.21", "3.68571, -90.0646, -29.7803, 2.28", "3.61994, -90.5645, -29.9788, 2.14", "3.43525, -91.6053, -30.3799, 1.77", "3.13945, -92.9366, -30.8951, 0.59", "2.94077, -93.8002, -31.2058, 0.59", "2.76786, -94.558, -31.4484, 0.37", "2.62077, -95.2235, -31.6324, 0.29", "2.50028, -95.8029, -31.7681, 0.29", "2.35881, -96.5672, -31.8979, 0.37", "2.19863, -97.6242, -32.04, 0.44", "2.10028, -98.2892, -32.1185, 0.96", "2.01543, -98.9503, -32.1887, 1.55", "1.97575, -99.3848, -32.2343, 1.84", "1.9405, -99.9915, -32.3127, 1.84", "1.92269, -100.491, -32.4073, 2.06", "1.92047, -100.969, -32.5159, 2.36", "1.95754, -101.745, -32.7347, 2.36", "2.00937, -102.383, -32.9328, 2.21", "2.08538, -103.156, -33.1928, 2.14", "2.22635, -104.363, -33.6197, 1.03", "2.33728, -105.239, -33.9443, 0.81", "2.51598, -106.518, -34.4336, 1.03", "2.59666, -107.09, -34.6574, 1.69", "2.64549, -107.586, -34.8428, 2.14", "2.64745, -107.886, -34.9556, 2.43", "2.58912, -108.376, -35.1393, 2.43", "2.34106, -109.479, -35.5641, 0.66", "2.10727, -110.285, -35.8593, 0.37", "1.82939, -111.187, -36.2058, 0.37", "1.49941, -112.194, -36.6191, 0.37", "1.29949, -112.767, -36.8792, 0.44", "1.11378, -113.246, -37.1281, 0.37", "0.886353, -113.779, -37.441, 0.29", "0.653271, -114.34, -37.8111, 0.29", "0.400971, -115.025, -38.3096, 0.96", "0.197054, -115.628, -38.7642, 1.11", "-0.0597318, -116.408, -39.3646, 1.33", "-0.252965, -116.998, -39.807, 1.47", "-0.428217, -117.561, -40.2111, 1.69", "-0.528659, -117.931, -40.4475, 1.84", "-0.671694, -118.62, -40.821, 1.55", "-0.778747, -119.335, -41.1622, 0.66", "-0.840069, -119.945, -41.4167, 0.44", "-0.897173, -120.845, -41.7535, 0.44", "-0.920054, -121.371, -41.9244, 1.33", "-0.943964, -122.073, -42.1356, 1.62", "-0.959204, -122.725, -42.3172, 1.92", "-0.971584, -123.095, -42.4209, 2.21", "-0.999104, -123.676, -42.5768, 2.21", "-1.02025, -124.214, -42.7067, 2.21", "-1.02427, -124.472, -42.7738, 2.36", "-1.02564, -125.327, -42.9993, 1.62", "-1.02716, -126.462, -43.2991, 0.81", "-1.02331, -127.282, -43.5167, 0.29", "-1.0223, -127.875, -43.6807, 0.29", "-1.02025, -128.371, -43.8212, 0.29", "-1.0177, -129.142, -44.0291, 1.55", "-1.01774, -129.976, -44.2585, 2.58", "-1.01424, -130.552, -44.4069, 3.09", "-1.00994, -131.51, -44.6396, 2.5", "-1.00541, -132.319, -44.8028, 1.84", "-0.981944, -133.596, -44.981, 0.52", "-0.945644, -134.268, -45.0331, 0.37", "-0.858867, -135.138, -45.0279, 1.55", "-0.762834, -135.826, -44.9752, 2.36", "-0.62209, -136.601, -44.8588, 2.87", "-0.482275, -137.27, -44.7247, 3.09", "-0.323754, -138.012, -44.553, 2.95", "-0.0506698, -139.4, -44.2198, 0.66", "0.0599139, -140.032, -44.0833, 0.52", "0.106442, -140.355, -44.0254, 0.52", "0.173629, -141.02, -43.9437, 0.37", "0.19815, -141.922, -43.881, 0.37", "0.175394, -142.524, -43.8554, 0.66", "0.126394, -143.163, -43.8531, 0.66", "0.0582838, -143.958, -43.867, 0.29", "-0.0202338, -144.928, -43.9028, 0.29", "-0.124912, -146.607, -43.9944, 0.29", "-0.143058, -147.456, -44.0676, 0.74", "-0.121417, -148.373, -44.1714, 1.47", "-0.0957898, -148.773, -44.2307, 1.99", "-0.0359438, -149.33, -44.3328, 2.5", "0.0325515, -149.789, -44.429, 2.65", "0.244006, -150.916, -44.6864, 1.4", "0.386192, -151.735, -44.8616, 0.74", "0.511601, -152.56, -45.005, 0.29", "0.618091, -153.411, -45.154, 0.29", "0.696216, -154.187, -45.2891, 0.29", "0.725234, -154.548, -45.3542, 0.81", "0.785308, -155.334, -45.5075, 1.18", "0.902834, -156.582, -45.7159, 2.28", "1.01592, -157.58, -45.8543, 2.8", "1.0938, -158.15, -45.9243, 2.8", "1.18496, -158.752, -45.9888, 2.87", "1.44007, -160.324, -46.1278, 0.29", "1.62933, -161.46, -46.1967, 0.22", "1.71085, -161.943, -46.2088, 0.74", "1.79134, -162.487, -46.2007, 0.81", "1.84911, -163.043, -46.1908, 0.81", "1.88141, -163.564, -46.1844, 0.66", "1.90628, -164.625, -46.192, 0.22", "1.91043, -165.313, -46.2357, 0.22", "1.89067, -166.592, -46.3409, 0.22", "1.82983, -167.571, -46.4324, 1.77", "1.76846, -168.19, -46.4951, 2.43", "1.71456, -168.566, -46.5347, 2.73", "1.53474, -169.471, -46.6311, 1.77", "1.25875, -170.548, -46.7656, 0.52", "0.979062, -171.452, -46.8898, 0.29", "0.812788, -171.916, -46.9512, 0.59", "0.672373, -172.277, -46.996, 0.59", "0.456055, -172.813, -47.0544, 0.52", "0.0379534, -173.839, -47.1499, 0.22", "-0.265, -174.664, -47.2213, 0.22", "-0.487925, -175.368, -47.2971, 0.37", "-0.614529, -175.837, -47.3691, 0.37", "-0.714971, -176.363, -47.4698, 0.88", "-0.778081, -176.904, -47.5896, 1.11", "-0.808654, -177.373, -47.6966, 1.25", "-0.824263, -177.801, -47.7958, 1.25", "-0.848393, -178.74, -48.0215, 0.74", "-0.862583, -179.73, -48.27, 0.29", "-0.85903, -180.591, -48.4891, 0.22", "-0.828918, -182.152, -48.878, 0.22", "-0.773614, -183.341, -49.1566, 1.33", "-0.708282, -184.073, -49.3051, 1.92", "-0.635352, -184.621, -49.4023, 2.36", "-0.567624, -185.006, -49.4711, 2.65", "-0.4781, -185.427, -49.5436, 2.65", "-0.314431, -186.098, -49.6726, 1.99", "-0.0294158, -187.26, -49.9085, 0.52", "0.116082, -187.896, -50.0324, 0.59", "0.283022, -188.718, -50.192, 0.22", "0.461317, -189.715, -50.4077, 0.22", "0.553204, -190.301, -50.5447, 0.22", "0.587708, -190.557, -50.6078, 0.66", "0.640911, -190.916, -50.7028, 0.81", "0.687612, -191.169, -50.7703, 0.81", "0.879454, -192.027, -50.9817, 0.22", "1.01402, -192.566, -51.1103, 0.29", "1.15186, -193.106, -51.2296, 0.29", "1.35669, -193.954, -51.418, 0.29", "1.49906, -194.587, -51.5581, 0.88", "1.62965, -195.257, -51.7024, 1.84", "1.73863, -195.901, -51.8366, 2.36", "1.78311, -196.171, -51.9, 2.73", "1.87433, -196.703, -52.0322, 2.73", "1.97463, -197.304, -52.1835, 2.43", "2.11125, -198.206, -52.4024, 1.77", "2.22757, -199.03, -52.5953, 0.66", "2.38314, -200.117, -52.8281, 0.29", "2.54492, -201.147, -53.0346, 0.29", "2.66483, -201.803, -53.1576, 0.29", "2.86131, -202.757, -53.3187, 0.29", "2.99309, -203.298, -53.3955, 0.29", "3.21271, -204.079, -53.4985, 1.55", "3.41127, -204.735, -53.5884, 2.28", "3.61218, -205.359, -53.6901, 2.58", "3.79477, -205.889, -53.7949, 2.43", "4.21776, -207.11, -54.0721, 1.11", "4.53051, -208.122, -54.3257, 0.44", "4.68094, -208.725, -54.4958, 0.29", "4.76662, -209.21, -54.6559, 0.29", "4.81785, -209.763, -54.8552, 0.88", "4.82255, -210.336, -55.0619, 1.47", "4.78492, -210.791, -55.2186, 1.62", "4.71298, -211.366, -55.3862, 1.62", "4.5829, -212.316, -55.6161, 1.03", "4.46851, -213.089, -55.7867, 0.44", "4.32223, -214.036, -55.9676, 0.37", "4.22601, -214.642, -56.0754, 0.88", "4.11817, -215.356, -56.1954, 0.88", "4.0272, -216.073, -56.3159, 1.03", "3.95438, -216.874, -56.4507, 0.88", "3.9098, -217.592, -56.5988, 0.74", "3.88443, -218.188, -56.746, 0.44", "3.85439, -219.247, -57.0486, 0.29", "3.82449, -220.444, -57.4007, 1.69", "3.80667, -221.199, -57.6236, 2.73", "3.79025, -222.039, -57.8631, 2.58", "3.77545, -222.709, -58.0433, 2.36", "3.73654, -224.406, -58.4469, 0.29", "3.70072, -225.596, -58.6993, 0.29", "3.67822, -226.213, -58.8225, 0.52", "3.66658, -226.673, -58.9101, 0.52", "3.68182, -227.927, -59.1258, 0.22", "3.71095, -228.663, -59.2618, 0.81", "3.737, -229.026, -59.3352, 1.11", "3.78309, -229.498, -59.4449, 1.25", "3.84653, -230.105, -59.6064, 1.25", "3.99302, -231.618, -60.0983, 0.22", "4.07628, -232.467, -60.4161, 0.22", "4.11543, -233.046, -60.6533, 0.96", "4.14189, -233.653, -60.9035, 1.4", "4.14991, -234.28, -61.1618, 1.62", "4.1409, -234.947, -61.4327, 1.4", "4.11878, -235.591, -61.6826, 1.03", "4.06989, -236.66, -62.0546, 0.22", "4.03196, -237.147, -62.2205, 0.22", "3.92192, -237.964, -62.4664, 1.69", "3.78158, -238.742, -62.6545, 2.73", "3.68028, -239.209, -62.7441, 3.09", "3.5209, -239.876, -62.8558, 2.95", "3.10223, -241.557, -63.1022, 0.74", "2.72623, -242.988, -63.3061, 0.22", "2.41238, -244.129, -63.47, 0.22", "2.08286, -245.355, -63.641, 0.22", "1.95309, -245.904, -63.7064, 0.59", "1.86908, -246.348, -63.7448, 0.59", "1.78805, -246.903, -63.7754, 0.29", "1.71905, -247.818, -63.8352, 0.29", "1.70509, -248.631, -63.9009, 1.55", "1.72716, -249.496, -63.973, 2.58", "1.73901, -249.809, -63.9916, 2.87" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "5.14655, -79.5, -21.9504, 0.66", "5.45446, -80.7754, -21.8902, 0.66", "5.64456, -81.4891, -21.8696, 0.59", "5.8278, -82.1256, -21.8456, 0.44", "5.97959, -82.6142, -21.82, 0.44", "6.26811, -83.513, -21.7687, 0.44", "6.56841, -84.4319, -21.6992, 0.44", "7.01943, -85.7127, -21.5691, 0.44", "7.24169, -86.3153, -21.5094, 0.44", "7.56327, -87.1993, -21.4227, 1.33", "7.6972, -87.5913, -21.3883, 1.77", "7.85742, -88.0811, -21.3333, 1.99", "8.07938, -88.7416, -21.2498, 1.69", "8.29405, -89.3626, -21.1387, 0.96", "8.51124, -90.0031, -20.9853, 0.37", "8.8035, -90.8824, -20.7052, 0.29", "9.0616, -91.6258, -20.4204, 0.29", "9.32008, -92.3277, -20.0938, 0.29", "9.74866, -93.4823, -19.4717, 0.29", "9.97946, -94.0901, -19.1161, 1.25", "10.2333, -94.7333, -18.7105, 1.69", "10.4522, -95.2722, -18.3604, 1.84", "10.9144, -96.3441, -17.6675, 0.44", "11.1229, -96.7817, -17.3886, 0.37", "11.4479, -97.438, -17.0467, 0.29", "11.6798, -97.8947, -16.8536, 0.81", "11.85, -98.2351, -16.7341, 0.96", "12.1336, -98.8266, -16.5572, 0.59", "12.631, -99.9205, -16.3007, 0.29", "13.1064, -101.104, -16.0667, 0.29", "13.2975, -101.739, -15.9759, 1.03", "13.4022, -102.234, -15.9296, 1.33", "13.4419, -102.527, -15.9118, 1.47", "13.4595, -103.076, -15.9045, 0.81", "13.376, -104.012, -15.9137, 0.22", "13.183, -105.041, -15.9149, 0.22", "13.0714, -105.48, -15.9185, 0.66", "13.0215, -105.64, -15.9205, 0.66", "12.6672, -106.537, -15.9304, 0.22", "12.4133, -107.045, -15.9323, 1.55", "12.2013, -107.408, -15.931, 1.84", "11.9979, -107.729, -15.9279, 2.06", "11.512, -108.476, -15.9182, 0.22", "10.8122, -109.536, -15.8966, 0.22", "9.88207, -110.939, -15.8727, 0.22", "9.50102, -111.524, -15.8621, 0.81", "9.27197, -111.885, -15.857, 1.03", "9.15639, -112.073, -15.8548, 1.03", "8.68361, -112.917, -15.8681, 0.22", "8.34037, -113.714, -15.9326, 0.22", "8.26801, -113.996, -15.9429, 0.59", "8.18814, -114.451, -15.9302, 1.11", "8.14125, -114.84, -15.8966, 1.55", "8.11496, -115.258, -15.8439, 1.77", "8.12884, -116.771, -15.5542, 0.15", "8.22633, -118.522, -15.1245, 0.15", "8.28746, -119.247, -14.9263, 0.96", "8.34311, -119.747, -14.7622, 1.55", "8.42191, -120.349, -14.5425, 2.06", "8.67793, -122.108, -13.8541, 0.22", "8.84021, -123.081, -13.4667, 0.22", "9.15412, -124.83, -12.8293, 0.22", "9.33979, -125.778, -12.4915, 1.03", "9.4727, -126.438, -12.2623, 1.62", "9.55951, -126.928, -12.0923, 1.62", "9.70866, -128.057, -11.7527, 0.22", "9.75877, -128.908, -11.5507, 0.22", "9.76679, -129.34, -11.4671, 0.74", "9.75825, -129.713, -11.4173, 0.88", "9.66142, -131.191, -11.2355, 0.22", "9.54539, -132.08, -11.134, 0.96", "9.39326, -132.667, -11.0875, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "1.73901, -249.809, -63.9916, 0.52", "1.45641, -250.883, -64.6967, 0.52", "1.17794, -251.953, -65.3592, 0.22", "1.04603, -252.466, -65.6645, 0.52", "0.942311, -252.868, -65.9019, 0.59", "0.739645, -253.628, -66.4035, 0.22", "0.463899, -254.579, -67.082, 0.22", "0.375549, -254.863, -67.3048, 0.96", "0.305066, -255.067, -67.4739, 1.25", "0.22402, -255.285, -67.6607, 1.25", "-0.330803, -256.616, -68.8106, 0.22", "-0.964294, -257.99, -70.0375, 0.22", "-1.191, -258.448, -70.4457, 1.11", "-1.35791, -258.776, -70.7257, 1.33", "-1.47469, -259.001, -70.9058, 1.33", "-1.8772, -259.775, -71.4555, 0.22", "-2.09662, -260.199, -71.6794, 0.22", "-2.25577, -260.536, -71.8196, 1.03", "-2.39838, -260.888, -71.9493, 1.47", "-2.51863, -261.241, -72.0678, 1.47", "-2.59254, -261.524, -72.1662, 0.96", "-2.69763, -262.186, -72.4138, 0.22", "-2.76633, -262.857, -72.6536, 0.22", "-2.78536, -263.3, -72.8038, 0.81", "-2.75472, -263.713, -72.9205, 1.84", "-2.65704, -264.378, -73.0934, 2.36", "-2.56082, -264.835, -73.2055, 2.36", "-2.41573, -265.379, -73.3372, 1.33", "-2.19293, -266.109, -73.5066, 0.22", "-1.56794, -268.027, -74.1008, 0.22", "-1.43651, -268.5, -74.2719, 0.81", "-1.35089, -268.847, -74.4044, 1.03", "-1.28172, -269.151, -74.5354, 1.18", "-1.22907, -269.403, -74.6549, 1.18", "-0.960594, -270.989, -75.4863, 0.22", "-0.584182, -273.97, -77.1367, 0.22", "-0.525257, -274.528, -77.4396, 0.96", "-0.458907, -275.239, -77.8305, 1.92", "-0.42292, -275.633, -78.0186, 1.92", "-0.293897, -276.918, -78.5217, 0.22", "-0.107308, -278.638, -78.9807, 0.22", "-0.0220188, -279.268, -79.0744, 0.81", "0.0802534, -279.921, -79.0795, 1.03", "0.397172, -281.908, -78.9416, 0.15", "0.526542, -282.699, -78.8473, 0.81", "0.617953, -283.279, -78.7363, 0.96", "0.862195, -285.027, -78.358, 0.22", "1.14306, -287.489, -77.8312, 0.22", "1.20048, -288.247, -77.6776, 0.52", "1.20117, -288.389, -77.6541, 0.81", "1.08393, -289.546, -77.4253, 0.22", "0.949301, -290.181, -77.2749, 1.18", "0.803529, -290.544, -77.15, 1.4", "0.661962, -290.779, -77.0521, 1.4", "0.0496228, -291.701, -76.6439, 0.22", "-0.918504, -293.101, -76.0476, 0.22", "-1.09648, -293.347, -75.9479, 0.74", "-1.39662, -293.755, -75.7924, 0.74", "-2.63383, -295.401, -75.3315, 0.22", "-3.0071, -295.862, -75.2929, 1.25", "-3.32488, -296.199, -75.3444, 1.77", "-3.54205, -296.394, -75.4075, 1.99", "-3.93997, -296.725, -75.5442, 1.99", "-4.63284, -297.257, -75.8018, 1.4", "-5.98899, -298.197, -76.362, 0.15", "-7.5858, -299.28, -77.0297, 0.15", "-7.8366, -299.447, -77.128, 0.44", "-8.04831, -299.59, -77.2049, 0.44", "-8.76137, -300.096, -77.423, 0.22", "-9.27286, -300.475, -77.5365, 0.74", "-9.50215, -300.651, -77.5734, 0.74", "-10.2302, -301.236, -77.7187, 0.22", "-10.7682, -301.689, -77.8177, 1.4", "-11.1018, -301.978, -77.9017, 1.62", "-11.356, -302.216, -77.9753, 1.62", "-12.1391, -303.013, -78.2007, 0.22", "-12.3549, -303.242, -78.2706, 0.81", "-12.5485, -303.461, -78.3406, 0.96", "-13.2607, -304.333, -78.6155, 0.22", "-14.3333, -305.733, -79.0653, 0.22", "-14.7878, -306.389, -79.2709, 0.88", "-14.9557, -306.657, -79.337, 0.88", "-15.6012, -307.748, -79.5082, 0.22", "-15.9044, -308.287, -79.544, 0.22", "-15.9906, -308.449, -79.5374, 0.96", "-16.2736, -309.009, -79.482, 0.96", "-16.8384, -310.139, -79.309, 0.22", "-17.5619, -311.632, -79.019, 0.22", "-17.7261, -311.981, -78.9325, 0.81", "-17.9142, -312.405, -78.8349, 1.11", "-18.1539, -313.068, -78.7185, 0.37", "-18.235, -313.37, -78.6839, 0.29", "-18.2871, -313.694, -78.6733, 0.81", "-18.3068, -314.26, -78.6799, 1.18", "-18.266, -315.593, -78.7331, 0.22", "-18.1836, -316.939, -78.8093, 0.22", "-18.1443, -317.426, -78.8412, 0.52", "-18.1277, -317.614, -78.8545, 0.52", "-17.9582, -319.659, -78.9924, 0.22", "-17.7934, -321.811, -79.1229, 0.22", "-17.7628, -322.216, -79.14, 0.74", "-17.7451, -322.524, -79.1526, 1.03", "-17.7336, -322.803, -79.1651, 1.03", "-17.6955, -324.266, -79.2458, 0.22", "-17.698, -324.756, -79.2821, 0.66", "-17.7047, -325.262, -79.3088, 0.81", "-17.7056, -325.523, -79.3015, 0.88", "-17.7093, -326.25, -79.2096, 0.15", "-17.7155, -326.555, -79.1142, 0.37", "-17.7243, -326.771, -78.9952, 0.52", "-17.7832, -327.597, -78.4666, 0.22", "-17.8412, -328.281, -78.0133, 0.44", "-17.9, -329.018, -77.5177, 0.22", "-17.9804, -330.082, -76.7872, 0.44", "-18.0201, -331.023, -76.1619, 0.96", "-18.0188, -331.593, -75.7962, 1.03", "-17.9663, -332.304, -75.3784, 0.22", "-17.9102, -332.589, -75.2688, 0.52", "-17.8439, -332.714, -75.2771, 0.66", "-17.2688, -333.195, -75.6385, 0.22", "-16.9289, -333.369, -75.8514, 0.74", "-16.6176, -333.479, -76.0659, 0.88", "-14.3217, -334.021, -77.8651, 0.22", "-13.955, -334.086, -78.1973, 0.22", "-12.8457, -334.211, -79.3729, 1.11", "-12.4204, -334.213, -79.9378, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "1.73901, -249.809, -63.9916, 1.69", "2.22003, -250.528, -63.6721, 1.69", "2.62029, -251.109, -63.4281, 0.22", "3.05302, -251.739, -63.1597, 0.22", "3.69914, -252.678, -62.7643, 0.88", "3.99602, -253.106, -62.5808, 1.03", "5.27896, -254.952, -61.6925, 0.22", "5.62442, -255.455, -61.4472, 0.22", "6.04533, -256.075, -61.1328, 0.81", "6.33534, -256.513, -60.9142, 1.18", "6.61307, -256.953, -60.7134, 1.18", "7.27072, -258.075, -60.2103, 0.15", "7.82191, -259.131, -59.7585, 0.15", "7.9337, -259.36, -59.68, 0.15", "8.12952, -259.792, -59.5762, 1.25", "8.25508, -260.112, -59.5248, 1.84", "8.4227, -260.601, -59.4921, 2.14", "8.55929, -261.057, -59.5041, 2.28", "8.72174, -261.638, -59.5092, 0.96", "8.89653, -262.264, -59.4886, 0.22", "9.05275, -262.817, -59.4456, 0.37", "9.12903, -263.088, -59.4142, 0.37", "9.23974, -263.477, -59.3552, 0.37", "9.46941, -264.248, -59.2086, 0.22", "9.71287, -264.947, -59.0849, 1.03", "9.81823, -265.216, -59.0466, 1.55", "9.88606, -265.378, -59.0297, 1.77", "10.0849, -265.85, -58.9927, 0.81", "10.2665, -266.295, -58.9731, 0.22", "10.6444, -267.292, -58.9735, 0.22", "10.9198, -268.116, -59.0466, 0.22", "11.051, -268.563, -59.1091, 0.81", "11.133, -268.88, -59.1625, 1.03", "11.1973, -269.143, -59.212, 1.03", "11.2849, -269.5, -59.2908, 0.88", "11.4974, -270.295, -59.5, 0.22", "11.8079, -271.192, -59.7772, 0.22", "12.0537, -271.767, -59.9564, 0.88", "12.204, -272.07, -60.0454, 1.11", "12.3612, -272.354, -60.1205, 1.11", "12.7096, -272.931, -60.2687, 0.44", "13.2122, -273.722, -60.5214, 0.22", "13.6349, -274.4, -60.6746, 0.22", "13.9429, -274.921, -60.6947, 1.33", "14.2144, -275.414, -60.6086, 2.36", "14.4254, -275.812, -60.462, 2.58", "14.9113, -276.75, -59.9225, 1.84", "15.7139, -278.31, -58.7434, 0.66", "16.1565, -279.134, -58.0147, 0.29", "16.437, -279.621, -57.5406, 1.18", "16.6466, -279.961, -57.1856, 1.33", "17.1386, -280.718, -56.3502, 0.22", "17.4711, -281.209, -55.7949, 0.22", "17.698, -281.556, -55.457, 0.22", "17.9223, -281.948, -55.0839, 1.4", "18.0336, -282.183, -54.873, 2.21", "18.1308, -282.431, -54.651, 2.5", "18.2626, -282.839, -54.2971, 2.5", "18.8188, -284.904, -52.565, 0.22", "19.043, -285.965, -51.6887, 0.22", "19.2051, -286.956, -50.883, 0.22", "19.2859, -287.555, -50.411, 0.74", "19.32, -287.857, -50.1816, 1.03", "19.3504, -288.197, -49.9379, 1.03", "19.3825, -289.304, -49.2651, 0.37", "19.395, -289.856, -48.9607, 1.11", "19.4067, -290.269, -48.7489, 1.99", "19.4288, -290.679, -48.5696, 2.28", "19.4544, -291.005, -48.4439, 2.28", "19.5775, -291.88, -48.1944, 0.29", "19.6922, -292.462, -48.0956, 0.15", "19.7584, -292.751, -48.0623, 0.44", "19.8597, -293.169, -48.0306, 0.59", "19.9211, -293.425, -48.0159, 0.59", "20.1742, -294.485, -47.9916, 0.22", "20.2487, -294.791, -47.9939, 0.52", "20.3073, -295.058, -48.0001, 0.66", "20.4928, -296.201, -48.099, 0.15", "20.5631, -296.892, -48.2137, 0.15", "20.5923, -297.409, -48.3359, 1.18", "20.5995, -297.679, -48.4184, 1.4", "20.6071, -297.89, -48.4917, 1.4", "20.6651, -299.088, -48.9793, 0.22", "20.7033, -299.757, -49.3124, 0.22", "20.7333, -300.171, -49.5349, 0.74", "20.7668, -300.59, -49.7586, 0.96", "20.8364, -301.374, -50.188, 0.29", "20.9027, -301.989, -50.5297, 1.25", "21.0019, -302.69, -50.9129, 2.28", "21.0517, -303.03, -51.0975, 2.5" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "21.0517, -303.03, -51.0975, 0.22", "22.1824, -304.019, -51.339, 0.22", "23.6361, -305.326, -51.5638, 0.22", "24.4705, -306.069, -51.6376, 0.22", "25.092, -306.634, -51.6685, 0.88", "25.4715, -306.985, -51.6737, 1.18", "25.7514, -307.243, -51.6677, 1.33", "26.6213, -308.064, -51.5565, 0.15", "27.7155, -309.12, -51.3716, 0.15", "28.2567, -309.625, -51.2651, 0.66", "28.6319, -309.978, -51.185, 1.11", "29.0692, -310.398, -51.0976, 1.4" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "21.0517, -303.03, -51.0975, 0.37", "21.0978, -304.486, -51.8381, 0.37", "21.1844, -306.295, -52.7559, 0.22", "21.2422, -307.206, -53.2066, 0.96", "21.3066, -307.806, -53.488, 1.18", "21.3658, -308.23, -53.6833, 1.18", "21.6565, -309.972, -54.4686, 0.22", "21.8223, -310.661, -54.7473, 1.33", "21.9519, -311.112, -54.9083, 1.47", "22.3262, -312.335, -55.2949, 0.22", "22.5721, -313.139, -55.5353, 1.03", "22.7012, -313.571, -55.6603, 1.03", "23.4967, -316.287, -56.4061, 0.22", "23.5967, -316.646, -56.4976, 0.59", "23.7384, -317.12, -56.6132, 0.59", "24.0073, -317.957, -56.8007, 0.15", "24.1387, -318.315, -56.871, 0.66", "24.3461, -318.832, -56.9809, 0.81", "24.5184, -319.23, -57.0739, 0.29", "25.2794, -320.928, -57.4924, 0.15", "25.5039, -321.417, -57.6073, 0.44", "25.6727, -321.765, -57.6771, 0.44", "26.6897, -323.838, -58.0694, 0.22", "27.0563, -324.605, -58.2053, 0.96", "27.3806, -325.315, -58.2856, 1.11", "27.7417, -326.232, -58.3161, 0.29", "28.4317, -328.135, -58.2347, 0.15", "28.5929, -328.608, -58.1781, 0.59", "28.7089, -328.985, -58.0983, 0.74", "29.1426, -330.729, -57.6632, 0.22", "29.4792, -332.652, -57.114, 0.22", "29.5618, -333.464, -56.8568, 0.74", "29.5746, -333.777, -56.7498, 0.74", "29.5978, -335.045, -56.299, 0.22", "29.5867, -336.096, -55.9267, 0.22", "29.5338, -336.723, -55.723, 0.81", "29.4576, -337.314, -55.5016, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_34", "dend_27", "dend_26", "dend_25", "dend_20", "dend_0", "dend_38", "dend_35", "dend_31", "dend_28", "dend_24", "dend_21", "dend_14", "dend_1", "dend_40", "dend_39", "dend_37", "dend_36", "dend_33", "dend_32", "dend_30", "dend_29", "dend_23", "dend_22", "dend_15", "dend_13", "dend_2", "dend_42", "dend_41", "dend_17", "dend_16", "dend_10", "dend_3", "dend_19", "dend_18", "dend_12", "dend_11", "dend_5", "dend_4", "dend_9", "dend_6", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_34", "dend_27", "dend_26", "dend_25", "dend_20", "dend_0", "dend_38", "dend_35", "dend_31", "dend_28", "dend_24", "dend_21", "dend_14", "dend_1", "dend_40", "dend_39", "dend_37", "dend_36", "dend_33", "dend_32", "dend_30", "dend_29", "dend_23", "dend_22", "dend_15", "dend_13", "dend_2", "dend_42", "dend_41", "dend_17", "dend_16", "dend_10", "dend_3", "dend_19", "dend_18", "dend_12", "dend_11", "dend_5", "dend_4", "dend_9", "dend_6", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_34", "dend_27", "dend_26", "dend_25", "dend_20", "dend_0", "axon_0", "dend_38", "dend_35", "dend_31", "dend_28", "dend_24", "dend_21", "dend_14", "dend_1", "axon_1", "dend_40", "dend_39", "dend_37", "dend_36", "dend_33", "dend_32", "dend_30", "dend_29", "dend_23", "dend_22", "dend_15", "dend_13", "dend_2", "dend_42", "dend_41", "dend_17", "dend_16", "dend_10", "dend_3", "dend_19", "dend_18", "dend_12", "dend_11", "dend_5", "dend_4", "dend_9", "dend_6", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_SBC_12caedd28c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_27, dend_26, dend_25, dend_20, dend_0, dend_38, dend_35, dend_31, dend_28, dend_24, dend_21, dend_14, dend_1, dend_40, dend_39, dend_37, dend_36, dend_33, dend_32, dend_30, dend_29, dend_23, dend_22, dend_15, dend_13, dend_2, dend_42, dend_41, dend_17, dend_16, dend_10, dend_3, dend_19, dend_18, dend_12, dend_11, dend_5, dend_4, dend_9, dend_6, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_34, dend_27, dend_26, dend_25, dend_20, dend_0, dend_38, dend_35, dend_31, dend_28, dend_24, dend_21, dend_14, dend_1, dend_40, dend_39, dend_37, dend_36, dend_33, dend_32, dend_30, dend_29, dend_23, dend_22, dend_15, dend_13, dend_2, dend_42, dend_41, dend_17, dend_16, dend_10, dend_3, dend_19, dend_18, dend_12, dend_11, dend_5, dend_4, dend_9, dend_6, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_34, dend_27, dend_26, dend_25, dend_20, dend_0, axon_0, dend_38, dend_35, dend_31, dend_28, dend_24, dend_21, dend_14, dend_1, axon_1, dend_40, dend_39, dend_37, dend_36, dend_33, dend_32, dend_30, dend_29, dend_23, dend_22, dend_15, dend_13, dend_2, dend_42, dend_41, dend_17, dend_16, dend_10, dend_3, dend_19, dend_18, dend_12, dend_11, dend_5, dend_4, dend_9, dend_6, dend_8, dend_7]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_34(0), soma_0(0.49999975618502873)
    connect dend_27(0), soma_0(0.49999975618502873)
    connect dend_26(0), soma_0(0.49999975618502873)
    connect dend_25(0), soma_0(0.49999975618502873)
    connect dend_20(0), soma_0(0.49999975618502873)
    connect dend_0(0), soma_0(0.49999975618502873)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.13028, -11.6226, 1.65672, 3.3543 ) }
    soma_0 { pt3dadd( 1.89603, -10.6065, 1.5057, 5.84145 ) }
    soma_0 { pt3dadd( 1.66177, -9.59039, 1.35468, 8.98469 ) }
    soma_0 { pt3dadd( 1.42751, -8.57427, 1.20366, 10.1954 ) }
    soma_0 { pt3dadd( 1.19325, -7.55816, 1.05265, 11.9017 ) }
    soma_0 { pt3dadd( 0.958989, -6.54205, 0.901631, 13.2141 ) }
    soma_0 { pt3dadd( 0.72473, -5.52593, 0.750614, 14.1624 ) }
    soma_0 { pt3dadd( 0.490471, -4.50982, 0.599597, 14.8105 ) }
    soma_0 { pt3dadd( 0.256212, -3.49371, 0.44858, 15.133 ) }
    soma_0 { pt3dadd( 0.0219531, -2.47759, 0.297563, 15.4087 ) }
    soma_0 { pt3dadd( -0.212306, -1.46148, 0.146546, 15.7558 ) }
    soma_0 { pt3dadd( -0.446565, -0.445366, -0.00447116, 16.1589 ) }
    soma_0 { pt3dadd( -0.680824, 0.570747, -0.155488, 16.481 ) }
    soma_0 { pt3dadd( -0.915083, 1.58686, -0.306505, 16.3666 ) }
    soma_0 { pt3dadd( -1.14934, 2.60297, -0.457522, 16.058 ) }
    soma_0 { pt3dadd( -1.3836, 3.61909, -0.608539, 15.598 ) }
    soma_0 { pt3dadd( -1.61786, 4.6352, -0.759556, 14.7754 ) }
    soma_0 { pt3dadd( -1.85212, 5.65131, -0.910573, 13.4156 ) }
    soma_0 { pt3dadd( -2.08638, 6.66743, -1.06159, 9.84057 ) }
    soma_0 { pt3dadd( -2.32064, 7.68354, -1.21261, 7.78253 ) }
    soma_0 { pt3dadd( -2.5549, 8.69965, -1.36362, 4.37258 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 21/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 5.64816, 4.60987, -4.16268, 1.4 ) }
    dend_34 { pt3dadd( 6.43715, 5.42174, -4.47654, 1.4 ) }
    dend_34 { pt3dadd( 7.40919, 6.35221, -4.86418, 1.55 ) }
    dend_34 { pt3dadd( 8.32148, 7.19536, -5.25045, 1.77 ) }
    dend_34 { pt3dadd( 9.28029, 8.04839, -5.64519, 1.77 ) }
    dend_34 { pt3dadd( 10.2181, 8.86892, -6.0571, 1.55 ) }
    dend_34 { pt3dadd( 11.3868, 9.86026, -6.61963, 1.25 ) }
    dend_34 { pt3dadd( 12.0717, 10.4007, -6.98727, 1.4 ) }
    dend_34 { pt3dadd( 12.9415, 11.0722, -7.43951, 1.4 ) }
    dend_34 { pt3dadd( 13.7555, 11.7142, -7.84934, 1.77 ) }
    dend_34 { pt3dadd( 14.5583, 12.3857, -8.20637, 2.28 ) }
    dend_34 { pt3dadd( 15.3231, 13.056, -8.45602, 2.28 ) }
    dend_34 { pt3dadd( 16.2026, 13.8371, -8.69535, 2.36 ) }
    dend_34 { pt3dadd( 17.3578, 14.8903, -8.94014, 1.84 ) }
    dend_34 { pt3dadd( 18.4632, 15.9162, -9.07723, 1.11 ) }
    dend_34 { pt3dadd( 19.4368, 16.8476, -9.11055, 1.33 ) }
    dend_34 { pt3dadd( 20.783, 18.144, -8.95764, 1.92 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 38/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 5.20816, 3.88837, 3.65732, 2.28 ) }
    dend_27 { pt3dadd( 5.57825, 4.37084, 4.46212, 2.28 ) }
    dend_27 { pt3dadd( 6.65145, 5.76079, 6.64824, 2.28 ) }
    dend_27 { pt3dadd( 7.05631, 6.28774, 7.4166, 2.06 ) }
    dend_27 { pt3dadd( 8.15527, 7.73862, 9.41095, 2.14 ) }
    dend_27 { pt3dadd( 8.64379, 8.37951, 10.2696, 1.47 ) }
    dend_27 { pt3dadd( 9.55449, 9.51952, 11.805, 0.96 ) }
    dend_27 { pt3dadd( 9.83222, 9.85297, 12.259, 1.4 ) }
    dend_27 { pt3dadd( 10.1839, 10.2422, 12.7762, 1.4 ) }
    dend_27 { pt3dadd( 10.7369, 10.7876, 13.559, 1.55 ) }
    dend_27 { pt3dadd( 11.2902, 11.2711, 14.2878, 1.69 ) }
    dend_27 { pt3dadd( 12.1083, 11.9164, 15.4213, 1.47 ) }
    dend_27 { pt3dadd( 12.653, 12.3554, 16.1951, 1.33 ) }
    dend_27 { pt3dadd( 13.185, 12.8301, 16.9771, 1.84 ) }
    dend_27 { pt3dadd( 13.5647, 13.2118, 17.5307, 2.06 ) }
    dend_27 { pt3dadd( 14.1138, 13.8871, 18.2883, 2.28 ) }
    dend_27 { pt3dadd( 14.8933, 15.0982, 19.2546, 1.99 ) }
    dend_27 { pt3dadd( 15.4292, 16.1511, 19.8165, 1.47 ) }
    dend_27 { pt3dadd( 15.8609, 17.1356, 20.1641, 1.47 ) }
    dend_27 { pt3dadd( 16.2034, 18.0815, 20.3581, 1.33 ) }
    dend_27 { pt3dadd( 16.6321, 19.5406, 20.4826, 1.62 ) }
    dend_27 { pt3dadd( 16.8839, 20.6892, 20.4401, 1.55 ) }
    dend_27 { pt3dadd( 17.0423, 21.6463, 20.3279, 1.33 ) }
    dend_27 { pt3dadd( 17.1736, 22.5711, 20.1983, 1.18 ) }
    dend_27 { pt3dadd( 17.2989, 23.4585, 20.1097, 0.96 ) }
    dend_27 { pt3dadd( 17.4206, 24.2046, 20.079, 0.96 ) }
    dend_27 { pt3dadd( 17.6519, 25.2896, 20.1324, 0.96 ) }
    dend_27 { pt3dadd( 18.0162, 26.6082, 20.3239, 1.18 ) }
    dend_27 { pt3dadd( 18.3144, 27.4422, 20.5038, 1.4 ) }
    dend_27 { pt3dadd( 18.7468, 28.4491, 20.7687, 1.4 ) }
    dend_27 { pt3dadd( 19.06, 29.0999, 20.953, 1.47 ) }
    dend_27 { pt3dadd( 19.4854, 29.9638, 21.1866, 1.25 ) }
    dend_27 { pt3dadd( 19.8254, 30.6654, 21.3221, 1.03 ) }
    dend_27 { pt3dadd( 20.3322, 31.8102, 21.4157, 0.96 ) }
    dend_27 { pt3dadd( 20.8048, 32.9612, 21.3866, 0.81 ) }
    dend_27 { pt3dadd( 21.1004, 33.7772, 21.2896, 0.66 ) }
    dend_27 { pt3dadd( 21.4005, 34.6951, 21.1645, 0.74 ) }
    dend_27 { pt3dadd( 21.7958, 36.0258, 20.9774, 0.59 ) }
    dend_27 { pt3dadd( 22.0733, 37.0012, 20.8538, 0.44 ) }
    dend_27 { pt3dadd( 22.3652, 38.0313, 20.7592, 0.44 ) }
    dend_27 { pt3dadd( 22.6991, 39.1451, 20.691, 0.59 ) }
    dend_27 { pt3dadd( 23.023, 40.1401, 20.6841, 0.88 ) }
    dend_27 { pt3dadd( 23.3991, 41.2447, 20.7293, 1.77 ) }
    dend_27 { pt3dadd( 23.6382, 41.9468, 20.8245, 1.92 ) }
    dend_27 { pt3dadd( 23.9565, 42.8841, 20.9894, 1.4 ) }
    dend_27 { pt3dadd( 24.2768, 43.8074, 21.1865, 1.18 ) }
    dend_27 { pt3dadd( 24.6855, 44.8235, 21.4372, 0.52 ) }
    dend_27 { pt3dadd( 24.9438, 45.3807, 21.5812, 0.66 ) }
    dend_27 { pt3dadd( 25.4995, 46.4151, 21.9156, 0.66 ) }
    dend_27 { pt3dadd( 25.6764, 46.7039, 22.0251, 0.88 ) }
    dend_27 { pt3dadd( 26.2522, 47.5297, 22.3848, 0.66 ) }
    dend_27 { pt3dadd( 26.7344, 48.1535, 22.6853, 0.52 ) }
    dend_27 { pt3dadd( 27.2675, 48.7469, 22.9598, 0.81 ) }
    dend_27 { pt3dadd( 27.7165, 49.212, 23.1804, 0.81 ) }
    dend_27 { pt3dadd( 28.2702, 49.7827, 23.422, 0.74 ) }
    dend_27 { pt3dadd( 28.56, 50.106, 23.5571, 0.52 ) }
    dend_27 { pt3dadd( 29.084, 50.7411, 23.8037, 0.29 ) }
    dend_27 { pt3dadd( 29.6508, 51.5101, 24.0621, 0.29 ) }
    dend_27 { pt3dadd( 30.2977, 52.4714, 24.3432, 0.44 ) }
    dend_27 { pt3dadd( 30.984, 53.5662, 24.5957, 0.59 ) }
    dend_27 { pt3dadd( 31.6791, 54.7586, 24.8062, 0.59 ) }
    dend_27 { pt3dadd( 32.1367, 55.5697, 24.9149, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( 32.4442, 56.1333, 24.9679, 1.11 ) }
    dend_27 { pt3dadd( 32.7167, 56.6494, 24.9947, 1.33 ) }
    dend_27 { pt3dadd( 33.3242, 57.7341, 25.0018, 1.62 ) }
    dend_27 { pt3dadd( 33.7835, 58.5392, 25.0029, 2.06 ) }
    dend_27 { pt3dadd( 34.1313, 59.1247, 24.9951, 2.43 ) }
    dend_27 { pt3dadd( 34.5742, 59.8668, 25.0011, 2.58 ) }
    dend_27 { pt3dadd( 34.9316, 60.4703, 25.0239, 2.58 ) }
    dend_27 { pt3dadd( 35.2955, 61.1008, 25.0706, 2.36 ) }
    dend_27 { pt3dadd( 35.6038, 61.673, 25.135, 2.36 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 9/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 6.55816, -6.17364, -1.59268, 0.96 ) }
    dend_26 { pt3dadd( 6.94493, -6.33592, -1.7336, 0.96 ) }
    dend_26 { pt3dadd( 7.52113, -6.63796, -2.03831, 0.74 ) }
    dend_26 { pt3dadd( 8.04205, -6.96108, -2.39937, 0.81 ) }
    dend_26 { pt3dadd( 8.62942, -7.29257, -3.11151, 0.81 ) }
    dend_26 { pt3dadd( 8.92589, -7.43576, -3.58702, 1.25 ) }
    dend_26 { pt3dadd( 9.3098, -7.5761, -4.24476, 1.03 ) }
    dend_26 { pt3dadd( 9.82445, -7.71472, -5.21251, 1.03 ) }
    dend_26 { pt3dadd( 10.3374, -7.82365, -6.21448, 1.25 ) }
    dend_26 { pt3dadd( 11.8366, -8.1054, -9.04931, 1.25 ) }
    dend_26 { pt3dadd( 12.3998, -8.21704, -10.0323, 1.25 ) }
    dend_26 { pt3dadd( 12.8462, -8.3245, -10.7125, 0.74 ) }
    dend_26 { pt3dadd( 13.3923, -8.47656, -11.3901, 0.59 ) }
    dend_26 { pt3dadd( 14.0149, -8.69148, -12.0299, 0.81 ) }
    dend_26 { pt3dadd( 14.8567, -9.07003, -12.7194, 0.96 ) }
    dend_26 { pt3dadd( 15.6141, -9.50523, -13.2268, 1.18 ) }
    dend_26 { pt3dadd( 16.5089, -10.0424, -13.8659, 0.96 ) }
    dend_26 { pt3dadd( 17.588, -10.7039, -14.6906, 1.03 ) }
    dend_26 { pt3dadd( 18.5318, -11.2717, -15.4729, 1.03 ) }
    dend_26 { pt3dadd( 19.0457, -11.5684, -15.9101, 0.88 ) }
    dend_26 { pt3dadd( 19.9937, -12.0876, -16.7277, 0.88 ) }
    dend_26 { pt3dadd( 20.9602, -12.5887, -17.5326, 0.88 ) }
    dend_26 { pt3dadd( 21.6076, -12.9208, -18.036, 0.74 ) }
    dend_26 { pt3dadd( 22.8942, -13.554, -18.9523, 0.59 ) }
    dend_26 { pt3dadd( 23.4951, -13.8182, -19.3822, 0.81 ) }
    dend_26 { pt3dadd( 24.0094, -14.0198, -19.8003, 0.81 ) }
    dend_26 { pt3dadd( 24.7462, -14.2824, -20.439, 0.37 ) }
    dend_26 { pt3dadd( 25.2844, -14.4639, -20.9094, 0.37 ) }
    dend_26 { pt3dadd( 26.0418, -14.7037, -21.569, 1.18 ) }
    dend_26 { pt3dadd( 27.1508, -15.0373, -22.5085, 1.69 ) }
    dend_26 { pt3dadd( 28.7602, -15.5475, -23.8666, 0.37 ) }
    dend_26 { pt3dadd( 29.3474, -15.7726, -24.3434, 0.59 ) }
    dend_26 { pt3dadd( 30.1683, -16.1581, -24.9823, 0.22 ) }
    dend_26 { pt3dadd( 30.8787, -16.5669, -25.5179, 1.03 ) }
    dend_26 { pt3dadd( 31.2518, -16.8218, -25.7863, 1.25 ) }
    dend_26 { pt3dadd( 31.6612, -17.1476, -26.0494, 1.25 ) }
    dend_26 { pt3dadd( 32.5915, -17.9462, -26.6977, 0.22 ) }
    dend_26 { pt3dadd( 33.1393, -18.4188, -27.1294, 1.03 ) }
    dend_26 { pt3dadd( 33.8056, -19.0122, -27.7116, 1.55 ) }
    dend_26 { pt3dadd( 34.1368, -19.3124, -28.0215, 1.77 ) }
    dend_26 { pt3dadd( 34.6185, -19.7579, -28.4852, 1.4 ) }
    dend_26 { pt3dadd( 35.7862, -20.7783, -29.6323, 0.37 ) }
    dend_26 { pt3dadd( 36.1129, -21.0258, -29.9369, 0.37 ) }
    dend_26 { pt3dadd( 36.6991, -21.4051, -30.431, 0.59 ) }
    dend_26 { pt3dadd( 37.239, -21.6555, -30.7765, 0.81 ) }
    dend_26 { pt3dadd( 37.8357, -21.8552, -31.0909, 0.81 ) }
    dend_26 { pt3dadd( 38.7117, -22.0572, -31.4816, 1.18 ) }
    dend_26 { pt3dadd( 39.5609, -22.1896, -31.7995, 0.88 ) }
    dend_26 { pt3dadd( 40.8118, -22.3143, -32.2494, 0.22 ) }
    dend_26 { pt3dadd( 42.7508, -22.4087, -32.9355, 0.22 ) }
    dend_26 { pt3dadd( 43.5141, -22.4354, -33.1956, 0.81 ) }
    dend_26 { pt3dadd( 44.0067, -22.454, -33.3581, 1.25 ) }
    dend_26 { pt3dadd( 44.6412, -22.4949, -33.5788, 1.4 ) }
    dend_26 { pt3dadd( 45.3837, -22.5636, -33.8616, 1.03 ) }
    dend_26 { pt3dadd( 46.235, -22.7084, -34.2379, 0.22 ) }
    dend_26 { pt3dadd( 47.4821, -23.064, -34.8846, 0.22 ) }
    dend_26 { pt3dadd( 47.9118, -23.225, -35.1183, 0.96 ) }
    dend_26 { pt3dadd( 48.5256, -23.4889, -35.4822, 1.18 ) }
    dend_26 { pt3dadd( 48.9132, -23.6657, -35.7628, 1.33 ) }
    dend_26 { pt3dadd( 50.371, -24.3806, -37.016, 0.22 ) }
    dend_26 { pt3dadd( 50.7489, -24.577, -37.395, 0.74 ) }
    dend_26 { pt3dadd( 51.1368, -24.7893, -37.8249, 1.33 ) }
    dend_26 { pt3dadd( 51.8543, -25.1832, -38.6612, 1.55 ) }
    dend_26 { pt3dadd( 53.0413, -25.8362, -40.1005, 0.66 ) }
    dend_26 { pt3dadd( 53.6492, -26.1673, -40.8664, 0.29 ) }
    dend_26 { pt3dadd( 54.1469, -26.4263, -41.5059, 0.52 ) }
    dend_26 { pt3dadd( 54.9435, -26.8246, -42.5045, 0.29 ) }
    dend_26 { pt3dadd( 55.6859, -27.1739, -43.4386, 0.96 ) }
    dend_26 { pt3dadd( 56.2719, -27.4469, -44.1774, 0.96 ) }
    dend_26 { pt3dadd( 57.3203, -27.9171, -45.4388, 0.29 ) }
    dend_26 { pt3dadd( 57.9684, -28.1746, -46.2304, 0.29 ) }
    dend_26 { pt3dadd( 58.602, -28.4082, -47.0203, 1.03 ) }
    dend_26 { pt3dadd( 59.4866, -28.7157, -48.1003, 1.03 ) }
    dend_26 { pt3dadd( 60.4625, -29.0652, -49.1754, 0.37 ) }
    dend_26 { pt3dadd( 61.1287, -29.3326, -49.9397, 0.22 ) }
    dend_26 { pt3dadd( 61.9568, -29.6889, -50.9098, 0.88 ) }
    dend_26 { pt3dadd( 62.5139, -29.9578, -51.5376, 0.88 ) }
    dend_26 { pt3dadd( 63.6919, -30.5868, -52.8104, 0.22 ) }
    dend_26 { pt3dadd( 64.9258, -31.303, -54.1038, 1.03 ) }
    dend_26 { pt3dadd( 67.3508, -32.9239, -56.641, 0.22 ) }
    dend_26 { pt3dadd( 67.907, -33.3595, -57.2427, 0.44 ) }
    dend_26 { pt3dadd( 69.0187, -34.3524, -58.4621, 0.29 ) }
    dend_26 { pt3dadd( 69.7258, -35.0211, -59.2533, 0.81 ) }
    dend_26 { pt3dadd( 70.128, -35.4421, -59.7297, 0.81 ) }
    dend_26 { pt3dadd( 71.5074, -37.0457, -61.3527, 0.22 ) }
    dend_26 { pt3dadd( 72.6724, -38.5519, -62.5174, 0.66 ) }
    dend_26 { pt3dadd( 73.0622, -39.1194, -62.9457, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 96/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.56184, -3.97013, -7.16268, 0.66 ) }
    dend_25 { pt3dadd( -8.15275, -4.23572, -6.92168, 0.66 ) }
    dend_25 { pt3dadd( -8.80896, -4.50539, -6.71364, 0.74 ) }
    dend_25 { pt3dadd( -10.1534, -5.04165, -6.39493, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_25 { pt3dadd( -10.7944, -5.31583, -6.28268, 0.59 ) }
    dend_25 { pt3dadd( -11.6011, -5.66968, -6.18169, 0.74 ) }
    dend_25 { pt3dadd( -12.5107, -6.06751, -6.09759, 0.96 ) }
    dend_25 { pt3dadd( -13.0753, -6.32594, -6.08196, 1.4 ) }
    dend_25 { pt3dadd( -13.7119, -6.63047, -6.07704, 1.4 ) }
    dend_25 { pt3dadd( -15.1042, -7.35267, -6.10951, 1.25 ) }
    dend_25 { pt3dadd( -16.2827, -8.03281, -6.12763, 0.74 ) }
    dend_25 { pt3dadd( -17.3915, -8.72353, -6.1206, 0.37 ) }
    dend_25 { pt3dadd( -18.4549, -9.44291, -6.08061, 0.37 ) }
    dend_25 { pt3dadd( -19.5873, -10.2252, -6.02276, 1.03 ) }
    dend_25 { pt3dadd( -20.1423, -10.6133, -5.98234, 1.4 ) }
    dend_25 { pt3dadd( -20.8452, -11.1115, -5.93773, 1.33 ) }
    dend_25 { pt3dadd( -21.6602, -11.7105, -5.89481, 0.74 ) }
    dend_25 { pt3dadd( -22.5863, -12.3753, -5.87395, 0.22 ) }
    dend_25 { pt3dadd( -23.103, -12.6968, -5.89739, 0.22 ) }
    dend_25 { pt3dadd( -23.4942, -12.9096, -5.96332, 0.22 ) }
    dend_25 { pt3dadd( -24.7693, -13.5193, -6.31755, 1.25 ) }
    dend_25 { pt3dadd( -25.1231, -13.6615, -6.46508, 1.55 ) }
    dend_25 { pt3dadd( -25.5341, -13.8137, -6.68052, 1.55 ) }
    dend_25 { pt3dadd( -26.5005, -14.1526, -7.23212, 1.18 ) }
    dend_25 { pt3dadd( -27.2677, -14.4684, -7.66967, 1.33 ) }
    dend_25 { pt3dadd( -28.0856, -14.8461, -8.12214, 1.55 ) }
    dend_25 { pt3dadd( -29.3301, -15.5082, -8.76994, 0.74 ) }
    dend_25 { pt3dadd( -30.8773, -16.4774, -9.49907, 0.44 ) }
    dend_25 { pt3dadd( -31.4577, -16.9306, -9.74873, 0.44 ) }
    dend_25 { pt3dadd( -32.5988, -18.0314, -10.1712, 0.29 ) }
    dend_25 { pt3dadd( -33.1449, -18.6422, -10.3324, 0.59 ) }
    dend_25 { pt3dadd( -33.7195, -19.3678, -10.4479, 0.81 ) }
    dend_25 { pt3dadd( -34.2084, -20.0674, -10.5083, 0.37 ) }
    dend_25 { pt3dadd( -35.151, -21.5444, -10.5762, 0.29 ) }
    dend_25 { pt3dadd( -35.8378, -22.6616, -10.6099, 0.74 ) }
    dend_25 { pt3dadd( -36.386, -23.564, -10.6527, 1.25 ) }
    dend_25 { pt3dadd( -36.9476, -24.4531, -10.7333, 1.77 ) }
    dend_25 { pt3dadd( -37.5004, -25.3079, -10.837, 2.06 ) }
    dend_25 { pt3dadd( -38.0054, -26.1228, -10.948, 1.77 ) }
    dend_25 { pt3dadd( -38.6426, -27.2275, -11.2136, 0.66 ) }
    dend_25 { pt3dadd( -39.1813, -28.2308, -11.563, 0.29 ) }
    dend_25 { pt3dadd( -39.6408, -29.1467, -11.9549, 0.22 ) }
    dend_25 { pt3dadd( -40.0081, -29.9064, -12.3191, 0.22 ) }
    dend_25 { pt3dadd( -40.3671, -30.6663, -12.7552, 0.22 ) }
    dend_25 { pt3dadd( -41.3645, -32.649, -14.1075, 0.96 ) }
    dend_25 { pt3dadd( -41.6309, -33.125, -14.4686, 1.4 ) }
    dend_25 { pt3dadd( -41.8803, -33.5235, -14.7722, 1.55 ) }
    dend_25 { pt3dadd( -42.3203, -34.1615, -15.2862, 0.96 ) }
    dend_25 { pt3dadd( -43.1531, -35.1963, -16.1966, 0.37 ) }
    dend_25 { pt3dadd( -44.0377, -36.1514, -17.0252, 0.15 ) }
    dend_25 { pt3dadd( -45.0191, -37.1634, -17.8325, 0.15 ) }
    dend_25 { pt3dadd( -45.5031, -37.6794, -18.2179, 1.18 ) }
    dend_25 { pt3dadd( -46.0866, -38.3249, -18.6607, 1.69 ) }
    dend_25 { pt3dadd( -46.2753, -38.5484, -18.794, 1.92 ) }
    dend_25 { pt3dadd( -47.0463, -39.5683, -19.2656, 1.18 ) }
    dend_25 { pt3dadd( -47.542, -40.3753, -19.5854, 0.59 ) }
    dend_25 { pt3dadd( -48.2625, -42.0094, -20.1447, 0.22 ) }
    dend_25 { pt3dadd( -48.534, -42.8672, -20.4105, 0.22 ) }
    dend_25 { pt3dadd( -48.6774, -43.5309, -20.6232, 0.96 ) }
    dend_25 { pt3dadd( -48.7538, -44.0939, -20.8193, 1.25 ) }
    dend_25 { pt3dadd( -48.7997, -44.9463, -21.1733, 1.4 ) }
    dend_25 { pt3dadd( -48.8065, -46.572, -21.9242, 0.22 ) }
    dend_25 { pt3dadd( -48.777, -47.2287, -22.2707, 1.03 ) }
    dend_25 { pt3dadd( -48.7157, -48.5641, -23.0361, 1.18 ) }
    dend_25 { pt3dadd( -48.7068, -49.0817, -23.3493, 0.88 ) }
    dend_25 { pt3dadd( -48.7326, -50.5687, -24.291, 0.22 ) }
    dend_25 { pt3dadd( -48.7731, -51.2875, -24.7686, 0.66 ) }
    dend_25 { pt3dadd( -48.8257, -51.7896, -25.1214, 0.81 ) }
    dend_25 { pt3dadd( -48.9407, -52.5633, -25.6346, 0.52 ) }
    dend_25 { pt3dadd( -49.0475, -53.0634, -25.9423, 0.22 ) }
    dend_25 { pt3dadd( -49.2072, -53.6059, -26.3126, 0.66 ) }
    dend_25 { pt3dadd( -49.495, -54.2306, -26.7918, 0.81 ) }
    dend_25 { pt3dadd( -49.749, -54.6994, -27.1596, 0.81 ) }
    dend_25 { pt3dadd( -49.9368, -55.0273, -27.4066, 1.03 ) }
    dend_25 { pt3dadd( -50.5066, -56.0044, -28.1282, 0.88 ) }
    dend_25 { pt3dadd( -51.1091, -57.0277, -28.8628, 0.52 ) }
    dend_25 { pt3dadd( -52.7661, -59.7749, -30.673, 0.22 ) }
    dend_25 { pt3dadd( -53.6069, -61.0979, -31.4947, 0.22 ) }
    dend_25 { pt3dadd( -54.1603, -61.9332, -31.9844, 1.03 ) }
    dend_25 { pt3dadd( -54.5577, -62.5205, -32.2936, 1.25 ) }
    dend_25 { pt3dadd( -54.9914, -63.1373, -32.5579, 1.18 ) }
    dend_25 { pt3dadd( -56.5168, -65.1784, -33.2157, 0.15 ) }
    dend_25 { pt3dadd( -57.1749, -65.9327, -33.4598, 0.15 ) }
    dend_25 { pt3dadd( -57.5729, -66.3371, -33.6549, 0.88 ) }
    dend_25 { pt3dadd( -58.2145, -66.9364, -34.0902, 1.18 ) }
    dend_25 { pt3dadd( -58.9549, -67.5771, -34.7, 0.52 ) }
    dend_25 { pt3dadd( -59.5779, -68.1387, -35.5107, 0.22 ) }
    dend_25 { pt3dadd( -60.8643, -69.327, -37.7666, 0.88 ) }
    dend_25 { pt3dadd( -61.724, -70.1179, -39.381, 1.18 ) }
    dend_25 { pt3dadd( -62.6346, -70.9264, -41.1299, 0.88 ) }
    dend_25 { pt3dadd( -63.2772, -71.4734, -42.379, 0.66 ) }
    dend_25 { pt3dadd( -65.9451, -73.7568, -47.6148, 0.29 ) }
    dend_25 { pt3dadd( -67.1198, -74.7523, -49.849, 0.37 ) }
    dend_25 { pt3dadd( -68.0203, -75.508, -51.4555, 0.22 ) }
    dend_25 { pt3dadd( -68.394, -75.8014, -52.0333, 0.66 ) }
    dend_25 { pt3dadd( -68.961, -76.2267, -52.7996, 0.88 ) }
    dend_25 { pt3dadd( -70.5807, -77.3891, -54.695, 0.22 ) }
    dend_25 { pt3dadd( -71.3814, -77.9115, -55.4103, 0.66 ) }
    dend_25 { pt3dadd( -71.9432, -78.2881, -55.8876, 0.66 ) }
    dend_25 { pt3dadd( -73.7867, -79.5798, -57.5996, 0.22 ) }
    dend_25 { pt3dadd( -74.5087, -80.0982, -58.2852, 0.44 ) }
    dend_25 { pt3dadd( -75.2496, -80.6177, -58.9719, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 98/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.08184, 2.70862, -1.34268, 0.96 ) }
    dend_20 { pt3dadd( -8.08184, 2.70862, -1.34268, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( -8.25865, 2.91249, -1.40635, 0.96 ) }
    dend_20 { pt3dadd( -8.6916, 3.30967, -1.53736, 0.66 ) }
    dend_20 { pt3dadd( -9.04803, 3.5693, -1.62526, 0.66 ) }
    dend_20 { pt3dadd( -9.58511, 3.89907, -1.74186, 1.33 ) }
    dend_20 { pt3dadd( -9.99731, 4.1274, -1.82097, 1.84 ) }
    dend_20 { pt3dadd( -10.4733, 4.35731, -1.89989, 1.84 ) }
    dend_20 { pt3dadd( -11.123, 4.61681, -2.00186, 1.25 ) }
    dend_20 { pt3dadd( -11.7397, 4.81525, -2.09084, 0.81 ) }
    dend_20 { pt3dadd( -12.2305, 4.93971, -2.14022, 0.74 ) }
    dend_20 { pt3dadd( -12.7617, 5.05882, -2.17809, 0.74 ) }
    dend_20 { pt3dadd( -13.2678, 5.17009, -2.19891, 0.88 ) }
    dend_20 { pt3dadd( -13.7618, 5.277, -2.21792, 0.88 ) }
    dend_20 { pt3dadd( -14.058, 5.34385, -2.23747, 0.88 ) }
    dend_20 { pt3dadd( -14.6577, 5.4758, -2.2884, 1.33 ) }
    dend_20 { pt3dadd( -15.0699, 5.55395, -2.32658, 1.55 ) }
    dend_20 { pt3dadd( -15.471, 5.61406, -2.3695, 1.55 ) }
    dend_20 { pt3dadd( -16.0623, 5.68716, -2.44448, 1.33 ) }
    dend_20 { pt3dadd( -16.7276, 5.75102, -2.53657, 0.74 ) }
    dend_20 { pt3dadd( -17.1217, 5.77828, -2.60035, 0.52 ) }
    dend_20 { pt3dadd( -17.7304, 5.80483, -2.71975, 0.52 ) }
    dend_20 { pt3dadd( -18.1896, 5.80898, -2.80864, 0.88 ) }
    dend_20 { pt3dadd( -18.6194, 5.81001, -2.88733, 0.88 ) }
    dend_20 { pt3dadd( -19.0608, 5.81325, -2.9652, 0.96 ) }
    dend_20 { pt3dadd( -19.4653, 5.81508, -3.01181, 0.96 ) }
    dend_20 { pt3dadd( -19.7935, 5.81245, -3.02552, 0.81 ) }
    dend_20 { pt3dadd( -20.298, 5.80581, -3.01433, 0.59 ) }
    dend_20 { pt3dadd( -20.7518, 5.79981, -2.96987, 0.52 ) }
    dend_20 { pt3dadd( -21.3104, 5.79317, -2.87872, 0.44 ) }
    dend_20 { pt3dadd( -21.9471, 5.78724, -2.75358, 0.37 ) }
    dend_20 { pt3dadd( -22.8077, 5.76877, -2.55099, 1.25 ) }
    dend_20 { pt3dadd( -23.2039, 5.7553, -2.43941, 1.99 ) }
    dend_20 { pt3dadd( -23.5776, 5.73638, -2.31553, 2.28 ) }
    dend_20 { pt3dadd( -23.913, 5.71053, -2.18419, 2.5 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 33/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.541846, -10.8731, 0.0273224, 3.32 ) }
    dend_0 { pt3dadd( -0.541846, -10.8731, 0.0273224, 3.32 ) }
    dend_0 { pt3dadd( -0.318648, -12.3621, 0.0273224, 3.32 ) }
    dend_0 { pt3dadd( -0.047963, -14.168, 0.0273224, 3.61 ) }
    dend_0 { pt3dadd( -0.015557, -14.3842, 0.0273224, 3.61 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 38/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.5549, 8.69965, -1.36362, 1.01124 ) }
    axon_0 { pt3dadd( -5.92467, 23.3162, -1.36362, 1.01124 ) }
    axon_0 { pt3dadd( -9.29444, 37.9328, -1.36362, 1.01124 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 41/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 20.783, 18.144, -8.95764, 0.29 ) }
    dend_38 { pt3dadd( 21.6112, 18.3645, -8.60282, 0.29 ) }
    dend_38 { pt3dadd( 22.0668, 18.5176, -8.34406, 0.29 ) }
    dend_38 { pt3dadd( 22.5818, 18.7511, -8.03468, 0.88 ) }
    dend_38 { pt3dadd( 23.0683, 19.0217, -7.74193, 1.18 ) }
    dend_38 { pt3dadd( 23.4855, 19.2941, -7.47319, 0.96 ) }
    dend_38 { pt3dadd( 24.0475, 19.722, -7.10249, 0.44 ) }
    dend_38 { pt3dadd( 24.7125, 20.3856, -6.64204, 0.59 ) }
    dend_38 { pt3dadd( 25.3354, 21.1056, -6.27008, 0.96 ) }
    dend_38 { pt3dadd( 25.6312, 21.5034, -6.09571, 1.4 ) }
    dend_38 { pt3dadd( 25.9857, 22.0251, -5.89489, 1.55 ) }
    dend_38 { pt3dadd( 26.3518, 22.582, -5.70129, 1.55 ) }
    dend_38 { pt3dadd( 26.7695, 23.217, -5.47776, 1.18 ) }
    dend_38 { pt3dadd( 27.3272, 23.9829, -5.21683, 0.59 ) }
    dend_38 { pt3dadd( 27.9171, 24.7387, -4.93151, 0.59 ) }
    dend_38 { pt3dadd( 28.2033, 25.0734, -4.78802, 0.59 ) }
    dend_38 { pt3dadd( 28.5958, 25.4878, -4.59012, 0.44 ) }
    dend_38 { pt3dadd( 29.1617, 26.0223, -4.24288, 0.44 ) }
    dend_38 { pt3dadd( 29.6461, 26.4329, -3.90926, 0.52 ) }
    dend_38 { pt3dadd( 30.0792, 26.7732, -3.59273, 0.81 ) }
    dend_38 { pt3dadd( 30.5781, 27.1287, -3.24791, 0.96 ) }
    dend_38 { pt3dadd( 31.2059, 27.5488, -2.81721, 0.66 ) }
    dend_38 { pt3dadd( 32.0373, 28.0851, -2.24931, 0.88 ) }
    dend_38 { pt3dadd( 32.349, 28.2774, -2.04057, 0.88 ) }
    dend_38 { pt3dadd( 32.6786, 28.4775, -1.8149, 0.88 ) }
    dend_38 { pt3dadd( 33.4457, 28.9438, -1.30463, 0.66 ) }
    dend_38 { pt3dadd( 34.3289, 29.5034, -0.78242, 0.52 ) }
    dend_38 { pt3dadd( 34.9521, 29.9105, -0.464796, 1.25 ) }
    dend_38 { pt3dadd( 35.3757, 30.1996, -0.286176, 1.47 ) }
    dend_38 { pt3dadd( 35.7132, 30.4376, -0.150963, 1.47 ) }
    dend_38 { pt3dadd( 36.1915, 30.7776, 0.0270045, 0.52 ) }
    dend_38 { pt3dadd( 36.9556, 31.3277, 0.281434, 0.22 ) }
    dend_38 { pt3dadd( 37.5194, 31.747, 0.466203, 0.88 ) }
    dend_38 { pt3dadd( 37.8118, 31.9761, 0.545697, 1.47 ) }
    dend_38 { pt3dadd( 38.1224, 32.2292, 0.617032, 1.55 ) }
    dend_38 { pt3dadd( 38.4816, 32.5284, 0.684428, 1.18 ) }
    dend_38 { pt3dadd( 39.2919, 33.2254, 0.766411, 0.22 ) }
    dend_38 { pt3dadd( 40.1454, 33.9865, 0.801052, 0.22 ) }
    dend_38 { pt3dadd( 40.8143, 34.5933, 0.806748, 0.96 ) }
    dend_38 { pt3dadd( 41.1171, 34.8588, 0.801831, 1.25 ) }
    dend_38 { pt3dadd( 41.4815, 35.1724, 0.787486, 1.33 ) }
    dend_38 { pt3dadd( 42.5085, 36.0394, 0.767484, 0.37 ) }
    dend_38 { pt3dadd( 43.1017, 36.5141, 0.800202, 1.4 ) }
    dend_38 { pt3dadd( 43.5402, 36.8498, 0.835408, 1.99 ) }
    dend_38 { pt3dadd( 43.8803, 37.0994, 0.894775, 2.21 ) }
    dend_38 { pt3dadd( 44.2047, 37.3344, 0.971831, 2.21 ) }
    dend_38 { pt3dadd( 45.2329, 38.0563, 1.33308, 0.66 ) }
    dend_38 { pt3dadd( 45.8914, 38.4836, 1.68781, 0.66 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 89/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 20.783, 18.144, -8.95764, 0.81 ) }
    dend_35 { pt3dadd( 21.2247, 19.6596, -9.06375, 0.81 ) }
    dend_35 { pt3dadd( 21.6049, 20.6454, -9.12197, 1.11 ) }
    dend_35 { pt3dadd( 22.0382, 21.6425, -9.17583, 1.11 ) }
    dend_35 { pt3dadd( 22.5034, 22.6732, -9.23004, 0.81 ) }
    dend_35 { pt3dadd( 22.9653, 23.7039, -9.28484, 0.81 ) }
    dend_35 { pt3dadd( 23.4662, 24.8418, -9.36846, 0.44 ) }
    dend_35 { pt3dadd( 24.2688, 26.5774, -9.54134, 0.44 ) }
    dend_35 { pt3dadd( 24.6591, 27.4283, -9.64783, 1.18 ) }
    dend_35 { pt3dadd( 25.0093, 28.218, -9.76665, 2.28 ) }
    dend_35 { pt3dadd( 25.2413, 28.7665, -9.863, 2.5 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 25.5722, 29.6086, -10.0324, 2.28 ) }
    dend_35 { pt3dadd( 25.8758, 30.4989, -10.2063, 1.55 ) }
    dend_35 { pt3dadd( 25.9657, 30.8226, -10.2638, 1.55 ) }
    dend_35 { pt3dadd( 26.2902, 32.0129, -10.4328, 0.81 ) }
    dend_35 { pt3dadd( 26.533, 32.8878, -10.532, 1.03 ) }
    dend_35 { pt3dadd( 26.7055, 33.5172, -10.5841, 1.03 ) }
    dend_35 { pt3dadd( 26.9785, 34.4984, -10.6173, 0.88 ) }
    dend_35 { pt3dadd( 27.1735, 35.1995, -10.6282, 0.88 ) }
    dend_35 { pt3dadd( 27.4772, 36.2946, -10.6465, 0.66 ) }
    dend_35 { pt3dadd( 27.6897, 37.0717, -10.6616, 0.74 ) }
    dend_35 { pt3dadd( 27.9485, 38.0145, -10.6905, 0.29 ) }
    dend_35 { pt3dadd( 28.2075, 38.9352, -10.7384, 0.29 ) }
    dend_35 { pt3dadd( 28.4816, 39.9683, -10.8379, 0.74 ) }
    dend_35 { pt3dadd( 28.6395, 40.6256, -10.9219, 0.96 ) }
    dend_35 { pt3dadd( 28.774, 41.2737, -11.0237, 1.18 ) }
    dend_35 { pt3dadd( 28.86, 41.7322, -11.1207, 1.18 ) }
    dend_35 { pt3dadd( 28.947, 42.2425, -11.2567, 0.88 ) }
    dend_35 { pt3dadd( 29.0716, 43.1128, -11.5347, 0.66 ) }
    dend_35 { pt3dadd( 29.191, 44.0147, -11.8347, 0.37 ) }
    dend_35 { pt3dadd( 29.2735, 44.6332, -12.0506, 0.52 ) }
    dend_35 { pt3dadd( 29.3943, 45.5061, -12.3733, 0.52 ) }
    dend_35 { pt3dadd( 29.5431, 46.5033, -12.7422, 0.59 ) }
    dend_35 { pt3dadd( 29.659, 47.1978, -12.9993, 1.03 ) }
    dend_35 { pt3dadd( 29.8413, 48.1161, -13.3365, 2.21 ) }
    dend_35 { pt3dadd( 29.9229, 48.5062, -13.479, 2.43 ) }
    dend_35 { pt3dadd( 30.0622, 49.1944, -13.7351, 2.58 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 26/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 35.6038, 61.673, 25.135, 0.29 ) }
    dend_31 { pt3dadd( 36.517, 64.2245, 23.0339, 0.29 ) }
    dend_31 { pt3dadd( 36.9663, 65.4263, 22.0818, 0.29 ) }
    dend_31 { pt3dadd( 37.1926, 66.0502, 21.6643, 0.29 ) }
    dend_31 { pt3dadd( 37.429, 66.7461, 21.2722, 0.74 ) }
    dend_31 { pt3dadd( 37.6506, 67.4148, 20.871, 0.96 ) }
    dend_31 { pt3dadd( 37.8544, 68.0451, 20.4885, 0.96 ) }
    dend_31 { pt3dadd( 38.149, 69.0099, 19.9791, 0.22 ) }
    dend_31 { pt3dadd( 38.76, 71.2245, 18.8034, 0.22 ) }
    dend_31 { pt3dadd( 39.0617, 72.4489, 18.2117, 1.77 ) }
    dend_31 { pt3dadd( 39.4411, 74.254, 17.4239, 1.92 ) }
    dend_31 { pt3dadd( 39.5226, 74.7289, 17.2482, 1.99 ) }
    dend_31 { pt3dadd( 39.6156, 75.4851, 16.9693, 1.47 ) }
    dend_31 { pt3dadd( 39.6997, 76.5122, 16.5897, 0.22 ) }
    dend_31 { pt3dadd( 39.7442, 77.6895, 16.173, 0.22 ) }
    dend_31 { pt3dadd( 39.7541, 78.3977, 15.9235, 0.66 ) }
    dend_31 { pt3dadd( 39.752, 79.103, 15.6996, 0.96 ) }
    dend_31 { pt3dadd( 39.7164, 80.9902, 14.9197, 0.22 ) }
    dend_31 { pt3dadd( 39.7005, 81.6654, 14.5902, 0.22 ) }
    dend_31 { pt3dadd( 39.6637, 82.7108, 14.0425, 1.77 ) }
    dend_31 { pt3dadd( 39.6242, 83.4492, 13.6459, 2.06 ) }
    dend_31 { pt3dadd( 39.5938, 83.8631, 13.427, 2.06 ) }
    dend_31 { pt3dadd( 39.385, 86.0334, 12.348, 0.22 ) }
    dend_31 { pt3dadd( 39.2691, 86.9245, 11.9578, 0.22 ) }
    dend_31 { pt3dadd( 39.0527, 88.3876, 11.3632, 1.55 ) }
    dend_31 { pt3dadd( 38.9817, 88.8351, 11.1899, 1.99 ) }
    dend_31 { pt3dadd( 38.8939, 89.4868, 10.8754, 1.99 ) }
    dend_31 { pt3dadd( 38.6643, 91.4698, 9.81845, 0.22 ) }
    dend_31 { pt3dadd( 38.5316, 92.8544, 9.05787, 0.22 ) }
    dend_31 { pt3dadd( 38.44, 94.0778, 8.34615, 1.47 ) }
    dend_31 { pt3dadd( 38.4118, 94.7939, 7.92264, 1.69 ) }
    dend_31 { pt3dadd( 38.4356, 99.0616, 5.60145, 0.15 ) }
    dend_31 { pt3dadd( 38.48, 99.8011, 5.20889, 0.15 ) }
    dend_31 { pt3dadd( 38.5596, 100.483, 4.81796, 0.59 ) }
    dend_31 { pt3dadd( 38.6116, 100.8, 4.62852, 0.59 ) }
    dend_31 { pt3dadd( 38.7732, 101.705, 4.02288, 0.22 ) }
    dend_31 { pt3dadd( 39.039, 103.146, 3.21421, 0.22 ) }
    dend_31 { pt3dadd( 39.4586, 105.468, 2.11061, 1.47 ) }
    dend_31 { pt3dadd( 39.7282, 106.967, 1.37826, 1.84 ) }
    dend_31 { pt3dadd( 39.8277, 107.502, 1.11203, 2.43 ) }
    dend_31 { pt3dadd( 40.6205, 111.601, -0.913384, 0.22 ) }
    dend_31 { pt3dadd( 41.4491, 115.752, -2.93874, 0.22 ) }
    dend_31 { pt3dadd( 41.7204, 116.996, -3.50616, 1.4 ) }
    dend_31 { pt3dadd( 41.9355, 117.892, -3.84452, 1.62 ) }
    dend_31 { pt3dadd( 42.2475, 119.026, -4.24331, 0.29 ) }
    dend_31 { pt3dadd( 42.4683, 119.663, -4.49438, 0.52 ) }
    dend_31 { pt3dadd( 42.7882, 120.35, -4.78703, 0.66 ) }
    dend_31 { pt3dadd( 43.363, 121.383, -5.34338, 0.22 ) }
    dend_31 { pt3dadd( 43.8428, 122.238, -5.83573, 1.47 ) }
    dend_31 { pt3dadd( 44.5571, 123.558, -6.59178, 1.69 ) }
    dend_31 { pt3dadd( 45.8612, 126.093, -8.0349, 0.29 ) }
    dend_31 { pt3dadd( 46.2516, 126.897, -8.49816, 0.44 ) }
    dend_31 { pt3dadd( 47.1339, 128.88, -9.6841, 0.22 ) }
    dend_31 { pt3dadd( 47.6917, 130.313, -10.5707, 0.66 ) }
    dend_31 { pt3dadd( 47.872, 130.867, -10.8955, 0.66 ) }
    dend_31 { pt3dadd( 48.019, 131.495, -11.2364, 1.11 ) }
    dend_31 { pt3dadd( 48.1146, 132.238, -11.644, 1.33 ) }
    dend_31 { pt3dadd( 48.1868, 133.498, -12.4005, 1.47 ) }
    dend_31 { pt3dadd( 48.1567, 134.208, -12.8986, 1.47 ) }
    dend_31 { pt3dadd( 48.0082, 135.578, -13.8373, 0.22 ) }
    dend_31 { pt3dadd( 47.9154, 136.207, -14.2705, 0.22 ) }
    dend_31 { pt3dadd( 47.8058, 136.803, -14.6654, 0.74 ) }
    dend_31 { pt3dadd( 47.6731, 137.372, -15.0147, 1.03 ) }
    dend_31 { pt3dadd( 47.1825, 139.117, -16.0107, 0.22 ) }
    dend_31 { pt3dadd( 46.9386, 139.833, -16.4143, 0.22 ) }
    dend_31 { pt3dadd( 46.7661, 140.262, -16.6932, 0.66 ) }
    dend_31 { pt3dadd( 46.6031, 140.636, -16.9644, 0.96 ) }
    dend_31 { pt3dadd( 45.942, 142.098, -18.0435, 0.22 ) }
    dend_31 { pt3dadd( 45.6006, 142.823, -18.5597, 0.44 ) }
    dend_31 { pt3dadd( 45.4243, 143.18, -18.8053, 1.18 ) }
    dend_31 { pt3dadd( 44.8008, 144.391, -19.7688, 1.4 ) }
    dend_31 { pt3dadd( 44.5641, 144.824, -20.1596, 1.18 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 98/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 35.6038, 61.673, 25.135, 1.33 ) }
    dend_28 { pt3dadd( 36.0281, 62.2493, 25.3831, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_28 { pt3dadd( 37.1318, 63.7123, 25.6995, 0.29 ) }
    dend_28 { pt3dadd( 38.1461, 65.0252, 25.8383, 1.18 ) }
    dend_28 { pt3dadd( 38.6857, 65.7124, 25.8799, 1.92 ) }
    dend_28 { pt3dadd( 39.265, 66.4747, 25.9302, 1.99 ) }
    dend_28 { pt3dadd( 39.6754, 67.0404, 25.9803, 1.62 ) }
    dend_28 { pt3dadd( 41.0102, 69.0451, 26.1516, 0.37 ) }
    dend_28 { pt3dadd( 41.4261, 69.7617, 26.2278, 0.37 ) }
    dend_28 { pt3dadd( 41.7356, 70.4209, 26.3128, 0.37 ) }
    dend_28 { pt3dadd( 42.1472, 71.6707, 26.5609, 0.52 ) }
    dend_28 { pt3dadd( 42.294, 72.5162, 26.8163, 0.59 ) }
    dend_28 { pt3dadd( 42.3495, 73.4501, 27.1943, 0.44 ) }
    dend_28 { pt3dadd( 42.3286, 74.1784, 27.5595, 0.44 ) }
    dend_28 { pt3dadd( 42.2973, 74.7487, 27.8265, 0.44 ) }
    dend_28 { pt3dadd( 42.2505, 75.6857, 28.2354, 0.29 ) }
    dend_28 { pt3dadd( 42.2066, 76.634, 28.621, 0.66 ) }
    dend_28 { pt3dadd( 42.191, 77.407, 28.909, 0.88 ) }
    dend_28 { pt3dadd( 42.1884, 77.8776, 29.0906, 0.88 ) }
    dend_28 { pt3dadd( 42.196, 78.5664, 29.3477, 0.74 ) }
    dend_28 { pt3dadd( 42.2265, 79.903, 29.8332, 0.29 ) }
    dend_28 { pt3dadd( 42.2477, 80.6098, 30.1025, 0.29 ) }
    dend_28 { pt3dadd( 42.2632, 81.4108, 30.4075, 0.29 ) }
    dend_28 { pt3dadd( 42.2417, 82.9875, 31.0688, 0.74 ) }
    dend_28 { pt3dadd( 42.1871, 83.9533, 31.4977, 1.84 ) }
    dend_28 { pt3dadd( 42.1445, 84.4793, 31.7418, 2.36 ) }
    dend_28 { pt3dadd( 42.0783, 85.4596, 32.1923, 2.36 ) }
    dend_28 { pt3dadd( 41.9878, 87.3479, 33.0592, 0.44 ) }
    dend_28 { pt3dadd( 41.9318, 88.5271, 33.6325, 0.44 ) }
    dend_28 { pt3dadd( 41.8838, 89.622, 34.1816, 0.44 ) }
    dend_28 { pt3dadd( 41.8608, 90.2491, 34.5148, 0.44 ) }
    dend_28 { pt3dadd( 41.8826, 92.0455, 35.4095, 2.06 ) }
    dend_28 { pt3dadd( 41.9202, 92.5827, 35.6418, 2.58 ) }
    dend_28 { pt3dadd( 42.0434, 93.4625, 35.9958, 2.58 ) }
    dend_28 { pt3dadd( 42.1079, 93.7685, 36.1199, 2.58 ) }
    dend_28 { pt3dadd( 42.3634, 94.6442, 36.6162, 1.62 ) }
    dend_28 { pt3dadd( 42.8013, 95.9823, 37.7659, 0.29 ) }
    dend_28 { pt3dadd( 43.0658, 96.7499, 38.583, 0.29 ) }
    dend_28 { pt3dadd( 43.374, 97.6745, 39.6492, 0.74 ) }
    dend_28 { pt3dadd( 43.6702, 98.6052, 40.7601, 0.96 ) }
    dend_28 { pt3dadd( 44.1662, 100.42, 42.8599, 1.25 ) }
    dend_28 { pt3dadd( 44.6527, 102.55, 45.2558, 1.69 ) }
    dend_28 { pt3dadd( 44.7263, 102.945, 45.6793, 2.21 ) }
    dend_28 { pt3dadd( 44.844, 103.635, 46.339, 2.21 ) }
    dend_28 { pt3dadd( 44.9949, 104.624, 47.1425, 1.18 ) }
    dend_28 { pt3dadd( 45.2215, 106.471, 48.3943, 0.22 ) }
    dend_28 { pt3dadd( 45.3074, 107.407, 48.9089, 0.22 ) }
    dend_28 { pt3dadd( 45.5076, 110.053, 50.1906, 1.25 ) }
    dend_28 { pt3dadd( 45.5443, 110.74, 50.527, 2.06 ) }
    dend_28 { pt3dadd( 45.5655, 111.586, 50.9403, 2.28 ) }
    dend_28 { pt3dadd( 45.5458, 112.484, 51.3801, 1.99 ) }
    dend_28 { pt3dadd( 45.5138, 112.868, 51.5778, 1.99 ) }
    dend_28 { pt3dadd( 45.3627, 113.896, 52.0608, 1.03 ) }
    dend_28 { pt3dadd( 45.1602, 114.863, 52.4872, 0.22 ) }
    dend_28 { pt3dadd( 45.0014, 115.601, 52.8308, 0.52 ) }
    dend_28 { pt3dadd( 44.911, 116.076, 53.0544, 0.66 ) }
    dend_28 { pt3dadd( 44.8269, 116.693, 53.373, 0.66 ) }
    dend_28 { pt3dadd( 44.7389, 117.448, 53.7913, 0.37 ) }
    dend_28 { pt3dadd( 44.6167, 119.002, 54.7571, 0.96 ) }
    dend_28 { pt3dadd( 44.5996, 119.554, 55.1399, 1.18 ) }
    dend_28 { pt3dadd( 44.604, 120.09, 55.529, 1.47 ) }
    dend_28 { pt3dadd( 44.6568, 120.96, 56.1646, 1.47 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 60/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -23.913, 5.71053, -2.18419, 1.18 ) }
    dend_24 { pt3dadd( -25.6384, 5.97759, -1.19758, 1.18 ) }
    dend_24 { pt3dadd( -26.6956, 6.14174, -0.783625, 0.29 ) }
    dend_24 { pt3dadd( -27.8973, 6.32755, -0.473747, 0.29 ) }
    dend_24 { pt3dadd( -28.7737, 6.45728, -0.383656, 0.52 ) }
    dend_24 { pt3dadd( -29.2456, 6.53239, -0.325945, 0.74 ) }
    dend_24 { pt3dadd( -29.7961, 6.62285, -0.229722, 0.88 ) }
    dend_24 { pt3dadd( -30.6629, 6.77685, -0.149813, 0.88 ) }
    dend_24 { pt3dadd( -30.9588, 6.82911, -0.111219, 0.88 ) }
    dend_24 { pt3dadd( -32.2045, 7.02272, 0.151229, 0.29 ) }
    dend_24 { pt3dadd( -33.4554, 7.17806, 0.552882, 0.29 ) }
    dend_24 { pt3dadd( -34.5354, 7.28923, 0.986575, 1.25 ) }
    dend_24 { pt3dadd( -35.0949, 7.33641, 1.25958, 1.77 ) }
    dend_24 { pt3dadd( -35.4455, 7.36391, 1.44774, 2.21 ) }
    dend_24 { pt3dadd( -35.9573, 7.40205, 1.71894, 2.21 ) }
    dend_24 { pt3dadd( -36.6899, 7.45811, 2.09614, 1.92 ) }
    dend_24 { pt3dadd( -37.4506, 7.51672, 2.44159, 1.4 ) }
    dend_24 { pt3dadd( -38.7621, 7.6364, 3.01374, 0.29 ) }
    dend_24 { pt3dadd( -39.835, 7.7528, 3.47671, 0.22 ) }
    dend_24 { pt3dadd( -40.9097, 7.88059, 3.92431, 0.22 ) }
    dend_24 { pt3dadd( -41.6317, 7.96978, 4.19319, 0.59 ) }
    dend_24 { pt3dadd( -41.9238, 8.00488, 4.29389, 0.74 ) }
    dend_24 { pt3dadd( -42.5537, 8.07318, 4.49691, 0.74 ) }
    dend_24 { pt3dadd( -43.1216, 8.12218, 4.67791, 0.74 ) }
    dend_24 { pt3dadd( -44.0148, 8.179, 4.98422, 0.22 ) }
    dend_24 { pt3dadd( -44.7373, 8.21618, 5.24515, 0.29 ) }
    dend_24 { pt3dadd( -45.595, 8.23902, 5.56977, 0.29 ) }
    dend_24 { pt3dadd( -47.0237, 8.24401, 6.12461, 1.77 ) }
    dend_24 { pt3dadd( -47.6464, 8.25325, 6.36843, 2.5 ) }
    dend_24 { pt3dadd( -47.9906, 8.26634, 6.49899, 2.73 ) }
    dend_24 { pt3dadd( -48.5816, 8.3004, 6.71629, 2.73 ) }
    dend_24 { pt3dadd( -49.6103, 8.38307, 7.07049, 1.47 ) }
    dend_24 { pt3dadd( -50.5898, 8.48517, 7.34744, 0.22 ) }
    dend_24 { pt3dadd( -51.5643, 8.59953, 7.56475, 0.29 ) }
    dend_24 { pt3dadd( -52.5687, 8.72688, 7.75218, 0.37 ) }
    dend_24 { pt3dadd( -53.2156, 8.82291, 7.86323, 0.44 ) }
    dend_24 { pt3dadd( -53.755, 8.91926, 7.95693, 0.44 ) }
    dend_24 { pt3dadd( -54.6911, 9.12442, 8.11877, 0.22 ) }
    dend_24 { pt3dadd( -55.2248, 9.24781, 8.21875, 0.88 ) }
    dend_24 { pt3dadd( -55.5431, 9.32166, 8.28545, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_24 { pt3dadd( -56.0318, 9.44102, 8.3928, 1.62 ) }
    dend_24 { pt3dadd( -56.5237, 9.57036, 8.49863, 1.69 ) }
    dend_24 { pt3dadd( -57.1339, 9.71716, 8.62817, 1.33 ) }
    dend_24 { pt3dadd( -57.3943, 9.76367, 8.68395, 1.33 ) }
    dend_24 { pt3dadd( -58.9229, 9.95977, 9.01839, 0.22 ) }
    dend_24 { pt3dadd( -59.7769, 10.0377, 9.21533, 0.37 ) }
    dend_24 { pt3dadd( -60.1093, 10.0602, 9.2924, 0.37 ) }
    dend_24 { pt3dadd( -60.8844, 10.1015, 9.46695, 0.22 ) }
    dend_24 { pt3dadd( -62.3541, 10.1498, 9.81046, 0.22 ) }
    dend_24 { pt3dadd( -63.0225, 10.1614, 9.9817, 0.22 ) }
    dend_24 { pt3dadd( -64.1894, 10.1881, 10.2864, 1.62 ) }
    dend_24 { pt3dadd( -64.6711, 10.2165, 10.4161, 2.14 ) }
    dend_24 { pt3dadd( -65.2014, 10.2636, 10.5557, 2.36 ) }
    dend_24 { pt3dadd( -65.8056, 10.347, 10.7058, 2.06 ) }
    dend_24 { pt3dadd( -67.508, 10.6475, 11.0846, 0.22 ) }
    dend_24 { pt3dadd( -69.2725, 10.9996, 11.4457, 0.22 ) }
    dend_24 { pt3dadd( -70.8016, 11.3388, 11.7326, 1.47 ) }
    dend_24 { pt3dadd( -71.3445, 11.4689, 11.8296, 2.14 ) }
    dend_24 { pt3dadd( -72.0569, 11.6548, 11.947, 2.58 ) }
    dend_24 { pt3dadd( -73.5592, 12.1172, 12.1562, 0.22 ) }
    dend_24 { pt3dadd( -74.3456, 12.4071, 12.2596, 0.22 ) }
    dend_24 { pt3dadd( -74.9519, 12.6716, 12.3462, 0.66 ) }
    dend_24 { pt3dadd( -75.2665, 12.8295, 12.3934, 0.66 ) }
    dend_24 { pt3dadd( -75.8784, 13.1695, 12.5045, 0.44 ) }
    dend_24 { pt3dadd( -76.9138, 13.823, 12.7313, 0.22 ) }
    dend_24 { pt3dadd( -77.5145, 14.2882, 12.8834, 0.22 ) }
    dend_24 { pt3dadd( -78.3502, 15.0338, 13.1182, 1.33 ) }
    dend_24 { pt3dadd( -78.5425, 15.2199, 13.1755, 1.77 ) }
    dend_24 { pt3dadd( -78.8584, 15.5402, 13.2711, 1.77 ) }
    dend_24 { pt3dadd( -79.2888, 15.9912, 13.3991, 1.47 ) }
    dend_24 { pt3dadd( -80.271, 16.9656, 13.6802, 0.22 ) }
    dend_24 { pt3dadd( -81.1947, 17.8524, 13.8936, 0.22 ) }
    dend_24 { pt3dadd( -81.7725, 18.387, 14.0115, 1.77 ) }
    dend_24 { pt3dadd( -82.1587, 18.7291, 14.0789, 2.06 ) }
    dend_24 { pt3dadd( -82.6126, 19.1167, 14.1601, 1.77 ) }
    dend_24 { pt3dadd( -83.9765, 20.2419, 14.3978, 0.15 ) }
    dend_24 { pt3dadd( -85.4001, 21.3571, 14.6466, 0.15 ) }
    dend_24 { pt3dadd( -86.4572, 22.1521, 14.8414, 1.33 ) }
    dend_24 { pt3dadd( -86.79, 22.4054, 14.9067, 2.06 ) }
    dend_24 { pt3dadd( -87.3645, 22.8463, 15.0221, 2.21 ) }
    dend_24 { pt3dadd( -88.5959, 23.7936, 15.284, 0.22 ) }
    dend_24 { pt3dadd( -89.456, 24.4546, 15.4844, 0.22 ) }
    dend_24 { pt3dadd( -89.8909, 24.7584, 15.6037, 0.22 ) }
    dend_24 { pt3dadd( -90.5532, 25.2015, 15.8015, 1.33 ) }
    dend_24 { pt3dadd( -90.899, 25.4245, 15.9049, 1.99 ) }
    dend_24 { pt3dadd( -91.3691, 25.7129, 16.0362, 2.21 ) }
    dend_24 { pt3dadd( -91.7605, 25.9404, 16.1565, 2.21 ) }
    dend_24 { pt3dadd( -93.0482, 26.6552, 16.5494, 0.22 ) }
    dend_24 { pt3dadd( -93.6444, 26.9772, 16.7697, 0.22 ) }
    dend_24 { pt3dadd( -94.0774, 27.2107, 16.9615, 0.74 ) }
    dend_24 { pt3dadd( -94.4176, 27.4091, 17.1347, 0.96 ) }
    dend_24 { pt3dadd( -94.873, 27.6811, 17.376, 0.96 ) }
    dend_24 { pt3dadd( -95.4362, 28.0322, 17.6985, 0.37 ) }
    dend_24 { pt3dadd( -96.4175, 28.7308, 18.3823, 0.59 ) }
    dend_24 { pt3dadd( -96.7155, 28.9483, 18.6086, 1.33 ) }
    dend_24 { pt3dadd( -97.1995, 29.3156, 19.0316, 1.33 ) }
    dend_24 { pt3dadd( -106.33, 32.5223, 23.6018, 1.33 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -23.913, 5.71053, -2.18419, 0.52 ) }
    dend_21 { pt3dadd( -24.8898, 6.57926, -3.10886, 0.52 ) }
    dend_21 { pt3dadd( -25.1919, 6.85127, -3.40413, 0.37 ) }
    dend_21 { pt3dadd( -25.6186, 7.2322, -3.81, 0.81 ) }
    dend_21 { pt3dadd( -26.048, 7.61857, -4.20192, 0.96 ) }
    dend_21 { pt3dadd( -26.5381, 8.07746, -4.67886, 0.66 ) }
    dend_21 { pt3dadd( -26.9577, 8.47414, -5.08606, 0.88 ) }
    dend_21 { pt3dadd( -27.3213, 8.84319, -5.46356, 0.88 ) }
    dend_21 { pt3dadd( -27.57, 9.07812, -5.71604, 0.81 ) }
    dend_21 { pt3dadd( -27.8575, 9.30476, -5.97816, 0.66 ) }
    dend_21 { pt3dadd( -28.6281, 9.84507, -6.60466, 0.52 ) }
    dend_21 { pt3dadd( -28.9215, 10.0341, -6.82702, 0.66 ) }
    dend_21 { pt3dadd( -29.455, 10.349, -7.24275, 0.52 ) }
    dend_21 { pt3dadd( -29.8733, 10.5781, -7.58113, 0.29 ) }
    dend_21 { pt3dadd( -30.6738, 10.958, -8.18339, 1.62 ) }
    dend_21 { pt3dadd( -31.2376, 11.2079, -8.57203, 2.43 ) }
    dend_21 { pt3dadd( -31.6448, 11.3833, -8.82612, 2.73 ) }
    dend_21 { pt3dadd( -32.3006, 11.676, -9.21934, 2.87 ) }
    dend_21 { pt3dadd( -33.0829, 12.0471, -9.64824, 2.14 ) }
    dend_21 { pt3dadd( -33.9991, 12.5138, -10.0798, 0.52 ) }
    dend_21 { pt3dadd( -34.6644, 12.8765, -10.3332, 0.29 ) }
    dend_21 { pt3dadd( -35.2063, 13.1801, -10.4924, 0.29 ) }
    dend_21 { pt3dadd( -35.6777, 13.452, -10.6042, 0.74 ) }
    dend_21 { pt3dadd( -36.1297, 13.713, -10.695, 0.96 ) }
    dend_21 { pt3dadd( -37.1917, 14.3307, -10.9221, 0.22 ) }
    dend_21 { pt3dadd( -37.5246, 14.5227, -11.0096, 0.88 ) }
    dend_21 { pt3dadd( -38.0008, 14.7525, -11.1339, 1.33 ) }
    dend_21 { pt3dadd( -38.428, 14.9299, -11.2387, 1.47 ) }
    dend_21 { pt3dadd( -39.026, 15.1337, -11.3828, 1.84 ) }
    dend_21 { pt3dadd( -39.4492, 15.2511, -11.4899, 1.84 ) }
    dend_21 { pt3dadd( -40.7595, 15.5407, -11.8321, 0.29 ) }
    dend_21 { pt3dadd( -41.9567, 15.7662, -12.1236, 0.29 ) }
    dend_21 { pt3dadd( -42.8485, 15.9177, -12.3153, 1.25 ) }
    dend_21 { pt3dadd( -43.4712, 16.0214, -12.4259, 1.84 ) }
    dend_21 { pt3dadd( -44.0781, 16.1215, -12.5217, 1.84 ) }
    dend_21 { pt3dadd( -45.2192, 16.3065, -12.6851, 0.22 ) }
    dend_21 { pt3dadd( -45.897, 16.4131, -12.774, 0.22 ) }
    dend_21 { pt3dadd( -47.1283, 16.6182, -12.9128, 0.22 ) }
    dend_21 { pt3dadd( -48.1148, 16.7935, -12.9868, 1.4 ) }
    dend_21 { pt3dadd( -48.5537, 16.8833, -12.9967, 1.99 ) }
    dend_21 { pt3dadd( -49.0077, 16.9834, -12.9781, 2.28 ) }
    dend_21 { pt3dadd( -49.373, 17.0744, -12.9358, 2.28 ) }
    dend_21 { pt3dadd( -50.6208, 17.4082, -12.7262, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_21 { pt3dadd( -51.0663, 17.5214, -12.6181, 0.22 ) }
    dend_21 { pt3dadd( -51.4997, 17.6227, -12.4932, 0.52 ) }
    dend_21 { pt3dadd( -51.8404, 17.702, -12.3882, 0.52 ) }
    dend_21 { pt3dadd( -52.8255, 17.9319, -12.0741, 0.22 ) }
    dend_21 { pt3dadd( -53.9349, 18.2079, -11.722, 0.22 ) }
    dend_21 { pt3dadd( -54.9246, 18.4617, -11.4251, 1.25 ) }
    dend_21 { pt3dadd( -55.77, 18.6752, -11.1979, 2.28 ) }
    dend_21 { pt3dadd( -56.2025, 18.7806, -11.0928, 2.5 ) }
    dend_21 { pt3dadd( -56.7178, 18.9043, -10.9799, 2.5 ) }
    dend_21 { pt3dadd( -57.9262, 19.2028, -10.7699, 0.22 ) }
    dend_21 { pt3dadd( -59.4879, 19.6011, -10.5231, 0.22 ) }
    dend_21 { pt3dadd( -59.9813, 19.7364, -10.456, 0.66 ) }
    dend_21 { pt3dadd( -60.5084, 19.885, -10.3786, 0.81 ) }
    dend_21 { pt3dadd( -60.7488, 19.9618, -10.3461, 0.88 ) }
    dend_21 { pt3dadd( -62.336, 20.5515, -10.1487, 0.22 ) }
    dend_21 { pt3dadd( -63.1199, 20.8909, -10.0505, 1.47 ) }
    dend_21 { pt3dadd( -63.5483, 21.1056, -9.9973, 1.99 ) }
    dend_21 { pt3dadd( -64.0275, 21.3646, -9.93457, 1.99 ) }
    dend_21 { pt3dadd( -65.4932, 22.2557, -9.72493, 0.22 ) }
    dend_21 { pt3dadd( -66.075, 22.6635, -9.64599, 0.22 ) }
    dend_21 { pt3dadd( -66.8555, 23.3132, -9.55497, 0.22 ) }
    dend_21 { pt3dadd( -67.1027, 23.5417, -9.5448, 0.44 ) }
    dend_21 { pt3dadd( -67.4402, 23.865, -9.54651, 0.59 ) }
    dend_21 { pt3dadd( -67.8462, 24.2694, -9.56518, 0.29 ) }
    dend_21 { pt3dadd( -68.2385, 24.7041, -9.57642, 0.29 ) }
    dend_21 { pt3dadd( -68.426, 24.9508, -9.59794, 1.03 ) }
    dend_21 { pt3dadd( -68.721, 25.4725, -9.68701, 1.25 ) }
    dend_21 { pt3dadd( -68.8001, 25.6342, -9.72775, 1.4 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 28/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -0.015557, -14.3842, 0.0273224, 1.4 ) }
    dend_14 { pt3dadd( -1.04663, -14.4636, -0.989966, 1.4 ) }
    dend_14 { pt3dadd( -1.71568, -14.511, -1.57177, 1.03 ) }
    dend_14 { pt3dadd( -4.48923, -14.6452, -3.91393, 1.03 ) }
    dend_14 { pt3dadd( -5.12559, -14.6426, -4.43069, 1.18 ) }
    dend_14 { pt3dadd( -5.96774, -14.5863, -5.11649, 1.18 ) }
    dend_14 { pt3dadd( -6.94235, -14.4547, -5.92861, 0.81 ) }
    dend_14 { pt3dadd( -7.85382, -14.1835, -6.75851, 0.81 ) }
    dend_14 { pt3dadd( -8.66963, -13.8055, -7.53916, 0.59 ) }
    dend_14 { pt3dadd( -9.33427, -13.3346, -8.12604, 0.74 ) }
    dend_14 { pt3dadd( -10.0043, -12.6867, -8.83338, 0.74 ) }
    dend_14 { pt3dadd( -10.4644, -12.1471, -9.39325, 0.96 ) }
    dend_14 { pt3dadd( -11.0943, -11.3579, -10.1572, 1.11 ) }
    dend_14 { pt3dadd( -11.5367, -10.8084, -10.67, 1.11 ) }
    dend_14 { pt3dadd( -12.2666, -9.97359, -11.4415, 1.03 ) }
    dend_14 { pt3dadd( -13.3057, -8.91623, -12.5279, 0.88 ) }
    dend_14 { pt3dadd( -14.422, -7.92531, -13.6203, 0.66 ) }
    dend_14 { pt3dadd( -15.1108, -7.39229, -14.2965, 0.81 ) }
    dend_14 { pt3dadd( -15.6901, -6.99214, -14.8773, 0.66 ) }
    dend_14 { pt3dadd( -16.4927, -6.45828, -15.7014, 0.66 ) }
    dend_14 { pt3dadd( -17.496, -5.77549, -16.8095, 0.88 ) }
    dend_14 { pt3dadd( -17.7898, -5.54171, -17.1604, 1.18 ) }
    dend_14 { pt3dadd( -18.4643, -4.8967, -18.0585, 1.18 ) }
    dend_14 { pt3dadd( -18.8092, -4.49831, -18.5958, 1.33 ) }
    dend_14 { pt3dadd( -19.4647, -3.59736, -19.7273, 0.59 ) }
    dend_14 { pt3dadd( -20.0085, -2.70185, -20.7356, 0.59 ) }
    dend_14 { pt3dadd( -20.3208, -2.0833, -21.3227, 0.59 ) }
    dend_14 { pt3dadd( -20.559, -1.53024, -21.8278, 0.88 ) }
    dend_14 { pt3dadd( -20.838, -0.785181, -22.4436, 1.03 ) }
    dend_14 { pt3dadd( -21.0877, -0.0448488, -23.0259, 1.18 ) }
    dend_14 { pt3dadd( -21.2633, 0.515255, -23.4698, 0.88 ) }
    dend_14 { pt3dadd( -21.5231, 1.29656, -24.0792, 0.74 ) }
    dend_14 { pt3dadd( -22.0365, 2.68477, -25.175, 0.52 ) }
    dend_14 { pt3dadd( -22.361, 3.49842, -25.8159, 0.37 ) }
    dend_14 { pt3dadd( -22.7548, 4.44438, -26.535, 0.37 ) }
    dend_14 { pt3dadd( -22.9935, 5.00329, -26.9571, 0.59 ) }
    dend_14 { pt3dadd( -23.2662, 5.63553, -27.447, 0.59 ) }
    dend_14 { pt3dadd( -23.5039, 6.17499, -27.8661, 0.59 ) }
    dend_14 { pt3dadd( -23.7292, 6.66294, -28.1909, 0.59 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 67/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.015557, -14.3842, 0.0273224, 3.68 ) }
    dend_1 { pt3dadd( 0.0371755, -14.9246, 0.0667783, 3.68 ) }
    dend_1 { pt3dadd( 0.0708128, -15.6491, 0.126896, 3.09 ) }
    dend_1 { pt3dadd( 0.0753238, -16.3807, 0.193187, 3.09 ) }
    dend_1 { pt3dadd( 0.0841197, -17.8072, 0.322447, 2.8 ) }
    dend_1 { pt3dadd( 0.0922537, -19.1265, 0.441982, 2.73 ) }
    dend_1 { pt3dadd( 0.098323, -20.1108, 0.531173, 2.5 ) }
    dend_1 { pt3dadd( 0.0633675, -21.1219, 0.636006, 2.8 ) }
    dend_1 { pt3dadd( 0.00466954, -22.037, 0.742598, 3.02 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 76/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -9.29444, 37.9328, -1.36362, 0.385346 ) }
    axon_1 { pt3dadd( -12.6642, 52.5494, -1.36362, 0.385346 ) }
    axon_1 { pt3dadd( -16.034, 67.166, -1.36362, 0.385346 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 79/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 45.8914, 38.4836, 1.68781, 0.52 ) }
    dend_40 { pt3dadd( 46.858, 39.6117, 2.58827, 0.52 ) }
    dend_40 { pt3dadd( 47.5842, 40.4382, 3.29101, 1.18 ) }
    dend_40 { pt3dadd( 48.3559, 41.2734, 4.03946, 1.47 ) }
    dend_40 { pt3dadd( 49.0063, 41.972, 4.70864, 1.47 ) }
    dend_40 { pt3dadd( 49.8778, 42.8974, 5.592, 0.59 ) }
    dend_40 { pt3dadd( 50.4054, 43.4648, 6.15037, 1.11 ) }
    dend_40 { pt3dadd( 50.8279, 43.9246, 6.71359, 1.4 ) }
    dend_40 { pt3dadd( 51.1579, 44.3059, 7.25081, 1.4 ) }
    dend_40 { pt3dadd( 52.0219, 45.35, 8.78011, 0.74 ) }
    dend_40 { pt3dadd( 52.5043, 45.9471, 9.68969, 1.18 ) }
    dend_40 { pt3dadd( 53.2179, 46.8462, 11.1252, 1.47 ) }
    dend_40 { pt3dadd( 54.8489, 48.9523, 14.6019, 0.52 ) }
    dend_40 { pt3dadd( 55.4725, 49.7917, 15.9977, 1.25 ) }
    dend_40 { pt3dadd( 55.7777, 50.2244, 16.7466, 1.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 94/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 45.8914, 38.4836, 1.68781, 0.29 ) }
    dend_39 { pt3dadd( 44.6221, 39.1675, 2.02108, 0.29 ) }
    dend_39 { pt3dadd( 43.6626, 39.6995, 2.28676, 0.29 ) }
    dend_39 { pt3dadd( 42.84, 40.1555, 2.51452, 0.29 ) }
    dend_39 { pt3dadd( 41.7286, 40.7717, 2.82227, 0.96 ) }
    dend_39 { pt3dadd( 41.1986, 41.0656, 2.96902, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_39 { pt3dadd( 40.7753, 41.3003, 3.08624, 1.11 ) }
    dend_39 { pt3dadd( 40.3432, 41.5547, 3.22694, 0.66 ) }
    dend_39 { pt3dadd( 31.9704, 44.301, 3.79445, 0.66 ) }
    dend_39 { pt3dadd( 23.2682, 45.6964, 2.99256, 0.66 ) }
    dend_39 { pt3dadd( 14.5069, 46.6164, 2.10015, 0.66 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 5/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 30.0622, 49.1944, -13.7351, 0.29 ) }
    dend_37 { pt3dadd( 29.6637, 50.9586, -13.2436, 0.29 ) }
    dend_37 { pt3dadd( 29.4044, 52.4504, -12.878, 0.29 ) }
    dend_37 { pt3dadd( 29.2914, 53.1893, -12.699, 0.66 ) }
    dend_37 { pt3dadd( 29.0968, 54.5261, -12.3692, 0.66 ) }
    dend_37 { pt3dadd( 28.8711, 55.9966, -12.0076, 0.22 ) }
    dend_37 { pt3dadd( 28.5205, 58.1804, -11.4816, 0.29 ) }
    dend_37 { pt3dadd( 28.315, 59.652, -11.1213, 0.74 ) }
    dend_37 { pt3dadd( 28.175, 60.6742, -10.8888, 0.74 ) }
    dend_37 { pt3dadd( 28.0464, 61.6031, -10.6826, 0.22 ) }
    dend_37 { pt3dadd( 27.8602, 62.9971, -10.3726, 0.22 ) }
    dend_37 { pt3dadd( 27.7326, 64.2618, -10.0584, 1.03 ) }
    dend_37 { pt3dadd( 27.6997, 64.9863, -9.8571, 1.77 ) }
    dend_37 { pt3dadd( 27.7106, 65.6632, -9.66579, 1.99 ) }
    dend_37 { pt3dadd( 27.7849, 66.6343, -9.37399, 1.47 ) }
    dend_37 { pt3dadd( 27.9931, 68.4011, -8.80876, 0.29 ) }
    dend_37 { pt3dadd( 28.1932, 69.8271, -8.38892, 0.29 ) }
    dend_37 { pt3dadd( 28.3, 71.0697, -8.10183, 0.96 ) }
    dend_37 { pt3dadd( 28.3296, 71.9059, -7.94211, 1.4 ) }
    dend_37 { pt3dadd( 28.3147, 73.0103, -7.76771, 1.4 ) }
    dend_37 { pt3dadd( 28.2617, 73.964, -7.65304, 0.88 ) }
    dend_37 { pt3dadd( 28.0269, 76.334, -7.44043, 0.22 ) }
    dend_37 { pt3dadd( 27.4255, 80.7863, -7.12671, 0.22 ) }
    dend_37 { pt3dadd( 27.2562, 81.934, -7.06739, 0.81 ) }
    dend_37 { pt3dadd( 27.0277, 83.406, -7.00663, 1.99 ) }
    dend_37 { pt3dadd( 26.9233, 84.1075, -6.98281, 2.21 ) }
    dend_37 { pt3dadd( 26.8172, 84.8921, -6.94423, 1.84 ) }
    dend_37 { pt3dadd( 26.6648, 86.1294, -6.85589, 1.18 ) }
    dend_37 { pt3dadd( 26.5106, 87.8225, -6.73848, 0.37 ) }
    dend_37 { pt3dadd( 26.4287, 89.0556, -6.63568, 0.22 ) }
    dend_37 { pt3dadd( 26.225, 93.2629, -6.16397, 0.22 ) }
    dend_37 { pt3dadd( 26.1866, 94.6887, -5.94757, 0.66 ) }
    dend_37 { pt3dadd( 26.1837, 95.3359, -5.82946, 0.66 ) }
    dend_37 { pt3dadd( 26.1922, 97.0891, -5.4772, 0.29 ) }
    dend_37 { pt3dadd( 26.2058, 98.0954, -5.25774, 0.29 ) }
    dend_37 { pt3dadd( 26.2355, 99.3054, -4.98627, 1.62 ) }
    dend_37 { pt3dadd( 26.2316, 100.326, -4.74622, 1.84 ) }
    dend_37 { pt3dadd( 26.1486, 101.269, -4.57669, 1.84 ) }
    dend_37 { pt3dadd( 25.8687, 103.048, -4.32425, 0.37 ) }
    dend_37 { pt3dadd( 25.7083, 103.793, -4.24565, 0.37 ) }
    dend_37 { pt3dadd( 25.5215, 104.56, -4.19647, 0.37 ) }
    dend_37 { pt3dadd( 25.1116, 106.121, -4.1514, 0.22 ) }
    dend_37 { pt3dadd( 24.159, 109.648, -4.11434, 0.22 ) }
    dend_37 { pt3dadd( 23.8847, 110.632, -4.11255, 0.88 ) }
    dend_37 { pt3dadd( 23.6606, 111.437, -4.10713, 0.88 ) }
    dend_37 { pt3dadd( 23.5079, 111.985, -4.10405, 0.88 ) }
    dend_37 { pt3dadd( 22.9735, 113.892, -4.08827, 0.22 ) }
    dend_37 { pt3dadd( 22.7025, 114.819, -4.0722, 1.11 ) }
    dend_37 { pt3dadd( 22.4164, 115.698, -4.02599, 1.25 ) }
    dend_37 { pt3dadd( 22.2757, 116.064, -3.98594, 1.25 ) }
    dend_37 { pt3dadd( 21.7221, 117.277, -3.76434, 0.22 ) }
    dend_37 { pt3dadd( 20.1301, 120.254, -2.91533, 0.22 ) }
    dend_37 { pt3dadd( 19.6083, 121.097, -2.54787, 1.18 ) }
    dend_37 { pt3dadd( 19.2149, 121.688, -2.09389, 1.62 ) }
    dend_37 { pt3dadd( 18.459, 122.857, -0.932763, 0.37 ) }
    dend_37 { pt3dadd( 18.1108, 123.403, -0.324292, 0.22 ) }
    dend_37 { pt3dadd( 17.6923, 124.057, 0.462625, 0.88 ) }
    dend_37 { pt3dadd( 17.2909, 124.692, 1.24307, 1.11 ) }
    dend_37 { pt3dadd( 15.656, 127.544, 4.39704, 0.22 ) }
    dend_37 { pt3dadd( 14.2596, 130.164, 7.18752, 0.22 ) }
    dend_37 { pt3dadd( 13.8449, 131.033, 8.0587, 0.22 ) }
    dend_37 { pt3dadd( 13.5694, 131.644, 8.61971, 0.81 ) }
    dend_37 { pt3dadd( 13.1892, 132.505, 9.31855, 1.03 ) }
    dend_37 { pt3dadd( 12.8606, 133.248, 9.804, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 69/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 30.0622, 49.1944, -13.7351, 0.22 ) }
    dend_36 { pt3dadd( 31.0073, 50.7308, -14.5255, 0.22 ) }
    dend_36 { pt3dadd( 31.5497, 51.5995, -14.943, 0.22 ) }
    dend_36 { pt3dadd( 31.8223, 52.0531, -15.1786, 0.66 ) }
    dend_36 { pt3dadd( 32.0778, 52.4851, -15.4188, 0.88 ) }
    dend_36 { pt3dadd( 32.3327, 52.9471, -15.6661, 0.59 ) }
    dend_36 { pt3dadd( 32.4914, 53.2638, -15.8247, 1.03 ) }
    dend_36 { pt3dadd( 32.7672, 53.9069, -16.1062, 1.99 ) }
    dend_36 { pt3dadd( 33.0487, 54.6787, -16.4342, 1.84 ) }
    dend_36 { pt3dadd( 33.1735, 55.0769, -16.5885, 1.4 ) }
    dend_36 { pt3dadd( 33.493, 56.3443, -16.9759, 0.22 ) }
    dend_36 { pt3dadd( 33.7025, 57.3373, -17.2189, 0.22 ) }
    dend_36 { pt3dadd( 33.8016, 57.8547, -17.3233, 0.66 ) }
    dend_36 { pt3dadd( 33.8983, 58.4256, -17.4173, 0.66 ) }
    dend_36 { pt3dadd( 34.0672, 59.4752, -17.5412, 0.29 ) }
    dend_36 { pt3dadd( 34.2834, 60.9494, -17.6865, 0.29 ) }
    dend_36 { pt3dadd( 34.4152, 61.8203, -17.7485, 1.33 ) }
    dend_36 { pt3dadd( 34.4774, 62.1868, -17.7701, 1.92 ) }
    dend_36 { pt3dadd( 34.5352, 62.4711, -17.7915, 2.21 ) }
    dend_36 { pt3dadd( 34.6305, 62.8089, -17.8295, 2.43 ) }
    dend_36 { pt3dadd( 34.7607, 63.187, -17.8828, 2.43 ) }
    dend_36 { pt3dadd( 35.0799, 64.0518, -18.0292, 0.37 ) }
    dend_36 { pt3dadd( 35.324, 64.6872, -18.1487, 0.22 ) }
    dend_36 { pt3dadd( 35.8409, 66.0243, -18.4381, 0.22 ) }
    dend_36 { pt3dadd( 36.8119, 68.5201, -19.0557, 0.22 ) }
    dend_36 { pt3dadd( 37.3609, 69.9248, -19.4368, 0.96 ) }
    dend_36 { pt3dadd( 37.6156, 70.5857, -19.6166, 1.33 ) }
    dend_36 { pt3dadd( 37.7729, 71.0112, -19.7363, 2.06 ) }
    dend_36 { pt3dadd( 37.9913, 71.6153, -19.899, 2.06 ) }
    dend_36 { pt3dadd( 38.1444, 72.0627, -20.0171, 0.96 ) }
    dend_36 { pt3dadd( 38.4736, 73.1137, -20.2783, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_36 { pt3dadd( 39.1236, 75.2595, -20.7477, 0.22 ) }
    dend_36 { pt3dadd( 39.541, 76.6485, -21.0045, 1.18 ) }
    dend_36 { pt3dadd( 39.6665, 77.0799, -21.0772, 1.69 ) }
    dend_36 { pt3dadd( 39.794, 77.5268, -21.1445, 1.69 ) }
    dend_36 { pt3dadd( 40.1167, 78.7155, -21.3275, 0.22 ) }
    dend_36 { pt3dadd( 40.6661, 80.8733, -21.7168, 0.22 ) }
    dend_36 { pt3dadd( 40.7766, 81.3405, -21.8138, 0.66 ) }
    dend_36 { pt3dadd( 40.86, 81.7023, -21.8913, 0.66 ) }
    dend_36 { pt3dadd( 41.0112, 82.3741, -22.0534, 0.37 ) }
    dend_36 { pt3dadd( 41.1293, 82.8886, -22.1911, 1.03 ) }
    dend_36 { pt3dadd( 41.232, 83.3292, -22.3307, 1.69 ) }
    dend_36 { pt3dadd( 41.362, 83.7868, -22.4907, 1.69 ) }
    dend_36 { pt3dadd( 41.5355, 84.2579, -22.6457, 1.4 ) }
    dend_36 { pt3dadd( 41.8073, 84.8515, -22.8167, 0.15 ) }
    dend_36 { pt3dadd( 42.0161, 85.2215, -22.9253, 0.44 ) }
    dend_36 { pt3dadd( 42.1381, 85.4024, -22.9744, 0.44 ) }
    dend_36 { pt3dadd( 42.6118, 86.0302, -23.1243, 0.15 ) }
    dend_36 { pt3dadd( 42.9872, 86.4893, -23.2356, 0.15 ) }
    dend_36 { pt3dadd( 43.2591, 86.805, -23.3181, 0.52 ) }
    dend_36 { pt3dadd( 43.5902, 87.1802, -23.4564, 0.74 ) }
    dend_36 { pt3dadd( 44.0311, 87.6759, -23.6788, 0.22 ) }
    dend_36 { pt3dadd( 44.4394, 88.1385, -23.9112, 1.47 ) }
    dend_36 { pt3dadd( 44.8009, 88.5611, -24.1367, 1.92 ) }
    dend_36 { pt3dadd( 45.1619, 89.0009, -24.3919, 2.06 ) }
    dend_36 { pt3dadd( 45.8537, 89.8776, -24.9225, 0.59 ) }
    dend_36 { pt3dadd( 46.3086, 90.4936, -25.2886, 0.22 ) }
    dend_36 { pt3dadd( 46.9094, 91.3632, -25.7761, 0.22 ) }
    dend_36 { pt3dadd( 47.2151, 91.8384, -26.0266, 1.03 ) }
    dend_36 { pt3dadd( 47.4883, 92.31, -26.2144, 1.25 ) }
    dend_36 { pt3dadd( 47.5694, 92.4679, -26.251, 1.4 ) }
    dend_36 { pt3dadd( 48.1161, 93.6701, -26.3254, 0.22 ) }
    dend_36 { pt3dadd( 48.3472, 94.2499, -26.2898, 1.03 ) }
    dend_36 { pt3dadd( 48.5197, 94.715, -26.2062, 1.25 ) }
    dend_36 { pt3dadd( 48.9777, 95.9521, -25.8934, 0.15 ) }
    dend_36 { pt3dadd( 49.2786, 96.7698, -25.6412, 0.59 ) }
    dend_36 { pt3dadd( 49.433, 97.2174, -25.4844, 0.81 ) }
    dend_36 { pt3dadd( 49.6955, 98.0856, -25.1241, 0.22 ) }
    dend_36 { pt3dadd( 49.7876, 98.4334, -24.9789, 0.22 ) }
    dend_36 { pt3dadd( 49.892, 98.8805, -24.7827, 1.03 ) }
    dend_36 { pt3dadd( 49.9544, 99.2456, -24.626, 1.4 ) }
    dend_36 { pt3dadd( 50.0357, 99.7301, -24.4327, 1.55 ) }
    dend_36 { pt3dadd( 50.2533, 100.835, -23.9545, 0.22 ) }
    dend_36 { pt3dadd( 50.407, 101.525, -23.6267, 1.18 ) }
    dend_36 { pt3dadd( 50.4872, 101.846, -23.4659, 1.62 ) }
    dend_36 { pt3dadd( 50.6127, 102.264, -23.2302, 1.77 ) }
    dend_36 { pt3dadd( 50.9116, 103.052, -22.7417, 0.52 ) }
    dend_36 { pt3dadd( 51.2681, 103.696, -22.3435, 1.03 ) }
    dend_36 { pt3dadd( 51.4068, 103.878, -22.2429, 1.03 ) }
    dend_36 { pt3dadd( 51.746, 104.269, -22.0663, 0.44 ) }
    dend_36 { pt3dadd( 52.2041, 104.769, -21.8797, 0.74 ) }
    dend_36 { pt3dadd( 52.5875, 105.176, -21.7614, 0.66 ) }
    dend_36 { pt3dadd( 53.8083, 106.469, -21.5074, 0.22 ) }
    dend_36 { pt3dadd( 55.1309, 107.858, -21.4197, 0.22 ) }
    dend_36 { pt3dadd( 55.6215, 108.37, -21.4412, 0.96 ) }
    dend_36 { pt3dadd( 55.7609, 108.516, -21.4672, 1.25 ) }
    dend_36 { pt3dadd( 56.013, 108.781, -21.5554, 1.25 ) }
    dend_36 { pt3dadd( 56.5434, 109.329, -21.8268, 0.22 ) }
    dend_36 { pt3dadd( 57.2316, 110.022, -22.3788, 0.22 ) }
    dend_36 { pt3dadd( 57.5424, 110.327, -22.6875, 0.96 ) }
    dend_36 { pt3dadd( 57.9433, 110.704, -23.0821, 1.33 ) }
    dend_36 { pt3dadd( 58.1124, 110.856, -23.2552, 1.33 ) }
    dend_36 { pt3dadd( 58.3949, 111.088, -23.5556, 0.52 ) }
    dend_36 { pt3dadd( 58.9104, 111.464, -24.188, 0.66 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 63/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 44.5641, 144.824, -20.1596, 0.29 ) }
    dend_33 { pt3dadd( 43.2722, 145.723, -21.4589, 0.29 ) }
    dend_33 { pt3dadd( 42.4695, 146.291, -22.2432, 0.29 ) }
    dend_33 { pt3dadd( 41.803, 146.765, -22.9156, 0.52 ) }
    dend_33 { pt3dadd( 41.08, 147.285, -23.6635, 0.74 ) }
    dend_33 { pt3dadd( 40.2667, 147.87, -24.5048, 0.22 ) }
    dend_33 { pt3dadd( 38.9656, 148.806, -25.8507, 0.22 ) }
    dend_33 { pt3dadd( 38.3227, 149.287, -26.5126, 0.96 ) }
    dend_33 { pt3dadd( 37.5784, 149.804, -27.2967, 1.18 ) }
    dend_33 { pt3dadd( 37.1919, 150.066, -27.6838, 1.18 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 73/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 44.5641, 144.824, -20.1596, 0.29 ) }
    dend_32 { pt3dadd( 45.1313, 147.738, -20.4438, 0.29 ) }
    dend_32 { pt3dadd( 45.3772, 149.002, -20.567, 1.18 ) }
    dend_32 { pt3dadd( 45.4478, 149.364, -20.6024, 1.18 ) }
    dend_32 { pt3dadd( 45.952, 151.955, -20.855, 0.22 ) }
    dend_32 { pt3dadd( 46.1906, 153.181, -20.9746, 0.44 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 79/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 44.6568, 120.96, 56.1646, 0.37 ) }
    dend_30 { pt3dadd( 44.6504, 122.106, 55.9328, 0.37 ) }
    dend_30 { pt3dadd( 44.641, 122.778, 55.7987, 0.44 ) }
    dend_30 { pt3dadd( 44.6215, 123.941, 55.5871, 0.22 ) }
    dend_30 { pt3dadd( 44.558, 124.584, 55.4806, 0.37 ) }
    dend_30 { pt3dadd( 44.5129, 124.945, 55.4239, 0.37 ) }
    dend_30 { pt3dadd( 44.2455, 127.0, 55.1127, 0.22 ) }
    dend_30 { pt3dadd( 44.1457, 127.713, 55.0129, 0.44 ) }
    dend_30 { pt3dadd( 44.0627, 128.272, 54.9369, 0.44 ) }
    dend_30 { pt3dadd( 43.4461, 132.028, 54.4329, 0.22 ) }
    dend_30 { pt3dadd( 43.2247, 133.402, 54.2568, 0.44 ) }
    dend_30 { pt3dadd( 43.1575, 133.846, 54.2019, 0.44 ) }
    dend_30 { pt3dadd( 42.7267, 136.923, 53.8324, 0.22 ) }
    dend_30 { pt3dadd( 42.5104, 138.552, 53.5888, 0.66 ) }
    dend_30 { pt3dadd( 42.484, 138.718, 53.5503, 0.96 ) }
    dend_30 { pt3dadd( 42.0876, 140.243, 53.038, 0.22 ) }
    dend_30 { pt3dadd( 41.8249, 140.978, 52.7603, 0.66 ) }
    dend_30 { pt3dadd( 41.6492, 141.402, 52.5852, 0.96 ) }
    dend_30 { pt3dadd( 41.3103, 142.138, 52.2609, 0.96 ) }
    dend_30 { pt3dadd( 39.7317, 145.566, 50.771, 0.22 ) }
    dend_30 { pt3dadd( 37.7505, 149.96, 48.8941, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_30 { pt3dadd( 36.7226, 152.161, 47.9233, 0.22 ) }
    dend_30 { pt3dadd( 36.2779, 153.095, 47.507, 0.96 ) }
    dend_30 { pt3dadd( 35.8804, 153.941, 47.1506, 1.62 ) }
    dend_30 { pt3dadd( 35.2934, 155.248, 46.6506, 1.47 ) }
    dend_30 { pt3dadd( 35.0824, 155.791, 46.4664, 1.4 ) }
    dend_30 { pt3dadd( 34.5199, 157.533, 45.8849, 0.37 ) }
    dend_30 { pt3dadd( 34.1172, 158.95, 45.4468, 0.37 ) }
    dend_30 { pt3dadd( 33.8149, 160.235, 45.1025, 1.11 ) }
    dend_30 { pt3dadd( 33.6328, 161.018, 44.9627, 1.55 ) }
    dend_30 { pt3dadd( 33.4421, 161.8, 44.8932, 1.77 ) }
    dend_30 { pt3dadd( 33.273, 162.495, 44.8936, 1.77 ) }
    dend_30 { pt3dadd( 33.0621, 163.365, 44.9645, 0.81 ) }
    dend_30 { pt3dadd( 32.1784, 166.051, 45.2534, 0.22 ) }
    dend_30 { pt3dadd( 31.0621, 168.588, 45.4996, 0.22 ) }
    dend_30 { pt3dadd( 30.5069, 169.577, 45.5862, 0.96 ) }
    dend_30 { pt3dadd( 29.9961, 170.349, 45.6422, 1.33 ) }
    dend_30 { pt3dadd( 29.3844, 171.167, 45.7076, 1.77 ) }
    dend_30 { pt3dadd( 27.8185, 172.983, 45.8818, 0.22 ) }
    dend_30 { pt3dadd( 26.5487, 174.248, 46.0217, 0.22 ) }
    dend_30 { pt3dadd( 25.5166, 175.243, 46.0859, 1.33 ) }
    dend_30 { pt3dadd( 25.1235, 175.632, 46.1144, 1.77 ) }
    dend_30 { pt3dadd( 24.5281, 176.216, 46.2232, 2.28 ) }
    dend_30 { pt3dadd( 24.1377, 176.588, 46.3428, 2.28 ) }
    dend_30 { pt3dadd( 23.2207, 177.562, 46.7342, 0.74 ) }
    dend_30 { pt3dadd( 22.4307, 178.573, 47.126, 1.25 ) }
    dend_30 { pt3dadd( 21.9401, 179.431, 47.3677, 1.77 ) }
    dend_30 { pt3dadd( 21.0227, 181.38, 47.7063, 1.11 ) }
    dend_30 { pt3dadd( 20.6852, 182.24, 47.7568, 1.11 ) }
    dend_30 { pt3dadd( 20.0977, 183.831, 47.5844, 0.22 ) }
    dend_30 { pt3dadd( 19.2789, 185.885, 47.0488, 0.22 ) }
    dend_30 { pt3dadd( 18.4671, 187.704, 46.3925, 1.77 ) }
    dend_30 { pt3dadd( 18.1756, 188.31, 46.14, 2.06 ) }
    dend_30 { pt3dadd( 17.8838, 188.907, 45.8555, 2.28 ) }
    dend_30 { pt3dadd( 16.6797, 191.331, 44.6113, 0.22 ) }
    dend_30 { pt3dadd( 15.3234, 193.945, 43.1988, 0.22 ) }
    dend_30 { pt3dadd( 14.6555, 195.227, 42.4684, 0.22 ) }
    dend_30 { pt3dadd( 14.1892, 196.202, 41.889, 0.66 ) }
    dend_30 { pt3dadd( 13.7759, 197.146, 41.3406, 0.88 ) }
    dend_30 { pt3dadd( 12.8219, 199.682, 39.889, 0.44 ) }
    dend_30 { pt3dadd( 12.4486, 201.193, 39.0591, 0.29 ) }
    dend_30 { pt3dadd( 12.3414, 202.084, 38.5151, 0.52 ) }
    dend_30 { pt3dadd( 12.2888, 203.072, 37.8793, 0.66 ) }
    dend_30 { pt3dadd( 8.94778, 214.77, 36.9471, 0.66 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 43/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 44.6568, 120.96, 56.1646, 0.29 ) }
    dend_29 { pt3dadd( 45.9005, 121.444, 56.3015, 0.29 ) }
    dend_29 { pt3dadd( 47.522, 122.075, 56.4799, 0.29 ) }
    dend_29 { pt3dadd( 48.5859, 122.489, 56.5969, 0.29 ) }
    dend_29 { pt3dadd( 49.0897, 122.685, 56.6523, 0.59 ) }
    dend_29 { pt3dadd( 57.8477, 124.337, 57.246, 0.59 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 49/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -68.8001, 25.6342, -9.72775, 0.22 ) }
    dend_23 { pt3dadd( -68.4337, 27.1133, -9.67756, 0.22 ) }
    dend_23 { pt3dadd( -68.1762, 28.2644, -9.31128, 0.22 ) }
    dend_23 { pt3dadd( -67.9803, 29.2936, -8.87953, 1.03 ) }
    dend_23 { pt3dadd( -67.8873, 29.9917, -8.54932, 1.33 ) }
    dend_23 { pt3dadd( -67.8359, 30.6103, -8.24864, 1.33 ) }
    dend_23 { pt3dadd( -67.8147, 31.1683, -7.96513, 1.33 ) }
    dend_23 { pt3dadd( -68.0124, 33.458, -6.59414, 0.22 ) }
    dend_23 { pt3dadd( -68.1403, 34.094, -6.15628, 0.22 ) }
    dend_23 { pt3dadd( -68.4377, 35.0133, -5.47835, 0.66 ) }
    dend_23 { pt3dadd( -68.686, 35.5968, -5.04064, 0.88 ) }
    dend_23 { pt3dadd( -69.0213, 36.2685, -4.51806, 0.88 ) }
    dend_23 { pt3dadd( -69.4552, 37.0591, -3.90844, 0.22 ) }
    dend_23 { pt3dadd( -69.9515, 37.8966, -3.27677, 0.66 ) }
    dend_23 { pt3dadd( -70.3063, 38.5697, -2.7346, 1.4 ) }
    dend_23 { pt3dadd( -70.6237, 39.27, -2.1027, 1.4 ) }
    dend_23 { pt3dadd( -70.9633, 40.1247, -1.2437, 1.11 ) }
    dend_23 { pt3dadd( -71.2131, 40.768, -0.579522, 0.96 ) }
    dend_23 { pt3dadd( -71.319, 41.1187, -0.161229, 1.18 ) }
    dend_23 { pt3dadd( -71.4532, 41.7093, 0.546415, 1.18 ) }
    dend_23 { pt3dadd( -71.6517, 42.8263, 1.88988, 0.74 ) }
    dend_23 { pt3dadd( -71.7357, 43.3983, 2.55777, 0.44 ) }
    dend_23 { pt3dadd( -71.8788, 44.3547, 3.62991, 0.66 ) }
    dend_23 { pt3dadd( -72.1987, 46.6266, 6.06923, 0.52 ) }
    dend_23 { pt3dadd( -72.3149, 47.5974, 7.02132, 0.22 ) }
    dend_23 { pt3dadd( -72.4118, 48.5659, 7.85112, 0.44 ) }
    dend_23 { pt3dadd( -72.4473, 49.2604, 8.37623, 0.44 ) }
    dend_23 { pt3dadd( -72.4906, 49.9912, 8.89552, 0.22 ) }
    dend_23 { pt3dadd( -72.5716, 51.145, 9.69551, 0.22 ) }
    dend_23 { pt3dadd( -72.7901, 52.5732, 10.5656, 0.22 ) }
    dend_23 { pt3dadd( -72.9664, 53.4374, 11.0941, 0.22 ) }
    dend_23 { pt3dadd( -73.4866, 55.5113, 12.3286, 0.22 ) }
    dend_23 { pt3dadd( -73.727, 56.3516, 12.8326, 1.33 ) }
    dend_23 { pt3dadd( -74.0632, 57.4204, 13.4806, 1.62 ) }
    dend_23 { pt3dadd( -74.5195, 58.6391, 14.25, 0.22 ) }
    dend_23 { pt3dadd( -74.9448, 59.6791, 14.8975, 0.22 ) }
    dend_23 { pt3dadd( -75.2276, 60.4043, 15.3163, 0.81 ) }
    dend_23 { pt3dadd( -75.4396, 61.0122, 15.637, 0.96 ) }
    dend_23 { pt3dadd( -75.6249, 61.7202, 16.0069, 0.96 ) }
    dend_23 { pt3dadd( -75.8703, 63.0737, 16.7314, 0.29 ) }
    dend_23 { pt3dadd( -75.9576, 64.3642, 17.479, 0.22 ) }
    dend_23 { pt3dadd( -75.8876, 65.6223, 18.1876, 0.81 ) }
    dend_23 { pt3dadd( -75.7383, 66.5369, 18.6695, 1.11 ) }
    dend_23 { pt3dadd( -75.5534, 67.2346, 19.0171, 1.11 ) }
    dend_23 { pt3dadd( -75.0086, 68.7743, 19.5884, 0.29 ) }
    dend_23 { pt3dadd( -74.6005, 69.6704, 19.7685, 0.22 ) }
    dend_23 { pt3dadd( -74.0113, 70.8986, 19.8595, 0.22 ) }
    dend_23 { pt3dadd( -73.7719, 71.4045, 19.8496, 0.29 ) }
    dend_23 { pt3dadd( -73.241, 72.5896, 19.7319, 0.29 ) }
    dend_23 { pt3dadd( -72.3007, 74.8798, 19.3649, 0.22 ) }
    dend_23 { pt3dadd( -71.405, 77.3168, 18.8537, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_23 { pt3dadd( -70.8551, 79.0293, 18.4761, 0.22 ) }
    dend_23 { pt3dadd( -70.6705, 79.684, 18.3368, 0.52 ) }
    dend_23 { pt3dadd( -70.5657, 80.1045, 18.2598, 0.52 ) }
    dend_23 { pt3dadd( -70.1948, 81.867, 17.9929, 0.22 ) }
    dend_23 { pt3dadd( -70.0472, 82.7419, 17.9502, 0.22 ) }
    dend_23 { pt3dadd( -69.9534, 83.4529, 18.0023, 0.44 ) }
    dend_23 { pt3dadd( -69.8753, 84.0169, 18.0675, 0.44 ) }
    dend_23 { pt3dadd( -69.7083, 85.2186, 18.2336, 0.15 ) }
    dend_23 { pt3dadd( -69.5725, 86.1397, 18.4134, 0.37 ) }
    dend_23 { pt3dadd( -69.2444, 88.2809, 18.9487, 0.22 ) }
    dend_23 { pt3dadd( -68.9035, 90.4711, 19.5437, 0.52 ) }
    dend_23 { pt3dadd( -68.7362, 91.5159, 19.8647, 0.52 ) }
    dend_23 { pt3dadd( -68.6569, 92.0096, 20.0414, 0.52 ) }
    dend_23 { pt3dadd( -68.407, 93.9495, 20.8158, 0.22 ) }
    dend_23 { pt3dadd( -68.3365, 94.8183, 21.1759, 0.22 ) }
    dend_23 { pt3dadd( -68.3137, 95.4853, 21.4445, 0.59 ) }
    dend_23 { pt3dadd( -68.3204, 96.5852, 21.794, 0.88 ) }
    dend_23 { pt3dadd( -68.321, 97.372, 22.0825, 0.88 ) }
    dend_23 { pt3dadd( -68.3055, 98.8771, 22.6017, 0.22 ) }
    dend_23 { pt3dadd( -68.2687, 99.9071, 22.9417, 0.37 ) }
    dend_23 { pt3dadd( -68.2372, 100.324, 23.0967, 0.37 ) }
    dend_23 { pt3dadd( -68.045, 101.645, 23.5974, 0.15 ) }
    dend_23 { pt3dadd( -67.6408, 103.839, 24.3462, 0.15 ) }
    dend_23 { pt3dadd( -67.3223, 105.355, 24.8272, 1.11 ) }
    dend_23 { pt3dadd( -67.0878, 106.363, 25.1395, 1.77 ) }
    dend_23 { pt3dadd( -66.7821, 107.764, 25.5543, 1.25 ) }
    dend_23 { pt3dadd( -66.292, 110.636, 26.2786, 0.22 ) }
    dend_23 { pt3dadd( -66.0172, 113.042, 26.7661, 0.22 ) }
    dend_23 { pt3dadd( -65.9679, 114.01, 26.8881, 0.44 ) }
    dend_23 { pt3dadd( -65.963, 114.544, 26.9299, 0.44 ) }
    dend_23 { pt3dadd( -65.9951, 116.285, 26.9643, 0.22 ) }
    dend_23 { pt3dadd( -66.0791, 118.669, 26.913, 0.22 ) }
    dend_23 { pt3dadd( -66.1328, 119.711, 26.8798, 0.37 ) }
    dend_23 { pt3dadd( -66.1765, 121.104, 26.8441, 0.37 ) }
    dend_23 { pt3dadd( -66.1762, 122.945, 26.8535, 0.37 ) }
    dend_23 { pt3dadd( -66.1409, 124.431, 26.8638, 0.44 ) }
    dend_23 { pt3dadd( -66.0605, 125.552, 26.8696, 0.96 ) }
    dend_23 { pt3dadd( -65.9258, 126.49, 26.8985, 1.62 ) }
    dend_23 { pt3dadd( -65.8071, 127.117, 26.9331, 1.77 ) }
    dend_23 { pt3dadd( -65.5645, 128.336, 27.0684, 1.77 ) }
    dend_23 { pt3dadd( -66.2764, 139.605, 30.9383, 1.77 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 41/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -68.8001, 25.6342, -9.72775, 1.25 ) }
    dend_22 { pt3dadd( -70.0905, 25.1964, -10.054, 1.25 ) }
    dend_22 { pt3dadd( -70.9827, 24.9978, -10.3066, 1.69 ) }
    dend_22 { pt3dadd( -71.7356, 24.8754, -10.5111, 1.92 ) }
    dend_22 { pt3dadd( -73.4145, 24.7568, -10.946, 1.55 ) }
    dend_22 { pt3dadd( -73.8777, 24.7408, -11.0584, 1.77 ) }
    dend_22 { pt3dadd( -76.0449, 24.7173, -11.5494, 0.22 ) }
    dend_22 { pt3dadd( -77.2885, 24.7961, -11.8311, 0.44 ) }
    dend_22 { pt3dadd( -78.0362, 24.8859, -11.9841, 0.44 ) }
    dend_22 { pt3dadd( -81.3419, 25.4182, -12.5707, 0.22 ) }
    dend_22 { pt3dadd( -82.0026, 25.5435, -12.6626, 0.59 ) }
    dend_22 { pt3dadd( -82.7305, 25.6914, -12.7502, 0.59 ) }
    dend_22 { pt3dadd( -86.3827, 26.484, -13.1592, 0.22 ) }
    dend_22 { pt3dadd( -87.8476, 26.804, -13.3455, 0.22 ) }
    dend_22 { pt3dadd( -88.8748, 27.0358, -13.4932, 1.03 ) }
    dend_22 { pt3dadd( -89.309, 27.1347, -13.564, 1.33 ) }
    dend_22 { pt3dadd( -89.766, 27.2419, -13.6524, 1.33 ) }
    dend_22 { pt3dadd( -92.0328, 27.741, -14.2196, 0.22 ) }
    dend_22 { pt3dadd( -94.0642, 28.1538, -14.8062, 0.22 ) }
    dend_22 { pt3dadd( -94.5368, 28.2425, -14.9358, 0.74 ) }
    dend_22 { pt3dadd( -95.7849, 28.475, -15.237, 1.55 ) }
    dend_22 { pt3dadd( -96.6221, 28.6339, -15.4103, 2.06 ) }
    dend_22 { pt3dadd( -97.872, 28.8746, -15.6255, 1.99 ) }
    dend_22 { pt3dadd( -100.363, 29.3498, -15.9378, 0.22 ) }
    dend_22 { pt3dadd( -104.004, 29.979, -16.3627, 0.22 ) }
    dend_22 { pt3dadd( -105.684, 30.253, -16.5441, 0.22 ) }
    dend_22 { pt3dadd( -106.524, 30.3755, -16.6198, 0.96 ) }
    dend_22 { pt3dadd( -106.983, 30.4268, -16.6611, 1.18 ) }
    dend_22 { pt3dadd( -107.778, 30.5009, -16.7283, 1.18 ) }
    dend_22 { pt3dadd( -109.362, 30.5436, -16.9541, 0.22 ) }
    dend_22 { pt3dadd( -110.69, 30.5116, -17.197, 0.22 ) }
    dend_22 { pt3dadd( -111.233, 30.4913, -17.2999, 1.18 ) }
    dend_22 { pt3dadd( -112.33, 30.4634, -17.4747, 1.47 ) }
    dend_22 { pt3dadd( -112.823, 30.4608, -17.53, 1.47 ) }
    dend_22 { pt3dadd( -115.165, 30.4911, -17.7133, 0.22 ) }
    dend_22 { pt3dadd( -116.209, 30.5337, -17.7529, 0.74 ) }
    dend_22 { pt3dadd( -116.862, 30.5566, -17.7519, 0.74 ) }
    dend_22 { pt3dadd( -119.003, 30.6083, -17.6787, 0.22 ) }
    dend_22 { pt3dadd( -120.713, 30.5693, -17.4926, 1.62 ) }
    dend_22 { pt3dadd( -121.082, 30.5447, -17.436, 2.21 ) }
    dend_22 { pt3dadd( -121.926, 30.4502, -17.2655, 2.43 ) }
    dend_22 { pt3dadd( -125.819, 29.8681, -16.3593, 0.22 ) }
    dend_22 { pt3dadd( -127.333, 29.603, -15.9253, 0.22 ) }
    dend_22 { pt3dadd( -130.64, 28.9168, -14.7897, 0.22 ) }
    dend_22 { pt3dadd( -131.381, 28.7457, -14.5062, 1.33 ) }
    dend_22 { pt3dadd( -132.025, 28.5841, -14.2381, 1.92 ) }
    dend_22 { pt3dadd( -132.544, 28.4412, -14.0042, 2.06 ) }
    dend_22 { pt3dadd( -135.301, 27.6146, -12.5294, 0.15 ) }
    dend_22 { pt3dadd( -137.255, 26.9613, -11.3805, 0.15 ) }
    dend_22 { pt3dadd( -137.854, 26.7481, -10.9979, 0.88 ) }
    dend_22 { pt3dadd( -138.603, 26.4701, -10.4983, 1.11 ) }
    dend_22 { pt3dadd( -139.086, 26.2829, -10.1659, 1.11 ) }
    dend_22 { pt3dadd( -142.458, 24.9087, -7.84369, 0.22 ) }
    dend_22 { pt3dadd( -145.985, 23.3629, -5.41828, 0.22 ) }
    dend_22 { pt3dadd( -147.454, 22.6992, -4.40599, 1.18 ) }
    dend_22 { pt3dadd( -148.232, 22.3468, -3.87737, 1.92 ) }
    dend_22 { pt3dadd( -148.696, 22.136, -3.56423, 1.92 ) }
    dend_22 { pt3dadd( -153.521, 19.9252, -0.372695, 0.22 ) }
    dend_22 { pt3dadd( -156.938, 18.3534, 1.7546, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( -157.507, 18.101, 2.08982, 0.96 ) }
    dend_22 { pt3dadd( -158.167, 17.8024, 2.45978, 1.25 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 2/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -23.7292, 6.66294, -28.1909, 0.59 ) }
    dend_15 { pt3dadd( -23.917, 8.19503, -28.6517, 0.59 ) }
    dend_15 { pt3dadd( -24.1101, 9.40686, -29.0288, 0.74 ) }
    dend_15 { pt3dadd( -24.2916, 10.391, -29.324, 1.18 ) }
    dend_15 { pt3dadd( -24.5019, 11.4044, -29.6923, 1.33 ) }
    dend_15 { pt3dadd( -24.7747, 12.5385, -30.1626, 0.88 ) }
    dend_15 { pt3dadd( -25.0067, 13.3888, -30.535, 0.52 ) }
    dend_15 { pt3dadd( -25.3952, 14.5751, -31.1537, 0.74 ) }
    dend_15 { pt3dadd( -25.6629, 15.2527, -31.5434, 0.88 ) }
    dend_15 { pt3dadd( -26.2735, 16.5559, -32.3489, 0.37 ) }
    dend_15 { pt3dadd( -26.7173, 17.343, -32.8251, 0.52 ) }
    dend_15 { pt3dadd( -27.0757, 17.8804, -33.1644, 0.74 ) }
    dend_15 { pt3dadd( -27.6528, 18.6528, -33.6581, 0.74 ) }
    dend_15 { pt3dadd( -28.0711, 19.1456, -33.9842, 0.29 ) }
    dend_15 { pt3dadd( -28.8751, 20.0075, -34.5388, 0.22 ) }
    dend_15 { pt3dadd( -29.8176, 20.9127, -35.0608, 0.22 ) }
    dend_15 { pt3dadd( -30.6994, 21.7238, -35.5265, 0.96 ) }
    dend_15 { pt3dadd( -31.2103, 22.1675, -35.7882, 1.47 ) }
    dend_15 { pt3dadd( -31.8274, 22.6585, -36.0703, 1.69 ) }
    dend_15 { pt3dadd( -32.2616, 22.98, -36.2729, 1.77 ) }
    dend_15 { pt3dadd( -32.9507, 23.4318, -36.5779, 1.77 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 23/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 0.00466954, -22.037, 0.742598, 1.33 ) }
    dend_13 { pt3dadd( -1.31237, -22.8081, 1.28752, 1.33 ) }
    dend_13 { pt3dadd( -2.48874, -23.6268, 1.81711, 0.81 ) }
    dend_13 { pt3dadd( -3.36794, -24.3485, 2.31777, 1.11 ) }
    dend_13 { pt3dadd( -3.75239, -24.7152, 2.58218, 1.11 ) }
    dend_13 { pt3dadd( -4.31612, -25.3364, 3.05581, 0.81 ) }
    dend_13 { pt3dadd( -4.9292, -26.1227, 3.67676, 1.03 ) }
    dend_13 { pt3dadd( -5.3003, -26.7789, 4.24686, 1.11 ) }
    dend_13 { pt3dadd( -5.69659, -27.7467, 5.08181, 1.33 ) }
    dend_13 { pt3dadd( -5.91337, -28.3621, 5.64051, 1.47 ) }
    dend_13 { pt3dadd( -6.19255, -29.1046, 6.36821, 1.33 ) }
    dend_13 { pt3dadd( -6.50504, -29.8429, 7.20002, 1.18 ) }
    dend_13 { pt3dadd( -6.89643, -30.5592, 8.18328, 0.96 ) }
    dend_13 { pt3dadd( -7.15483, -30.9105, 8.77125, 0.66 ) }
    dend_13 { pt3dadd( -7.50127, -31.2432, 9.43831, 0.81 ) }
    dend_13 { pt3dadd( -7.98216, -31.6036, 10.287, 0.66 ) }
    dend_13 { pt3dadd( -8.67764, -32.0233, 11.376, 0.59 ) }
    dend_13 { pt3dadd( -9.10693, -32.2484, 11.9833, 0.74 ) }
    dend_13 { pt3dadd( -9.95881, -32.7016, 13.1314, 1.18 ) }
    dend_13 { pt3dadd( -10.5502, -33.0249, 13.8739, 1.33 ) }
    dend_13 { pt3dadd( -11.2558, -33.4645, 14.6715, 1.47 ) }
    dend_13 { pt3dadd( -11.7782, -33.8229, 15.2182, 1.25 ) }
    dend_13 { pt3dadd( -12.3227, -34.2214, 15.7466, 1.25 ) }
    dend_13 { pt3dadd( -12.9919, -34.7527, 16.419, 1.03 ) }
    dend_13 { pt3dadd( -13.7115, -35.3403, 17.1514, 0.29 ) }
    dend_13 { pt3dadd( -14.527, -36.064, 18.0318, 0.29 ) }
    dend_13 { pt3dadd( -15.2893, -36.799, 18.8954, 0.66 ) }
    dend_13 { pt3dadd( -15.826, -37.3872, 19.5534, 1.03 ) }
    dend_13 { pt3dadd( -16.5377, -38.2426, 20.4613, 1.18 ) }
    dend_13 { pt3dadd( -16.962, -38.7817, 21.0027, 1.62 ) }
    dend_13 { pt3dadd( -17.2945, -39.2227, 21.4228, 1.62 ) }
    dend_13 { pt3dadd( -17.6817, -39.7196, 21.8302, 1.33 ) }
    dend_13 { pt3dadd( -18.2046, -40.3577, 22.2371, 0.74 ) }
    dend_13 { pt3dadd( -18.8645, -41.1238, 22.621, 0.37 ) }
    dend_13 { pt3dadd( -19.2849, -41.5647, 22.7972, 0.44 ) }
    dend_13 { pt3dadd( -19.8293, -42.098, 22.9894, 0.22 ) }
    dend_13 { pt3dadd( -20.5619, -42.7459, 23.2241, 1.11 ) }
    dend_13 { pt3dadd( -20.923, -43.0666, 23.3522, 1.55 ) }
    dend_13 { pt3dadd( -21.3053, -43.43, 23.5104, 1.77 ) }
    dend_13 { pt3dadd( -21.8216, -43.9978, 23.7801, 1.55 ) }
    dend_13 { pt3dadd( -22.5429, -44.9545, 24.3483, 0.22 ) }
    dend_13 { pt3dadd( -22.8597, -45.4284, 24.7033, 0.22 ) }
    dend_13 { pt3dadd( -23.3876, -46.1529, 25.3735, 0.81 ) }
    dend_13 { pt3dadd( -23.6827, -46.5237, 25.7143, 0.96 ) }
    dend_13 { pt3dadd( -23.9551, -46.8524, 25.9978, 0.96 ) }
    dend_13 { pt3dadd( -24.5287, -47.5554, 26.524, 0.22 ) }
    dend_13 { pt3dadd( -25.0223, -48.101, 26.8606, 0.22 ) }
    dend_13 { pt3dadd( -25.9433, -49.0086, 27.2754, 0.22 ) }
    dend_13 { pt3dadd( -26.8121, -49.7331, 27.5723, 1.69 ) }
    dend_13 { pt3dadd( -27.3029, -50.1074, 27.7152, 2.5 ) }
    dend_13 { pt3dadd( -27.8167, -50.4753, 27.8448, 2.28 ) }
    dend_13 { pt3dadd( -28.9644, -51.2644, 28.1297, 0.96 ) }
    dend_13 { pt3dadd( -29.8953, -51.9059, 28.4158, 0.66 ) }
    dend_13 { pt3dadd( -30.9234, -52.6149, 28.8612, 1.47 ) }
    dend_13 { pt3dadd( -31.1318, -52.7504, 28.989, 1.99 ) }
    dend_13 { pt3dadd( -31.5348, -53.0123, 29.2797, 1.99 ) }
    dend_13 { pt3dadd( -32.5132, -53.6809, 30.0728, 1.11 ) }
    dend_13 { pt3dadd( -33.1137, -54.126, 30.6028, 0.59 ) }
    dend_13 { pt3dadd( -33.7288, -54.603, 31.1841, 1.11 ) }
    dend_13 { pt3dadd( -34.5222, -55.2569, 31.9457, 0.66 ) }
    dend_13 { pt3dadd( -35.3207, -55.9373, 32.7377, 0.37 ) }
    dend_13 { pt3dadd( -35.8083, -56.3756, 33.2432, 0.29 ) }
    dend_13 { pt3dadd( -36.2703, -56.8221, 33.7203, 0.29 ) }
    dend_13 { pt3dadd( -43.0341, -62.1865, 39.5034, 0.29 ) }
    dend_13 { pt3dadd( -49.7555, -65.958, 46.5261, 0.29 ) }
    dend_13 { pt3dadd( -56.1042, -70.6303, 53.3226, 0.29 ) }
    dend_13 { pt3dadd( -62.7513, -74.279, 60.4829, 0.29 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 90/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.00466954, -22.037, 0.742598, 2.87 ) }
    dend_2 { pt3dadd( 0.484515, -24.1769, 0.157512, 2.87 ) }
    dend_2 { pt3dadd( 0.794628, -25.5725, -0.249369, 3.02 ) }
    dend_2 { pt3dadd( 1.10874, -27.039, -0.703834, 3.17 ) }
    dend_2 { pt3dadd( 1.62131, -29.5525, -1.52324, 2.58 ) }
    dend_2 { pt3dadd( 1.91718, -31.1746, -2.12512, 2.73 ) }
    dend_2 { pt3dadd( 2.28081, -33.2322, -2.98015, 2.73 ) }
    dend_2 { pt3dadd( 2.60715, -35.1839, -3.9226, 2.36 ) }
    dend_2 { pt3dadd( 2.97372, -37.3058, -5.04159, 2.36 ) }
    dend_2 { pt3dadd( 3.30826, -39.2541, -6.1077, 2.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 3.70016, -41.6044, -7.3823, 1.77 ) }
    dend_2 { pt3dadd( 4.00501, -43.5579, -8.42993, 1.77 ) }
    dend_2 { pt3dadd( 4.18678, -44.7134, -9.06699, 1.84 ) }
    dend_2 { pt3dadd( 4.36344, -45.8352, -9.6889, 2.06 ) }
    dend_2 { pt3dadd( 4.59345, -47.2001, -10.4245, 2.21 ) }
    dend_2 { pt3dadd( 4.8337, -48.4829, -11.0311, 2.28 ) }
    dend_2 { pt3dadd( 5.13444, -49.9118, -11.4517, 2.95 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 7/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 55.7777, 50.2244, 16.7466, 0.52 ) }
    dend_42 { pt3dadd( 55.0532, 52.5173, 20.1071, 0.52 ) }
    dend_42 { pt3dadd( 54.6892, 53.6359, 21.6032, 0.29 ) }
    dend_42 { pt3dadd( 54.506, 54.1853, 22.2607, 0.74 ) }
    dend_42 { pt3dadd( 54.2289, 54.9793, 23.164, 1.03 ) }
    dend_42 { pt3dadd( 54.0209, 55.6096, 23.8427, 1.03 ) }
    dend_42 { pt3dadd( 53.6258, 56.9294, 25.2093, 0.29 ) }
    dend_42 { pt3dadd( 53.5521, 57.3194, 25.6506, 0.29 ) }
    dend_42 { pt3dadd( 53.5256, 57.7896, 26.1529, 0.52 ) }
    dend_42 { pt3dadd( 53.5815, 58.3194, 26.6895, 0.52 ) }
    dend_42 { pt3dadd( 53.7259, 58.7688, 27.1187, 0.37 ) }
    dend_42 { pt3dadd( 53.9734, 59.1799, 27.5084, 0.52 ) }
    dend_42 { pt3dadd( 54.767, 59.9654, 28.2921, 0.29 ) }
    dend_42 { pt3dadd( 55.3564, 60.4588, 28.817, 0.52 ) }
    dend_42 { pt3dadd( 56.2413, 61.0782, 29.5353, 1.11 ) }
    dend_42 { pt3dadd( 57.1236, 61.6014, 30.1724, 0.66 ) }
    dend_42 { pt3dadd( 57.6176, 61.8476, 30.5116, 0.96 ) }
    dend_42 { pt3dadd( 58.1524, 62.0628, 30.8472, 1.47 ) }
    dend_42 { pt3dadd( 58.6444, 67.0144, 38.0331, 1.47 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 26/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 55.7777, 50.2244, 16.7466, 0.59 ) }
    dend_41 { pt3dadd( 56.1608, 50.5992, 17.3183, 0.59 ) }
    dend_41 { pt3dadd( 56.6564, 51.1055, 18.0282, 1.11 ) }
    dend_41 { pt3dadd( 56.8951, 51.3543, 18.3601, 1.55 ) }
    dend_41 { pt3dadd( 57.2408, 51.7234, 18.8173, 2.14 ) }
    dend_41 { pt3dadd( 58.1302, 52.7169, 19.9514, 0.22 ) }
    dend_41 { pt3dadd( 58.4231, 53.0655, 20.2932, 0.22 ) }
    dend_41 { pt3dadd( 58.6089, 53.301, 20.4989, 0.44 ) }
    dend_41 { pt3dadd( 58.7608, 53.5073, 20.658, 0.44 ) }
    dend_41 { pt3dadd( 58.9961, 53.854, 20.9069, 0.22 ) }
    dend_41 { pt3dadd( 59.4386, 54.7051, 21.4438, 0.22 ) }
    dend_41 { pt3dadd( 59.8303, 55.6682, 22.0036, 1.18 ) }
    dend_41 { pt3dadd( 60.0037, 56.1768, 22.3048, 1.77 ) }
    dend_41 { pt3dadd( 60.1669, 56.7519, 22.6407, 2.28 ) }
    dend_41 { pt3dadd( 60.2713, 57.2203, 22.9095, 2.28 ) }
    dend_41 { pt3dadd( 60.5355, 58.7346, 23.7881, 0.22 ) }
    dend_41 { pt3dadd( 60.5847, 59.2026, 24.0555, 0.22 ) }
    dend_41 { pt3dadd( 60.602, 59.6771, 24.334, 1.47 ) }
    dend_41 { pt3dadd( 60.6028, 59.8989, 24.4508, 1.92 ) }
    dend_41 { pt3dadd( 60.6017, 60.1922, 24.592, 1.92 ) }
    dend_41 { pt3dadd( 63.6451, 65.6315, 27.4903, 1.92 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 47/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -32.9507, 23.4318, -36.5779, 0.29 ) }
    dend_17 { pt3dadd( -34.0799, 25.8967, -38.3003, 0.29 ) }
    dend_17 { pt3dadd( -34.4662, 26.6985, -38.8785, 0.22 ) }
    dend_17 { pt3dadd( -34.4685, 26.6603, -38.0996, 0.74 ) }
    dend_17 { pt3dadd( -34.6256, 26.8902, -37.6622, 0.88 ) }
    dend_17 { pt3dadd( -35.1399, 27.572, -36.616, 0.88 ) }
    dend_17 { pt3dadd( -35.7208, 28.3097, -35.6328, 0.29 ) }
    dend_17 { pt3dadd( -36.2592, 28.9374, -34.7269, 0.29 ) }
    dend_17 { pt3dadd( -39.9494, 32.9842, -28.0348, 0.29 ) }
    dend_17 { pt3dadd( -40.6742, 33.7503, -26.5849, 0.29 ) }
    dend_17 { pt3dadd( -41.193, 34.2669, -25.4487, 0.96 ) }
    dend_17 { pt3dadd( -41.5176, 34.5648, -24.6503, 1.47 ) }
    dend_17 { pt3dadd( -41.8823, 34.8678, -23.6288, 1.69 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 60/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -32.9507, 23.4318, -36.5779, 0.22 ) }
    dend_16 { pt3dadd( -34.866, 23.2494, -36.7418, 0.22 ) }
    dend_16 { pt3dadd( -36.0059, 23.1354, -36.811, 0.22 ) }
    dend_16 { pt3dadd( -37.8167, 22.9577, -36.8766, 0.22 ) }
    dend_16 { pt3dadd( -38.9464, 22.8411, -36.8498, 1.18 ) }
    dend_16 { pt3dadd( -39.2765, 22.807, -36.8326, 1.4 ) }
    dend_16 { pt3dadd( -39.9673, 22.733, -36.7888, 1.4 ) }
    dend_16 { pt3dadd( -41.0351, 22.5979, -36.6829, 0.81 ) }
    dend_16 { pt3dadd( -42.2769, 22.465, -36.5332, 0.22 ) }
    dend_16 { pt3dadd( -43.725, 22.3124, -36.4302, 0.22 ) }
    dend_16 { pt3dadd( -44.3264, 22.2553, -36.4208, 1.4 ) }
    dend_16 { pt3dadd( -44.7858, 22.2026, -36.4752, 1.77 ) }
    dend_16 { pt3dadd( -45.2827, 22.131, -36.6056, 1.77 ) }
    dend_16 { pt3dadd( -46.0714, 22.003, -36.9061, 1.25 ) }
    dend_16 { pt3dadd( -47.7656, 21.668, -37.7515, 0.22 ) }
    dend_16 { pt3dadd( -48.6254, 21.4511, -38.2328, 0.22 ) }
    dend_16 { pt3dadd( -50.2272, 20.9937, -39.0947, 0.22 ) }
    dend_16 { pt3dadd( -51.1568, 20.732, -39.5568, 1.25 ) }
    dend_16 { pt3dadd( -51.4561, 20.6464, -39.694, 1.55 ) }
    dend_16 { pt3dadd( -52.2162, 20.432, -40.0092, 1.55 ) }
    dend_16 { pt3dadd( -53.5633, 20.0897, -40.4822, 1.03 ) }
    dend_16 { pt3dadd( -54.6097, 19.8555, -40.7861, 0.22 ) }
    dend_16 { pt3dadd( -56.0544, 19.6131, -41.1326, 1.03 ) }
    dend_16 { pt3dadd( -56.7372, 19.5356, -41.283, 1.33 ) }
    dend_16 { pt3dadd( -58.1851, 19.44, -41.6118, 0.22 ) }
    dend_16 { pt3dadd( -59.1054, 19.4213, -41.8182, 0.22 ) }
    dend_16 { pt3dadd( -60.2725, 19.4454, -42.1092, 1.25 ) }
    dend_16 { pt3dadd( -60.9922, 19.4662, -42.3019, 1.4 ) }
    dend_16 { pt3dadd( -61.9475, 19.508, -42.5596, 0.22 ) }
    dend_16 { pt3dadd( -63.4663, 19.602, -42.9544, 0.22 ) }
    dend_16 { pt3dadd( -64.2517, 19.658, -43.151, 1.03 ) }
    dend_16 { pt3dadd( -64.8862, 19.6803, -43.3246, 1.25 ) }
    dend_16 { pt3dadd( -65.5826, 19.6782, -43.5274, 1.25 ) }
    dend_16 { pt3dadd( -67.417, 19.5818, -44.1035, 0.22 ) }
    dend_16 { pt3dadd( -68.0425, 19.5031, -44.3651, 0.88 ) }
    dend_16 { pt3dadd( -68.4921, 19.4264, -44.581, 0.88 ) }
    dend_16 { pt3dadd( -70.0966, 19.0946, -45.4013, 0.22 ) }
    dend_16 { pt3dadd( -70.5237, 18.9884, -45.6293, 1.03 ) }
    dend_16 { pt3dadd( -71.4683, 18.7071, -46.1762, 1.18 ) }
    dend_16 { pt3dadd( -73.7936, 17.9513, -47.5859, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_16 { pt3dadd( -74.6465, 17.6764, -48.11, 0.22 ) }
    dend_16 { pt3dadd( -75.5013, 17.4114, -48.6319, 0.96 ) }
    dend_16 { pt3dadd( -76.0934, 17.2432, -48.9829, 1.18 ) }
    dend_16 { pt3dadd( -77.4883, 16.8892, -49.8164, 0.15 ) }
    dend_16 { pt3dadd( -78.9467, 16.579, -50.655, 0.15 ) }
    dend_16 { pt3dadd( -79.504, 16.4921, -50.9371, 0.15 ) }
    dend_16 { pt3dadd( -80.3291, 16.4028, -51.3301, 1.11 ) }
    dend_16 { pt3dadd( -81.0334, 16.3739, -51.6269, 1.33 ) }
    dend_16 { pt3dadd( -81.9007, 16.3856, -51.9622, 1.33 ) }
    dend_16 { pt3dadd( -82.262, 16.4073, -52.0866, 1.33 ) }
    dend_16 { pt3dadd( -84.6579, 16.5998, -52.8636, 0.22 ) }
    dend_16 { pt3dadd( -85.9964, 16.719, -53.2625, 0.22 ) }
    dend_16 { pt3dadd( -86.9747, 16.8151, -53.5556, 0.81 ) }
    dend_16 { pt3dadd( -87.9384, 16.9228, -53.8885, 0.96 ) }
    dend_16 { pt3dadd( -88.4873, 16.9906, -54.0895, 0.44 ) }
    dend_16 { pt3dadd( -90.3605, 17.2586, -54.8078, 0.22 ) }
    dend_16 { pt3dadd( -91.0725, 17.3826, -55.1129, 0.59 ) }
    dend_16 { pt3dadd( -91.8731, 17.5221, -55.476, 0.59 ) }
    dend_16 { pt3dadd( -93.6322, 17.8198, -56.289, 0.22 ) }
    dend_16 { pt3dadd( -95.6713, 18.1731, -57.2134, 0.22 ) }
    dend_16 { pt3dadd( -97.2521, 18.4544, -57.9585, 0.22 ) }
    dend_16 { pt3dadd( -98.3829, 18.6634, -58.5047, 0.96 ) }
    dend_16 { pt3dadd( -99.2186, 18.8133, -58.8992, 0.96 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 23/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 5.13444, -49.9118, -11.4517, 2.06 ) }
    dend_10 { pt3dadd( 5.89261, -50.2288, -11.3228, 2.06 ) }
    dend_10 { pt3dadd( 6.98062, -50.6402, -11.149, 0.81 ) }
    dend_10 { pt3dadd( 7.99397, -50.9965, -11.0129, 1.03 ) }
    dend_10 { pt3dadd( 9.36184, -51.4394, -10.8847, 0.96 ) }
    dend_10 { pt3dadd( 10.0022, -51.6247, -10.8483, 0.66 ) }
    dend_10 { pt3dadd( 11.1085, -51.9212, -10.8358, 0.66 ) }
    dend_10 { pt3dadd( 11.8647, -52.0788, -10.8578, 0.81 ) }
    dend_10 { pt3dadd( 12.3206, -52.1571, -10.9072, 0.81 ) }
    dend_10 { pt3dadd( 12.9971, -52.2741, -11.0849, 0.81 ) }
    dend_10 { pt3dadd( 13.6277, -52.4109, -11.3703, 0.44 ) }
    dend_10 { pt3dadd( 14.1061, -52.5461, -11.6607, 0.44 ) }
    dend_10 { pt3dadd( 14.4956, -52.6723, -11.9499, 0.96 ) }
    dend_10 { pt3dadd( 15.013, -52.8672, -12.3554, 1.4 ) }
    dend_10 { pt3dadd( 15.4151, -53.0488, -12.6898, 1.62 ) }
    dend_10 { pt3dadd( 15.8183, -53.2831, -13.0566, 1.62 ) }
    dend_10 { pt3dadd( 16.1884, -53.5558, -13.4293, 1.62 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 40/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 5.13444, -49.9118, -11.4517, 1.33 ) }
    dend_3 { pt3dadd( 4.06509, -51.8854, -11.5966, 1.33 ) }
    dend_3 { pt3dadd( 3.37954, -53.2706, -11.6913, 1.18 ) }
    dend_3 { pt3dadd( 2.52463, -55.1541, -11.7655, 1.03 ) }
    dend_3 { pt3dadd( 2.04197, -56.3433, -11.7901, 1.03 ) }
    dend_3 { pt3dadd( 1.76636, -57.1391, -11.8052, 1.47 ) }
    dend_3 { pt3dadd( 1.54879, -57.8802, -11.8233, 1.47 ) }
    dend_3 { pt3dadd( 1.39254, -58.793, -11.8572, 1.18 ) }
    dend_3 { pt3dadd( 1.35361, -59.7093, -11.9397, 1.03 ) }
    dend_3 { pt3dadd( 1.41606, -60.7777, -12.1289, 0.74 ) }
    dend_3 { pt3dadd( 1.5402, -61.8983, -12.4085, 0.88 ) }
    dend_3 { pt3dadd( 1.67275, -62.7555, -12.6916, 1.11 ) }
    dend_3 { pt3dadd( 1.86598, -63.7665, -13.1199, 1.4 ) }
    dend_3 { pt3dadd( 2.1408, -64.9238, -13.7247, 1.62 ) }
    dend_3 { pt3dadd( 2.47418, -66.0833, -14.459, 1.69 ) }
    dend_3 { pt3dadd( 2.67982, -66.7361, -14.914, 1.25 ) }
    dend_3 { pt3dadd( 2.98984, -67.7192, -15.6292, 0.88 ) }
    dend_3 { pt3dadd( 3.25101, -68.5981, -16.2715, 0.52 ) }
    dend_3 { pt3dadd( 3.40921, -69.1904, -16.6849, 0.66 ) }
    dend_3 { pt3dadd( 3.65747, -70.2495, -17.3968, 1.11 ) }
    dend_3 { pt3dadd( 3.83471, -71.1029, -17.9349, 1.55 ) }
    dend_3 { pt3dadd( 3.95481, -71.7956, -18.3441, 2.14 ) }
    dend_3 { pt3dadd( 4.0534, -72.5155, -18.7352, 2.14 ) }
    dend_3 { pt3dadd( 4.15834, -73.3654, -19.1513, 2.28 ) }
    dend_3 { pt3dadd( 4.28621, -74.4422, -19.6423, 2.06 ) }
    dend_3 { pt3dadd( 4.46379, -75.9288, -20.3011, 1.92 ) }
    dend_3 { pt3dadd( 4.61086, -76.932, -20.759, 1.92 ) }
    dend_3 { pt3dadd( 4.78962, -77.9205, -21.2153, 1.77 ) }
    dend_3 { pt3dadd( 4.95036, -78.6538, -21.5574, 2.21 ) }
    dend_3 { pt3dadd( 5.14655, -79.5, -21.9504, 2.5 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 70/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -41.8823, 34.8678, -23.6288, 0.59 ) }
    dend_19 { pt3dadd( -42.3856, 36.4218, -26.8584, 0.59 ) }
    dend_19 { pt3dadd( -42.5825, 36.9985, -27.9195, 0.29 ) }
    dend_19 { pt3dadd( -42.6941, 37.3016, -28.3853, 0.29 ) }
    dend_19 { pt3dadd( -42.8945, 37.8105, -29.0778, 0.52 ) }
    dend_19 { pt3dadd( -43.0608, 38.2157, -29.5882, 0.52 ) }
    dend_19 { pt3dadd( -43.3101, 38.7916, -30.2446, 0.44 ) }
    dend_19 { pt3dadd( -43.6445, 39.4837, -30.7929, 0.22 ) }
    dend_19 { pt3dadd( -44.1152, 40.4711, -31.5117, 0.22 ) }
    dend_19 { pt3dadd( -44.2765, 40.8121, -31.755, 0.74 ) }
    dend_19 { pt3dadd( -44.6202, 41.5338, -32.2676, 0.74 ) }
    dend_19 { pt3dadd( -44.9882, 42.2534, -32.7565, 0.22 ) }
    dend_19 { pt3dadd( -45.213, 42.6789, -33.0256, 0.22 ) }
    dend_19 { pt3dadd( -45.4054, 43.0551, -33.2702, 0.81 ) }
    dend_19 { pt3dadd( -45.7229, 43.6899, -33.729, 1.03 ) }
    dend_19 { pt3dadd( -45.9737, 44.2227, -34.1434, 1.4 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 86/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -41.8823, 34.8678, -23.6288, 0.22 ) }
    dend_18 { pt3dadd( -43.2062, 35.7373, -23.8192, 0.22 ) }
    dend_18 { pt3dadd( -45.0776, 37.1024, -24.2134, 0.22 ) }
    dend_18 { pt3dadd( -45.758, 37.6431, -24.4005, 0.22 ) }
    dend_18 { pt3dadd( -46.1367, 37.9688, -24.515, 0.52 ) }
    dend_18 { pt3dadd( -46.5859, 38.3736, -24.6545, 0.52 ) }
    dend_18 { pt3dadd( -47.068, 38.8214, -24.8038, 0.29 ) }
    dend_18 { pt3dadd( -48.0812, 39.9189, -25.1795, 0.74 ) }
    dend_18 { pt3dadd( -48.6664, 40.6105, -25.46, 0.88 ) }
    dend_18 { pt3dadd( -49.1892, 41.2215, -25.6879, 0.88 ) }
    dend_18 { pt3dadd( -49.73, 41.8341, -25.8879, 0.29 ) }
    dend_18 { pt3dadd( -50.2483, 42.4198, -26.0588, 1.25 ) }
    dend_18 { pt3dadd( -50.8644, 43.1171, -26.2488, 1.25 ) }
    dend_18 { pt3dadd( -52.2421, 44.6526, -26.6182, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_18 { pt3dadd( -54.1083, 46.7044, -27.0904, 0.22 ) }
    dend_18 { pt3dadd( -54.9977, 47.6707, -27.3091, 0.81 ) }
    dend_18 { pt3dadd( -55.3142, 48.0152, -27.3866, 1.18 ) }
    dend_18 { pt3dadd( -55.5976, 48.3218, -27.4576, 1.18 ) }
    dend_18 { pt3dadd( -56.1655, 48.923, -27.5764, 0.22 ) }
    dend_18 { pt3dadd( -56.6481, 49.4474, -27.675, 0.22 ) }
    dend_18 { pt3dadd( -56.9575, 49.7957, -27.7741, 0.66 ) }
    dend_18 { pt3dadd( -57.324, 50.2123, -27.927, 0.66 ) }
    dend_18 { pt3dadd( -57.7436, 50.6493, -28.1068, 0.52 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 9/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 16.1884, -53.5558, -13.4293, 0.66 ) }
    dend_12 { pt3dadd( 17.0283, -53.5079, -14.6074, 0.66 ) }
    dend_12 { pt3dadd( 17.6299, -53.4996, -15.5089, 0.52 ) }
    dend_12 { pt3dadd( 18.1516, -53.5068, -16.3896, 0.52 ) }
    dend_12 { pt3dadd( 18.9073, -53.5087, -17.7751, 0.88 ) }
    dend_12 { pt3dadd( 19.3131, -53.4933, -18.5441, 0.96 ) }
    dend_12 { pt3dadd( 19.9628, -53.443, -19.7541, 1.03 ) }
    dend_12 { pt3dadd( 20.4377, -53.3996, -20.6217, 1.11 ) }
    dend_12 { pt3dadd( 21.0376, -53.3322, -21.7449, 0.74 ) }
    dend_12 { pt3dadd( 21.2968, -53.2868, -22.2694, 0.59 ) }
    dend_12 { pt3dadd( 21.6497, -53.1951, -23.0113, 0.52 ) }
    dend_12 { pt3dadd( 21.9586, -53.0818, -23.6749, 0.74 ) }
    dend_12 { pt3dadd( 22.5547, -52.8637, -24.8869, 0.74 ) }
    dend_12 { pt3dadd( 23.1776, -52.6724, -26.0689, 0.52 ) }
    dend_12 { pt3dadd( 23.9404, -52.4919, -27.4762, 0.66 ) }
    dend_12 { pt3dadd( 24.4053, -52.4032, -28.3091, 0.81 ) }
    dend_12 { pt3dadd( 24.8942, -52.3253, -29.1807, 0.66 ) }
    dend_12 { pt3dadd( 25.5722, -52.2249, -30.3307, 0.52 ) }
    dend_12 { pt3dadd( 26.2901, -52.1273, -31.5113, 1.4 ) }
    dend_12 { pt3dadd( 26.7639, -52.0685, -32.2515, 2.06 ) }
    dend_12 { pt3dadd( 27.3333, -52.0114, -33.0503, 1.92 ) }
    dend_12 { pt3dadd( 27.9273, -51.9673, -33.8308, 1.77 ) }
    dend_12 { pt3dadd( 28.7791, -51.913, -34.9272, 1.62 ) }
    dend_12 { pt3dadd( 29.6725, -51.8373, -36.0395, 0.88 ) }
    dend_12 { pt3dadd( 30.417, -51.7724, -36.9399, 0.22 ) }
    dend_12 { pt3dadd( 31.4418, -51.7218, -38.1475, 0.22 ) }
    dend_12 { pt3dadd( 32.1009, -51.7212, -38.8866, 1.03 ) }
    dend_12 { pt3dadd( 32.5137, -51.7319, -39.2937, 1.55 ) }
    dend_12 { pt3dadd( 32.8829, -51.75, -39.5955, 1.84 ) }
    dend_12 { pt3dadd( 33.6633, -51.7964, -40.0969, 1.25 ) }
    dend_12 { pt3dadd( 35.1729, -51.9056, -41.0299, 0.22 ) }
    dend_12 { pt3dadd( 36.1061, -51.9939, -41.5953, 0.22 ) }
    dend_12 { pt3dadd( 36.9101, -52.09, -42.0921, 1.55 ) }
    dend_12 { pt3dadd( 37.7412, -52.2039, -42.6001, 2.06 ) }
    dend_12 { pt3dadd( 38.2651, -52.2877, -42.9301, 2.06 ) }
    dend_12 { pt3dadd( 39.9377, -52.6158, -44.0117, 0.52 ) }
    dend_12 { pt3dadd( 41.1788, -52.8984, -44.8554, 0.22 ) }
    dend_12 { pt3dadd( 42.0119, -53.1071, -45.4676, 1.11 ) }
    dend_12 { pt3dadd( 42.3111, -53.1847, -45.6943, 1.4 ) }
    dend_12 { pt3dadd( 42.8105, -53.3164, -46.078, 1.4 ) }
    dend_12 { pt3dadd( 43.996, -53.6098, -46.9178, 0.22 ) }
    dend_12 { pt3dadd( 45.0188, -53.8365, -47.5973, 0.22 ) }
    dend_12 { pt3dadd( 45.7027, -53.9641, -48.0835, 0.74 ) }
    dend_12 { pt3dadd( 46.3017, -54.0572, -48.5196, 0.96 ) }
    dend_12 { pt3dadd( 46.9697, -54.1414, -49.0189, 0.37 ) }
    dend_12 { pt3dadd( 48.006, -54.2079, -49.7929, 0.15 ) }
    dend_12 { pt3dadd( 49.4247, -54.2087, -50.8593, 1.47 ) }
    dend_12 { pt3dadd( 49.9534, -54.1859, -51.2657, 1.77 ) }
    dend_12 { pt3dadd( 50.3843, -54.1544, -51.6122, 1.62 ) }
    dend_12 { pt3dadd( 51.0161, -54.0853, -52.1111, 0.74 ) }
    dend_12 { pt3dadd( 52.7308, -53.852, -53.3655, 0.22 ) }
    dend_12 { pt3dadd( 53.5235, -53.73, -53.9099, 1.18 ) }
    dend_12 { pt3dadd( 54.0733, -53.6441, -54.2546, 1.69 ) }
    dend_12 { pt3dadd( 54.6573, -53.5682, -54.6093, 1.77 ) }
    dend_12 { pt3dadd( 56.2724, -53.4045, -55.5612, 0.22 ) }
    dend_12 { pt3dadd( 57.8166, -53.3062, -56.433, 0.22 ) }
    dend_12 { pt3dadd( 58.3811, -53.2926, -56.7239, 0.52 ) }
    dend_12 { pt3dadd( 58.7357, -53.2946, -56.8889, 0.52 ) }
    dend_12 { pt3dadd( 60.4702, -53.3632, -57.7328, 0.22 ) }
    dend_12 { pt3dadd( 61.2819, -53.4335, -58.174, 1.11 ) }
    dend_12 { pt3dadd( 61.7051, -53.4879, -58.4401, 1.62 ) }
    dend_12 { pt3dadd( 62.1053, -53.5437, -58.7161, 1.84 ) }
    dend_12 { pt3dadd( 62.4787, -53.5946, -58.9859, 1.55 ) }
    dend_12 { pt3dadd( 64.5188, -53.8451, -60.5565, 0.15 ) }
    dend_12 { pt3dadd( 66.5216, -54.0774, -62.131, 0.15 ) }
    dend_12 { pt3dadd( 67.3286, -54.1712, -62.7818, 1.03 ) }
    dend_12 { pt3dadd( 67.758, -54.2136, -63.1347, 1.33 ) }
    dend_12 { pt3dadd( 68.2988, -54.2443, -63.5566, 1.33 ) }
    dend_12 { pt3dadd( 69.7088, -54.2747, -64.5587, 0.22 ) }
    dend_12 { pt3dadd( 70.7546, -54.2597, -65.2081, 1.18 ) }
    dend_12 { pt3dadd( 71.307, -54.2425, -65.5392, 1.77 ) }
    dend_12 { pt3dadd( 72.0577, -54.2257, -65.9803, 1.77 ) }
    dend_12 { pt3dadd( 74.3639, -54.2164, -67.3158, 0.22 ) }
    dend_12 { pt3dadd( 75.0844, -54.2392, -67.7387, 0.74 ) }
    dend_12 { pt3dadd( 75.4454, -54.2639, -67.9661, 0.74 ) }
    dend_12 { pt3dadd( 77.8515, -54.5263, -69.6094, 0.22 ) }
    dend_12 { pt3dadd( 78.6649, -54.6523, -70.1908, 0.81 ) }
    dend_12 { pt3dadd( 79.1948, -54.7759, -70.5941, 1.03 ) }
    dend_12 { pt3dadd( 80.3748, -55.1876, -71.6211, 0.22 ) }
    dend_12 { pt3dadd( 81.3409, -55.5738, -72.5364, 0.22 ) }
    dend_12 { pt3dadd( 81.8225, -55.783, -73.0148, 1.18 ) }
    dend_12 { pt3dadd( 82.1875, -55.9454, -73.4082, 1.4 ) }
    dend_12 { pt3dadd( 82.4521, -56.0526, -73.7086, 1.4 ) }
    dend_12 { pt3dadd( 84.0362, -56.6223, -75.5334, 0.22 ) }
    dend_12 { pt3dadd( 84.7363, -56.854, -76.3646, 0.81 ) }
    dend_12 { pt3dadd( 85.1623, -56.986, -76.8977, 0.81 ) }
    dend_12 { pt3dadd( 86.4207, -57.334, -78.5821, 0.22 ) }
    dend_12 { pt3dadd( 87.1744, -57.5183, -79.6704, 0.96 ) }
    dend_12 { pt3dadd( 87.6558, -57.5946, -80.4067, 1.25 ) }
    dend_12 { pt3dadd( 88.649, -57.6327, -82.1098, 0.22 ) }
    dend_12 { pt3dadd( 89.3031, -57.5941, -83.3785, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_12 { pt3dadd( 89.5788, -57.5472, -83.977, 0.66 ) }
    dend_12 { pt3dadd( 89.8702, -57.4517, -84.686, 0.66 ) }
    dend_12 { pt3dadd( 90.6624, -57.1223, -86.5052, 0.29 ) }
    dend_12 { pt3dadd( 91.3034, -56.8232, -87.9168, 0.74 ) }
    dend_12 { pt3dadd( 91.7637, -56.5956, -88.8523, 1.33 ) }
    dend_12 { pt3dadd( 92.184, -56.415, -89.6151, 1.33 ) }
    dend_12 { pt3dadd( 93.6665, -55.9457, -92.059, 0.22 ) }
    dend_12 { pt3dadd( 94.7173, -55.8948, -93.3245, 0.22 ) }
    dend_12 { pt3dadd( 95.3564, -55.9402, -93.954, 0.74 ) }
    dend_12 { pt3dadd( 95.7393, -55.9802, -94.2915, 0.74 ) }
    dend_12 { pt3dadd( 96.4851, -56.0598, -94.9506, 0.59 ) }
    dend_12 { pt3dadd( 97.8715, -56.2389, -96.1286, 0.15 ) }
    dend_12 { pt3dadd( 102.514, -56.9785, -99.8617, 0.15 ) }
    dend_12 { pt3dadd( 103.944, -57.2335, -101.035, 0.66 ) }
    dend_12 { pt3dadd( 104.604, -57.355, -101.577, 0.96 ) }
    dend_12 { pt3dadd( 106.27, -57.6613, -102.974, 0.88 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 16/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 16.1884, -53.5558, -13.4293, 1.03 ) }
    dend_11 { pt3dadd( 16.8118, -54.4986, -13.5563, 1.03 ) }
    dend_11 { pt3dadd( 17.3203, -55.2694, -13.723, 0.74 ) }
    dend_11 { pt3dadd( 17.9125, -56.1431, -14.01, 0.96 ) }
    dend_11 { pt3dadd( 18.3889, -56.8321, -14.3332, 0.66 ) }
    dend_11 { pt3dadd( 18.7445, -57.3451, -14.6489, 0.52 ) }
    dend_11 { pt3dadd( 19.4186, -58.3617, -15.4282, 0.52 ) }
    dend_11 { pt3dadd( 19.6657, -58.7443, -15.7884, 0.52 ) }
    dend_11 { pt3dadd( 20.122, -59.505, -16.5959, 0.96 ) }
    dend_11 { pt3dadd( 20.5054, -60.2101, -17.4259, 1.03 ) }
    dend_11 { pt3dadd( 20.8296, -60.8385, -18.2235, 0.81 ) }
    dend_11 { pt3dadd( 21.2783, -61.7142, -19.3487, 0.59 ) }
    dend_11 { pt3dadd( 21.6041, -62.326, -20.1179, 0.88 ) }
    dend_11 { pt3dadd( 21.8156, -62.729, -20.5947, 0.88 ) }
    dend_11 { pt3dadd( 22.1632, -63.4117, -21.3375, 0.52 ) }
    dend_11 { pt3dadd( 22.3777, -63.8262, -21.7549, 0.52 ) }
    dend_11 { pt3dadd( 22.7484, -64.5184, -22.4044, 0.96 ) }
    dend_11 { pt3dadd( 22.8801, -64.7859, -22.6399, 1.25 ) }
    dend_11 { pt3dadd( 23.0692, -65.2175, -23.0092, 1.25 ) }
    dend_11 { pt3dadd( 23.503, -66.2476, -23.8279, 0.59 ) }
    dend_11 { pt3dadd( 23.8281, -67.0279, -24.4004, 0.44 ) }
    dend_11 { pt3dadd( 24.0777, -67.5859, -24.7879, 0.29 ) }
    dend_11 { pt3dadd( 24.568, -68.5526, -25.4544, 0.29 ) }
    dend_11 { pt3dadd( 24.9239, -69.1185, -25.8549, 0.29 ) }
    dend_11 { pt3dadd( 25.3794, -69.6737, -26.2961, 0.44 ) }
    dend_11 { pt3dadd( 25.6883, -69.9816, -26.5774, 0.44 ) }
    dend_11 { pt3dadd( 26.2793, -70.4764, -27.1271, 0.59 ) }
    dend_11 { pt3dadd( 26.7905, -70.8365, -27.6134, 0.59 ) }
    dend_11 { pt3dadd( 27.6005, -71.3044, -28.2731, 1.25 ) }
    dend_11 { pt3dadd( 28.5994, -71.8598, -29.0234, 2.58 ) }
    dend_11 { pt3dadd( 29.3312, -72.2839, -29.5169, 3.32 ) }
    dend_11 { pt3dadd( 29.9894, -72.6742, -29.8909, 3.46 ) }
    dend_11 { pt3dadd( 30.5015, -72.9908, -30.1304, 3.09 ) }
    dend_11 { pt3dadd( 32.2433, -74.107, -30.7486, 0.29 ) }
    dend_11 { pt3dadd( 32.8288, -74.5017, -30.8839, 0.29 ) }
    dend_11 { pt3dadd( 33.8263, -75.2417, -31.0088, 1.18 ) }
    dend_11 { pt3dadd( 34.5344, -75.8151, -31.0527, 1.69 ) }
    dend_11 { pt3dadd( 34.8951, -76.1421, -31.0716, 1.69 ) }
    dend_11 { pt3dadd( 35.3242, -76.5742, -31.1092, 1.62 ) }
    dend_11 { pt3dadd( 36.0127, -77.3501, -31.2268, 0.96 ) }
    dend_11 { pt3dadd( 36.961, -78.4269, -31.4403, 0.22 ) }
    dend_11 { pt3dadd( 37.5935, -79.1423, -31.6299, 0.22 ) }
    dend_11 { pt3dadd( 38.2003, -79.8274, -31.8566, 1.25 ) }
    dend_11 { pt3dadd( 38.6184, -80.2613, -32.0383, 1.77 ) }
    dend_11 { pt3dadd( 38.972, -80.605, -32.2126, 1.92 ) }
    dend_11 { pt3dadd( 39.4141, -80.9879, -32.4526, 1.69 ) }
    dend_11 { pt3dadd( 39.7613, -81.2592, -32.6641, 1.25 ) }
    dend_11 { pt3dadd( 40.2958, -81.6798, -33.0083, 0.88 ) }
    dend_11 { pt3dadd( 41.0835, -82.3525, -33.5094, 0.22 ) }
    dend_11 { pt3dadd( 41.4717, -82.744, -33.7539, 0.74 ) }
    dend_11 { pt3dadd( 41.7962, -83.1531, -33.9546, 0.96 ) }
    dend_11 { pt3dadd( 42.2199, -83.7861, -34.2275, 1.11 ) }
    dend_11 { pt3dadd( 42.4937, -84.2579, -34.4066, 1.11 ) }
    dend_11 { pt3dadd( 42.8751, -84.999, -34.6539, 0.81 ) }
    dend_11 { pt3dadd( 43.2201, -85.7759, -34.8704, 0.52 ) }
    dend_11 { pt3dadd( 43.6219, -86.7408, -35.122, 0.22 ) }
    dend_11 { pt3dadd( 43.8689, -87.3653, -35.2724, 0.22 ) }
    dend_11 { pt3dadd( 44.1322, -88.0241, -35.4206, 0.81 ) }
    dend_11 { pt3dadd( 44.3292, -88.5094, -35.5616, 1.18 ) }
    dend_11 { pt3dadd( 44.5066, -88.9192, -35.7149, 1.4 ) }
    dend_11 { pt3dadd( 44.6752, -89.2623, -35.8682, 1.4 ) }
    dend_11 { pt3dadd( 44.886, -89.6562, -36.0684, 1.11 ) }
    dend_11 { pt3dadd( 45.1746, -90.1777, -36.3461, 0.81 ) }
    dend_11 { pt3dadd( 45.8924, -91.3619, -37.0286, 0.22 ) }
    dend_11 { pt3dadd( 46.652, -92.4675, -37.687, 0.22 ) }
    dend_11 { pt3dadd( 47.0436, -92.9932, -38.0006, 1.25 ) }
    dend_11 { pt3dadd( 47.5384, -93.6111, -38.3576, 1.77 ) }
    dend_11 { pt3dadd( 47.7643, -93.8782, -38.5059, 1.99 ) }
    dend_11 { pt3dadd( 48.128, -94.294, -38.7259, 1.69 ) }
    dend_11 { pt3dadd( 49.4448, -95.7367, -39.4635, 0.22 ) }
    dend_11 { pt3dadd( 50.6503, -97.0073, -39.9935, 0.22 ) }
    dend_11 { pt3dadd( 51.4333, -97.79, -40.2604, 1.25 ) }
    dend_11 { pt3dadd( 51.9056, -98.2405, -40.3825, 1.69 ) }
    dend_11 { pt3dadd( 52.4109, -98.6955, -40.4859, 1.92 ) }
    dend_11 { pt3dadd( 52.9115, -99.1112, -40.5662, 1.99 ) }
    dend_11 { pt3dadd( 54.9126, -100.628, -40.7922, 0.29 ) }
    dend_11 { pt3dadd( 55.9661, -101.37, -40.8822, 0.37 ) }
    dend_11 { pt3dadd( 56.4742, -101.725, -40.9333, 0.37 ) }
    dend_11 { pt3dadd( 57.4257, -102.373, -41.0471, 0.29 ) }
    dend_11 { pt3dadd( 58.4461, -103.054, -41.1969, 0.29 ) }
    dend_11 { pt3dadd( 58.9475, -103.39, -41.2904, 0.44 ) }
    dend_11 { pt3dadd( 59.0329, -103.448, -41.3147, 0.44 ) }
    dend_11 { pt3dadd( 59.9262, -104.057, -41.5286, 0.22 ) }
    dend_11 { pt3dadd( 60.7484, -104.599, -41.6985, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_11 { pt3dadd( 61.3598, -104.992, -41.8102, 2.28 ) }
    dend_11 { pt3dadd( 62.015, -105.395, -41.9069, 2.87 ) }
    dend_11 { pt3dadd( 62.4725, -105.666, -41.9656, 3.09 ) }
    dend_11 { pt3dadd( 63.175, -106.081, -42.0537, 2.5 ) }
    dend_11 { pt3dadd( 64.8329, -107.051, -42.1986, 0.59 ) }
    dend_11 { pt3dadd( 65.6194, -107.516, -42.2414, 0.52 ) }
    dend_11 { pt3dadd( 66.2938, -107.914, -42.268, 0.44 ) }
    dend_11 { pt3dadd( 66.8928, -108.265, -42.2801, 0.44 ) }
    dend_11 { pt3dadd( 67.7702, -108.766, -42.2852, 0.37 ) }
    dend_11 { pt3dadd( 68.8696, -109.385, -42.2666, 0.22 ) }
    dend_11 { pt3dadd( 69.7634, -109.879, -42.2152, 0.22 ) }
    dend_11 { pt3dadd( 70.7689, -110.406, -42.1817, 0.96 ) }
    dend_11 { pt3dadd( 71.3171, -110.67, -42.1852, 1.25 ) }
    dend_11 { pt3dadd( 71.99, -110.964, -42.2117, 1.47 ) }
    dend_11 { pt3dadd( 72.6626, -111.233, -42.2706, 1.47 ) }
    dend_11 { pt3dadd( 73.6209, -111.589, -42.4266, 0.66 ) }
    dend_11 { pt3dadd( 74.6967, -111.99, -42.6731, 0.22 ) }
    dend_11 { pt3dadd( 75.8703, -112.431, -43.0118, 0.22 ) }
    dend_11 { pt3dadd( 76.4984, -112.669, -43.2256, 0.66 ) }
    dend_11 { pt3dadd( 77.0245, -112.867, -43.4219, 0.88 ) }
    dend_11 { pt3dadd( 77.507, -113.048, -43.6246, 0.88 ) }
    dend_11 { pt3dadd( 78.9263, -113.589, -44.3377, 0.22 ) }
    dend_11 { pt3dadd( 79.8535, -113.952, -44.8636, 0.66 ) }
    dend_11 { pt3dadd( 80.3003, -114.133, -45.1429, 0.81 ) }
    dend_11 { pt3dadd( 80.681, -114.297, -45.3866, 0.44 ) }
    dend_11 { pt3dadd( 81.6113, -114.721, -45.9974, 0.22 ) }
    dend_11 { pt3dadd( 82.5002, -115.133, -46.6011, 0.44 ) }
    dend_11 { pt3dadd( 83.1064, -115.399, -47.0212, 0.66 ) }
    dend_11 { pt3dadd( 83.6028, -115.618, -47.3737, 1.47 ) }
    dend_11 { pt3dadd( 84.1067, -115.817, -47.7629, 2.28 ) }
    dend_11 { pt3dadd( 84.532, -115.96, -48.1022, 2.65 ) }
    dend_11 { pt3dadd( 84.8951, -116.057, -48.3881, 2.65 ) }
    dend_11 { pt3dadd( 85.7004, -116.231, -48.9982, 1.69 ) }
    dend_11 { pt3dadd( 86.543, -116.376, -49.6528, 0.74 ) }
    dend_11 { pt3dadd( 87.6826, -116.524, -50.5314, 0.22 ) }
    dend_11 { pt3dadd( 88.1882, -116.576, -50.9127, 0.37 ) }
    dend_11 { pt3dadd( 88.8832, -116.654, -51.4119, 0.37 ) }
    dend_11 { pt3dadd( 89.535, -116.74, -51.8631, 1.03 ) }
    dend_11 { pt3dadd( 90.1854, -116.849, -52.2755, 1.84 ) }
    dend_11 { pt3dadd( 90.734, -116.955, -52.577, 2.14 ) }
    dend_11 { pt3dadd( 91.0867, -117.04, -52.7489, 2.28 ) }
    dend_11 { pt3dadd( 91.8514, -117.239, -53.1125, 1.55 ) }
    dend_11 { pt3dadd( 92.625, -117.476, -53.4693, 0.66 ) }
    dend_11 { pt3dadd( 93.5974, -117.809, -53.9053, 0.29 ) }
    dend_11 { pt3dadd( 94.3501, -118.091, -54.2314, 0.81 ) }
    dend_11 { pt3dadd( 94.9747, -118.338, -54.5002, 0.96 ) }
    dend_11 { pt3dadd( 96.0169, -118.766, -54.9351, 0.22 ) }
    dend_11 { pt3dadd( 97.0206, -119.184, -55.3357, 0.22 ) }
    dend_11 { pt3dadd( 97.8074, -119.498, -55.6362, 1.33 ) }
    dend_11 { pt3dadd( 98.2083, -119.653, -55.7876, 1.84 ) }
    dend_11 { pt3dadd( 98.6301, -119.81, -55.9447, 2.14 ) }
    dend_11 { pt3dadd( 99.0241, -119.95, -56.0901, 2.14 ) }
    dend_11 { pt3dadd( 100.166, -120.335, -56.5083, 0.59 ) }
    dend_11 { pt3dadd( 101.724, -120.827, -57.0809, 0.22 ) }
    dend_11 { pt3dadd( 102.899, -121.191, -57.521, 1.11 ) }
    dend_11 { pt3dadd( 103.285, -121.314, -57.6632, 1.77 ) }
    dend_11 { pt3dadd( 103.645, -121.433, -57.7914, 2.06 ) }
    dend_11 { pt3dadd( 104.09, -121.593, -57.9394, 2.06 ) }
    dend_11 { pt3dadd( 104.828, -121.893, -58.1502, 1.03 ) }
    dend_11 { pt3dadd( 106.434, -122.631, -58.5146, 0.22 ) }
    dend_11 { pt3dadd( 107.1, -122.955, -58.6393, 0.81 ) }
    dend_11 { pt3dadd( 107.576, -123.204, -58.7197, 0.81 ) }
    dend_11 { pt3dadd( 108.381, -123.661, -58.8201, 0.29 ) }
    dend_11 { pt3dadd( 109.12, -124.111, -58.8699, 0.22 ) }
    dend_11 { pt3dadd( 110.022, -124.693, -58.8878, 1.18 ) }
    dend_11 { pt3dadd( 110.721, -125.18, -58.8776, 1.77 ) }
    dend_11 { pt3dadd( 111.261, -125.553, -58.8757, 1.92 ) }
    dend_11 { pt3dadd( 113.2, -126.845, -58.9, 0.22 ) }
    dend_11 { pt3dadd( 114.369, -127.553, -58.9208, 1.11 ) }
    dend_11 { pt3dadd( 114.799, -127.787, -58.9316, 1.47 ) }
    dend_11 { pt3dadd( 115.184, -127.973, -58.9401, 1.77 ) }
    dend_11 { pt3dadd( 115.917, -128.274, -58.9595, 1.77 ) }
    dend_11 { pt3dadd( 116.899, -128.576, -59.0194, 0.74 ) }
    dend_11 { pt3dadd( 117.861, -128.765, -59.1391, 0.29 ) }
    dend_11 { pt3dadd( 118.487, -128.85, -59.242, 0.66 ) }
    dend_11 { pt3dadd( 119.209, -128.928, -59.3716, 0.66 ) }
    dend_11 { pt3dadd( 119.837, -128.982, -59.4896, 0.37 ) }
    dend_11 { pt3dadd( 121.06, -129.085, -59.7922, 0.22 ) }
    dend_11 { pt3dadd( 121.666, -129.138, -59.992, 0.81 ) }
    dend_11 { pt3dadd( 122.026, -129.174, -60.1317, 1.03 ) }
    dend_11 { pt3dadd( 122.535, -129.226, -60.3648, 0.81 ) }
    dend_11 { pt3dadd( 123.24, -129.294, -60.731, 0.52 ) }
    dend_11 { pt3dadd( 124.339, -129.371, -61.3421, 0.15 ) }
    dend_11 { pt3dadd( 125.359, -129.419, -61.9392, 1.18 ) }
    dend_11 { pt3dadd( 126.034, -129.434, -62.3392, 2.06 ) }
    dend_11 { pt3dadd( 126.699, -129.436, -62.732, 2.43 ) }
    dend_11 { pt3dadd( 127.182, -129.433, -63.0269, 2.14 ) }
    dend_11 { pt3dadd( 128.609, -129.418, -63.9328, 0.22 ) }
    dend_11 { pt3dadd( 129.498, -129.428, -64.5026, 0.66 ) }
    dend_11 { pt3dadd( 130.033, -129.456, -64.8617, 0.81 ) }
    dend_11 { pt3dadd( 130.494, -129.502, -65.1758, 0.88 ) }
    dend_11 { pt3dadd( 131.673, -129.689, -65.9742, 0.22 ) }
    dend_11 { pt3dadd( 132.396, -129.847, -66.4729, 0.22 ) }
    dend_11 { pt3dadd( 133.524, -130.156, -67.2521, 1.33 ) }
    dend_11 { pt3dadd( 134.142, -130.346, -67.6797, 2.5 ) }
    dend_11 { pt3dadd( 134.725, -130.534, -68.0606, 2.36 ) }
    dend_11 { pt3dadd( 135.508, -130.76, -68.4658, 1.55 ) }
    dend_11 { pt3dadd( 136.801, -131.088, -68.9632, 0.74 ) }
    dend_11 { pt3dadd( 137.532, -131.248, -69.1589, 0.66 ) }
    dend_11 { pt3dadd( 138.202, -131.358, -69.269, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_11 { pt3dadd( 139.332, -131.496, -69.3547, 0.22 ) }
    dend_11 { pt3dadd( 141.388, -131.688, -69.3411, 0.22 ) }
    dend_11 { pt3dadd( 142.034, -131.734, -69.297, 0.22 ) }
    dend_11 { pt3dadd( 142.839, -131.779, -69.1917, 0.88 ) }
    dend_11 { pt3dadd( 143.551, -131.81, -69.0537, 1.11 ) }
    dend_11 { pt3dadd( 144.307, -131.825, -68.891, 1.11 ) }
    dend_11 { pt3dadd( 144.741, -131.823, -68.792, 0.74 ) }
    dend_11 { pt3dadd( 145.901, -131.816, -68.5464, 0.29 ) }
    dend_11 { pt3dadd( 146.806, -131.81, -68.372, 0.52 ) }
    dend_11 { pt3dadd( 147.838, -131.775, -68.1926, 0.74 ) }
    dend_11 { pt3dadd( 149.476, -131.697, -67.9242, 0.29 ) }
    dend_11 { pt3dadd( 150.579, -131.617, -67.7887, 1.18 ) }
    dend_11 { pt3dadd( 151.225, -131.544, -67.748, 1.62 ) }
    dend_11 { pt3dadd( 152.078, -131.417, -67.7511, 2.14 ) }
    dend_11 { pt3dadd( 153.06, -131.244, -67.8499, 2.14 ) }
    dend_11 { pt3dadd( 153.396, -131.179, -67.9201, 2.14 ) }
    dend_11 { pt3dadd( 154.751, -130.897, -68.3008, 0.22 ) }
    dend_11 { pt3dadd( 156.105, -130.609, -68.765, 0.22 ) }
    dend_11 { pt3dadd( 156.78, -130.455, -69.0214, 0.66 ) }
    dend_11 { pt3dadd( 157.323, -130.34, -69.2518, 0.81 ) }
    dend_11 { pt3dadd( 158.631, -130.118, -69.8641, 0.22 ) }
    dend_11 { pt3dadd( 159.209, -130.058, -70.1442, 0.66 ) }
    dend_11 { pt3dadd( 159.638, -130.062, -70.3611, 0.88 ) }
    dend_11 { pt3dadd( 161.067, -130.269, -71.0957, 0.22 ) }
    dend_11 { pt3dadd( 161.671, -130.421, -71.4106, 0.37 ) }
    dend_11 { pt3dadd( 162.052, -130.562, -71.6163, 0.37 ) }
    dend_11 { pt3dadd( 163.327, -131.209, -72.2878, 0.22 ) }
    dend_11 { pt3dadd( 164.301, -131.872, -72.7682, 0.22 ) }
    dend_11 { pt3dadd( 165.274, -132.735, -73.1903, 1.77 ) }
    dend_11 { pt3dadd( 165.635, -133.15, -73.3346, 2.14 ) }
    dend_11 { pt3dadd( 165.994, -133.639, -73.4661, 2.28 ) }
    dend_11 { pt3dadd( 166.453, -134.425, -73.6207, 1.55 ) }
    dend_11 { pt3dadd( 167.167, -136.047, -73.8383, 0.22 ) }
    dend_11 { pt3dadd( 167.513, -137.058, -73.9515, 0.44 ) }
    dend_11 { pt3dadd( 167.727, -137.838, -74.0416, 0.81 ) }
    dend_11 { pt3dadd( 167.876, -138.432, -74.1327, 0.81 ) }
    dend_11 { pt3dadd( 168.109, -139.516, -74.432, 0.22 ) }
    dend_11 { pt3dadd( 168.24, -140.113, -74.6995, 0.22 ) }
    dend_11 { pt3dadd( 168.382, -140.652, -75.0163, 0.96 ) }
    dend_11 { pt3dadd( 168.504, -141.027, -75.2617, 1.18 ) }
    dend_11 { pt3dadd( 168.717, -141.598, -75.6657, 1.18 ) }
    dend_11 { pt3dadd( 169.326, -143.03, -76.723, 0.22 ) }
    dend_11 { pt3dadd( 170.094, -144.688, -77.9781, 0.22 ) }
    dend_11 { pt3dadd( 170.378, -145.265, -78.4144, 0.74 ) }
    dend_11 { pt3dadd( 170.658, -145.741, -78.7754, 0.81 ) }
    dend_11 { pt3dadd( 171.164, -146.489, -79.3321, 0.52 ) }
    dend_11 { pt3dadd( 171.877, -147.398, -79.9827, 1.47 ) }
    dend_11 { pt3dadd( 172.421, -147.989, -80.3675, 2.06 ) }
    dend_11 { pt3dadd( 172.905, -148.47, -80.6574, 1.84 ) }
    dend_11 { pt3dadd( 174.467, -149.935, -81.4507, 0.22 ) }
    dend_11 { pt3dadd( 174.92, -150.321, -81.6262, 0.44 ) }
    dend_11 { pt3dadd( 175.185, -150.527, -81.6937, 0.44 ) }
    dend_11 { pt3dadd( 175.938, -151.049, -81.8146, 0.22 ) }
    dend_11 { pt3dadd( 176.53, -151.445, -81.861, 0.66 ) }
    dend_11 { pt3dadd( 176.852, -151.65, -81.8689, 1.18 ) }
    dend_11 { pt3dadd( 177.489, -152.023, -81.8655, 1.18 ) }
    dend_11 { pt3dadd( 178.549, -152.587, -81.8596, 0.29 ) }
    dend_11 { pt3dadd( 179.743, -153.142, -81.8366, 0.29 ) }
    dend_11 { pt3dadd( 180.433, -153.429, -81.8236, 0.29 ) }
    dend_11 { pt3dadd( 181.575, -153.879, -81.7745, 0.22 ) }
    dend_11 { pt3dadd( 182.359, -154.202, -81.6971, 0.22 ) }
    dend_11 { pt3dadd( 183.827, -154.832, -81.5044, 1.11 ) }
    dend_11 { pt3dadd( 184.752, -155.233, -81.3437, 2.21 ) }
    dend_11 { pt3dadd( 185.375, -155.516, -81.2186, 2.43 ) }
    dend_11 { pt3dadd( 186.267, -155.912, -81.0234, 2.14 ) }
    dend_11 { pt3dadd( 188.243, -156.789, -80.5816, 0.15 ) }
    dend_11 { pt3dadd( 188.688, -156.975, -80.47, 0.15 ) }
    dend_11 { pt3dadd( 189.287, -157.206, -80.3108, 0.52 ) }
    dend_11 { pt3dadd( 189.455, -157.267, -80.2592, 0.66 ) }
    dend_11 { pt3dadd( 190.64, -157.646, -79.8294, 0.22 ) }
    dend_11 { pt3dadd( 191.436, -157.866, -79.5286, 0.22 ) }
    dend_11 { pt3dadd( 192.894, -158.252, -78.9437, 0.96 ) }
    dend_11 { pt3dadd( 193.308, -158.381, -78.7627, 0.96 ) }
    dend_11 { pt3dadd( 194.8, -158.897, -78.0822, 0.22 ) }
    dend_11 { pt3dadd( 195.841, -159.298, -77.6167, 0.59 ) }
    dend_11 { pt3dadd( 196.179, -159.455, -77.4617, 0.59 ) }
    dend_11 { pt3dadd( 196.728, -159.746, -77.2184, 0.37 ) }
    dend_11 { pt3dadd( 197.412, -160.162, -76.9301, 0.66 ) }
    dend_11 { pt3dadd( 197.783, -160.418, -76.7637, 0.66 ) }
    dend_11 { pt3dadd( 198.424, -160.969, -76.4617, 0.29 ) }
    dend_11 { pt3dadd( 199.204, -161.794, -76.0766, 0.44 ) }
    dend_11 { pt3dadd( 199.734, -162.415, -75.7965, 0.29 ) }
    dend_11 { pt3dadd( 200.384, -163.203, -75.437, 0.66 ) }
    dend_11 { pt3dadd( 200.667, -163.547, -75.2784, 0.66 ) }
    dend_11 { pt3dadd( 201.279, -164.353, -74.8966, 0.22 ) }
    dend_11 { pt3dadd( 201.581, -164.813, -74.6797, 0.22 ) }
    dend_11 { pt3dadd( 201.954, -165.44, -74.3701, 0.44 ) }
    dend_11 { pt3dadd( 202.239, -165.921, -74.1411, 0.44 ) }
    dend_11 { pt3dadd( 202.721, -166.737, -73.7996, 0.66 ) }
    dend_11 { pt3dadd( 203.267, -167.688, -73.4265, 1.4 ) }
    dend_11 { pt3dadd( 203.798, -168.677, -73.062, 2.06 ) }
    dend_11 { pt3dadd( 204.393, -169.933, -72.6773, 1.92 ) }
    dend_11 { pt3dadd( 204.895, -171.164, -72.4085, 0.29 ) }
    dend_11 { pt3dadd( 205.28, -172.201, -72.2733, 0.59 ) }
    dend_11 { pt3dadd( 205.537, -172.931, -72.2456, 0.96 ) }
    dend_11 { pt3dadd( 205.782, -173.571, -72.2914, 0.96 ) }
    dend_11 { pt3dadd( 206.229, -174.64, -72.4737, 0.29 ) }
    dend_11 { pt3dadd( 206.55, -175.38, -72.6867, 0.74 ) }
    dend_11 { pt3dadd( 206.831, -175.988, -72.8963, 0.74 ) }
    dend_11 { pt3dadd( 207.295, -176.879, -73.2516, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_11 { pt3dadd( 207.635, -177.476, -73.5119, 0.52 ) }
    dend_11 { pt3dadd( 207.79, -177.727, -73.6256, 0.52 ) }
    dend_11 { pt3dadd( 208.913, -179.414, -74.4098, 0.22 ) }
    dend_11 { pt3dadd( 209.378, -180.036, -74.7052, 0.66 ) }
    dend_11 { pt3dadd( 209.687, -180.407, -74.8902, 0.88 ) }
    dend_11 { pt3dadd( 209.995, -180.74, -75.0635, 0.88 ) }
    dend_11 { pt3dadd( 210.868, -181.547, -75.5135, 0.22 ) }
    dend_11 { pt3dadd( 212.105, -182.504, -76.1432, 0.22 ) }
    dend_11 { pt3dadd( 213.161, -183.126, -76.6076, 0.96 ) }
    dend_11 { pt3dadd( 213.927, -183.507, -76.9113, 1.4 ) }
    dend_11 { pt3dadd( 214.352, -183.689, -77.0664, 1.55 ) }
    dend_11 { pt3dadd( 215.633, -184.155, -77.4889, 0.22 ) }
    dend_11 { pt3dadd( 216.626, -184.461, -77.7757, 0.22 ) }
    dend_11 { pt3dadd( 217.745, -184.837, -78.0479, 0.52 ) }
    dend_11 { pt3dadd( 218.054, -184.994, -78.1152, 0.52 ) }
    dend_11 { pt3dadd( 218.684, -185.464, -78.2389, 0.22 ) }
    dend_11 { pt3dadd( 219.116, -185.9, -78.3206, 0.44 ) }
    dend_11 { pt3dadd( 219.553, -186.458, -78.3992, 0.44 ) }
    dend_11 { pt3dadd( 220.201, -187.433, -78.5298, 0.22 ) }
    dend_11 { pt3dadd( 220.915, -188.67, -78.7518, 0.22 ) }
    dend_11 { pt3dadd( 221.193, -189.198, -78.8358, 0.44 ) }
    dend_11 { pt3dadd( 221.402, -189.651, -78.8966, 0.44 ) }
    dend_11 { pt3dadd( 230.139, -194.332, -82.7026, 0.44 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 23/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 5.14655, -79.5, -21.9504, 1.03 ) }
    dend_5 { pt3dadd( 4.56595, -80.7733, -23.202, 1.03 ) }
    dend_5 { pt3dadd( 4.18459, -81.9102, -24.2922, 1.55 ) }
    dend_5 { pt3dadd( 4.00844, -82.6148, -24.9647, 1.4 ) }
    dend_5 { pt3dadd( 3.88507, -83.3157, -25.5921, 1.11 ) }
    dend_5 { pt3dadd( 3.73998, -84.449, -26.5337, 0.81 ) }
    dend_5 { pt3dadd( 3.66726, -85.1759, -27.1005, 0.81 ) }
    dend_5 { pt3dadd( 3.64296, -86.0362, -27.6928, 0.88 ) }
    dend_5 { pt3dadd( 3.67581, -86.9147, -28.2167, 0.96 ) }
    dend_5 { pt3dadd( 3.73671, -87.8566, -28.7384, 1.62 ) }
    dend_5 { pt3dadd( 3.75992, -88.6321, -29.1391, 2.14 ) }
    dend_5 { pt3dadd( 3.74125, -89.4323, -29.5089, 2.21 ) }
    dend_5 { pt3dadd( 3.68571, -90.0646, -29.7803, 2.28 ) }
    dend_5 { pt3dadd( 3.61994, -90.5645, -29.9788, 2.14 ) }
    dend_5 { pt3dadd( 3.43525, -91.6053, -30.3799, 1.77 ) }
    dend_5 { pt3dadd( 3.13945, -92.9366, -30.8951, 0.59 ) }
    dend_5 { pt3dadd( 2.94077, -93.8002, -31.2058, 0.59 ) }
    dend_5 { pt3dadd( 2.76786, -94.558, -31.4484, 0.37 ) }
    dend_5 { pt3dadd( 2.62077, -95.2235, -31.6324, 0.29 ) }
    dend_5 { pt3dadd( 2.50028, -95.8029, -31.7681, 0.29 ) }
    dend_5 { pt3dadd( 2.35881, -96.5672, -31.8979, 0.37 ) }
    dend_5 { pt3dadd( 2.19863, -97.6242, -32.04, 0.44 ) }
    dend_5 { pt3dadd( 2.10028, -98.2892, -32.1185, 0.96 ) }
    dend_5 { pt3dadd( 2.01543, -98.9503, -32.1887, 1.55 ) }
    dend_5 { pt3dadd( 1.97575, -99.3848, -32.2343, 1.84 ) }
    dend_5 { pt3dadd( 1.9405, -99.9915, -32.3127, 1.84 ) }
    dend_5 { pt3dadd( 1.92269, -100.491, -32.4073, 2.06 ) }
    dend_5 { pt3dadd( 1.92047, -100.969, -32.5159, 2.36 ) }
    dend_5 { pt3dadd( 1.95754, -101.745, -32.7347, 2.36 ) }
    dend_5 { pt3dadd( 2.00937, -102.383, -32.9328, 2.21 ) }
    dend_5 { pt3dadd( 2.08538, -103.156, -33.1928, 2.14 ) }
    dend_5 { pt3dadd( 2.22635, -104.363, -33.6197, 1.03 ) }
    dend_5 { pt3dadd( 2.33728, -105.239, -33.9443, 0.81 ) }
    dend_5 { pt3dadd( 2.51598, -106.518, -34.4336, 1.03 ) }
    dend_5 { pt3dadd( 2.59666, -107.09, -34.6574, 1.69 ) }
    dend_5 { pt3dadd( 2.64549, -107.586, -34.8428, 2.14 ) }
    dend_5 { pt3dadd( 2.64745, -107.886, -34.9556, 2.43 ) }
    dend_5 { pt3dadd( 2.58912, -108.376, -35.1393, 2.43 ) }
    dend_5 { pt3dadd( 2.34106, -109.479, -35.5641, 0.66 ) }
    dend_5 { pt3dadd( 2.10727, -110.285, -35.8593, 0.37 ) }
    dend_5 { pt3dadd( 1.82939, -111.187, -36.2058, 0.37 ) }
    dend_5 { pt3dadd( 1.49941, -112.194, -36.6191, 0.37 ) }
    dend_5 { pt3dadd( 1.29949, -112.767, -36.8792, 0.44 ) }
    dend_5 { pt3dadd( 1.11378, -113.246, -37.1281, 0.37 ) }
    dend_5 { pt3dadd( 0.886353, -113.779, -37.441, 0.29 ) }
    dend_5 { pt3dadd( 0.653271, -114.34, -37.8111, 0.29 ) }
    dend_5 { pt3dadd( 0.400971, -115.025, -38.3096, 0.96 ) }
    dend_5 { pt3dadd( 0.197054, -115.628, -38.7642, 1.11 ) }
    dend_5 { pt3dadd( -0.0597318, -116.408, -39.3646, 1.33 ) }
    dend_5 { pt3dadd( -0.252965, -116.998, -39.807, 1.47 ) }
    dend_5 { pt3dadd( -0.428217, -117.561, -40.2111, 1.69 ) }
    dend_5 { pt3dadd( -0.528659, -117.931, -40.4475, 1.84 ) }
    dend_5 { pt3dadd( -0.671694, -118.62, -40.821, 1.55 ) }
    dend_5 { pt3dadd( -0.778747, -119.335, -41.1622, 0.66 ) }
    dend_5 { pt3dadd( -0.840069, -119.945, -41.4167, 0.44 ) }
    dend_5 { pt3dadd( -0.897173, -120.845, -41.7535, 0.44 ) }
    dend_5 { pt3dadd( -0.920054, -121.371, -41.9244, 1.33 ) }
    dend_5 { pt3dadd( -0.943964, -122.073, -42.1356, 1.62 ) }
    dend_5 { pt3dadd( -0.959204, -122.725, -42.3172, 1.92 ) }
    dend_5 { pt3dadd( -0.971584, -123.095, -42.4209, 2.21 ) }
    dend_5 { pt3dadd( -0.999104, -123.676, -42.5768, 2.21 ) }
    dend_5 { pt3dadd( -1.02025, -124.214, -42.7067, 2.21 ) }
    dend_5 { pt3dadd( -1.02427, -124.472, -42.7738, 2.36 ) }
    dend_5 { pt3dadd( -1.02564, -125.327, -42.9993, 1.62 ) }
    dend_5 { pt3dadd( -1.02716, -126.462, -43.2991, 0.81 ) }
    dend_5 { pt3dadd( -1.02331, -127.282, -43.5167, 0.29 ) }
    dend_5 { pt3dadd( -1.0223, -127.875, -43.6807, 0.29 ) }
    dend_5 { pt3dadd( -1.02025, -128.371, -43.8212, 0.29 ) }
    dend_5 { pt3dadd( -1.0177, -129.142, -44.0291, 1.55 ) }
    dend_5 { pt3dadd( -1.01774, -129.976, -44.2585, 2.58 ) }
    dend_5 { pt3dadd( -1.01424, -130.552, -44.4069, 3.09 ) }
    dend_5 { pt3dadd( -1.00994, -131.51, -44.6396, 2.5 ) }
    dend_5 { pt3dadd( -1.00541, -132.319, -44.8028, 1.84 ) }
    dend_5 { pt3dadd( -0.981944, -133.596, -44.981, 0.52 ) }
    dend_5 { pt3dadd( -0.945644, -134.268, -45.0331, 0.37 ) }
    dend_5 { pt3dadd( -0.858867, -135.138, -45.0279, 1.55 ) }
    dend_5 { pt3dadd( -0.762834, -135.826, -44.9752, 2.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_5 { pt3dadd( -0.62209, -136.601, -44.8588, 2.87 ) }
    dend_5 { pt3dadd( -0.482275, -137.27, -44.7247, 3.09 ) }
    dend_5 { pt3dadd( -0.323754, -138.012, -44.553, 2.95 ) }
    dend_5 { pt3dadd( -0.0506698, -139.4, -44.2198, 0.66 ) }
    dend_5 { pt3dadd( 0.0599139, -140.032, -44.0833, 0.52 ) }
    dend_5 { pt3dadd( 0.106442, -140.355, -44.0254, 0.52 ) }
    dend_5 { pt3dadd( 0.173629, -141.02, -43.9437, 0.37 ) }
    dend_5 { pt3dadd( 0.19815, -141.922, -43.881, 0.37 ) }
    dend_5 { pt3dadd( 0.175394, -142.524, -43.8554, 0.66 ) }
    dend_5 { pt3dadd( 0.126394, -143.163, -43.8531, 0.66 ) }
    dend_5 { pt3dadd( 0.0582838, -143.958, -43.867, 0.29 ) }
    dend_5 { pt3dadd( -0.0202338, -144.928, -43.9028, 0.29 ) }
    dend_5 { pt3dadd( -0.124912, -146.607, -43.9944, 0.29 ) }
    dend_5 { pt3dadd( -0.143058, -147.456, -44.0676, 0.74 ) }
    dend_5 { pt3dadd( -0.121417, -148.373, -44.1714, 1.47 ) }
    dend_5 { pt3dadd( -0.0957898, -148.773, -44.2307, 1.99 ) }
    dend_5 { pt3dadd( -0.0359438, -149.33, -44.3328, 2.5 ) }
    dend_5 { pt3dadd( 0.0325515, -149.789, -44.429, 2.65 ) }
    dend_5 { pt3dadd( 0.244006, -150.916, -44.6864, 1.4 ) }
    dend_5 { pt3dadd( 0.386192, -151.735, -44.8616, 0.74 ) }
    dend_5 { pt3dadd( 0.511601, -152.56, -45.005, 0.29 ) }
    dend_5 { pt3dadd( 0.618091, -153.411, -45.154, 0.29 ) }
    dend_5 { pt3dadd( 0.696216, -154.187, -45.2891, 0.29 ) }
    dend_5 { pt3dadd( 0.725234, -154.548, -45.3542, 0.81 ) }
    dend_5 { pt3dadd( 0.785308, -155.334, -45.5075, 1.18 ) }
    dend_5 { pt3dadd( 0.902834, -156.582, -45.7159, 2.28 ) }
    dend_5 { pt3dadd( 1.01592, -157.58, -45.8543, 2.8 ) }
    dend_5 { pt3dadd( 1.0938, -158.15, -45.9243, 2.8 ) }
    dend_5 { pt3dadd( 1.18496, -158.752, -45.9888, 2.87 ) }
    dend_5 { pt3dadd( 1.44007, -160.324, -46.1278, 0.29 ) }
    dend_5 { pt3dadd( 1.62933, -161.46, -46.1967, 0.22 ) }
    dend_5 { pt3dadd( 1.71085, -161.943, -46.2088, 0.74 ) }
    dend_5 { pt3dadd( 1.79134, -162.487, -46.2007, 0.81 ) }
    dend_5 { pt3dadd( 1.84911, -163.043, -46.1908, 0.81 ) }
    dend_5 { pt3dadd( 1.88141, -163.564, -46.1844, 0.66 ) }
    dend_5 { pt3dadd( 1.90628, -164.625, -46.192, 0.22 ) }
    dend_5 { pt3dadd( 1.91043, -165.313, -46.2357, 0.22 ) }
    dend_5 { pt3dadd( 1.89067, -166.592, -46.3409, 0.22 ) }
    dend_5 { pt3dadd( 1.82983, -167.571, -46.4324, 1.77 ) }
    dend_5 { pt3dadd( 1.76846, -168.19, -46.4951, 2.43 ) }
    dend_5 { pt3dadd( 1.71456, -168.566, -46.5347, 2.73 ) }
    dend_5 { pt3dadd( 1.53474, -169.471, -46.6311, 1.77 ) }
    dend_5 { pt3dadd( 1.25875, -170.548, -46.7656, 0.52 ) }
    dend_5 { pt3dadd( 0.979062, -171.452, -46.8898, 0.29 ) }
    dend_5 { pt3dadd( 0.812788, -171.916, -46.9512, 0.59 ) }
    dend_5 { pt3dadd( 0.672373, -172.277, -46.996, 0.59 ) }
    dend_5 { pt3dadd( 0.456055, -172.813, -47.0544, 0.52 ) }
    dend_5 { pt3dadd( 0.0379534, -173.839, -47.1499, 0.22 ) }
    dend_5 { pt3dadd( -0.265, -174.664, -47.2213, 0.22 ) }
    dend_5 { pt3dadd( -0.487925, -175.368, -47.2971, 0.37 ) }
    dend_5 { pt3dadd( -0.614529, -175.837, -47.3691, 0.37 ) }
    dend_5 { pt3dadd( -0.714971, -176.363, -47.4698, 0.88 ) }
    dend_5 { pt3dadd( -0.778081, -176.904, -47.5896, 1.11 ) }
    dend_5 { pt3dadd( -0.808654, -177.373, -47.6966, 1.25 ) }
    dend_5 { pt3dadd( -0.824263, -177.801, -47.7958, 1.25 ) }
    dend_5 { pt3dadd( -0.848393, -178.74, -48.0215, 0.74 ) }
    dend_5 { pt3dadd( -0.862583, -179.73, -48.27, 0.29 ) }
    dend_5 { pt3dadd( -0.85903, -180.591, -48.4891, 0.22 ) }
    dend_5 { pt3dadd( -0.828918, -182.152, -48.878, 0.22 ) }
    dend_5 { pt3dadd( -0.773614, -183.341, -49.1566, 1.33 ) }
    dend_5 { pt3dadd( -0.708282, -184.073, -49.3051, 1.92 ) }
    dend_5 { pt3dadd( -0.635352, -184.621, -49.4023, 2.36 ) }
    dend_5 { pt3dadd( -0.567624, -185.006, -49.4711, 2.65 ) }
    dend_5 { pt3dadd( -0.4781, -185.427, -49.5436, 2.65 ) }
    dend_5 { pt3dadd( -0.314431, -186.098, -49.6726, 1.99 ) }
    dend_5 { pt3dadd( -0.0294158, -187.26, -49.9085, 0.52 ) }
    dend_5 { pt3dadd( 0.116082, -187.896, -50.0324, 0.59 ) }
    dend_5 { pt3dadd( 0.283022, -188.718, -50.192, 0.22 ) }
    dend_5 { pt3dadd( 0.461317, -189.715, -50.4077, 0.22 ) }
    dend_5 { pt3dadd( 0.553204, -190.301, -50.5447, 0.22 ) }
    dend_5 { pt3dadd( 0.587708, -190.557, -50.6078, 0.66 ) }
    dend_5 { pt3dadd( 0.640911, -190.916, -50.7028, 0.81 ) }
    dend_5 { pt3dadd( 0.687612, -191.169, -50.7703, 0.81 ) }
    dend_5 { pt3dadd( 0.879454, -192.027, -50.9817, 0.22 ) }
    dend_5 { pt3dadd( 1.01402, -192.566, -51.1103, 0.29 ) }
    dend_5 { pt3dadd( 1.15186, -193.106, -51.2296, 0.29 ) }
    dend_5 { pt3dadd( 1.35669, -193.954, -51.418, 0.29 ) }
    dend_5 { pt3dadd( 1.49906, -194.587, -51.5581, 0.88 ) }
    dend_5 { pt3dadd( 1.62965, -195.257, -51.7024, 1.84 ) }
    dend_5 { pt3dadd( 1.73863, -195.901, -51.8366, 2.36 ) }
    dend_5 { pt3dadd( 1.78311, -196.171, -51.9, 2.73 ) }
    dend_5 { pt3dadd( 1.87433, -196.703, -52.0322, 2.73 ) }
    dend_5 { pt3dadd( 1.97463, -197.304, -52.1835, 2.43 ) }
    dend_5 { pt3dadd( 2.11125, -198.206, -52.4024, 1.77 ) }
    dend_5 { pt3dadd( 2.22757, -199.03, -52.5953, 0.66 ) }
    dend_5 { pt3dadd( 2.38314, -200.117, -52.8281, 0.29 ) }
    dend_5 { pt3dadd( 2.54492, -201.147, -53.0346, 0.29 ) }
    dend_5 { pt3dadd( 2.66483, -201.803, -53.1576, 0.29 ) }
    dend_5 { pt3dadd( 2.86131, -202.757, -53.3187, 0.29 ) }
    dend_5 { pt3dadd( 2.99309, -203.298, -53.3955, 0.29 ) }
    dend_5 { pt3dadd( 3.21271, -204.079, -53.4985, 1.55 ) }
    dend_5 { pt3dadd( 3.41127, -204.735, -53.5884, 2.28 ) }
    dend_5 { pt3dadd( 3.61218, -205.359, -53.6901, 2.58 ) }
    dend_5 { pt3dadd( 3.79477, -205.889, -53.7949, 2.43 ) }
    dend_5 { pt3dadd( 4.21776, -207.11, -54.0721, 1.11 ) }
    dend_5 { pt3dadd( 4.53051, -208.122, -54.3257, 0.44 ) }
    dend_5 { pt3dadd( 4.68094, -208.725, -54.4958, 0.29 ) }
    dend_5 { pt3dadd( 4.76662, -209.21, -54.6559, 0.29 ) }
    dend_5 { pt3dadd( 4.81785, -209.763, -54.8552, 0.88 ) }
    dend_5 { pt3dadd( 4.82255, -210.336, -55.0619, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_5 { pt3dadd( 4.78492, -210.791, -55.2186, 1.62 ) }
    dend_5 { pt3dadd( 4.71298, -211.366, -55.3862, 1.62 ) }
    dend_5 { pt3dadd( 4.5829, -212.316, -55.6161, 1.03 ) }
    dend_5 { pt3dadd( 4.46851, -213.089, -55.7867, 0.44 ) }
    dend_5 { pt3dadd( 4.32223, -214.036, -55.9676, 0.37 ) }
    dend_5 { pt3dadd( 4.22601, -214.642, -56.0754, 0.88 ) }
    dend_5 { pt3dadd( 4.11817, -215.356, -56.1954, 0.88 ) }
    dend_5 { pt3dadd( 4.0272, -216.073, -56.3159, 1.03 ) }
    dend_5 { pt3dadd( 3.95438, -216.874, -56.4507, 0.88 ) }
    dend_5 { pt3dadd( 3.9098, -217.592, -56.5988, 0.74 ) }
    dend_5 { pt3dadd( 3.88443, -218.188, -56.746, 0.44 ) }
    dend_5 { pt3dadd( 3.85439, -219.247, -57.0486, 0.29 ) }
    dend_5 { pt3dadd( 3.82449, -220.444, -57.4007, 1.69 ) }
    dend_5 { pt3dadd( 3.80667, -221.199, -57.6236, 2.73 ) }
    dend_5 { pt3dadd( 3.79025, -222.039, -57.8631, 2.58 ) }
    dend_5 { pt3dadd( 3.77545, -222.709, -58.0433, 2.36 ) }
    dend_5 { pt3dadd( 3.73654, -224.406, -58.4469, 0.29 ) }
    dend_5 { pt3dadd( 3.70072, -225.596, -58.6993, 0.29 ) }
    dend_5 { pt3dadd( 3.67822, -226.213, -58.8225, 0.52 ) }
    dend_5 { pt3dadd( 3.66658, -226.673, -58.9101, 0.52 ) }
    dend_5 { pt3dadd( 3.68182, -227.927, -59.1258, 0.22 ) }
    dend_5 { pt3dadd( 3.71095, -228.663, -59.2618, 0.81 ) }
    dend_5 { pt3dadd( 3.737, -229.026, -59.3352, 1.11 ) }
    dend_5 { pt3dadd( 3.78309, -229.498, -59.4449, 1.25 ) }
    dend_5 { pt3dadd( 3.84653, -230.105, -59.6064, 1.25 ) }
    dend_5 { pt3dadd( 3.99302, -231.618, -60.0983, 0.22 ) }
    dend_5 { pt3dadd( 4.07628, -232.467, -60.4161, 0.22 ) }
    dend_5 { pt3dadd( 4.11543, -233.046, -60.6533, 0.96 ) }
    dend_5 { pt3dadd( 4.14189, -233.653, -60.9035, 1.4 ) }
    dend_5 { pt3dadd( 4.14991, -234.28, -61.1618, 1.62 ) }
    dend_5 { pt3dadd( 4.1409, -234.947, -61.4327, 1.4 ) }
    dend_5 { pt3dadd( 4.11878, -235.591, -61.6826, 1.03 ) }
    dend_5 { pt3dadd( 4.06989, -236.66, -62.0546, 0.22 ) }
    dend_5 { pt3dadd( 4.03196, -237.147, -62.2205, 0.22 ) }
    dend_5 { pt3dadd( 3.92192, -237.964, -62.4664, 1.69 ) }
    dend_5 { pt3dadd( 3.78158, -238.742, -62.6545, 2.73 ) }
    dend_5 { pt3dadd( 3.68028, -239.209, -62.7441, 3.09 ) }
    dend_5 { pt3dadd( 3.5209, -239.876, -62.8558, 2.95 ) }
    dend_5 { pt3dadd( 3.10223, -241.557, -63.1022, 0.74 ) }
    dend_5 { pt3dadd( 2.72623, -242.988, -63.3061, 0.22 ) }
    dend_5 { pt3dadd( 2.41238, -244.129, -63.47, 0.22 ) }
    dend_5 { pt3dadd( 2.08286, -245.355, -63.641, 0.22 ) }
    dend_5 { pt3dadd( 1.95309, -245.904, -63.7064, 0.59 ) }
    dend_5 { pt3dadd( 1.86908, -246.348, -63.7448, 0.59 ) }
    dend_5 { pt3dadd( 1.78805, -246.903, -63.7754, 0.29 ) }
    dend_5 { pt3dadd( 1.71905, -247.818, -63.8352, 0.29 ) }
    dend_5 { pt3dadd( 1.70509, -248.631, -63.9009, 1.55 ) }
    dend_5 { pt3dadd( 1.72716, -249.496, -63.973, 2.58 ) }
    dend_5 { pt3dadd( 1.73901, -249.809, -63.9916, 2.87 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 49/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 5.14655, -79.5, -21.9504, 0.66 ) }
    dend_4 { pt3dadd( 5.45446, -80.7754, -21.8902, 0.66 ) }
    dend_4 { pt3dadd( 5.64456, -81.4891, -21.8696, 0.59 ) }
    dend_4 { pt3dadd( 5.8278, -82.1256, -21.8456, 0.44 ) }
    dend_4 { pt3dadd( 5.97959, -82.6142, -21.82, 0.44 ) }
    dend_4 { pt3dadd( 6.26811, -83.513, -21.7687, 0.44 ) }
    dend_4 { pt3dadd( 6.56841, -84.4319, -21.6992, 0.44 ) }
    dend_4 { pt3dadd( 7.01943, -85.7127, -21.5691, 0.44 ) }
    dend_4 { pt3dadd( 7.24169, -86.3153, -21.5094, 0.44 ) }
    dend_4 { pt3dadd( 7.56327, -87.1993, -21.4227, 1.33 ) }
    dend_4 { pt3dadd( 7.6972, -87.5913, -21.3883, 1.77 ) }
    dend_4 { pt3dadd( 7.85742, -88.0811, -21.3333, 1.99 ) }
    dend_4 { pt3dadd( 8.07938, -88.7416, -21.2498, 1.69 ) }
    dend_4 { pt3dadd( 8.29405, -89.3626, -21.1387, 0.96 ) }
    dend_4 { pt3dadd( 8.51124, -90.0031, -20.9853, 0.37 ) }
    dend_4 { pt3dadd( 8.8035, -90.8824, -20.7052, 0.29 ) }
    dend_4 { pt3dadd( 9.0616, -91.6258, -20.4204, 0.29 ) }
    dend_4 { pt3dadd( 9.32008, -92.3277, -20.0938, 0.29 ) }
    dend_4 { pt3dadd( 9.74866, -93.4823, -19.4717, 0.29 ) }
    dend_4 { pt3dadd( 9.97946, -94.0901, -19.1161, 1.25 ) }
    dend_4 { pt3dadd( 10.2333, -94.7333, -18.7105, 1.69 ) }
    dend_4 { pt3dadd( 10.4522, -95.2722, -18.3604, 1.84 ) }
    dend_4 { pt3dadd( 10.9144, -96.3441, -17.6675, 0.44 ) }
    dend_4 { pt3dadd( 11.1229, -96.7817, -17.3886, 0.37 ) }
    dend_4 { pt3dadd( 11.4479, -97.438, -17.0467, 0.29 ) }
    dend_4 { pt3dadd( 11.6798, -97.8947, -16.8536, 0.81 ) }
    dend_4 { pt3dadd( 11.85, -98.2351, -16.7341, 0.96 ) }
    dend_4 { pt3dadd( 12.1336, -98.8266, -16.5572, 0.59 ) }
    dend_4 { pt3dadd( 12.631, -99.9205, -16.3007, 0.29 ) }
    dend_4 { pt3dadd( 13.1064, -101.104, -16.0667, 0.29 ) }
    dend_4 { pt3dadd( 13.2975, -101.739, -15.9759, 1.03 ) }
    dend_4 { pt3dadd( 13.4022, -102.234, -15.9296, 1.33 ) }
    dend_4 { pt3dadd( 13.4419, -102.527, -15.9118, 1.47 ) }
    dend_4 { pt3dadd( 13.4595, -103.076, -15.9045, 0.81 ) }
    dend_4 { pt3dadd( 13.376, -104.012, -15.9137, 0.22 ) }
    dend_4 { pt3dadd( 13.183, -105.041, -15.9149, 0.22 ) }
    dend_4 { pt3dadd( 13.0714, -105.48, -15.9185, 0.66 ) }
    dend_4 { pt3dadd( 13.0215, -105.64, -15.9205, 0.66 ) }
    dend_4 { pt3dadd( 12.6672, -106.537, -15.9304, 0.22 ) }
    dend_4 { pt3dadd( 12.4133, -107.045, -15.9323, 1.55 ) }
    dend_4 { pt3dadd( 12.2013, -107.408, -15.931, 1.84 ) }
    dend_4 { pt3dadd( 11.9979, -107.729, -15.9279, 2.06 ) }
    dend_4 { pt3dadd( 11.512, -108.476, -15.9182, 0.22 ) }
    dend_4 { pt3dadd( 10.8122, -109.536, -15.8966, 0.22 ) }
    dend_4 { pt3dadd( 9.88207, -110.939, -15.8727, 0.22 ) }
    dend_4 { pt3dadd( 9.50102, -111.524, -15.8621, 0.81 ) }
    dend_4 { pt3dadd( 9.27197, -111.885, -15.857, 1.03 ) }
    dend_4 { pt3dadd( 9.15639, -112.073, -15.8548, 1.03 ) }
    dend_4 { pt3dadd( 8.68361, -112.917, -15.8681, 0.22 ) }
    dend_4 { pt3dadd( 8.34037, -113.714, -15.9326, 0.22 ) }
    dend_4 { pt3dadd( 8.26801, -113.996, -15.9429, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_4 { pt3dadd( 8.18814, -114.451, -15.9302, 1.11 ) }
    dend_4 { pt3dadd( 8.14125, -114.84, -15.8966, 1.55 ) }
    dend_4 { pt3dadd( 8.11496, -115.258, -15.8439, 1.77 ) }
    dend_4 { pt3dadd( 8.12884, -116.771, -15.5542, 0.15 ) }
    dend_4 { pt3dadd( 8.22633, -118.522, -15.1245, 0.15 ) }
    dend_4 { pt3dadd( 8.28746, -119.247, -14.9263, 0.96 ) }
    dend_4 { pt3dadd( 8.34311, -119.747, -14.7622, 1.55 ) }
    dend_4 { pt3dadd( 8.42191, -120.349, -14.5425, 2.06 ) }
    dend_4 { pt3dadd( 8.67793, -122.108, -13.8541, 0.22 ) }
    dend_4 { pt3dadd( 8.84021, -123.081, -13.4667, 0.22 ) }
    dend_4 { pt3dadd( 9.15412, -124.83, -12.8293, 0.22 ) }
    dend_4 { pt3dadd( 9.33979, -125.778, -12.4915, 1.03 ) }
    dend_4 { pt3dadd( 9.4727, -126.438, -12.2623, 1.62 ) }
    dend_4 { pt3dadd( 9.55951, -126.928, -12.0923, 1.62 ) }
    dend_4 { pt3dadd( 9.70866, -128.057, -11.7527, 0.22 ) }
    dend_4 { pt3dadd( 9.75877, -128.908, -11.5507, 0.22 ) }
    dend_4 { pt3dadd( 9.76679, -129.34, -11.4671, 0.74 ) }
    dend_4 { pt3dadd( 9.75825, -129.713, -11.4173, 0.88 ) }
    dend_4 { pt3dadd( 9.66142, -131.191, -11.2355, 0.22 ) }
    dend_4 { pt3dadd( 9.54539, -132.08, -11.134, 0.96 ) }
    dend_4 { pt3dadd( 9.39326, -132.667, -11.0875, 1.18 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 21/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 1.73901, -249.809, -63.9916, 0.52 ) }
    dend_9 { pt3dadd( 1.45641, -250.883, -64.6967, 0.52 ) }
    dend_9 { pt3dadd( 1.17794, -251.953, -65.3592, 0.22 ) }
    dend_9 { pt3dadd( 1.04603, -252.466, -65.6645, 0.52 ) }
    dend_9 { pt3dadd( 0.942311, -252.868, -65.9019, 0.59 ) }
    dend_9 { pt3dadd( 0.739645, -253.628, -66.4035, 0.22 ) }
    dend_9 { pt3dadd( 0.463899, -254.579, -67.082, 0.22 ) }
    dend_9 { pt3dadd( 0.375549, -254.863, -67.3048, 0.96 ) }
    dend_9 { pt3dadd( 0.305066, -255.067, -67.4739, 1.25 ) }
    dend_9 { pt3dadd( 0.22402, -255.285, -67.6607, 1.25 ) }
    dend_9 { pt3dadd( -0.330803, -256.616, -68.8106, 0.22 ) }
    dend_9 { pt3dadd( -0.964294, -257.99, -70.0375, 0.22 ) }
    dend_9 { pt3dadd( -1.191, -258.448, -70.4457, 1.11 ) }
    dend_9 { pt3dadd( -1.35791, -258.776, -70.7257, 1.33 ) }
    dend_9 { pt3dadd( -1.47469, -259.001, -70.9058, 1.33 ) }
    dend_9 { pt3dadd( -1.8772, -259.775, -71.4555, 0.22 ) }
    dend_9 { pt3dadd( -2.09662, -260.199, -71.6794, 0.22 ) }
    dend_9 { pt3dadd( -2.25577, -260.536, -71.8196, 1.03 ) }
    dend_9 { pt3dadd( -2.39838, -260.888, -71.9493, 1.47 ) }
    dend_9 { pt3dadd( -2.51863, -261.241, -72.0678, 1.47 ) }
    dend_9 { pt3dadd( -2.59254, -261.524, -72.1662, 0.96 ) }
    dend_9 { pt3dadd( -2.69763, -262.186, -72.4138, 0.22 ) }
    dend_9 { pt3dadd( -2.76633, -262.857, -72.6536, 0.22 ) }
    dend_9 { pt3dadd( -2.78536, -263.3, -72.8038, 0.81 ) }
    dend_9 { pt3dadd( -2.75472, -263.713, -72.9205, 1.84 ) }
    dend_9 { pt3dadd( -2.65704, -264.378, -73.0934, 2.36 ) }
    dend_9 { pt3dadd( -2.56082, -264.835, -73.2055, 2.36 ) }
    dend_9 { pt3dadd( -2.41573, -265.379, -73.3372, 1.33 ) }
    dend_9 { pt3dadd( -2.19293, -266.109, -73.5066, 0.22 ) }
    dend_9 { pt3dadd( -1.56794, -268.027, -74.1008, 0.22 ) }
    dend_9 { pt3dadd( -1.43651, -268.5, -74.2719, 0.81 ) }
    dend_9 { pt3dadd( -1.35089, -268.847, -74.4044, 1.03 ) }
    dend_9 { pt3dadd( -1.28172, -269.151, -74.5354, 1.18 ) }
    dend_9 { pt3dadd( -1.22907, -269.403, -74.6549, 1.18 ) }
    dend_9 { pt3dadd( -0.960594, -270.989, -75.4863, 0.22 ) }
    dend_9 { pt3dadd( -0.584182, -273.97, -77.1367, 0.22 ) }
    dend_9 { pt3dadd( -0.525257, -274.528, -77.4396, 0.96 ) }
    dend_9 { pt3dadd( -0.458907, -275.239, -77.8305, 1.92 ) }
    dend_9 { pt3dadd( -0.42292, -275.633, -78.0186, 1.92 ) }
    dend_9 { pt3dadd( -0.293897, -276.918, -78.5217, 0.22 ) }
    dend_9 { pt3dadd( -0.107308, -278.638, -78.9807, 0.22 ) }
    dend_9 { pt3dadd( -0.0220188, -279.268, -79.0744, 0.81 ) }
    dend_9 { pt3dadd( 0.0802534, -279.921, -79.0795, 1.03 ) }
    dend_9 { pt3dadd( 0.397172, -281.908, -78.9416, 0.15 ) }
    dend_9 { pt3dadd( 0.526542, -282.699, -78.8473, 0.81 ) }
    dend_9 { pt3dadd( 0.617953, -283.279, -78.7363, 0.96 ) }
    dend_9 { pt3dadd( 0.862195, -285.027, -78.358, 0.22 ) }
    dend_9 { pt3dadd( 1.14306, -287.489, -77.8312, 0.22 ) }
    dend_9 { pt3dadd( 1.20048, -288.247, -77.6776, 0.52 ) }
    dend_9 { pt3dadd( 1.20117, -288.389, -77.6541, 0.81 ) }
    dend_9 { pt3dadd( 1.08393, -289.546, -77.4253, 0.22 ) }
    dend_9 { pt3dadd( 0.949301, -290.181, -77.2749, 1.18 ) }
    dend_9 { pt3dadd( 0.803529, -290.544, -77.15, 1.4 ) }
    dend_9 { pt3dadd( 0.661962, -290.779, -77.0521, 1.4 ) }
    dend_9 { pt3dadd( 0.0496228, -291.701, -76.6439, 0.22 ) }
    dend_9 { pt3dadd( -0.918504, -293.101, -76.0476, 0.22 ) }
    dend_9 { pt3dadd( -1.09648, -293.347, -75.9479, 0.74 ) }
    dend_9 { pt3dadd( -1.39662, -293.755, -75.7924, 0.74 ) }
    dend_9 { pt3dadd( -2.63383, -295.401, -75.3315, 0.22 ) }
    dend_9 { pt3dadd( -3.0071, -295.862, -75.2929, 1.25 ) }
    dend_9 { pt3dadd( -3.32488, -296.199, -75.3444, 1.77 ) }
    dend_9 { pt3dadd( -3.54205, -296.394, -75.4075, 1.99 ) }
    dend_9 { pt3dadd( -3.93997, -296.725, -75.5442, 1.99 ) }
    dend_9 { pt3dadd( -4.63284, -297.257, -75.8018, 1.4 ) }
    dend_9 { pt3dadd( -5.98899, -298.197, -76.362, 0.15 ) }
    dend_9 { pt3dadd( -7.5858, -299.28, -77.0297, 0.15 ) }
    dend_9 { pt3dadd( -7.8366, -299.447, -77.128, 0.44 ) }
    dend_9 { pt3dadd( -8.04831, -299.59, -77.2049, 0.44 ) }
    dend_9 { pt3dadd( -8.76137, -300.096, -77.423, 0.22 ) }
    dend_9 { pt3dadd( -9.27286, -300.475, -77.5365, 0.74 ) }
    dend_9 { pt3dadd( -9.50215, -300.651, -77.5734, 0.74 ) }
    dend_9 { pt3dadd( -10.2302, -301.236, -77.7187, 0.22 ) }
    dend_9 { pt3dadd( -10.7682, -301.689, -77.8177, 1.4 ) }
    dend_9 { pt3dadd( -11.1018, -301.978, -77.9017, 1.62 ) }
    dend_9 { pt3dadd( -11.356, -302.216, -77.9753, 1.62 ) }
    dend_9 { pt3dadd( -12.1391, -303.013, -78.2007, 0.22 ) }
    dend_9 { pt3dadd( -12.3549, -303.242, -78.2706, 0.81 ) }
    dend_9 { pt3dadd( -12.5485, -303.461, -78.3406, 0.96 ) }
    dend_9 { pt3dadd( -13.2607, -304.333, -78.6155, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_9 { pt3dadd( -14.3333, -305.733, -79.0653, 0.22 ) }
    dend_9 { pt3dadd( -14.7878, -306.389, -79.2709, 0.88 ) }
    dend_9 { pt3dadd( -14.9557, -306.657, -79.337, 0.88 ) }
    dend_9 { pt3dadd( -15.6012, -307.748, -79.5082, 0.22 ) }
    dend_9 { pt3dadd( -15.9044, -308.287, -79.544, 0.22 ) }
    dend_9 { pt3dadd( -15.9906, -308.449, -79.5374, 0.96 ) }
    dend_9 { pt3dadd( -16.2736, -309.009, -79.482, 0.96 ) }
    dend_9 { pt3dadd( -16.8384, -310.139, -79.309, 0.22 ) }
    dend_9 { pt3dadd( -17.5619, -311.632, -79.019, 0.22 ) }
    dend_9 { pt3dadd( -17.7261, -311.981, -78.9325, 0.81 ) }
    dend_9 { pt3dadd( -17.9142, -312.405, -78.8349, 1.11 ) }
    dend_9 { pt3dadd( -18.1539, -313.068, -78.7185, 0.37 ) }
    dend_9 { pt3dadd( -18.235, -313.37, -78.6839, 0.29 ) }
    dend_9 { pt3dadd( -18.2871, -313.694, -78.6733, 0.81 ) }
    dend_9 { pt3dadd( -18.3068, -314.26, -78.6799, 1.18 ) }
    dend_9 { pt3dadd( -18.266, -315.593, -78.7331, 0.22 ) }
    dend_9 { pt3dadd( -18.1836, -316.939, -78.8093, 0.22 ) }
    dend_9 { pt3dadd( -18.1443, -317.426, -78.8412, 0.52 ) }
    dend_9 { pt3dadd( -18.1277, -317.614, -78.8545, 0.52 ) }
    dend_9 { pt3dadd( -17.9582, -319.659, -78.9924, 0.22 ) }
    dend_9 { pt3dadd( -17.7934, -321.811, -79.1229, 0.22 ) }
    dend_9 { pt3dadd( -17.7628, -322.216, -79.14, 0.74 ) }
    dend_9 { pt3dadd( -17.7451, -322.524, -79.1526, 1.03 ) }
    dend_9 { pt3dadd( -17.7336, -322.803, -79.1651, 1.03 ) }
    dend_9 { pt3dadd( -17.6955, -324.266, -79.2458, 0.22 ) }
    dend_9 { pt3dadd( -17.698, -324.756, -79.2821, 0.66 ) }
    dend_9 { pt3dadd( -17.7047, -325.262, -79.3088, 0.81 ) }
    dend_9 { pt3dadd( -17.7056, -325.523, -79.3015, 0.88 ) }
    dend_9 { pt3dadd( -17.7093, -326.25, -79.2096, 0.15 ) }
    dend_9 { pt3dadd( -17.7155, -326.555, -79.1142, 0.37 ) }
    dend_9 { pt3dadd( -17.7243, -326.771, -78.9952, 0.52 ) }
    dend_9 { pt3dadd( -17.7832, -327.597, -78.4666, 0.22 ) }
    dend_9 { pt3dadd( -17.8412, -328.281, -78.0133, 0.44 ) }
    dend_9 { pt3dadd( -17.9, -329.018, -77.5177, 0.22 ) }
    dend_9 { pt3dadd( -17.9804, -330.082, -76.7872, 0.44 ) }
    dend_9 { pt3dadd( -18.0201, -331.023, -76.1619, 0.96 ) }
    dend_9 { pt3dadd( -18.0188, -331.593, -75.7962, 1.03 ) }
    dend_9 { pt3dadd( -17.9663, -332.304, -75.3784, 0.22 ) }
    dend_9 { pt3dadd( -17.9102, -332.589, -75.2688, 0.52 ) }
    dend_9 { pt3dadd( -17.8439, -332.714, -75.2771, 0.66 ) }
    dend_9 { pt3dadd( -17.2688, -333.195, -75.6385, 0.22 ) }
    dend_9 { pt3dadd( -16.9289, -333.369, -75.8514, 0.74 ) }
    dend_9 { pt3dadd( -16.6176, -333.479, -76.0659, 0.88 ) }
    dend_9 { pt3dadd( -14.3217, -334.021, -77.8651, 0.22 ) }
    dend_9 { pt3dadd( -13.955, -334.086, -78.1973, 0.22 ) }
    dend_9 { pt3dadd( -12.8457, -334.211, -79.3729, 1.11 ) }
    dend_9 { pt3dadd( -12.4204, -334.213, -79.9378, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 47/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 1.73901, -249.809, -63.9916, 1.69 ) }
    dend_6 { pt3dadd( 2.22003, -250.528, -63.6721, 1.69 ) }
    dend_6 { pt3dadd( 2.62029, -251.109, -63.4281, 0.22 ) }
    dend_6 { pt3dadd( 3.05302, -251.739, -63.1597, 0.22 ) }
    dend_6 { pt3dadd( 3.69914, -252.678, -62.7643, 0.88 ) }
    dend_6 { pt3dadd( 3.99602, -253.106, -62.5808, 1.03 ) }
    dend_6 { pt3dadd( 5.27896, -254.952, -61.6925, 0.22 ) }
    dend_6 { pt3dadd( 5.62442, -255.455, -61.4472, 0.22 ) }
    dend_6 { pt3dadd( 6.04533, -256.075, -61.1328, 0.81 ) }
    dend_6 { pt3dadd( 6.33534, -256.513, -60.9142, 1.18 ) }
    dend_6 { pt3dadd( 6.61307, -256.953, -60.7134, 1.18 ) }
    dend_6 { pt3dadd( 7.27072, -258.075, -60.2103, 0.15 ) }
    dend_6 { pt3dadd( 7.82191, -259.131, -59.7585, 0.15 ) }
    dend_6 { pt3dadd( 7.9337, -259.36, -59.68, 0.15 ) }
    dend_6 { pt3dadd( 8.12952, -259.792, -59.5762, 1.25 ) }
    dend_6 { pt3dadd( 8.25508, -260.112, -59.5248, 1.84 ) }
    dend_6 { pt3dadd( 8.4227, -260.601, -59.4921, 2.14 ) }
    dend_6 { pt3dadd( 8.55929, -261.057, -59.5041, 2.28 ) }
    dend_6 { pt3dadd( 8.72174, -261.638, -59.5092, 0.96 ) }
    dend_6 { pt3dadd( 8.89653, -262.264, -59.4886, 0.22 ) }
    dend_6 { pt3dadd( 9.05275, -262.817, -59.4456, 0.37 ) }
    dend_6 { pt3dadd( 9.12903, -263.088, -59.4142, 0.37 ) }
    dend_6 { pt3dadd( 9.23974, -263.477, -59.3552, 0.37 ) }
    dend_6 { pt3dadd( 9.46941, -264.248, -59.2086, 0.22 ) }
    dend_6 { pt3dadd( 9.71287, -264.947, -59.0849, 1.03 ) }
    dend_6 { pt3dadd( 9.81823, -265.216, -59.0466, 1.55 ) }
    dend_6 { pt3dadd( 9.88606, -265.378, -59.0297, 1.77 ) }
    dend_6 { pt3dadd( 10.0849, -265.85, -58.9927, 0.81 ) }
    dend_6 { pt3dadd( 10.2665, -266.295, -58.9731, 0.22 ) }
    dend_6 { pt3dadd( 10.6444, -267.292, -58.9735, 0.22 ) }
    dend_6 { pt3dadd( 10.9198, -268.116, -59.0466, 0.22 ) }
    dend_6 { pt3dadd( 11.051, -268.563, -59.1091, 0.81 ) }
    dend_6 { pt3dadd( 11.133, -268.88, -59.1625, 1.03 ) }
    dend_6 { pt3dadd( 11.1973, -269.143, -59.212, 1.03 ) }
    dend_6 { pt3dadd( 11.2849, -269.5, -59.2908, 0.88 ) }
    dend_6 { pt3dadd( 11.4974, -270.295, -59.5, 0.22 ) }
    dend_6 { pt3dadd( 11.8079, -271.192, -59.7772, 0.22 ) }
    dend_6 { pt3dadd( 12.0537, -271.767, -59.9564, 0.88 ) }
    dend_6 { pt3dadd( 12.204, -272.07, -60.0454, 1.11 ) }
    dend_6 { pt3dadd( 12.3612, -272.354, -60.1205, 1.11 ) }
    dend_6 { pt3dadd( 12.7096, -272.931, -60.2687, 0.44 ) }
    dend_6 { pt3dadd( 13.2122, -273.722, -60.5214, 0.22 ) }
    dend_6 { pt3dadd( 13.6349, -274.4, -60.6746, 0.22 ) }
    dend_6 { pt3dadd( 13.9429, -274.921, -60.6947, 1.33 ) }
    dend_6 { pt3dadd( 14.2144, -275.414, -60.6086, 2.36 ) }
    dend_6 { pt3dadd( 14.4254, -275.812, -60.462, 2.58 ) }
    dend_6 { pt3dadd( 14.9113, -276.75, -59.9225, 1.84 ) }
    dend_6 { pt3dadd( 15.7139, -278.31, -58.7434, 0.66 ) }
    dend_6 { pt3dadd( 16.1565, -279.134, -58.0147, 0.29 ) }
    dend_6 { pt3dadd( 16.437, -279.621, -57.5406, 1.18 ) }
    dend_6 { pt3dadd( 16.6466, -279.961, -57.1856, 1.33 ) }
    dend_6 { pt3dadd( 17.1386, -280.718, -56.3502, 0.22 ) }
    dend_6 { pt3dadd( 17.4711, -281.209, -55.7949, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 17.698, -281.556, -55.457, 0.22 ) }
    dend_6 { pt3dadd( 17.9223, -281.948, -55.0839, 1.4 ) }
    dend_6 { pt3dadd( 18.0336, -282.183, -54.873, 2.21 ) }
    dend_6 { pt3dadd( 18.1308, -282.431, -54.651, 2.5 ) }
    dend_6 { pt3dadd( 18.2626, -282.839, -54.2971, 2.5 ) }
    dend_6 { pt3dadd( 18.8188, -284.904, -52.565, 0.22 ) }
    dend_6 { pt3dadd( 19.043, -285.965, -51.6887, 0.22 ) }
    dend_6 { pt3dadd( 19.2051, -286.956, -50.883, 0.22 ) }
    dend_6 { pt3dadd( 19.2859, -287.555, -50.411, 0.74 ) }
    dend_6 { pt3dadd( 19.32, -287.857, -50.1816, 1.03 ) }
    dend_6 { pt3dadd( 19.3504, -288.197, -49.9379, 1.03 ) }
    dend_6 { pt3dadd( 19.3825, -289.304, -49.2651, 0.37 ) }
    dend_6 { pt3dadd( 19.395, -289.856, -48.9607, 1.11 ) }
    dend_6 { pt3dadd( 19.4067, -290.269, -48.7489, 1.99 ) }
    dend_6 { pt3dadd( 19.4288, -290.679, -48.5696, 2.28 ) }
    dend_6 { pt3dadd( 19.4544, -291.005, -48.4439, 2.28 ) }
    dend_6 { pt3dadd( 19.5775, -291.88, -48.1944, 0.29 ) }
    dend_6 { pt3dadd( 19.6922, -292.462, -48.0956, 0.15 ) }
    dend_6 { pt3dadd( 19.7584, -292.751, -48.0623, 0.44 ) }
    dend_6 { pt3dadd( 19.8597, -293.169, -48.0306, 0.59 ) }
    dend_6 { pt3dadd( 19.9211, -293.425, -48.0159, 0.59 ) }
    dend_6 { pt3dadd( 20.1742, -294.485, -47.9916, 0.22 ) }
    dend_6 { pt3dadd( 20.2487, -294.791, -47.9939, 0.52 ) }
    dend_6 { pt3dadd( 20.3073, -295.058, -48.0001, 0.66 ) }
    dend_6 { pt3dadd( 20.4928, -296.201, -48.099, 0.15 ) }
    dend_6 { pt3dadd( 20.5631, -296.892, -48.2137, 0.15 ) }
    dend_6 { pt3dadd( 20.5923, -297.409, -48.3359, 1.18 ) }
    dend_6 { pt3dadd( 20.5995, -297.679, -48.4184, 1.4 ) }
    dend_6 { pt3dadd( 20.6071, -297.89, -48.4917, 1.4 ) }
    dend_6 { pt3dadd( 20.6651, -299.088, -48.9793, 0.22 ) }
    dend_6 { pt3dadd( 20.7033, -299.757, -49.3124, 0.22 ) }
    dend_6 { pt3dadd( 20.7333, -300.171, -49.5349, 0.74 ) }
    dend_6 { pt3dadd( 20.7668, -300.59, -49.7586, 0.96 ) }
    dend_6 { pt3dadd( 20.8364, -301.374, -50.188, 0.29 ) }
    dend_6 { pt3dadd( 20.9027, -301.989, -50.5297, 1.25 ) }
    dend_6 { pt3dadd( 21.0019, -302.69, -50.9129, 2.28 ) }
    dend_6 { pt3dadd( 21.0517, -303.03, -51.0975, 2.5 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 21.0517, -303.03, -51.0975, 0.22 ) }
    dend_8 { pt3dadd( 22.1824, -304.019, -51.339, 0.22 ) }
    dend_8 { pt3dadd( 23.6361, -305.326, -51.5638, 0.22 ) }
    dend_8 { pt3dadd( 24.4705, -306.069, -51.6376, 0.22 ) }
    dend_8 { pt3dadd( 25.092, -306.634, -51.6685, 0.88 ) }
    dend_8 { pt3dadd( 25.4715, -306.985, -51.6737, 1.18 ) }
    dend_8 { pt3dadd( 25.7514, -307.243, -51.6677, 1.33 ) }
    dend_8 { pt3dadd( 26.6213, -308.064, -51.5565, 0.15 ) }
    dend_8 { pt3dadd( 27.7155, -309.12, -51.3716, 0.15 ) }
    dend_8 { pt3dadd( 28.2567, -309.625, -51.2651, 0.66 ) }
    dend_8 { pt3dadd( 28.6319, -309.978, -51.185, 1.11 ) }
    dend_8 { pt3dadd( 29.0692, -310.398, -51.0976, 1.4 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 49/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 21.0517, -303.03, -51.0975, 0.37 ) }
    dend_7 { pt3dadd( 21.0978, -304.486, -51.8381, 0.37 ) }
    dend_7 { pt3dadd( 21.1844, -306.295, -52.7559, 0.22 ) }
    dend_7 { pt3dadd( 21.2422, -307.206, -53.2066, 0.96 ) }
    dend_7 { pt3dadd( 21.3066, -307.806, -53.488, 1.18 ) }
    dend_7 { pt3dadd( 21.3658, -308.23, -53.6833, 1.18 ) }
    dend_7 { pt3dadd( 21.6565, -309.972, -54.4686, 0.22 ) }
    dend_7 { pt3dadd( 21.8223, -310.661, -54.7473, 1.33 ) }
    dend_7 { pt3dadd( 21.9519, -311.112, -54.9083, 1.47 ) }
    dend_7 { pt3dadd( 22.3262, -312.335, -55.2949, 0.22 ) }
    dend_7 { pt3dadd( 22.5721, -313.139, -55.5353, 1.03 ) }
    dend_7 { pt3dadd( 22.7012, -313.571, -55.6603, 1.03 ) }
    dend_7 { pt3dadd( 23.4967, -316.287, -56.4061, 0.22 ) }
    dend_7 { pt3dadd( 23.5967, -316.646, -56.4976, 0.59 ) }
    dend_7 { pt3dadd( 23.7384, -317.12, -56.6132, 0.59 ) }
    dend_7 { pt3dadd( 24.0073, -317.957, -56.8007, 0.15 ) }
    dend_7 { pt3dadd( 24.1387, -318.315, -56.871, 0.66 ) }
    dend_7 { pt3dadd( 24.3461, -318.832, -56.9809, 0.81 ) }
    dend_7 { pt3dadd( 24.5184, -319.23, -57.0739, 0.29 ) }
    dend_7 { pt3dadd( 25.2794, -320.928, -57.4924, 0.15 ) }
    dend_7 { pt3dadd( 25.5039, -321.417, -57.6073, 0.44 ) }
    dend_7 { pt3dadd( 25.6727, -321.765, -57.6771, 0.44 ) }
    dend_7 { pt3dadd( 26.6897, -323.838, -58.0694, 0.22 ) }
    dend_7 { pt3dadd( 27.0563, -324.605, -58.2053, 0.96 ) }
    dend_7 { pt3dadd( 27.3806, -325.315, -58.2856, 1.11 ) }
    dend_7 { pt3dadd( 27.7417, -326.232, -58.3161, 0.29 ) }
    dend_7 { pt3dadd( 28.4317, -328.135, -58.2347, 0.15 ) }
    dend_7 { pt3dadd( 28.5929, -328.608, -58.1781, 0.59 ) }
    dend_7 { pt3dadd( 28.7089, -328.985, -58.0983, 0.74 ) }
    dend_7 { pt3dadd( 29.1426, -330.729, -57.6632, 0.22 ) }
    dend_7 { pt3dadd( 29.4792, -332.652, -57.114, 0.22 ) }
    dend_7 { pt3dadd( 29.5618, -333.464, -56.8568, 0.74 ) }
    dend_7 { pt3dadd( 29.5746, -333.777, -56.7498, 0.74 ) }
    dend_7 { pt3dadd( 29.5978, -335.045, -56.299, 0.22 ) }
    dend_7 { pt3dadd( 29.5867, -336.096, -55.9267, 0.22 ) }
    dend_7 { pt3dadd( 29.5338, -336.723, -55.723, 0.81 ) }
    dend_7 { pt3dadd( 29.4576, -337.314, -55.5016, 1.11 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_27, dend_26, dend_25, dend_20, dend_0, dend_38, dend_35, dend_31, dend_28, dend_24, dend_21, dend_14, dend_1, dend_40, dend_39, dend_37, dend_36, dend_33, dend_32, dend_30, dend_29, dend_23, dend_22, dend_15, dend_13, dend_2, dend_42, dend_41, dend_17, dend_16, dend_10, dend_3, dend_19, dend_18, dend_12, dend_11, dend_5, dend_4, dend_9, dend_6, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_34, dend_27, dend_26, dend_25, dend_20, dend_0, dend_38, dend_35, dend_31, dend_28, dend_24, dend_21, dend_14, dend_1, dend_40, dend_39, dend_37, dend_36, dend_33, dend_32, dend_30, dend_29, dend_23, dend_22, dend_15, dend_13, dend_2, dend_42, dend_41, dend_17, dend_16, dend_10, dend_3, dend_19, dend_18, dend_12, dend_11, dend_5, dend_4, dend_9, dend_6, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_34, dend_27, dend_26, dend_25, dend_20, dend_0, axon_0, dend_38, dend_35, dend_31, dend_28, dend_24, dend_21, dend_14, dend_1, axon_1, dend_40, dend_39, dend_37, dend_36, dend_33, dend_32, dend_30, dend_29, dend_23, dend_22, dend_15, dend_13, dend_2, dend_42, dend_41, dend_17, dend_16, dend_10, dend_3, dend_19, dend_18, dend_12, dend_11, dend_5, dend_4, dend_9, dend_6, dend_8, dend_7]}
    ModelViewParmSubset_5 = new SectionList()
    dend_34 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_31 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_28 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_24 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_21 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_14 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_36 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_23 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_13 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_16 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_12 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_11 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_4 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_9 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_6 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_1 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_20 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_34 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_10 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_38 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_15 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_40 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_39 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_17 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_41 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_42 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_19 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_18 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_32 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_8 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_7 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_27 nseg = 3
    dend_26 nseg = 5
    dend_25 nseg = 7
    dend_31 nseg = 5
    dend_28 nseg = 3
    dend_24 nseg = 5
    dend_21 nseg = 3
    dend_14 nseg = 3
    dend_37 nseg = 5
    dend_36 nseg = 3
    dend_30 nseg = 5
    dend_23 nseg = 7
    dend_22 nseg = 5
    dend_13 nseg = 5
    dend_16 nseg = 3
    dend_12 nseg = 7
    dend_11 nseg = 15
    dend_5 nseg = 9
    dend_4 nseg = 3
    dend_9 nseg = 5
    dend_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_SBC_12caedd28c_0_0


