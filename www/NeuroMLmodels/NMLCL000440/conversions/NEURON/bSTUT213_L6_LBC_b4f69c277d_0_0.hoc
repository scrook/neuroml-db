// Cell: bSTUT213_L6_LBC_b4f69c277d_0_0
/*
{
  "id" : "bSTUT213_L6_LBC_b4f69c277d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.98654, -15.1158, 0.798705, 2.92938", "-2.52743, -13.8009, 0.698699, 4.72826", "-2.06831, -12.4859, 0.598694, 6.02146", "-1.6092, -11.171, 0.498688, 7.14964", "-1.15009, -9.85607, 0.398682, 8.33277", "-0.690973, -8.54114, 0.298676, 9.54758", "-0.231859, -7.22621, 0.198671, 11.0147", "0.227255, -5.91127, 0.0986649, 13.6124", "0.686369, -4.59634, -0.00134088, 16.115", "1.14548, -3.28141, -0.101347, 17.2623", "1.6046, -1.96648, -0.201352, 17.8776", "2.06371, -0.651547, -0.301358, 19.5277", "2.52282, 0.663385, -0.401364, 19.9711", "2.98194, 1.97832, -0.50137, 18.805", "3.44105, 3.29325, -0.601375, 17.5645", "3.90017, 4.60818, -0.701381, 16.4646", "4.35928, 5.92311, -0.801387, 15.3765", "4.81839, 7.23805, -0.901393, 13.7494", "5.27751, 8.55298, -1.0014, 11.2862", "5.73662, 9.86791, -1.1014, 8.69895", "6.19574, 11.1828, -1.20141, 4.99589" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "-2.51015, -12.4447, 4.26139, 3.9", "-2.77436, -16.0981, 4.30766, 2.19", "-2.96446, -18.7266, 4.34095, 2.31" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500006043839319
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-4.87015, -13.0052, -5.62861, 0.85", "-6.18602, -14.7117, -5.69086, 0.73", "-6.26338, -14.809, -5.69712, 0.73", "-8.05374, -17.0605, -5.84199, 0.85", "-8.11901, -17.1426, -5.84727, 0.85", "-9.49293, -18.8704, -5.95844, 0.85", "-11.3493, -21.205, -6.10865, 0.85", "-12.3227, -22.3828, -6.20347, 1.1" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500006043839319
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-6.36015, 6.7453, -1.77861, 3.66", "-6.427, 6.78845, -1.77807, 3.66", "-8.6664, 8.23368, -1.76001, 1.46", "-8.73326, 8.27682, -1.75947, 1.46", "-10.2634, 9.2643, -1.74713, 1.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500006043839319
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "6.82986, 9.2058, 1.51139, 1.58", "8.93187, 10.0626, 1.76546, 0.97", "11.3233, 11.0855, 2.03787, 0.97", "13.8274, 12.1746, 2.31322, 1.58", "13.9362, 12.2269, 2.33078, 1.58", "16.4107, 13.7876, 2.9967, 0.97", "16.5596, 13.9055, 3.04354, 0.97", "17.6646, 15.1318, 3.47694, 0.97", "17.7371, 15.2477, 3.51091, 0.97", "18.9932, 17.7672, 3.91621, 0.85", "20.7761, 21.6726, 4.49092, 1.1", "21.6941, 24.0119, 4.77815, 0.73", "22.5918, 26.4609, 5.04079, 0.61", "24.1287, 31.1791, 5.41591, 0.61", "25.6841, 36.3873, 5.56573, 0.85" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500006043839319
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "9.51985, -5.1487, -3.42861, 2.07", "10.8699, -6.72577, -3.43343, 0.85", "12.4153, -8.5311, -3.43895, 0.85", "12.4895, -8.61772, -3.43922, 0.85", "13.6347, -9.95553, -3.44331, 0.61", "15.0076, -11.5594, -3.44821, 1.1", "17.3583, -14.3054, -3.45661, 1.71" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500006043839319
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.19574, 11.1828, -1.20141, 0.468758", "11.1403, 25.3444, -1.20141, 0.468758", "16.0849, 39.506, -1.20141, 0.468758" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-2.96446, -18.7266, 4.34095, 0.85", "-2.55582, -19.6359, 6.60038, 0.85", "-2.47059, -19.8456, 7.02135, 0.85", "-1.25148, -23.1559, 12.8551, 0.85", "-1.1184, -23.5411, 13.4448, 0.85", "-0.708794, -24.7919, 15.1805, 1.22", "-0.667305, -24.917, 15.3263, 1.22", "-0.163624, -26.7662, 16.9647, 0.73", "-0.0255765, -27.1948, 17.1377, 0.61", "0.590444, -28.8181, 17.0531, 0.49", "0.837356, -29.4743, 17.0403, 0.49", "2.07502, -32.632, 16.8378, 1.1", "2.30692, -33.2351, 16.8094, 1.1", "3.14464, -35.6649, 17.4707, 0.37", "3.35973, -36.3039, 17.7808, 0.37", "4.5314, -39.9279, 19.843, 0.49", "4.87111, -41.0319, 20.5935, 0.49", "5.59142, -43.5898, 22.7467, 0.61", "7.14949, -49.5467, 28.3622, 1.22", "7.56022, -51.3245, 30.3287, 1.34" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-2.96446, -18.7266, 4.34095, 0.85", "-4.74087, -22.8959, 4.19869, 0.85", "-5.94868, -25.7307, 4.10197, 0.85", "-6.24237, -26.42, 4.07845, 0.85", "-7.72923, -29.9097, 3.95938, 1.46", "-8.70354, -32.1964, 3.88135, 2.07" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-12.3227, -22.3828, -6.20347, 0.73", "-13.498, -22.9922, -10.2139, 0.73", "-13.9191, -23.1754, -11.3091, 0.73", "-15.2922, -23.7448, -14.5926, 0.24", "-15.4271, -23.7906, -14.8583, 0.24", "-16.1742, -23.9826, -16.0779, 0.24", "-17.8478, -24.3677, -18.5377, 0.12", "-19.6242, -24.7315, -20.4609, 0.24", "-19.6996, -24.747, -20.5344, 0.24", "-21.5615, -25.0623, -22.0675, 0.24", "-23.3769, -25.3646, -23.4816, 0.24", "-23.736, -25.4259, -23.7536, 0.24", "-26.2501, -25.8977, -25.462, 0.24", "-26.7702, -26.0052, -25.8151, 0.24", "-28.2705, -26.353, -26.8684, 0.24", "-28.369, -26.3811, -26.9416, 0.24", "-30.0835, -26.9337, -28.2563, 0.49", "-30.18, -26.9632, -28.3315, 0.49", "-31.2665, -27.2865, -29.1777, 0.12", "-31.3655, -27.3138, -29.2505, 0.12", "-32.1353, -27.5192, -29.8824, 0.24" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-12.3227, -22.3828, -6.20347, 0.49", "-12.2436, -24.6162, -6.3451, 0.49", "-12.2184, -26.4456, -6.57761, 0.24", "-12.2214, -26.5528, -6.59411, 0.24", "-12.2929, -27.8536, -6.83773, 0.24", "-12.4018, -29.4844, -7.15998, 0.24", "-12.5882, -31.9983, -7.59996, 0.24", "-12.6051, -32.1838, -7.63462, 0.24", "-12.7287, -33.2491, -7.79498, 0.24", "-13.08, -36.3215, -8.1416, 0.37", "-13.1129, -36.5764, -8.15758, 0.37", "-13.457, -39.2141, -8.34554, 0.37", "-13.7078, -40.8022, -8.44623, 0.37", "-14.0948, -43.1994, -8.62358, 0.37", "-14.1156, -43.3257, -8.6335, 0.37", "-14.534, -45.6191, -8.80962, 0.37", "-14.9622, -47.7437, -9.00087, 0.12", "-15.413, -49.7202, -9.20649, 0.49", "-15.7388, -51.07, -9.335, 0.12", "-15.9716, -52.0653, -9.41221, 0.37", "-16.2346, -53.1702, -9.44503, 0.12", "-16.5323, -54.51, -9.43358, 0.49", "-16.9224, -56.103, -9.20898, 0.12", "-17.2743, -57.4256, -8.95391, 0.61", "-17.3071, -57.5463, -8.92518, 0.61", "-17.7001, -59.0254, -8.53142, 0.12", "-18.0612, -60.4466, -8.11385, 1.1", "-18.7236, -63.2886, -7.22841, 0.24", "-18.7643, -63.4577, -7.17638, 0.24", "-19.132, -64.9961, -6.65748, 0.24", "-19.5694, -66.8666, -6.00979, 0.49", "-19.5945, -66.9916, -5.99724, 0.49", "-19.8238, -68.233, -6.06717, 0.49", "-20.042, -69.5194, -6.31814, 0.12", "-20.3946, -71.5087, -6.79867, 0.37", "-20.4814, -71.9779, -6.93597, 0.37", "-21.6662, -78.0936, -8.91259, 0.37", "-21.7831, -78.689, -9.10701, 0.37", "-22.008, -79.8272, -9.50163, 0.12", "-22.3695, -81.6676, -10.1383, 0.49", "-22.3913, -81.779, -10.1754, 0.49", "-22.6056, -82.9019, -10.4328, 0.12", "-22.8086, -84.0247, -10.4493, 0.49", "-22.8529, -84.2771, -10.4424, 0.49", "-23.1185, -85.895, -10.2824, 0.12", "-23.4401, -87.754, -10.0208, 0.12", "-23.5118, -88.1175, -9.96567, 0.12", "-23.7723, -89.2252, -9.79416, 0.12", "-24.4454, -91.7775, -9.39498, 1.83", "-25.1817, -94.2728, -9.00617, 0.12", "-25.6763, -95.7705, -8.75658, 0.85", "-26.2495, -97.3717, -8.47581, 0.12", "-26.826, -98.9594, -8.21631, 0.61", "-27.2621, -100.151, -8.04325, 0.12", "-27.5882, -101.107, -7.9055, 0.12", "-28.0742, -102.593, -7.67313, 0.85", "-28.3986, -103.674, -7.4703, 1.46", "-28.7319, -104.869, -7.22822, 1.46", "-29.0168, -105.955, -7.00273, 0.49", "-29.5271, -107.889, -6.6104, 0.24", "-29.936, -109.504, -6.29843, 0.49", "-30.007, -109.775, -6.25223, 0.49", "-30.6152, -111.875, -5.93845, 0.49", "-30.9432, -112.826, -5.77737, 0.12", "-31.1278, -113.3, -5.69366, 0.12", "-31.572, -114.334, -5.51721, 0.49", "-32.0388, -115.389, -5.31843, 0.12", "-32.7888, -117.185, -4.97424, 1.22", "-33.5426, -119.185, -4.57935, 0.24", "-33.8204, -120.022, -4.45445, 0.24", "-34.1537, -121.143, -4.32399, 0.73", "-34.6153, -122.891, -4.17447, 0.12", "-35.1815, -125.5, -4.02977, 0.49", "-35.4137, -126.97, -4.00356, 0.97", "-35.6057, -129.262, -4.06852, 0.24", "-35.6093, -129.39, -4.07626, 0.37", "-35.5869, -130.278, -4.15409, 0.37", "-35.5527, -130.724, -4.2024, 0.12", "-35.5223, -131.013, -4.2358, 0.12", "-35.2439, -133.513, -4.46373, 1.34", "-34.9828, -135.643, -4.54128, 0.12", "-34.9524, -135.924, -4.54582, 0.12", "-34.8401, -137.091, -4.54783, 0.61", "-34.7576, -138.135, -4.51733, 0.12", "-34.7277, -138.524, -4.5043, 0.12", "-34.5961, -140.219, -4.42222, 1.22", "-34.4891, -141.854, -4.31441, 0.12", "-34.4769, -142.11, -4.29782, 0.12", "-34.396, -144.515, -4.15087, 1.71", "-34.4192, -147.807, -3.77319, 0.12", "-34.4423, -148.319, -3.69308, 0.12", "-34.6531, -150.926, -3.18946, 1.71", "-34.8575, -152.649, -2.79861, 0.24", "-35.0559, -153.875, -2.47785, 0.73", "-35.7171, -156.614, -1.6179, 0.12", "-36.084, -157.761, -1.19868, 0.37", "-36.1177, -157.859, -1.16416, 0.37", "-36.5167, -158.861, -0.738024, 0.12", "-36.6552, -159.194, -0.597265, 0.12", "-37.0821, -160.208, -0.190761, 0.97", "-37.7913, -162.032, 0.42117, 0.12", "-37.8358, -162.146, 0.460593, 0.12", "-38.8574, -164.787, 1.37599, 1.1", "-39.5679, -166.625, 2.01928, 0.12", "-39.6298, -166.787, 2.07528, 0.12", "-40.132, -168.142, 2.53387, 0.97", "-40.5367, -169.3, 2.88215, 0.12", "-40.5681, -169.401, 2.90395, 0.12", "-40.7557, -170.154, 2.9645, 0.37", "-40.8089, -170.404, 2.98729, 0.37", "-40.9187, -171.022, 3.04939, 0.12", "-41.0747, -172.01, 3.15527, 0.61", "-41.303, -173.256, 3.28191, 0.12", "-41.3564, -173.506, 3.30559, 0.12", "-41.498, -174.122, 3.3579, 0.61", "-41.73, -175.012, 3.42677, 0.12", "-41.7675, -175.134, 3.43489, 0.12", "-42.5055, -177.135, 3.53688, 1.34", "-42.9655, -178.184, 3.64328, 0.49", "-43.0204, -178.299, 3.65782, 0.49", "-43.2663, -178.82, 3.73615, 0.49", "-43.945, -180.329, 4.09306, 0.12", "-44.7005, -182.115, 4.63054, 1.34", "-45.4577, -184.064, 5.32328, 0.12", "-45.4929, -184.16, 5.36058, 0.12", "-46.1232, -185.937, 6.19448, 1.22", "-46.8106, -187.996, 7.33381, 0.12", "-46.8384, -188.084, 7.39137, 0.12", "-47.1553, -189.2, 8.19465, 0.49", "-47.1786, -189.287, 8.25684, 0.49", "-47.7288, -191.016, 9.47316, 0.12", "-47.7692, -191.117, 9.54378, 0.12", "-48.0298, -191.701, 9.82876, 0.61", "-48.3143, -192.356, 10.0741, 0.12", "-48.5119, -192.813, 10.2038, 0.12", "-48.8431, -193.715, 10.3538, 1.22", "-48.8731, -193.818, 10.3643, 1.22", "-49.2609, -195.32, 10.54, 0.12", "-49.5349, -196.428, 10.6846, 0.12", "-49.56, -196.532, 10.6988, 0.12", "-49.9258, -198.257, 10.8453, 1.46", "-50.2652, -200.202, 10.939, 0.12", "-50.2823, -200.309, 10.9407, 0.12", "-50.3476, -200.847, 10.9328, 0.12", "-50.3592, -200.954, 10.9281, 0.12", "-50.5489, -203.082, 10.8134, 1.1", "-50.5663, -203.367, 10.7979, 1.1", "-50.6238, -204.892, 10.7174, 0.12", "-50.6499, -205.742, 10.6804, 0.61", "-50.653, -205.872, 10.6763, 0.61", "-50.6955, -206.916, 10.6644, 0.12", "-50.7993, -208.708, 10.6913, 1.34", "-50.8072, -208.816, 10.6913, 1.34", "-51.09, -211.706, 10.7109, 0.12", "-51.149, -212.216, 10.6759, 0.12", "-51.2776, -213.101, 10.5956, 0.49", "-51.3858, -213.721, 10.5264, 0.12", "-51.4118, -213.847, 10.5117, 0.12", "-51.6688, -214.931, 10.411, 0.12", "-52.4328, -217.705, 10.2191, 1.58", "-53.0009, -219.656, 10.0947, 0.12", "-53.1455, -220.139, 10.0687, 0.12", "-53.546, -221.501, 10.0209, 0.85", "-53.9137, -222.895, 10.0134, 0.12", "-54.1806, -224.03, 10.0458, 0.61", "-54.2616, -224.424, 10.095, 0.61", "-54.3422, -225.302, 10.1991, 0.12", "-54.3084, -226.449, 10.3692, 0.73", "-54.0222, -227.592, 10.6456, 0.12", "-53.9158, -227.849, 10.7263, 0.12", "-53.6401, -228.388, 10.9197, 0.12", "-53.1269, -229.309, 11.2726, 0.85", "-52.6956, -230.065, 11.5704, 0.12", "-51.6416, -231.98, 12.3239, 1.22", "-51.5908, -232.082, 12.3629, 1.22", "-50.9507, -233.597, 12.8957, 0.24", "-50.9108, -233.715, 12.933, 0.24", "-50.6056, -234.963, 13.2792, 0.49", "-50.5606, -235.444, 13.3796, 0.24", "-50.5929, -235.952, 13.4434, 0.24", "-50.6796, -236.573, 13.5098, 0.61", "-50.9123, -237.462, 13.5785, 0.12", "-50.9713, -237.634, 13.5883, 0.12", "-51.5595, -238.933, 13.4802, 0.49", "-51.6942, -239.187, 13.4283, 0.12", "-51.763, -239.293, 13.3973, 0.12", "-52.3427, -239.953, 13.1323, 0.49", "-52.7412, -240.298, 12.9597, 0.12", "-53.9814, -241.226, 12.4394, 0.37", "-54.4471, -241.487, 12.2539, 0.12", "-55.3025, -241.879, 11.9454, 0.12", "-56.5702, -242.345, 11.5302, 0.85", "-57.5775, -242.608, 11.2686, 0.12", "-57.707, -242.634, 11.2436, 0.12", "-59.061, -242.818, 11.0831, 0.12", "-59.3786, -242.851, 11.0452, 0.12", "-60.2233, -242.947, 10.9433, 0.12", "-61.3506, -243.071, 10.8341, 0.37", "-61.484, -243.085, 10.8239, 0.37", "-62.0287, -243.165, 10.7929, 0.37", "-62.3251, -243.238, 10.7906, 0.37", "-63.1333, -243.459, 10.7867, 0.49" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-10.2634, 9.2643, -1.74713, 0.49", "-10.4534, 12.0542, -1.16931, 0.49", "-10.5733, 14.2112, -0.553762, 0.49", "-10.7618, 17.9978, 0.64174, 0.49", "-10.9294, 20.3551, 1.57454, 0.49", "-11.0919, 21.9779, 2.43328, 0.49", "-11.3282, 24.0077, 3.65753, 0.37", "-11.7852, 27.0791, 5.94954, 0.61", "-11.7997, 27.1637, 6.02424, 0.61", "-12.2693, 29.5704, 8.53526, 0.61", "-12.7356, 32.3903, 11.8777, 0.37", "-12.7472, 32.4594, 11.9687, 0.37", "-12.8643, 33.0008, 12.7582, 0.61", "-13.1912, 34.2235, 14.5629, 0.24", "-13.2059, 34.2896, 14.6559, 0.24", "-13.2901, 35.7617, 16.301, 0.73" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.2634, 9.2643, -1.74713, 1.22", "-13.0411, 9.44145, -0.895856, 1.22", "-16.0992, 9.63648, 0.0413392, 1.46" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "25.6841, 36.3873, 5.56573, 0.61", "26.5268, 40.1358, 7.15146, 0.61", "27.0182, 42.2531, 7.94485, 0.61", "27.4061, 43.8902, 8.44498, 0.37", "27.9334, 46.1422, 8.86235, 0.37", "28.6557, 49.0398, 9.08073, 0.85", "29.1231, 50.9163, 9.08485, 0.49", "29.5148, 52.615, 8.85954, 0.37", "29.9083, 54.4041, 8.53435, 0.49", "30.6602, 57.5919, 7.91443, 0.49", "31.3672, 60.3288, 7.38279, 0.37", "31.8513, 62.1576, 6.96119, 0.37", "32.5839, 65.1058, 6.29049, 0.61", "32.8696, 66.3563, 6.03843, 0.73", "33.3286, 68.3769, 5.73379, 0.49", "33.8755, 70.7968, 5.50977, 1.83", "34.4235, 73.2299, 5.32726, 0.73", "34.7171, 74.4355, 5.22984, 0.73", "34.7397, 74.5203, 5.221, 0.73", "35.2858, 76.3993, 5.05442, 0.49", "35.3185, 76.4986, 5.05295, 0.49", "36.1719, 78.5969, 5.5217, 0.49", "36.746, 79.8305, 6.08692, 0.37", "37.12, 80.6033, 6.52578, 0.24", "37.6402, 81.7208, 7.20585, 0.12", "38.4699, 83.5527, 8.39944, 1.22", "39.4994, 85.8189, 9.88275, 0.49", "40.2473, 87.3256, 10.9133, 0.49", "40.3077, 87.4432, 10.9954, 0.49", "41.1281, 89.0546, 12.0934, 0.37", "41.5098, 89.8416, 12.5632, 0.37", "41.9032, 90.7092, 13.0034, 0.12", "42.8301, 92.9256, 13.8069, 0.85", "43.6585, 95.0604, 14.3992, 0.49", "43.6942, 95.1564, 14.4216, 0.49", "44.4289, 97.1747, 14.777, 0.49", "44.9341, 98.6248, 14.9391, 0.73", "45.5546, 100.537, 15.0, 0.37", "45.9265, 101.787, 14.9147, 0.85", "45.9565, 101.887, 14.9108, 0.85", "46.3793, 103.328, 14.9633, 0.49", "46.8836, 105.002, 15.0886, 0.37", "47.3581, 106.713, 15.2868, 0.37", "47.8203, 108.823, 15.6205, 0.61", "48.2199, 111.253, 15.9935, 0.61", "48.4015, 112.867, 16.2889, 0.49", "48.4134, 113.752, 16.4728, 0.49", "48.2568, 115.47, 16.9311, 0.24", "48.112, 116.379, 17.2437, 0.24", "48.096, 116.475, 17.2809, 0.24", "47.7596, 118.595, 18.0894, 0.12", "47.5354, 120.326, 18.7887, 0.24", "47.3445, 122.288, 19.6124, 0.12", "47.2464, 124.304, 20.3848, 0.37", "47.2531, 125.705, 20.8817, 0.37", "47.2571, 125.79, 20.9066, 0.37", "47.4055, 127.513, 21.2533, 0.61", "47.4154, 127.599, 21.2682, 0.61", "47.6184, 129.432, 21.5196, 0.12", "47.7243, 130.756, 21.6941, 0.73", "47.7923, 132.098, 21.8863, 0.24", "47.8651, 134.164, 22.197, 0.24", "47.8782, 136.552, 22.5627, 0.73", "47.876, 136.638, 22.5763, 0.73", "47.757, 138.664, 22.9197, 0.37", "47.7518, 138.751, 22.9295, 0.37", "47.715, 139.599, 22.9708, 0.24", "47.7146, 141.189, 22.9322, 0.49", "47.7716, 142.662, 22.7874, 0.12", "47.7801, 142.749, 22.7901, 0.24", "48.0579, 144.475, 23.0621, 0.61", "48.4772, 146.409, 23.6311, 0.12", "48.6721, 147.075, 23.9299, 0.12", "48.7369, 147.246, 24.0356, 0.12", "50.2165, 150.564, 26.4425, 0.24", "50.2524, 150.643, 26.5051, 0.24", "50.6209, 151.428, 27.229, 0.12", "50.6514, 151.49, 27.2868, 0.12", "51.0262, 152.312, 27.862, 0.49", "51.4631, 153.341, 28.3442, 0.12", "51.7341, 154.024, 28.368, 0.37", "51.9532, 154.541, 28.378, 0.12", "52.4616, 155.575, 28.3606, 0.12", "53.3091, 157.268, 28.3593, 0.49", "55.4844, 164.979, 28.2351, 0.49", "57.118, 172.784, 27.5444, 0.49", "59.9821, 180.287, 27.7671, 0.49", "64.5168, 187.009, 27.7134, 0.49", "69.4603, 193.31, 29.1768, 0.49", "73.402, 200.296, 30.16, 0.49" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "25.6841, 36.3873, 5.56573, 0.37", "24.3558, 37.3315, 6.54593, 0.37", "22.9124, 38.0767, 7.75265, 0.37", "20.9292, 38.7494, 9.54859, 0.49", "20.7007, 38.7706, 9.80061, 0.49", "19.7029, 38.8631, 10.901, 0.37", "19.6387, 38.8691, 10.9719, 0.37", "18.9091, 37.6542, 12.7034, 0.24", "18.742, 36.6192, 13.6118, 0.12", "18.9093, 34.2875, 14.973, 0.61" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "17.3583, -14.3054, -3.45661, 0.24", "22.2712, -15.7424, 4.31794, 0.24", "22.3658, -15.7705, 4.4481, 0.24", "24.0156, -16.2976, 6.44179, 0.24", "25.4398, -16.7441, 7.97852, 0.24", "29.503, -17.9443, 11.9618, 0.85", "34.067, -19.2001, 16.0587, 0.37", "36.9326, -19.8634, 17.9742, 1.1", "39.2091, -20.387, 19.3537, 0.37", "41.0733, -20.8505, 20.3353, 0.37", "42.4188, -21.2697, 20.8654, 0.61", "44.0711, -21.9551, 21.1657, 0.49", "46.3059, -22.9907, 21.231, 0.49", "48.1048, -24.0558, 21.3652, 0.49", "50.1863, -25.4227, 21.6617, 0.49", "51.5691, -26.4285, 21.9576, 0.73", "53.3492, -27.7372, 22.4707, 0.24", "53.4745, -27.8285, 22.515, 0.24", "55.9336, -29.6162, 23.5625, 0.24", "58.0988, -30.9649, 24.6173, 0.37", "59.0412, -31.4264, 25.0592, 0.37", "60.5979, -32.0613, 25.7126, 0.37", "60.7449, -32.1114, 25.7619, 0.37", "62.713, -32.8396, 26.2134, 0.37", "62.8404, -32.8886, 26.2258, 0.37", "65.0729, -34.0282, 26.8577, 0.37", "65.2076, -34.085, 26.9295, 0.37", "66.4196, -34.4926, 27.7418, 0.49", "66.5446, -34.532, 27.8391, 0.49", "67.8109, -34.9009, 28.9173, 0.24", "70.5845, -35.7879, 31.2307, 0.24", "72.0775, -36.2939, 32.4858, 0.49", "73.5162, -36.8243, 33.633, 0.37", "76.4147, -37.9796, 35.8394, 0.37", "76.6294, -38.0551, 35.9822, 0.37", "78.8928, -38.7364, 37.2348, 0.37", "79.1862, -38.8076, 37.3618, 0.37", "80.9211, -39.1719, 38.1179, 0.37", "81.0713, -39.1928, 38.1784, 0.37", "83.7262, -39.3838, 39.069, 0.49", "84.9178, -39.5034, 39.447, 0.49", "86.5791, -39.7116, 39.9565, 0.24", "86.734, -39.7413, 39.9989, 0.24", "88.1385, -40.1299, 40.3133, 0.24", "88.328, -40.2179, 40.3503, 0.24", "90.1721, -41.5822, 40.6838, 0.24", "90.2952, -41.6832, 40.7036, 0.24", "90.9001, -42.1866, 40.7912, 0.24", "91.0852, -42.3113, 40.8385, 0.24", "92.6369, -43.1966, 41.3276, 0.12", "93.183, -43.4676, 41.5131, 0.12", "95.0247, -44.4506, 42.1361, 0.12", "95.1605, -44.5271, 42.1803, 0.12", "97.9198, -46.3436, 43.0424, 0.24", "99.266, -47.2383, 43.4594, 0.12", "99.6318, -47.4881, 43.5694, 0.12", "102.019, -49.3223, 44.2208, 0.12", "102.132, -49.4337, 44.2503, 0.12", "103.747, -51.458, 44.5487, 0.49" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "17.3583, -14.3054, -3.45661, 0.49", "18.5783, -16.574, -2.51215, 0.49", "18.6377, -16.6801, -2.47336, 0.49", "19.7981, -18.641, -1.79786, 0.37", "20.6811, -20.0788, -1.32067, 0.37", "21.5836, -21.4258, -0.913171, 1.22", "23.267, -23.8383, -0.221537, 0.73", "23.3435, -23.94, -0.204321, 0.73", "24.3658, -25.3943, -0.0469163, 0.49", "24.5139, -25.6388, -0.0322349, 0.49", "25.7484, -27.9497, 0.144307, 0.49", "25.8025, -28.0646, 0.155559, 0.49", "26.6727, -30.086, 0.353413, 0.37", "27.6044, -32.4123, 0.598464, 0.37", "29.0826, -36.0471, 1.03393, 0.37", "30.004, -38.2694, 1.34202, 1.1", "30.8917, -40.292, 1.66419, 0.37", "30.9424, -40.3965, 1.68294, 0.37", "31.78, -42.0432, 2.0454, 0.49", "33.0114, -44.41, 2.58972, 0.49", "33.0687, -44.5207, 2.61651, 0.49", "34.2922, -46.9583, 3.18926, 0.49", "35.5427, -49.527, 3.73123, 0.49", "36.7316, -52.01, 4.2044, 0.24", "37.2067, -53.0369, 4.38206, 0.37", "37.2556, -53.1527, 4.4017, 0.37", "39.8086, -59.2851, 5.43965, 0.49", "40.2346, -60.3384, 5.6326, 0.12", "40.8818, -61.8877, 5.92933, 0.37", "41.5091, -63.3652, 6.22365, 0.37", "42.6429, -66.1478, 6.87313, 0.61", "42.6787, -66.2453, 6.89957, 0.61", "43.1636, -67.9056, 7.37476, 0.61", "43.6791, -69.7994, 7.87965, 0.37", "44.0697, -71.3778, 8.25475, 0.24", "44.6312, -73.5818, 8.67655, 0.61", "44.9675, -74.7975, 8.8421, 0.61", "45.4915, -76.552, 9.0202, 0.49", "45.9218, -77.8556, 9.07817, 0.24", "45.9563, -77.9572, 9.08153, 0.24", "46.5004, -79.4461, 9.11843, 0.24", "46.7303, -79.9691, 9.13191, 0.24", "47.2754, -80.9198, 9.14499, 0.61", "47.916, -81.8565, 9.17291, 0.37", "49.0953, -83.3814, 9.14068, 0.24", "49.1785, -83.4813, 9.13451, 0.24", "50.4011, -84.8777, 8.86403, 0.61", "51.8045, -86.4587, 8.42655, 0.24", "51.888, -86.5527, 8.39389, 0.24", "52.1388, -86.8542, 8.27087, 0.12", "53.3056, -88.2942, 7.59468, 1.22", "54.7292, -90.1255, 6.67293, 0.37", "55.2313, -90.8186, 6.29914, 0.37", "55.9387, -91.838, 5.72757, 0.97", "57.4661, -94.0364, 4.40596, 0.24", "58.3025, -95.242, 3.63354, 0.73", "59.1513, -96.3988, 2.86017, 0.12", "59.5402, -96.9077, 2.53359, 0.12", "60.8662, -98.6028, 1.42862, 0.85", "60.9274, -98.6816, 1.38234, 0.85", "61.2737, -99.157, 1.18527, 0.61", "62.3671, -100.886, 0.698781, 0.12", "62.5082, -101.129, 0.635424, 0.12", "62.5969, -101.283, 0.596063, 0.12", "63.8981, -103.611, 0.00741234, 0.61", "64.8587, -105.377, -0.42746, 0.12", "66.0239, -107.535, -0.925442, 1.46", "67.1003, -109.589, -1.38815, 0.12", "67.3193, -109.995, -1.474, 0.12", "67.3806, -110.107, -1.49354, 0.12", "68.5525, -112.169, -1.77598, 1.34", "69.7033, -114.123, -1.9359, 0.12", "69.7684, -114.233, -1.93312, 0.12", "70.0966, -114.776, -1.88041, 0.12", "71.2474, -116.679, -1.6894, 1.1", "71.3045, -116.771, -1.68374, 1.1", "72.025, -117.857, -1.66943, 0.12", "72.3916, -118.398, -1.6775, 0.12", "72.8102, -118.961, -1.70081, 0.12", "73.0577, -119.269, -1.72151, 0.12", "74.4045, -120.875, -1.90288, 1.46", "75.4326, -122.258, -2.13967, 0.24", "75.493, -122.347, -2.15968, 0.24", "76.0982, -123.382, -2.38733, 0.37", "76.3743, -123.945, -2.50213, 0.12", "77.0588, -125.676, -2.78757, 1.46", "77.5648, -127.759, -2.99196, 0.12", "77.575, -127.866, -2.99465, 0.12", "77.5565, -129.625, -2.90521, 0.12", "77.5309, -129.865, -2.87562, 0.12", "77.2867, -131.331, -2.61053, 0.12", "76.9946, -132.617, -2.28148, 0.24", "76.4992, -134.629, -1.65408, 1.71", "76.0811, -136.329, -1.11932, 0.12", "75.8625, -137.187, -0.845524, 0.12", "75.8273, -137.337, -0.803758, 0.12", "75.6226, -138.336, -0.576458, 0.85", "75.4074, -139.808, -0.308667, 0.12", "75.2088, -141.652, -0.0363959, 0.12", "75.2008, -141.759, -0.0271021, 0.12", "75.0569, -144.134, 0.105392, 1.46", "74.9539, -145.667, 0.182377, 0.12", "74.8283, -147.172, 0.214283, 0.37", "74.7384, -148.048, 0.223692, 0.12", "74.4369, -150.316, 0.253264, 1.83", "74.4194, -150.422, 0.257153, 1.83", "73.8637, -153.071, 0.45426, 0.12", "73.4031, -154.926, 0.62482, 0.37", "72.9916, -156.368, 0.786024, 0.12", "72.7949, -156.972, 0.870242, 0.12", "72.3274, -158.229, 1.10754, 0.97", "71.9719, -159.096, 1.35317, 0.12", "71.8737, -159.304, 1.44275, 0.12", "71.6002, -159.801, 1.75725, 0.12", "71.0387, -160.722, 2.45113, 0.85", "70.9798, -160.81, 2.52508, 0.85", "69.6721, -162.471, 4.16074, 0.12", "69.6117, -162.543, 4.23576, 0.12", "69.2361, -162.971, 4.69108, 0.12", "69.1799, -163.031, 4.76373, 0.12", "68.3574, -163.862, 5.95313, 1.1", "67.2823, -164.892, 7.483, 0.12", "67.1426, -165.019, 7.6643, 0.12", "66.6153, -165.493, 8.31881, 0.12", "65.3353, -166.657, 9.89098, 0.97", "64.2611, -167.673, 11.1814, 0.12", "63.8506, -168.072, 11.6686, 0.12", "62.8139, -169.135, 12.9094, 0.97", "61.7968, -170.234, 14.1368, 0.12", "61.6653, -170.395, 14.2921, 0.12", "61.1541, -171.124, 14.8599, 0.12", "61.1086, -171.206, 14.9139, 0.12", "60.3465, -172.906, 16.0107, 0.49", "60.3102, -173.01, 16.0758, 0.49", "59.8469, -174.632, 17.016, 1.1", "59.8148, -174.733, 17.069, 1.1", "59.3068, -176.258, 17.8032, 0.12", "59.2519, -176.424, 17.8736, 0.12", "58.9811, -177.248, 18.1452, 0.49", "58.5634, -178.509, 18.5611, 0.49", "58.0766, -179.974, 19.0445, 0.37", "58.0341, -180.088, 19.083, 0.37" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "16.0849, 39.506, -1.20141, 0.468758", "21.0295, 53.6676, -1.20141, 0.468758", "25.9741, 67.8292, -1.20141, 0.468758" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "7.56022, -51.3245, 30.3287, 0.24", "9.22505, -52.5896, 31.1138, 0.24", "10.0571, -53.2723, 31.4492, 0.61", "10.9308, -54.0039, 31.774, 0.12", "11.2525, -54.2659, 31.8893, 0.12", "12.1285, -54.984, 32.1966, 0.24", "12.458, -55.2747, 32.3056, 0.24", "13.3883, -56.2606, 32.5012, 0.24", "13.4636, -56.35, 32.5161, 0.24", "14.1967, -57.2894, 32.6537, 0.37", "14.3993, -57.5607, 32.6898, 0.37", "15.7785, -59.3948, 32.9224, 0.49", "16.8818, -60.9095, 33.1009, 0.37", "17.3049, -61.517, 33.2054, 0.37", "17.7241, -62.1338, 33.3343, 0.37", "17.9679, -62.5363, 33.4263, 0.37", "19.2187, -64.7109, 33.987, 0.37", "19.2637, -64.7961, 34.0118, 0.37", "20.2163, -66.7662, 34.6517, 0.37", "20.3265, -67.0445, 34.7467, 0.37", "20.9246, -68.8639, 35.38, 0.37", "21.322, -70.4796, 35.904, 0.37", "21.4439, -71.1903, 36.119, 0.37", "21.7991, -73.171, 36.6721, 0.37", "22.1903, -75.3928, 37.2183, 0.49", "22.2114, -75.4944, 37.2475, 0.49", "22.7534, -77.8035, 38.0152, 0.49", "22.7877, -77.9426, 38.0645, 0.49", "23.2426, -79.3156, 38.5565, 0.24", "23.2776, -79.3946, 38.5844, 0.24", "24.2497, -81.1885, 39.1317, 0.37", "24.3602, -81.3878, 39.1879, 0.37", "24.8527, -82.2719, 39.4739, 0.37", "25.6454, -83.7589, 39.9636, 0.24", "26.6759, -85.8071, 40.6237, 0.24", "27.6861, -87.8491, 41.2646, 0.37", "27.8758, -88.226, 41.3731, 0.37", "28.9177, -90.2757, 41.987, 0.85", "28.9574, -90.3541, 42.0101, 0.85", "29.6129, -91.6855, 42.3725, 0.49", "29.6542, -91.7642, 42.3911, 0.49", "30.5063, -93.3336, 42.7243, 0.37", "30.5535, -93.4201, 42.7373, 0.37", "31.4447, -95.05, 42.8616, 0.61", "32.3104, -96.5316, 42.9608, 0.61", "33.0088, -97.7146, 43.0268, 0.12", "33.1672, -97.9865, 43.0401, 0.12", "33.6598, -98.8598, 43.0775, 0.12", "33.8567, -99.1981, 43.0947, 0.12", "34.8534, -100.783, 43.2194, 0.24", "38.5347, -107.982, 44.8689, 0.24", "42.4554, -114.979, 46.8808, 0.24", "47.0179, -121.841, 47.7405, 0.24", "50.5103, -129.258, 48.5143, 0.24", "53.6188, -136.835, 49.2064, 0.24", "55.5478, -144.788, 49.3281, 0.24", "57.1536, -152.806, 49.1608, 0.24", "58.1494, -160.891, 49.7754, 0.24", "60.2575, -168.782, 50.3618, 0.24", "63.4964, -176.314, 49.6479, 0.24", "66.7635, -183.735, 48.1676, 0.24", "71.5359, -190.386, 46.7225, 0.24", "77.8754, -195.89, 46.8312, 0.24", "85.1937, -200.153, 46.5222, 0.24", "92.0649, -204.94, 47.5835, 0.24" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "7.56022, -51.3245, 30.3287, 0.61", "6.96703, -52.6965, 30.1807, 0.61", "6.93834, -52.782, 30.1751, 0.61", "6.5036, -54.2199, 30.1063, 0.61", "6.46359, -54.4172, 30.1017, 0.61", "6.35417, -55.2264, 30.0955, 0.61", "6.33856, -55.4807, 30.0994, 0.61", "6.36542, -56.5895, 30.1736, 0.61", "6.36963, -56.653, 30.1818, 0.61", "6.50666, -57.9296, 30.4037, 0.61", "6.55186, -58.3444, 30.4874, 0.61", "6.7945, -60.0909, 30.8742, 0.61", "6.8872, -60.6981, 31.0175, 0.61", "7.11322, -62.0399, 31.345, 0.85", "7.21303, -62.5845, 31.4776, 0.73", "7.23014, -62.6707, 31.4979, 0.73", "7.56306, -64.1485, 31.8168, 0.73", "7.57563, -64.2095, 31.8312, 0.73", "7.73065, -65.3296, 32.0897, 0.73", "7.75264, -65.6121, 32.1482, 0.73", "7.73413, -66.8544, 32.4221, 0.73", "7.70057, -67.1532, 32.5119, 0.73", "7.26956, -69.121, 33.2196, 0.73", "7.04524, -69.9566, 33.5352, 0.73", "6.99764, -70.1321, 33.6007, 0.73", "6.70346, -71.2878, 34.0191, 0.85", "6.43855, -72.7421, 34.4359, 1.1", "6.36371, -73.4974, 34.598, 0.49", "6.34534, -74.7476, 34.709, 0.61", "6.41555, -76.523, 34.75, 0.61", "6.42716, -76.7497, 34.7416, 0.61", "6.58135, -78.7913, 34.5096, 0.61", "6.58478, -78.8539, 34.4977, 0.61", "6.62626, -80.387, 34.1754, 0.73", "6.61624, -80.5688, 34.1345, 0.73", "6.43398, -81.4355, 33.9312, 0.49", "6.41809, -81.4861, 33.9214, 0.49", "6.01789, -82.4001, 33.8014, 0.49", "5.98436, -82.4767, 33.8052, 0.49", "5.62536, -83.3007, 33.9975, 0.73", "5.32477, -84.1711, 34.3261, 0.49", "5.20563, -84.6185, 34.5477, 0.73", "5.17353, -84.7896, 34.6426, 0.73", "4.96409, -86.665, 35.8182, 0.49", "4.96218, -86.7198, 35.8529, 0.49", "5.06966, -87.8728, 36.5302, 0.61", "5.07889, -87.9306, 36.5563, 0.61", "5.22871, -88.7965, 36.8241, 0.61", "5.23741, -88.8585, 36.8359, 0.61", "5.3248, -89.8099, 36.9133, 0.61", "5.40528, -91.4376, 37.0154, 0.61", "5.44534, -92.7894, 37.1296, 0.61", "5.47845, -94.1543, 37.2872, 1.34", "5.52594, -95.318, 37.4552, 0.61", "5.61087, -96.8112, 37.7409, 0.61", "5.63472, -97.256, 37.8474, 0.61", "5.69752, -98.6894, 38.2623, 0.61", "5.70636, -98.7751, 38.2894, 0.61", "5.87417, -99.8507, 38.6173, 0.73", "6.14827, -101.198, 38.9141, 0.73", "6.37117, -102.248, 39.0203, 0.61", "6.47828, -102.803, 39.0259, 0.49", "6.79684, -104.842, 38.8769, 0.49", "6.80845, -104.924, 38.8682, 0.49", "7.17148, -107.179, 38.6323, 0.61", "7.46508, -108.44, 38.4965, 0.49", "7.4831, -108.502, 38.492, 0.49", "7.97908, -110.14, 38.4546, 0.37", "8.01271, -110.278, 38.4567, 0.37", "8.37745, -111.957, 38.5585, 0.73", "8.55992, -112.73, 38.6528, 0.37", "8.72565, -113.401, 38.7279, 0.61", "9.14111, -114.927, 38.8326, 0.73", "9.67567, -116.825, 38.8194, 0.73", "9.74612, -117.095, 38.8014, 0.73", "10.0189, -118.511, 38.5884, 0.49", "10.0829, -118.876, 38.5175, 0.49", "10.3373, -120.173, 38.2265, 0.37", "10.6123, -121.417, 37.9126, 0.49", "10.6253, -121.478, 37.8955, 0.49", "10.8681, -122.832, 37.4843, 0.37", "11.133, -124.608, 36.9353, 0.61", "11.1997, -125.018, 36.8137, 1.1", "11.2116, -125.078, 36.7933, 1.1", "11.565, -126.333, 36.3505, 0.37", "11.6177, -126.494, 36.2963, 0.37", "11.9598, -127.343, 36.022, 0.49", "12.008, -127.471, 35.9759, 0.49", "12.3683, -128.54, 35.5706, 0.24", "12.4552, -128.833, 35.4688, 0.24", "12.7859, -130.129, 35.0536, 0.37", "12.796, -130.188, 35.0313, 0.37", "12.8952, -131.264, 34.5809, 0.73", "12.9048, -131.394, 34.531, 0.73", "13.015, -132.998, 33.9977, 0.49", "13.0209, -133.049, 33.9821, 0.49", "13.2151, -134.291, 33.6415, 0.24", "13.2272, -134.353, 33.629, 0.24", "13.5873, -135.915, 33.464, 0.49", "13.787, -136.587, 33.4305, 0.49", "14.1256, -137.528, 33.4616, 0.49", "14.2179, -137.765, 33.4827, 0.49", "14.6095, -138.728, 33.6197, 0.85", "15.1042, -140.026, 33.8172, 0.37", "15.6768, -141.624, 34.0819, 0.49", "15.8918, -142.315, 34.1989, 0.49", "16.1236, -143.229, 34.3542, 0.85", "16.2565, -143.945, 34.471, 0.85", "16.3019, -144.399, 34.5198, 0.37", "16.3036, -144.457, 34.5222, 0.37", "16.2784, -145.529, 34.4973, 0.49", "16.2732, -146.086, 34.452, 0.49", "16.3106, -146.71, 34.3523, 0.12", "16.4935, -148.077, 34.0642, 0.37", "16.509, -148.161, 34.0452, 0.37", "16.6381, -148.767, 33.9173, 0.49", "16.653, -148.828, 33.9047, 0.49", "16.9682, -150.087, 33.6777, 0.61", "17.1238, -150.747, 33.5953, 0.12", "17.3339, -151.766, 33.5543, 0.61", "17.4977, -152.6, 33.5503, 0.85", "17.5227, -152.726, 33.5488, 0.85", "17.6141, -153.162, 33.5466, 0.85", "17.8357, -154.117, 33.4964, 0.37", "18.283, -155.782, 33.236, 0.97", "18.5377, -156.573, 33.0436, 1.34", "18.9219, -157.561, 32.7446, 0.12", "18.9466, -157.617, 32.7252, 0.12", "19.6761, -159.036, 32.1669, 1.34", "20.1048, -159.745, 31.838, 1.34", "20.4901, -160.258, 31.574, 0.37", "20.9937, -160.842, 31.2943, 0.61", "21.0522, -160.902, 31.2767, 0.61", "21.5464, -161.407, 31.2704, 0.12", "21.5819, -161.447, 31.2822, 0.12", "21.9801, -162.043, 31.479, 0.12", "22.0303, -162.133, 31.5069, 0.12", "22.5094, -163.033, 31.7629, 1.46", "23.0712, -164.049, 32.03, 0.12", "23.4927, -164.818, 32.2072, 1.1", "24.1589, -166.093, 32.4201, 0.37", "24.2575, -166.296, 32.4429, 0.61", "24.654, -167.154, 32.5257, 0.24", "25.0486, -168.04, 32.5913, 0.12", "25.4554, -168.978, 32.601, 1.22", "25.8878, -170.004, 32.7702, 0.37", "26.2302, -170.922, 33.0641, 1.83", "26.5648, -171.983, 33.5551, 0.12", "26.5849, -172.056, 33.6007, 0.12", "26.7897, -172.824, 34.2426, 0.85", "27.5917, -175.364, 36.984, 0.12", "27.6071, -175.406, 37.0397, 0.12", "27.7445, -175.733, 37.549, 1.1", "27.9325, -176.124, 38.1814, 0.12", "27.9473, -176.154, 38.226, 0.12", "28.1407, -176.516, 38.7365, 0.12", "28.4887, -177.182, 39.2717, 0.12", "28.5134, -177.229, 39.3092, 0.12", "29.0158, -178.187, 40.0609, 0.49", "29.0358, -178.227, 40.093, 0.49", "29.4952, -179.113, 40.8076, 0.49", "29.9238, -179.899, 41.446, 0.12", "30.2228, -180.397, 41.8083, 0.37", "30.4504, -180.78, 42.06, 0.12" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-8.70354, -32.1964, 3.88135, 0.73", "-11.1328, -33.5278, 3.89282, 0.73", "-13.1127, -34.6129, 3.90216, 0.73", "-16.4429, -36.4381, 3.91788, 0.97" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-8.70354, -32.1964, 3.88135, 0.61", "-8.42861, -34.3588, 3.94317, 0.61", "-8.41297, -34.4818, 3.94668, 0.61", "-8.21051, -36.0743, 3.99221, 0.61", "-8.11913, -36.793, 4.01275, 0.61", "-7.65517, -40.4421, 4.11707, 0.85" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-13.2901, 35.7617, 16.301, 0.37", "-13.3629, 38.9492, 16.3459, 0.37", "-13.4016, 42.2878, 16.4892, 0.37", "-13.4305, 45.1774, 16.8556, 0.37", "-13.432, 45.2962, 16.8754, 0.37", "-13.4494, 48.5865, 17.5405, 0.37", "-13.4562, 51.8729, 18.2715, 0.37", "-13.4587, 51.9947, 18.3148, 0.37", "-13.5736, 55.234, 19.7561, 0.37", "-13.5789, 55.396, 19.8418, 0.37", "-13.7065, 58.2764, 21.5166, 0.49", "-13.7095, 58.3682, 21.5767, 0.49", "-13.7058, 60.875, 23.1118, 0.24", "-13.6251, 62.9782, 24.3482, 0.24", "-13.4426, 65.2718, 25.637, 0.49", "-13.4281, 65.3861, 25.6968, 0.49", "-13.0873, 67.3547, 26.6555, 0.49", "-12.7741, 68.9134, 27.2868, 0.24", "-12.4816, 70.1247, 27.675, 0.49", "-12.4465, 70.2838, 27.7214, 0.49", "-12.0127, 73.5801, 28.3638, 0.49", "-12.007, 73.6878, 28.3795, 0.49", "-12.0338, 76.2303, 28.6428, 0.49", "-12.0409, 76.3386, 28.6518, 0.49", "-12.2179, 77.8189, 28.7561, 0.37", "-13.0288, 82.7434, 29.062, 0.37", "-13.4184, 84.4783, 29.149, 0.37", "-13.4441, 84.5842, 29.1551, 0.37", "-14.1978, 87.4815, 29.3302, 0.49", "-14.6835, 89.376, 29.4905, 0.37", "-14.7176, 89.5001, 29.505, 0.24", "-15.3449, 91.7437, 29.8487, 0.97", "-15.9166, 93.973, 30.2096, 0.12", "-15.9707, 94.2213, 30.2577, 0.12", "-16.3865, 96.4675, 30.8146, 0.37", "-16.902, 100.208, 31.8048, 0.37", "-17.1343, 102.787, 32.5146, 0.37", "-17.1379, 102.911, 32.5488, 0.37", "-17.0711, 105.078, 33.0502, 0.37", "-16.94, 106.354, 33.3035, 0.37", "-16.5235, 108.681, 33.702, 1.22", "-16.1096, 110.372, 33.8846, 0.37", "-15.2916, 113.749, 34.0032, 0.37", "-14.6406, 116.754, 33.959, 0.85", "-14.1955, 119.064, 33.8158, 0.85", "-14.1771, 119.171, 33.8075, 0.85", "-13.782, 122.212, 33.6345, 0.37", "-13.6624, 123.746, 33.5618, 0.12", "-13.6527, 125.67, 33.6144, 0.97", "-13.7645, 126.946, 33.7604, 1.22", "-14.009, 128.369, 33.9905, 0.24", "-14.4974, 130.699, 34.4732, 0.24", "-14.8699, 132.213, 34.8788, 0.73", "-15.567, 134.841, 35.6373, 0.37", "-16.3566, 137.704, 36.5752, 0.49", "-16.8926, 139.63, 37.2563, 0.12", "-16.9188, 139.729, 37.2932, 0.12", "-17.4109, 141.845, 38.0946, 0.49", "-17.4287, 141.946, 38.1307, 0.49", "-17.7516, 144.406, 38.9185, 0.12", "-17.896, 145.635, 39.3401, 0.49", "-18.0658, 147.1, 39.8196, 0.49", "-18.1853, 147.978, 40.0865, 0.12", "-18.5239, 149.86, 40.4998, 1.1", "-18.9646, 151.582, 40.7126, 0.37", "-19.3658, 152.781, 40.7362, 0.61", "-19.732, 153.64, 40.7155, 0.37", "-19.8179, 153.805, 40.7035, 0.37", "-21.2988, 156.041, 40.4243, 1.46", "-22.6469, 157.714, 40.2935, 0.37", "-22.7644, 157.85, 40.3008, 0.37", "-23.4329, 158.602, 40.4062, 0.37", "-23.5044, 158.685, 40.4258, 0.37", "-24.4484, 159.811, 40.7591, 0.61", "-26.8492, 162.712, 41.8202, 0.61", "-28.6435, 164.995, 42.6676, 0.37", "-28.7186, 165.097, 42.7038, 0.37", "-30.3022, 167.458, 43.5212, 1.34", "-31.073, 168.766, 43.947, 0.24", "-31.1467, 168.921, 43.9941, 0.24", "-31.6563, 170.253, 44.3323, 0.12", "-31.9799, 171.362, 44.5827, 0.49", "-32.3206, 172.83, 44.9164, 0.12", "-32.511, 174.195, 45.2176, 0.61", "-32.5947, 175.236, 45.4689, 0.12", "-32.6028, 175.413, 45.5138, 0.12", "-32.5779, 176.462, 45.812, 0.49", "-32.5747, 176.567, 45.8437, 0.49", "-34.2058, 185.624, 49.5777, 0.49", "-34.9659, 194.114, 54.7397, 0.49", "-34.6027, 203.106, 58.9499, 0.49", "-34.1158, 211.897, 63.581, 0.49", "-33.8115, 220.341, 68.8746, 0.49", "-34.9054, 228.21, 74.9619, 0.49", "-36.7316, 235.364, 81.7951, 0.49" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-13.2901, 35.7617, 16.301, 0.24", "-12.7802, 38.4352, 17.1404, 0.24", "-12.7625, 38.5391, 17.1695, 0.24", "-12.5437, 40.0185, 17.5397, 0.24", "-12.2135, 42.0452, 17.9786, 0.24", "-12.1858, 42.209, 18.0125, 0.24", "-11.6257, 45.0478, 18.5771, 0.24", "-11.5784, 45.224, 18.5985, 0.24", "-11.3139, 46.475, 18.7485, 0.24", "-11.1164, 48.2087, 19.0959, 0.24", "-11.1125, 48.313, 19.1283, 0.24", "-11.0932, 49.2628, 19.4848, 0.24", "-11.095, 49.362, 19.5311, 0.24", "-11.2157, 52.6578, 21.1603, 0.24", "-11.3571, 54.9762, 22.3853, 0.24", "-11.523, 57.5319, 23.8088, 0.24", "-11.5301, 57.6283, 23.8606, 0.24", "-11.7401, 59.7765, 25.071, 0.24", "-11.8838, 61.2354, 25.9229, 0.24", "-11.8938, 61.3293, 25.9791, 0.24", "-12.0753, 63.0107, 26.9648, 0.24", "-12.4255, 65.2527, 28.2637, 0.12", "-12.6956, 66.8641, 28.9931, 0.24", "-12.7134, 66.9973, 29.0336, 0.24", "-12.8461, 68.0599, 29.2784, 0.12", "-13.2245, 71.2271, 29.7755, 0.12", "-13.5143, 73.5, 30.0012, 0.37", "-13.9469, 77.2508, 30.2333, 0.24", "-14.3501, 80.8816, 30.335, 0.24", "-14.3618, 80.99, 30.3364, 0.24", "-14.7781, 84.9165, 30.2796, 0.24", "-15.1727, 88.0866, 30.0701, 0.24", "-15.1858, 88.1949, 30.0663, 0.24", "-15.21, 88.3514, 30.0785, 0.24" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-16.0992, 9.63648, 0.0413392, 0.61", "-18.105, 9.92473, 0.511144, 0.61", "-19.5858, 10.1375, 0.857967, 0.61", "-21.8076, 10.4568, 1.37835, 0.73", "-24.3087, 10.8162, 1.96416, 0.85", "-28.4549, 11.4121, 2.93529, 1.22", "-28.5925, 11.4319, 2.9675, 1.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-16.0992, 9.63648, 0.0413392, 0.73", "-16.9741, 11.6568, 0.809258, 0.73", "-17.0105, 11.7675, 0.833602, 0.73", "-17.26, 12.9741, 1.115, 0.85", "-17.2798, 13.0882, 1.14151, 0.85", "-17.612, 14.9675, 1.49203, 0.49", "-17.6221, 15.0658, 1.50632, 0.49", "-17.7159, 17.6333, 2.01811, 0.61", "-17.7375, 20.0279, 2.61745, 0.61", "-17.7325, 20.1245, 2.64378, 0.61", "-17.4708, 22.9259, 3.58835, 0.37", "-17.146, 26.2024, 4.8982, 0.61", "-16.8035, 30.4412, 6.77511, 0.24", "-16.7818, 30.8925, 7.00333, 0.24", "-16.8048, 33.3739, 8.29051, 0.37", "-17.0485, 37.6892, 10.6007, 0.61", "-17.2357, 39.4291, 11.5893, 0.37", "-17.5242, 40.7695, 12.3804, 0.49", "-18.5017, 43.8221, 14.0182, 0.37", "-19.3591, 45.8734, 15.0828, 0.37", "-19.6789, 46.425, 15.3472, 0.37", "-19.7277, 46.5073, 15.3815, 0.37", "-20.4594, 48.1816, 16.091, 0.49", "-21.0927, 50.027, 16.8997, 0.49", "-21.5723, 52.0476, 17.5998, 0.37", "-22.0948, 54.8955, 18.4771, 0.37", "-22.6285, 58.4659, 19.4543, 0.49", "-23.1371, 62.2839, 20.2926, 0.37", "-23.148, 62.382, 20.3077, 0.37", "-23.6368, 68.7084, 20.9548, 0.37", "-23.6665, 69.299, 20.9731, 0.37", "-23.672, 69.3981, 20.9688, 0.37", "-24.0008, 71.9572, 20.584, 0.37", "-24.2422, 73.6453, 20.2888, 0.37", "-24.4057, 75.3641, 20.065, 0.37", "-24.4368, 76.3544, 19.9909, 0.49", "-24.435, 78.0907, 19.9099, 0.49", "-24.4064, 79.037, 19.8847, 0.49", "-24.1584, 82.1723, 19.9132, 0.49", "-24.0251, 83.2504, 19.9194, 0.37", "-23.8878, 84.2909, 19.9034, 0.24", "-23.6767, 85.6172, 19.8424, 0.24", "-23.3642, 87.097, 19.7254, 0.24", "-23.34, 87.2115, 19.7114, 0.24", "-22.9699, 89.2556, 19.3288, 0.24", "-22.6249, 91.0907, 18.9838, 0.24", "-22.6005, 91.205, 18.9623, 0.24", "-22.2521, 92.6555, 18.6869, 0.24", "-22.214, 92.8031, 18.6625, 0.24", "-21.8891, 93.9186, 18.4897, 0.24", "-21.605, 94.8028, 18.3648, 0.24", "-20.6472, 97.0344, 17.9733, 0.49", "-20.5896, 97.1317, 17.9328, 0.49", "-19.6296, 98.3093, 17.1496, 0.24", "-19.0436, 98.9076, 16.6552, 0.12", "-18.9643, 98.9716, 16.5895, 0.12", "-17.917, 99.6798, 15.7249, 0.24", "-14.8162, 101.5, 13.2423, 0.24", "-13.4786, 102.27, 12.1248, 0.12", "-13.3943, 102.316, 12.0495, 0.12", "-12.3037, 102.919, 11.0648, 0.12", "-12.2185, 102.965, 10.9906, 0.12", "-10.5005, 103.831, 9.68668, 0.12", "-9.83283, 112.708, 11.5703, 0.12", "-9.41558, 121.644, 13.1628, 0.12", "-7.2514, 130.445, 13.6134, 0.12", "-4.70443, 139.034, 12.285, 0.12", "-0.467002, 146.956, 10.7405, 0.12", "5.53022, 153.836, 9.49581, 0.12", "11.0181, 160.586, 6.52709, 0.12", "15.9944, 167.022, 2.24313, 0.12", "19.3787, 173.621, -3.13364, 0.12", "22.8784, 180.791, -7.5676, 0.12", "24.9825, 189.132, -10.3745, 0.12", "27.7346, 197.185, -13.5145, 0.12", "29.4684, 204.995, -17.7891, 0.12", "31.1104, 212.931, -21.8444, 0.12", "31.367, 221.328, -25.1638, 0.12", "32.0791, 229.396, -29.2016, 0.12" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "18.9093, 34.2875, 14.973, 0.37", "19.0925, 33.0013, 16.513, 0.37", "19.2561, 31.8527, 17.8883, 0.37", "19.4809, 30.2747, 19.7777, 0.61", "19.8149, 27.9302, 22.5847, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "18.9093, 34.2875, 14.973, 0.37", "17.4039, 34.0965, 14.693, 0.37", "15.8722, 33.9063, 14.5078, 0.49", "15.7721, 33.8939, 14.4979, 0.49", "14.0763, 33.7194, 14.4475, 0.24", "11.758, 33.5957, 14.4407, 0.12", "9.24964, 33.541, 14.4628, 0.37", "7.58288, 33.6088, 14.4797, 0.37", "7.49026, 33.615, 14.4851, 0.37", "5.51168, 33.8362, 14.831, 0.37", "4.17163, 34.0521, 15.2221, 0.37", "3.65836, 34.1636, 15.4236, 0.37", "2.29555, 34.5397, 16.0267, 0.24", "0.0356403, 35.2979, 16.9552, 0.24", "-2.50361, 36.0317, 18.086, 0.12", "-2.58516, 36.0525, 18.1258, 0.12", "-3.85924, 36.3184, 18.8634, 0.12", "-3.98074, 36.3387, 18.9385, 0.12", "-4.73418, 36.4054, 19.4214, 0.12", "-6.64017, 36.3913, 20.5907, 0.24", "-8.11079, 36.3097, 21.3947, 0.37", "-9.87714, 36.2077, 22.386, 0.37", "-10.757, 36.1461, 22.8614, 0.37", "-12.5007, 36.0716, 23.7575, 0.37", "-12.8281, 36.0608, 23.9319, 0.37", "-14.8129, 36.0361, 24.7917, 0.12", "-14.8995, 36.032, 24.8245, 0.12", "-16.2207, 35.9444, 25.2, 0.12", "-16.3119, 35.9501, 25.2173, 0.12", "-18.638, 36.2736, 25.4266, 0.12", "-20.8497, 36.6666, 25.4447, 0.12", "-20.9564, 36.6926, 25.4353, 0.12", "-22.5209, 37.1819, 25.2118, 0.12", "-25.5639, 38.3384, 24.6523, 0.12", "-25.6463, 38.3753, 24.6312, 0.12", "-26.7695, 39.0315, 24.1927, 0.12", "-27.9389, 39.8827, 23.7102, 0.12", "-28.0076, 39.9365, 23.6812, 0.12", "-36.2475, 39.8754, 25.5099, 0.12", "-44.5961, 39.385, 26.583, 0.12", "-52.996, 39.5405, 27.4577, 0.12", "-61.2198, 40.6679, 29.0864, 0.12", "-69.3826, 40.2647, 31.1602, 0.12", "-77.4988, 40.2423, 33.4784, 0.12", "-85.429, 41.0916, 36.2866, 0.12", "-93.7549, 40.2576, 37.244, 0.12", "-102.117, 40.1291, 38.3825, 0.12", "-110.251, 38.1111, 38.117, 0.12", "-118.58, 37.0518, 38.6965, 0.12", "-126.888, 36.8588, 40.1626, 0.12", "-135.285, 37.8735, 40.2441, 0.12", "-143.466, 39.9679, 40.7618, 0.12", "-151.702, 41.7123, 41.6071, 0.12", "-159.516, 44.2289, 43.6433, 0.12", "-166.554, 46.9759, 47.4404, 0.12", "-172.776, 50.8024, 51.6542, 0.12", "-178.248, 54.735, 56.7177, 0.12", "-183.516, 59.4651, 61.2362, 0.12", "-187.695, 64.5744, 66.3935, 0.12" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "103.747, -51.458, 44.5487, 0.12", "104.301, -50.4934, 45.6128, 0.12", "105.619, -47.8526, 47.7281, 0.12", "105.698, -47.6616, 47.8428, 0.12", "106.733, -45.1699, 49.3392, 0.12", "106.772, -45.0744, 49.3965, 0.12", "107.613, -43.0503, 50.6121, 0.12", "108.382, -40.5476, 51.859, 0.12", "108.798, -38.7869, 52.3483, 0.49", "113.704, -30.8724, 57.825, 0.49", "118.113, -22.1227, 62.2023, 0.49", "122.787, -13.1879, 65.8015, 0.49", "125.772, -3.98833, 70.3969, 0.49", "130.191, 4.9222, 74.3803, 0.49", "135.025, 12.9833, 79.6804, 0.49", "140.306, 21.048, 84.5125, 0.49", "146.262, 29.215, 88.2044, 0.49", "154.525, 35.7994, 90.7004, 0.49", "162.051, 42.6773, 94.4049, 0.49", "169.013, 50.3774, 97.3305, 0.49", "175.192, 58.9298, 99.1867, 0.49", "182.512, 66.1532, 102.556, 0.49", "190.504, 71.413, 107.897, 0.49", "199.399, 75.6738, 112.771, 0.49", "207.679, 79.8392, 118.721, 0.49", "217.452, 82.0326, 123.452, 0.49", "227.432, 83.0588, 128.215, 0.49", "237.188, 84.1622, 133.402, 0.49" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "103.747, -51.458, 44.5487, 0.12", "102.901, -51.8705, 43.807, 0.12", "102.825, -51.9006, 43.7458, 0.12", "101.465, -52.3911, 42.6739, 0.12", "101.354, -52.431, 42.5918, 0.12", "98.908, -53.314, 40.7785, 0.12", "98.8295, -53.3423, 40.7203, 0.12", "97.9184, -53.5823, 40.0268, 0.12", "97.8157, -53.6057, 39.9446, 0.12", "97.1193, -53.6901, 39.3219, 0.24", "91.0662, -53.8632, 34.3161, 0.24", "85.2545, -55.7058, 29.4249, 0.24", "78.8173, -58.7823, 26.3546, 0.24" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-16.4429, -36.4381, 3.91788, 0.24", "-18.0437, -40.0521, 3.98746, 0.24", "-18.1086, -40.1967, 3.98726, 0.24", "-19.7438, -43.3962, 4.13996, 0.49", "-20.0903, -44.0119, 4.18046, 0.49", "-22.1402, -47.4752, 4.4395, 0.49", "-23.932, -50.4811, 4.67732, 0.37", "-24.001, -50.595, 4.68106, 0.37", "-25.9296, -53.6216, 4.81733, 0.24", "-26.7542, -54.8179, 4.89593, 0.61", "-26.9544, -55.1162, 4.92184, 0.61", "-28.1555, -56.9475, 5.16233, 0.12", "-28.4043, -57.3468, 5.22727, 0.12", "-29.5043, -59.2963, 5.54097, 0.24", "-29.6367, -59.6069, 5.5861, 0.24", "-30.2317, -61.7136, 5.96767, 0.61", "-30.2694, -61.9029, 6.00328, 0.61", "-30.6016, -64.1841, 6.45141, 0.85", "-30.6423, -64.4884, 6.50502, 0.85", "-31.0084, -67.6392, 7.02389, 0.37", "-31.5339, -71.5619, 7.62691, 0.61", "-31.884, -73.9636, 8.02803, 0.24", "-31.9033, -74.1171, 8.04632, 0.24", "-32.3271, -78.0381, 8.32201, 0.37", "-32.35, -78.2569, 8.33374, 0.37", "-32.5466, -80.0994, 8.39379, 1.1", "-32.6754, -82.4479, 8.43815, 0.37", "-32.544, -85.6756, 8.50212, 0.73", "-32.5277, -85.8304, 8.50108, 0.73", "-32.3407, -87.535, 8.45698, 0.49", "-32.3002, -88.0252, 8.42834, 0.49", "-32.1338, -91.3364, 8.3305, 0.61", "-32.1297, -91.5563, 8.33867, 0.61", "-32.1931, -96.4269, 8.8805, 0.61", "-32.2901, -100.385, 9.4259, 0.12", "-32.3484, -101.776, 9.64471, 0.12", "-32.6413, -104.736, 10.1094, 1.1", "-33.1628, -107.702, 10.4717, 0.49", "-33.2318, -108.038, 10.5084, 0.49", "-34.2344, -112.057, 10.8877, 0.49", "-34.3637, -112.521, 10.9167, 0.49", "-36.1122, -118.25, 11.0808, 0.49", "-38.0796, -124.166, 10.9178, 0.49", "-38.1257, -124.29, 10.9104, 0.49", "-39.3567, -127.457, 10.6592, 0.49", "-39.5924, -128.062, 10.6206, 0.49", "-40.0549, -129.369, 10.5727, 0.24", "-40.3935, -130.489, 10.5735, 0.24", "-40.8648, -132.242, 10.6488, 1.1", "-41.6497, -135.386, 10.8094, 0.73", "-42.7044, -140.16, 11.1217, 0.73", "-42.8881, -141.032, 11.1853, 0.73", "-43.1591, -142.391, 11.3142, 0.49", "-43.4665, -144.118, 11.5376, 0.61", "-43.4948, -144.317, 11.5715, 0.61", "-43.6112, -145.369, 11.7869, 0.12", "-43.6358, -145.815, 11.8728, 0.12", "-43.6667, -147.053, 12.1757, 0.37", "-43.6492, -147.428, 12.2967, 0.37", "-43.4536, -149.458, 13.0423, 0.12", "-43.3799, -150.309, 13.3443, 0.12", "-43.1883, -152.538, 14.071, 0.73", "-43.1779, -152.664, 14.1085, 0.73", "-43.0873, -154.297, 14.5684, 0.12", "-43.074, -154.9, 14.7293, 0.12", "-43.089, -156.983, 15.2752, 0.73", "-43.1417, -158.95, 15.7477, 0.12", "-43.1507, -159.258, 15.7932, 0.12", "-43.2261, -162.156, 16.1067, 1.22", "-43.2621, -163.997, 16.2397, 0.12", "-43.2731, -165.225, 16.3053, 0.37", "-43.2706, -166.17, 16.3383, 0.12", "-43.2511, -169.223, 16.3862, 0.61", "-43.2433, -169.69, 16.3864, 0.61", "-43.1684, -171.555, 16.2923, 0.24", "-43.0932, -173.085, 16.1917, 0.24", "-42.9812, -175.395, 16.0302, 0.24", "-42.9724, -175.551, 16.018, 0.24", "-42.8871, -176.931, 15.9164, 0.37", "-42.7384, -178.75, 15.742, 0.12", "-42.723, -178.904, 15.7246, 0.12", "-42.5768, -180.281, 15.5746, 0.49", "-42.4769, -181.312, 15.4816, 0.12", "-42.4455, -181.659, 15.466, 0.12", "-42.2948, -183.446, 15.4337, 0.73", "-42.171, -185.148, 15.4854, 0.12", "-42.0834, -186.377, 15.5351, 0.61", "-42.0086, -187.451, 15.6008, 0.12", "-41.9188, -189.203, 15.7705, 0.37", "-40.358, -201.041, 15.2396, 0.37", "-36.9127, -212.447, 13.8194, 0.37", "-33.8901, -224.019, 14.2199, 0.37", "-30.6909, -235.555, 14.3206, 0.37", "-27.714, -247.109, 13.2017, 0.37", "-24.3439, -258.29, 10.2916, 0.37", "-19.09, -268.65, 6.85784, 0.37", "-15.7779, -279.025, 1.51518, 0.37", "-11.4261, -288.636, -4.61072, 0.37", "-6.62621, -297.538, -11.5371, 0.37", "-0.136104, -305.916, -17.7572, 0.37", "5.84102, -313.493, -25.4632, 0.37", "12.6097, -321.732, -31.5882, 0.37", "17.267, -330.68, -38.548, 0.37", "21.6761, -341.104, -42.8723, 0.37", "24.32, -351.262, -49.007, 0.37", "27.0582, -361.951, -53.9768, 0.37" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-16.4429, -36.4381, 3.91788, 0.12", "-18.9558, -39.5259, 6.26591, 0.12", "-20.263, -40.9944, 7.04425, 0.37", "-20.8817, -41.6139, 7.41539, 0.12", "-21.0329, -41.7402, 7.50744, 0.12", "-21.704, -42.2032, 7.85712, 0.61", "-23.0707, -43.0741, 8.52085, 0.12", "-24.5136, -43.9313, 9.02214, 0.61", "-26.6146, -45.0809, 9.76863, 0.37", "-28.2802, -45.9692, 10.4584, 0.37", "-31.0271, -47.4101, 11.7046, 0.37", "-31.2119, -47.4906, 11.7919, 0.37", "-32.7906, -48.0714, 12.5735, 0.37", "-33.0794, -48.1525, 12.7304, 0.37", "-35.6335, -48.7091, 14.1626, 0.37", "-35.8978, -48.7542, 14.3229, 0.37", "-38.8816, -49.1389, 16.2519, 0.37", "-39.1033, -49.165, 16.3925, 0.37", "-42.2356, -49.4987, 18.2621, 0.37", "-42.4651, -49.5293, 18.3883, 0.37", "-44.4871, -49.8801, 19.3587, 0.49", "-45.4744, -50.1532, 19.8133, 0.12", "-45.7414, -50.2718, 19.9181, 0.12", "-47.1819, -50.8915, 20.2279, 0.37", "-48.0272, -51.2374, 20.2595, 0.61", "-48.1738, -51.2891, 20.2593, 0.61", "-49.6498, -51.7711, 20.209, 0.12", "-50.5835, -52.0623, 20.1676, 0.12", "-53.8008, -53.2442, 19.9855, 0.24", "-55.0989, -53.854, 19.887, 0.24", "-55.2859, -53.9647, 19.8696, 0.24", "-56.7861, -54.9987, 19.7372, 0.24", "-57.039, -55.1737, 19.7139, 0.24", "-58.5039, -56.2578, 19.5954, 0.24", "-59.5945, -57.0848, 19.6441, 0.24", "-61.121, -58.1182, 19.8481, 0.24", "-61.2317, -58.1835, 19.8689, 0.24", "-64.2105, -59.8865, 20.5401, 0.24", "-64.3216, -59.9492, 20.5668, 0.24", "-67.9124, -61.8694, 21.3726, 0.24", "-68.3267, -62.0903, 21.4628, 0.24", "-70.1114, -63.0786, 21.8495, 0.24", "-72.1382, -64.3093, 22.2701, 0.37", "-74.4939, -65.9182, 22.7318, 0.37", "-79.1685, -69.3894, 23.4957, 0.37", "-80.4059, -70.3896, 23.657, 0.37", "-80.5652, -70.5227, 23.6812, 0.37", "-82.2624, -71.9792, 23.9757, 0.24", "-83.0505, -72.6732, 24.128, 0.24", "-84.5743, -74.2458, 24.4587, 0.24", "-85.6248, -75.6147, 24.734, 0.61", "-85.7199, -75.7308, 24.7558, 0.61", "-86.4974, -76.529, 24.8975, 0.24", "-86.6595, -76.6708, 24.9157, 0.24", "-88.2852, -77.9512, 25.0416, 0.24", "-88.4493, -78.0672, 25.0439, 0.24", "-89.9016, -79.1124, 24.9852, 0.24", "-91.0675, -79.9856, 24.9399, 0.12", "-92.6189, -81.2183, 24.8868, 0.12", "-101.176, -89.0223, 26.6747, 0.12", "-108.838, -97.3146, 29.6927, 0.12", "-117.037, -105.572, 30.7423, 0.12" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-7.65517, -40.4421, 4.11707, 0.37", "-6.51232, -43.9395, 3.11818, 0.37", "-5.74936, -46.6118, 2.43803, 0.37", "-5.62519, -46.9859, 2.31898, 0.37", "-4.1898, -51.0319, 0.926898, 0.49", "-4.12849, -51.1927, 0.859645, 0.49", "-2.8172, -54.538, -0.645464, 0.12", "-2.64193, -55.0142, -0.874094, 0.12", "-1.34665, -58.4873, -2.66521, 0.37", "-1.20652, -58.8317, -2.8361, 0.37", "0.620451, -62.7798, -4.70306, 0.37", "0.709385, -62.9767, -4.78641, 0.37", "1.67041, -65.1306, -5.62472, 0.37", "1.73283, -65.2974, -5.67119, 0.37", "2.11463, -66.6999, -5.86618, 0.61", "2.14885, -66.8789, -5.88065, 0.61", "2.59694, -70.6285, -5.87244, 0.12", "2.62714, -70.8079, -5.8901, 0.12", "3.0527, -72.7801, -6.19328, 0.37", "3.18523, -73.3279, -6.29246, 0.37", "3.8458, -75.8394, -6.86821, 0.12", "4.01833, -76.4387, -7.02569, 0.12", "5.47205, -81.2531, -8.37736, 1.1", "6.18109, -83.5125, -9.00059, 0.24", "6.40146, -84.1796, -9.16946, 0.24", "7.22916, -86.6037, -9.73932, 0.24", "7.28083, -86.7457, -9.77428, 0.24", "8.16632, -89.4515, -10.4203, 0.85", "8.2117, -89.626, -10.4529, 0.85", "8.75288, -91.9502, -11.0762, 0.73", "8.80958, -92.2277, -11.1577, 0.73", "9.37759, -95.1342, -12.0173, 0.24", "9.41313, -95.3072, -12.0674, 0.24", "9.89287, -97.5947, -12.7402, 0.24", "10.6466, -101.239, -13.7477, 1.1", "11.6089, -105.865, -14.9112, 0.12", "11.8095, -106.73, -15.0833, 0.12", "12.3443, -108.772, -15.3684, 0.49", "12.5041, -109.281, -15.4289, 0.49", "12.9119, -110.364, -15.5201, 0.12", "13.7472, -112.4, -15.3363, 0.49", "14.53, -114.306, -14.9653, 0.12", "15.0432, -115.722, -14.622, 0.12", "15.5979, -117.447, -14.1341, 0.12", "15.7466, -117.953, -13.9767, 0.12", "16.7537, -122.356, -12.5408, 1.22", "16.7811, -122.532, -12.4951, 1.22", "17.0543, -124.602, -12.189, 0.12", "17.1735, -125.341, -12.1344, 0.12", "17.4684, -126.856, -12.1285, 0.49", "17.935, -128.816, -12.3042, 0.12", "18.887, -131.934, -13.0513, 1.34", "19.8397, -134.807, -13.8526, 0.12", "20.3889, -136.292, -14.4207, 0.49", "20.5991, -136.792, -14.6299, 0.49", "21.3838, -138.491, -15.3899, 0.12", "23.1131, -141.796, -16.9352, 2.07", "23.1967, -141.947, -17.0029, 2.07", "25.3647, -146.052, -18.7429, 0.12", "26.658, -148.591, -19.7744, 0.49", "26.7335, -148.751, -19.829, 0.49", "28.2698, -152.323, -20.7936, 0.12", "28.9229, -154.056, -21.0765, 0.12", "29.8776, -156.811, -21.3888, 0.97", "29.9285, -156.988, -21.3784, 0.97", "30.8158, -160.712, -20.8341, 0.12", "31.0427, -161.734, -20.5453, 0.12", "31.7156, -165.128, -19.0911, 1.34", "31.8502, -165.782, -18.7611, 1.34", "32.9425, -170.609, -16.3619, 0.12", "32.9796, -170.773, -16.2873, 0.12", "33.6027, -173.69, -15.0406, 1.58", "34.0633, -175.973, -14.2491, 0.37", "34.2149, -176.837, -14.0293, 0.37", "34.9184, -180.539, -13.8112, 0.37", "35.2822, -182.286, -14.0814, 0.12", "35.4781, -183.236, -14.2982, 0.12", "35.8874, -185.441, -15.0259, 0.97", "35.9556, -185.822, -15.1653, 0.97", "36.6068, -189.524, -16.5166, 0.12", "37.0475, -191.953, -17.3409, 0.85", "37.0805, -192.124, -17.3987, 0.85", "37.7713, -195.415, -18.3452, 0.12", "37.8224, -195.665, -18.4056, 0.12", "38.1196, -196.883, -18.6765, 0.12", "38.471, -198.197, -18.895, 0.37", "38.7202, -198.876, -19.0749, 0.37", "39.7816, -201.252, -19.8707, 1.1", "39.8662, -201.402, -19.9384, 1.1", "41.7435, -204.514, -21.5524, 0.12", "41.8756, -204.72, -21.6732, 0.12", "43.1671, -206.688, -22.8941, 0.61", "43.3207, -206.923, -23.0383, 0.61", "44.6575, -208.895, -24.312, 0.12", "45.07, -209.499, -24.6881, 0.12", "45.4996, -210.136, -24.9949, 0.73", "46.8292, -212.163, -25.8126, 0.12", "47.3388, -212.971, -26.0509, 0.12", "48.598, -215.083, -26.4429, 1.1", "48.9093, -215.62, -26.4962, 1.1", "50.357, -218.176, -26.7643, 0.12", "50.6317, -218.669, -26.8065, 0.12", "51.222, -219.764, -26.8595, 0.12", "52.7398, -222.532, -27.3348, 1.46", "52.8239, -222.692, -27.3708, 1.46", "54.2295, -225.469, -28.1767, 0.12", "54.8925, -226.81, -28.6591, 0.61", "56.0362, -229.142, -29.5454, 0.12", "57.962, -233.264, -31.0974, 0.12", "59.4155, -236.452, -32.2698, 0.97", "60.5112, -238.887, -33.0192, 0.12", "60.6534, -239.204, -33.0895, 0.12", "62.006, -242.008, -33.6254, 1.1", "63.2536, -244.477, -33.9707, 0.12", "63.6736, -245.285, -34.0195, 0.12", "65.203, -248.05, -34.2108, 0.12", "66.7389, -250.846, -34.3656, 1.22", "68.4253, -254.124, -34.5715, 0.24", "68.7354, -254.774, -34.6169, 0.24", "69.3293, -256.137, -34.8056, 0.61", "69.4532, -256.477, -34.8694, 0.61", "70.1625, -259.056, -35.5079, 0.12", "70.6829, -261.574, -36.3319, 1.1", "70.7178, -261.817, -36.4166, 1.1", "71.0858, -264.821, -37.5057, 0.12", "71.1298, -265.222, -37.6478, 0.12", "71.2956, -266.868, -38.2133, 1.22", "71.5372, -269.784, -39.1755, 0.12", "71.6667, -271.028, -39.5842, 0.12", "72.029, -273.952, -40.4934, 0.12", "72.2889, -275.935, -41.046, 0.12", "72.3175, -276.112, -41.0944, 0.12", "72.8644, -279.003, -41.8952, 1.34", "73.703, -282.614, -43.0232, 0.12", "73.8986, -283.284, -43.2866, 0.12", "74.1093, -283.915, -43.6152, 0.12", "74.6841, -285.841, -44.7648, 0.61", "74.8365, -286.494, -45.169, 0.61", "75.2543, -289.018, -46.7797, 0.12", "75.2852, -289.459, -47.0531, 0.12", "75.3045, -292.441, -48.8181, 1.58", "75.1941, -294.587, -50.2346, 0.12", "75.0394, -295.877, -51.1464, 0.61", "74.9517, -296.451, -51.5687, 0.12", "74.8573, -296.9, -51.9414, 0.12", "74.491, -298.388, -53.3412, 0.97", "73.4408, -301.88, -57.0968, 0.12", "73.2989, -302.354, -57.7677, 0.73", "73.1476, -302.845, -58.5799, 0.73", "72.7926, -303.887, -60.3429, 0.12", "72.7059, -304.198, -60.8584, 0.12", "72.5897, -304.849, -61.8769, 0.61", "72.2131, -307.997, -65.9391, 0.12", "72.2009, -308.169, -66.1295, 0.12", "72.1362, -309.851, -67.6737, 1.22", "72.1619, -313.236, -70.2038, 0.12", "72.3294, -316.17, -72.0179, 0.73", "72.4751, -317.793, -72.8589, 0.12", "72.6634, -319.475, -73.55, 0.12", "72.9122, -321.494, -74.2938, 0.12", "73.3106, -324.653, -75.2941, 1.46", "73.6005, -327.447, -75.9607, 0.12", "73.6149, -327.597, -75.9926, 0.12", "73.7636, -329.23, -76.4336, 0.12", "73.9685, -331.989, -77.2907, 1.22", "74.0569, -333.973, -77.9651, 0.12", "74.0498, -334.536, -78.155, 0.12", "74.0384, -334.71, -78.2134, 0.12", "73.8204, -337.35, -79.0037, 0.61", "73.6834, -338.754, -79.4301, 0.12", "73.6506, -339.279, -79.596, 0.24", "73.6069, -340.487, -79.9407, 0.24", "73.6084, -340.659, -80.0062, 0.24", "73.6889, -342.345, -80.7397, 0.73", "73.7866, -343.471, -81.2593, 0.73", "74.0395, -345.608, -82.365, 0.12", "74.0626, -345.771, -82.448, 0.12", "74.5601, -348.809, -84.0241, 0.12", "74.7303, -349.597, -84.5171, 0.12", "74.9564, -350.511, -85.0842, 0.12", "75.2131, -351.359, -85.553, 0.12", "75.6418, -352.593, -86.2154, 1.34", "75.7455, -352.858, -86.3458, 1.34", "77.7723, -357.599, -88.3182, 0.12", "78.7601, -359.844, -89.2334, 0.12", "79.5569, -361.614, -89.9349, 0.12", "79.6274, -361.774, -89.9938, 0.12", "80.5723, -364.046, -90.709, 1.1", "81.8013, -367.387, -91.4574, 0.12", "82.137, -368.426, -91.5997, 0.12", "82.244, -368.804, -91.6594, 0.12", "82.7094, -371.222, -91.8138, 0.85", "82.9766, -373.182, -91.7494, 0.12", "83.0613, -375.745, -91.3518, 0.12", "83.0289, -376.365, -91.1977, 1.22", "82.9821, -376.822, -91.0637, 1.22", "82.32, -381.433, -89.7424, 0.12", "82.276, -381.679, -89.6708, 0.12", "81.9729, -383.583, -89.3877, 0.12", "81.9501, -383.765, -89.3889, 0.12", "81.8119, -385.555, -89.6304, 0.61", "81.8161, -387.496, -90.1619, 0.12", "81.9867, -388.852, -90.7931, 0.97", "82.5432, -391.723, -92.2151, 0.12", "82.7101, -392.346, -92.5485, 0.61", "82.7714, -392.553, -92.6588, 0.61", "83.1869, -394.384, -93.2263, 0.12", "83.5828, -397.076, -93.5139, 0.73", "83.5862, -397.243, -93.4922, 0.73", "83.3394, -399.645, -92.4804, 0.12", "83.2318, -400.191, -92.2035, 0.12", "81.6283, -405.875, -88.8597, 0.12", "81.5549, -406.067, -88.7302, 0.12", "80.3995, -408.552, -86.8702, 0.61", "79.1433, -410.778, -85.0287, 0.61", "77.9033, -412.559, -83.3464, 0.12", "77.8253, -412.661, -83.2544, 0.12", "77.2917, -413.201, -82.7729, 0.37", "76.8257, -413.684, -82.4302, 0.37", "74.2535, -416.345, -81.0539, 0.37", "74.0094, -416.59, -80.9534, 0.37", "72.9052, -417.632, -80.3928, 0.85", "72.77, -417.75, -80.3376, 0.85", "71.271, -418.962, -79.8162, 0.12", "71.1191, -419.071, -79.7817, 0.12", "69.8234, -419.892, -79.777, 0.49", "69.6821, -419.967, -79.7782, 0.49", "68.3066, -420.574, -79.8183, 0.12", "67.8627, -420.763, -79.8246, 0.12", "66.219, -421.399, -79.8043, 0.61", "65.2622, -421.762, -79.7815, 0.12", "64.9022, -421.889, -79.7661, 0.12", "63.277, -422.432, -79.7123, 0.61" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-7.65517, -40.4421, 4.11707, 0.37", "-7.97538, -41.3961, 4.00204, 0.37", "-8.35585, -42.6198, 3.84319, 0.37", "-8.41763, -42.8448, 3.81637, 0.37", "-8.81369, -44.371, 3.64204, 0.37", "-9.34221, -46.546, 3.3324, 0.49", "-9.89635, -48.942, 2.95415, 0.49", "-9.91204, -49.0292, 2.941, 0.49", "-10.0557, -49.9058, 2.78501, 0.24", "-10.0826, -50.0573, 2.75577, 0.24", "-10.3659, -51.5518, 2.43962, 0.37", "-10.4222, -51.8513, 2.37868, 0.37", "-10.97, -54.4901, 1.90146, 0.37", "-11.4422, -56.4304, 1.63802, 0.37", "-11.857, -57.8971, 1.49209, 0.49", "-11.9021, -58.0404, 1.48369, 0.49", "-12.4561, -59.6464, 1.4601, 0.49", "-12.9075, -60.8443, 1.49562, 0.37", "-13.6091, -62.5374, 1.6286, 0.49", "-14.1597, -63.8953, 1.78376, 0.37", "-14.7826, -65.476, 1.9046, 0.37", "-14.8214, -65.5751, 1.91085, 0.37", "-15.6972, -67.8193, 2.02291, 0.37", "-15.8919, -68.3504, 2.04226, 0.37", "-16.986, -71.5673, 2.08323, 0.49", "-17.4121, -72.8463, 2.15846, 0.49", "-17.9635, -74.5283, 2.32083, 0.37", "-18.0761, -74.8433, 2.35763, 0.37", "-18.2756, -75.4207, 2.41757, 0.49", "-18.31, -75.5215, 2.43085, 0.49", "-18.8986, -77.5268, 2.76837, 0.24", "-18.9189, -77.6295, 2.78502, 0.24", "-19.1719, -79.6783, 3.00476, 0.24", "-19.3745, -81.6319, 3.34804, 0.37", "-19.3871, -81.7781, 3.37826, 0.37", "-19.5219, -83.5862, 3.7761, 0.61", "-19.6539, -85.8703, 4.28736, 0.37", "-19.743, -87.5037, 4.70493, 0.73", "-19.881, -90.5658, 5.62713, 0.73", "-19.9044, -90.8606, 5.72087, 0.73", "-20.0699, -92.459, 6.20093, 0.37", "-20.0825, -92.5603, 6.22995, 0.37", "-20.2038, -93.6811, 6.49265, 0.37", "-20.2195, -93.9871, 6.53511, 0.37", "-20.1838, -95.1692, 6.52399, 0.24", "-20.1395, -95.8022, 6.5369, 0.24", "-20.0608, -96.5453, 6.5713, 0.37", "-19.9004, -97.802, 6.66574, 0.12", "-19.8681, -98.011, 6.68681, 0.12", "-19.6702, -99.1168, 6.83224, 0.61", "-19.3373, -100.774, 7.11027, 0.24", "-19.3201, -100.86, 7.12485, 0.24", "-19.1401, -101.79, 7.27696, 0.12", "-19.1235, -101.877, 7.29222, 0.12", "-18.896, -103.108, 7.51959, 0.61", "-18.8816, -103.212, 7.53741, 0.61", "-18.7633, -104.279, 7.70624, 0.12", "-18.7245, -105.361, 7.86042, 0.61", "-18.7969, -106.749, 8.10028, 0.12", "-18.8084, -106.885, 8.12713, 0.12", "-18.9083, -107.839, 8.37447, 0.85", "-18.9196, -107.941, 8.40494, 0.85", "-19.0773, -108.999, 8.81265, 0.12", "-19.286, -110.284, 9.3823, 0.61", "-19.4248, -111.254, 9.7979, 0.12", "-19.5689, -112.491, 10.3114, 0.12", "-19.6033, -112.928, 10.4891, 1.1", "-19.7004, -114.361, 11.0233, 0.12", "-19.7062, -114.488, 11.0613, 0.12", "-19.8084, -115.575, 11.2166, 0.49", "-19.8232, -115.68, 11.2209, 0.49", "-19.9037, -116.301, 11.1731, 0.12", "-19.9208, -116.444, 11.1569, 0.12", "-20.0415, -117.578, 11.0058, 1.1", "-20.1598, -118.723, 10.896, 0.49", "-20.2912, -120.289, 10.8132, 0.37", "-20.3434, -121.174, 10.7777, 0.12", "-20.3639, -122.168, 10.7369, 0.37", "-20.3378, -123.222, 10.6783, 0.49", "-20.2486, -124.569, 10.5443, 0.12", "-20.0858, -126.159, 10.34, 0.85", "-19.9479, -127.204, 10.1906, 0.85", "-19.7689, -128.396, 10.0262, 0.12", "-19.5183, -129.866, 9.80148, 0.85", "-19.3697, -130.86, 9.7002, 0.85", "-19.1719, -132.422, 9.66809, 0.24", "-19.1334, -132.766, 9.68238, 0.24", "-19.0144, -134.437, 9.84482, 0.97", "-19.0114, -134.525, 9.85836, 0.97", "-18.9656, -136.73, 10.2798, 0.12", "-18.9303, -138.641, 10.6773, 0.73", "-18.8997, -140.003, 10.8734, 0.12", "-18.8734, -141.079, 10.9686, 0.12", "-18.8509, -142.133, 10.9986, 0.12", "-18.8148, -143.732, 10.9462, 1.34", "-18.8114, -143.837, 10.9348, 1.34", "-18.7138, -146.121, 10.6141, 0.37", "-18.7081, -146.226, 10.6024, 0.37", "-18.5748, -147.572, 10.4815, 0.37", "-18.5507, -147.783, 10.4665, 0.37", "-18.3766, -149.471, 10.4599, 1.1", "-18.2059, -150.987, 10.5427, 0.12", "-18.0827, -151.997, 10.7013, 0.12", "-17.9458, -153.089, 10.9057, 0.85", "-17.9052, -153.398, 10.9722, 0.85", "-17.6861, -155.143, 11.4549, 0.12", "-17.4874, -156.953, 12.0519, 0.97", "-17.3618, -158.487, 12.6081, 0.12", "-17.3538, -158.619, 12.6523, 0.12", "-17.3706, -159.426, 12.967, 0.49", "-17.5905, -161.473, 13.8181, 0.49", "-17.6184, -161.609, 13.877, 0.49", "-17.7445, -162.001, 14.0551, 0.49", "-18.0765, -162.829, 14.3956, 0.12", "-18.8675, -164.637, 15.0841, 1.1", "-19.3264, -165.632, 15.4187, 0.12", "-19.6069, -166.293, 15.5976, 0.61", "-19.795, -166.875, 15.7479, 0.12", "-19.8599, -167.255, 15.8196, 0.12", "-19.8125, -167.869, 15.877, 0.85", "-19.502, -168.714, 15.8433, 0.12", "-18.9949, -169.491, 15.8167, 0.37", "-18.7931, -169.755, 15.8091, 0.37", "-18.0352, -170.797, 15.7951, 0.12", "-17.5149, -171.648, 15.8, 0.12", "-17.455, -171.779, 15.8059, 0.12", "-16.977, -173.14, 15.8945, 1.34", "-16.5964, -174.604, 16.0208, 0.12", "-16.2928, -176.134, 16.1878, 1.1", "-16.0715, -177.775, 16.4097, 0.12", "-15.8991, -179.708, 16.6564, 0.73", "-15.8915, -179.812, 16.6715, 0.73", "-15.8586, -180.743, 16.9356, 0.12", "-15.8516, -180.931, 17.0151, 0.12", "-15.7985, -181.993, 17.5871, 0.12", "-15.7452, -182.841, 18.1235, 0.37", "-15.6626, -184.394, 19.318, 1.46", "-15.5342, -187.136, 21.2599, 0.12", "-15.5216, -187.497, 21.5085, 0.24", "-15.5156, -187.671, 21.6173, 0.24", "-15.5138, -188.02, 21.852, 0.24", "-15.5511, -189.363, 22.77, 0.24", "-15.5491, -192.752, 23.2404, 0.24", "-15.538, -192.839, 23.1776, 0.24", "-15.4127, -193.607, 22.5181, 0.12", "-12.9857, -199.868, 17.6287, 0.12", "-11.6088, -206.687, 13.1733, 0.12", "-11.7745, -212.639, 7.33567, 0.12", "-11.7011, -218.472, 1.36437, 0.12", "-10.9758, -224.005, -4.87104, 0.12", "-9.50813, -229.412, -11.096, 0.12", "-8.58788, -233.809, -18.2386, 0.12", "-6.40746, -237.371, -25.6125, 0.12", "-3.60169, -241.252, -32.5859, 0.12", "-1.6283, -245.247, -39.7724, 0.12", "1.6586, -248.88, -46.6811, 0.12", "6.26078, -251.498, -53.3355, 0.12", "10.0015, -254.908, -60.1362, 0.12" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-15.21, 88.3514, 30.0785, 0.12", "-15.4072, 90.2518, 31.5083, 0.12", "-15.424, 90.4141, 31.6304, 0.12", "-15.5925, 92.0377, 32.8519, 0.61", "-16.3813, 101.178, 38.9718, 0.61", "-15.5917, 110.29, 45.1716, 0.61", "-15.593, 120.318, 49.6139, 0.61", "-13.8587, 129.417, 55.6629, 0.61", "-10.8744, 138.516, 61.2387, 0.61", "-7.30275, 147.085, 67.375, 0.61", "-3.27742, 155.71, 73.1471, 0.61", "2.07056, 164.304, 77.8381, 0.61", "7.40289, 173.829, 79.8436, 0.61", "11.3593, 184.056, 81.0011, 0.61", "14.6566, 194.549, 81.2265, 0.61", "19.1861, 204.611, 81.8675, 0.61", "25.7661, 213.629, 82.1133, 0.61", "33.9103, 221.414, 81.8318, 0.61", "42.7086, 228.404, 80.4113, 0.61", "52.4048, 233.898, 77.9935, 0.61", "61.1291, 240.362, 74.6506, 0.61", "69.5417, 246.763, 70.4751, 0.61", "79.062, 251.722, 66.5625, 0.61" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-15.21, 88.3514, 30.0785, 0.12", "-18.485, 90.4233, 29.8877, 0.12", "-20.5509, 91.6696, 29.6145, 0.12", "-20.6867, 91.7414, 29.5973, 0.12", "-22.6707, 92.7392, 29.3906, 0.24", "-26.8265, 95.1341, 28.8546, 0.24", "-27.0023, 95.2529, 28.8047, 0.24", "-28.4021, 96.2668, 28.1112, 0.24", "-29.5817, 97.0835, 27.4651, 0.24", "-30.8122, 97.9455, 26.8101, 0.24", "-32.6794, 99.3653, 25.8141, 0.24", "-35.793, 102.399, 24.0131, 0.24", "-36.433, 103.076, 23.5769, 0.24", "-37.5714, 104.523, 22.7784, 0.24", "-38.0658, 105.305, 22.4832, 0.24", "-38.5561, 106.241, 22.2839, 0.24", "-39.9005, 109.231, 22.2592, 0.24", "-39.9419, 109.435, 22.2956, 0.24", "-39.5655, 113.2, 23.4166, 0.24", "-38.9707, 115.238, 24.2621, 0.24", "-38.6522, 115.96, 24.6643, 0.24", "-38.571, 116.106, 24.7571, 0.24", "-37.3705, 117.967, 25.9855, 0.24", "-35.1989, 121.041, 27.713, 0.24", "-34.1324, 122.398, 28.3425, 0.24", "-32.0131, 124.831, 29.5671, 0.24", "-30.8748, 126.132, 30.2088, 0.24", "-29.7687, 127.342, 30.9049, 0.24", "-28.8054, 128.357, 31.5114, 0.24", "-28.7157, 128.438, 31.5597, 0.24", "-26.4875, 130.125, 32.7351, 0.24", "-25.1641, 131.041, 33.4563, 0.24", "-22.3162, 133.126, 35.0236, 0.24", "-20.6243, 134.46, 35.8577, 0.24", "-20.5126, 134.559, 35.8978, 0.24", "-18.6041, 136.428, 36.2144, 0.37", "-17.8552, 137.301, 36.1098, 0.37", "-16.2988, 139.241, 35.7835, 0.49", "-15.1884, 140.658, 35.455, 0.49", "-13.6381, 142.672, 35.1507, 0.37", "-12.1233, 144.644, 34.9557, 0.37", "-10.0518, 147.394, 34.8658, 0.49", "-7.50692, 150.544, 35.2462, 0.49", "-6.77191, 151.354, 35.4722, 0.37", "-4.61075, 153.517, 36.5461, 0.49", "-4.50545, 153.615, 36.6009, 0.49", "-2.58723, 155.291, 37.4651, 0.37", "-0.44862, 157.041, 38.1924, 0.24", "1.51803, 158.671, 38.3438, 0.24", "3.51624, 160.344, 38.1439, 0.24", "6.9475, 163.522, 36.9578, 0.24", "8.45086, 164.975, 36.2168, 0.12", "9.18924, 165.783, 35.57, 0.12", "9.28518, 165.922, 35.4304, 0.12", "9.55435, 166.477, 34.8297, 0.12", "10.2433, 168.114, 32.9082, 0.12", "13.2418, 179.174, 34.2446, 0.12", "14.8213, 190.337, 36.5107, 0.12", "15.1115, 201.762, 37.4656, 0.12", "15.8514, 213.217, 37.1061, 0.12", "15.0516, 224.519, 38.8236, 0.12", "11.995, 235.451, 40.469, 0.12", "9.22345, 246.563, 41.0043, 0.12", "5.09194, 257.272, 40.2678, 0.12", "-0.622284, 267.275, 39.3984, 0.12", "-7.27, 276.622, 41.0161, 0.12" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-28.5925, 11.4319, 2.9675, 0.37", "-31.996, 14.2622, 3.16761, 0.37", "-32.0823, 14.3323, 3.17704, 0.37", "-34.294, 16.0926, 3.46801, 0.37", "-36.7223, 17.8849, 3.82205, 0.37", "-38.1705, 18.8794, 4.04373, 0.37", "-40.173, 20.1003, 4.35804, 0.61", "-41.4815, 20.7571, 4.65921, 0.37", "-41.6474, 20.8327, 4.71665, 0.37", "-43.1858, 21.4351, 5.42363, 0.37", "-44.8445, 21.9902, 6.39176, 0.49", "-46.7583, 22.5057, 7.49425, 0.49", "-46.8994, 22.5401, 7.57969, 0.49", "-51.3194, 23.6168, 10.4883, 0.49", "-51.41, 23.6408, 10.5524, 0.49", "-52.6586, 24.0183, 11.5699, 0.49", "-55.6559, 24.9646, 14.3489, 0.61" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-28.5925, 11.4319, 2.9675, 0.49", "-29.8028, 11.0574, 3.33746, 0.49", "-29.9574, 10.9866, 3.38632, 0.49", "-30.8417, 10.5242, 3.6687, 0.49", "-32.3308, 9.73272, 4.10654, 0.49", "-32.4825, 9.64977, 4.14856, 0.49", "-33.5159, 9.05039, 4.43335, 0.37", "-34.6498, 8.36868, 4.73825, 0.37", "-34.761, 8.30017, 4.76817, 0.37", "-38.3607, 6.04645, 5.73716, 0.37", "-43.224, 2.99501, 7.11668, 0.37", "-45.6868, 1.45268, 7.8428, 0.24", "-45.8316, 1.36298, 7.88667, 0.24", "-49.4972, -0.806763, 9.05307, 0.24", "-49.6388, -0.889157, 9.09853, 0.24", "-51.6881, -2.02547, 9.76626, 0.24", "-53.3194, -2.79255, 10.2783, 0.12", "-53.4329, -2.83781, 10.3062, 0.12", "-55.2036, -3.48299, 10.6546, 0.24", "-57.0363, -4.06198, 10.9159, 0.37", "-59.1303, -4.70307, 11.1496, 0.37", "-61.2448, -5.30411, 11.3094, 0.24", "-63.8265, -6.031, 11.5006, 0.49", "-63.9478, -6.06745, 11.5083, 0.49", "-65.6238, -6.60483, 11.5913, 0.24", "-67.1785, -7.1099, 11.7057, 0.37", "-68.3116, -7.48741, 11.7889, 0.37", "-70.0156, -8.088, 11.9547, 0.12", "-71.3604, -8.57918, 12.1425, 0.12", "-71.4857, -8.62621, 12.1606, 0.12", "-72.8419, -9.14677, 12.3642, 0.61", "-72.9394, -9.18481, 12.3797, 0.61", "-74.1482, -9.67694, 12.5545, 0.12", "-74.2464, -9.71393, 12.5683, 0.12", "-76.2559, -10.4456, 12.8599, 0.12", "-78.2755, -11.1623, 13.024, 0.12", "-80.5889, -11.9561, 13.0985, 1.34", "-82.6092, -12.6139, 13.1013, 0.37", "-84.676, -13.2476, 13.0362, 0.49", "-84.7974, -13.2845, 13.03, 0.49", "-87.0221, -13.9481, 12.821, 0.12", "-87.1428, -13.9815, 12.8069, 0.12", "-88.8058, -14.3852, 12.6306, 1.1", "-88.9093, -14.4097, 12.6297, 1.1", "-90.598, -14.8447, 12.7692, 0.12", "-90.7296, -14.8746, 12.7826, 0.12", "-91.6578, -15.0683, 12.9134, 0.12", "-92.6738, -15.2876, 13.0319, 0.61", "-94.0381, -15.5917, 13.1573, 0.12", "-94.1989, -15.6283, 13.1616, 0.12", "-98.0812, -16.5167, 13.0504, 0.24", "-98.203, -16.548, 13.0432, 0.24", "-100.056, -17.0652, 12.8708, 0.24", "-100.213, -17.1128, 12.8512, 0.24", "-102.339, -17.7974, 12.5499, 0.97", "-102.438, -17.8328, 12.5406, 0.97", "-103.912, -18.4339, 12.506, 0.12", "-104.01, -18.473, 12.5073, 0.12", "-104.654, -18.721, 12.5412, 0.12", "-105.906, -19.224, 12.611, 0.61", "-107.3, -19.8519, 12.7362, 0.12", "-107.447, -19.9227, 12.7491, 0.12", "-107.916, -20.1596, 12.783, 0.12", "-108.009, -20.2083, 12.7908, 0.12", "-110.047, -21.2614, 13.017, 0.97", "-111.371, -21.9439, 13.1777, 0.12", "-112.205, -22.3521, 13.296, 0.12", "-112.365, -22.4274, 13.3228, 0.12", "-113.976, -23.1548, 13.6315, 1.22", "-115.534, -23.792, 14.1086, 0.12", "-115.716, -23.8518, 14.1894, 0.12", "-116.417, -24.0445, 14.5246, 0.12", "-117.276, -24.2662, 14.9535, 0.61", "-117.384, -24.2946, 15.0117, 0.61", "-119.118, -24.746, 16.0893, 0.12", "-120.274, -25.0466, 16.8926, 0.97", "-120.94, -25.2143, 17.3771, 0.12", "-121.038, -25.2383, 17.4523, 0.12", "-121.884, -25.4223, 18.1154, 0.49" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "19.8149, 27.9302, 22.5847, 0.37", "20.0732, 26.5353, 23.2761, 0.37", "20.088, 26.4558, 23.3155, 0.37", "20.3467, 25.0585, 24.0081, 0.37", "20.82, 22.5028, 25.2747, 0.37", "20.8347, 22.4234, 25.3141, 0.37", "21.0496, 21.263, 25.8892, 0.49" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "19.8149, 27.9302, 22.5847, 0.37", "21.1547, 27.0154, 22.6915, 0.37", "22.7044, 25.8289, 22.8083, 0.37", "24.0914, 24.6359, 23.068, 0.37", "24.4148, 24.3429, 23.1491, 0.37", "26.3526, 22.5609, 23.6975, 0.37", "27.5642, 21.5144, 24.0697, 0.37", "27.7226, 21.3652, 24.1362, 0.37", "29.2131, 20.0821, 25.1177, 0.24", "29.3743, 19.9691, 25.2519, 0.24", "30.0393, 19.5622, 25.917, 0.24", "30.8551, 19.0916, 26.8718, 0.24", "31.2526, 18.902, 27.289, 0.24", "32.8617, 18.1803, 28.6654, 0.24", "34.0996, 17.6383, 29.4465, 0.24", "34.196, 17.5907, 29.5011, 0.24", "35.3112, 16.8724, 30.072, 0.24", "35.6279, 16.559, 30.2579, 0.24", "36.4059, 15.6117, 30.7188, 0.24", "36.8179, 15.0303, 30.9429, 0.24", "36.9139, 14.9087, 31.0018, 0.24", "37.6186, 14.0483, 31.4618, 0.24", "39.0732, 12.2527, 32.6136, 0.24", "39.1314, 12.1847, 32.6564, 0.24", "39.9592, 11.2398, 33.24, 0.24", "40.8357, 10.4759, 33.8503, 0.37", "40.9075, 10.4244, 33.8977, 0.37", "42.3852, 9.53343, 34.7742, 0.24", "43.5155, 8.9401, 35.3606, 0.73", "43.7184, 8.83155, 35.4783, 0.73", "46.0156, 7.551, 37.1025, 0.24", "46.1001, 7.50173, 37.171, 0.24" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-55.6559, 24.9646, 14.3489, 0.37", "-59.4977, 28.6618, 15.833, 0.37", "-62.8122, 31.7342, 16.6037, 0.24", "-65.6763, 34.3542, 17.0689, 0.12", "-65.7664, 34.4393, 17.0804, 0.12", "-68.199, 36.7904, 17.3456, 0.24", "-69.4741, 38.0394, 17.448, 0.24", "-71.9545, 40.4331, 17.2056, 0.12", "-72.0635, 40.5325, 17.1924, 0.12", "-73.7648, 42.0517, 17.0147, 0.12", "-73.8764, 42.1487, 17.0077, 0.12", "-75.4823, 43.5515, 16.9963, 0.12", "-77.8776, 45.6519, 17.1364, 0.24", "-77.9886, 45.7479, 17.1531, 0.24", "-81.0983, 48.3953, 17.638, 0.24", "-81.1932, 48.4747, 17.6536, 0.24", "-82.9322, 50.0998, 17.9303, 0.24", "-83.1328, 50.3124, 17.9703, 0.24", "-85.1437, 52.7709, 18.3496, 0.24", "-85.2588, 52.9225, 18.369, 0.24", "-86.0164, 54.0283, 18.4865, 0.49", "-87.7905, 56.7693, 18.809, 0.12", "-89.1833, 59.0388, 19.0976, 0.97", "-89.9832, 60.4974, 19.2789, 0.37", "-90.064, 60.6684, 19.3012, 0.37", "-90.7683, 62.3295, 19.583, 0.85", "-91.4678, 64.176, 19.9514, 0.12", "-91.5063, 64.2881, 19.9782, 0.12", "-92.3325, 67.0038, 20.6062, 0.73", "-93.0266, 69.2101, 21.1582, 0.12", "-93.6555, 71.1477, 21.6401, 0.49", "-93.6934, 71.26, 21.6667, 0.49", "-94.2647, 72.6669, 21.9832, 0.12", "-94.3151, 72.774, 22.0127, 0.12", "-95.2417, 74.1997, 22.4344, 0.61", "-95.3192, 74.293, 22.4577, 0.61", "-96.426, 75.4609, 22.7088, 0.37", "-98.003, 76.9852, 23.0272, 0.12", "-98.8472, 77.7228, 23.1742, 0.12", "-101.462, 79.8931, 23.4761, 1.34", "-103.339, 81.3707, 23.6051, 0.12", "-103.975, 81.8537, 23.6891, 0.12", "-105.118, 82.6724, 23.8955, 0.49", "-105.81, 83.1844, 24.071, 0.12", "-107.641, 84.623, 24.6706, 1.34", "-107.722, 84.6961, 24.7291, 1.34", "-109.748, 86.7813, 26.898, 0.12", "-109.805, 86.8558, 26.9781, 0.12", "-110.502, 88.0846, 28.0212, 0.97", "-110.544, 88.1791, 28.0862, 0.97", "-111.349, 90.697, 29.3574, 0.12", "-111.417, 90.9683, 29.4229, 0.12", "-111.884, 93.2778, 29.5839, 0.61", "-112.507, 96.6459, 29.678, 0.12", "-112.532, 96.7877, 29.6775, 0.12", "-112.872, 98.7597, 29.6131, 1.71", "-113.237, 100.895, 29.4581, 0.12", "-113.505, 102.27, 29.5459, 0.61", "-113.534, 102.383, 29.5757, 0.61", "-113.977, 103.771, 30.2468, 0.12", "-114.014, 103.872, 30.3041, 0.12", "-114.457, 104.821, 30.9476, 0.97", "-115.707, 107.109, 32.8762, 0.12", "-116.421, 108.298, 33.9228, 0.24", "-116.586, 108.578, 34.1983, 0.12", "-116.641, 108.674, 34.2934, 0.12", "-117.259, 109.793, 35.3504, 0.61", "-118.104, 111.366, 36.7769, 0.12", "-118.552, 112.257, 37.4997, 0.49", "-119.881, 114.705, 39.416, 0.12", "-120.775, 116.231, 40.5363, 1.34", "-121.456, 117.354, 41.2432, 0.12", "-121.525, 117.467, 41.3014, 0.12", "-122.028, 118.266, 41.6146, 0.37", "-123.311, 120.175, 42.1775, 0.12", "-123.754, 120.745, 42.2238, 0.12", "-124.917, 122.104, 42.2675, 0.12", "-125.41, 122.653, 42.2616, 0.37", "-131.395, 131.579, 45.2842, 0.37", "-139.517, 138.218, 49.5275, 0.37", "-148.088, 143.426, 54.9042, 0.37", "-156.203, 149.862, 59.4774, 0.37", "-165.273, 155.622, 63.2258, 0.37", "-173.417, 162.773, 66.4387, 0.37", "-181.811, 170.262, 67.7019, 0.37", "-188.901, 178.993, 67.9519, 0.37", "-196.383, 187.401, 66.9356, 0.37" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-55.6559, 24.9646, 14.3489, 0.49", "-58.4238, 26.3686, 14.8173, 0.49", "-58.529, 26.431, 14.8322, 0.49", "-59.9535, 27.3155, 15.0165, 0.37", "-61.348, 28.1797, 15.1911, 0.37", "-63.8268, 29.7273, 15.4887, 0.37", "-66.1676, 31.1981, 15.8175, 0.37", "-68.2563, 32.7687, 15.9965, 0.37", "-68.3332, 32.8367, 16.0053, 0.37", "-69.565, 34.0815, 16.1804, 0.24", "-69.7554, 34.2938, 16.2139, 0.24", "-70.3905, 35.0827, 16.3494, 0.24", "-72.8009, 38.0859, 16.866, 0.24", "-74.4935, 40.2038, 17.213, 0.12", "-76.0431, 42.0741, 17.5008, 0.24", "-76.1453, 42.1952, 17.518, 0.24", "-77.0726, 43.1916, 17.6483, 0.12", "-78.2267, 44.2721, 17.7728, 0.49", "-78.3081, 44.3351, 17.7822, 0.61", "-80.5243, 45.908, 17.9922, 0.24", "-80.6851, 46.0292, 18.0066, 0.24", "-82.5723, 47.4534, 18.0658, 0.12", "-84.0429, 48.5421, 18.0577, 0.12", "-84.1272, 48.602, 18.0524, 0.12", "-85.9443, 49.852, 17.8817, 0.37", "-88.5286, 51.5598, 17.5457, 0.12", "-90.2916, 52.6967, 17.2769, 0.61", "-90.9119, 53.0831, 17.1689, 0.24", "-93.5896, 54.7006, 16.6569, 0.73", "-93.728, 54.7783, 16.6274, 0.73", "-94.6425, 55.2521, 16.4123, 0.37", "-94.8032, 55.3305, 16.3772, 0.37", "-95.5663, 55.7454, 16.2297, 0.12", "-95.6537, 55.7975, 16.2084, 0.12", "-97.2069, 56.7841, 15.7823, 0.61", "-98.7469, 57.831, 15.3401, 0.12", "-100.051, 58.7914, 14.9344, 0.12", "-100.533, 59.1557, 14.7888, 0.12", "-102.097, 60.3726, 14.3245, 0.73", "-102.177, 60.4346, 14.3037, 0.73", "-103.329, 61.3314, 14.0653, 0.24", "-104.819, 62.4421, 13.7705, 1.22", "-105.721, 63.0941, 13.5655, 0.24", "-105.861, 63.1932, 13.5364, 0.24", "-106.593, 63.7052, 13.3867, 0.61", "-107.447, 64.2871, 13.1982, 0.12", "-107.546, 64.3564, 13.1753, 0.12", "-109.747, 65.9679, 12.6619, 1.46", "-110.81, 66.8026, 12.3825, 0.12", "-110.959, 66.9237, 12.3411, 0.12", "-111.379, 67.2748, 12.2238, 0.37", "-112.389, 68.1342, 11.9597, 0.24", "-112.48, 68.2147, 11.939, 0.24", "-114.27, 69.855, 11.607, 1.34", "-115.915, 71.4287, 11.165, 0.12", "-116.402, 71.9028, 11.0064, 0.12", "-116.879, 72.3761, 10.8213, 0.73", "-117.836, 73.3158, 10.4363, 0.24", "-117.908, 73.3846, 10.4102, 0.24", "-119.241, 74.6262, 9.98863, 0.24", "-119.316, 74.6941, 9.96907, 0.24", "-120.943, 76.1057, 9.57195, 1.95", "-122.485, 77.403, 9.24138, 0.24", "-123.837, 78.5077, 8.99329, 0.24", "-124.601, 79.1191, 8.87921, 0.24", "-126.327, 80.4551, 8.71297, 1.95", "-127.971, 81.7242, 8.5641, 0.12", "-128.865, 82.4101, 8.48638, 0.24", "-128.96, 82.4862, 8.4729, 0.24" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "21.0496, 21.263, 25.8892, 0.12", "20.9541, 19.5412, 25.6029, 0.12", "20.8925, 18.5168, 25.4365, 0.24", "20.8749, 18.2239, 25.389, 0.24", "20.788, 16.7776, 25.1541, 0.24", "20.6888, 15.1271, 24.8862, 0.24", "20.5364, 12.5914, 24.4744, 0.24", "20.5163, 12.2646, 24.4245, 0.24" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "21.0496, 21.263, 25.8892, 0.37", "20.1292, 21.3917, 27.3882, 0.37", "20.0608, 21.4029, 27.5059, 0.37", "18.9691, 21.4962, 29.1958, 0.24", "17.8136, 21.4893, 30.6969, 0.24", "15.9611, 21.3767, 33.1276, 0.12", "14.3065, 21.2843, 35.2218, 0.12", "14.2211, 21.2778, 35.3299, 0.12", "12.9435, 21.1868, 36.9828, 0.12", "11.596, 21.0867, 38.8087, 0.12", "10.0327, 20.8098, 40.6371, 0.12", "8.9156, 20.5162, 41.5514, 0.49", "2.12168, 21.6644, 49.4317, 0.49" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "46.1001, 7.50173, 37.171, 0.37", "45.9377, 6.14047, 37.2395, 0.37", "45.6592, 5.2088, 37.2639, 0.61", "45.1889, 3.91815, 37.2785, 0.12", "45.1012, 3.67726, 37.2812, 0.12", "44.5901, 2.27448, 37.297, 0.12", "43.9025, 0.387312, 37.3183, 0.12", "43.1928, -1.17893, 37.2591, 0.12", "42.4876, -2.5049, 37.2116, 0.12", "38.0166, -10.1353, 36.8061, 0.12" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "46.1001, 7.50173, 37.171, 0.12", "46.8131, 8.86817, 37.8362, 0.12", "47.715, 10.5965, 38.6777, 0.37", "48.7397, 12.5602, 39.6337, 0.12", "49.8395, 14.668, 40.6598, 0.12", "50.148, 15.2591, 40.9476, 0.12", "50.2185, 15.3943, 41.0134, 0.12", "57.108, 24.5015, 46.8677, 0.12", "63.4039, 32.848, 54.3032, 0.12", "69.8916, 40.7215, 62.1202, 0.12", "75.0143, 48.2195, 71.1684, 0.12", "81.9335, 54.3107, 80.2371, 0.12", "88.5957, 58.2844, 90.6687, 0.12", "96.4817, 61.7827, 100.449, 0.12", "102.934, 64.2715, 111.507, 0.12", "110.013, 65.6912, 122.415, 0.12", "116.309, 69.6046, 133.087, 0.12", "122.134, 74.7957, 143.403, 0.12", "127.173, 78.4885, 154.775, 0.12", "129.408, 83.1689, 166.554, 0.12", "130.008, 86.8708, 178.883, 0.12", "128.899, 88.0018, 191.765, 0.12", "126.652, 89.6231, 204.409, 0.12", "123.049, 91.3339, 216.705, 0.12", "120.908, 93.1214, 229.339, 0.12", "117.378, 93.1223, 241.852, 0.12", "115.42, 92.1327, 254.717, 0.12", "112.01, 92.4235, 267.249, 0.12", "108.645, 93.4696, 279.72, 0.12" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "20.5163, 12.2646, 24.4245, 0.12", "20.644, 10.9127, 25.6815, 0.12", "20.6261, 10.6227, 25.9593, 0.12", "20.4005, 6.98, 29.4494, 0.61", "20.3471, 6.11782, 30.2754, 0.12", "20.3406, 6.01377, 30.3751, 0.12", "20.2591, 4.69779, 31.636, 0.12", "19.9006, 1.83056, 34.755, 0.12" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "20.5163, 12.2646, 24.4245, 0.12", "20.0885, 13.6663, 25.9874, 0.12", "20.0646, 13.7445, 26.0746, 0.12", "19.4087, 15.8933, 28.4706, 0.12", "19.3721, 16.013, 28.604, 0.12", "18.87, 17.658, 30.4382, 0.12", "18.4104, 19.1637, 32.1171, 0.12", "15.8793, 25.9325, 38.8808, 0.12", "14.444, 32.3577, 46.32, 0.12", "13.6791, 40.185, 52.2595, 0.12", "12.6161, 48.3326, 57.6581, 0.12", "11.4279, 55.812, 63.988, 0.12", "11.2774, 63.9159, 69.5851, 0.12", "10.7804, 71.823, 75.4465, 0.12", "8.39869, 79.4957, 81.1328, 0.12", "5.18509, 86.9893, 86.6523, 0.12", "2.03416, 94.5881, 92.0522, 0.12", "-0.522558, 102.648, 97.0416, 0.12", "-1.65192, 111.245, 101.622, 0.12", "-2.08351, 119.32, 107.24, 0.12", "-3.09608, 126.499, 113.97, 0.12", "-1.685, 133.156, 121.255, 0.12", "0.25332, 138.127, 129.803, 0.12", "2.11012, 141.17, 139.327, 0.12", "5.40501, 142.965, 148.847, 0.12", "9.83193, 143.951, 158.055, 0.12", "13.1716, 143.023, 167.739, 0.12", "16.8368, 143.766, 177.297, 0.12", "19.2035, 142.325, 187.204, 0.12", "22.35, 140.919, 196.897, 0.12", "25.762, 139.694, 206.525, 0.12" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "19.9006, 1.83056, 34.755, 0.24", "19.1101, 2.87003, 35.2294, 0.24", "19.0553, 2.90752, 35.2648, 0.24", "17.5082, 3.5402, 36.2945, 0.24", "17.4011, 3.56234, 36.3618, 0.24", "16.8146, 3.68362, 36.7303, 0.24", "16.7112, 3.70499, 36.7952, 0.24", "14.7756, 3.76631, 38.0594, 0.12", "14.7046, 3.75669, 38.1048, 0.12", "13.5354, 3.30796, 38.8459, 0.12", "7.4228, 4.97905, 41.6761, 0.12", "1.56974, 7.33205, 44.4787, 0.12" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "19.9006, 1.83056, 34.755, 0.12", "18.2981, -1.43202, 34.6993, 0.12", "14.2638, -8.87366, 33.2897, 0.12", "10.1531, -16.4274, 33.1276, 0.12", "4.9329, -23.3302, 33.6615, 0.12", "-0.861445, -29.4017, 36.0793, 0.12" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_33", "dend_20", "dend_5", "dend_0", "apic_8", "apic_1", "dend_35", "dend_34", "dend_28", "dend_21", "dend_19", "dend_6", "dend_2", "dend_1", "apic_10", "apic_9", "apic_5", "apic_2", "dend_32", "dend_29", "dend_23", "dend_22", "dend_8", "dend_7", "dend_4", "dend_3", "apic_7", "apic_6", "apic_4", "apic_3", "dend_31", "dend_30", "dend_25", "dend_24", "dend_12", "dend_9", "dend_27", "dend_26", "dend_14", "dend_13", "dend_11", "dend_10", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_33", "dend_20", "dend_5", "dend_0", "apic_8", "apic_1", "dend_35", "dend_34", "dend_28", "dend_21", "dend_19", "dend_6", "dend_2", "dend_1", "apic_10", "apic_9", "apic_5", "apic_2", "dend_32", "dend_29", "dend_23", "dend_22", "dend_8", "dend_7", "dend_4", "dend_3", "apic_7", "apic_6", "apic_4", "apic_3", "dend_31", "dend_30", "dend_25", "dend_24", "dend_12", "dend_9", "dend_27", "dend_26", "dend_14", "dend_13", "dend_11", "dend_10", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_20", "dend_20", "dend_20", "dend_20", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_5", "apic_5", "apic_5", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L6_LBC_b4f69c277d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_8, id: apic_8, parent: apic_0
create apic_8
public apic_8
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_20
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_5
create dend_19
public dend_19
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_5, id: apic_5, parent: apic_1
create apic_5
public apic_5
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_33, dend_20, dend_5, dend_0, apic_8, apic_1, dend_35, dend_34, dend_28, dend_21, dend_19, dend_6, dend_2, dend_1, apic_10, apic_9, apic_5, apic_2, dend_32, dend_29, dend_23, dend_22, dend_8, dend_7, dend_4, dend_3, apic_7, apic_6, apic_4, apic_3, dend_31, dend_30, dend_25, dend_24, dend_12, dend_9, dend_27, dend_26, dend_14, dend_13, dend_11, dend_10, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_33, dend_20, dend_5, dend_0, apic_8, apic_1, dend_35, dend_34, dend_28, dend_21, dend_19, dend_6, dend_2, dend_1, apic_10, apic_9, apic_5, apic_2, dend_32, dend_29, dend_23, dend_22, dend_8, dend_7, dend_4, dend_3, apic_7, apic_6, apic_4, apic_3, dend_31, dend_30, dend_25, dend_24, dend_12, dend_9, dend_27, dend_26, dend_14, dend_13, dend_11, dend_10, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_30
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_1, apic_1, apic_1, apic_1, apic_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4500006043839319)
    connect dend_33(0), soma_0(0.4500006043839319)
    connect dend_20(0), soma_0(0.4500006043839319)
    connect dend_5(0), soma_0(0.4500006043839319)
    connect dend_0(0), soma_0(0.4500006043839319)
    connect axon_0(0), soma_0(1.0)
    connect apic_8(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_5(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.98654, -15.1158, 0.798705, 2.92938 ) }
    soma_0 { pt3dadd( -2.52743, -13.8009, 0.698699, 4.72826 ) }
    soma_0 { pt3dadd( -2.06831, -12.4859, 0.598694, 6.02146 ) }
    soma_0 { pt3dadd( -1.6092, -11.171, 0.498688, 7.14964 ) }
    soma_0 { pt3dadd( -1.15009, -9.85607, 0.398682, 8.33277 ) }
    soma_0 { pt3dadd( -0.690973, -8.54114, 0.298676, 9.54758 ) }
    soma_0 { pt3dadd( -0.231859, -7.22621, 0.198671, 11.0147 ) }
    soma_0 { pt3dadd( 0.227255, -5.91127, 0.0986649, 13.6124 ) }
    soma_0 { pt3dadd( 0.686369, -4.59634, -0.00134088, 16.115 ) }
    soma_0 { pt3dadd( 1.14548, -3.28141, -0.101347, 17.2623 ) }
    soma_0 { pt3dadd( 1.6046, -1.96648, -0.201352, 17.8776 ) }
    soma_0 { pt3dadd( 2.06371, -0.651547, -0.301358, 19.5277 ) }
    soma_0 { pt3dadd( 2.52282, 0.663385, -0.401364, 19.9711 ) }
    soma_0 { pt3dadd( 2.98194, 1.97832, -0.50137, 18.805 ) }
    soma_0 { pt3dadd( 3.44105, 3.29325, -0.601375, 17.5645 ) }
    soma_0 { pt3dadd( 3.90017, 4.60818, -0.701381, 16.4646 ) }
    soma_0 { pt3dadd( 4.35928, 5.92311, -0.801387, 15.3765 ) }
    soma_0 { pt3dadd( 4.81839, 7.23805, -0.901393, 13.7494 ) }
    soma_0 { pt3dadd( 5.27751, 8.55298, -1.0014, 11.2862 ) }
    soma_0 { pt3dadd( 5.73662, 9.86791, -1.1014, 8.69895 ) }
    soma_0 { pt3dadd( 6.19574, 11.1828, -1.20141, 4.99589 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( -2.51015, -12.4447, 4.26139, 3.9 ) }
    apic_0 { pt3dadd( -2.77436, -16.0981, 4.30766, 2.19 ) }
    apic_0 { pt3dadd( -2.96446, -18.7266, 4.34095, 2.31 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 24/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -4.87015, -13.0052, -5.62861, 0.85 ) }
    dend_33 { pt3dadd( -6.18602, -14.7117, -5.69086, 0.73 ) }
    dend_33 { pt3dadd( -6.26338, -14.809, -5.69712, 0.73 ) }
    dend_33 { pt3dadd( -8.05374, -17.0605, -5.84199, 0.85 ) }
    dend_33 { pt3dadd( -8.11901, -17.1426, -5.84727, 0.85 ) }
    dend_33 { pt3dadd( -9.49293, -18.8704, -5.95844, 0.85 ) }
    dend_33 { pt3dadd( -11.3493, -21.205, -6.10865, 0.85 ) }
    dend_33 { pt3dadd( -12.3227, -22.3828, -6.20347, 1.1 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 32/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -6.36015, 6.7453, -1.77861, 3.66 ) }
    dend_20 { pt3dadd( -6.427, 6.78845, -1.77807, 3.66 ) }
    dend_20 { pt3dadd( -8.6664, 8.23368, -1.76001, 1.46 ) }
    dend_20 { pt3dadd( -8.73326, 8.27682, -1.75947, 1.46 ) }
    dend_20 { pt3dadd( -10.2634, 9.2643, -1.74713, 1.83 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 37/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 6.82986, 9.2058, 1.51139, 1.58 ) }
    dend_5 { pt3dadd( 8.93187, 10.0626, 1.76546, 0.97 ) }
    dend_5 { pt3dadd( 11.3233, 11.0855, 2.03787, 0.97 ) }
    dend_5 { pt3dadd( 13.8274, 12.1746, 2.31322, 1.58 ) }
    dend_5 { pt3dadd( 13.9362, 12.2269, 2.33078, 1.58 ) }
    dend_5 { pt3dadd( 16.4107, 13.7876, 2.9967, 0.97 ) }
    dend_5 { pt3dadd( 16.5596, 13.9055, 3.04354, 0.97 ) }
    dend_5 { pt3dadd( 17.6646, 15.1318, 3.47694, 0.97 ) }
    dend_5 { pt3dadd( 17.7371, 15.2477, 3.51091, 0.97 ) }
    dend_5 { pt3dadd( 18.9932, 17.7672, 3.91621, 0.85 ) }
    dend_5 { pt3dadd( 20.7761, 21.6726, 4.49092, 1.1 ) }
    dend_5 { pt3dadd( 21.6941, 24.0119, 4.77815, 0.73 ) }
    dend_5 { pt3dadd( 22.5918, 26.4609, 5.04079, 0.61 ) }
    dend_5 { pt3dadd( 24.1287, 31.1791, 5.41591, 0.61 ) }
    dend_5 { pt3dadd( 25.6841, 36.3873, 5.56573, 0.85 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 52/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 9.51985, -5.1487, -3.42861, 2.07 ) }
    dend_0 { pt3dadd( 10.8699, -6.72577, -3.43343, 0.85 ) }
    dend_0 { pt3dadd( 12.4153, -8.5311, -3.43895, 0.85 ) }
    dend_0 { pt3dadd( 12.4895, -8.61772, -3.43922, 0.85 ) }
    dend_0 { pt3dadd( 13.6347, -9.95553, -3.44331, 0.61 ) }
    dend_0 { pt3dadd( 15.0076, -11.5594, -3.44821, 1.1 ) }
    dend_0 { pt3dadd( 17.3583, -14.3054, -3.45661, 1.71 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 59/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.19574, 11.1828, -1.20141, 0.468758 ) }
    axon_0 { pt3dadd( 11.1403, 25.3444, -1.20141, 0.468758 ) }
    axon_0 { pt3dadd( 16.0849, 39.506, -1.20141, 0.468758 ) }
    // Section: apic_8, id: apic_8, parent: apic_0 (entry count 62/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -2.96446, -18.7266, 4.34095, 0.85 ) }
    apic_8 { pt3dadd( -2.55582, -19.6359, 6.60038, 0.85 ) }
    apic_8 { pt3dadd( -2.47059, -19.8456, 7.02135, 0.85 ) }
    apic_8 { pt3dadd( -1.25148, -23.1559, 12.8551, 0.85 ) }
    apic_8 { pt3dadd( -1.1184, -23.5411, 13.4448, 0.85 ) }
    apic_8 { pt3dadd( -0.708794, -24.7919, 15.1805, 1.22 ) }
    apic_8 { pt3dadd( -0.667305, -24.917, 15.3263, 1.22 ) }
    apic_8 { pt3dadd( -0.163624, -26.7662, 16.9647, 0.73 ) }
    apic_8 { pt3dadd( -0.0255765, -27.1948, 17.1377, 0.61 ) }
    apic_8 { pt3dadd( 0.590444, -28.8181, 17.0531, 0.49 ) }
    apic_8 { pt3dadd( 0.837356, -29.4743, 17.0403, 0.49 ) }
    apic_8 { pt3dadd( 2.07502, -32.632, 16.8378, 1.1 ) }
    apic_8 { pt3dadd( 2.30692, -33.2351, 16.8094, 1.1 ) }
    apic_8 { pt3dadd( 3.14464, -35.6649, 17.4707, 0.37 ) }
    apic_8 { pt3dadd( 3.35973, -36.3039, 17.7808, 0.37 ) }
    apic_8 { pt3dadd( 4.5314, -39.9279, 19.843, 0.49 ) }
    apic_8 { pt3dadd( 4.87111, -41.0319, 20.5935, 0.49 ) }
    apic_8 { pt3dadd( 5.59142, -43.5898, 22.7467, 0.61 ) }
    apic_8 { pt3dadd( 7.14949, -49.5467, 28.3622, 1.22 ) }
    apic_8 { pt3dadd( 7.56022, -51.3245, 30.3287, 1.34 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 82/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -2.96446, -18.7266, 4.34095, 0.85 ) }
    apic_1 { pt3dadd( -4.74087, -22.8959, 4.19869, 0.85 ) }
    apic_1 { pt3dadd( -5.94868, -25.7307, 4.10197, 0.85 ) }
    apic_1 { pt3dadd( -6.24237, -26.42, 4.07845, 0.85 ) }
    apic_1 { pt3dadd( -7.72923, -29.9097, 3.95938, 1.46 ) }
    apic_1 { pt3dadd( -8.70354, -32.1964, 3.88135, 2.07 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 88/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -12.3227, -22.3828, -6.20347, 0.73 ) }
    dend_35 { pt3dadd( -13.498, -22.9922, -10.2139, 0.73 ) }
    dend_35 { pt3dadd( -13.9191, -23.1754, -11.3091, 0.73 ) }
    dend_35 { pt3dadd( -15.2922, -23.7448, -14.5926, 0.24 ) }
    dend_35 { pt3dadd( -15.4271, -23.7906, -14.8583, 0.24 ) }
    dend_35 { pt3dadd( -16.1742, -23.9826, -16.0779, 0.24 ) }
    dend_35 { pt3dadd( -17.8478, -24.3677, -18.5377, 0.12 ) }
    dend_35 { pt3dadd( -19.6242, -24.7315, -20.4609, 0.24 ) }
    dend_35 { pt3dadd( -19.6996, -24.747, -20.5344, 0.24 ) }
    dend_35 { pt3dadd( -21.5615, -25.0623, -22.0675, 0.24 ) }
    dend_35 { pt3dadd( -23.3769, -25.3646, -23.4816, 0.24 ) }
    dend_35 { pt3dadd( -23.736, -25.4259, -23.7536, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_35 { pt3dadd( -26.2501, -25.8977, -25.462, 0.24 ) }
    dend_35 { pt3dadd( -26.7702, -26.0052, -25.8151, 0.24 ) }
    dend_35 { pt3dadd( -28.2705, -26.353, -26.8684, 0.24 ) }
    dend_35 { pt3dadd( -28.369, -26.3811, -26.9416, 0.24 ) }
    dend_35 { pt3dadd( -30.0835, -26.9337, -28.2563, 0.49 ) }
    dend_35 { pt3dadd( -30.18, -26.9632, -28.3315, 0.49 ) }
    dend_35 { pt3dadd( -31.2665, -27.2865, -29.1777, 0.12 ) }
    dend_35 { pt3dadd( -31.3655, -27.3138, -29.2505, 0.12 ) }
    dend_35 { pt3dadd( -32.1353, -27.5192, -29.8824, 0.24 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 9/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -12.3227, -22.3828, -6.20347, 0.49 ) }
    dend_34 { pt3dadd( -12.2436, -24.6162, -6.3451, 0.49 ) }
    dend_34 { pt3dadd( -12.2184, -26.4456, -6.57761, 0.24 ) }
    dend_34 { pt3dadd( -12.2214, -26.5528, -6.59411, 0.24 ) }
    dend_34 { pt3dadd( -12.2929, -27.8536, -6.83773, 0.24 ) }
    dend_34 { pt3dadd( -12.4018, -29.4844, -7.15998, 0.24 ) }
    dend_34 { pt3dadd( -12.5882, -31.9983, -7.59996, 0.24 ) }
    dend_34 { pt3dadd( -12.6051, -32.1838, -7.63462, 0.24 ) }
    dend_34 { pt3dadd( -12.7287, -33.2491, -7.79498, 0.24 ) }
    dend_34 { pt3dadd( -13.08, -36.3215, -8.1416, 0.37 ) }
    dend_34 { pt3dadd( -13.1129, -36.5764, -8.15758, 0.37 ) }
    dend_34 { pt3dadd( -13.457, -39.2141, -8.34554, 0.37 ) }
    dend_34 { pt3dadd( -13.7078, -40.8022, -8.44623, 0.37 ) }
    dend_34 { pt3dadd( -14.0948, -43.1994, -8.62358, 0.37 ) }
    dend_34 { pt3dadd( -14.1156, -43.3257, -8.6335, 0.37 ) }
    dend_34 { pt3dadd( -14.534, -45.6191, -8.80962, 0.37 ) }
    dend_34 { pt3dadd( -14.9622, -47.7437, -9.00087, 0.12 ) }
    dend_34 { pt3dadd( -15.413, -49.7202, -9.20649, 0.49 ) }
    dend_34 { pt3dadd( -15.7388, -51.07, -9.335, 0.12 ) }
    dend_34 { pt3dadd( -15.9716, -52.0653, -9.41221, 0.37 ) }
    dend_34 { pt3dadd( -16.2346, -53.1702, -9.44503, 0.12 ) }
    dend_34 { pt3dadd( -16.5323, -54.51, -9.43358, 0.49 ) }
    dend_34 { pt3dadd( -16.9224, -56.103, -9.20898, 0.12 ) }
    dend_34 { pt3dadd( -17.2743, -57.4256, -8.95391, 0.61 ) }
    dend_34 { pt3dadd( -17.3071, -57.5463, -8.92518, 0.61 ) }
    dend_34 { pt3dadd( -17.7001, -59.0254, -8.53142, 0.12 ) }
    dend_34 { pt3dadd( -18.0612, -60.4466, -8.11385, 1.1 ) }
    dend_34 { pt3dadd( -18.7236, -63.2886, -7.22841, 0.24 ) }
    dend_34 { pt3dadd( -18.7643, -63.4577, -7.17638, 0.24 ) }
    dend_34 { pt3dadd( -19.132, -64.9961, -6.65748, 0.24 ) }
    dend_34 { pt3dadd( -19.5694, -66.8666, -6.00979, 0.49 ) }
    dend_34 { pt3dadd( -19.5945, -66.9916, -5.99724, 0.49 ) }
    dend_34 { pt3dadd( -19.8238, -68.233, -6.06717, 0.49 ) }
    dend_34 { pt3dadd( -20.042, -69.5194, -6.31814, 0.12 ) }
    dend_34 { pt3dadd( -20.3946, -71.5087, -6.79867, 0.37 ) }
    dend_34 { pt3dadd( -20.4814, -71.9779, -6.93597, 0.37 ) }
    dend_34 { pt3dadd( -21.6662, -78.0936, -8.91259, 0.37 ) }
    dend_34 { pt3dadd( -21.7831, -78.689, -9.10701, 0.37 ) }
    dend_34 { pt3dadd( -22.008, -79.8272, -9.50163, 0.12 ) }
    dend_34 { pt3dadd( -22.3695, -81.6676, -10.1383, 0.49 ) }
    dend_34 { pt3dadd( -22.3913, -81.779, -10.1754, 0.49 ) }
    dend_34 { pt3dadd( -22.6056, -82.9019, -10.4328, 0.12 ) }
    dend_34 { pt3dadd( -22.8086, -84.0247, -10.4493, 0.49 ) }
    dend_34 { pt3dadd( -22.8529, -84.2771, -10.4424, 0.49 ) }
    dend_34 { pt3dadd( -23.1185, -85.895, -10.2824, 0.12 ) }
    dend_34 { pt3dadd( -23.4401, -87.754, -10.0208, 0.12 ) }
    dend_34 { pt3dadd( -23.5118, -88.1175, -9.96567, 0.12 ) }
    dend_34 { pt3dadd( -23.7723, -89.2252, -9.79416, 0.12 ) }
    dend_34 { pt3dadd( -24.4454, -91.7775, -9.39498, 1.83 ) }
    dend_34 { pt3dadd( -25.1817, -94.2728, -9.00617, 0.12 ) }
    dend_34 { pt3dadd( -25.6763, -95.7705, -8.75658, 0.85 ) }
    dend_34 { pt3dadd( -26.2495, -97.3717, -8.47581, 0.12 ) }
    dend_34 { pt3dadd( -26.826, -98.9594, -8.21631, 0.61 ) }
    dend_34 { pt3dadd( -27.2621, -100.151, -8.04325, 0.12 ) }
    dend_34 { pt3dadd( -27.5882, -101.107, -7.9055, 0.12 ) }
    dend_34 { pt3dadd( -28.0742, -102.593, -7.67313, 0.85 ) }
    dend_34 { pt3dadd( -28.3986, -103.674, -7.4703, 1.46 ) }
    dend_34 { pt3dadd( -28.7319, -104.869, -7.22822, 1.46 ) }
    dend_34 { pt3dadd( -29.0168, -105.955, -7.00273, 0.49 ) }
    dend_34 { pt3dadd( -29.5271, -107.889, -6.6104, 0.24 ) }
    dend_34 { pt3dadd( -29.936, -109.504, -6.29843, 0.49 ) }
    dend_34 { pt3dadd( -30.007, -109.775, -6.25223, 0.49 ) }
    dend_34 { pt3dadd( -30.6152, -111.875, -5.93845, 0.49 ) }
    dend_34 { pt3dadd( -30.9432, -112.826, -5.77737, 0.12 ) }
    dend_34 { pt3dadd( -31.1278, -113.3, -5.69366, 0.12 ) }
    dend_34 { pt3dadd( -31.572, -114.334, -5.51721, 0.49 ) }
    dend_34 { pt3dadd( -32.0388, -115.389, -5.31843, 0.12 ) }
    dend_34 { pt3dadd( -32.7888, -117.185, -4.97424, 1.22 ) }
    dend_34 { pt3dadd( -33.5426, -119.185, -4.57935, 0.24 ) }
    dend_34 { pt3dadd( -33.8204, -120.022, -4.45445, 0.24 ) }
    dend_34 { pt3dadd( -34.1537, -121.143, -4.32399, 0.73 ) }
    dend_34 { pt3dadd( -34.6153, -122.891, -4.17447, 0.12 ) }
    dend_34 { pt3dadd( -35.1815, -125.5, -4.02977, 0.49 ) }
    dend_34 { pt3dadd( -35.4137, -126.97, -4.00356, 0.97 ) }
    dend_34 { pt3dadd( -35.6057, -129.262, -4.06852, 0.24 ) }
    dend_34 { pt3dadd( -35.6093, -129.39, -4.07626, 0.37 ) }
    dend_34 { pt3dadd( -35.5869, -130.278, -4.15409, 0.37 ) }
    dend_34 { pt3dadd( -35.5527, -130.724, -4.2024, 0.12 ) }
    dend_34 { pt3dadd( -35.5223, -131.013, -4.2358, 0.12 ) }
    dend_34 { pt3dadd( -35.2439, -133.513, -4.46373, 1.34 ) }
    dend_34 { pt3dadd( -34.9828, -135.643, -4.54128, 0.12 ) }
    dend_34 { pt3dadd( -34.9524, -135.924, -4.54582, 0.12 ) }
    dend_34 { pt3dadd( -34.8401, -137.091, -4.54783, 0.61 ) }
    dend_34 { pt3dadd( -34.7576, -138.135, -4.51733, 0.12 ) }
    dend_34 { pt3dadd( -34.7277, -138.524, -4.5043, 0.12 ) }
    dend_34 { pt3dadd( -34.5961, -140.219, -4.42222, 1.22 ) }
    dend_34 { pt3dadd( -34.4891, -141.854, -4.31441, 0.12 ) }
    dend_34 { pt3dadd( -34.4769, -142.11, -4.29782, 0.12 ) }
    dend_34 { pt3dadd( -34.396, -144.515, -4.15087, 1.71 ) }
    dend_34 { pt3dadd( -34.4192, -147.807, -3.77319, 0.12 ) }
    dend_34 { pt3dadd( -34.4423, -148.319, -3.69308, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_34 { pt3dadd( -34.6531, -150.926, -3.18946, 1.71 ) }
    dend_34 { pt3dadd( -34.8575, -152.649, -2.79861, 0.24 ) }
    dend_34 { pt3dadd( -35.0559, -153.875, -2.47785, 0.73 ) }
    dend_34 { pt3dadd( -35.7171, -156.614, -1.6179, 0.12 ) }
    dend_34 { pt3dadd( -36.084, -157.761, -1.19868, 0.37 ) }
    dend_34 { pt3dadd( -36.1177, -157.859, -1.16416, 0.37 ) }
    dend_34 { pt3dadd( -36.5167, -158.861, -0.738024, 0.12 ) }
    dend_34 { pt3dadd( -36.6552, -159.194, -0.597265, 0.12 ) }
    dend_34 { pt3dadd( -37.0821, -160.208, -0.190761, 0.97 ) }
    dend_34 { pt3dadd( -37.7913, -162.032, 0.42117, 0.12 ) }
    dend_34 { pt3dadd( -37.8358, -162.146, 0.460593, 0.12 ) }
    dend_34 { pt3dadd( -38.8574, -164.787, 1.37599, 1.1 ) }
    dend_34 { pt3dadd( -39.5679, -166.625, 2.01928, 0.12 ) }
    dend_34 { pt3dadd( -39.6298, -166.787, 2.07528, 0.12 ) }
    dend_34 { pt3dadd( -40.132, -168.142, 2.53387, 0.97 ) }
    dend_34 { pt3dadd( -40.5367, -169.3, 2.88215, 0.12 ) }
    dend_34 { pt3dadd( -40.5681, -169.401, 2.90395, 0.12 ) }
    dend_34 { pt3dadd( -40.7557, -170.154, 2.9645, 0.37 ) }
    dend_34 { pt3dadd( -40.8089, -170.404, 2.98729, 0.37 ) }
    dend_34 { pt3dadd( -40.9187, -171.022, 3.04939, 0.12 ) }
    dend_34 { pt3dadd( -41.0747, -172.01, 3.15527, 0.61 ) }
    dend_34 { pt3dadd( -41.303, -173.256, 3.28191, 0.12 ) }
    dend_34 { pt3dadd( -41.3564, -173.506, 3.30559, 0.12 ) }
    dend_34 { pt3dadd( -41.498, -174.122, 3.3579, 0.61 ) }
    dend_34 { pt3dadd( -41.73, -175.012, 3.42677, 0.12 ) }
    dend_34 { pt3dadd( -41.7675, -175.134, 3.43489, 0.12 ) }
    dend_34 { pt3dadd( -42.5055, -177.135, 3.53688, 1.34 ) }
    dend_34 { pt3dadd( -42.9655, -178.184, 3.64328, 0.49 ) }
    dend_34 { pt3dadd( -43.0204, -178.299, 3.65782, 0.49 ) }
    dend_34 { pt3dadd( -43.2663, -178.82, 3.73615, 0.49 ) }
    dend_34 { pt3dadd( -43.945, -180.329, 4.09306, 0.12 ) }
    dend_34 { pt3dadd( -44.7005, -182.115, 4.63054, 1.34 ) }
    dend_34 { pt3dadd( -45.4577, -184.064, 5.32328, 0.12 ) }
    dend_34 { pt3dadd( -45.4929, -184.16, 5.36058, 0.12 ) }
    dend_34 { pt3dadd( -46.1232, -185.937, 6.19448, 1.22 ) }
    dend_34 { pt3dadd( -46.8106, -187.996, 7.33381, 0.12 ) }
    dend_34 { pt3dadd( -46.8384, -188.084, 7.39137, 0.12 ) }
    dend_34 { pt3dadd( -47.1553, -189.2, 8.19465, 0.49 ) }
    dend_34 { pt3dadd( -47.1786, -189.287, 8.25684, 0.49 ) }
    dend_34 { pt3dadd( -47.7288, -191.016, 9.47316, 0.12 ) }
    dend_34 { pt3dadd( -47.7692, -191.117, 9.54378, 0.12 ) }
    dend_34 { pt3dadd( -48.0298, -191.701, 9.82876, 0.61 ) }
    dend_34 { pt3dadd( -48.3143, -192.356, 10.0741, 0.12 ) }
    dend_34 { pt3dadd( -48.5119, -192.813, 10.2038, 0.12 ) }
    dend_34 { pt3dadd( -48.8431, -193.715, 10.3538, 1.22 ) }
    dend_34 { pt3dadd( -48.8731, -193.818, 10.3643, 1.22 ) }
    dend_34 { pt3dadd( -49.2609, -195.32, 10.54, 0.12 ) }
    dend_34 { pt3dadd( -49.5349, -196.428, 10.6846, 0.12 ) }
    dend_34 { pt3dadd( -49.56, -196.532, 10.6988, 0.12 ) }
    dend_34 { pt3dadd( -49.9258, -198.257, 10.8453, 1.46 ) }
    dend_34 { pt3dadd( -50.2652, -200.202, 10.939, 0.12 ) }
    dend_34 { pt3dadd( -50.2823, -200.309, 10.9407, 0.12 ) }
    dend_34 { pt3dadd( -50.3476, -200.847, 10.9328, 0.12 ) }
    dend_34 { pt3dadd( -50.3592, -200.954, 10.9281, 0.12 ) }
    dend_34 { pt3dadd( -50.5489, -203.082, 10.8134, 1.1 ) }
    dend_34 { pt3dadd( -50.5663, -203.367, 10.7979, 1.1 ) }
    dend_34 { pt3dadd( -50.6238, -204.892, 10.7174, 0.12 ) }
    dend_34 { pt3dadd( -50.6499, -205.742, 10.6804, 0.61 ) }
    dend_34 { pt3dadd( -50.653, -205.872, 10.6763, 0.61 ) }
    dend_34 { pt3dadd( -50.6955, -206.916, 10.6644, 0.12 ) }
    dend_34 { pt3dadd( -50.7993, -208.708, 10.6913, 1.34 ) }
    dend_34 { pt3dadd( -50.8072, -208.816, 10.6913, 1.34 ) }
    dend_34 { pt3dadd( -51.09, -211.706, 10.7109, 0.12 ) }
    dend_34 { pt3dadd( -51.149, -212.216, 10.6759, 0.12 ) }
    dend_34 { pt3dadd( -51.2776, -213.101, 10.5956, 0.49 ) }
    dend_34 { pt3dadd( -51.3858, -213.721, 10.5264, 0.12 ) }
    dend_34 { pt3dadd( -51.4118, -213.847, 10.5117, 0.12 ) }
    dend_34 { pt3dadd( -51.6688, -214.931, 10.411, 0.12 ) }
    dend_34 { pt3dadd( -52.4328, -217.705, 10.2191, 1.58 ) }
    dend_34 { pt3dadd( -53.0009, -219.656, 10.0947, 0.12 ) }
    dend_34 { pt3dadd( -53.1455, -220.139, 10.0687, 0.12 ) }
    dend_34 { pt3dadd( -53.546, -221.501, 10.0209, 0.85 ) }
    dend_34 { pt3dadd( -53.9137, -222.895, 10.0134, 0.12 ) }
    dend_34 { pt3dadd( -54.1806, -224.03, 10.0458, 0.61 ) }
    dend_34 { pt3dadd( -54.2616, -224.424, 10.095, 0.61 ) }
    dend_34 { pt3dadd( -54.3422, -225.302, 10.1991, 0.12 ) }
    dend_34 { pt3dadd( -54.3084, -226.449, 10.3692, 0.73 ) }
    dend_34 { pt3dadd( -54.0222, -227.592, 10.6456, 0.12 ) }
    dend_34 { pt3dadd( -53.9158, -227.849, 10.7263, 0.12 ) }
    dend_34 { pt3dadd( -53.6401, -228.388, 10.9197, 0.12 ) }
    dend_34 { pt3dadd( -53.1269, -229.309, 11.2726, 0.85 ) }
    dend_34 { pt3dadd( -52.6956, -230.065, 11.5704, 0.12 ) }
    dend_34 { pt3dadd( -51.6416, -231.98, 12.3239, 1.22 ) }
    dend_34 { pt3dadd( -51.5908, -232.082, 12.3629, 1.22 ) }
    dend_34 { pt3dadd( -50.9507, -233.597, 12.8957, 0.24 ) }
    dend_34 { pt3dadd( -50.9108, -233.715, 12.933, 0.24 ) }
    dend_34 { pt3dadd( -50.6056, -234.963, 13.2792, 0.49 ) }
    dend_34 { pt3dadd( -50.5606, -235.444, 13.3796, 0.24 ) }
    dend_34 { pt3dadd( -50.5929, -235.952, 13.4434, 0.24 ) }
    dend_34 { pt3dadd( -50.6796, -236.573, 13.5098, 0.61 ) }
    dend_34 { pt3dadd( -50.9123, -237.462, 13.5785, 0.12 ) }
    dend_34 { pt3dadd( -50.9713, -237.634, 13.5883, 0.12 ) }
    dend_34 { pt3dadd( -51.5595, -238.933, 13.4802, 0.49 ) }
    dend_34 { pt3dadd( -51.6942, -239.187, 13.4283, 0.12 ) }
    dend_34 { pt3dadd( -51.763, -239.293, 13.3973, 0.12 ) }
    dend_34 { pt3dadd( -52.3427, -239.953, 13.1323, 0.49 ) }
    dend_34 { pt3dadd( -52.7412, -240.298, 12.9597, 0.12 ) }
    dend_34 { pt3dadd( -53.9814, -241.226, 12.4394, 0.37 ) }
    dend_34 { pt3dadd( -54.4471, -241.487, 12.2539, 0.12 ) }
    dend_34 { pt3dadd( -55.3025, -241.879, 11.9454, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_34 { pt3dadd( -56.5702, -242.345, 11.5302, 0.85 ) }
    dend_34 { pt3dadd( -57.5775, -242.608, 11.2686, 0.12 ) }
    dend_34 { pt3dadd( -57.707, -242.634, 11.2436, 0.12 ) }
    dend_34 { pt3dadd( -59.061, -242.818, 11.0831, 0.12 ) }
    dend_34 { pt3dadd( -59.3786, -242.851, 11.0452, 0.12 ) }
    dend_34 { pt3dadd( -60.2233, -242.947, 10.9433, 0.12 ) }
    dend_34 { pt3dadd( -61.3506, -243.071, 10.8341, 0.37 ) }
    dend_34 { pt3dadd( -61.484, -243.085, 10.8239, 0.37 ) }
    dend_34 { pt3dadd( -62.0287, -243.165, 10.7929, 0.37 ) }
    dend_34 { pt3dadd( -62.3251, -243.238, 10.7906, 0.37 ) }
    dend_34 { pt3dadd( -63.1333, -243.459, 10.7867, 0.49 ) }
    // Section: dend_28, id: dend_28, parent: dend_20 (entry count 11/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -10.2634, 9.2643, -1.74713, 0.49 ) }
    dend_28 { pt3dadd( -10.4534, 12.0542, -1.16931, 0.49 ) }
    dend_28 { pt3dadd( -10.5733, 14.2112, -0.553762, 0.49 ) }
    dend_28 { pt3dadd( -10.7618, 17.9978, 0.64174, 0.49 ) }
    dend_28 { pt3dadd( -10.9294, 20.3551, 1.57454, 0.49 ) }
    dend_28 { pt3dadd( -11.0919, 21.9779, 2.43328, 0.49 ) }
    dend_28 { pt3dadd( -11.3282, 24.0077, 3.65753, 0.37 ) }
    dend_28 { pt3dadd( -11.7852, 27.0791, 5.94954, 0.61 ) }
    dend_28 { pt3dadd( -11.7997, 27.1637, 6.02424, 0.61 ) }
    dend_28 { pt3dadd( -12.2693, 29.5704, 8.53526, 0.61 ) }
    dend_28 { pt3dadd( -12.7356, 32.3903, 11.8777, 0.37 ) }
    dend_28 { pt3dadd( -12.7472, 32.4594, 11.9687, 0.37 ) }
    dend_28 { pt3dadd( -12.8643, 33.0008, 12.7582, 0.61 ) }
    dend_28 { pt3dadd( -13.1912, 34.2235, 14.5629, 0.24 ) }
    dend_28 { pt3dadd( -13.2059, 34.2896, 14.6559, 0.24 ) }
    dend_28 { pt3dadd( -13.2901, 35.7617, 16.301, 0.73 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 27/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.2634, 9.2643, -1.74713, 1.22 ) }
    dend_21 { pt3dadd( -13.0411, 9.44145, -0.895856, 1.22 ) }
    dend_21 { pt3dadd( -16.0992, 9.63648, 0.0413392, 1.46 ) }
    // Section: dend_19, id: dend_19, parent: dend_5 (entry count 30/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 25.6841, 36.3873, 5.56573, 0.61 ) }
    dend_19 { pt3dadd( 26.5268, 40.1358, 7.15146, 0.61 ) }
    dend_19 { pt3dadd( 27.0182, 42.2531, 7.94485, 0.61 ) }
    dend_19 { pt3dadd( 27.4061, 43.8902, 8.44498, 0.37 ) }
    dend_19 { pt3dadd( 27.9334, 46.1422, 8.86235, 0.37 ) }
    dend_19 { pt3dadd( 28.6557, 49.0398, 9.08073, 0.85 ) }
    dend_19 { pt3dadd( 29.1231, 50.9163, 9.08485, 0.49 ) }
    dend_19 { pt3dadd( 29.5148, 52.615, 8.85954, 0.37 ) }
    dend_19 { pt3dadd( 29.9083, 54.4041, 8.53435, 0.49 ) }
    dend_19 { pt3dadd( 30.6602, 57.5919, 7.91443, 0.49 ) }
    dend_19 { pt3dadd( 31.3672, 60.3288, 7.38279, 0.37 ) }
    dend_19 { pt3dadd( 31.8513, 62.1576, 6.96119, 0.37 ) }
    dend_19 { pt3dadd( 32.5839, 65.1058, 6.29049, 0.61 ) }
    dend_19 { pt3dadd( 32.8696, 66.3563, 6.03843, 0.73 ) }
    dend_19 { pt3dadd( 33.3286, 68.3769, 5.73379, 0.49 ) }
    dend_19 { pt3dadd( 33.8755, 70.7968, 5.50977, 1.83 ) }
    dend_19 { pt3dadd( 34.4235, 73.2299, 5.32726, 0.73 ) }
    dend_19 { pt3dadd( 34.7171, 74.4355, 5.22984, 0.73 ) }
    dend_19 { pt3dadd( 34.7397, 74.5203, 5.221, 0.73 ) }
    dend_19 { pt3dadd( 35.2858, 76.3993, 5.05442, 0.49 ) }
    dend_19 { pt3dadd( 35.3185, 76.4986, 5.05295, 0.49 ) }
    dend_19 { pt3dadd( 36.1719, 78.5969, 5.5217, 0.49 ) }
    dend_19 { pt3dadd( 36.746, 79.8305, 6.08692, 0.37 ) }
    dend_19 { pt3dadd( 37.12, 80.6033, 6.52578, 0.24 ) }
    dend_19 { pt3dadd( 37.6402, 81.7208, 7.20585, 0.12 ) }
    dend_19 { pt3dadd( 38.4699, 83.5527, 8.39944, 1.22 ) }
    dend_19 { pt3dadd( 39.4994, 85.8189, 9.88275, 0.49 ) }
    dend_19 { pt3dadd( 40.2473, 87.3256, 10.9133, 0.49 ) }
    dend_19 { pt3dadd( 40.3077, 87.4432, 10.9954, 0.49 ) }
    dend_19 { pt3dadd( 41.1281, 89.0546, 12.0934, 0.37 ) }
    dend_19 { pt3dadd( 41.5098, 89.8416, 12.5632, 0.37 ) }
    dend_19 { pt3dadd( 41.9032, 90.7092, 13.0034, 0.12 ) }
    dend_19 { pt3dadd( 42.8301, 92.9256, 13.8069, 0.85 ) }
    dend_19 { pt3dadd( 43.6585, 95.0604, 14.3992, 0.49 ) }
    dend_19 { pt3dadd( 43.6942, 95.1564, 14.4216, 0.49 ) }
    dend_19 { pt3dadd( 44.4289, 97.1747, 14.777, 0.49 ) }
    dend_19 { pt3dadd( 44.9341, 98.6248, 14.9391, 0.73 ) }
    dend_19 { pt3dadd( 45.5546, 100.537, 15.0, 0.37 ) }
    dend_19 { pt3dadd( 45.9265, 101.787, 14.9147, 0.85 ) }
    dend_19 { pt3dadd( 45.9565, 101.887, 14.9108, 0.85 ) }
    dend_19 { pt3dadd( 46.3793, 103.328, 14.9633, 0.49 ) }
    dend_19 { pt3dadd( 46.8836, 105.002, 15.0886, 0.37 ) }
    dend_19 { pt3dadd( 47.3581, 106.713, 15.2868, 0.37 ) }
    dend_19 { pt3dadd( 47.8203, 108.823, 15.6205, 0.61 ) }
    dend_19 { pt3dadd( 48.2199, 111.253, 15.9935, 0.61 ) }
    dend_19 { pt3dadd( 48.4015, 112.867, 16.2889, 0.49 ) }
    dend_19 { pt3dadd( 48.4134, 113.752, 16.4728, 0.49 ) }
    dend_19 { pt3dadd( 48.2568, 115.47, 16.9311, 0.24 ) }
    dend_19 { pt3dadd( 48.112, 116.379, 17.2437, 0.24 ) }
    dend_19 { pt3dadd( 48.096, 116.475, 17.2809, 0.24 ) }
    dend_19 { pt3dadd( 47.7596, 118.595, 18.0894, 0.12 ) }
    dend_19 { pt3dadd( 47.5354, 120.326, 18.7887, 0.24 ) }
    dend_19 { pt3dadd( 47.3445, 122.288, 19.6124, 0.12 ) }
    dend_19 { pt3dadd( 47.2464, 124.304, 20.3848, 0.37 ) }
    dend_19 { pt3dadd( 47.2531, 125.705, 20.8817, 0.37 ) }
    dend_19 { pt3dadd( 47.2571, 125.79, 20.9066, 0.37 ) }
    dend_19 { pt3dadd( 47.4055, 127.513, 21.2533, 0.61 ) }
    dend_19 { pt3dadd( 47.4154, 127.599, 21.2682, 0.61 ) }
    dend_19 { pt3dadd( 47.6184, 129.432, 21.5196, 0.12 ) }
    dend_19 { pt3dadd( 47.7243, 130.756, 21.6941, 0.73 ) }
    dend_19 { pt3dadd( 47.7923, 132.098, 21.8863, 0.24 ) }
    dend_19 { pt3dadd( 47.8651, 134.164, 22.197, 0.24 ) }
    dend_19 { pt3dadd( 47.8782, 136.552, 22.5627, 0.73 ) }
    dend_19 { pt3dadd( 47.876, 136.638, 22.5763, 0.73 ) }
    dend_19 { pt3dadd( 47.757, 138.664, 22.9197, 0.37 ) }
    dend_19 { pt3dadd( 47.7518, 138.751, 22.9295, 0.37 ) }
    dend_19 { pt3dadd( 47.715, 139.599, 22.9708, 0.24 ) }
    dend_19 { pt3dadd( 47.7146, 141.189, 22.9322, 0.49 ) }
    dend_19 { pt3dadd( 47.7716, 142.662, 22.7874, 0.12 ) }
    dend_19 { pt3dadd( 47.7801, 142.749, 22.7901, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_19 { pt3dadd( 48.0579, 144.475, 23.0621, 0.61 ) }
    dend_19 { pt3dadd( 48.4772, 146.409, 23.6311, 0.12 ) }
    dend_19 { pt3dadd( 48.6721, 147.075, 23.9299, 0.12 ) }
    dend_19 { pt3dadd( 48.7369, 147.246, 24.0356, 0.12 ) }
    dend_19 { pt3dadd( 50.2165, 150.564, 26.4425, 0.24 ) }
    dend_19 { pt3dadd( 50.2524, 150.643, 26.5051, 0.24 ) }
    dend_19 { pt3dadd( 50.6209, 151.428, 27.229, 0.12 ) }
    dend_19 { pt3dadd( 50.6514, 151.49, 27.2868, 0.12 ) }
    dend_19 { pt3dadd( 51.0262, 152.312, 27.862, 0.49 ) }
    dend_19 { pt3dadd( 51.4631, 153.341, 28.3442, 0.12 ) }
    dend_19 { pt3dadd( 51.7341, 154.024, 28.368, 0.37 ) }
    dend_19 { pt3dadd( 51.9532, 154.541, 28.378, 0.12 ) }
    dend_19 { pt3dadd( 52.4616, 155.575, 28.3606, 0.12 ) }
    dend_19 { pt3dadd( 53.3091, 157.268, 28.3593, 0.49 ) }
    dend_19 { pt3dadd( 55.4844, 164.979, 28.2351, 0.49 ) }
    dend_19 { pt3dadd( 57.118, 172.784, 27.5444, 0.49 ) }
    dend_19 { pt3dadd( 59.9821, 180.287, 27.7671, 0.49 ) }
    dend_19 { pt3dadd( 64.5168, 187.009, 27.7134, 0.49 ) }
    dend_19 { pt3dadd( 69.4603, 193.31, 29.1768, 0.49 ) }
    dend_19 { pt3dadd( 73.402, 200.296, 30.16, 0.49 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 25.6841, 36.3873, 5.56573, 0.37 ) }
    dend_6 { pt3dadd( 24.3558, 37.3315, 6.54593, 0.37 ) }
    dend_6 { pt3dadd( 22.9124, 38.0767, 7.75265, 0.37 ) }
    dend_6 { pt3dadd( 20.9292, 38.7494, 9.54859, 0.49 ) }
    dend_6 { pt3dadd( 20.7007, 38.7706, 9.80061, 0.49 ) }
    dend_6 { pt3dadd( 19.7029, 38.8631, 10.901, 0.37 ) }
    dend_6 { pt3dadd( 19.6387, 38.8691, 10.9719, 0.37 ) }
    dend_6 { pt3dadd( 18.9091, 37.6542, 12.7034, 0.24 ) }
    dend_6 { pt3dadd( 18.742, 36.6192, 13.6118, 0.12 ) }
    dend_6 { pt3dadd( 18.9093, 34.2875, 14.973, 0.61 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 30/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 17.3583, -14.3054, -3.45661, 0.24 ) }
    dend_2 { pt3dadd( 22.2712, -15.7424, 4.31794, 0.24 ) }
    dend_2 { pt3dadd( 22.3658, -15.7705, 4.4481, 0.24 ) }
    dend_2 { pt3dadd( 24.0156, -16.2976, 6.44179, 0.24 ) }
    dend_2 { pt3dadd( 25.4398, -16.7441, 7.97852, 0.24 ) }
    dend_2 { pt3dadd( 29.503, -17.9443, 11.9618, 0.85 ) }
    dend_2 { pt3dadd( 34.067, -19.2001, 16.0587, 0.37 ) }
    dend_2 { pt3dadd( 36.9326, -19.8634, 17.9742, 1.1 ) }
    dend_2 { pt3dadd( 39.2091, -20.387, 19.3537, 0.37 ) }
    dend_2 { pt3dadd( 41.0733, -20.8505, 20.3353, 0.37 ) }
    dend_2 { pt3dadd( 42.4188, -21.2697, 20.8654, 0.61 ) }
    dend_2 { pt3dadd( 44.0711, -21.9551, 21.1657, 0.49 ) }
    dend_2 { pt3dadd( 46.3059, -22.9907, 21.231, 0.49 ) }
    dend_2 { pt3dadd( 48.1048, -24.0558, 21.3652, 0.49 ) }
    dend_2 { pt3dadd( 50.1863, -25.4227, 21.6617, 0.49 ) }
    dend_2 { pt3dadd( 51.5691, -26.4285, 21.9576, 0.73 ) }
    dend_2 { pt3dadd( 53.3492, -27.7372, 22.4707, 0.24 ) }
    dend_2 { pt3dadd( 53.4745, -27.8285, 22.515, 0.24 ) }
    dend_2 { pt3dadd( 55.9336, -29.6162, 23.5625, 0.24 ) }
    dend_2 { pt3dadd( 58.0988, -30.9649, 24.6173, 0.37 ) }
    dend_2 { pt3dadd( 59.0412, -31.4264, 25.0592, 0.37 ) }
    dend_2 { pt3dadd( 60.5979, -32.0613, 25.7126, 0.37 ) }
    dend_2 { pt3dadd( 60.7449, -32.1114, 25.7619, 0.37 ) }
    dend_2 { pt3dadd( 62.713, -32.8396, 26.2134, 0.37 ) }
    dend_2 { pt3dadd( 62.8404, -32.8886, 26.2258, 0.37 ) }
    dend_2 { pt3dadd( 65.0729, -34.0282, 26.8577, 0.37 ) }
    dend_2 { pt3dadd( 65.2076, -34.085, 26.9295, 0.37 ) }
    dend_2 { pt3dadd( 66.4196, -34.4926, 27.7418, 0.49 ) }
    dend_2 { pt3dadd( 66.5446, -34.532, 27.8391, 0.49 ) }
    dend_2 { pt3dadd( 67.8109, -34.9009, 28.9173, 0.24 ) }
    dend_2 { pt3dadd( 70.5845, -35.7879, 31.2307, 0.24 ) }
    dend_2 { pt3dadd( 72.0775, -36.2939, 32.4858, 0.49 ) }
    dend_2 { pt3dadd( 73.5162, -36.8243, 33.633, 0.37 ) }
    dend_2 { pt3dadd( 76.4147, -37.9796, 35.8394, 0.37 ) }
    dend_2 { pt3dadd( 76.6294, -38.0551, 35.9822, 0.37 ) }
    dend_2 { pt3dadd( 78.8928, -38.7364, 37.2348, 0.37 ) }
    dend_2 { pt3dadd( 79.1862, -38.8076, 37.3618, 0.37 ) }
    dend_2 { pt3dadd( 80.9211, -39.1719, 38.1179, 0.37 ) }
    dend_2 { pt3dadd( 81.0713, -39.1928, 38.1784, 0.37 ) }
    dend_2 { pt3dadd( 83.7262, -39.3838, 39.069, 0.49 ) }
    dend_2 { pt3dadd( 84.9178, -39.5034, 39.447, 0.49 ) }
    dend_2 { pt3dadd( 86.5791, -39.7116, 39.9565, 0.24 ) }
    dend_2 { pt3dadd( 86.734, -39.7413, 39.9989, 0.24 ) }
    dend_2 { pt3dadd( 88.1385, -40.1299, 40.3133, 0.24 ) }
    dend_2 { pt3dadd( 88.328, -40.2179, 40.3503, 0.24 ) }
    dend_2 { pt3dadd( 90.1721, -41.5822, 40.6838, 0.24 ) }
    dend_2 { pt3dadd( 90.2952, -41.6832, 40.7036, 0.24 ) }
    dend_2 { pt3dadd( 90.9001, -42.1866, 40.7912, 0.24 ) }
    dend_2 { pt3dadd( 91.0852, -42.3113, 40.8385, 0.24 ) }
    dend_2 { pt3dadd( 92.6369, -43.1966, 41.3276, 0.12 ) }
    dend_2 { pt3dadd( 93.183, -43.4676, 41.5131, 0.12 ) }
    dend_2 { pt3dadd( 95.0247, -44.4506, 42.1361, 0.12 ) }
    dend_2 { pt3dadd( 95.1605, -44.5271, 42.1803, 0.12 ) }
    dend_2 { pt3dadd( 97.9198, -46.3436, 43.0424, 0.24 ) }
    dend_2 { pt3dadd( 99.266, -47.2383, 43.4594, 0.12 ) }
    dend_2 { pt3dadd( 99.6318, -47.4881, 43.5694, 0.12 ) }
    dend_2 { pt3dadd( 102.019, -49.3223, 44.2208, 0.12 ) }
    dend_2 { pt3dadd( 102.132, -49.4337, 44.2503, 0.12 ) }
    dend_2 { pt3dadd( 103.747, -51.458, 44.5487, 0.49 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 89/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 17.3583, -14.3054, -3.45661, 0.49 ) }
    dend_1 { pt3dadd( 18.5783, -16.574, -2.51215, 0.49 ) }
    dend_1 { pt3dadd( 18.6377, -16.6801, -2.47336, 0.49 ) }
    dend_1 { pt3dadd( 19.7981, -18.641, -1.79786, 0.37 ) }
    dend_1 { pt3dadd( 20.6811, -20.0788, -1.32067, 0.37 ) }
    dend_1 { pt3dadd( 21.5836, -21.4258, -0.913171, 1.22 ) }
    dend_1 { pt3dadd( 23.267, -23.8383, -0.221537, 0.73 ) }
    dend_1 { pt3dadd( 23.3435, -23.94, -0.204321, 0.73 ) }
    dend_1 { pt3dadd( 24.3658, -25.3943, -0.0469163, 0.49 ) }
    dend_1 { pt3dadd( 24.5139, -25.6388, -0.0322349, 0.49 ) }
    dend_1 { pt3dadd( 25.7484, -27.9497, 0.144307, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( 25.8025, -28.0646, 0.155559, 0.49 ) }
    dend_1 { pt3dadd( 26.6727, -30.086, 0.353413, 0.37 ) }
    dend_1 { pt3dadd( 27.6044, -32.4123, 0.598464, 0.37 ) }
    dend_1 { pt3dadd( 29.0826, -36.0471, 1.03393, 0.37 ) }
    dend_1 { pt3dadd( 30.004, -38.2694, 1.34202, 1.1 ) }
    dend_1 { pt3dadd( 30.8917, -40.292, 1.66419, 0.37 ) }
    dend_1 { pt3dadd( 30.9424, -40.3965, 1.68294, 0.37 ) }
    dend_1 { pt3dadd( 31.78, -42.0432, 2.0454, 0.49 ) }
    dend_1 { pt3dadd( 33.0114, -44.41, 2.58972, 0.49 ) }
    dend_1 { pt3dadd( 33.0687, -44.5207, 2.61651, 0.49 ) }
    dend_1 { pt3dadd( 34.2922, -46.9583, 3.18926, 0.49 ) }
    dend_1 { pt3dadd( 35.5427, -49.527, 3.73123, 0.49 ) }
    dend_1 { pt3dadd( 36.7316, -52.01, 4.2044, 0.24 ) }
    dend_1 { pt3dadd( 37.2067, -53.0369, 4.38206, 0.37 ) }
    dend_1 { pt3dadd( 37.2556, -53.1527, 4.4017, 0.37 ) }
    dend_1 { pt3dadd( 39.8086, -59.2851, 5.43965, 0.49 ) }
    dend_1 { pt3dadd( 40.2346, -60.3384, 5.6326, 0.12 ) }
    dend_1 { pt3dadd( 40.8818, -61.8877, 5.92933, 0.37 ) }
    dend_1 { pt3dadd( 41.5091, -63.3652, 6.22365, 0.37 ) }
    dend_1 { pt3dadd( 42.6429, -66.1478, 6.87313, 0.61 ) }
    dend_1 { pt3dadd( 42.6787, -66.2453, 6.89957, 0.61 ) }
    dend_1 { pt3dadd( 43.1636, -67.9056, 7.37476, 0.61 ) }
    dend_1 { pt3dadd( 43.6791, -69.7994, 7.87965, 0.37 ) }
    dend_1 { pt3dadd( 44.0697, -71.3778, 8.25475, 0.24 ) }
    dend_1 { pt3dadd( 44.6312, -73.5818, 8.67655, 0.61 ) }
    dend_1 { pt3dadd( 44.9675, -74.7975, 8.8421, 0.61 ) }
    dend_1 { pt3dadd( 45.4915, -76.552, 9.0202, 0.49 ) }
    dend_1 { pt3dadd( 45.9218, -77.8556, 9.07817, 0.24 ) }
    dend_1 { pt3dadd( 45.9563, -77.9572, 9.08153, 0.24 ) }
    dend_1 { pt3dadd( 46.5004, -79.4461, 9.11843, 0.24 ) }
    dend_1 { pt3dadd( 46.7303, -79.9691, 9.13191, 0.24 ) }
    dend_1 { pt3dadd( 47.2754, -80.9198, 9.14499, 0.61 ) }
    dend_1 { pt3dadd( 47.916, -81.8565, 9.17291, 0.37 ) }
    dend_1 { pt3dadd( 49.0953, -83.3814, 9.14068, 0.24 ) }
    dend_1 { pt3dadd( 49.1785, -83.4813, 9.13451, 0.24 ) }
    dend_1 { pt3dadd( 50.4011, -84.8777, 8.86403, 0.61 ) }
    dend_1 { pt3dadd( 51.8045, -86.4587, 8.42655, 0.24 ) }
    dend_1 { pt3dadd( 51.888, -86.5527, 8.39389, 0.24 ) }
    dend_1 { pt3dadd( 52.1388, -86.8542, 8.27087, 0.12 ) }
    dend_1 { pt3dadd( 53.3056, -88.2942, 7.59468, 1.22 ) }
    dend_1 { pt3dadd( 54.7292, -90.1255, 6.67293, 0.37 ) }
    dend_1 { pt3dadd( 55.2313, -90.8186, 6.29914, 0.37 ) }
    dend_1 { pt3dadd( 55.9387, -91.838, 5.72757, 0.97 ) }
    dend_1 { pt3dadd( 57.4661, -94.0364, 4.40596, 0.24 ) }
    dend_1 { pt3dadd( 58.3025, -95.242, 3.63354, 0.73 ) }
    dend_1 { pt3dadd( 59.1513, -96.3988, 2.86017, 0.12 ) }
    dend_1 { pt3dadd( 59.5402, -96.9077, 2.53359, 0.12 ) }
    dend_1 { pt3dadd( 60.8662, -98.6028, 1.42862, 0.85 ) }
    dend_1 { pt3dadd( 60.9274, -98.6816, 1.38234, 0.85 ) }
    dend_1 { pt3dadd( 61.2737, -99.157, 1.18527, 0.61 ) }
    dend_1 { pt3dadd( 62.3671, -100.886, 0.698781, 0.12 ) }
    dend_1 { pt3dadd( 62.5082, -101.129, 0.635424, 0.12 ) }
    dend_1 { pt3dadd( 62.5969, -101.283, 0.596063, 0.12 ) }
    dend_1 { pt3dadd( 63.8981, -103.611, 0.00741234, 0.61 ) }
    dend_1 { pt3dadd( 64.8587, -105.377, -0.42746, 0.12 ) }
    dend_1 { pt3dadd( 66.0239, -107.535, -0.925442, 1.46 ) }
    dend_1 { pt3dadd( 67.1003, -109.589, -1.38815, 0.12 ) }
    dend_1 { pt3dadd( 67.3193, -109.995, -1.474, 0.12 ) }
    dend_1 { pt3dadd( 67.3806, -110.107, -1.49354, 0.12 ) }
    dend_1 { pt3dadd( 68.5525, -112.169, -1.77598, 1.34 ) }
    dend_1 { pt3dadd( 69.7033, -114.123, -1.9359, 0.12 ) }
    dend_1 { pt3dadd( 69.7684, -114.233, -1.93312, 0.12 ) }
    dend_1 { pt3dadd( 70.0966, -114.776, -1.88041, 0.12 ) }
    dend_1 { pt3dadd( 71.2474, -116.679, -1.6894, 1.1 ) }
    dend_1 { pt3dadd( 71.3045, -116.771, -1.68374, 1.1 ) }
    dend_1 { pt3dadd( 72.025, -117.857, -1.66943, 0.12 ) }
    dend_1 { pt3dadd( 72.3916, -118.398, -1.6775, 0.12 ) }
    dend_1 { pt3dadd( 72.8102, -118.961, -1.70081, 0.12 ) }
    dend_1 { pt3dadd( 73.0577, -119.269, -1.72151, 0.12 ) }
    dend_1 { pt3dadd( 74.4045, -120.875, -1.90288, 1.46 ) }
    dend_1 { pt3dadd( 75.4326, -122.258, -2.13967, 0.24 ) }
    dend_1 { pt3dadd( 75.493, -122.347, -2.15968, 0.24 ) }
    dend_1 { pt3dadd( 76.0982, -123.382, -2.38733, 0.37 ) }
    dend_1 { pt3dadd( 76.3743, -123.945, -2.50213, 0.12 ) }
    dend_1 { pt3dadd( 77.0588, -125.676, -2.78757, 1.46 ) }
    dend_1 { pt3dadd( 77.5648, -127.759, -2.99196, 0.12 ) }
    dend_1 { pt3dadd( 77.575, -127.866, -2.99465, 0.12 ) }
    dend_1 { pt3dadd( 77.5565, -129.625, -2.90521, 0.12 ) }
    dend_1 { pt3dadd( 77.5309, -129.865, -2.87562, 0.12 ) }
    dend_1 { pt3dadd( 77.2867, -131.331, -2.61053, 0.12 ) }
    dend_1 { pt3dadd( 76.9946, -132.617, -2.28148, 0.24 ) }
    dend_1 { pt3dadd( 76.4992, -134.629, -1.65408, 1.71 ) }
    dend_1 { pt3dadd( 76.0811, -136.329, -1.11932, 0.12 ) }
    dend_1 { pt3dadd( 75.8625, -137.187, -0.845524, 0.12 ) }
    dend_1 { pt3dadd( 75.8273, -137.337, -0.803758, 0.12 ) }
    dend_1 { pt3dadd( 75.6226, -138.336, -0.576458, 0.85 ) }
    dend_1 { pt3dadd( 75.4074, -139.808, -0.308667, 0.12 ) }
    dend_1 { pt3dadd( 75.2088, -141.652, -0.0363959, 0.12 ) }
    dend_1 { pt3dadd( 75.2008, -141.759, -0.0271021, 0.12 ) }
    dend_1 { pt3dadd( 75.0569, -144.134, 0.105392, 1.46 ) }
    dend_1 { pt3dadd( 74.9539, -145.667, 0.182377, 0.12 ) }
    dend_1 { pt3dadd( 74.8283, -147.172, 0.214283, 0.37 ) }
    dend_1 { pt3dadd( 74.7384, -148.048, 0.223692, 0.12 ) }
    dend_1 { pt3dadd( 74.4369, -150.316, 0.253264, 1.83 ) }
    dend_1 { pt3dadd( 74.4194, -150.422, 0.257153, 1.83 ) }
    dend_1 { pt3dadd( 73.8637, -153.071, 0.45426, 0.12 ) }
    dend_1 { pt3dadd( 73.4031, -154.926, 0.62482, 0.37 ) }
    dend_1 { pt3dadd( 72.9916, -156.368, 0.786024, 0.12 ) }
    dend_1 { pt3dadd( 72.7949, -156.972, 0.870242, 0.12 ) }
    dend_1 { pt3dadd( 72.3274, -158.229, 1.10754, 0.97 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_1 { pt3dadd( 71.9719, -159.096, 1.35317, 0.12 ) }
    dend_1 { pt3dadd( 71.8737, -159.304, 1.44275, 0.12 ) }
    dend_1 { pt3dadd( 71.6002, -159.801, 1.75725, 0.12 ) }
    dend_1 { pt3dadd( 71.0387, -160.722, 2.45113, 0.85 ) }
    dend_1 { pt3dadd( 70.9798, -160.81, 2.52508, 0.85 ) }
    dend_1 { pt3dadd( 69.6721, -162.471, 4.16074, 0.12 ) }
    dend_1 { pt3dadd( 69.6117, -162.543, 4.23576, 0.12 ) }
    dend_1 { pt3dadd( 69.2361, -162.971, 4.69108, 0.12 ) }
    dend_1 { pt3dadd( 69.1799, -163.031, 4.76373, 0.12 ) }
    dend_1 { pt3dadd( 68.3574, -163.862, 5.95313, 1.1 ) }
    dend_1 { pt3dadd( 67.2823, -164.892, 7.483, 0.12 ) }
    dend_1 { pt3dadd( 67.1426, -165.019, 7.6643, 0.12 ) }
    dend_1 { pt3dadd( 66.6153, -165.493, 8.31881, 0.12 ) }
    dend_1 { pt3dadd( 65.3353, -166.657, 9.89098, 0.97 ) }
    dend_1 { pt3dadd( 64.2611, -167.673, 11.1814, 0.12 ) }
    dend_1 { pt3dadd( 63.8506, -168.072, 11.6686, 0.12 ) }
    dend_1 { pt3dadd( 62.8139, -169.135, 12.9094, 0.97 ) }
    dend_1 { pt3dadd( 61.7968, -170.234, 14.1368, 0.12 ) }
    dend_1 { pt3dadd( 61.6653, -170.395, 14.2921, 0.12 ) }
    dend_1 { pt3dadd( 61.1541, -171.124, 14.8599, 0.12 ) }
    dend_1 { pt3dadd( 61.1086, -171.206, 14.9139, 0.12 ) }
    dend_1 { pt3dadd( 60.3465, -172.906, 16.0107, 0.49 ) }
    dend_1 { pt3dadd( 60.3102, -173.01, 16.0758, 0.49 ) }
    dend_1 { pt3dadd( 59.8469, -174.632, 17.016, 1.1 ) }
    dend_1 { pt3dadd( 59.8148, -174.733, 17.069, 1.1 ) }
    dend_1 { pt3dadd( 59.3068, -176.258, 17.8032, 0.12 ) }
    dend_1 { pt3dadd( 59.2519, -176.424, 17.8736, 0.12 ) }
    dend_1 { pt3dadd( 58.9811, -177.248, 18.1452, 0.49 ) }
    dend_1 { pt3dadd( 58.5634, -178.509, 18.5611, 0.49 ) }
    dend_1 { pt3dadd( 58.0766, -179.974, 19.0445, 0.37 ) }
    dend_1 { pt3dadd( 58.0341, -180.088, 19.083, 0.37 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 31/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 16.0849, 39.506, -1.20141, 0.468758 ) }
    axon_1 { pt3dadd( 21.0295, 53.6676, -1.20141, 0.468758 ) }
    axon_1 { pt3dadd( 25.9741, 67.8292, -1.20141, 0.468758 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 34/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 7.56022, -51.3245, 30.3287, 0.24 ) }
    apic_10 { pt3dadd( 9.22505, -52.5896, 31.1138, 0.24 ) }
    apic_10 { pt3dadd( 10.0571, -53.2723, 31.4492, 0.61 ) }
    apic_10 { pt3dadd( 10.9308, -54.0039, 31.774, 0.12 ) }
    apic_10 { pt3dadd( 11.2525, -54.2659, 31.8893, 0.12 ) }
    apic_10 { pt3dadd( 12.1285, -54.984, 32.1966, 0.24 ) }
    apic_10 { pt3dadd( 12.458, -55.2747, 32.3056, 0.24 ) }
    apic_10 { pt3dadd( 13.3883, -56.2606, 32.5012, 0.24 ) }
    apic_10 { pt3dadd( 13.4636, -56.35, 32.5161, 0.24 ) }
    apic_10 { pt3dadd( 14.1967, -57.2894, 32.6537, 0.37 ) }
    apic_10 { pt3dadd( 14.3993, -57.5607, 32.6898, 0.37 ) }
    apic_10 { pt3dadd( 15.7785, -59.3948, 32.9224, 0.49 ) }
    apic_10 { pt3dadd( 16.8818, -60.9095, 33.1009, 0.37 ) }
    apic_10 { pt3dadd( 17.3049, -61.517, 33.2054, 0.37 ) }
    apic_10 { pt3dadd( 17.7241, -62.1338, 33.3343, 0.37 ) }
    apic_10 { pt3dadd( 17.9679, -62.5363, 33.4263, 0.37 ) }
    apic_10 { pt3dadd( 19.2187, -64.7109, 33.987, 0.37 ) }
    apic_10 { pt3dadd( 19.2637, -64.7961, 34.0118, 0.37 ) }
    apic_10 { pt3dadd( 20.2163, -66.7662, 34.6517, 0.37 ) }
    apic_10 { pt3dadd( 20.3265, -67.0445, 34.7467, 0.37 ) }
    apic_10 { pt3dadd( 20.9246, -68.8639, 35.38, 0.37 ) }
    apic_10 { pt3dadd( 21.322, -70.4796, 35.904, 0.37 ) }
    apic_10 { pt3dadd( 21.4439, -71.1903, 36.119, 0.37 ) }
    apic_10 { pt3dadd( 21.7991, -73.171, 36.6721, 0.37 ) }
    apic_10 { pt3dadd( 22.1903, -75.3928, 37.2183, 0.49 ) }
    apic_10 { pt3dadd( 22.2114, -75.4944, 37.2475, 0.49 ) }
    apic_10 { pt3dadd( 22.7534, -77.8035, 38.0152, 0.49 ) }
    apic_10 { pt3dadd( 22.7877, -77.9426, 38.0645, 0.49 ) }
    apic_10 { pt3dadd( 23.2426, -79.3156, 38.5565, 0.24 ) }
    apic_10 { pt3dadd( 23.2776, -79.3946, 38.5844, 0.24 ) }
    apic_10 { pt3dadd( 24.2497, -81.1885, 39.1317, 0.37 ) }
    apic_10 { pt3dadd( 24.3602, -81.3878, 39.1879, 0.37 ) }
    apic_10 { pt3dadd( 24.8527, -82.2719, 39.4739, 0.37 ) }
    apic_10 { pt3dadd( 25.6454, -83.7589, 39.9636, 0.24 ) }
    apic_10 { pt3dadd( 26.6759, -85.8071, 40.6237, 0.24 ) }
    apic_10 { pt3dadd( 27.6861, -87.8491, 41.2646, 0.37 ) }
    apic_10 { pt3dadd( 27.8758, -88.226, 41.3731, 0.37 ) }
    apic_10 { pt3dadd( 28.9177, -90.2757, 41.987, 0.85 ) }
    apic_10 { pt3dadd( 28.9574, -90.3541, 42.0101, 0.85 ) }
    apic_10 { pt3dadd( 29.6129, -91.6855, 42.3725, 0.49 ) }
    apic_10 { pt3dadd( 29.6542, -91.7642, 42.3911, 0.49 ) }
    apic_10 { pt3dadd( 30.5063, -93.3336, 42.7243, 0.37 ) }
    apic_10 { pt3dadd( 30.5535, -93.4201, 42.7373, 0.37 ) }
    apic_10 { pt3dadd( 31.4447, -95.05, 42.8616, 0.61 ) }
    apic_10 { pt3dadd( 32.3104, -96.5316, 42.9608, 0.61 ) }
    apic_10 { pt3dadd( 33.0088, -97.7146, 43.0268, 0.12 ) }
    apic_10 { pt3dadd( 33.1672, -97.9865, 43.0401, 0.12 ) }
    apic_10 { pt3dadd( 33.6598, -98.8598, 43.0775, 0.12 ) }
    apic_10 { pt3dadd( 33.8567, -99.1981, 43.0947, 0.12 ) }
    apic_10 { pt3dadd( 34.8534, -100.783, 43.2194, 0.24 ) }
    apic_10 { pt3dadd( 38.5347, -107.982, 44.8689, 0.24 ) }
    apic_10 { pt3dadd( 42.4554, -114.979, 46.8808, 0.24 ) }
    apic_10 { pt3dadd( 47.0179, -121.841, 47.7405, 0.24 ) }
    apic_10 { pt3dadd( 50.5103, -129.258, 48.5143, 0.24 ) }
    apic_10 { pt3dadd( 53.6188, -136.835, 49.2064, 0.24 ) }
    apic_10 { pt3dadd( 55.5478, -144.788, 49.3281, 0.24 ) }
    apic_10 { pt3dadd( 57.1536, -152.806, 49.1608, 0.24 ) }
    apic_10 { pt3dadd( 58.1494, -160.891, 49.7754, 0.24 ) }
    apic_10 { pt3dadd( 60.2575, -168.782, 50.3618, 0.24 ) }
    apic_10 { pt3dadd( 63.4964, -176.314, 49.6479, 0.24 ) }
    apic_10 { pt3dadd( 66.7635, -183.735, 48.1676, 0.24 ) }
    apic_10 { pt3dadd( 71.5359, -190.386, 46.7225, 0.24 ) }
    apic_10 { pt3dadd( 77.8754, -195.89, 46.8312, 0.24 ) }
    apic_10 { pt3dadd( 85.1937, -200.153, 46.5222, 0.24 ) }
    apic_10 { pt3dadd( 92.0649, -204.94, 47.5835, 0.24 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 99/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 7.56022, -51.3245, 30.3287, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_9 { pt3dadd( 6.96703, -52.6965, 30.1807, 0.61 ) }
    apic_9 { pt3dadd( 6.93834, -52.782, 30.1751, 0.61 ) }
    apic_9 { pt3dadd( 6.5036, -54.2199, 30.1063, 0.61 ) }
    apic_9 { pt3dadd( 6.46359, -54.4172, 30.1017, 0.61 ) }
    apic_9 { pt3dadd( 6.35417, -55.2264, 30.0955, 0.61 ) }
    apic_9 { pt3dadd( 6.33856, -55.4807, 30.0994, 0.61 ) }
    apic_9 { pt3dadd( 6.36542, -56.5895, 30.1736, 0.61 ) }
    apic_9 { pt3dadd( 6.36963, -56.653, 30.1818, 0.61 ) }
    apic_9 { pt3dadd( 6.50666, -57.9296, 30.4037, 0.61 ) }
    apic_9 { pt3dadd( 6.55186, -58.3444, 30.4874, 0.61 ) }
    apic_9 { pt3dadd( 6.7945, -60.0909, 30.8742, 0.61 ) }
    apic_9 { pt3dadd( 6.8872, -60.6981, 31.0175, 0.61 ) }
    apic_9 { pt3dadd( 7.11322, -62.0399, 31.345, 0.85 ) }
    apic_9 { pt3dadd( 7.21303, -62.5845, 31.4776, 0.73 ) }
    apic_9 { pt3dadd( 7.23014, -62.6707, 31.4979, 0.73 ) }
    apic_9 { pt3dadd( 7.56306, -64.1485, 31.8168, 0.73 ) }
    apic_9 { pt3dadd( 7.57563, -64.2095, 31.8312, 0.73 ) }
    apic_9 { pt3dadd( 7.73065, -65.3296, 32.0897, 0.73 ) }
    apic_9 { pt3dadd( 7.75264, -65.6121, 32.1482, 0.73 ) }
    apic_9 { pt3dadd( 7.73413, -66.8544, 32.4221, 0.73 ) }
    apic_9 { pt3dadd( 7.70057, -67.1532, 32.5119, 0.73 ) }
    apic_9 { pt3dadd( 7.26956, -69.121, 33.2196, 0.73 ) }
    apic_9 { pt3dadd( 7.04524, -69.9566, 33.5352, 0.73 ) }
    apic_9 { pt3dadd( 6.99764, -70.1321, 33.6007, 0.73 ) }
    apic_9 { pt3dadd( 6.70346, -71.2878, 34.0191, 0.85 ) }
    apic_9 { pt3dadd( 6.43855, -72.7421, 34.4359, 1.1 ) }
    apic_9 { pt3dadd( 6.36371, -73.4974, 34.598, 0.49 ) }
    apic_9 { pt3dadd( 6.34534, -74.7476, 34.709, 0.61 ) }
    apic_9 { pt3dadd( 6.41555, -76.523, 34.75, 0.61 ) }
    apic_9 { pt3dadd( 6.42716, -76.7497, 34.7416, 0.61 ) }
    apic_9 { pt3dadd( 6.58135, -78.7913, 34.5096, 0.61 ) }
    apic_9 { pt3dadd( 6.58478, -78.8539, 34.4977, 0.61 ) }
    apic_9 { pt3dadd( 6.62626, -80.387, 34.1754, 0.73 ) }
    apic_9 { pt3dadd( 6.61624, -80.5688, 34.1345, 0.73 ) }
    apic_9 { pt3dadd( 6.43398, -81.4355, 33.9312, 0.49 ) }
    apic_9 { pt3dadd( 6.41809, -81.4861, 33.9214, 0.49 ) }
    apic_9 { pt3dadd( 6.01789, -82.4001, 33.8014, 0.49 ) }
    apic_9 { pt3dadd( 5.98436, -82.4767, 33.8052, 0.49 ) }
    apic_9 { pt3dadd( 5.62536, -83.3007, 33.9975, 0.73 ) }
    apic_9 { pt3dadd( 5.32477, -84.1711, 34.3261, 0.49 ) }
    apic_9 { pt3dadd( 5.20563, -84.6185, 34.5477, 0.73 ) }
    apic_9 { pt3dadd( 5.17353, -84.7896, 34.6426, 0.73 ) }
    apic_9 { pt3dadd( 4.96409, -86.665, 35.8182, 0.49 ) }
    apic_9 { pt3dadd( 4.96218, -86.7198, 35.8529, 0.49 ) }
    apic_9 { pt3dadd( 5.06966, -87.8728, 36.5302, 0.61 ) }
    apic_9 { pt3dadd( 5.07889, -87.9306, 36.5563, 0.61 ) }
    apic_9 { pt3dadd( 5.22871, -88.7965, 36.8241, 0.61 ) }
    apic_9 { pt3dadd( 5.23741, -88.8585, 36.8359, 0.61 ) }
    apic_9 { pt3dadd( 5.3248, -89.8099, 36.9133, 0.61 ) }
    apic_9 { pt3dadd( 5.40528, -91.4376, 37.0154, 0.61 ) }
    apic_9 { pt3dadd( 5.44534, -92.7894, 37.1296, 0.61 ) }
    apic_9 { pt3dadd( 5.47845, -94.1543, 37.2872, 1.34 ) }
    apic_9 { pt3dadd( 5.52594, -95.318, 37.4552, 0.61 ) }
    apic_9 { pt3dadd( 5.61087, -96.8112, 37.7409, 0.61 ) }
    apic_9 { pt3dadd( 5.63472, -97.256, 37.8474, 0.61 ) }
    apic_9 { pt3dadd( 5.69752, -98.6894, 38.2623, 0.61 ) }
    apic_9 { pt3dadd( 5.70636, -98.7751, 38.2894, 0.61 ) }
    apic_9 { pt3dadd( 5.87417, -99.8507, 38.6173, 0.73 ) }
    apic_9 { pt3dadd( 6.14827, -101.198, 38.9141, 0.73 ) }
    apic_9 { pt3dadd( 6.37117, -102.248, 39.0203, 0.61 ) }
    apic_9 { pt3dadd( 6.47828, -102.803, 39.0259, 0.49 ) }
    apic_9 { pt3dadd( 6.79684, -104.842, 38.8769, 0.49 ) }
    apic_9 { pt3dadd( 6.80845, -104.924, 38.8682, 0.49 ) }
    apic_9 { pt3dadd( 7.17148, -107.179, 38.6323, 0.61 ) }
    apic_9 { pt3dadd( 7.46508, -108.44, 38.4965, 0.49 ) }
    apic_9 { pt3dadd( 7.4831, -108.502, 38.492, 0.49 ) }
    apic_9 { pt3dadd( 7.97908, -110.14, 38.4546, 0.37 ) }
    apic_9 { pt3dadd( 8.01271, -110.278, 38.4567, 0.37 ) }
    apic_9 { pt3dadd( 8.37745, -111.957, 38.5585, 0.73 ) }
    apic_9 { pt3dadd( 8.55992, -112.73, 38.6528, 0.37 ) }
    apic_9 { pt3dadd( 8.72565, -113.401, 38.7279, 0.61 ) }
    apic_9 { pt3dadd( 9.14111, -114.927, 38.8326, 0.73 ) }
    apic_9 { pt3dadd( 9.67567, -116.825, 38.8194, 0.73 ) }
    apic_9 { pt3dadd( 9.74612, -117.095, 38.8014, 0.73 ) }
    apic_9 { pt3dadd( 10.0189, -118.511, 38.5884, 0.49 ) }
    apic_9 { pt3dadd( 10.0829, -118.876, 38.5175, 0.49 ) }
    apic_9 { pt3dadd( 10.3373, -120.173, 38.2265, 0.37 ) }
    apic_9 { pt3dadd( 10.6123, -121.417, 37.9126, 0.49 ) }
    apic_9 { pt3dadd( 10.6253, -121.478, 37.8955, 0.49 ) }
    apic_9 { pt3dadd( 10.8681, -122.832, 37.4843, 0.37 ) }
    apic_9 { pt3dadd( 11.133, -124.608, 36.9353, 0.61 ) }
    apic_9 { pt3dadd( 11.1997, -125.018, 36.8137, 1.1 ) }
    apic_9 { pt3dadd( 11.2116, -125.078, 36.7933, 1.1 ) }
    apic_9 { pt3dadd( 11.565, -126.333, 36.3505, 0.37 ) }
    apic_9 { pt3dadd( 11.6177, -126.494, 36.2963, 0.37 ) }
    apic_9 { pt3dadd( 11.9598, -127.343, 36.022, 0.49 ) }
    apic_9 { pt3dadd( 12.008, -127.471, 35.9759, 0.49 ) }
    apic_9 { pt3dadd( 12.3683, -128.54, 35.5706, 0.24 ) }
    apic_9 { pt3dadd( 12.4552, -128.833, 35.4688, 0.24 ) }
    apic_9 { pt3dadd( 12.7859, -130.129, 35.0536, 0.37 ) }
    apic_9 { pt3dadd( 12.796, -130.188, 35.0313, 0.37 ) }
    apic_9 { pt3dadd( 12.8952, -131.264, 34.5809, 0.73 ) }
    apic_9 { pt3dadd( 12.9048, -131.394, 34.531, 0.73 ) }
    apic_9 { pt3dadd( 13.015, -132.998, 33.9977, 0.49 ) }
    apic_9 { pt3dadd( 13.0209, -133.049, 33.9821, 0.49 ) }
    apic_9 { pt3dadd( 13.2151, -134.291, 33.6415, 0.24 ) }
    apic_9 { pt3dadd( 13.2272, -134.353, 33.629, 0.24 ) }
    apic_9 { pt3dadd( 13.5873, -135.915, 33.464, 0.49 ) }
    apic_9 { pt3dadd( 13.787, -136.587, 33.4305, 0.49 ) }
    apic_9 { pt3dadd( 14.1256, -137.528, 33.4616, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_9 { pt3dadd( 14.2179, -137.765, 33.4827, 0.49 ) }
    apic_9 { pt3dadd( 14.6095, -138.728, 33.6197, 0.85 ) }
    apic_9 { pt3dadd( 15.1042, -140.026, 33.8172, 0.37 ) }
    apic_9 { pt3dadd( 15.6768, -141.624, 34.0819, 0.49 ) }
    apic_9 { pt3dadd( 15.8918, -142.315, 34.1989, 0.49 ) }
    apic_9 { pt3dadd( 16.1236, -143.229, 34.3542, 0.85 ) }
    apic_9 { pt3dadd( 16.2565, -143.945, 34.471, 0.85 ) }
    apic_9 { pt3dadd( 16.3019, -144.399, 34.5198, 0.37 ) }
    apic_9 { pt3dadd( 16.3036, -144.457, 34.5222, 0.37 ) }
    apic_9 { pt3dadd( 16.2784, -145.529, 34.4973, 0.49 ) }
    apic_9 { pt3dadd( 16.2732, -146.086, 34.452, 0.49 ) }
    apic_9 { pt3dadd( 16.3106, -146.71, 34.3523, 0.12 ) }
    apic_9 { pt3dadd( 16.4935, -148.077, 34.0642, 0.37 ) }
    apic_9 { pt3dadd( 16.509, -148.161, 34.0452, 0.37 ) }
    apic_9 { pt3dadd( 16.6381, -148.767, 33.9173, 0.49 ) }
    apic_9 { pt3dadd( 16.653, -148.828, 33.9047, 0.49 ) }
    apic_9 { pt3dadd( 16.9682, -150.087, 33.6777, 0.61 ) }
    apic_9 { pt3dadd( 17.1238, -150.747, 33.5953, 0.12 ) }
    apic_9 { pt3dadd( 17.3339, -151.766, 33.5543, 0.61 ) }
    apic_9 { pt3dadd( 17.4977, -152.6, 33.5503, 0.85 ) }
    apic_9 { pt3dadd( 17.5227, -152.726, 33.5488, 0.85 ) }
    apic_9 { pt3dadd( 17.6141, -153.162, 33.5466, 0.85 ) }
    apic_9 { pt3dadd( 17.8357, -154.117, 33.4964, 0.37 ) }
    apic_9 { pt3dadd( 18.283, -155.782, 33.236, 0.97 ) }
    apic_9 { pt3dadd( 18.5377, -156.573, 33.0436, 1.34 ) }
    apic_9 { pt3dadd( 18.9219, -157.561, 32.7446, 0.12 ) }
    apic_9 { pt3dadd( 18.9466, -157.617, 32.7252, 0.12 ) }
    apic_9 { pt3dadd( 19.6761, -159.036, 32.1669, 1.34 ) }
    apic_9 { pt3dadd( 20.1048, -159.745, 31.838, 1.34 ) }
    apic_9 { pt3dadd( 20.4901, -160.258, 31.574, 0.37 ) }
    apic_9 { pt3dadd( 20.9937, -160.842, 31.2943, 0.61 ) }
    apic_9 { pt3dadd( 21.0522, -160.902, 31.2767, 0.61 ) }
    apic_9 { pt3dadd( 21.5464, -161.407, 31.2704, 0.12 ) }
    apic_9 { pt3dadd( 21.5819, -161.447, 31.2822, 0.12 ) }
    apic_9 { pt3dadd( 21.9801, -162.043, 31.479, 0.12 ) }
    apic_9 { pt3dadd( 22.0303, -162.133, 31.5069, 0.12 ) }
    apic_9 { pt3dadd( 22.5094, -163.033, 31.7629, 1.46 ) }
    apic_9 { pt3dadd( 23.0712, -164.049, 32.03, 0.12 ) }
    apic_9 { pt3dadd( 23.4927, -164.818, 32.2072, 1.1 ) }
    apic_9 { pt3dadd( 24.1589, -166.093, 32.4201, 0.37 ) }
    apic_9 { pt3dadd( 24.2575, -166.296, 32.4429, 0.61 ) }
    apic_9 { pt3dadd( 24.654, -167.154, 32.5257, 0.24 ) }
    apic_9 { pt3dadd( 25.0486, -168.04, 32.5913, 0.12 ) }
    apic_9 { pt3dadd( 25.4554, -168.978, 32.601, 1.22 ) }
    apic_9 { pt3dadd( 25.8878, -170.004, 32.7702, 0.37 ) }
    apic_9 { pt3dadd( 26.2302, -170.922, 33.0641, 1.83 ) }
    apic_9 { pt3dadd( 26.5648, -171.983, 33.5551, 0.12 ) }
    apic_9 { pt3dadd( 26.5849, -172.056, 33.6007, 0.12 ) }
    apic_9 { pt3dadd( 26.7897, -172.824, 34.2426, 0.85 ) }
    apic_9 { pt3dadd( 27.5917, -175.364, 36.984, 0.12 ) }
    apic_9 { pt3dadd( 27.6071, -175.406, 37.0397, 0.12 ) }
    apic_9 { pt3dadd( 27.7445, -175.733, 37.549, 1.1 ) }
    apic_9 { pt3dadd( 27.9325, -176.124, 38.1814, 0.12 ) }
    apic_9 { pt3dadd( 27.9473, -176.154, 38.226, 0.12 ) }
    apic_9 { pt3dadd( 28.1407, -176.516, 38.7365, 0.12 ) }
    apic_9 { pt3dadd( 28.4887, -177.182, 39.2717, 0.12 ) }
    apic_9 { pt3dadd( 28.5134, -177.229, 39.3092, 0.12 ) }
    apic_9 { pt3dadd( 29.0158, -178.187, 40.0609, 0.49 ) }
    apic_9 { pt3dadd( 29.0358, -178.227, 40.093, 0.49 ) }
    apic_9 { pt3dadd( 29.4952, -179.113, 40.8076, 0.49 ) }
    apic_9 { pt3dadd( 29.9238, -179.899, 41.446, 0.12 ) }
    apic_9 { pt3dadd( 30.2228, -180.397, 41.8083, 0.37 ) }
    apic_9 { pt3dadd( 30.4504, -180.78, 42.06, 0.12 ) }
    // Section: apic_5, id: apic_5, parent: apic_1 (entry count 63/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -8.70354, -32.1964, 3.88135, 0.73 ) }
    apic_5 { pt3dadd( -11.1328, -33.5278, 3.89282, 0.73 ) }
    apic_5 { pt3dadd( -13.1127, -34.6129, 3.90216, 0.73 ) }
    apic_5 { pt3dadd( -16.4429, -36.4381, 3.91788, 0.97 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 67/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -8.70354, -32.1964, 3.88135, 0.61 ) }
    apic_2 { pt3dadd( -8.42861, -34.3588, 3.94317, 0.61 ) }
    apic_2 { pt3dadd( -8.41297, -34.4818, 3.94668, 0.61 ) }
    apic_2 { pt3dadd( -8.21051, -36.0743, 3.99221, 0.61 ) }
    apic_2 { pt3dadd( -8.11913, -36.793, 4.01275, 0.61 ) }
    apic_2 { pt3dadd( -7.65517, -40.4421, 4.11707, 0.85 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 73/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -13.2901, 35.7617, 16.301, 0.37 ) }
    dend_32 { pt3dadd( -13.3629, 38.9492, 16.3459, 0.37 ) }
    dend_32 { pt3dadd( -13.4016, 42.2878, 16.4892, 0.37 ) }
    dend_32 { pt3dadd( -13.4305, 45.1774, 16.8556, 0.37 ) }
    dend_32 { pt3dadd( -13.432, 45.2962, 16.8754, 0.37 ) }
    dend_32 { pt3dadd( -13.4494, 48.5865, 17.5405, 0.37 ) }
    dend_32 { pt3dadd( -13.4562, 51.8729, 18.2715, 0.37 ) }
    dend_32 { pt3dadd( -13.4587, 51.9947, 18.3148, 0.37 ) }
    dend_32 { pt3dadd( -13.5736, 55.234, 19.7561, 0.37 ) }
    dend_32 { pt3dadd( -13.5789, 55.396, 19.8418, 0.37 ) }
    dend_32 { pt3dadd( -13.7065, 58.2764, 21.5166, 0.49 ) }
    dend_32 { pt3dadd( -13.7095, 58.3682, 21.5767, 0.49 ) }
    dend_32 { pt3dadd( -13.7058, 60.875, 23.1118, 0.24 ) }
    dend_32 { pt3dadd( -13.6251, 62.9782, 24.3482, 0.24 ) }
    dend_32 { pt3dadd( -13.4426, 65.2718, 25.637, 0.49 ) }
    dend_32 { pt3dadd( -13.4281, 65.3861, 25.6968, 0.49 ) }
    dend_32 { pt3dadd( -13.0873, 67.3547, 26.6555, 0.49 ) }
    dend_32 { pt3dadd( -12.7741, 68.9134, 27.2868, 0.24 ) }
    dend_32 { pt3dadd( -12.4816, 70.1247, 27.675, 0.49 ) }
    dend_32 { pt3dadd( -12.4465, 70.2838, 27.7214, 0.49 ) }
    dend_32 { pt3dadd( -12.0127, 73.5801, 28.3638, 0.49 ) }
    dend_32 { pt3dadd( -12.007, 73.6878, 28.3795, 0.49 ) }
    dend_32 { pt3dadd( -12.0338, 76.2303, 28.6428, 0.49 ) }
    dend_32 { pt3dadd( -12.0409, 76.3386, 28.6518, 0.49 ) }
    dend_32 { pt3dadd( -12.2179, 77.8189, 28.7561, 0.37 ) }
    dend_32 { pt3dadd( -13.0288, 82.7434, 29.062, 0.37 ) }
    dend_32 { pt3dadd( -13.4184, 84.4783, 29.149, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_32 { pt3dadd( -13.4441, 84.5842, 29.1551, 0.37 ) }
    dend_32 { pt3dadd( -14.1978, 87.4815, 29.3302, 0.49 ) }
    dend_32 { pt3dadd( -14.6835, 89.376, 29.4905, 0.37 ) }
    dend_32 { pt3dadd( -14.7176, 89.5001, 29.505, 0.24 ) }
    dend_32 { pt3dadd( -15.3449, 91.7437, 29.8487, 0.97 ) }
    dend_32 { pt3dadd( -15.9166, 93.973, 30.2096, 0.12 ) }
    dend_32 { pt3dadd( -15.9707, 94.2213, 30.2577, 0.12 ) }
    dend_32 { pt3dadd( -16.3865, 96.4675, 30.8146, 0.37 ) }
    dend_32 { pt3dadd( -16.902, 100.208, 31.8048, 0.37 ) }
    dend_32 { pt3dadd( -17.1343, 102.787, 32.5146, 0.37 ) }
    dend_32 { pt3dadd( -17.1379, 102.911, 32.5488, 0.37 ) }
    dend_32 { pt3dadd( -17.0711, 105.078, 33.0502, 0.37 ) }
    dend_32 { pt3dadd( -16.94, 106.354, 33.3035, 0.37 ) }
    dend_32 { pt3dadd( -16.5235, 108.681, 33.702, 1.22 ) }
    dend_32 { pt3dadd( -16.1096, 110.372, 33.8846, 0.37 ) }
    dend_32 { pt3dadd( -15.2916, 113.749, 34.0032, 0.37 ) }
    dend_32 { pt3dadd( -14.6406, 116.754, 33.959, 0.85 ) }
    dend_32 { pt3dadd( -14.1955, 119.064, 33.8158, 0.85 ) }
    dend_32 { pt3dadd( -14.1771, 119.171, 33.8075, 0.85 ) }
    dend_32 { pt3dadd( -13.782, 122.212, 33.6345, 0.37 ) }
    dend_32 { pt3dadd( -13.6624, 123.746, 33.5618, 0.12 ) }
    dend_32 { pt3dadd( -13.6527, 125.67, 33.6144, 0.97 ) }
    dend_32 { pt3dadd( -13.7645, 126.946, 33.7604, 1.22 ) }
    dend_32 { pt3dadd( -14.009, 128.369, 33.9905, 0.24 ) }
    dend_32 { pt3dadd( -14.4974, 130.699, 34.4732, 0.24 ) }
    dend_32 { pt3dadd( -14.8699, 132.213, 34.8788, 0.73 ) }
    dend_32 { pt3dadd( -15.567, 134.841, 35.6373, 0.37 ) }
    dend_32 { pt3dadd( -16.3566, 137.704, 36.5752, 0.49 ) }
    dend_32 { pt3dadd( -16.8926, 139.63, 37.2563, 0.12 ) }
    dend_32 { pt3dadd( -16.9188, 139.729, 37.2932, 0.12 ) }
    dend_32 { pt3dadd( -17.4109, 141.845, 38.0946, 0.49 ) }
    dend_32 { pt3dadd( -17.4287, 141.946, 38.1307, 0.49 ) }
    dend_32 { pt3dadd( -17.7516, 144.406, 38.9185, 0.12 ) }
    dend_32 { pt3dadd( -17.896, 145.635, 39.3401, 0.49 ) }
    dend_32 { pt3dadd( -18.0658, 147.1, 39.8196, 0.49 ) }
    dend_32 { pt3dadd( -18.1853, 147.978, 40.0865, 0.12 ) }
    dend_32 { pt3dadd( -18.5239, 149.86, 40.4998, 1.1 ) }
    dend_32 { pt3dadd( -18.9646, 151.582, 40.7126, 0.37 ) }
    dend_32 { pt3dadd( -19.3658, 152.781, 40.7362, 0.61 ) }
    dend_32 { pt3dadd( -19.732, 153.64, 40.7155, 0.37 ) }
    dend_32 { pt3dadd( -19.8179, 153.805, 40.7035, 0.37 ) }
    dend_32 { pt3dadd( -21.2988, 156.041, 40.4243, 1.46 ) }
    dend_32 { pt3dadd( -22.6469, 157.714, 40.2935, 0.37 ) }
    dend_32 { pt3dadd( -22.7644, 157.85, 40.3008, 0.37 ) }
    dend_32 { pt3dadd( -23.4329, 158.602, 40.4062, 0.37 ) }
    dend_32 { pt3dadd( -23.5044, 158.685, 40.4258, 0.37 ) }
    dend_32 { pt3dadd( -24.4484, 159.811, 40.7591, 0.61 ) }
    dend_32 { pt3dadd( -26.8492, 162.712, 41.8202, 0.61 ) }
    dend_32 { pt3dadd( -28.6435, 164.995, 42.6676, 0.37 ) }
    dend_32 { pt3dadd( -28.7186, 165.097, 42.7038, 0.37 ) }
    dend_32 { pt3dadd( -30.3022, 167.458, 43.5212, 1.34 ) }
    dend_32 { pt3dadd( -31.073, 168.766, 43.947, 0.24 ) }
    dend_32 { pt3dadd( -31.1467, 168.921, 43.9941, 0.24 ) }
    dend_32 { pt3dadd( -31.6563, 170.253, 44.3323, 0.12 ) }
    dend_32 { pt3dadd( -31.9799, 171.362, 44.5827, 0.49 ) }
    dend_32 { pt3dadd( -32.3206, 172.83, 44.9164, 0.12 ) }
    dend_32 { pt3dadd( -32.511, 174.195, 45.2176, 0.61 ) }
    dend_32 { pt3dadd( -32.5947, 175.236, 45.4689, 0.12 ) }
    dend_32 { pt3dadd( -32.6028, 175.413, 45.5138, 0.12 ) }
    dend_32 { pt3dadd( -32.5779, 176.462, 45.812, 0.49 ) }
    dend_32 { pt3dadd( -32.5747, 176.567, 45.8437, 0.49 ) }
    dend_32 { pt3dadd( -34.2058, 185.624, 49.5777, 0.49 ) }
    dend_32 { pt3dadd( -34.9659, 194.114, 54.7397, 0.49 ) }
    dend_32 { pt3dadd( -34.6027, 203.106, 58.9499, 0.49 ) }
    dend_32 { pt3dadd( -34.1158, 211.897, 63.581, 0.49 ) }
    dend_32 { pt3dadd( -33.8115, 220.341, 68.8746, 0.49 ) }
    dend_32 { pt3dadd( -34.9054, 228.21, 74.9619, 0.49 ) }
    dend_32 { pt3dadd( -36.7316, 235.364, 81.7951, 0.49 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 68/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -13.2901, 35.7617, 16.301, 0.24 ) }
    dend_29 { pt3dadd( -12.7802, 38.4352, 17.1404, 0.24 ) }
    dend_29 { pt3dadd( -12.7625, 38.5391, 17.1695, 0.24 ) }
    dend_29 { pt3dadd( -12.5437, 40.0185, 17.5397, 0.24 ) }
    dend_29 { pt3dadd( -12.2135, 42.0452, 17.9786, 0.24 ) }
    dend_29 { pt3dadd( -12.1858, 42.209, 18.0125, 0.24 ) }
    dend_29 { pt3dadd( -11.6257, 45.0478, 18.5771, 0.24 ) }
    dend_29 { pt3dadd( -11.5784, 45.224, 18.5985, 0.24 ) }
    dend_29 { pt3dadd( -11.3139, 46.475, 18.7485, 0.24 ) }
    dend_29 { pt3dadd( -11.1164, 48.2087, 19.0959, 0.24 ) }
    dend_29 { pt3dadd( -11.1125, 48.313, 19.1283, 0.24 ) }
    dend_29 { pt3dadd( -11.0932, 49.2628, 19.4848, 0.24 ) }
    dend_29 { pt3dadd( -11.095, 49.362, 19.5311, 0.24 ) }
    dend_29 { pt3dadd( -11.2157, 52.6578, 21.1603, 0.24 ) }
    dend_29 { pt3dadd( -11.3571, 54.9762, 22.3853, 0.24 ) }
    dend_29 { pt3dadd( -11.523, 57.5319, 23.8088, 0.24 ) }
    dend_29 { pt3dadd( -11.5301, 57.6283, 23.8606, 0.24 ) }
    dend_29 { pt3dadd( -11.7401, 59.7765, 25.071, 0.24 ) }
    dend_29 { pt3dadd( -11.8838, 61.2354, 25.9229, 0.24 ) }
    dend_29 { pt3dadd( -11.8938, 61.3293, 25.9791, 0.24 ) }
    dend_29 { pt3dadd( -12.0753, 63.0107, 26.9648, 0.24 ) }
    dend_29 { pt3dadd( -12.4255, 65.2527, 28.2637, 0.12 ) }
    dend_29 { pt3dadd( -12.6956, 66.8641, 28.9931, 0.24 ) }
    dend_29 { pt3dadd( -12.7134, 66.9973, 29.0336, 0.24 ) }
    dend_29 { pt3dadd( -12.8461, 68.0599, 29.2784, 0.12 ) }
    dend_29 { pt3dadd( -13.2245, 71.2271, 29.7755, 0.12 ) }
    dend_29 { pt3dadd( -13.5143, 73.5, 30.0012, 0.37 ) }
    dend_29 { pt3dadd( -13.9469, 77.2508, 30.2333, 0.24 ) }
    dend_29 { pt3dadd( -14.3501, 80.8816, 30.335, 0.24 ) }
    dend_29 { pt3dadd( -14.3618, 80.99, 30.3364, 0.24 ) }
    dend_29 { pt3dadd( -14.7781, 84.9165, 30.2796, 0.24 ) }
    dend_29 { pt3dadd( -15.1727, 88.0866, 30.0701, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_29 { pt3dadd( -15.1858, 88.1949, 30.0663, 0.24 ) }
    dend_29 { pt3dadd( -15.21, 88.3514, 30.0785, 0.24 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -16.0992, 9.63648, 0.0413392, 0.61 ) }
    dend_23 { pt3dadd( -18.105, 9.92473, 0.511144, 0.61 ) }
    dend_23 { pt3dadd( -19.5858, 10.1375, 0.857967, 0.61 ) }
    dend_23 { pt3dadd( -21.8076, 10.4568, 1.37835, 0.73 ) }
    dend_23 { pt3dadd( -24.3087, 10.8162, 1.96416, 0.85 ) }
    dend_23 { pt3dadd( -28.4549, 11.4121, 2.93529, 1.22 ) }
    dend_23 { pt3dadd( -28.5925, 11.4319, 2.9675, 1.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 9/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -16.0992, 9.63648, 0.0413392, 0.73 ) }
    dend_22 { pt3dadd( -16.9741, 11.6568, 0.809258, 0.73 ) }
    dend_22 { pt3dadd( -17.0105, 11.7675, 0.833602, 0.73 ) }
    dend_22 { pt3dadd( -17.26, 12.9741, 1.115, 0.85 ) }
    dend_22 { pt3dadd( -17.2798, 13.0882, 1.14151, 0.85 ) }
    dend_22 { pt3dadd( -17.612, 14.9675, 1.49203, 0.49 ) }
    dend_22 { pt3dadd( -17.6221, 15.0658, 1.50632, 0.49 ) }
    dend_22 { pt3dadd( -17.7159, 17.6333, 2.01811, 0.61 ) }
    dend_22 { pt3dadd( -17.7375, 20.0279, 2.61745, 0.61 ) }
    dend_22 { pt3dadd( -17.7325, 20.1245, 2.64378, 0.61 ) }
    dend_22 { pt3dadd( -17.4708, 22.9259, 3.58835, 0.37 ) }
    dend_22 { pt3dadd( -17.146, 26.2024, 4.8982, 0.61 ) }
    dend_22 { pt3dadd( -16.8035, 30.4412, 6.77511, 0.24 ) }
    dend_22 { pt3dadd( -16.7818, 30.8925, 7.00333, 0.24 ) }
    dend_22 { pt3dadd( -16.8048, 33.3739, 8.29051, 0.37 ) }
    dend_22 { pt3dadd( -17.0485, 37.6892, 10.6007, 0.61 ) }
    dend_22 { pt3dadd( -17.2357, 39.4291, 11.5893, 0.37 ) }
    dend_22 { pt3dadd( -17.5242, 40.7695, 12.3804, 0.49 ) }
    dend_22 { pt3dadd( -18.5017, 43.8221, 14.0182, 0.37 ) }
    dend_22 { pt3dadd( -19.3591, 45.8734, 15.0828, 0.37 ) }
    dend_22 { pt3dadd( -19.6789, 46.425, 15.3472, 0.37 ) }
    dend_22 { pt3dadd( -19.7277, 46.5073, 15.3815, 0.37 ) }
    dend_22 { pt3dadd( -20.4594, 48.1816, 16.091, 0.49 ) }
    dend_22 { pt3dadd( -21.0927, 50.027, 16.8997, 0.49 ) }
    dend_22 { pt3dadd( -21.5723, 52.0476, 17.5998, 0.37 ) }
    dend_22 { pt3dadd( -22.0948, 54.8955, 18.4771, 0.37 ) }
    dend_22 { pt3dadd( -22.6285, 58.4659, 19.4543, 0.49 ) }
    dend_22 { pt3dadd( -23.1371, 62.2839, 20.2926, 0.37 ) }
    dend_22 { pt3dadd( -23.148, 62.382, 20.3077, 0.37 ) }
    dend_22 { pt3dadd( -23.6368, 68.7084, 20.9548, 0.37 ) }
    dend_22 { pt3dadd( -23.6665, 69.299, 20.9731, 0.37 ) }
    dend_22 { pt3dadd( -23.672, 69.3981, 20.9688, 0.37 ) }
    dend_22 { pt3dadd( -24.0008, 71.9572, 20.584, 0.37 ) }
    dend_22 { pt3dadd( -24.2422, 73.6453, 20.2888, 0.37 ) }
    dend_22 { pt3dadd( -24.4057, 75.3641, 20.065, 0.37 ) }
    dend_22 { pt3dadd( -24.4368, 76.3544, 19.9909, 0.49 ) }
    dend_22 { pt3dadd( -24.435, 78.0907, 19.9099, 0.49 ) }
    dend_22 { pt3dadd( -24.4064, 79.037, 19.8847, 0.49 ) }
    dend_22 { pt3dadd( -24.1584, 82.1723, 19.9132, 0.49 ) }
    dend_22 { pt3dadd( -24.0251, 83.2504, 19.9194, 0.37 ) }
    dend_22 { pt3dadd( -23.8878, 84.2909, 19.9034, 0.24 ) }
    dend_22 { pt3dadd( -23.6767, 85.6172, 19.8424, 0.24 ) }
    dend_22 { pt3dadd( -23.3642, 87.097, 19.7254, 0.24 ) }
    dend_22 { pt3dadd( -23.34, 87.2115, 19.7114, 0.24 ) }
    dend_22 { pt3dadd( -22.9699, 89.2556, 19.3288, 0.24 ) }
    dend_22 { pt3dadd( -22.6249, 91.0907, 18.9838, 0.24 ) }
    dend_22 { pt3dadd( -22.6005, 91.205, 18.9623, 0.24 ) }
    dend_22 { pt3dadd( -22.2521, 92.6555, 18.6869, 0.24 ) }
    dend_22 { pt3dadd( -22.214, 92.8031, 18.6625, 0.24 ) }
    dend_22 { pt3dadd( -21.8891, 93.9186, 18.4897, 0.24 ) }
    dend_22 { pt3dadd( -21.605, 94.8028, 18.3648, 0.24 ) }
    dend_22 { pt3dadd( -20.6472, 97.0344, 17.9733, 0.49 ) }
    dend_22 { pt3dadd( -20.5896, 97.1317, 17.9328, 0.49 ) }
    dend_22 { pt3dadd( -19.6296, 98.3093, 17.1496, 0.24 ) }
    dend_22 { pt3dadd( -19.0436, 98.9076, 16.6552, 0.12 ) }
    dend_22 { pt3dadd( -18.9643, 98.9716, 16.5895, 0.12 ) }
    dend_22 { pt3dadd( -17.917, 99.6798, 15.7249, 0.24 ) }
    dend_22 { pt3dadd( -14.8162, 101.5, 13.2423, 0.24 ) }
    dend_22 { pt3dadd( -13.4786, 102.27, 12.1248, 0.12 ) }
    dend_22 { pt3dadd( -13.3943, 102.316, 12.0495, 0.12 ) }
    dend_22 { pt3dadd( -12.3037, 102.919, 11.0648, 0.12 ) }
    dend_22 { pt3dadd( -12.2185, 102.965, 10.9906, 0.12 ) }
    dend_22 { pt3dadd( -10.5005, 103.831, 9.68668, 0.12 ) }
    dend_22 { pt3dadd( -9.83283, 112.708, 11.5703, 0.12 ) }
    dend_22 { pt3dadd( -9.41558, 121.644, 13.1628, 0.12 ) }
    dend_22 { pt3dadd( -7.2514, 130.445, 13.6134, 0.12 ) }
    dend_22 { pt3dadd( -4.70443, 139.034, 12.285, 0.12 ) }
    dend_22 { pt3dadd( -0.467002, 146.956, 10.7405, 0.12 ) }
    dend_22 { pt3dadd( 5.53022, 153.836, 9.49581, 0.12 ) }
    dend_22 { pt3dadd( 11.0181, 160.586, 6.52709, 0.12 ) }
    dend_22 { pt3dadd( 15.9944, 167.022, 2.24313, 0.12 ) }
    dend_22 { pt3dadd( 19.3787, 173.621, -3.13364, 0.12 ) }
    dend_22 { pt3dadd( 22.8784, 180.791, -7.5676, 0.12 ) }
    dend_22 { pt3dadd( 24.9825, 189.132, -10.3745, 0.12 ) }
    dend_22 { pt3dadd( 27.7346, 197.185, -13.5145, 0.12 ) }
    dend_22 { pt3dadd( 29.4684, 204.995, -17.7891, 0.12 ) }
    dend_22 { pt3dadd( 31.1104, 212.931, -21.8444, 0.12 ) }
    dend_22 { pt3dadd( 31.367, 221.328, -25.1638, 0.12 ) }
    dend_22 { pt3dadd( 32.0791, 229.396, -29.2016, 0.12 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 88/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 18.9093, 34.2875, 14.973, 0.37 ) }
    dend_8 { pt3dadd( 19.0925, 33.0013, 16.513, 0.37 ) }
    dend_8 { pt3dadd( 19.2561, 31.8527, 17.8883, 0.37 ) }
    dend_8 { pt3dadd( 19.4809, 30.2747, 19.7777, 0.61 ) }
    dend_8 { pt3dadd( 19.8149, 27.9302, 22.5847, 0.37 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 93/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 18.9093, 34.2875, 14.973, 0.37 ) }
    dend_7 { pt3dadd( 17.4039, 34.0965, 14.693, 0.37 ) }
    dend_7 { pt3dadd( 15.8722, 33.9063, 14.5078, 0.49 ) }
    dend_7 { pt3dadd( 15.7721, 33.8939, 14.4979, 0.49 ) }
    dend_7 { pt3dadd( 14.0763, 33.7194, 14.4475, 0.24 ) }
    dend_7 { pt3dadd( 11.758, 33.5957, 14.4407, 0.12 ) }
    dend_7 { pt3dadd( 9.24964, 33.541, 14.4628, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_7 { pt3dadd( 7.58288, 33.6088, 14.4797, 0.37 ) }
    dend_7 { pt3dadd( 7.49026, 33.615, 14.4851, 0.37 ) }
    dend_7 { pt3dadd( 5.51168, 33.8362, 14.831, 0.37 ) }
    dend_7 { pt3dadd( 4.17163, 34.0521, 15.2221, 0.37 ) }
    dend_7 { pt3dadd( 3.65836, 34.1636, 15.4236, 0.37 ) }
    dend_7 { pt3dadd( 2.29555, 34.5397, 16.0267, 0.24 ) }
    dend_7 { pt3dadd( 0.0356403, 35.2979, 16.9552, 0.24 ) }
    dend_7 { pt3dadd( -2.50361, 36.0317, 18.086, 0.12 ) }
    dend_7 { pt3dadd( -2.58516, 36.0525, 18.1258, 0.12 ) }
    dend_7 { pt3dadd( -3.85924, 36.3184, 18.8634, 0.12 ) }
    dend_7 { pt3dadd( -3.98074, 36.3387, 18.9385, 0.12 ) }
    dend_7 { pt3dadd( -4.73418, 36.4054, 19.4214, 0.12 ) }
    dend_7 { pt3dadd( -6.64017, 36.3913, 20.5907, 0.24 ) }
    dend_7 { pt3dadd( -8.11079, 36.3097, 21.3947, 0.37 ) }
    dend_7 { pt3dadd( -9.87714, 36.2077, 22.386, 0.37 ) }
    dend_7 { pt3dadd( -10.757, 36.1461, 22.8614, 0.37 ) }
    dend_7 { pt3dadd( -12.5007, 36.0716, 23.7575, 0.37 ) }
    dend_7 { pt3dadd( -12.8281, 36.0608, 23.9319, 0.37 ) }
    dend_7 { pt3dadd( -14.8129, 36.0361, 24.7917, 0.12 ) }
    dend_7 { pt3dadd( -14.8995, 36.032, 24.8245, 0.12 ) }
    dend_7 { pt3dadd( -16.2207, 35.9444, 25.2, 0.12 ) }
    dend_7 { pt3dadd( -16.3119, 35.9501, 25.2173, 0.12 ) }
    dend_7 { pt3dadd( -18.638, 36.2736, 25.4266, 0.12 ) }
    dend_7 { pt3dadd( -20.8497, 36.6666, 25.4447, 0.12 ) }
    dend_7 { pt3dadd( -20.9564, 36.6926, 25.4353, 0.12 ) }
    dend_7 { pt3dadd( -22.5209, 37.1819, 25.2118, 0.12 ) }
    dend_7 { pt3dadd( -25.5639, 38.3384, 24.6523, 0.12 ) }
    dend_7 { pt3dadd( -25.6463, 38.3753, 24.6312, 0.12 ) }
    dend_7 { pt3dadd( -26.7695, 39.0315, 24.1927, 0.12 ) }
    dend_7 { pt3dadd( -27.9389, 39.8827, 23.7102, 0.12 ) }
    dend_7 { pt3dadd( -28.0076, 39.9365, 23.6812, 0.12 ) }
    dend_7 { pt3dadd( -36.2475, 39.8754, 25.5099, 0.12 ) }
    dend_7 { pt3dadd( -44.5961, 39.385, 26.583, 0.12 ) }
    dend_7 { pt3dadd( -52.996, 39.5405, 27.4577, 0.12 ) }
    dend_7 { pt3dadd( -61.2198, 40.6679, 29.0864, 0.12 ) }
    dend_7 { pt3dadd( -69.3826, 40.2647, 31.1602, 0.12 ) }
    dend_7 { pt3dadd( -77.4988, 40.2423, 33.4784, 0.12 ) }
    dend_7 { pt3dadd( -85.429, 41.0916, 36.2866, 0.12 ) }
    dend_7 { pt3dadd( -93.7549, 40.2576, 37.244, 0.12 ) }
    dend_7 { pt3dadd( -102.117, 40.1291, 38.3825, 0.12 ) }
    dend_7 { pt3dadd( -110.251, 38.1111, 38.117, 0.12 ) }
    dend_7 { pt3dadd( -118.58, 37.0518, 38.6965, 0.12 ) }
    dend_7 { pt3dadd( -126.888, 36.8588, 40.1626, 0.12 ) }
    dend_7 { pt3dadd( -135.285, 37.8735, 40.2441, 0.12 ) }
    dend_7 { pt3dadd( -143.466, 39.9679, 40.7618, 0.12 ) }
    dend_7 { pt3dadd( -151.702, 41.7123, 41.6071, 0.12 ) }
    dend_7 { pt3dadd( -159.516, 44.2289, 43.6433, 0.12 ) }
    dend_7 { pt3dadd( -166.554, 46.9759, 47.4404, 0.12 ) }
    dend_7 { pt3dadd( -172.776, 50.8024, 51.6542, 0.12 ) }
    dend_7 { pt3dadd( -178.248, 54.735, 56.7177, 0.12 ) }
    dend_7 { pt3dadd( -183.516, 59.4651, 61.2362, 0.12 ) }
    dend_7 { pt3dadd( -187.695, 64.5744, 66.3935, 0.12 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 52/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 103.747, -51.458, 44.5487, 0.12 ) }
    dend_4 { pt3dadd( 104.301, -50.4934, 45.6128, 0.12 ) }
    dend_4 { pt3dadd( 105.619, -47.8526, 47.7281, 0.12 ) }
    dend_4 { pt3dadd( 105.698, -47.6616, 47.8428, 0.12 ) }
    dend_4 { pt3dadd( 106.733, -45.1699, 49.3392, 0.12 ) }
    dend_4 { pt3dadd( 106.772, -45.0744, 49.3965, 0.12 ) }
    dend_4 { pt3dadd( 107.613, -43.0503, 50.6121, 0.12 ) }
    dend_4 { pt3dadd( 108.382, -40.5476, 51.859, 0.12 ) }
    dend_4 { pt3dadd( 108.798, -38.7869, 52.3483, 0.49 ) }
    dend_4 { pt3dadd( 113.704, -30.8724, 57.825, 0.49 ) }
    dend_4 { pt3dadd( 118.113, -22.1227, 62.2023, 0.49 ) }
    dend_4 { pt3dadd( 122.787, -13.1879, 65.8015, 0.49 ) }
    dend_4 { pt3dadd( 125.772, -3.98833, 70.3969, 0.49 ) }
    dend_4 { pt3dadd( 130.191, 4.9222, 74.3803, 0.49 ) }
    dend_4 { pt3dadd( 135.025, 12.9833, 79.6804, 0.49 ) }
    dend_4 { pt3dadd( 140.306, 21.048, 84.5125, 0.49 ) }
    dend_4 { pt3dadd( 146.262, 29.215, 88.2044, 0.49 ) }
    dend_4 { pt3dadd( 154.525, 35.7994, 90.7004, 0.49 ) }
    dend_4 { pt3dadd( 162.051, 42.6773, 94.4049, 0.49 ) }
    dend_4 { pt3dadd( 169.013, 50.3774, 97.3305, 0.49 ) }
    dend_4 { pt3dadd( 175.192, 58.9298, 99.1867, 0.49 ) }
    dend_4 { pt3dadd( 182.512, 66.1532, 102.556, 0.49 ) }
    dend_4 { pt3dadd( 190.504, 71.413, 107.897, 0.49 ) }
    dend_4 { pt3dadd( 199.399, 75.6738, 112.771, 0.49 ) }
    dend_4 { pt3dadd( 207.679, 79.8392, 118.721, 0.49 ) }
    dend_4 { pt3dadd( 217.452, 82.0326, 123.452, 0.49 ) }
    dend_4 { pt3dadd( 227.432, 83.0588, 128.215, 0.49 ) }
    dend_4 { pt3dadd( 237.188, 84.1622, 133.402, 0.49 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 80/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 103.747, -51.458, 44.5487, 0.12 ) }
    dend_3 { pt3dadd( 102.901, -51.8705, 43.807, 0.12 ) }
    dend_3 { pt3dadd( 102.825, -51.9006, 43.7458, 0.12 ) }
    dend_3 { pt3dadd( 101.465, -52.3911, 42.6739, 0.12 ) }
    dend_3 { pt3dadd( 101.354, -52.431, 42.5918, 0.12 ) }
    dend_3 { pt3dadd( 98.908, -53.314, 40.7785, 0.12 ) }
    dend_3 { pt3dadd( 98.8295, -53.3423, 40.7203, 0.12 ) }
    dend_3 { pt3dadd( 97.9184, -53.5823, 40.0268, 0.12 ) }
    dend_3 { pt3dadd( 97.8157, -53.6057, 39.9446, 0.12 ) }
    dend_3 { pt3dadd( 97.1193, -53.6901, 39.3219, 0.24 ) }
    dend_3 { pt3dadd( 91.0662, -53.8632, 34.3161, 0.24 ) }
    dend_3 { pt3dadd( 85.2545, -55.7058, 29.4249, 0.24 ) }
    dend_3 { pt3dadd( 78.8173, -58.7823, 26.3546, 0.24 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 93/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -16.4429, -36.4381, 3.91788, 0.24 ) }
    apic_7 { pt3dadd( -18.0437, -40.0521, 3.98746, 0.24 ) }
    apic_7 { pt3dadd( -18.1086, -40.1967, 3.98726, 0.24 ) }
    apic_7 { pt3dadd( -19.7438, -43.3962, 4.13996, 0.49 ) }
    apic_7 { pt3dadd( -20.0903, -44.0119, 4.18046, 0.49 ) }
    apic_7 { pt3dadd( -22.1402, -47.4752, 4.4395, 0.49 ) }
    apic_7 { pt3dadd( -23.932, -50.4811, 4.67732, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_7 { pt3dadd( -24.001, -50.595, 4.68106, 0.37 ) }
    apic_7 { pt3dadd( -25.9296, -53.6216, 4.81733, 0.24 ) }
    apic_7 { pt3dadd( -26.7542, -54.8179, 4.89593, 0.61 ) }
    apic_7 { pt3dadd( -26.9544, -55.1162, 4.92184, 0.61 ) }
    apic_7 { pt3dadd( -28.1555, -56.9475, 5.16233, 0.12 ) }
    apic_7 { pt3dadd( -28.4043, -57.3468, 5.22727, 0.12 ) }
    apic_7 { pt3dadd( -29.5043, -59.2963, 5.54097, 0.24 ) }
    apic_7 { pt3dadd( -29.6367, -59.6069, 5.5861, 0.24 ) }
    apic_7 { pt3dadd( -30.2317, -61.7136, 5.96767, 0.61 ) }
    apic_7 { pt3dadd( -30.2694, -61.9029, 6.00328, 0.61 ) }
    apic_7 { pt3dadd( -30.6016, -64.1841, 6.45141, 0.85 ) }
    apic_7 { pt3dadd( -30.6423, -64.4884, 6.50502, 0.85 ) }
    apic_7 { pt3dadd( -31.0084, -67.6392, 7.02389, 0.37 ) }
    apic_7 { pt3dadd( -31.5339, -71.5619, 7.62691, 0.61 ) }
    apic_7 { pt3dadd( -31.884, -73.9636, 8.02803, 0.24 ) }
    apic_7 { pt3dadd( -31.9033, -74.1171, 8.04632, 0.24 ) }
    apic_7 { pt3dadd( -32.3271, -78.0381, 8.32201, 0.37 ) }
    apic_7 { pt3dadd( -32.35, -78.2569, 8.33374, 0.37 ) }
    apic_7 { pt3dadd( -32.5466, -80.0994, 8.39379, 1.1 ) }
    apic_7 { pt3dadd( -32.6754, -82.4479, 8.43815, 0.37 ) }
    apic_7 { pt3dadd( -32.544, -85.6756, 8.50212, 0.73 ) }
    apic_7 { pt3dadd( -32.5277, -85.8304, 8.50108, 0.73 ) }
    apic_7 { pt3dadd( -32.3407, -87.535, 8.45698, 0.49 ) }
    apic_7 { pt3dadd( -32.3002, -88.0252, 8.42834, 0.49 ) }
    apic_7 { pt3dadd( -32.1338, -91.3364, 8.3305, 0.61 ) }
    apic_7 { pt3dadd( -32.1297, -91.5563, 8.33867, 0.61 ) }
    apic_7 { pt3dadd( -32.1931, -96.4269, 8.8805, 0.61 ) }
    apic_7 { pt3dadd( -32.2901, -100.385, 9.4259, 0.12 ) }
    apic_7 { pt3dadd( -32.3484, -101.776, 9.64471, 0.12 ) }
    apic_7 { pt3dadd( -32.6413, -104.736, 10.1094, 1.1 ) }
    apic_7 { pt3dadd( -33.1628, -107.702, 10.4717, 0.49 ) }
    apic_7 { pt3dadd( -33.2318, -108.038, 10.5084, 0.49 ) }
    apic_7 { pt3dadd( -34.2344, -112.057, 10.8877, 0.49 ) }
    apic_7 { pt3dadd( -34.3637, -112.521, 10.9167, 0.49 ) }
    apic_7 { pt3dadd( -36.1122, -118.25, 11.0808, 0.49 ) }
    apic_7 { pt3dadd( -38.0796, -124.166, 10.9178, 0.49 ) }
    apic_7 { pt3dadd( -38.1257, -124.29, 10.9104, 0.49 ) }
    apic_7 { pt3dadd( -39.3567, -127.457, 10.6592, 0.49 ) }
    apic_7 { pt3dadd( -39.5924, -128.062, 10.6206, 0.49 ) }
    apic_7 { pt3dadd( -40.0549, -129.369, 10.5727, 0.24 ) }
    apic_7 { pt3dadd( -40.3935, -130.489, 10.5735, 0.24 ) }
    apic_7 { pt3dadd( -40.8648, -132.242, 10.6488, 1.1 ) }
    apic_7 { pt3dadd( -41.6497, -135.386, 10.8094, 0.73 ) }
    apic_7 { pt3dadd( -42.7044, -140.16, 11.1217, 0.73 ) }
    apic_7 { pt3dadd( -42.8881, -141.032, 11.1853, 0.73 ) }
    apic_7 { pt3dadd( -43.1591, -142.391, 11.3142, 0.49 ) }
    apic_7 { pt3dadd( -43.4665, -144.118, 11.5376, 0.61 ) }
    apic_7 { pt3dadd( -43.4948, -144.317, 11.5715, 0.61 ) }
    apic_7 { pt3dadd( -43.6112, -145.369, 11.7869, 0.12 ) }
    apic_7 { pt3dadd( -43.6358, -145.815, 11.8728, 0.12 ) }
    apic_7 { pt3dadd( -43.6667, -147.053, 12.1757, 0.37 ) }
    apic_7 { pt3dadd( -43.6492, -147.428, 12.2967, 0.37 ) }
    apic_7 { pt3dadd( -43.4536, -149.458, 13.0423, 0.12 ) }
    apic_7 { pt3dadd( -43.3799, -150.309, 13.3443, 0.12 ) }
    apic_7 { pt3dadd( -43.1883, -152.538, 14.071, 0.73 ) }
    apic_7 { pt3dadd( -43.1779, -152.664, 14.1085, 0.73 ) }
    apic_7 { pt3dadd( -43.0873, -154.297, 14.5684, 0.12 ) }
    apic_7 { pt3dadd( -43.074, -154.9, 14.7293, 0.12 ) }
    apic_7 { pt3dadd( -43.089, -156.983, 15.2752, 0.73 ) }
    apic_7 { pt3dadd( -43.1417, -158.95, 15.7477, 0.12 ) }
    apic_7 { pt3dadd( -43.1507, -159.258, 15.7932, 0.12 ) }
    apic_7 { pt3dadd( -43.2261, -162.156, 16.1067, 1.22 ) }
    apic_7 { pt3dadd( -43.2621, -163.997, 16.2397, 0.12 ) }
    apic_7 { pt3dadd( -43.2731, -165.225, 16.3053, 0.37 ) }
    apic_7 { pt3dadd( -43.2706, -166.17, 16.3383, 0.12 ) }
    apic_7 { pt3dadd( -43.2511, -169.223, 16.3862, 0.61 ) }
    apic_7 { pt3dadd( -43.2433, -169.69, 16.3864, 0.61 ) }
    apic_7 { pt3dadd( -43.1684, -171.555, 16.2923, 0.24 ) }
    apic_7 { pt3dadd( -43.0932, -173.085, 16.1917, 0.24 ) }
    apic_7 { pt3dadd( -42.9812, -175.395, 16.0302, 0.24 ) }
    apic_7 { pt3dadd( -42.9724, -175.551, 16.018, 0.24 ) }
    apic_7 { pt3dadd( -42.8871, -176.931, 15.9164, 0.37 ) }
    apic_7 { pt3dadd( -42.7384, -178.75, 15.742, 0.12 ) }
    apic_7 { pt3dadd( -42.723, -178.904, 15.7246, 0.12 ) }
    apic_7 { pt3dadd( -42.5768, -180.281, 15.5746, 0.49 ) }
    apic_7 { pt3dadd( -42.4769, -181.312, 15.4816, 0.12 ) }
    apic_7 { pt3dadd( -42.4455, -181.659, 15.466, 0.12 ) }
    apic_7 { pt3dadd( -42.2948, -183.446, 15.4337, 0.73 ) }
    apic_7 { pt3dadd( -42.171, -185.148, 15.4854, 0.12 ) }
    apic_7 { pt3dadd( -42.0834, -186.377, 15.5351, 0.61 ) }
    apic_7 { pt3dadd( -42.0086, -187.451, 15.6008, 0.12 ) }
    apic_7 { pt3dadd( -41.9188, -189.203, 15.7705, 0.37 ) }
    apic_7 { pt3dadd( -40.358, -201.041, 15.2396, 0.37 ) }
    apic_7 { pt3dadd( -36.9127, -212.447, 13.8194, 0.37 ) }
    apic_7 { pt3dadd( -33.8901, -224.019, 14.2199, 0.37 ) }
    apic_7 { pt3dadd( -30.6909, -235.555, 14.3206, 0.37 ) }
    apic_7 { pt3dadd( -27.714, -247.109, 13.2017, 0.37 ) }
    apic_7 { pt3dadd( -24.3439, -258.29, 10.2916, 0.37 ) }
    apic_7 { pt3dadd( -19.09, -268.65, 6.85784, 0.37 ) }
    apic_7 { pt3dadd( -15.7779, -279.025, 1.51518, 0.37 ) }
    apic_7 { pt3dadd( -11.4261, -288.636, -4.61072, 0.37 ) }
    apic_7 { pt3dadd( -6.62621, -297.538, -11.5371, 0.37 ) }
    apic_7 { pt3dadd( -0.136104, -305.916, -17.7572, 0.37 ) }
    apic_7 { pt3dadd( 5.84102, -313.493, -25.4632, 0.37 ) }
    apic_7 { pt3dadd( 12.6097, -321.732, -31.5882, 0.37 ) }
    apic_7 { pt3dadd( 17.267, -330.68, -38.548, 0.37 ) }
    apic_7 { pt3dadd( 21.6761, -341.104, -42.8723, 0.37 ) }
    apic_7 { pt3dadd( 24.32, -351.262, -49.007, 0.37 ) }
    apic_7 { pt3dadd( 27.0582, -361.951, -53.9768, 0.37 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 99/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -16.4429, -36.4381, 3.91788, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_6 { pt3dadd( -18.9558, -39.5259, 6.26591, 0.12 ) }
    apic_6 { pt3dadd( -20.263, -40.9944, 7.04425, 0.37 ) }
    apic_6 { pt3dadd( -20.8817, -41.6139, 7.41539, 0.12 ) }
    apic_6 { pt3dadd( -21.0329, -41.7402, 7.50744, 0.12 ) }
    apic_6 { pt3dadd( -21.704, -42.2032, 7.85712, 0.61 ) }
    apic_6 { pt3dadd( -23.0707, -43.0741, 8.52085, 0.12 ) }
    apic_6 { pt3dadd( -24.5136, -43.9313, 9.02214, 0.61 ) }
    apic_6 { pt3dadd( -26.6146, -45.0809, 9.76863, 0.37 ) }
    apic_6 { pt3dadd( -28.2802, -45.9692, 10.4584, 0.37 ) }
    apic_6 { pt3dadd( -31.0271, -47.4101, 11.7046, 0.37 ) }
    apic_6 { pt3dadd( -31.2119, -47.4906, 11.7919, 0.37 ) }
    apic_6 { pt3dadd( -32.7906, -48.0714, 12.5735, 0.37 ) }
    apic_6 { pt3dadd( -33.0794, -48.1525, 12.7304, 0.37 ) }
    apic_6 { pt3dadd( -35.6335, -48.7091, 14.1626, 0.37 ) }
    apic_6 { pt3dadd( -35.8978, -48.7542, 14.3229, 0.37 ) }
    apic_6 { pt3dadd( -38.8816, -49.1389, 16.2519, 0.37 ) }
    apic_6 { pt3dadd( -39.1033, -49.165, 16.3925, 0.37 ) }
    apic_6 { pt3dadd( -42.2356, -49.4987, 18.2621, 0.37 ) }
    apic_6 { pt3dadd( -42.4651, -49.5293, 18.3883, 0.37 ) }
    apic_6 { pt3dadd( -44.4871, -49.8801, 19.3587, 0.49 ) }
    apic_6 { pt3dadd( -45.4744, -50.1532, 19.8133, 0.12 ) }
    apic_6 { pt3dadd( -45.7414, -50.2718, 19.9181, 0.12 ) }
    apic_6 { pt3dadd( -47.1819, -50.8915, 20.2279, 0.37 ) }
    apic_6 { pt3dadd( -48.0272, -51.2374, 20.2595, 0.61 ) }
    apic_6 { pt3dadd( -48.1738, -51.2891, 20.2593, 0.61 ) }
    apic_6 { pt3dadd( -49.6498, -51.7711, 20.209, 0.12 ) }
    apic_6 { pt3dadd( -50.5835, -52.0623, 20.1676, 0.12 ) }
    apic_6 { pt3dadd( -53.8008, -53.2442, 19.9855, 0.24 ) }
    apic_6 { pt3dadd( -55.0989, -53.854, 19.887, 0.24 ) }
    apic_6 { pt3dadd( -55.2859, -53.9647, 19.8696, 0.24 ) }
    apic_6 { pt3dadd( -56.7861, -54.9987, 19.7372, 0.24 ) }
    apic_6 { pt3dadd( -57.039, -55.1737, 19.7139, 0.24 ) }
    apic_6 { pt3dadd( -58.5039, -56.2578, 19.5954, 0.24 ) }
    apic_6 { pt3dadd( -59.5945, -57.0848, 19.6441, 0.24 ) }
    apic_6 { pt3dadd( -61.121, -58.1182, 19.8481, 0.24 ) }
    apic_6 { pt3dadd( -61.2317, -58.1835, 19.8689, 0.24 ) }
    apic_6 { pt3dadd( -64.2105, -59.8865, 20.5401, 0.24 ) }
    apic_6 { pt3dadd( -64.3216, -59.9492, 20.5668, 0.24 ) }
    apic_6 { pt3dadd( -67.9124, -61.8694, 21.3726, 0.24 ) }
    apic_6 { pt3dadd( -68.3267, -62.0903, 21.4628, 0.24 ) }
    apic_6 { pt3dadd( -70.1114, -63.0786, 21.8495, 0.24 ) }
    apic_6 { pt3dadd( -72.1382, -64.3093, 22.2701, 0.37 ) }
    apic_6 { pt3dadd( -74.4939, -65.9182, 22.7318, 0.37 ) }
    apic_6 { pt3dadd( -79.1685, -69.3894, 23.4957, 0.37 ) }
    apic_6 { pt3dadd( -80.4059, -70.3896, 23.657, 0.37 ) }
    apic_6 { pt3dadd( -80.5652, -70.5227, 23.6812, 0.37 ) }
    apic_6 { pt3dadd( -82.2624, -71.9792, 23.9757, 0.24 ) }
    apic_6 { pt3dadd( -83.0505, -72.6732, 24.128, 0.24 ) }
    apic_6 { pt3dadd( -84.5743, -74.2458, 24.4587, 0.24 ) }
    apic_6 { pt3dadd( -85.6248, -75.6147, 24.734, 0.61 ) }
    apic_6 { pt3dadd( -85.7199, -75.7308, 24.7558, 0.61 ) }
    apic_6 { pt3dadd( -86.4974, -76.529, 24.8975, 0.24 ) }
    apic_6 { pt3dadd( -86.6595, -76.6708, 24.9157, 0.24 ) }
    apic_6 { pt3dadd( -88.2852, -77.9512, 25.0416, 0.24 ) }
    apic_6 { pt3dadd( -88.4493, -78.0672, 25.0439, 0.24 ) }
    apic_6 { pt3dadd( -89.9016, -79.1124, 24.9852, 0.24 ) }
    apic_6 { pt3dadd( -91.0675, -79.9856, 24.9399, 0.12 ) }
    apic_6 { pt3dadd( -92.6189, -81.2183, 24.8868, 0.12 ) }
    apic_6 { pt3dadd( -101.176, -89.0223, 26.6747, 0.12 ) }
    apic_6 { pt3dadd( -108.838, -97.3146, 29.6927, 0.12 ) }
    apic_6 { pt3dadd( -117.037, -105.572, 30.7423, 0.12 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 61/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -7.65517, -40.4421, 4.11707, 0.37 ) }
    apic_4 { pt3dadd( -6.51232, -43.9395, 3.11818, 0.37 ) }
    apic_4 { pt3dadd( -5.74936, -46.6118, 2.43803, 0.37 ) }
    apic_4 { pt3dadd( -5.62519, -46.9859, 2.31898, 0.37 ) }
    apic_4 { pt3dadd( -4.1898, -51.0319, 0.926898, 0.49 ) }
    apic_4 { pt3dadd( -4.12849, -51.1927, 0.859645, 0.49 ) }
    apic_4 { pt3dadd( -2.8172, -54.538, -0.645464, 0.12 ) }
    apic_4 { pt3dadd( -2.64193, -55.0142, -0.874094, 0.12 ) }
    apic_4 { pt3dadd( -1.34665, -58.4873, -2.66521, 0.37 ) }
    apic_4 { pt3dadd( -1.20652, -58.8317, -2.8361, 0.37 ) }
    apic_4 { pt3dadd( 0.620451, -62.7798, -4.70306, 0.37 ) }
    apic_4 { pt3dadd( 0.709385, -62.9767, -4.78641, 0.37 ) }
    apic_4 { pt3dadd( 1.67041, -65.1306, -5.62472, 0.37 ) }
    apic_4 { pt3dadd( 1.73283, -65.2974, -5.67119, 0.37 ) }
    apic_4 { pt3dadd( 2.11463, -66.6999, -5.86618, 0.61 ) }
    apic_4 { pt3dadd( 2.14885, -66.8789, -5.88065, 0.61 ) }
    apic_4 { pt3dadd( 2.59694, -70.6285, -5.87244, 0.12 ) }
    apic_4 { pt3dadd( 2.62714, -70.8079, -5.8901, 0.12 ) }
    apic_4 { pt3dadd( 3.0527, -72.7801, -6.19328, 0.37 ) }
    apic_4 { pt3dadd( 3.18523, -73.3279, -6.29246, 0.37 ) }
    apic_4 { pt3dadd( 3.8458, -75.8394, -6.86821, 0.12 ) }
    apic_4 { pt3dadd( 4.01833, -76.4387, -7.02569, 0.12 ) }
    apic_4 { pt3dadd( 5.47205, -81.2531, -8.37736, 1.1 ) }
    apic_4 { pt3dadd( 6.18109, -83.5125, -9.00059, 0.24 ) }
    apic_4 { pt3dadd( 6.40146, -84.1796, -9.16946, 0.24 ) }
    apic_4 { pt3dadd( 7.22916, -86.6037, -9.73932, 0.24 ) }
    apic_4 { pt3dadd( 7.28083, -86.7457, -9.77428, 0.24 ) }
    apic_4 { pt3dadd( 8.16632, -89.4515, -10.4203, 0.85 ) }
    apic_4 { pt3dadd( 8.2117, -89.626, -10.4529, 0.85 ) }
    apic_4 { pt3dadd( 8.75288, -91.9502, -11.0762, 0.73 ) }
    apic_4 { pt3dadd( 8.80958, -92.2277, -11.1577, 0.73 ) }
    apic_4 { pt3dadd( 9.37759, -95.1342, -12.0173, 0.24 ) }
    apic_4 { pt3dadd( 9.41313, -95.3072, -12.0674, 0.24 ) }
    apic_4 { pt3dadd( 9.89287, -97.5947, -12.7402, 0.24 ) }
    apic_4 { pt3dadd( 10.6466, -101.239, -13.7477, 1.1 ) }
    apic_4 { pt3dadd( 11.6089, -105.865, -14.9112, 0.12 ) }
    apic_4 { pt3dadd( 11.8095, -106.73, -15.0833, 0.12 ) }
    apic_4 { pt3dadd( 12.3443, -108.772, -15.3684, 0.49 ) }
    apic_4 { pt3dadd( 12.5041, -109.281, -15.4289, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_4 { pt3dadd( 12.9119, -110.364, -15.5201, 0.12 ) }
    apic_4 { pt3dadd( 13.7472, -112.4, -15.3363, 0.49 ) }
    apic_4 { pt3dadd( 14.53, -114.306, -14.9653, 0.12 ) }
    apic_4 { pt3dadd( 15.0432, -115.722, -14.622, 0.12 ) }
    apic_4 { pt3dadd( 15.5979, -117.447, -14.1341, 0.12 ) }
    apic_4 { pt3dadd( 15.7466, -117.953, -13.9767, 0.12 ) }
    apic_4 { pt3dadd( 16.7537, -122.356, -12.5408, 1.22 ) }
    apic_4 { pt3dadd( 16.7811, -122.532, -12.4951, 1.22 ) }
    apic_4 { pt3dadd( 17.0543, -124.602, -12.189, 0.12 ) }
    apic_4 { pt3dadd( 17.1735, -125.341, -12.1344, 0.12 ) }
    apic_4 { pt3dadd( 17.4684, -126.856, -12.1285, 0.49 ) }
    apic_4 { pt3dadd( 17.935, -128.816, -12.3042, 0.12 ) }
    apic_4 { pt3dadd( 18.887, -131.934, -13.0513, 1.34 ) }
    apic_4 { pt3dadd( 19.8397, -134.807, -13.8526, 0.12 ) }
    apic_4 { pt3dadd( 20.3889, -136.292, -14.4207, 0.49 ) }
    apic_4 { pt3dadd( 20.5991, -136.792, -14.6299, 0.49 ) }
    apic_4 { pt3dadd( 21.3838, -138.491, -15.3899, 0.12 ) }
    apic_4 { pt3dadd( 23.1131, -141.796, -16.9352, 2.07 ) }
    apic_4 { pt3dadd( 23.1967, -141.947, -17.0029, 2.07 ) }
    apic_4 { pt3dadd( 25.3647, -146.052, -18.7429, 0.12 ) }
    apic_4 { pt3dadd( 26.658, -148.591, -19.7744, 0.49 ) }
    apic_4 { pt3dadd( 26.7335, -148.751, -19.829, 0.49 ) }
    apic_4 { pt3dadd( 28.2698, -152.323, -20.7936, 0.12 ) }
    apic_4 { pt3dadd( 28.9229, -154.056, -21.0765, 0.12 ) }
    apic_4 { pt3dadd( 29.8776, -156.811, -21.3888, 0.97 ) }
    apic_4 { pt3dadd( 29.9285, -156.988, -21.3784, 0.97 ) }
    apic_4 { pt3dadd( 30.8158, -160.712, -20.8341, 0.12 ) }
    apic_4 { pt3dadd( 31.0427, -161.734, -20.5453, 0.12 ) }
    apic_4 { pt3dadd( 31.7156, -165.128, -19.0911, 1.34 ) }
    apic_4 { pt3dadd( 31.8502, -165.782, -18.7611, 1.34 ) }
    apic_4 { pt3dadd( 32.9425, -170.609, -16.3619, 0.12 ) }
    apic_4 { pt3dadd( 32.9796, -170.773, -16.2873, 0.12 ) }
    apic_4 { pt3dadd( 33.6027, -173.69, -15.0406, 1.58 ) }
    apic_4 { pt3dadd( 34.0633, -175.973, -14.2491, 0.37 ) }
    apic_4 { pt3dadd( 34.2149, -176.837, -14.0293, 0.37 ) }
    apic_4 { pt3dadd( 34.9184, -180.539, -13.8112, 0.37 ) }
    apic_4 { pt3dadd( 35.2822, -182.286, -14.0814, 0.12 ) }
    apic_4 { pt3dadd( 35.4781, -183.236, -14.2982, 0.12 ) }
    apic_4 { pt3dadd( 35.8874, -185.441, -15.0259, 0.97 ) }
    apic_4 { pt3dadd( 35.9556, -185.822, -15.1653, 0.97 ) }
    apic_4 { pt3dadd( 36.6068, -189.524, -16.5166, 0.12 ) }
    apic_4 { pt3dadd( 37.0475, -191.953, -17.3409, 0.85 ) }
    apic_4 { pt3dadd( 37.0805, -192.124, -17.3987, 0.85 ) }
    apic_4 { pt3dadd( 37.7713, -195.415, -18.3452, 0.12 ) }
    apic_4 { pt3dadd( 37.8224, -195.665, -18.4056, 0.12 ) }
    apic_4 { pt3dadd( 38.1196, -196.883, -18.6765, 0.12 ) }
    apic_4 { pt3dadd( 38.471, -198.197, -18.895, 0.37 ) }
    apic_4 { pt3dadd( 38.7202, -198.876, -19.0749, 0.37 ) }
    apic_4 { pt3dadd( 39.7816, -201.252, -19.8707, 1.1 ) }
    apic_4 { pt3dadd( 39.8662, -201.402, -19.9384, 1.1 ) }
    apic_4 { pt3dadd( 41.7435, -204.514, -21.5524, 0.12 ) }
    apic_4 { pt3dadd( 41.8756, -204.72, -21.6732, 0.12 ) }
    apic_4 { pt3dadd( 43.1671, -206.688, -22.8941, 0.61 ) }
    apic_4 { pt3dadd( 43.3207, -206.923, -23.0383, 0.61 ) }
    apic_4 { pt3dadd( 44.6575, -208.895, -24.312, 0.12 ) }
    apic_4 { pt3dadd( 45.07, -209.499, -24.6881, 0.12 ) }
    apic_4 { pt3dadd( 45.4996, -210.136, -24.9949, 0.73 ) }
    apic_4 { pt3dadd( 46.8292, -212.163, -25.8126, 0.12 ) }
    apic_4 { pt3dadd( 47.3388, -212.971, -26.0509, 0.12 ) }
    apic_4 { pt3dadd( 48.598, -215.083, -26.4429, 1.1 ) }
    apic_4 { pt3dadd( 48.9093, -215.62, -26.4962, 1.1 ) }
    apic_4 { pt3dadd( 50.357, -218.176, -26.7643, 0.12 ) }
    apic_4 { pt3dadd( 50.6317, -218.669, -26.8065, 0.12 ) }
    apic_4 { pt3dadd( 51.222, -219.764, -26.8595, 0.12 ) }
    apic_4 { pt3dadd( 52.7398, -222.532, -27.3348, 1.46 ) }
    apic_4 { pt3dadd( 52.8239, -222.692, -27.3708, 1.46 ) }
    apic_4 { pt3dadd( 54.2295, -225.469, -28.1767, 0.12 ) }
    apic_4 { pt3dadd( 54.8925, -226.81, -28.6591, 0.61 ) }
    apic_4 { pt3dadd( 56.0362, -229.142, -29.5454, 0.12 ) }
    apic_4 { pt3dadd( 57.962, -233.264, -31.0974, 0.12 ) }
    apic_4 { pt3dadd( 59.4155, -236.452, -32.2698, 0.97 ) }
    apic_4 { pt3dadd( 60.5112, -238.887, -33.0192, 0.12 ) }
    apic_4 { pt3dadd( 60.6534, -239.204, -33.0895, 0.12 ) }
    apic_4 { pt3dadd( 62.006, -242.008, -33.6254, 1.1 ) }
    apic_4 { pt3dadd( 63.2536, -244.477, -33.9707, 0.12 ) }
    apic_4 { pt3dadd( 63.6736, -245.285, -34.0195, 0.12 ) }
    apic_4 { pt3dadd( 65.203, -248.05, -34.2108, 0.12 ) }
    apic_4 { pt3dadd( 66.7389, -250.846, -34.3656, 1.22 ) }
    apic_4 { pt3dadd( 68.4253, -254.124, -34.5715, 0.24 ) }
    apic_4 { pt3dadd( 68.7354, -254.774, -34.6169, 0.24 ) }
    apic_4 { pt3dadd( 69.3293, -256.137, -34.8056, 0.61 ) }
    apic_4 { pt3dadd( 69.4532, -256.477, -34.8694, 0.61 ) }
    apic_4 { pt3dadd( 70.1625, -259.056, -35.5079, 0.12 ) }
    apic_4 { pt3dadd( 70.6829, -261.574, -36.3319, 1.1 ) }
    apic_4 { pt3dadd( 70.7178, -261.817, -36.4166, 1.1 ) }
    apic_4 { pt3dadd( 71.0858, -264.821, -37.5057, 0.12 ) }
    apic_4 { pt3dadd( 71.1298, -265.222, -37.6478, 0.12 ) }
    apic_4 { pt3dadd( 71.2956, -266.868, -38.2133, 1.22 ) }
    apic_4 { pt3dadd( 71.5372, -269.784, -39.1755, 0.12 ) }
    apic_4 { pt3dadd( 71.6667, -271.028, -39.5842, 0.12 ) }
    apic_4 { pt3dadd( 72.029, -273.952, -40.4934, 0.12 ) }
    apic_4 { pt3dadd( 72.2889, -275.935, -41.046, 0.12 ) }
    apic_4 { pt3dadd( 72.3175, -276.112, -41.0944, 0.12 ) }
    apic_4 { pt3dadd( 72.8644, -279.003, -41.8952, 1.34 ) }
    apic_4 { pt3dadd( 73.703, -282.614, -43.0232, 0.12 ) }
    apic_4 { pt3dadd( 73.8986, -283.284, -43.2866, 0.12 ) }
    apic_4 { pt3dadd( 74.1093, -283.915, -43.6152, 0.12 ) }
    apic_4 { pt3dadd( 74.6841, -285.841, -44.7648, 0.61 ) }
    apic_4 { pt3dadd( 74.8365, -286.494, -45.169, 0.61 ) }
    apic_4 { pt3dadd( 75.2543, -289.018, -46.7797, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    apic_4 { pt3dadd( 75.2852, -289.459, -47.0531, 0.12 ) }
    apic_4 { pt3dadd( 75.3045, -292.441, -48.8181, 1.58 ) }
    apic_4 { pt3dadd( 75.1941, -294.587, -50.2346, 0.12 ) }
    apic_4 { pt3dadd( 75.0394, -295.877, -51.1464, 0.61 ) }
    apic_4 { pt3dadd( 74.9517, -296.451, -51.5687, 0.12 ) }
    apic_4 { pt3dadd( 74.8573, -296.9, -51.9414, 0.12 ) }
    apic_4 { pt3dadd( 74.491, -298.388, -53.3412, 0.97 ) }
    apic_4 { pt3dadd( 73.4408, -301.88, -57.0968, 0.12 ) }
    apic_4 { pt3dadd( 73.2989, -302.354, -57.7677, 0.73 ) }
    apic_4 { pt3dadd( 73.1476, -302.845, -58.5799, 0.73 ) }
    apic_4 { pt3dadd( 72.7926, -303.887, -60.3429, 0.12 ) }
    apic_4 { pt3dadd( 72.7059, -304.198, -60.8584, 0.12 ) }
    apic_4 { pt3dadd( 72.5897, -304.849, -61.8769, 0.61 ) }
    apic_4 { pt3dadd( 72.2131, -307.997, -65.9391, 0.12 ) }
    apic_4 { pt3dadd( 72.2009, -308.169, -66.1295, 0.12 ) }
    apic_4 { pt3dadd( 72.1362, -309.851, -67.6737, 1.22 ) }
    apic_4 { pt3dadd( 72.1619, -313.236, -70.2038, 0.12 ) }
    apic_4 { pt3dadd( 72.3294, -316.17, -72.0179, 0.73 ) }
    apic_4 { pt3dadd( 72.4751, -317.793, -72.8589, 0.12 ) }
    apic_4 { pt3dadd( 72.6634, -319.475, -73.55, 0.12 ) }
    apic_4 { pt3dadd( 72.9122, -321.494, -74.2938, 0.12 ) }
    apic_4 { pt3dadd( 73.3106, -324.653, -75.2941, 1.46 ) }
    apic_4 { pt3dadd( 73.6005, -327.447, -75.9607, 0.12 ) }
    apic_4 { pt3dadd( 73.6149, -327.597, -75.9926, 0.12 ) }
    apic_4 { pt3dadd( 73.7636, -329.23, -76.4336, 0.12 ) }
    apic_4 { pt3dadd( 73.9685, -331.989, -77.2907, 1.22 ) }
    apic_4 { pt3dadd( 74.0569, -333.973, -77.9651, 0.12 ) }
    apic_4 { pt3dadd( 74.0498, -334.536, -78.155, 0.12 ) }
    apic_4 { pt3dadd( 74.0384, -334.71, -78.2134, 0.12 ) }
    apic_4 { pt3dadd( 73.8204, -337.35, -79.0037, 0.61 ) }
    apic_4 { pt3dadd( 73.6834, -338.754, -79.4301, 0.12 ) }
    apic_4 { pt3dadd( 73.6506, -339.279, -79.596, 0.24 ) }
    apic_4 { pt3dadd( 73.6069, -340.487, -79.9407, 0.24 ) }
    apic_4 { pt3dadd( 73.6084, -340.659, -80.0062, 0.24 ) }
    apic_4 { pt3dadd( 73.6889, -342.345, -80.7397, 0.73 ) }
    apic_4 { pt3dadd( 73.7866, -343.471, -81.2593, 0.73 ) }
    apic_4 { pt3dadd( 74.0395, -345.608, -82.365, 0.12 ) }
    apic_4 { pt3dadd( 74.0626, -345.771, -82.448, 0.12 ) }
    apic_4 { pt3dadd( 74.5601, -348.809, -84.0241, 0.12 ) }
    apic_4 { pt3dadd( 74.7303, -349.597, -84.5171, 0.12 ) }
    apic_4 { pt3dadd( 74.9564, -350.511, -85.0842, 0.12 ) }
    apic_4 { pt3dadd( 75.2131, -351.359, -85.553, 0.12 ) }
    apic_4 { pt3dadd( 75.6418, -352.593, -86.2154, 1.34 ) }
    apic_4 { pt3dadd( 75.7455, -352.858, -86.3458, 1.34 ) }
    apic_4 { pt3dadd( 77.7723, -357.599, -88.3182, 0.12 ) }
    apic_4 { pt3dadd( 78.7601, -359.844, -89.2334, 0.12 ) }
    apic_4 { pt3dadd( 79.5569, -361.614, -89.9349, 0.12 ) }
    apic_4 { pt3dadd( 79.6274, -361.774, -89.9938, 0.12 ) }
    apic_4 { pt3dadd( 80.5723, -364.046, -90.709, 1.1 ) }
    apic_4 { pt3dadd( 81.8013, -367.387, -91.4574, 0.12 ) }
    apic_4 { pt3dadd( 82.137, -368.426, -91.5997, 0.12 ) }
    apic_4 { pt3dadd( 82.244, -368.804, -91.6594, 0.12 ) }
    apic_4 { pt3dadd( 82.7094, -371.222, -91.8138, 0.85 ) }
    apic_4 { pt3dadd( 82.9766, -373.182, -91.7494, 0.12 ) }
    apic_4 { pt3dadd( 83.0613, -375.745, -91.3518, 0.12 ) }
    apic_4 { pt3dadd( 83.0289, -376.365, -91.1977, 1.22 ) }
    apic_4 { pt3dadd( 82.9821, -376.822, -91.0637, 1.22 ) }
    apic_4 { pt3dadd( 82.32, -381.433, -89.7424, 0.12 ) }
    apic_4 { pt3dadd( 82.276, -381.679, -89.6708, 0.12 ) }
    apic_4 { pt3dadd( 81.9729, -383.583, -89.3877, 0.12 ) }
    apic_4 { pt3dadd( 81.9501, -383.765, -89.3889, 0.12 ) }
    apic_4 { pt3dadd( 81.8119, -385.555, -89.6304, 0.61 ) }
    apic_4 { pt3dadd( 81.8161, -387.496, -90.1619, 0.12 ) }
    apic_4 { pt3dadd( 81.9867, -388.852, -90.7931, 0.97 ) }
    apic_4 { pt3dadd( 82.5432, -391.723, -92.2151, 0.12 ) }
    apic_4 { pt3dadd( 82.7101, -392.346, -92.5485, 0.61 ) }
    apic_4 { pt3dadd( 82.7714, -392.553, -92.6588, 0.61 ) }
    apic_4 { pt3dadd( 83.1869, -394.384, -93.2263, 0.12 ) }
    apic_4 { pt3dadd( 83.5828, -397.076, -93.5139, 0.73 ) }
    apic_4 { pt3dadd( 83.5862, -397.243, -93.4922, 0.73 ) }
    apic_4 { pt3dadd( 83.3394, -399.645, -92.4804, 0.12 ) }
    apic_4 { pt3dadd( 83.2318, -400.191, -92.2035, 0.12 ) }
    apic_4 { pt3dadd( 81.6283, -405.875, -88.8597, 0.12 ) }
    apic_4 { pt3dadd( 81.5549, -406.067, -88.7302, 0.12 ) }
    apic_4 { pt3dadd( 80.3995, -408.552, -86.8702, 0.61 ) }
    apic_4 { pt3dadd( 79.1433, -410.778, -85.0287, 0.61 ) }
    apic_4 { pt3dadd( 77.9033, -412.559, -83.3464, 0.12 ) }
    apic_4 { pt3dadd( 77.8253, -412.661, -83.2544, 0.12 ) }
    apic_4 { pt3dadd( 77.2917, -413.201, -82.7729, 0.37 ) }
    apic_4 { pt3dadd( 76.8257, -413.684, -82.4302, 0.37 ) }
    apic_4 { pt3dadd( 74.2535, -416.345, -81.0539, 0.37 ) }
    apic_4 { pt3dadd( 74.0094, -416.59, -80.9534, 0.37 ) }
    apic_4 { pt3dadd( 72.9052, -417.632, -80.3928, 0.85 ) }
    apic_4 { pt3dadd( 72.77, -417.75, -80.3376, 0.85 ) }
    apic_4 { pt3dadd( 71.271, -418.962, -79.8162, 0.12 ) }
    apic_4 { pt3dadd( 71.1191, -419.071, -79.7817, 0.12 ) }
    apic_4 { pt3dadd( 69.8234, -419.892, -79.777, 0.49 ) }
    apic_4 { pt3dadd( 69.6821, -419.967, -79.7782, 0.49 ) }
    apic_4 { pt3dadd( 68.3066, -420.574, -79.8183, 0.12 ) }
    apic_4 { pt3dadd( 67.8627, -420.763, -79.8246, 0.12 ) }
    apic_4 { pt3dadd( 66.219, -421.399, -79.8043, 0.61 ) }
    apic_4 { pt3dadd( 65.2622, -421.762, -79.7815, 0.12 ) }
    apic_4 { pt3dadd( 64.9022, -421.889, -79.7661, 0.12 ) }
    apic_4 { pt3dadd( 63.277, -422.432, -79.7123, 0.61 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 94/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -7.65517, -40.4421, 4.11707, 0.37 ) }
    apic_3 { pt3dadd( -7.97538, -41.3961, 4.00204, 0.37 ) }
    apic_3 { pt3dadd( -8.35585, -42.6198, 3.84319, 0.37 ) }
    apic_3 { pt3dadd( -8.41763, -42.8448, 3.81637, 0.37 ) }
    apic_3 { pt3dadd( -8.81369, -44.371, 3.64204, 0.37 ) }
    apic_3 { pt3dadd( -9.34221, -46.546, 3.3324, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_3 { pt3dadd( -9.89635, -48.942, 2.95415, 0.49 ) }
    apic_3 { pt3dadd( -9.91204, -49.0292, 2.941, 0.49 ) }
    apic_3 { pt3dadd( -10.0557, -49.9058, 2.78501, 0.24 ) }
    apic_3 { pt3dadd( -10.0826, -50.0573, 2.75577, 0.24 ) }
    apic_3 { pt3dadd( -10.3659, -51.5518, 2.43962, 0.37 ) }
    apic_3 { pt3dadd( -10.4222, -51.8513, 2.37868, 0.37 ) }
    apic_3 { pt3dadd( -10.97, -54.4901, 1.90146, 0.37 ) }
    apic_3 { pt3dadd( -11.4422, -56.4304, 1.63802, 0.37 ) }
    apic_3 { pt3dadd( -11.857, -57.8971, 1.49209, 0.49 ) }
    apic_3 { pt3dadd( -11.9021, -58.0404, 1.48369, 0.49 ) }
    apic_3 { pt3dadd( -12.4561, -59.6464, 1.4601, 0.49 ) }
    apic_3 { pt3dadd( -12.9075, -60.8443, 1.49562, 0.37 ) }
    apic_3 { pt3dadd( -13.6091, -62.5374, 1.6286, 0.49 ) }
    apic_3 { pt3dadd( -14.1597, -63.8953, 1.78376, 0.37 ) }
    apic_3 { pt3dadd( -14.7826, -65.476, 1.9046, 0.37 ) }
    apic_3 { pt3dadd( -14.8214, -65.5751, 1.91085, 0.37 ) }
    apic_3 { pt3dadd( -15.6972, -67.8193, 2.02291, 0.37 ) }
    apic_3 { pt3dadd( -15.8919, -68.3504, 2.04226, 0.37 ) }
    apic_3 { pt3dadd( -16.986, -71.5673, 2.08323, 0.49 ) }
    apic_3 { pt3dadd( -17.4121, -72.8463, 2.15846, 0.49 ) }
    apic_3 { pt3dadd( -17.9635, -74.5283, 2.32083, 0.37 ) }
    apic_3 { pt3dadd( -18.0761, -74.8433, 2.35763, 0.37 ) }
    apic_3 { pt3dadd( -18.2756, -75.4207, 2.41757, 0.49 ) }
    apic_3 { pt3dadd( -18.31, -75.5215, 2.43085, 0.49 ) }
    apic_3 { pt3dadd( -18.8986, -77.5268, 2.76837, 0.24 ) }
    apic_3 { pt3dadd( -18.9189, -77.6295, 2.78502, 0.24 ) }
    apic_3 { pt3dadd( -19.1719, -79.6783, 3.00476, 0.24 ) }
    apic_3 { pt3dadd( -19.3745, -81.6319, 3.34804, 0.37 ) }
    apic_3 { pt3dadd( -19.3871, -81.7781, 3.37826, 0.37 ) }
    apic_3 { pt3dadd( -19.5219, -83.5862, 3.7761, 0.61 ) }
    apic_3 { pt3dadd( -19.6539, -85.8703, 4.28736, 0.37 ) }
    apic_3 { pt3dadd( -19.743, -87.5037, 4.70493, 0.73 ) }
    apic_3 { pt3dadd( -19.881, -90.5658, 5.62713, 0.73 ) }
    apic_3 { pt3dadd( -19.9044, -90.8606, 5.72087, 0.73 ) }
    apic_3 { pt3dadd( -20.0699, -92.459, 6.20093, 0.37 ) }
    apic_3 { pt3dadd( -20.0825, -92.5603, 6.22995, 0.37 ) }
    apic_3 { pt3dadd( -20.2038, -93.6811, 6.49265, 0.37 ) }
    apic_3 { pt3dadd( -20.2195, -93.9871, 6.53511, 0.37 ) }
    apic_3 { pt3dadd( -20.1838, -95.1692, 6.52399, 0.24 ) }
    apic_3 { pt3dadd( -20.1395, -95.8022, 6.5369, 0.24 ) }
    apic_3 { pt3dadd( -20.0608, -96.5453, 6.5713, 0.37 ) }
    apic_3 { pt3dadd( -19.9004, -97.802, 6.66574, 0.12 ) }
    apic_3 { pt3dadd( -19.8681, -98.011, 6.68681, 0.12 ) }
    apic_3 { pt3dadd( -19.6702, -99.1168, 6.83224, 0.61 ) }
    apic_3 { pt3dadd( -19.3373, -100.774, 7.11027, 0.24 ) }
    apic_3 { pt3dadd( -19.3201, -100.86, 7.12485, 0.24 ) }
    apic_3 { pt3dadd( -19.1401, -101.79, 7.27696, 0.12 ) }
    apic_3 { pt3dadd( -19.1235, -101.877, 7.29222, 0.12 ) }
    apic_3 { pt3dadd( -18.896, -103.108, 7.51959, 0.61 ) }
    apic_3 { pt3dadd( -18.8816, -103.212, 7.53741, 0.61 ) }
    apic_3 { pt3dadd( -18.7633, -104.279, 7.70624, 0.12 ) }
    apic_3 { pt3dadd( -18.7245, -105.361, 7.86042, 0.61 ) }
    apic_3 { pt3dadd( -18.7969, -106.749, 8.10028, 0.12 ) }
    apic_3 { pt3dadd( -18.8084, -106.885, 8.12713, 0.12 ) }
    apic_3 { pt3dadd( -18.9083, -107.839, 8.37447, 0.85 ) }
    apic_3 { pt3dadd( -18.9196, -107.941, 8.40494, 0.85 ) }
    apic_3 { pt3dadd( -19.0773, -108.999, 8.81265, 0.12 ) }
    apic_3 { pt3dadd( -19.286, -110.284, 9.3823, 0.61 ) }
    apic_3 { pt3dadd( -19.4248, -111.254, 9.7979, 0.12 ) }
    apic_3 { pt3dadd( -19.5689, -112.491, 10.3114, 0.12 ) }
    apic_3 { pt3dadd( -19.6033, -112.928, 10.4891, 1.1 ) }
    apic_3 { pt3dadd( -19.7004, -114.361, 11.0233, 0.12 ) }
    apic_3 { pt3dadd( -19.7062, -114.488, 11.0613, 0.12 ) }
    apic_3 { pt3dadd( -19.8084, -115.575, 11.2166, 0.49 ) }
    apic_3 { pt3dadd( -19.8232, -115.68, 11.2209, 0.49 ) }
    apic_3 { pt3dadd( -19.9037, -116.301, 11.1731, 0.12 ) }
    apic_3 { pt3dadd( -19.9208, -116.444, 11.1569, 0.12 ) }
    apic_3 { pt3dadd( -20.0415, -117.578, 11.0058, 1.1 ) }
    apic_3 { pt3dadd( -20.1598, -118.723, 10.896, 0.49 ) }
    apic_3 { pt3dadd( -20.2912, -120.289, 10.8132, 0.37 ) }
    apic_3 { pt3dadd( -20.3434, -121.174, 10.7777, 0.12 ) }
    apic_3 { pt3dadd( -20.3639, -122.168, 10.7369, 0.37 ) }
    apic_3 { pt3dadd( -20.3378, -123.222, 10.6783, 0.49 ) }
    apic_3 { pt3dadd( -20.2486, -124.569, 10.5443, 0.12 ) }
    apic_3 { pt3dadd( -20.0858, -126.159, 10.34, 0.85 ) }
    apic_3 { pt3dadd( -19.9479, -127.204, 10.1906, 0.85 ) }
    apic_3 { pt3dadd( -19.7689, -128.396, 10.0262, 0.12 ) }
    apic_3 { pt3dadd( -19.5183, -129.866, 9.80148, 0.85 ) }
    apic_3 { pt3dadd( -19.3697, -130.86, 9.7002, 0.85 ) }
    apic_3 { pt3dadd( -19.1719, -132.422, 9.66809, 0.24 ) }
    apic_3 { pt3dadd( -19.1334, -132.766, 9.68238, 0.24 ) }
    apic_3 { pt3dadd( -19.0144, -134.437, 9.84482, 0.97 ) }
    apic_3 { pt3dadd( -19.0114, -134.525, 9.85836, 0.97 ) }
    apic_3 { pt3dadd( -18.9656, -136.73, 10.2798, 0.12 ) }
    apic_3 { pt3dadd( -18.9303, -138.641, 10.6773, 0.73 ) }
    apic_3 { pt3dadd( -18.8997, -140.003, 10.8734, 0.12 ) }
    apic_3 { pt3dadd( -18.8734, -141.079, 10.9686, 0.12 ) }
    apic_3 { pt3dadd( -18.8509, -142.133, 10.9986, 0.12 ) }
    apic_3 { pt3dadd( -18.8148, -143.732, 10.9462, 1.34 ) }
    apic_3 { pt3dadd( -18.8114, -143.837, 10.9348, 1.34 ) }
    apic_3 { pt3dadd( -18.7138, -146.121, 10.6141, 0.37 ) }
    apic_3 { pt3dadd( -18.7081, -146.226, 10.6024, 0.37 ) }
    apic_3 { pt3dadd( -18.5748, -147.572, 10.4815, 0.37 ) }
    apic_3 { pt3dadd( -18.5507, -147.783, 10.4665, 0.37 ) }
    apic_3 { pt3dadd( -18.3766, -149.471, 10.4599, 1.1 ) }
    apic_3 { pt3dadd( -18.2059, -150.987, 10.5427, 0.12 ) }
    apic_3 { pt3dadd( -18.0827, -151.997, 10.7013, 0.12 ) }
    apic_3 { pt3dadd( -17.9458, -153.089, 10.9057, 0.85 ) }
    apic_3 { pt3dadd( -17.9052, -153.398, 10.9722, 0.85 ) }
    apic_3 { pt3dadd( -17.6861, -155.143, 11.4549, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_3 { pt3dadd( -17.4874, -156.953, 12.0519, 0.97 ) }
    apic_3 { pt3dadd( -17.3618, -158.487, 12.6081, 0.12 ) }
    apic_3 { pt3dadd( -17.3538, -158.619, 12.6523, 0.12 ) }
    apic_3 { pt3dadd( -17.3706, -159.426, 12.967, 0.49 ) }
    apic_3 { pt3dadd( -17.5905, -161.473, 13.8181, 0.49 ) }
    apic_3 { pt3dadd( -17.6184, -161.609, 13.877, 0.49 ) }
    apic_3 { pt3dadd( -17.7445, -162.001, 14.0551, 0.49 ) }
    apic_3 { pt3dadd( -18.0765, -162.829, 14.3956, 0.12 ) }
    apic_3 { pt3dadd( -18.8675, -164.637, 15.0841, 1.1 ) }
    apic_3 { pt3dadd( -19.3264, -165.632, 15.4187, 0.12 ) }
    apic_3 { pt3dadd( -19.6069, -166.293, 15.5976, 0.61 ) }
    apic_3 { pt3dadd( -19.795, -166.875, 15.7479, 0.12 ) }
    apic_3 { pt3dadd( -19.8599, -167.255, 15.8196, 0.12 ) }
    apic_3 { pt3dadd( -19.8125, -167.869, 15.877, 0.85 ) }
    apic_3 { pt3dadd( -19.502, -168.714, 15.8433, 0.12 ) }
    apic_3 { pt3dadd( -18.9949, -169.491, 15.8167, 0.37 ) }
    apic_3 { pt3dadd( -18.7931, -169.755, 15.8091, 0.37 ) }
    apic_3 { pt3dadd( -18.0352, -170.797, 15.7951, 0.12 ) }
    apic_3 { pt3dadd( -17.5149, -171.648, 15.8, 0.12 ) }
    apic_3 { pt3dadd( -17.455, -171.779, 15.8059, 0.12 ) }
    apic_3 { pt3dadd( -16.977, -173.14, 15.8945, 1.34 ) }
    apic_3 { pt3dadd( -16.5964, -174.604, 16.0208, 0.12 ) }
    apic_3 { pt3dadd( -16.2928, -176.134, 16.1878, 1.1 ) }
    apic_3 { pt3dadd( -16.0715, -177.775, 16.4097, 0.12 ) }
    apic_3 { pt3dadd( -15.8991, -179.708, 16.6564, 0.73 ) }
    apic_3 { pt3dadd( -15.8915, -179.812, 16.6715, 0.73 ) }
    apic_3 { pt3dadd( -15.8586, -180.743, 16.9356, 0.12 ) }
    apic_3 { pt3dadd( -15.8516, -180.931, 17.0151, 0.12 ) }
    apic_3 { pt3dadd( -15.7985, -181.993, 17.5871, 0.12 ) }
    apic_3 { pt3dadd( -15.7452, -182.841, 18.1235, 0.37 ) }
    apic_3 { pt3dadd( -15.6626, -184.394, 19.318, 1.46 ) }
    apic_3 { pt3dadd( -15.5342, -187.136, 21.2599, 0.12 ) }
    apic_3 { pt3dadd( -15.5216, -187.497, 21.5085, 0.24 ) }
    apic_3 { pt3dadd( -15.5156, -187.671, 21.6173, 0.24 ) }
    apic_3 { pt3dadd( -15.5138, -188.02, 21.852, 0.24 ) }
    apic_3 { pt3dadd( -15.5511, -189.363, 22.77, 0.24 ) }
    apic_3 { pt3dadd( -15.5491, -192.752, 23.2404, 0.24 ) }
    apic_3 { pt3dadd( -15.538, -192.839, 23.1776, 0.24 ) }
    apic_3 { pt3dadd( -15.4127, -193.607, 22.5181, 0.12 ) }
    apic_3 { pt3dadd( -12.9857, -199.868, 17.6287, 0.12 ) }
    apic_3 { pt3dadd( -11.6088, -206.687, 13.1733, 0.12 ) }
    apic_3 { pt3dadd( -11.7745, -212.639, 7.33567, 0.12 ) }
    apic_3 { pt3dadd( -11.7011, -218.472, 1.36437, 0.12 ) }
    apic_3 { pt3dadd( -10.9758, -224.005, -4.87104, 0.12 ) }
    apic_3 { pt3dadd( -9.50813, -229.412, -11.096, 0.12 ) }
    apic_3 { pt3dadd( -8.58788, -233.809, -18.2386, 0.12 ) }
    apic_3 { pt3dadd( -6.40746, -237.371, -25.6125, 0.12 ) }
    apic_3 { pt3dadd( -3.60169, -241.252, -32.5859, 0.12 ) }
    apic_3 { pt3dadd( -1.6283, -245.247, -39.7724, 0.12 ) }
    apic_3 { pt3dadd( 1.6586, -248.88, -46.6811, 0.12 ) }
    apic_3 { pt3dadd( 6.26078, -251.498, -53.3355, 0.12 ) }
    apic_3 { pt3dadd( 10.0015, -254.908, -60.1362, 0.12 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 52/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -15.21, 88.3514, 30.0785, 0.12 ) }
    dend_31 { pt3dadd( -15.4072, 90.2518, 31.5083, 0.12 ) }
    dend_31 { pt3dadd( -15.424, 90.4141, 31.6304, 0.12 ) }
    dend_31 { pt3dadd( -15.5925, 92.0377, 32.8519, 0.61 ) }
    dend_31 { pt3dadd( -16.3813, 101.178, 38.9718, 0.61 ) }
    dend_31 { pt3dadd( -15.5917, 110.29, 45.1716, 0.61 ) }
    dend_31 { pt3dadd( -15.593, 120.318, 49.6139, 0.61 ) }
    dend_31 { pt3dadd( -13.8587, 129.417, 55.6629, 0.61 ) }
    dend_31 { pt3dadd( -10.8744, 138.516, 61.2387, 0.61 ) }
    dend_31 { pt3dadd( -7.30275, 147.085, 67.375, 0.61 ) }
    dend_31 { pt3dadd( -3.27742, 155.71, 73.1471, 0.61 ) }
    dend_31 { pt3dadd( 2.07056, 164.304, 77.8381, 0.61 ) }
    dend_31 { pt3dadd( 7.40289, 173.829, 79.8436, 0.61 ) }
    dend_31 { pt3dadd( 11.3593, 184.056, 81.0011, 0.61 ) }
    dend_31 { pt3dadd( 14.6566, 194.549, 81.2265, 0.61 ) }
    dend_31 { pt3dadd( 19.1861, 204.611, 81.8675, 0.61 ) }
    dend_31 { pt3dadd( 25.7661, 213.629, 82.1133, 0.61 ) }
    dend_31 { pt3dadd( 33.9103, 221.414, 81.8318, 0.61 ) }
    dend_31 { pt3dadd( 42.7086, 228.404, 80.4113, 0.61 ) }
    dend_31 { pt3dadd( 52.4048, 233.898, 77.9935, 0.61 ) }
    dend_31 { pt3dadd( 61.1291, 240.362, 74.6506, 0.61 ) }
    dend_31 { pt3dadd( 69.5417, 246.763, 70.4751, 0.61 ) }
    dend_31 { pt3dadd( 79.062, 251.722, 66.5625, 0.61 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 75/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -15.21, 88.3514, 30.0785, 0.12 ) }
    dend_30 { pt3dadd( -18.485, 90.4233, 29.8877, 0.12 ) }
    dend_30 { pt3dadd( -20.5509, 91.6696, 29.6145, 0.12 ) }
    dend_30 { pt3dadd( -20.6867, 91.7414, 29.5973, 0.12 ) }
    dend_30 { pt3dadd( -22.6707, 92.7392, 29.3906, 0.24 ) }
    dend_30 { pt3dadd( -26.8265, 95.1341, 28.8546, 0.24 ) }
    dend_30 { pt3dadd( -27.0023, 95.2529, 28.8047, 0.24 ) }
    dend_30 { pt3dadd( -28.4021, 96.2668, 28.1112, 0.24 ) }
    dend_30 { pt3dadd( -29.5817, 97.0835, 27.4651, 0.24 ) }
    dend_30 { pt3dadd( -30.8122, 97.9455, 26.8101, 0.24 ) }
    dend_30 { pt3dadd( -32.6794, 99.3653, 25.8141, 0.24 ) }
    dend_30 { pt3dadd( -35.793, 102.399, 24.0131, 0.24 ) }
    dend_30 { pt3dadd( -36.433, 103.076, 23.5769, 0.24 ) }
    dend_30 { pt3dadd( -37.5714, 104.523, 22.7784, 0.24 ) }
    dend_30 { pt3dadd( -38.0658, 105.305, 22.4832, 0.24 ) }
    dend_30 { pt3dadd( -38.5561, 106.241, 22.2839, 0.24 ) }
    dend_30 { pt3dadd( -39.9005, 109.231, 22.2592, 0.24 ) }
    dend_30 { pt3dadd( -39.9419, 109.435, 22.2956, 0.24 ) }
    dend_30 { pt3dadd( -39.5655, 113.2, 23.4166, 0.24 ) }
    dend_30 { pt3dadd( -38.9707, 115.238, 24.2621, 0.24 ) }
    dend_30 { pt3dadd( -38.6522, 115.96, 24.6643, 0.24 ) }
    dend_30 { pt3dadd( -38.571, 116.106, 24.7571, 0.24 ) }
    dend_30 { pt3dadd( -37.3705, 117.967, 25.9855, 0.24 ) }
    dend_30 { pt3dadd( -35.1989, 121.041, 27.713, 0.24 ) }
    dend_30 { pt3dadd( -34.1324, 122.398, 28.3425, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_30 { pt3dadd( -32.0131, 124.831, 29.5671, 0.24 ) }
    dend_30 { pt3dadd( -30.8748, 126.132, 30.2088, 0.24 ) }
    dend_30 { pt3dadd( -29.7687, 127.342, 30.9049, 0.24 ) }
    dend_30 { pt3dadd( -28.8054, 128.357, 31.5114, 0.24 ) }
    dend_30 { pt3dadd( -28.7157, 128.438, 31.5597, 0.24 ) }
    dend_30 { pt3dadd( -26.4875, 130.125, 32.7351, 0.24 ) }
    dend_30 { pt3dadd( -25.1641, 131.041, 33.4563, 0.24 ) }
    dend_30 { pt3dadd( -22.3162, 133.126, 35.0236, 0.24 ) }
    dend_30 { pt3dadd( -20.6243, 134.46, 35.8577, 0.24 ) }
    dend_30 { pt3dadd( -20.5126, 134.559, 35.8978, 0.24 ) }
    dend_30 { pt3dadd( -18.6041, 136.428, 36.2144, 0.37 ) }
    dend_30 { pt3dadd( -17.8552, 137.301, 36.1098, 0.37 ) }
    dend_30 { pt3dadd( -16.2988, 139.241, 35.7835, 0.49 ) }
    dend_30 { pt3dadd( -15.1884, 140.658, 35.455, 0.49 ) }
    dend_30 { pt3dadd( -13.6381, 142.672, 35.1507, 0.37 ) }
    dend_30 { pt3dadd( -12.1233, 144.644, 34.9557, 0.37 ) }
    dend_30 { pt3dadd( -10.0518, 147.394, 34.8658, 0.49 ) }
    dend_30 { pt3dadd( -7.50692, 150.544, 35.2462, 0.49 ) }
    dend_30 { pt3dadd( -6.77191, 151.354, 35.4722, 0.37 ) }
    dend_30 { pt3dadd( -4.61075, 153.517, 36.5461, 0.49 ) }
    dend_30 { pt3dadd( -4.50545, 153.615, 36.6009, 0.49 ) }
    dend_30 { pt3dadd( -2.58723, 155.291, 37.4651, 0.37 ) }
    dend_30 { pt3dadd( -0.44862, 157.041, 38.1924, 0.24 ) }
    dend_30 { pt3dadd( 1.51803, 158.671, 38.3438, 0.24 ) }
    dend_30 { pt3dadd( 3.51624, 160.344, 38.1439, 0.24 ) }
    dend_30 { pt3dadd( 6.9475, 163.522, 36.9578, 0.24 ) }
    dend_30 { pt3dadd( 8.45086, 164.975, 36.2168, 0.12 ) }
    dend_30 { pt3dadd( 9.18924, 165.783, 35.57, 0.12 ) }
    dend_30 { pt3dadd( 9.28518, 165.922, 35.4304, 0.12 ) }
    dend_30 { pt3dadd( 9.55435, 166.477, 34.8297, 0.12 ) }
    dend_30 { pt3dadd( 10.2433, 168.114, 32.9082, 0.12 ) }
    dend_30 { pt3dadd( 13.2418, 179.174, 34.2446, 0.12 ) }
    dend_30 { pt3dadd( 14.8213, 190.337, 36.5107, 0.12 ) }
    dend_30 { pt3dadd( 15.1115, 201.762, 37.4656, 0.12 ) }
    dend_30 { pt3dadd( 15.8514, 213.217, 37.1061, 0.12 ) }
    dend_30 { pt3dadd( 15.0516, 224.519, 38.8236, 0.12 ) }
    dend_30 { pt3dadd( 11.995, 235.451, 40.469, 0.12 ) }
    dend_30 { pt3dadd( 9.22345, 246.563, 41.0043, 0.12 ) }
    dend_30 { pt3dadd( 5.09194, 257.272, 40.2678, 0.12 ) }
    dend_30 { pt3dadd( -0.622284, 267.275, 39.3984, 0.12 ) }
    dend_30 { pt3dadd( -7.27, 276.622, 41.0161, 0.12 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 41/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -28.5925, 11.4319, 2.9675, 0.37 ) }
    dend_25 { pt3dadd( -31.996, 14.2622, 3.16761, 0.37 ) }
    dend_25 { pt3dadd( -32.0823, 14.3323, 3.17704, 0.37 ) }
    dend_25 { pt3dadd( -34.294, 16.0926, 3.46801, 0.37 ) }
    dend_25 { pt3dadd( -36.7223, 17.8849, 3.82205, 0.37 ) }
    dend_25 { pt3dadd( -38.1705, 18.8794, 4.04373, 0.37 ) }
    dend_25 { pt3dadd( -40.173, 20.1003, 4.35804, 0.61 ) }
    dend_25 { pt3dadd( -41.4815, 20.7571, 4.65921, 0.37 ) }
    dend_25 { pt3dadd( -41.6474, 20.8327, 4.71665, 0.37 ) }
    dend_25 { pt3dadd( -43.1858, 21.4351, 5.42363, 0.37 ) }
    dend_25 { pt3dadd( -44.8445, 21.9902, 6.39176, 0.49 ) }
    dend_25 { pt3dadd( -46.7583, 22.5057, 7.49425, 0.49 ) }
    dend_25 { pt3dadd( -46.8994, 22.5401, 7.57969, 0.49 ) }
    dend_25 { pt3dadd( -51.3194, 23.6168, 10.4883, 0.49 ) }
    dend_25 { pt3dadd( -51.41, 23.6408, 10.5524, 0.49 ) }
    dend_25 { pt3dadd( -52.6586, 24.0183, 11.5699, 0.49 ) }
    dend_25 { pt3dadd( -55.6559, 24.9646, 14.3489, 0.61 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 58/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -28.5925, 11.4319, 2.9675, 0.49 ) }
    dend_24 { pt3dadd( -29.8028, 11.0574, 3.33746, 0.49 ) }
    dend_24 { pt3dadd( -29.9574, 10.9866, 3.38632, 0.49 ) }
    dend_24 { pt3dadd( -30.8417, 10.5242, 3.6687, 0.49 ) }
    dend_24 { pt3dadd( -32.3308, 9.73272, 4.10654, 0.49 ) }
    dend_24 { pt3dadd( -32.4825, 9.64977, 4.14856, 0.49 ) }
    dend_24 { pt3dadd( -33.5159, 9.05039, 4.43335, 0.37 ) }
    dend_24 { pt3dadd( -34.6498, 8.36868, 4.73825, 0.37 ) }
    dend_24 { pt3dadd( -34.761, 8.30017, 4.76817, 0.37 ) }
    dend_24 { pt3dadd( -38.3607, 6.04645, 5.73716, 0.37 ) }
    dend_24 { pt3dadd( -43.224, 2.99501, 7.11668, 0.37 ) }
    dend_24 { pt3dadd( -45.6868, 1.45268, 7.8428, 0.24 ) }
    dend_24 { pt3dadd( -45.8316, 1.36298, 7.88667, 0.24 ) }
    dend_24 { pt3dadd( -49.4972, -0.806763, 9.05307, 0.24 ) }
    dend_24 { pt3dadd( -49.6388, -0.889157, 9.09853, 0.24 ) }
    dend_24 { pt3dadd( -51.6881, -2.02547, 9.76626, 0.24 ) }
    dend_24 { pt3dadd( -53.3194, -2.79255, 10.2783, 0.12 ) }
    dend_24 { pt3dadd( -53.4329, -2.83781, 10.3062, 0.12 ) }
    dend_24 { pt3dadd( -55.2036, -3.48299, 10.6546, 0.24 ) }
    dend_24 { pt3dadd( -57.0363, -4.06198, 10.9159, 0.37 ) }
    dend_24 { pt3dadd( -59.1303, -4.70307, 11.1496, 0.37 ) }
    dend_24 { pt3dadd( -61.2448, -5.30411, 11.3094, 0.24 ) }
    dend_24 { pt3dadd( -63.8265, -6.031, 11.5006, 0.49 ) }
    dend_24 { pt3dadd( -63.9478, -6.06745, 11.5083, 0.49 ) }
    dend_24 { pt3dadd( -65.6238, -6.60483, 11.5913, 0.24 ) }
    dend_24 { pt3dadd( -67.1785, -7.1099, 11.7057, 0.37 ) }
    dend_24 { pt3dadd( -68.3116, -7.48741, 11.7889, 0.37 ) }
    dend_24 { pt3dadd( -70.0156, -8.088, 11.9547, 0.12 ) }
    dend_24 { pt3dadd( -71.3604, -8.57918, 12.1425, 0.12 ) }
    dend_24 { pt3dadd( -71.4857, -8.62621, 12.1606, 0.12 ) }
    dend_24 { pt3dadd( -72.8419, -9.14677, 12.3642, 0.61 ) }
    dend_24 { pt3dadd( -72.9394, -9.18481, 12.3797, 0.61 ) }
    dend_24 { pt3dadd( -74.1482, -9.67694, 12.5545, 0.12 ) }
    dend_24 { pt3dadd( -74.2464, -9.71393, 12.5683, 0.12 ) }
    dend_24 { pt3dadd( -76.2559, -10.4456, 12.8599, 0.12 ) }
    dend_24 { pt3dadd( -78.2755, -11.1623, 13.024, 0.12 ) }
    dend_24 { pt3dadd( -80.5889, -11.9561, 13.0985, 1.34 ) }
    dend_24 { pt3dadd( -82.6092, -12.6139, 13.1013, 0.37 ) }
    dend_24 { pt3dadd( -84.676, -13.2476, 13.0362, 0.49 ) }
    dend_24 { pt3dadd( -84.7974, -13.2845, 13.03, 0.49 ) }
    dend_24 { pt3dadd( -87.0221, -13.9481, 12.821, 0.12 ) }
    dend_24 { pt3dadd( -87.1428, -13.9815, 12.8069, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_24 { pt3dadd( -88.8058, -14.3852, 12.6306, 1.1 ) }
    dend_24 { pt3dadd( -88.9093, -14.4097, 12.6297, 1.1 ) }
    dend_24 { pt3dadd( -90.598, -14.8447, 12.7692, 0.12 ) }
    dend_24 { pt3dadd( -90.7296, -14.8746, 12.7826, 0.12 ) }
    dend_24 { pt3dadd( -91.6578, -15.0683, 12.9134, 0.12 ) }
    dend_24 { pt3dadd( -92.6738, -15.2876, 13.0319, 0.61 ) }
    dend_24 { pt3dadd( -94.0381, -15.5917, 13.1573, 0.12 ) }
    dend_24 { pt3dadd( -94.1989, -15.6283, 13.1616, 0.12 ) }
    dend_24 { pt3dadd( -98.0812, -16.5167, 13.0504, 0.24 ) }
    dend_24 { pt3dadd( -98.203, -16.548, 13.0432, 0.24 ) }
    dend_24 { pt3dadd( -100.056, -17.0652, 12.8708, 0.24 ) }
    dend_24 { pt3dadd( -100.213, -17.1128, 12.8512, 0.24 ) }
    dend_24 { pt3dadd( -102.339, -17.7974, 12.5499, 0.97 ) }
    dend_24 { pt3dadd( -102.438, -17.8328, 12.5406, 0.97 ) }
    dend_24 { pt3dadd( -103.912, -18.4339, 12.506, 0.12 ) }
    dend_24 { pt3dadd( -104.01, -18.473, 12.5073, 0.12 ) }
    dend_24 { pt3dadd( -104.654, -18.721, 12.5412, 0.12 ) }
    dend_24 { pt3dadd( -105.906, -19.224, 12.611, 0.61 ) }
    dend_24 { pt3dadd( -107.3, -19.8519, 12.7362, 0.12 ) }
    dend_24 { pt3dadd( -107.447, -19.9227, 12.7491, 0.12 ) }
    dend_24 { pt3dadd( -107.916, -20.1596, 12.783, 0.12 ) }
    dend_24 { pt3dadd( -108.009, -20.2083, 12.7908, 0.12 ) }
    dend_24 { pt3dadd( -110.047, -21.2614, 13.017, 0.97 ) }
    dend_24 { pt3dadd( -111.371, -21.9439, 13.1777, 0.12 ) }
    dend_24 { pt3dadd( -112.205, -22.3521, 13.296, 0.12 ) }
    dend_24 { pt3dadd( -112.365, -22.4274, 13.3228, 0.12 ) }
    dend_24 { pt3dadd( -113.976, -23.1548, 13.6315, 1.22 ) }
    dend_24 { pt3dadd( -115.534, -23.792, 14.1086, 0.12 ) }
    dend_24 { pt3dadd( -115.716, -23.8518, 14.1894, 0.12 ) }
    dend_24 { pt3dadd( -116.417, -24.0445, 14.5246, 0.12 ) }
    dend_24 { pt3dadd( -117.276, -24.2662, 14.9535, 0.61 ) }
    dend_24 { pt3dadd( -117.384, -24.2946, 15.0117, 0.61 ) }
    dend_24 { pt3dadd( -119.118, -24.746, 16.0893, 0.12 ) }
    dend_24 { pt3dadd( -120.274, -25.0466, 16.8926, 0.97 ) }
    dend_24 { pt3dadd( -120.94, -25.2143, 17.3771, 0.12 ) }
    dend_24 { pt3dadd( -121.038, -25.2383, 17.4523, 0.12 ) }
    dend_24 { pt3dadd( -121.884, -25.4223, 18.1154, 0.49 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 37/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 19.8149, 27.9302, 22.5847, 0.37 ) }
    dend_12 { pt3dadd( 20.0732, 26.5353, 23.2761, 0.37 ) }
    dend_12 { pt3dadd( 20.088, 26.4558, 23.3155, 0.37 ) }
    dend_12 { pt3dadd( 20.3467, 25.0585, 24.0081, 0.37 ) }
    dend_12 { pt3dadd( 20.82, 22.5028, 25.2747, 0.37 ) }
    dend_12 { pt3dadd( 20.8347, 22.4234, 25.3141, 0.37 ) }
    dend_12 { pt3dadd( 21.0496, 21.263, 25.8892, 0.49 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 44/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 19.8149, 27.9302, 22.5847, 0.37 ) }
    dend_9 { pt3dadd( 21.1547, 27.0154, 22.6915, 0.37 ) }
    dend_9 { pt3dadd( 22.7044, 25.8289, 22.8083, 0.37 ) }
    dend_9 { pt3dadd( 24.0914, 24.6359, 23.068, 0.37 ) }
    dend_9 { pt3dadd( 24.4148, 24.3429, 23.1491, 0.37 ) }
    dend_9 { pt3dadd( 26.3526, 22.5609, 23.6975, 0.37 ) }
    dend_9 { pt3dadd( 27.5642, 21.5144, 24.0697, 0.37 ) }
    dend_9 { pt3dadd( 27.7226, 21.3652, 24.1362, 0.37 ) }
    dend_9 { pt3dadd( 29.2131, 20.0821, 25.1177, 0.24 ) }
    dend_9 { pt3dadd( 29.3743, 19.9691, 25.2519, 0.24 ) }
    dend_9 { pt3dadd( 30.0393, 19.5622, 25.917, 0.24 ) }
    dend_9 { pt3dadd( 30.8551, 19.0916, 26.8718, 0.24 ) }
    dend_9 { pt3dadd( 31.2526, 18.902, 27.289, 0.24 ) }
    dend_9 { pt3dadd( 32.8617, 18.1803, 28.6654, 0.24 ) }
    dend_9 { pt3dadd( 34.0996, 17.6383, 29.4465, 0.24 ) }
    dend_9 { pt3dadd( 34.196, 17.5907, 29.5011, 0.24 ) }
    dend_9 { pt3dadd( 35.3112, 16.8724, 30.072, 0.24 ) }
    dend_9 { pt3dadd( 35.6279, 16.559, 30.2579, 0.24 ) }
    dend_9 { pt3dadd( 36.4059, 15.6117, 30.7188, 0.24 ) }
    dend_9 { pt3dadd( 36.8179, 15.0303, 30.9429, 0.24 ) }
    dend_9 { pt3dadd( 36.9139, 14.9087, 31.0018, 0.24 ) }
    dend_9 { pt3dadd( 37.6186, 14.0483, 31.4618, 0.24 ) }
    dend_9 { pt3dadd( 39.0732, 12.2527, 32.6136, 0.24 ) }
    dend_9 { pt3dadd( 39.1314, 12.1847, 32.6564, 0.24 ) }
    dend_9 { pt3dadd( 39.9592, 11.2398, 33.24, 0.24 ) }
    dend_9 { pt3dadd( 40.8357, 10.4759, 33.8503, 0.37 ) }
    dend_9 { pt3dadd( 40.9075, 10.4244, 33.8977, 0.37 ) }
    dend_9 { pt3dadd( 42.3852, 9.53343, 34.7742, 0.24 ) }
    dend_9 { pt3dadd( 43.5155, 8.9401, 35.3606, 0.73 ) }
    dend_9 { pt3dadd( 43.7184, 8.83155, 35.4783, 0.73 ) }
    dend_9 { pt3dadd( 46.0156, 7.551, 37.1025, 0.24 ) }
    dend_9 { pt3dadd( 46.1001, 7.50173, 37.171, 0.24 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -55.6559, 24.9646, 14.3489, 0.37 ) }
    dend_27 { pt3dadd( -59.4977, 28.6618, 15.833, 0.37 ) }
    dend_27 { pt3dadd( -62.8122, 31.7342, 16.6037, 0.24 ) }
    dend_27 { pt3dadd( -65.6763, 34.3542, 17.0689, 0.12 ) }
    dend_27 { pt3dadd( -65.7664, 34.4393, 17.0804, 0.12 ) }
    dend_27 { pt3dadd( -68.199, 36.7904, 17.3456, 0.24 ) }
    dend_27 { pt3dadd( -69.4741, 38.0394, 17.448, 0.24 ) }
    dend_27 { pt3dadd( -71.9545, 40.4331, 17.2056, 0.12 ) }
    dend_27 { pt3dadd( -72.0635, 40.5325, 17.1924, 0.12 ) }
    dend_27 { pt3dadd( -73.7648, 42.0517, 17.0147, 0.12 ) }
    dend_27 { pt3dadd( -73.8764, 42.1487, 17.0077, 0.12 ) }
    dend_27 { pt3dadd( -75.4823, 43.5515, 16.9963, 0.12 ) }
    dend_27 { pt3dadd( -77.8776, 45.6519, 17.1364, 0.24 ) }
    dend_27 { pt3dadd( -77.9886, 45.7479, 17.1531, 0.24 ) }
    dend_27 { pt3dadd( -81.0983, 48.3953, 17.638, 0.24 ) }
    dend_27 { pt3dadd( -81.1932, 48.4747, 17.6536, 0.24 ) }
    dend_27 { pt3dadd( -82.9322, 50.0998, 17.9303, 0.24 ) }
    dend_27 { pt3dadd( -83.1328, 50.3124, 17.9703, 0.24 ) }
    dend_27 { pt3dadd( -85.1437, 52.7709, 18.3496, 0.24 ) }
    dend_27 { pt3dadd( -85.2588, 52.9225, 18.369, 0.24 ) }
    dend_27 { pt3dadd( -86.0164, 54.0283, 18.4865, 0.49 ) }
    dend_27 { pt3dadd( -87.7905, 56.7693, 18.809, 0.12 ) }
    dend_27 { pt3dadd( -89.1833, 59.0388, 19.0976, 0.97 ) }
    dend_27 { pt3dadd( -89.9832, 60.4974, 19.2789, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_27 { pt3dadd( -90.064, 60.6684, 19.3012, 0.37 ) }
    dend_27 { pt3dadd( -90.7683, 62.3295, 19.583, 0.85 ) }
    dend_27 { pt3dadd( -91.4678, 64.176, 19.9514, 0.12 ) }
    dend_27 { pt3dadd( -91.5063, 64.2881, 19.9782, 0.12 ) }
    dend_27 { pt3dadd( -92.3325, 67.0038, 20.6062, 0.73 ) }
    dend_27 { pt3dadd( -93.0266, 69.2101, 21.1582, 0.12 ) }
    dend_27 { pt3dadd( -93.6555, 71.1477, 21.6401, 0.49 ) }
    dend_27 { pt3dadd( -93.6934, 71.26, 21.6667, 0.49 ) }
    dend_27 { pt3dadd( -94.2647, 72.6669, 21.9832, 0.12 ) }
    dend_27 { pt3dadd( -94.3151, 72.774, 22.0127, 0.12 ) }
    dend_27 { pt3dadd( -95.2417, 74.1997, 22.4344, 0.61 ) }
    dend_27 { pt3dadd( -95.3192, 74.293, 22.4577, 0.61 ) }
    dend_27 { pt3dadd( -96.426, 75.4609, 22.7088, 0.37 ) }
    dend_27 { pt3dadd( -98.003, 76.9852, 23.0272, 0.12 ) }
    dend_27 { pt3dadd( -98.8472, 77.7228, 23.1742, 0.12 ) }
    dend_27 { pt3dadd( -101.462, 79.8931, 23.4761, 1.34 ) }
    dend_27 { pt3dadd( -103.339, 81.3707, 23.6051, 0.12 ) }
    dend_27 { pt3dadd( -103.975, 81.8537, 23.6891, 0.12 ) }
    dend_27 { pt3dadd( -105.118, 82.6724, 23.8955, 0.49 ) }
    dend_27 { pt3dadd( -105.81, 83.1844, 24.071, 0.12 ) }
    dend_27 { pt3dadd( -107.641, 84.623, 24.6706, 1.34 ) }
    dend_27 { pt3dadd( -107.722, 84.6961, 24.7291, 1.34 ) }
    dend_27 { pt3dadd( -109.748, 86.7813, 26.898, 0.12 ) }
    dend_27 { pt3dadd( -109.805, 86.8558, 26.9781, 0.12 ) }
    dend_27 { pt3dadd( -110.502, 88.0846, 28.0212, 0.97 ) }
    dend_27 { pt3dadd( -110.544, 88.1791, 28.0862, 0.97 ) }
    dend_27 { pt3dadd( -111.349, 90.697, 29.3574, 0.12 ) }
    dend_27 { pt3dadd( -111.417, 90.9683, 29.4229, 0.12 ) }
    dend_27 { pt3dadd( -111.884, 93.2778, 29.5839, 0.61 ) }
    dend_27 { pt3dadd( -112.507, 96.6459, 29.678, 0.12 ) }
    dend_27 { pt3dadd( -112.532, 96.7877, 29.6775, 0.12 ) }
    dend_27 { pt3dadd( -112.872, 98.7597, 29.6131, 1.71 ) }
    dend_27 { pt3dadd( -113.237, 100.895, 29.4581, 0.12 ) }
    dend_27 { pt3dadd( -113.505, 102.27, 29.5459, 0.61 ) }
    dend_27 { pt3dadd( -113.534, 102.383, 29.5757, 0.61 ) }
    dend_27 { pt3dadd( -113.977, 103.771, 30.2468, 0.12 ) }
    dend_27 { pt3dadd( -114.014, 103.872, 30.3041, 0.12 ) }
    dend_27 { pt3dadd( -114.457, 104.821, 30.9476, 0.97 ) }
    dend_27 { pt3dadd( -115.707, 107.109, 32.8762, 0.12 ) }
    dend_27 { pt3dadd( -116.421, 108.298, 33.9228, 0.24 ) }
    dend_27 { pt3dadd( -116.586, 108.578, 34.1983, 0.12 ) }
    dend_27 { pt3dadd( -116.641, 108.674, 34.2934, 0.12 ) }
    dend_27 { pt3dadd( -117.259, 109.793, 35.3504, 0.61 ) }
    dend_27 { pt3dadd( -118.104, 111.366, 36.7769, 0.12 ) }
    dend_27 { pt3dadd( -118.552, 112.257, 37.4997, 0.49 ) }
    dend_27 { pt3dadd( -119.881, 114.705, 39.416, 0.12 ) }
    dend_27 { pt3dadd( -120.775, 116.231, 40.5363, 1.34 ) }
    dend_27 { pt3dadd( -121.456, 117.354, 41.2432, 0.12 ) }
    dend_27 { pt3dadd( -121.525, 117.467, 41.3014, 0.12 ) }
    dend_27 { pt3dadd( -122.028, 118.266, 41.6146, 0.37 ) }
    dend_27 { pt3dadd( -123.311, 120.175, 42.1775, 0.12 ) }
    dend_27 { pt3dadd( -123.754, 120.745, 42.2238, 0.12 ) }
    dend_27 { pt3dadd( -124.917, 122.104, 42.2675, 0.12 ) }
    dend_27 { pt3dadd( -125.41, 122.653, 42.2616, 0.37 ) }
    dend_27 { pt3dadd( -131.395, 131.579, 45.2842, 0.37 ) }
    dend_27 { pt3dadd( -139.517, 138.218, 49.5275, 0.37 ) }
    dend_27 { pt3dadd( -148.088, 143.426, 54.9042, 0.37 ) }
    dend_27 { pt3dadd( -156.203, 149.862, 59.4774, 0.37 ) }
    dend_27 { pt3dadd( -165.273, 155.622, 63.2258, 0.37 ) }
    dend_27 { pt3dadd( -173.417, 162.773, 66.4387, 0.37 ) }
    dend_27 { pt3dadd( -181.811, 170.262, 67.7019, 0.37 ) }
    dend_27 { pt3dadd( -188.901, 178.993, 67.9519, 0.37 ) }
    dend_27 { pt3dadd( -196.383, 187.401, 66.9356, 0.37 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 63/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -55.6559, 24.9646, 14.3489, 0.49 ) }
    dend_26 { pt3dadd( -58.4238, 26.3686, 14.8173, 0.49 ) }
    dend_26 { pt3dadd( -58.529, 26.431, 14.8322, 0.49 ) }
    dend_26 { pt3dadd( -59.9535, 27.3155, 15.0165, 0.37 ) }
    dend_26 { pt3dadd( -61.348, 28.1797, 15.1911, 0.37 ) }
    dend_26 { pt3dadd( -63.8268, 29.7273, 15.4887, 0.37 ) }
    dend_26 { pt3dadd( -66.1676, 31.1981, 15.8175, 0.37 ) }
    dend_26 { pt3dadd( -68.2563, 32.7687, 15.9965, 0.37 ) }
    dend_26 { pt3dadd( -68.3332, 32.8367, 16.0053, 0.37 ) }
    dend_26 { pt3dadd( -69.565, 34.0815, 16.1804, 0.24 ) }
    dend_26 { pt3dadd( -69.7554, 34.2938, 16.2139, 0.24 ) }
    dend_26 { pt3dadd( -70.3905, 35.0827, 16.3494, 0.24 ) }
    dend_26 { pt3dadd( -72.8009, 38.0859, 16.866, 0.24 ) }
    dend_26 { pt3dadd( -74.4935, 40.2038, 17.213, 0.12 ) }
    dend_26 { pt3dadd( -76.0431, 42.0741, 17.5008, 0.24 ) }
    dend_26 { pt3dadd( -76.1453, 42.1952, 17.518, 0.24 ) }
    dend_26 { pt3dadd( -77.0726, 43.1916, 17.6483, 0.12 ) }
    dend_26 { pt3dadd( -78.2267, 44.2721, 17.7728, 0.49 ) }
    dend_26 { pt3dadd( -78.3081, 44.3351, 17.7822, 0.61 ) }
    dend_26 { pt3dadd( -80.5243, 45.908, 17.9922, 0.24 ) }
    dend_26 { pt3dadd( -80.6851, 46.0292, 18.0066, 0.24 ) }
    dend_26 { pt3dadd( -82.5723, 47.4534, 18.0658, 0.12 ) }
    dend_26 { pt3dadd( -84.0429, 48.5421, 18.0577, 0.12 ) }
    dend_26 { pt3dadd( -84.1272, 48.602, 18.0524, 0.12 ) }
    dend_26 { pt3dadd( -85.9443, 49.852, 17.8817, 0.37 ) }
    dend_26 { pt3dadd( -88.5286, 51.5598, 17.5457, 0.12 ) }
    dend_26 { pt3dadd( -90.2916, 52.6967, 17.2769, 0.61 ) }
    dend_26 { pt3dadd( -90.9119, 53.0831, 17.1689, 0.24 ) }
    dend_26 { pt3dadd( -93.5896, 54.7006, 16.6569, 0.73 ) }
    dend_26 { pt3dadd( -93.728, 54.7783, 16.6274, 0.73 ) }
    dend_26 { pt3dadd( -94.6425, 55.2521, 16.4123, 0.37 ) }
    dend_26 { pt3dadd( -94.8032, 55.3305, 16.3772, 0.37 ) }
    dend_26 { pt3dadd( -95.5663, 55.7454, 16.2297, 0.12 ) }
    dend_26 { pt3dadd( -95.6537, 55.7975, 16.2084, 0.12 ) }
    dend_26 { pt3dadd( -97.2069, 56.7841, 15.7823, 0.61 ) }
    dend_26 { pt3dadd( -98.7469, 57.831, 15.3401, 0.12 ) }
    dend_26 { pt3dadd( -100.051, 58.7914, 14.9344, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_26 { pt3dadd( -100.533, 59.1557, 14.7888, 0.12 ) }
    dend_26 { pt3dadd( -102.097, 60.3726, 14.3245, 0.73 ) }
    dend_26 { pt3dadd( -102.177, 60.4346, 14.3037, 0.73 ) }
    dend_26 { pt3dadd( -103.329, 61.3314, 14.0653, 0.24 ) }
    dend_26 { pt3dadd( -104.819, 62.4421, 13.7705, 1.22 ) }
    dend_26 { pt3dadd( -105.721, 63.0941, 13.5655, 0.24 ) }
    dend_26 { pt3dadd( -105.861, 63.1932, 13.5364, 0.24 ) }
    dend_26 { pt3dadd( -106.593, 63.7052, 13.3867, 0.61 ) }
    dend_26 { pt3dadd( -107.447, 64.2871, 13.1982, 0.12 ) }
    dend_26 { pt3dadd( -107.546, 64.3564, 13.1753, 0.12 ) }
    dend_26 { pt3dadd( -109.747, 65.9679, 12.6619, 1.46 ) }
    dend_26 { pt3dadd( -110.81, 66.8026, 12.3825, 0.12 ) }
    dend_26 { pt3dadd( -110.959, 66.9237, 12.3411, 0.12 ) }
    dend_26 { pt3dadd( -111.379, 67.2748, 12.2238, 0.37 ) }
    dend_26 { pt3dadd( -112.389, 68.1342, 11.9597, 0.24 ) }
    dend_26 { pt3dadd( -112.48, 68.2147, 11.939, 0.24 ) }
    dend_26 { pt3dadd( -114.27, 69.855, 11.607, 1.34 ) }
    dend_26 { pt3dadd( -115.915, 71.4287, 11.165, 0.12 ) }
    dend_26 { pt3dadd( -116.402, 71.9028, 11.0064, 0.12 ) }
    dend_26 { pt3dadd( -116.879, 72.3761, 10.8213, 0.73 ) }
    dend_26 { pt3dadd( -117.836, 73.3158, 10.4363, 0.24 ) }
    dend_26 { pt3dadd( -117.908, 73.3846, 10.4102, 0.24 ) }
    dend_26 { pt3dadd( -119.241, 74.6262, 9.98863, 0.24 ) }
    dend_26 { pt3dadd( -119.316, 74.6941, 9.96907, 0.24 ) }
    dend_26 { pt3dadd( -120.943, 76.1057, 9.57195, 1.95 ) }
    dend_26 { pt3dadd( -122.485, 77.403, 9.24138, 0.24 ) }
    dend_26 { pt3dadd( -123.837, 78.5077, 8.99329, 0.24 ) }
    dend_26 { pt3dadd( -124.601, 79.1191, 8.87921, 0.24 ) }
    dend_26 { pt3dadd( -126.327, 80.4551, 8.71297, 1.95 ) }
    dend_26 { pt3dadd( -127.971, 81.7242, 8.5641, 0.12 ) }
    dend_26 { pt3dadd( -128.865, 82.4101, 8.48638, 0.24 ) }
    dend_26 { pt3dadd( -128.96, 82.4862, 8.4729, 0.24 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 32/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 21.0496, 21.263, 25.8892, 0.12 ) }
    dend_14 { pt3dadd( 20.9541, 19.5412, 25.6029, 0.12 ) }
    dend_14 { pt3dadd( 20.8925, 18.5168, 25.4365, 0.24 ) }
    dend_14 { pt3dadd( 20.8749, 18.2239, 25.389, 0.24 ) }
    dend_14 { pt3dadd( 20.788, 16.7776, 25.1541, 0.24 ) }
    dend_14 { pt3dadd( 20.6888, 15.1271, 24.8862, 0.24 ) }
    dend_14 { pt3dadd( 20.5364, 12.5914, 24.4744, 0.24 ) }
    dend_14 { pt3dadd( 20.5163, 12.2646, 24.4245, 0.24 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 40/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 21.0496, 21.263, 25.8892, 0.37 ) }
    dend_13 { pt3dadd( 20.1292, 21.3917, 27.3882, 0.37 ) }
    dend_13 { pt3dadd( 20.0608, 21.4029, 27.5059, 0.37 ) }
    dend_13 { pt3dadd( 18.9691, 21.4962, 29.1958, 0.24 ) }
    dend_13 { pt3dadd( 17.8136, 21.4893, 30.6969, 0.24 ) }
    dend_13 { pt3dadd( 15.9611, 21.3767, 33.1276, 0.12 ) }
    dend_13 { pt3dadd( 14.3065, 21.2843, 35.2218, 0.12 ) }
    dend_13 { pt3dadd( 14.2211, 21.2778, 35.3299, 0.12 ) }
    dend_13 { pt3dadd( 12.9435, 21.1868, 36.9828, 0.12 ) }
    dend_13 { pt3dadd( 11.596, 21.0867, 38.8087, 0.12 ) }
    dend_13 { pt3dadd( 10.0327, 20.8098, 40.6371, 0.12 ) }
    dend_13 { pt3dadd( 8.9156, 20.5162, 41.5514, 0.49 ) }
    dend_13 { pt3dadd( 2.12168, 21.6644, 49.4317, 0.49 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 53/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 46.1001, 7.50173, 37.171, 0.37 ) }
    dend_11 { pt3dadd( 45.9377, 6.14047, 37.2395, 0.37 ) }
    dend_11 { pt3dadd( 45.6592, 5.2088, 37.2639, 0.61 ) }
    dend_11 { pt3dadd( 45.1889, 3.91815, 37.2785, 0.12 ) }
    dend_11 { pt3dadd( 45.1012, 3.67726, 37.2812, 0.12 ) }
    dend_11 { pt3dadd( 44.5901, 2.27448, 37.297, 0.12 ) }
    dend_11 { pt3dadd( 43.9025, 0.387312, 37.3183, 0.12 ) }
    dend_11 { pt3dadd( 43.1928, -1.17893, 37.2591, 0.12 ) }
    dend_11 { pt3dadd( 42.4876, -2.5049, 37.2116, 0.12 ) }
    dend_11 { pt3dadd( 38.0166, -10.1353, 36.8061, 0.12 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 63/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 46.1001, 7.50173, 37.171, 0.12 ) }
    dend_10 { pt3dadd( 46.8131, 8.86817, 37.8362, 0.12 ) }
    dend_10 { pt3dadd( 47.715, 10.5965, 38.6777, 0.37 ) }
    dend_10 { pt3dadd( 48.7397, 12.5602, 39.6337, 0.12 ) }
    dend_10 { pt3dadd( 49.8395, 14.668, 40.6598, 0.12 ) }
    dend_10 { pt3dadd( 50.148, 15.2591, 40.9476, 0.12 ) }
    dend_10 { pt3dadd( 50.2185, 15.3943, 41.0134, 0.12 ) }
    dend_10 { pt3dadd( 57.108, 24.5015, 46.8677, 0.12 ) }
    dend_10 { pt3dadd( 63.4039, 32.848, 54.3032, 0.12 ) }
    dend_10 { pt3dadd( 69.8916, 40.7215, 62.1202, 0.12 ) }
    dend_10 { pt3dadd( 75.0143, 48.2195, 71.1684, 0.12 ) }
    dend_10 { pt3dadd( 81.9335, 54.3107, 80.2371, 0.12 ) }
    dend_10 { pt3dadd( 88.5957, 58.2844, 90.6687, 0.12 ) }
    dend_10 { pt3dadd( 96.4817, 61.7827, 100.449, 0.12 ) }
    dend_10 { pt3dadd( 102.934, 64.2715, 111.507, 0.12 ) }
    dend_10 { pt3dadd( 110.013, 65.6912, 122.415, 0.12 ) }
    dend_10 { pt3dadd( 116.309, 69.6046, 133.087, 0.12 ) }
    dend_10 { pt3dadd( 122.134, 74.7957, 143.403, 0.12 ) }
    dend_10 { pt3dadd( 127.173, 78.4885, 154.775, 0.12 ) }
    dend_10 { pt3dadd( 129.408, 83.1689, 166.554, 0.12 ) }
    dend_10 { pt3dadd( 130.008, 86.8708, 178.883, 0.12 ) }
    dend_10 { pt3dadd( 128.899, 88.0018, 191.765, 0.12 ) }
    dend_10 { pt3dadd( 126.652, 89.6231, 204.409, 0.12 ) }
    dend_10 { pt3dadd( 123.049, 91.3339, 216.705, 0.12 ) }
    dend_10 { pt3dadd( 120.908, 93.1214, 229.339, 0.12 ) }
    dend_10 { pt3dadd( 117.378, 93.1223, 241.852, 0.12 ) }
    dend_10 { pt3dadd( 115.42, 92.1327, 254.717, 0.12 ) }
    dend_10 { pt3dadd( 112.01, 92.4235, 267.249, 0.12 ) }
    dend_10 { pt3dadd( 108.645, 93.4696, 279.72, 0.12 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 92/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 20.5163, 12.2646, 24.4245, 0.12 ) }
    dend_16 { pt3dadd( 20.644, 10.9127, 25.6815, 0.12 ) }
    dend_16 { pt3dadd( 20.6261, 10.6227, 25.9593, 0.12 ) }
    dend_16 { pt3dadd( 20.4005, 6.98, 29.4494, 0.61 ) }
    dend_16 { pt3dadd( 20.3471, 6.11782, 30.2754, 0.12 ) }
    dend_16 { pt3dadd( 20.3406, 6.01377, 30.3751, 0.12 ) }
    dend_16 { pt3dadd( 20.2591, 4.69779, 31.636, 0.12 ) }
    dend_16 { pt3dadd( 19.9006, 1.83056, 34.755, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 0/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 20.5163, 12.2646, 24.4245, 0.12 ) }
    dend_15 { pt3dadd( 20.0885, 13.6663, 25.9874, 0.12 ) }
    dend_15 { pt3dadd( 20.0646, 13.7445, 26.0746, 0.12 ) }
    dend_15 { pt3dadd( 19.4087, 15.8933, 28.4706, 0.12 ) }
    dend_15 { pt3dadd( 19.3721, 16.013, 28.604, 0.12 ) }
    dend_15 { pt3dadd( 18.87, 17.658, 30.4382, 0.12 ) }
    dend_15 { pt3dadd( 18.4104, 19.1637, 32.1171, 0.12 ) }
    dend_15 { pt3dadd( 15.8793, 25.9325, 38.8808, 0.12 ) }
    dend_15 { pt3dadd( 14.444, 32.3577, 46.32, 0.12 ) }
    dend_15 { pt3dadd( 13.6791, 40.185, 52.2595, 0.12 ) }
    dend_15 { pt3dadd( 12.6161, 48.3326, 57.6581, 0.12 ) }
    dend_15 { pt3dadd( 11.4279, 55.812, 63.988, 0.12 ) }
    dend_15 { pt3dadd( 11.2774, 63.9159, 69.5851, 0.12 ) }
    dend_15 { pt3dadd( 10.7804, 71.823, 75.4465, 0.12 ) }
    dend_15 { pt3dadd( 8.39869, 79.4957, 81.1328, 0.12 ) }
    dend_15 { pt3dadd( 5.18509, 86.9893, 86.6523, 0.12 ) }
    dend_15 { pt3dadd( 2.03416, 94.5881, 92.0522, 0.12 ) }
    dend_15 { pt3dadd( -0.522558, 102.648, 97.0416, 0.12 ) }
    dend_15 { pt3dadd( -1.65192, 111.245, 101.622, 0.12 ) }
    dend_15 { pt3dadd( -2.08351, 119.32, 107.24, 0.12 ) }
    dend_15 { pt3dadd( -3.09608, 126.499, 113.97, 0.12 ) }
    dend_15 { pt3dadd( -1.685, 133.156, 121.255, 0.12 ) }
    dend_15 { pt3dadd( 0.25332, 138.127, 129.803, 0.12 ) }
    dend_15 { pt3dadd( 2.11012, 141.17, 139.327, 0.12 ) }
    dend_15 { pt3dadd( 5.40501, 142.965, 148.847, 0.12 ) }
    dend_15 { pt3dadd( 9.83193, 143.951, 158.055, 0.12 ) }
    dend_15 { pt3dadd( 13.1716, 143.023, 167.739, 0.12 ) }
    dend_15 { pt3dadd( 16.8368, 143.766, 177.297, 0.12 ) }
    dend_15 { pt3dadd( 19.2035, 142.325, 187.204, 0.12 ) }
    dend_15 { pt3dadd( 22.35, 140.919, 196.897, 0.12 ) }
    dend_15 { pt3dadd( 25.762, 139.694, 206.525, 0.12 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 31/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 19.9006, 1.83056, 34.755, 0.24 ) }
    dend_18 { pt3dadd( 19.1101, 2.87003, 35.2294, 0.24 ) }
    dend_18 { pt3dadd( 19.0553, 2.90752, 35.2648, 0.24 ) }
    dend_18 { pt3dadd( 17.5082, 3.5402, 36.2945, 0.24 ) }
    dend_18 { pt3dadd( 17.4011, 3.56234, 36.3618, 0.24 ) }
    dend_18 { pt3dadd( 16.8146, 3.68362, 36.7303, 0.24 ) }
    dend_18 { pt3dadd( 16.7112, 3.70499, 36.7952, 0.24 ) }
    dend_18 { pt3dadd( 14.7756, 3.76631, 38.0594, 0.12 ) }
    dend_18 { pt3dadd( 14.7046, 3.75669, 38.1048, 0.12 ) }
    dend_18 { pt3dadd( 13.5354, 3.30796, 38.8459, 0.12 ) }
    dend_18 { pt3dadd( 7.4228, 4.97905, 41.6761, 0.12 ) }
    dend_18 { pt3dadd( 1.56974, 7.33205, 44.4787, 0.12 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 43/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 19.9006, 1.83056, 34.755, 0.12 ) }
    dend_17 { pt3dadd( 18.2981, -1.43202, 34.6993, 0.12 ) }
    dend_17 { pt3dadd( 14.2638, -8.87366, 33.2897, 0.12 ) }
    dend_17 { pt3dadd( 10.1531, -16.4274, 33.1276, 0.12 ) }
    dend_17 { pt3dadd( 4.9329, -23.3302, 33.6615, 0.12 ) }
    dend_17 { pt3dadd( -0.861445, -29.4017, 36.0793, 0.12 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_33, dend_20, dend_5, dend_0, apic_8, apic_1, dend_35, dend_34, dend_28, dend_21, dend_19, dend_6, dend_2, dend_1, apic_10, apic_9, apic_5, apic_2, dend_32, dend_29, dend_23, dend_22, dend_8, dend_7, dend_4, dend_3, apic_7, apic_6, apic_4, apic_3, dend_31, dend_30, dend_25, dend_24, dend_12, dend_9, dend_27, dend_26, dend_14, dend_13, dend_11, dend_10, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_33, dend_20, dend_5, dend_0, apic_8, apic_1, dend_35, dend_34, dend_28, dend_21, dend_19, dend_6, dend_2, dend_1, apic_10, apic_9, apic_5, apic_2, dend_32, dend_29, dend_23, dend_22, dend_8, dend_7, dend_4, dend_3, apic_7, apic_6, apic_4, apic_3, dend_31, dend_30, dend_25, dend_24, dend_12, dend_9, dend_27, dend_26, dend_14, dend_13, dend_11, dend_10, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_8 = new SectionList()
    apic_8 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_34 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_19 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_19 = new SectionList()
    apic_10 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_20 = new SectionList()
    apic_9 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_32 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_29 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_22 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_4 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_7 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_33 = new SectionList()
    apic_4 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    apic_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_31 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_30 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_24 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_27 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_26 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_10 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_15 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_20 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_21 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_33 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_23 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    apic_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    apic_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_5 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_28 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_6 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_25 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_8 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_12 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_14 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_16 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_9 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_13 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_18 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_11 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_17 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_3 OneSecGrp_SectionRef_30.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_1, apic_1, apic_1, apic_1, apic_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    apic_8 nseg = 3
    dend_34 nseg = 13
    dend_19 nseg = 9
    dend_2 nseg = 5
    dend_1 nseg = 9
    apic_10 nseg = 9
    apic_9 nseg = 7
    dend_32 nseg = 11
    dend_29 nseg = 3
    dend_22 nseg = 13
    dend_7 nseg = 11
    dend_4 nseg = 11
    apic_7 nseg = 19
    apic_6 nseg = 7
    apic_4 nseg = 21
    apic_3 nseg = 13
    dend_31 nseg = 11
    dend_30 nseg = 11
    dend_24 nseg = 5
    dend_27 nseg = 11
    dend_26 nseg = 5
    dend_10 nseg = 15
    dend_15 nseg = 13
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L6_LBC_b4f69c277d_0_0


