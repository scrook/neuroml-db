// Cell: cACint209_L6_ChC_9060a4c27e_0_0
/*
{
  "id" : "cACint209_L6_ChC_9060a4c27e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.44259, -9.54825, -1.27888, 2.30647", "-1.2819, -8.63231, -1.15821, 3.63473", "-1.1212, -7.71637, -1.03754, 6.81375", "-0.960502, -6.80044, -0.916865, 9.18535", "-0.799804, -5.8845, -0.796194, 10.2157", "-0.639107, -4.96856, -0.675522, 11.1797", "-0.478409, -4.05262, -0.554851, 12.0566", "-0.317712, -3.13668, -0.43418, 12.6775", "-0.157014, -2.22074, -0.313508, 13.0617", "0.00368301, -1.3048, -0.192837, 13.2009", "0.16438, -0.388856, -0.0721652, 13.2418", "0.325078, 0.527084, 0.0485063, 12.889", "0.485775, 1.44302, 0.169178, 12.4912", "0.646473, 2.35896, 0.289849, 12.2347", "0.80717, 3.2749, 0.410521, 12.0486", "0.967868, 4.19084, 0.531192, 11.9346", "1.12856, 5.10678, 0.651864, 11.8925", "1.28926, 6.02272, 0.772535, 11.1454", "1.44996, 6.93866, 0.893206, 8.66152", "1.61066, 7.8546, 1.01388, 5.25757", "1.77135, 8.77054, 1.13455, 3.12251" ]
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.66144, -6.91316, -8.0337, 1.77", "-3.66144, -6.91316, -8.0337, 1.77", "-3.26422, -8.16445, -8.21942, 1.77", "-2.96169, -9.09593, -8.36736, 1.77", "-2.49931, -10.5559, -8.58569, 1.55", "-2.22773, -11.5241, -8.75909, 1.69", "-2.04182, -12.2763, -8.91018, 1.77", "-1.87895, -13.0082, -9.09293, 1.77", "-1.67219, -13.9892, -9.40013, 1.25", "-1.33702, -15.4943, -9.81427, 0.74", "-1.9813, -14.8385, -10.5238, 0.74", "-2.48371, -14.6067, -11.2787, 0.74", "-3.36467, -14.2916, -12.636, 1.18", "-3.83825, -14.2124, -13.4099, 1.18", "-4.54859, -14.0533, -14.4796, 0.52", "-5.38918, -13.7637, -15.6287, 0.52", "-6.34469, -13.8057, -17.0812, 0.74", "-6.74735, -14.0165, -18.0692, 0.74", "-6.93945, -14.3414, -18.9313, 0.74", "-7.24947, -14.7602, -20.2325, 1.11", "-7.52623, -14.9788, -21.0654, 1.69", "-7.97917, -15.1292, -21.9064, 1.77", "-9.01104, -15.4187, -23.7649, 1.33", "-9.56022, -15.6778, -24.8977, 1.4", "-9.88377, -16.0229, -25.7486, 1.55", "-10.0677, -16.5969, -26.6396, 1.33", "-10.0878, -17.5866, -27.7706, 0.74", "-9.9156, -18.3969, -28.4278, 1.03", "-9.66416, -19.0772, -28.8432, 1.47", "-9.39736, -19.5243, -29.1417, 1.62", "-8.97474, -20.0583, -29.5532, 1.62", "-8.49578, -20.4874, -29.932, 0.52", "-7.92647, -20.8911, -30.3498, 0.52", "-7.78483, -21.1021, -30.709, 0.52", "-7.81362, -21.5339, -31.6392, 0.66", "-7.99778, -21.9579, -32.6222, 0.74", "-8.29812, -22.1309, -33.3156, 0.44", "-8.81564, -22.1288, -34.0491, 0.44", "-9.57843, -22.0397, -34.9819, 0.44", "-10.1207, -22.0922, -35.8118, 0.44", "-10.4223, -22.1954, -36.4004, 0.44", "-10.9828, -22.5403, -37.5441, 0.66", "-11.2565, -23.0757, -38.6996, 1.11", "-11.3982, -23.272, -39.1009, 0.96", "-11.7684, -23.6858, -40.021, 1.18", "-11.9124, -23.8629, -40.3806, 1.69", "-12.1465, -24.1355, -40.9019, 1.69", "-13.0386, -25.1004, -42.6462, 0.88", "-13.5835, -25.5594, -43.5571, 2.14", "-14.8195, -26.1799, -45.2402, 2.28", "-14.9931, -26.2247, -45.4328, 2.28", "-15.9957, -26.3128, -46.3682, 0.44", "-16.5681, -26.2691, -46.7888, 0.44", "-17.2442, -26.138, -47.1766, 0.81", "-17.9379, -25.9704, -47.5909, 0.81", "-18.2541, -25.9291, -47.8175, 0.96", "-18.8823, -25.9828, -48.3698, 0.66", "-19.514, -26.1868, -49.0184, 1.99", "-19.9872, -26.4311, -49.5657, 2.21", "-20.4492, -26.753, -50.1372, 2.5", "-21.7202, -27.8582, -51.8315, 0.66", "-22.3792, -28.5791, -52.8321, 0.66", "-22.7862, -29.1396, -53.5195, 0.66", "-23.2053, -29.8063, -54.2552, 1.55", "-23.4, -30.1342, -54.581, 2.21", "-23.5878, -30.4767, -54.8918, 2.21", "-24.1058, -31.5657, -55.8268, 0.29", "-24.3829, -32.2681, -56.4766, 0.29", "-24.5641, -32.7531, -56.9166, 1.55", "-24.7899, -33.3383, -57.4358, 1.99", "-24.9977, -33.8621, -57.9114, 2.36", "-25.5817, -35.2869, -59.2449, 0.59", "-25.8721, -36.0173, -59.9746, 1.84", "-25.9864, -36.3563, -60.3547, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-6.50143, -1.62167, 2.1563, 1.92", "-6.50143, -1.62167, 2.1563, 1.92", "-6.78722, -2.10227, 2.13357, 1.92", "-7.27336, -3.05525, 2.08413, 1.92", "-7.77467, -3.92467, 2.03426, 2.14", "-8.1611, -4.51264, 1.99208, 2.36", "-8.70869, -5.22412, 1.93394, 2.28", "-9.31026, -5.88101, 1.86743, 2.36", "-9.98337, -6.48887, 1.78108, 2.36", "-11.0281, -7.17034, 1.65783, 1.77", "-11.6027, -7.39458, 1.61465, 1.77", "-12.5037, -7.57737, 1.59063, 1.99", "-13.3066, -7.65241, 1.64161, 1.99", "-13.7039, -7.66606, 1.69066, 1.99", "-14.296, -7.69335, 1.79631, 1.77", "-15.2126, -7.84511, 2.03343, 1.47", "-15.8742, -8.06962, 2.22061, 1.47", "-16.708, -8.52699, 2.43131, 1.33", "-17.0871, -8.80677, 2.50189, 1.99", "-17.7313, -9.37873, 2.57261, 1.99", "-18.4734, -10.122, 2.58209, 1.77", "-19.2943, -11.0301, 2.50985, 1.92", "-20.0533, -11.8932, 2.35499, 1.69", "-20.52, -12.3943, 2.20489, 1.69", "-21.1049, -12.9586, 1.98378, 1.84", "-21.6383, -13.4306, 1.78005, 1.84", "-22.3288, -14.0201, 1.52709, 1.69", "-23.0877, -14.6769, 1.29033, 1.55", "-23.8541, -15.3876, 1.11147, 1.4", "-24.482, -15.9727, 0.984023, 1.25", "-25.139, -16.6126, 0.865669, 1.33", "-25.7612, -17.2778, 0.796825, 1.47", "-26.3436, -17.9836, 0.824745, 1.62", "-26.7555, -18.6438, 0.969813, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.448551, -8.29066, -4.9037, 3.61", "0.448551, -8.29066, -4.9037, 3.61", "0.673242, -9.79993, -4.82963, 2.95", "0.995282, -12.1421, -4.71819, 2.8", "1.18097, -13.7117, -4.612, 2.8", "1.3427, -15.4668, -4.47819, 3.02", "1.42008, -16.6317, -4.38861, 3.02", "1.45246, -17.7744, -4.29604, 3.02", "1.42125, -19.4961, -4.15407, 3.02", "1.29469, -21.3175, -3.99794, 2.36", "0.955032, -24.5035, -3.82731, 2.36", "0.709825, -26.2883, -3.81066, 2.43", "0.427745, -28.0158, -3.85318, 2.43", "0.059044, -30.0407, -3.97385, 2.43", "-0.514221, -32.8364, -4.22014, 2.28", "-1.13195, -35.7048, -4.54231, 2.14", "-1.99437, -39.5049, -5.04639, 2.06", "-2.59291, -42.1423, -5.44012, 2.43", "-2.97098, -43.8218, -5.72588, 2.58", "-3.37638, -45.5916, -6.06774, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.381405, 7.21333, -7.5337, 1.62", "-0.473699, 8.00465, -7.59703, 1.62", "-0.619644, 9.16885, -7.63385, 1.92", "-0.839743, 10.7241, -7.69753, 1.33", "-1.11733, 12.398, -7.79133, 1.69", "-1.345, 13.6365, -7.83906, 2.21", "-1.54016, 14.6719, -7.83085, 2.21", "-1.77512, 15.8374, -7.77383, 1.99", "-1.99564, 16.8285, -7.68727, 1.77", "-2.25749, 17.9311, -7.56001, 1.99", "-2.54147, 19.098, -7.42017, 1.99", "-3.02689, 21.1481, -7.21628, 1.11", "-3.32654, 22.4298, -7.12881, 1.11", "-3.64763, 23.7193, -7.09409, 1.25", "-3.95377, 24.802, -7.08812, 1.4", "-4.35449, 25.9854, -7.15734, 0.81", "-4.82643, 27.1064, -7.33429, 0.74", "-5.20146, 27.8393, -7.52265, 0.74", "-5.66377, 28.6344, -7.77745, 0.74", "-6.20102, 29.5004, -8.10145, 0.96", "-6.70753, 30.3155, -8.42867, 0.96", "-7.23598, 31.1339, -8.76522, 1.55", "-7.83289, 32.0515, -9.1562, 2.06", "-8.3379, 32.8869, -9.52084, 2.43", "-8.91707, 34.012, -10.0158, 2.36", "-9.57283, 35.5446, -10.6728, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.32144, 7.89733, 0.346303, 2.5", "-2.3803, 8.02076, 0.346973, 2.5", "-3.31356, 9.74986, 0.310908, 1.77", "-3.96497, 10.9184, 0.317574, 1.55", "-4.72898, 12.2484, 0.379792, 1.55", "-5.31112, 13.2632, 0.466585, 1.33", "-6.19934, 14.8373, 0.651271, 1.33", "-6.75479, 15.7989, 0.793373, 1.55", "-7.59283, 17.2235, 1.03487, 1.55", "-8.46319, 18.7728, 1.30275, 1.62", "-9.15807, 20.1535, 1.52774, 1.4", "-9.80594, 21.6732, 1.74746, 1.4", "-10.1745, 22.6067, 1.88394, 1.4", "-10.7476, 24.108, 2.09138, 1.4", "-11.2917, 25.6077, 2.23618, 1.4", "-11.9035, 27.4614, 2.33435, 1.77", "-12.4184, 29.1245, 2.35271, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.82855, 3.96433, 1.3463, 2.58", "6.87335, 4.00586, 1.35037, 2.58", "7.43809, 4.54259, 1.40934, 2.58", "8.07884, 5.1579, 1.49607, 1.84", "8.55318, 5.60433, 1.57302, 2.06", "9.16562, 6.17913, 1.68809, 2.06", "9.57034, 6.55013, 1.79029, 2.58", "10.0195, 6.95915, 1.92968, 2.58", "10.3164, 7.234, 2.0423, 2.58", "10.8434, 7.69984, 2.26743, 2.58", "11.2141, 8.00429, 2.43461, 2.43", "11.9908, 8.60508, 2.8151, 2.21", "12.5573, 9.018, 3.10415, 1.99", "13.0119, 9.33001, 3.32209, 1.99", "13.6016, 9.67515, 3.57676, 1.69", "14.0945, 9.87266, 3.76371, 1.69", "14.9672, 9.98626, 4.0506, 2.06", "15.515, 9.89526, 4.19977, 2.06", "16.8094, 9.35944, 4.54607, 1.69", "17.6997, 8.89556, 4.77106, 1.92", "19.0915, 7.99685, 5.09796, 1.92", "20.4169, 6.96251, 5.38052, 2.06", "21.0963, 6.31801, 5.50836, 2.28", "21.6059, 5.73081, 5.61111, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.77135, 8.77054, 1.13455, 0.835316", "4.36343, 23.5449, 1.13455, 0.835316", "6.95552, 38.3192, 1.13455, 0.835316" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-25.9864, -36.3563, -60.3547, 0.96", "-24.6179, -38.5459, -67.4153, 0.96", "-24.3469, -39.0733, -68.7508, 0.96", "-23.9901, -39.8169, -70.3467, 0.96", "-23.4854, -40.8818, -72.4135, 1.55", "-23.0769, -41.8024, -74.0002, 0.22", "-22.6193, -42.9048, -75.5928, 0.22", "-22.3551, -43.6688, -76.2687, 1.11", "-22.1156, -44.399, -76.8278, 1.4", "-21.7346, -45.389, -77.4926, 1.4", "-20.8072, -47.5185, -78.776, 0.22", "-19.7049, -49.6736, -80.0346, 0.22", "-19.2992, -50.3726, -80.4398, 0.74", "-19.068, -50.7452, -80.6439, 0.74", "-17.7945, -52.7315, -81.6625, 0.15", "-17.5868, -53.0391, -81.8055, 0.37", "-16.3308, -54.6935, -82.5338, 0.22", "-15.5802, -55.5971, -82.9779, 0.22", "-14.9826, -56.3186, -83.3283, 0.74", "-14.4167, -57.0661, -83.6568, 0.88", "-14.2657, -57.3316, -83.7519, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-25.9864, -36.3563, -60.3547, 2.87", "-26.5074, -36.7078, -60.37, 2.87", "-28.1257, -37.9506, -60.5226, 0.22", "-29.537, -39.2718, -60.7409, 0.22", "-30.2066, -39.9531, -60.8585, 1.69", "-30.4141, -40.1769, -60.8977, 2.21", "-30.7481, -40.5518, -60.9634, 2.21", "-31.9312, -42.0655, -61.2198, 0.22", "-32.9168, -43.5909, -61.5178, 0.22", "-33.2141, -44.0943, -61.6245, 1.25", "-33.456, -44.5088, -61.7131, 1.25", "-33.78, -45.0535, -61.8361, 1.25", "-34.4579, -46.1095, -62.0755, 0.15", "-34.8474, -46.6902, -62.2027, 0.15", "-35.1667, -47.1111, -62.3011, 0.96", "-35.5433, -47.5539, -62.4218, 1.18", "-35.7226, -47.7384, -62.4767, 1.18", "-36.9328, -48.8063, -62.8872, 0.22", "-37.2739, -49.0391, -63.004, 0.52", "-37.5905, -49.2326, -63.1103, 0.52", "-38.4119, -49.7053, -63.3734, 0.22", "-38.9248, -49.9928, -63.5417, 1.25", "-39.6674, -50.4432, -63.7831, 1.4", "-41.0683, -51.4373, -64.3161, 0.22", "-41.9878, -52.2378, -64.7108, 0.22", "-42.3195, -52.5965, -64.8758, 0.74", "-42.7155, -53.1483, -65.1086, 0.88", "-43.2058, -54.1697, -65.6054, 0.22", "-43.479, -55.3964, -66.1839, 0.22", "-43.5105, -56.1596, -66.5447, 1.99", "-43.4784, -56.6156, -66.7487, 2.36", "-43.4282, -57.0575, -66.9509, 2.36", "-43.0327, -59.5024, -68.0956, 0.15", "-42.7209, -60.9939, -68.8494, 0.15", "-42.6251, -61.3804, -69.031, 0.44", "-42.4123, -62.119, -69.3649, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-26.7555, -18.6438, 0.969813, 0.96", "-27.8325, -19.0407, 0.560241, 0.96", "-28.8579, -19.4532, 0.163758, 1.25", "-30.3356, -20.0469, -0.40102, 1.25", "-32.9114, -20.9995, -1.31422, 1.18", "-34.6655, -21.5723, -1.87858, 1.11", "-36.0168, -21.9824, -2.29968, 0.88", "-37.7962, -22.5333, -2.88172, 0.96", "-38.8146, -22.8487, -3.22398, 0.96", "-40.3095, -23.3226, -3.7356, 0.96", "-41.7839, -23.7942, -4.15619, 0.96", "-43.0385, -24.1816, -4.4408, 1.18", "-44.5822, -24.6344, -4.72334, 1.03", "-45.3472, -24.8344, -4.78516, 1.03", "-46.9492, -25.193, -4.73777, 1.18", "-47.9239, -25.3657, -4.56489, 1.18", "-50.1238, -25.6165, -3.74547, 0.96", "-50.9318, -25.6598, -3.36584, 1.11", "-52.5057, -25.7106, -2.54459, 1.11", "-53.7673, -25.7825, -1.87047, 1.11", "-55.2513, -25.9227, -1.07658, 1.11", "-57.2321, -26.2713, -0.0363419, 1.55", "-58.649, -26.6767, 0.653088, 1.03", "-60.3432, -27.3666, 1.4557, 0.88", "-61.7871, -28.1585, 2.09458, 0.74", "-62.6131, -28.7493, 2.43554, 0.74", "-63.6774, -29.717, 2.79328, 0.74", "-64.7313, -30.8927, 3.04715, 0.66", "-65.6725, -32.1104, 3.22735, 0.88", "-66.2856, -33.0004, 3.30395, 1.03", "-66.9235, -34.0492, 3.35884, 1.03", "-67.7383, -35.401, 3.40661, 0.88", "-68.7555, -36.9896, 3.44028, 0.88", "-69.3326, -37.786, 3.44311, 0.88", "-70.1919, -38.7639, 3.44637, 0.88", "-71.8718, -40.3293, 3.45764, 0.88", "-72.8576, -41.038, 3.4636, 0.88", "-74.2743, -41.781, 3.4719, 0.88", "-75.2307, -42.1218, 3.47068, 0.96", "-76.3581, -42.4188, 3.43519, 0.96", "-77.3839, -42.6113, 3.40524, 0.96", "-78.533, -42.7918, 3.38177, 0.52", "-79.3166, -43.0439, 3.38418, 0.52", "-79.9044, -43.4962, 3.44568, 0.52", "-80.4729, -44.3434, 3.65539, 0.81", "-80.9072, -45.2393, 3.93368, 0.96", "-81.2185, -46.2746, 4.27431, 0.96", "-81.5545, -48.1299, 4.8966, 0.81", "-81.6601, -49.0378, 5.21195, 0.81", "-81.7432, -50.1869, 5.66411, 1.11", "-81.8344, -50.8365, 5.97368, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-26.7555, -18.6438, 0.969813, 1.33", "-27.5935, -18.9578, 1.78079, 1.33", "-28.4144, -19.2797, 2.46314, 1.18", "-29.9616, -19.8437, 3.69222, 0.88", "-30.7143, -20.0768, 4.24332, 0.74", "-31.8275, -20.3545, 4.97419, 0.74", "-32.9598, -20.5676, 5.71842, 0.74", "-33.8178, -20.7019, 6.24813, 0.59", "-34.8276, -20.8039, 6.86763, 0.59", "-35.6221, -20.8333, 7.36425, 0.52", "-36.4167, -20.7776, 7.94071, 0.52", "-37.9006, -20.4928, 9.17647, 0.74", "-38.8338, -20.2334, 10.043, 0.59", "-39.6912, -19.9854, 10.8701, 0.44", "-40.6135, -19.7754, 11.7837, 0.37", "-41.3515, -19.6912, 12.5161, 0.66", "-42.0216, -19.717, 13.0668, 0.66", "-42.4692, -19.7942, 13.3188, 0.66", "-43.065, -19.9289, 13.6134, 0.44", "-43.7596, -20.1287, 13.9159, 0.44", "-45.0017, -20.4884, 14.423, 0.44", "-46.716, -21.0249, 15.1245, 0.74", "-47.7326, -21.3788, 15.5322, 0.74", "-49.1385, -21.8524, 16.0782, 0.52", "-50.4548, -22.2756, 16.5751, 0.59", "-51.5865, -22.6293, 16.9827, 0.44", "-53.1596, -23.1837, 17.5417, 0.37", "-54.291, -23.6831, 17.9388, 0.37", "-55.5253, -24.3934, 18.3216, 0.29", "-56.1127, -24.8486, 18.4744, 0.29", "-56.7994, -25.5403, 18.6921, 0.29", "-57.3805, -26.2023, 18.9186, 0.37", "-58.0314, -26.9839, 19.2362, 0.37", "-58.6859, -27.7476, 19.6213, 0.37", "-59.3834, -28.6484, 20.09, 0.66", "-60.0767, -29.5278, 20.5835, 0.81", "-60.6118, -30.1393, 20.9755, 0.81", "-61.3999, -30.8756, 21.5298, 0.22", "-62.3727, -31.6373, 22.2036, 0.22", "-72.0597, -33.6807, 27.7541, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-3.37638, -45.5916, -6.06774, 1.55", "-3.02143, -46.6567, -5.9969, 1.55", "-2.669, -47.7413, -5.9236, 1.55", "-2.37094, -48.6945, -5.864, 1.55", "-2.04507, -49.7759, -5.79196, 1.69", "-1.81333, -50.6056, -5.73347, 1.69", "-1.66086, -51.2262, -5.69091, 1.69", "-1.45824, -52.2562, -5.62279, 1.55", "-1.2464, -53.6043, -5.54082, 1.47", "-1.1345, -54.7277, -5.46747, 1.33", "-1.10316, -55.8047, -5.39387, 1.33", "-1.16658, -57.235, -5.29837, 1.33", "-1.30016, -58.284, -5.22113, 1.11", "-1.44613, -58.9447, -5.16747, 1.11", "-1.87739, -60.3844, -5.04136, 1.25", "-2.22362, -61.3403, -4.95598, 1.25", "-2.57267, -62.2006, -4.87942, 1.25", "-3.08893, -63.3953, -4.78497, 1.4", "-3.61517, -64.5738, -4.70733, 1.4", "-4.02867, -65.5304, -4.6665, 1.55", "-4.29056, -66.2358, -4.66544, 1.55", "-4.60439, -67.2815, -4.69423, 1.33", "-4.90671, -68.59, -4.77752, 0.96", "-4.99196, -69.1095, -4.83231, 0.81", "-5.05877, -69.6946, -4.89733, 0.81", "-5.16031, -71.0474, -5.03695, 0.96", "-5.1979, -71.9846, -5.11662, 1.33", "-5.2236, -73.0191, -5.18395, 1.69", "-5.24762, -73.6458, -5.20971, 1.84", "-5.29248, -74.3561, -5.21873, 1.99", "-5.38986, -75.1957, -5.20328, 2.06", "-5.48801, -75.9134, -5.17201, 2.06", "-5.59037, -76.6434, -5.11014, 1.84", "-5.69228, -77.4223, -5.00667, 1.62", "-5.79853, -78.3583, -4.84797, 1.18", "-5.86438, -79.1079, -4.70904, 0.88", "-5.94358, -80.1325, -4.50073, 0.88", "-5.9941, -80.8374, -4.33081, 1.03", "-6.04988, -81.5624, -4.13332, 1.11", "-6.10331, -82.0783, -3.98652, 1.11", "-6.30395, -83.3647, -3.62377, 1.03", "-6.47742, -84.2037, -3.39157, 1.18", "-6.63572, -84.8884, -3.21528, 1.25", "-6.88936, -85.9303, -2.97607, 1.18", "-7.13474, -86.8751, -2.79068, 1.03", "-7.40344, -87.8181, -2.63774, 0.96", "-7.72007, -88.839, -2.51365, 0.88", "-7.95312, -89.5208, -2.46878, 0.88", "-8.35214, -90.5473, -2.49797, 1.25", "-8.79082, -91.5709, -2.60428, 1.55", "-9.13055, -92.3539, -2.72271, 1.62", "-9.38403, -92.9812, -2.83066, 1.62", "-9.6809, -93.803, -2.97425, 1.4", "-10.0517, -94.9677, -3.15714, 1.11", "-10.3613, -96.1692, -3.31365, 1.11", "-10.6289, -97.497, -3.42719, 1.11", "-10.8651, -98.9139, -3.50893, 1.11", "-11.0201, -99.9506, -3.54531, 1.4", "-11.1664, -101.025, -3.56473, 1.4", "-11.3829, -102.7, -3.56759, 1.25", "-11.6043, -104.415, -3.57591, 1.25", "-11.7599, -105.544, -3.58462, 1.62", "-11.9108, -106.532, -3.60428, 1.77", "-12.1122, -107.854, -3.6527, 1.33", "-12.2878, -109.053, -3.70424, 0.88", "-12.4527, -110.389, -3.77449, 1.25", "-12.5207, -111.051, -3.81786, 1.84", "-12.5742, -111.793, -3.87661, 2.28", "-12.6072, -112.561, -3.95264, 2.43" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-3.37638, -45.5916, -6.06774, 2.14", "-3.29807, -45.9399, -6.17022, 2.14", "-3.1562, -46.4912, -6.30524, 2.14", "-2.9136, -47.4338, -6.53612, 1.69", "-2.71032, -48.2237, -6.72959, 1.84", "-2.51284, -48.9911, -6.91753, 1.99", "-2.35308, -49.6118, -7.06957, 2.36", "-2.22574, -50.0674, -7.16123, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-9.57283, 35.5446, -10.6728, 1.25", "-9.34036, 36.2019, -10.8565, 1.25", "-9.1443, 36.6426, -10.9732, 1.03", "-8.88308, 37.1662, -11.1039, 0.81", "-8.58961, 37.7528, -11.239, 0.81", "-8.33086, 38.3398, -11.3617, 1.11", "-8.16727, 38.7669, -11.4425, 1.11", "-7.99036, 39.2682, -11.5089, 0.96", "-7.77994, 39.9409, -11.5749, 0.66", "-7.65175, 40.4072, -11.6164, 0.52", "-7.50151, 41.0202, -11.6629, 0.52", "-7.40634, 41.4765, -11.6943, 0.52", "-7.20186, 42.4521, -11.7779, 1.18", "-7.09407, 42.9512, -11.8265, 1.62", "-7.01111, 43.3089, -11.8661, 1.69", "-6.85454, 43.9003, -11.9514, 1.33", "-6.75703, 44.192, -12.0074, 0.74", "-6.57941, 44.638, -12.1139, 0.59", "-6.27957, 45.3416, -12.3266, 0.66", "-6.12504, 45.722, -12.4518, 0.44", "-6.02597, 46.007, -12.5447, 0.44", "-5.87074, 46.5304, -12.7149, 0.37", "-5.73767, 46.9711, -12.8541, 0.37", "-5.62588, 47.2913, -12.9465, 0.37", "-5.40773, 47.7935, -13.1057, 0.37", "-5.19566, 48.2402, -13.2581, 0.44", "-5.01029, 48.6754, -13.4219, 0.44", "-4.76288, 49.381, -13.7082, 0.81", "-4.60786, 49.8802, -13.9162, 1.03", "-4.46205, 50.3308, -14.112, 1.03", "-4.3299, 50.7404, -14.3073, 0.81", "-4.1525, 51.3383, -14.6199, 0.29", "-4.07761, 51.636, -14.782, 0.29", "-3.93501, 52.3572, -15.1674, 1.77", "-3.89204, 52.5977, -15.2926, 2.36", "-3.82733, 52.9309, -15.4521, 2.36", "-3.68808, 53.5652, -15.7369, 2.28", "-3.49398, 54.3261, -16.0502, 0.66", "-3.383, 54.7422, -16.2219, 0.88", "-3.26895, 55.1755, -16.4028, 0.88", "-3.13968, 55.6619, -16.5937, 0.37", "-3.05121, 55.9905, -16.7175, 0.37", "-2.87297, 56.6762, -16.9593, 0.37", "-2.74528, 57.1937, -17.1331, 1.11", "-2.65133, 57.6076, -17.2663, 1.47", "-2.59271, 57.904, -17.3555, 1.69", "-2.511, 58.4059, -17.4942, 1.33", "-2.43979, 58.9582, -17.6311, 0.44", "-2.40648, 59.5474, -17.757, 0.29", "-2.39865, 60.0105, -17.8516, 0.52", "-2.40264, 60.357, -17.9203, 0.52", "-2.42355, 60.9389, -18.0485, 0.29", "-2.4357, 61.5377, -18.1843, 0.29", "-2.43526, 62.5923, -18.4436, 1.18", "-2.42883, 62.9886, -18.5416, 1.62", "-2.42156, 63.4108, -18.6384, 1.84", "-2.40996, 63.9442, -18.7505, 1.33", "-2.37931, 65.4664, -19.0565, 0.22", "-2.35427, 66.441, -19.2427, 0.22", "-2.331, 67.3221, -19.3967, 0.22", "-2.31796, 68.254, -19.54, 0.74", "-2.3159, 68.7623, -19.6128, 1.03", "-2.31914, 69.0021, -19.6437, 1.03", "-2.36716, 69.7674, -19.7572, 0.15", "-2.39293, 70.0609, -19.8146, 0.15", "-2.42728, 70.3965, -19.9047, 0.44", "-2.46027, 70.7156, -20.0059, 0.66", "-2.49015, 71.0097, -20.1001, 0.66", "-2.54892, 71.857, -20.369, 1.55", "-2.57217, 72.4798, -20.5595, 2.58", "-2.57574, 73.0216, -20.7251, 2.58", "-2.52395, 74.2236, -21.0719, 0.29", "-2.43632, 75.0263, -21.2684, 0.29", "-2.24151, 76.1768, -21.494, 0.29", "-2.0725, 76.8989, -21.601, 0.96", "-1.96712, 77.2696, -21.638, 0.96", "-1.55822, 78.4763, -21.7066, 0.22", "-1.07027, 79.7611, -21.7256, 0.22", "-0.741274, 80.5679, -21.7117, 1.77", "-0.604792, 80.8833, -21.6969, 2.36", "-0.434777, 81.2687, -21.6755, 2.5", "0.115079, 82.5139, -21.5969, 0.15", "0.388873, 83.1406, -21.5617, 0.29", "0.568356, 83.5601, -21.5464, 0.29", "0.792451, 84.0958, -21.5553, 0.15", "1.00933, 84.6441, -21.5986, 1.18", "1.14287, 84.984, -21.6439, 1.55", "1.28999, 85.3609, -21.7094, 1.18", "1.39666, 85.6326, -21.7653, 0.74", "1.70034, 86.4764, -21.9431, 0.22", "1.92012, 87.1356, -22.0831, 0.22", "2.27209, 88.2902, -22.3014, 0.22", "2.44828, 88.9123, -22.4045, 0.81", "2.5137, 89.1619, -22.4401, 0.81", "2.88927, 90.7262, -22.611, 0.22", "3.05788, 91.5144, -22.6507, 0.22", "3.18501, 92.2273, -22.6767, 1.25", "3.20497, 92.4167, -22.682, 1.69", "3.2165, 92.6312, -22.6863, 1.69", "3.22487, 93.0884, -22.691, 1.33", "3.21361, 93.4888, -22.6991, 0.59", "3.17327, 94.3217, -22.7371, 0.22", "3.12607, 95.5081, -22.8305, 0.22", "3.09702, 96.2382, -22.8969, 1.03", "3.08371, 96.5459, -22.9268, 1.03", "3.08017, 96.8674, -22.9587, 1.03", "3.09388, 97.3437, -23.0027, 0.52", "3.16886, 98.4108, -23.0818, 0.22", "3.24644, 98.9238, -23.1213, 0.59", "3.31722, 99.2523, -23.1457, 0.59", "3.69942, 100.694, -23.2448, 0.22", "3.84362, 101.141, -23.2718, 0.66", "3.96907, 101.459, -23.2916, 0.66", "4.28915, 102.198, -23.3455, 0.15", "4.47424, 102.608, -23.3823, 0.81", "4.6006, 102.891, -23.4127, 0.81", "4.78041, 103.307, -23.4684, 0.81", "5.09744, 104.101, -23.5873, 0.22", "5.40403, 104.909, -23.7286, 1.33", "5.52601, 105.247, -23.7942, 1.55", "5.59798, 105.445, -23.8338, 1.55", "5.67421, 105.654, -23.8792, 1.03", "6.03704, 106.607, -24.1027, 0.22", "6.38317, 107.455, -24.3154, 0.22", "6.58094, 107.899, -24.4397, 0.22", "6.8129, 108.424, -24.5883, 1.25", "6.95305, 108.764, -24.6862, 1.77", "7.06883, 109.071, -24.7773, 1.77", "7.1597, 109.331, -24.8598, 1.18", "7.29381, 109.742, -24.9953, 0.66", "7.69774, 110.994, -25.438, 0.22", "7.96979, 111.83, -25.7609, 0.22", "8.16084, 112.4, -25.9806, 1.11", "8.29739, 112.766, -26.1187, 1.4", "8.43353, 113.09, -26.2412, 1.4", "8.61074, 113.466, -26.3961, 0.96", "9.15731, 114.526, -26.8695, 0.22", "9.7733, 115.627, -27.3687, 0.22", "10.2664, 116.47, -27.7464, 1.77", "10.4445, 116.767, -27.8748, 2.65", "10.7307, 117.232, -28.067, 2.95" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-9.57283, 35.5446, -10.6728, 0.66", "-11.5828, 36.4452, -10.9456, 0.66", "-12.3835, 36.7691, -11.0516, 0.66", "-13.322, 37.1147, -11.168, 0.66", "-14.3935, 37.4658, -11.3029, 1.11", "-15.0578, 37.6543, -11.3913, 1.33", "-16.0589, 37.9271, -11.5275, 1.33", "-17.1457, 38.1909, -11.6736, 0.96", "-17.8956, 38.3774, -11.7497, 0.88", "-18.7914, 38.6003, -11.8117, 0.88", "-19.8562, 38.8614, -11.833, 0.37", "-20.4051, 38.9905, -11.8196, 0.37", "-21.3427, 39.2092, -11.7623, 0.81", "-22.1535, 39.4069, -11.6897, 0.88", "-22.9044, 39.5957, -11.6114, 0.81", "-23.6971, 39.7998, -11.5166, 0.29", "-24.2029, 39.9236, -11.4623, 0.29", "-25.0816, 40.0856, -11.4071, 0.74", "-25.7359, 40.1879, -11.3942, 0.74", "-26.111, 40.2616, -11.3824, 0.74", "-26.5453, 40.3785, -11.3375, 0.74", "-27.0787, 40.5442, -11.2507, 0.59", "-27.5983, 40.6985, -11.1324, 0.59", "-28.0542, 40.819, -10.9906, 0.37", "-29.2877, 41.0786, -10.5804, 0.37", "-30.1573, 41.2089, -10.2828, 0.37", "-30.6223, 41.2537, -10.1229, 0.22", "-31.4058, 41.2919, -9.86239, 0.22", "-31.8287, 41.2885, -9.74294, 0.22", "-33.0735, 41.252, -9.45195, 1.03", "-33.6908, 41.2465, -9.34446, 1.4", "-34.0604, 41.262, -9.2875, 1.4", "-34.9589, 41.3527, -9.16403, 0.81", "-36.109, 41.5169, -9.04165, 0.22", "-36.7305, 41.6143, -8.9872, 0.22", "-37.9849, 41.8279, -8.90641, 1.11", "-38.6257, 41.945, -8.88079, 1.4", "-39.081, 42.0297, -8.87138, 1.4", "-40.1437, 42.2258, -8.87078, 0.66", "-41.1427, 42.3989, -8.88154, 0.52", "-42.3516, 42.5758, -8.90942, 0.74", "-43.1366, 42.6854, -8.93699, 0.88", "-44.2506, 42.8537, -8.98574, 0.66", "-45.0411, 42.9813, -9.02587, 0.66", "-45.6891, 43.0933, -9.06575, 0.66", "-46.9085, 43.3259, -9.13676, 0.29", "-47.886, 43.53, -9.16843, 1.03", "-48.7171, 43.7144, -9.16807, 1.25", "-48.9818, 43.7841, -9.14736, 1.25", "-49.663, 44.0024, -9.04648, 0.81", "-50.4811, 44.2949, -8.87021, 0.29", "-51.0097, 44.5005, -8.71671, 0.52", "-51.3614, 44.6507, -8.60333, 0.66", "-52.6423, 45.2265, -8.19402, 0.22", "-53.3669, 45.5606, -7.9815, 0.22", "-53.9612, 45.8356, -7.83392, 0.22", "-54.7594, 46.2115, -7.69478, 0.22", "-55.8346, 46.7244, -7.5579, 0.59", "-56.4497, 47.0239, -7.50749, 0.81", "-57.0213, 47.3233, -7.50716, 0.81", "-57.8957, 47.8229, -7.54553, 0.52", "-59.0698, 48.5472, -7.64291, 1.03", "-59.7717, 48.9999, -7.72344, 1.18", "-60.2916, 49.3523, -7.79781, 1.25", "-61.4482, 50.1734, -7.98911, 0.29", "-62.493, 50.9394, -8.1816, 0.74", "-62.8851, 51.2315, -8.26097, 0.96", "-63.2282, 51.4857, -8.33981, 0.96", "-64.3708, 52.3035, -8.62306, 0.22", "-64.8249, 52.6103, -8.73813, 0.22", "-65.4481, 53.0017, -8.88844, 0.66", "-65.8728, 53.257, -9.00023, 0.88", "-66.3771, 53.5453, -9.13208, 0.44", "-67.0353, 53.9122, -9.29753, 0.37", "-67.4333, 54.1285, -9.38802, 0.44", "-67.9632, 54.428, -9.50717, 0.44", "-68.3446, 54.6465, -9.59317, 0.44", "-69.0795, 55.0762, -9.75054, 0.22", "-69.5597, 55.3661, -9.83834, 0.22", "-70.1291, 55.7398, -9.92978, 0.29", "-70.4629, 55.9743, -9.97069, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-12.4184, 29.1245, 2.35271, 1.47", "-11.8985, 30.1472, 2.18785, 1.47", "-11.4298, 31.2626, 2.02981, 0.81", "-11.1386, 32.0796, 1.92761, 0.81", "-10.8327, 33.224, 1.80643, 0.81", "-10.52, 34.6176, 1.67387, 0.81", "-10.2301, 36.1564, 1.54212, 0.81", "-10.0468, 37.6928, 1.42704, 1.03", "-9.93419, 39.0753, 1.33562, 1.03", "-9.80174, 41.1917, 1.19662, 1.18", "-9.72607, 42.5031, 1.1183, 1.18", "-9.70895, 44.7823, 0.989373, 1.18", "-9.75639, 46.4035, 0.899741, 1.4", "-9.77865, 47.5523, 0.83116, 1.4", "-9.80278, 48.3697, 0.779028, 1.4" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-12.4184, 29.1245, 2.35271, 0.96", "-13.9893, 29.7521, 1.98902, 0.96", "-14.5514, 29.9926, 1.87207, 0.96", "-15.3305, 30.3331, 1.71048, 0.96", "-16.1419, 30.7003, 1.53367, 0.81", "-16.8403, 31.0291, 1.38222, 0.81", "-17.8025, 31.4964, 1.18353, 1.03", "-18.4529, 31.8417, 1.04912, 1.03", "-19.0554, 32.2231, 0.922066, 1.03", "-19.8021, 32.7742, 0.760815, 0.81", "-20.3478, 33.1967, 0.643207, 0.81", "-20.9458, 33.6773, 0.521954, 0.81", "-21.6486, 34.2806, 0.376754, 0.52", "-22.2928, 34.8971, 0.247979, 0.52", "-22.6527, 35.2768, 0.188375, 0.52", "-23.1651, 35.8638, 0.11699, 0.52", "-23.7994, 36.6235, 0.0351196, 0.52", "-24.1311, 37.0408, -0.00186658, 0.52", "-24.4646, 37.4755, -0.0258977, 0.52", "-24.8527, 37.9966, -0.0387866, 0.66", "-25.2096, 38.5158, -0.0412341, 0.88", "-25.5537, 39.0752, -0.038695, 0.88", "-25.9352, 39.7341, -0.0382023, 0.59", "-26.3233, 40.3872, -0.0447611, 0.88", "-26.6047, 40.8567, -0.0555236, 0.88", "-26.8354, 41.2761, -0.0719811, 0.96", "-27.04, 41.6596, -0.0954136, 0.96", "-27.2268, 41.9939, -0.122604, 0.96", "-27.5656, 42.5374, -0.177425, 0.74", "-28.1094, 43.3333, -0.272894, 1.25", "-28.4898, 43.8612, -0.343036, 1.25", "-28.9237, 44.4495, -0.423064, 0.29", "-29.2115, 44.8415, -0.471666, 0.29", "-29.5008, 45.24, -0.51265, 0.66", "-29.7595, 45.6016, -0.538586, 0.81", "-29.9733, 45.9095, -0.549467, 0.81", "-30.3224, 46.4608, -0.546111, 0.37", "-30.6521, 47.0728, -0.564958, 0.37", "-30.8449, 47.4732, -0.594493, 1.03", "-31.0108, 47.8271, -0.632556, 1.25", "-31.2278, 48.2584, -0.691267, 1.25", "-31.42, 48.5985, -0.748902, 0.81", "-31.8409, 49.2696, -0.876476, 0.59", "-32.095, 49.651, -0.952481, 0.44", "-32.4469, 50.191, -1.04109, 0.88", "-32.7139, 50.6089, -1.09267, 0.88", "-33.1639, 51.3449, -1.1411, 0.59", "-33.4512, 51.8372, -1.16179, 0.59", "-33.89, 52.6393, -1.1708, 0.44", "-34.3646, 53.5663, -1.17459, 1.03", "-34.7382, 54.358, -1.16256, 1.55", "-34.9436, 54.8522, -1.14172, 1.62", "-35.2137, 55.5789, -1.09721, 1.11", "-35.4843, 56.3792, -1.03902, 0.59", "-35.6566, 56.9341, -0.986241, 0.59", "-35.9237, 57.8638, -0.880667, 0.59", "-36.1866, 58.7914, -0.760678, 0.52", "-36.3604, 59.3992, -0.667374, 0.52", "-36.5797, 60.1583, -0.520985, 0.52", "-36.8169, 60.9504, -0.360456, 0.52", "-37.0982, 61.8159, -0.188192, 0.37", "-37.5335, 62.9624, 0.0354874, 1.55", "-37.7046, 63.3381, 0.106044, 1.92", "-37.8874, 63.6777, 0.165861, 1.92", "-38.0659, 63.9649, 0.207963, 1.92", "-38.4611, 64.5033, 0.271877, 0.88", "-39.0028, 65.1809, 0.33366, 0.44", "-39.4161, 65.6808, 0.370365, 0.44", "-39.8623, 66.2211, 0.397584, 0.44", "-40.4827, 66.9911, 0.430747, 0.37", "-40.813, 67.4105, 0.447054, 0.37", "-41.492, 68.3117, 0.479331, 0.74", "-41.7611, 68.6833, 0.496178, 0.74", "-42.0926, 69.1619, 0.518121, 0.52", "-42.5335, 69.8233, 0.533827, 1.25", "-42.8426, 70.2862, 0.525558, 1.47", "-43.0509, 70.5997, 0.508373, 1.47", "-43.343, 70.9832, 0.462314, 0.81", "-43.7458, 71.4584, 0.381185, 0.59", "-44.1562, 71.891, 0.275343, 0.88", "-44.5063, 72.2362, 0.172622, 1.18", "-44.7258, 72.4475, 0.10318, 1.18", "-45.2616, 72.9881, -0.0522168, 0.96", "-45.8254, 73.6093, -0.187612, 0.52", "-46.1426, 74.0039, -0.227105, 0.37", "-46.5848, 74.6271, -0.221793, 0.37", "-46.9936, 75.2834, -0.167652, 0.37", "-47.3568, 75.9467, -0.0793552, 0.37", "-47.5967, 76.4661, 0.0142184, 0.81", "-47.9283, 77.3049, 0.179695, 1.84", "-48.0595, 77.644, 0.2469, 1.92", "-48.1614, 77.888, 0.289541, 1.92", "-48.3482, 78.3404, 0.352482, 1.62", "-48.6114, 78.9781, 0.401639, 0.88", "-48.8809, 79.6632, 0.427571, 0.29", "-49.2974, 80.7287, 0.443707, 0.29", "-49.6147, 81.4947, 0.45604, 0.29", "-49.8236, 81.9405, 0.471322, 0.29", "-49.9357, 82.1471, 0.482474, 0.29", "-50.2276, 82.5989, 0.516746, 0.66", "-50.6036, 83.0927, 0.564922, 0.81", "-50.8784, 83.4172, 0.601151, 0.81", "-51.406, 84.0298, 0.667979, 0.37", "-51.8224, 84.4997, 0.72015, 0.37", "-52.2164, 84.9498, 0.769284, 0.81", "-52.4934, 85.2703, 0.806423, 0.81", "-52.8846, 85.7329, 0.86462, 0.37", "-53.2727, 86.1629, 0.925766, 0.37", "-53.6701, 86.5624, 0.992893, 0.88", "-54.1591, 87.0307, 1.07787, 1.47", "-54.5276, 87.3809, 1.1395, 1.69", "-54.8267, 87.667, 1.1857, 1.69", "-55.643, 88.4316, 1.30546, 0.37", "-55.9231, 88.698, 1.34504, 0.37", "-56.4466, 89.2312, 1.41046, 0.37", "-57.047, 89.8931, 1.47554, 0.81", "-57.432, 90.3791, 1.50974, 1.33", "-57.6636, 90.703, 1.52423, 1.33", "-57.973, 91.1596, 1.5373, 0.81", "-58.6005, 92.0532, 1.55327, 0.52", "-59.1268, 92.742, 1.5599, 0.52", "-59.7223, 93.5042, 1.55993, 0.52", "-60.0517, 93.9239, 1.55666, 0.52", "-60.4756, 94.4678, 1.54794, 0.52", "-60.9521, 95.0767, 1.53141, 0.52", "-61.7656, 96.1012, 1.49537, 0.52", "-62.0607, 96.4714, 1.48141, 0.52", "-62.7946, 97.3759, 1.45023, 1.25", "-63.0018, 97.6326, 1.4431, 1.47", "-63.2744, 97.9656, 1.43017, 1.47", "-63.6763, 98.4263, 1.40755, 0.88", "-64.1684, 98.9349, 1.3797, 0.29", "-64.374, 99.1225, 1.37084, 0.29", "-64.8008, 99.4785, 1.35989, 0.44", "-65.1396, 99.7508, 1.35926, 0.44", "-65.4584, 99.9988, 1.36705, 0.44", "-65.6458, 100.152, 1.36435, 0.44", "-65.9097, 100.38, 1.37302, 0.29", "-66.2439, 100.762, 1.40562, 0.29", "-66.3569, 100.91, 1.42778, 0.44", "-66.4934, 101.097, 1.46439, 0.44", "-66.8533, 101.579, 1.5722, 0.37", "-67.3411, 102.207, 1.72577, 0.44", "-68.144, 103.201, 1.91519, 2.28", "-68.4686, 103.594, 1.96964, 2.5", "-68.7193, 103.906, 1.99402, 2.5", "-69.1284, 104.418, 2.00692, 1.92", "-69.54, 104.934, 1.97969, 0.81", "-70.0781, 105.64, 1.84854, 0.52", "-70.303, 105.964, 1.76684, 0.52", "-70.778, 106.714, 1.55776, 0.88", "-71.0409, 107.18, 1.4259, 0.88", "-71.3288, 107.744, 1.27129, 0.66", "-71.5468, 108.21, 1.14828, 0.44", "-71.8386, 108.891, 0.991253, 0.29", "-72.1514, 109.676, 0.800975, 0.29", "-72.4764, 110.574, 0.564395, 0.29", "-72.6267, 111.02, 0.438554, 0.29", "-72.8988, 111.843, 0.162878, 0.52", "-73.0952, 112.405, -0.0548284, 0.88", "-73.2689, 112.864, -0.267157, 0.88", "-73.486, 113.365, -0.52874, 0.44", "-73.9273, 114.149, -0.98103, 1.11", "-74.4107, 114.822, -1.39312, 2.43", "-74.821, 115.27, -1.68219, 2.43", "-75.1155, 115.526, -1.85396, 2.43", "-75.5374, 115.826, -2.04175, 1.69", "-76.1515, 116.2, -2.26688, 0.59", "-76.8376, 116.552, -2.45552, 0.74", "-77.0696, 116.66, -2.49577, 0.74", "-77.4595, 116.831, -2.55424, 0.52", "-78.0597, 117.096, -2.62281, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "21.6059, 5.73081, 5.61111, 1.99", "22.9184, 5.98969, 5.55973, 1.99", "23.6815, 6.28199, 5.66528, 1.99", "24.2078, 6.65316, 5.85991, 1.69", "24.9475, 7.17493, 6.13351, 1.69", "25.2591, 7.3947, 6.24874, 1.69", "25.7768, 7.75984, 6.44021, 1.69", "26.0959, 8.12782, 6.61321, 1.92", "26.5565, 8.84842, 7.03592, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "21.6059, 5.73081, 5.61111, 0.74", "22.4941, 7.54292, 5.47812, 0.74", "22.8342, 8.32654, 5.40326, 0.74", "23.3156, 9.55319, 5.26196, 0.74", "23.6986, 10.6076, 5.12689, 0.44", "23.998, 11.5029, 5.01262, 0.44", "24.4084, 12.8328, 4.84168, 0.66", "24.5729, 13.4716, 4.74462, 0.88", "24.7902, 14.4076, 4.62514, 0.88", "24.9732, 15.2822, 4.54708, 1.03", "25.2474, 16.5451, 4.4698, 0.96", "25.4558, 17.4438, 4.43114, 0.52", "25.6465, 18.1672, 4.40916, 0.52", "25.8723, 19.1316, 4.38166, 0.88", "26.0566, 19.9186, 4.36266, 0.66", "26.2662, 20.8015, 4.34963, 0.88", "26.4516, 21.5913, 4.34306, 0.88", "26.7112, 22.762, 4.34508, 0.29", "26.898, 23.7079, 4.34076, 0.29", "27.0192, 24.3571, 4.32684, 0.29", "27.2239, 25.4657, 4.30938, 0.44", "27.3608, 26.1312, 4.31722, 0.74", "27.5557, 26.9328, 4.33731, 0.88", "27.6922, 27.4189, 4.3587, 1.11", "27.8114, 27.8023, 4.37481, 1.11", "28.0482, 28.6683, 4.38195, 0.29", "28.3006, 29.5108, 4.35172, 0.29", "28.5797, 30.2995, 4.30584, 0.29", "31.131, 39.3935, 5.7135, 0.29", "34.9207, 48.1207, 6.70837, 0.29", "37.7829, 57.1934, 6.60751, 0.29", "39.8243, 66.4278, 5.85082, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.95552, 38.3192, 1.13455, 0.59", "9.5476, 53.0936, 1.13455, 0.59", "12.1397, 67.8679, 1.13455, 0.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-81.8344, -50.8365, 5.97368, 0.44", "-83.5151, -51.5512, 6.71148, 0.44", "-84.3671, -51.9751, 7.06962, 0.29", "-85.2691, -52.4642, 7.41162, 0.29", "-85.7994, -52.7616, 7.60029, 0.29", "-86.9293, -53.3818, 7.97582, 0.37", "-87.4448, -53.6506, 8.15222, 0.37", "-88.2388, -54.0348, 8.3566, 0.29", "-88.9969, -54.4594, 8.56332, 0.29", "-89.5751, -54.8308, 8.72647, 0.29", "-89.9766, -55.1025, 8.83771, 0.29", "-90.6031, -55.5136, 9.00813, 0.29", "-91.2227, -55.8655, 9.1686, 0.44", "-92.0776, -56.2965, 9.39144, 0.44", "-92.5285, -56.5406, 9.52986, 0.44", "-93.1826, -56.9478, 9.76557, 0.66", "-93.8308, -57.4427, 10.0442, 0.66", "-94.1597, -57.7735, 10.2235, 0.52", "-94.7054, -58.5777, 10.6712, 0.44", "-94.9055, -59.1455, 10.9849, 0.66", "-94.9993, -59.7404, 11.312, 0.66", "-95.0452, -60.4286, 11.6865, 0.52", "-95.0986, -61.342, 12.1916, 0.52", "-95.1182, -62.1758, 12.6414, 0.44", "-95.1136, -62.9074, 13.0294, 0.37", "-95.1486, -64.0436, 13.6317, 0.37", "-95.2227, -64.9388, 14.1253, 0.29", "-95.3801, -65.8437, 14.6772, 0.29", "-101.591, -71.8849, 16.3285, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-81.8344, -50.8365, 5.97368, 1.11", "-82.8706, -51.2419, 6.14817, 1.11", "-83.6751, -51.6302, 6.27318, 1.11", "-85.3056, -52.4732, 6.53954, 0.88", "-86.5489, -53.0806, 6.73707, 0.88", "-88.4409, -53.9299, 7.02433, 0.88", "-90.4151, -54.7347, 7.2971, 0.88", "-91.4968, -55.1695, 7.44294, 0.88", "-92.5014, -55.5651, 7.55043, 0.81", "-93.6291, -55.9951, 7.63894, 0.81", "-94.4444, -56.2744, 7.69347, 0.81", "-95.8939, -56.7203, 7.78711, 0.96", "-96.6503, -56.9771, 7.83238, 0.96", "-97.4208, -57.3202, 7.86747, 0.96", "-98.1475, -57.7637, 7.88572, 0.96", "-99.0923, -58.4602, 7.9066, 0.96", "-99.4063, -58.7047, 7.90722, 0.96", "-100.366, -59.4379, 7.87952, 0.88", "-101.57, -60.2502, 7.79887, 0.88", "-102.432, -60.8097, 7.7271, 1.11", "-103.302, -61.3767, 7.6508, 1.11", "-104.306, -62.0591, 7.54511, 0.96", "-105.156, -62.6857, 7.486, 0.96", "-106.323, -63.6281, 7.45518, 0.88", "-107.661, -64.815, 7.41761, 0.88", "-108.689, -65.7799, 7.34213, 0.96", "-109.509, -66.5678, 7.24303, 0.96", "-110.677, -67.6587, 7.05934, 0.88", "-111.23, -68.15, 6.93991, 0.74", "-112.471, -69.1861, 6.61169, 0.96", "-113.571, -70.0165, 6.29794, 1.11", "-114.467, -70.6578, 6.05342, 1.25", "-115.247, -71.2139, 5.8645, 1.25", "-116.505, -72.1286, 5.59254, 1.03", "-118.207, -73.4327, 5.33282, 0.88", "-119.443, -74.4623, 5.21873, 0.88", "-120.69, -75.5704, 5.13736, 0.88", "-121.729, -76.5074, 5.06848, 0.88", "-122.734, -77.3752, 4.99883, 1.33", "-123.526, -77.9921, 4.94699, 1.33", "-124.471, -78.6779, 4.87386, 1.18", "-125.136, -79.1332, 4.81286, 0.96", "-126.335, -79.8932, 4.70823, 0.96", "-127.444, -80.5147, 4.62233, 0.96", "-128.941, -81.2326, 4.54414, 0.88", "-130.243, -81.7171, 4.52222, 0.81", "-130.98, -81.9146, 4.54357, 0.81", "-131.84, -82.1092, 4.59065, 0.74", "-132.478, -82.2732, 4.63945, 0.74", "-133.29, -82.5506, 4.71815, 0.74", "-134.451, -83.0972, 4.85199, 0.74", "-135.095, -83.5364, 4.93201, 1.11", "-136.071, -84.4822, 5.0561, 1.11", "-137.261, -85.9054, 5.19755, 0.88", "-138.029, -86.9667, 5.28921, 0.88", "-138.615, -87.8598, 5.35753, 0.88", "-139.421, -89.1068, 5.44373, 0.81", "-140.531, -90.7228, 5.49978, 0.81", "-141.102, -91.4831, 5.50056, 1.18", "-141.731, -92.3005, 5.46386, 1.33", "-142.414, -93.1297, 5.39486, 1.33", "-143.536, -94.3789, 5.24924, 0.88", "-144.651, -95.5231, 5.06018, 0.81", "-145.822, -96.6358, 4.84827, 0.81", "-147.213, -97.8981, 4.56889, 0.81", "-148.267, -98.8191, 4.32097, 0.81", "-149.26, -99.6642, 4.07472, 1.11", "-149.862, -100.172, 3.91641, 1.25", "-150.583, -100.776, 3.72789, 2.14", "-151.276, -101.394, 3.52552, 2.5", "-152.226, -102.228, 3.24678, 1.92", "-153.587, -103.603, 2.79614, 1.11", "-154.167, -104.27, 2.58556, 0.96", "-154.959, -105.268, 2.2909, 1.4", "-155.968, -106.616, 1.8627, 1.69" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-12.6072, -112.561, -3.95264, 0.37", "-12.3352, -114.67, -2.7429, 0.37", "-12.2352, -115.216, -2.44257, 0.52", "-12.0936, -115.886, -2.09738, 0.66", "-11.9275, -116.651, -1.72276, 0.37", "-11.7977, -117.217, -1.4513, 0.44", "-11.6401, -117.876, -1.14384, 0.44", "-11.4073, -118.666, -0.84715, 0.29", "-11.1651, -119.407, -0.553293, 0.29", "-10.9142, -120.031, -0.282412, 0.59", "-10.6422, -120.569, -0.0356425, 0.59", "-10.292, -121.133, 0.23851, 0.37", "-9.89707, -121.666, 0.508624, 0.66", "-9.4991, -122.118, 0.754071, 0.52", "-8.87407, -122.725, 1.10085, 0.37", "-8.38411, -123.153, 1.34784, 0.37", "-7.63449, -123.785, 1.6968, 0.37", "-6.89482, -124.394, 2.01696, 1.03", "-6.35039, -124.841, 2.23566, 1.18", "-5.82962, -125.27, 2.42533, 0.81", "-5.41399, -125.617, 2.56332, 0.52", "-4.63604, -126.271, 2.82059, 0.52", "-3.89766, -126.915, 3.06247, 0.59", "-3.24594, -127.523, 3.25012, 0.59", "-2.71158, -128.07, 3.38697, 0.81", "-2.27595, -128.545, 3.4904, 0.81", "-1.79545, -129.096, 3.59429, 0.66", "-1.44731, -129.516, 3.66081, 0.29", "-0.64953, -130.538, 3.79874, 0.52", "0.0305175, -131.428, 3.91069, 1.03", "0.275375, -131.754, 3.94617, 1.47", "0.725434, -132.324, 4.00928, 1.62", "1.33542, -133.016, 4.0962, 1.03", "1.92486, -133.615, 4.19941, 0.29", "2.49365, -134.136, 4.32082, 0.29", "3.16246, -134.698, 4.46459, 0.37", "3.85932, -135.276, 4.61498, 0.66", "4.21731, -135.57, 4.69705, 0.81", "4.77971, -136.022, 4.8417, 0.96", "5.20149, -136.357, 4.96109, 0.44", "5.53311, -136.619, 5.06631, 0.29", "6.16747, -137.114, 5.29483, 0.29", "6.6406, -137.527, 5.47497, 0.59", "7.08771, -137.971, 5.65455, 0.74", "7.44102, -138.364, 5.80213, 0.74", "7.9093, -138.949, 6.00162, 0.74", "8.28186, -139.461, 6.15664, 0.44", "8.774, -140.195, 6.35704, 0.29", "9.06463, -140.655, 6.46922, 0.66", "9.42839, -141.241, 6.59939, 0.88", "9.76993, -141.783, 6.71617, 0.96", "10.2604, -142.542, 6.89135, 0.66", "10.7645, -143.32, 7.07773, 0.37", "11.3623, -144.197, 7.30538, 0.74", "11.696, -144.672, 7.43418, 0.81", "12.0794, -145.227, 7.58685, 0.37", "12.5876, -146.002, 7.79529, 0.37", "13.0208, -146.697, 7.97636, 0.37", "13.3793, -147.293, 8.12521, 0.37", "13.6667, -147.792, 8.24172, 0.52", "14.0127, -148.382, 8.3726, 0.52", "14.3747, -148.983, 8.49717, 0.37", "14.751, -149.615, 8.61146, 0.37", "15.1935, -150.337, 8.7453, 0.81", "15.464, -150.733, 8.82764, 0.88", "15.9309, -151.34, 8.9695, 0.59", "16.3382, -151.826, 9.09511, 0.37", "16.7576, -152.286, 9.22522, 0.37", "17.2948, -152.841, 9.39727, 0.44", "18.4, -153.905, 9.76037, 0.44", "19.1278, -154.527, 10.0031, 1.18", "19.6772, -154.963, 10.1904, 1.47", "20.2904, -155.42, 10.3901, 1.47", "21.1995, -156.086, 10.6709, 1.18", "21.9106, -156.637, 10.8707, 0.29", "22.357, -157.01, 10.9808, 0.29", "22.7017, -157.315, 11.0479, 0.29", "23.3334, -157.912, 11.1182, 0.59", "23.957, -158.559, 11.1402, 0.66", "24.3079, -158.964, 11.1217, 0.74", "24.6707, -159.435, 11.085, 0.59", "25.0691, -160.014, 11.0333, 0.44", "25.5462, -160.754, 10.9577, 0.29", "25.824, -161.252, 10.9038, 0.37", "26.2296, -162.087, 10.8058, 0.52", "26.493, -162.724, 10.7463, 1.03", "26.7474, -163.39, 10.6789, 1.55", "26.9646, -163.967, 10.6286, 1.55", "27.5029, -165.422, 10.5036, 0.44", "27.8757, -166.372, 10.4177, 0.37", "28.8442, -168.498, 10.2044, 0.29", "29.0931, -168.951, 10.1604, 0.29", "29.8811, -170.122, 10.0691, 1.47", "30.2066, -170.504, 10.0471, 1.92", "30.8804, -171.122, 10.0149, 2.06", "31.9346, -171.892, 9.93855, 0.81", "33.3551, -172.716, 9.78091, 0.29", "34.265, -173.205, 9.65699, 0.29", "35.455, -173.824, 9.50373, 0.44", "36.0309, -174.132, 9.45075, 0.52", "37.3693, -174.888, 9.39396, 0.29", "38.3233, -175.471, 9.42603, 0.88", "38.8518, -175.827, 9.50752, 0.74", "40.0082, -176.737, 9.89566, 0.29", "40.7619, -177.4, 10.2971, 0.29", "41.4599, -178.063, 10.7724, 0.59", "41.8905, -178.501, 11.1234, 0.66", "42.6883, -179.352, 11.8228, 0.29", "43.4841, -180.245, 12.5178, 0.29", "44.0149, -180.889, 12.9376, 0.29", "44.5079, -181.557, 13.2932, 1.03", "44.8746, -182.081, 13.5232, 1.47", "45.2179, -182.588, 13.6996, 1.18", "45.8682, -183.579, 13.9632, 0.22", "46.46, -184.496, 14.1707, 0.22", "47.228, -185.68, 14.4048, 0.22", "47.558, -186.167, 14.5031, 0.52", "48.1313, -186.983, 14.6701, 0.29", "48.6795, -187.736, 14.8208, 0.29", "49.0342, -188.192, 14.9064, 0.88", "49.5132, -188.803, 15.0432, 0.88", "50.2099, -189.726, 15.2632, 0.29", "50.5192, -190.152, 15.38, 0.29", "51.0376, -190.885, 15.6376, 0.96", "51.3814, -191.367, 15.8639, 1.4", "51.7305, -191.855, 16.1384, 1.77", "51.9427, -192.14, 16.327, 1.77", "52.7695, -193.196, 17.0864, 0.22", "53.6074, -194.207, 17.8954, 0.22", "54.2744, -194.937, 18.5266, 0.88", "54.5817, -195.253, 18.8014, 1.33", "54.9084, -195.567, 19.0626, 1.33", "55.6695, -196.262, 19.6325, 0.22", "56.6374, -197.102, 20.2931, 0.22", "57.6954, -198.01, 20.9329, 0.22", "58.6813, -198.877, 21.4582, 0.22", "59.2636, -199.406, 21.7432, 0.74", "59.5815, -199.71, 21.8855, 0.88", "59.9602, -200.098, 22.0329, 0.52", "60.6395, -200.881, 22.2445, 0.22", "60.982, -201.328, 22.3378, 0.88", "61.3517, -201.855, 22.4437, 1.33", "61.6385, -202.291, 22.5346, 1.33", "62.2911, -203.359, 22.7632, 0.29", "63.0252, -204.665, 23.0606, 0.29", "63.3657, -205.313, 23.2259, 0.44", "63.6501, -205.881, 23.3888, 0.59", "63.9002, -206.401, 23.5534, 0.59", "64.2878, -207.232, 23.8402, 0.22", "64.6719, -208.084, 24.1463, 0.22", "64.9113, -208.604, 24.3361, 0.74", "65.0592, -208.914, 24.4449, 0.88", "65.2663, -209.312, 24.5744, 0.88", "65.6849, -210.089, 24.8287, 0.22", "66.444, -211.409, 25.255, 0.22", "66.7942, -211.988, 25.4272, 0.52", "67.0278, -212.367, 25.5275, 0.66", "67.3999, -212.956, 25.6727, 0.44", "73.6881, -219.06, 26.5571, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-12.6072, -112.561, -3.95264, 2.28", "-13.0809, -113.48, -3.7586, 2.28", "-13.526, -114.266, -3.54352, 1.62", "-14.0959, -115.198, -3.27747, 1.33", "-14.6681, -116.073, -3.03695, 0.88", "-14.9489, -116.476, -2.93157, 0.88", "-15.3951, -117.066, -2.78245, 1.03", "-16.2867, -118.117, -2.52563, 1.03", "-17.0573, -118.918, -2.33927, 0.96", "-17.6707, -119.494, -2.22761, 0.88", "-18.197, -119.984, -2.16781, 1.11", "-18.7754, -120.578, -2.15314, 1.33", "-19.2314, -121.146, -2.1923, 1.55", "-19.5982, -121.727, -2.27927, 1.25", "-19.866, -122.317, -2.39639, 0.96", "-20.0993, -123.132, -2.57672, 0.88", "-20.2769, -124.148, -2.82047, 0.88", "-20.3917, -125.235, -3.08312, 0.88", "-20.4568, -126.193, -3.30911, 1.03", "-20.4924, -127.089, -3.51097, 1.03", "-20.521, -128.145, -3.72677, 1.03", "-20.5374, -129.108, -3.90115, 1.25", "-20.537, -130.219, -4.06751, 1.55", "-20.5132, -131.07, -4.16682, 1.55", "-20.4387, -132.245, -4.27252, 1.33", "-20.3543, -133.205, -4.34072, 1.33", "-20.2804, -134.063, -4.39016, 1.11", "-20.1938, -134.982, -4.4014, 1.11", "-20.1175, -135.992, -4.37819, 0.96", "-20.0871, -136.742, -4.33938, 0.96", "-20.0834, -137.828, -4.2399, 0.88", "-20.1205, -139.261, -4.06972, 0.88", "-20.1826, -140.503, -3.88795, 1.03", "-20.2598, -141.608, -3.70019, 1.25", "-20.3542, -142.658, -3.50472, 1.33", "-20.4416, -143.485, -3.34148, 1.62", "-20.5236, -144.335, -3.16274, 2.5", "-20.5514, -144.797, -3.06795, 2.8", "-20.5744, -145.368, -2.97921, 3.02", "-20.5714, -145.905, -2.89335, 3.02", "-20.5653, -146.264, -2.8379, 3.32" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-2.22574, -50.0674, -7.16123, 0.81", "-2.5316, -51.8873, -7.02496, 0.81", "-2.82414, -53.1146, -6.85961, 0.66", "-3.23865, -54.4884, -6.63321, 0.66", "-3.72982, -55.9287, -6.37922, 0.52", "-3.93512, -56.5044, -6.27669, 0.52", "-4.4809, -58.021, -6.01092, 0.74", "-5.00957, -59.563, -5.67587, 0.74", "-5.48691, -60.8393, -5.40237, 0.88", "-6.0596, -62.2238, -5.12792, 0.59", "-6.4461, -63.1262, -4.98431, 1.03", "-6.79806, -64.0111, -4.85944, 1.25", "-7.13496, -65.0498, -4.73444, 1.03", "-7.47598, -66.3889, -4.60144, 0.66", "-7.72736, -67.4805, -4.50454, 0.66", "-7.98868, -68.6069, -4.42266, 0.81", "-8.28197, -69.925, -4.36976, 0.81", "-8.4949, -71.0271, -4.38412, 0.66", "-8.66329, -72.1928, -4.46818, 0.52", "-8.74188, -72.884, -4.56856, 0.52", "-8.83296, -73.7309, -4.71787, 0.52", "-8.97649, -74.9378, -4.96073, 0.66", "-9.12943, -76.0342, -5.18847, 0.66", "-9.31994, -77.1933, -5.43445, 0.59", "-9.55817, -78.4648, -5.68601, 1.18", "-9.75386, -79.5721, -5.89593, 1.55", "-9.96006, -80.6316, -6.06963, 1.99", "-10.2979, -81.9156, -6.23028, 2.73", "-10.6151, -82.8662, -6.31244, 2.87", "-10.9648, -83.7536, -6.37884, 3.02" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-2.22574, -50.0674, -7.16123, 0.52", "-1.32331, -51.4365, -8.23785, 0.52", "-1.12927, -51.7586, -8.46203, 0.52", "-0.45976, -52.824, -9.19645, 0.52", "0.0795979, -53.6156, -9.73797, 0.66", "0.429232, -54.1008, -10.0472, 0.66", "0.746644, -54.5114, -10.2949, 0.44", "1.13921, -55.0764, -10.643, 0.88", "1.48423, -55.6065, -10.9359, 1.33", "1.85429, -56.1776, -11.2118, 1.47", "2.29683, -56.8392, -11.6047, 1.03", "2.88696, -57.8626, -12.3674, 0.44", "3.09857, -58.479, -12.9969, 0.44", "3.20169, -59.1768, -13.9744, 0.37", "3.22839, -59.6791, -14.8318, 0.37", "3.30909, -60.3248, -16.1074, 0.37", "3.42527, -60.7499, -17.059, 0.74", "3.56461, -61.0416, -17.7626, 0.96", "3.83565, -61.4513, -18.7055, 0.96", "4.38817, -62.1991, -20.3297, 0.44", "4.80034, -62.7164, -21.3399, 1.33", "5.37624, -63.4295, -22.5879, 1.55", "5.89116, -64.086, -23.6694, 1.33", "6.56039, -64.982, -25.014, 0.81", "6.83736, -65.3664, -25.5258, 1.25", "7.17725, -65.8437, -26.0694, 0.88", "7.51711, -66.3792, -26.586, 0.37", "7.78088, -66.8505, -26.9561, 0.81", "8.03426, -67.355, -27.3017, 1.03", "8.18904, -67.659, -27.4796, 1.03", "8.75573, -68.7149, -28.051, 0.29", "9.05201, -69.2519, -28.3141, 0.29", "9.4616, -69.9493, -28.6125, 1.84", "9.85269, -70.539, -28.8522, 2.14", "10.9497, -72.0001, -29.4591, 0.29", "11.5181, -72.673, -29.7356, 0.81", "12.0946, -73.2805, -29.9766, 0.81", "12.6999, -73.8497, -30.2114, 0.52", "13.5392, -74.5552, -30.5415, 1.25", "14.0947, -74.9857, -30.7688, 1.4", "15.5263, -76.0529, -31.3531, 0.22", "16.402, -76.7029, -31.6845, 0.22", "17.3843, -77.4455, -32.0271, 1.4", "17.9911, -77.9377, -32.2222, 2.21", "18.2633, -78.1807, -32.2966, 2.21", "19.992, -79.8893, -32.6885, 0.22", "20.4505, -80.3698, -32.7827, 0.74", "20.8563, -80.8146, -32.8728, 1.03", "21.5107, -81.5832, -33.0292, 0.59", "23.0354, -83.4771, -33.4114, 0.22", "24.9744, -85.9372, -33.9378, 0.22", "25.6587, -86.8114, -34.1557, 0.81", "26.1697, -87.4577, -34.3296, 0.96", "27.8399, -89.564, -34.94, 0.22", "28.8974, -90.8652, -35.3658, 0.22", "29.4918, -91.5844, -35.6413, 0.88", "30.089, -92.2824, -35.9527, 0.88", "31.7852, -94.2337, -36.8755, 0.15", "33.054, -95.6606, -37.5117, 0.15", "33.7967, -96.468, -37.8749, 0.15", "34.4688, -97.2036, -38.1961, 1.62", "34.8842, -97.6775, -38.3886, 1.92", "35.2074, -98.0577, -38.5195, 1.92", "37.2738, -100.584, -39.285, 0.22", "37.7096, -101.124, -39.4241, 0.66", "38.0382, -101.543, -39.5227, 0.88", "38.376, -101.971, -39.6255, 0.88", "39.4868, -103.367, -40.074, 0.15", "40.3473, -104.496, -40.5839, 0.15", "40.8288, -105.181, -40.9764, 0.81", "41.131, -105.669, -41.2818, 1.03", "41.3685, -106.11, -41.577, 1.03", "42.037, -107.588, -42.6469, 0.22", "42.6142, -109.187, -43.9081, 0.22", "42.8341, -109.836, -44.4666, 0.22", "43.1513, -110.776, -45.3277, 1.03", "43.3195, -111.265, -45.7792, 1.62", "43.4976, -111.758, -46.2614, 1.62", "43.8304, -112.592, -47.1245, 1.03", "44.5762, -114.3, -48.9719, 0.22", "44.9495, -115.1, -49.9353, 0.44", "45.1777, -115.54, -50.4904, 0.44", "45.6974, -116.511, -51.7208, 0.66", "45.9651, -117.001, -52.3199, 0.96", "46.2841, -117.567, -52.9934, 0.37", "47.3261, -119.382, -55.0515, 0.66", "47.552, -119.756, -55.4576, 0.66", "48.4081, -121.113, -56.9364, 0.22", "48.8817, -121.831, -57.6724, 0.22", "49.3238, -122.471, -58.3049, 0.81", "49.7597, -123.048, -58.8412, 0.96", "50.0479, -123.424, -59.0814, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "10.7307, 117.232, -28.067, 0.37", "13.3362, 116.112, -25.7886, 0.37", "13.8679, 115.884, -25.3237, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "10.7307, 117.232, -28.067, 0.22", "12.0726, 119.758, -28.8535, 0.22", "12.7306, 121.141, -29.313, 0.22", "13.2224, 122.239, -29.6907, 0.74", "13.3945, 122.647, -29.8293, 0.74", "14.192, 124.539, -30.4715, 0.15", "14.708, 125.763, -30.8871, 0.15", "15.0241, 126.652, -31.2816, 0.66", "15.1938, 127.206, -31.4843, 0.88", "15.3946, 127.839, -31.6749, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-9.80278, 48.3697, 0.779028, 0.66", "-10.1979, 50.2932, 0.512276, 0.66", "-10.2858, 51.0227, 0.44478, 0.96", "-10.3846, 51.8791, 0.382188, 0.96", "-10.5116, 53.0497, 0.312251, 0.59", "-10.6118, 54.0874, 0.259148, 0.59", "-10.7103, 55.3147, 0.204153, 0.59", "-10.8106, 57.1007, 0.184399, 0.59", "-10.8307, 57.9436, 0.179492, 0.52", "-10.8327, 59.2033, 0.178545, 0.88", "-10.8347, 60.1161, 0.170816, 1.11", "-10.86, 61.2046, 0.146495, 1.11", "-10.9073, 62.4579, 0.119185, 0.74", "-10.9877, 63.7715, 0.091095, 0.74", "-11.1086, 65.4525, 0.0603349, 0.74", "-11.2158, 66.6117, 0.0314093, 0.52", "-11.3573, 67.8504, -0.0191175, 0.52", "-11.4712, 68.7421, -0.0681001, 0.96", "-11.6428, 70.0577, -0.17064, 1.11", "-11.9031, 72.0076, -0.358509, 1.11", "-12.0726, 73.2882, -0.500129, 1.11", "-12.22, 74.5652, -0.630712, 0.81", "-12.329, 75.6881, -0.736792, 0.74", "-12.4148, 76.8589, -0.834874, 0.74", "-12.4643, 77.9575, -0.908103, 0.44", "-12.4985, 78.8873, -0.94951, 0.44", "-12.5611, 80.4187, -0.972529, 0.74", "-12.6039, 81.4765, -0.96519, 0.74", "-12.6421, 82.6014, -0.947043, 0.37", "-12.6467, 83.7696, -0.920159, 0.74", "-12.6348, 84.7887, -0.937145, 0.96", "-12.6096, 85.9561, -1.00597, 0.96", "-12.5727, 87.2388, -1.15194, 0.81", "-12.5258, 88.442, -1.32863, 0.52", "-12.4591, 89.6986, -1.54551, 0.52", "-12.326, 91.3469, -1.85762, 1.03", "-12.2356, 92.2229, -2.03264, 1.55", "-12.1455, 93.0145, -2.19881, 1.69", "-12.0857, 93.5304, -2.30666, 1.69", "-11.9313, 94.8067, -2.54931, 0.37", "-11.7957, 95.8756, -2.70949, 0.44", "-11.7026, 96.433, -2.75554, 0.44", "-11.5746, 97.0758, -2.78812, 0.44", "-11.3397, 98.1404, -2.81557, 0.29", "-11.2234, 98.5932, -2.82422, 0.59", "-10.9897, 99.3618, -2.83551, 0.44", "-10.6066, 100.571, -2.84822, 0.29", "-10.2707, 101.692, -2.85598, 1.18", "-10.1017, 102.295, -2.85764, 1.18", "-9.85537, 103.201, -2.86245, 0.52", "-9.62083, 104.07, -2.86723, 0.29", "-9.34598, 105.063, -2.84274, 0.29", "-9.11527, 105.963, -2.76935, 0.29", "-8.98507, 106.553, -2.69329, 0.29", "-8.76692, 107.729, -2.50016, 0.81", "-8.59516, 108.76, -2.30345, 0.44", "-8.41188, 109.748, -2.12172, 0.22", "-8.18036, 110.744, -1.95084, 0.44", "-8.08279, 111.126, -1.88139, 0.44", "-7.87989, 111.945, -1.7283, 0.29", "-7.71424, 112.686, -1.58489, 0.29", "-7.48362, 113.697, -1.41199, 0.29", "-7.33061, 114.342, -1.32604, 0.29", "-7.12713, 115.172, -1.22573, 0.66", "-6.96663, 115.847, -1.13728, 0.66", "-6.76931, 116.7, -1.04867, 0.74", "-6.59611, 117.629, -0.948283, 0.37", "-6.48505, 118.356, -0.866716, 0.37", "-6.33533, 119.372, -0.785518, 0.52", "-6.21772, 120.138, -0.755464, 0.59", "-6.03572, 121.302, -0.726914, 0.44", "-5.90347, 122.123, -0.715182, 0.29", "-5.80324, 122.699, -0.703938, 0.29", "-5.58446, 123.972, -0.662757, 1.11", "-5.4617, 124.701, -0.630089, 1.25", "-5.37556, 125.221, -0.600649, 1.25", "-5.176, 126.314, -0.537792, 0.66", "-5.0321, 126.966, -0.520768, 0.29", "-4.77352, 127.979, -0.506692, 0.29", "-4.51515, 128.884, -0.502577, 0.29", "-4.25637, 129.702, -0.505289, 0.29", "-3.83913, 130.925, -0.520629, 0.96", "-3.65621, 131.455, -0.537028, 1.47", "-3.51286, 131.909, -0.55914, 1.47", "-3.4383, 132.176, -0.576833, 1.47", "-3.25274, 132.958, -0.628584, 0.74", "-3.06286, 133.856, -0.681207, 0.29", "-2.89743, 134.777, -0.728205, 0.52", "-2.7437, 135.628, -0.765971, 0.74", "-2.52049, 136.709, -0.804461, 0.44", "-2.31839, 137.57, -0.829126, 0.29", "-2.15807, 138.174, -0.843541, 0.29", "-1.90162, 139.003, -0.857598, 0.66", "-1.69777, 139.595, -0.867971, 0.74", "-1.3987, 140.43, -0.884029, 0.74", "-1.07129, 141.365, -0.89499, 0.29", "-0.796549, 142.203, -0.899892, 0.29", "-0.284544, 143.888, -0.902504, 0.29", "0.0251923, 145.04, -0.844655, 0.52", "0.190292, 145.737, -0.782496, 1.18", "0.3122, 146.343, -0.709948, 1.4", "0.474721, 147.328, -0.567746, 1.4", "0.575083, 148.103, -0.443183, 0.66", "0.785489, 149.919, -0.146031, 0.29", "0.933811, 151.062, 0.01669, 0.29", "1.04678, 151.75, 0.075371, 0.37", "1.22754, 152.675, 0.102272, 0.37", "1.44433, 153.629, 0.088443, 0.37", "1.88479, 155.315, -0.00905468, 0.37", "2.43215, 157.142, -0.212746, 0.37", "3.01386, 158.913, -0.430842, 1.33", "3.32542, 159.761, -0.553238, 1.99", "3.58942, 160.434, -0.661405, 1.99", "3.70225, 160.719, -0.710677, 1.99", "3.91294, 161.244, -0.80122, 1.99", "4.35669, 162.341, -0.96845, 0.59", "4.8809, 163.616, -1.11384, 0.29", "5.25669, 164.509, -1.16386, 0.59", "5.55201, 165.199, -1.17989, 0.59", "6.17787, 166.648, -1.16995, 0.37", "6.51469, 167.453, -1.14087, 0.37", "7.03226, 168.759, -1.05528, 0.37", "7.61006, 170.334, -0.910851, 0.74", "7.81721, 170.982, -0.851463, 0.74", "7.99423, 171.653, -0.783948, 0.88", "8.19139, 172.628, -0.681309, 0.44", "8.44359, 174.315, -0.543559, 0.29", "8.52928, 175.217, -0.522597, 0.52", "8.61982, 176.89, -0.591705, 1.25", "8.6392, 177.603, -0.642633, 1.62", "8.64646, 178.07, -0.700315, 1.62", "8.65383, 179.03, -0.864415, 0.96", "8.6718, 180.459, -1.17984, 0.29", "8.70548, 181.28, -1.3802, 0.29", "8.77801, 182.278, -1.61623, 0.29", "8.86, 183.325, -1.82925, 0.74", "8.89111, 183.801, -1.90243, 0.96", "8.92157, 184.354, -1.95909, 0.96", "8.98933, 185.755, -2.06492, 0.52", "9.07874, 187.689, -2.22155, 0.37", "9.13573, 189.016, -2.3248, 0.29", "9.17204, 190.267, -2.42939, 0.66", "9.18909, 191.106, -2.5171, 0.66", "9.20271, 192.679, -2.71377, 0.29", "9.20844, 193.459, -2.81797, 0.29", "9.23278, 195.516, -3.09815, 0.29", "9.29167, 197.754, -3.39403, 1.99", "9.30696, 198.263, -3.45328, 2.28", "9.32188, 198.983, -3.51939, 1.55", "9.33203, 199.772, -3.55166, 0.88", "9.33125, 201.063, -3.52826, 0.22", "9.32032, 201.668, -3.48886, 0.22", "9.28929, 202.774, -3.37503, 0.66", "9.26925, 203.473, -3.30298, 0.66", "9.24455, 204.656, -3.19364, 0.29", "9.21274, 206.548, -3.05918, 0.22", "9.22116, 207.507, -3.00385, 0.22", "9.2566, 208.521, -2.9622, 0.52", "9.36397, 209.79, -2.93734, 0.44", "9.50944, 210.894, -2.93766, 0.44", "9.72886, 212.168, -2.96938, 0.44", "10.1622, 214.142, -3.04499, 0.22", "10.5246, 215.611, -3.1087, 0.66", "10.8526, 216.8, -3.16541, 1.77", "11.0435, 217.428, -3.19686, 1.77", "11.2319, 217.991, -3.22514, 1.77", "11.5479, 218.816, -3.26444, 0.88", "11.931, 219.733, -3.26947, 0.29", "12.2002, 220.356, -3.24806, 0.52", "12.8806, 221.969, -3.15347, 0.22", "13.2704, 222.889, -3.10453, 0.52", "13.7133, 223.924, -3.06338, 0.52", "14.6717, 226.2, -3.00341, 0.22", "15.3974, 227.94, -2.98592, 0.37", "15.8667, 229.085, -2.97932, 0.37", "16.3731, 230.36, -2.98336, 1.92", "16.5953, 230.946, -2.99526, 2.21", "16.8069, 231.553, -3.03137, 2.21", "17.0421, 232.266, -3.16372, 1.18" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-9.80278, 48.3697, 0.779028, 0.66", "-9.34063, 49.8475, 0.683151, 0.66", "-9.06029, 50.7466, 0.616952, 0.81", "-8.84939, 51.4175, 0.586907, 0.37", "-8.60866, 52.2262, 0.56093, 0.29", "-8.20288, 53.5809, 0.50626, 0.29", "-7.94623, 54.3739, 0.466408, 0.29", "-7.665, 55.1338, 0.392371, 0.29", "-7.22367, 56.1372, 0.28424, 0.29", "-6.82928, 56.9609, 0.188059, 0.29", "-6.43637, 57.7813, 0.091716, 0.74", "-6.16163, 58.3333, 0.029968, 0.74", "-5.64313, 59.2685, -0.0921807, 0.29", "-5.33391, 59.8062, -0.16002, 0.37", "-4.62816, 61.0562, -0.324474, 0.37", "-4.25151, 61.7637, -0.403606, 0.37", "-3.86197, 62.5992, -0.476893, 0.37", "-3.70366, 62.9842, -0.503282, 0.37", "-3.44744, 63.6871, -0.535069, 0.22", "-3.21638, 64.3696, -0.559174, 0.22", "-3.01763, 64.9074, -0.59082, 0.66", "-2.80809, 65.5514, -0.650372, 0.96", "-0.743068, 73.1761, -1.85665, 0.96", "3.54229, 80.0142, -2.321, 0.96", "7.38512, 87.0751, -1.56857, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "26.5565, 8.84842, 7.03592, 0.66", "27.2248, 7.85443, 6.57893, 0.66", "27.4137, 7.54439, 6.4125, 0.66", "27.7241, 7.06332, 6.17197, 0.88", "28.2831, 6.28051, 5.81528, 0.88", "28.6833, 5.77762, 5.60906, 0.88", "29.0666, 5.35882, 5.45171, 1.03", "29.515, 4.90653, 5.28657, 1.03", "30.1537, 4.54358, 5.24842, 0.88", "30.6552, 4.44961, 5.32695, 0.88", "31.0857, 4.4087, 5.42574, 0.88", "31.7703, 4.3182, 5.59385, 0.81", "32.5654, 4.11658, 5.77374, 0.81", "33.0747, 3.9067, 5.84594, 0.81", "33.7252, 3.52381, 5.84303, 0.74", "34.421, 3.03804, 5.77664, 0.88", "35.0397, 2.55969, 5.66697, 0.88", "35.7043, 1.98762, 5.49364, 0.52", "36.0365, 1.70133, 5.37787, 0.52", "36.4383, 1.41926, 5.21321, 0.52", "36.9494, 1.15601, 5.00182, 0.52", "37.5298, 0.960974, 4.77155, 0.74", "38.1167, 0.824524, 4.54326, 0.74", "38.8593, 0.700734, 4.26003, 0.74", "39.8395, 0.571845, 3.90246, 0.74", "40.5182, 0.501469, 3.65628, 0.74", "41.0549, 0.46909, 3.47375, 0.74", "41.636, 0.484603, 3.3022, 0.74", "41.9763, 0.512653, 3.22405, 0.88", "42.9352, 0.652699, 3.04674, 0.88", "43.7524, 0.791074, 2.91996, 0.88", "44.7656, 0.950584, 2.77124, 0.66", "45.5086, 1.04775, 2.67401, 0.66", "47.4247, 1.26554, 2.46344, 0.59", "48.0903, 1.33184, 2.39982, 0.52", "49.0977, 1.44652, 2.32679, 0.52", "49.7035, 1.54161, 2.30352, 0.52", "50.3591, 1.69933, 2.30181, 0.52", "51.1401, 1.93247, 2.32104, 0.52", "51.662, 2.09716, 2.34447, 0.52", "52.5168, 2.32929, 2.37906, 0.52", "53.4447, 2.57888, 2.42288, 0.52", "54.3165, 2.78606, 2.46039, 0.52", "55.1321, 2.91653, 2.48007, 0.52", "56.0688, 2.96024, 2.47731, 0.52", "56.7198, 2.89071, 2.45696, 0.52", "57.3321, 2.74658, 2.45066, 0.52", "57.7461, 2.62959, 2.46526, 0.52", "58.2695, 2.48524, 2.50874, 0.52", "59.3308, 2.22955, 2.67298, 0.29", "61.2265, 1.87441, 3.09066, 0.29", "62.9432, 1.64052, 3.55094, 0.29", "63.8174, 1.57221, 3.83273, 0.29", "64.4444, 1.54578, 4.05489, 0.44", "65.1074, 1.5564, 4.32933, 0.59", "65.5239, 1.59834, 4.55888, 0.59", "66.1963, 1.84569, 5.11585, 0.59", "66.5448, 2.11414, 5.48603, 0.59", "73.6158, 0.32481, 5.65906, 0.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "26.5565, 8.84842, 7.03592, 1.11", "28.0357, 8.73893, 6.73056, 1.11", "28.9552, 8.57962, 6.47867, 1.11", "29.9964, 8.47775, 6.12743, 1.25", "30.7966, 8.47905, 5.86414, 1.47", "31.8783, 8.59137, 5.54446, 1.4", "32.8358, 8.77456, 5.29339, 1.4", "33.907, 9.04744, 4.98752, 1.18", "35.3361, 9.67865, 4.65113, 1.18", "36.297, 10.3166, 4.489, 1.18", "37.1098, 10.9395, 4.37168, 1.18", "37.5923, 11.3144, 4.30373, 0.88", "38.0808, 11.6395, 4.21782, 0.88", "38.8668, 11.988, 4.01921, 0.88", "40.0998, 12.2398, 3.6123, 1.11", "41.0474, 12.3109, 3.23897, 1.11", "42.0119, 12.3222, 2.82387, 1.11", "43.1067, 12.283, 2.32899, 1.25", "44.2279, 12.1925, 1.8032, 1.33", "44.7487, 12.1288, 1.55473, 1.47", "45.6099, 12.0237, 1.16778, 1.77" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-155.968, -106.616, 1.8627, 0.59", "-155.849, -109.002, 1.62639, 0.59", "-155.789, -110.007, 1.56986, 0.59", "-155.711, -110.885, 1.54965, 0.52", "-155.61, -111.897, 1.55633, 0.52", "-155.529, -112.99, 1.5793, 0.88", "-155.448, -114.202, 1.61725, 1.03", "-155.411, -114.925, 1.69663, 1.03", "-155.31, -116.197, 1.85964, 1.03", "-155.191, -117.291, 2.01618, 0.29", "-155.112, -118.069, 2.13247, 0.29", "-155.067, -118.712, 2.23126, 0.29", "-155.047, -119.929, 2.40878, 0.59", "-155.088, -120.924, 2.59776, 0.74", "-155.162, -121.631, 2.75898, 0.88", "-155.262, -122.314, 2.92866, 0.88", "-155.375, -122.947, 3.10486, 0.88", "-155.579, -123.789, 3.35531, 0.81", "-156.095, -125.605, 3.901, 0.37", "-156.373, -126.585, 4.20498, 1.03", "-156.655, -127.555, 4.55024, 1.33", "-156.924, -128.439, 4.89242, 1.33", "-157.298, -129.568, 5.35038, 1.03", "-157.634, -130.514, 5.7395, 0.74", "-157.943, -131.337, 6.04775, 0.37", "-158.37, -132.415, 6.51848, 0.74", "-158.63, -133.033, 6.80678, 0.74", "-158.922, -133.795, 7.10465, 0.59", "-159.109, -134.381, 7.29019, 0.37", "-159.337, -135.241, 7.47544, 0.37", "-159.684, -136.671, 7.59897, 0.66", "-159.939, -137.694, 7.5695, 0.74", "-160.416, -139.433, 7.40095, 0.52", "-160.621, -140.161, 7.29529, 0.52", "-160.914, -141.026, 7.14367, 1.33", "-161.299, -142.105, 6.92444, 1.55", "-161.815, -143.52, 6.66497, 1.99", "-162.152, -144.363, 6.56389, 2.21", "-162.622, -145.405, 6.5009, 1.99", "-163.22, -146.66, 6.43007, 1.11", "-163.856, -148.1, 6.34105, 0.37", "-164.326, -149.33, 6.26846, 1.11", "-164.54, -149.954, 6.22799, 1.25", "-164.81, -150.759, 6.17639, 1.25", "-165.414, -152.536, 6.0152, 0.29", "-165.804, -153.669, 5.88641, 0.29", "-166.205, -154.708, 5.75986, 0.44", "-166.641, -155.784, 5.61838, 0.59", "-167.169, -157.053, 5.46457, 0.88", "-167.616, -158.106, 5.35402, 0.96", "-168.11, -159.117, 5.26868, 0.66", "-168.794, -160.314, 5.21587, 0.37", "-169.32, -161.166, 5.19225, 0.29", "-169.907, -162.05, 5.21192, 0.29", "-170.418, -162.821, 5.26781, 0.29", "-171.131, -163.855, 5.38831, 0.29", "-172.206, -165.272, 5.55549, 0.74", "-173.048, -166.247, 5.71424, 1.03", "-174.101, -167.373, 5.94316, 2.28", "-174.935, -168.187, 6.13539, 2.8", "-175.737, -168.957, 6.31998, 3.09", "-177.028, -170.242, 6.6147, 1.84", "-178.523, -171.714, 6.9425, 0.29", "-179.254, -172.476, 7.11386, 0.29", "-180.208, -173.566, 7.33714, 0.29", "-181.164, -174.765, 7.5848, 0.29", "-181.81, -175.76, 7.79886, 0.88", "-182.303, -176.657, 7.98834, 1.11", "-182.686, -177.432, 8.1226, 0.81", "-182.993, -178.102, 8.24109, 0.52", "-183.457, -179.23, 8.44589, 0.29", "-183.973, -180.567, 8.70184, 0.29", "-184.385, -181.71, 8.92525, 0.29", "-184.616, -182.327, 9.04416, 0.29", "-185.054, -183.558, 9.2847, 0.81", "-185.424, -184.7, 9.51243, 1.11", "-185.685, -185.597, 9.69339, 0.88", "-186.05, -186.871, 9.94745, 0.29", "-186.487, -188.423, 10.2612, 0.29", "-186.918, -189.815, 10.4883, 0.29", "-187.084, -190.325, 10.5571, 0.29", "-187.478, -191.544, 10.6906, 0.74", "-187.762, -192.42, 10.7645, 0.74", "-188.144, -193.657, 10.8498, 0.44", "-188.569, -195.097, 10.93, 0.29", "-188.789, -195.813, 10.962, 0.29", "-189.082, -196.806, 11.046, 0.29", "-189.377, -197.996, 11.2083, 0.29", "-189.522, -198.676, 11.3469, 0.74", "-189.648, -199.302, 11.5147, 0.74", "-189.876, -200.421, 11.8961, 0.44", "-190.158, -201.681, 12.3511, 0.29", "-190.422, -202.765, 12.7864, 0.74", "-190.617, -203.525, 13.1012, 1.11", "-190.807, -204.165, 13.3615, 1.69", "-190.972, -204.703, 13.5721, 1.92", "-191.213, -205.485, 13.8554, 1.92", "-191.553, -206.671, 14.2275, 1.62", "-191.961, -208.113, 14.6466, 0.29", "-192.275, -209.27, 14.9584, 0.22", "-192.555, -210.228, 15.2007, 0.22", "-192.952, -211.527, 15.4994, 0.59", "-193.302, -212.606, 15.7212, 0.74", "-193.573, -213.359, 15.8661, 0.74", "-193.953, -214.325, 16.0609, 0.44", "-194.322, -215.143, 16.2279, 0.29", "-194.765, -215.954, 16.4239, 0.29", "-195.826, -217.564, 16.8899, 0.44", "-196.452, -218.39, 17.1276, 0.59", "-197.082, -219.156, 17.3405, 0.59", "-197.828, -220.037, 17.5478, 0.52", "-198.972, -221.359, 17.8055, 1.33", "-199.916, -222.433, 17.9681, 2.06", "-200.797, -223.476, 18.0798, 2.21", "-201.434, -224.315, 18.1329, 2.21", "-202.349, -225.694, 18.1692, 0.81", "-202.897, -226.697, 18.1519, 0.29", "-203.305, -227.616, 18.0961, 0.44", "-203.553, -228.316, 18.0513, 0.44", "-203.861, -229.343, 18.0015, 0.29", "-204.089, -230.115, 17.9462, 0.29", "-204.379, -231.073, 17.8773, 0.29", "-204.598, -231.697, 17.8332, 0.74", "-204.837, -232.26, 17.8132, 0.88", "-205.156, -232.919, 17.8171, 0.88", "-205.683, -233.982, 17.8873, 0.29", "-206.218, -235.036, 18.0418, 0.29", "-206.725, -236.092, 18.302, 0.29", "-207.284, -237.36, 18.6889, 0.52", "-207.536, -237.953, 18.8964, 0.52", "-207.965, -239.031, 19.3307, 0.29", "-208.219, -239.77, 19.6873, 0.29", "-208.639, -241.262, 20.4996, 0.59", "-208.85, -242.103, 21.0077, 0.29", "-208.997, -242.651, 21.3754, 0.29", "-209.251, -243.399, 21.9276, 0.74", "-209.731, -244.366, 22.7123, 0.88", "-210.226, -245.078, 23.3193, 0.29", "-210.81, -245.72, 23.8954, 0.29", "-211.647, -246.517, 24.5844, 0.96", "-212.34, -247.153, 25.0653, 1.11", "-213.216, -247.971, 25.5429, 1.11", "-214.147, -248.922, 25.967, 0.29", "-214.748, -249.641, 26.228, 0.22", "-215.224, -250.369, 26.4285, 0.44", "-215.67, -251.24, 26.6071, 0.44", "-216.266, -252.721, 26.8085, 0.22", "-216.59, -253.653, 26.8813, 0.22", "-216.805, -254.353, 26.8961, 0.22", "-217.045, -255.148, 26.8836, 0.59", "-217.217, -255.722, 26.8699, 0.74", "-217.735, -257.415, 26.781, 0.29", "-218.015, -258.317, 26.7163, 0.29", "-218.371, -259.439, 26.6236, 0.44", "-218.695, -260.514, 26.536, 0.44", "-219.1, -261.938, 26.445, 0.52", "-219.332, -262.75, 26.4091, 0.96", "-219.574, -263.557, 26.3976, 1.4", "-219.848, -264.372, 26.3842, 1.4", "-220.575, -266.243, 26.4589, 0.29", "-221.357, -268.046, 26.6362, 0.22", "-221.772, -268.916, 26.7827, 0.37", "-222.47, -270.282, 27.1097, 0.37", "-223.198, -271.609, 27.5051, 0.29", "-224.219, -273.323, 28.1125, 0.74", "-224.792, -274.188, 28.4677, 1.11", "-225.457, -275.096, 28.8586, 1.25", "-226.161, -275.988, 29.2296, 1.11", "-226.841, -276.807, 29.5451, 0.59", "-227.733, -277.868, 29.8894, 0.29", "-228.261, -278.518, 30.0131, 0.29", "-229.247, -279.767, 30.1879, 0.22", "-229.898, -280.625, 30.2814, 0.22", "-230.259, -281.116, 30.3302, 0.66", "-230.817, -281.885, 30.4068, 0.66", "-231.949, -283.486, 30.605, 0.29", "-232.637, -284.447, 30.7419, 0.29", "-233.364, -285.403, 30.8881, 0.29", "-234.129, -286.344, 31.0304, 0.66", "-234.744, -287.061, 31.1335, 0.66", "-235.735, -288.162, 31.2808, 0.22", "-236.419, -288.9, 31.3687, 0.22", "-237.566, -290.14, 31.497, 0.22", "-239.565, -292.345, 31.6605, 0.22", "-240.161, -293.062, 31.6856, 0.22", "-240.773, -293.885, 31.6869, 1.11", "-241.098, -294.4, 31.6647, 1.11", "-241.247, -294.7, 31.6483, 1.11", "-241.537, -295.493, 31.6029, 0.66", "-241.879, -296.811, 31.5159, 0.22", "-242.035, -297.621, 31.4723, 0.52", "-242.264, -299.484, 31.4004, 0.22", "-242.442, -300.998, 31.3559, 0.22", "-242.518, -301.644, 31.3436, 0.59", "-242.617, -302.465, 31.3409, 0.59", "-242.756, -303.652, 31.3351, 0.52", "-242.939, -305.404, 31.3207, 0.22", "-243.026, -306.432, 31.31, 0.22", "-243.056, -307.045, 31.3057, 0.22", "-243.074, -307.742, 31.3005, 0.66", "-243.06, -308.74, 31.3595, 0.81", "-242.961, -309.831, 31.5261, 0.59", "-242.621, -311.374, 31.9855, 1.25", "-242.316, -312.18, 32.3316, 1.69", "-242.094, -312.573, 32.5549, 1.92", "-241.095, -313.819, 33.457, 1.18", "-240.083, -314.739, 34.3191, 0.22", "-238.853, -315.569, 35.2701, 0.22", "-237.998, -316.02, 35.8772, 0.22", "-236.908, -316.529, 36.5765, 0.22", "-236.11, -316.883, 37.0344, 0.66", "-235.51, -317.154, 37.3241, 0.66", "-233.873, -317.903, 38.0292, 0.22", "-233.246, -318.203, 38.2737, 0.37", "-232.614, -318.576, 38.5275, 0.37", "-232.109, -318.942, 38.7528, 0.22", "-231.35, -319.584, 39.1143, 0.22", "-236.558, -330.878, 40.8288, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-155.968, -106.616, 1.8627, 0.37", "-157.539, -106.265, 1.64774, 0.37", "-158.196, -106.154, 1.53998, 0.37", "-159.59, -105.999, 1.23945, 0.29", "-160.647, -105.93, 0.987663, 0.44", "-161.664, -105.903, 0.732324, 0.66", "-162.247, -105.91, 0.574942, 0.81", "-162.748, -105.945, 0.417697, 0.81", "-164.294, -106.126, -0.121921, 0.22", "-164.774, -106.204, -0.311945, 0.22", "-165.636, -106.349, -0.65345, 0.74", "-166.343, -106.469, -0.940285, 0.88", "-167.512, -106.687, -1.44839, 0.22", "-167.983, -106.785, -1.70094, 0.22", "-168.412, -106.893, -1.97113, 0.22", "-168.894, -107.036, -2.30582, 0.74", "-169.397, -107.231, -2.68889, 0.88", "-169.932, -107.539, -3.16307, 0.88", "-171.07, -108.468, -4.33698, 0.22", "-171.464, -108.852, -4.77975, 0.22", "-171.782, -109.196, -5.16763, 0.74", "-172.16, -109.692, -5.72214, 0.74", "-172.969, -110.708, -6.78783, 0.29", "-173.228, -111.015, -7.09547, 0.29", "-173.663, -111.502, -7.55598, 0.88", "-174.192, -112.033, -8.08519, 1.03", "-175.81, -113.464, -9.63292, 0.22", "-177.369, -114.712, -11.0322, 0.22", "-178.014, -115.162, -11.5537, 0.22", "-178.4, -115.416, -11.8506, 1.11", "-178.873, -115.715, -12.1878, 1.11", "-179.392, -116.006, -12.4982, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-20.5653, -146.264, -2.8379, 0.81", "-18.8395, -147.171, -3.23131, 0.81", "-17.4442, -147.823, -3.57036, 0.52", "-15.456, -148.68, -4.0791, 0.52", "-14.5888, -149.066, -4.30948, 0.37", "-12.858, -149.862, -4.77893, 0.37", "-12.1713, -150.189, -4.96701, 0.66", "-11.5616, -150.482, -5.15617, 0.88", "-11.0544, -150.731, -5.30844, 0.88", "-9.76141, -151.498, -5.70124, 0.59", "-8.61798, -152.326, -6.05159, 0.66", "-7.4818, -153.275, -6.39702, 0.74", "-6.78649, -153.851, -6.60618, 0.74", "-6.24544, -154.264, -6.76624, 0.52", "-5.36113, -154.864, -7.02836, 0.29", "-4.41059, -155.375, -7.29042, 0.96", "-3.54224, -155.768, -7.51192, 1.03", "-2.96689, -156.005, -7.64344, 1.03", "-1.65341, -156.52, -7.90929, 0.66", "-1.10208, -156.741, -8.02339, 0.52", "0.163457, -157.27, -8.2891, 0.59", "1.41497, -157.865, -8.55672, 0.59", "2.56234, -158.488, -8.81308, 0.52", "3.50805, -159.069, -9.0369, 0.52", "4.49501, -159.739, -9.28471, 0.96", "5.10731, -160.165, -9.45783, 1.18", "6.11737, -160.855, -9.77613, 0.66", "7.30911, -161.602, -10.1611, 0.37", "8.05526, -162.024, -10.4065, 0.37", "9.60163, -162.808, -10.9215, 0.88", "10.9778, -163.475, -11.3388, 1.03", "12.0272, -163.982, -11.6388, 0.81", "12.9987, -164.451, -11.8916, 0.52", "14.1443, -165.006, -12.159, 0.52", "15.0444, -165.459, -12.3414, 0.52", "16.289, -166.178, -12.5598, 0.52", "17.3396, -166.859, -12.7183, 1.33", "17.9958, -167.331, -12.8105, 1.69", "18.7476, -167.943, -12.9101, 1.69", "19.9796, -169.031, -13.1714, 1.11", "21.2974, -170.235, -13.5535, 0.44", "22.1367, -170.981, -13.8831, 0.44", "22.8084, -171.558, -14.1964, 0.29", "23.5633, -172.19, -14.6207, 0.29", "25.2579, -173.539, -15.6976, 1.03", "25.7469, -173.908, -16.0437, 1.4", "26.2687, -174.311, -16.4524, 1.4", "27.9129, -175.721, -17.8509, 0.22", "28.7807, -176.51, -18.6009, 0.52", "29.2086, -176.917, -18.962, 0.52", "29.9453, -177.688, -19.5559, 0.29", "30.9727, -178.805, -20.3965, 0.29", "31.6042, -179.498, -20.8969, 0.29", "32.2399, -180.238, -21.4097, 0.66", "32.7136, -180.794, -21.7527, 0.81", "33.0598, -181.2, -21.9894, 0.81", "33.6494, -181.834, -22.3442, 0.59", "34.3257, -182.482, -22.7244, 0.29", "34.9757, -183.126, -23.0494, 0.29", "35.708, -183.97, -23.3728, 0.66", "36.266, -184.719, -23.558, 0.66", "37.0018, -185.873, -23.7053, 0.29", "37.411, -186.622, -23.7213, 0.29", "38.0866, -187.995, -23.6488, 0.66", "38.5478, -188.972, -23.5307, 0.66", "39.1093, -190.252, -23.3005, 0.44", "39.6274, -191.558, -23.0088, 1.47", "40.0017, -192.612, -22.7452, 1.84", "40.2046, -193.231, -22.588, 1.84", "40.3228, -193.614, -22.5082, 1.84", "40.6331, -194.594, -22.3247, 1.33", "41.0378, -195.773, -22.1363, 0.52", "41.2623, -196.394, -22.0471, 0.52", "41.5719, -197.238, -21.9284, 0.52", "42.0692, -198.585, -21.7266, 0.29", "42.3354, -199.282, -21.6149, 0.29", "42.7415, -200.276, -21.4368, 0.29", "43.143, -201.192, -21.2584, 0.44", "43.7546, -202.424, -21.0229, 0.44", "44.3314, -203.426, -20.8619, 0.44", "44.7838, -204.124, -20.7849, 1.33", "45.3117, -204.922, -20.7508, 1.84", "45.8312, -205.629, -20.7618, 1.84", "46.7161, -206.722, -20.8236, 0.96", "47.8875, -208.055, -20.9528, 0.22", "48.8916, -209.131, -21.0937, 0.22", "50.3206, -210.578, -21.3333, 0.22", "51.1884, -211.39, -21.492, 0.22", "52.1814, -212.222, -21.6841, 0.22", "53.0622, -212.89, -21.875, 0.44", "54.115, -213.618, -22.1365, 0.88", "55.1267, -214.289, -22.4312, 1.03", "55.7875, -214.723, -22.6396, 1.03", "56.5548, -215.266, -22.8937, 0.88", "57.3219, -215.779, -23.1566, 0.29", "57.8789, -216.124, -23.3299, 0.29", "58.743, -216.609, -23.5451, 0.29", "59.8427, -217.17, -23.7613, 0.37", "60.6809, -217.558, -23.8775, 0.37", "61.4233, -217.865, -23.9464, 0.29", "62.8602, -218.38, -24.023, 0.29", "63.9884, -218.753, -24.0781, 0.81", "64.6206, -218.961, -24.1166, 0.81", "65.8335, -219.425, -24.191, 0.59", "66.7143, -219.86, -24.2281, 0.29", "67.4662, -220.305, -24.2432, 0.29", "68.2517, -220.831, -24.2401, 0.66", "68.8298, -221.244, -24.2123, 0.66", "70.5486, -222.51, -24.0484, 0.29", "71.637, -223.309, -23.8746, 0.29", "72.7627, -224.137, -23.6013, 0.29", "73.6132, -224.776, -23.327, 0.29", "74.4547, -225.401, -22.9897, 0.88", "74.8342, -225.68, -22.8304, 0.88", "75.8455, -226.427, -22.3622, 0.66", "77.2324, -227.439, -21.6531, 0.29", "77.9449, -227.971, -21.2518, 0.29", "78.7849, -228.621, -20.771, 0.66", "79.488, -229.19, -20.4043, 0.44", "89.6444, -237.775, -19.7164, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-20.5653, -146.264, -2.8379, 2.14", "-21.1462, -147.802, -3.20259, 2.14", "-21.6254, -149.204, -3.49261, 1.33", "-22.0591, -150.585, -3.73859, 1.03", "-22.3438, -151.634, -3.88949, 1.03", "-22.5226, -152.349, -3.98139, 1.25", "-22.6908, -153.048, -4.06423, 1.25", "-22.9423, -154.37, -4.17693, 0.96", "-23.1276, -155.44, -4.23223, 0.96", "-23.4701, -157.316, -4.31345, 0.88", "-23.6815, -158.42, -4.33746, 0.88", "-23.8586, -159.467, -4.33698, 0.96", "-24.0284, -160.662, -4.30987, 0.96", "-24.1565, -161.682, -4.25864, 0.74", "-24.2675, -162.665, -4.18716, 0.52", "-24.3534, -163.481, -4.1076, 0.52", "-24.4537, -164.483, -3.99023, 0.37", "-24.5305, -165.281, -3.89295, 0.74", "-24.6318, -166.148, -3.78858, 0.74", "-24.7591, -167.123, -3.66068, 1.03", "-24.8518, -167.743, -3.57744, 1.18", "-24.9918, -168.6, -3.47188, 1.33", "-25.1139, -169.246, -3.39293, 1.33", "-25.2403, -169.934, -3.27152, 1.18", "-25.4411, -170.933, -2.98552, 0.96", "-25.6094, -171.696, -2.68103, 0.81", "-25.7804, -172.464, -2.31041, 0.81", "-25.9464, -173.306, -1.85253, 0.81", "-26.0803, -174.044, -1.43805, 0.59", "-26.2771, -175.263, -0.776879, 0.66", "-26.3763, -175.783, -0.526559, 0.66", "-26.6019, -176.717, -0.18408, 1.18", "-26.9303, -177.68, -0.0128189, 1.47", "-27.3075, -178.513, -0.0231091, 1.55", "-27.6657, -179.117, -0.130485, 1.55", "-28.2643, -179.93, -0.37846, 1.4", "-29.1142, -180.868, -0.724054, 1.18", "-30.1435, -181.856, -1.12503, 0.66", "-31.0109, -182.628, -1.4393, 0.74", "-32.1512, -183.595, -1.81585, 1.18", "-33.1082, -184.371, -2.08468, 1.25", "-34.1291, -185.167, -2.30851, 1.25", "-35.0123, -185.824, -2.43517, 1.25", "-35.9224, -186.432, -2.51642, 1.33", "-36.4547, -186.737, -2.53447, 1.33", "-37.3303, -187.148, -2.49395, 1.03", "-38.0983, -187.435, -2.40198, 0.74", "-38.7171, -187.628, -2.30243, 0.59", "-39.5368, -187.883, -2.14719, 0.59", "-40.3588, -188.179, -1.97584, 0.88", "-41.1849, -188.586, -1.769, 1.18", "-41.9659, -189.089, -1.51988, 1.18", "-42.6608, -189.629, -1.25668, 1.18", "-43.3151, -190.233, -0.99358, 1.18", "-43.8186, -190.762, -0.791155, 1.18", "-44.5163, -191.577, -0.515174, 0.81", "-44.934, -192.117, -0.357283, 0.59", "-45.3178, -192.684, -0.221368, 0.52", "-46.0501, -193.894, 0.010729, 0.96", "-46.4707, -194.708, 0.125768, 1.18", "-46.8189, -195.468, 0.198694, 1.18", "-47.2598, -196.505, 0.249985, 0.88", "-47.683, -197.552, 0.270009, 0.59", "-48.0307, -198.494, 0.28038, 0.59", "-48.4118, -199.593, 0.292836, 0.59", "-48.7671, -200.618, 0.306054, 0.74", "-49.1811, -201.764, 0.321792, 1.33", "-49.5533, -202.76, 0.335687, 1.69", "-50.0301, -203.989, 0.352011, 1.77", "-50.3033, -204.712, 0.360464, 1.77", "-50.637, -205.624, 0.347843, 1.77", "-50.9107, -206.502, 0.313987, 1.47", "-51.1643, -207.479, 0.251098, 1.03", "-51.3908, -208.441, 0.166033, 1.03", "-51.6481, -209.565, 0.0386305, 1.03", "-51.8994, -210.731, -0.0945193, 1.11", "-52.121, -211.83, -0.208769, 1.33", "-52.2867, -212.831, -0.290134, 1.03", "-52.4469, -214.19, -0.363708, 0.81", "-52.5235, -215.142, -0.389175, 1.03", "-52.5798, -216.339, -0.387999, 0.81", "-52.595, -216.993, -0.369611, 0.81", "-52.5998, -218.76, -0.304633, 0.74", "-52.5703, -220.538, -0.225579, 0.74", "-52.515, -221.967, -0.15555, 0.74", "-52.4383, -224.055, -0.0529062, 0.74", "-52.4193, -225.495, 0.00404003, 0.74", "-52.4459, -226.429, 0.035226, 1.18", "-52.5502, -227.386, 0.066975, 1.4", "-52.7754, -228.375, 0.103943, 1.4", "-53.1267, -229.307, 0.145187, 1.47", "-53.7204, -230.33, 0.189586, 1.55", "-54.1925, -230.938, 0.208513, 1.55", "-55.0891, -231.879, 0.235091, 1.11", "-56.2805, -232.93, 0.268588, 0.88", "-57.1577, -233.608, 0.316699, 0.88", "-58.1706, -234.299, 0.394605, 1.03", "-58.8729, -234.747, 0.453199, 1.03", "-59.4312, -235.112, 0.507078, 1.03", "-60.2558, -235.728, 0.627693, 0.81", "-61.212, -236.606, 0.808103, 0.59", "-62.2635, -237.821, 1.04419, 0.59", "-62.9289, -238.771, 1.21961, 0.88", "-63.4307, -239.654, 1.37867, 0.88", "-64.0752, -241.046, 1.60655, 0.74", "-64.4327, -242.008, 1.74737, 0.96", "-64.7183, -242.958, 1.84858, 1.11", "-64.8859, -243.642, 1.91051, 1.11", "-65.0467, -244.362, 1.95183, 0.88", "-65.2738, -245.353, 1.94817, 0.66", "-65.4465, -246.05, 1.9199, 0.66", "-65.7347, -247.222, 1.87565, 0.96", "-65.9463, -248.117, 1.83925, 0.96", "-66.2046, -249.264, 1.78843, 0.66", "-66.44, -250.31, 1.74021, 0.74", "-66.8091, -251.989, 1.68386, 0.96", "-67.0183, -252.958, 1.6815, 0.96", "-67.2311, -253.969, 1.68574, 0.96", "-67.4837, -255.127, 1.66992, 0.66", "-67.858, -256.837, 1.61264, 0.66", "-68.1685, -258.473, 1.51304, 0.66", "-68.3278, -259.451, 1.42446, 0.81", "-68.5651, -261.164, 1.23478, 0.74", "-68.7179, -262.523, 1.05668, 0.74", "-68.8321, -263.958, 0.847206, 0.96", "-68.8953, -265.163, 0.658606, 0.96", "-68.9359, -265.963, 0.541214, 1.62", "-68.9842, -266.402, 0.49373, 1.62", "-69.09, -266.976, 0.478322, 1.62", "-69.2886, -267.816, 0.499481, 1.4", "-69.543, -268.692, 0.54847, 0.88", "-69.8896, -269.811, 0.635532, 0.59", "-70.3541, -271.333, 0.774071, 0.81", "-70.7302, -272.558, 0.896532, 0.96", "-71.0197, -273.548, 0.989853, 0.96", "-71.3426, -274.743, 1.0836, 1.11", "-71.553, -275.526, 1.13409, 1.11", "-71.7276, -276.13, 1.16238, 1.33", "-71.9094, -276.719, 1.18287, 1.33", "-72.2751, -277.674, 1.22639, 1.03", "-72.7207, -278.613, 1.28214, 0.66", "-73.094, -279.312, 1.33119, 0.37", "-73.3766, -279.822, 1.36902, 0.37", "-73.7222, -280.491, 1.42277, 0.37", "-74.0342, -281.127, 1.47786, 1.03", "-74.3723, -281.835, 1.53976, 1.25", "-74.5938, -282.361, 1.58884, 1.25", "-74.9485, -283.348, 1.67791, 0.96", "-75.3421, -284.591, 1.78156, 0.52", "-75.6783, -285.71, 1.86384, 0.52", "-76.1148, -287.271, 1.96276, 0.52", "-76.4263, -288.543, 2.03691, 0.81", "-76.6455, -289.472, 2.09437, 1.03", "-76.8515, -290.311, 2.14816, 1.03", "-77.0174, -290.957, 2.18896, 0.81", "-77.2348, -291.736, 2.23334, 0.81", "-77.581, -292.829, 2.28252, 0.59", "-78.0225, -293.972, 2.31625, 0.44", "-78.7132, -295.406, 2.35693, 0.88", "-79.0698, -296.019, 2.37443, 0.88", "-79.6076, -296.809, 2.39632, 0.59", "-80.1799, -297.478, 2.41716, 0.59", "-81.0942, -298.311, 2.43144, 0.59", "-82.0837, -299.036, 2.42668, 0.81", "-82.6502, -299.379, 2.42016, 0.81", "-83.1081, -299.624, 2.41272, 0.81", "-84.1433, -300.095, 2.38619, 0.59", "-85.2812, -300.509, 2.34888, 0.88", "-86.4126, -300.836, 2.30108, 1.03", "-87.4928, -301.096, 2.24564, 1.03", "-88.3863, -301.264, 2.202, 0.59", "-89.1924, -301.394, 2.17233, 0.59", "-89.8776, -301.505, 2.15644, 0.59", "-90.4671, -301.598, 2.16114, 0.59", "-91.095, -301.723, 2.1749, 0.59", "-91.9169, -301.925, 2.20704, 0.44", "-93.1479, -302.307, 2.274, 0.81", "-94.1754, -302.697, 2.34943, 1.11", "-95.2962, -303.202, 2.45712, 0.81", "-96.4178, -303.796, 2.5835, 0.66", "-96.9313, -304.107, 2.64643, 0.66", "-97.5488, -304.535, 2.72697, 0.52", "-98.2544, -305.074, 2.82939, 0.52", "-98.9681, -305.688, 2.94126, 0.52", "-99.6842, -306.351, 3.06025, 0.52", "-100.116, -306.791, 3.13701, 1.11", "-101.073, -307.869, 3.30314, 1.4", "-101.59, -308.518, 3.39077, 1.84", "-102.156, -309.305, 3.47299, 2.43" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-10.9648, -83.7536, -6.37884, 0.66", "-11.0094, -85.599, -6.31578, 0.66", "-11.057, -86.7366, -6.28095, 0.37", "-11.0835, -87.4968, -6.28631, 0.81", "-11.1, -88.4789, -6.31518, 1.03", "-11.1154, -89.3326, -6.34719, 1.11", "-11.139, -90.2439, -6.39651, 0.88", "-11.1717, -91.2933, -6.49296, 0.59", "-11.1821, -92.5144, -6.64814, 0.29", "-11.1639, -93.3992, -6.78838, 0.29", "-11.1358, -93.8042, -6.8639, 0.29", "-11.0057, -94.7155, -7.07546, 0.74", "-10.8108, -95.562, -7.30799, 1.11", "-10.65, -96.0953, -7.4643, 1.11", "-10.3866, -96.8798, -7.69877, 1.11", "-10.0533, -97.7892, -7.9346, 0.81", "-9.49631, -99.2904, -8.25033, 0.44", "-8.98714, -100.717, -8.47557, 0.59", "-8.71358, -101.577, -8.57334, 0.88", "-8.47329, -102.484, -8.63188, 0.88", "-8.20006, -103.784, -8.66033, 0.81", "-8.00331, -105.063, -8.62285, 0.44", "-7.90215, -106.072, -8.53836, 1.03", "-7.84852, -106.918, -8.4495, 0.74", "-7.80348, -107.979, -8.34451, 0.52", "-7.78012, -108.8, -8.27717, 0.88", "-7.77785, -109.555, -8.26414, 1.18", "-7.77823, -110.208, -8.26632, 1.18", "-7.78837, -110.957, -8.27712, 0.88", "-7.81276, -112.26, -8.31146, 0.29", "-7.8401, -113.245, -8.35071, 0.29", "-7.89257, -114.656, -8.43886, 1.03", "-7.9228, -115.593, -8.51462, 1.47", "-7.94315, -116.184, -8.56343, 1.47", "-7.96078, -116.833, -8.6183, 1.47", "-7.9629, -117.803, -8.7001, 1.25", "-7.94535, -118.989, -8.78711, 0.44", "-7.90622, -119.967, -8.84332, 0.44", "-7.85791, -120.923, -8.9051, 0.44", "-7.82603, -121.414, -8.9395, 0.59", "-7.74786, -122.567, -9.02209, 0.59", "-7.67181, -123.445, -9.09103, 0.37", "-7.60649, -124.178, -9.14855, 0.81", "-7.54662, -124.85, -9.19159, 1.03", "-7.50502, -125.341, -9.21419, 1.03", "-7.46711, -125.951, -9.22703, 0.59", "-7.39927, -126.944, -9.23084, 0.22", "-7.33374, -127.566, -9.23092, 0.22", "-7.23523, -128.3, -9.23059, 0.22", "-7.1137, -129.089, -9.23005, 0.66", "-6.95255, -130.033, -9.23443, 0.88", "-6.68513, -131.41, -9.24923, 0.88", "-6.36149, -133.009, -9.27193, 0.96", "-6.11596, -134.214, -9.31004, 1.18", "-5.93627, -135.19, -9.36032, 0.66", "-5.79717, -135.992, -9.40539, 0.52", "-5.56658, -137.523, -9.50357, 0.52", "-5.41623, -138.705, -9.58709, 0.81", "-5.27973, -139.898, -9.68145, 0.52", "-5.17621, -140.791, -9.7493, 0.52", "-5.04843, -141.847, -9.85221, 1.47", "-4.90765, -142.927, -9.98533, 1.77", "-4.78912, -143.76, -10.1245, 1.77", "-4.70626, -144.239, -10.2191, 1.77", "-4.54235, -145.03, -10.3849, 1.25", "-4.33246, -145.947, -10.5813, 0.81", "-4.08399, -147.06, -10.8241, 0.44", "-3.76395, -148.455, -11.1227, 0.37", "-3.56672, -149.313, -11.2997, 0.52", "-3.31201, -150.35, -11.5069, 0.52", "-3.10773, -151.127, -11.6574, 0.66", "-2.81718, -152.147, -11.8583, 0.66", "-2.4304, -153.452, -12.1679, 0.88", "-2.08461, -154.547, -12.47, 1.25", "-1.88088, -155.163, -12.6741, 1.25", "-1.69157, -155.692, -12.8744, 1.25", "-1.29848, -156.73, -13.3111, 1.11", "-0.93842, -157.645, -13.7275, 0.74", "-0.614172, -158.449, -14.1181, 0.29", "-0.425089, -158.924, -14.3603, 0.29", "0.0198406, -160.085, -14.9344, 0.44", "0.264312, -160.752, -15.2347, 0.88", "0.462853, -161.358, -15.4645, 1.33", "0.675745, -162.077, -15.6841, 1.47", "0.88189, -162.86, -15.8731, 1.47", "1.05399, -163.556, -16.0071, 1.25", "1.27863, -164.508, -16.1535, 0.44", "1.60784, -165.905, -16.2772, 0.29", "1.85635, -167.014, -16.3042, 0.29", "2.0907, -168.146, -16.2711, 0.29", "2.25807, -169.05, -16.2032, 0.74", "2.35618, -169.69, -16.1298, 0.88", "2.49248, -170.991, -15.9288, 0.96", "2.53713, -172.106, -15.7324, 1.03", "2.50911, -172.947, -15.5917, 1.03", "2.43312, -173.785, -15.4484, 0.59", "2.33035, -174.682, -15.3025, 0.22", "2.26316, -175.247, -15.2286, 0.22", "2.11319, -176.547, -15.1335, 0.96", "2.02482, -177.318, -15.1006, 1.11", "1.94352, -178.165, -15.0447, 1.11", "1.89505, -178.974, -14.9642, 0.59", "1.87554, -179.797, -14.8644, 0.29", "1.88319, -180.498, -14.7608, 0.29", "1.89493, -181.083, -14.6568, 0.29", "1.93045, -182.351, -14.4057, 0.44", "1.96559, -183.425, -14.1637, 0.66", "2.00612, -184.56, -13.8966, 0.66", "2.04436, -185.379, -13.712, 0.81", "2.09113, -186.291, -13.5292, 0.81", "2.13876, -187.161, -13.3721, 0.52", "2.16984, -188.268, -13.2031, 0.66", "2.17853, -189.088, -13.0833, 0.66", "2.14133, -190.47, -12.9494, 0.37", "2.07102, -191.695, -12.8931, 0.37", "1.98298, -192.674, -12.8929, 1.03", "1.86444, -193.658, -12.9645, 1.47", "1.71202, -194.625, -13.0987, 1.62", "1.36784, -196.351, -13.4437, 0.88", "1.0595, -197.475, -13.7584, 0.59", "0.750232, -198.333, -14.0652, 0.37", "0.122589, -199.715, -14.6278, 0.29", "-0.0963167, -200.123, -14.7893, 0.29", "-0.455252, -200.708, -14.9977, 0.29", "-1.13903, -201.795, -15.3063, 0.29", "-1.81867, -202.822, -15.5947, 0.59", "-2.52438, -203.909, -15.88, 0.59", "-2.96709, -204.583, -16.0493, 0.44", "-3.51972, -205.391, -16.2659, 0.44", "-3.89534, -205.885, -16.4421, 0.29", "-4.45453, -206.588, -16.7573, 1.4", "-5.29979, -207.395, -17.2817, 1.62", "-6.1003, -207.95, -17.7628, 1.4", "-6.88983, -208.353, -18.209, 1.11", "-8.21451, -208.894, -18.9028, 0.81", "-8.9502, -209.173, -19.2821, 0.59", "-9.76105, -209.508, -19.7276, 0.74", "-10.5387, -209.912, -20.184, 0.81", "-11.1412, -210.42, -20.5728, 0.52", "-11.5827, -210.932, -20.8914, 0.52", "-11.9823, -211.502, -21.1743, 0.74", "-12.5318, -212.314, -21.5943, 0.74", "-12.8167, -212.817, -21.825, 0.74", "-13.1066, -213.385, -22.0986, 0.52", "-13.5304, -214.28, -22.4824, 0.52", "-13.7598, -214.771, -22.6756, 0.52", "-14.1908, -215.736, -22.9914, 1.69", "-14.4468, -216.374, -23.1502, 2.14", "-14.9012, -217.721, -23.4041, 1.55", "-15.3086, -219.133, -23.5996, 0.29", "-15.5185, -219.958, -23.682, 0.29", "-15.7868, -221.093, -23.7623, 0.44", "-16.0322, -222.175, -23.7988, 0.59", "-16.2462, -223.135, -23.8066, 0.59", "-16.4584, -224.113, -23.7752, 0.29", "-16.5738, -224.639, -23.7592, 0.29", "-16.7323, -225.372, -23.7373, 0.96", "-16.8601, -226.016, -23.7198, 1.03", "-17.013, -226.911, -23.704, 0.52", "-17.1721, -228.076, -23.696, 0.29", "-17.2416, -228.738, -23.695, 0.81", "-17.306, -229.507, -23.6936, 0.96", "-17.3499, -230.1, -23.6943, 0.96", "-17.4251, -231.139, -23.6983, 0.29", "-17.5313, -232.325, -23.6977, 0.29", "-17.6648, -233.567, -23.7305, 1.47", "-17.7628, -234.436, -23.7712, 1.92", "-17.8067, -234.859, -23.7966, 1.92", "-17.9113, -235.911, -23.8529, 1.33", "-18.0147, -237.08, -23.923, 0.29", "-18.1129, -238.273, -24.0052, 0.29", "-18.1826, -239.225, -24.0852, 0.29", "-18.3266, -241.294, -24.2784, 0.29", "-18.41, -242.701, -24.4022, 1.4", "-18.4487, -243.558, -24.4713, 2.14", "-18.4607, -243.932, -24.4985, 2.28", "-18.4709, -244.542, -24.5309, 2.28", "-18.4824, -245.173, -24.5439, 1.92", "-18.5031, -246.087, -24.4855, 0.88", "-18.5316, -247.482, -24.3087, 0.29", "-18.5442, -248.333, -24.1543, 0.29", "-18.5517, -249.287, -23.9497, 0.29", "-18.5581, -250.778, -23.5951, 0.29", "-18.5574, -252.306, -23.2308, 0.96", "-18.5502, -253.328, -22.999, 1.62", "-18.5436, -253.907, -22.8724, 1.62", "-18.5385, -254.453, -22.766, 1.62", "-18.5374, -255.629, -22.5874, 1.11", "-18.5517, -257.072, -22.5091, 0.29", "-18.5856, -258.149, -22.5236, 0.29", "-18.6264, -259.003, -22.5602, 0.59", "-18.6565, -259.426, -22.5872, 0.66", "-18.7038, -259.94, -22.6255, 0.66", "-18.8694, -261.35, -22.7369, 0.29", "-19.1194, -262.986, -22.8962, 0.29", "-19.3525, -264.254, -23.0284, 0.96", "-19.5768, -265.254, -23.1251, 1.4", "-19.763, -266.003, -23.185, 1.4", "-19.9644, -266.777, -23.2323, 1.4", "-20.2388, -267.801, -23.2669, 0.88", "-20.5794, -269.053, -23.3, 0.29", "-20.8841, -270.197, -23.3132, 0.29", "-21.2054, -271.353, -23.3159, 0.44", "-21.425, -272.085, -23.3049, 0.66", "-21.6117, -272.673, -23.2804, 0.66", "-21.9463, -273.72, -23.1916, 0.29", "-22.1438, -274.349, -23.1333, 0.29", "-22.4025, -275.152, -23.094, 0.29", "-22.7874, -276.255, -23.1134, 0.29", "-23.0243, -276.885, -23.1674, 0.52", "-23.3499, -277.759, -23.2906, 0.66", "-23.6078, -278.629, -23.4032, 0.66", "-23.8812, -279.979, -23.5706, 1.4", "-23.9881, -281.16, -23.7306, 2.28", "-23.9857, -282.334, -23.9039, 2.5", "-23.9195, -282.992, -23.9892, 2.5", "-23.404, -285.287, -24.2299, 0.22", "-23.0845, -286.211, -24.2885, 0.22", "-22.5205, -287.376, -24.3097, 0.37", "-22.0943, -288.063, -24.2924, 0.44", "-21.3037, -289.073, -24.3609, 0.29", "-20.4451, -290.002, -24.5838, 0.88", "-19.9606, -290.438, -24.8496, 1.4", "-19.6008, -290.75, -25.1285, 1.4", "-19.1377, -291.197, -25.6055, 1.11", "-17.7657, -292.745, -27.4168, 0.29", "-17.3532, -293.306, -28.0884, 0.29", "-16.7561, -294.29, -29.2271, 0.81", "-16.4743, -294.934, -29.8492, 0.81", "-16.0488, -296.306, -30.9421, 0.22", "-15.9243, -296.882, -31.3148, 0.22", "-15.7965, -297.775, -31.7221, 0.44", "-15.7443, -298.28, -31.9077, 0.59", "-15.5833, -300.396, -32.5257, 0.22", "-15.541, -301.135, -32.7273, 0.74", "-15.5133, -301.793, -32.893, 1.03", "-15.4739, -302.496, -33.0564, 1.03", "-15.4311, -303.184, -33.2049, 0.74", "-15.3864, -303.823, -33.3407, 0.37", "-15.2535, -305.445, -33.6948, 0.22", "-15.1386, -307.06, -34.0514, 0.22", "-15.0697, -308.276, -34.3122, 0.88", "-15.0291, -309.175, -34.5019, 1.62", "-15.0137, -309.669, -34.6053, 1.84", "-15.0093, -310.265, -34.7256, 1.84", "-15.0332, -311.494, -34.9566, 0.52", "-15.0994, -312.533, -35.1423, 0.22", "-15.1939, -313.366, -35.2892, 0.22", "-15.3069, -314.084, -35.4114, 0.37", "-15.3626, -314.364, -35.4492, 0.37", "-15.5374, -315.056, -35.5355, 0.22", "-15.7061, -315.619, -35.5989, 0.74", "-15.9137, -316.259, -35.6732, 0.74", "-16.1129, -316.838, -35.733, 0.59", "-16.5708, -318.093, -35.8456, 0.22", "-16.8007, -318.673, -35.8829, 0.22", "-17.1417, -319.448, -35.8831, 0.59", "-17.4098, -320.006, -35.84, 0.59", "-17.6905, -320.581, -35.7347, 0.29", "-17.9962, -321.167, -35.59, 0.22", "-18.481, -321.978, -35.398, 0.37", "-19.1361, -322.952, -35.1721, 0.44", "-19.768, -323.647, -35.0678, 0.59", "-20.6247, -324.358, -35.0541, 0.37", "-21.1799, -324.672, -35.1157, 0.22", "-22.636, -325.168, -35.4328, 2.21", "-23.2097, -325.229, -35.615, 2.5", "-25.5113, -324.943, -36.5152, 0.22", "-26.2334, -324.725, -36.8316, 0.22", "-27.2288, -324.233, -37.351, 0.66", "-27.7125, -323.914, -37.6382, 0.66", "-28.4066, -323.365, -38.0878, 0.37", "-29.383, -322.556, -38.7764, 1.92", "-29.7298, -322.271, -39.0312, 1.92", "-31.5086, -321.065, -40.401, 0.44", "-32.2967, -320.639, -41.015, 0.59", "-32.7667, -320.459, -41.348, 0.37", "-33.4844, -320.315, -41.7716, 0.37", "-34.2221, -320.245, -42.1799, 0.22", "-35.9661, -320.249, -42.9982, 0.29", "-36.5628, -320.342, -43.1852, 0.22", "-37.5331, -320.541, -43.4249, 0.22", "-38.8685, -320.809, -43.7157, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-10.9648, -83.7536, -6.37884, 0.74", "-12.6459, -84.899, -6.41409, 0.74", "-13.3125, -85.3077, -6.42972, 0.74", "-14.2746, -85.8203, -6.48284, 0.74", "-14.9478, -86.1204, -6.53921, 0.52", "-15.647, -86.3363, -6.63972, 0.52", "-16.3164, -86.4781, -6.77168, 0.88", "-16.8748, -86.4422, -6.98344, 0.88", "-17.7623, -86.2358, -7.43128, 0.59", "-18.3139, -86.0585, -7.75228, 0.37", "-19.1592, -85.8164, -8.30106, 0.37", "-19.6678, -85.7336, -8.68091, 1.11", "-20.091, -85.772, -9.03448, 1.47", "-20.4999, -85.8883, -9.37584, 1.47", "-20.7999, -86.0055, -9.60994, 1.47", "-21.4903, -86.2801, -10.122, 0.96", "-22.1101, -86.4749, -10.5517, 0.59", "-22.6858, -86.5835, -10.8987, 0.59", "-23.2906, -86.6441, -11.1869, 0.59", "-23.9316, -86.703, -11.4677, 0.81", "-24.5429, -86.7602, -11.7182, 0.81", "-25.0242, -86.8023, -11.8799, 0.81", "-25.5963, -86.8736, -12.0512, 0.81", "-26.2092, -87.1615, -12.3205, 0.22", "-26.5834, -87.8203, -12.6667, 0.22", "-26.8086, -88.3491, -12.9549, 0.66", "-26.925, -88.6648, -13.1357, 0.88", "-27.0887, -89.1241, -13.4204, 0.88", "-27.3222, -89.6637, -13.8821, 0.44", "-27.6876, -90.1991, -14.5222, 1.4", "-28.0455, -90.4907, -15.0803, 2.14", "-28.2077, -90.5653, -15.3288, 2.58", "-28.5545, -90.629, -15.8333, 2.36", "-29.5002, -90.6561, -17.2007, 1.69", "-30.0028, -90.6216, -17.902, 0.37", "-30.6319, -90.5377, -18.6826, 0.37", "-31.1566, -90.4613, -19.2696, 0.37", "-32.2339, -90.3482, -20.361, 1.92", "-32.6843, -90.3302, -20.7822, 2.14", "-33.1408, -90.3592, -21.1727, 2.5", "-34.4805, -90.6065, -22.3503, 0.44", "-34.8955, -90.729, -22.7238, 0.44", "-35.5244, -90.936, -23.3304, 0.44", "-36.0896, -91.1045, -23.9223, 0.44", "-36.6662, -91.23, -24.5555, 1.4", "-37.2907, -91.3358, -25.2731, 2.06", "-37.8401, -91.4229, -25.9629, 2.06", "-38.5048, -91.4809, -26.846, 0.66", "-39.0154, -91.5048, -27.5946, 0.81", "-39.5506, -91.5302, -28.4638, 0.52", "-39.9623, -91.59, -29.2819, 1.77", "-40.2135, -91.6823, -29.9292, 2.28", "-40.82, -92.1775, -32.1227, 1.33", "-40.9688, -92.4556, -32.984, 1.77", "-41.027, -92.6543, -33.5353, 1.77", "-41.1036, -93.0548, -34.5972, 0.74", "-41.1512, -93.3812, -35.441, 0.52", "-41.2382, -93.8994, -36.6619, 0.52", "-41.3345, -94.5132, -37.891, 0.88", "-41.4957, -95.1025, -39.0145, 1.47", "-41.7105, -95.6862, -40.0668, 0.22", "-41.8394, -95.9887, -40.5716, 0.22", "-42.0189, -96.3999, -41.1743, 0.81", "-42.2003, -96.845, -41.7175, 0.96", "-42.4351, -97.4375, -42.3471, 1.55", "-42.6574, -98.0277, -42.8799, 1.55", "-42.902, -98.6703, -43.4334, 0.37", "-43.0787, -99.1268, -43.8354, 0.74", "-43.3068, -99.6914, -44.3703, 0.81", "-43.5869, -100.434, -45.111, 0.29", "-43.6986, -100.791, -45.4669, 0.96", "-43.8311, -101.314, -45.9795, 1.33", "-43.9601, -102.047, -46.6899, 0.74", "-44.0113, -102.659, -47.2607, 0.59", "-43.9907, -103.625, -48.1082, 0.29", "-43.9, -104.249, -48.5884, 0.29", "-43.7532, -104.825, -48.9995, 0.29", "-43.5921, -105.266, -49.2689, 1.18", "-43.3937, -105.678, -49.496, 1.69", "-43.0422, -106.276, -49.789, 1.33", "-42.4876, -107.116, -50.1865, 0.22", "-42.2274, -107.5, -50.3749, 0.22", "-41.9138, -107.997, -50.622, 0.96", "-41.7196, -108.35, -50.7977, 1.11", "-41.3885, -109.026, -51.1283, 0.52", "-40.9146, -110.118, -51.646, 0.22", "-40.7107, -110.638, -51.8885, 0.22", "-40.5099, -111.207, -52.1566, 0.88", "-40.3766, -111.622, -52.3728, 1.03", "-40.1604, -112.341, -52.782, 0.22", "-40.0595, -112.673, -52.9818, 0.22", "-39.8999, -113.156, -53.2838, 0.66", "-39.7085, -113.694, -53.6161, 0.74", "-39.2412, -114.943, -54.3537, 0.22", "-38.915, -115.851, -54.8299, 0.22", "-38.5712, -117.009, -55.3598, 0.96", "-38.4649, -117.447, -55.5365, 1.25", "-38.3765, -118.036, -55.7319, 1.25", "-38.3142, -118.91, -55.9526, 0.66", "-38.3381, -119.988, -56.1611, 0.15", "-38.4707, -120.912, -56.3261, 0.37", "-38.577, -121.343, -56.414, 0.37", "-39.0737, -122.915, -56.7839, 0.22", "-39.1673, -123.159, -56.8549, 0.74", "-39.3892, -123.678, -57.0361, 0.88", "-40.1454, -125.325, -57.6761, 0.22", "-40.438, -125.943, -57.9208, 0.74", "-40.7311, -126.543, -58.1548, 0.74", "-41.3727, -127.849, -58.674, 0.22", "-41.9078, -128.944, -59.095, 0.22", "-42.5099, -130.204, -59.5124, 0.22", "-43.0559, -131.394, -59.8313, 0.22", "-43.3436, -132.042, -59.9636, 0.88", "-43.5595, -132.554, -60.0378, 1.11", "-43.7529, -133.076, -60.0725, 1.11", "-44.165, -134.35, -60.0891, 0.15", "-44.4443, -135.383, -60.0739, 0.15", "-44.5805, -135.956, -60.0562, 0.81", "-44.6889, -136.457, -60.0372, 0.96", "-45.0412, -138.335, -60.1829, 0.22", "-45.1896, -139.218, -60.2739, 0.22", "-45.3337, -140.195, -60.435, 0.22", "-45.3854, -140.587, -60.5192, 1.18", "-45.4301, -140.961, -60.6242, 1.18", "-45.7404, -143.731, -61.8004, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "13.8679, 115.884, -25.3237, 0.37", "14.4116, 115.098, -24.9717, 0.37", "14.8464, 114.507, -24.7319, 0.52", "15.4596, 113.707, -24.4159, 0.74", "15.9527, 113.073, -24.1818, 1.11", "16.2411, 112.715, -24.0488, 1.11", "16.6609, 112.196, -23.8521, 0.81", "17.6369, 111.073, -23.3522, 0.22", "18.105, 110.525, -23.1099, 0.22", "18.3933, 110.156, -22.9703, 0.66", "18.683, 109.747, -22.8289, 0.66", "18.9601, 109.321, -22.6918, 0.66", "19.474, 108.469, -22.4084, 0.44", "19.9401, 107.626, -22.1205, 0.22", "20.416, 106.69, -21.8161, 0.22", "20.6296, 106.235, -21.6748, 0.44", "20.7604, 105.921, -21.5969, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "13.8679, 115.884, -25.3237, 0.22", "14.9597, 115.86, -25.682, 0.22", "15.2074, 115.871, -25.7739, 0.44", "16.3452, 115.987, -26.2049, 0.22", "16.8304, 116.053, -26.4047, 0.59", "17.1966, 116.11, -26.5756, 0.59", "18.7674, 116.355, -27.3088, 0.22", "20.5679, 116.668, -28.2, 0.22", "21.2085, 116.799, -28.5333, 0.66", "21.7045, 116.926, -28.8142, 0.81", "22.4477, 117.135, -29.2612, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "17.0421, 232.266, -3.16372, 0.59", "18.1764, 233.309, -3.95058, 0.59", "18.5492, 233.661, -4.19176, 0.44", "19.314, 234.435, -4.71479, 0.22", "19.969, 235.152, -5.16202, 0.81", "20.3091, 235.547, -5.41089, 0.96", "20.4638, 235.733, -5.53111, 0.96", "20.9309, 236.387, -5.91969, 0.22", "21.5431, 237.44, -6.56509, 0.22", "21.9987, 238.425, -7.17341, 1.11", "22.2069, 238.974, -7.50143, 1.47", "22.282, 239.244, -7.66686, 1.47", "22.4933, 240.427, -8.36656, 0.22", "22.579, 241.509, -8.98981, 0.22", "22.581, 242.147, -9.3422, 0.66", "22.566, 242.463, -9.51983, 0.66", "22.4122, 243.973, -10.326, 0.22", "22.2109, 245.35, -11.0289, 0.22", "22.0564, 246.134, -11.4214, 0.22", "21.8496, 247.044, -11.8656, 1.47", "21.7116, 247.563, -12.1016, 1.47", "21.1815, 249.317, -12.8071, 0.22", "20.9841, 249.886, -13.0098, 0.81", "20.7928, 250.364, -13.1572, 0.81", "20.2713, 251.532, -13.4516, 0.22", "19.8179, 252.457, -13.6493, 0.22", "19.3128, 253.418, -13.8263, 1.47", "19.0856, 253.815, -13.906, 1.84", "18.2278, 255.256, -14.1943, 0.22", "17.544, 256.359, -14.4031, 0.22", "17.2873, 256.741, -14.4745, 0.22", "16.5805, 257.738, -14.6946, 1.55", "16.1249, 258.338, -14.845, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "17.0421, 232.266, -3.16372, 0.22", "17.9576, 235.187, -3.71806, 0.22", "18.4884, 236.773, -4.00448, 0.22", "18.9135, 238.003, -4.21753, 0.96", "19.1012, 238.538, -4.30487, 1.18", "19.2976, 239.091, -4.39003, 1.18", "19.6159, 239.994, -4.52008, 0.22", "19.859, 240.638, -4.59377, 0.44", "19.9734, 240.967, -4.63294, 0.44", "20.2749, 241.915, -4.74301, 0.22", "20.5291, 242.748, -4.8364, 0.44", "20.806, 243.671, -4.93786, 0.44", "21.6064, 246.496, -5.22837, 0.22", "22.2608, 248.877, -5.49009, 0.22", "22.505, 249.771, -5.60012, 0.66", "22.6378, 250.261, -5.6674, 0.74", "22.85, 251.042, -5.79986, 0.22", "23.3796, 252.95, -6.17326, 0.22", "23.6868, 254.072, -6.41041, 1.03", "23.8889, 254.816, -6.57751, 1.25", "24.0398, 255.378, -6.70813, 1.25", "24.5437, 257.27, -7.16049, 0.22", "25.3787, 260.38, -7.92116, 0.22", "25.6661, 261.428, -8.1784, 0.74", "25.8297, 262.033, -8.30966, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.38512, 87.0751, -1.56857, 0.37", "11.4394, 94.2906, -1.20569, 0.37", "16.194, 101.119, -1.11494, 0.37", "20.8264, 107.721, 1.03689, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "7.38512, 87.0751, -1.56857, 0.22", "8.7127, 97.0879, -6.78604, 0.37", "9.31914, 106.414, -13.3547, 0.37", "9.78219, 115.287, -20.5915, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "73.6158, 0.32481, 5.65906, 0.37", "83.8035, -1.52221, 5.44228, 0.37", "94.1826, -1.79072, 5.2993, 0.37", "104.506, -1.09176, 6.22149, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "73.6158, 0.32481, 5.65906, 0.22", "81.8815, -1.31201, 5.61254, 0.37", "90.3191, -1.49839, 5.17839, 0.37", "98.7388, -2.16766, 5.21719, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "45.6099, 12.0237, 1.16778, 0.52", "46.9459, 12.2412, 1.49436, 0.52", "47.4681, 12.3021, 1.61517, 0.52", "48.0168, 12.3339, 1.76613, 0.52", "49.0745, 12.3673, 2.07804, 0.52", "49.7098, 12.3675, 2.27002, 0.88", "50.6828, 12.3555, 2.54889, 0.88", "51.4029, 12.3483, 2.74527, 0.88", "52.1776, 12.2613, 2.92213, 0.81", "52.6789, 12.1274, 2.96804, 0.81", "53.4385, 11.7928, 2.93295, 0.59", "54.0463, 11.4373, 2.81222, 0.59", "54.6946, 11.0037, 2.58253, 0.59", "55.3298, 10.5653, 2.27542, 0.74", "56.3161, 9.83076, 1.69073, 0.66", "56.7205, 9.50078, 1.42304, 0.66", "57.3332, 8.95356, 0.982303, 0.52", "57.748, 8.57686, 0.673439, 0.52", "58.2803, 8.1179, 0.277037, 0.81", "58.9406, 7.55231, -0.225013, 0.81", "59.3796, 7.15191, -0.560943, 0.81", "59.9109, 6.61768, -0.999535, 0.81", "60.55, 5.89506, -1.56663, 0.88", "61.0628, 5.24284, -2.05577, 1.11", "61.378, 4.81117, -2.37697, 1.11", "61.9604, 3.93044, -3.01135, 0.88", "62.3642, 3.20452, -3.48082, 0.96", "62.6322, 2.61355, -3.80611, 0.96", "62.8253, 2.10112, -4.04543, 0.96", "62.9889, 1.62234, -4.24519, 0.66", "63.2556, 0.842304, -4.51884, 0.66", "63.6509, -0.204302, -4.82262, 0.81", "64.0433, -1.03659, -5.03492, 1.11", "64.5744, -1.97548, -5.24477, 0.96", "65.0228, -2.62887, -5.40877, 0.81", "65.6901, -3.43312, -5.6386, 0.81", "66.5061, -4.23236, -5.91302, 0.59", "67.2024, -4.80571, -6.15667, 0.37", "67.8442, -5.2748, -6.39713, 0.37", "68.7929, -5.92912, -6.78744, 0.59", "69.3092, -6.27854, -7.03993, 0.88", "69.5928, -6.47416, -7.2075, 1.11", "69.9565, -6.75086, -7.438, 1.11", "70.4408, -7.15214, -7.73892, 0.74", "70.8293, -7.45568, -7.971, 0.74", "71.2128, -7.7646, -8.21384, 0.74", "71.7916, -8.24477, -8.63214, 0.74", "72.373, -8.7377, -9.10987, 0.74", "72.8988, -9.1775, -9.55895, 0.66", "73.3943, -9.57928, -9.99544, 0.66", "74.0477, -10.0948, -10.5913, 0.96", "74.8117, -10.7058, -11.3399, 1.4", "75.1958, -11.036, -11.7666, 1.62", "75.5854, -11.3958, -12.2535, 1.77" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "45.6099, 12.0237, 1.16778, 0.88", "46.5213, 12.9358, 1.6245, 0.88", "47.3585, 13.6609, 2.02878, 0.88", "48.3226, 14.3558, 2.4467, 0.88", "49.3863, 15.0039, 2.85018, 0.88", "50.664, 15.6752, 3.29936, 0.74", "51.4785, 16.0718, 3.58368, 0.74", "52.6475, 16.5442, 3.98609, 0.88", "53.7084, 16.9043, 4.32641, 0.88", "54.5904, 17.1725, 4.58183, 0.88", "55.4474, 17.4268, 4.81583, 0.66", "56.0447, 17.6342, 4.9774, 0.66", "56.8294, 18.0215, 5.18789, 0.88", "57.2882, 18.3259, 5.31727, 0.88", "57.7198, 18.6673, 5.4435, 0.88", "58.1557, 19.0302, 5.56867, 0.88", "58.9694, 19.6917, 5.79658, 0.59", "59.5542, 20.1272, 5.98719, 0.59", "60.0038, 20.4596, 6.17182, 0.81", "60.5917, 20.9206, 6.46617, 0.81", "61.0376, 21.3089, 6.732, 0.81", "61.5379, 21.7756, 7.06131, 0.66", "62.2541, 22.4616, 7.55681, 0.59", "62.9969, 23.3153, 8.14269, 0.59", "63.3861, 23.8507, 8.47546, 0.59", "63.8174, 24.5378, 8.85163, 0.44", "64.0842, 24.9866, 9.06215, 0.44", "64.3701, 25.4725, 9.25539, 0.44", "65.0829, 26.6656, 9.67131, 0.44", "65.6533, 27.5692, 9.97355, 0.66", "66.1317, 28.3098, 10.216, 0.66", "66.7237, 29.2194, 10.5054, 0.74", "67.1855, 29.9304, 10.727, 0.96", "67.5428, 30.4626, 10.8893, 0.96", "68.0804, 31.1785, 11.0987, 0.66", "68.6115, 31.8506, 11.292, 0.66", "69.4573, 32.8994, 11.5904, 0.59", "70.2393, 33.8849, 11.8972, 0.59", "70.7442, 34.5286, 12.1135, 0.81", "71.1262, 35.0268, 12.2912, 0.81", "71.7843, 35.8451, 12.5919, 0.52", "72.3011, 36.4278, 12.8078, 0.52", "72.9952, 37.1525, 13.087, 0.52", "73.5819, 37.7479, 13.3187, 0.52", "74.1455, 38.3087, 13.5328, 0.37", "75.1528, 39.29, 13.8974, 0.37", "75.8164, 39.9287, 14.1233, 0.59", "76.2422, 40.3166, 14.248, 0.59", "77.1472, 41.1238, 14.4733, 0.74", "77.619, 41.5493, 14.5918, 0.74", "78.0188, 41.923, 14.703, 0.74", "78.5824, 42.5086, 14.9013, 0.74", "78.9548, 42.9342, 15.0122, 0.44", "79.4827, 43.5544, 15.089, 0.44", "79.9372, 44.069, 15.094, 0.81", "80.7023, 44.9015, 15.0319, 0.81", "81.2653, 45.4879, 14.9304, 0.66", "82.2495, 46.483, 14.7049, 0.52", "82.994, 47.2648, 14.4882, 0.44", "83.4837, 47.7808, 14.3017, 0.44", "83.9089, 48.2379, 14.1071, 0.44", "84.2394, 48.5959, 13.9239, 0.44", "84.7967, 49.163, 13.6211, 0.74", "85.2947, 49.6087, 13.4785, 0.59", "85.6298, 49.9338, 13.4234, 0.59", "92.0486, 56.4169, 17.0709, 0.59", "98.705, 62.7852, 20.5285, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-102.156, -309.305, 3.47299, 0.52", "-102.494, -310.06, 3.46583, 0.52", "-102.635, -310.366, 3.46761, 0.29", "-102.829, -310.765, 3.47056, 0.44", "-103.014, -311.135, 3.4718, 0.44", "-103.161, -311.422, 3.47234, 0.29", "-103.387, -311.839, 3.46959, 0.29", "-103.62, -312.234, 3.46618, 0.81", "-103.8, -312.536, 3.45164, 1.18", "-103.896, -312.701, 3.43894, 1.4", "-104.049, -312.975, 3.41344, 1.4", "-104.184, -313.238, 3.3852, 1.11", "-104.454, -313.809, 3.32156, 0.52", "-104.637, -314.258, 3.27133, 0.44", "-104.765, -314.62, 3.23151, 0.74", "-104.91, -315.056, 3.18698, 0.81", "-105.013, -315.386, 3.15353, 0.81", "-105.114, -315.735, 3.11609, 0.74", "-105.232, -316.199, 3.08437, 0.22", "-105.283, -316.414, 3.07223, 0.22", "-105.364, -316.793, 3.04698, 0.22", "-105.419, -317.122, 3.03101, 0.66", "-105.463, -317.467, 3.02559, 0.81", "-105.51, -318.024, 3.03259, 0.66", "-105.529, -318.534, 3.0554, 0.22", "-105.519, -318.991, 3.0866, 0.22", "-105.492, -319.325, 3.11633, 0.22", "-105.454, -319.65, 3.16071, 0.96", "-105.437, -319.818, 3.18818, 1.18", "-105.413, -320.067, 3.22924, 1.18", "-105.391, -320.273, 3.27565, 1.18", "-105.366, -320.665, 3.36186, 0.74", "-105.36, -321.255, 3.48169, 0.22", "-105.367, -321.45, 3.51979, 0.22", "-105.38, -321.676, 3.56452, 0.44", "-105.394, -321.871, 3.59895, 0.44", "-105.43, -322.382, 3.67515, 0.22", "-105.452, -322.702, 3.711, 0.96", "-105.462, -322.946, 3.72593, 1.18", "-105.467, -323.18, 3.73599, 1.25", "-105.478, -323.624, 3.74976, 0.96", "-105.512, -324.262, 3.76657, 0.29", "-105.553, -324.763, 3.77645, 0.22", "-105.62, -325.327, 3.78143, 0.22", "-105.666, -325.617, 3.78346, 0.81", "-105.718, -325.852, 3.78495, 0.96", "-105.947, -326.668, 3.79829, 0.22", "-106.035, -326.923, 3.80532, 0.22", "-106.188, -327.328, 3.82265, 0.59", "-106.306, -327.625, 3.84, 0.59", "-106.479, -328.071, 3.86695, 0.52", "-106.61, -328.438, 3.89031, 0.52", "-106.77, -328.938, 3.92955, 0.52", "-106.831, -329.136, 3.94731, 0.96", "-106.928, -329.473, 3.97936, 0.96", "-107.032, -329.854, 4.01683, 0.59", "-107.202, -330.498, 4.09998, 0.22", "-107.371, -331.165, 4.18861, 0.22", "-107.449, -331.477, 4.23247, 0.22", "-107.522, -331.754, 4.27476, 0.96", "-107.572, -331.943, 4.30666, 1.18", "-107.676, -332.321, 4.38063, 0.52", "-108.11, -336.885, 3.92546, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-102.156, -309.305, 3.47299, 0.29", "-103.049, -309.022, 3.91884, 0.29", "-103.532, -309.001, 4.13479, 0.37", "-103.755, -309.051, 4.22374, 0.37", "-104.262, -309.248, 4.43502, 0.37", "-104.762, -309.461, 4.58257, 0.52", "-105.205, -309.655, 4.68514, 0.59", "-105.813, -309.979, 4.77461, 0.59", "-106.359, -310.284, 4.82752, 0.37", "-106.866, -310.57, 4.85758, 0.37", "-107.774, -311.083, 4.87466, 0.37", "-108.194, -311.296, 4.87483, 0.37", "-108.583, -311.477, 4.87294, 0.29", "-108.892, -311.608, 4.87512, 0.29", "-109.24, -311.753, 4.88657, 0.81", "-109.517, -311.882, 4.90576, 0.81", "-109.888, -312.104, 4.97817, 0.81", "-110.508, -312.542, 5.11937, 0.29", "-110.801, -312.778, 5.19492, 0.66", "-111.016, -312.971, 5.26202, 0.66", "-111.214, -313.164, 5.33194, 0.66", "-111.919, -313.902, 5.6042, 0.29", "-112.233, -314.246, 5.72228, 0.44", "-112.504, -314.542, 5.82338, 0.29", "-112.83, -314.882, 5.93637, 0.74", "-113.074, -315.111, 6.00408, 0.74", "-113.48, -315.439, 6.09327, 0.52", "-114.208, -315.933, 6.21324, 0.29", "-114.644, -316.198, 6.27223, 0.52", "-114.943, -316.36, 6.29624, 0.52", "-115.578, -316.669, 6.30412, 0.29", "-116.053, -316.875, 6.29868, 0.29", "-116.343, -316.982, 6.29013, 0.59", "-116.689, -317.09, 6.26827, 0.59", "-117.315, -317.276, 6.2144, 0.22", "-117.666, -317.376, 6.19073, 0.29", "-118.19, -317.53, 6.1727, 0.29", "-118.437, -317.608, 6.16583, 0.29", "-119.068, -317.833, 6.15101, 0.37", "-119.538, -318.058, 6.17887, 0.37", "-120.009, -318.346, 6.25642, 0.52", "-120.544, -318.745, 6.3799, 1.55", "-120.861, -319.025, 6.46504, 1.92", "-121.16, -319.319, 6.55888, 1.92", "-121.841, -320.055, 6.8185, 0.29", "-122.284, -320.575, 6.99757, 0.29", "-122.637, -321.025, 7.15337, 0.29", "-122.916, -321.391, 7.28556, 0.74", "-123.054, -321.574, 7.35198, 0.96", "-123.177, -321.73, 7.40827, 1.11", "-123.536, -322.19, 7.56765, 0.52", "-123.756, -322.5, 7.68685, 0.29", "-124.074, -322.951, 7.8812, 0.22", "-124.291, -323.245, 8.01965, 0.44", "-124.477, -323.484, 8.14064, 0.44", "-124.99, -324.14, 8.48502, 0.22", "-125.3, -324.531, 8.70055, 0.22", "-125.599, -324.893, 8.90647, 1.25", "-125.872, -325.22, 9.10378, 1.55", "-126.004, -325.369, 9.19671, 1.62" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "75.5854, -11.3958, -12.2535, 0.74", "76.921, -12.4207, -11.8105, 0.74", "77.309, -12.7154, -11.711, 0.74", "77.9738, -13.2187, -11.6038, 0.59", "78.7561, -13.8081, -11.5662, 0.59", "79.4839, -14.358, -11.603, 0.59", "79.848, -14.632, -11.6393, 0.59", "80.5657, -15.1749, -11.7963, 0.59", "81.178, -15.6357, -11.9699, 0.81", "81.9901, -16.2401, -12.1995, 0.81", "82.6598, -16.7193, -12.3766, 0.37", "83.3537, -17.1909, -12.533, 0.37", "84.1648, -17.7416, -12.703, 0.37", "84.9918, -18.3235, -12.8552, 0.37", "85.7825, -18.8761, -12.9638, 0.37", "86.9694, -19.7012, -13.0686, 0.22", "88.2347, -20.5765, -13.1434, 0.22", "94.9954, -26.1316, -15.0477, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "75.5854, -11.3958, -12.2535, 0.37", "75.6629, -12.6858, -12.8899, 0.37", "75.7831, -13.4992, -13.2532, 0.37", "75.9466, -14.2532, -13.576, 0.37", "76.1808, -15.0324, -13.8448, 0.37", "76.4189, -15.7025, -14.0601, 0.37", "76.7351, -16.4847, -14.2925, 0.29", "77.2687, -17.57, -14.6541, 0.22", "77.8665, -18.7097, -15.0976, 0.22", "78.6482, -20.1134, -15.7288, 0.22", "78.9386, -20.6289, -15.9933, 1.18", "79.1472, -21.0509, -16.2573, 1.4", "79.559, -22.3561, -17.2359, 1.4", "79.6645, -23.4245, -18.1532, 0.44", "79.6354, -23.7939, -18.4724, 0.44", "79.5145, -24.3626, -18.9591, 0.29", "79.2396, -25.3294, -19.6924, 0.29", "78.8307, -26.5663, -20.5596, 0.22", "78.4752, -27.5359, -21.1001, 0.22", "78.2147, -28.1253, -21.3979, 1.03", "78.0757, -28.4274, -21.5329, 1.33", "77.8749, -28.8546, -21.6924, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-126.004, -325.369, 9.19671, 0.29", "-126.909, -324.545, 9.51128, 0.29", "-127.112, -324.363, 9.57502, 0.52", "-127.425, -324.076, 9.66431, 0.59", "-129.232, -322.435, 10.0591, 0.22", "-129.743, -321.979, 10.1518, 0.22", "-130.45, -321.362, 10.2609, 0.66", "-130.832, -321.027, 10.2922, 0.66", "-132.46, -319.658, 10.3693, 0.22", "-133.135, -319.117, 10.3822, 0.22", "-133.756, -318.662, 10.3857, 0.52", "-134.198, -318.362, 10.3876, 0.66", "-135.409, -317.598, 10.3949, 0.22", "-137.813, -316.117, 10.4135, 0.22", "-139.364, -315.207, 10.4318, 0.22", "-140.796, -314.376, 10.4819, 1.18", "-141.197, -314.147, 10.4959, 1.4", "-141.815, -313.806, 10.5214, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-126.004, -325.369, 9.19671, 0.22", "-127.159, -327.145, 9.49496, 0.22", "-128.063, -328.61, 9.81859, 0.22", "-128.444, -329.27, 9.97275, 0.44", "-128.606, -329.56, 10.042, 0.44", "-130.09, -332.34, 10.6932, 0.22", "-130.785, -333.641, 10.998, 0.44", "-131.369, -334.735, 11.2692, 0.22", "-131.729, -335.475, 11.4598, 0.59", "-132.027, -336.117, 11.6327, 0.66", "-132.24, -336.61, 11.7725, 0.44", "-136.15, -348.076, 15.1109, 0.44" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "axon_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "axon_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_ChC_9060a4c27e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, axon_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_49(0), soma_0(0.49999994654580493)
    connect dend_42(0), soma_0(0.49999994654580493)
    connect dend_27(0), soma_0(0.49999994654580493)
    connect dend_20(0), soma_0(0.49999994654580493)
    connect dend_11(0), soma_0(0.49999994654580493)
    connect dend_0(0), soma_0(0.49999994654580493)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.44259, -9.54825, -1.27888, 2.30647 ) }
    soma_0 { pt3dadd( -1.2819, -8.63231, -1.15821, 3.63473 ) }
    soma_0 { pt3dadd( -1.1212, -7.71637, -1.03754, 6.81375 ) }
    soma_0 { pt3dadd( -0.960502, -6.80044, -0.916865, 9.18535 ) }
    soma_0 { pt3dadd( -0.799804, -5.8845, -0.796194, 10.2157 ) }
    soma_0 { pt3dadd( -0.639107, -4.96856, -0.675522, 11.1797 ) }
    soma_0 { pt3dadd( -0.478409, -4.05262, -0.554851, 12.0566 ) }
    soma_0 { pt3dadd( -0.317712, -3.13668, -0.43418, 12.6775 ) }
    soma_0 { pt3dadd( -0.157014, -2.22074, -0.313508, 13.0617 ) }
    soma_0 { pt3dadd( 0.00368301, -1.3048, -0.192837, 13.2009 ) }
    soma_0 { pt3dadd( 0.16438, -0.388856, -0.0721652, 13.2418 ) }
    soma_0 { pt3dadd( 0.325078, 0.527084, 0.0485063, 12.889 ) }
    soma_0 { pt3dadd( 0.485775, 1.44302, 0.169178, 12.4912 ) }
    soma_0 { pt3dadd( 0.646473, 2.35896, 0.289849, 12.2347 ) }
    soma_0 { pt3dadd( 0.80717, 3.2749, 0.410521, 12.0486 ) }
    soma_0 { pt3dadd( 0.967868, 4.19084, 0.531192, 11.9346 ) }
    soma_0 { pt3dadd( 1.12856, 5.10678, 0.651864, 11.8925 ) }
    soma_0 { pt3dadd( 1.28926, 6.02272, 0.772535, 11.1454 ) }
    soma_0 { pt3dadd( 1.44996, 6.93866, 0.893206, 8.66152 ) }
    soma_0 { pt3dadd( 1.61066, 7.8546, 1.01388, 5.25757 ) }
    soma_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 3.12251 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.66144, -6.91316, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.66144, -6.91316, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.26422, -8.16445, -8.21942, 1.77 ) }
    dend_49 { pt3dadd( -2.96169, -9.09593, -8.36736, 1.77 ) }
    dend_49 { pt3dadd( -2.49931, -10.5559, -8.58569, 1.55 ) }
    dend_49 { pt3dadd( -2.22773, -11.5241, -8.75909, 1.69 ) }
    dend_49 { pt3dadd( -2.04182, -12.2763, -8.91018, 1.77 ) }
    dend_49 { pt3dadd( -1.87895, -13.0082, -9.09293, 1.77 ) }
    dend_49 { pt3dadd( -1.67219, -13.9892, -9.40013, 1.25 ) }
    dend_49 { pt3dadd( -1.33702, -15.4943, -9.81427, 0.74 ) }
    dend_49 { pt3dadd( -1.9813, -14.8385, -10.5238, 0.74 ) }
    dend_49 { pt3dadd( -2.48371, -14.6067, -11.2787, 0.74 ) }
    dend_49 { pt3dadd( -3.36467, -14.2916, -12.636, 1.18 ) }
    dend_49 { pt3dadd( -3.83825, -14.2124, -13.4099, 1.18 ) }
    dend_49 { pt3dadd( -4.54859, -14.0533, -14.4796, 0.52 ) }
    dend_49 { pt3dadd( -5.38918, -13.7637, -15.6287, 0.52 ) }
    dend_49 { pt3dadd( -6.34469, -13.8057, -17.0812, 0.74 ) }
    dend_49 { pt3dadd( -6.74735, -14.0165, -18.0692, 0.74 ) }
    dend_49 { pt3dadd( -6.93945, -14.3414, -18.9313, 0.74 ) }
    dend_49 { pt3dadd( -7.24947, -14.7602, -20.2325, 1.11 ) }
    dend_49 { pt3dadd( -7.52623, -14.9788, -21.0654, 1.69 ) }
    dend_49 { pt3dadd( -7.97917, -15.1292, -21.9064, 1.77 ) }
    dend_49 { pt3dadd( -9.01104, -15.4187, -23.7649, 1.33 ) }
    dend_49 { pt3dadd( -9.56022, -15.6778, -24.8977, 1.4 ) }
    dend_49 { pt3dadd( -9.88377, -16.0229, -25.7486, 1.55 ) }
    dend_49 { pt3dadd( -10.0677, -16.5969, -26.6396, 1.33 ) }
    dend_49 { pt3dadd( -10.0878, -17.5866, -27.7706, 0.74 ) }
    dend_49 { pt3dadd( -9.9156, -18.3969, -28.4278, 1.03 ) }
    dend_49 { pt3dadd( -9.66416, -19.0772, -28.8432, 1.47 ) }
    dend_49 { pt3dadd( -9.39736, -19.5243, -29.1417, 1.62 ) }
    dend_49 { pt3dadd( -8.97474, -20.0583, -29.5532, 1.62 ) }
    dend_49 { pt3dadd( -8.49578, -20.4874, -29.932, 0.52 ) }
    dend_49 { pt3dadd( -7.92647, -20.8911, -30.3498, 0.52 ) }
    dend_49 { pt3dadd( -7.78483, -21.1021, -30.709, 0.52 ) }
    dend_49 { pt3dadd( -7.81362, -21.5339, -31.6392, 0.66 ) }
    dend_49 { pt3dadd( -7.99778, -21.9579, -32.6222, 0.74 ) }
    dend_49 { pt3dadd( -8.29812, -22.1309, -33.3156, 0.44 ) }
    dend_49 { pt3dadd( -8.81564, -22.1288, -34.0491, 0.44 ) }
    dend_49 { pt3dadd( -9.57843, -22.0397, -34.9819, 0.44 ) }
    dend_49 { pt3dadd( -10.1207, -22.0922, -35.8118, 0.44 ) }
    dend_49 { pt3dadd( -10.4223, -22.1954, -36.4004, 0.44 ) }
    dend_49 { pt3dadd( -10.9828, -22.5403, -37.5441, 0.66 ) }
    dend_49 { pt3dadd( -11.2565, -23.0757, -38.6996, 1.11 ) }
    dend_49 { pt3dadd( -11.3982, -23.272, -39.1009, 0.96 ) }
    dend_49 { pt3dadd( -11.7684, -23.6858, -40.021, 1.18 ) }
    dend_49 { pt3dadd( -11.9124, -23.8629, -40.3806, 1.69 ) }
    dend_49 { pt3dadd( -12.1465, -24.1355, -40.9019, 1.69 ) }
    dend_49 { pt3dadd( -13.0386, -25.1004, -42.6462, 0.88 ) }
    dend_49 { pt3dadd( -13.5835, -25.5594, -43.5571, 2.14 ) }
    dend_49 { pt3dadd( -14.8195, -26.1799, -45.2402, 2.28 ) }
    dend_49 { pt3dadd( -14.9931, -26.2247, -45.4328, 2.28 ) }
    dend_49 { pt3dadd( -15.9957, -26.3128, -46.3682, 0.44 ) }
    dend_49 { pt3dadd( -16.5681, -26.2691, -46.7888, 0.44 ) }
    dend_49 { pt3dadd( -17.2442, -26.138, -47.1766, 0.81 ) }
    dend_49 { pt3dadd( -17.9379, -25.9704, -47.5909, 0.81 ) }
    dend_49 { pt3dadd( -18.2541, -25.9291, -47.8175, 0.96 ) }
    dend_49 { pt3dadd( -18.8823, -25.9828, -48.3698, 0.66 ) }
    dend_49 { pt3dadd( -19.514, -26.1868, -49.0184, 1.99 ) }
    dend_49 { pt3dadd( -19.9872, -26.4311, -49.5657, 2.21 ) }
    dend_49 { pt3dadd( -20.4492, -26.753, -50.1372, 2.5 ) }
    dend_49 { pt3dadd( -21.7202, -27.8582, -51.8315, 0.66 ) }
    dend_49 { pt3dadd( -22.3792, -28.5791, -52.8321, 0.66 ) }
    dend_49 { pt3dadd( -22.7862, -29.1396, -53.5195, 0.66 ) }
    dend_49 { pt3dadd( -23.2053, -29.8063, -54.2552, 1.55 ) }
    dend_49 { pt3dadd( -23.4, -30.1342, -54.581, 2.21 ) }
    dend_49 { pt3dadd( -23.5878, -30.4767, -54.8918, 2.21 ) }
    dend_49 { pt3dadd( -24.1058, -31.5657, -55.8268, 0.29 ) }
    dend_49 { pt3dadd( -24.3829, -32.2681, -56.4766, 0.29 ) }
    dend_49 { pt3dadd( -24.5641, -32.7531, -56.9166, 1.55 ) }
    dend_49 { pt3dadd( -24.7899, -33.3383, -57.4358, 1.99 ) }
    dend_49 { pt3dadd( -24.9977, -33.8621, -57.9114, 2.36 ) }
    dend_49 { pt3dadd( -25.5817, -35.2869, -59.2449, 0.59 ) }
    dend_49 { pt3dadd( -25.8721, -36.0173, -59.9746, 1.84 ) }
    dend_49 { pt3dadd( -25.9864, -36.3563, -60.3547, 1.84 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 95/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -6.50143, -1.62167, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.50143, -1.62167, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.78722, -2.10227, 2.13357, 1.92 ) }
    dend_42 { pt3dadd( -7.27336, -3.05525, 2.08413, 1.92 ) }
    dend_42 { pt3dadd( -7.77467, -3.92467, 2.03426, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( -8.1611, -4.51264, 1.99208, 2.36 ) }
    dend_42 { pt3dadd( -8.70869, -5.22412, 1.93394, 2.28 ) }
    dend_42 { pt3dadd( -9.31026, -5.88101, 1.86743, 2.36 ) }
    dend_42 { pt3dadd( -9.98337, -6.48887, 1.78108, 2.36 ) }
    dend_42 { pt3dadd( -11.0281, -7.17034, 1.65783, 1.77 ) }
    dend_42 { pt3dadd( -11.6027, -7.39458, 1.61465, 1.77 ) }
    dend_42 { pt3dadd( -12.5037, -7.57737, 1.59063, 1.99 ) }
    dend_42 { pt3dadd( -13.3066, -7.65241, 1.64161, 1.99 ) }
    dend_42 { pt3dadd( -13.7039, -7.66606, 1.69066, 1.99 ) }
    dend_42 { pt3dadd( -14.296, -7.69335, 1.79631, 1.77 ) }
    dend_42 { pt3dadd( -15.2126, -7.84511, 2.03343, 1.47 ) }
    dend_42 { pt3dadd( -15.8742, -8.06962, 2.22061, 1.47 ) }
    dend_42 { pt3dadd( -16.708, -8.52699, 2.43131, 1.33 ) }
    dend_42 { pt3dadd( -17.0871, -8.80677, 2.50189, 1.99 ) }
    dend_42 { pt3dadd( -17.7313, -9.37873, 2.57261, 1.99 ) }
    dend_42 { pt3dadd( -18.4734, -10.122, 2.58209, 1.77 ) }
    dend_42 { pt3dadd( -19.2943, -11.0301, 2.50985, 1.92 ) }
    dend_42 { pt3dadd( -20.0533, -11.8932, 2.35499, 1.69 ) }
    dend_42 { pt3dadd( -20.52, -12.3943, 2.20489, 1.69 ) }
    dend_42 { pt3dadd( -21.1049, -12.9586, 1.98378, 1.84 ) }
    dend_42 { pt3dadd( -21.6383, -13.4306, 1.78005, 1.84 ) }
    dend_42 { pt3dadd( -22.3288, -14.0201, 1.52709, 1.69 ) }
    dend_42 { pt3dadd( -23.0877, -14.6769, 1.29033, 1.55 ) }
    dend_42 { pt3dadd( -23.8541, -15.3876, 1.11147, 1.4 ) }
    dend_42 { pt3dadd( -24.482, -15.9727, 0.984023, 1.25 ) }
    dend_42 { pt3dadd( -25.139, -16.6126, 0.865669, 1.33 ) }
    dend_42 { pt3dadd( -25.7612, -17.2778, 0.796825, 1.47 ) }
    dend_42 { pt3dadd( -26.3436, -17.9836, 0.824745, 1.62 ) }
    dend_42 { pt3dadd( -26.7555, -18.6438, 0.969813, 1.77 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 29/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.448551, -8.29066, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.448551, -8.29066, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.673242, -9.79993, -4.82963, 2.95 ) }
    dend_27 { pt3dadd( 0.995282, -12.1421, -4.71819, 2.8 ) }
    dend_27 { pt3dadd( 1.18097, -13.7117, -4.612, 2.8 ) }
    dend_27 { pt3dadd( 1.3427, -15.4668, -4.47819, 3.02 ) }
    dend_27 { pt3dadd( 1.42008, -16.6317, -4.38861, 3.02 ) }
    dend_27 { pt3dadd( 1.45246, -17.7744, -4.29604, 3.02 ) }
    dend_27 { pt3dadd( 1.42125, -19.4961, -4.15407, 3.02 ) }
    dend_27 { pt3dadd( 1.29469, -21.3175, -3.99794, 2.36 ) }
    dend_27 { pt3dadd( 0.955032, -24.5035, -3.82731, 2.36 ) }
    dend_27 { pt3dadd( 0.709825, -26.2883, -3.81066, 2.43 ) }
    dend_27 { pt3dadd( 0.427745, -28.0158, -3.85318, 2.43 ) }
    dend_27 { pt3dadd( 0.059044, -30.0407, -3.97385, 2.43 ) }
    dend_27 { pt3dadd( -0.514221, -32.8364, -4.22014, 2.28 ) }
    dend_27 { pt3dadd( -1.13195, -35.7048, -4.54231, 2.14 ) }
    dend_27 { pt3dadd( -1.99437, -39.5049, -5.04639, 2.06 ) }
    dend_27 { pt3dadd( -2.59291, -42.1423, -5.44012, 2.43 ) }
    dend_27 { pt3dadd( -2.97098, -43.8218, -5.72588, 2.58 ) }
    dend_27 { pt3dadd( -3.37638, -45.5916, -6.06774, 2.58 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 49/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.381405, 7.21333, -7.5337, 1.62 ) }
    dend_20 { pt3dadd( -0.473699, 8.00465, -7.59703, 1.62 ) }
    dend_20 { pt3dadd( -0.619644, 9.16885, -7.63385, 1.92 ) }
    dend_20 { pt3dadd( -0.839743, 10.7241, -7.69753, 1.33 ) }
    dend_20 { pt3dadd( -1.11733, 12.398, -7.79133, 1.69 ) }
    dend_20 { pt3dadd( -1.345, 13.6365, -7.83906, 2.21 ) }
    dend_20 { pt3dadd( -1.54016, 14.6719, -7.83085, 2.21 ) }
    dend_20 { pt3dadd( -1.77512, 15.8374, -7.77383, 1.99 ) }
    dend_20 { pt3dadd( -1.99564, 16.8285, -7.68727, 1.77 ) }
    dend_20 { pt3dadd( -2.25749, 17.9311, -7.56001, 1.99 ) }
    dend_20 { pt3dadd( -2.54147, 19.098, -7.42017, 1.99 ) }
    dend_20 { pt3dadd( -3.02689, 21.1481, -7.21628, 1.11 ) }
    dend_20 { pt3dadd( -3.32654, 22.4298, -7.12881, 1.11 ) }
    dend_20 { pt3dadd( -3.64763, 23.7193, -7.09409, 1.25 ) }
    dend_20 { pt3dadd( -3.95377, 24.802, -7.08812, 1.4 ) }
    dend_20 { pt3dadd( -4.35449, 25.9854, -7.15734, 0.81 ) }
    dend_20 { pt3dadd( -4.82643, 27.1064, -7.33429, 0.74 ) }
    dend_20 { pt3dadd( -5.20146, 27.8393, -7.52265, 0.74 ) }
    dend_20 { pt3dadd( -5.66377, 28.6344, -7.77745, 0.74 ) }
    dend_20 { pt3dadd( -6.20102, 29.5004, -8.10145, 0.96 ) }
    dend_20 { pt3dadd( -6.70753, 30.3155, -8.42867, 0.96 ) }
    dend_20 { pt3dadd( -7.23598, 31.1339, -8.76522, 1.55 ) }
    dend_20 { pt3dadd( -7.83289, 32.0515, -9.1562, 2.06 ) }
    dend_20 { pt3dadd( -8.3379, 32.8869, -9.52084, 2.43 ) }
    dend_20 { pt3dadd( -8.91707, 34.012, -10.0158, 2.36 ) }
    dend_20 { pt3dadd( -9.57283, 35.5446, -10.6728, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.32144, 7.89733, 0.346303, 2.5 ) }
    dend_11 { pt3dadd( -2.3803, 8.02076, 0.346973, 2.5 ) }
    dend_11 { pt3dadd( -3.31356, 9.74986, 0.310908, 1.77 ) }
    dend_11 { pt3dadd( -3.96497, 10.9184, 0.317574, 1.55 ) }
    dend_11 { pt3dadd( -4.72898, 12.2484, 0.379792, 1.55 ) }
    dend_11 { pt3dadd( -5.31112, 13.2632, 0.466585, 1.33 ) }
    dend_11 { pt3dadd( -6.19934, 14.8373, 0.651271, 1.33 ) }
    dend_11 { pt3dadd( -6.75479, 15.7989, 0.793373, 1.55 ) }
    dend_11 { pt3dadd( -7.59283, 17.2235, 1.03487, 1.55 ) }
    dend_11 { pt3dadd( -8.46319, 18.7728, 1.30275, 1.62 ) }
    dend_11 { pt3dadd( -9.15807, 20.1535, 1.52774, 1.4 ) }
    dend_11 { pt3dadd( -9.80594, 21.6732, 1.74746, 1.4 ) }
    dend_11 { pt3dadd( -10.1745, 22.6067, 1.88394, 1.4 ) }
    dend_11 { pt3dadd( -10.7476, 24.108, 2.09138, 1.4 ) }
    dend_11 { pt3dadd( -11.2917, 25.6077, 2.23618, 1.4 ) }
    dend_11 { pt3dadd( -11.9035, 27.4614, 2.33435, 1.77 ) }
    dend_11 { pt3dadd( -12.4184, 29.1245, 2.35271, 2.73 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.82855, 3.96433, 1.3463, 2.58 ) }
    dend_0 { pt3dadd( 6.87335, 4.00586, 1.35037, 2.58 ) }
    dend_0 { pt3dadd( 7.43809, 4.54259, 1.40934, 2.58 ) }
    dend_0 { pt3dadd( 8.07884, 5.1579, 1.49607, 1.84 ) }
    dend_0 { pt3dadd( 8.55318, 5.60433, 1.57302, 2.06 ) }
    dend_0 { pt3dadd( 9.16562, 6.17913, 1.68809, 2.06 ) }
    dend_0 { pt3dadd( 9.57034, 6.55013, 1.79029, 2.58 ) }
    dend_0 { pt3dadd( 10.0195, 6.95915, 1.92968, 2.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 10.3164, 7.234, 2.0423, 2.58 ) }
    dend_0 { pt3dadd( 10.8434, 7.69984, 2.26743, 2.58 ) }
    dend_0 { pt3dadd( 11.2141, 8.00429, 2.43461, 2.43 ) }
    dend_0 { pt3dadd( 11.9908, 8.60508, 2.8151, 2.21 ) }
    dend_0 { pt3dadd( 12.5573, 9.018, 3.10415, 1.99 ) }
    dend_0 { pt3dadd( 13.0119, 9.33001, 3.32209, 1.99 ) }
    dend_0 { pt3dadd( 13.6016, 9.67515, 3.57676, 1.69 ) }
    dend_0 { pt3dadd( 14.0945, 9.87266, 3.76371, 1.69 ) }
    dend_0 { pt3dadd( 14.9672, 9.98626, 4.0506, 2.06 ) }
    dend_0 { pt3dadd( 15.515, 9.89526, 4.19977, 2.06 ) }
    dend_0 { pt3dadd( 16.8094, 9.35944, 4.54607, 1.69 ) }
    dend_0 { pt3dadd( 17.6997, 8.89556, 4.77106, 1.92 ) }
    dend_0 { pt3dadd( 19.0915, 7.99685, 5.09796, 1.92 ) }
    dend_0 { pt3dadd( 20.4169, 6.96251, 5.38052, 2.06 ) }
    dend_0 { pt3dadd( 21.0963, 6.31801, 5.50836, 2.28 ) }
    dend_0 { pt3dadd( 21.6059, 5.73081, 5.61111, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 0.835316 ) }
    axon_0 { pt3dadd( 4.36343, 23.5449, 1.13455, 0.835316 ) }
    axon_0 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.835316 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 19/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -25.9864, -36.3563, -60.3547, 0.96 ) }
    dend_51 { pt3dadd( -24.6179, -38.5459, -67.4153, 0.96 ) }
    dend_51 { pt3dadd( -24.3469, -39.0733, -68.7508, 0.96 ) }
    dend_51 { pt3dadd( -23.9901, -39.8169, -70.3467, 0.96 ) }
    dend_51 { pt3dadd( -23.4854, -40.8818, -72.4135, 1.55 ) }
    dend_51 { pt3dadd( -23.0769, -41.8024, -74.0002, 0.22 ) }
    dend_51 { pt3dadd( -22.6193, -42.9048, -75.5928, 0.22 ) }
    dend_51 { pt3dadd( -22.3551, -43.6688, -76.2687, 1.11 ) }
    dend_51 { pt3dadd( -22.1156, -44.399, -76.8278, 1.4 ) }
    dend_51 { pt3dadd( -21.7346, -45.389, -77.4926, 1.4 ) }
    dend_51 { pt3dadd( -20.8072, -47.5185, -78.776, 0.22 ) }
    dend_51 { pt3dadd( -19.7049, -49.6736, -80.0346, 0.22 ) }
    dend_51 { pt3dadd( -19.2992, -50.3726, -80.4398, 0.74 ) }
    dend_51 { pt3dadd( -19.068, -50.7452, -80.6439, 0.74 ) }
    dend_51 { pt3dadd( -17.7945, -52.7315, -81.6625, 0.15 ) }
    dend_51 { pt3dadd( -17.5868, -53.0391, -81.8055, 0.37 ) }
    dend_51 { pt3dadd( -16.3308, -54.6935, -82.5338, 0.22 ) }
    dend_51 { pt3dadd( -15.5802, -55.5971, -82.9779, 0.22 ) }
    dend_51 { pt3dadd( -14.9826, -56.3186, -83.3283, 0.74 ) }
    dend_51 { pt3dadd( -14.4167, -57.0661, -83.6568, 0.88 ) }
    dend_51 { pt3dadd( -14.2657, -57.3316, -83.7519, 0.88 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 40/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -25.9864, -36.3563, -60.3547, 2.87 ) }
    dend_50 { pt3dadd( -26.5074, -36.7078, -60.37, 2.87 ) }
    dend_50 { pt3dadd( -28.1257, -37.9506, -60.5226, 0.22 ) }
    dend_50 { pt3dadd( -29.537, -39.2718, -60.7409, 0.22 ) }
    dend_50 { pt3dadd( -30.2066, -39.9531, -60.8585, 1.69 ) }
    dend_50 { pt3dadd( -30.4141, -40.1769, -60.8977, 2.21 ) }
    dend_50 { pt3dadd( -30.7481, -40.5518, -60.9634, 2.21 ) }
    dend_50 { pt3dadd( -31.9312, -42.0655, -61.2198, 0.22 ) }
    dend_50 { pt3dadd( -32.9168, -43.5909, -61.5178, 0.22 ) }
    dend_50 { pt3dadd( -33.2141, -44.0943, -61.6245, 1.25 ) }
    dend_50 { pt3dadd( -33.456, -44.5088, -61.7131, 1.25 ) }
    dend_50 { pt3dadd( -33.78, -45.0535, -61.8361, 1.25 ) }
    dend_50 { pt3dadd( -34.4579, -46.1095, -62.0755, 0.15 ) }
    dend_50 { pt3dadd( -34.8474, -46.6902, -62.2027, 0.15 ) }
    dend_50 { pt3dadd( -35.1667, -47.1111, -62.3011, 0.96 ) }
    dend_50 { pt3dadd( -35.5433, -47.5539, -62.4218, 1.18 ) }
    dend_50 { pt3dadd( -35.7226, -47.7384, -62.4767, 1.18 ) }
    dend_50 { pt3dadd( -36.9328, -48.8063, -62.8872, 0.22 ) }
    dend_50 { pt3dadd( -37.2739, -49.0391, -63.004, 0.52 ) }
    dend_50 { pt3dadd( -37.5905, -49.2326, -63.1103, 0.52 ) }
    dend_50 { pt3dadd( -38.4119, -49.7053, -63.3734, 0.22 ) }
    dend_50 { pt3dadd( -38.9248, -49.9928, -63.5417, 1.25 ) }
    dend_50 { pt3dadd( -39.6674, -50.4432, -63.7831, 1.4 ) }
    dend_50 { pt3dadd( -41.0683, -51.4373, -64.3161, 0.22 ) }
    dend_50 { pt3dadd( -41.9878, -52.2378, -64.7108, 0.22 ) }
    dend_50 { pt3dadd( -42.3195, -52.5965, -64.8758, 0.74 ) }
    dend_50 { pt3dadd( -42.7155, -53.1483, -65.1086, 0.88 ) }
    dend_50 { pt3dadd( -43.2058, -54.1697, -65.6054, 0.22 ) }
    dend_50 { pt3dadd( -43.479, -55.3964, -66.1839, 0.22 ) }
    dend_50 { pt3dadd( -43.5105, -56.1596, -66.5447, 1.99 ) }
    dend_50 { pt3dadd( -43.4784, -56.6156, -66.7487, 2.36 ) }
    dend_50 { pt3dadd( -43.4282, -57.0575, -66.9509, 2.36 ) }
    dend_50 { pt3dadd( -43.0327, -59.5024, -68.0956, 0.15 ) }
    dend_50 { pt3dadd( -42.7209, -60.9939, -68.8494, 0.15 ) }
    dend_50 { pt3dadd( -42.6251, -61.3804, -69.031, 0.44 ) }
    dend_50 { pt3dadd( -42.4123, -62.119, -69.3649, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 76/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -26.7555, -18.6438, 0.969813, 0.96 ) }
    dend_44 { pt3dadd( -27.8325, -19.0407, 0.560241, 0.96 ) }
    dend_44 { pt3dadd( -28.8579, -19.4532, 0.163758, 1.25 ) }
    dend_44 { pt3dadd( -30.3356, -20.0469, -0.40102, 1.25 ) }
    dend_44 { pt3dadd( -32.9114, -20.9995, -1.31422, 1.18 ) }
    dend_44 { pt3dadd( -34.6655, -21.5723, -1.87858, 1.11 ) }
    dend_44 { pt3dadd( -36.0168, -21.9824, -2.29968, 0.88 ) }
    dend_44 { pt3dadd( -37.7962, -22.5333, -2.88172, 0.96 ) }
    dend_44 { pt3dadd( -38.8146, -22.8487, -3.22398, 0.96 ) }
    dend_44 { pt3dadd( -40.3095, -23.3226, -3.7356, 0.96 ) }
    dend_44 { pt3dadd( -41.7839, -23.7942, -4.15619, 0.96 ) }
    dend_44 { pt3dadd( -43.0385, -24.1816, -4.4408, 1.18 ) }
    dend_44 { pt3dadd( -44.5822, -24.6344, -4.72334, 1.03 ) }
    dend_44 { pt3dadd( -45.3472, -24.8344, -4.78516, 1.03 ) }
    dend_44 { pt3dadd( -46.9492, -25.193, -4.73777, 1.18 ) }
    dend_44 { pt3dadd( -47.9239, -25.3657, -4.56489, 1.18 ) }
    dend_44 { pt3dadd( -50.1238, -25.6165, -3.74547, 0.96 ) }
    dend_44 { pt3dadd( -50.9318, -25.6598, -3.36584, 1.11 ) }
    dend_44 { pt3dadd( -52.5057, -25.7106, -2.54459, 1.11 ) }
    dend_44 { pt3dadd( -53.7673, -25.7825, -1.87047, 1.11 ) }
    dend_44 { pt3dadd( -55.2513, -25.9227, -1.07658, 1.11 ) }
    dend_44 { pt3dadd( -57.2321, -26.2713, -0.0363419, 1.55 ) }
    dend_44 { pt3dadd( -58.649, -26.6767, 0.653088, 1.03 ) }
    dend_44 { pt3dadd( -60.3432, -27.3666, 1.4557, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( -61.7871, -28.1585, 2.09458, 0.74 ) }
    dend_44 { pt3dadd( -62.6131, -28.7493, 2.43554, 0.74 ) }
    dend_44 { pt3dadd( -63.6774, -29.717, 2.79328, 0.74 ) }
    dend_44 { pt3dadd( -64.7313, -30.8927, 3.04715, 0.66 ) }
    dend_44 { pt3dadd( -65.6725, -32.1104, 3.22735, 0.88 ) }
    dend_44 { pt3dadd( -66.2856, -33.0004, 3.30395, 1.03 ) }
    dend_44 { pt3dadd( -66.9235, -34.0492, 3.35884, 1.03 ) }
    dend_44 { pt3dadd( -67.7383, -35.401, 3.40661, 0.88 ) }
    dend_44 { pt3dadd( -68.7555, -36.9896, 3.44028, 0.88 ) }
    dend_44 { pt3dadd( -69.3326, -37.786, 3.44311, 0.88 ) }
    dend_44 { pt3dadd( -70.1919, -38.7639, 3.44637, 0.88 ) }
    dend_44 { pt3dadd( -71.8718, -40.3293, 3.45764, 0.88 ) }
    dend_44 { pt3dadd( -72.8576, -41.038, 3.4636, 0.88 ) }
    dend_44 { pt3dadd( -74.2743, -41.781, 3.4719, 0.88 ) }
    dend_44 { pt3dadd( -75.2307, -42.1218, 3.47068, 0.96 ) }
    dend_44 { pt3dadd( -76.3581, -42.4188, 3.43519, 0.96 ) }
    dend_44 { pt3dadd( -77.3839, -42.6113, 3.40524, 0.96 ) }
    dend_44 { pt3dadd( -78.533, -42.7918, 3.38177, 0.52 ) }
    dend_44 { pt3dadd( -79.3166, -43.0439, 3.38418, 0.52 ) }
    dend_44 { pt3dadd( -79.9044, -43.4962, 3.44568, 0.52 ) }
    dend_44 { pt3dadd( -80.4729, -44.3434, 3.65539, 0.81 ) }
    dend_44 { pt3dadd( -80.9072, -45.2393, 3.93368, 0.96 ) }
    dend_44 { pt3dadd( -81.2185, -46.2746, 4.27431, 0.96 ) }
    dend_44 { pt3dadd( -81.5545, -48.1299, 4.8966, 0.81 ) }
    dend_44 { pt3dadd( -81.6601, -49.0378, 5.21195, 0.81 ) }
    dend_44 { pt3dadd( -81.7432, -50.1869, 5.66411, 1.11 ) }
    dend_44 { pt3dadd( -81.8344, -50.8365, 5.97368, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 27/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -26.7555, -18.6438, 0.969813, 1.33 ) }
    dend_43 { pt3dadd( -27.5935, -18.9578, 1.78079, 1.33 ) }
    dend_43 { pt3dadd( -28.4144, -19.2797, 2.46314, 1.18 ) }
    dend_43 { pt3dadd( -29.9616, -19.8437, 3.69222, 0.88 ) }
    dend_43 { pt3dadd( -30.7143, -20.0768, 4.24332, 0.74 ) }
    dend_43 { pt3dadd( -31.8275, -20.3545, 4.97419, 0.74 ) }
    dend_43 { pt3dadd( -32.9598, -20.5676, 5.71842, 0.74 ) }
    dend_43 { pt3dadd( -33.8178, -20.7019, 6.24813, 0.59 ) }
    dend_43 { pt3dadd( -34.8276, -20.8039, 6.86763, 0.59 ) }
    dend_43 { pt3dadd( -35.6221, -20.8333, 7.36425, 0.52 ) }
    dend_43 { pt3dadd( -36.4167, -20.7776, 7.94071, 0.52 ) }
    dend_43 { pt3dadd( -37.9006, -20.4928, 9.17647, 0.74 ) }
    dend_43 { pt3dadd( -38.8338, -20.2334, 10.043, 0.59 ) }
    dend_43 { pt3dadd( -39.6912, -19.9854, 10.8701, 0.44 ) }
    dend_43 { pt3dadd( -40.6135, -19.7754, 11.7837, 0.37 ) }
    dend_43 { pt3dadd( -41.3515, -19.6912, 12.5161, 0.66 ) }
    dend_43 { pt3dadd( -42.0216, -19.717, 13.0668, 0.66 ) }
    dend_43 { pt3dadd( -42.4692, -19.7942, 13.3188, 0.66 ) }
    dend_43 { pt3dadd( -43.065, -19.9289, 13.6134, 0.44 ) }
    dend_43 { pt3dadd( -43.7596, -20.1287, 13.9159, 0.44 ) }
    dend_43 { pt3dadd( -45.0017, -20.4884, 14.423, 0.44 ) }
    dend_43 { pt3dadd( -46.716, -21.0249, 15.1245, 0.74 ) }
    dend_43 { pt3dadd( -47.7326, -21.3788, 15.5322, 0.74 ) }
    dend_43 { pt3dadd( -49.1385, -21.8524, 16.0782, 0.52 ) }
    dend_43 { pt3dadd( -50.4548, -22.2756, 16.5751, 0.59 ) }
    dend_43 { pt3dadd( -51.5865, -22.6293, 16.9827, 0.44 ) }
    dend_43 { pt3dadd( -53.1596, -23.1837, 17.5417, 0.37 ) }
    dend_43 { pt3dadd( -54.291, -23.6831, 17.9388, 0.37 ) }
    dend_43 { pt3dadd( -55.5253, -24.3934, 18.3216, 0.29 ) }
    dend_43 { pt3dadd( -56.1127, -24.8486, 18.4744, 0.29 ) }
    dend_43 { pt3dadd( -56.7994, -25.5403, 18.6921, 0.29 ) }
    dend_43 { pt3dadd( -57.3805, -26.2023, 18.9186, 0.37 ) }
    dend_43 { pt3dadd( -58.0314, -26.9839, 19.2362, 0.37 ) }
    dend_43 { pt3dadd( -58.6859, -27.7476, 19.6213, 0.37 ) }
    dend_43 { pt3dadd( -59.3834, -28.6484, 20.09, 0.66 ) }
    dend_43 { pt3dadd( -60.0767, -29.5278, 20.5835, 0.81 ) }
    dend_43 { pt3dadd( -60.6118, -30.1393, 20.9755, 0.81 ) }
    dend_43 { pt3dadd( -61.3999, -30.8756, 21.5298, 0.22 ) }
    dend_43 { pt3dadd( -62.3727, -31.6373, 22.2036, 0.22 ) }
    dend_43 { pt3dadd( -72.0597, -33.6807, 27.7541, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 67/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -3.37638, -45.5916, -6.06774, 1.55 ) }
    dend_33 { pt3dadd( -3.02143, -46.6567, -5.9969, 1.55 ) }
    dend_33 { pt3dadd( -2.669, -47.7413, -5.9236, 1.55 ) }
    dend_33 { pt3dadd( -2.37094, -48.6945, -5.864, 1.55 ) }
    dend_33 { pt3dadd( -2.04507, -49.7759, -5.79196, 1.69 ) }
    dend_33 { pt3dadd( -1.81333, -50.6056, -5.73347, 1.69 ) }
    dend_33 { pt3dadd( -1.66086, -51.2262, -5.69091, 1.69 ) }
    dend_33 { pt3dadd( -1.45824, -52.2562, -5.62279, 1.55 ) }
    dend_33 { pt3dadd( -1.2464, -53.6043, -5.54082, 1.47 ) }
    dend_33 { pt3dadd( -1.1345, -54.7277, -5.46747, 1.33 ) }
    dend_33 { pt3dadd( -1.10316, -55.8047, -5.39387, 1.33 ) }
    dend_33 { pt3dadd( -1.16658, -57.235, -5.29837, 1.33 ) }
    dend_33 { pt3dadd( -1.30016, -58.284, -5.22113, 1.11 ) }
    dend_33 { pt3dadd( -1.44613, -58.9447, -5.16747, 1.11 ) }
    dend_33 { pt3dadd( -1.87739, -60.3844, -5.04136, 1.25 ) }
    dend_33 { pt3dadd( -2.22362, -61.3403, -4.95598, 1.25 ) }
    dend_33 { pt3dadd( -2.57267, -62.2006, -4.87942, 1.25 ) }
    dend_33 { pt3dadd( -3.08893, -63.3953, -4.78497, 1.4 ) }
    dend_33 { pt3dadd( -3.61517, -64.5738, -4.70733, 1.4 ) }
    dend_33 { pt3dadd( -4.02867, -65.5304, -4.6665, 1.55 ) }
    dend_33 { pt3dadd( -4.29056, -66.2358, -4.66544, 1.55 ) }
    dend_33 { pt3dadd( -4.60439, -67.2815, -4.69423, 1.33 ) }
    dend_33 { pt3dadd( -4.90671, -68.59, -4.77752, 0.96 ) }
    dend_33 { pt3dadd( -4.99196, -69.1095, -4.83231, 0.81 ) }
    dend_33 { pt3dadd( -5.05877, -69.6946, -4.89733, 0.81 ) }
    dend_33 { pt3dadd( -5.16031, -71.0474, -5.03695, 0.96 ) }
    dend_33 { pt3dadd( -5.1979, -71.9846, -5.11662, 1.33 ) }
    dend_33 { pt3dadd( -5.2236, -73.0191, -5.18395, 1.69 ) }
    dend_33 { pt3dadd( -5.24762, -73.6458, -5.20971, 1.84 ) }
    dend_33 { pt3dadd( -5.29248, -74.3561, -5.21873, 1.99 ) }
    dend_33 { pt3dadd( -5.38986, -75.1957, -5.20328, 2.06 ) }
    dend_33 { pt3dadd( -5.48801, -75.9134, -5.17201, 2.06 ) }
    dend_33 { pt3dadd( -5.59037, -76.6434, -5.11014, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( -5.69228, -77.4223, -5.00667, 1.62 ) }
    dend_33 { pt3dadd( -5.79853, -78.3583, -4.84797, 1.18 ) }
    dend_33 { pt3dadd( -5.86438, -79.1079, -4.70904, 0.88 ) }
    dend_33 { pt3dadd( -5.94358, -80.1325, -4.50073, 0.88 ) }
    dend_33 { pt3dadd( -5.9941, -80.8374, -4.33081, 1.03 ) }
    dend_33 { pt3dadd( -6.04988, -81.5624, -4.13332, 1.11 ) }
    dend_33 { pt3dadd( -6.10331, -82.0783, -3.98652, 1.11 ) }
    dend_33 { pt3dadd( -6.30395, -83.3647, -3.62377, 1.03 ) }
    dend_33 { pt3dadd( -6.47742, -84.2037, -3.39157, 1.18 ) }
    dend_33 { pt3dadd( -6.63572, -84.8884, -3.21528, 1.25 ) }
    dend_33 { pt3dadd( -6.88936, -85.9303, -2.97607, 1.18 ) }
    dend_33 { pt3dadd( -7.13474, -86.8751, -2.79068, 1.03 ) }
    dend_33 { pt3dadd( -7.40344, -87.8181, -2.63774, 0.96 ) }
    dend_33 { pt3dadd( -7.72007, -88.839, -2.51365, 0.88 ) }
    dend_33 { pt3dadd( -7.95312, -89.5208, -2.46878, 0.88 ) }
    dend_33 { pt3dadd( -8.35214, -90.5473, -2.49797, 1.25 ) }
    dend_33 { pt3dadd( -8.79082, -91.5709, -2.60428, 1.55 ) }
    dend_33 { pt3dadd( -9.13055, -92.3539, -2.72271, 1.62 ) }
    dend_33 { pt3dadd( -9.38403, -92.9812, -2.83066, 1.62 ) }
    dend_33 { pt3dadd( -9.6809, -93.803, -2.97425, 1.4 ) }
    dend_33 { pt3dadd( -10.0517, -94.9677, -3.15714, 1.11 ) }
    dend_33 { pt3dadd( -10.3613, -96.1692, -3.31365, 1.11 ) }
    dend_33 { pt3dadd( -10.6289, -97.497, -3.42719, 1.11 ) }
    dend_33 { pt3dadd( -10.8651, -98.9139, -3.50893, 1.11 ) }
    dend_33 { pt3dadd( -11.0201, -99.9506, -3.54531, 1.4 ) }
    dend_33 { pt3dadd( -11.1664, -101.025, -3.56473, 1.4 ) }
    dend_33 { pt3dadd( -11.3829, -102.7, -3.56759, 1.25 ) }
    dend_33 { pt3dadd( -11.6043, -104.415, -3.57591, 1.25 ) }
    dend_33 { pt3dadd( -11.7599, -105.544, -3.58462, 1.62 ) }
    dend_33 { pt3dadd( -11.9108, -106.532, -3.60428, 1.77 ) }
    dend_33 { pt3dadd( -12.1122, -107.854, -3.6527, 1.33 ) }
    dend_33 { pt3dadd( -12.2878, -109.053, -3.70424, 0.88 ) }
    dend_33 { pt3dadd( -12.4527, -110.389, -3.77449, 1.25 ) }
    dend_33 { pt3dadd( -12.5207, -111.051, -3.81786, 1.84 ) }
    dend_33 { pt3dadd( -12.5742, -111.793, -3.87661, 2.28 ) }
    dend_33 { pt3dadd( -12.6072, -112.561, -3.95264, 2.43 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 36/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -3.37638, -45.5916, -6.06774, 2.14 ) }
    dend_28 { pt3dadd( -3.29807, -45.9399, -6.17022, 2.14 ) }
    dend_28 { pt3dadd( -3.1562, -46.4912, -6.30524, 2.14 ) }
    dend_28 { pt3dadd( -2.9136, -47.4338, -6.53612, 1.69 ) }
    dend_28 { pt3dadd( -2.71032, -48.2237, -6.72959, 1.84 ) }
    dend_28 { pt3dadd( -2.51284, -48.9911, -6.91753, 1.99 ) }
    dend_28 { pt3dadd( -2.35308, -49.6118, -7.06957, 2.36 ) }
    dend_28 { pt3dadd( -2.22574, -50.0674, -7.16123, 2.5 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 44/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -9.57283, 35.5446, -10.6728, 1.25 ) }
    dend_22 { pt3dadd( -9.34036, 36.2019, -10.8565, 1.25 ) }
    dend_22 { pt3dadd( -9.1443, 36.6426, -10.9732, 1.03 ) }
    dend_22 { pt3dadd( -8.88308, 37.1662, -11.1039, 0.81 ) }
    dend_22 { pt3dadd( -8.58961, 37.7528, -11.239, 0.81 ) }
    dend_22 { pt3dadd( -8.33086, 38.3398, -11.3617, 1.11 ) }
    dend_22 { pt3dadd( -8.16727, 38.7669, -11.4425, 1.11 ) }
    dend_22 { pt3dadd( -7.99036, 39.2682, -11.5089, 0.96 ) }
    dend_22 { pt3dadd( -7.77994, 39.9409, -11.5749, 0.66 ) }
    dend_22 { pt3dadd( -7.65175, 40.4072, -11.6164, 0.52 ) }
    dend_22 { pt3dadd( -7.50151, 41.0202, -11.6629, 0.52 ) }
    dend_22 { pt3dadd( -7.40634, 41.4765, -11.6943, 0.52 ) }
    dend_22 { pt3dadd( -7.20186, 42.4521, -11.7779, 1.18 ) }
    dend_22 { pt3dadd( -7.09407, 42.9512, -11.8265, 1.62 ) }
    dend_22 { pt3dadd( -7.01111, 43.3089, -11.8661, 1.69 ) }
    dend_22 { pt3dadd( -6.85454, 43.9003, -11.9514, 1.33 ) }
    dend_22 { pt3dadd( -6.75703, 44.192, -12.0074, 0.74 ) }
    dend_22 { pt3dadd( -6.57941, 44.638, -12.1139, 0.59 ) }
    dend_22 { pt3dadd( -6.27957, 45.3416, -12.3266, 0.66 ) }
    dend_22 { pt3dadd( -6.12504, 45.722, -12.4518, 0.44 ) }
    dend_22 { pt3dadd( -6.02597, 46.007, -12.5447, 0.44 ) }
    dend_22 { pt3dadd( -5.87074, 46.5304, -12.7149, 0.37 ) }
    dend_22 { pt3dadd( -5.73767, 46.9711, -12.8541, 0.37 ) }
    dend_22 { pt3dadd( -5.62588, 47.2913, -12.9465, 0.37 ) }
    dend_22 { pt3dadd( -5.40773, 47.7935, -13.1057, 0.37 ) }
    dend_22 { pt3dadd( -5.19566, 48.2402, -13.2581, 0.44 ) }
    dend_22 { pt3dadd( -5.01029, 48.6754, -13.4219, 0.44 ) }
    dend_22 { pt3dadd( -4.76288, 49.381, -13.7082, 0.81 ) }
    dend_22 { pt3dadd( -4.60786, 49.8802, -13.9162, 1.03 ) }
    dend_22 { pt3dadd( -4.46205, 50.3308, -14.112, 1.03 ) }
    dend_22 { pt3dadd( -4.3299, 50.7404, -14.3073, 0.81 ) }
    dend_22 { pt3dadd( -4.1525, 51.3383, -14.6199, 0.29 ) }
    dend_22 { pt3dadd( -4.07761, 51.636, -14.782, 0.29 ) }
    dend_22 { pt3dadd( -3.93501, 52.3572, -15.1674, 1.77 ) }
    dend_22 { pt3dadd( -3.89204, 52.5977, -15.2926, 2.36 ) }
    dend_22 { pt3dadd( -3.82733, 52.9309, -15.4521, 2.36 ) }
    dend_22 { pt3dadd( -3.68808, 53.5652, -15.7369, 2.28 ) }
    dend_22 { pt3dadd( -3.49398, 54.3261, -16.0502, 0.66 ) }
    dend_22 { pt3dadd( -3.383, 54.7422, -16.2219, 0.88 ) }
    dend_22 { pt3dadd( -3.26895, 55.1755, -16.4028, 0.88 ) }
    dend_22 { pt3dadd( -3.13968, 55.6619, -16.5937, 0.37 ) }
    dend_22 { pt3dadd( -3.05121, 55.9905, -16.7175, 0.37 ) }
    dend_22 { pt3dadd( -2.87297, 56.6762, -16.9593, 0.37 ) }
    dend_22 { pt3dadd( -2.74528, 57.1937, -17.1331, 1.11 ) }
    dend_22 { pt3dadd( -2.65133, 57.6076, -17.2663, 1.47 ) }
    dend_22 { pt3dadd( -2.59271, 57.904, -17.3555, 1.69 ) }
    dend_22 { pt3dadd( -2.511, 58.4059, -17.4942, 1.33 ) }
    dend_22 { pt3dadd( -2.43979, 58.9582, -17.6311, 0.44 ) }
    dend_22 { pt3dadd( -2.40648, 59.5474, -17.757, 0.29 ) }
    dend_22 { pt3dadd( -2.39865, 60.0105, -17.8516, 0.52 ) }
    dend_22 { pt3dadd( -2.40264, 60.357, -17.9203, 0.52 ) }
    dend_22 { pt3dadd( -2.42355, 60.9389, -18.0485, 0.29 ) }
    dend_22 { pt3dadd( -2.4357, 61.5377, -18.1843, 0.29 ) }
    dend_22 { pt3dadd( -2.43526, 62.5923, -18.4436, 1.18 ) }
    dend_22 { pt3dadd( -2.42883, 62.9886, -18.5416, 1.62 ) }
    dend_22 { pt3dadd( -2.42156, 63.4108, -18.6384, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( -2.40996, 63.9442, -18.7505, 1.33 ) }
    dend_22 { pt3dadd( -2.37931, 65.4664, -19.0565, 0.22 ) }
    dend_22 { pt3dadd( -2.35427, 66.441, -19.2427, 0.22 ) }
    dend_22 { pt3dadd( -2.331, 67.3221, -19.3967, 0.22 ) }
    dend_22 { pt3dadd( -2.31796, 68.254, -19.54, 0.74 ) }
    dend_22 { pt3dadd( -2.3159, 68.7623, -19.6128, 1.03 ) }
    dend_22 { pt3dadd( -2.31914, 69.0021, -19.6437, 1.03 ) }
    dend_22 { pt3dadd( -2.36716, 69.7674, -19.7572, 0.15 ) }
    dend_22 { pt3dadd( -2.39293, 70.0609, -19.8146, 0.15 ) }
    dend_22 { pt3dadd( -2.42728, 70.3965, -19.9047, 0.44 ) }
    dend_22 { pt3dadd( -2.46027, 70.7156, -20.0059, 0.66 ) }
    dend_22 { pt3dadd( -2.49015, 71.0097, -20.1001, 0.66 ) }
    dend_22 { pt3dadd( -2.54892, 71.857, -20.369, 1.55 ) }
    dend_22 { pt3dadd( -2.57217, 72.4798, -20.5595, 2.58 ) }
    dend_22 { pt3dadd( -2.57574, 73.0216, -20.7251, 2.58 ) }
    dend_22 { pt3dadd( -2.52395, 74.2236, -21.0719, 0.29 ) }
    dend_22 { pt3dadd( -2.43632, 75.0263, -21.2684, 0.29 ) }
    dend_22 { pt3dadd( -2.24151, 76.1768, -21.494, 0.29 ) }
    dend_22 { pt3dadd( -2.0725, 76.8989, -21.601, 0.96 ) }
    dend_22 { pt3dadd( -1.96712, 77.2696, -21.638, 0.96 ) }
    dend_22 { pt3dadd( -1.55822, 78.4763, -21.7066, 0.22 ) }
    dend_22 { pt3dadd( -1.07027, 79.7611, -21.7256, 0.22 ) }
    dend_22 { pt3dadd( -0.741274, 80.5679, -21.7117, 1.77 ) }
    dend_22 { pt3dadd( -0.604792, 80.8833, -21.6969, 2.36 ) }
    dend_22 { pt3dadd( -0.434777, 81.2687, -21.6755, 2.5 ) }
    dend_22 { pt3dadd( 0.115079, 82.5139, -21.5969, 0.15 ) }
    dend_22 { pt3dadd( 0.388873, 83.1406, -21.5617, 0.29 ) }
    dend_22 { pt3dadd( 0.568356, 83.5601, -21.5464, 0.29 ) }
    dend_22 { pt3dadd( 0.792451, 84.0958, -21.5553, 0.15 ) }
    dend_22 { pt3dadd( 1.00933, 84.6441, -21.5986, 1.18 ) }
    dend_22 { pt3dadd( 1.14287, 84.984, -21.6439, 1.55 ) }
    dend_22 { pt3dadd( 1.28999, 85.3609, -21.7094, 1.18 ) }
    dend_22 { pt3dadd( 1.39666, 85.6326, -21.7653, 0.74 ) }
    dend_22 { pt3dadd( 1.70034, 86.4764, -21.9431, 0.22 ) }
    dend_22 { pt3dadd( 1.92012, 87.1356, -22.0831, 0.22 ) }
    dend_22 { pt3dadd( 2.27209, 88.2902, -22.3014, 0.22 ) }
    dend_22 { pt3dadd( 2.44828, 88.9123, -22.4045, 0.81 ) }
    dend_22 { pt3dadd( 2.5137, 89.1619, -22.4401, 0.81 ) }
    dend_22 { pt3dadd( 2.88927, 90.7262, -22.611, 0.22 ) }
    dend_22 { pt3dadd( 3.05788, 91.5144, -22.6507, 0.22 ) }
    dend_22 { pt3dadd( 3.18501, 92.2273, -22.6767, 1.25 ) }
    dend_22 { pt3dadd( 3.20497, 92.4167, -22.682, 1.69 ) }
    dend_22 { pt3dadd( 3.2165, 92.6312, -22.6863, 1.69 ) }
    dend_22 { pt3dadd( 3.22487, 93.0884, -22.691, 1.33 ) }
    dend_22 { pt3dadd( 3.21361, 93.4888, -22.6991, 0.59 ) }
    dend_22 { pt3dadd( 3.17327, 94.3217, -22.7371, 0.22 ) }
    dend_22 { pt3dadd( 3.12607, 95.5081, -22.8305, 0.22 ) }
    dend_22 { pt3dadd( 3.09702, 96.2382, -22.8969, 1.03 ) }
    dend_22 { pt3dadd( 3.08371, 96.5459, -22.9268, 1.03 ) }
    dend_22 { pt3dadd( 3.08017, 96.8674, -22.9587, 1.03 ) }
    dend_22 { pt3dadd( 3.09388, 97.3437, -23.0027, 0.52 ) }
    dend_22 { pt3dadd( 3.16886, 98.4108, -23.0818, 0.22 ) }
    dend_22 { pt3dadd( 3.24644, 98.9238, -23.1213, 0.59 ) }
    dend_22 { pt3dadd( 3.31722, 99.2523, -23.1457, 0.59 ) }
    dend_22 { pt3dadd( 3.69942, 100.694, -23.2448, 0.22 ) }
    dend_22 { pt3dadd( 3.84362, 101.141, -23.2718, 0.66 ) }
    dend_22 { pt3dadd( 3.96907, 101.459, -23.2916, 0.66 ) }
    dend_22 { pt3dadd( 4.28915, 102.198, -23.3455, 0.15 ) }
    dend_22 { pt3dadd( 4.47424, 102.608, -23.3823, 0.81 ) }
    dend_22 { pt3dadd( 4.6006, 102.891, -23.4127, 0.81 ) }
    dend_22 { pt3dadd( 4.78041, 103.307, -23.4684, 0.81 ) }
    dend_22 { pt3dadd( 5.09744, 104.101, -23.5873, 0.22 ) }
    dend_22 { pt3dadd( 5.40403, 104.909, -23.7286, 1.33 ) }
    dend_22 { pt3dadd( 5.52601, 105.247, -23.7942, 1.55 ) }
    dend_22 { pt3dadd( 5.59798, 105.445, -23.8338, 1.55 ) }
    dend_22 { pt3dadd( 5.67421, 105.654, -23.8792, 1.03 ) }
    dend_22 { pt3dadd( 6.03704, 106.607, -24.1027, 0.22 ) }
    dend_22 { pt3dadd( 6.38317, 107.455, -24.3154, 0.22 ) }
    dend_22 { pt3dadd( 6.58094, 107.899, -24.4397, 0.22 ) }
    dend_22 { pt3dadd( 6.8129, 108.424, -24.5883, 1.25 ) }
    dend_22 { pt3dadd( 6.95305, 108.764, -24.6862, 1.77 ) }
    dend_22 { pt3dadd( 7.06883, 109.071, -24.7773, 1.77 ) }
    dend_22 { pt3dadd( 7.1597, 109.331, -24.8598, 1.18 ) }
    dend_22 { pt3dadd( 7.29381, 109.742, -24.9953, 0.66 ) }
    dend_22 { pt3dadd( 7.69774, 110.994, -25.438, 0.22 ) }
    dend_22 { pt3dadd( 7.96979, 111.83, -25.7609, 0.22 ) }
    dend_22 { pt3dadd( 8.16084, 112.4, -25.9806, 1.11 ) }
    dend_22 { pt3dadd( 8.29739, 112.766, -26.1187, 1.4 ) }
    dend_22 { pt3dadd( 8.43353, 113.09, -26.2412, 1.4 ) }
    dend_22 { pt3dadd( 8.61074, 113.466, -26.3961, 0.96 ) }
    dend_22 { pt3dadd( 9.15731, 114.526, -26.8695, 0.22 ) }
    dend_22 { pt3dadd( 9.7733, 115.627, -27.3687, 0.22 ) }
    dend_22 { pt3dadd( 10.2664, 116.47, -27.7464, 1.77 ) }
    dend_22 { pt3dadd( 10.4445, 116.767, -27.8748, 2.65 ) }
    dend_22 { pt3dadd( 10.7307, 117.232, -28.067, 2.95 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 85/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -9.57283, 35.5446, -10.6728, 0.66 ) }
    dend_21 { pt3dadd( -11.5828, 36.4452, -10.9456, 0.66 ) }
    dend_21 { pt3dadd( -12.3835, 36.7691, -11.0516, 0.66 ) }
    dend_21 { pt3dadd( -13.322, 37.1147, -11.168, 0.66 ) }
    dend_21 { pt3dadd( -14.3935, 37.4658, -11.3029, 1.11 ) }
    dend_21 { pt3dadd( -15.0578, 37.6543, -11.3913, 1.33 ) }
    dend_21 { pt3dadd( -16.0589, 37.9271, -11.5275, 1.33 ) }
    dend_21 { pt3dadd( -17.1457, 38.1909, -11.6736, 0.96 ) }
    dend_21 { pt3dadd( -17.8956, 38.3774, -11.7497, 0.88 ) }
    dend_21 { pt3dadd( -18.7914, 38.6003, -11.8117, 0.88 ) }
    dend_21 { pt3dadd( -19.8562, 38.8614, -11.833, 0.37 ) }
    dend_21 { pt3dadd( -20.4051, 38.9905, -11.8196, 0.37 ) }
    dend_21 { pt3dadd( -21.3427, 39.2092, -11.7623, 0.81 ) }
    dend_21 { pt3dadd( -22.1535, 39.4069, -11.6897, 0.88 ) }
    dend_21 { pt3dadd( -22.9044, 39.5957, -11.6114, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -23.6971, 39.7998, -11.5166, 0.29 ) }
    dend_21 { pt3dadd( -24.2029, 39.9236, -11.4623, 0.29 ) }
    dend_21 { pt3dadd( -25.0816, 40.0856, -11.4071, 0.74 ) }
    dend_21 { pt3dadd( -25.7359, 40.1879, -11.3942, 0.74 ) }
    dend_21 { pt3dadd( -26.111, 40.2616, -11.3824, 0.74 ) }
    dend_21 { pt3dadd( -26.5453, 40.3785, -11.3375, 0.74 ) }
    dend_21 { pt3dadd( -27.0787, 40.5442, -11.2507, 0.59 ) }
    dend_21 { pt3dadd( -27.5983, 40.6985, -11.1324, 0.59 ) }
    dend_21 { pt3dadd( -28.0542, 40.819, -10.9906, 0.37 ) }
    dend_21 { pt3dadd( -29.2877, 41.0786, -10.5804, 0.37 ) }
    dend_21 { pt3dadd( -30.1573, 41.2089, -10.2828, 0.37 ) }
    dend_21 { pt3dadd( -30.6223, 41.2537, -10.1229, 0.22 ) }
    dend_21 { pt3dadd( -31.4058, 41.2919, -9.86239, 0.22 ) }
    dend_21 { pt3dadd( -31.8287, 41.2885, -9.74294, 0.22 ) }
    dend_21 { pt3dadd( -33.0735, 41.252, -9.45195, 1.03 ) }
    dend_21 { pt3dadd( -33.6908, 41.2465, -9.34446, 1.4 ) }
    dend_21 { pt3dadd( -34.0604, 41.262, -9.2875, 1.4 ) }
    dend_21 { pt3dadd( -34.9589, 41.3527, -9.16403, 0.81 ) }
    dend_21 { pt3dadd( -36.109, 41.5169, -9.04165, 0.22 ) }
    dend_21 { pt3dadd( -36.7305, 41.6143, -8.9872, 0.22 ) }
    dend_21 { pt3dadd( -37.9849, 41.8279, -8.90641, 1.11 ) }
    dend_21 { pt3dadd( -38.6257, 41.945, -8.88079, 1.4 ) }
    dend_21 { pt3dadd( -39.081, 42.0297, -8.87138, 1.4 ) }
    dend_21 { pt3dadd( -40.1437, 42.2258, -8.87078, 0.66 ) }
    dend_21 { pt3dadd( -41.1427, 42.3989, -8.88154, 0.52 ) }
    dend_21 { pt3dadd( -42.3516, 42.5758, -8.90942, 0.74 ) }
    dend_21 { pt3dadd( -43.1366, 42.6854, -8.93699, 0.88 ) }
    dend_21 { pt3dadd( -44.2506, 42.8537, -8.98574, 0.66 ) }
    dend_21 { pt3dadd( -45.0411, 42.9813, -9.02587, 0.66 ) }
    dend_21 { pt3dadd( -45.6891, 43.0933, -9.06575, 0.66 ) }
    dend_21 { pt3dadd( -46.9085, 43.3259, -9.13676, 0.29 ) }
    dend_21 { pt3dadd( -47.886, 43.53, -9.16843, 1.03 ) }
    dend_21 { pt3dadd( -48.7171, 43.7144, -9.16807, 1.25 ) }
    dend_21 { pt3dadd( -48.9818, 43.7841, -9.14736, 1.25 ) }
    dend_21 { pt3dadd( -49.663, 44.0024, -9.04648, 0.81 ) }
    dend_21 { pt3dadd( -50.4811, 44.2949, -8.87021, 0.29 ) }
    dend_21 { pt3dadd( -51.0097, 44.5005, -8.71671, 0.52 ) }
    dend_21 { pt3dadd( -51.3614, 44.6507, -8.60333, 0.66 ) }
    dend_21 { pt3dadd( -52.6423, 45.2265, -8.19402, 0.22 ) }
    dend_21 { pt3dadd( -53.3669, 45.5606, -7.9815, 0.22 ) }
    dend_21 { pt3dadd( -53.9612, 45.8356, -7.83392, 0.22 ) }
    dend_21 { pt3dadd( -54.7594, 46.2115, -7.69478, 0.22 ) }
    dend_21 { pt3dadd( -55.8346, 46.7244, -7.5579, 0.59 ) }
    dend_21 { pt3dadd( -56.4497, 47.0239, -7.50749, 0.81 ) }
    dend_21 { pt3dadd( -57.0213, 47.3233, -7.50716, 0.81 ) }
    dend_21 { pt3dadd( -57.8957, 47.8229, -7.54553, 0.52 ) }
    dend_21 { pt3dadd( -59.0698, 48.5472, -7.64291, 1.03 ) }
    dend_21 { pt3dadd( -59.7717, 48.9999, -7.72344, 1.18 ) }
    dend_21 { pt3dadd( -60.2916, 49.3523, -7.79781, 1.25 ) }
    dend_21 { pt3dadd( -61.4482, 50.1734, -7.98911, 0.29 ) }
    dend_21 { pt3dadd( -62.493, 50.9394, -8.1816, 0.74 ) }
    dend_21 { pt3dadd( -62.8851, 51.2315, -8.26097, 0.96 ) }
    dend_21 { pt3dadd( -63.2282, 51.4857, -8.33981, 0.96 ) }
    dend_21 { pt3dadd( -64.3708, 52.3035, -8.62306, 0.22 ) }
    dend_21 { pt3dadd( -64.8249, 52.6103, -8.73813, 0.22 ) }
    dend_21 { pt3dadd( -65.4481, 53.0017, -8.88844, 0.66 ) }
    dend_21 { pt3dadd( -65.8728, 53.257, -9.00023, 0.88 ) }
    dend_21 { pt3dadd( -66.3771, 53.5453, -9.13208, 0.44 ) }
    dend_21 { pt3dadd( -67.0353, 53.9122, -9.29753, 0.37 ) }
    dend_21 { pt3dadd( -67.4333, 54.1285, -9.38802, 0.44 ) }
    dend_21 { pt3dadd( -67.9632, 54.428, -9.50717, 0.44 ) }
    dend_21 { pt3dadd( -68.3446, 54.6465, -9.59317, 0.44 ) }
    dend_21 { pt3dadd( -69.0795, 55.0762, -9.75054, 0.22 ) }
    dend_21 { pt3dadd( -69.5597, 55.3661, -9.83834, 0.22 ) }
    dend_21 { pt3dadd( -70.1291, 55.7398, -9.92978, 0.29 ) }
    dend_21 { pt3dadd( -70.4629, 55.9743, -9.97069, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -12.4184, 29.1245, 2.35271, 1.47 ) }
    dend_13 { pt3dadd( -11.8985, 30.1472, 2.18785, 1.47 ) }
    dend_13 { pt3dadd( -11.4298, 31.2626, 2.02981, 0.81 ) }
    dend_13 { pt3dadd( -11.1386, 32.0796, 1.92761, 0.81 ) }
    dend_13 { pt3dadd( -10.8327, 33.224, 1.80643, 0.81 ) }
    dend_13 { pt3dadd( -10.52, 34.6176, 1.67387, 0.81 ) }
    dend_13 { pt3dadd( -10.2301, 36.1564, 1.54212, 0.81 ) }
    dend_13 { pt3dadd( -10.0468, 37.6928, 1.42704, 1.03 ) }
    dend_13 { pt3dadd( -9.93419, 39.0753, 1.33562, 1.03 ) }
    dend_13 { pt3dadd( -9.80174, 41.1917, 1.19662, 1.18 ) }
    dend_13 { pt3dadd( -9.72607, 42.5031, 1.1183, 1.18 ) }
    dend_13 { pt3dadd( -9.70895, 44.7823, 0.989373, 1.18 ) }
    dend_13 { pt3dadd( -9.75639, 46.4035, 0.899741, 1.4 ) }
    dend_13 { pt3dadd( -9.77865, 47.5523, 0.83116, 1.4 ) }
    dend_13 { pt3dadd( -9.80278, 48.3697, 0.779028, 1.4 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -12.4184, 29.1245, 2.35271, 0.96 ) }
    dend_12 { pt3dadd( -13.9893, 29.7521, 1.98902, 0.96 ) }
    dend_12 { pt3dadd( -14.5514, 29.9926, 1.87207, 0.96 ) }
    dend_12 { pt3dadd( -15.3305, 30.3331, 1.71048, 0.96 ) }
    dend_12 { pt3dadd( -16.1419, 30.7003, 1.53367, 0.81 ) }
    dend_12 { pt3dadd( -16.8403, 31.0291, 1.38222, 0.81 ) }
    dend_12 { pt3dadd( -17.8025, 31.4964, 1.18353, 1.03 ) }
    dend_12 { pt3dadd( -18.4529, 31.8417, 1.04912, 1.03 ) }
    dend_12 { pt3dadd( -19.0554, 32.2231, 0.922066, 1.03 ) }
    dend_12 { pt3dadd( -19.8021, 32.7742, 0.760815, 0.81 ) }
    dend_12 { pt3dadd( -20.3478, 33.1967, 0.643207, 0.81 ) }
    dend_12 { pt3dadd( -20.9458, 33.6773, 0.521954, 0.81 ) }
    dend_12 { pt3dadd( -21.6486, 34.2806, 0.376754, 0.52 ) }
    dend_12 { pt3dadd( -22.2928, 34.8971, 0.247979, 0.52 ) }
    dend_12 { pt3dadd( -22.6527, 35.2768, 0.188375, 0.52 ) }
    dend_12 { pt3dadd( -23.1651, 35.8638, 0.11699, 0.52 ) }
    dend_12 { pt3dadd( -23.7994, 36.6235, 0.0351196, 0.52 ) }
    dend_12 { pt3dadd( -24.1311, 37.0408, -0.00186658, 0.52 ) }
    dend_12 { pt3dadd( -24.4646, 37.4755, -0.0258977, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -24.8527, 37.9966, -0.0387866, 0.66 ) }
    dend_12 { pt3dadd( -25.2096, 38.5158, -0.0412341, 0.88 ) }
    dend_12 { pt3dadd( -25.5537, 39.0752, -0.038695, 0.88 ) }
    dend_12 { pt3dadd( -25.9352, 39.7341, -0.0382023, 0.59 ) }
    dend_12 { pt3dadd( -26.3233, 40.3872, -0.0447611, 0.88 ) }
    dend_12 { pt3dadd( -26.6047, 40.8567, -0.0555236, 0.88 ) }
    dend_12 { pt3dadd( -26.8354, 41.2761, -0.0719811, 0.96 ) }
    dend_12 { pt3dadd( -27.04, 41.6596, -0.0954136, 0.96 ) }
    dend_12 { pt3dadd( -27.2268, 41.9939, -0.122604, 0.96 ) }
    dend_12 { pt3dadd( -27.5656, 42.5374, -0.177425, 0.74 ) }
    dend_12 { pt3dadd( -28.1094, 43.3333, -0.272894, 1.25 ) }
    dend_12 { pt3dadd( -28.4898, 43.8612, -0.343036, 1.25 ) }
    dend_12 { pt3dadd( -28.9237, 44.4495, -0.423064, 0.29 ) }
    dend_12 { pt3dadd( -29.2115, 44.8415, -0.471666, 0.29 ) }
    dend_12 { pt3dadd( -29.5008, 45.24, -0.51265, 0.66 ) }
    dend_12 { pt3dadd( -29.7595, 45.6016, -0.538586, 0.81 ) }
    dend_12 { pt3dadd( -29.9733, 45.9095, -0.549467, 0.81 ) }
    dend_12 { pt3dadd( -30.3224, 46.4608, -0.546111, 0.37 ) }
    dend_12 { pt3dadd( -30.6521, 47.0728, -0.564958, 0.37 ) }
    dend_12 { pt3dadd( -30.8449, 47.4732, -0.594493, 1.03 ) }
    dend_12 { pt3dadd( -31.0108, 47.8271, -0.632556, 1.25 ) }
    dend_12 { pt3dadd( -31.2278, 48.2584, -0.691267, 1.25 ) }
    dend_12 { pt3dadd( -31.42, 48.5985, -0.748902, 0.81 ) }
    dend_12 { pt3dadd( -31.8409, 49.2696, -0.876476, 0.59 ) }
    dend_12 { pt3dadd( -32.095, 49.651, -0.952481, 0.44 ) }
    dend_12 { pt3dadd( -32.4469, 50.191, -1.04109, 0.88 ) }
    dend_12 { pt3dadd( -32.7139, 50.6089, -1.09267, 0.88 ) }
    dend_12 { pt3dadd( -33.1639, 51.3449, -1.1411, 0.59 ) }
    dend_12 { pt3dadd( -33.4512, 51.8372, -1.16179, 0.59 ) }
    dend_12 { pt3dadd( -33.89, 52.6393, -1.1708, 0.44 ) }
    dend_12 { pt3dadd( -34.3646, 53.5663, -1.17459, 1.03 ) }
    dend_12 { pt3dadd( -34.7382, 54.358, -1.16256, 1.55 ) }
    dend_12 { pt3dadd( -34.9436, 54.8522, -1.14172, 1.62 ) }
    dend_12 { pt3dadd( -35.2137, 55.5789, -1.09721, 1.11 ) }
    dend_12 { pt3dadd( -35.4843, 56.3792, -1.03902, 0.59 ) }
    dend_12 { pt3dadd( -35.6566, 56.9341, -0.986241, 0.59 ) }
    dend_12 { pt3dadd( -35.9237, 57.8638, -0.880667, 0.59 ) }
    dend_12 { pt3dadd( -36.1866, 58.7914, -0.760678, 0.52 ) }
    dend_12 { pt3dadd( -36.3604, 59.3992, -0.667374, 0.52 ) }
    dend_12 { pt3dadd( -36.5797, 60.1583, -0.520985, 0.52 ) }
    dend_12 { pt3dadd( -36.8169, 60.9504, -0.360456, 0.52 ) }
    dend_12 { pt3dadd( -37.0982, 61.8159, -0.188192, 0.37 ) }
    dend_12 { pt3dadd( -37.5335, 62.9624, 0.0354874, 1.55 ) }
    dend_12 { pt3dadd( -37.7046, 63.3381, 0.106044, 1.92 ) }
    dend_12 { pt3dadd( -37.8874, 63.6777, 0.165861, 1.92 ) }
    dend_12 { pt3dadd( -38.0659, 63.9649, 0.207963, 1.92 ) }
    dend_12 { pt3dadd( -38.4611, 64.5033, 0.271877, 0.88 ) }
    dend_12 { pt3dadd( -39.0028, 65.1809, 0.33366, 0.44 ) }
    dend_12 { pt3dadd( -39.4161, 65.6808, 0.370365, 0.44 ) }
    dend_12 { pt3dadd( -39.8623, 66.2211, 0.397584, 0.44 ) }
    dend_12 { pt3dadd( -40.4827, 66.9911, 0.430747, 0.37 ) }
    dend_12 { pt3dadd( -40.813, 67.4105, 0.447054, 0.37 ) }
    dend_12 { pt3dadd( -41.492, 68.3117, 0.479331, 0.74 ) }
    dend_12 { pt3dadd( -41.7611, 68.6833, 0.496178, 0.74 ) }
    dend_12 { pt3dadd( -42.0926, 69.1619, 0.518121, 0.52 ) }
    dend_12 { pt3dadd( -42.5335, 69.8233, 0.533827, 1.25 ) }
    dend_12 { pt3dadd( -42.8426, 70.2862, 0.525558, 1.47 ) }
    dend_12 { pt3dadd( -43.0509, 70.5997, 0.508373, 1.47 ) }
    dend_12 { pt3dadd( -43.343, 70.9832, 0.462314, 0.81 ) }
    dend_12 { pt3dadd( -43.7458, 71.4584, 0.381185, 0.59 ) }
    dend_12 { pt3dadd( -44.1562, 71.891, 0.275343, 0.88 ) }
    dend_12 { pt3dadd( -44.5063, 72.2362, 0.172622, 1.18 ) }
    dend_12 { pt3dadd( -44.7258, 72.4475, 0.10318, 1.18 ) }
    dend_12 { pt3dadd( -45.2616, 72.9881, -0.0522168, 0.96 ) }
    dend_12 { pt3dadd( -45.8254, 73.6093, -0.187612, 0.52 ) }
    dend_12 { pt3dadd( -46.1426, 74.0039, -0.227105, 0.37 ) }
    dend_12 { pt3dadd( -46.5848, 74.6271, -0.221793, 0.37 ) }
    dend_12 { pt3dadd( -46.9936, 75.2834, -0.167652, 0.37 ) }
    dend_12 { pt3dadd( -47.3568, 75.9467, -0.0793552, 0.37 ) }
    dend_12 { pt3dadd( -47.5967, 76.4661, 0.0142184, 0.81 ) }
    dend_12 { pt3dadd( -47.9283, 77.3049, 0.179695, 1.84 ) }
    dend_12 { pt3dadd( -48.0595, 77.644, 0.2469, 1.92 ) }
    dend_12 { pt3dadd( -48.1614, 77.888, 0.289541, 1.92 ) }
    dend_12 { pt3dadd( -48.3482, 78.3404, 0.352482, 1.62 ) }
    dend_12 { pt3dadd( -48.6114, 78.9781, 0.401639, 0.88 ) }
    dend_12 { pt3dadd( -48.8809, 79.6632, 0.427571, 0.29 ) }
    dend_12 { pt3dadd( -49.2974, 80.7287, 0.443707, 0.29 ) }
    dend_12 { pt3dadd( -49.6147, 81.4947, 0.45604, 0.29 ) }
    dend_12 { pt3dadd( -49.8236, 81.9405, 0.471322, 0.29 ) }
    dend_12 { pt3dadd( -49.9357, 82.1471, 0.482474, 0.29 ) }
    dend_12 { pt3dadd( -50.2276, 82.5989, 0.516746, 0.66 ) }
    dend_12 { pt3dadd( -50.6036, 83.0927, 0.564922, 0.81 ) }
    dend_12 { pt3dadd( -50.8784, 83.4172, 0.601151, 0.81 ) }
    dend_12 { pt3dadd( -51.406, 84.0298, 0.667979, 0.37 ) }
    dend_12 { pt3dadd( -51.8224, 84.4997, 0.72015, 0.37 ) }
    dend_12 { pt3dadd( -52.2164, 84.9498, 0.769284, 0.81 ) }
    dend_12 { pt3dadd( -52.4934, 85.2703, 0.806423, 0.81 ) }
    dend_12 { pt3dadd( -52.8846, 85.7329, 0.86462, 0.37 ) }
    dend_12 { pt3dadd( -53.2727, 86.1629, 0.925766, 0.37 ) }
    dend_12 { pt3dadd( -53.6701, 86.5624, 0.992893, 0.88 ) }
    dend_12 { pt3dadd( -54.1591, 87.0307, 1.07787, 1.47 ) }
    dend_12 { pt3dadd( -54.5276, 87.3809, 1.1395, 1.69 ) }
    dend_12 { pt3dadd( -54.8267, 87.667, 1.1857, 1.69 ) }
    dend_12 { pt3dadd( -55.643, 88.4316, 1.30546, 0.37 ) }
    dend_12 { pt3dadd( -55.9231, 88.698, 1.34504, 0.37 ) }
    dend_12 { pt3dadd( -56.4466, 89.2312, 1.41046, 0.37 ) }
    dend_12 { pt3dadd( -57.047, 89.8931, 1.47554, 0.81 ) }
    dend_12 { pt3dadd( -57.432, 90.3791, 1.50974, 1.33 ) }
    dend_12 { pt3dadd( -57.6636, 90.703, 1.52423, 1.33 ) }
    dend_12 { pt3dadd( -57.973, 91.1596, 1.5373, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -58.6005, 92.0532, 1.55327, 0.52 ) }
    dend_12 { pt3dadd( -59.1268, 92.742, 1.5599, 0.52 ) }
    dend_12 { pt3dadd( -59.7223, 93.5042, 1.55993, 0.52 ) }
    dend_12 { pt3dadd( -60.0517, 93.9239, 1.55666, 0.52 ) }
    dend_12 { pt3dadd( -60.4756, 94.4678, 1.54794, 0.52 ) }
    dend_12 { pt3dadd( -60.9521, 95.0767, 1.53141, 0.52 ) }
    dend_12 { pt3dadd( -61.7656, 96.1012, 1.49537, 0.52 ) }
    dend_12 { pt3dadd( -62.0607, 96.4714, 1.48141, 0.52 ) }
    dend_12 { pt3dadd( -62.7946, 97.3759, 1.45023, 1.25 ) }
    dend_12 { pt3dadd( -63.0018, 97.6326, 1.4431, 1.47 ) }
    dend_12 { pt3dadd( -63.2744, 97.9656, 1.43017, 1.47 ) }
    dend_12 { pt3dadd( -63.6763, 98.4263, 1.40755, 0.88 ) }
    dend_12 { pt3dadd( -64.1684, 98.9349, 1.3797, 0.29 ) }
    dend_12 { pt3dadd( -64.374, 99.1225, 1.37084, 0.29 ) }
    dend_12 { pt3dadd( -64.8008, 99.4785, 1.35989, 0.44 ) }
    dend_12 { pt3dadd( -65.1396, 99.7508, 1.35926, 0.44 ) }
    dend_12 { pt3dadd( -65.4584, 99.9988, 1.36705, 0.44 ) }
    dend_12 { pt3dadd( -65.6458, 100.152, 1.36435, 0.44 ) }
    dend_12 { pt3dadd( -65.9097, 100.38, 1.37302, 0.29 ) }
    dend_12 { pt3dadd( -66.2439, 100.762, 1.40562, 0.29 ) }
    dend_12 { pt3dadd( -66.3569, 100.91, 1.42778, 0.44 ) }
    dend_12 { pt3dadd( -66.4934, 101.097, 1.46439, 0.44 ) }
    dend_12 { pt3dadd( -66.8533, 101.579, 1.5722, 0.37 ) }
    dend_12 { pt3dadd( -67.3411, 102.207, 1.72577, 0.44 ) }
    dend_12 { pt3dadd( -68.144, 103.201, 1.91519, 2.28 ) }
    dend_12 { pt3dadd( -68.4686, 103.594, 1.96964, 2.5 ) }
    dend_12 { pt3dadd( -68.7193, 103.906, 1.99402, 2.5 ) }
    dend_12 { pt3dadd( -69.1284, 104.418, 2.00692, 1.92 ) }
    dend_12 { pt3dadd( -69.54, 104.934, 1.97969, 0.81 ) }
    dend_12 { pt3dadd( -70.0781, 105.64, 1.84854, 0.52 ) }
    dend_12 { pt3dadd( -70.303, 105.964, 1.76684, 0.52 ) }
    dend_12 { pt3dadd( -70.778, 106.714, 1.55776, 0.88 ) }
    dend_12 { pt3dadd( -71.0409, 107.18, 1.4259, 0.88 ) }
    dend_12 { pt3dadd( -71.3288, 107.744, 1.27129, 0.66 ) }
    dend_12 { pt3dadd( -71.5468, 108.21, 1.14828, 0.44 ) }
    dend_12 { pt3dadd( -71.8386, 108.891, 0.991253, 0.29 ) }
    dend_12 { pt3dadd( -72.1514, 109.676, 0.800975, 0.29 ) }
    dend_12 { pt3dadd( -72.4764, 110.574, 0.564395, 0.29 ) }
    dend_12 { pt3dadd( -72.6267, 111.02, 0.438554, 0.29 ) }
    dend_12 { pt3dadd( -72.8988, 111.843, 0.162878, 0.52 ) }
    dend_12 { pt3dadd( -73.0952, 112.405, -0.0548284, 0.88 ) }
    dend_12 { pt3dadd( -73.2689, 112.864, -0.267157, 0.88 ) }
    dend_12 { pt3dadd( -73.486, 113.365, -0.52874, 0.44 ) }
    dend_12 { pt3dadd( -73.9273, 114.149, -0.98103, 1.11 ) }
    dend_12 { pt3dadd( -74.4107, 114.822, -1.39312, 2.43 ) }
    dend_12 { pt3dadd( -74.821, 115.27, -1.68219, 2.43 ) }
    dend_12 { pt3dadd( -75.1155, 115.526, -1.85396, 2.43 ) }
    dend_12 { pt3dadd( -75.5374, 115.826, -2.04175, 1.69 ) }
    dend_12 { pt3dadd( -76.1515, 116.2, -2.26688, 0.59 ) }
    dend_12 { pt3dadd( -76.8376, 116.552, -2.45552, 0.74 ) }
    dend_12 { pt3dadd( -77.0696, 116.66, -2.49577, 0.74 ) }
    dend_12 { pt3dadd( -77.4595, 116.831, -2.55424, 0.52 ) }
    dend_12 { pt3dadd( -78.0597, 117.096, -2.62281, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 21.6059, 5.73081, 5.61111, 1.99 ) }
    dend_2 { pt3dadd( 22.9184, 5.98969, 5.55973, 1.99 ) }
    dend_2 { pt3dadd( 23.6815, 6.28199, 5.66528, 1.99 ) }
    dend_2 { pt3dadd( 24.2078, 6.65316, 5.85991, 1.69 ) }
    dend_2 { pt3dadd( 24.9475, 7.17493, 6.13351, 1.69 ) }
    dend_2 { pt3dadd( 25.2591, 7.3947, 6.24874, 1.69 ) }
    dend_2 { pt3dadd( 25.7768, 7.75984, 6.44021, 1.69 ) }
    dend_2 { pt3dadd( 26.0959, 8.12782, 6.61321, 1.92 ) }
    dend_2 { pt3dadd( 26.5565, 8.84842, 7.03592, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 62/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 21.6059, 5.73081, 5.61111, 0.74 ) }
    dend_1 { pt3dadd( 22.4941, 7.54292, 5.47812, 0.74 ) }
    dend_1 { pt3dadd( 22.8342, 8.32654, 5.40326, 0.74 ) }
    dend_1 { pt3dadd( 23.3156, 9.55319, 5.26196, 0.74 ) }
    dend_1 { pt3dadd( 23.6986, 10.6076, 5.12689, 0.44 ) }
    dend_1 { pt3dadd( 23.998, 11.5029, 5.01262, 0.44 ) }
    dend_1 { pt3dadd( 24.4084, 12.8328, 4.84168, 0.66 ) }
    dend_1 { pt3dadd( 24.5729, 13.4716, 4.74462, 0.88 ) }
    dend_1 { pt3dadd( 24.7902, 14.4076, 4.62514, 0.88 ) }
    dend_1 { pt3dadd( 24.9732, 15.2822, 4.54708, 1.03 ) }
    dend_1 { pt3dadd( 25.2474, 16.5451, 4.4698, 0.96 ) }
    dend_1 { pt3dadd( 25.4558, 17.4438, 4.43114, 0.52 ) }
    dend_1 { pt3dadd( 25.6465, 18.1672, 4.40916, 0.52 ) }
    dend_1 { pt3dadd( 25.8723, 19.1316, 4.38166, 0.88 ) }
    dend_1 { pt3dadd( 26.0566, 19.9186, 4.36266, 0.66 ) }
    dend_1 { pt3dadd( 26.2662, 20.8015, 4.34963, 0.88 ) }
    dend_1 { pt3dadd( 26.4516, 21.5913, 4.34306, 0.88 ) }
    dend_1 { pt3dadd( 26.7112, 22.762, 4.34508, 0.29 ) }
    dend_1 { pt3dadd( 26.898, 23.7079, 4.34076, 0.29 ) }
    dend_1 { pt3dadd( 27.0192, 24.3571, 4.32684, 0.29 ) }
    dend_1 { pt3dadd( 27.2239, 25.4657, 4.30938, 0.44 ) }
    dend_1 { pt3dadd( 27.3608, 26.1312, 4.31722, 0.74 ) }
    dend_1 { pt3dadd( 27.5557, 26.9328, 4.33731, 0.88 ) }
    dend_1 { pt3dadd( 27.6922, 27.4189, 4.3587, 1.11 ) }
    dend_1 { pt3dadd( 27.8114, 27.8023, 4.37481, 1.11 ) }
    dend_1 { pt3dadd( 28.0482, 28.6683, 4.38195, 0.29 ) }
    dend_1 { pt3dadd( 28.3006, 29.5108, 4.35172, 0.29 ) }
    dend_1 { pt3dadd( 28.5797, 30.2995, 4.30584, 0.29 ) }
    dend_1 { pt3dadd( 31.131, 39.3935, 5.7135, 0.29 ) }
    dend_1 { pt3dadd( 34.9207, 48.1207, 6.70837, 0.29 ) }
    dend_1 { pt3dadd( 37.7829, 57.1934, 6.60751, 0.29 ) }
    dend_1 { pt3dadd( 39.8243, 66.4278, 5.85082, 0.29 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 94/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 9.5476, 53.0936, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 12.1397, 67.8679, 1.13455, 0.59 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 97/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -81.8344, -50.8365, 5.97368, 0.44 ) }
    dend_48 { pt3dadd( -83.5151, -51.5512, 6.71148, 0.44 ) }
    dend_48 { pt3dadd( -84.3671, -51.9751, 7.06962, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -85.2691, -52.4642, 7.41162, 0.29 ) }
    dend_48 { pt3dadd( -85.7994, -52.7616, 7.60029, 0.29 ) }
    dend_48 { pt3dadd( -86.9293, -53.3818, 7.97582, 0.37 ) }
    dend_48 { pt3dadd( -87.4448, -53.6506, 8.15222, 0.37 ) }
    dend_48 { pt3dadd( -88.2388, -54.0348, 8.3566, 0.29 ) }
    dend_48 { pt3dadd( -88.9969, -54.4594, 8.56332, 0.29 ) }
    dend_48 { pt3dadd( -89.5751, -54.8308, 8.72647, 0.29 ) }
    dend_48 { pt3dadd( -89.9766, -55.1025, 8.83771, 0.29 ) }
    dend_48 { pt3dadd( -90.6031, -55.5136, 9.00813, 0.29 ) }
    dend_48 { pt3dadd( -91.2227, -55.8655, 9.1686, 0.44 ) }
    dend_48 { pt3dadd( -92.0776, -56.2965, 9.39144, 0.44 ) }
    dend_48 { pt3dadd( -92.5285, -56.5406, 9.52986, 0.44 ) }
    dend_48 { pt3dadd( -93.1826, -56.9478, 9.76557, 0.66 ) }
    dend_48 { pt3dadd( -93.8308, -57.4427, 10.0442, 0.66 ) }
    dend_48 { pt3dadd( -94.1597, -57.7735, 10.2235, 0.52 ) }
    dend_48 { pt3dadd( -94.7054, -58.5777, 10.6712, 0.44 ) }
    dend_48 { pt3dadd( -94.9055, -59.1455, 10.9849, 0.66 ) }
    dend_48 { pt3dadd( -94.9993, -59.7404, 11.312, 0.66 ) }
    dend_48 { pt3dadd( -95.0452, -60.4286, 11.6865, 0.52 ) }
    dend_48 { pt3dadd( -95.0986, -61.342, 12.1916, 0.52 ) }
    dend_48 { pt3dadd( -95.1182, -62.1758, 12.6414, 0.44 ) }
    dend_48 { pt3dadd( -95.1136, -62.9074, 13.0294, 0.37 ) }
    dend_48 { pt3dadd( -95.1486, -64.0436, 13.6317, 0.37 ) }
    dend_48 { pt3dadd( -95.2227, -64.9388, 14.1253, 0.29 ) }
    dend_48 { pt3dadd( -95.3801, -65.8437, 14.6772, 0.29 ) }
    dend_48 { pt3dadd( -101.591, -71.8849, 16.3285, 0.29 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 26/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -81.8344, -50.8365, 5.97368, 1.11 ) }
    dend_45 { pt3dadd( -82.8706, -51.2419, 6.14817, 1.11 ) }
    dend_45 { pt3dadd( -83.6751, -51.6302, 6.27318, 1.11 ) }
    dend_45 { pt3dadd( -85.3056, -52.4732, 6.53954, 0.88 ) }
    dend_45 { pt3dadd( -86.5489, -53.0806, 6.73707, 0.88 ) }
    dend_45 { pt3dadd( -88.4409, -53.9299, 7.02433, 0.88 ) }
    dend_45 { pt3dadd( -90.4151, -54.7347, 7.2971, 0.88 ) }
    dend_45 { pt3dadd( -91.4968, -55.1695, 7.44294, 0.88 ) }
    dend_45 { pt3dadd( -92.5014, -55.5651, 7.55043, 0.81 ) }
    dend_45 { pt3dadd( -93.6291, -55.9951, 7.63894, 0.81 ) }
    dend_45 { pt3dadd( -94.4444, -56.2744, 7.69347, 0.81 ) }
    dend_45 { pt3dadd( -95.8939, -56.7203, 7.78711, 0.96 ) }
    dend_45 { pt3dadd( -96.6503, -56.9771, 7.83238, 0.96 ) }
    dend_45 { pt3dadd( -97.4208, -57.3202, 7.86747, 0.96 ) }
    dend_45 { pt3dadd( -98.1475, -57.7637, 7.88572, 0.96 ) }
    dend_45 { pt3dadd( -99.0923, -58.4602, 7.9066, 0.96 ) }
    dend_45 { pt3dadd( -99.4063, -58.7047, 7.90722, 0.96 ) }
    dend_45 { pt3dadd( -100.366, -59.4379, 7.87952, 0.88 ) }
    dend_45 { pt3dadd( -101.57, -60.2502, 7.79887, 0.88 ) }
    dend_45 { pt3dadd( -102.432, -60.8097, 7.7271, 1.11 ) }
    dend_45 { pt3dadd( -103.302, -61.3767, 7.6508, 1.11 ) }
    dend_45 { pt3dadd( -104.306, -62.0591, 7.54511, 0.96 ) }
    dend_45 { pt3dadd( -105.156, -62.6857, 7.486, 0.96 ) }
    dend_45 { pt3dadd( -106.323, -63.6281, 7.45518, 0.88 ) }
    dend_45 { pt3dadd( -107.661, -64.815, 7.41761, 0.88 ) }
    dend_45 { pt3dadd( -108.689, -65.7799, 7.34213, 0.96 ) }
    dend_45 { pt3dadd( -109.509, -66.5678, 7.24303, 0.96 ) }
    dend_45 { pt3dadd( -110.677, -67.6587, 7.05934, 0.88 ) }
    dend_45 { pt3dadd( -111.23, -68.15, 6.93991, 0.74 ) }
    dend_45 { pt3dadd( -112.471, -69.1861, 6.61169, 0.96 ) }
    dend_45 { pt3dadd( -113.571, -70.0165, 6.29794, 1.11 ) }
    dend_45 { pt3dadd( -114.467, -70.6578, 6.05342, 1.25 ) }
    dend_45 { pt3dadd( -115.247, -71.2139, 5.8645, 1.25 ) }
    dend_45 { pt3dadd( -116.505, -72.1286, 5.59254, 1.03 ) }
    dend_45 { pt3dadd( -118.207, -73.4327, 5.33282, 0.88 ) }
    dend_45 { pt3dadd( -119.443, -74.4623, 5.21873, 0.88 ) }
    dend_45 { pt3dadd( -120.69, -75.5704, 5.13736, 0.88 ) }
    dend_45 { pt3dadd( -121.729, -76.5074, 5.06848, 0.88 ) }
    dend_45 { pt3dadd( -122.734, -77.3752, 4.99883, 1.33 ) }
    dend_45 { pt3dadd( -123.526, -77.9921, 4.94699, 1.33 ) }
    dend_45 { pt3dadd( -124.471, -78.6779, 4.87386, 1.18 ) }
    dend_45 { pt3dadd( -125.136, -79.1332, 4.81286, 0.96 ) }
    dend_45 { pt3dadd( -126.335, -79.8932, 4.70823, 0.96 ) }
    dend_45 { pt3dadd( -127.444, -80.5147, 4.62233, 0.96 ) }
    dend_45 { pt3dadd( -128.941, -81.2326, 4.54414, 0.88 ) }
    dend_45 { pt3dadd( -130.243, -81.7171, 4.52222, 0.81 ) }
    dend_45 { pt3dadd( -130.98, -81.9146, 4.54357, 0.81 ) }
    dend_45 { pt3dadd( -131.84, -82.1092, 4.59065, 0.74 ) }
    dend_45 { pt3dadd( -132.478, -82.2732, 4.63945, 0.74 ) }
    dend_45 { pt3dadd( -133.29, -82.5506, 4.71815, 0.74 ) }
    dend_45 { pt3dadd( -134.451, -83.0972, 4.85199, 0.74 ) }
    dend_45 { pt3dadd( -135.095, -83.5364, 4.93201, 1.11 ) }
    dend_45 { pt3dadd( -136.071, -84.4822, 5.0561, 1.11 ) }
    dend_45 { pt3dadd( -137.261, -85.9054, 5.19755, 0.88 ) }
    dend_45 { pt3dadd( -138.029, -86.9667, 5.28921, 0.88 ) }
    dend_45 { pt3dadd( -138.615, -87.8598, 5.35753, 0.88 ) }
    dend_45 { pt3dadd( -139.421, -89.1068, 5.44373, 0.81 ) }
    dend_45 { pt3dadd( -140.531, -90.7228, 5.49978, 0.81 ) }
    dend_45 { pt3dadd( -141.102, -91.4831, 5.50056, 1.18 ) }
    dend_45 { pt3dadd( -141.731, -92.3005, 5.46386, 1.33 ) }
    dend_45 { pt3dadd( -142.414, -93.1297, 5.39486, 1.33 ) }
    dend_45 { pt3dadd( -143.536, -94.3789, 5.24924, 0.88 ) }
    dend_45 { pt3dadd( -144.651, -95.5231, 5.06018, 0.81 ) }
    dend_45 { pt3dadd( -145.822, -96.6358, 4.84827, 0.81 ) }
    dend_45 { pt3dadd( -147.213, -97.8981, 4.56889, 0.81 ) }
    dend_45 { pt3dadd( -148.267, -98.8191, 4.32097, 0.81 ) }
    dend_45 { pt3dadd( -149.26, -99.6642, 4.07472, 1.11 ) }
    dend_45 { pt3dadd( -149.862, -100.172, 3.91641, 1.25 ) }
    dend_45 { pt3dadd( -150.583, -100.776, 3.72789, 2.14 ) }
    dend_45 { pt3dadd( -151.276, -101.394, 3.52552, 2.5 ) }
    dend_45 { pt3dadd( -152.226, -102.228, 3.24678, 1.92 ) }
    dend_45 { pt3dadd( -153.587, -103.603, 2.79614, 1.11 ) }
    dend_45 { pt3dadd( -154.167, -104.27, 2.58556, 0.96 ) }
    dend_45 { pt3dadd( -154.959, -105.268, 2.2909, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_45 { pt3dadd( -155.968, -106.616, 1.8627, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -12.6072, -112.561, -3.95264, 0.37 ) }
    dend_41 { pt3dadd( -12.3352, -114.67, -2.7429, 0.37 ) }
    dend_41 { pt3dadd( -12.2352, -115.216, -2.44257, 0.52 ) }
    dend_41 { pt3dadd( -12.0936, -115.886, -2.09738, 0.66 ) }
    dend_41 { pt3dadd( -11.9275, -116.651, -1.72276, 0.37 ) }
    dend_41 { pt3dadd( -11.7977, -117.217, -1.4513, 0.44 ) }
    dend_41 { pt3dadd( -11.6401, -117.876, -1.14384, 0.44 ) }
    dend_41 { pt3dadd( -11.4073, -118.666, -0.84715, 0.29 ) }
    dend_41 { pt3dadd( -11.1651, -119.407, -0.553293, 0.29 ) }
    dend_41 { pt3dadd( -10.9142, -120.031, -0.282412, 0.59 ) }
    dend_41 { pt3dadd( -10.6422, -120.569, -0.0356425, 0.59 ) }
    dend_41 { pt3dadd( -10.292, -121.133, 0.23851, 0.37 ) }
    dend_41 { pt3dadd( -9.89707, -121.666, 0.508624, 0.66 ) }
    dend_41 { pt3dadd( -9.4991, -122.118, 0.754071, 0.52 ) }
    dend_41 { pt3dadd( -8.87407, -122.725, 1.10085, 0.37 ) }
    dend_41 { pt3dadd( -8.38411, -123.153, 1.34784, 0.37 ) }
    dend_41 { pt3dadd( -7.63449, -123.785, 1.6968, 0.37 ) }
    dend_41 { pt3dadd( -6.89482, -124.394, 2.01696, 1.03 ) }
    dend_41 { pt3dadd( -6.35039, -124.841, 2.23566, 1.18 ) }
    dend_41 { pt3dadd( -5.82962, -125.27, 2.42533, 0.81 ) }
    dend_41 { pt3dadd( -5.41399, -125.617, 2.56332, 0.52 ) }
    dend_41 { pt3dadd( -4.63604, -126.271, 2.82059, 0.52 ) }
    dend_41 { pt3dadd( -3.89766, -126.915, 3.06247, 0.59 ) }
    dend_41 { pt3dadd( -3.24594, -127.523, 3.25012, 0.59 ) }
    dend_41 { pt3dadd( -2.71158, -128.07, 3.38697, 0.81 ) }
    dend_41 { pt3dadd( -2.27595, -128.545, 3.4904, 0.81 ) }
    dend_41 { pt3dadd( -1.79545, -129.096, 3.59429, 0.66 ) }
    dend_41 { pt3dadd( -1.44731, -129.516, 3.66081, 0.29 ) }
    dend_41 { pt3dadd( -0.64953, -130.538, 3.79874, 0.52 ) }
    dend_41 { pt3dadd( 0.0305175, -131.428, 3.91069, 1.03 ) }
    dend_41 { pt3dadd( 0.275375, -131.754, 3.94617, 1.47 ) }
    dend_41 { pt3dadd( 0.725434, -132.324, 4.00928, 1.62 ) }
    dend_41 { pt3dadd( 1.33542, -133.016, 4.0962, 1.03 ) }
    dend_41 { pt3dadd( 1.92486, -133.615, 4.19941, 0.29 ) }
    dend_41 { pt3dadd( 2.49365, -134.136, 4.32082, 0.29 ) }
    dend_41 { pt3dadd( 3.16246, -134.698, 4.46459, 0.37 ) }
    dend_41 { pt3dadd( 3.85932, -135.276, 4.61498, 0.66 ) }
    dend_41 { pt3dadd( 4.21731, -135.57, 4.69705, 0.81 ) }
    dend_41 { pt3dadd( 4.77971, -136.022, 4.8417, 0.96 ) }
    dend_41 { pt3dadd( 5.20149, -136.357, 4.96109, 0.44 ) }
    dend_41 { pt3dadd( 5.53311, -136.619, 5.06631, 0.29 ) }
    dend_41 { pt3dadd( 6.16747, -137.114, 5.29483, 0.29 ) }
    dend_41 { pt3dadd( 6.6406, -137.527, 5.47497, 0.59 ) }
    dend_41 { pt3dadd( 7.08771, -137.971, 5.65455, 0.74 ) }
    dend_41 { pt3dadd( 7.44102, -138.364, 5.80213, 0.74 ) }
    dend_41 { pt3dadd( 7.9093, -138.949, 6.00162, 0.74 ) }
    dend_41 { pt3dadd( 8.28186, -139.461, 6.15664, 0.44 ) }
    dend_41 { pt3dadd( 8.774, -140.195, 6.35704, 0.29 ) }
    dend_41 { pt3dadd( 9.06463, -140.655, 6.46922, 0.66 ) }
    dend_41 { pt3dadd( 9.42839, -141.241, 6.59939, 0.88 ) }
    dend_41 { pt3dadd( 9.76993, -141.783, 6.71617, 0.96 ) }
    dend_41 { pt3dadd( 10.2604, -142.542, 6.89135, 0.66 ) }
    dend_41 { pt3dadd( 10.7645, -143.32, 7.07773, 0.37 ) }
    dend_41 { pt3dadd( 11.3623, -144.197, 7.30538, 0.74 ) }
    dend_41 { pt3dadd( 11.696, -144.672, 7.43418, 0.81 ) }
    dend_41 { pt3dadd( 12.0794, -145.227, 7.58685, 0.37 ) }
    dend_41 { pt3dadd( 12.5876, -146.002, 7.79529, 0.37 ) }
    dend_41 { pt3dadd( 13.0208, -146.697, 7.97636, 0.37 ) }
    dend_41 { pt3dadd( 13.3793, -147.293, 8.12521, 0.37 ) }
    dend_41 { pt3dadd( 13.6667, -147.792, 8.24172, 0.52 ) }
    dend_41 { pt3dadd( 14.0127, -148.382, 8.3726, 0.52 ) }
    dend_41 { pt3dadd( 14.3747, -148.983, 8.49717, 0.37 ) }
    dend_41 { pt3dadd( 14.751, -149.615, 8.61146, 0.37 ) }
    dend_41 { pt3dadd( 15.1935, -150.337, 8.7453, 0.81 ) }
    dend_41 { pt3dadd( 15.464, -150.733, 8.82764, 0.88 ) }
    dend_41 { pt3dadd( 15.9309, -151.34, 8.9695, 0.59 ) }
    dend_41 { pt3dadd( 16.3382, -151.826, 9.09511, 0.37 ) }
    dend_41 { pt3dadd( 16.7576, -152.286, 9.22522, 0.37 ) }
    dend_41 { pt3dadd( 17.2948, -152.841, 9.39727, 0.44 ) }
    dend_41 { pt3dadd( 18.4, -153.905, 9.76037, 0.44 ) }
    dend_41 { pt3dadd( 19.1278, -154.527, 10.0031, 1.18 ) }
    dend_41 { pt3dadd( 19.6772, -154.963, 10.1904, 1.47 ) }
    dend_41 { pt3dadd( 20.2904, -155.42, 10.3901, 1.47 ) }
    dend_41 { pt3dadd( 21.1995, -156.086, 10.6709, 1.18 ) }
    dend_41 { pt3dadd( 21.9106, -156.637, 10.8707, 0.29 ) }
    dend_41 { pt3dadd( 22.357, -157.01, 10.9808, 0.29 ) }
    dend_41 { pt3dadd( 22.7017, -157.315, 11.0479, 0.29 ) }
    dend_41 { pt3dadd( 23.3334, -157.912, 11.1182, 0.59 ) }
    dend_41 { pt3dadd( 23.957, -158.559, 11.1402, 0.66 ) }
    dend_41 { pt3dadd( 24.3079, -158.964, 11.1217, 0.74 ) }
    dend_41 { pt3dadd( 24.6707, -159.435, 11.085, 0.59 ) }
    dend_41 { pt3dadd( 25.0691, -160.014, 11.0333, 0.44 ) }
    dend_41 { pt3dadd( 25.5462, -160.754, 10.9577, 0.29 ) }
    dend_41 { pt3dadd( 25.824, -161.252, 10.9038, 0.37 ) }
    dend_41 { pt3dadd( 26.2296, -162.087, 10.8058, 0.52 ) }
    dend_41 { pt3dadd( 26.493, -162.724, 10.7463, 1.03 ) }
    dend_41 { pt3dadd( 26.7474, -163.39, 10.6789, 1.55 ) }
    dend_41 { pt3dadd( 26.9646, -163.967, 10.6286, 1.55 ) }
    dend_41 { pt3dadd( 27.5029, -165.422, 10.5036, 0.44 ) }
    dend_41 { pt3dadd( 27.8757, -166.372, 10.4177, 0.37 ) }
    dend_41 { pt3dadd( 28.8442, -168.498, 10.2044, 0.29 ) }
    dend_41 { pt3dadd( 29.0931, -168.951, 10.1604, 0.29 ) }
    dend_41 { pt3dadd( 29.8811, -170.122, 10.0691, 1.47 ) }
    dend_41 { pt3dadd( 30.2066, -170.504, 10.0471, 1.92 ) }
    dend_41 { pt3dadd( 30.8804, -171.122, 10.0149, 2.06 ) }
    dend_41 { pt3dadd( 31.9346, -171.892, 9.93855, 0.81 ) }
    dend_41 { pt3dadd( 33.3551, -172.716, 9.78091, 0.29 ) }
    dend_41 { pt3dadd( 34.265, -173.205, 9.65699, 0.29 ) }
    dend_41 { pt3dadd( 35.455, -173.824, 9.50373, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 36.0309, -174.132, 9.45075, 0.52 ) }
    dend_41 { pt3dadd( 37.3693, -174.888, 9.39396, 0.29 ) }
    dend_41 { pt3dadd( 38.3233, -175.471, 9.42603, 0.88 ) }
    dend_41 { pt3dadd( 38.8518, -175.827, 9.50752, 0.74 ) }
    dend_41 { pt3dadd( 40.0082, -176.737, 9.89566, 0.29 ) }
    dend_41 { pt3dadd( 40.7619, -177.4, 10.2971, 0.29 ) }
    dend_41 { pt3dadd( 41.4599, -178.063, 10.7724, 0.59 ) }
    dend_41 { pt3dadd( 41.8905, -178.501, 11.1234, 0.66 ) }
    dend_41 { pt3dadd( 42.6883, -179.352, 11.8228, 0.29 ) }
    dend_41 { pt3dadd( 43.4841, -180.245, 12.5178, 0.29 ) }
    dend_41 { pt3dadd( 44.0149, -180.889, 12.9376, 0.29 ) }
    dend_41 { pt3dadd( 44.5079, -181.557, 13.2932, 1.03 ) }
    dend_41 { pt3dadd( 44.8746, -182.081, 13.5232, 1.47 ) }
    dend_41 { pt3dadd( 45.2179, -182.588, 13.6996, 1.18 ) }
    dend_41 { pt3dadd( 45.8682, -183.579, 13.9632, 0.22 ) }
    dend_41 { pt3dadd( 46.46, -184.496, 14.1707, 0.22 ) }
    dend_41 { pt3dadd( 47.228, -185.68, 14.4048, 0.22 ) }
    dend_41 { pt3dadd( 47.558, -186.167, 14.5031, 0.52 ) }
    dend_41 { pt3dadd( 48.1313, -186.983, 14.6701, 0.29 ) }
    dend_41 { pt3dadd( 48.6795, -187.736, 14.8208, 0.29 ) }
    dend_41 { pt3dadd( 49.0342, -188.192, 14.9064, 0.88 ) }
    dend_41 { pt3dadd( 49.5132, -188.803, 15.0432, 0.88 ) }
    dend_41 { pt3dadd( 50.2099, -189.726, 15.2632, 0.29 ) }
    dend_41 { pt3dadd( 50.5192, -190.152, 15.38, 0.29 ) }
    dend_41 { pt3dadd( 51.0376, -190.885, 15.6376, 0.96 ) }
    dend_41 { pt3dadd( 51.3814, -191.367, 15.8639, 1.4 ) }
    dend_41 { pt3dadd( 51.7305, -191.855, 16.1384, 1.77 ) }
    dend_41 { pt3dadd( 51.9427, -192.14, 16.327, 1.77 ) }
    dend_41 { pt3dadd( 52.7695, -193.196, 17.0864, 0.22 ) }
    dend_41 { pt3dadd( 53.6074, -194.207, 17.8954, 0.22 ) }
    dend_41 { pt3dadd( 54.2744, -194.937, 18.5266, 0.88 ) }
    dend_41 { pt3dadd( 54.5817, -195.253, 18.8014, 1.33 ) }
    dend_41 { pt3dadd( 54.9084, -195.567, 19.0626, 1.33 ) }
    dend_41 { pt3dadd( 55.6695, -196.262, 19.6325, 0.22 ) }
    dend_41 { pt3dadd( 56.6374, -197.102, 20.2931, 0.22 ) }
    dend_41 { pt3dadd( 57.6954, -198.01, 20.9329, 0.22 ) }
    dend_41 { pt3dadd( 58.6813, -198.877, 21.4582, 0.22 ) }
    dend_41 { pt3dadd( 59.2636, -199.406, 21.7432, 0.74 ) }
    dend_41 { pt3dadd( 59.5815, -199.71, 21.8855, 0.88 ) }
    dend_41 { pt3dadd( 59.9602, -200.098, 22.0329, 0.52 ) }
    dend_41 { pt3dadd( 60.6395, -200.881, 22.2445, 0.22 ) }
    dend_41 { pt3dadd( 60.982, -201.328, 22.3378, 0.88 ) }
    dend_41 { pt3dadd( 61.3517, -201.855, 22.4437, 1.33 ) }
    dend_41 { pt3dadd( 61.6385, -202.291, 22.5346, 1.33 ) }
    dend_41 { pt3dadd( 62.2911, -203.359, 22.7632, 0.29 ) }
    dend_41 { pt3dadd( 63.0252, -204.665, 23.0606, 0.29 ) }
    dend_41 { pt3dadd( 63.3657, -205.313, 23.2259, 0.44 ) }
    dend_41 { pt3dadd( 63.6501, -205.881, 23.3888, 0.59 ) }
    dend_41 { pt3dadd( 63.9002, -206.401, 23.5534, 0.59 ) }
    dend_41 { pt3dadd( 64.2878, -207.232, 23.8402, 0.22 ) }
    dend_41 { pt3dadd( 64.6719, -208.084, 24.1463, 0.22 ) }
    dend_41 { pt3dadd( 64.9113, -208.604, 24.3361, 0.74 ) }
    dend_41 { pt3dadd( 65.0592, -208.914, 24.4449, 0.88 ) }
    dend_41 { pt3dadd( 65.2663, -209.312, 24.5744, 0.88 ) }
    dend_41 { pt3dadd( 65.6849, -210.089, 24.8287, 0.22 ) }
    dend_41 { pt3dadd( 66.444, -211.409, 25.255, 0.22 ) }
    dend_41 { pt3dadd( 66.7942, -211.988, 25.4272, 0.52 ) }
    dend_41 { pt3dadd( 67.0278, -212.367, 25.5275, 0.66 ) }
    dend_41 { pt3dadd( 67.3999, -212.956, 25.6727, 0.44 ) }
    dend_41 { pt3dadd( 73.6881, -219.06, 26.5571, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -12.6072, -112.561, -3.95264, 2.28 ) }
    dend_34 { pt3dadd( -13.0809, -113.48, -3.7586, 2.28 ) }
    dend_34 { pt3dadd( -13.526, -114.266, -3.54352, 1.62 ) }
    dend_34 { pt3dadd( -14.0959, -115.198, -3.27747, 1.33 ) }
    dend_34 { pt3dadd( -14.6681, -116.073, -3.03695, 0.88 ) }
    dend_34 { pt3dadd( -14.9489, -116.476, -2.93157, 0.88 ) }
    dend_34 { pt3dadd( -15.3951, -117.066, -2.78245, 1.03 ) }
    dend_34 { pt3dadd( -16.2867, -118.117, -2.52563, 1.03 ) }
    dend_34 { pt3dadd( -17.0573, -118.918, -2.33927, 0.96 ) }
    dend_34 { pt3dadd( -17.6707, -119.494, -2.22761, 0.88 ) }
    dend_34 { pt3dadd( -18.197, -119.984, -2.16781, 1.11 ) }
    dend_34 { pt3dadd( -18.7754, -120.578, -2.15314, 1.33 ) }
    dend_34 { pt3dadd( -19.2314, -121.146, -2.1923, 1.55 ) }
    dend_34 { pt3dadd( -19.5982, -121.727, -2.27927, 1.25 ) }
    dend_34 { pt3dadd( -19.866, -122.317, -2.39639, 0.96 ) }
    dend_34 { pt3dadd( -20.0993, -123.132, -2.57672, 0.88 ) }
    dend_34 { pt3dadd( -20.2769, -124.148, -2.82047, 0.88 ) }
    dend_34 { pt3dadd( -20.3917, -125.235, -3.08312, 0.88 ) }
    dend_34 { pt3dadd( -20.4568, -126.193, -3.30911, 1.03 ) }
    dend_34 { pt3dadd( -20.4924, -127.089, -3.51097, 1.03 ) }
    dend_34 { pt3dadd( -20.521, -128.145, -3.72677, 1.03 ) }
    dend_34 { pt3dadd( -20.5374, -129.108, -3.90115, 1.25 ) }
    dend_34 { pt3dadd( -20.537, -130.219, -4.06751, 1.55 ) }
    dend_34 { pt3dadd( -20.5132, -131.07, -4.16682, 1.55 ) }
    dend_34 { pt3dadd( -20.4387, -132.245, -4.27252, 1.33 ) }
    dend_34 { pt3dadd( -20.3543, -133.205, -4.34072, 1.33 ) }
    dend_34 { pt3dadd( -20.2804, -134.063, -4.39016, 1.11 ) }
    dend_34 { pt3dadd( -20.1938, -134.982, -4.4014, 1.11 ) }
    dend_34 { pt3dadd( -20.1175, -135.992, -4.37819, 0.96 ) }
    dend_34 { pt3dadd( -20.0871, -136.742, -4.33938, 0.96 ) }
    dend_34 { pt3dadd( -20.0834, -137.828, -4.2399, 0.88 ) }
    dend_34 { pt3dadd( -20.1205, -139.261, -4.06972, 0.88 ) }
    dend_34 { pt3dadd( -20.1826, -140.503, -3.88795, 1.03 ) }
    dend_34 { pt3dadd( -20.2598, -141.608, -3.70019, 1.25 ) }
    dend_34 { pt3dadd( -20.3542, -142.658, -3.50472, 1.33 ) }
    dend_34 { pt3dadd( -20.4416, -143.485, -3.34148, 1.62 ) }
    dend_34 { pt3dadd( -20.5236, -144.335, -3.16274, 2.5 ) }
    dend_34 { pt3dadd( -20.5514, -144.797, -3.06795, 2.8 ) }
    dend_34 { pt3dadd( -20.5744, -145.368, -2.97921, 3.02 ) }
    dend_34 { pt3dadd( -20.5714, -145.905, -2.89335, 3.02 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( -20.5653, -146.264, -2.8379, 3.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -2.22574, -50.0674, -7.16123, 0.81 ) }
    dend_30 { pt3dadd( -2.5316, -51.8873, -7.02496, 0.81 ) }
    dend_30 { pt3dadd( -2.82414, -53.1146, -6.85961, 0.66 ) }
    dend_30 { pt3dadd( -3.23865, -54.4884, -6.63321, 0.66 ) }
    dend_30 { pt3dadd( -3.72982, -55.9287, -6.37922, 0.52 ) }
    dend_30 { pt3dadd( -3.93512, -56.5044, -6.27669, 0.52 ) }
    dend_30 { pt3dadd( -4.4809, -58.021, -6.01092, 0.74 ) }
    dend_30 { pt3dadd( -5.00957, -59.563, -5.67587, 0.74 ) }
    dend_30 { pt3dadd( -5.48691, -60.8393, -5.40237, 0.88 ) }
    dend_30 { pt3dadd( -6.0596, -62.2238, -5.12792, 0.59 ) }
    dend_30 { pt3dadd( -6.4461, -63.1262, -4.98431, 1.03 ) }
    dend_30 { pt3dadd( -6.79806, -64.0111, -4.85944, 1.25 ) }
    dend_30 { pt3dadd( -7.13496, -65.0498, -4.73444, 1.03 ) }
    dend_30 { pt3dadd( -7.47598, -66.3889, -4.60144, 0.66 ) }
    dend_30 { pt3dadd( -7.72736, -67.4805, -4.50454, 0.66 ) }
    dend_30 { pt3dadd( -7.98868, -68.6069, -4.42266, 0.81 ) }
    dend_30 { pt3dadd( -8.28197, -69.925, -4.36976, 0.81 ) }
    dend_30 { pt3dadd( -8.4949, -71.0271, -4.38412, 0.66 ) }
    dend_30 { pt3dadd( -8.66329, -72.1928, -4.46818, 0.52 ) }
    dend_30 { pt3dadd( -8.74188, -72.884, -4.56856, 0.52 ) }
    dend_30 { pt3dadd( -8.83296, -73.7309, -4.71787, 0.52 ) }
    dend_30 { pt3dadd( -8.97649, -74.9378, -4.96073, 0.66 ) }
    dend_30 { pt3dadd( -9.12943, -76.0342, -5.18847, 0.66 ) }
    dend_30 { pt3dadd( -9.31994, -77.1933, -5.43445, 0.59 ) }
    dend_30 { pt3dadd( -9.55817, -78.4648, -5.68601, 1.18 ) }
    dend_30 { pt3dadd( -9.75386, -79.5721, -5.89593, 1.55 ) }
    dend_30 { pt3dadd( -9.96006, -80.6316, -6.06963, 1.99 ) }
    dend_30 { pt3dadd( -10.2979, -81.9156, -6.23028, 2.73 ) }
    dend_30 { pt3dadd( -10.6151, -82.8662, -6.31244, 2.87 ) }
    dend_30 { pt3dadd( -10.9648, -83.7536, -6.37884, 3.02 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -2.22574, -50.0674, -7.16123, 0.52 ) }
    dend_29 { pt3dadd( -1.32331, -51.4365, -8.23785, 0.52 ) }
    dend_29 { pt3dadd( -1.12927, -51.7586, -8.46203, 0.52 ) }
    dend_29 { pt3dadd( -0.45976, -52.824, -9.19645, 0.52 ) }
    dend_29 { pt3dadd( 0.0795979, -53.6156, -9.73797, 0.66 ) }
    dend_29 { pt3dadd( 0.429232, -54.1008, -10.0472, 0.66 ) }
    dend_29 { pt3dadd( 0.746644, -54.5114, -10.2949, 0.44 ) }
    dend_29 { pt3dadd( 1.13921, -55.0764, -10.643, 0.88 ) }
    dend_29 { pt3dadd( 1.48423, -55.6065, -10.9359, 1.33 ) }
    dend_29 { pt3dadd( 1.85429, -56.1776, -11.2118, 1.47 ) }
    dend_29 { pt3dadd( 2.29683, -56.8392, -11.6047, 1.03 ) }
    dend_29 { pt3dadd( 2.88696, -57.8626, -12.3674, 0.44 ) }
    dend_29 { pt3dadd( 3.09857, -58.479, -12.9969, 0.44 ) }
    dend_29 { pt3dadd( 3.20169, -59.1768, -13.9744, 0.37 ) }
    dend_29 { pt3dadd( 3.22839, -59.6791, -14.8318, 0.37 ) }
    dend_29 { pt3dadd( 3.30909, -60.3248, -16.1074, 0.37 ) }
    dend_29 { pt3dadd( 3.42527, -60.7499, -17.059, 0.74 ) }
    dend_29 { pt3dadd( 3.56461, -61.0416, -17.7626, 0.96 ) }
    dend_29 { pt3dadd( 3.83565, -61.4513, -18.7055, 0.96 ) }
    dend_29 { pt3dadd( 4.38817, -62.1991, -20.3297, 0.44 ) }
    dend_29 { pt3dadd( 4.80034, -62.7164, -21.3399, 1.33 ) }
    dend_29 { pt3dadd( 5.37624, -63.4295, -22.5879, 1.55 ) }
    dend_29 { pt3dadd( 5.89116, -64.086, -23.6694, 1.33 ) }
    dend_29 { pt3dadd( 6.56039, -64.982, -25.014, 0.81 ) }
    dend_29 { pt3dadd( 6.83736, -65.3664, -25.5258, 1.25 ) }
    dend_29 { pt3dadd( 7.17725, -65.8437, -26.0694, 0.88 ) }
    dend_29 { pt3dadd( 7.51711, -66.3792, -26.586, 0.37 ) }
    dend_29 { pt3dadd( 7.78088, -66.8505, -26.9561, 0.81 ) }
    dend_29 { pt3dadd( 8.03426, -67.355, -27.3017, 1.03 ) }
    dend_29 { pt3dadd( 8.18904, -67.659, -27.4796, 1.03 ) }
    dend_29 { pt3dadd( 8.75573, -68.7149, -28.051, 0.29 ) }
    dend_29 { pt3dadd( 9.05201, -69.2519, -28.3141, 0.29 ) }
    dend_29 { pt3dadd( 9.4616, -69.9493, -28.6125, 1.84 ) }
    dend_29 { pt3dadd( 9.85269, -70.539, -28.8522, 2.14 ) }
    dend_29 { pt3dadd( 10.9497, -72.0001, -29.4591, 0.29 ) }
    dend_29 { pt3dadd( 11.5181, -72.673, -29.7356, 0.81 ) }
    dend_29 { pt3dadd( 12.0946, -73.2805, -29.9766, 0.81 ) }
    dend_29 { pt3dadd( 12.6999, -73.8497, -30.2114, 0.52 ) }
    dend_29 { pt3dadd( 13.5392, -74.5552, -30.5415, 1.25 ) }
    dend_29 { pt3dadd( 14.0947, -74.9857, -30.7688, 1.4 ) }
    dend_29 { pt3dadd( 15.5263, -76.0529, -31.3531, 0.22 ) }
    dend_29 { pt3dadd( 16.402, -76.7029, -31.6845, 0.22 ) }
    dend_29 { pt3dadd( 17.3843, -77.4455, -32.0271, 1.4 ) }
    dend_29 { pt3dadd( 17.9911, -77.9377, -32.2222, 2.21 ) }
    dend_29 { pt3dadd( 18.2633, -78.1807, -32.2966, 2.21 ) }
    dend_29 { pt3dadd( 19.992, -79.8893, -32.6885, 0.22 ) }
    dend_29 { pt3dadd( 20.4505, -80.3698, -32.7827, 0.74 ) }
    dend_29 { pt3dadd( 20.8563, -80.8146, -32.8728, 1.03 ) }
    dend_29 { pt3dadd( 21.5107, -81.5832, -33.0292, 0.59 ) }
    dend_29 { pt3dadd( 23.0354, -83.4771, -33.4114, 0.22 ) }
    dend_29 { pt3dadd( 24.9744, -85.9372, -33.9378, 0.22 ) }
    dend_29 { pt3dadd( 25.6587, -86.8114, -34.1557, 0.81 ) }
    dend_29 { pt3dadd( 26.1697, -87.4577, -34.3296, 0.96 ) }
    dend_29 { pt3dadd( 27.8399, -89.564, -34.94, 0.22 ) }
    dend_29 { pt3dadd( 28.8974, -90.8652, -35.3658, 0.22 ) }
    dend_29 { pt3dadd( 29.4918, -91.5844, -35.6413, 0.88 ) }
    dend_29 { pt3dadd( 30.089, -92.2824, -35.9527, 0.88 ) }
    dend_29 { pt3dadd( 31.7852, -94.2337, -36.8755, 0.15 ) }
    dend_29 { pt3dadd( 33.054, -95.6606, -37.5117, 0.15 ) }
    dend_29 { pt3dadd( 33.7967, -96.468, -37.8749, 0.15 ) }
    dend_29 { pt3dadd( 34.4688, -97.2036, -38.1961, 1.62 ) }
    dend_29 { pt3dadd( 34.8842, -97.6775, -38.3886, 1.92 ) }
    dend_29 { pt3dadd( 35.2074, -98.0577, -38.5195, 1.92 ) }
    dend_29 { pt3dadd( 37.2738, -100.584, -39.285, 0.22 ) }
    dend_29 { pt3dadd( 37.7096, -101.124, -39.4241, 0.66 ) }
    dend_29 { pt3dadd( 38.0382, -101.543, -39.5227, 0.88 ) }
    dend_29 { pt3dadd( 38.376, -101.971, -39.6255, 0.88 ) }
    dend_29 { pt3dadd( 39.4868, -103.367, -40.074, 0.15 ) }
    dend_29 { pt3dadd( 40.3473, -104.496, -40.5839, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_29 { pt3dadd( 40.8288, -105.181, -40.9764, 0.81 ) }
    dend_29 { pt3dadd( 41.131, -105.669, -41.2818, 1.03 ) }
    dend_29 { pt3dadd( 41.3685, -106.11, -41.577, 1.03 ) }
    dend_29 { pt3dadd( 42.037, -107.588, -42.6469, 0.22 ) }
    dend_29 { pt3dadd( 42.6142, -109.187, -43.9081, 0.22 ) }
    dend_29 { pt3dadd( 42.8341, -109.836, -44.4666, 0.22 ) }
    dend_29 { pt3dadd( 43.1513, -110.776, -45.3277, 1.03 ) }
    dend_29 { pt3dadd( 43.3195, -111.265, -45.7792, 1.62 ) }
    dend_29 { pt3dadd( 43.4976, -111.758, -46.2614, 1.62 ) }
    dend_29 { pt3dadd( 43.8304, -112.592, -47.1245, 1.03 ) }
    dend_29 { pt3dadd( 44.5762, -114.3, -48.9719, 0.22 ) }
    dend_29 { pt3dadd( 44.9495, -115.1, -49.9353, 0.44 ) }
    dend_29 { pt3dadd( 45.1777, -115.54, -50.4904, 0.44 ) }
    dend_29 { pt3dadd( 45.6974, -116.511, -51.7208, 0.66 ) }
    dend_29 { pt3dadd( 45.9651, -117.001, -52.3199, 0.96 ) }
    dend_29 { pt3dadd( 46.2841, -117.567, -52.9934, 0.37 ) }
    dend_29 { pt3dadd( 47.3261, -119.382, -55.0515, 0.66 ) }
    dend_29 { pt3dadd( 47.552, -119.756, -55.4576, 0.66 ) }
    dend_29 { pt3dadd( 48.4081, -121.113, -56.9364, 0.22 ) }
    dend_29 { pt3dadd( 48.8817, -121.831, -57.6724, 0.22 ) }
    dend_29 { pt3dadd( 49.3238, -122.471, -58.3049, 0.81 ) }
    dend_29 { pt3dadd( 49.7597, -123.048, -58.8412, 0.96 ) }
    dend_29 { pt3dadd( 50.0479, -123.424, -59.0814, 0.96 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 10.7307, 117.232, -28.067, 0.37 ) }
    dend_24 { pt3dadd( 13.3362, 116.112, -25.7886, 0.37 ) }
    dend_24 { pt3dadd( 13.8679, 115.884, -25.3237, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 10.7307, 117.232, -28.067, 0.22 ) }
    dend_23 { pt3dadd( 12.0726, 119.758, -28.8535, 0.22 ) }
    dend_23 { pt3dadd( 12.7306, 121.141, -29.313, 0.22 ) }
    dend_23 { pt3dadd( 13.2224, 122.239, -29.6907, 0.74 ) }
    dend_23 { pt3dadd( 13.3945, 122.647, -29.8293, 0.74 ) }
    dend_23 { pt3dadd( 14.192, 124.539, -30.4715, 0.15 ) }
    dend_23 { pt3dadd( 14.708, 125.763, -30.8871, 0.15 ) }
    dend_23 { pt3dadd( 15.0241, 126.652, -31.2816, 0.66 ) }
    dend_23 { pt3dadd( 15.1938, 127.206, -31.4843, 0.88 ) }
    dend_23 { pt3dadd( 15.3946, 127.839, -31.6749, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 36/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -9.80278, 48.3697, 0.779028, 0.66 ) }
    dend_17 { pt3dadd( -10.1979, 50.2932, 0.512276, 0.66 ) }
    dend_17 { pt3dadd( -10.2858, 51.0227, 0.44478, 0.96 ) }
    dend_17 { pt3dadd( -10.3846, 51.8791, 0.382188, 0.96 ) }
    dend_17 { pt3dadd( -10.5116, 53.0497, 0.312251, 0.59 ) }
    dend_17 { pt3dadd( -10.6118, 54.0874, 0.259148, 0.59 ) }
    dend_17 { pt3dadd( -10.7103, 55.3147, 0.204153, 0.59 ) }
    dend_17 { pt3dadd( -10.8106, 57.1007, 0.184399, 0.59 ) }
    dend_17 { pt3dadd( -10.8307, 57.9436, 0.179492, 0.52 ) }
    dend_17 { pt3dadd( -10.8327, 59.2033, 0.178545, 0.88 ) }
    dend_17 { pt3dadd( -10.8347, 60.1161, 0.170816, 1.11 ) }
    dend_17 { pt3dadd( -10.86, 61.2046, 0.146495, 1.11 ) }
    dend_17 { pt3dadd( -10.9073, 62.4579, 0.119185, 0.74 ) }
    dend_17 { pt3dadd( -10.9877, 63.7715, 0.091095, 0.74 ) }
    dend_17 { pt3dadd( -11.1086, 65.4525, 0.0603349, 0.74 ) }
    dend_17 { pt3dadd( -11.2158, 66.6117, 0.0314093, 0.52 ) }
    dend_17 { pt3dadd( -11.3573, 67.8504, -0.0191175, 0.52 ) }
    dend_17 { pt3dadd( -11.4712, 68.7421, -0.0681001, 0.96 ) }
    dend_17 { pt3dadd( -11.6428, 70.0577, -0.17064, 1.11 ) }
    dend_17 { pt3dadd( -11.9031, 72.0076, -0.358509, 1.11 ) }
    dend_17 { pt3dadd( -12.0726, 73.2882, -0.500129, 1.11 ) }
    dend_17 { pt3dadd( -12.22, 74.5652, -0.630712, 0.81 ) }
    dend_17 { pt3dadd( -12.329, 75.6881, -0.736792, 0.74 ) }
    dend_17 { pt3dadd( -12.4148, 76.8589, -0.834874, 0.74 ) }
    dend_17 { pt3dadd( -12.4643, 77.9575, -0.908103, 0.44 ) }
    dend_17 { pt3dadd( -12.4985, 78.8873, -0.94951, 0.44 ) }
    dend_17 { pt3dadd( -12.5611, 80.4187, -0.972529, 0.74 ) }
    dend_17 { pt3dadd( -12.6039, 81.4765, -0.96519, 0.74 ) }
    dend_17 { pt3dadd( -12.6421, 82.6014, -0.947043, 0.37 ) }
    dend_17 { pt3dadd( -12.6467, 83.7696, -0.920159, 0.74 ) }
    dend_17 { pt3dadd( -12.6348, 84.7887, -0.937145, 0.96 ) }
    dend_17 { pt3dadd( -12.6096, 85.9561, -1.00597, 0.96 ) }
    dend_17 { pt3dadd( -12.5727, 87.2388, -1.15194, 0.81 ) }
    dend_17 { pt3dadd( -12.5258, 88.442, -1.32863, 0.52 ) }
    dend_17 { pt3dadd( -12.4591, 89.6986, -1.54551, 0.52 ) }
    dend_17 { pt3dadd( -12.326, 91.3469, -1.85762, 1.03 ) }
    dend_17 { pt3dadd( -12.2356, 92.2229, -2.03264, 1.55 ) }
    dend_17 { pt3dadd( -12.1455, 93.0145, -2.19881, 1.69 ) }
    dend_17 { pt3dadd( -12.0857, 93.5304, -2.30666, 1.69 ) }
    dend_17 { pt3dadd( -11.9313, 94.8067, -2.54931, 0.37 ) }
    dend_17 { pt3dadd( -11.7957, 95.8756, -2.70949, 0.44 ) }
    dend_17 { pt3dadd( -11.7026, 96.433, -2.75554, 0.44 ) }
    dend_17 { pt3dadd( -11.5746, 97.0758, -2.78812, 0.44 ) }
    dend_17 { pt3dadd( -11.3397, 98.1404, -2.81557, 0.29 ) }
    dend_17 { pt3dadd( -11.2234, 98.5932, -2.82422, 0.59 ) }
    dend_17 { pt3dadd( -10.9897, 99.3618, -2.83551, 0.44 ) }
    dend_17 { pt3dadd( -10.6066, 100.571, -2.84822, 0.29 ) }
    dend_17 { pt3dadd( -10.2707, 101.692, -2.85598, 1.18 ) }
    dend_17 { pt3dadd( -10.1017, 102.295, -2.85764, 1.18 ) }
    dend_17 { pt3dadd( -9.85537, 103.201, -2.86245, 0.52 ) }
    dend_17 { pt3dadd( -9.62083, 104.07, -2.86723, 0.29 ) }
    dend_17 { pt3dadd( -9.34598, 105.063, -2.84274, 0.29 ) }
    dend_17 { pt3dadd( -9.11527, 105.963, -2.76935, 0.29 ) }
    dend_17 { pt3dadd( -8.98507, 106.553, -2.69329, 0.29 ) }
    dend_17 { pt3dadd( -8.76692, 107.729, -2.50016, 0.81 ) }
    dend_17 { pt3dadd( -8.59516, 108.76, -2.30345, 0.44 ) }
    dend_17 { pt3dadd( -8.41188, 109.748, -2.12172, 0.22 ) }
    dend_17 { pt3dadd( -8.18036, 110.744, -1.95084, 0.44 ) }
    dend_17 { pt3dadd( -8.08279, 111.126, -1.88139, 0.44 ) }
    dend_17 { pt3dadd( -7.87989, 111.945, -1.7283, 0.29 ) }
    dend_17 { pt3dadd( -7.71424, 112.686, -1.58489, 0.29 ) }
    dend_17 { pt3dadd( -7.48362, 113.697, -1.41199, 0.29 ) }
    dend_17 { pt3dadd( -7.33061, 114.342, -1.32604, 0.29 ) }
    dend_17 { pt3dadd( -7.12713, 115.172, -1.22573, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( -6.96663, 115.847, -1.13728, 0.66 ) }
    dend_17 { pt3dadd( -6.76931, 116.7, -1.04867, 0.74 ) }
    dend_17 { pt3dadd( -6.59611, 117.629, -0.948283, 0.37 ) }
    dend_17 { pt3dadd( -6.48505, 118.356, -0.866716, 0.37 ) }
    dend_17 { pt3dadd( -6.33533, 119.372, -0.785518, 0.52 ) }
    dend_17 { pt3dadd( -6.21772, 120.138, -0.755464, 0.59 ) }
    dend_17 { pt3dadd( -6.03572, 121.302, -0.726914, 0.44 ) }
    dend_17 { pt3dadd( -5.90347, 122.123, -0.715182, 0.29 ) }
    dend_17 { pt3dadd( -5.80324, 122.699, -0.703938, 0.29 ) }
    dend_17 { pt3dadd( -5.58446, 123.972, -0.662757, 1.11 ) }
    dend_17 { pt3dadd( -5.4617, 124.701, -0.630089, 1.25 ) }
    dend_17 { pt3dadd( -5.37556, 125.221, -0.600649, 1.25 ) }
    dend_17 { pt3dadd( -5.176, 126.314, -0.537792, 0.66 ) }
    dend_17 { pt3dadd( -5.0321, 126.966, -0.520768, 0.29 ) }
    dend_17 { pt3dadd( -4.77352, 127.979, -0.506692, 0.29 ) }
    dend_17 { pt3dadd( -4.51515, 128.884, -0.502577, 0.29 ) }
    dend_17 { pt3dadd( -4.25637, 129.702, -0.505289, 0.29 ) }
    dend_17 { pt3dadd( -3.83913, 130.925, -0.520629, 0.96 ) }
    dend_17 { pt3dadd( -3.65621, 131.455, -0.537028, 1.47 ) }
    dend_17 { pt3dadd( -3.51286, 131.909, -0.55914, 1.47 ) }
    dend_17 { pt3dadd( -3.4383, 132.176, -0.576833, 1.47 ) }
    dend_17 { pt3dadd( -3.25274, 132.958, -0.628584, 0.74 ) }
    dend_17 { pt3dadd( -3.06286, 133.856, -0.681207, 0.29 ) }
    dend_17 { pt3dadd( -2.89743, 134.777, -0.728205, 0.52 ) }
    dend_17 { pt3dadd( -2.7437, 135.628, -0.765971, 0.74 ) }
    dend_17 { pt3dadd( -2.52049, 136.709, -0.804461, 0.44 ) }
    dend_17 { pt3dadd( -2.31839, 137.57, -0.829126, 0.29 ) }
    dend_17 { pt3dadd( -2.15807, 138.174, -0.843541, 0.29 ) }
    dend_17 { pt3dadd( -1.90162, 139.003, -0.857598, 0.66 ) }
    dend_17 { pt3dadd( -1.69777, 139.595, -0.867971, 0.74 ) }
    dend_17 { pt3dadd( -1.3987, 140.43, -0.884029, 0.74 ) }
    dend_17 { pt3dadd( -1.07129, 141.365, -0.89499, 0.29 ) }
    dend_17 { pt3dadd( -0.796549, 142.203, -0.899892, 0.29 ) }
    dend_17 { pt3dadd( -0.284544, 143.888, -0.902504, 0.29 ) }
    dend_17 { pt3dadd( 0.0251923, 145.04, -0.844655, 0.52 ) }
    dend_17 { pt3dadd( 0.190292, 145.737, -0.782496, 1.18 ) }
    dend_17 { pt3dadd( 0.3122, 146.343, -0.709948, 1.4 ) }
    dend_17 { pt3dadd( 0.474721, 147.328, -0.567746, 1.4 ) }
    dend_17 { pt3dadd( 0.575083, 148.103, -0.443183, 0.66 ) }
    dend_17 { pt3dadd( 0.785489, 149.919, -0.146031, 0.29 ) }
    dend_17 { pt3dadd( 0.933811, 151.062, 0.01669, 0.29 ) }
    dend_17 { pt3dadd( 1.04678, 151.75, 0.075371, 0.37 ) }
    dend_17 { pt3dadd( 1.22754, 152.675, 0.102272, 0.37 ) }
    dend_17 { pt3dadd( 1.44433, 153.629, 0.088443, 0.37 ) }
    dend_17 { pt3dadd( 1.88479, 155.315, -0.00905468, 0.37 ) }
    dend_17 { pt3dadd( 2.43215, 157.142, -0.212746, 0.37 ) }
    dend_17 { pt3dadd( 3.01386, 158.913, -0.430842, 1.33 ) }
    dend_17 { pt3dadd( 3.32542, 159.761, -0.553238, 1.99 ) }
    dend_17 { pt3dadd( 3.58942, 160.434, -0.661405, 1.99 ) }
    dend_17 { pt3dadd( 3.70225, 160.719, -0.710677, 1.99 ) }
    dend_17 { pt3dadd( 3.91294, 161.244, -0.80122, 1.99 ) }
    dend_17 { pt3dadd( 4.35669, 162.341, -0.96845, 0.59 ) }
    dend_17 { pt3dadd( 4.8809, 163.616, -1.11384, 0.29 ) }
    dend_17 { pt3dadd( 5.25669, 164.509, -1.16386, 0.59 ) }
    dend_17 { pt3dadd( 5.55201, 165.199, -1.17989, 0.59 ) }
    dend_17 { pt3dadd( 6.17787, 166.648, -1.16995, 0.37 ) }
    dend_17 { pt3dadd( 6.51469, 167.453, -1.14087, 0.37 ) }
    dend_17 { pt3dadd( 7.03226, 168.759, -1.05528, 0.37 ) }
    dend_17 { pt3dadd( 7.61006, 170.334, -0.910851, 0.74 ) }
    dend_17 { pt3dadd( 7.81721, 170.982, -0.851463, 0.74 ) }
    dend_17 { pt3dadd( 7.99423, 171.653, -0.783948, 0.88 ) }
    dend_17 { pt3dadd( 8.19139, 172.628, -0.681309, 0.44 ) }
    dend_17 { pt3dadd( 8.44359, 174.315, -0.543559, 0.29 ) }
    dend_17 { pt3dadd( 8.52928, 175.217, -0.522597, 0.52 ) }
    dend_17 { pt3dadd( 8.61982, 176.89, -0.591705, 1.25 ) }
    dend_17 { pt3dadd( 8.6392, 177.603, -0.642633, 1.62 ) }
    dend_17 { pt3dadd( 8.64646, 178.07, -0.700315, 1.62 ) }
    dend_17 { pt3dadd( 8.65383, 179.03, -0.864415, 0.96 ) }
    dend_17 { pt3dadd( 8.6718, 180.459, -1.17984, 0.29 ) }
    dend_17 { pt3dadd( 8.70548, 181.28, -1.3802, 0.29 ) }
    dend_17 { pt3dadd( 8.77801, 182.278, -1.61623, 0.29 ) }
    dend_17 { pt3dadd( 8.86, 183.325, -1.82925, 0.74 ) }
    dend_17 { pt3dadd( 8.89111, 183.801, -1.90243, 0.96 ) }
    dend_17 { pt3dadd( 8.92157, 184.354, -1.95909, 0.96 ) }
    dend_17 { pt3dadd( 8.98933, 185.755, -2.06492, 0.52 ) }
    dend_17 { pt3dadd( 9.07874, 187.689, -2.22155, 0.37 ) }
    dend_17 { pt3dadd( 9.13573, 189.016, -2.3248, 0.29 ) }
    dend_17 { pt3dadd( 9.17204, 190.267, -2.42939, 0.66 ) }
    dend_17 { pt3dadd( 9.18909, 191.106, -2.5171, 0.66 ) }
    dend_17 { pt3dadd( 9.20271, 192.679, -2.71377, 0.29 ) }
    dend_17 { pt3dadd( 9.20844, 193.459, -2.81797, 0.29 ) }
    dend_17 { pt3dadd( 9.23278, 195.516, -3.09815, 0.29 ) }
    dend_17 { pt3dadd( 9.29167, 197.754, -3.39403, 1.99 ) }
    dend_17 { pt3dadd( 9.30696, 198.263, -3.45328, 2.28 ) }
    dend_17 { pt3dadd( 9.32188, 198.983, -3.51939, 1.55 ) }
    dend_17 { pt3dadd( 9.33203, 199.772, -3.55166, 0.88 ) }
    dend_17 { pt3dadd( 9.33125, 201.063, -3.52826, 0.22 ) }
    dend_17 { pt3dadd( 9.32032, 201.668, -3.48886, 0.22 ) }
    dend_17 { pt3dadd( 9.28929, 202.774, -3.37503, 0.66 ) }
    dend_17 { pt3dadd( 9.26925, 203.473, -3.30298, 0.66 ) }
    dend_17 { pt3dadd( 9.24455, 204.656, -3.19364, 0.29 ) }
    dend_17 { pt3dadd( 9.21274, 206.548, -3.05918, 0.22 ) }
    dend_17 { pt3dadd( 9.22116, 207.507, -3.00385, 0.22 ) }
    dend_17 { pt3dadd( 9.2566, 208.521, -2.9622, 0.52 ) }
    dend_17 { pt3dadd( 9.36397, 209.79, -2.93734, 0.44 ) }
    dend_17 { pt3dadd( 9.50944, 210.894, -2.93766, 0.44 ) }
    dend_17 { pt3dadd( 9.72886, 212.168, -2.96938, 0.44 ) }
    dend_17 { pt3dadd( 10.1622, 214.142, -3.04499, 0.22 ) }
    dend_17 { pt3dadd( 10.5246, 215.611, -3.1087, 0.66 ) }
    dend_17 { pt3dadd( 10.8526, 216.8, -3.16541, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_17 { pt3dadd( 11.0435, 217.428, -3.19686, 1.77 ) }
    dend_17 { pt3dadd( 11.2319, 217.991, -3.22514, 1.77 ) }
    dend_17 { pt3dadd( 11.5479, 218.816, -3.26444, 0.88 ) }
    dend_17 { pt3dadd( 11.931, 219.733, -3.26947, 0.29 ) }
    dend_17 { pt3dadd( 12.2002, 220.356, -3.24806, 0.52 ) }
    dend_17 { pt3dadd( 12.8806, 221.969, -3.15347, 0.22 ) }
    dend_17 { pt3dadd( 13.2704, 222.889, -3.10453, 0.52 ) }
    dend_17 { pt3dadd( 13.7133, 223.924, -3.06338, 0.52 ) }
    dend_17 { pt3dadd( 14.6717, 226.2, -3.00341, 0.22 ) }
    dend_17 { pt3dadd( 15.3974, 227.94, -2.98592, 0.37 ) }
    dend_17 { pt3dadd( 15.8667, 229.085, -2.97932, 0.37 ) }
    dend_17 { pt3dadd( 16.3731, 230.36, -2.98336, 1.92 ) }
    dend_17 { pt3dadd( 16.5953, 230.946, -2.99526, 2.21 ) }
    dend_17 { pt3dadd( 16.8069, 231.553, -3.03137, 2.21 ) }
    dend_17 { pt3dadd( 17.0421, 232.266, -3.16372, 1.18 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 15/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -9.80278, 48.3697, 0.779028, 0.66 ) }
    dend_14 { pt3dadd( -9.34063, 49.8475, 0.683151, 0.66 ) }
    dend_14 { pt3dadd( -9.06029, 50.7466, 0.616952, 0.81 ) }
    dend_14 { pt3dadd( -8.84939, 51.4175, 0.586907, 0.37 ) }
    dend_14 { pt3dadd( -8.60866, 52.2262, 0.56093, 0.29 ) }
    dend_14 { pt3dadd( -8.20288, 53.5809, 0.50626, 0.29 ) }
    dend_14 { pt3dadd( -7.94623, 54.3739, 0.466408, 0.29 ) }
    dend_14 { pt3dadd( -7.665, 55.1338, 0.392371, 0.29 ) }
    dend_14 { pt3dadd( -7.22367, 56.1372, 0.28424, 0.29 ) }
    dend_14 { pt3dadd( -6.82928, 56.9609, 0.188059, 0.29 ) }
    dend_14 { pt3dadd( -6.43637, 57.7813, 0.091716, 0.74 ) }
    dend_14 { pt3dadd( -6.16163, 58.3333, 0.029968, 0.74 ) }
    dend_14 { pt3dadd( -5.64313, 59.2685, -0.0921807, 0.29 ) }
    dend_14 { pt3dadd( -5.33391, 59.8062, -0.16002, 0.37 ) }
    dend_14 { pt3dadd( -4.62816, 61.0562, -0.324474, 0.37 ) }
    dend_14 { pt3dadd( -4.25151, 61.7637, -0.403606, 0.37 ) }
    dend_14 { pt3dadd( -3.86197, 62.5992, -0.476893, 0.37 ) }
    dend_14 { pt3dadd( -3.70366, 62.9842, -0.503282, 0.37 ) }
    dend_14 { pt3dadd( -3.44744, 63.6871, -0.535069, 0.22 ) }
    dend_14 { pt3dadd( -3.21638, 64.3696, -0.559174, 0.22 ) }
    dend_14 { pt3dadd( -3.01763, 64.9074, -0.59082, 0.66 ) }
    dend_14 { pt3dadd( -2.80809, 65.5514, -0.650372, 0.96 ) }
    dend_14 { pt3dadd( -0.743068, 73.1761, -1.85665, 0.96 ) }
    dend_14 { pt3dadd( 3.54229, 80.0142, -2.321, 0.96 ) }
    dend_14 { pt3dadd( 7.38512, 87.0751, -1.56857, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 26.5565, 8.84842, 7.03592, 0.66 ) }
    dend_8 { pt3dadd( 27.2248, 7.85443, 6.57893, 0.66 ) }
    dend_8 { pt3dadd( 27.4137, 7.54439, 6.4125, 0.66 ) }
    dend_8 { pt3dadd( 27.7241, 7.06332, 6.17197, 0.88 ) }
    dend_8 { pt3dadd( 28.2831, 6.28051, 5.81528, 0.88 ) }
    dend_8 { pt3dadd( 28.6833, 5.77762, 5.60906, 0.88 ) }
    dend_8 { pt3dadd( 29.0666, 5.35882, 5.45171, 1.03 ) }
    dend_8 { pt3dadd( 29.515, 4.90653, 5.28657, 1.03 ) }
    dend_8 { pt3dadd( 30.1537, 4.54358, 5.24842, 0.88 ) }
    dend_8 { pt3dadd( 30.6552, 4.44961, 5.32695, 0.88 ) }
    dend_8 { pt3dadd( 31.0857, 4.4087, 5.42574, 0.88 ) }
    dend_8 { pt3dadd( 31.7703, 4.3182, 5.59385, 0.81 ) }
    dend_8 { pt3dadd( 32.5654, 4.11658, 5.77374, 0.81 ) }
    dend_8 { pt3dadd( 33.0747, 3.9067, 5.84594, 0.81 ) }
    dend_8 { pt3dadd( 33.7252, 3.52381, 5.84303, 0.74 ) }
    dend_8 { pt3dadd( 34.421, 3.03804, 5.77664, 0.88 ) }
    dend_8 { pt3dadd( 35.0397, 2.55969, 5.66697, 0.88 ) }
    dend_8 { pt3dadd( 35.7043, 1.98762, 5.49364, 0.52 ) }
    dend_8 { pt3dadd( 36.0365, 1.70133, 5.37787, 0.52 ) }
    dend_8 { pt3dadd( 36.4383, 1.41926, 5.21321, 0.52 ) }
    dend_8 { pt3dadd( 36.9494, 1.15601, 5.00182, 0.52 ) }
    dend_8 { pt3dadd( 37.5298, 0.960974, 4.77155, 0.74 ) }
    dend_8 { pt3dadd( 38.1167, 0.824524, 4.54326, 0.74 ) }
    dend_8 { pt3dadd( 38.8593, 0.700734, 4.26003, 0.74 ) }
    dend_8 { pt3dadd( 39.8395, 0.571845, 3.90246, 0.74 ) }
    dend_8 { pt3dadd( 40.5182, 0.501469, 3.65628, 0.74 ) }
    dend_8 { pt3dadd( 41.0549, 0.46909, 3.47375, 0.74 ) }
    dend_8 { pt3dadd( 41.636, 0.484603, 3.3022, 0.74 ) }
    dend_8 { pt3dadd( 41.9763, 0.512653, 3.22405, 0.88 ) }
    dend_8 { pt3dadd( 42.9352, 0.652699, 3.04674, 0.88 ) }
    dend_8 { pt3dadd( 43.7524, 0.791074, 2.91996, 0.88 ) }
    dend_8 { pt3dadd( 44.7656, 0.950584, 2.77124, 0.66 ) }
    dend_8 { pt3dadd( 45.5086, 1.04775, 2.67401, 0.66 ) }
    dend_8 { pt3dadd( 47.4247, 1.26554, 2.46344, 0.59 ) }
    dend_8 { pt3dadd( 48.0903, 1.33184, 2.39982, 0.52 ) }
    dend_8 { pt3dadd( 49.0977, 1.44652, 2.32679, 0.52 ) }
    dend_8 { pt3dadd( 49.7035, 1.54161, 2.30352, 0.52 ) }
    dend_8 { pt3dadd( 50.3591, 1.69933, 2.30181, 0.52 ) }
    dend_8 { pt3dadd( 51.1401, 1.93247, 2.32104, 0.52 ) }
    dend_8 { pt3dadd( 51.662, 2.09716, 2.34447, 0.52 ) }
    dend_8 { pt3dadd( 52.5168, 2.32929, 2.37906, 0.52 ) }
    dend_8 { pt3dadd( 53.4447, 2.57888, 2.42288, 0.52 ) }
    dend_8 { pt3dadd( 54.3165, 2.78606, 2.46039, 0.52 ) }
    dend_8 { pt3dadd( 55.1321, 2.91653, 2.48007, 0.52 ) }
    dend_8 { pt3dadd( 56.0688, 2.96024, 2.47731, 0.52 ) }
    dend_8 { pt3dadd( 56.7198, 2.89071, 2.45696, 0.52 ) }
    dend_8 { pt3dadd( 57.3321, 2.74658, 2.45066, 0.52 ) }
    dend_8 { pt3dadd( 57.7461, 2.62959, 2.46526, 0.52 ) }
    dend_8 { pt3dadd( 58.2695, 2.48524, 2.50874, 0.52 ) }
    dend_8 { pt3dadd( 59.3308, 2.22955, 2.67298, 0.29 ) }
    dend_8 { pt3dadd( 61.2265, 1.87441, 3.09066, 0.29 ) }
    dend_8 { pt3dadd( 62.9432, 1.64052, 3.55094, 0.29 ) }
    dend_8 { pt3dadd( 63.8174, 1.57221, 3.83273, 0.29 ) }
    dend_8 { pt3dadd( 64.4444, 1.54578, 4.05489, 0.44 ) }
    dend_8 { pt3dadd( 65.1074, 1.5564, 4.32933, 0.59 ) }
    dend_8 { pt3dadd( 65.5239, 1.59834, 4.55888, 0.59 ) }
    dend_8 { pt3dadd( 66.1963, 1.84569, 5.11585, 0.59 ) }
    dend_8 { pt3dadd( 66.5448, 2.11414, 5.48603, 0.59 ) }
    dend_8 { pt3dadd( 73.6158, 0.32481, 5.65906, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 26.5565, 8.84842, 7.03592, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_3 { pt3dadd( 28.0357, 8.73893, 6.73056, 1.11 ) }
    dend_3 { pt3dadd( 28.9552, 8.57962, 6.47867, 1.11 ) }
    dend_3 { pt3dadd( 29.9964, 8.47775, 6.12743, 1.25 ) }
    dend_3 { pt3dadd( 30.7966, 8.47905, 5.86414, 1.47 ) }
    dend_3 { pt3dadd( 31.8783, 8.59137, 5.54446, 1.4 ) }
    dend_3 { pt3dadd( 32.8358, 8.77456, 5.29339, 1.4 ) }
    dend_3 { pt3dadd( 33.907, 9.04744, 4.98752, 1.18 ) }
    dend_3 { pt3dadd( 35.3361, 9.67865, 4.65113, 1.18 ) }
    dend_3 { pt3dadd( 36.297, 10.3166, 4.489, 1.18 ) }
    dend_3 { pt3dadd( 37.1098, 10.9395, 4.37168, 1.18 ) }
    dend_3 { pt3dadd( 37.5923, 11.3144, 4.30373, 0.88 ) }
    dend_3 { pt3dadd( 38.0808, 11.6395, 4.21782, 0.88 ) }
    dend_3 { pt3dadd( 38.8668, 11.988, 4.01921, 0.88 ) }
    dend_3 { pt3dadd( 40.0998, 12.2398, 3.6123, 1.11 ) }
    dend_3 { pt3dadd( 41.0474, 12.3109, 3.23897, 1.11 ) }
    dend_3 { pt3dadd( 42.0119, 12.3222, 2.82387, 1.11 ) }
    dend_3 { pt3dadd( 43.1067, 12.283, 2.32899, 1.25 ) }
    dend_3 { pt3dadd( 44.2279, 12.1925, 1.8032, 1.33 ) }
    dend_3 { pt3dadd( 44.7487, 12.1288, 1.55473, 1.47 ) }
    dend_3 { pt3dadd( 45.6099, 12.0237, 1.16778, 1.77 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -155.968, -106.616, 1.8627, 0.59 ) }
    dend_47 { pt3dadd( -155.849, -109.002, 1.62639, 0.59 ) }
    dend_47 { pt3dadd( -155.789, -110.007, 1.56986, 0.59 ) }
    dend_47 { pt3dadd( -155.711, -110.885, 1.54965, 0.52 ) }
    dend_47 { pt3dadd( -155.61, -111.897, 1.55633, 0.52 ) }
    dend_47 { pt3dadd( -155.529, -112.99, 1.5793, 0.88 ) }
    dend_47 { pt3dadd( -155.448, -114.202, 1.61725, 1.03 ) }
    dend_47 { pt3dadd( -155.411, -114.925, 1.69663, 1.03 ) }
    dend_47 { pt3dadd( -155.31, -116.197, 1.85964, 1.03 ) }
    dend_47 { pt3dadd( -155.191, -117.291, 2.01618, 0.29 ) }
    dend_47 { pt3dadd( -155.112, -118.069, 2.13247, 0.29 ) }
    dend_47 { pt3dadd( -155.067, -118.712, 2.23126, 0.29 ) }
    dend_47 { pt3dadd( -155.047, -119.929, 2.40878, 0.59 ) }
    dend_47 { pt3dadd( -155.088, -120.924, 2.59776, 0.74 ) }
    dend_47 { pt3dadd( -155.162, -121.631, 2.75898, 0.88 ) }
    dend_47 { pt3dadd( -155.262, -122.314, 2.92866, 0.88 ) }
    dend_47 { pt3dadd( -155.375, -122.947, 3.10486, 0.88 ) }
    dend_47 { pt3dadd( -155.579, -123.789, 3.35531, 0.81 ) }
    dend_47 { pt3dadd( -156.095, -125.605, 3.901, 0.37 ) }
    dend_47 { pt3dadd( -156.373, -126.585, 4.20498, 1.03 ) }
    dend_47 { pt3dadd( -156.655, -127.555, 4.55024, 1.33 ) }
    dend_47 { pt3dadd( -156.924, -128.439, 4.89242, 1.33 ) }
    dend_47 { pt3dadd( -157.298, -129.568, 5.35038, 1.03 ) }
    dend_47 { pt3dadd( -157.634, -130.514, 5.7395, 0.74 ) }
    dend_47 { pt3dadd( -157.943, -131.337, 6.04775, 0.37 ) }
    dend_47 { pt3dadd( -158.37, -132.415, 6.51848, 0.74 ) }
    dend_47 { pt3dadd( -158.63, -133.033, 6.80678, 0.74 ) }
    dend_47 { pt3dadd( -158.922, -133.795, 7.10465, 0.59 ) }
    dend_47 { pt3dadd( -159.109, -134.381, 7.29019, 0.37 ) }
    dend_47 { pt3dadd( -159.337, -135.241, 7.47544, 0.37 ) }
    dend_47 { pt3dadd( -159.684, -136.671, 7.59897, 0.66 ) }
    dend_47 { pt3dadd( -159.939, -137.694, 7.5695, 0.74 ) }
    dend_47 { pt3dadd( -160.416, -139.433, 7.40095, 0.52 ) }
    dend_47 { pt3dadd( -160.621, -140.161, 7.29529, 0.52 ) }
    dend_47 { pt3dadd( -160.914, -141.026, 7.14367, 1.33 ) }
    dend_47 { pt3dadd( -161.299, -142.105, 6.92444, 1.55 ) }
    dend_47 { pt3dadd( -161.815, -143.52, 6.66497, 1.99 ) }
    dend_47 { pt3dadd( -162.152, -144.363, 6.56389, 2.21 ) }
    dend_47 { pt3dadd( -162.622, -145.405, 6.5009, 1.99 ) }
    dend_47 { pt3dadd( -163.22, -146.66, 6.43007, 1.11 ) }
    dend_47 { pt3dadd( -163.856, -148.1, 6.34105, 0.37 ) }
    dend_47 { pt3dadd( -164.326, -149.33, 6.26846, 1.11 ) }
    dend_47 { pt3dadd( -164.54, -149.954, 6.22799, 1.25 ) }
    dend_47 { pt3dadd( -164.81, -150.759, 6.17639, 1.25 ) }
    dend_47 { pt3dadd( -165.414, -152.536, 6.0152, 0.29 ) }
    dend_47 { pt3dadd( -165.804, -153.669, 5.88641, 0.29 ) }
    dend_47 { pt3dadd( -166.205, -154.708, 5.75986, 0.44 ) }
    dend_47 { pt3dadd( -166.641, -155.784, 5.61838, 0.59 ) }
    dend_47 { pt3dadd( -167.169, -157.053, 5.46457, 0.88 ) }
    dend_47 { pt3dadd( -167.616, -158.106, 5.35402, 0.96 ) }
    dend_47 { pt3dadd( -168.11, -159.117, 5.26868, 0.66 ) }
    dend_47 { pt3dadd( -168.794, -160.314, 5.21587, 0.37 ) }
    dend_47 { pt3dadd( -169.32, -161.166, 5.19225, 0.29 ) }
    dend_47 { pt3dadd( -169.907, -162.05, 5.21192, 0.29 ) }
    dend_47 { pt3dadd( -170.418, -162.821, 5.26781, 0.29 ) }
    dend_47 { pt3dadd( -171.131, -163.855, 5.38831, 0.29 ) }
    dend_47 { pt3dadd( -172.206, -165.272, 5.55549, 0.74 ) }
    dend_47 { pt3dadd( -173.048, -166.247, 5.71424, 1.03 ) }
    dend_47 { pt3dadd( -174.101, -167.373, 5.94316, 2.28 ) }
    dend_47 { pt3dadd( -174.935, -168.187, 6.13539, 2.8 ) }
    dend_47 { pt3dadd( -175.737, -168.957, 6.31998, 3.09 ) }
    dend_47 { pt3dadd( -177.028, -170.242, 6.6147, 1.84 ) }
    dend_47 { pt3dadd( -178.523, -171.714, 6.9425, 0.29 ) }
    dend_47 { pt3dadd( -179.254, -172.476, 7.11386, 0.29 ) }
    dend_47 { pt3dadd( -180.208, -173.566, 7.33714, 0.29 ) }
    dend_47 { pt3dadd( -181.164, -174.765, 7.5848, 0.29 ) }
    dend_47 { pt3dadd( -181.81, -175.76, 7.79886, 0.88 ) }
    dend_47 { pt3dadd( -182.303, -176.657, 7.98834, 1.11 ) }
    dend_47 { pt3dadd( -182.686, -177.432, 8.1226, 0.81 ) }
    dend_47 { pt3dadd( -182.993, -178.102, 8.24109, 0.52 ) }
    dend_47 { pt3dadd( -183.457, -179.23, 8.44589, 0.29 ) }
    dend_47 { pt3dadd( -183.973, -180.567, 8.70184, 0.29 ) }
    dend_47 { pt3dadd( -184.385, -181.71, 8.92525, 0.29 ) }
    dend_47 { pt3dadd( -184.616, -182.327, 9.04416, 0.29 ) }
    dend_47 { pt3dadd( -185.054, -183.558, 9.2847, 0.81 ) }
    dend_47 { pt3dadd( -185.424, -184.7, 9.51243, 1.11 ) }
    dend_47 { pt3dadd( -185.685, -185.597, 9.69339, 0.88 ) }
    dend_47 { pt3dadd( -186.05, -186.871, 9.94745, 0.29 ) }
    dend_47 { pt3dadd( -186.487, -188.423, 10.2612, 0.29 ) }
    dend_47 { pt3dadd( -186.918, -189.815, 10.4883, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_47 { pt3dadd( -187.084, -190.325, 10.5571, 0.29 ) }
    dend_47 { pt3dadd( -187.478, -191.544, 10.6906, 0.74 ) }
    dend_47 { pt3dadd( -187.762, -192.42, 10.7645, 0.74 ) }
    dend_47 { pt3dadd( -188.144, -193.657, 10.8498, 0.44 ) }
    dend_47 { pt3dadd( -188.569, -195.097, 10.93, 0.29 ) }
    dend_47 { pt3dadd( -188.789, -195.813, 10.962, 0.29 ) }
    dend_47 { pt3dadd( -189.082, -196.806, 11.046, 0.29 ) }
    dend_47 { pt3dadd( -189.377, -197.996, 11.2083, 0.29 ) }
    dend_47 { pt3dadd( -189.522, -198.676, 11.3469, 0.74 ) }
    dend_47 { pt3dadd( -189.648, -199.302, 11.5147, 0.74 ) }
    dend_47 { pt3dadd( -189.876, -200.421, 11.8961, 0.44 ) }
    dend_47 { pt3dadd( -190.158, -201.681, 12.3511, 0.29 ) }
    dend_47 { pt3dadd( -190.422, -202.765, 12.7864, 0.74 ) }
    dend_47 { pt3dadd( -190.617, -203.525, 13.1012, 1.11 ) }
    dend_47 { pt3dadd( -190.807, -204.165, 13.3615, 1.69 ) }
    dend_47 { pt3dadd( -190.972, -204.703, 13.5721, 1.92 ) }
    dend_47 { pt3dadd( -191.213, -205.485, 13.8554, 1.92 ) }
    dend_47 { pt3dadd( -191.553, -206.671, 14.2275, 1.62 ) }
    dend_47 { pt3dadd( -191.961, -208.113, 14.6466, 0.29 ) }
    dend_47 { pt3dadd( -192.275, -209.27, 14.9584, 0.22 ) }
    dend_47 { pt3dadd( -192.555, -210.228, 15.2007, 0.22 ) }
    dend_47 { pt3dadd( -192.952, -211.527, 15.4994, 0.59 ) }
    dend_47 { pt3dadd( -193.302, -212.606, 15.7212, 0.74 ) }
    dend_47 { pt3dadd( -193.573, -213.359, 15.8661, 0.74 ) }
    dend_47 { pt3dadd( -193.953, -214.325, 16.0609, 0.44 ) }
    dend_47 { pt3dadd( -194.322, -215.143, 16.2279, 0.29 ) }
    dend_47 { pt3dadd( -194.765, -215.954, 16.4239, 0.29 ) }
    dend_47 { pt3dadd( -195.826, -217.564, 16.8899, 0.44 ) }
    dend_47 { pt3dadd( -196.452, -218.39, 17.1276, 0.59 ) }
    dend_47 { pt3dadd( -197.082, -219.156, 17.3405, 0.59 ) }
    dend_47 { pt3dadd( -197.828, -220.037, 17.5478, 0.52 ) }
    dend_47 { pt3dadd( -198.972, -221.359, 17.8055, 1.33 ) }
    dend_47 { pt3dadd( -199.916, -222.433, 17.9681, 2.06 ) }
    dend_47 { pt3dadd( -200.797, -223.476, 18.0798, 2.21 ) }
    dend_47 { pt3dadd( -201.434, -224.315, 18.1329, 2.21 ) }
    dend_47 { pt3dadd( -202.349, -225.694, 18.1692, 0.81 ) }
    dend_47 { pt3dadd( -202.897, -226.697, 18.1519, 0.29 ) }
    dend_47 { pt3dadd( -203.305, -227.616, 18.0961, 0.44 ) }
    dend_47 { pt3dadd( -203.553, -228.316, 18.0513, 0.44 ) }
    dend_47 { pt3dadd( -203.861, -229.343, 18.0015, 0.29 ) }
    dend_47 { pt3dadd( -204.089, -230.115, 17.9462, 0.29 ) }
    dend_47 { pt3dadd( -204.379, -231.073, 17.8773, 0.29 ) }
    dend_47 { pt3dadd( -204.598, -231.697, 17.8332, 0.74 ) }
    dend_47 { pt3dadd( -204.837, -232.26, 17.8132, 0.88 ) }
    dend_47 { pt3dadd( -205.156, -232.919, 17.8171, 0.88 ) }
    dend_47 { pt3dadd( -205.683, -233.982, 17.8873, 0.29 ) }
    dend_47 { pt3dadd( -206.218, -235.036, 18.0418, 0.29 ) }
    dend_47 { pt3dadd( -206.725, -236.092, 18.302, 0.29 ) }
    dend_47 { pt3dadd( -207.284, -237.36, 18.6889, 0.52 ) }
    dend_47 { pt3dadd( -207.536, -237.953, 18.8964, 0.52 ) }
    dend_47 { pt3dadd( -207.965, -239.031, 19.3307, 0.29 ) }
    dend_47 { pt3dadd( -208.219, -239.77, 19.6873, 0.29 ) }
    dend_47 { pt3dadd( -208.639, -241.262, 20.4996, 0.59 ) }
    dend_47 { pt3dadd( -208.85, -242.103, 21.0077, 0.29 ) }
    dend_47 { pt3dadd( -208.997, -242.651, 21.3754, 0.29 ) }
    dend_47 { pt3dadd( -209.251, -243.399, 21.9276, 0.74 ) }
    dend_47 { pt3dadd( -209.731, -244.366, 22.7123, 0.88 ) }
    dend_47 { pt3dadd( -210.226, -245.078, 23.3193, 0.29 ) }
    dend_47 { pt3dadd( -210.81, -245.72, 23.8954, 0.29 ) }
    dend_47 { pt3dadd( -211.647, -246.517, 24.5844, 0.96 ) }
    dend_47 { pt3dadd( -212.34, -247.153, 25.0653, 1.11 ) }
    dend_47 { pt3dadd( -213.216, -247.971, 25.5429, 1.11 ) }
    dend_47 { pt3dadd( -214.147, -248.922, 25.967, 0.29 ) }
    dend_47 { pt3dadd( -214.748, -249.641, 26.228, 0.22 ) }
    dend_47 { pt3dadd( -215.224, -250.369, 26.4285, 0.44 ) }
    dend_47 { pt3dadd( -215.67, -251.24, 26.6071, 0.44 ) }
    dend_47 { pt3dadd( -216.266, -252.721, 26.8085, 0.22 ) }
    dend_47 { pt3dadd( -216.59, -253.653, 26.8813, 0.22 ) }
    dend_47 { pt3dadd( -216.805, -254.353, 26.8961, 0.22 ) }
    dend_47 { pt3dadd( -217.045, -255.148, 26.8836, 0.59 ) }
    dend_47 { pt3dadd( -217.217, -255.722, 26.8699, 0.74 ) }
    dend_47 { pt3dadd( -217.735, -257.415, 26.781, 0.29 ) }
    dend_47 { pt3dadd( -218.015, -258.317, 26.7163, 0.29 ) }
    dend_47 { pt3dadd( -218.371, -259.439, 26.6236, 0.44 ) }
    dend_47 { pt3dadd( -218.695, -260.514, 26.536, 0.44 ) }
    dend_47 { pt3dadd( -219.1, -261.938, 26.445, 0.52 ) }
    dend_47 { pt3dadd( -219.332, -262.75, 26.4091, 0.96 ) }
    dend_47 { pt3dadd( -219.574, -263.557, 26.3976, 1.4 ) }
    dend_47 { pt3dadd( -219.848, -264.372, 26.3842, 1.4 ) }
    dend_47 { pt3dadd( -220.575, -266.243, 26.4589, 0.29 ) }
    dend_47 { pt3dadd( -221.357, -268.046, 26.6362, 0.22 ) }
    dend_47 { pt3dadd( -221.772, -268.916, 26.7827, 0.37 ) }
    dend_47 { pt3dadd( -222.47, -270.282, 27.1097, 0.37 ) }
    dend_47 { pt3dadd( -223.198, -271.609, 27.5051, 0.29 ) }
    dend_47 { pt3dadd( -224.219, -273.323, 28.1125, 0.74 ) }
    dend_47 { pt3dadd( -224.792, -274.188, 28.4677, 1.11 ) }
    dend_47 { pt3dadd( -225.457, -275.096, 28.8586, 1.25 ) }
    dend_47 { pt3dadd( -226.161, -275.988, 29.2296, 1.11 ) }
    dend_47 { pt3dadd( -226.841, -276.807, 29.5451, 0.59 ) }
    dend_47 { pt3dadd( -227.733, -277.868, 29.8894, 0.29 ) }
    dend_47 { pt3dadd( -228.261, -278.518, 30.0131, 0.29 ) }
    dend_47 { pt3dadd( -229.247, -279.767, 30.1879, 0.22 ) }
    dend_47 { pt3dadd( -229.898, -280.625, 30.2814, 0.22 ) }
    dend_47 { pt3dadd( -230.259, -281.116, 30.3302, 0.66 ) }
    dend_47 { pt3dadd( -230.817, -281.885, 30.4068, 0.66 ) }
    dend_47 { pt3dadd( -231.949, -283.486, 30.605, 0.29 ) }
    dend_47 { pt3dadd( -232.637, -284.447, 30.7419, 0.29 ) }
    dend_47 { pt3dadd( -233.364, -285.403, 30.8881, 0.29 ) }
    dend_47 { pt3dadd( -234.129, -286.344, 31.0304, 0.66 ) }
    dend_47 { pt3dadd( -234.744, -287.061, 31.1335, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_47 { pt3dadd( -235.735, -288.162, 31.2808, 0.22 ) }
    dend_47 { pt3dadd( -236.419, -288.9, 31.3687, 0.22 ) }
    dend_47 { pt3dadd( -237.566, -290.14, 31.497, 0.22 ) }
    dend_47 { pt3dadd( -239.565, -292.345, 31.6605, 0.22 ) }
    dend_47 { pt3dadd( -240.161, -293.062, 31.6856, 0.22 ) }
    dend_47 { pt3dadd( -240.773, -293.885, 31.6869, 1.11 ) }
    dend_47 { pt3dadd( -241.098, -294.4, 31.6647, 1.11 ) }
    dend_47 { pt3dadd( -241.247, -294.7, 31.6483, 1.11 ) }
    dend_47 { pt3dadd( -241.537, -295.493, 31.6029, 0.66 ) }
    dend_47 { pt3dadd( -241.879, -296.811, 31.5159, 0.22 ) }
    dend_47 { pt3dadd( -242.035, -297.621, 31.4723, 0.52 ) }
    dend_47 { pt3dadd( -242.264, -299.484, 31.4004, 0.22 ) }
    dend_47 { pt3dadd( -242.442, -300.998, 31.3559, 0.22 ) }
    dend_47 { pt3dadd( -242.518, -301.644, 31.3436, 0.59 ) }
    dend_47 { pt3dadd( -242.617, -302.465, 31.3409, 0.59 ) }
    dend_47 { pt3dadd( -242.756, -303.652, 31.3351, 0.52 ) }
    dend_47 { pt3dadd( -242.939, -305.404, 31.3207, 0.22 ) }
    dend_47 { pt3dadd( -243.026, -306.432, 31.31, 0.22 ) }
    dend_47 { pt3dadd( -243.056, -307.045, 31.3057, 0.22 ) }
    dend_47 { pt3dadd( -243.074, -307.742, 31.3005, 0.66 ) }
    dend_47 { pt3dadd( -243.06, -308.74, 31.3595, 0.81 ) }
    dend_47 { pt3dadd( -242.961, -309.831, 31.5261, 0.59 ) }
    dend_47 { pt3dadd( -242.621, -311.374, 31.9855, 1.25 ) }
    dend_47 { pt3dadd( -242.316, -312.18, 32.3316, 1.69 ) }
    dend_47 { pt3dadd( -242.094, -312.573, 32.5549, 1.92 ) }
    dend_47 { pt3dadd( -241.095, -313.819, 33.457, 1.18 ) }
    dend_47 { pt3dadd( -240.083, -314.739, 34.3191, 0.22 ) }
    dend_47 { pt3dadd( -238.853, -315.569, 35.2701, 0.22 ) }
    dend_47 { pt3dadd( -237.998, -316.02, 35.8772, 0.22 ) }
    dend_47 { pt3dadd( -236.908, -316.529, 36.5765, 0.22 ) }
    dend_47 { pt3dadd( -236.11, -316.883, 37.0344, 0.66 ) }
    dend_47 { pt3dadd( -235.51, -317.154, 37.3241, 0.66 ) }
    dend_47 { pt3dadd( -233.873, -317.903, 38.0292, 0.22 ) }
    dend_47 { pt3dadd( -233.246, -318.203, 38.2737, 0.37 ) }
    dend_47 { pt3dadd( -232.614, -318.576, 38.5275, 0.37 ) }
    dend_47 { pt3dadd( -232.109, -318.942, 38.7528, 0.22 ) }
    dend_47 { pt3dadd( -231.35, -319.584, 39.1143, 0.22 ) }
    dend_47 { pt3dadd( -236.558, -330.878, 40.8288, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 38/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -155.968, -106.616, 1.8627, 0.37 ) }
    dend_46 { pt3dadd( -157.539, -106.265, 1.64774, 0.37 ) }
    dend_46 { pt3dadd( -158.196, -106.154, 1.53998, 0.37 ) }
    dend_46 { pt3dadd( -159.59, -105.999, 1.23945, 0.29 ) }
    dend_46 { pt3dadd( -160.647, -105.93, 0.987663, 0.44 ) }
    dend_46 { pt3dadd( -161.664, -105.903, 0.732324, 0.66 ) }
    dend_46 { pt3dadd( -162.247, -105.91, 0.574942, 0.81 ) }
    dend_46 { pt3dadd( -162.748, -105.945, 0.417697, 0.81 ) }
    dend_46 { pt3dadd( -164.294, -106.126, -0.121921, 0.22 ) }
    dend_46 { pt3dadd( -164.774, -106.204, -0.311945, 0.22 ) }
    dend_46 { pt3dadd( -165.636, -106.349, -0.65345, 0.74 ) }
    dend_46 { pt3dadd( -166.343, -106.469, -0.940285, 0.88 ) }
    dend_46 { pt3dadd( -167.512, -106.687, -1.44839, 0.22 ) }
    dend_46 { pt3dadd( -167.983, -106.785, -1.70094, 0.22 ) }
    dend_46 { pt3dadd( -168.412, -106.893, -1.97113, 0.22 ) }
    dend_46 { pt3dadd( -168.894, -107.036, -2.30582, 0.74 ) }
    dend_46 { pt3dadd( -169.397, -107.231, -2.68889, 0.88 ) }
    dend_46 { pt3dadd( -169.932, -107.539, -3.16307, 0.88 ) }
    dend_46 { pt3dadd( -171.07, -108.468, -4.33698, 0.22 ) }
    dend_46 { pt3dadd( -171.464, -108.852, -4.77975, 0.22 ) }
    dend_46 { pt3dadd( -171.782, -109.196, -5.16763, 0.74 ) }
    dend_46 { pt3dadd( -172.16, -109.692, -5.72214, 0.74 ) }
    dend_46 { pt3dadd( -172.969, -110.708, -6.78783, 0.29 ) }
    dend_46 { pt3dadd( -173.228, -111.015, -7.09547, 0.29 ) }
    dend_46 { pt3dadd( -173.663, -111.502, -7.55598, 0.88 ) }
    dend_46 { pt3dadd( -174.192, -112.033, -8.08519, 1.03 ) }
    dend_46 { pt3dadd( -175.81, -113.464, -9.63292, 0.22 ) }
    dend_46 { pt3dadd( -177.369, -114.712, -11.0322, 0.22 ) }
    dend_46 { pt3dadd( -178.014, -115.162, -11.5537, 0.22 ) }
    dend_46 { pt3dadd( -178.4, -115.416, -11.8506, 1.11 ) }
    dend_46 { pt3dadd( -178.873, -115.715, -12.1878, 1.11 ) }
    dend_46 { pt3dadd( -179.392, -116.006, -12.4982, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 70/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -20.5653, -146.264, -2.8379, 0.81 ) }
    dend_40 { pt3dadd( -18.8395, -147.171, -3.23131, 0.81 ) }
    dend_40 { pt3dadd( -17.4442, -147.823, -3.57036, 0.52 ) }
    dend_40 { pt3dadd( -15.456, -148.68, -4.0791, 0.52 ) }
    dend_40 { pt3dadd( -14.5888, -149.066, -4.30948, 0.37 ) }
    dend_40 { pt3dadd( -12.858, -149.862, -4.77893, 0.37 ) }
    dend_40 { pt3dadd( -12.1713, -150.189, -4.96701, 0.66 ) }
    dend_40 { pt3dadd( -11.5616, -150.482, -5.15617, 0.88 ) }
    dend_40 { pt3dadd( -11.0544, -150.731, -5.30844, 0.88 ) }
    dend_40 { pt3dadd( -9.76141, -151.498, -5.70124, 0.59 ) }
    dend_40 { pt3dadd( -8.61798, -152.326, -6.05159, 0.66 ) }
    dend_40 { pt3dadd( -7.4818, -153.275, -6.39702, 0.74 ) }
    dend_40 { pt3dadd( -6.78649, -153.851, -6.60618, 0.74 ) }
    dend_40 { pt3dadd( -6.24544, -154.264, -6.76624, 0.52 ) }
    dend_40 { pt3dadd( -5.36113, -154.864, -7.02836, 0.29 ) }
    dend_40 { pt3dadd( -4.41059, -155.375, -7.29042, 0.96 ) }
    dend_40 { pt3dadd( -3.54224, -155.768, -7.51192, 1.03 ) }
    dend_40 { pt3dadd( -2.96689, -156.005, -7.64344, 1.03 ) }
    dend_40 { pt3dadd( -1.65341, -156.52, -7.90929, 0.66 ) }
    dend_40 { pt3dadd( -1.10208, -156.741, -8.02339, 0.52 ) }
    dend_40 { pt3dadd( 0.163457, -157.27, -8.2891, 0.59 ) }
    dend_40 { pt3dadd( 1.41497, -157.865, -8.55672, 0.59 ) }
    dend_40 { pt3dadd( 2.56234, -158.488, -8.81308, 0.52 ) }
    dend_40 { pt3dadd( 3.50805, -159.069, -9.0369, 0.52 ) }
    dend_40 { pt3dadd( 4.49501, -159.739, -9.28471, 0.96 ) }
    dend_40 { pt3dadd( 5.10731, -160.165, -9.45783, 1.18 ) }
    dend_40 { pt3dadd( 6.11737, -160.855, -9.77613, 0.66 ) }
    dend_40 { pt3dadd( 7.30911, -161.602, -10.1611, 0.37 ) }
    dend_40 { pt3dadd( 8.05526, -162.024, -10.4065, 0.37 ) }
    dend_40 { pt3dadd( 9.60163, -162.808, -10.9215, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_40 { pt3dadd( 10.9778, -163.475, -11.3388, 1.03 ) }
    dend_40 { pt3dadd( 12.0272, -163.982, -11.6388, 0.81 ) }
    dend_40 { pt3dadd( 12.9987, -164.451, -11.8916, 0.52 ) }
    dend_40 { pt3dadd( 14.1443, -165.006, -12.159, 0.52 ) }
    dend_40 { pt3dadd( 15.0444, -165.459, -12.3414, 0.52 ) }
    dend_40 { pt3dadd( 16.289, -166.178, -12.5598, 0.52 ) }
    dend_40 { pt3dadd( 17.3396, -166.859, -12.7183, 1.33 ) }
    dend_40 { pt3dadd( 17.9958, -167.331, -12.8105, 1.69 ) }
    dend_40 { pt3dadd( 18.7476, -167.943, -12.9101, 1.69 ) }
    dend_40 { pt3dadd( 19.9796, -169.031, -13.1714, 1.11 ) }
    dend_40 { pt3dadd( 21.2974, -170.235, -13.5535, 0.44 ) }
    dend_40 { pt3dadd( 22.1367, -170.981, -13.8831, 0.44 ) }
    dend_40 { pt3dadd( 22.8084, -171.558, -14.1964, 0.29 ) }
    dend_40 { pt3dadd( 23.5633, -172.19, -14.6207, 0.29 ) }
    dend_40 { pt3dadd( 25.2579, -173.539, -15.6976, 1.03 ) }
    dend_40 { pt3dadd( 25.7469, -173.908, -16.0437, 1.4 ) }
    dend_40 { pt3dadd( 26.2687, -174.311, -16.4524, 1.4 ) }
    dend_40 { pt3dadd( 27.9129, -175.721, -17.8509, 0.22 ) }
    dend_40 { pt3dadd( 28.7807, -176.51, -18.6009, 0.52 ) }
    dend_40 { pt3dadd( 29.2086, -176.917, -18.962, 0.52 ) }
    dend_40 { pt3dadd( 29.9453, -177.688, -19.5559, 0.29 ) }
    dend_40 { pt3dadd( 30.9727, -178.805, -20.3965, 0.29 ) }
    dend_40 { pt3dadd( 31.6042, -179.498, -20.8969, 0.29 ) }
    dend_40 { pt3dadd( 32.2399, -180.238, -21.4097, 0.66 ) }
    dend_40 { pt3dadd( 32.7136, -180.794, -21.7527, 0.81 ) }
    dend_40 { pt3dadd( 33.0598, -181.2, -21.9894, 0.81 ) }
    dend_40 { pt3dadd( 33.6494, -181.834, -22.3442, 0.59 ) }
    dend_40 { pt3dadd( 34.3257, -182.482, -22.7244, 0.29 ) }
    dend_40 { pt3dadd( 34.9757, -183.126, -23.0494, 0.29 ) }
    dend_40 { pt3dadd( 35.708, -183.97, -23.3728, 0.66 ) }
    dend_40 { pt3dadd( 36.266, -184.719, -23.558, 0.66 ) }
    dend_40 { pt3dadd( 37.0018, -185.873, -23.7053, 0.29 ) }
    dend_40 { pt3dadd( 37.411, -186.622, -23.7213, 0.29 ) }
    dend_40 { pt3dadd( 38.0866, -187.995, -23.6488, 0.66 ) }
    dend_40 { pt3dadd( 38.5478, -188.972, -23.5307, 0.66 ) }
    dend_40 { pt3dadd( 39.1093, -190.252, -23.3005, 0.44 ) }
    dend_40 { pt3dadd( 39.6274, -191.558, -23.0088, 1.47 ) }
    dend_40 { pt3dadd( 40.0017, -192.612, -22.7452, 1.84 ) }
    dend_40 { pt3dadd( 40.2046, -193.231, -22.588, 1.84 ) }
    dend_40 { pt3dadd( 40.3228, -193.614, -22.5082, 1.84 ) }
    dend_40 { pt3dadd( 40.6331, -194.594, -22.3247, 1.33 ) }
    dend_40 { pt3dadd( 41.0378, -195.773, -22.1363, 0.52 ) }
    dend_40 { pt3dadd( 41.2623, -196.394, -22.0471, 0.52 ) }
    dend_40 { pt3dadd( 41.5719, -197.238, -21.9284, 0.52 ) }
    dend_40 { pt3dadd( 42.0692, -198.585, -21.7266, 0.29 ) }
    dend_40 { pt3dadd( 42.3354, -199.282, -21.6149, 0.29 ) }
    dend_40 { pt3dadd( 42.7415, -200.276, -21.4368, 0.29 ) }
    dend_40 { pt3dadd( 43.143, -201.192, -21.2584, 0.44 ) }
    dend_40 { pt3dadd( 43.7546, -202.424, -21.0229, 0.44 ) }
    dend_40 { pt3dadd( 44.3314, -203.426, -20.8619, 0.44 ) }
    dend_40 { pt3dadd( 44.7838, -204.124, -20.7849, 1.33 ) }
    dend_40 { pt3dadd( 45.3117, -204.922, -20.7508, 1.84 ) }
    dend_40 { pt3dadd( 45.8312, -205.629, -20.7618, 1.84 ) }
    dend_40 { pt3dadd( 46.7161, -206.722, -20.8236, 0.96 ) }
    dend_40 { pt3dadd( 47.8875, -208.055, -20.9528, 0.22 ) }
    dend_40 { pt3dadd( 48.8916, -209.131, -21.0937, 0.22 ) }
    dend_40 { pt3dadd( 50.3206, -210.578, -21.3333, 0.22 ) }
    dend_40 { pt3dadd( 51.1884, -211.39, -21.492, 0.22 ) }
    dend_40 { pt3dadd( 52.1814, -212.222, -21.6841, 0.22 ) }
    dend_40 { pt3dadd( 53.0622, -212.89, -21.875, 0.44 ) }
    dend_40 { pt3dadd( 54.115, -213.618, -22.1365, 0.88 ) }
    dend_40 { pt3dadd( 55.1267, -214.289, -22.4312, 1.03 ) }
    dend_40 { pt3dadd( 55.7875, -214.723, -22.6396, 1.03 ) }
    dend_40 { pt3dadd( 56.5548, -215.266, -22.8937, 0.88 ) }
    dend_40 { pt3dadd( 57.3219, -215.779, -23.1566, 0.29 ) }
    dend_40 { pt3dadd( 57.8789, -216.124, -23.3299, 0.29 ) }
    dend_40 { pt3dadd( 58.743, -216.609, -23.5451, 0.29 ) }
    dend_40 { pt3dadd( 59.8427, -217.17, -23.7613, 0.37 ) }
    dend_40 { pt3dadd( 60.6809, -217.558, -23.8775, 0.37 ) }
    dend_40 { pt3dadd( 61.4233, -217.865, -23.9464, 0.29 ) }
    dend_40 { pt3dadd( 62.8602, -218.38, -24.023, 0.29 ) }
    dend_40 { pt3dadd( 63.9884, -218.753, -24.0781, 0.81 ) }
    dend_40 { pt3dadd( 64.6206, -218.961, -24.1166, 0.81 ) }
    dend_40 { pt3dadd( 65.8335, -219.425, -24.191, 0.59 ) }
    dend_40 { pt3dadd( 66.7143, -219.86, -24.2281, 0.29 ) }
    dend_40 { pt3dadd( 67.4662, -220.305, -24.2432, 0.29 ) }
    dend_40 { pt3dadd( 68.2517, -220.831, -24.2401, 0.66 ) }
    dend_40 { pt3dadd( 68.8298, -221.244, -24.2123, 0.66 ) }
    dend_40 { pt3dadd( 70.5486, -222.51, -24.0484, 0.29 ) }
    dend_40 { pt3dadd( 71.637, -223.309, -23.8746, 0.29 ) }
    dend_40 { pt3dadd( 72.7627, -224.137, -23.6013, 0.29 ) }
    dend_40 { pt3dadd( 73.6132, -224.776, -23.327, 0.29 ) }
    dend_40 { pt3dadd( 74.4547, -225.401, -22.9897, 0.88 ) }
    dend_40 { pt3dadd( 74.8342, -225.68, -22.8304, 0.88 ) }
    dend_40 { pt3dadd( 75.8455, -226.427, -22.3622, 0.66 ) }
    dend_40 { pt3dadd( 77.2324, -227.439, -21.6531, 0.29 ) }
    dend_40 { pt3dadd( 77.9449, -227.971, -21.2518, 0.29 ) }
    dend_40 { pt3dadd( 78.7849, -228.621, -20.771, 0.66 ) }
    dend_40 { pt3dadd( 79.488, -229.19, -20.4043, 0.44 ) }
    dend_40 { pt3dadd( 89.6444, -237.775, -19.7164, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -20.5653, -146.264, -2.8379, 2.14 ) }
    dend_35 { pt3dadd( -21.1462, -147.802, -3.20259, 2.14 ) }
    dend_35 { pt3dadd( -21.6254, -149.204, -3.49261, 1.33 ) }
    dend_35 { pt3dadd( -22.0591, -150.585, -3.73859, 1.03 ) }
    dend_35 { pt3dadd( -22.3438, -151.634, -3.88949, 1.03 ) }
    dend_35 { pt3dadd( -22.5226, -152.349, -3.98139, 1.25 ) }
    dend_35 { pt3dadd( -22.6908, -153.048, -4.06423, 1.25 ) }
    dend_35 { pt3dadd( -22.9423, -154.37, -4.17693, 0.96 ) }
    dend_35 { pt3dadd( -23.1276, -155.44, -4.23223, 0.96 ) }
    dend_35 { pt3dadd( -23.4701, -157.316, -4.31345, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( -23.6815, -158.42, -4.33746, 0.88 ) }
    dend_35 { pt3dadd( -23.8586, -159.467, -4.33698, 0.96 ) }
    dend_35 { pt3dadd( -24.0284, -160.662, -4.30987, 0.96 ) }
    dend_35 { pt3dadd( -24.1565, -161.682, -4.25864, 0.74 ) }
    dend_35 { pt3dadd( -24.2675, -162.665, -4.18716, 0.52 ) }
    dend_35 { pt3dadd( -24.3534, -163.481, -4.1076, 0.52 ) }
    dend_35 { pt3dadd( -24.4537, -164.483, -3.99023, 0.37 ) }
    dend_35 { pt3dadd( -24.5305, -165.281, -3.89295, 0.74 ) }
    dend_35 { pt3dadd( -24.6318, -166.148, -3.78858, 0.74 ) }
    dend_35 { pt3dadd( -24.7591, -167.123, -3.66068, 1.03 ) }
    dend_35 { pt3dadd( -24.8518, -167.743, -3.57744, 1.18 ) }
    dend_35 { pt3dadd( -24.9918, -168.6, -3.47188, 1.33 ) }
    dend_35 { pt3dadd( -25.1139, -169.246, -3.39293, 1.33 ) }
    dend_35 { pt3dadd( -25.2403, -169.934, -3.27152, 1.18 ) }
    dend_35 { pt3dadd( -25.4411, -170.933, -2.98552, 0.96 ) }
    dend_35 { pt3dadd( -25.6094, -171.696, -2.68103, 0.81 ) }
    dend_35 { pt3dadd( -25.7804, -172.464, -2.31041, 0.81 ) }
    dend_35 { pt3dadd( -25.9464, -173.306, -1.85253, 0.81 ) }
    dend_35 { pt3dadd( -26.0803, -174.044, -1.43805, 0.59 ) }
    dend_35 { pt3dadd( -26.2771, -175.263, -0.776879, 0.66 ) }
    dend_35 { pt3dadd( -26.3763, -175.783, -0.526559, 0.66 ) }
    dend_35 { pt3dadd( -26.6019, -176.717, -0.18408, 1.18 ) }
    dend_35 { pt3dadd( -26.9303, -177.68, -0.0128189, 1.47 ) }
    dend_35 { pt3dadd( -27.3075, -178.513, -0.0231091, 1.55 ) }
    dend_35 { pt3dadd( -27.6657, -179.117, -0.130485, 1.55 ) }
    dend_35 { pt3dadd( -28.2643, -179.93, -0.37846, 1.4 ) }
    dend_35 { pt3dadd( -29.1142, -180.868, -0.724054, 1.18 ) }
    dend_35 { pt3dadd( -30.1435, -181.856, -1.12503, 0.66 ) }
    dend_35 { pt3dadd( -31.0109, -182.628, -1.4393, 0.74 ) }
    dend_35 { pt3dadd( -32.1512, -183.595, -1.81585, 1.18 ) }
    dend_35 { pt3dadd( -33.1082, -184.371, -2.08468, 1.25 ) }
    dend_35 { pt3dadd( -34.1291, -185.167, -2.30851, 1.25 ) }
    dend_35 { pt3dadd( -35.0123, -185.824, -2.43517, 1.25 ) }
    dend_35 { pt3dadd( -35.9224, -186.432, -2.51642, 1.33 ) }
    dend_35 { pt3dadd( -36.4547, -186.737, -2.53447, 1.33 ) }
    dend_35 { pt3dadd( -37.3303, -187.148, -2.49395, 1.03 ) }
    dend_35 { pt3dadd( -38.0983, -187.435, -2.40198, 0.74 ) }
    dend_35 { pt3dadd( -38.7171, -187.628, -2.30243, 0.59 ) }
    dend_35 { pt3dadd( -39.5368, -187.883, -2.14719, 0.59 ) }
    dend_35 { pt3dadd( -40.3588, -188.179, -1.97584, 0.88 ) }
    dend_35 { pt3dadd( -41.1849, -188.586, -1.769, 1.18 ) }
    dend_35 { pt3dadd( -41.9659, -189.089, -1.51988, 1.18 ) }
    dend_35 { pt3dadd( -42.6608, -189.629, -1.25668, 1.18 ) }
    dend_35 { pt3dadd( -43.3151, -190.233, -0.99358, 1.18 ) }
    dend_35 { pt3dadd( -43.8186, -190.762, -0.791155, 1.18 ) }
    dend_35 { pt3dadd( -44.5163, -191.577, -0.515174, 0.81 ) }
    dend_35 { pt3dadd( -44.934, -192.117, -0.357283, 0.59 ) }
    dend_35 { pt3dadd( -45.3178, -192.684, -0.221368, 0.52 ) }
    dend_35 { pt3dadd( -46.0501, -193.894, 0.010729, 0.96 ) }
    dend_35 { pt3dadd( -46.4707, -194.708, 0.125768, 1.18 ) }
    dend_35 { pt3dadd( -46.8189, -195.468, 0.198694, 1.18 ) }
    dend_35 { pt3dadd( -47.2598, -196.505, 0.249985, 0.88 ) }
    dend_35 { pt3dadd( -47.683, -197.552, 0.270009, 0.59 ) }
    dend_35 { pt3dadd( -48.0307, -198.494, 0.28038, 0.59 ) }
    dend_35 { pt3dadd( -48.4118, -199.593, 0.292836, 0.59 ) }
    dend_35 { pt3dadd( -48.7671, -200.618, 0.306054, 0.74 ) }
    dend_35 { pt3dadd( -49.1811, -201.764, 0.321792, 1.33 ) }
    dend_35 { pt3dadd( -49.5533, -202.76, 0.335687, 1.69 ) }
    dend_35 { pt3dadd( -50.0301, -203.989, 0.352011, 1.77 ) }
    dend_35 { pt3dadd( -50.3033, -204.712, 0.360464, 1.77 ) }
    dend_35 { pt3dadd( -50.637, -205.624, 0.347843, 1.77 ) }
    dend_35 { pt3dadd( -50.9107, -206.502, 0.313987, 1.47 ) }
    dend_35 { pt3dadd( -51.1643, -207.479, 0.251098, 1.03 ) }
    dend_35 { pt3dadd( -51.3908, -208.441, 0.166033, 1.03 ) }
    dend_35 { pt3dadd( -51.6481, -209.565, 0.0386305, 1.03 ) }
    dend_35 { pt3dadd( -51.8994, -210.731, -0.0945193, 1.11 ) }
    dend_35 { pt3dadd( -52.121, -211.83, -0.208769, 1.33 ) }
    dend_35 { pt3dadd( -52.2867, -212.831, -0.290134, 1.03 ) }
    dend_35 { pt3dadd( -52.4469, -214.19, -0.363708, 0.81 ) }
    dend_35 { pt3dadd( -52.5235, -215.142, -0.389175, 1.03 ) }
    dend_35 { pt3dadd( -52.5798, -216.339, -0.387999, 0.81 ) }
    dend_35 { pt3dadd( -52.595, -216.993, -0.369611, 0.81 ) }
    dend_35 { pt3dadd( -52.5998, -218.76, -0.304633, 0.74 ) }
    dend_35 { pt3dadd( -52.5703, -220.538, -0.225579, 0.74 ) }
    dend_35 { pt3dadd( -52.515, -221.967, -0.15555, 0.74 ) }
    dend_35 { pt3dadd( -52.4383, -224.055, -0.0529062, 0.74 ) }
    dend_35 { pt3dadd( -52.4193, -225.495, 0.00404003, 0.74 ) }
    dend_35 { pt3dadd( -52.4459, -226.429, 0.035226, 1.18 ) }
    dend_35 { pt3dadd( -52.5502, -227.386, 0.066975, 1.4 ) }
    dend_35 { pt3dadd( -52.7754, -228.375, 0.103943, 1.4 ) }
    dend_35 { pt3dadd( -53.1267, -229.307, 0.145187, 1.47 ) }
    dend_35 { pt3dadd( -53.7204, -230.33, 0.189586, 1.55 ) }
    dend_35 { pt3dadd( -54.1925, -230.938, 0.208513, 1.55 ) }
    dend_35 { pt3dadd( -55.0891, -231.879, 0.235091, 1.11 ) }
    dend_35 { pt3dadd( -56.2805, -232.93, 0.268588, 0.88 ) }
    dend_35 { pt3dadd( -57.1577, -233.608, 0.316699, 0.88 ) }
    dend_35 { pt3dadd( -58.1706, -234.299, 0.394605, 1.03 ) }
    dend_35 { pt3dadd( -58.8729, -234.747, 0.453199, 1.03 ) }
    dend_35 { pt3dadd( -59.4312, -235.112, 0.507078, 1.03 ) }
    dend_35 { pt3dadd( -60.2558, -235.728, 0.627693, 0.81 ) }
    dend_35 { pt3dadd( -61.212, -236.606, 0.808103, 0.59 ) }
    dend_35 { pt3dadd( -62.2635, -237.821, 1.04419, 0.59 ) }
    dend_35 { pt3dadd( -62.9289, -238.771, 1.21961, 0.88 ) }
    dend_35 { pt3dadd( -63.4307, -239.654, 1.37867, 0.88 ) }
    dend_35 { pt3dadd( -64.0752, -241.046, 1.60655, 0.74 ) }
    dend_35 { pt3dadd( -64.4327, -242.008, 1.74737, 0.96 ) }
    dend_35 { pt3dadd( -64.7183, -242.958, 1.84858, 1.11 ) }
    dend_35 { pt3dadd( -64.8859, -243.642, 1.91051, 1.11 ) }
    dend_35 { pt3dadd( -65.0467, -244.362, 1.95183, 0.88 ) }
    dend_35 { pt3dadd( -65.2738, -245.353, 1.94817, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_35 { pt3dadd( -65.4465, -246.05, 1.9199, 0.66 ) }
    dend_35 { pt3dadd( -65.7347, -247.222, 1.87565, 0.96 ) }
    dend_35 { pt3dadd( -65.9463, -248.117, 1.83925, 0.96 ) }
    dend_35 { pt3dadd( -66.2046, -249.264, 1.78843, 0.66 ) }
    dend_35 { pt3dadd( -66.44, -250.31, 1.74021, 0.74 ) }
    dend_35 { pt3dadd( -66.8091, -251.989, 1.68386, 0.96 ) }
    dend_35 { pt3dadd( -67.0183, -252.958, 1.6815, 0.96 ) }
    dend_35 { pt3dadd( -67.2311, -253.969, 1.68574, 0.96 ) }
    dend_35 { pt3dadd( -67.4837, -255.127, 1.66992, 0.66 ) }
    dend_35 { pt3dadd( -67.858, -256.837, 1.61264, 0.66 ) }
    dend_35 { pt3dadd( -68.1685, -258.473, 1.51304, 0.66 ) }
    dend_35 { pt3dadd( -68.3278, -259.451, 1.42446, 0.81 ) }
    dend_35 { pt3dadd( -68.5651, -261.164, 1.23478, 0.74 ) }
    dend_35 { pt3dadd( -68.7179, -262.523, 1.05668, 0.74 ) }
    dend_35 { pt3dadd( -68.8321, -263.958, 0.847206, 0.96 ) }
    dend_35 { pt3dadd( -68.8953, -265.163, 0.658606, 0.96 ) }
    dend_35 { pt3dadd( -68.9359, -265.963, 0.541214, 1.62 ) }
    dend_35 { pt3dadd( -68.9842, -266.402, 0.49373, 1.62 ) }
    dend_35 { pt3dadd( -69.09, -266.976, 0.478322, 1.62 ) }
    dend_35 { pt3dadd( -69.2886, -267.816, 0.499481, 1.4 ) }
    dend_35 { pt3dadd( -69.543, -268.692, 0.54847, 0.88 ) }
    dend_35 { pt3dadd( -69.8896, -269.811, 0.635532, 0.59 ) }
    dend_35 { pt3dadd( -70.3541, -271.333, 0.774071, 0.81 ) }
    dend_35 { pt3dadd( -70.7302, -272.558, 0.896532, 0.96 ) }
    dend_35 { pt3dadd( -71.0197, -273.548, 0.989853, 0.96 ) }
    dend_35 { pt3dadd( -71.3426, -274.743, 1.0836, 1.11 ) }
    dend_35 { pt3dadd( -71.553, -275.526, 1.13409, 1.11 ) }
    dend_35 { pt3dadd( -71.7276, -276.13, 1.16238, 1.33 ) }
    dend_35 { pt3dadd( -71.9094, -276.719, 1.18287, 1.33 ) }
    dend_35 { pt3dadd( -72.2751, -277.674, 1.22639, 1.03 ) }
    dend_35 { pt3dadd( -72.7207, -278.613, 1.28214, 0.66 ) }
    dend_35 { pt3dadd( -73.094, -279.312, 1.33119, 0.37 ) }
    dend_35 { pt3dadd( -73.3766, -279.822, 1.36902, 0.37 ) }
    dend_35 { pt3dadd( -73.7222, -280.491, 1.42277, 0.37 ) }
    dend_35 { pt3dadd( -74.0342, -281.127, 1.47786, 1.03 ) }
    dend_35 { pt3dadd( -74.3723, -281.835, 1.53976, 1.25 ) }
    dend_35 { pt3dadd( -74.5938, -282.361, 1.58884, 1.25 ) }
    dend_35 { pt3dadd( -74.9485, -283.348, 1.67791, 0.96 ) }
    dend_35 { pt3dadd( -75.3421, -284.591, 1.78156, 0.52 ) }
    dend_35 { pt3dadd( -75.6783, -285.71, 1.86384, 0.52 ) }
    dend_35 { pt3dadd( -76.1148, -287.271, 1.96276, 0.52 ) }
    dend_35 { pt3dadd( -76.4263, -288.543, 2.03691, 0.81 ) }
    dend_35 { pt3dadd( -76.6455, -289.472, 2.09437, 1.03 ) }
    dend_35 { pt3dadd( -76.8515, -290.311, 2.14816, 1.03 ) }
    dend_35 { pt3dadd( -77.0174, -290.957, 2.18896, 0.81 ) }
    dend_35 { pt3dadd( -77.2348, -291.736, 2.23334, 0.81 ) }
    dend_35 { pt3dadd( -77.581, -292.829, 2.28252, 0.59 ) }
    dend_35 { pt3dadd( -78.0225, -293.972, 2.31625, 0.44 ) }
    dend_35 { pt3dadd( -78.7132, -295.406, 2.35693, 0.88 ) }
    dend_35 { pt3dadd( -79.0698, -296.019, 2.37443, 0.88 ) }
    dend_35 { pt3dadd( -79.6076, -296.809, 2.39632, 0.59 ) }
    dend_35 { pt3dadd( -80.1799, -297.478, 2.41716, 0.59 ) }
    dend_35 { pt3dadd( -81.0942, -298.311, 2.43144, 0.59 ) }
    dend_35 { pt3dadd( -82.0837, -299.036, 2.42668, 0.81 ) }
    dend_35 { pt3dadd( -82.6502, -299.379, 2.42016, 0.81 ) }
    dend_35 { pt3dadd( -83.1081, -299.624, 2.41272, 0.81 ) }
    dend_35 { pt3dadd( -84.1433, -300.095, 2.38619, 0.59 ) }
    dend_35 { pt3dadd( -85.2812, -300.509, 2.34888, 0.88 ) }
    dend_35 { pt3dadd( -86.4126, -300.836, 2.30108, 1.03 ) }
    dend_35 { pt3dadd( -87.4928, -301.096, 2.24564, 1.03 ) }
    dend_35 { pt3dadd( -88.3863, -301.264, 2.202, 0.59 ) }
    dend_35 { pt3dadd( -89.1924, -301.394, 2.17233, 0.59 ) }
    dend_35 { pt3dadd( -89.8776, -301.505, 2.15644, 0.59 ) }
    dend_35 { pt3dadd( -90.4671, -301.598, 2.16114, 0.59 ) }
    dend_35 { pt3dadd( -91.095, -301.723, 2.1749, 0.59 ) }
    dend_35 { pt3dadd( -91.9169, -301.925, 2.20704, 0.44 ) }
    dend_35 { pt3dadd( -93.1479, -302.307, 2.274, 0.81 ) }
    dend_35 { pt3dadd( -94.1754, -302.697, 2.34943, 1.11 ) }
    dend_35 { pt3dadd( -95.2962, -303.202, 2.45712, 0.81 ) }
    dend_35 { pt3dadd( -96.4178, -303.796, 2.5835, 0.66 ) }
    dend_35 { pt3dadd( -96.9313, -304.107, 2.64643, 0.66 ) }
    dend_35 { pt3dadd( -97.5488, -304.535, 2.72697, 0.52 ) }
    dend_35 { pt3dadd( -98.2544, -305.074, 2.82939, 0.52 ) }
    dend_35 { pt3dadd( -98.9681, -305.688, 2.94126, 0.52 ) }
    dend_35 { pt3dadd( -99.6842, -306.351, 3.06025, 0.52 ) }
    dend_35 { pt3dadd( -100.116, -306.791, 3.13701, 1.11 ) }
    dend_35 { pt3dadd( -101.073, -307.869, 3.30314, 1.4 ) }
    dend_35 { pt3dadd( -101.59, -308.518, 3.39077, 1.84 ) }
    dend_35 { pt3dadd( -102.156, -309.305, 3.47299, 2.43 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 79/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -10.9648, -83.7536, -6.37884, 0.66 ) }
    dend_32 { pt3dadd( -11.0094, -85.599, -6.31578, 0.66 ) }
    dend_32 { pt3dadd( -11.057, -86.7366, -6.28095, 0.37 ) }
    dend_32 { pt3dadd( -11.0835, -87.4968, -6.28631, 0.81 ) }
    dend_32 { pt3dadd( -11.1, -88.4789, -6.31518, 1.03 ) }
    dend_32 { pt3dadd( -11.1154, -89.3326, -6.34719, 1.11 ) }
    dend_32 { pt3dadd( -11.139, -90.2439, -6.39651, 0.88 ) }
    dend_32 { pt3dadd( -11.1717, -91.2933, -6.49296, 0.59 ) }
    dend_32 { pt3dadd( -11.1821, -92.5144, -6.64814, 0.29 ) }
    dend_32 { pt3dadd( -11.1639, -93.3992, -6.78838, 0.29 ) }
    dend_32 { pt3dadd( -11.1358, -93.8042, -6.8639, 0.29 ) }
    dend_32 { pt3dadd( -11.0057, -94.7155, -7.07546, 0.74 ) }
    dend_32 { pt3dadd( -10.8108, -95.562, -7.30799, 1.11 ) }
    dend_32 { pt3dadd( -10.65, -96.0953, -7.4643, 1.11 ) }
    dend_32 { pt3dadd( -10.3866, -96.8798, -7.69877, 1.11 ) }
    dend_32 { pt3dadd( -10.0533, -97.7892, -7.9346, 0.81 ) }
    dend_32 { pt3dadd( -9.49631, -99.2904, -8.25033, 0.44 ) }
    dend_32 { pt3dadd( -8.98714, -100.717, -8.47557, 0.59 ) }
    dend_32 { pt3dadd( -8.71358, -101.577, -8.57334, 0.88 ) }
    dend_32 { pt3dadd( -8.47329, -102.484, -8.63188, 0.88 ) }
    dend_32 { pt3dadd( -8.20006, -103.784, -8.66033, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -8.00331, -105.063, -8.62285, 0.44 ) }
    dend_32 { pt3dadd( -7.90215, -106.072, -8.53836, 1.03 ) }
    dend_32 { pt3dadd( -7.84852, -106.918, -8.4495, 0.74 ) }
    dend_32 { pt3dadd( -7.80348, -107.979, -8.34451, 0.52 ) }
    dend_32 { pt3dadd( -7.78012, -108.8, -8.27717, 0.88 ) }
    dend_32 { pt3dadd( -7.77785, -109.555, -8.26414, 1.18 ) }
    dend_32 { pt3dadd( -7.77823, -110.208, -8.26632, 1.18 ) }
    dend_32 { pt3dadd( -7.78837, -110.957, -8.27712, 0.88 ) }
    dend_32 { pt3dadd( -7.81276, -112.26, -8.31146, 0.29 ) }
    dend_32 { pt3dadd( -7.8401, -113.245, -8.35071, 0.29 ) }
    dend_32 { pt3dadd( -7.89257, -114.656, -8.43886, 1.03 ) }
    dend_32 { pt3dadd( -7.9228, -115.593, -8.51462, 1.47 ) }
    dend_32 { pt3dadd( -7.94315, -116.184, -8.56343, 1.47 ) }
    dend_32 { pt3dadd( -7.96078, -116.833, -8.6183, 1.47 ) }
    dend_32 { pt3dadd( -7.9629, -117.803, -8.7001, 1.25 ) }
    dend_32 { pt3dadd( -7.94535, -118.989, -8.78711, 0.44 ) }
    dend_32 { pt3dadd( -7.90622, -119.967, -8.84332, 0.44 ) }
    dend_32 { pt3dadd( -7.85791, -120.923, -8.9051, 0.44 ) }
    dend_32 { pt3dadd( -7.82603, -121.414, -8.9395, 0.59 ) }
    dend_32 { pt3dadd( -7.74786, -122.567, -9.02209, 0.59 ) }
    dend_32 { pt3dadd( -7.67181, -123.445, -9.09103, 0.37 ) }
    dend_32 { pt3dadd( -7.60649, -124.178, -9.14855, 0.81 ) }
    dend_32 { pt3dadd( -7.54662, -124.85, -9.19159, 1.03 ) }
    dend_32 { pt3dadd( -7.50502, -125.341, -9.21419, 1.03 ) }
    dend_32 { pt3dadd( -7.46711, -125.951, -9.22703, 0.59 ) }
    dend_32 { pt3dadd( -7.39927, -126.944, -9.23084, 0.22 ) }
    dend_32 { pt3dadd( -7.33374, -127.566, -9.23092, 0.22 ) }
    dend_32 { pt3dadd( -7.23523, -128.3, -9.23059, 0.22 ) }
    dend_32 { pt3dadd( -7.1137, -129.089, -9.23005, 0.66 ) }
    dend_32 { pt3dadd( -6.95255, -130.033, -9.23443, 0.88 ) }
    dend_32 { pt3dadd( -6.68513, -131.41, -9.24923, 0.88 ) }
    dend_32 { pt3dadd( -6.36149, -133.009, -9.27193, 0.96 ) }
    dend_32 { pt3dadd( -6.11596, -134.214, -9.31004, 1.18 ) }
    dend_32 { pt3dadd( -5.93627, -135.19, -9.36032, 0.66 ) }
    dend_32 { pt3dadd( -5.79717, -135.992, -9.40539, 0.52 ) }
    dend_32 { pt3dadd( -5.56658, -137.523, -9.50357, 0.52 ) }
    dend_32 { pt3dadd( -5.41623, -138.705, -9.58709, 0.81 ) }
    dend_32 { pt3dadd( -5.27973, -139.898, -9.68145, 0.52 ) }
    dend_32 { pt3dadd( -5.17621, -140.791, -9.7493, 0.52 ) }
    dend_32 { pt3dadd( -5.04843, -141.847, -9.85221, 1.47 ) }
    dend_32 { pt3dadd( -4.90765, -142.927, -9.98533, 1.77 ) }
    dend_32 { pt3dadd( -4.78912, -143.76, -10.1245, 1.77 ) }
    dend_32 { pt3dadd( -4.70626, -144.239, -10.2191, 1.77 ) }
    dend_32 { pt3dadd( -4.54235, -145.03, -10.3849, 1.25 ) }
    dend_32 { pt3dadd( -4.33246, -145.947, -10.5813, 0.81 ) }
    dend_32 { pt3dadd( -4.08399, -147.06, -10.8241, 0.44 ) }
    dend_32 { pt3dadd( -3.76395, -148.455, -11.1227, 0.37 ) }
    dend_32 { pt3dadd( -3.56672, -149.313, -11.2997, 0.52 ) }
    dend_32 { pt3dadd( -3.31201, -150.35, -11.5069, 0.52 ) }
    dend_32 { pt3dadd( -3.10773, -151.127, -11.6574, 0.66 ) }
    dend_32 { pt3dadd( -2.81718, -152.147, -11.8583, 0.66 ) }
    dend_32 { pt3dadd( -2.4304, -153.452, -12.1679, 0.88 ) }
    dend_32 { pt3dadd( -2.08461, -154.547, -12.47, 1.25 ) }
    dend_32 { pt3dadd( -1.88088, -155.163, -12.6741, 1.25 ) }
    dend_32 { pt3dadd( -1.69157, -155.692, -12.8744, 1.25 ) }
    dend_32 { pt3dadd( -1.29848, -156.73, -13.3111, 1.11 ) }
    dend_32 { pt3dadd( -0.93842, -157.645, -13.7275, 0.74 ) }
    dend_32 { pt3dadd( -0.614172, -158.449, -14.1181, 0.29 ) }
    dend_32 { pt3dadd( -0.425089, -158.924, -14.3603, 0.29 ) }
    dend_32 { pt3dadd( 0.0198406, -160.085, -14.9344, 0.44 ) }
    dend_32 { pt3dadd( 0.264312, -160.752, -15.2347, 0.88 ) }
    dend_32 { pt3dadd( 0.462853, -161.358, -15.4645, 1.33 ) }
    dend_32 { pt3dadd( 0.675745, -162.077, -15.6841, 1.47 ) }
    dend_32 { pt3dadd( 0.88189, -162.86, -15.8731, 1.47 ) }
    dend_32 { pt3dadd( 1.05399, -163.556, -16.0071, 1.25 ) }
    dend_32 { pt3dadd( 1.27863, -164.508, -16.1535, 0.44 ) }
    dend_32 { pt3dadd( 1.60784, -165.905, -16.2772, 0.29 ) }
    dend_32 { pt3dadd( 1.85635, -167.014, -16.3042, 0.29 ) }
    dend_32 { pt3dadd( 2.0907, -168.146, -16.2711, 0.29 ) }
    dend_32 { pt3dadd( 2.25807, -169.05, -16.2032, 0.74 ) }
    dend_32 { pt3dadd( 2.35618, -169.69, -16.1298, 0.88 ) }
    dend_32 { pt3dadd( 2.49248, -170.991, -15.9288, 0.96 ) }
    dend_32 { pt3dadd( 2.53713, -172.106, -15.7324, 1.03 ) }
    dend_32 { pt3dadd( 2.50911, -172.947, -15.5917, 1.03 ) }
    dend_32 { pt3dadd( 2.43312, -173.785, -15.4484, 0.59 ) }
    dend_32 { pt3dadd( 2.33035, -174.682, -15.3025, 0.22 ) }
    dend_32 { pt3dadd( 2.26316, -175.247, -15.2286, 0.22 ) }
    dend_32 { pt3dadd( 2.11319, -176.547, -15.1335, 0.96 ) }
    dend_32 { pt3dadd( 2.02482, -177.318, -15.1006, 1.11 ) }
    dend_32 { pt3dadd( 1.94352, -178.165, -15.0447, 1.11 ) }
    dend_32 { pt3dadd( 1.89505, -178.974, -14.9642, 0.59 ) }
    dend_32 { pt3dadd( 1.87554, -179.797, -14.8644, 0.29 ) }
    dend_32 { pt3dadd( 1.88319, -180.498, -14.7608, 0.29 ) }
    dend_32 { pt3dadd( 1.89493, -181.083, -14.6568, 0.29 ) }
    dend_32 { pt3dadd( 1.93045, -182.351, -14.4057, 0.44 ) }
    dend_32 { pt3dadd( 1.96559, -183.425, -14.1637, 0.66 ) }
    dend_32 { pt3dadd( 2.00612, -184.56, -13.8966, 0.66 ) }
    dend_32 { pt3dadd( 2.04436, -185.379, -13.712, 0.81 ) }
    dend_32 { pt3dadd( 2.09113, -186.291, -13.5292, 0.81 ) }
    dend_32 { pt3dadd( 2.13876, -187.161, -13.3721, 0.52 ) }
    dend_32 { pt3dadd( 2.16984, -188.268, -13.2031, 0.66 ) }
    dend_32 { pt3dadd( 2.17853, -189.088, -13.0833, 0.66 ) }
    dend_32 { pt3dadd( 2.14133, -190.47, -12.9494, 0.37 ) }
    dend_32 { pt3dadd( 2.07102, -191.695, -12.8931, 0.37 ) }
    dend_32 { pt3dadd( 1.98298, -192.674, -12.8929, 1.03 ) }
    dend_32 { pt3dadd( 1.86444, -193.658, -12.9645, 1.47 ) }
    dend_32 { pt3dadd( 1.71202, -194.625, -13.0987, 1.62 ) }
    dend_32 { pt3dadd( 1.36784, -196.351, -13.4437, 0.88 ) }
    dend_32 { pt3dadd( 1.0595, -197.475, -13.7584, 0.59 ) }
    dend_32 { pt3dadd( 0.750232, -198.333, -14.0652, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_32 { pt3dadd( 0.122589, -199.715, -14.6278, 0.29 ) }
    dend_32 { pt3dadd( -0.0963167, -200.123, -14.7893, 0.29 ) }
    dend_32 { pt3dadd( -0.455252, -200.708, -14.9977, 0.29 ) }
    dend_32 { pt3dadd( -1.13903, -201.795, -15.3063, 0.29 ) }
    dend_32 { pt3dadd( -1.81867, -202.822, -15.5947, 0.59 ) }
    dend_32 { pt3dadd( -2.52438, -203.909, -15.88, 0.59 ) }
    dend_32 { pt3dadd( -2.96709, -204.583, -16.0493, 0.44 ) }
    dend_32 { pt3dadd( -3.51972, -205.391, -16.2659, 0.44 ) }
    dend_32 { pt3dadd( -3.89534, -205.885, -16.4421, 0.29 ) }
    dend_32 { pt3dadd( -4.45453, -206.588, -16.7573, 1.4 ) }
    dend_32 { pt3dadd( -5.29979, -207.395, -17.2817, 1.62 ) }
    dend_32 { pt3dadd( -6.1003, -207.95, -17.7628, 1.4 ) }
    dend_32 { pt3dadd( -6.88983, -208.353, -18.209, 1.11 ) }
    dend_32 { pt3dadd( -8.21451, -208.894, -18.9028, 0.81 ) }
    dend_32 { pt3dadd( -8.9502, -209.173, -19.2821, 0.59 ) }
    dend_32 { pt3dadd( -9.76105, -209.508, -19.7276, 0.74 ) }
    dend_32 { pt3dadd( -10.5387, -209.912, -20.184, 0.81 ) }
    dend_32 { pt3dadd( -11.1412, -210.42, -20.5728, 0.52 ) }
    dend_32 { pt3dadd( -11.5827, -210.932, -20.8914, 0.52 ) }
    dend_32 { pt3dadd( -11.9823, -211.502, -21.1743, 0.74 ) }
    dend_32 { pt3dadd( -12.5318, -212.314, -21.5943, 0.74 ) }
    dend_32 { pt3dadd( -12.8167, -212.817, -21.825, 0.74 ) }
    dend_32 { pt3dadd( -13.1066, -213.385, -22.0986, 0.52 ) }
    dend_32 { pt3dadd( -13.5304, -214.28, -22.4824, 0.52 ) }
    dend_32 { pt3dadd( -13.7598, -214.771, -22.6756, 0.52 ) }
    dend_32 { pt3dadd( -14.1908, -215.736, -22.9914, 1.69 ) }
    dend_32 { pt3dadd( -14.4468, -216.374, -23.1502, 2.14 ) }
    dend_32 { pt3dadd( -14.9012, -217.721, -23.4041, 1.55 ) }
    dend_32 { pt3dadd( -15.3086, -219.133, -23.5996, 0.29 ) }
    dend_32 { pt3dadd( -15.5185, -219.958, -23.682, 0.29 ) }
    dend_32 { pt3dadd( -15.7868, -221.093, -23.7623, 0.44 ) }
    dend_32 { pt3dadd( -16.0322, -222.175, -23.7988, 0.59 ) }
    dend_32 { pt3dadd( -16.2462, -223.135, -23.8066, 0.59 ) }
    dend_32 { pt3dadd( -16.4584, -224.113, -23.7752, 0.29 ) }
    dend_32 { pt3dadd( -16.5738, -224.639, -23.7592, 0.29 ) }
    dend_32 { pt3dadd( -16.7323, -225.372, -23.7373, 0.96 ) }
    dend_32 { pt3dadd( -16.8601, -226.016, -23.7198, 1.03 ) }
    dend_32 { pt3dadd( -17.013, -226.911, -23.704, 0.52 ) }
    dend_32 { pt3dadd( -17.1721, -228.076, -23.696, 0.29 ) }
    dend_32 { pt3dadd( -17.2416, -228.738, -23.695, 0.81 ) }
    dend_32 { pt3dadd( -17.306, -229.507, -23.6936, 0.96 ) }
    dend_32 { pt3dadd( -17.3499, -230.1, -23.6943, 0.96 ) }
    dend_32 { pt3dadd( -17.4251, -231.139, -23.6983, 0.29 ) }
    dend_32 { pt3dadd( -17.5313, -232.325, -23.6977, 0.29 ) }
    dend_32 { pt3dadd( -17.6648, -233.567, -23.7305, 1.47 ) }
    dend_32 { pt3dadd( -17.7628, -234.436, -23.7712, 1.92 ) }
    dend_32 { pt3dadd( -17.8067, -234.859, -23.7966, 1.92 ) }
    dend_32 { pt3dadd( -17.9113, -235.911, -23.8529, 1.33 ) }
    dend_32 { pt3dadd( -18.0147, -237.08, -23.923, 0.29 ) }
    dend_32 { pt3dadd( -18.1129, -238.273, -24.0052, 0.29 ) }
    dend_32 { pt3dadd( -18.1826, -239.225, -24.0852, 0.29 ) }
    dend_32 { pt3dadd( -18.3266, -241.294, -24.2784, 0.29 ) }
    dend_32 { pt3dadd( -18.41, -242.701, -24.4022, 1.4 ) }
    dend_32 { pt3dadd( -18.4487, -243.558, -24.4713, 2.14 ) }
    dend_32 { pt3dadd( -18.4607, -243.932, -24.4985, 2.28 ) }
    dend_32 { pt3dadd( -18.4709, -244.542, -24.5309, 2.28 ) }
    dend_32 { pt3dadd( -18.4824, -245.173, -24.5439, 1.92 ) }
    dend_32 { pt3dadd( -18.5031, -246.087, -24.4855, 0.88 ) }
    dend_32 { pt3dadd( -18.5316, -247.482, -24.3087, 0.29 ) }
    dend_32 { pt3dadd( -18.5442, -248.333, -24.1543, 0.29 ) }
    dend_32 { pt3dadd( -18.5517, -249.287, -23.9497, 0.29 ) }
    dend_32 { pt3dadd( -18.5581, -250.778, -23.5951, 0.29 ) }
    dend_32 { pt3dadd( -18.5574, -252.306, -23.2308, 0.96 ) }
    dend_32 { pt3dadd( -18.5502, -253.328, -22.999, 1.62 ) }
    dend_32 { pt3dadd( -18.5436, -253.907, -22.8724, 1.62 ) }
    dend_32 { pt3dadd( -18.5385, -254.453, -22.766, 1.62 ) }
    dend_32 { pt3dadd( -18.5374, -255.629, -22.5874, 1.11 ) }
    dend_32 { pt3dadd( -18.5517, -257.072, -22.5091, 0.29 ) }
    dend_32 { pt3dadd( -18.5856, -258.149, -22.5236, 0.29 ) }
    dend_32 { pt3dadd( -18.6264, -259.003, -22.5602, 0.59 ) }
    dend_32 { pt3dadd( -18.6565, -259.426, -22.5872, 0.66 ) }
    dend_32 { pt3dadd( -18.7038, -259.94, -22.6255, 0.66 ) }
    dend_32 { pt3dadd( -18.8694, -261.35, -22.7369, 0.29 ) }
    dend_32 { pt3dadd( -19.1194, -262.986, -22.8962, 0.29 ) }
    dend_32 { pt3dadd( -19.3525, -264.254, -23.0284, 0.96 ) }
    dend_32 { pt3dadd( -19.5768, -265.254, -23.1251, 1.4 ) }
    dend_32 { pt3dadd( -19.763, -266.003, -23.185, 1.4 ) }
    dend_32 { pt3dadd( -19.9644, -266.777, -23.2323, 1.4 ) }
    dend_32 { pt3dadd( -20.2388, -267.801, -23.2669, 0.88 ) }
    dend_32 { pt3dadd( -20.5794, -269.053, -23.3, 0.29 ) }
    dend_32 { pt3dadd( -20.8841, -270.197, -23.3132, 0.29 ) }
    dend_32 { pt3dadd( -21.2054, -271.353, -23.3159, 0.44 ) }
    dend_32 { pt3dadd( -21.425, -272.085, -23.3049, 0.66 ) }
    dend_32 { pt3dadd( -21.6117, -272.673, -23.2804, 0.66 ) }
    dend_32 { pt3dadd( -21.9463, -273.72, -23.1916, 0.29 ) }
    dend_32 { pt3dadd( -22.1438, -274.349, -23.1333, 0.29 ) }
    dend_32 { pt3dadd( -22.4025, -275.152, -23.094, 0.29 ) }
    dend_32 { pt3dadd( -22.7874, -276.255, -23.1134, 0.29 ) }
    dend_32 { pt3dadd( -23.0243, -276.885, -23.1674, 0.52 ) }
    dend_32 { pt3dadd( -23.3499, -277.759, -23.2906, 0.66 ) }
    dend_32 { pt3dadd( -23.6078, -278.629, -23.4032, 0.66 ) }
    dend_32 { pt3dadd( -23.8812, -279.979, -23.5706, 1.4 ) }
    dend_32 { pt3dadd( -23.9881, -281.16, -23.7306, 2.28 ) }
    dend_32 { pt3dadd( -23.9857, -282.334, -23.9039, 2.5 ) }
    dend_32 { pt3dadd( -23.9195, -282.992, -23.9892, 2.5 ) }
    dend_32 { pt3dadd( -23.404, -285.287, -24.2299, 0.22 ) }
    dend_32 { pt3dadd( -23.0845, -286.211, -24.2885, 0.22 ) }
    dend_32 { pt3dadd( -22.5205, -287.376, -24.3097, 0.37 ) }
    dend_32 { pt3dadd( -22.0943, -288.063, -24.2924, 0.44 ) }
    dend_32 { pt3dadd( -21.3037, -289.073, -24.3609, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( -20.4451, -290.002, -24.5838, 0.88 ) }
    dend_32 { pt3dadd( -19.9606, -290.438, -24.8496, 1.4 ) }
    dend_32 { pt3dadd( -19.6008, -290.75, -25.1285, 1.4 ) }
    dend_32 { pt3dadd( -19.1377, -291.197, -25.6055, 1.11 ) }
    dend_32 { pt3dadd( -17.7657, -292.745, -27.4168, 0.29 ) }
    dend_32 { pt3dadd( -17.3532, -293.306, -28.0884, 0.29 ) }
    dend_32 { pt3dadd( -16.7561, -294.29, -29.2271, 0.81 ) }
    dend_32 { pt3dadd( -16.4743, -294.934, -29.8492, 0.81 ) }
    dend_32 { pt3dadd( -16.0488, -296.306, -30.9421, 0.22 ) }
    dend_32 { pt3dadd( -15.9243, -296.882, -31.3148, 0.22 ) }
    dend_32 { pt3dadd( -15.7965, -297.775, -31.7221, 0.44 ) }
    dend_32 { pt3dadd( -15.7443, -298.28, -31.9077, 0.59 ) }
    dend_32 { pt3dadd( -15.5833, -300.396, -32.5257, 0.22 ) }
    dend_32 { pt3dadd( -15.541, -301.135, -32.7273, 0.74 ) }
    dend_32 { pt3dadd( -15.5133, -301.793, -32.893, 1.03 ) }
    dend_32 { pt3dadd( -15.4739, -302.496, -33.0564, 1.03 ) }
    dend_32 { pt3dadd( -15.4311, -303.184, -33.2049, 0.74 ) }
    dend_32 { pt3dadd( -15.3864, -303.823, -33.3407, 0.37 ) }
    dend_32 { pt3dadd( -15.2535, -305.445, -33.6948, 0.22 ) }
    dend_32 { pt3dadd( -15.1386, -307.06, -34.0514, 0.22 ) }
    dend_32 { pt3dadd( -15.0697, -308.276, -34.3122, 0.88 ) }
    dend_32 { pt3dadd( -15.0291, -309.175, -34.5019, 1.62 ) }
    dend_32 { pt3dadd( -15.0137, -309.669, -34.6053, 1.84 ) }
    dend_32 { pt3dadd( -15.0093, -310.265, -34.7256, 1.84 ) }
    dend_32 { pt3dadd( -15.0332, -311.494, -34.9566, 0.52 ) }
    dend_32 { pt3dadd( -15.0994, -312.533, -35.1423, 0.22 ) }
    dend_32 { pt3dadd( -15.1939, -313.366, -35.2892, 0.22 ) }
    dend_32 { pt3dadd( -15.3069, -314.084, -35.4114, 0.37 ) }
    dend_32 { pt3dadd( -15.3626, -314.364, -35.4492, 0.37 ) }
    dend_32 { pt3dadd( -15.5374, -315.056, -35.5355, 0.22 ) }
    dend_32 { pt3dadd( -15.7061, -315.619, -35.5989, 0.74 ) }
    dend_32 { pt3dadd( -15.9137, -316.259, -35.6732, 0.74 ) }
    dend_32 { pt3dadd( -16.1129, -316.838, -35.733, 0.59 ) }
    dend_32 { pt3dadd( -16.5708, -318.093, -35.8456, 0.22 ) }
    dend_32 { pt3dadd( -16.8007, -318.673, -35.8829, 0.22 ) }
    dend_32 { pt3dadd( -17.1417, -319.448, -35.8831, 0.59 ) }
    dend_32 { pt3dadd( -17.4098, -320.006, -35.84, 0.59 ) }
    dend_32 { pt3dadd( -17.6905, -320.581, -35.7347, 0.29 ) }
    dend_32 { pt3dadd( -17.9962, -321.167, -35.59, 0.22 ) }
    dend_32 { pt3dadd( -18.481, -321.978, -35.398, 0.37 ) }
    dend_32 { pt3dadd( -19.1361, -322.952, -35.1721, 0.44 ) }
    dend_32 { pt3dadd( -19.768, -323.647, -35.0678, 0.59 ) }
    dend_32 { pt3dadd( -20.6247, -324.358, -35.0541, 0.37 ) }
    dend_32 { pt3dadd( -21.1799, -324.672, -35.1157, 0.22 ) }
    dend_32 { pt3dadd( -22.636, -325.168, -35.4328, 2.21 ) }
    dend_32 { pt3dadd( -23.2097, -325.229, -35.615, 2.5 ) }
    dend_32 { pt3dadd( -25.5113, -324.943, -36.5152, 0.22 ) }
    dend_32 { pt3dadd( -26.2334, -324.725, -36.8316, 0.22 ) }
    dend_32 { pt3dadd( -27.2288, -324.233, -37.351, 0.66 ) }
    dend_32 { pt3dadd( -27.7125, -323.914, -37.6382, 0.66 ) }
    dend_32 { pt3dadd( -28.4066, -323.365, -38.0878, 0.37 ) }
    dend_32 { pt3dadd( -29.383, -322.556, -38.7764, 1.92 ) }
    dend_32 { pt3dadd( -29.7298, -322.271, -39.0312, 1.92 ) }
    dend_32 { pt3dadd( -31.5086, -321.065, -40.401, 0.44 ) }
    dend_32 { pt3dadd( -32.2967, -320.639, -41.015, 0.59 ) }
    dend_32 { pt3dadd( -32.7667, -320.459, -41.348, 0.37 ) }
    dend_32 { pt3dadd( -33.4844, -320.315, -41.7716, 0.37 ) }
    dend_32 { pt3dadd( -34.2221, -320.245, -42.1799, 0.22 ) }
    dend_32 { pt3dadd( -35.9661, -320.249, -42.9982, 0.29 ) }
    dend_32 { pt3dadd( -36.5628, -320.342, -43.1852, 0.22 ) }
    dend_32 { pt3dadd( -37.5331, -320.541, -43.4249, 0.22 ) }
    dend_32 { pt3dadd( -38.8685, -320.809, -43.7157, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 62/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -10.9648, -83.7536, -6.37884, 0.74 ) }
    dend_31 { pt3dadd( -12.6459, -84.899, -6.41409, 0.74 ) }
    dend_31 { pt3dadd( -13.3125, -85.3077, -6.42972, 0.74 ) }
    dend_31 { pt3dadd( -14.2746, -85.8203, -6.48284, 0.74 ) }
    dend_31 { pt3dadd( -14.9478, -86.1204, -6.53921, 0.52 ) }
    dend_31 { pt3dadd( -15.647, -86.3363, -6.63972, 0.52 ) }
    dend_31 { pt3dadd( -16.3164, -86.4781, -6.77168, 0.88 ) }
    dend_31 { pt3dadd( -16.8748, -86.4422, -6.98344, 0.88 ) }
    dend_31 { pt3dadd( -17.7623, -86.2358, -7.43128, 0.59 ) }
    dend_31 { pt3dadd( -18.3139, -86.0585, -7.75228, 0.37 ) }
    dend_31 { pt3dadd( -19.1592, -85.8164, -8.30106, 0.37 ) }
    dend_31 { pt3dadd( -19.6678, -85.7336, -8.68091, 1.11 ) }
    dend_31 { pt3dadd( -20.091, -85.772, -9.03448, 1.47 ) }
    dend_31 { pt3dadd( -20.4999, -85.8883, -9.37584, 1.47 ) }
    dend_31 { pt3dadd( -20.7999, -86.0055, -9.60994, 1.47 ) }
    dend_31 { pt3dadd( -21.4903, -86.2801, -10.122, 0.96 ) }
    dend_31 { pt3dadd( -22.1101, -86.4749, -10.5517, 0.59 ) }
    dend_31 { pt3dadd( -22.6858, -86.5835, -10.8987, 0.59 ) }
    dend_31 { pt3dadd( -23.2906, -86.6441, -11.1869, 0.59 ) }
    dend_31 { pt3dadd( -23.9316, -86.703, -11.4677, 0.81 ) }
    dend_31 { pt3dadd( -24.5429, -86.7602, -11.7182, 0.81 ) }
    dend_31 { pt3dadd( -25.0242, -86.8023, -11.8799, 0.81 ) }
    dend_31 { pt3dadd( -25.5963, -86.8736, -12.0512, 0.81 ) }
    dend_31 { pt3dadd( -26.2092, -87.1615, -12.3205, 0.22 ) }
    dend_31 { pt3dadd( -26.5834, -87.8203, -12.6667, 0.22 ) }
    dend_31 { pt3dadd( -26.8086, -88.3491, -12.9549, 0.66 ) }
    dend_31 { pt3dadd( -26.925, -88.6648, -13.1357, 0.88 ) }
    dend_31 { pt3dadd( -27.0887, -89.1241, -13.4204, 0.88 ) }
    dend_31 { pt3dadd( -27.3222, -89.6637, -13.8821, 0.44 ) }
    dend_31 { pt3dadd( -27.6876, -90.1991, -14.5222, 1.4 ) }
    dend_31 { pt3dadd( -28.0455, -90.4907, -15.0803, 2.14 ) }
    dend_31 { pt3dadd( -28.2077, -90.5653, -15.3288, 2.58 ) }
    dend_31 { pt3dadd( -28.5545, -90.629, -15.8333, 2.36 ) }
    dend_31 { pt3dadd( -29.5002, -90.6561, -17.2007, 1.69 ) }
    dend_31 { pt3dadd( -30.0028, -90.6216, -17.902, 0.37 ) }
    dend_31 { pt3dadd( -30.6319, -90.5377, -18.6826, 0.37 ) }
    dend_31 { pt3dadd( -31.1566, -90.4613, -19.2696, 0.37 ) }
    dend_31 { pt3dadd( -32.2339, -90.3482, -20.361, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -32.6843, -90.3302, -20.7822, 2.14 ) }
    dend_31 { pt3dadd( -33.1408, -90.3592, -21.1727, 2.5 ) }
    dend_31 { pt3dadd( -34.4805, -90.6065, -22.3503, 0.44 ) }
    dend_31 { pt3dadd( -34.8955, -90.729, -22.7238, 0.44 ) }
    dend_31 { pt3dadd( -35.5244, -90.936, -23.3304, 0.44 ) }
    dend_31 { pt3dadd( -36.0896, -91.1045, -23.9223, 0.44 ) }
    dend_31 { pt3dadd( -36.6662, -91.23, -24.5555, 1.4 ) }
    dend_31 { pt3dadd( -37.2907, -91.3358, -25.2731, 2.06 ) }
    dend_31 { pt3dadd( -37.8401, -91.4229, -25.9629, 2.06 ) }
    dend_31 { pt3dadd( -38.5048, -91.4809, -26.846, 0.66 ) }
    dend_31 { pt3dadd( -39.0154, -91.5048, -27.5946, 0.81 ) }
    dend_31 { pt3dadd( -39.5506, -91.5302, -28.4638, 0.52 ) }
    dend_31 { pt3dadd( -39.9623, -91.59, -29.2819, 1.77 ) }
    dend_31 { pt3dadd( -40.2135, -91.6823, -29.9292, 2.28 ) }
    dend_31 { pt3dadd( -40.82, -92.1775, -32.1227, 1.33 ) }
    dend_31 { pt3dadd( -40.9688, -92.4556, -32.984, 1.77 ) }
    dend_31 { pt3dadd( -41.027, -92.6543, -33.5353, 1.77 ) }
    dend_31 { pt3dadd( -41.1036, -93.0548, -34.5972, 0.74 ) }
    dend_31 { pt3dadd( -41.1512, -93.3812, -35.441, 0.52 ) }
    dend_31 { pt3dadd( -41.2382, -93.8994, -36.6619, 0.52 ) }
    dend_31 { pt3dadd( -41.3345, -94.5132, -37.891, 0.88 ) }
    dend_31 { pt3dadd( -41.4957, -95.1025, -39.0145, 1.47 ) }
    dend_31 { pt3dadd( -41.7105, -95.6862, -40.0668, 0.22 ) }
    dend_31 { pt3dadd( -41.8394, -95.9887, -40.5716, 0.22 ) }
    dend_31 { pt3dadd( -42.0189, -96.3999, -41.1743, 0.81 ) }
    dend_31 { pt3dadd( -42.2003, -96.845, -41.7175, 0.96 ) }
    dend_31 { pt3dadd( -42.4351, -97.4375, -42.3471, 1.55 ) }
    dend_31 { pt3dadd( -42.6574, -98.0277, -42.8799, 1.55 ) }
    dend_31 { pt3dadd( -42.902, -98.6703, -43.4334, 0.37 ) }
    dend_31 { pt3dadd( -43.0787, -99.1268, -43.8354, 0.74 ) }
    dend_31 { pt3dadd( -43.3068, -99.6914, -44.3703, 0.81 ) }
    dend_31 { pt3dadd( -43.5869, -100.434, -45.111, 0.29 ) }
    dend_31 { pt3dadd( -43.6986, -100.791, -45.4669, 0.96 ) }
    dend_31 { pt3dadd( -43.8311, -101.314, -45.9795, 1.33 ) }
    dend_31 { pt3dadd( -43.9601, -102.047, -46.6899, 0.74 ) }
    dend_31 { pt3dadd( -44.0113, -102.659, -47.2607, 0.59 ) }
    dend_31 { pt3dadd( -43.9907, -103.625, -48.1082, 0.29 ) }
    dend_31 { pt3dadd( -43.9, -104.249, -48.5884, 0.29 ) }
    dend_31 { pt3dadd( -43.7532, -104.825, -48.9995, 0.29 ) }
    dend_31 { pt3dadd( -43.5921, -105.266, -49.2689, 1.18 ) }
    dend_31 { pt3dadd( -43.3937, -105.678, -49.496, 1.69 ) }
    dend_31 { pt3dadd( -43.0422, -106.276, -49.789, 1.33 ) }
    dend_31 { pt3dadd( -42.4876, -107.116, -50.1865, 0.22 ) }
    dend_31 { pt3dadd( -42.2274, -107.5, -50.3749, 0.22 ) }
    dend_31 { pt3dadd( -41.9138, -107.997, -50.622, 0.96 ) }
    dend_31 { pt3dadd( -41.7196, -108.35, -50.7977, 1.11 ) }
    dend_31 { pt3dadd( -41.3885, -109.026, -51.1283, 0.52 ) }
    dend_31 { pt3dadd( -40.9146, -110.118, -51.646, 0.22 ) }
    dend_31 { pt3dadd( -40.7107, -110.638, -51.8885, 0.22 ) }
    dend_31 { pt3dadd( -40.5099, -111.207, -52.1566, 0.88 ) }
    dend_31 { pt3dadd( -40.3766, -111.622, -52.3728, 1.03 ) }
    dend_31 { pt3dadd( -40.1604, -112.341, -52.782, 0.22 ) }
    dend_31 { pt3dadd( -40.0595, -112.673, -52.9818, 0.22 ) }
    dend_31 { pt3dadd( -39.8999, -113.156, -53.2838, 0.66 ) }
    dend_31 { pt3dadd( -39.7085, -113.694, -53.6161, 0.74 ) }
    dend_31 { pt3dadd( -39.2412, -114.943, -54.3537, 0.22 ) }
    dend_31 { pt3dadd( -38.915, -115.851, -54.8299, 0.22 ) }
    dend_31 { pt3dadd( -38.5712, -117.009, -55.3598, 0.96 ) }
    dend_31 { pt3dadd( -38.4649, -117.447, -55.5365, 1.25 ) }
    dend_31 { pt3dadd( -38.3765, -118.036, -55.7319, 1.25 ) }
    dend_31 { pt3dadd( -38.3142, -118.91, -55.9526, 0.66 ) }
    dend_31 { pt3dadd( -38.3381, -119.988, -56.1611, 0.15 ) }
    dend_31 { pt3dadd( -38.4707, -120.912, -56.3261, 0.37 ) }
    dend_31 { pt3dadd( -38.577, -121.343, -56.414, 0.37 ) }
    dend_31 { pt3dadd( -39.0737, -122.915, -56.7839, 0.22 ) }
    dend_31 { pt3dadd( -39.1673, -123.159, -56.8549, 0.74 ) }
    dend_31 { pt3dadd( -39.3892, -123.678, -57.0361, 0.88 ) }
    dend_31 { pt3dadd( -40.1454, -125.325, -57.6761, 0.22 ) }
    dend_31 { pt3dadd( -40.438, -125.943, -57.9208, 0.74 ) }
    dend_31 { pt3dadd( -40.7311, -126.543, -58.1548, 0.74 ) }
    dend_31 { pt3dadd( -41.3727, -127.849, -58.674, 0.22 ) }
    dend_31 { pt3dadd( -41.9078, -128.944, -59.095, 0.22 ) }
    dend_31 { pt3dadd( -42.5099, -130.204, -59.5124, 0.22 ) }
    dend_31 { pt3dadd( -43.0559, -131.394, -59.8313, 0.22 ) }
    dend_31 { pt3dadd( -43.3436, -132.042, -59.9636, 0.88 ) }
    dend_31 { pt3dadd( -43.5595, -132.554, -60.0378, 1.11 ) }
    dend_31 { pt3dadd( -43.7529, -133.076, -60.0725, 1.11 ) }
    dend_31 { pt3dadd( -44.165, -134.35, -60.0891, 0.15 ) }
    dend_31 { pt3dadd( -44.4443, -135.383, -60.0739, 0.15 ) }
    dend_31 { pt3dadd( -44.5805, -135.956, -60.0562, 0.81 ) }
    dend_31 { pt3dadd( -44.6889, -136.457, -60.0372, 0.96 ) }
    dend_31 { pt3dadd( -45.0412, -138.335, -60.1829, 0.22 ) }
    dend_31 { pt3dadd( -45.1896, -139.218, -60.2739, 0.22 ) }
    dend_31 { pt3dadd( -45.3337, -140.195, -60.435, 0.22 ) }
    dend_31 { pt3dadd( -45.3854, -140.587, -60.5192, 1.18 ) }
    dend_31 { pt3dadd( -45.4301, -140.961, -60.6242, 1.18 ) }
    dend_31 { pt3dadd( -45.7404, -143.731, -61.8004, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 13.8679, 115.884, -25.3237, 0.37 ) }
    dend_26 { pt3dadd( 14.4116, 115.098, -24.9717, 0.37 ) }
    dend_26 { pt3dadd( 14.8464, 114.507, -24.7319, 0.52 ) }
    dend_26 { pt3dadd( 15.4596, 113.707, -24.4159, 0.74 ) }
    dend_26 { pt3dadd( 15.9527, 113.073, -24.1818, 1.11 ) }
    dend_26 { pt3dadd( 16.2411, 112.715, -24.0488, 1.11 ) }
    dend_26 { pt3dadd( 16.6609, 112.196, -23.8521, 0.81 ) }
    dend_26 { pt3dadd( 17.6369, 111.073, -23.3522, 0.22 ) }
    dend_26 { pt3dadd( 18.105, 110.525, -23.1099, 0.22 ) }
    dend_26 { pt3dadd( 18.3933, 110.156, -22.9703, 0.66 ) }
    dend_26 { pt3dadd( 18.683, 109.747, -22.8289, 0.66 ) }
    dend_26 { pt3dadd( 18.9601, 109.321, -22.6918, 0.66 ) }
    dend_26 { pt3dadd( 19.474, 108.469, -22.4084, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( 19.9401, 107.626, -22.1205, 0.22 ) }
    dend_26 { pt3dadd( 20.416, 106.69, -21.8161, 0.22 ) }
    dend_26 { pt3dadd( 20.6296, 106.235, -21.6748, 0.44 ) }
    dend_26 { pt3dadd( 20.7604, 105.921, -21.5969, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 13.8679, 115.884, -25.3237, 0.22 ) }
    dend_25 { pt3dadd( 14.9597, 115.86, -25.682, 0.22 ) }
    dend_25 { pt3dadd( 15.2074, 115.871, -25.7739, 0.44 ) }
    dend_25 { pt3dadd( 16.3452, 115.987, -26.2049, 0.22 ) }
    dend_25 { pt3dadd( 16.8304, 116.053, -26.4047, 0.59 ) }
    dend_25 { pt3dadd( 17.1966, 116.11, -26.5756, 0.59 ) }
    dend_25 { pt3dadd( 18.7674, 116.355, -27.3088, 0.22 ) }
    dend_25 { pt3dadd( 20.5679, 116.668, -28.2, 0.22 ) }
    dend_25 { pt3dadd( 21.2085, 116.799, -28.5333, 0.66 ) }
    dend_25 { pt3dadd( 21.7045, 116.926, -28.8142, 0.81 ) }
    dend_25 { pt3dadd( 22.4477, 117.135, -29.2612, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 17.0421, 232.266, -3.16372, 0.59 ) }
    dend_19 { pt3dadd( 18.1764, 233.309, -3.95058, 0.59 ) }
    dend_19 { pt3dadd( 18.5492, 233.661, -4.19176, 0.44 ) }
    dend_19 { pt3dadd( 19.314, 234.435, -4.71479, 0.22 ) }
    dend_19 { pt3dadd( 19.969, 235.152, -5.16202, 0.81 ) }
    dend_19 { pt3dadd( 20.3091, 235.547, -5.41089, 0.96 ) }
    dend_19 { pt3dadd( 20.4638, 235.733, -5.53111, 0.96 ) }
    dend_19 { pt3dadd( 20.9309, 236.387, -5.91969, 0.22 ) }
    dend_19 { pt3dadd( 21.5431, 237.44, -6.56509, 0.22 ) }
    dend_19 { pt3dadd( 21.9987, 238.425, -7.17341, 1.11 ) }
    dend_19 { pt3dadd( 22.2069, 238.974, -7.50143, 1.47 ) }
    dend_19 { pt3dadd( 22.282, 239.244, -7.66686, 1.47 ) }
    dend_19 { pt3dadd( 22.4933, 240.427, -8.36656, 0.22 ) }
    dend_19 { pt3dadd( 22.579, 241.509, -8.98981, 0.22 ) }
    dend_19 { pt3dadd( 22.581, 242.147, -9.3422, 0.66 ) }
    dend_19 { pt3dadd( 22.566, 242.463, -9.51983, 0.66 ) }
    dend_19 { pt3dadd( 22.4122, 243.973, -10.326, 0.22 ) }
    dend_19 { pt3dadd( 22.2109, 245.35, -11.0289, 0.22 ) }
    dend_19 { pt3dadd( 22.0564, 246.134, -11.4214, 0.22 ) }
    dend_19 { pt3dadd( 21.8496, 247.044, -11.8656, 1.47 ) }
    dend_19 { pt3dadd( 21.7116, 247.563, -12.1016, 1.47 ) }
    dend_19 { pt3dadd( 21.1815, 249.317, -12.8071, 0.22 ) }
    dend_19 { pt3dadd( 20.9841, 249.886, -13.0098, 0.81 ) }
    dend_19 { pt3dadd( 20.7928, 250.364, -13.1572, 0.81 ) }
    dend_19 { pt3dadd( 20.2713, 251.532, -13.4516, 0.22 ) }
    dend_19 { pt3dadd( 19.8179, 252.457, -13.6493, 0.22 ) }
    dend_19 { pt3dadd( 19.3128, 253.418, -13.8263, 1.47 ) }
    dend_19 { pt3dadd( 19.0856, 253.815, -13.906, 1.84 ) }
    dend_19 { pt3dadd( 18.2278, 255.256, -14.1943, 0.22 ) }
    dend_19 { pt3dadd( 17.544, 256.359, -14.4031, 0.22 ) }
    dend_19 { pt3dadd( 17.2873, 256.741, -14.4745, 0.22 ) }
    dend_19 { pt3dadd( 16.5805, 257.738, -14.6946, 1.55 ) }
    dend_19 { pt3dadd( 16.1249, 258.338, -14.845, 2.06 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 48/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 17.0421, 232.266, -3.16372, 0.22 ) }
    dend_18 { pt3dadd( 17.9576, 235.187, -3.71806, 0.22 ) }
    dend_18 { pt3dadd( 18.4884, 236.773, -4.00448, 0.22 ) }
    dend_18 { pt3dadd( 18.9135, 238.003, -4.21753, 0.96 ) }
    dend_18 { pt3dadd( 19.1012, 238.538, -4.30487, 1.18 ) }
    dend_18 { pt3dadd( 19.2976, 239.091, -4.39003, 1.18 ) }
    dend_18 { pt3dadd( 19.6159, 239.994, -4.52008, 0.22 ) }
    dend_18 { pt3dadd( 19.859, 240.638, -4.59377, 0.44 ) }
    dend_18 { pt3dadd( 19.9734, 240.967, -4.63294, 0.44 ) }
    dend_18 { pt3dadd( 20.2749, 241.915, -4.74301, 0.22 ) }
    dend_18 { pt3dadd( 20.5291, 242.748, -4.8364, 0.44 ) }
    dend_18 { pt3dadd( 20.806, 243.671, -4.93786, 0.44 ) }
    dend_18 { pt3dadd( 21.6064, 246.496, -5.22837, 0.22 ) }
    dend_18 { pt3dadd( 22.2608, 248.877, -5.49009, 0.22 ) }
    dend_18 { pt3dadd( 22.505, 249.771, -5.60012, 0.66 ) }
    dend_18 { pt3dadd( 22.6378, 250.261, -5.6674, 0.74 ) }
    dend_18 { pt3dadd( 22.85, 251.042, -5.79986, 0.22 ) }
    dend_18 { pt3dadd( 23.3796, 252.95, -6.17326, 0.22 ) }
    dend_18 { pt3dadd( 23.6868, 254.072, -6.41041, 1.03 ) }
    dend_18 { pt3dadd( 23.8889, 254.816, -6.57751, 1.25 ) }
    dend_18 { pt3dadd( 24.0398, 255.378, -6.70813, 1.25 ) }
    dend_18 { pt3dadd( 24.5437, 257.27, -7.16049, 0.22 ) }
    dend_18 { pt3dadd( 25.3787, 260.38, -7.92116, 0.22 ) }
    dend_18 { pt3dadd( 25.6661, 261.428, -8.1784, 0.74 ) }
    dend_18 { pt3dadd( 25.8297, 262.033, -8.30966, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 73/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.38512, 87.0751, -1.56857, 0.37 ) }
    dend_16 { pt3dadd( 11.4394, 94.2906, -1.20569, 0.37 ) }
    dend_16 { pt3dadd( 16.194, 101.119, -1.11494, 0.37 ) }
    dend_16 { pt3dadd( 20.8264, 107.721, 1.03689, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 7.38512, 87.0751, -1.56857, 0.22 ) }
    dend_15 { pt3dadd( 8.7127, 97.0879, -6.78604, 0.37 ) }
    dend_15 { pt3dadd( 9.31914, 106.414, -13.3547, 0.37 ) }
    dend_15 { pt3dadd( 9.78219, 115.287, -20.5915, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 81/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 73.6158, 0.32481, 5.65906, 0.37 ) }
    dend_10 { pt3dadd( 83.8035, -1.52221, 5.44228, 0.37 ) }
    dend_10 { pt3dadd( 94.1826, -1.79072, 5.2993, 0.37 ) }
    dend_10 { pt3dadd( 104.506, -1.09176, 6.22149, 0.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 73.6158, 0.32481, 5.65906, 0.22 ) }
    dend_9 { pt3dadd( 81.8815, -1.31201, 5.61254, 0.37 ) }
    dend_9 { pt3dadd( 90.3191, -1.49839, 5.17839, 0.37 ) }
    dend_9 { pt3dadd( 98.7388, -2.16766, 5.21719, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 89/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 45.6099, 12.0237, 1.16778, 0.52 ) }
    dend_5 { pt3dadd( 46.9459, 12.2412, 1.49436, 0.52 ) }
    dend_5 { pt3dadd( 47.4681, 12.3021, 1.61517, 0.52 ) }
    dend_5 { pt3dadd( 48.0168, 12.3339, 1.76613, 0.52 ) }
    dend_5 { pt3dadd( 49.0745, 12.3673, 2.07804, 0.52 ) }
    dend_5 { pt3dadd( 49.7098, 12.3675, 2.27002, 0.88 ) }
    dend_5 { pt3dadd( 50.6828, 12.3555, 2.54889, 0.88 ) }
    dend_5 { pt3dadd( 51.4029, 12.3483, 2.74527, 0.88 ) }
    dend_5 { pt3dadd( 52.1776, 12.2613, 2.92213, 0.81 ) }
    dend_5 { pt3dadd( 52.6789, 12.1274, 2.96804, 0.81 ) }
    dend_5 { pt3dadd( 53.4385, 11.7928, 2.93295, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_5 { pt3dadd( 54.0463, 11.4373, 2.81222, 0.59 ) }
    dend_5 { pt3dadd( 54.6946, 11.0037, 2.58253, 0.59 ) }
    dend_5 { pt3dadd( 55.3298, 10.5653, 2.27542, 0.74 ) }
    dend_5 { pt3dadd( 56.3161, 9.83076, 1.69073, 0.66 ) }
    dend_5 { pt3dadd( 56.7205, 9.50078, 1.42304, 0.66 ) }
    dend_5 { pt3dadd( 57.3332, 8.95356, 0.982303, 0.52 ) }
    dend_5 { pt3dadd( 57.748, 8.57686, 0.673439, 0.52 ) }
    dend_5 { pt3dadd( 58.2803, 8.1179, 0.277037, 0.81 ) }
    dend_5 { pt3dadd( 58.9406, 7.55231, -0.225013, 0.81 ) }
    dend_5 { pt3dadd( 59.3796, 7.15191, -0.560943, 0.81 ) }
    dend_5 { pt3dadd( 59.9109, 6.61768, -0.999535, 0.81 ) }
    dend_5 { pt3dadd( 60.55, 5.89506, -1.56663, 0.88 ) }
    dend_5 { pt3dadd( 61.0628, 5.24284, -2.05577, 1.11 ) }
    dend_5 { pt3dadd( 61.378, 4.81117, -2.37697, 1.11 ) }
    dend_5 { pt3dadd( 61.9604, 3.93044, -3.01135, 0.88 ) }
    dend_5 { pt3dadd( 62.3642, 3.20452, -3.48082, 0.96 ) }
    dend_5 { pt3dadd( 62.6322, 2.61355, -3.80611, 0.96 ) }
    dend_5 { pt3dadd( 62.8253, 2.10112, -4.04543, 0.96 ) }
    dend_5 { pt3dadd( 62.9889, 1.62234, -4.24519, 0.66 ) }
    dend_5 { pt3dadd( 63.2556, 0.842304, -4.51884, 0.66 ) }
    dend_5 { pt3dadd( 63.6509, -0.204302, -4.82262, 0.81 ) }
    dend_5 { pt3dadd( 64.0433, -1.03659, -5.03492, 1.11 ) }
    dend_5 { pt3dadd( 64.5744, -1.97548, -5.24477, 0.96 ) }
    dend_5 { pt3dadd( 65.0228, -2.62887, -5.40877, 0.81 ) }
    dend_5 { pt3dadd( 65.6901, -3.43312, -5.6386, 0.81 ) }
    dend_5 { pt3dadd( 66.5061, -4.23236, -5.91302, 0.59 ) }
    dend_5 { pt3dadd( 67.2024, -4.80571, -6.15667, 0.37 ) }
    dend_5 { pt3dadd( 67.8442, -5.2748, -6.39713, 0.37 ) }
    dend_5 { pt3dadd( 68.7929, -5.92912, -6.78744, 0.59 ) }
    dend_5 { pt3dadd( 69.3092, -6.27854, -7.03993, 0.88 ) }
    dend_5 { pt3dadd( 69.5928, -6.47416, -7.2075, 1.11 ) }
    dend_5 { pt3dadd( 69.9565, -6.75086, -7.438, 1.11 ) }
    dend_5 { pt3dadd( 70.4408, -7.15214, -7.73892, 0.74 ) }
    dend_5 { pt3dadd( 70.8293, -7.45568, -7.971, 0.74 ) }
    dend_5 { pt3dadd( 71.2128, -7.7646, -8.21384, 0.74 ) }
    dend_5 { pt3dadd( 71.7916, -8.24477, -8.63214, 0.74 ) }
    dend_5 { pt3dadd( 72.373, -8.7377, -9.10987, 0.74 ) }
    dend_5 { pt3dadd( 72.8988, -9.1775, -9.55895, 0.66 ) }
    dend_5 { pt3dadd( 73.3943, -9.57928, -9.99544, 0.66 ) }
    dend_5 { pt3dadd( 74.0477, -10.0948, -10.5913, 0.96 ) }
    dend_5 { pt3dadd( 74.8117, -10.7058, -11.3399, 1.4 ) }
    dend_5 { pt3dadd( 75.1958, -11.036, -11.7666, 1.62 ) }
    dend_5 { pt3dadd( 75.5854, -11.3958, -12.2535, 1.77 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 45.6099, 12.0237, 1.16778, 0.88 ) }
    dend_4 { pt3dadd( 46.5213, 12.9358, 1.6245, 0.88 ) }
    dend_4 { pt3dadd( 47.3585, 13.6609, 2.02878, 0.88 ) }
    dend_4 { pt3dadd( 48.3226, 14.3558, 2.4467, 0.88 ) }
    dend_4 { pt3dadd( 49.3863, 15.0039, 2.85018, 0.88 ) }
    dend_4 { pt3dadd( 50.664, 15.6752, 3.29936, 0.74 ) }
    dend_4 { pt3dadd( 51.4785, 16.0718, 3.58368, 0.74 ) }
    dend_4 { pt3dadd( 52.6475, 16.5442, 3.98609, 0.88 ) }
    dend_4 { pt3dadd( 53.7084, 16.9043, 4.32641, 0.88 ) }
    dend_4 { pt3dadd( 54.5904, 17.1725, 4.58183, 0.88 ) }
    dend_4 { pt3dadd( 55.4474, 17.4268, 4.81583, 0.66 ) }
    dend_4 { pt3dadd( 56.0447, 17.6342, 4.9774, 0.66 ) }
    dend_4 { pt3dadd( 56.8294, 18.0215, 5.18789, 0.88 ) }
    dend_4 { pt3dadd( 57.2882, 18.3259, 5.31727, 0.88 ) }
    dend_4 { pt3dadd( 57.7198, 18.6673, 5.4435, 0.88 ) }
    dend_4 { pt3dadd( 58.1557, 19.0302, 5.56867, 0.88 ) }
    dend_4 { pt3dadd( 58.9694, 19.6917, 5.79658, 0.59 ) }
    dend_4 { pt3dadd( 59.5542, 20.1272, 5.98719, 0.59 ) }
    dend_4 { pt3dadd( 60.0038, 20.4596, 6.17182, 0.81 ) }
    dend_4 { pt3dadd( 60.5917, 20.9206, 6.46617, 0.81 ) }
    dend_4 { pt3dadd( 61.0376, 21.3089, 6.732, 0.81 ) }
    dend_4 { pt3dadd( 61.5379, 21.7756, 7.06131, 0.66 ) }
    dend_4 { pt3dadd( 62.2541, 22.4616, 7.55681, 0.59 ) }
    dend_4 { pt3dadd( 62.9969, 23.3153, 8.14269, 0.59 ) }
    dend_4 { pt3dadd( 63.3861, 23.8507, 8.47546, 0.59 ) }
    dend_4 { pt3dadd( 63.8174, 24.5378, 8.85163, 0.44 ) }
    dend_4 { pt3dadd( 64.0842, 24.9866, 9.06215, 0.44 ) }
    dend_4 { pt3dadd( 64.3701, 25.4725, 9.25539, 0.44 ) }
    dend_4 { pt3dadd( 65.0829, 26.6656, 9.67131, 0.44 ) }
    dend_4 { pt3dadd( 65.6533, 27.5692, 9.97355, 0.66 ) }
    dend_4 { pt3dadd( 66.1317, 28.3098, 10.216, 0.66 ) }
    dend_4 { pt3dadd( 66.7237, 29.2194, 10.5054, 0.74 ) }
    dend_4 { pt3dadd( 67.1855, 29.9304, 10.727, 0.96 ) }
    dend_4 { pt3dadd( 67.5428, 30.4626, 10.8893, 0.96 ) }
    dend_4 { pt3dadd( 68.0804, 31.1785, 11.0987, 0.66 ) }
    dend_4 { pt3dadd( 68.6115, 31.8506, 11.292, 0.66 ) }
    dend_4 { pt3dadd( 69.4573, 32.8994, 11.5904, 0.59 ) }
    dend_4 { pt3dadd( 70.2393, 33.8849, 11.8972, 0.59 ) }
    dend_4 { pt3dadd( 70.7442, 34.5286, 12.1135, 0.81 ) }
    dend_4 { pt3dadd( 71.1262, 35.0268, 12.2912, 0.81 ) }
    dend_4 { pt3dadd( 71.7843, 35.8451, 12.5919, 0.52 ) }
    dend_4 { pt3dadd( 72.3011, 36.4278, 12.8078, 0.52 ) }
    dend_4 { pt3dadd( 72.9952, 37.1525, 13.087, 0.52 ) }
    dend_4 { pt3dadd( 73.5819, 37.7479, 13.3187, 0.52 ) }
    dend_4 { pt3dadd( 74.1455, 38.3087, 13.5328, 0.37 ) }
    dend_4 { pt3dadd( 75.1528, 39.29, 13.8974, 0.37 ) }
    dend_4 { pt3dadd( 75.8164, 39.9287, 14.1233, 0.59 ) }
    dend_4 { pt3dadd( 76.2422, 40.3166, 14.248, 0.59 ) }
    dend_4 { pt3dadd( 77.1472, 41.1238, 14.4733, 0.74 ) }
    dend_4 { pt3dadd( 77.619, 41.5493, 14.5918, 0.74 ) }
    dend_4 { pt3dadd( 78.0188, 41.923, 14.703, 0.74 ) }
    dend_4 { pt3dadd( 78.5824, 42.5086, 14.9013, 0.74 ) }
    dend_4 { pt3dadd( 78.9548, 42.9342, 15.0122, 0.44 ) }
    dend_4 { pt3dadd( 79.4827, 43.5544, 15.089, 0.44 ) }
    dend_4 { pt3dadd( 79.9372, 44.069, 15.094, 0.81 ) }
    dend_4 { pt3dadd( 80.7023, 44.9015, 15.0319, 0.81 ) }
    dend_4 { pt3dadd( 81.2653, 45.4879, 14.9304, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( 82.2495, 46.483, 14.7049, 0.52 ) }
    dend_4 { pt3dadd( 82.994, 47.2648, 14.4882, 0.44 ) }
    dend_4 { pt3dadd( 83.4837, 47.7808, 14.3017, 0.44 ) }
    dend_4 { pt3dadd( 83.9089, 48.2379, 14.1071, 0.44 ) }
    dend_4 { pt3dadd( 84.2394, 48.5959, 13.9239, 0.44 ) }
    dend_4 { pt3dadd( 84.7967, 49.163, 13.6211, 0.74 ) }
    dend_4 { pt3dadd( 85.2947, 49.6087, 13.4785, 0.59 ) }
    dend_4 { pt3dadd( 85.6298, 49.9338, 13.4234, 0.59 ) }
    dend_4 { pt3dadd( 92.0486, 56.4169, 17.0709, 0.59 ) }
    dend_4 { pt3dadd( 98.705, 62.7852, 20.5285, 0.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -102.156, -309.305, 3.47299, 0.52 ) }
    dend_39 { pt3dadd( -102.494, -310.06, 3.46583, 0.52 ) }
    dend_39 { pt3dadd( -102.635, -310.366, 3.46761, 0.29 ) }
    dend_39 { pt3dadd( -102.829, -310.765, 3.47056, 0.44 ) }
    dend_39 { pt3dadd( -103.014, -311.135, 3.4718, 0.44 ) }
    dend_39 { pt3dadd( -103.161, -311.422, 3.47234, 0.29 ) }
    dend_39 { pt3dadd( -103.387, -311.839, 3.46959, 0.29 ) }
    dend_39 { pt3dadd( -103.62, -312.234, 3.46618, 0.81 ) }
    dend_39 { pt3dadd( -103.8, -312.536, 3.45164, 1.18 ) }
    dend_39 { pt3dadd( -103.896, -312.701, 3.43894, 1.4 ) }
    dend_39 { pt3dadd( -104.049, -312.975, 3.41344, 1.4 ) }
    dend_39 { pt3dadd( -104.184, -313.238, 3.3852, 1.11 ) }
    dend_39 { pt3dadd( -104.454, -313.809, 3.32156, 0.52 ) }
    dend_39 { pt3dadd( -104.637, -314.258, 3.27133, 0.44 ) }
    dend_39 { pt3dadd( -104.765, -314.62, 3.23151, 0.74 ) }
    dend_39 { pt3dadd( -104.91, -315.056, 3.18698, 0.81 ) }
    dend_39 { pt3dadd( -105.013, -315.386, 3.15353, 0.81 ) }
    dend_39 { pt3dadd( -105.114, -315.735, 3.11609, 0.74 ) }
    dend_39 { pt3dadd( -105.232, -316.199, 3.08437, 0.22 ) }
    dend_39 { pt3dadd( -105.283, -316.414, 3.07223, 0.22 ) }
    dend_39 { pt3dadd( -105.364, -316.793, 3.04698, 0.22 ) }
    dend_39 { pt3dadd( -105.419, -317.122, 3.03101, 0.66 ) }
    dend_39 { pt3dadd( -105.463, -317.467, 3.02559, 0.81 ) }
    dend_39 { pt3dadd( -105.51, -318.024, 3.03259, 0.66 ) }
    dend_39 { pt3dadd( -105.529, -318.534, 3.0554, 0.22 ) }
    dend_39 { pt3dadd( -105.519, -318.991, 3.0866, 0.22 ) }
    dend_39 { pt3dadd( -105.492, -319.325, 3.11633, 0.22 ) }
    dend_39 { pt3dadd( -105.454, -319.65, 3.16071, 0.96 ) }
    dend_39 { pt3dadd( -105.437, -319.818, 3.18818, 1.18 ) }
    dend_39 { pt3dadd( -105.413, -320.067, 3.22924, 1.18 ) }
    dend_39 { pt3dadd( -105.391, -320.273, 3.27565, 1.18 ) }
    dend_39 { pt3dadd( -105.366, -320.665, 3.36186, 0.74 ) }
    dend_39 { pt3dadd( -105.36, -321.255, 3.48169, 0.22 ) }
    dend_39 { pt3dadd( -105.367, -321.45, 3.51979, 0.22 ) }
    dend_39 { pt3dadd( -105.38, -321.676, 3.56452, 0.44 ) }
    dend_39 { pt3dadd( -105.394, -321.871, 3.59895, 0.44 ) }
    dend_39 { pt3dadd( -105.43, -322.382, 3.67515, 0.22 ) }
    dend_39 { pt3dadd( -105.452, -322.702, 3.711, 0.96 ) }
    dend_39 { pt3dadd( -105.462, -322.946, 3.72593, 1.18 ) }
    dend_39 { pt3dadd( -105.467, -323.18, 3.73599, 1.25 ) }
    dend_39 { pt3dadd( -105.478, -323.624, 3.74976, 0.96 ) }
    dend_39 { pt3dadd( -105.512, -324.262, 3.76657, 0.29 ) }
    dend_39 { pt3dadd( -105.553, -324.763, 3.77645, 0.22 ) }
    dend_39 { pt3dadd( -105.62, -325.327, 3.78143, 0.22 ) }
    dend_39 { pt3dadd( -105.666, -325.617, 3.78346, 0.81 ) }
    dend_39 { pt3dadd( -105.718, -325.852, 3.78495, 0.96 ) }
    dend_39 { pt3dadd( -105.947, -326.668, 3.79829, 0.22 ) }
    dend_39 { pt3dadd( -106.035, -326.923, 3.80532, 0.22 ) }
    dend_39 { pt3dadd( -106.188, -327.328, 3.82265, 0.59 ) }
    dend_39 { pt3dadd( -106.306, -327.625, 3.84, 0.59 ) }
    dend_39 { pt3dadd( -106.479, -328.071, 3.86695, 0.52 ) }
    dend_39 { pt3dadd( -106.61, -328.438, 3.89031, 0.52 ) }
    dend_39 { pt3dadd( -106.77, -328.938, 3.92955, 0.52 ) }
    dend_39 { pt3dadd( -106.831, -329.136, 3.94731, 0.96 ) }
    dend_39 { pt3dadd( -106.928, -329.473, 3.97936, 0.96 ) }
    dend_39 { pt3dadd( -107.032, -329.854, 4.01683, 0.59 ) }
    dend_39 { pt3dadd( -107.202, -330.498, 4.09998, 0.22 ) }
    dend_39 { pt3dadd( -107.371, -331.165, 4.18861, 0.22 ) }
    dend_39 { pt3dadd( -107.449, -331.477, 4.23247, 0.22 ) }
    dend_39 { pt3dadd( -107.522, -331.754, 4.27476, 0.96 ) }
    dend_39 { pt3dadd( -107.572, -331.943, 4.30666, 1.18 ) }
    dend_39 { pt3dadd( -107.676, -332.321, 4.38063, 0.52 ) }
    dend_39 { pt3dadd( -108.11, -336.885, 3.92546, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -102.156, -309.305, 3.47299, 0.29 ) }
    dend_36 { pt3dadd( -103.049, -309.022, 3.91884, 0.29 ) }
    dend_36 { pt3dadd( -103.532, -309.001, 4.13479, 0.37 ) }
    dend_36 { pt3dadd( -103.755, -309.051, 4.22374, 0.37 ) }
    dend_36 { pt3dadd( -104.262, -309.248, 4.43502, 0.37 ) }
    dend_36 { pt3dadd( -104.762, -309.461, 4.58257, 0.52 ) }
    dend_36 { pt3dadd( -105.205, -309.655, 4.68514, 0.59 ) }
    dend_36 { pt3dadd( -105.813, -309.979, 4.77461, 0.59 ) }
    dend_36 { pt3dadd( -106.359, -310.284, 4.82752, 0.37 ) }
    dend_36 { pt3dadd( -106.866, -310.57, 4.85758, 0.37 ) }
    dend_36 { pt3dadd( -107.774, -311.083, 4.87466, 0.37 ) }
    dend_36 { pt3dadd( -108.194, -311.296, 4.87483, 0.37 ) }
    dend_36 { pt3dadd( -108.583, -311.477, 4.87294, 0.29 ) }
    dend_36 { pt3dadd( -108.892, -311.608, 4.87512, 0.29 ) }
    dend_36 { pt3dadd( -109.24, -311.753, 4.88657, 0.81 ) }
    dend_36 { pt3dadd( -109.517, -311.882, 4.90576, 0.81 ) }
    dend_36 { pt3dadd( -109.888, -312.104, 4.97817, 0.81 ) }
    dend_36 { pt3dadd( -110.508, -312.542, 5.11937, 0.29 ) }
    dend_36 { pt3dadd( -110.801, -312.778, 5.19492, 0.66 ) }
    dend_36 { pt3dadd( -111.016, -312.971, 5.26202, 0.66 ) }
    dend_36 { pt3dadd( -111.214, -313.164, 5.33194, 0.66 ) }
    dend_36 { pt3dadd( -111.919, -313.902, 5.6042, 0.29 ) }
    dend_36 { pt3dadd( -112.233, -314.246, 5.72228, 0.44 ) }
    dend_36 { pt3dadd( -112.504, -314.542, 5.82338, 0.29 ) }
    dend_36 { pt3dadd( -112.83, -314.882, 5.93637, 0.74 ) }
    dend_36 { pt3dadd( -113.074, -315.111, 6.00408, 0.74 ) }
    dend_36 { pt3dadd( -113.48, -315.439, 6.09327, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_36 { pt3dadd( -114.208, -315.933, 6.21324, 0.29 ) }
    dend_36 { pt3dadd( -114.644, -316.198, 6.27223, 0.52 ) }
    dend_36 { pt3dadd( -114.943, -316.36, 6.29624, 0.52 ) }
    dend_36 { pt3dadd( -115.578, -316.669, 6.30412, 0.29 ) }
    dend_36 { pt3dadd( -116.053, -316.875, 6.29868, 0.29 ) }
    dend_36 { pt3dadd( -116.343, -316.982, 6.29013, 0.59 ) }
    dend_36 { pt3dadd( -116.689, -317.09, 6.26827, 0.59 ) }
    dend_36 { pt3dadd( -117.315, -317.276, 6.2144, 0.22 ) }
    dend_36 { pt3dadd( -117.666, -317.376, 6.19073, 0.29 ) }
    dend_36 { pt3dadd( -118.19, -317.53, 6.1727, 0.29 ) }
    dend_36 { pt3dadd( -118.437, -317.608, 6.16583, 0.29 ) }
    dend_36 { pt3dadd( -119.068, -317.833, 6.15101, 0.37 ) }
    dend_36 { pt3dadd( -119.538, -318.058, 6.17887, 0.37 ) }
    dend_36 { pt3dadd( -120.009, -318.346, 6.25642, 0.52 ) }
    dend_36 { pt3dadd( -120.544, -318.745, 6.3799, 1.55 ) }
    dend_36 { pt3dadd( -120.861, -319.025, 6.46504, 1.92 ) }
    dend_36 { pt3dadd( -121.16, -319.319, 6.55888, 1.92 ) }
    dend_36 { pt3dadd( -121.841, -320.055, 6.8185, 0.29 ) }
    dend_36 { pt3dadd( -122.284, -320.575, 6.99757, 0.29 ) }
    dend_36 { pt3dadd( -122.637, -321.025, 7.15337, 0.29 ) }
    dend_36 { pt3dadd( -122.916, -321.391, 7.28556, 0.74 ) }
    dend_36 { pt3dadd( -123.054, -321.574, 7.35198, 0.96 ) }
    dend_36 { pt3dadd( -123.177, -321.73, 7.40827, 1.11 ) }
    dend_36 { pt3dadd( -123.536, -322.19, 7.56765, 0.52 ) }
    dend_36 { pt3dadd( -123.756, -322.5, 7.68685, 0.29 ) }
    dend_36 { pt3dadd( -124.074, -322.951, 7.8812, 0.22 ) }
    dend_36 { pt3dadd( -124.291, -323.245, 8.01965, 0.44 ) }
    dend_36 { pt3dadd( -124.477, -323.484, 8.14064, 0.44 ) }
    dend_36 { pt3dadd( -124.99, -324.14, 8.48502, 0.22 ) }
    dend_36 { pt3dadd( -125.3, -324.531, 8.70055, 0.22 ) }
    dend_36 { pt3dadd( -125.599, -324.893, 8.90647, 1.25 ) }
    dend_36 { pt3dadd( -125.872, -325.22, 9.10378, 1.55 ) }
    dend_36 { pt3dadd( -126.004, -325.369, 9.19671, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 75.5854, -11.3958, -12.2535, 0.74 ) }
    dend_7 { pt3dadd( 76.921, -12.4207, -11.8105, 0.74 ) }
    dend_7 { pt3dadd( 77.309, -12.7154, -11.711, 0.74 ) }
    dend_7 { pt3dadd( 77.9738, -13.2187, -11.6038, 0.59 ) }
    dend_7 { pt3dadd( 78.7561, -13.8081, -11.5662, 0.59 ) }
    dend_7 { pt3dadd( 79.4839, -14.358, -11.603, 0.59 ) }
    dend_7 { pt3dadd( 79.848, -14.632, -11.6393, 0.59 ) }
    dend_7 { pt3dadd( 80.5657, -15.1749, -11.7963, 0.59 ) }
    dend_7 { pt3dadd( 81.178, -15.6357, -11.9699, 0.81 ) }
    dend_7 { pt3dadd( 81.9901, -16.2401, -12.1995, 0.81 ) }
    dend_7 { pt3dadd( 82.6598, -16.7193, -12.3766, 0.37 ) }
    dend_7 { pt3dadd( 83.3537, -17.1909, -12.533, 0.37 ) }
    dend_7 { pt3dadd( 84.1648, -17.7416, -12.703, 0.37 ) }
    dend_7 { pt3dadd( 84.9918, -18.3235, -12.8552, 0.37 ) }
    dend_7 { pt3dadd( 85.7825, -18.8761, -12.9638, 0.37 ) }
    dend_7 { pt3dadd( 86.9694, -19.7012, -13.0686, 0.22 ) }
    dend_7 { pt3dadd( 88.2347, -20.5765, -13.1434, 0.22 ) }
    dend_7 { pt3dadd( 94.9954, -26.1316, -15.0477, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 75.5854, -11.3958, -12.2535, 0.37 ) }
    dend_6 { pt3dadd( 75.6629, -12.6858, -12.8899, 0.37 ) }
    dend_6 { pt3dadd( 75.7831, -13.4992, -13.2532, 0.37 ) }
    dend_6 { pt3dadd( 75.9466, -14.2532, -13.576, 0.37 ) }
    dend_6 { pt3dadd( 76.1808, -15.0324, -13.8448, 0.37 ) }
    dend_6 { pt3dadd( 76.4189, -15.7025, -14.0601, 0.37 ) }
    dend_6 { pt3dadd( 76.7351, -16.4847, -14.2925, 0.29 ) }
    dend_6 { pt3dadd( 77.2687, -17.57, -14.6541, 0.22 ) }
    dend_6 { pt3dadd( 77.8665, -18.7097, -15.0976, 0.22 ) }
    dend_6 { pt3dadd( 78.6482, -20.1134, -15.7288, 0.22 ) }
    dend_6 { pt3dadd( 78.9386, -20.6289, -15.9933, 1.18 ) }
    dend_6 { pt3dadd( 79.1472, -21.0509, -16.2573, 1.4 ) }
    dend_6 { pt3dadd( 79.559, -22.3561, -17.2359, 1.4 ) }
    dend_6 { pt3dadd( 79.6645, -23.4245, -18.1532, 0.44 ) }
    dend_6 { pt3dadd( 79.6354, -23.7939, -18.4724, 0.44 ) }
    dend_6 { pt3dadd( 79.5145, -24.3626, -18.9591, 0.29 ) }
    dend_6 { pt3dadd( 79.2396, -25.3294, -19.6924, 0.29 ) }
    dend_6 { pt3dadd( 78.8307, -26.5663, -20.5596, 0.22 ) }
    dend_6 { pt3dadd( 78.4752, -27.5359, -21.1001, 0.22 ) }
    dend_6 { pt3dadd( 78.2147, -28.1253, -21.3979, 1.03 ) }
    dend_6 { pt3dadd( 78.0757, -28.4274, -21.5329, 1.33 ) }
    dend_6 { pt3dadd( 77.8749, -28.8546, -21.6924, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 73/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -126.004, -325.369, 9.19671, 0.29 ) }
    dend_38 { pt3dadd( -126.909, -324.545, 9.51128, 0.29 ) }
    dend_38 { pt3dadd( -127.112, -324.363, 9.57502, 0.52 ) }
    dend_38 { pt3dadd( -127.425, -324.076, 9.66431, 0.59 ) }
    dend_38 { pt3dadd( -129.232, -322.435, 10.0591, 0.22 ) }
    dend_38 { pt3dadd( -129.743, -321.979, 10.1518, 0.22 ) }
    dend_38 { pt3dadd( -130.45, -321.362, 10.2609, 0.66 ) }
    dend_38 { pt3dadd( -130.832, -321.027, 10.2922, 0.66 ) }
    dend_38 { pt3dadd( -132.46, -319.658, 10.3693, 0.22 ) }
    dend_38 { pt3dadd( -133.135, -319.117, 10.3822, 0.22 ) }
    dend_38 { pt3dadd( -133.756, -318.662, 10.3857, 0.52 ) }
    dend_38 { pt3dadd( -134.198, -318.362, 10.3876, 0.66 ) }
    dend_38 { pt3dadd( -135.409, -317.598, 10.3949, 0.22 ) }
    dend_38 { pt3dadd( -137.813, -316.117, 10.4135, 0.22 ) }
    dend_38 { pt3dadd( -139.364, -315.207, 10.4318, 0.22 ) }
    dend_38 { pt3dadd( -140.796, -314.376, 10.4819, 1.18 ) }
    dend_38 { pt3dadd( -141.197, -314.147, 10.4959, 1.4 ) }
    dend_38 { pt3dadd( -141.815, -313.806, 10.5214, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 91/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -126.004, -325.369, 9.19671, 0.22 ) }
    dend_37 { pt3dadd( -127.159, -327.145, 9.49496, 0.22 ) }
    dend_37 { pt3dadd( -128.063, -328.61, 9.81859, 0.22 ) }
    dend_37 { pt3dadd( -128.444, -329.27, 9.97275, 0.44 ) }
    dend_37 { pt3dadd( -128.606, -329.56, 10.042, 0.44 ) }
    dend_37 { pt3dadd( -130.09, -332.34, 10.6932, 0.22 ) }
    dend_37 { pt3dadd( -130.785, -333.641, 10.998, 0.44 ) }
    dend_37 { pt3dadd( -131.369, -334.735, 11.2692, 0.22 ) }
    dend_37 { pt3dadd( -131.729, -335.475, 11.4598, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_37 { pt3dadd( -132.027, -336.117, 11.6327, 0.66 ) }
    dend_37 { pt3dadd( -132.24, -336.61, 11.7725, 0.44 ) }
    dend_37 { pt3dadd( -136.15, -348.076, 15.1109, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, axon_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_5 = new SectionList()
    dend_49 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_49 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_44 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_45 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_17 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_47 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_40 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_31 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_11 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_13 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_10 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_6 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_48 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_26 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_46 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_39 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_36 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 3
    dend_33 nseg = 3
    dend_22 nseg = 5
    dend_21 nseg = 3
    dend_12 nseg = 5
    dend_1 nseg = 3
    dend_45 nseg = 5
    dend_41 nseg = 7
    dend_29 nseg = 5
    dend_17 nseg = 9
    dend_14 nseg = 3
    dend_8 nseg = 3
    dend_47 nseg = 13
    dend_40 nseg = 7
    dend_35 nseg = 9
    dend_32 nseg = 15
    dend_31 nseg = 5
    dend_5 nseg = 3
    dend_4 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_ChC_9060a4c27e_0_0


