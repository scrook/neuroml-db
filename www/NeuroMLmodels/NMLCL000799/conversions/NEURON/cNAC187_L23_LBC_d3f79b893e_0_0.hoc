// Cell: cNAC187_L23_LBC_d3f79b893e_0_0
/*
{
  "id" : "cNAC187_L23_LBC_d3f79b893e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.51694, 11.0104, -0.0819092, 3.19551", "-3.15841, 9.8621, -0.0768064, 5.3635", "-2.79987, 8.71381, -0.0717036, 5.2385", "-2.44133, 7.56552, -0.0666008, 5.40379", "-2.0828, 6.41722, -0.061498, 6.02088", "-1.72426, 5.26893, -0.0563952, 7.0572", "-1.36573, 4.12064, -0.0512924, 8.33548", "-1.00719, 2.97235, -0.0461896, 9.39045", "-0.648657, 1.82405, -0.0410868, 9.67825", "-0.290122, 0.675761, -0.035984, 9.93356", "0.0684139, -0.472532, -0.0308812, 10.1889", "0.426949, -1.62083, -0.0257784, 10.0539", "0.785485, -2.76912, -0.0206756, 9.68551", "1.14402, -3.91741, -0.0155728, 9.07939", "1.50256, -5.0657, -0.0104701, 8.46979", "1.86109, -6.214, -0.00536725, 7.63175", "2.21963, -7.36229, -2.64453E-4, 6.67377", "2.57816, -8.51058, 0.00483835, 5.68988", "2.9367, -9.65888, 0.00994114, 4.70477", "3.29523, -10.8072, 0.0150439, 3.57171", "3.65377, -11.9555, 0.0201467, 2.11631" ]
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-2.91059, 2.62405, 14.561, 0.83", "-3.82528, 5.28696, 15.1234, 0.83", "-5.34035, 9.59802, 16.1481, 0.83", "-6.13822, 11.8997, 16.7081, 0.55", "-6.93209, 13.9329, 17.2834, 0.83", "-8.22241, 17.2289, 18.2765, 0.55", "-9.45464, 20.2748, 19.2767, 0.55", "-10.7106, 23.2628, 20.4691, 0.55", "-11.7988, 25.6007, 21.6559, 0.55", "-13.4157, 28.8526, 23.6976, 0.55", "-15.2422, 32.2761, 26.0493, 0.55", "-16.6507, 34.6773, 27.8654, 0.55", "-18.8208, 38.3015, 30.7343, 0.55", "-20.9408, 41.8876, 33.5377, 0.55", "-23.0235, 45.5251, 36.3615, 0.55", "-24.5436, 48.2407, 38.4652, 0.55", "-26.4308, 51.453, 41.0144, 0.55", "-27.5861, 53.5062, 42.5357, 0.55", "-28.6049, 55.4231, 43.7495, 0.83", "-29.6982, 57.8474, 44.8129, 0.55", "-33.7383, 67.5604, 48.7167, 0.55", "-38.3579, 75.8658, 54.6821, 0.55", "-42.0236, 84.938, 60.1744, 0.55", "-43.5456, 94.4575, 65.9163, 0.55", "-46.6741, 104.05, 70.8259, 0.55", "-47.7559, 113.755, 76.3531, 0.55", "-47.571, 123.971, 80.9913, 0.55", "-46.1044, 133.805, 86.1916, 0.55", "-43.8262, 143.562, 91.244, 0.55", "-41.6565, 152.641, 97.4696, 0.55", "-40.1447, 160.811, 105.011, 0.55", "-40.2912, 169.182, 112.482, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-4.33059, 2.04405, 1.82102, 0.83", "-5.06131, 2.05798, 0.974549, 0.83", "-6.55625, 2.09785, -0.650782, 0.83", "-9.25248, 2.19014, -3.43207, 0.83", "-12.5721, 2.26884, -6.94153, 0.83", "-13.9738, 2.29355, -8.34003, 0.55", "-15.2529, 2.31717, -9.53947, 0.83", "-16.2767, 2.4068, -10.5477, 0.28", "-17.0999, 2.533, -11.4907, 0.55", "-20.5929, 3.16398, -15.8443, 0.55", "-21.8995, 3.35354, -17.5776, 0.83", "-23.4851, 3.57982, -19.8069, 0.55", "-26.4983, 3.97935, -24.1386, 0.55", "-30.4345, 4.57311, -30.0111, 0.55", "-33.1492, 4.99182, -34.2007, 0.55", "-35.5067, 5.36204, -37.8027, 0.55", "-36.4988, 5.51226, -39.3009, 0.55", "-37.3149, 5.6086, -40.4264, 0.55", "-39.7217, 5.80951, -43.1638, 0.55", "-42.4051, 6.10699, -45.6653, 0.55", "-44.3007, 6.33091, -47.2602, 0.28", "-46.4889, 6.58553, -48.9963, 1.11", "-52.2071, 6.9872, -53.2662, 0.28", "-54.3054, 7.07411, -54.6995, 0.28", "-55.9585, 7.0755, -55.7003, 1.11", "-59.8593, 6.97482, -57.8574, 0.28", "-62.3033, 6.83693, -59.1594, 0.83", "-65.0061, 6.62261, -60.5175, 0.28", "-66.2269, 6.51556, -61.082, 1.11", "-69.6412, 6.23885, -62.834, 0.28", "-70.8379, 6.19342, -63.4622, 0.28", "-72.5122, 6.28418, -64.2575, 1.11", "-75.8524, 6.84649, -65.7, 0.28", "-77.0921, 7.19555, -66.1447, 0.83", "-80.9407, 8.84464, -67.1883, 0.28", "-82.8813, 9.97368, -67.5343, 1.11", "-86.4238, 12.5219, -67.9148, 0.28", "-88.8004, 14.5455, -67.9248, 0.83", "-91.1028, 16.8556, -67.6831, 0.28", "-93.7069, 19.8086, -67.2322, 0.28", "-94.5087, 20.8588, -67.0135, 0.83", "-95.67, 22.5018, -66.7533, 0.83", "-96.7467, 24.2232, -66.6078, 0.28", "-97.6007, 25.6747, -66.6483, 0.55", "-98.6378, 27.4642, -66.9649, 0.28", "-99.4373, 28.7944, -67.4455, 0.83", "-101.084, 31.5039, -68.698, 0.28", "-102.276, 33.3655, -69.7331, 0.83", "-103.308, 34.9109, -70.6981, 0.28", "-104.927, 37.1661, -72.2363, 0.83", "-107.942, 40.8629, -74.9419, 0.28", "-109.373, 42.3021, -75.9887, 0.83", "-110.604, 43.3016, -76.6816, 0.55", "-111.632, 43.9816, -77.1572, 0.55", "-113.086, 44.7646, -77.6527, 0.28", "-115.617, 45.8565, -78.1884, 0.83", "-119.916, 47.2984, -78.5844, 0.28", "-121.718, 47.8399, -78.7039, 0.83", "-123.604, 48.4603, -78.7577, 0.28", "-126.491, 49.4552, -78.715, 0.83", "-128.805, 50.4117, -78.6449, 1.11", "-131.344, 51.6874, -78.5564, 0.55", "-132.545, 52.3568, -78.5979, 0.83", "-135.537, 54.2274, -78.8926, 0.28", "-136.929, 55.2128, -79.0996, 0.83", "-140.255, 57.7322, -79.8579, 0.28", "-141.837, 58.9389, -80.3894, 1.11", "-144.892, 61.1755, -81.671, 0.28", "-146.502, 62.2801, -82.3992, 0.55", "-148.283, 63.3773, -83.3048, 0.55", "-150.915, 64.8398, -84.6986, 0.55", "-153.669, 66.1228, -86.0673, 0.28", "-154.802, 66.6444, -86.6253, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "5.05941, 4.03406, 7.73102, 0.83", "5.89396, 4.29381, 8.11982, 0.83", "7.103, 4.6349, 8.7025, 0.83", "9.32872, 5.31038, 9.82051, 0.83", "11.4321, 6.00171, 11.0385, 0.55", "13.8741, 6.77208, 12.5249, 1.11", "16.7152, 7.70912, 14.21, 0.55", "18.5719, 8.30815, 15.3245, 0.83", "21.3035, 9.23219, 16.8858, 0.55", "24.761, 10.3645, 18.762, 0.83", "27.4379, 11.1752, 20.0636, 0.55", "31.6223, 12.3813, 21.843, 0.55", "34.1816, 12.9922, 22.6779, 0.55", "38.9968, 13.992, 23.7494, 0.55", "42.9274, 14.6114, 24.1642, 0.83", "46.2846, 15.0405, 24.1557, 0.83", "48.577, 15.3032, 23.9865, 0.83", "52.9315, 15.619, 23.5047, 0.83", "55.1352, 15.7646, 23.2339, 0.83", "59.172, 16.0624, 22.7298, 0.83", "62.3771, 16.5103, 22.392, 0.83", "65.3624, 17.0185, 22.2392, 0.83", "68.9108, 17.6991, 22.2562, 0.83", "71.9985, 18.3908, 22.4921, 0.83", "73.8847, 18.8521, 22.6837, 0.83", "77.7826, 19.8119, 23.1084, 0.83", "79.8629, 20.3121, 23.3665, 0.83", "82.5717, 20.9717, 23.7386, 1.11", "84.736, 21.4777, 24.0437, 0.55", "86.9498, 21.9107, 24.4111, 0.55", "90.5032, 22.5086, 25.1252, 0.83", "92.9016, 22.8511, 25.6973, 0.83", "95.4946, 23.2631, 26.1755, 0.55", "97.6803, 23.6459, 26.4188, 0.55", "99.9037, 24.1524, 26.4577, 0.83", "101.16, 24.473, 26.3584, 0.83", "104.84, 25.5419, 25.5158, 0.55", "109.288, 26.6705, 24.1112, 0.55", "112.06, 27.2935, 23.1155, 0.55", "115.867, 28.0841, 21.6387, 0.55", "120.327, 28.9872, 19.8611, 0.55", "124.521, 29.8388, 18.2069, 0.83", "127.615, 30.4801, 17.0355, 0.55", "130.781, 31.0786, 16.0895, 0.55", "132.936, 31.5006, 15.4763, 0.55", "136.39, 32.1372, 14.5171, 0.55", "138.032, 32.4557, 14.1247, 0.83", "139.865, 32.8032, 13.7993, 0.55", "142.999, 33.4504, 13.1669, 0.55", "145.247, 33.8983, 12.6746, 0.83", "147.624, 34.4877, 12.09, 0.55", "150.505, 35.1987, 11.2869, 0.55", "152.745, 35.815, 10.663, 0.55", "154.237, 36.3215, 10.2804, 0.28", "155.245, 36.7373, 10.0665, 1.11", "159.516, 38.6525, 9.48251, 0.55", "161.872, 39.8567, 9.27876, 0.55", "163.387, 40.644, 9.19065, 0.55", "166.218, 41.9941, 9.06707, 0.55", "167.589, 42.593, 9.03899, 0.28", "170.14, 43.6551, 8.97141, 0.55", "171.75, 44.2995, 8.93339, 0.55", "173.544, 45.0868, 8.85012, 0.55", "177.11, 46.6562, 8.55398, 0.55", "179.238, 47.5436, 8.31044, 0.55", "181.463, 48.4062, 7.99799, 0.28", "182.722, 48.8981, 7.8061, 0.55", "184.939, 49.777, 7.46929, 1.38", "188.78, 51.2715, 6.94939, 0.55", "191.014, 52.1075, 6.70935, 1.11", "192.948, 52.8117, 6.52067, 0.55", "195.117, 53.5527, 6.34095, 0.55", "196.764, 54.0543, 6.22527, 0.83", "200.556, 55.041, 6.04476, 0.55", "202.467, 55.4307, 6.01899, 0.55", "203.574, 55.5839, 6.0247, 0.83", "208.143, 55.9298, 6.12032, 0.55", "210.448, 55.9908, 6.22534, 0.55", "212.649, 56.1119, 6.39429, 0.55", "214.085, 56.2691, 6.58929, 0.83", "216.301, 56.6358, 7.03436, 0.55", "220.837, 57.766, 8.33673, 0.55", "223.341, 58.6894, 9.267, 0.55", "226.952, 60.3613, 10.7803, 0.55", "229.308, 61.6605, 11.9359, 0.55", "230.888, 62.6115, 12.7932, 0.83", "233.39, 64.1558, 14.2744, 0.55", "236.424, 66.0231, 16.2081, 0.55", "239.48, 67.8489, 18.1671, 0.55", "241.293, 68.8042, 19.3032, 0.83", "242.739, 69.5049, 20.1283, 0.55", "244.528, 70.3281, 21.1016, 0.28", "245.843, 70.8165, 21.7753, 0.55", "255.527, 71.6705, 21.6321, 0.55", "265.171, 72.3872, 20.619, 0.55", "274.823, 73.4134, 21.1908, 0.55", "284.535, 73.7581, 21.484, 0.55", "294.182, 72.828, 20.7068, 0.55", "303.736, 72.5934, 18.9162, 0.55", "313.082, 70.8994, 16.8401, 0.55", "322.388, 68.3732, 15.5955, 0.55", "331.473, 65.6626, 13.4392, 0.55", "340.326, 62.9287, 10.4918, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "5.82941, 1.93406, -1.46898, 0.55", "8.32895, 2.69389, -2.11702, 0.55", "9.98894, 3.22068, -2.55091, 1.11", "12.8515, 3.93012, -3.29133, 0.55", "14.6031, 4.21828, -3.91569, 0.83", "18.46, 4.66116, -5.61466, 0.83", "21.6888, 4.96902, -7.25874, 0.55", "24.533, 5.20556, -8.87411, 0.83", "27.1048, 5.43151, -10.3047, 0.55", "31.6253, 5.87149, -12.7089, 0.55", "34.7614, 6.14357, -14.14, 0.55", "38.0582, 6.42275, -15.4734, 1.11", "42.4067, 6.71017, -16.6632, 0.55", "45.3942, 6.94262, -17.0535, 0.55", "47.3893, 7.18464, -16.9443, 0.55", "51.7902, 7.69253, -16.245, 0.83", "55.9002, 8.02591, -15.3873, 0.55", "59.0519, 8.21921, -14.6638, 0.55", "62.7418, 8.27894, -14.0347, 0.55", "67.6768, 8.40337, -13.9519, 0.83", "71.3287, 8.47124, -14.3915, 0.28", "72.3444, 8.46039, -14.6686, 0.55", "73.937, 8.3539, -15.2364, 0.55", "77.6938, 7.7289, -17.1453, 0.55", "82.4984, 6.5066, -20.1139, 0.55", "85.5336, 5.55089, -22.3852, 0.55", "88.3285, 4.64239, -24.607, 0.28", "90.0168, 4.10799, -25.9887, 0.55", "93.6681, 3.02097, -28.9394, 0.28", "95.6105, 2.54103, -30.5524, 0.55", "100.183, 1.68435, -34.3421, 0.28", "102.301, 1.57723, -36.1442, 0.55", "105.972, 1.99154, -39.2138, 0.28", "108.035, 2.57513, -40.8243, 0.55", "111.011, 3.97407, -42.881, 0.28", "112.61, 4.91913, -43.9524, 0.83", "115.901, 7.18064, -46.0648, 0.28", "118.108, 8.77873, -47.6481, 0.55", "120.524, 10.607, -49.5251, 0.28", "121.829, 11.5438, -50.5311, 0.55", "126.684, 14.7782, -54.0231, 0.28", "128.288, 15.6871, -55.1196, 0.55", "131.924, 17.5394, -57.2793, 0.28", "133.174, 18.1208, -57.9352, 1.11", "135.587, 19.1486, -59.0672, 0.28", "137.053, 19.7689, -59.6264, 1.11", "142.761, 22.2497, -61.0988, 0.28", "147.447, 24.3358, -62.0469, 0.28", "150.293, 25.705, -62.3505, 0.83", "154.166, 27.8167, -62.536, 0.28", "155.468, 28.6181, -62.5317, 0.55", "158.08, 30.4712, -62.269, 0.28", "160.268, 32.3208, -61.7879, 1.11", "164.618, 36.4863, -60.5417, 0.28", "168.279, 40.3317, -59.3222, 0.28", "169.336, 41.5495, -58.9172, 0.55", "171.73, 44.4459, -58.0005, 0.28", "172.72, 45.7247, -57.6141, 1.66", "174.06, 47.4989, -57.0626, 0.28", "175.734, 49.7221, -56.5113, 0.55", "176.775, 51.0463, -56.1989, 0.28", "178.134, 52.6743, -56.042, 0.55", "179.777, 54.5784, -56.0975, 0.28", "180.815, 55.7335, -56.3289, 0.55", "182.555, 57.6766, -56.8389, 0.28", "184.089, 59.3935, -57.3941, 1.11", "187.807, 63.4136, -59.0038, 0.28", "189.029, 64.6916, -59.6386, 0.55", "193.043, 68.8986, -62.1196, 0.28", "194.859, 70.7932, -63.3896, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-5.12059, 9.35406, 7.96102, 1.11", "-7.07891, 9.12836, 7.02766, 1.11", "-11.3421, 8.63702, 4.99579, 1.11", "-16.9824, 7.98697, 2.30753, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.92059, 10.7341, 0.421023, 2.22", "-2.65477, 14.1414, -1.31888, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.75941, -11.7459, 2.43102, 2.49", "3.34027, -16.4049, 2.43102, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.65377, -11.9555, 0.0201467, 0.830559", "8.12441, -26.2738, 0.0201467, 0.830559", "12.5951, -40.5921, 0.0201467, 0.830559" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-16.9824, 7.98697, 2.30753, 0.55", "-19.0421, 7.12717, 3.54029, 0.55", "-20.5523, 6.28054, 4.53003, 0.55", "-22.0762, 5.39165, 5.4968, 0.55", "-23.6976, 4.51989, 6.46044, 0.55", "-26.2404, 3.27414, 7.99714, 0.55", "-29.15, 2.02162, 9.74084, 0.55", "-32.4912, 0.84532, 11.7334, 0.83", "-36.3678, -0.249225, 13.979, 0.55", "-38.8948, -0.733446, 15.4268, 0.55", "-41.6272, -1.01356, 16.9182, 0.55", "-44.0108, -1.08315, 18.1435, 0.55", "-46.7031, -0.949047, 19.4356, 0.55", "-49.0338, -0.745936, 20.514, 0.55", "-51.4126, -0.485827, 21.6251, 0.55", "-53.3579, -0.339839, 22.5057, 0.55", "-55.4854, -0.271007, 23.414, 0.55", "-57.8661, -0.273668, 24.4063, 0.55", "-60.6988, -0.208633, 25.5507, 0.55", "-64.1403, 0.020686, 26.9051, 0.55", "-65.3685, 0.162961, 27.3684, 0.55", "-68.8456, 0.730488, 28.6714, 0.83", "-71.5875, 1.24653, 29.7739, 0.55", "-75.3819, 2.0922, 31.4123, 0.55", "-76.8667, 2.46584, 32.0537, 0.83", "-80.0711, 3.23736, 33.4665, 0.55", "-82.2974, 3.80198, 34.477, 0.55", "-84.6734, 4.34288, 35.5456, 0.55", "-86.4521, 4.6662, 36.3411, 0.55", "-87.7934, 4.83442, 36.8778, 0.28", "-90.7609, 5.07672, 37.8942, 0.55", "-92.5124, 5.12621, 38.4571, 0.55", "-94.3209, 5.09147, 39.0594, 0.55", "-97.1398, 5.0102, 39.9526, 0.83", "-99.1533, 4.88019, 40.5939, 0.55", "-101.657, 4.68117, 41.4768, 0.55", "-104.018, 4.5067, 42.4014, 0.55", "-106.259, 4.34431, 43.3488, 0.55", "-108.348, 4.2382, 44.3667, 0.55", "-116.834, 4.45741, 50.182, 0.55", "-125.918, 2.6811, 54.6784, 0.55", "-135.089, 2.26155, 59.3259, 0.55", "-143.557, 0.81097, 64.9897, 0.55", "-150.204, -1.75088, 72.4157, 0.55", "-156.314, -6.83311, 78.9523, 0.55", "-162.18, -13.4375, 84.2295, 0.55", "-168.57, -18.2771, 90.6826, 0.55", "-175.012, -22.9978, 97.1703, 0.55", "-181.904, -26.8509, 103.769, 0.55", "-186.958, -30.4547, 111.977, 0.55", "-190.867, -35.1595, 120.251, 0.55", "-193.064, -38.3861, 129.772, 0.55", "-193.231, -40.3313, 139.875, 0.55", "-192.695, -42.7064, 149.873, 0.55", "-190.77, -46.276, 159.33, 0.55", "-189.809, -49.8814, 168.92, 0.55", "-189.621, -54.6027, 178.061, 0.55", "-191.417, -59.3672, 187.003, 0.55", "-193.571, -62.8185, 196.455, 0.55", "-194.753, -67.6142, 205.482, 0.55", "-194.094, -72.9357, 214.265, 0.55", "-191.799, -79.498, 221.851, 0.55", "-188.689, -85.7023, 229.449, 0.55", "-185.521, -92.381, 236.607, 0.55", "-181.981, -99.2808, 243.371, 0.55", "-178.71, -105.469, 250.914, 0.55", "-174.825, -112.57, 257.267, 0.55", "-170.048, -119.339, 263.37, 0.55", "-165.314, -125.691, 269.937, 0.55", "-160.436, -132.355, 276.076, 0.55", "-157.474, -139.152, 283.212, 0.55", "-156.249, -147.138, 289.583, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-16.9824, 7.98697, 2.30753, 0.83", "-19.7387, 10.2777, 1.98286, 0.83", "-20.8834, 11.3948, 1.07716, 0.83", "-22.2254, 12.7044, 0.0154162, 1.38", "-24.163, 14.595, -1.51748, 1.11", "-26.0838, 16.4694, -3.03718, 1.11", "-27.7496, 18.0949, -4.35508, 1.11", "-33.4168, 25.0073, -10.9444, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-2.65477, 14.1414, -1.31888, 1.66", "-3.36464, 16.3569, -2.5046, 1.66", "-4.10572, 18.3356, -3.53562, 1.94", "-4.73564, 20.114, -4.43561, 0.83", "-5.39816, 22.3672, -5.58686, 0.83", "-5.87109, 24.0344, -6.53536, 0.83", "-6.56569, 27.0752, -8.2573, 0.83", "-6.98419, 29.1704, -9.52461, 0.83", "-7.29965, 30.9155, -10.5959, 0.83", "-7.68321, 33.4924, -12.1122, 1.38", "-8.18733, 37.5679, -14.636, 0.83", "-8.61971, 42.5805, -17.6196, 0.83", "-8.67416, 46.1829, -19.5763, 0.83", "-8.61836, 48.5852, -20.8332, 0.83", "-8.46629, 52.1267, -22.5548, 0.83", "-8.0925, 57.6142, -25.0296, 0.83", "-7.78968, 60.3135, -26.1415, 0.83", "-7.15749, 65.0578, -27.9941, 0.83", "-6.53906, 69.0843, -29.486, 0.83", "-6.27291, 70.772, -30.1531, 1.94", "-6.04062, 72.6825, -30.8754, 1.11", "-5.89288, 74.6112, -31.5388, 0.55", "-5.83192, 76.5506, -32.3354, 1.38", "-5.88102, 81.3014, -34.4259, 0.55", "-5.9855, 84.5812, -35.9088, 1.11", "-6.18539, 88.8775, -37.9291, 0.55", "-6.34373, 91.4909, -39.1779, 1.94", "-6.78837, 97.029, -41.8432, 0.28", "-6.95851, 98.6997, -42.622, 0.83", "-7.24803, 100.873, -43.5621, 0.28", "-7.47983, 102.481, -44.2036, 1.66", "-8.0062, 105.922, -45.4297, 0.55", "-8.27627, 107.529, -45.8508, 0.28", "-8.99917, 111.892, -46.499, 0.55", "-9.34454, 114.035, -46.8261, 0.83", "-9.63829, 116.144, -47.1294, 0.83", "-9.82434, 117.672, -47.3849, 0.55", "-10.0019, 119.722, -47.7855, 0.55", "-10.034, 123.054, -48.6169, 1.11", "-9.68295, 126.276, -49.5738, 0.28", "-9.33981, 127.83, -50.0766, 0.55", "-8.71202, 129.811, -50.86, 0.28", "-8.32041, 130.813, -51.3088, 0.55", "-7.47835, 132.681, -52.2059, 0.55", "-6.34915, 135.039, -53.3439, 0.83", "-5.69775, 136.469, -53.9588, 0.55", "-4.35416, 139.647, -55.3283, 1.38", "-3.11238, 142.65, -56.6867, 0.55", "-2.47351, 144.407, -57.5542, 0.28", "-2.01787, 145.859, -58.2989, 0.55", "-1.50012, 147.923, -59.3217, 0.28", "-1.14243, 149.647, -60.0974, 1.11", "-0.687689, 152.063, -60.9816, 0.55", "-0.306864, 154.255, -61.6914, 0.28", "0.0614723, 156.385, -62.2924, 0.55", "0.625506, 159.38, -63.0437, 0.55", "1.00907, 161.199, -63.4067, 0.55", "1.64635, 164.217, -63.9696, 0.55", "2.12527, 166.354, -64.3655, 0.28", "2.59647, 168.344, -64.7991, 0.55", "3.2259, 171.004, -65.5002, 0.83", "3.86014, 173.606, -66.4157, 0.55", "4.38759, 176.015, -67.5771, 0.28", "4.65212, 177.665, -68.6838, 0.55", "4.77885, 179.089, -69.7612, 0.55", "4.77154, 179.85, -70.3902, 0.55", "4.58592, 182.571, -72.7116, 0.28", "4.4113, 184.693, -74.3984, 1.11", "4.12239, 188.561, -77.0091, 0.83", "4.0857, 190.659, -78.2354, 0.55", "4.17999, 193.406, -79.6009, 0.83", "4.29871, 194.815, -80.146, 0.83", "4.64935, 197.322, -80.7692, 0.28", "4.91871, 198.857, -80.987, 0.55", "5.70913, 202.67, -81.2767, 0.55", "6.59945, 206.527, -81.5056, 0.28", "7.40811, 209.886, -81.6441, 0.55", "7.9114, 212.134, -81.7689, 1.11", "8.35261, 214.21, -81.9535, 0.55", "8.64342, 215.767, -82.1315, 0.28", "8.73699, 216.585, -82.2127, 0.55", "8.86311, 217.937, -82.2844, 0.28", "8.88917, 218.623, -82.2638, 0.55", "8.92208, 220.182, -82.1121, 0.55", "9.00016, 221.846, -81.8702, 0.83", "9.2667, 225.501, -81.1301, 0.55", "9.54176, 228.494, -80.5099, 0.83", "10.0124, 232.886, -79.681, 0.55", "10.2439, 234.95, -79.3885, 0.55", "10.6869, 238.734, -79.0136, 0.28", "10.9529, 240.876, -78.9738, 1.38", "11.3101, 243.554, -79.2237, 0.55", "11.6112, 246.011, -79.7377, 0.83", "11.7614, 248.421, -80.6204, 0.28", "11.7518, 249.148, -80.9346, 0.55", "11.5406, 251.278, -82.0403, 0.28", "11.3196, 252.693, -82.8181, 0.55", "11.0488, 254.072, -83.5252, 0.55", "10.2619, 257.659, -85.2642, 0.28", "10.0066, 258.82, -85.8105, 0.83", "9.4472, 261.394, -87.0243, 0.55", "8.84269, 264.202, -88.3407, 0.28", "8.47783, 265.861, -89.0853, 0.55", "8.08534, 267.97, -89.8471, 0.28", "7.99282, 268.534, -90.0016, 0.55", "7.73258, 270.062, -90.3242, 0.28", "7.5073, 271.345, -90.5187, 0.55", "7.06256, 273.743, -90.7975, 0.28", "6.28204, 277.586, -91.1936, 0.55", "5.69852, 280.179, -91.5087, 1.11", "4.79422, 284.007, -92.1628, 0.55", "4.48663, 285.28, -92.4248, 0.83", "3.65881, 288.539, -93.2904, 0.55", "2.7557, 291.961, -94.3935, 0.55", "2.24371, 294.042, -95.273, 0.83", "1.73494, 297.112, -96.7803, 0.28", "1.60421, 298.949, -97.758, 0.83", "1.62734, 301.539, -99.0347, 0.28", "1.69801, 302.485, -99.4654, 0.55", "2.15984, 306.355, -101.136, 0.28", "2.65275, 309.644, -102.362, 0.28", "3.17898, 312.623, -103.32, 0.28", "4.10424, 317.1, -104.622, 0.28", "4.39053, 318.338, -104.89, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.65477, 14.1414, -1.31888, 0.83", "-3.86312, 15.6416, -1.58344, 0.83", "-4.73052, 16.8634, -1.8574, 0.83", "-5.29892, 17.7624, -2.06188, 0.55", "-5.77103, 18.5781, -2.2619, 0.83", "-6.1535, 19.2501, -2.46078, 0.55", "-6.67174, 20.1871, -2.75195, 0.83", "-7.19366, 21.5498, -3.55049, 0.83", "-7.46988, 22.5041, -4.26035, 0.83", "-7.63783, 23.191, -4.82165, 0.83", "-7.97331, 24.5136, -5.91149, 0.55", "-8.23641, 25.5763, -6.78789, 0.83", "-9.41802, 30.2506, -10.4917, 0.83", "-9.72118, 31.3567, -11.3045, 0.83", "-10.2813, 33.2795, -12.5822, 0.83", "-10.8942, 35.3123, -13.6883, 0.83", "-11.4395, 37.0228, -14.4001, 0.83", "-12.2673, 39.4455, -15.0871, 0.83", "-12.9383, 41.3612, -15.341, 0.83", "-13.4705, 43.1112, -15.5205, 0.83", "-14.0416, 45.451, -15.6581, 0.83", "-14.4424, 47.5418, -15.6787, 0.83", "-14.8447, 50.0996, -15.5601, 0.83", "-15.0335, 51.8784, -15.4568, 0.83", "-15.1186, 53.2099, -15.4003, 0.55", "-15.205, 54.8549, -15.3845, 1.11", "-15.2626, 56.7716, -15.41, 0.55", "-15.2781, 58.6347, -15.4422, 0.55", "-15.3243, 60.2711, -15.4951, 0.55", "-15.4514, 61.7499, -15.571, 0.55", "-15.7377, 63.6385, -15.6953, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.34027, -16.4049, 2.43102, 0.83", "4.03062, -18.5936, 3.95079, 0.83", "5.28208, -22.5612, 6.70579, 1.66", "6.47237, -26.3348, 9.32612, 1.94", "7.81385, -30.5879, 12.2793, 1.94", "9.81609, -36.9357, 16.6871, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "3.34027, -16.4049, 2.43102, 0.83", "1.72466, -20.7047, 2.33999, 0.83", "0.369548, -23.8795, 2.38338, 0.83", "-0.410913, -25.7099, 2.3697, 0.55", "-1.67754, -28.2991, 2.24597, 1.11", "-3.02493, -30.9595, 2.02063, 0.83", "-3.86069, -32.7298, 1.84078, 0.55", "-5.36074, -35.9225, 1.27338, 0.83", "-7.04284, -39.4417, 0.381018, 0.55", "-8.33459, -42.2607, -0.702568, 0.55", "-9.30139, -44.458, -1.80843, 0.83", "-10.7293, -47.8118, -3.80035, 0.83", "-12.2279, -51.3326, -6.14574, 0.55", "-13.1507, -53.7867, -7.97933, 0.55", "-14.3762, -57.0723, -10.6669, 1.11", "-14.962, -58.6426, -12.1699, 0.55", "-15.2677, -59.3413, -12.9708, 0.55", "-15.9528, -60.6998, -14.7125, 0.55", "-16.7775, -62.2366, -16.773, 0.83", "-17.9743, -64.2276, -19.5505, 0.83", "-20.3416, -67.5436, -24.0588, 0.55", "-21.5415, -68.9776, -25.9961, 0.28", "-22.6045, -70.2015, -27.5658, 0.83", "-24.0122, -71.7892, -29.4804, 0.55", "-24.8286, -72.7326, -30.4866, 0.55", "-26.5498, -75.0078, -32.4394, 1.38", "-29.4454, -79.5238, -35.3831, 0.55", "-30.0274, -80.6902, -36.0321, 0.83", "-30.7552, -83.3152, -37.2245, 0.28", "-30.8723, -84.6349, -37.6641, 1.11", "-30.8254, -86.5794, -38.1802, 1.11", "-30.6765, -87.9638, -38.4539, 1.11", "-30.3636, -90.307, -38.7364, 0.55", "-29.6791, -95.792, -39.345, 0.28", "-29.1615, -100.167, -39.754, 0.55", "-28.8933, -102.619, -40.0067, 0.55", "-28.5295, -105.932, -40.3424, 1.94", "-28.3156, -108.305, -40.5588, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "12.5951, -40.5921, 0.0201467, 0.756209", "17.0657, -54.9104, 0.0201467, 0.756209", "21.5363, -69.2287, 0.0201467, 0.756209" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-33.4168, 25.0073, -10.9444, 0.83", "-33.8532, 25.0251, -11.115, 0.83", "-36.9831, 25.155, -12.1789, 0.83", "-40.6322, 25.5287, -13.4201, 0.83", "-43.3078, 25.9649, -14.3977, 0.83", "-46.6294, 26.612, -15.6655, 0.83", "-48.6136, 27.0466, -16.4225, 0.83", "-51.3502, 27.7864, -17.4288, 0.55", "-55.5116, 29.2356, -18.8814, 1.38", "-58.078, 30.2713, -19.744, 0.55", "-59.5344, 30.8867, -20.2541, 0.55", "-61.9545, 31.9998, -21.2787, 0.55", "-64.9388, 33.4089, -22.6362, 0.55", "-66.6274, 34.2467, -23.4183, 0.83", "-69.2925, 35.446, -24.5706, 0.83", "-71.9158, 36.5977, -25.7256, 0.55", "-76.5276, 38.6218, -27.816, 0.55", "-80.8238, 40.604, -30.1022, 0.55", "-82.6846, 41.4911, -31.1752, 0.55", "-85.2369, 42.6602, -32.7455, 0.83", "-87.9412, 43.9349, -34.4858, 0.55", "-90.751, 45.2697, -36.2891, 1.66", "-95.1229, 47.2034, -38.9953, 0.28", "-96.0589, 47.6368, -39.5591, 0.55", "-98.874, 48.9579, -40.9764, 0.28", "-100.239, 49.6123, -41.5204, 0.55", "-103.176, 51.0095, -42.379, 0.55", "-105.871, 52.3148, -42.9075, 0.55", "-109.208, 53.9865, -43.3156, 0.83", "-112.773, 55.9105, -43.7272, 0.55", "-114.54, 56.9624, -43.9129, 0.55", "-117.744, 58.9989, -44.2387, 0.55", "-120.476, 61.0603, -44.5312, 0.83", "-122.245, 62.5696, -44.7197, 0.55", "-123.726, 64.0034, -44.8556, 0.55", "-125.166, 65.5004, -44.902, 0.28", "-128.04, 68.5259, -44.8247, 0.55", "-131.333, 71.8762, -44.485, 0.28", "-133.351, 73.8932, -44.227, 0.55", "-135.679, 76.0736, -43.9613, 0.28", "-138.27, 78.2474, -43.7684, 0.55", "-140.633, 79.9665, -43.6597, 0.83", "-146.54, 83.6108, -43.6654, 0.55", "-148.002, 84.3839, -43.7581, 1.11", "-151.282, 86.0255, -44.1911, 0.55", "-154.437, 87.4561, -44.7698, 0.83", "-157.593, 88.907, -45.465, 0.28", "-158.686, 89.4571, -45.8154, 0.83", "-161.385, 90.9742, -46.9812, 0.28", "-162.643, 91.808, -47.5522, 0.55", "-164.398, 93.3505, -48.4611, 0.55", "-166.453, 95.6473, -49.8527, 0.55", "-168.705, 98.4723, -51.6577, 0.55", "-170.401, 100.76, -53.0921, 0.55", "-171.555, 102.363, -54.0809, 0.55", "-173.906, 106.058, -56.3534, 0.55", "-175.599, 109.164, -58.2328, 0.28", "-176.091, 110.25, -58.9422, 0.55", "-176.649, 111.645, -59.8323, 0.28", "-177.315, 114.035, -61.3831, 1.11", "-177.872, 116.787, -63.1036, 0.55", "-177.885, 117.906, -63.9874, 0.83", "-177.56, 121.795, -67.3201, 0.28", "-177.352, 123.261, -68.6647, 0.55", "-177.025, 125.142, -70.4806, 0.28", "-176.859, 126.042, -71.3659, 0.83", "-175.213, 135.673, -80.8355, 0.55", "-175.031, 136.644, -81.8071, 0.83", "-174.285, 140.098, -85.2397, 0.28", "-174.024, 141.192, -86.352, 0.55", "-173.783, 142.296, -87.5214, 0.28", "-173.383, 144.207, -89.5189, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-33.4168, 25.0073, -10.9444, 1.11", "-32.7662, 30.1865, -14.986, 1.11", "-32.1733, 34.6713, -18.1868, 0.28", "-32.1113, 35.5276, -18.8361, 0.83", "-31.9598, 39.4884, -21.6862, 0.28", "-31.9267, 40.5151, -22.4071, 0.55", "-31.816, 44.3919, -24.975, 0.55", "-31.7218, 47.4546, -27.0285, 2.22", "-31.4584, 60.6947, -35.5792, 0.28", "-31.4493, 62.8349, -36.906, 1.94", "-31.4756, 74.1702, -43.5206, 0.28", "-31.4965, 76.7323, -44.9895, 0.55", "-31.5467, 80.3687, -47.0309, 0.28", "-31.5875, 82.0231, -47.8879, 1.66", "-31.7623, 86.1986, -49.7592, 0.28", "-32.1062, 90.4646, -51.6249, 0.28", "-32.5406, 93.2799, -52.7471, 2.49", "-33.9998, 100.576, -55.8283, 0.28", "-35.2715, 105.631, -57.822, 0.28", "-35.8171, 107.535, -58.4623, 1.66", "-37.1984, 111.869, -59.6107, 0.28", "-37.9758, 114.06, -60.032, 0.83", "-40.0154, 119.698, -60.8682, 0.28", "-40.9974, 122.376, -61.154, 1.11", "-42.4612, 127.068, -61.8126, 0.28", "-43.3742, 130.595, -62.2742, 0.28", "-43.8906, 133.189, -62.5452, 0.83", "-44.4353, 137.135, -63.1113, 0.28", "-44.5138, 137.786, -63.2108, 0.83", "-44.7632, 139.89, -63.6749, 0.28", "-44.9781, 141.637, -64.1216, 0.83", "-45.154, 143.096, -64.4513, 0.83", "-45.7632, 150.194, -65.7702, 0.28", "-45.817, 153.231, -66.3552, 1.11", "-45.6735, 156.135, -66.9327, 0.28", "-45.4832, 157.822, -67.2188, 0.83", "-44.9403, 160.842, -67.8145, 0.28", "-44.171, 163.95, -68.4774, 0.83", "-42.3301, 169.839, -70.0172, 0.28", "-41.4616, 172.339, -70.8675, 0.28", "-40.5946, 174.7, -71.9012, 0.55", "-38.823, 179.499, -74.3, 0.28", "-38.3211, 180.849, -75.0025, 0.83", "-36.9517, 184.839, -77.1005, 0.28", "-36.4126, 186.442, -77.9425, 0.83", "-35.0187, 190.392, -80.2183, 0.28", "-34.387, 191.997, -81.1545, 0.83", "-33.5894, 193.651, -82.041, 0.28", "-33.2727, 194.203, -82.3297, 0.28", "-32.1448, 195.927, -83.1447, 0.83", "-28.6633, 200.956, -85.5334, 0.28", "-27.9975, 201.854, -85.9656, 0.55", "-26.7339, 203.448, -86.9626, 0.28", "-26.056, 204.237, -87.5816, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-15.7377, 63.6385, -15.6953, 0.55", "-14.7373, 66.4452, -15.9248, 0.55", "-14.4678, 67.2134, -16.0009, 0.28", "-14.072, 68.4479, -16.1562, 0.55", "-13.0972, 71.7095, -16.7532, 0.28", "-12.3811, 74.0772, -17.263, 0.55", "-11.7922, 76.31, -17.8056, 0.55", "-11.3334, 78.5336, -18.4372, 0.55", "-10.8199, 81.2259, -19.2987, 0.55", "-10.3007, 84.0014, -20.2053, 0.55", "-9.99319, 85.7766, -20.7448, 0.55", "-9.54708, 88.6447, -21.5963, 0.55", "-9.10469, 91.92, -22.4417, 0.55", "-8.74775, 94.5743, -22.9312, 0.55", "-8.27426, 98.2326, -23.261, 0.28", "-8.13058, 99.4751, -23.2647, 0.55", "-7.97765, 100.776, -23.2093, 0.55", "-7.74377, 102.552, -23.0726, 0.55", "-7.61896, 103.856, -22.9365, 0.55", "-7.49403, 105.902, -22.8343, 0.83", "-7.36397, 107.866, -22.8365, 0.55", "-7.12931, 110.054, -22.8306, 0.28", "-6.74979, 112.749, -22.8494, 0.55", "-6.40463, 114.846, -22.8817, 0.28", "-6.17237, 116.184, -22.9127, 1.38", "-5.68306, 118.636, -22.968, 1.38", "-4.63021, 123.782, -22.9749, 0.28", "-4.30902, 125.353, -22.982, 0.83", "-4.06986, 126.476, -22.983, 0.83", "-3.36874, 129.822, -23.0004, 0.28", "-3.04958, 131.464, -22.9976, 0.55", "-2.76518, 133.066, -23.0341, 0.55", "-2.3649, 135.558, -23.1919, 0.55", "-1.95636, 138.258, -23.2701, 0.28", "-1.78667, 139.236, -23.2937, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-15.7377, 63.6385, -15.6953, 0.83", "-15.9311, 65.0487, -15.9978, 0.83", "-16.2909, 67.6727, -16.5606, 0.28", "-16.6055, 69.9671, -17.0528, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "9.81609, -36.9357, 16.6871, 1.66", "8.7375, -39.1426, 18.4179, 1.66" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "9.81609, -36.9357, 16.6871, 0.55", "12.7368, -38.1447, 17.0446, 0.55", "17.1131, -39.9031, 17.5662, 0.55", "20.4803, -41.1891, 17.9987, 0.55", "23.0846, -42.1612, 18.3357, 0.55", "28.2364, -44.0199, 19.1602, 0.55", "30.5771, -44.8622, 19.6007, 0.55", "34.8679, -46.332, 20.5486, 0.55", "36.7666, -46.9211, 21.0602, 0.55", "40.1136, -47.9339, 22.0665, 0.55", "43.9535, -48.9915, 23.3194, 0.55", "47.5742, -49.8246, 24.5642, 0.55", "52.3008, -50.8473, 26.2083, 0.55", "56.9165, -51.6663, 27.8451, 0.55", "59.4906, -52.0215, 28.7318, 0.55", "64.1043, -52.4766, 30.2589, 0.55", "66.7727, -52.638, 31.0828, 0.55", "69.671, -52.7225, 31.9443, 0.55", "72.5917, -52.7293, 32.776, 0.55", "75.8429, -52.6848, 33.6901, 0.55", "78.8401, -52.649, 34.5534, 0.55", "80.6831, -52.6147, 35.0774, 0.55", "84.5306, -52.4995, 36.1527, 0.55", "87.7676, -52.3463, 37.023, 0.55", "91.0107, -52.1241, 37.8291, 0.55", "92.3676, -52.0205, 38.1468, 0.55", "94.7714, -51.7641, 38.747, 0.55", "96.919, -51.5484, 39.3139, 0.55", "98.285, -51.4263, 39.7064, 0.55", "101.584, -51.2388, 40.6745, 0.55", "104.858, -51.1593, 41.6222, 0.55", "108.989, -51.2655, 42.8531, 0.55", "112.455, -51.5899, 43.8425, 0.55", "114.122, -51.8487, 44.3598, 0.55", "117.22, -52.5587, 45.4366, 0.55", "119.44, -53.2922, 46.3191, 0.55", "121.603, -54.2387, 47.4559, 0.28", "122.981, -55.1125, 48.3617, 1.38", "125.906, -57.2579, 50.6006, 0.55", "127.611, -58.6794, 52.1341, 0.55", "128.939, -60.0427, 53.6374, 0.83", "131.384, -62.9339, 57.0563, 0.55", "132.398, -64.2917, 58.8028, 0.55", "141.523, -65.2505, 62.9489, 0.55", "150.849, -65.1553, 66.7408, 0.55", "160.323, -66.34, 69.9352, 0.55", "168.968, -68.7731, 74.486, 0.55", "176.711, -71.56, 80.2867, 0.55", "185.304, -73.2333, 85.2599, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-28.3156, -108.305, -40.5588, 0.28", "-29.0259, -111.27, -41.0189, 0.28", "-29.3433, -112.619, -41.2294, 0.83", "-30.1922, -117.019, -42.0118, 0.28", "-30.3958, -118.161, -42.1817, 0.83", "-30.7892, -120.368, -42.51, 0.28", "-31.2095, -122.725, -42.8607, 0.55", "-31.526, -124.363, -43.1484, 0.55", "-32.1704, -127.99, -43.827, 0.28", "-32.3567, -129.665, -44.1324, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-28.3156, -108.305, -40.5588, 0.28", "-32.0031, -117.505, -39.7615, 0.28", "-32.8255, -119.557, -39.5836, 0.55", "-33.9381, -122.333, -39.3431, 0.55", "-34.9177, -124.777, -39.1312, 0.28", "-35.81, -127.003, -38.9383, 0.55", "-36.8663, -129.639, -38.7099, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-1.78667, 139.236, -23.2937, 0.28", "-2.00729, 140.597, -23.7068, 0.28", "-2.19176, 141.68, -24.0856, 0.83", "-2.48184, 143.17, -24.7353, 0.28", "-2.76521, 144.492, -25.3298, 0.28", "-2.89701, 145.076, -25.582, 0.55", "-3.32767, 146.725, -26.2564, 0.28", "-3.63582, 147.75, -26.7095, 0.83", "-4.28708, 149.371, -27.6691, 0.28", "-4.78715, 150.425, -28.4514, 0.28", "-5.06126, 150.981, -28.8905, 0.55", "-5.68742, 152.152, -29.8722, 0.28", "-6.3077, 153.191, -30.8378, 0.83", "-7.36992, 154.861, -32.5834, 0.83", "-8.21706, 156.031, -33.796, 0.83", "-9.08586, 157.147, -34.9978, 0.28", "-10.2262, 158.552, -36.4606, 0.55", "-11.5475, 160.147, -38.0146, 0.28", "-12.3653, 161.111, -38.9019, 1.11", "-14.5716, 163.691, -41.1445, 0.28", "-15.3573, 164.507, -41.8785, 0.83", "-16.539, 165.649, -42.9666, 0.28", "-17.0531, 166.135, -43.4088, 0.55", "-18.3249, 167.297, -44.4158, 0.28", "-18.5301, 167.484, -44.5842, 0.55", "-19.4091, 168.292, -45.4837, 0.28", "-20.5787, 169.335, -46.6354, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-1.78667, 139.236, -23.2937, 0.28", "-0.883013, 141.668, -22.0405, 0.28", "-0.358393, 143.311, -21.2587, 0.55", "0.144664, 145.434, -20.2293, 0.28", "0.583912, 146.937, -19.8216, 0.55", "1.32596, 148.962, -19.5933, 0.28", "1.4436, 149.283, -19.5571, 0.55", "2.30026, 151.609, -19.5947, 0.28", "3.20249, 154.057, -19.8753, 0.83", "5.60846, 159.479, -21.2676, 0.28", "6.64728, 161.548, -22.0408, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "8.7375, -39.1426, 18.4179, 1.66", "8.7029, -40.1078, 18.5255, 1.66", "8.56857, -43.0239, 18.8744, 1.11", "8.4691, -50.5709, 20.0441, 1.11", "8.46725, -58.323, 21.533, 1.11", "8.36303, -63.2145, 22.666, 1.11", "8.2516, -68.8771, 24.164, 1.11", "8.27779, -72.1003, 25.1448, 1.11", "8.52904, -78.4063, 27.3364, 1.11", "8.83886, -84.7094, 29.8267, 1.11", "9.12472, -95.613, 34.3597, 1.11", "9.21403, -101.291, 36.6588, 1.11", "9.22372, -106.83, 38.846, 1.11", "8.94936, -112.681, 40.9182, 1.11", "8.11546, -119.375, 42.9529, 0.83", "7.15091, -124.219, 44.183, 0.55", "6.12831, -128.084, 44.8945, 0.55", "5.04984, -131.694, 45.3028, 0.55", "3.21135, -136.943, 45.7117, 0.55", "0.507368, -144.215, 46.0334, 0.55", "-1.49702, -149.98, 46.1501, 0.55", "-3.04586, -154.72, 46.2757, 0.55", "-4.8134, -160.454, 46.5861, 0.28", "-7.97887, -174.146, 50.806, 0.28", "-12.7359, -186.807, 56.4971, 0.28", "-17.6966, -198.831, 63.2895, 0.28", "-22.3682, -209.757, 71.898, 0.28", "-24.9112, -219.98, 82.1126, 0.28", "-25.8131, -228.546, 93.9921, 0.28", "-26.805, -236.97, 105.965, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.7375, -39.1426, 18.4179, 0.55", "9.67926, -39.5724, 20.2719, 0.55", "10.1707, -39.7864, 21.0701, 0.55", "11.5889, -40.3351, 23.3646, 0.55", "15.2611, -41.5397, 28.9731, 0.55", "16.0954, -41.7363, 30.1914, 0.55", "18.192, -42.0116, 33.2227, 0.55", "19.6703, -42.1847, 35.4846, 0.28", "21.8801, -42.3434, 38.9187, 0.28", "22.7618, -42.3717, 40.2963, 0.28", "24.0822, -42.2025, 41.8176, 0.28", "26.1352, -41.6894, 44.2951, 0.28", "30.8333, -42.5624, 51.276, 0.28", "34.396, -44.0966, 58.794, 0.28", "37.8418, -45.6339, 66.3656, 0.28", "40.5004, -45.7214, 74.3963, 0.28", "43.6053, -46.9108, 82.1752, 0.28", "45.5993, -49.2268, 90.0636, 0.28", "47.9826, -53.0901, 97.2024, 0.28", "49.1022, -56.8463, 104.699, 0.28", "49.5027, -60.3483, 112.39, 0.28", "50.9833, -63.8241, 119.959, 0.28", "52.693, -67.0232, 127.602, 0.28", "53.4155, -69.1637, 135.754, 0.28", "56.1946, -71.1306, 143.498, 0.28", "59.6096, -71.6717, 151.219, 0.28", "62.4925, -72.6411, 159.113, 0.28", "65.6735, -72.1482, 166.937, 0.28", "68.5414, -72.1254, 174.896, 0.28", "71.3174, -71.5492, 182.866, 0.28", "73.0826, -69.9164, 190.977, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "185.304, -73.2333, 85.2599, 0.28", "195.578, -76.5427, 86.4565, 0.28", "205.333, -81.0742, 87.955, 0.28", "215.3, -84.6754, 90.3275, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "185.304, -73.2333, 85.2599, 0.28", "191.377, -74.1246, 89.6715, 0.28", "197.901, -75.8583, 93.0746, 0.28", "204.716, -77.1177, 96.0927, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-36.8663, -129.639, -38.7099, 0.28", "-39.0881, -133.043, -38.137, 0.28", "-39.7753, -134.091, -37.9627, 0.55", "-41.5597, -136.865, -37.6773, 0.28", "-42.6599, -138.541, -37.5406, 0.83", "-44.5906, -141.373, -37.3243, 0.28", "-46.0724, -143.526, -37.1632, 0.28", "-47.6446, -145.701, -37.1676, 0.83", "-50.2204, -149.181, -37.3524, 0.28", "-51.1174, -150.394, -37.5391, 0.55", "-54.1306, -154.572, -38.4737, 0.28", "-55.2775, -156.194, -38.9599, 0.83", "-58.7339, -161.068, -40.6981, 0.28", "-59.5789, -162.343, -41.2261, 0.83", "-61.8646, -166.186, -42.949, 0.28", "-62.4105, -167.375, -43.4944, 0.55", "-62.9971, -169.292, -44.3922, 0.28", "-63.4077, -170.999, -45.1685, 0.83", "-63.9668, -175.65, -46.9662, 0.28", "-64.0294, -176.993, -47.4421, 0.83", "-63.7999, -180.928, -48.4814, 0.28", "-63.5846, -182.477, -48.8829, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-36.8663, -129.639, -38.7099, 0.28", "-35.1436, -134.412, -40.0667, 0.28", "-34.2478, -136.894, -40.7722, 1.11", "-33.445, -139.119, -41.4045, 0.28", "-32.6875, -141.218, -42.0011, 1.38" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_27", "dend_26", "dend_25", "dend_20", "dend_13", "dend_0", "dend_24", "dend_21", "dend_19", "dend_14", "dend_6", "dend_1", "dend_23", "dend_22", "dend_16", "dend_15", "dend_10", "dend_7", "dend_5", "dend_2", "dend_18", "dend_17", "dend_12", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_28", "dend_27", "dend_26", "dend_25", "dend_20", "dend_13", "dend_0", "dend_24", "dend_21", "dend_19", "dend_14", "dend_6", "dend_1", "dend_23", "dend_22", "dend_16", "dend_15", "dend_10", "dend_7", "dend_5", "dend_2", "dend_18", "dend_17", "dend_12", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_13", "dend_0", "axon_0", "axon_0", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_LBC_d3f79b893e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_27, dend_26, dend_25, dend_20, dend_13, dend_0, dend_24, dend_21, dend_19, dend_14, dend_6, dend_1, dend_23, dend_22, dend_16, dend_15, dend_10, dend_7, dend_5, dend_2, dend_18, dend_17, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_27, dend_26, dend_25, dend_20, dend_13, dend_0, dend_24, dend_21, dend_19, dend_14, dend_6, dend_1, dend_23, dend_22, dend_16, dend_15, dend_10, dend_7, dend_5, dend_2, dend_18, dend_17, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_29
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_13, dend_0, axon_0, axon_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_28(0), soma_0(0.49999927224605856)
    connect dend_27(0), soma_0(0.49999927224605856)
    connect dend_26(0), soma_0(0.49999927224605856)
    connect dend_25(0), soma_0(0.49999927224605856)
    connect dend_20(0), soma_0(0.49999927224605856)
    connect dend_13(0), soma_0(0.49999927224605856)
    connect dend_0(0), soma_0(0.49999927224605856)
    connect axon_0(0), soma_0(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.51694, 11.0104, -0.0819092, 3.19551 ) }
    soma_0 { pt3dadd( -3.15841, 9.8621, -0.0768064, 5.3635 ) }
    soma_0 { pt3dadd( -2.79987, 8.71381, -0.0717036, 5.2385 ) }
    soma_0 { pt3dadd( -2.44133, 7.56552, -0.0666008, 5.40379 ) }
    soma_0 { pt3dadd( -2.0828, 6.41722, -0.061498, 6.02088 ) }
    soma_0 { pt3dadd( -1.72426, 5.26893, -0.0563952, 7.0572 ) }
    soma_0 { pt3dadd( -1.36573, 4.12064, -0.0512924, 8.33548 ) }
    soma_0 { pt3dadd( -1.00719, 2.97235, -0.0461896, 9.39045 ) }
    soma_0 { pt3dadd( -0.648657, 1.82405, -0.0410868, 9.67825 ) }
    soma_0 { pt3dadd( -0.290122, 0.675761, -0.035984, 9.93356 ) }
    soma_0 { pt3dadd( 0.0684139, -0.472532, -0.0308812, 10.1889 ) }
    soma_0 { pt3dadd( 0.426949, -1.62083, -0.0257784, 10.0539 ) }
    soma_0 { pt3dadd( 0.785485, -2.76912, -0.0206756, 9.68551 ) }
    soma_0 { pt3dadd( 1.14402, -3.91741, -0.0155728, 9.07939 ) }
    soma_0 { pt3dadd( 1.50256, -5.0657, -0.0104701, 8.46979 ) }
    soma_0 { pt3dadd( 1.86109, -6.214, -0.00536725, 7.63175 ) }
    soma_0 { pt3dadd( 2.21963, -7.36229, -2.64453E-4, 6.67377 ) }
    soma_0 { pt3dadd( 2.57816, -8.51058, 0.00483835, 5.68988 ) }
    soma_0 { pt3dadd( 2.9367, -9.65888, 0.00994114, 4.70477 ) }
    soma_0 { pt3dadd( 3.29523, -10.8072, 0.0150439, 3.57171 ) }
    soma_0 { pt3dadd( 3.65377, -11.9555, 0.0201467, 2.11631 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -2.91059, 2.62405, 14.561, 0.83 ) }
    dend_28 { pt3dadd( -3.82528, 5.28696, 15.1234, 0.83 ) }
    dend_28 { pt3dadd( -5.34035, 9.59802, 16.1481, 0.83 ) }
    dend_28 { pt3dadd( -6.13822, 11.8997, 16.7081, 0.55 ) }
    dend_28 { pt3dadd( -6.93209, 13.9329, 17.2834, 0.83 ) }
    dend_28 { pt3dadd( -8.22241, 17.2289, 18.2765, 0.55 ) }
    dend_28 { pt3dadd( -9.45464, 20.2748, 19.2767, 0.55 ) }
    dend_28 { pt3dadd( -10.7106, 23.2628, 20.4691, 0.55 ) }
    dend_28 { pt3dadd( -11.7988, 25.6007, 21.6559, 0.55 ) }
    dend_28 { pt3dadd( -13.4157, 28.8526, 23.6976, 0.55 ) }
    dend_28 { pt3dadd( -15.2422, 32.2761, 26.0493, 0.55 ) }
    dend_28 { pt3dadd( -16.6507, 34.6773, 27.8654, 0.55 ) }
    dend_28 { pt3dadd( -18.8208, 38.3015, 30.7343, 0.55 ) }
    dend_28 { pt3dadd( -20.9408, 41.8876, 33.5377, 0.55 ) }
    dend_28 { pt3dadd( -23.0235, 45.5251, 36.3615, 0.55 ) }
    dend_28 { pt3dadd( -24.5436, 48.2407, 38.4652, 0.55 ) }
    dend_28 { pt3dadd( -26.4308, 51.453, 41.0144, 0.55 ) }
    dend_28 { pt3dadd( -27.5861, 53.5062, 42.5357, 0.55 ) }
    dend_28 { pt3dadd( -28.6049, 55.4231, 43.7495, 0.83 ) }
    dend_28 { pt3dadd( -29.6982, 57.8474, 44.8129, 0.55 ) }
    dend_28 { pt3dadd( -33.7383, 67.5604, 48.7167, 0.55 ) }
    dend_28 { pt3dadd( -38.3579, 75.8658, 54.6821, 0.55 ) }
    dend_28 { pt3dadd( -42.0236, 84.938, 60.1744, 0.55 ) }
    dend_28 { pt3dadd( -43.5456, 94.4575, 65.9163, 0.55 ) }
    dend_28 { pt3dadd( -46.6741, 104.05, 70.8259, 0.55 ) }
    dend_28 { pt3dadd( -47.7559, 113.755, 76.3531, 0.55 ) }
    dend_28 { pt3dadd( -47.571, 123.971, 80.9913, 0.55 ) }
    dend_28 { pt3dadd( -46.1044, 133.805, 86.1916, 0.55 ) }
    dend_28 { pt3dadd( -43.8262, 143.562, 91.244, 0.55 ) }
    dend_28 { pt3dadd( -41.6565, 152.641, 97.4696, 0.55 ) }
    dend_28 { pt3dadd( -40.1447, 160.811, 105.011, 0.55 ) }
    dend_28 { pt3dadd( -40.2912, 169.182, 112.482, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -4.33059, 2.04405, 1.82102, 0.83 ) }
    dend_27 { pt3dadd( -5.06131, 2.05798, 0.974549, 0.83 ) }
    dend_27 { pt3dadd( -6.55625, 2.09785, -0.650782, 0.83 ) }
    dend_27 { pt3dadd( -9.25248, 2.19014, -3.43207, 0.83 ) }
    dend_27 { pt3dadd( -12.5721, 2.26884, -6.94153, 0.83 ) }
    dend_27 { pt3dadd( -13.9738, 2.29355, -8.34003, 0.55 ) }
    dend_27 { pt3dadd( -15.2529, 2.31717, -9.53947, 0.83 ) }
    dend_27 { pt3dadd( -16.2767, 2.4068, -10.5477, 0.28 ) }
    dend_27 { pt3dadd( -17.0999, 2.533, -11.4907, 0.55 ) }
    dend_27 { pt3dadd( -20.5929, 3.16398, -15.8443, 0.55 ) }
    dend_27 { pt3dadd( -21.8995, 3.35354, -17.5776, 0.83 ) }
    dend_27 { pt3dadd( -23.4851, 3.57982, -19.8069, 0.55 ) }
    dend_27 { pt3dadd( -26.4983, 3.97935, -24.1386, 0.55 ) }
    dend_27 { pt3dadd( -30.4345, 4.57311, -30.0111, 0.55 ) }
    dend_27 { pt3dadd( -33.1492, 4.99182, -34.2007, 0.55 ) }
    dend_27 { pt3dadd( -35.5067, 5.36204, -37.8027, 0.55 ) }
    dend_27 { pt3dadd( -36.4988, 5.51226, -39.3009, 0.55 ) }
    dend_27 { pt3dadd( -37.3149, 5.6086, -40.4264, 0.55 ) }
    dend_27 { pt3dadd( -39.7217, 5.80951, -43.1638, 0.55 ) }
    dend_27 { pt3dadd( -42.4051, 6.10699, -45.6653, 0.55 ) }
    dend_27 { pt3dadd( -44.3007, 6.33091, -47.2602, 0.28 ) }
    dend_27 { pt3dadd( -46.4889, 6.58553, -48.9963, 1.11 ) }
    dend_27 { pt3dadd( -52.2071, 6.9872, -53.2662, 0.28 ) }
    dend_27 { pt3dadd( -54.3054, 7.07411, -54.6995, 0.28 ) }
    dend_27 { pt3dadd( -55.9585, 7.0755, -55.7003, 1.11 ) }
    dend_27 { pt3dadd( -59.8593, 6.97482, -57.8574, 0.28 ) }
    dend_27 { pt3dadd( -62.3033, 6.83693, -59.1594, 0.83 ) }
    dend_27 { pt3dadd( -65.0061, 6.62261, -60.5175, 0.28 ) }
    dend_27 { pt3dadd( -66.2269, 6.51556, -61.082, 1.11 ) }
    dend_27 { pt3dadd( -69.6412, 6.23885, -62.834, 0.28 ) }
    dend_27 { pt3dadd( -70.8379, 6.19342, -63.4622, 0.28 ) }
    dend_27 { pt3dadd( -72.5122, 6.28418, -64.2575, 1.11 ) }
    dend_27 { pt3dadd( -75.8524, 6.84649, -65.7, 0.28 ) }
    dend_27 { pt3dadd( -77.0921, 7.19555, -66.1447, 0.83 ) }
    dend_27 { pt3dadd( -80.9407, 8.84464, -67.1883, 0.28 ) }
    dend_27 { pt3dadd( -82.8813, 9.97368, -67.5343, 1.11 ) }
    dend_27 { pt3dadd( -86.4238, 12.5219, -67.9148, 0.28 ) }
    dend_27 { pt3dadd( -88.8004, 14.5455, -67.9248, 0.83 ) }
    dend_27 { pt3dadd( -91.1028, 16.8556, -67.6831, 0.28 ) }
    dend_27 { pt3dadd( -93.7069, 19.8086, -67.2322, 0.28 ) }
    dend_27 { pt3dadd( -94.5087, 20.8588, -67.0135, 0.83 ) }
    dend_27 { pt3dadd( -95.67, 22.5018, -66.7533, 0.83 ) }
    dend_27 { pt3dadd( -96.7467, 24.2232, -66.6078, 0.28 ) }
    dend_27 { pt3dadd( -97.6007, 25.6747, -66.6483, 0.55 ) }
    dend_27 { pt3dadd( -98.6378, 27.4642, -66.9649, 0.28 ) }
    dend_27 { pt3dadd( -99.4373, 28.7944, -67.4455, 0.83 ) }
    dend_27 { pt3dadd( -101.084, 31.5039, -68.698, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( -102.276, 33.3655, -69.7331, 0.83 ) }
    dend_27 { pt3dadd( -103.308, 34.9109, -70.6981, 0.28 ) }
    dend_27 { pt3dadd( -104.927, 37.1661, -72.2363, 0.83 ) }
    dend_27 { pt3dadd( -107.942, 40.8629, -74.9419, 0.28 ) }
    dend_27 { pt3dadd( -109.373, 42.3021, -75.9887, 0.83 ) }
    dend_27 { pt3dadd( -110.604, 43.3016, -76.6816, 0.55 ) }
    dend_27 { pt3dadd( -111.632, 43.9816, -77.1572, 0.55 ) }
    dend_27 { pt3dadd( -113.086, 44.7646, -77.6527, 0.28 ) }
    dend_27 { pt3dadd( -115.617, 45.8565, -78.1884, 0.83 ) }
    dend_27 { pt3dadd( -119.916, 47.2984, -78.5844, 0.28 ) }
    dend_27 { pt3dadd( -121.718, 47.8399, -78.7039, 0.83 ) }
    dend_27 { pt3dadd( -123.604, 48.4603, -78.7577, 0.28 ) }
    dend_27 { pt3dadd( -126.491, 49.4552, -78.715, 0.83 ) }
    dend_27 { pt3dadd( -128.805, 50.4117, -78.6449, 1.11 ) }
    dend_27 { pt3dadd( -131.344, 51.6874, -78.5564, 0.55 ) }
    dend_27 { pt3dadd( -132.545, 52.3568, -78.5979, 0.83 ) }
    dend_27 { pt3dadd( -135.537, 54.2274, -78.8926, 0.28 ) }
    dend_27 { pt3dadd( -136.929, 55.2128, -79.0996, 0.83 ) }
    dend_27 { pt3dadd( -140.255, 57.7322, -79.8579, 0.28 ) }
    dend_27 { pt3dadd( -141.837, 58.9389, -80.3894, 1.11 ) }
    dend_27 { pt3dadd( -144.892, 61.1755, -81.671, 0.28 ) }
    dend_27 { pt3dadd( -146.502, 62.2801, -82.3992, 0.55 ) }
    dend_27 { pt3dadd( -148.283, 63.3773, -83.3048, 0.55 ) }
    dend_27 { pt3dadd( -150.915, 64.8398, -84.6986, 0.55 ) }
    dend_27 { pt3dadd( -153.669, 66.1228, -86.0673, 0.28 ) }
    dend_27 { pt3dadd( -154.802, 66.6444, -86.6253, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 26/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 5.05941, 4.03406, 7.73102, 0.83 ) }
    dend_26 { pt3dadd( 5.89396, 4.29381, 8.11982, 0.83 ) }
    dend_26 { pt3dadd( 7.103, 4.6349, 8.7025, 0.83 ) }
    dend_26 { pt3dadd( 9.32872, 5.31038, 9.82051, 0.83 ) }
    dend_26 { pt3dadd( 11.4321, 6.00171, 11.0385, 0.55 ) }
    dend_26 { pt3dadd( 13.8741, 6.77208, 12.5249, 1.11 ) }
    dend_26 { pt3dadd( 16.7152, 7.70912, 14.21, 0.55 ) }
    dend_26 { pt3dadd( 18.5719, 8.30815, 15.3245, 0.83 ) }
    dend_26 { pt3dadd( 21.3035, 9.23219, 16.8858, 0.55 ) }
    dend_26 { pt3dadd( 24.761, 10.3645, 18.762, 0.83 ) }
    dend_26 { pt3dadd( 27.4379, 11.1752, 20.0636, 0.55 ) }
    dend_26 { pt3dadd( 31.6223, 12.3813, 21.843, 0.55 ) }
    dend_26 { pt3dadd( 34.1816, 12.9922, 22.6779, 0.55 ) }
    dend_26 { pt3dadd( 38.9968, 13.992, 23.7494, 0.55 ) }
    dend_26 { pt3dadd( 42.9274, 14.6114, 24.1642, 0.83 ) }
    dend_26 { pt3dadd( 46.2846, 15.0405, 24.1557, 0.83 ) }
    dend_26 { pt3dadd( 48.577, 15.3032, 23.9865, 0.83 ) }
    dend_26 { pt3dadd( 52.9315, 15.619, 23.5047, 0.83 ) }
    dend_26 { pt3dadd( 55.1352, 15.7646, 23.2339, 0.83 ) }
    dend_26 { pt3dadd( 59.172, 16.0624, 22.7298, 0.83 ) }
    dend_26 { pt3dadd( 62.3771, 16.5103, 22.392, 0.83 ) }
    dend_26 { pt3dadd( 65.3624, 17.0185, 22.2392, 0.83 ) }
    dend_26 { pt3dadd( 68.9108, 17.6991, 22.2562, 0.83 ) }
    dend_26 { pt3dadd( 71.9985, 18.3908, 22.4921, 0.83 ) }
    dend_26 { pt3dadd( 73.8847, 18.8521, 22.6837, 0.83 ) }
    dend_26 { pt3dadd( 77.7826, 19.8119, 23.1084, 0.83 ) }
    dend_26 { pt3dadd( 79.8629, 20.3121, 23.3665, 0.83 ) }
    dend_26 { pt3dadd( 82.5717, 20.9717, 23.7386, 1.11 ) }
    dend_26 { pt3dadd( 84.736, 21.4777, 24.0437, 0.55 ) }
    dend_26 { pt3dadd( 86.9498, 21.9107, 24.4111, 0.55 ) }
    dend_26 { pt3dadd( 90.5032, 22.5086, 25.1252, 0.83 ) }
    dend_26 { pt3dadd( 92.9016, 22.8511, 25.6973, 0.83 ) }
    dend_26 { pt3dadd( 95.4946, 23.2631, 26.1755, 0.55 ) }
    dend_26 { pt3dadd( 97.6803, 23.6459, 26.4188, 0.55 ) }
    dend_26 { pt3dadd( 99.9037, 24.1524, 26.4577, 0.83 ) }
    dend_26 { pt3dadd( 101.16, 24.473, 26.3584, 0.83 ) }
    dend_26 { pt3dadd( 104.84, 25.5419, 25.5158, 0.55 ) }
    dend_26 { pt3dadd( 109.288, 26.6705, 24.1112, 0.55 ) }
    dend_26 { pt3dadd( 112.06, 27.2935, 23.1155, 0.55 ) }
    dend_26 { pt3dadd( 115.867, 28.0841, 21.6387, 0.55 ) }
    dend_26 { pt3dadd( 120.327, 28.9872, 19.8611, 0.55 ) }
    dend_26 { pt3dadd( 124.521, 29.8388, 18.2069, 0.83 ) }
    dend_26 { pt3dadd( 127.615, 30.4801, 17.0355, 0.55 ) }
    dend_26 { pt3dadd( 130.781, 31.0786, 16.0895, 0.55 ) }
    dend_26 { pt3dadd( 132.936, 31.5006, 15.4763, 0.55 ) }
    dend_26 { pt3dadd( 136.39, 32.1372, 14.5171, 0.55 ) }
    dend_26 { pt3dadd( 138.032, 32.4557, 14.1247, 0.83 ) }
    dend_26 { pt3dadd( 139.865, 32.8032, 13.7993, 0.55 ) }
    dend_26 { pt3dadd( 142.999, 33.4504, 13.1669, 0.55 ) }
    dend_26 { pt3dadd( 145.247, 33.8983, 12.6746, 0.83 ) }
    dend_26 { pt3dadd( 147.624, 34.4877, 12.09, 0.55 ) }
    dend_26 { pt3dadd( 150.505, 35.1987, 11.2869, 0.55 ) }
    dend_26 { pt3dadd( 152.745, 35.815, 10.663, 0.55 ) }
    dend_26 { pt3dadd( 154.237, 36.3215, 10.2804, 0.28 ) }
    dend_26 { pt3dadd( 155.245, 36.7373, 10.0665, 1.11 ) }
    dend_26 { pt3dadd( 159.516, 38.6525, 9.48251, 0.55 ) }
    dend_26 { pt3dadd( 161.872, 39.8567, 9.27876, 0.55 ) }
    dend_26 { pt3dadd( 163.387, 40.644, 9.19065, 0.55 ) }
    dend_26 { pt3dadd( 166.218, 41.9941, 9.06707, 0.55 ) }
    dend_26 { pt3dadd( 167.589, 42.593, 9.03899, 0.28 ) }
    dend_26 { pt3dadd( 170.14, 43.6551, 8.97141, 0.55 ) }
    dend_26 { pt3dadd( 171.75, 44.2995, 8.93339, 0.55 ) }
    dend_26 { pt3dadd( 173.544, 45.0868, 8.85012, 0.55 ) }
    dend_26 { pt3dadd( 177.11, 46.6562, 8.55398, 0.55 ) }
    dend_26 { pt3dadd( 179.238, 47.5436, 8.31044, 0.55 ) }
    dend_26 { pt3dadd( 181.463, 48.4062, 7.99799, 0.28 ) }
    dend_26 { pt3dadd( 182.722, 48.8981, 7.8061, 0.55 ) }
    dend_26 { pt3dadd( 184.939, 49.777, 7.46929, 1.38 ) }
    dend_26 { pt3dadd( 188.78, 51.2715, 6.94939, 0.55 ) }
    dend_26 { pt3dadd( 191.014, 52.1075, 6.70935, 1.11 ) }
    dend_26 { pt3dadd( 192.948, 52.8117, 6.52067, 0.55 ) }
    dend_26 { pt3dadd( 195.117, 53.5527, 6.34095, 0.55 ) }
    dend_26 { pt3dadd( 196.764, 54.0543, 6.22527, 0.83 ) }
    dend_26 { pt3dadd( 200.556, 55.041, 6.04476, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_26 { pt3dadd( 202.467, 55.4307, 6.01899, 0.55 ) }
    dend_26 { pt3dadd( 203.574, 55.5839, 6.0247, 0.83 ) }
    dend_26 { pt3dadd( 208.143, 55.9298, 6.12032, 0.55 ) }
    dend_26 { pt3dadd( 210.448, 55.9908, 6.22534, 0.55 ) }
    dend_26 { pt3dadd( 212.649, 56.1119, 6.39429, 0.55 ) }
    dend_26 { pt3dadd( 214.085, 56.2691, 6.58929, 0.83 ) }
    dend_26 { pt3dadd( 216.301, 56.6358, 7.03436, 0.55 ) }
    dend_26 { pt3dadd( 220.837, 57.766, 8.33673, 0.55 ) }
    dend_26 { pt3dadd( 223.341, 58.6894, 9.267, 0.55 ) }
    dend_26 { pt3dadd( 226.952, 60.3613, 10.7803, 0.55 ) }
    dend_26 { pt3dadd( 229.308, 61.6605, 11.9359, 0.55 ) }
    dend_26 { pt3dadd( 230.888, 62.6115, 12.7932, 0.83 ) }
    dend_26 { pt3dadd( 233.39, 64.1558, 14.2744, 0.55 ) }
    dend_26 { pt3dadd( 236.424, 66.0231, 16.2081, 0.55 ) }
    dend_26 { pt3dadd( 239.48, 67.8489, 18.1671, 0.55 ) }
    dend_26 { pt3dadd( 241.293, 68.8042, 19.3032, 0.83 ) }
    dend_26 { pt3dadd( 242.739, 69.5049, 20.1283, 0.55 ) }
    dend_26 { pt3dadd( 244.528, 70.3281, 21.1016, 0.28 ) }
    dend_26 { pt3dadd( 245.843, 70.8165, 21.7753, 0.55 ) }
    dend_26 { pt3dadd( 255.527, 71.6705, 21.6321, 0.55 ) }
    dend_26 { pt3dadd( 265.171, 72.3872, 20.619, 0.55 ) }
    dend_26 { pt3dadd( 274.823, 73.4134, 21.1908, 0.55 ) }
    dend_26 { pt3dadd( 284.535, 73.7581, 21.484, 0.55 ) }
    dend_26 { pt3dadd( 294.182, 72.828, 20.7068, 0.55 ) }
    dend_26 { pt3dadd( 303.736, 72.5934, 18.9162, 0.55 ) }
    dend_26 { pt3dadd( 313.082, 70.8994, 16.8401, 0.55 ) }
    dend_26 { pt3dadd( 322.388, 68.3732, 15.5955, 0.55 ) }
    dend_26 { pt3dadd( 331.473, 65.6626, 13.4392, 0.55 ) }
    dend_26 { pt3dadd( 340.326, 62.9287, 10.4918, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 5.82941, 1.93406, -1.46898, 0.55 ) }
    dend_25 { pt3dadd( 8.32895, 2.69389, -2.11702, 0.55 ) }
    dend_25 { pt3dadd( 9.98894, 3.22068, -2.55091, 1.11 ) }
    dend_25 { pt3dadd( 12.8515, 3.93012, -3.29133, 0.55 ) }
    dend_25 { pt3dadd( 14.6031, 4.21828, -3.91569, 0.83 ) }
    dend_25 { pt3dadd( 18.46, 4.66116, -5.61466, 0.83 ) }
    dend_25 { pt3dadd( 21.6888, 4.96902, -7.25874, 0.55 ) }
    dend_25 { pt3dadd( 24.533, 5.20556, -8.87411, 0.83 ) }
    dend_25 { pt3dadd( 27.1048, 5.43151, -10.3047, 0.55 ) }
    dend_25 { pt3dadd( 31.6253, 5.87149, -12.7089, 0.55 ) }
    dend_25 { pt3dadd( 34.7614, 6.14357, -14.14, 0.55 ) }
    dend_25 { pt3dadd( 38.0582, 6.42275, -15.4734, 1.11 ) }
    dend_25 { pt3dadd( 42.4067, 6.71017, -16.6632, 0.55 ) }
    dend_25 { pt3dadd( 45.3942, 6.94262, -17.0535, 0.55 ) }
    dend_25 { pt3dadd( 47.3893, 7.18464, -16.9443, 0.55 ) }
    dend_25 { pt3dadd( 51.7902, 7.69253, -16.245, 0.83 ) }
    dend_25 { pt3dadd( 55.9002, 8.02591, -15.3873, 0.55 ) }
    dend_25 { pt3dadd( 59.0519, 8.21921, -14.6638, 0.55 ) }
    dend_25 { pt3dadd( 62.7418, 8.27894, -14.0347, 0.55 ) }
    dend_25 { pt3dadd( 67.6768, 8.40337, -13.9519, 0.83 ) }
    dend_25 { pt3dadd( 71.3287, 8.47124, -14.3915, 0.28 ) }
    dend_25 { pt3dadd( 72.3444, 8.46039, -14.6686, 0.55 ) }
    dend_25 { pt3dadd( 73.937, 8.3539, -15.2364, 0.55 ) }
    dend_25 { pt3dadd( 77.6938, 7.7289, -17.1453, 0.55 ) }
    dend_25 { pt3dadd( 82.4984, 6.5066, -20.1139, 0.55 ) }
    dend_25 { pt3dadd( 85.5336, 5.55089, -22.3852, 0.55 ) }
    dend_25 { pt3dadd( 88.3285, 4.64239, -24.607, 0.28 ) }
    dend_25 { pt3dadd( 90.0168, 4.10799, -25.9887, 0.55 ) }
    dend_25 { pt3dadd( 93.6681, 3.02097, -28.9394, 0.28 ) }
    dend_25 { pt3dadd( 95.6105, 2.54103, -30.5524, 0.55 ) }
    dend_25 { pt3dadd( 100.183, 1.68435, -34.3421, 0.28 ) }
    dend_25 { pt3dadd( 102.301, 1.57723, -36.1442, 0.55 ) }
    dend_25 { pt3dadd( 105.972, 1.99154, -39.2138, 0.28 ) }
    dend_25 { pt3dadd( 108.035, 2.57513, -40.8243, 0.55 ) }
    dend_25 { pt3dadd( 111.011, 3.97407, -42.881, 0.28 ) }
    dend_25 { pt3dadd( 112.61, 4.91913, -43.9524, 0.83 ) }
    dend_25 { pt3dadd( 115.901, 7.18064, -46.0648, 0.28 ) }
    dend_25 { pt3dadd( 118.108, 8.77873, -47.6481, 0.55 ) }
    dend_25 { pt3dadd( 120.524, 10.607, -49.5251, 0.28 ) }
    dend_25 { pt3dadd( 121.829, 11.5438, -50.5311, 0.55 ) }
    dend_25 { pt3dadd( 126.684, 14.7782, -54.0231, 0.28 ) }
    dend_25 { pt3dadd( 128.288, 15.6871, -55.1196, 0.55 ) }
    dend_25 { pt3dadd( 131.924, 17.5394, -57.2793, 0.28 ) }
    dend_25 { pt3dadd( 133.174, 18.1208, -57.9352, 1.11 ) }
    dend_25 { pt3dadd( 135.587, 19.1486, -59.0672, 0.28 ) }
    dend_25 { pt3dadd( 137.053, 19.7689, -59.6264, 1.11 ) }
    dend_25 { pt3dadd( 142.761, 22.2497, -61.0988, 0.28 ) }
    dend_25 { pt3dadd( 147.447, 24.3358, -62.0469, 0.28 ) }
    dend_25 { pt3dadd( 150.293, 25.705, -62.3505, 0.83 ) }
    dend_25 { pt3dadd( 154.166, 27.8167, -62.536, 0.28 ) }
    dend_25 { pt3dadd( 155.468, 28.6181, -62.5317, 0.55 ) }
    dend_25 { pt3dadd( 158.08, 30.4712, -62.269, 0.28 ) }
    dend_25 { pt3dadd( 160.268, 32.3208, -61.7879, 1.11 ) }
    dend_25 { pt3dadd( 164.618, 36.4863, -60.5417, 0.28 ) }
    dend_25 { pt3dadd( 168.279, 40.3317, -59.3222, 0.28 ) }
    dend_25 { pt3dadd( 169.336, 41.5495, -58.9172, 0.55 ) }
    dend_25 { pt3dadd( 171.73, 44.4459, -58.0005, 0.28 ) }
    dend_25 { pt3dadd( 172.72, 45.7247, -57.6141, 1.66 ) }
    dend_25 { pt3dadd( 174.06, 47.4989, -57.0626, 0.28 ) }
    dend_25 { pt3dadd( 175.734, 49.7221, -56.5113, 0.55 ) }
    dend_25 { pt3dadd( 176.775, 51.0463, -56.1989, 0.28 ) }
    dend_25 { pt3dadd( 178.134, 52.6743, -56.042, 0.55 ) }
    dend_25 { pt3dadd( 179.777, 54.5784, -56.0975, 0.28 ) }
    dend_25 { pt3dadd( 180.815, 55.7335, -56.3289, 0.55 ) }
    dend_25 { pt3dadd( 182.555, 57.6766, -56.8389, 0.28 ) }
    dend_25 { pt3dadd( 184.089, 59.3935, -57.3941, 1.11 ) }
    dend_25 { pt3dadd( 187.807, 63.4136, -59.0038, 0.28 ) }
    dend_25 { pt3dadd( 189.029, 64.6916, -59.6386, 0.55 ) }
    dend_25 { pt3dadd( 193.043, 68.8986, -62.1196, 0.28 ) }
    dend_25 { pt3dadd( 194.859, 70.7932, -63.3896, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 99/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -5.12059, 9.35406, 7.96102, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( -7.07891, 9.12836, 7.02766, 1.11 ) }
    dend_20 { pt3dadd( -11.3421, 8.63702, 4.99579, 1.11 ) }
    dend_20 { pt3dadd( -16.9824, 7.98697, 2.30753, 1.38 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 3/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.92059, 10.7341, 0.421023, 2.22 ) }
    dend_13 { pt3dadd( -2.65477, 14.1414, -1.31888, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 5/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.75941, -11.7459, 2.43102, 2.49 ) }
    dend_0 { pt3dadd( 3.34027, -16.4049, 2.43102, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 7/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.65377, -11.9555, 0.0201467, 0.830559 ) }
    axon_0 { pt3dadd( 8.12441, -26.2738, 0.0201467, 0.830559 ) }
    axon_0 { pt3dadd( 12.5951, -40.5921, 0.0201467, 0.830559 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 10/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -16.9824, 7.98697, 2.30753, 0.55 ) }
    dend_24 { pt3dadd( -19.0421, 7.12717, 3.54029, 0.55 ) }
    dend_24 { pt3dadd( -20.5523, 6.28054, 4.53003, 0.55 ) }
    dend_24 { pt3dadd( -22.0762, 5.39165, 5.4968, 0.55 ) }
    dend_24 { pt3dadd( -23.6976, 4.51989, 6.46044, 0.55 ) }
    dend_24 { pt3dadd( -26.2404, 3.27414, 7.99714, 0.55 ) }
    dend_24 { pt3dadd( -29.15, 2.02162, 9.74084, 0.55 ) }
    dend_24 { pt3dadd( -32.4912, 0.84532, 11.7334, 0.83 ) }
    dend_24 { pt3dadd( -36.3678, -0.249225, 13.979, 0.55 ) }
    dend_24 { pt3dadd( -38.8948, -0.733446, 15.4268, 0.55 ) }
    dend_24 { pt3dadd( -41.6272, -1.01356, 16.9182, 0.55 ) }
    dend_24 { pt3dadd( -44.0108, -1.08315, 18.1435, 0.55 ) }
    dend_24 { pt3dadd( -46.7031, -0.949047, 19.4356, 0.55 ) }
    dend_24 { pt3dadd( -49.0338, -0.745936, 20.514, 0.55 ) }
    dend_24 { pt3dadd( -51.4126, -0.485827, 21.6251, 0.55 ) }
    dend_24 { pt3dadd( -53.3579, -0.339839, 22.5057, 0.55 ) }
    dend_24 { pt3dadd( -55.4854, -0.271007, 23.414, 0.55 ) }
    dend_24 { pt3dadd( -57.8661, -0.273668, 24.4063, 0.55 ) }
    dend_24 { pt3dadd( -60.6988, -0.208633, 25.5507, 0.55 ) }
    dend_24 { pt3dadd( -64.1403, 0.020686, 26.9051, 0.55 ) }
    dend_24 { pt3dadd( -65.3685, 0.162961, 27.3684, 0.55 ) }
    dend_24 { pt3dadd( -68.8456, 0.730488, 28.6714, 0.83 ) }
    dend_24 { pt3dadd( -71.5875, 1.24653, 29.7739, 0.55 ) }
    dend_24 { pt3dadd( -75.3819, 2.0922, 31.4123, 0.55 ) }
    dend_24 { pt3dadd( -76.8667, 2.46584, 32.0537, 0.83 ) }
    dend_24 { pt3dadd( -80.0711, 3.23736, 33.4665, 0.55 ) }
    dend_24 { pt3dadd( -82.2974, 3.80198, 34.477, 0.55 ) }
    dend_24 { pt3dadd( -84.6734, 4.34288, 35.5456, 0.55 ) }
    dend_24 { pt3dadd( -86.4521, 4.6662, 36.3411, 0.55 ) }
    dend_24 { pt3dadd( -87.7934, 4.83442, 36.8778, 0.28 ) }
    dend_24 { pt3dadd( -90.7609, 5.07672, 37.8942, 0.55 ) }
    dend_24 { pt3dadd( -92.5124, 5.12621, 38.4571, 0.55 ) }
    dend_24 { pt3dadd( -94.3209, 5.09147, 39.0594, 0.55 ) }
    dend_24 { pt3dadd( -97.1398, 5.0102, 39.9526, 0.83 ) }
    dend_24 { pt3dadd( -99.1533, 4.88019, 40.5939, 0.55 ) }
    dend_24 { pt3dadd( -101.657, 4.68117, 41.4768, 0.55 ) }
    dend_24 { pt3dadd( -104.018, 4.5067, 42.4014, 0.55 ) }
    dend_24 { pt3dadd( -106.259, 4.34431, 43.3488, 0.55 ) }
    dend_24 { pt3dadd( -108.348, 4.2382, 44.3667, 0.55 ) }
    dend_24 { pt3dadd( -116.834, 4.45741, 50.182, 0.55 ) }
    dend_24 { pt3dadd( -125.918, 2.6811, 54.6784, 0.55 ) }
    dend_24 { pt3dadd( -135.089, 2.26155, 59.3259, 0.55 ) }
    dend_24 { pt3dadd( -143.557, 0.81097, 64.9897, 0.55 ) }
    dend_24 { pt3dadd( -150.204, -1.75088, 72.4157, 0.55 ) }
    dend_24 { pt3dadd( -156.314, -6.83311, 78.9523, 0.55 ) }
    dend_24 { pt3dadd( -162.18, -13.4375, 84.2295, 0.55 ) }
    dend_24 { pt3dadd( -168.57, -18.2771, 90.6826, 0.55 ) }
    dend_24 { pt3dadd( -175.012, -22.9978, 97.1703, 0.55 ) }
    dend_24 { pt3dadd( -181.904, -26.8509, 103.769, 0.55 ) }
    dend_24 { pt3dadd( -186.958, -30.4547, 111.977, 0.55 ) }
    dend_24 { pt3dadd( -190.867, -35.1595, 120.251, 0.55 ) }
    dend_24 { pt3dadd( -193.064, -38.3861, 129.772, 0.55 ) }
    dend_24 { pt3dadd( -193.231, -40.3313, 139.875, 0.55 ) }
    dend_24 { pt3dadd( -192.695, -42.7064, 149.873, 0.55 ) }
    dend_24 { pt3dadd( -190.77, -46.276, 159.33, 0.55 ) }
    dend_24 { pt3dadd( -189.809, -49.8814, 168.92, 0.55 ) }
    dend_24 { pt3dadd( -189.621, -54.6027, 178.061, 0.55 ) }
    dend_24 { pt3dadd( -191.417, -59.3672, 187.003, 0.55 ) }
    dend_24 { pt3dadd( -193.571, -62.8185, 196.455, 0.55 ) }
    dend_24 { pt3dadd( -194.753, -67.6142, 205.482, 0.55 ) }
    dend_24 { pt3dadd( -194.094, -72.9357, 214.265, 0.55 ) }
    dend_24 { pt3dadd( -191.799, -79.498, 221.851, 0.55 ) }
    dend_24 { pt3dadd( -188.689, -85.7023, 229.449, 0.55 ) }
    dend_24 { pt3dadd( -185.521, -92.381, 236.607, 0.55 ) }
    dend_24 { pt3dadd( -181.981, -99.2808, 243.371, 0.55 ) }
    dend_24 { pt3dadd( -178.71, -105.469, 250.914, 0.55 ) }
    dend_24 { pt3dadd( -174.825, -112.57, 257.267, 0.55 ) }
    dend_24 { pt3dadd( -170.048, -119.339, 263.37, 0.55 ) }
    dend_24 { pt3dadd( -165.314, -125.691, 269.937, 0.55 ) }
    dend_24 { pt3dadd( -160.436, -132.355, 276.076, 0.55 ) }
    dend_24 { pt3dadd( -157.474, -139.152, 283.212, 0.55 ) }
    dend_24 { pt3dadd( -156.249, -147.138, 289.583, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 82/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -16.9824, 7.98697, 2.30753, 0.83 ) }
    dend_21 { pt3dadd( -19.7387, 10.2777, 1.98286, 0.83 ) }
    dend_21 { pt3dadd( -20.8834, 11.3948, 1.07716, 0.83 ) }
    dend_21 { pt3dadd( -22.2254, 12.7044, 0.0154162, 1.38 ) }
    dend_21 { pt3dadd( -24.163, 14.595, -1.51748, 1.11 ) }
    dend_21 { pt3dadd( -26.0838, 16.4694, -3.03718, 1.11 ) }
    dend_21 { pt3dadd( -27.7496, 18.0949, -4.35508, 1.11 ) }
    dend_21 { pt3dadd( -33.4168, 25.0073, -10.9444, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -2.65477, 14.1414, -1.31888, 1.66 ) }
    dend_19 { pt3dadd( -3.36464, 16.3569, -2.5046, 1.66 ) }
    dend_19 { pt3dadd( -4.10572, 18.3356, -3.53562, 1.94 ) }
    dend_19 { pt3dadd( -4.73564, 20.114, -4.43561, 0.83 ) }
    dend_19 { pt3dadd( -5.39816, 22.3672, -5.58686, 0.83 ) }
    dend_19 { pt3dadd( -5.87109, 24.0344, -6.53536, 0.83 ) }
    dend_19 { pt3dadd( -6.56569, 27.0752, -8.2573, 0.83 ) }
    dend_19 { pt3dadd( -6.98419, 29.1704, -9.52461, 0.83 ) }
    dend_19 { pt3dadd( -7.29965, 30.9155, -10.5959, 0.83 ) }
    dend_19 { pt3dadd( -7.68321, 33.4924, -12.1122, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_19 { pt3dadd( -8.18733, 37.5679, -14.636, 0.83 ) }
    dend_19 { pt3dadd( -8.61971, 42.5805, -17.6196, 0.83 ) }
    dend_19 { pt3dadd( -8.67416, 46.1829, -19.5763, 0.83 ) }
    dend_19 { pt3dadd( -8.61836, 48.5852, -20.8332, 0.83 ) }
    dend_19 { pt3dadd( -8.46629, 52.1267, -22.5548, 0.83 ) }
    dend_19 { pt3dadd( -8.0925, 57.6142, -25.0296, 0.83 ) }
    dend_19 { pt3dadd( -7.78968, 60.3135, -26.1415, 0.83 ) }
    dend_19 { pt3dadd( -7.15749, 65.0578, -27.9941, 0.83 ) }
    dend_19 { pt3dadd( -6.53906, 69.0843, -29.486, 0.83 ) }
    dend_19 { pt3dadd( -6.27291, 70.772, -30.1531, 1.94 ) }
    dend_19 { pt3dadd( -6.04062, 72.6825, -30.8754, 1.11 ) }
    dend_19 { pt3dadd( -5.89288, 74.6112, -31.5388, 0.55 ) }
    dend_19 { pt3dadd( -5.83192, 76.5506, -32.3354, 1.38 ) }
    dend_19 { pt3dadd( -5.88102, 81.3014, -34.4259, 0.55 ) }
    dend_19 { pt3dadd( -5.9855, 84.5812, -35.9088, 1.11 ) }
    dend_19 { pt3dadd( -6.18539, 88.8775, -37.9291, 0.55 ) }
    dend_19 { pt3dadd( -6.34373, 91.4909, -39.1779, 1.94 ) }
    dend_19 { pt3dadd( -6.78837, 97.029, -41.8432, 0.28 ) }
    dend_19 { pt3dadd( -6.95851, 98.6997, -42.622, 0.83 ) }
    dend_19 { pt3dadd( -7.24803, 100.873, -43.5621, 0.28 ) }
    dend_19 { pt3dadd( -7.47983, 102.481, -44.2036, 1.66 ) }
    dend_19 { pt3dadd( -8.0062, 105.922, -45.4297, 0.55 ) }
    dend_19 { pt3dadd( -8.27627, 107.529, -45.8508, 0.28 ) }
    dend_19 { pt3dadd( -8.99917, 111.892, -46.499, 0.55 ) }
    dend_19 { pt3dadd( -9.34454, 114.035, -46.8261, 0.83 ) }
    dend_19 { pt3dadd( -9.63829, 116.144, -47.1294, 0.83 ) }
    dend_19 { pt3dadd( -9.82434, 117.672, -47.3849, 0.55 ) }
    dend_19 { pt3dadd( -10.0019, 119.722, -47.7855, 0.55 ) }
    dend_19 { pt3dadd( -10.034, 123.054, -48.6169, 1.11 ) }
    dend_19 { pt3dadd( -9.68295, 126.276, -49.5738, 0.28 ) }
    dend_19 { pt3dadd( -9.33981, 127.83, -50.0766, 0.55 ) }
    dend_19 { pt3dadd( -8.71202, 129.811, -50.86, 0.28 ) }
    dend_19 { pt3dadd( -8.32041, 130.813, -51.3088, 0.55 ) }
    dend_19 { pt3dadd( -7.47835, 132.681, -52.2059, 0.55 ) }
    dend_19 { pt3dadd( -6.34915, 135.039, -53.3439, 0.83 ) }
    dend_19 { pt3dadd( -5.69775, 136.469, -53.9588, 0.55 ) }
    dend_19 { pt3dadd( -4.35416, 139.647, -55.3283, 1.38 ) }
    dend_19 { pt3dadd( -3.11238, 142.65, -56.6867, 0.55 ) }
    dend_19 { pt3dadd( -2.47351, 144.407, -57.5542, 0.28 ) }
    dend_19 { pt3dadd( -2.01787, 145.859, -58.2989, 0.55 ) }
    dend_19 { pt3dadd( -1.50012, 147.923, -59.3217, 0.28 ) }
    dend_19 { pt3dadd( -1.14243, 149.647, -60.0974, 1.11 ) }
    dend_19 { pt3dadd( -0.687689, 152.063, -60.9816, 0.55 ) }
    dend_19 { pt3dadd( -0.306864, 154.255, -61.6914, 0.28 ) }
    dend_19 { pt3dadd( 0.0614723, 156.385, -62.2924, 0.55 ) }
    dend_19 { pt3dadd( 0.625506, 159.38, -63.0437, 0.55 ) }
    dend_19 { pt3dadd( 1.00907, 161.199, -63.4067, 0.55 ) }
    dend_19 { pt3dadd( 1.64635, 164.217, -63.9696, 0.55 ) }
    dend_19 { pt3dadd( 2.12527, 166.354, -64.3655, 0.28 ) }
    dend_19 { pt3dadd( 2.59647, 168.344, -64.7991, 0.55 ) }
    dend_19 { pt3dadd( 3.2259, 171.004, -65.5002, 0.83 ) }
    dend_19 { pt3dadd( 3.86014, 173.606, -66.4157, 0.55 ) }
    dend_19 { pt3dadd( 4.38759, 176.015, -67.5771, 0.28 ) }
    dend_19 { pt3dadd( 4.65212, 177.665, -68.6838, 0.55 ) }
    dend_19 { pt3dadd( 4.77885, 179.089, -69.7612, 0.55 ) }
    dend_19 { pt3dadd( 4.77154, 179.85, -70.3902, 0.55 ) }
    dend_19 { pt3dadd( 4.58592, 182.571, -72.7116, 0.28 ) }
    dend_19 { pt3dadd( 4.4113, 184.693, -74.3984, 1.11 ) }
    dend_19 { pt3dadd( 4.12239, 188.561, -77.0091, 0.83 ) }
    dend_19 { pt3dadd( 4.0857, 190.659, -78.2354, 0.55 ) }
    dend_19 { pt3dadd( 4.17999, 193.406, -79.6009, 0.83 ) }
    dend_19 { pt3dadd( 4.29871, 194.815, -80.146, 0.83 ) }
    dend_19 { pt3dadd( 4.64935, 197.322, -80.7692, 0.28 ) }
    dend_19 { pt3dadd( 4.91871, 198.857, -80.987, 0.55 ) }
    dend_19 { pt3dadd( 5.70913, 202.67, -81.2767, 0.55 ) }
    dend_19 { pt3dadd( 6.59945, 206.527, -81.5056, 0.28 ) }
    dend_19 { pt3dadd( 7.40811, 209.886, -81.6441, 0.55 ) }
    dend_19 { pt3dadd( 7.9114, 212.134, -81.7689, 1.11 ) }
    dend_19 { pt3dadd( 8.35261, 214.21, -81.9535, 0.55 ) }
    dend_19 { pt3dadd( 8.64342, 215.767, -82.1315, 0.28 ) }
    dend_19 { pt3dadd( 8.73699, 216.585, -82.2127, 0.55 ) }
    dend_19 { pt3dadd( 8.86311, 217.937, -82.2844, 0.28 ) }
    dend_19 { pt3dadd( 8.88917, 218.623, -82.2638, 0.55 ) }
    dend_19 { pt3dadd( 8.92208, 220.182, -82.1121, 0.55 ) }
    dend_19 { pt3dadd( 9.00016, 221.846, -81.8702, 0.83 ) }
    dend_19 { pt3dadd( 9.2667, 225.501, -81.1301, 0.55 ) }
    dend_19 { pt3dadd( 9.54176, 228.494, -80.5099, 0.83 ) }
    dend_19 { pt3dadd( 10.0124, 232.886, -79.681, 0.55 ) }
    dend_19 { pt3dadd( 10.2439, 234.95, -79.3885, 0.55 ) }
    dend_19 { pt3dadd( 10.6869, 238.734, -79.0136, 0.28 ) }
    dend_19 { pt3dadd( 10.9529, 240.876, -78.9738, 1.38 ) }
    dend_19 { pt3dadd( 11.3101, 243.554, -79.2237, 0.55 ) }
    dend_19 { pt3dadd( 11.6112, 246.011, -79.7377, 0.83 ) }
    dend_19 { pt3dadd( 11.7614, 248.421, -80.6204, 0.28 ) }
    dend_19 { pt3dadd( 11.7518, 249.148, -80.9346, 0.55 ) }
    dend_19 { pt3dadd( 11.5406, 251.278, -82.0403, 0.28 ) }
    dend_19 { pt3dadd( 11.3196, 252.693, -82.8181, 0.55 ) }
    dend_19 { pt3dadd( 11.0488, 254.072, -83.5252, 0.55 ) }
    dend_19 { pt3dadd( 10.2619, 257.659, -85.2642, 0.28 ) }
    dend_19 { pt3dadd( 10.0066, 258.82, -85.8105, 0.83 ) }
    dend_19 { pt3dadd( 9.4472, 261.394, -87.0243, 0.55 ) }
    dend_19 { pt3dadd( 8.84269, 264.202, -88.3407, 0.28 ) }
    dend_19 { pt3dadd( 8.47783, 265.861, -89.0853, 0.55 ) }
    dend_19 { pt3dadd( 8.08534, 267.97, -89.8471, 0.28 ) }
    dend_19 { pt3dadd( 7.99282, 268.534, -90.0016, 0.55 ) }
    dend_19 { pt3dadd( 7.73258, 270.062, -90.3242, 0.28 ) }
    dend_19 { pt3dadd( 7.5073, 271.345, -90.5187, 0.55 ) }
    dend_19 { pt3dadd( 7.06256, 273.743, -90.7975, 0.28 ) }
    dend_19 { pt3dadd( 6.28204, 277.586, -91.1936, 0.55 ) }
    dend_19 { pt3dadd( 5.69852, 280.179, -91.5087, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_19 { pt3dadd( 4.79422, 284.007, -92.1628, 0.55 ) }
    dend_19 { pt3dadd( 4.48663, 285.28, -92.4248, 0.83 ) }
    dend_19 { pt3dadd( 3.65881, 288.539, -93.2904, 0.55 ) }
    dend_19 { pt3dadd( 2.7557, 291.961, -94.3935, 0.55 ) }
    dend_19 { pt3dadd( 2.24371, 294.042, -95.273, 0.83 ) }
    dend_19 { pt3dadd( 1.73494, 297.112, -96.7803, 0.28 ) }
    dend_19 { pt3dadd( 1.60421, 298.949, -97.758, 0.83 ) }
    dend_19 { pt3dadd( 1.62734, 301.539, -99.0347, 0.28 ) }
    dend_19 { pt3dadd( 1.69801, 302.485, -99.4654, 0.55 ) }
    dend_19 { pt3dadd( 2.15984, 306.355, -101.136, 0.28 ) }
    dend_19 { pt3dadd( 2.65275, 309.644, -102.362, 0.28 ) }
    dend_19 { pt3dadd( 3.17898, 312.623, -103.32, 0.28 ) }
    dend_19 { pt3dadd( 4.10424, 317.1, -104.622, 0.28 ) }
    dend_19 { pt3dadd( 4.39053, 318.338, -104.89, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 14/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.65477, 14.1414, -1.31888, 0.83 ) }
    dend_14 { pt3dadd( -3.86312, 15.6416, -1.58344, 0.83 ) }
    dend_14 { pt3dadd( -4.73052, 16.8634, -1.8574, 0.83 ) }
    dend_14 { pt3dadd( -5.29892, 17.7624, -2.06188, 0.55 ) }
    dend_14 { pt3dadd( -5.77103, 18.5781, -2.2619, 0.83 ) }
    dend_14 { pt3dadd( -6.1535, 19.2501, -2.46078, 0.55 ) }
    dend_14 { pt3dadd( -6.67174, 20.1871, -2.75195, 0.83 ) }
    dend_14 { pt3dadd( -7.19366, 21.5498, -3.55049, 0.83 ) }
    dend_14 { pt3dadd( -7.46988, 22.5041, -4.26035, 0.83 ) }
    dend_14 { pt3dadd( -7.63783, 23.191, -4.82165, 0.83 ) }
    dend_14 { pt3dadd( -7.97331, 24.5136, -5.91149, 0.55 ) }
    dend_14 { pt3dadd( -8.23641, 25.5763, -6.78789, 0.83 ) }
    dend_14 { pt3dadd( -9.41802, 30.2506, -10.4917, 0.83 ) }
    dend_14 { pt3dadd( -9.72118, 31.3567, -11.3045, 0.83 ) }
    dend_14 { pt3dadd( -10.2813, 33.2795, -12.5822, 0.83 ) }
    dend_14 { pt3dadd( -10.8942, 35.3123, -13.6883, 0.83 ) }
    dend_14 { pt3dadd( -11.4395, 37.0228, -14.4001, 0.83 ) }
    dend_14 { pt3dadd( -12.2673, 39.4455, -15.0871, 0.83 ) }
    dend_14 { pt3dadd( -12.9383, 41.3612, -15.341, 0.83 ) }
    dend_14 { pt3dadd( -13.4705, 43.1112, -15.5205, 0.83 ) }
    dend_14 { pt3dadd( -14.0416, 45.451, -15.6581, 0.83 ) }
    dend_14 { pt3dadd( -14.4424, 47.5418, -15.6787, 0.83 ) }
    dend_14 { pt3dadd( -14.8447, 50.0996, -15.5601, 0.83 ) }
    dend_14 { pt3dadd( -15.0335, 51.8784, -15.4568, 0.83 ) }
    dend_14 { pt3dadd( -15.1186, 53.2099, -15.4003, 0.55 ) }
    dend_14 { pt3dadd( -15.205, 54.8549, -15.3845, 1.11 ) }
    dend_14 { pt3dadd( -15.2626, 56.7716, -15.41, 0.55 ) }
    dend_14 { pt3dadd( -15.2781, 58.6347, -15.4422, 0.55 ) }
    dend_14 { pt3dadd( -15.3243, 60.2711, -15.4951, 0.55 ) }
    dend_14 { pt3dadd( -15.4514, 61.7499, -15.571, 0.55 ) }
    dend_14 { pt3dadd( -15.7377, 63.6385, -15.6953, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 45/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.34027, -16.4049, 2.43102, 0.83 ) }
    dend_6 { pt3dadd( 4.03062, -18.5936, 3.95079, 0.83 ) }
    dend_6 { pt3dadd( 5.28208, -22.5612, 6.70579, 1.66 ) }
    dend_6 { pt3dadd( 6.47237, -26.3348, 9.32612, 1.94 ) }
    dend_6 { pt3dadd( 7.81385, -30.5879, 12.2793, 1.94 ) }
    dend_6 { pt3dadd( 9.81609, -36.9357, 16.6871, 1.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 51/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 3.34027, -16.4049, 2.43102, 0.83 ) }
    dend_1 { pt3dadd( 1.72466, -20.7047, 2.33999, 0.83 ) }
    dend_1 { pt3dadd( 0.369548, -23.8795, 2.38338, 0.83 ) }
    dend_1 { pt3dadd( -0.410913, -25.7099, 2.3697, 0.55 ) }
    dend_1 { pt3dadd( -1.67754, -28.2991, 2.24597, 1.11 ) }
    dend_1 { pt3dadd( -3.02493, -30.9595, 2.02063, 0.83 ) }
    dend_1 { pt3dadd( -3.86069, -32.7298, 1.84078, 0.55 ) }
    dend_1 { pt3dadd( -5.36074, -35.9225, 1.27338, 0.83 ) }
    dend_1 { pt3dadd( -7.04284, -39.4417, 0.381018, 0.55 ) }
    dend_1 { pt3dadd( -8.33459, -42.2607, -0.702568, 0.55 ) }
    dend_1 { pt3dadd( -9.30139, -44.458, -1.80843, 0.83 ) }
    dend_1 { pt3dadd( -10.7293, -47.8118, -3.80035, 0.83 ) }
    dend_1 { pt3dadd( -12.2279, -51.3326, -6.14574, 0.55 ) }
    dend_1 { pt3dadd( -13.1507, -53.7867, -7.97933, 0.55 ) }
    dend_1 { pt3dadd( -14.3762, -57.0723, -10.6669, 1.11 ) }
    dend_1 { pt3dadd( -14.962, -58.6426, -12.1699, 0.55 ) }
    dend_1 { pt3dadd( -15.2677, -59.3413, -12.9708, 0.55 ) }
    dend_1 { pt3dadd( -15.9528, -60.6998, -14.7125, 0.55 ) }
    dend_1 { pt3dadd( -16.7775, -62.2366, -16.773, 0.83 ) }
    dend_1 { pt3dadd( -17.9743, -64.2276, -19.5505, 0.83 ) }
    dend_1 { pt3dadd( -20.3416, -67.5436, -24.0588, 0.55 ) }
    dend_1 { pt3dadd( -21.5415, -68.9776, -25.9961, 0.28 ) }
    dend_1 { pt3dadd( -22.6045, -70.2015, -27.5658, 0.83 ) }
    dend_1 { pt3dadd( -24.0122, -71.7892, -29.4804, 0.55 ) }
    dend_1 { pt3dadd( -24.8286, -72.7326, -30.4866, 0.55 ) }
    dend_1 { pt3dadd( -26.5498, -75.0078, -32.4394, 1.38 ) }
    dend_1 { pt3dadd( -29.4454, -79.5238, -35.3831, 0.55 ) }
    dend_1 { pt3dadd( -30.0274, -80.6902, -36.0321, 0.83 ) }
    dend_1 { pt3dadd( -30.7552, -83.3152, -37.2245, 0.28 ) }
    dend_1 { pt3dadd( -30.8723, -84.6349, -37.6641, 1.11 ) }
    dend_1 { pt3dadd( -30.8254, -86.5794, -38.1802, 1.11 ) }
    dend_1 { pt3dadd( -30.6765, -87.9638, -38.4539, 1.11 ) }
    dend_1 { pt3dadd( -30.3636, -90.307, -38.7364, 0.55 ) }
    dend_1 { pt3dadd( -29.6791, -95.792, -39.345, 0.28 ) }
    dend_1 { pt3dadd( -29.1615, -100.167, -39.754, 0.55 ) }
    dend_1 { pt3dadd( -28.8933, -102.619, -40.0067, 0.55 ) }
    dend_1 { pt3dadd( -28.5295, -105.932, -40.3424, 1.94 ) }
    dend_1 { pt3dadd( -28.3156, -108.305, -40.5588, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 89/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 12.5951, -40.5921, 0.0201467, 0.756209 ) }
    axon_1 { pt3dadd( 17.0657, -54.9104, 0.0201467, 0.756209 ) }
    axon_1 { pt3dadd( 21.5363, -69.2287, 0.0201467, 0.756209 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 92/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -33.4168, 25.0073, -10.9444, 0.83 ) }
    dend_23 { pt3dadd( -33.8532, 25.0251, -11.115, 0.83 ) }
    dend_23 { pt3dadd( -36.9831, 25.155, -12.1789, 0.83 ) }
    dend_23 { pt3dadd( -40.6322, 25.5287, -13.4201, 0.83 ) }
    dend_23 { pt3dadd( -43.3078, 25.9649, -14.3977, 0.83 ) }
    dend_23 { pt3dadd( -46.6294, 26.612, -15.6655, 0.83 ) }
    dend_23 { pt3dadd( -48.6136, 27.0466, -16.4225, 0.83 ) }
    dend_23 { pt3dadd( -51.3502, 27.7864, -17.4288, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_23 { pt3dadd( -55.5116, 29.2356, -18.8814, 1.38 ) }
    dend_23 { pt3dadd( -58.078, 30.2713, -19.744, 0.55 ) }
    dend_23 { pt3dadd( -59.5344, 30.8867, -20.2541, 0.55 ) }
    dend_23 { pt3dadd( -61.9545, 31.9998, -21.2787, 0.55 ) }
    dend_23 { pt3dadd( -64.9388, 33.4089, -22.6362, 0.55 ) }
    dend_23 { pt3dadd( -66.6274, 34.2467, -23.4183, 0.83 ) }
    dend_23 { pt3dadd( -69.2925, 35.446, -24.5706, 0.83 ) }
    dend_23 { pt3dadd( -71.9158, 36.5977, -25.7256, 0.55 ) }
    dend_23 { pt3dadd( -76.5276, 38.6218, -27.816, 0.55 ) }
    dend_23 { pt3dadd( -80.8238, 40.604, -30.1022, 0.55 ) }
    dend_23 { pt3dadd( -82.6846, 41.4911, -31.1752, 0.55 ) }
    dend_23 { pt3dadd( -85.2369, 42.6602, -32.7455, 0.83 ) }
    dend_23 { pt3dadd( -87.9412, 43.9349, -34.4858, 0.55 ) }
    dend_23 { pt3dadd( -90.751, 45.2697, -36.2891, 1.66 ) }
    dend_23 { pt3dadd( -95.1229, 47.2034, -38.9953, 0.28 ) }
    dend_23 { pt3dadd( -96.0589, 47.6368, -39.5591, 0.55 ) }
    dend_23 { pt3dadd( -98.874, 48.9579, -40.9764, 0.28 ) }
    dend_23 { pt3dadd( -100.239, 49.6123, -41.5204, 0.55 ) }
    dend_23 { pt3dadd( -103.176, 51.0095, -42.379, 0.55 ) }
    dend_23 { pt3dadd( -105.871, 52.3148, -42.9075, 0.55 ) }
    dend_23 { pt3dadd( -109.208, 53.9865, -43.3156, 0.83 ) }
    dend_23 { pt3dadd( -112.773, 55.9105, -43.7272, 0.55 ) }
    dend_23 { pt3dadd( -114.54, 56.9624, -43.9129, 0.55 ) }
    dend_23 { pt3dadd( -117.744, 58.9989, -44.2387, 0.55 ) }
    dend_23 { pt3dadd( -120.476, 61.0603, -44.5312, 0.83 ) }
    dend_23 { pt3dadd( -122.245, 62.5696, -44.7197, 0.55 ) }
    dend_23 { pt3dadd( -123.726, 64.0034, -44.8556, 0.55 ) }
    dend_23 { pt3dadd( -125.166, 65.5004, -44.902, 0.28 ) }
    dend_23 { pt3dadd( -128.04, 68.5259, -44.8247, 0.55 ) }
    dend_23 { pt3dadd( -131.333, 71.8762, -44.485, 0.28 ) }
    dend_23 { pt3dadd( -133.351, 73.8932, -44.227, 0.55 ) }
    dend_23 { pt3dadd( -135.679, 76.0736, -43.9613, 0.28 ) }
    dend_23 { pt3dadd( -138.27, 78.2474, -43.7684, 0.55 ) }
    dend_23 { pt3dadd( -140.633, 79.9665, -43.6597, 0.83 ) }
    dend_23 { pt3dadd( -146.54, 83.6108, -43.6654, 0.55 ) }
    dend_23 { pt3dadd( -148.002, 84.3839, -43.7581, 1.11 ) }
    dend_23 { pt3dadd( -151.282, 86.0255, -44.1911, 0.55 ) }
    dend_23 { pt3dadd( -154.437, 87.4561, -44.7698, 0.83 ) }
    dend_23 { pt3dadd( -157.593, 88.907, -45.465, 0.28 ) }
    dend_23 { pt3dadd( -158.686, 89.4571, -45.8154, 0.83 ) }
    dend_23 { pt3dadd( -161.385, 90.9742, -46.9812, 0.28 ) }
    dend_23 { pt3dadd( -162.643, 91.808, -47.5522, 0.55 ) }
    dend_23 { pt3dadd( -164.398, 93.3505, -48.4611, 0.55 ) }
    dend_23 { pt3dadd( -166.453, 95.6473, -49.8527, 0.55 ) }
    dend_23 { pt3dadd( -168.705, 98.4723, -51.6577, 0.55 ) }
    dend_23 { pt3dadd( -170.401, 100.76, -53.0921, 0.55 ) }
    dend_23 { pt3dadd( -171.555, 102.363, -54.0809, 0.55 ) }
    dend_23 { pt3dadd( -173.906, 106.058, -56.3534, 0.55 ) }
    dend_23 { pt3dadd( -175.599, 109.164, -58.2328, 0.28 ) }
    dend_23 { pt3dadd( -176.091, 110.25, -58.9422, 0.55 ) }
    dend_23 { pt3dadd( -176.649, 111.645, -59.8323, 0.28 ) }
    dend_23 { pt3dadd( -177.315, 114.035, -61.3831, 1.11 ) }
    dend_23 { pt3dadd( -177.872, 116.787, -63.1036, 0.55 ) }
    dend_23 { pt3dadd( -177.885, 117.906, -63.9874, 0.83 ) }
    dend_23 { pt3dadd( -177.56, 121.795, -67.3201, 0.28 ) }
    dend_23 { pt3dadd( -177.352, 123.261, -68.6647, 0.55 ) }
    dend_23 { pt3dadd( -177.025, 125.142, -70.4806, 0.28 ) }
    dend_23 { pt3dadd( -176.859, 126.042, -71.3659, 0.83 ) }
    dend_23 { pt3dadd( -175.213, 135.673, -80.8355, 0.55 ) }
    dend_23 { pt3dadd( -175.031, 136.644, -81.8071, 0.83 ) }
    dend_23 { pt3dadd( -174.285, 140.098, -85.2397, 0.28 ) }
    dend_23 { pt3dadd( -174.024, 141.192, -86.352, 0.55 ) }
    dend_23 { pt3dadd( -173.783, 142.296, -87.5214, 0.28 ) }
    dend_23 { pt3dadd( -173.383, 144.207, -89.5189, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 64/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -33.4168, 25.0073, -10.9444, 1.11 ) }
    dend_22 { pt3dadd( -32.7662, 30.1865, -14.986, 1.11 ) }
    dend_22 { pt3dadd( -32.1733, 34.6713, -18.1868, 0.28 ) }
    dend_22 { pt3dadd( -32.1113, 35.5276, -18.8361, 0.83 ) }
    dend_22 { pt3dadd( -31.9598, 39.4884, -21.6862, 0.28 ) }
    dend_22 { pt3dadd( -31.9267, 40.5151, -22.4071, 0.55 ) }
    dend_22 { pt3dadd( -31.816, 44.3919, -24.975, 0.55 ) }
    dend_22 { pt3dadd( -31.7218, 47.4546, -27.0285, 2.22 ) }
    dend_22 { pt3dadd( -31.4584, 60.6947, -35.5792, 0.28 ) }
    dend_22 { pt3dadd( -31.4493, 62.8349, -36.906, 1.94 ) }
    dend_22 { pt3dadd( -31.4756, 74.1702, -43.5206, 0.28 ) }
    dend_22 { pt3dadd( -31.4965, 76.7323, -44.9895, 0.55 ) }
    dend_22 { pt3dadd( -31.5467, 80.3687, -47.0309, 0.28 ) }
    dend_22 { pt3dadd( -31.5875, 82.0231, -47.8879, 1.66 ) }
    dend_22 { pt3dadd( -31.7623, 86.1986, -49.7592, 0.28 ) }
    dend_22 { pt3dadd( -32.1062, 90.4646, -51.6249, 0.28 ) }
    dend_22 { pt3dadd( -32.5406, 93.2799, -52.7471, 2.49 ) }
    dend_22 { pt3dadd( -33.9998, 100.576, -55.8283, 0.28 ) }
    dend_22 { pt3dadd( -35.2715, 105.631, -57.822, 0.28 ) }
    dend_22 { pt3dadd( -35.8171, 107.535, -58.4623, 1.66 ) }
    dend_22 { pt3dadd( -37.1984, 111.869, -59.6107, 0.28 ) }
    dend_22 { pt3dadd( -37.9758, 114.06, -60.032, 0.83 ) }
    dend_22 { pt3dadd( -40.0154, 119.698, -60.8682, 0.28 ) }
    dend_22 { pt3dadd( -40.9974, 122.376, -61.154, 1.11 ) }
    dend_22 { pt3dadd( -42.4612, 127.068, -61.8126, 0.28 ) }
    dend_22 { pt3dadd( -43.3742, 130.595, -62.2742, 0.28 ) }
    dend_22 { pt3dadd( -43.8906, 133.189, -62.5452, 0.83 ) }
    dend_22 { pt3dadd( -44.4353, 137.135, -63.1113, 0.28 ) }
    dend_22 { pt3dadd( -44.5138, 137.786, -63.2108, 0.83 ) }
    dend_22 { pt3dadd( -44.7632, 139.89, -63.6749, 0.28 ) }
    dend_22 { pt3dadd( -44.9781, 141.637, -64.1216, 0.83 ) }
    dend_22 { pt3dadd( -45.154, 143.096, -64.4513, 0.83 ) }
    dend_22 { pt3dadd( -45.7632, 150.194, -65.7702, 0.28 ) }
    dend_22 { pt3dadd( -45.817, 153.231, -66.3552, 1.11 ) }
    dend_22 { pt3dadd( -45.6735, 156.135, -66.9327, 0.28 ) }
    dend_22 { pt3dadd( -45.4832, 157.822, -67.2188, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_22 { pt3dadd( -44.9403, 160.842, -67.8145, 0.28 ) }
    dend_22 { pt3dadd( -44.171, 163.95, -68.4774, 0.83 ) }
    dend_22 { pt3dadd( -42.3301, 169.839, -70.0172, 0.28 ) }
    dend_22 { pt3dadd( -41.4616, 172.339, -70.8675, 0.28 ) }
    dend_22 { pt3dadd( -40.5946, 174.7, -71.9012, 0.55 ) }
    dend_22 { pt3dadd( -38.823, 179.499, -74.3, 0.28 ) }
    dend_22 { pt3dadd( -38.3211, 180.849, -75.0025, 0.83 ) }
    dend_22 { pt3dadd( -36.9517, 184.839, -77.1005, 0.28 ) }
    dend_22 { pt3dadd( -36.4126, 186.442, -77.9425, 0.83 ) }
    dend_22 { pt3dadd( -35.0187, 190.392, -80.2183, 0.28 ) }
    dend_22 { pt3dadd( -34.387, 191.997, -81.1545, 0.83 ) }
    dend_22 { pt3dadd( -33.5894, 193.651, -82.041, 0.28 ) }
    dend_22 { pt3dadd( -33.2727, 194.203, -82.3297, 0.28 ) }
    dend_22 { pt3dadd( -32.1448, 195.927, -83.1447, 0.83 ) }
    dend_22 { pt3dadd( -28.6633, 200.956, -85.5334, 0.28 ) }
    dend_22 { pt3dadd( -27.9975, 201.854, -85.9656, 0.55 ) }
    dend_22 { pt3dadd( -26.7339, 203.448, -86.9626, 0.28 ) }
    dend_22 { pt3dadd( -26.056, 204.237, -87.5816, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 18/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -15.7377, 63.6385, -15.6953, 0.55 ) }
    dend_16 { pt3dadd( -14.7373, 66.4452, -15.9248, 0.55 ) }
    dend_16 { pt3dadd( -14.4678, 67.2134, -16.0009, 0.28 ) }
    dend_16 { pt3dadd( -14.072, 68.4479, -16.1562, 0.55 ) }
    dend_16 { pt3dadd( -13.0972, 71.7095, -16.7532, 0.28 ) }
    dend_16 { pt3dadd( -12.3811, 74.0772, -17.263, 0.55 ) }
    dend_16 { pt3dadd( -11.7922, 76.31, -17.8056, 0.55 ) }
    dend_16 { pt3dadd( -11.3334, 78.5336, -18.4372, 0.55 ) }
    dend_16 { pt3dadd( -10.8199, 81.2259, -19.2987, 0.55 ) }
    dend_16 { pt3dadd( -10.3007, 84.0014, -20.2053, 0.55 ) }
    dend_16 { pt3dadd( -9.99319, 85.7766, -20.7448, 0.55 ) }
    dend_16 { pt3dadd( -9.54708, 88.6447, -21.5963, 0.55 ) }
    dend_16 { pt3dadd( -9.10469, 91.92, -22.4417, 0.55 ) }
    dend_16 { pt3dadd( -8.74775, 94.5743, -22.9312, 0.55 ) }
    dend_16 { pt3dadd( -8.27426, 98.2326, -23.261, 0.28 ) }
    dend_16 { pt3dadd( -8.13058, 99.4751, -23.2647, 0.55 ) }
    dend_16 { pt3dadd( -7.97765, 100.776, -23.2093, 0.55 ) }
    dend_16 { pt3dadd( -7.74377, 102.552, -23.0726, 0.55 ) }
    dend_16 { pt3dadd( -7.61896, 103.856, -22.9365, 0.55 ) }
    dend_16 { pt3dadd( -7.49403, 105.902, -22.8343, 0.83 ) }
    dend_16 { pt3dadd( -7.36397, 107.866, -22.8365, 0.55 ) }
    dend_16 { pt3dadd( -7.12931, 110.054, -22.8306, 0.28 ) }
    dend_16 { pt3dadd( -6.74979, 112.749, -22.8494, 0.55 ) }
    dend_16 { pt3dadd( -6.40463, 114.846, -22.8817, 0.28 ) }
    dend_16 { pt3dadd( -6.17237, 116.184, -22.9127, 1.38 ) }
    dend_16 { pt3dadd( -5.68306, 118.636, -22.968, 1.38 ) }
    dend_16 { pt3dadd( -4.63021, 123.782, -22.9749, 0.28 ) }
    dend_16 { pt3dadd( -4.30902, 125.353, -22.982, 0.83 ) }
    dend_16 { pt3dadd( -4.06986, 126.476, -22.983, 0.83 ) }
    dend_16 { pt3dadd( -3.36874, 129.822, -23.0004, 0.28 ) }
    dend_16 { pt3dadd( -3.04958, 131.464, -22.9976, 0.55 ) }
    dend_16 { pt3dadd( -2.76518, 133.066, -23.0341, 0.55 ) }
    dend_16 { pt3dadd( -2.3649, 135.558, -23.1919, 0.55 ) }
    dend_16 { pt3dadd( -1.95636, 138.258, -23.2701, 0.28 ) }
    dend_16 { pt3dadd( -1.78667, 139.236, -23.2937, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 53/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -15.7377, 63.6385, -15.6953, 0.83 ) }
    dend_15 { pt3dadd( -15.9311, 65.0487, -15.9978, 0.83 ) }
    dend_15 { pt3dadd( -16.2909, 67.6727, -16.5606, 0.28 ) }
    dend_15 { pt3dadd( -16.6055, 69.9671, -17.0528, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 57/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 9.81609, -36.9357, 16.6871, 1.66 ) }
    dend_10 { pt3dadd( 8.7375, -39.1426, 18.4179, 1.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 59/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 9.81609, -36.9357, 16.6871, 0.55 ) }
    dend_7 { pt3dadd( 12.7368, -38.1447, 17.0446, 0.55 ) }
    dend_7 { pt3dadd( 17.1131, -39.9031, 17.5662, 0.55 ) }
    dend_7 { pt3dadd( 20.4803, -41.1891, 17.9987, 0.55 ) }
    dend_7 { pt3dadd( 23.0846, -42.1612, 18.3357, 0.55 ) }
    dend_7 { pt3dadd( 28.2364, -44.0199, 19.1602, 0.55 ) }
    dend_7 { pt3dadd( 30.5771, -44.8622, 19.6007, 0.55 ) }
    dend_7 { pt3dadd( 34.8679, -46.332, 20.5486, 0.55 ) }
    dend_7 { pt3dadd( 36.7666, -46.9211, 21.0602, 0.55 ) }
    dend_7 { pt3dadd( 40.1136, -47.9339, 22.0665, 0.55 ) }
    dend_7 { pt3dadd( 43.9535, -48.9915, 23.3194, 0.55 ) }
    dend_7 { pt3dadd( 47.5742, -49.8246, 24.5642, 0.55 ) }
    dend_7 { pt3dadd( 52.3008, -50.8473, 26.2083, 0.55 ) }
    dend_7 { pt3dadd( 56.9165, -51.6663, 27.8451, 0.55 ) }
    dend_7 { pt3dadd( 59.4906, -52.0215, 28.7318, 0.55 ) }
    dend_7 { pt3dadd( 64.1043, -52.4766, 30.2589, 0.55 ) }
    dend_7 { pt3dadd( 66.7727, -52.638, 31.0828, 0.55 ) }
    dend_7 { pt3dadd( 69.671, -52.7225, 31.9443, 0.55 ) }
    dend_7 { pt3dadd( 72.5917, -52.7293, 32.776, 0.55 ) }
    dend_7 { pt3dadd( 75.8429, -52.6848, 33.6901, 0.55 ) }
    dend_7 { pt3dadd( 78.8401, -52.649, 34.5534, 0.55 ) }
    dend_7 { pt3dadd( 80.6831, -52.6147, 35.0774, 0.55 ) }
    dend_7 { pt3dadd( 84.5306, -52.4995, 36.1527, 0.55 ) }
    dend_7 { pt3dadd( 87.7676, -52.3463, 37.023, 0.55 ) }
    dend_7 { pt3dadd( 91.0107, -52.1241, 37.8291, 0.55 ) }
    dend_7 { pt3dadd( 92.3676, -52.0205, 38.1468, 0.55 ) }
    dend_7 { pt3dadd( 94.7714, -51.7641, 38.747, 0.55 ) }
    dend_7 { pt3dadd( 96.919, -51.5484, 39.3139, 0.55 ) }
    dend_7 { pt3dadd( 98.285, -51.4263, 39.7064, 0.55 ) }
    dend_7 { pt3dadd( 101.584, -51.2388, 40.6745, 0.55 ) }
    dend_7 { pt3dadd( 104.858, -51.1593, 41.6222, 0.55 ) }
    dend_7 { pt3dadd( 108.989, -51.2655, 42.8531, 0.55 ) }
    dend_7 { pt3dadd( 112.455, -51.5899, 43.8425, 0.55 ) }
    dend_7 { pt3dadd( 114.122, -51.8487, 44.3598, 0.55 ) }
    dend_7 { pt3dadd( 117.22, -52.5587, 45.4366, 0.55 ) }
    dend_7 { pt3dadd( 119.44, -53.2922, 46.3191, 0.55 ) }
    dend_7 { pt3dadd( 121.603, -54.2387, 47.4559, 0.28 ) }
    dend_7 { pt3dadd( 122.981, -55.1125, 48.3617, 1.38 ) }
    dend_7 { pt3dadd( 125.906, -57.2579, 50.6006, 0.55 ) }
    dend_7 { pt3dadd( 127.611, -58.6794, 52.1341, 0.55 ) }
    dend_7 { pt3dadd( 128.939, -60.0427, 53.6374, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_7 { pt3dadd( 131.384, -62.9339, 57.0563, 0.55 ) }
    dend_7 { pt3dadd( 132.398, -64.2917, 58.8028, 0.55 ) }
    dend_7 { pt3dadd( 141.523, -65.2505, 62.9489, 0.55 ) }
    dend_7 { pt3dadd( 150.849, -65.1553, 66.7408, 0.55 ) }
    dend_7 { pt3dadd( 160.323, -66.34, 69.9352, 0.55 ) }
    dend_7 { pt3dadd( 168.968, -68.7731, 74.486, 0.55 ) }
    dend_7 { pt3dadd( 176.711, -71.56, 80.2867, 0.55 ) }
    dend_7 { pt3dadd( 185.304, -73.2333, 85.2599, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 8/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -28.3156, -108.305, -40.5588, 0.28 ) }
    dend_5 { pt3dadd( -29.0259, -111.27, -41.0189, 0.28 ) }
    dend_5 { pt3dadd( -29.3433, -112.619, -41.2294, 0.83 ) }
    dend_5 { pt3dadd( -30.1922, -117.019, -42.0118, 0.28 ) }
    dend_5 { pt3dadd( -30.3958, -118.161, -42.1817, 0.83 ) }
    dend_5 { pt3dadd( -30.7892, -120.368, -42.51, 0.28 ) }
    dend_5 { pt3dadd( -31.2095, -122.725, -42.8607, 0.55 ) }
    dend_5 { pt3dadd( -31.526, -124.363, -43.1484, 0.55 ) }
    dend_5 { pt3dadd( -32.1704, -127.99, -43.827, 0.28 ) }
    dend_5 { pt3dadd( -32.3567, -129.665, -44.1324, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 18/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -28.3156, -108.305, -40.5588, 0.28 ) }
    dend_2 { pt3dadd( -32.0031, -117.505, -39.7615, 0.28 ) }
    dend_2 { pt3dadd( -32.8255, -119.557, -39.5836, 0.55 ) }
    dend_2 { pt3dadd( -33.9381, -122.333, -39.3431, 0.55 ) }
    dend_2 { pt3dadd( -34.9177, -124.777, -39.1312, 0.28 ) }
    dend_2 { pt3dadd( -35.81, -127.003, -38.9383, 0.55 ) }
    dend_2 { pt3dadd( -36.8663, -129.639, -38.7099, 1.38 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 25/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -1.78667, 139.236, -23.2937, 0.28 ) }
    dend_18 { pt3dadd( -2.00729, 140.597, -23.7068, 0.28 ) }
    dend_18 { pt3dadd( -2.19176, 141.68, -24.0856, 0.83 ) }
    dend_18 { pt3dadd( -2.48184, 143.17, -24.7353, 0.28 ) }
    dend_18 { pt3dadd( -2.76521, 144.492, -25.3298, 0.28 ) }
    dend_18 { pt3dadd( -2.89701, 145.076, -25.582, 0.55 ) }
    dend_18 { pt3dadd( -3.32767, 146.725, -26.2564, 0.28 ) }
    dend_18 { pt3dadd( -3.63582, 147.75, -26.7095, 0.83 ) }
    dend_18 { pt3dadd( -4.28708, 149.371, -27.6691, 0.28 ) }
    dend_18 { pt3dadd( -4.78715, 150.425, -28.4514, 0.28 ) }
    dend_18 { pt3dadd( -5.06126, 150.981, -28.8905, 0.55 ) }
    dend_18 { pt3dadd( -5.68742, 152.152, -29.8722, 0.28 ) }
    dend_18 { pt3dadd( -6.3077, 153.191, -30.8378, 0.83 ) }
    dend_18 { pt3dadd( -7.36992, 154.861, -32.5834, 0.83 ) }
    dend_18 { pt3dadd( -8.21706, 156.031, -33.796, 0.83 ) }
    dend_18 { pt3dadd( -9.08586, 157.147, -34.9978, 0.28 ) }
    dend_18 { pt3dadd( -10.2262, 158.552, -36.4606, 0.55 ) }
    dend_18 { pt3dadd( -11.5475, 160.147, -38.0146, 0.28 ) }
    dend_18 { pt3dadd( -12.3653, 161.111, -38.9019, 1.11 ) }
    dend_18 { pt3dadd( -14.5716, 163.691, -41.1445, 0.28 ) }
    dend_18 { pt3dadd( -15.3573, 164.507, -41.8785, 0.83 ) }
    dend_18 { pt3dadd( -16.539, 165.649, -42.9666, 0.28 ) }
    dend_18 { pt3dadd( -17.0531, 166.135, -43.4088, 0.55 ) }
    dend_18 { pt3dadd( -18.3249, 167.297, -44.4158, 0.28 ) }
    dend_18 { pt3dadd( -18.5301, 167.484, -44.5842, 0.55 ) }
    dend_18 { pt3dadd( -19.4091, 168.292, -45.4837, 0.28 ) }
    dend_18 { pt3dadd( -20.5787, 169.335, -46.6354, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 52/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -1.78667, 139.236, -23.2937, 0.28 ) }
    dend_17 { pt3dadd( -0.883013, 141.668, -22.0405, 0.28 ) }
    dend_17 { pt3dadd( -0.358393, 143.311, -21.2587, 0.55 ) }
    dend_17 { pt3dadd( 0.144664, 145.434, -20.2293, 0.28 ) }
    dend_17 { pt3dadd( 0.583912, 146.937, -19.8216, 0.55 ) }
    dend_17 { pt3dadd( 1.32596, 148.962, -19.5933, 0.28 ) }
    dend_17 { pt3dadd( 1.4436, 149.283, -19.5571, 0.55 ) }
    dend_17 { pt3dadd( 2.30026, 151.609, -19.5947, 0.28 ) }
    dend_17 { pt3dadd( 3.20249, 154.057, -19.8753, 0.83 ) }
    dend_17 { pt3dadd( 5.60846, 159.479, -21.2676, 0.28 ) }
    dend_17 { pt3dadd( 6.64728, 161.548, -22.0408, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 63/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 8.7375, -39.1426, 18.4179, 1.66 ) }
    dend_12 { pt3dadd( 8.7029, -40.1078, 18.5255, 1.66 ) }
    dend_12 { pt3dadd( 8.56857, -43.0239, 18.8744, 1.11 ) }
    dend_12 { pt3dadd( 8.4691, -50.5709, 20.0441, 1.11 ) }
    dend_12 { pt3dadd( 8.46725, -58.323, 21.533, 1.11 ) }
    dend_12 { pt3dadd( 8.36303, -63.2145, 22.666, 1.11 ) }
    dend_12 { pt3dadd( 8.2516, -68.8771, 24.164, 1.11 ) }
    dend_12 { pt3dadd( 8.27779, -72.1003, 25.1448, 1.11 ) }
    dend_12 { pt3dadd( 8.52904, -78.4063, 27.3364, 1.11 ) }
    dend_12 { pt3dadd( 8.83886, -84.7094, 29.8267, 1.11 ) }
    dend_12 { pt3dadd( 9.12472, -95.613, 34.3597, 1.11 ) }
    dend_12 { pt3dadd( 9.21403, -101.291, 36.6588, 1.11 ) }
    dend_12 { pt3dadd( 9.22372, -106.83, 38.846, 1.11 ) }
    dend_12 { pt3dadd( 8.94936, -112.681, 40.9182, 1.11 ) }
    dend_12 { pt3dadd( 8.11546, -119.375, 42.9529, 0.83 ) }
    dend_12 { pt3dadd( 7.15091, -124.219, 44.183, 0.55 ) }
    dend_12 { pt3dadd( 6.12831, -128.084, 44.8945, 0.55 ) }
    dend_12 { pt3dadd( 5.04984, -131.694, 45.3028, 0.55 ) }
    dend_12 { pt3dadd( 3.21135, -136.943, 45.7117, 0.55 ) }
    dend_12 { pt3dadd( 0.507368, -144.215, 46.0334, 0.55 ) }
    dend_12 { pt3dadd( -1.49702, -149.98, 46.1501, 0.55 ) }
    dend_12 { pt3dadd( -3.04586, -154.72, 46.2757, 0.55 ) }
    dend_12 { pt3dadd( -4.8134, -160.454, 46.5861, 0.28 ) }
    dend_12 { pt3dadd( -7.97887, -174.146, 50.806, 0.28 ) }
    dend_12 { pt3dadd( -12.7359, -186.807, 56.4971, 0.28 ) }
    dend_12 { pt3dadd( -17.6966, -198.831, 63.2895, 0.28 ) }
    dend_12 { pt3dadd( -22.3682, -209.757, 71.898, 0.28 ) }
    dend_12 { pt3dadd( -24.9112, -219.98, 82.1126, 0.28 ) }
    dend_12 { pt3dadd( -25.8131, -228.546, 93.9921, 0.28 ) }
    dend_12 { pt3dadd( -26.805, -236.97, 105.965, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 93/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.7375, -39.1426, 18.4179, 0.55 ) }
    dend_11 { pt3dadd( 9.67926, -39.5724, 20.2719, 0.55 ) }
    dend_11 { pt3dadd( 10.1707, -39.7864, 21.0701, 0.55 ) }
    dend_11 { pt3dadd( 11.5889, -40.3351, 23.3646, 0.55 ) }
    dend_11 { pt3dadd( 15.2611, -41.5397, 28.9731, 0.55 ) }
    dend_11 { pt3dadd( 16.0954, -41.7363, 30.1914, 0.55 ) }
    dend_11 { pt3dadd( 18.192, -42.0116, 33.2227, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_11 { pt3dadd( 19.6703, -42.1847, 35.4846, 0.28 ) }
    dend_11 { pt3dadd( 21.8801, -42.3434, 38.9187, 0.28 ) }
    dend_11 { pt3dadd( 22.7618, -42.3717, 40.2963, 0.28 ) }
    dend_11 { pt3dadd( 24.0822, -42.2025, 41.8176, 0.28 ) }
    dend_11 { pt3dadd( 26.1352, -41.6894, 44.2951, 0.28 ) }
    dend_11 { pt3dadd( 30.8333, -42.5624, 51.276, 0.28 ) }
    dend_11 { pt3dadd( 34.396, -44.0966, 58.794, 0.28 ) }
    dend_11 { pt3dadd( 37.8418, -45.6339, 66.3656, 0.28 ) }
    dend_11 { pt3dadd( 40.5004, -45.7214, 74.3963, 0.28 ) }
    dend_11 { pt3dadd( 43.6053, -46.9108, 82.1752, 0.28 ) }
    dend_11 { pt3dadd( 45.5993, -49.2268, 90.0636, 0.28 ) }
    dend_11 { pt3dadd( 47.9826, -53.0901, 97.2024, 0.28 ) }
    dend_11 { pt3dadd( 49.1022, -56.8463, 104.699, 0.28 ) }
    dend_11 { pt3dadd( 49.5027, -60.3483, 112.39, 0.28 ) }
    dend_11 { pt3dadd( 50.9833, -63.8241, 119.959, 0.28 ) }
    dend_11 { pt3dadd( 52.693, -67.0232, 127.602, 0.28 ) }
    dend_11 { pt3dadd( 53.4155, -69.1637, 135.754, 0.28 ) }
    dend_11 { pt3dadd( 56.1946, -71.1306, 143.498, 0.28 ) }
    dend_11 { pt3dadd( 59.6096, -71.6717, 151.219, 0.28 ) }
    dend_11 { pt3dadd( 62.4925, -72.6411, 159.113, 0.28 ) }
    dend_11 { pt3dadd( 65.6735, -72.1482, 166.937, 0.28 ) }
    dend_11 { pt3dadd( 68.5414, -72.1254, 174.896, 0.28 ) }
    dend_11 { pt3dadd( 71.3174, -71.5492, 182.866, 0.28 ) }
    dend_11 { pt3dadd( 73.0826, -69.9164, 190.977, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 24/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 185.304, -73.2333, 85.2599, 0.28 ) }
    dend_9 { pt3dadd( 195.578, -76.5427, 86.4565, 0.28 ) }
    dend_9 { pt3dadd( 205.333, -81.0742, 87.955, 0.28 ) }
    dend_9 { pt3dadd( 215.3, -84.6754, 90.3275, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 28/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 185.304, -73.2333, 85.2599, 0.28 ) }
    dend_8 { pt3dadd( 191.377, -74.1246, 89.6715, 0.28 ) }
    dend_8 { pt3dadd( 197.901, -75.8583, 93.0746, 0.28 ) }
    dend_8 { pt3dadd( 204.716, -77.1177, 96.0927, 0.28 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 32/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -36.8663, -129.639, -38.7099, 0.28 ) }
    dend_4 { pt3dadd( -39.0881, -133.043, -38.137, 0.28 ) }
    dend_4 { pt3dadd( -39.7753, -134.091, -37.9627, 0.55 ) }
    dend_4 { pt3dadd( -41.5597, -136.865, -37.6773, 0.28 ) }
    dend_4 { pt3dadd( -42.6599, -138.541, -37.5406, 0.83 ) }
    dend_4 { pt3dadd( -44.5906, -141.373, -37.3243, 0.28 ) }
    dend_4 { pt3dadd( -46.0724, -143.526, -37.1632, 0.28 ) }
    dend_4 { pt3dadd( -47.6446, -145.701, -37.1676, 0.83 ) }
    dend_4 { pt3dadd( -50.2204, -149.181, -37.3524, 0.28 ) }
    dend_4 { pt3dadd( -51.1174, -150.394, -37.5391, 0.55 ) }
    dend_4 { pt3dadd( -54.1306, -154.572, -38.4737, 0.28 ) }
    dend_4 { pt3dadd( -55.2775, -156.194, -38.9599, 0.83 ) }
    dend_4 { pt3dadd( -58.7339, -161.068, -40.6981, 0.28 ) }
    dend_4 { pt3dadd( -59.5789, -162.343, -41.2261, 0.83 ) }
    dend_4 { pt3dadd( -61.8646, -166.186, -42.949, 0.28 ) }
    dend_4 { pt3dadd( -62.4105, -167.375, -43.4944, 0.55 ) }
    dend_4 { pt3dadd( -62.9971, -169.292, -44.3922, 0.28 ) }
    dend_4 { pt3dadd( -63.4077, -170.999, -45.1685, 0.83 ) }
    dend_4 { pt3dadd( -63.9668, -175.65, -46.9662, 0.28 ) }
    dend_4 { pt3dadd( -64.0294, -176.993, -47.4421, 0.83 ) }
    dend_4 { pt3dadd( -63.7999, -180.928, -48.4814, 0.28 ) }
    dend_4 { pt3dadd( -63.5846, -182.477, -48.8829, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 54/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -36.8663, -129.639, -38.7099, 0.28 ) }
    dend_3 { pt3dadd( -35.1436, -134.412, -40.0667, 0.28 ) }
    dend_3 { pt3dadd( -34.2478, -136.894, -40.7722, 1.11 ) }
    dend_3 { pt3dadd( -33.445, -139.119, -41.4045, 0.28 ) }
    dend_3 { pt3dadd( -32.6875, -141.218, -42.0011, 1.38 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_27, dend_26, dend_25, dend_20, dend_13, dend_0, dend_24, dend_21, dend_19, dend_14, dend_6, dend_1, dend_23, dend_22, dend_16, dend_15, dend_10, dend_7, dend_5, dend_2, dend_18, dend_17, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3]}
    ModelViewParmSubset_2 = new SectionList()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_27, dend_26, dend_25, dend_20, dend_13, dend_0, dend_24, dend_21, dend_19, dend_14, dend_6, dend_1, dend_23, dend_22, dend_16, dend_15, dend_10, dend_7, dend_5, dend_2, dend_18, dend_17, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_28 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_24 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_19 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_14 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_7 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_12 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_11 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_4 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_13 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_20 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_6 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_10 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_21 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_5 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_17 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_8 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_9 OneSecGrp_SectionRef_29.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_13, dend_0, axon_0, axon_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    axon_1 all.append()
    axon_1 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_28 nseg = 11
    dend_27 nseg = 11
    dend_26 nseg = 17
    dend_25 nseg = 11
    dend_24 nseg = 23
    dend_19 nseg = 17
    dend_14 nseg = 3
    dend_1 nseg = 5
    dend_23 nseg = 11
    dend_22 nseg = 11
    dend_16 nseg = 3
    dend_7 nseg = 9
    dend_18 nseg = 3
    dend_12 nseg = 11
    dend_11 nseg = 9
    dend_4 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_LBC_d3f79b893e_0_0


