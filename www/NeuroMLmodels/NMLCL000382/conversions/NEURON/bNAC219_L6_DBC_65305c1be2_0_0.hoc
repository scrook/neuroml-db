// Cell: bNAC219_L6_DBC_65305c1be2_0_0
/*
{
  "id" : "bNAC219_L6_DBC_65305c1be2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.92851, -12.838, 0.0, 2.34028", "1.77053, -11.651, 0.0, 3.94329", "1.61254, -10.464, 0.0, 5.35921", "1.45455, -9.27692, 0.0, 6.69673", "1.29656, -8.08988, 0.0, 7.75393", "1.13858, -6.90284, 0.0, 8.64632", "0.980589, -5.7158, 0.0, 9.469", "0.822601, -4.52876, 0.0, 10.3084", "0.664614, -3.34172, 0.0, 11.1451", "0.506626, -2.15468, 0.0, 11.8845", "0.348639, -0.967645, 0.0, 12.0097", "0.190651, 0.219395, 0.0, 12.0138", "0.0326638, 1.40643, 0.0, 11.4011", "-0.125324, 2.59347, 0.0, 10.4698", "-0.283311, 3.78051, 0.0, 9.36538", "-0.441299, 4.96755, 0.0, 8.29429", "-0.599286, 6.15459, 0.0, 7.29384", "-0.757274, 7.34163, 0.0, 6.35176", "-0.915261, 8.52867, 0.0, 5.48996", "-1.07325, 9.71571, 0.0, 4.74604", "-1.23124, 10.9027, 0.0, 2.99829" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "2.20047, -12.9375, 0.07, 2.87", "2.26618, -13.3675, 0.0251773, 2.87", "2.62757, -15.5898, 0.0810191, 2.87", "3.025, -17.8716, 0.262392, 2.87", "3.4492, -20.3072, 0.455984, 2.58", "3.89694, -22.878, 0.660321, 2.58", "4.35228, -25.4923, 0.86812, 2.06", "4.99108, -29.1141, 1.22385, 2.06", "5.21848, -30.4146, 1.41055, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018766376804
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.13953, 12.4515, 1.0, 3.46", "-2.17306, 12.5887, 1.0, 3.46", "-2.52844, 14.1706, 0.996174, 2.65", "-2.8194, 15.4727, 0.991772, 2.65", "-3.14167, 16.9509, 0.986363, 2.65", "-3.43425, 18.3256, 0.9492, 2.5", "-3.66178, 19.4121, 0.905062, 2.5", "-3.92171, 20.6917, 0.837011, 2.5", "-4.20821, 22.1159, 0.743725, 2.06", "-4.48996, 23.469, 0.650476, 1.99", "-4.66836, 24.3038, 0.594495, 1.99", "-4.89087, 25.3647, 0.560042, 1.99", "-5.15571, 26.6277, 0.526197, 1.99", "-5.40604, 27.7558, 0.510071, 1.99", "-5.63163, 28.7892, 0.519016, 1.69", "-5.91702, 30.0419, 0.583627, 1.4", "-6.15937, 31.0895, 0.710321, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018766376804
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.23124, 10.9027, 0.0, 0.52", "-3.2102, 25.7716, 0.0, 0.52", "-5.18917, 40.6405, 0.0, 0.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "5.21848, -30.4146, 1.41055, 0.74", "6.72018, -31.96, 2.07067, 0.74", "7.87945, -33.1504, 2.49126, 0.74", "9.61955, -34.9372, 3.12258, 0.74", "10.7794, -36.1281, 3.54339, 0.74", "12.8117, -38.2149, 4.28072, 0.74", "14.0168, -39.4524, 4.71796, 0.74", "16.149, -41.6177, 5.52623, 0.74" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "5.21848, -30.4146, 1.41055, 1.33", "5.62738, -34.0838, 1.02316, 1.33", "5.88741, -36.4171, 0.776803, 1.33", "6.25437, -39.71, 0.429139, 1.33", "6.47594, -41.6982, 0.219225, 1.33", "6.71603, -43.8525, -0.00823313, 1.33", "7.04314, -46.7878, -0.318136, 1.33" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.15937, 31.0895, 0.710321, 1.18", "-6.33078, 32.9407, 1.27296, 1.18", "-6.38872, 34.3019, 1.53247, 1.18", "-6.40791, 35.5542, 1.70731, 1.18", "-6.41104, 36.6847, 1.80003, 1.18", "-6.41601, 41.0626, 1.7262, 1.25", "-6.37074, 44.491, 1.47875, 0.81", "-6.29556, 45.9717, 1.34375, 0.81", "-6.18899, 47.0036, 1.17697, 0.81", "-5.97177, 48.2148, 0.82772, 0.81", "-5.54816, 50.0292, 0.106721, 0.81", "-5.24098, 51.2074, -0.473545, 0.81", "-4.89585, 52.537, -1.02191, 0.81", "-4.63953, 53.4748, -1.42295, 0.81", "-4.12152, 55.203, -2.11542, 0.81", "-3.81396, 56.1691, -2.47695, 0.81", "-3.39852, 57.4488, -2.90641, 0.81", "-3.12684, 58.3777, -3.24567, 0.81", "-2.7887, 59.7931, -3.77483, 0.81", "-2.50302, 61.1213, -4.21906, 0.81" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.15937, 31.0895, 0.710321, 1.25", "-6.48011, 32.6875, 1.78754, 1.25", "-6.73328, 33.949, 2.63784, 1.25", "-7.24296, 36.4884, 4.34964, 1.25" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-5.18917, 40.6405, 0.0, 0.52", "-7.16813, 55.5094, 0.0, 0.52", "-9.14709, 70.3782, 0.0, 0.52" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "16.149, -41.6177, 5.52623, 0.37", "17.6356, -43.8213, 5.90013, 0.37", "18.6598, -45.2149, 6.2932, 0.37", "19.6334, -46.5099, 6.70367, 0.37", "21.1922, -48.6677, 7.36561, 0.37", "22.3557, -50.2372, 7.9817, 0.37", "23.2066, -51.3452, 8.45915, 0.37", "24.2397, -52.6421, 9.12713, 0.37", "25.2954, -53.9405, 9.82519, 0.37", "26.5735, -55.3707, 10.6262, 0.37", "28.3865, -57.179, 11.5277, 0.37", "29.3784, -58.1118, 12.0315, 0.37", "30.8048, -59.5385, 12.8054, 0.37", "31.1775, -59.9373, 13.0023, 0.37", "32.1068, -61.0077, 13.4973, 0.37", "33.3284, -62.5024, 14.1475, 0.37", "34.4233, -63.9652, 14.6774, 0.37", "35.8561, -65.8908, 15.39, 0.37", "36.8038, -67.2251, 15.896, 0.37", "37.8567, -68.8252, 16.4759, 0.37", "38.417, -69.7883, 16.7904, 0.37", "39.1408, -71.1186, 17.2091, 0.37", "39.8381, -72.1849, 17.4796, 0.37" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "16.149, -41.6177, 5.52623, 0.59", "16.9487, -41.6484, 5.49282, 0.59", "17.3841, -41.6558, 5.47785, 0.59", "18.2885, -41.661, 5.45422, 0.59", "18.8159, -41.6553, 5.41284, 0.52", "19.1483, -41.6592, 5.37831, 0.52", "19.6585, -41.6689, 5.31823, 0.52", "20.1745, -41.6794, 5.24532, 0.52", "20.7338, -41.6992, 5.18427, 0.52", "21.4453, -41.731, 5.13955, 0.52", "22.1349, -41.7792, 5.13163, 0.52", "22.8476, -41.8477, 5.15754, 0.52", "23.3537, -41.9119, 5.20332, 0.52", "24.1097, -42.026, 5.32387, 0.52", "24.7082, -42.1199, 5.45487, 0.52", "25.1882, -42.1981, 5.60575, 0.52", "25.6475, -42.2697, 5.7632, 0.52", "26.2956, -42.383, 6.00368, 0.52", "26.8189, -42.4777, 6.20123, 0.52", "27.4304, -42.586, 6.4203, 0.52", "28.6359, -42.8003, 6.88214, 0.52" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "7.04314, -46.7878, -0.318136, 0.81", "5.50227, -50.8608, -1.25, 0.81", "4.76258, -52.8669, -1.81575, 0.81", "4.21334, -54.3442, -2.23987, 0.81", "3.41393, -56.3258, -2.79446, 0.59", "3.05473, -57.1667, -3.06682, 0.52", "2.39039, -58.692, -3.58595, 0.52", "1.33857, -60.9205, -4.30539, 0.52", "0.714662, -62.0537, -4.7421, 0.52", "0.159011, -62.9474, -5.11063, 0.52", "-1.26471, -64.9951, -5.98279, 0.52", "-1.81942, -65.7107, -6.28763, 0.52", "-3.46114, -67.5889, -7.04516, 0.52", "-4.6331, -68.8903, -7.52766, 0.52", "-6.09365, -70.4341, -8.20918, 0.52", "-7.23299, -71.6847, -8.79227, 0.52", "-7.85841, -72.4131, -9.14769, 0.52", "-8.44376, -73.1528, -9.54458, 0.52", "-9.58938, -74.8066, -10.5171, 0.52", "-10.9674, -77.0413, -11.8709, 0.52", "-11.6585, -78.3515, -12.6869, 0.52", "-12.4896, -80.1394, -13.771, 0.52", "-12.7641, -80.761, -14.1721, 0.52", "-13.7875, -83.1461, -15.7314, 0.52", "-14.2724, -84.3188, -16.4573, 0.52", "-15.0112, -86.2684, -17.6313, 0.52", "-15.4998, -87.5529, -18.3953, 0.52", "-16.452, -90.1007, -19.77, 0.52", "-16.6453, -90.6604, -20.0473, 0.52", "-17.1013, -92.1435, -20.6724, 0.52", "-17.8584, -94.5681, -21.5923, 0.52", "-18.3218, -95.9829, -22.0103, 0.52", "-19.0029, -97.9901, -22.4973, 0.52", "-19.7374, -100.017, -22.9321, 0.52", "-20.3125, -101.443, -23.2017, 0.52", "-21.404, -103.793, -23.7072, 0.52", "-22.4416, -105.805, -24.1357, 0.52", "-22.914, -106.623, -24.3699, 0.52", "-24.4281, -109.062, -25.1742, 0.52", "-26.0416, -111.513, -26.1913, 0.52", "-27.9103, -114.238, -27.5105, 0.52", "-29.0757, -115.901, -28.4823, 0.52", "-30.9045, -118.507, -30.1869, 0.52", "-31.6372, -119.569, -30.9433, 0.52", "-33.5256, -122.392, -33.029, 0.52", "-33.8147, -122.864, -33.4172, 0.52", "-35.3371, -125.698, -35.6471, 0.52", "-35.9998, -127.094, -36.8139, 0.52", "-36.8568, -129.205, -38.5312, 0.52", "-37.3636, -130.515, -39.6144, 0.52", "-38.4406, -133.418, -41.8881, 0.52", "-38.9403, -134.849, -42.9777, 0.52", "-39.862, -137.642, -45.0648, 0.52", "-40.1654, -138.536, -45.7274, 0.52", "-40.9384, -140.753, -47.2027, 0.52", "-41.2756, -141.677, -47.7461, 0.52", "-41.7552, -142.932, -48.2979, 0.52", "-42.7731, -145.52, -49.1264, 0.52", "-43.4054, -146.889, -49.3996, 0.52", "-44.2215, -148.328, -49.6135, 0.52", "-44.8819, -149.337, -49.6946, 0.52", "-45.5617, -150.224, -49.7394, 0.52", "-46.9274, -151.679, -49.7207, 0.52", "-49.3649, -153.939, -49.6747, 0.52", "-51.2672, -155.595, -49.931, 0.52", "-52.6055, -156.738, -50.2265, 0.52", "-53.6466, -157.646, -50.5189, 0.52", "-56.0998, -159.887, -51.3011, 0.52", "-58.2101, -161.925, -52.1041, 0.52", "-61.3193, -165.198, -53.3887, 0.52", "-62.9849, -167.022, -54.1276, 0.52", "-63.9077, -168.062, -54.5663, 0.52", "-65.8077, -170.318, -55.6092, 0.52", "-68.0124, -173.074, -56.8697, 0.52", "-68.6978, -173.958, -57.2257, 0.52", "-70.0345, -175.693, -58.0099, 0.52", "-71.634, -177.866, -59.1638, 0.52", "-73.5697, -180.665, -60.714, 0.52", "-74.903, -182.735, -61.8718, 0.52", "-75.5424, -183.791, -62.4287, 0.52", "-78.03, -187.927, -64.4977, 0.52", "-78.998, -189.593, -65.2526, 0.52", "-80.1054, -191.407, -66.0233, 0.52", "-80.6943, -192.334, -66.381, 0.52", "-81.9363, -194.103, -67.3633, 0.52", "-82.9369, -195.385, -68.1777, 0.52", "-83.8068, -196.427, -68.8472, 0.52", "-86.3154, -199.278, -70.9929, 0.52", "-87.6458, -200.743, -72.2265, 0.52", "-91.3816, -204.843, -75.9733, 0.52", "-92.1893, -205.735, -76.8636, 0.52", "-93.2384, -206.939, -78.1516, 0.52", "-94.7073, -208.611, -80.0472, 0.52" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "7.04314, -46.7878, -0.318136, 1.33", "7.04395, -46.8413, -0.311324, 1.33", "7.07593, -49.0085, -0.0861542, 1.33", "7.1056, -52.0219, 0.177698, 1.33", "7.12406, -53.7913, 0.3773, 1.33", "7.1581, -55.5678, 0.597885, 1.18", "7.20182, -57.0303, 0.811779, 1.18", "7.29521, -59.0289, 1.13175, 1.18", "7.39156, -60.69, 1.41563, 1.18", "7.45503, -62.222, 1.69989, 1.18", "7.48271, -64.1325, 2.08926, 1.18", "7.47815, -66.1961, 2.56181, 1.18", "7.46212, -67.9244, 2.96898, 1.18", "7.4518, -68.9789, 3.23, 1.18", "7.39914, -70.819, 3.66137, 1.18", "7.30498, -72.4951, 4.00151, 1.03", "7.21519, -73.6922, 4.2474, 1.03", "7.01693, -75.9749, 4.69389, 1.03", "6.88796, -77.4835, 5.00391, 1.03", "6.74988, -79.3888, 5.39094, 1.03", "6.62192, -81.1108, 5.70824, 1.03" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-2.50302, 61.1213, -4.21906, 0.52", "-3.374, 62.9536, -5.69276, 0.52", "-3.85639, 63.9902, -6.53207, 0.52", "-5.01906, 66.3212, -8.29925, 0.52", "-5.34631, 66.9367, -8.73419, 0.52", "-5.95688, 67.9902, -9.42725, 0.52", "-6.41736, 68.7606, -9.89699, 0.52", "-7.3628, 70.3447, -10.7856, 0.52", "-8.04157, 71.5464, -11.4113, 0.52", "-8.5195, 72.4302, -11.799, 0.52", "-9.01864, 73.3726, -12.2367, 0.52", "-9.40045, 74.1035, -12.5707, 0.52", "-10.2385, 75.7364, -13.3959, 0.52", "-10.5752, 76.4181, -13.738, 0.52", "-10.8818, 77.0271, -14.088, 0.52", "-11.3384, 77.8633, -14.5825, 0.52", "-11.8241, 78.6444, -15.1334, 0.52", "-13.1313, 80.4357, -16.4876, 0.52", "-13.5419, 80.9767, -16.8772, 0.52", "-13.8685, 81.4225, -17.1932, 0.52", "-14.4479, 82.2392, -17.7407, 0.52", "-15.7039, 84.0049, -18.8541, 0.52", "-16.1376, 84.6103, -19.1709, 0.52", "-16.8488, 85.5926, -19.6228, 0.52", "-17.4, 86.4178, -20.002, 0.52", "-17.9865, 87.3678, -20.505, 0.52", "-18.4623, 88.1862, -21.0747, 0.52", "-18.927, 89.0536, -21.752, 0.52", "-19.6955, 90.6899, -23.2628, 0.52", "-20.013, 91.5452, -24.223, 0.52", "-20.293, 92.8287, -25.7382, 0.52", "-20.3124, 94.6256, -27.9866, 0.52", "-20.2693, 94.8784, -28.3385, 0.52", "-20.1026, 95.3564, -29.0775, 0.52", "-19.5894, 96.2469, -30.6574, 0.52", "-19.0826, 96.9672, -32.0399, 0.52", "-18.2908, 97.9988, -33.9385, 0.52", "-17.1804, 99.3091, -36.2902, 0.52", "-16.8937, 99.6441, -36.8877, 0.52", "-16.0283, 100.613, -38.6492, 0.52", "-15.5923, 101.037, -39.3919, 0.52", "-15.167, 101.378, -40.0597, 0.52", "-14.7351, 101.694, -40.6343, 0.52", "-14.3449, 101.906, -41.1664, 0.52", "-12.8548, 102.615, -43.282, 0.52", "-12.2957, 102.833, -44.3434, 0.52", "-11.1492, 103.112, -46.8606, 0.52", "-10.6023, 103.181, -48.0978, 0.52", "-8.96187, 103.222, -52.0678, 0.52", "-8.59438, 103.203, -52.9378, 0.52", "-5.0668, 102.792, -60.7866, 0.52", "-3.74777, 102.574, -63.5678, 0.52", "-3.0223, 102.402, -65.067, 0.52", "-1.0838, 101.809, -69.1053, 0.52", "-0.211616, 101.5, -70.7998, 0.52", "0.482942, 101.21, -72.1062, 0.52", "2.67392, 100.167, -75.796, 0.52", "4.65594, 99.1712, -79.1263, 0.52", "6.46685, 98.1957, -82.3413, 0.52", "7.07556, 97.8261, -83.4444, 0.52", "8.41998, 96.874, -86.1838, 0.52", "9.15927, 96.2809, -87.7931, 0.52", "9.54014, 95.9659, -88.5426, 0.52" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-2.50302, 61.1213, -4.21906, 0.81", "-2.06649, 62.2439, -4.32708, 0.81", "-1.71375, 63.2298, -4.50107, 0.81", "-1.32639, 64.2099, -4.70534, 0.81", "-0.805266, 65.3432, -4.95378, 0.81", "-0.308421, 66.3263, -5.17151, 0.81", "0.224594, 67.3811, -5.4051, 0.81", "1.03713, 69.0491, -5.76569, 0.81", "1.53892, 70.0803, -6.00826, 0.81", "2.34589, 71.5882, -6.41008, 0.81", "2.79801, 72.2861, -6.62688, 0.81" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-7.24296, 36.4884, 4.34964, 0.81", "-6.5322, 37.5134, 6.35422, 0.81", "-6.32782, 37.6965, 7.02636, 0.81", "-5.85252, 37.9301, 8.48266, 0.81", "-5.48992, 38.0176, 9.44102, 0.59", "-5.20168, 38.0603, 10.1176, 0.52", "-4.62975, 38.1462, 11.2911, 0.52", "-3.60897, 38.122, 12.8458, 0.52", "-3.19696, 38.1007, 13.382, 0.52", "-2.70493, 38.0828, 13.9311, 0.52", "-2.09911, 38.0797, 14.5743, 0.52", "-1.4518, 38.0846, 15.2784, 0.52", "-0.938988, 38.083, 15.7847, 0.52", "-0.442334, 38.0234, 16.2439, 0.52", "0.332987, 37.7597, 17.096, 0.52", "0.964104, 37.3826, 17.8431, 0.52", "1.55033, 36.9211, 18.5144, 0.52", "1.99539, 36.5243, 19.0021, 0.52", "2.54179, 36.0538, 19.5917, 0.52", "2.93996, 35.7379, 20.0082, 0.52", "3.41904, 35.3991, 20.4411, 0.52", "3.85619, 35.1113, 20.8099, 0.52", "4.20888, 34.9061, 21.104, 0.52", "5.35645, 34.2801, 22.1286, 0.52", "6.11493, 33.8638, 22.8691, 0.52", "6.65757, 33.5452, 23.4176, 0.52", "7.14298, 33.2111, 23.9904, 0.52" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-7.24296, 36.4884, 4.34964, 0.88", "-8.88506, 37.3111, 5.71409, 0.88", "-10.2035, 38.0256, 6.70791, 0.88", "-11.6531, 38.8786, 7.67854, 0.81", "-12.7113, 39.5125, 8.28041, 0.81", "-14.2898, 40.4341, 9.13746, 0.81", "-15.3028, 41.0255, 9.68746, 0.81", "-16.4243, 41.6777, 10.1995, 0.81", "-17.5785, 42.3483, 10.6348, 0.81", "-19.0707, 43.2168, 11.0533, 0.81", "-20.3244, 43.9969, 11.3762, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "39.8381, -72.1849, 17.4796, 0.37", "43.7358, -71.4918, 21.9794, 0.37", "44.2436, -71.5109, 22.555, 0.37", "45.2969, -71.6888, 23.6455, 0.37", "46.2864, -71.8924, 24.5843, 0.37", "48.2256, -72.2778, 26.2824, 0.37", "49.7002, -72.5332, 27.4547, 0.37", "51.5496, -72.9892, 28.444, 0.37", "52.6733, -73.2957, 29.0268, 0.37", "53.3817, -73.5157, 29.5181, 0.37", "54.0876, -73.7351, 30.0076, 0.37", "55.2391, -74.006, 30.7531, 0.37", "57.3192, -74.2808, 32.1726, 0.37", "58.1328, -74.3554, 32.756, 0.37", "61.7911, -74.8623, 35.9917, 0.37" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "39.8381, -72.1849, 17.4796, 0.37", "40.7312, -72.4941, 17.1053, 0.37", "41.3868, -72.6965, 16.8781, 0.37", "41.856, -72.836, 16.7386, 0.37", "42.5427, -73.0574, 16.557, 0.37", "42.9407, -73.1969, 16.4525, 0.37", "43.3231, -73.3495, 16.3552, 0.37", "43.7863, -73.579, 16.2168, 0.37", "44.2261, -73.8402, 16.117, 0.37", "44.6021, -74.1216, 16.0547, 0.37", "44.8279, -74.3311, 16.0245, 0.37", "45.3199, -74.8743, 15.9327, 0.37", "45.7029, -75.3477, 15.8262, 0.37", "45.9497, -75.6956, 15.6766, 0.37", "46.2913, -76.208, 15.3914, 0.37", "46.6594, -76.7787, 15.0208, 0.37", "47.1141, -77.5094, 14.5059, 0.37", "47.3923, -77.9851, 14.112, 0.37", "48.1329, -79.2945, 12.909, 0.37", "48.2428, -79.491, 12.7048, 0.37", "48.3631, -79.7118, 12.4569, 0.37", "48.5251, -80.0353, 12.0957, 0.37", "48.7753, -80.6296, 11.4857, 0.37", "48.8615, -80.8852, 11.2661, 0.37", "49.0887, -81.5971, 10.7945, 0.37", "49.1799, -81.9068, 10.5728, 0.37", "49.2989, -82.2918, 10.2923, 0.37", "49.4803, -82.8771, 9.88552, 0.37", "49.6454, -83.3842, 9.55598, 0.37", "49.7579, -83.7196, 9.34497, 0.37", "50.0495, -84.6397, 8.7934, 0.37", "50.2309, -85.2353, 8.43892, 0.37", "50.3189, -85.5365, 8.26492, 0.37", "50.5203, -86.2416, 7.88902, 0.37", "50.6471, -86.6848, 7.66786, 0.37", "50.813, -87.3158, 7.33718, 0.37", "50.9249, -87.7302, 7.10175, 0.37", "51.0057, -87.9725, 6.90757, 0.37", "51.0679, -88.1044, 6.75278, 0.37", "51.1959, -88.2944, 6.4564, 0.37", "51.5261, -88.6264, 5.78247, 0.37", "51.8524, -88.8571, 5.2105, 0.37", "52.2132, -89.0628, 4.62726, 0.37", "52.662, -89.3285, 3.91229, 0.37", "52.8369, -89.4456, 3.63225, 0.37", "53.0693, -89.6071, 3.26675, 0.37", "53.228, -89.7093, 3.04803, 0.37", "53.5784, -89.9415, 2.59143, 0.37", "54.0305, -90.2786, 1.99688, 0.37", "54.4749, -90.6462, 1.41434, 0.37", "54.7435, -90.8939, 1.0325, 0.37", "54.9753, -91.1241, 0.69973, 0.37", "55.418, -91.5514, 0.0808659, 0.37", "55.835, -91.9254, -0.450909, 0.37", "56.0511, -92.1098, -0.712175, 0.37", "56.3836, -92.4311, -1.14618, 0.37", "56.6267, -92.6936, -1.48394, 0.37", "56.9329, -93.0602, -1.97593, 0.37", "57.1147, -93.2742, -2.26388, 0.37", "57.4131, -93.6545, -2.74351, 0.37", "57.7133, -94.0968, -3.26855, 0.37", "57.7965, -94.2274, -3.40646, 0.37", "58.1619, -94.8348, -4.00281, 0.37", "58.4178, -95.2805, -4.42429, 0.37", "58.713, -95.7972, -4.938, 0.37", "58.9445, -96.2199, -5.40359, 0.37", "59.1989, -96.6883, -5.95275, 0.37", "59.3678, -97.0268, -6.39222, 0.37", "59.7466, -97.8339, -7.47037, 0.37", "59.974, -98.3254, -8.15185, 0.37", "60.3796, -99.1876, -9.4018, 0.37", "60.4847, -99.4036, -9.7464, 0.37", "60.9048, -100.21, -11.1564, 0.37", "61.0803, -100.497, -11.6917, 0.37", "61.2369, -100.703, -12.1036, 0.37", "61.735, -101.247, -13.28, 0.37", "62.4221, -101.828, -14.6788, 0.37", "62.6972, -102.011, -15.1628, 0.37", "63.275, -102.294, -16.0076, 0.37", "63.5433, -102.403, -16.4082, 0.37", "64.1304, -102.597, -17.1747, 0.37", "64.6255, -102.718, -17.6869, 0.37", "65.5549, -102.906, -18.4687, 0.37", "65.8557, -102.965, -18.7147, 0.37", "67.553, -103.363, -20.2009, 0.37", "68.4643, -103.611, -21.0472, 0.37", "68.8534, -103.721, -21.4112, 0.37", "69.1332, -103.831, -21.7735, 0.37", "69.7839, -104.195, -22.8907, 0.37", "70.4181, -104.699, -24.2673, 0.37", "70.5146, -104.813, -24.5635, 0.37", "70.6509, -105.054, -25.1845, 0.37", "70.9906, -105.993, -27.6269, 0.37", "71.1115, -106.446, -28.7524, 0.37", "71.2502, -107.102, -30.2934, 0.37", "71.4072, -108.003, -32.2808, 0.37", "71.5151, -108.713, -33.6863, 0.37", "71.6619, -109.895, -35.7371, 0.37", "71.738, -110.414, -36.4786, 0.37", "71.7938, -110.763, -36.908, 0.37", "71.9575, -111.572, -37.7302, 0.37", "72.1927, -112.483, -38.4932, 0.37", "72.6359, -113.873, -39.503, 0.37", "72.9689, -114.713, -40.0351, 0.37", "73.7696, -116.441, -41.2295, 0.37", "74.1671, -117.173, -41.774, 0.37", "74.4387, -117.601, -42.0975, 0.37", "74.957, -118.305, -42.6039, 0.37", "75.7609, -119.295, -43.2484, 0.37", "77.2875, -121.091, -44.286, 0.37", "78.6538, -122.668, -45.1447, 0.37", "79.2815, -123.402, -45.549, 0.37", "80.8273, -125.257, -46.549, 0.37", "81.5974, -126.21, -47.0342, 0.37", "82.9589, -127.891, -47.7699, 0.37" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "28.6359, -42.8003, 6.88214, 0.44", "29.2955, -42.7338, 7.31804, 0.44", "30.3041, -42.6321, 7.98459, 0.44", "31.1801, -42.5438, 8.56344, 0.44", "31.7942, -42.4819, 8.96931, 0.44" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "28.6359, -42.8003, 6.88214, 0.44", "29.0486, -41.8301, 6.86391, 0.44", "29.3202, -41.1915, 6.85192, 0.44", "29.6884, -40.3257, 6.83566, 0.44" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-94.7073, -208.611, -80.0472, 0.52", "-94.5382, -210.005, -79.9083, 0.52", "-94.4879, -210.714, -79.8229, 0.52", "-94.4413, -211.774, -79.8383, 0.52", "-94.4202, -213.092, -79.9129, 0.52", "-94.4289, -214.143, -79.9783, 0.52", "-94.4576, -215.459, -80.1075, 0.52", "-94.5342, -216.57, -80.2265, 0.52", "-94.7491, -219.217, -80.7095, 0.44", "-94.8281, -220.246, -80.9463, 0.44", "-94.9341, -221.724, -81.3433, 0.44", "-95.0748, -223.665, -81.9747, 0.44", "-95.2254, -225.567, -82.6712, 0.44", "-95.4293, -228.217, -83.798, 0.44", "-95.4756, -228.915, -84.1442, 0.44", "-95.5254, -229.674, -84.5715, 0.44", "-95.6401, -231.19, -85.4806, 0.44", "-95.7153, -231.979, -86.0017, 0.44", "-95.9611, -234.103, -87.468, 0.44", "-96.2406, -236.054, -88.7341, 0.44", "-96.447, -237.151, -89.3778, 0.44", "-96.6762, -238.133, -89.8822, 0.44", "-97.5382, -240.877, -91.1176, 0.44", "-97.9508, -241.912, -91.5294, 0.44", "-98.4533, -242.964, -91.8903, 0.44", "-99.5593, -245.125, -92.5176, 0.44", "-100.029, -246.018, -92.7437, 0.44", "-101.378, -248.506, -93.2152, 0.44", "-102.129, -249.869, -93.3761, 0.44", "-103.112, -251.672, -93.5553, 0.44", "-104.319, -253.876, -93.6244, 0.44", "-105.479, -256.014, -93.5416, 0.44", "-106.943, -258.733, -93.2419, 0.44", "-107.712, -260.178, -92.9606, 0.44", "-108.521, -261.679, -92.5931, 0.44", "-109.771, -263.925, -91.9197, 0.44", "-110.727, -265.588, -91.3586, 0.44", "-111.442, -266.821, -90.8818, 0.44", "-112.198, -268.101, -90.3116, 0.44", "-112.834, -269.169, -89.8143, 0.44" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-94.7073, -208.611, -80.0472, 0.52", "-95.6325, -209.358, -81.1328, 0.52", "-98.0607, -211.682, -84.4678, 0.52", "-98.7439, -212.405, -85.429, 0.52", "-99.2718, -213.022, -86.1994, 0.52", "-99.553, -213.367, -86.6202, 0.52", "-100.013, -213.951, -87.3533, 0.52", "-101.63, -216.08, -89.9552, 0.52", "-102.055, -216.654, -90.5867, 0.52", "-102.498, -217.257, -91.2631, 0.52", "-103.506, -218.579, -92.7531, 0.52", "-104.935, -220.455, -94.7319, 0.52", "-105.612, -221.407, -95.6777, 0.52", "-106.142, -222.162, -96.3433, 0.52", "-107.297, -223.941, -97.7922, 0.52", "-107.723, -224.645, -98.2999, 0.52", "-108.318, -225.81, -99.0207, 0.52", "-109.349, -228.179, -100.287, 0.52", "-109.843, -229.476, -100.928, 0.52", "-110.237, -230.582, -101.407, 0.52", "-110.641, -231.755, -101.918, 0.52", "-111.193, -233.224, -102.594, 0.52", "-111.477, -233.868, -102.898, 0.52", "-112.146, -235.175, -103.478, 0.52", "-112.822, -236.355, -104.029, 0.52", "-114.695, -239.152, -105.338, 0.52", "-115.46, -240.12, -105.85, 0.52", "-115.997, -240.669, -106.172, 0.52", "-116.788, -241.392, -106.723, 0.52", "-117.599, -242.075, -107.418, 0.52", "-118.978, -243.114, -108.673, 0.52", "-120.555, -244.186, -110.102, 0.52", "-121.702, -244.97, -111.301, 0.52", "-123.578, -246.316, -113.352, 0.52", "-125.755, -247.89, -115.76, 0.52", "-126.481, -248.466, -116.667, 0.52", "-127.152, -249.058, -117.542, 0.52", "-129.051, -250.925, -120.01, 0.52", "-130.148, -252.172, -121.478, 0.52", "-130.672, -252.912, -122.143, 0.52", "-132.472, -256.418, -124.495, 0.52", "-133.015, -257.925, -125.272, 0.52", "-133.304, -259.045, -125.57, 0.52", "-133.539, -260.358, -125.554, 0.52", "-133.973, -263.123, -124.885, 0.52", "-134.281, -264.799, -124.187, 0.52", "-134.564, -266.073, -123.532, 0.52", "-135.591, -269.798, -121.304, 0.52", "-136.039, -271.083, -120.477, 0.52", "-136.876, -273.108, -119.135, 0.52", "-137.622, -274.634, -118.058, 0.52", "-138.64, -276.573, -116.669, 0.52", "-139.956, -278.998, -115.074, 0.52", "-141.024, -281.01, -114.197, 0.52", "-141.991, -282.866, -113.402, 0.52" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "6.62192, -81.1108, 5.70824, 0.66", "5.64948, -82.4187, 5.48942, 0.66", "4.96637, -83.1446, 5.47188, 0.66", "4.16141, -83.9192, 5.51848, 0.66", "3.41645, -84.6115, 5.57893, 0.66", "2.11203, -85.7747, 5.77235, 0.66", "1.15859, -86.5827, 5.9418, 0.66", "-0.524598, -87.8608, 6.31068, 0.66", "-1.86928, -88.8005, 6.6839, 0.66", "-2.58587, -89.2608, 6.9019, 0.66", "-3.84493, -90.0311, 7.3402, 0.66", "-4.88799, -90.6715, 7.78332, 0.66", "-5.5752, -91.1189, 8.08335, 0.66", "-6.70288, -91.8959, 8.49464, 0.66" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "6.62192, -81.1108, 5.70824, 0.81", "6.62703, -83.089, 5.70837, 0.81", "6.62103, -84.9036, 5.68505, 0.81", "6.59092, -87.2726, 5.64552, 0.81", "6.56868, -88.4481, 5.62535, 0.81", "6.55671, -90.1946, 5.59566, 0.81", "6.58106, -92.2044, 5.56351, 0.81", "6.58873, -94.2873, 5.52464, 0.81", "6.59978, -96.2438, 5.48302, 0.81", "6.6231, -97.8281, 5.46989, 0.81", "6.66588, -99.3519, 5.47929, 0.81", "6.74978, -101.588, 5.52964, 0.81", "6.82984, -103.341, 5.59844, 0.81", "6.8799, -104.397, 5.64666, 0.81", "6.94431, -105.619, 5.71201, 0.81", "7.01374, -107.305, 5.81913, 0.81", "7.01286, -108.797, 5.93598, 0.81" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.79801, 72.2861, -6.62688, 0.52", "4.5263, 72.5571, -6.5599, 0.52", "5.75599, 72.8026, -6.48439, 0.52", "6.40914, 72.9521, -6.43183, 0.52", "7.37869, 73.1703, -6.33576, 0.52", "8.35324, 73.378, -6.31632, 0.52", "9.19348, 73.5354, -6.33436, 0.52", "10.2366, 73.6826, -6.41108, 0.52", "11.5237, 73.7995, -6.52258, 0.52", "12.219, 73.8261, -6.58, 0.52", "14.3535, 73.8004, -6.73828, 0.52", "15.2834, 73.7173, -6.78518, 0.52", "16.5639, 73.4962, -6.85602, 0.52", "18.2289, 73.1088, -6.92653, 0.52", "19.1046, 72.8739, -6.93728, 0.52", "19.9272, 72.653, -6.90671, 0.52", "21.0332, 72.3619, -6.78827, 0.52", "22.1953, 72.0868, -6.67668, 0.52", "23.2539, 71.8683, -6.58333, 0.52", "24.2624, 71.6819, -6.53965, 0.52", "25.4575, 71.4799, -6.4679, 0.52", "26.4955, 71.3424, -6.38162, 0.52", "27.1067, 71.3042, -6.31401, 0.52", "28.2999, 71.2932, -6.14282, 0.52", "29.5027, 71.3281, -5.97029, 0.52", "30.7252, 71.395, -5.79497, 0.52", "31.7319, 71.445, -5.72465, 0.52", "32.9144, 71.486, -5.71825, 0.52", "33.6496, 71.5196, -5.75383, 0.52", "34.1702, 71.5664, -5.80358, 0.52", "35.0849, 71.6593, -5.90677, 0.52", "37.2261, 71.8328, -6.31303, 0.52", "37.9676, 71.87, -6.48511, 0.52", "38.8506, 71.9105, -6.70444, 0.52", "40.1551, 72.0512, -7.01922, 0.52", "41.1809, 72.2409, -7.23765, 0.52", "42.8653, 72.6716, -7.50763, 0.52", "43.6711, 72.9241, -7.56577, 0.52", "44.3769, 73.1583, -7.60566, 0.52", "45.4201, 73.4547, -7.63969, 0.52", "46.1394, 73.6257, -7.6354, 0.52", "46.957, 73.7863, -7.58383, 0.52", "47.8699, 73.9001, -7.45297, 0.52", "48.8058, 73.9402, -7.40269, 0.52", "49.8217, 73.8729, -7.4134, 0.52", "50.7734, 73.7487, -7.45424, 0.52", "51.8939, 73.5791, -7.51658, 0.52", "52.6518, 73.4672, -7.61776, 0.52", "54.6278, 73.1854, -7.96659, 0.52", "56.4062, 72.9866, -8.31996, 0.52", "58.0331, 72.8894, -8.6496, 0.52", "59.2263, 72.8603, -8.88047, 0.52", "61.476, 72.8542, -9.34516, 0.52", "62.4529, 72.8587, -9.53752, 0.52", "63.4274, 72.885, -9.69316, 0.52", "64.5763, 72.9617, -9.88824, 0.52", "65.5684, 73.0524, -10.04, 0.52", "67.2968, 73.2648, -10.2852, 0.52", "68.0799, 73.3621, -10.3611, 0.52", "69.2441, 73.503, -10.489, 0.52", "70.0049, 73.5855, -10.5723, 0.52", "71.1191, 73.6984, -10.6774, 0.52", "72.8661, 73.8698, -10.7864, 0.52", "73.8892, 73.994, -10.8142, 0.52", "75.015, 74.1631, -10.8748, 0.52", "75.7551, 74.2891, -10.9239, 0.52", "76.6453, 74.4842, -10.972, 0.52", "77.386, 74.6481, -10.9921, 0.52", "78.2958, 74.8541, -10.9761, 0.52", "79.2996, 75.0809, -10.9543, 0.52", "80.5936, 75.3541, -10.9114, 0.52", "82.2821, 75.6837, -10.8249, 0.52", "83.4081, 75.8632, -10.7443, 0.52", "84.6917, 76.0104, -10.6205, 0.52", "85.5879, 76.0834, -10.5082, 0.52", "86.775, 76.1722, -10.338, 0.52", "88.0075, 76.2848, -10.1613, 0.52", "88.8647, 76.3969, -10.0385, 0.52", "89.9639, 76.6234, -9.92119, 0.52", "90.7845, 76.8432, -9.86182, 0.52", "91.5455, 77.0793, -9.83234, 0.52", "92.4822, 77.3713, -9.85747, 0.52", "93.285, 77.6201, -9.91956, 0.52", "94.5107, 77.9603, -10.0948, 0.52", "95.5121, 78.1699, -10.2898, 0.52", "96.1264, 78.2389, -10.4405, 0.52", "97.4315, 78.3221, -10.782, 0.52", "98.1025, 78.3515, -10.9567, 0.52", "99.4925, 78.4032, -11.2953, 0.52", "100.491, 78.4337, -11.4993, 0.52", "102.303, 78.4725, -11.8315, 0.52", "103.415, 78.5001, -12.0085, 0.52", "104.247, 78.5438, -12.11, 0.52", "104.786, 78.588, -12.1824, 0.52", "105.672, 78.7083, -12.3368, 0.52", "106.274, 78.8371, -12.4998, 0.52", "107.427, 79.1657, -13.0336, 0.52", "108.357, 79.4838, -13.6046, 0.52", "109.436, 79.9179, -14.3513, 0.52", "110.626, 80.4234, -15.211, 0.52", "111.807, 80.9097, -16.1541, 0.52", "113.442, 81.4848, -17.5676, 0.52", "113.978, 81.6251, -18.0875, 0.52", "114.741, 81.774, -18.8617, 0.52", "115.429, 81.8761, -19.549, 0.52", "116.91, 82.0808, -20.9715, 0.52", "118.564, 82.3139, -22.4733, 0.52", "120.896, 82.7515, -24.5038, 0.52", "121.954, 83.0341, -25.4515, 0.52", "122.308, 83.1635, -25.7622, 0.52", "123.137, 83.5605, -26.458, 0.52", "123.775, 83.9225, -26.9158, 0.52", "125.199, 84.7663, -27.7541, 0.52", "126.978, 85.7781, -28.6663, 0.52", "127.909, 86.2647, -29.138, 0.52", "129.868, 87.205, -30.0764, 0.52", "131.009, 87.7129, -30.5907, 0.52", "132.35, 88.3068, -31.2061, 0.52", "133.871, 88.9863, -31.9337, 0.52", "135.927, 89.9534, -33.082, 0.52", "137.056, 90.5297, -33.779, 0.52", "137.349, 90.6951, -33.9631, 0.52", "139.191, 91.8555, -35.2365, 0.52", "140.893, 93.048, -36.4521, 0.52", "142.709, 94.4696, -37.8034, 0.52", "143.645, 95.3133, -38.5967, 0.52", "144.591, 96.2574, -39.4447, 0.52", "145.888, 97.6199, -40.6237, 0.52", "146.688, 98.5195, -41.3276, 0.52", "148.192, 100.313, -42.6256, 0.52", "149.695, 102.14, -44.0533, 0.52", "150.43, 103.071, -44.8283, 0.52", "151.666, 104.65, -46.1693, 0.52", "152.268, 105.408, -46.8058, 0.52", "152.997, 106.292, -47.5196, 0.52", "154.795, 108.413, -49.0273, 0.52", "155.662, 109.461, -49.6681, 0.52", "156.202, 110.157, -50.0499, 0.52", "157.856, 112.421, -51.1795, 0.52", "158.736, 113.672, -51.745, 0.52", "159.353, 114.599, -52.0949, 0.52", "160.195, 115.942, -52.4782, 0.52", "160.714, 116.827, -52.7196, 0.52", "162.142, 119.611, -53.3867, 0.52", "162.965, 121.597, -53.7393, 0.52", "163.372, 122.723, -54.0216, 0.52", "163.618, 123.541, -54.2584, 0.52", "163.827, 124.399, -54.5194, 0.52", "164.07, 125.629, -54.9343, 0.52", "164.464, 128.039, -55.7505, 0.52", "165.109, 131.369, -57.0796, 0.52", "165.467, 132.949, -57.7395, 0.52", "165.796, 134.194, -58.3025, 0.52", "166.634, 137.087, -59.6918, 0.52", "167.278, 139.146, -60.7712, 0.52", "168.233, 141.88, -62.3398, 0.52", "168.713, 143.129, -63.0325, 0.52", "169.498, 144.898, -64.0298, 0.52", "170.062, 146.038, -64.6573, 0.52", "171.029, 147.717, -65.5002, 0.52", "172.924, 150.478, -66.7632, 0.52", "174.312, 152.23, -67.4079, 0.52", "175.661, 153.715, -67.9274, 0.52", "176.647, 154.678, -68.2714, 0.52", "178.401, 156.262, -69.0045, 0.52", "179.64, 157.373, -69.6418, 0.52", "180.233, 157.879, -69.9747, 0.52", "182.205, 159.558, -71.3649, 0.52", "183.938, 161.102, -72.8991, 0.52", "185.876, 162.999, -75.0506, 0.52", "187.107, 164.392, -76.8381, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "2.79801, 72.2861, -6.62688, 0.81", "3.19302, 73.1394, -6.62863, 0.81", "3.54055, 74.0056, -6.66032, 0.81", "3.73047, 74.6129, -6.69654, 0.81", "3.90431, 75.3823, -6.75393, 0.81", "4.04091, 76.2232, -6.82062, 0.52", "4.14013, 76.9677, -6.91386, 0.59", "4.21009, 77.6174, -7.0561, 0.59", "4.26105, 78.2548, -7.22971, 0.59", "4.30838, 78.8631, -7.40676, 0.59", "4.38443, 79.6328, -7.63289, 0.59", "4.55216, 80.885, -7.9839, 0.59", "4.79415, 82.0609, -8.30591, 0.59", "5.07865, 82.9907, -8.55425, 0.59", "5.33321, 83.6368, -8.72253, 0.59", "5.5633, 84.1414, -8.85051, 0.59", "5.83732, 84.6887, -9.00085, 0.59", "6.30418, 85.565, -9.22803, 0.59", "6.66584, 86.2499, -9.40732, 0.59", "6.97543, 86.8681, -9.58504, 0.59", "7.38646, 87.7515, -9.83073, 0.59", "7.77051, 88.6189, -10.0491, 0.59", "8.0449, 89.2211, -10.1979, 0.59", "8.35646, 89.9549, -10.3564, 0.59", "8.57914, 90.5177, -10.4908, 0.59", "8.93015, 91.3829, -10.756, 0.59", "9.15678, 91.9135, -10.9439, 0.59", "9.60477, 92.9186, -11.3223, 0.59", "9.96855, 93.7067, -11.646, 0.59", "10.3515, 94.5382, -11.9722, 0.59", "10.8643, 95.647, -12.4365, 0.59", "11.0549, 96.0759, -12.6258, 0.59", "11.3945, 96.8685, -12.9678, 0.59", "11.7774, 97.8177, -13.3165, 0.59", "12.3694, 99.2068, -13.7542, 0.59" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "7.14298, 33.2111, 23.9904, 0.52", "8.07931, 33.9259, 24.906, 0.52", "8.91007, 34.5064, 25.6136, 0.52", "9.73154, 35.1259, 26.3525, 0.52", "10.6037, 35.8775, 27.1702, 0.52", "12.0258, 37.3643, 28.701, 0.52", "12.6933, 38.2226, 29.5037, 0.52", "13.292, 39.2302, 30.3586, 0.52", "14.1201, 40.8586, 31.5059, 0.52", "14.5168, 41.8014, 32.0298, 0.52", "15.1023, 43.4982, 32.7623, 0.52", "15.4691, 44.8811, 33.2051, 0.52", "15.6448, 45.7917, 33.4676, 0.52", "15.8468, 47.2569, 33.7922, 0.52", "15.9813, 47.9296, 33.8391, 0.52", "16.4081, 49.101, 33.8199, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "7.14298, 33.2111, 23.9904, 0.52", "8.03001, 32.3372, 24.1032, 0.52", "9.00694, 31.2222, 24.3637, 0.52", "9.51678, 30.6094, 24.5578, 0.52", "9.976, 30.0558, 24.794, 0.52", "10.6582, 29.2204, 25.1697, 0.52", "11.5537, 28.0917, 25.6658, 0.52", "12.6884, 26.6103, 26.3391, 0.52", "13.461, 25.5278, 26.7901, 0.52", "14.348, 24.2719, 27.2997, 0.52", "15.0027, 23.4021, 27.6485, 0.52", "15.6305, 22.6566, 27.9277, 0.52", "16.1943, 22.0919, 28.0832, 0.52", "16.9024, 21.5306, 28.1599, 0.52", "17.6071, 21.1125, 28.1464, 0.52", "18.2588, 20.8653, 28.0833, 0.52", "19.1167, 20.7524, 28.0132, 0.52", "19.7579, 20.7449, 27.9654, 0.52", "20.5939, 20.8224, 27.9083, 0.52", "21.2588, 20.9524, 27.8671, 0.52", "21.9507, 21.1422, 27.8274, 0.52", "22.8716, 21.4895, 27.7804, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-20.3244, 43.9969, 11.3762, 0.44", "-22.1937, 44.2392, 12.0783, 0.44", "-23.0349, 44.3711, 12.3359, 0.44", "-24.2068, 44.5702, 12.6552, 0.44", "-25.2149, 44.7554, 12.9033, 0.44", "-26.7677, 45.0232, 13.248, 0.44", "-27.9331, 45.1848, 13.4866, 0.44", "-29.2913, 45.3127, 13.7356, 0.44", "-29.7213, 45.3402, 13.8196, 0.44", "-30.5316, 45.3842, 14.0047, 0.44", "-31.6794, 45.4906, 14.4099, 0.44", "-32.6251, 45.5725, 14.8149, 0.44", "-34.0208, 45.6485, 15.5302, 0.44", "-34.775, 45.6699, 15.9932, 0.44", "-35.8037, 45.714, 16.7174, 0.44", "-36.8282, 45.8125, 17.6063, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-20.3244, 43.9969, 11.3762, 0.52", "-22.1841, 44.5897, 11.467, 0.52", "-23.2691, 44.9123, 11.5259, 0.52", "-24.1659, 45.1903, 11.6009, 0.52", "-25.6594, 45.7042, 11.7458, 0.52", "-26.6965, 46.0698, 11.8514, 0.52", "-28.2097, 46.5981, 11.966, 0.52", "-29.435, 46.9848, 12.0392, 0.52", "-30.5652, 47.3557, 12.0877, 0.52", "-31.8579, 47.847, 12.1209, 0.52", "-33.3786, 48.5508, 12.1336, 0.52", "-34.3716, 49.0832, 12.1278, 0.52", "-35.1139, 49.5116, 12.1145, 0.52", "-36.2567, 50.1708, 12.0853, 0.52", "-37.9274, 51.166, 12.0361, 0.52", "-38.9835, 51.8358, 12.0234, 0.52", "-40.3319, 52.7634, 12.0725, 0.52", "-41.082, 53.2989, 12.1351, 0.52", "-42.1679, 54.0985, 12.2567, 0.52", "-43.1409, 54.8378, 12.4031, 0.52", "-44.244, 55.7092, 12.6108, 0.52", "-45.4865, 56.6857, 12.875, 0.52", "-46.4652, 57.4429, 13.1491, 0.52", "-47.2917, 58.0576, 13.4188, 0.52", "-48.5395, 58.8743, 13.6423, 0.52", "-48.8747, 59.0572, 13.6687, 0.52", "-50.3945, 59.735, 13.4869, 0.52", "-51.8624, 60.2589, 12.9758, 0.52", "-52.499, 60.4355, 12.6118, 0.52", "-56.3765, 61.2097, 9.94053, 0.52", "-57.7906, 61.4179, 8.86671, 0.52", "-59.5432, 61.6489, 7.50287, 0.52", "-60.5725, 61.7793, 6.61249, 0.52", "-62.2715, 62.0349, 5.08376, 0.52", "-63.1513, 62.2064, 4.28569, 0.52", "-63.6452, 62.34, 3.84674, 0.52", "-64.5017, 62.5771, 3.03594, 0.52", "-66.4328, 63.163, 1.26177, 0.52", "-67.908, 63.6945, -0.121066, 0.52", "-69.3657, 64.3428, -1.58462, 0.52", "-70.5222, 64.9581, -2.91488, 0.52" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "61.7911, -74.8623, 35.9917, 0.37", "62.3702, -74.1169, 35.4268, 0.37", "62.9524, -73.3677, 34.859, 0.37", "63.1017, -73.1756, 34.7134, 0.37" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "61.7911, -74.8623, 35.9917, 0.37", "63.4579, -74.8333, 36.1741, 0.37", "64.3096, -74.8857, 36.2574, 0.37", "65.7712, -75.1365, 36.3969, 0.37", "67.7519, -75.6336, 36.5426, 0.37", "69.4359, -76.1385, 36.6329, 0.37", "71.1153, -76.7493, 36.7727, 0.37", "72.4598, -77.3976, 36.9303, 0.37", "73.8026, -78.1603, 37.11, 0.37", "75.0726, -79.0439, 37.294, 0.37", "75.724, -79.5914, 37.3708, 0.37", "77.3879, -81.1966, 37.6191, 0.37", "78.832, -82.6918, 37.7958, 0.37" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "31.7942, -42.4819, 8.96931, 0.44", "32.4775, -42.7072, 8.82985, 0.44", "33.1517, -42.9427, 8.69454, 0.44", "34.0719, -43.2641, 8.5099, 0.44", "34.8297, -43.5289, 8.35783, 0.44", "36.4552, -44.0967, 8.03165, 0.44", "37.5172, -44.4676, 7.81854, 0.44", "38.5365, -44.9038, 7.62943, 0.44" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "31.7942, -42.4819, 8.96931, 0.44", "31.4309, -41.4415, 8.8452, 0.44", "30.7962, -39.6242, 8.62842, 0.44", "30.4995, -38.7745, 8.52706, 0.44" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-6.70288, -91.8959, 8.49464, 0.52", "-8.04732, -92.2542, 8.80466, 0.52", "-9.0407, -92.4807, 9.15193, 0.52", "-9.9331, -92.6858, 9.50123, 0.52", "-10.8927, -92.9447, 9.89877, 0.52", "-12.0277, -93.3383, 10.4889, 0.52", "-12.8511, -93.6801, 10.9688, 0.52", "-14.2792, -94.3667, 11.8915, 0.52", "-14.8984, -94.7006, 12.33, 0.52", "-15.4408, -95.0315, 12.7328, 0.52", "-16.8453, -95.974, 13.7564, 0.52", "-17.3735, -96.3327, 14.073, 0.52", "-18.2146, -96.8679, 14.4269, 0.52", "-19.0398, -97.3161, 14.6713, 0.52", "-19.9217, -97.7197, 14.9573, 0.52", "-20.8605, -98.0746, 15.2558, 0.52", "-22.1835, -98.5174, 15.6446, 0.52", "-22.8938, -98.7551, 15.8792, 0.52", "-24.2885, -99.2282, 16.3793, 0.52", "-26.0747, -99.8994, 17.0962, 0.52", "-27.1607, -100.315, 17.5634, 0.52", "-27.944, -100.582, 17.9113, 0.52", "-28.6184, -100.77, 18.2137, 0.52", "-29.669, -100.998, 18.619, 0.52", "-30.6286, -101.181, 18.894, 0.52", "-31.6811, -101.389, 19.189, 0.52", "-32.8064, -101.656, 19.5588, 0.52", "-33.4336, -101.835, 19.8774, 0.52", "-34.067, -102.056, 20.3197, 0.52", "-34.741, -102.356, 20.9034, 0.52", "-35.8586, -102.926, 21.9888, 0.52", "-36.5716, -103.338, 22.7606, 0.52", "-38.2471, -104.318, 24.5913, 0.52", "-38.9461, -104.683, 25.3015, 0.52", "-39.3388, -104.843, 25.6433, 0.52", "-40.0441, -105.042, 26.0977, 0.52", "-40.7092, -105.169, 26.3765, 0.52", "-41.7523, -105.349, 26.6941, 0.52", "-42.8476, -105.58, 26.8977, 0.52", "-44.0369, -105.893, 27.1027, 0.52", "-45.494, -106.392, 27.368, 0.52", "-46.1683, -106.693, 27.5006, 0.52", "-47.2347, -107.269, 27.7712, 0.52", "-48.3416, -107.918, 28.1261, 0.52", "-48.9456, -108.264, 28.3472, 0.52", "-49.8232, -108.717, 28.6863, 0.52", "-50.4953, -109.026, 28.9484, 0.52", "-51.9816, -109.636, 29.5083, 0.52", "-53.0985, -110.053, 29.8957, 0.52", "-54.4806, -110.549, 30.3022, 0.52", "-55.5394, -110.956, 30.5546, 0.52", "-56.1672, -111.231, 30.7187, 0.52", "-56.6394, -111.471, 30.8422, 0.52", "-57.9578, -112.238, 31.1825, 0.52", "-59.5154, -113.198, 31.5565, 0.52", "-60.8415, -114.034, 31.8541, 0.52", "-64.134, -116.167, 32.5832, 0.52", "-65.8601, -117.31, 32.9586, 0.52", "-66.5651, -117.801, 33.0969, 0.52", "-67.8815, -118.778, 33.3304, 0.52", "-68.6374, -119.377, 33.4476, 0.52", "-69.6982, -120.21, 33.5106, 0.52", "-70.742, -121.001, 33.4417, 0.52", "-72.3688, -122.084, 33.2976, 0.52", "-73.229, -122.57, 33.2134, 0.52", "-74.4861, -123.189, 33.1919, 0.52", "-76.4735, -123.906, 33.2686, 0.52", "-77.3084, -124.058, 33.3733, 0.52", "-78.2031, -124.075, 33.6261, 0.52", "-79.223, -123.981, 34.0845, 0.52", "-81.2209, -123.688, 35.1548, 0.52", "-81.974, -123.547, 35.685, 0.52", "-83.0235, -123.326, 36.6946, 0.52", "-84.2208, -123.055, 38.0509, 0.52", "-84.9351, -122.882, 39.0024, 0.52" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-6.70288, -91.8959, 8.49464, 0.59", "-7.52925, -92.7808, 8.61952, 0.59", "-8.22998, -93.6166, 8.72736, 0.59", "-8.82256, -94.4233, 8.78109, 0.59", "-9.33322, -95.2044, 8.77754, 0.59", "-9.93841, -96.1448, 8.73313, 0.59", "-10.7684, -97.3552, 8.65502, 0.59", "-11.3953, -98.1742, 8.57916, 0.59", "-12.228, -99.2022, 8.46047, 0.59", "-12.9727, -100.103, 8.37076, 0.59", "-13.5374, -100.762, 8.28002, 0.59", "-14.2944, -101.539, 8.08917, 0.59", "-14.9037, -102.072, 7.91305, 0.59", "-15.4305, -102.473, 7.77048, 0.59", "-16.4409, -103.214, 7.53151, 0.59", "-17.6456, -104.173, 7.31707, 0.59", "-18.7451, -105.222, 7.19496, 0.59", "-19.2893, -105.827, 7.17332, 0.59", "-20.0377, -106.798, 7.25546, 0.59", "-20.6018, -107.675, 7.41668, 0.59", "-21.205, -108.82, 7.73207, 0.59", "-21.6679, -109.861, 8.12213, 0.52", "-21.9733, -110.656, 8.44761, 0.52", "-22.4292, -111.923, 8.93139, 0.52", "-22.7687, -112.923, 9.26816, 0.52", "-23.0948, -113.811, 9.55937, 0.52", "-23.3172, -114.403, 9.72815, 0.52", "-23.6109, -115.179, 9.9313, 0.52", "-24.0039, -116.156, 10.1869, 0.52", "-24.412, -116.971, 10.3949, 0.52", "-25.1302, -118.169, 10.7403, 0.52", "-25.4274, -118.625, 10.8779, 0.52", "-25.6481, -118.971, 10.978, 0.52", "-26.1674, -119.864, 11.2048, 0.52", "-26.6676, -120.808, 11.3983, 0.52", "-26.9879, -121.434, 11.4918, 0.52", "-27.2323, -121.93, 11.5252, 0.52", "-27.4928, -122.451, 11.5563, 0.52", "-27.9657, -123.398, 11.6071, 0.52", "-28.3446, -124.173, 11.6446, 0.52", "-28.7148, -124.951, 11.6793, 0.52", "-29.0849, -125.763, 11.7127, 0.52", "-29.5752, -126.881, 11.7688, 0.52", "-30.2261, -128.351, 11.8722, 0.52", "-30.6905, -129.371, 11.9654, 0.52", "-30.9816, -130.019, 12.0339, 0.52", "-31.48, -131.148, 12.1677, 0.52", "-32.0269, -132.395, 12.3326, 0.52", "-32.5475, -133.656, 12.4965, 0.52", "-32.7677, -134.224, 12.5661, 0.52", "-33.3065, -135.607, 12.7221, 0.52", "-33.76, -136.721, 12.8552, 0.52", "-34.219, -137.803, 12.9857, 0.52", "-34.629, -138.805, 13.0956, 0.52", "-35.109, -140.069, 13.2228, 0.52", "-35.6916, -141.594, 13.3787, 0.52", "-36.069, -142.537, 13.4827, 0.52", "-36.4214, -143.349, 13.5775, 0.52", "-36.7571, -144.062, 13.6627, 0.52", "-37.0885, -144.683, 13.7388, 0.52", "-37.6503, -145.617, 13.8531, 0.52", "-38.2326, -146.561, 13.9538, 0.52", "-38.7557, -147.405, 14.0355, 0.52", "-39.3647, -148.37, 14.1325, 0.52", "-39.8106, -149.069, 14.2052, 0.52", "-40.1952, -149.707, 14.2701, 0.52", "-40.6617, -150.586, 14.3544, 0.52", "-40.8791, -151.0, 14.3974, 0.52" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "7.01286, -108.797, 5.93598, 0.59", "7.28308, -109.656, 5.96441, 0.59", "7.41658, -110.164, 5.99794, 0.59", "7.55005, -110.781, 6.04504, 0.52", "7.69344, -111.545, 6.10494, 0.52", "7.79427, -112.169, 6.15409, 0.52", "7.93199, -113.0, 6.21886, 0.52", "8.00325, -113.468, 6.26847, 0.52", "8.08015, -114.048, 6.3193, 0.52", "8.14523, -114.605, 6.36224, 0.52", "8.27107, -115.749, 6.43658, 0.52", "8.37617, -116.688, 6.48193, 0.52", "8.46972, -117.414, 6.49826, 0.44", "8.55904, -117.961, 6.50951, 0.44", "8.65754, -118.463, 6.51875, 0.44", "8.73314, -118.799, 6.52378, 0.44", "8.90831, -119.514, 6.52979, 0.44", "9.08482, -120.244, 6.53246, 0.44", "9.25086, -120.91, 6.53435, 0.44", "9.37398, -121.443, 6.53663, 0.44", "9.42393, -121.689, 6.55105, 0.44", "9.52576, -122.227, 6.58797, 0.44", "9.61816, -122.847, 6.64026, 0.44", "9.66258, -123.4, 6.6992, 0.44", "9.67582, -124.255, 6.80329, 0.44", "9.64758, -125.073, 6.91905, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "7.01286, -108.797, 5.93598, 0.59", "7.13584, -110.286, 5.98258, 0.59", "7.23191, -111.609, 6.01576, 0.59", "7.32551, -113.142, 6.04793, 0.59", "7.36722, -114.002, 6.06331, 0.59", "7.44577, -115.408, 6.08634, 0.59", "7.52286, -116.611, 6.09224, 0.59", "7.68714, -118.365, 6.07292, 0.59", "7.83813, -119.68, 6.04875, 0.59", "8.0163, -121.133, 5.94759, 0.59", "8.2024, -122.554, 5.7859, 0.59", "8.36519, -123.755, 5.57664, 0.59", "8.50146, -124.771, 5.34429, 0.59", "8.5804, -125.434, 5.15701, 0.59", "8.79233, -127.167, 4.54612, 0.59", "8.89572, -128.17, 4.14902, 0.59", "8.94034, -129.337, 3.68697, 0.59", "8.92046, -129.996, 3.4529, 0.59", "8.85853, -130.625, 3.26436, 0.59", "8.66999, -131.916, 2.96571, 0.59", "8.4831, -133.133, 2.73687, 0.59", "8.3203, -134.474, 2.43812, 0.59", "8.20279, -135.686, 2.15658, 0.59", "8.09198, -136.925, 1.85423, 0.59", "7.98227, -137.975, 1.60213, 0.59", "7.79694, -139.42, 1.28049, 0.59", "7.62428, -140.723, 0.980509, 0.59", "7.49405, -141.748, 0.752039, 0.59", "7.38138, -142.699, 0.565087, 0.59", "7.2577, -143.935, 0.372692, 0.59", "7.17878, -145.048, 0.278976, 0.59", "7.15197, -146.022, 0.278154, 0.59", "7.18033, -147.062, 0.326989, 0.59", "7.28939, -148.287, 0.397646, 0.59", "7.40846, -149.351, 0.460784, 0.59", "7.55593, -150.511, 0.529846, 0.59", "7.69435, -151.734, 0.59631, 0.59", "7.76873, -152.589, 0.602701, 0.59", "7.79036, -153.854, 0.551525, 0.59", "7.72216, -155.043, 0.453158, 0.59", "7.64982, -155.731, 0.349663, 0.59", "7.49683, -157.078, 0.080278, 0.59", "7.37824, -158.306, -0.184539, 0.59", "7.30196, -159.593, -0.485184, 0.59", "7.29483, -160.495, -0.693919, 0.59", "7.35558, -161.876, -0.9793, 0.59", "7.42036, -162.89, -1.16051, 0.59", "7.50665, -164.14, -1.34424, 0.59", "7.59368, -165.561, -1.53666, 0.59", "7.69569, -166.937, -1.78554, 0.59", "7.82839, -168.639, -2.13876, 0.59", "7.949, -169.954, -2.42598, 0.59", "8.04683, -170.827, -2.64302, 0.59", "8.25613, -172.18, -3.05464, 0.59", "8.54209, -173.687, -3.5719, 0.59", "8.66547, -174.318, -3.81841, 0.59", "8.81597, -175.134, -4.17149, 0.59", "8.90747, -175.677, -4.39963, 0.59", "9.09132, -176.954, -4.90397, 0.59", "9.17074, -177.884, -5.21841, 0.59", "9.15622, -178.593, -5.45436, 0.59", "8.96551, -180.0, -6.01046, 0.59", "8.73642, -180.945, -6.41371, 0.59", "8.43792, -181.852, -6.7986, 0.59", "8.12735, -182.589, -7.09816, 0.59", "7.51405, -183.824, -7.64998, 0.59", "6.7406, -185.211, -8.28514, 0.59", "6.31994, -185.917, -8.59371, 0.59", "5.71795, -186.956, -9.02366, 0.59", "5.39138, -187.583, -9.2485, 0.59", "4.67, -189.261, -9.75468, 0.59", "4.47056, -189.861, -9.92209, 0.59", "4.20589, -190.914, -10.2027, 0.59", "4.06512, -191.671, -10.411, 0.59", "3.96001, -192.559, -10.6485, 0.59", "3.90303, -193.575, -10.9193, 0.59", "3.84446, -195.467, -11.3893, 0.59", "3.79475, -196.466, -11.6829, 0.59", "3.73951, -197.212, -11.9242, 0.59", "3.64577, -198.117, -12.2272, 0.59", "3.41858, -199.512, -12.6968, 0.59", "3.17811, -200.476, -13.0106, 0.59", "2.68723, -201.842, -13.4022, 0.59", "2.37766, -202.496, -13.5977, 0.59", "2.08823, -202.989, -13.7587, 0.59", "1.44291, -203.94, -14.067, 0.59", "0.874021, -204.736, -14.2942, 0.59", "0.426823, -205.44, -14.4708, 0.59", "0.144202, -205.989, -14.6031, 0.59", "-0.387432, -207.327, -14.9468, 0.59", "-0.650492, -208.212, -15.1743, 0.59", "-0.820689, -208.985, -15.3997, 0.59", "-1.03121, -210.196, -15.7673, 0.59", "-1.21355, -211.337, -16.1153, 0.59", "-1.33874, -212.191, -16.3678, 0.59", "-1.43654, -212.889, -16.5466, 0.59", "-1.61703, -214.116, -16.8351, 0.52", "-1.78398, -214.924, -16.9997, 0.52", "-2.00134, -215.649, -17.1154, 0.52", "-2.26663, -216.359, -17.2159, 0.52", "-2.80574, -217.71, -17.4073, 0.52", "-3.25158, -218.812, -17.5476, 0.52", "-3.75072, -219.946, -17.6641, 0.52", "-4.33976, -221.201, -17.8574, 0.52", "-4.85909, -222.309, -18.0609, 0.52", "-5.257, -223.186, -18.2373, 0.52", "-5.6869, -224.205, -18.4762, 0.52", "-6.29696, -225.877, -18.89, 0.52", "-6.80731, -227.663, -19.3795, 0.52", "-7.10346, -228.977, -19.7528, 0.52", "-7.2776, -229.834, -19.9931, 0.52", "-7.55651, -231.347, -20.4342, 0.52", "-7.67896, -232.158, -20.6648, 0.52", "-7.85285, -233.552, -21.0166, 0.52", "-7.97154, -234.361, -21.1738, 0.52", "-8.12082, -235.132, -21.3005, 0.52", "-8.33173, -236.084, -21.417, 0.52", "-8.60542, -237.293, -21.5001, 0.52", "-8.92324, -238.697, -21.6028, 0.52", "-9.14312, -239.618, -21.6631, 0.52", "-9.4966, -241.076, -21.8232, 0.52", "-9.67146, -241.824, -21.9299, 0.52", "-9.87082, -242.701, -22.075, 0.52", "-10.1042, -243.836, -22.2765, 0.52", "-10.3617, -245.26, -22.532, 0.52", "-10.5792, -246.52, -22.7688, 0.52", "-10.7372, -247.477, -22.9444, 0.52", "-10.9806, -248.97, -23.1942, 0.52", "-11.1763, -250.133, -23.3602, 0.52", "-11.3105, -250.963, -23.4475, 0.52", "-11.5588, -252.668, -23.6902, 0.52", "-11.714, -253.757, -23.8699, 0.52", "-11.8461, -254.686, -24.0568, 0.52", "-11.9731, -255.567, -24.2601, 0.52", "-12.1236, -256.65, -24.5595, 0.52", "-12.3447, -258.388, -25.0696, 0.52", "-12.416, -258.994, -25.2464, 0.52", "-12.4908, -259.755, -25.4628, 0.52", "-12.5489, -260.58, -25.672, 0.52", "-12.5876, -261.974, -25.9674, 0.52", "-12.59, -263.426, -26.2008, 0.52", "-12.59, -264.32, -26.2883, 0.52", "-12.619, -265.603, -26.3978, 0.52", "-12.6888, -266.869, -26.4767, 0.52", "-12.7743, -267.722, -26.504, 0.52", "-12.8831, -268.378, -26.4639, 0.52", "-13.111, -269.295, -26.3589, 0.52", "-13.4645, -270.279, -26.1621, 0.52", "-13.8327, -271.063, -25.9482, 0.52", "-14.3385, -272.024, -25.6384, 0.52", "-15.0143, -273.299, -25.2047, 0.52", "-15.3639, -273.986, -24.9694, 0.52", "-15.8321, -275.019, -24.6329, 0.52", "-16.2108, -276.04, -24.3253, 0.52", "-16.4178, -276.772, -24.1722, 0.52", "-16.6434, -277.787, -24.1026, 0.52", "-16.7695, -278.489, -24.1462, 0.52", "-16.9172, -279.503, -24.3373, 0.52", "-17.0909, -280.932, -24.7431, 0.52", "-17.2709, -282.288, -25.193, 0.52", "-17.487, -283.649, -25.686, 0.52", "-17.6503, -284.478, -26.0268, 0.52", "-18.0252, -286.017, -26.7062, 0.52", "-18.4732, -287.503, -27.3747, 0.52", "-18.7775, -288.316, -27.7291, 0.52", "-19.0324, -288.892, -27.9528, 0.52", "-19.6421, -290.163, -28.3848, 0.52", "-19.9589, -290.788, -28.619, 0.52", "-20.4862, -291.8, -29.0965, 0.52", "-20.8773, -292.526, -29.4966, 0.52", "-21.3209, -293.386, -30.0149, 0.52", "-21.6172, -293.999, -30.4152, 0.52", "-22.1367, -295.186, -31.2614, 0.52", "-22.6446, -296.541, -32.4344, 0.52" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "12.3694, 99.2068, -13.7542, 0.59", "13.404, 99.7317, -14.0484, 0.59", "14.1671, 100.105, -14.2337, 0.59", "15.0214, 100.52, -14.4054, 0.59", "15.8345, 100.915, -14.5373, 0.59", "17.0115, 101.453, -14.7531, 0.59", "18.1348, 101.948, -14.9881, 0.59", "19.3984, 102.523, -15.2578, 0.59", "20.2917, 102.944, -15.5359, 0.59", "21.2189, 103.404, -15.9106, 0.59", "22.3017, 104.024, -16.5227, 0.52", "23.1404, 104.621, -17.1372, 0.52", "23.6173, 105.077, -17.6097, 0.52", "24.7882, 106.609, -19.1339, 0.52", "25.0902, 107.224, -19.7111, 0.52", "25.3984, 108.511, -20.8993, 0.52", "25.4433, 109.174, -21.447, 0.52", "25.4165, 110.075, -22.1938, 0.52", "25.3682, 110.689, -22.6795, 0.52", "25.2256, 111.942, -23.5633, 0.52", "24.9973, 113.836, -24.8972, 0.52", "24.9011, 114.782, -25.5335, 0.52", "24.7881, 116.573, -26.7413, 0.52", "24.7671, 117.486, -27.3443, 0.52", "24.7735, 118.107, -27.7176, 0.52", "24.8034, 119.481, -28.4666, 0.52", "24.8022, 120.013, -28.7491, 0.52", "24.7617, 120.934, -29.2689, 0.52", "24.6407, 122.004, -29.8581, 0.52", "24.5025, 122.737, -30.3108, 0.52", "24.1762, 123.943, -31.0723, 0.52", "23.6462, 125.537, -32.1696, 0.52", "23.3789, 126.22, -32.6624, 0.52", "23.0545, 126.964, -33.2787, 0.52", "22.6696, 127.961, -34.7678, 0.52", "22.4746, 128.538, -35.8378, 0.52", "22.2659, 129.323, -37.5465, 0.52", "22.1822, 129.765, -38.5809, 0.52", "22.0812, 130.745, -40.9792, 0.52", "22.014, 134.097, -49.2263, 0.52", "22.0269, 134.493, -50.1606, 0.52", "22.0965, 135.51, -52.3733, 0.52", "22.1523, 136.169, -53.6126, 0.52", "22.2779, 137.331, -55.4204, 0.52", "22.3393, 137.968, -56.08, 0.52", "22.5491, 140.563, -57.5153, 0.52", "22.6754, 141.725, -58.0289, 0.52", "22.8447, 143.101, -58.4635, 0.52", "23.058, 144.518, -58.802, 0.52", "23.4013, 146.381, -59.0567, 0.52", "23.6697, 147.567, -59.1455, 0.52", "24.1128, 149.293, -59.1479, 0.52", "24.3592, 150.289, -59.1347, 0.52", "24.6858, 151.754, -59.1031, 0.52", "25.0193, 153.487, -59.0523, 0.52", "25.3027, 155.158, -59.0022, 0.52", "25.4958, 156.542, -58.9623, 0.52", "25.6424, 157.889, -58.926, 0.52", "25.7974, 159.456, -58.8838, 0.52", "25.9463, 161.031, -58.8411, 0.52", "26.0925, 162.483, -58.8007, 0.52", "26.2342, 163.729, -58.7468, 0.52", "26.3995, 164.969, -58.6626, 0.52", "26.6289, 166.423, -58.5204, 0.52", "26.8392, 167.664, -58.3855, 0.52", "27.0757, 169.069, -58.219, 0.52", "27.3256, 170.614, -58.0089, 0.52", "27.5821, 172.178, -57.7612, 0.52", "27.7775, 173.402, -57.5322, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "12.3694, 99.2068, -13.7542, 0.59", "11.1004, 100.352, -14.014, 0.59", "9.9815, 101.309, -14.267, 0.59", "8.58178, 102.553, -14.6522, 0.59", "7.64359, 103.47, -14.9374, 0.59", "6.60849, 104.595, -15.2428, 0.59", "5.88896, 105.486, -15.4504, 0.59", "4.87319, 106.97, -15.6939, 0.59", "4.27349, 108.162, -15.8108, 0.59", "3.96241, 109.57, -15.8147, 0.59", "4.01685, 110.825, -15.6651, 0.59", "4.33432, 112.099, -15.3972, 0.59", "4.90227, 113.432, -15.0167, 0.59", "5.40756, 114.291, -14.7162, 0.59", "6.09833, 115.285, -14.3285, 0.59", "6.64188, 115.999, -14.0647, 0.59", "7.11575, 116.617, -13.829, 0.59", "7.72675, 117.474, -13.5057, 0.59", "8.53931, 118.656, -13.4759, 0.59", "9.01962, 119.414, -13.6361, 0.59", "9.68231, 120.569, -14.0689, 0.59", "10.5053, 122.108, -14.9512, 0.59", "10.9551, 123.053, -15.5959, 0.59", "13.0223, 128.124, -19.4456, 0.59", "13.3081, 128.998, -20.1356, 0.59", "13.5008, 129.763, -20.7302, 0.59", "13.9357, 132.102, -22.4917, 0.59", "14.06, 133.216, -23.2668, 0.59", "14.058, 133.896, -23.5896, 0.59", "13.8442, 135.478, -23.7634, 0.44", "13.6475, 136.815, -23.7819, 0.44", "13.4709, 137.799, -23.6696, 0.44", "13.2715, 138.691, -23.4176, 0.44", "12.9096, 140.523, -22.7856, 0.44", "12.6409, 142.259, -22.1363, 0.44", "12.5471, 143.079, -21.8256, 0.44", "12.3903, 144.796, -21.1804, 0.44", "12.263, 146.316, -20.6008, 0.44", "12.1467, 147.825, -20.0512, 0.44", "12.0466, 149.039, -19.6758, 0.44", "11.9213, 150.261, -19.4077, 0.44", "11.7035, 151.995, -19.1225, 0.44", "11.5213, 153.342, -19.0001, 0.44", "11.3418, 154.497, -18.9428, 0.44", "11.0103, 156.301, -18.8608, 0.44", "10.8101, 157.309, -18.8079, 0.44", "10.6236, 158.233, -18.7427, 0.44", "10.3177, 159.886, -18.6101, 0.44", "10.0693, 161.642, -18.4616, 0.44", "9.95233, 162.739, -18.3443, 0.44", "9.81124, 164.258, -18.1713, 0.44", "9.68695, 165.711, -18.0162, 0.44", "9.59078, 167.053, -17.8909, 0.44", "9.55645, 167.958, -17.8365, 0.44", "9.55336, 169.461, -17.8346, 0.44", "9.59409, 171.164, -17.9483, 0.44", "9.65657, 172.582, -18.1221, 0.44", "9.72224, 174.18, -18.3793, 0.44", "9.78355, 175.869, -18.6713, 0.44", "9.82294, 177.738, -19.011, 0.44", "9.86513, 179.852, -19.3937, 0.44", "9.9015, 181.262, -19.6326, 0.44", "9.91497, 182.484, -19.8223, 0.44", "9.89315, 184.421, -20.0723, 0.44", "9.85056, 185.508, -20.1706, 0.44", "9.7721, 187.027, -20.2532, 0.44", "9.70009, 188.365, -20.2916, 0.44", "9.66097, 189.506, -20.3587, 0.44", "9.6429, 191.275, -20.5013, 0.44", "9.65145, 192.902, -20.6615, 0.44", "9.66417, 194.001, -20.7828, 0.44", "9.6586, 195.493, -20.9687, 0.44", "9.63908, 197.423, -21.2196, 0.44", "9.6251, 199.282, -21.4578, 0.44", "9.60114, 200.448, -21.6049, 0.44", "9.52851, 201.908, -21.7783, 0.44", "9.41714, 203.313, -21.9238, 0.44", "9.28215, 204.564, -22.0156, 0.44", "9.15813, 205.653, -22.0866, 0.44", "9.07231, 206.59, -22.1656, 0.44", "9.0224, 208.378, -22.4251, 0.44", "9.08926, 209.707, -22.6766, 0.44", "9.22769, 210.959, -22.9083, 0.44", "9.5514, 212.747, -23.2046, 0.44", "9.7734, 213.656, -23.3249, 0.44", "10.4185, 215.794, -23.5312, 0.44", "10.6623, 216.529, -23.5737, 0.44", "11.1395, 218.085, -23.5942, 0.44", "11.5307, 219.587, -23.5533, 0.44", "11.8607, 221.228, -23.4333, 0.44", "11.9793, 221.981, -23.3709, 0.44", "12.1045, 223.179, -23.262, 0.44", "12.2744, 225.368, -23.1296, 0.44", "12.3765, 226.887, -23.0891, 0.44", "12.4268, 227.743, -23.0612, 0.44", "12.5376, 228.943, -23.0005, 0.44", "12.7104, 230.216, -22.9117, 0.44", "13.01, 231.786, -22.7668, 0.44", "13.3983, 233.424, -22.587, 0.44", "13.5243, 233.901, -22.5302, 0.44", "13.9036, 235.314, -22.3685, 0.44", "14.1823, 236.402, -22.2408, 0.44", "14.4393, 237.47, -22.1194, 0.44", "14.7707, 239.122, -21.961, 0.44", "14.9969, 240.531, -21.8354, 0.44", "15.2058, 242.203, -21.7026, 0.44", "15.3087, 243.363, -21.6223, 0.44", "15.3686, 244.218, -21.5692, 0.44", "15.4997, 246.084, -21.4609, 0.44", "15.5694, 246.914, -21.4369, 0.44", "15.7186, 248.349, -21.4351, 0.44", "15.7996, 249.028, -21.4497, 0.44", "15.9544, 250.112, -21.5129, 0.44", "16.1647, 251.472, -21.6149, 0.44", "16.4374, 253.284, -21.7771, 0.44", "16.6704, 254.936, -21.9369, 0.44", "16.8566, 256.272, -22.0682, 0.44", "17.1115, 258.002, -22.2219, 0.44", "17.2893, 259.072, -22.2982, 0.44", "17.5846, 260.577, -22.3563, 0.44", "17.7737, 261.402, -22.347, 0.44", "17.9836, 262.28, -22.3175, 0.44", "18.2766, 263.563, -22.2505, 0.44", "18.5586, 264.769, -22.1619, 0.44", "19.018, 266.572, -22.016, 0.44", "19.5798, 268.671, -21.8374, 0.44", "20.2213, 270.943, -21.6987, 0.44", "20.8816, 273.212, -21.5811, 0.44", "21.3793, 274.914, -21.4775, 0.44", "21.9704, 276.939, -21.3397, 0.44", "22.5163, 278.747, -21.1982, 0.44", "23.1193, 280.745, -20.9262, 0.44", "23.4727, 282.027, -20.6583, 0.44", "23.762, 283.261, -20.2513, 0.44", "23.9642, 284.418, -19.765, 0.44", "24.1729, 286.218, -18.8835, 0.44", "24.3159, 288.567, -17.533, 0.44", "24.3688, 290.76, -16.1436, 0.44", "24.3768, 292.78, -14.8314, 0.44", "24.3672, 293.836, -14.125, 0.44", "24.3316, 294.701, -13.4884, 0.44", "24.2191, 295.932, -12.4873, 0.44" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-36.8282, 45.8125, 17.6063, 0.44", "-37.6516, 46.8248, 19.276, 0.44", "-38.0164, 47.2162, 20.1792, 0.44", "-38.1875, 47.3843, 20.6665, 0.44", "-38.422, 47.5465, 21.3017, 0.44", "-38.7661, 47.6759, 22.0938, 0.44", "-40.2634, 47.8429, 25.1428, 0.44", "-40.4453, 47.7651, 25.5311, 0.44", "-40.6264, 47.6463, 25.9635, 0.44", "-40.994, 47.3283, 26.9345, 0.44", "-41.3457, 46.9289, 27.9641, 0.44", "-41.646, 46.5122, 28.7548, 0.44", "-42.3529, 45.6175, 29.4474, 0.44" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-36.8282, 45.8125, 17.6063, 0.44", "-37.6423, 46.0856, 17.6857, 0.44", "-38.5328, 46.3562, 17.7761, 0.44", "-39.5251, 46.6604, 17.9819, 0.44", "-40.3995, 46.9125, 18.2251, 0.44", "-41.4302, 47.21, 18.5492, 0.44", "-42.2145, 47.4529, 18.8085, 0.44", "-42.8467, 47.6877, 19.0713, 0.44", "-44.0421, 48.238, 19.6705, 0.44", "-44.7615, 48.6454, 20.0916, 0.44", "-45.2225, 48.9263, 20.3906, 0.44", "-45.7864, 49.3083, 20.7756, 0.44", "-46.6853, 50.0023, 21.3962, 0.44", "-46.9516, 50.2341, 21.5913, 0.44", "-47.4465, 50.6884, 21.9407, 0.44", "-48.0729, 51.2948, 22.4099, 0.44", "-48.5063, 51.6978, 22.725, 0.44", "-49.1587, 52.2606, 23.1559, 0.44", "-50.05, 52.9427, 23.6531, 0.44", "-50.6004, 53.351, 23.9438, 0.44", "-51.2336, 53.8015, 24.2549, 0.44", "-51.9572, 54.2864, 24.6148, 0.44", "-52.6848, 54.712, 24.9566, 0.44", "-53.5578, 55.1832, 25.3652, 0.44", "-53.8261, 55.3211, 25.4945, 0.44", "-54.4054, 55.6262, 25.8001, 0.44", "-55.7487, 56.379, 26.5538, 0.44", "-56.422, 56.7983, 26.9435, 0.44", "-57.2137, 57.3733, 27.4251, 0.44", "-57.7831, 57.8219, 27.7675, 0.44", "-58.4379, 58.3601, 28.135, 0.44", "-58.901, 58.7539, 28.3662, 0.44", "-59.5778, 59.3147, 28.6367, 0.44", "-60.5313, 60.0631, 28.9736, 0.44", "-61.3082, 60.6134, 29.2054, 0.44", "-61.8727, 60.9785, 29.3681, 0.44", "-62.5237, 61.3457, 29.5291, 0.44", "-63.5069, 61.845, 29.7339, 0.44", "-64.5686, 62.34, 29.8617, 0.44", "-65.6143, 62.801, 29.9159, 0.44", "-66.6041, 63.237, 29.9369, 0.44", "-67.7567, 63.7544, 29.9622, 0.44", "-68.8649, 64.2844, 29.9835, 0.44", "-70.1796, 64.9534, 29.9601, 0.44", "-71.1119, 65.4575, 29.9034, 0.44", "-71.9723, 65.9571, 29.832, 0.44", "-73.0759, 66.6444, 29.7366, 0.44", "-73.8433, 67.1283, 29.6923, 0.44", "-74.9491, 67.7621, 29.6734, 0.44", "-75.8038, 68.1891, 29.6168, 0.44", "-77.1029, 68.7717, 29.4415, 0.44", "-77.807, 69.0615, 29.3171, 0.44", "-78.7086, 69.4047, 29.1421, 0.44", "-79.8752, 69.806, 28.8859, 0.44", "-82.462, 70.6377, 28.3369, 0.44", "-83.3306, 70.9165, 28.1382, 0.44", "-84.0696, 71.1646, 27.9534, 0.44", "-84.9273, 71.4835, 27.7398, 0.44", "-86.7111, 72.2217, 27.3275, 0.44", "-87.7311, 72.6655, 27.1574, 0.44", "-88.3726, 72.9276, 27.1371, 0.44", "-89.1708, 73.2071, 27.1468, 0.44", "-89.9303, 73.4415, 27.1987, 0.44", "-90.5475, 73.6113, 27.2891, 0.44", "-91.4071, 73.8447, 27.5007, 0.44", "-91.9387, 73.9889, 27.6317, 0.44", "-92.946, 74.2594, 27.8128, 0.44", "-93.5472, 74.4193, 27.8644, 0.44", "-94.3661, 74.6477, 27.8809, 0.44", "-95.4061, 74.9743, 27.7786, 0.44", "-96.3927, 75.3459, 27.5815, 0.44", "-97.8832, 76.034, 27.1517, 0.44", "-98.8646, 76.584, 26.7906, 0.44", "-99.5921, 77.0802, 26.4387, 0.44", "-100.673, 77.9631, 25.8136, 0.44", "-101.229, 78.4756, 25.4256, 0.44", "-101.78, 79.0593, 24.9948, 0.44", "-102.33, 79.7357, 24.5486, 0.44", "-103.451, 81.244, 23.638, 0.44", "-103.86, 81.8221, 23.3095, 0.44", "-104.518, 82.7552, 22.8518, 0.44", "-104.926, 83.2956, 22.5927, 0.44", "-105.234, 83.6912, 22.4298, 0.44", "-105.557, 84.0963, 22.2508, 0.44", "-105.97, 84.6239, 22.074, 0.44", "-106.278, 85.0238, 21.9515, 0.44", "-106.657, 85.5311, 21.8386, 0.44", "-107.467, 86.558, 21.5601, 0.44", "-108.46, 87.8353, 21.1243, 0.44" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-70.5222, 64.9581, -2.91488, 0.44", "-69.9623, 66.6466, -3.21597, 0.44", "-69.6792, 67.5502, -3.52699, 0.44", "-69.4851, 68.2088, -3.7912, 0.44", "-69.3046, 69.0151, -4.17396, 0.44", "-69.0195, 70.7222, -5.01553, 0.44", "-68.865, 71.9134, -5.58987, 0.44", "-68.6581, 74.232, -6.68752, 0.44", "-68.5947, 74.9549, -7.0303, 0.44", "-68.4465, 76.6471, -7.8214, 0.44", "-68.3642, 77.7842, -8.33532, 0.44", "-68.2858, 79.1267, -8.89701, 0.44", "-68.2073, 80.3593, -9.40807, 0.44", "-68.1245, 81.313, -9.7422, 0.44", "-68.0766, 81.7703, -9.91039, 0.44", "-68.0138, 82.2828, -10.092, 0.44", "-67.9662, 82.8148, -10.2829, 0.44", "-67.919, 85.0385, -11.0367, 0.44", "-67.9612, 85.8138, -11.2707, 0.44", "-68.0909, 87.2249, -11.6432, 0.44", "-68.203, 88.4936, -11.9361, 0.44", "-68.3024, 90.5511, -12.3405, 0.44", "-68.3152, 91.7811, -12.571, 0.44", "-68.2951, 93.0032, -12.7579, 0.44", "-68.2524, 93.8533, -13.0026, 0.44", "-68.1682, 94.5339, -13.2938, 0.44", "-67.9222, 95.5998, -14.1839, 0.44", "-67.6462, 96.5141, -15.4518, 0.44", "-67.4672, 97.2234, -16.6934, 0.44", "-67.2332, 98.5484, -19.2331, 0.44", "-67.2086, 99.0183, -20.18, 0.44", "-67.2834, 101.042, -24.4669, 0.44", "-67.482, 102.629, -28.0344, 0.44", "-67.6857, 103.935, -30.9665, 0.44", "-67.7518, 104.326, -31.8234, 0.44", "-68.0525, 105.794, -34.8123, 0.44", "-68.3971, 107.375, -37.8775, 0.44", "-68.8841, 110.147, -42.6812, 0.44", "-68.9304, 110.737, -43.6695, 0.44", "-68.8898, 111.355, -44.6614, 0.44", "-68.6803, 112.513, -46.4837, 0.44", "-68.3316, 113.76, -48.2596, 0.44", "-67.9982, 114.791, -49.4897, 0.44", "-67.1287, 117.258, -51.9828, 0.44", "-66.5997, 118.997, -53.6349, 0.44", "-65.99, 121.322, -55.639, 0.44", "-65.7043, 122.682, -56.6652, 0.44", "-65.378, 124.915, -58.1269, 0.44", "-65.2827, 126.212, -58.8752, 0.44", "-65.2657, 129.105, -60.2491, 0.44", "-65.3038, 130.23, -60.7354, 0.44", "-65.4728, 133.115, -61.8632, 0.44", "-65.5544, 134.162, -62.3016, 0.44", "-65.6616, 135.381, -62.8461, 0.44", "-65.7511, 136.707, -63.416, 0.44", "-65.7816, 137.961, -63.8043, 0.44" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-70.5222, 64.9581, -2.91488, 0.52", "-71.3988, 65.3771, -3.12813, 0.52", "-72.9884, 66.0542, -3.57389, 0.52", "-73.5177, 66.2293, -3.71976, 0.52", "-74.6737, 66.52, -4.01074, 0.52", "-75.5666, 66.7296, -4.26987, 0.52", "-76.3156, 66.915, -4.49407, 0.52", "-77.4456, 67.221, -4.89884, 0.52", "-78.5603, 67.5979, -5.32929, 0.52", "-79.61, 68.028, -5.79475, 0.52", "-80.854, 68.6307, -6.41388, 0.52", "-81.7558, 69.1225, -6.86987, 0.52", "-82.9786, 69.9084, -7.45818, 0.52", "-83.8125, 70.5359, -7.82429, 0.52", "-84.5652, 71.1594, -8.1081, 0.52", "-85.4675, 71.9019, -8.33479, 0.52", "-86.283, 72.4991, -8.4036, 0.52", "-87.3101, 73.1745, -8.38667, 0.52", "-87.9589, 73.5676, -8.30934, 0.52", "-88.8762, 74.1372, -8.15131, 0.52", "-89.7645, 74.7341, -7.93283, 0.52", "-90.7446, 75.4672, -7.63972, 0.52", "-91.1456, 75.8159, -7.51385, 0.52", "-91.7636, 76.4515, -7.34354, 0.52", "-92.4355, 77.272, -7.20845, 0.52", "-92.9817, 78.0556, -7.16562, 0.52", "-93.4364, 78.829, -7.16539, 0.52", "-93.8863, 79.6939, -7.18483, 0.52", "-94.388, 80.7232, -7.23003, 0.52", "-94.889, 81.8723, -7.3026, 0.52", "-95.3085, 82.8864, -7.42379, 0.52", "-95.5377, 83.4676, -7.54089, 0.52", "-95.8399, 84.2015, -7.71317, 0.52", "-96.2603, 85.1257, -7.98302, 0.52", "-96.5633, 85.7276, -8.17532, 0.52", "-97.1985, 86.8818, -8.58241, 0.52", "-98.0001, 88.205, -9.06123, 0.52", "-99.0902, 89.791, -9.68569, 0.52", "-99.9993, 91.0305, -10.171, 0.52", "-100.551, 91.7487, -10.4319, 0.52", "-101.062, 92.3729, -10.6297, 0.52", "-101.844, 93.2733, -10.8454, 0.52", "-102.706, 94.2021, -11.0113, 0.52", "-103.916, 95.4376, -11.1888, 0.52", "-104.878, 96.3606, -11.2743, 0.52", "-105.864, 97.2456, -11.3393, 0.52", "-107.331, 98.5097, -11.3991, 0.52", "-108.149, 99.1824, -11.409, 0.52", "-108.954, 99.7946, -11.3952, 0.52", "-109.849, 100.399, -11.382, 0.52", "-111.016, 101.16, -11.3198, 0.52", "-112.354, 102.054, -11.2032, 0.52", "-112.926, 102.444, -11.1383, 0.52", "-114.103, 103.273, -10.9838, 0.52", "-115.352, 104.179, -10.8033, 0.52", "-116.728, 105.197, -10.5915, 0.52", "-118.07, 106.181, -10.3784, 0.52", "-118.92, 106.792, -10.2485, 0.52", "-119.588, 107.263, -10.1601, 0.52", "-120.331, 107.778, -10.0603, 0.52", "-120.988, 108.207, -10.0148, 0.52", "-121.613, 108.586, -10.0028, 0.52", "-122.71, 109.21, -9.98209, 0.52", "-124.106, 109.963, -9.95681, 0.52", "-125.311, 110.582, -9.93631, 0.52", "-126.63, 111.283, -9.9149, 0.52" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "38.5365, -44.9038, 7.62943, 0.37", "38.1916, -43.4251, 6.95992, 0.37", "38.0361, -42.7582, 6.65801, 0.37", "37.8331, -41.8876, 6.26386, 0.37", "37.568, -40.7507, 5.74915, 0.37", "37.4233, -40.1305, 5.46834, 0.37", "37.1293, -38.8695, 4.89745, 0.37" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "38.5365, -44.9038, 7.62943, 0.44", "39.624, -45.2903, 7.63958, 0.44", "40.5176, -45.6385, 7.64511, 0.44", "41.4939, -46.0871, 7.64904, 0.44", "42.5827, -46.6381, 7.71513, 0.44", "44.1915, -47.5117, 7.89942, 0.44", "45.3081, -48.123, 8.06139, 0.44", "45.9459, -48.4854, 8.17654, 0.44", "46.9537, -49.0566, 8.415, 0.44", "48.1371, -49.7515, 8.75377, 0.44", "49.1018, -50.3618, 9.16216, 0.44", "49.8544, -50.915, 9.57838, 0.44", "50.8218, -51.7204, 10.1646, 0.44", "51.5136, -52.3307, 10.5594, 0.44", "52.2806, -53.0163, 10.897, 0.44", "53.6572, -54.2581, 11.493, 0.44", "54.7331, -55.2142, 11.9685, 0.44", "55.8215, -56.1523, 12.4386, 0.44", "57.0804, -57.1854, 12.9364, 0.44", "58.3166, -58.1359, 13.3485, 0.44", "60.6166, -59.8706, 14.0476, 0.44", "61.2263, -60.3285, 14.2121, 0.44", "62.0767, -60.9568, 14.4804, 0.44", "62.7895, -61.4771, 14.7298, 0.44", "63.8317, -62.2263, 15.1357, 0.44", "64.8661, -62.9074, 15.5116, 0.44", "65.8148, -63.4465, 15.7163, 0.44", "66.5781, -63.8107, 15.8767, 0.44", "67.3431, -64.0974, 16.0256, 0.44", "68.5778, -64.5244, 16.2332, 0.44", "69.9978, -65.0076, 16.4324, 0.44", "70.9544, -65.3887, 16.5333, 0.44", "71.6461, -65.7771, 16.582, 0.44", "72.1774, -66.1604, 16.6091, 0.44", "73.4994, -67.2829, 16.6371, 0.44", "74.0086, -67.7816, 16.6298, 0.44", "74.6788, -68.5326, 16.6202, 0.44", "75.4642, -69.4731, 16.6089, 0.44", "76.1589, -70.3398, 16.6016, 0.37", "77.2298, -71.7946, 16.5892, 0.37", "77.8838, -72.7117, 16.5811, 0.37", "78.5276, -73.6179, 16.5525, 0.37", "79.6281, -75.1389, 16.4781, 0.37", "80.8165, -76.7385, 16.3635, 0.37", "82.2537, -78.771, 16.2055, 0.37", "82.8236, -79.5906, 16.133, 0.37", "83.6001, -80.653, 16.0228, 0.37", "84.4306, -81.7006, 15.8887, 0.37", "85.2419, -82.618, 15.7256, 0.37" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-40.8791, -151.0, 14.3974, 0.52", "-41.5552, -151.946, 14.4179, 0.52", "-42.0962, -152.771, 14.4447, 0.52", "-42.4311, -153.294, 14.465, 0.52", "-42.6374, -153.604, 14.4793, 0.52", "-42.9589, -154.082, 14.5038, 0.52", "-43.4193, -154.815, 14.5746, 0.52", "-43.9219, -155.681, 14.7013, 0.52", "-44.1028, -156.0, 14.7548, 0.52", "-44.4033, -156.529, 14.8513, 0.52", "-44.7006, -157.068, 14.9518, 0.52", "-45.3496, -158.328, 15.1825, 0.52", "-45.6951, -159.116, 15.3164, 0.52", "-46.0376, -160.009, 15.4519, 0.52", "-46.2991, -160.758, 15.5223, 0.52", "-46.614, -161.713, 15.5619, 0.52", "-46.8691, -162.469, 15.5528, 0.52", "-47.1621, -163.263, 15.4923, 0.52", "-47.4963, -164.128, 15.4119, 0.52", "-47.8624, -164.997, 15.363, 0.52", "-48.1464, -165.552, 15.3753, 0.52", "-48.4158, -165.995, 15.4214, 0.52", "-48.9045, -166.723, 15.5424, 0.52", "-49.4861, -167.54, 15.7011, 0.52", "-50.1748, -168.527, 15.8585, 0.52", "-50.7993, -169.495, 15.9852, 0.52", "-51.4275, -170.601, 16.0591, 0.52", "-51.9961, -171.723, 16.0741, 0.52", "-52.2052, -172.193, 16.0561, 0.52", "-52.7133, -173.452, 15.9452, 0.52", "-53.0468, -174.417, 15.8376, 0.52", "-53.4566, -175.722, 15.706, 0.52", "-53.6889, -176.439, 15.6645, 0.52", "-54.0118, -177.335, 15.6187, 0.52", "-54.2345, -177.855, 15.5799, 0.52", "-54.9412, -179.268, 15.4433, 0.52", "-55.3348, -179.975, 15.3242, 0.52", "-55.793, -180.782, 15.1342, 0.52", "-56.3256, -181.798, 14.8008, 0.52", "-56.9093, -182.988, 14.3206, 0.52", "-57.2854, -183.848, 13.9404, 0.52", "-57.5728, -184.596, 13.5993, 0.52", "-57.7185, -185.062, 13.4171, 0.52", "-58.02, -186.158, 13.0968, 0.52", "-58.1413, -186.652, 12.9973, 0.52", "-58.3705, -187.577, 12.8669, 0.52", "-58.6941, -188.667, 12.7106, 0.52", "-58.9263, -189.31, 12.6312, 0.52", "-59.1738, -189.887, 12.5933, 0.52" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-40.8791, -151.0, 14.3974, 0.52", "-40.5302, -151.747, 14.3038, 0.52", "-40.2307, -152.389, 14.2235, 0.52", "-39.9495, -152.991, 14.1481, 0.52" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "9.64758, -125.073, 6.91905, 0.44", "10.431, -127.024, 6.86325, 0.44", "10.7074, -127.951, 6.89981, 0.44", "10.931, -128.879, 6.97067, 0.44", "11.1416, -129.885, 7.06786, 0.44", "11.3803, -131.355, 7.21284, 0.44", "11.4974, -132.385, 7.30781, 0.44", "11.5436, -133.832, 7.45476, 0.44", "11.5398, -134.347, 7.51372, 0.44", "11.4943, -135.438, 7.61833, 0.44", "11.4564, -136.723, 7.71281, 0.44", "11.4717, -137.743, 7.79429, 0.44", "11.5211, -138.878, 7.87506, 0.44", "11.5699, -139.993, 7.93059, 0.44", "11.6053, -140.955, 7.97761, 0.44", "11.6777, -143.522, 8.10478, 0.44", "11.7271, -145.111, 8.14686, 0.44", "11.7585, -147.124, 8.13311, 0.44", "11.7369, -149.11, 8.05479, 0.44", "11.7046, -150.155, 7.98362, 0.44", "11.6618, -151.038, 7.89863, 0.44", "11.5323, -152.423, 7.71126, 0.44", "11.3043, -154.197, 7.4111, 0.44", "11.1042, -155.575, 7.16442, 0.44", "10.9118, -156.636, 6.97019, 0.44", "10.6456, -157.77, 6.76801, 0.44", "10.3541, -158.76, 6.60975, 0.44", "10.083, -159.437, 6.52459, 0.44", "9.85327, -159.873, 6.43454, 0.44", "9.45409, -160.486, 6.27334, 0.44", "9.18829, -160.83, 6.16009, 0.44", "8.77796, -161.288, 5.96981, 0.44", "8.3138, -161.81, 5.71515, 0.44", "7.49228, -162.807, 5.16578, 0.44" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "9.64758, -125.073, 6.91905, 0.44", "8.66264, -124.759, 7.90471, 0.44", "8.05021, -124.565, 8.5176, 0.44", "6.94218, -124.212, 9.62645, 0.44", "5.47217, -123.744, 11.0976, 0.44" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-22.6446, -296.541, -32.4344, 0.44", "-23.4656, -294.731, -32.3288, 0.44", "-23.8197, -293.879, -32.2194, 0.44", "-24.2467, -292.79, -32.0733, 0.44", "-24.499, -292.099, -31.9278, 0.44", "-24.7505, -291.342, -31.7436, 0.44", "-25.5003, -288.954, -30.9891, 0.44", "-25.9943, -287.202, -30.3141, 0.44", "-26.4077, -285.699, -29.7062, 0.44", "-27.2041, -282.908, -28.5793, 0.44", "-27.595, -281.556, -28.0523, 0.44", "-28.3342, -278.862, -27.0869, 0.44", "-28.6101, -277.766, -26.7468, 0.44", "-28.8467, -276.709, -26.4566, 0.44", "-29.1207, -275.231, -26.109, 0.44", "-29.2697, -274.262, -25.9556, 0.44", "-29.5004, -272.699, -25.7266, 0.44", "-29.6442, -271.547, -25.5813, 0.44", "-29.834, -269.672, -25.2982, 0.44", "-30.0611, -267.061, -24.8923, 0.44", "-30.24, -265.131, -24.6037, 0.44", "-30.3704, -263.754, -24.3877, 0.44", "-30.4994, -262.605, -24.203, 0.44", "-30.7127, -260.932, -23.9423, 0.44", "-31.1366, -258.089, -23.5676, 0.44", "-31.3849, -256.468, -23.48, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-22.6446, -296.541, -32.4344, 0.52", "-23.2938, -298.121, -32.2658, 0.52", "-23.8609, -299.501, -32.1185, 0.52", "-24.0495, -299.96, -32.0695, 0.52" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "27.7775, 173.402, -57.5322, 0.52", "29.3661, 175.815, -54.4399, 0.52", "30.4631, 177.309, -52.0997, 0.52", "31.1608, 178.155, -50.5221, 0.52", "31.7078, 178.658, -49.3274, 0.52", "34.2237, 180.104, -44.0157, 0.52", "34.4342, 180.085, -43.5299, 0.52", "34.7946, 179.462, -42.3622, 0.52", "34.9505, 179.06, -41.7293, 0.52", "35.2456, 178.066, -40.4118, 0.52", "35.4748, 177.222, -39.5108, 0.52", "36.0279, 175.368, -37.9064, 0.52", "36.5854, 173.778, -36.7542, 0.52", "37.4441, 171.761, -35.5989, 0.52", "38.4554, 169.774, -34.8058, 0.52", "40.0944, 167.169, -34.1576, 0.52", "41.4991, 165.433, -34.2758, 0.52", "46.5181, 160.407, -36.2344, 0.52", "47.7118, 159.412, -36.9115, 0.52", "48.7509, 158.656, -37.6382, 0.52", "50.5683, 157.532, -39.1539, 0.52", "53.2924, 156.205, -41.7446, 0.52", "53.5983, 156.086, -42.0345, 0.52", "54.1729, 155.921, -42.2109, 0.52" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "27.7775, 173.402, -57.5322, 0.52", "27.838, 175.588, -59.1259, 0.52", "27.946, 177.173, -60.3002, 0.52", "28.0578, 178.048, -60.9611, 0.52", "28.3174, 179.236, -61.9328, 0.52", "28.8193, 180.86, -63.369, 0.52", "29.2453, 181.941, -64.4135, 0.52", "30.307, 183.738, -66.2855, 0.52", "31.0081, 184.545, -67.3314, 0.52", "32.0716, 185.358, -68.8256, 0.52", "32.8866, 185.728, -69.9451, 0.52", "33.8218, 185.989, -71.1738, 0.52", "34.5668, 186.093, -72.1393, 0.52", "36.0984, 186.101, -74.0282, 0.52", "37.2513, 186.012, -75.5324, 0.52", "38.1766, 185.887, -76.839, 0.52" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "24.2191, 295.932, -12.4873, 0.44", "24.0096, 297.292, -11.949, 0.44", "23.7853, 298.861, -11.3717, 0.44", "23.5729, 300.086, -10.9349, 0.44", "23.3662, 301.106, -10.5425, 0.44", "23.1537, 302.154, -10.1391, 0.44", "22.9827, 302.997, -9.81455, 0.44", "22.7363, 304.054, -9.40281, 0.44", "22.3173, 305.653, -8.87954, 0.44", "22.0259, 306.768, -8.51672, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "24.2191, 295.932, -12.4873, 0.44", "22.9532, 296.944, -13.2577, 0.44", "22.0193, 297.69, -13.8261, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-126.63, 111.283, -9.9149, 0.52", "-127.291, 112.574, -10.4739, 0.52", "-127.728, 113.398, -10.7862, 0.52", "-128.55, 114.815, -11.2764, 0.52", "-129.459, 116.285, -11.7405, 0.52", "-129.88, 116.944, -11.923, 0.52", "-130.383, 117.706, -12.1147, 0.52", "-130.89, 118.393, -12.3215, 0.52", "-131.439, 119.092, -12.5339, 0.52", "-131.862, 119.608, -12.657, 0.52", "-132.442, 120.329, -12.8058, 0.52", "-132.712, 120.699, -12.8978, 0.52", "-133.808, 122.325, -13.3133, 0.52", "-134.225, 122.978, -13.4722, 0.52", "-134.938, 124.134, -13.7276, 0.52", "-135.764, 125.488, -13.9852, 0.52", "-136.863, 127.249, -14.267, 0.52", "-137.475, 128.189, -14.3757, 0.52", "-138.036, 129.01, -14.4183, 0.52", "-138.64, 129.833, -14.4599, 0.52", "-139.323, 130.669, -14.4979, 0.52", "-139.87, 131.269, -14.5078, 0.52", "-140.666, 132.069, -14.5162, 0.52", "-141.209, 132.623, -14.5885, 0.52", "-141.852, 133.29, -14.7365, 0.52", "-142.57, 134.044, -14.9526, 0.52", "-143.485, 135.012, -15.2698, 0.52", "-144.392, 136.015, -15.601, 0.52", "-145.424, 137.2, -15.9832, 0.52", "-146.155, 138.048, -16.2306, 0.52", "-146.748, 138.752, -16.4028, 0.52", "-147.33, 139.46, -16.5608, 0.52", "-147.982, 140.26, -16.7024, 0.52", "-148.507, 140.946, -16.7671, 0.52", "-149.436, 142.206, -16.8223, 0.52", "-149.963, 142.981, -16.8851, 0.52", "-151.144, 144.801, -17.0811, 0.52", "-151.869, 145.927, -17.2267, 0.52", "-152.691, 147.17, -17.4451, 0.52", "-153.131, 147.805, -17.5789, 0.52", "-154.021, 149.065, -17.9253, 0.52", "-154.542, 149.747, -18.1468, 0.52", "-155.264, 150.603, -18.4552, 0.52", "-156.2, 151.633, -18.9109, 0.52", "-156.992, 152.447, -19.3132, 0.52", "-158.002, 153.473, -19.8655, 0.52", "-158.775, 154.242, -20.3444, 0.52", "-159.481, 154.939, -20.845, 0.52", "-160.232, 155.642, -21.4106, 0.52", "-160.659, 156.005, -21.7485, 0.52", "-161.752, 156.827, -22.6386, 0.52", "-162.958, 157.608, -23.6463, 0.52", "-163.5, 157.91, -24.1157, 0.52", "-164.266, 158.297, -24.8435, 0.52", "-165.32, 158.845, -25.8745, 0.52", "-165.764, 159.092, -26.2859, 0.52", "-166.976, 159.785, -27.3149, 0.52", "-167.684, 160.207, -27.8755, 0.52", "-169.72, 161.461, -29.391, 0.52", "-172.002, 162.855, -30.9033, 0.52", "-173.965, 163.982, -31.9448, 0.52", "-175.325, 164.762, -32.6229, 0.52", "-176.86, 165.632, -33.2902, 0.52", "-178.333, 166.444, -33.8422, 0.52", "-180.457, 167.459, -34.347, 0.52", "-182.57, 168.285, -34.6521, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-126.63, 111.283, -9.9149, 0.52", "-127.232, 111.014, -10.7332, 0.52", "-127.572, 110.863, -11.1942, 0.52", "-128.39, 110.498, -12.3054, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "85.2419, -82.618, 15.7256, 0.37", "86.2722, -83.2787, 15.7098, 0.37", "87.1673, -84.0091, 15.6048, 0.37", "87.6815, -84.4957, 15.5269, 0.37", "88.2526, -85.0803, 15.4339, 0.37", "89.1775, -86.1203, 15.2196, 0.37", "89.8372, -86.8873, 15.0498, 0.37", "91.2612, -88.6243, 14.5395, 0.37", "92.1309, -89.6746, 14.18, 0.37", "92.6037, -90.2461, 13.9533, 0.37", "93.831, -91.7737, 13.312, 0.37", "94.6637, -92.819, 12.8361, 0.37", "95.7636, -94.1395, 12.1794, 0.37", "96.8445, -95.3128, 11.5324, 0.37", "97.7367, -96.2058, 10.9621, 0.37" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "85.2419, -82.618, 15.7256, 0.37", "84.9236, -83.0948, 15.7574, 0.37", "84.5709, -83.6231, 15.7926, 0.37", "84.2792, -84.06, 15.8217, 0.37", "83.9307, -84.5821, 15.8564, 0.37" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-31.3849, -256.468, -23.48, 0.44", "-33.1518, -255.967, -23.6598, 0.44", "-34.2292, -255.663, -23.7694, 0.44", "-35.3869, -255.335, -23.8872, 0.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-31.3849, -256.468, -23.48, 0.44", "-31.5893, -254.705, -22.8007, 0.44", "-31.7098, -253.601, -22.3013, 0.44", "-31.8416, -252.228, -21.682, 0.44", "-31.9608, -250.733, -21.0484, 0.44", "-32.0556, -249.612, -20.6194, 0.44", "-32.2404, -247.553, -19.801, 0.44", "-32.4717, -245.27, -18.9077, 0.44", "-32.6128, -244.089, -18.4862, 0.44", "-32.8216, -242.552, -18.0041, 0.44", "-33.1693, -240.219, -17.4089, 0.44", "-33.5331, -237.828, -16.914, 0.44", "-33.7872, -236.231, -16.7021, 0.44", "-34.1004, -234.238, -16.5756, 0.44", "-34.298, -233.065, -16.5324, 0.44", "-34.5078, -231.895, -16.5283, 0.44", "-34.7268, -230.642, -16.5833, 0.44", "-34.9412, -229.361, -16.7019, 0.44", "-35.1055, -228.348, -16.7602, 0.44", "-35.3971, -226.874, -16.7538, 0.44", "-35.5628, -226.244, -16.7387, 0.44", "-35.8303, -225.393, -16.6993, 0.44", "-36.1885, -224.342, -16.6568, 0.44", "-36.5078, -223.368, -16.5788, 0.44", "-36.8571, -222.277, -16.4434, 0.44", "-37.1217, -221.344, -16.2481, 0.44", "-37.381, -220.372, -15.9073, 0.44", "-37.7577, -218.971, -15.2096, 0.44", "-38.1837, -217.15, -14.0168, 0.44", "-38.3804, -216.108, -13.1648, 0.44", "-38.6226, -214.64, -11.8627, 0.44", "-38.9194, -212.702, -9.97157, 0.44", "-39.1477, -211.163, -8.29088, 0.44", "-39.3524, -209.709, -6.4794, 0.44", "-39.5088, -208.505, -4.8353, 0.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-24.0495, -299.96, -32.0695, 0.29", "-24.1295, -302.17, -37.4784, 0.29", "-24.1636, -303.121, -39.6363, 0.29", "-24.1879, -303.947, -41.3813, 0.29", "-24.1823, -304.623, -42.7001, 0.29", "-23.9186, -309.778, -51.7339, 0.29", "-23.8072, -310.813, -53.3332, 0.29", "-23.7265, -311.363, -54.0546, 0.29", "-23.6327, -311.913, -54.6904, 0.29", "-23.3732, -313.2, -55.9384, 0.29", "-22.9696, -314.834, -57.1267, 0.29", "-22.3445, -316.94, -58.2034, 0.29", "-21.5306, -320.283, -60.2648, 0.29", "-21.0867, -322.291, -61.6625, 0.29", "-20.8076, -323.678, -62.7492, 0.29", "-20.64, -324.72, -63.7068, 0.29", "-20.4262, -326.606, -65.8173, 0.29", "-20.2151, -328.609, -68.0697, 0.29", "-20.076, -329.922, -69.6005, 0.29", "-19.9793, -331.082, -71.1283, 0.29", "-19.8087, -332.84, -73.6604, 0.29", "-19.5432, -334.77, -76.5517, 0.29", "-18.9693, -337.248, -79.9764, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-24.0495, -299.96, -32.0695, 0.52", "-24.4842, -301.36, -32.1291, 0.52", "-24.9747, -302.835, -32.2621, 0.52", "-25.2667, -303.668, -32.3472, 0.52", "-25.8493, -305.241, -32.5841, 0.52", "-26.462, -306.916, -32.8705, 0.52", "-27.0906, -308.697, -33.186, 0.52", "-27.5086, -310.004, -33.4307, 0.52", "-27.7532, -310.867, -33.5849, 0.52", "-28.2123, -312.606, -33.9205, 0.52", "-28.5467, -313.957, -34.1668, 0.52", "-28.8532, -315.038, -34.4294, 0.52", "-29.1384, -315.998, -34.6872, 0.52", "-29.4762, -317.057, -34.9922, 0.52", "-30.1717, -319.025, -35.5933, 0.52", "-30.6555, -320.329, -35.9745, 0.52", "-31.4494, -322.399, -36.5989, 0.52", "-31.9172, -323.611, -36.994, 0.52", "-32.6073, -325.417, -37.5865, 0.52", "-33.0209, -326.565, -37.9166, 0.52", "-33.5982, -328.348, -38.3014, 0.52", "-33.8764, -329.29, -38.4574, 0.52", "-34.2909, -330.964, -38.6229, 0.52", "-34.5976, -332.199, -38.7779, 0.52", "-35.0223, -333.855, -38.9879, 0.52", "-35.3913, -335.172, -39.1584, 0.52", "-35.8667, -336.684, -39.4073, 0.52", "-36.3444, -338.165, -39.6704, 0.52", "-37.0406, -340.348, -40.0523, 0.52", "-37.4397, -341.615, -40.2908, 0.52", "-38.2752, -344.391, -40.8326, 0.52", "-38.916, -346.761, -41.205, 0.52", "-39.2469, -348.115, -41.351, 0.52", "-39.6026, -349.661, -41.4034, 0.52", "-39.8373, -350.82, -41.327, 0.52", "-40.0647, -352.041, -41.1779, 0.52", "-40.3842, -353.98, -40.7685, 0.52", "-40.5182, -354.806, -40.5732, 0.52", "-40.7265, -355.932, -40.392, 0.52", "-40.9308, -356.855, -40.3304, 0.52", "-41.152, -357.731, -40.3565, 0.52", "-41.373, -358.549, -40.4494, 0.52", "-41.878, -360.58, -40.8321, 0.52", "-42.0995, -361.6, -41.0833, 0.52", "-42.3276, -362.753, -41.4047, 0.52", "-42.5269, -363.681, -41.6632, 0.52", "-42.8781, -365.076, -42.0178, 0.52", "-43.135, -366.006, -42.2098, 0.52", "-43.5452, -367.635, -42.4348, 0.52", "-43.6882, -368.25, -42.5212, 0.52", "-43.8732, -369.171, -42.6413, 0.52", "-44.0237, -369.927, -42.7164, 0.52", "-44.2068, -370.902, -42.7772, 0.52", "-44.43, -372.342, -42.8104, 0.52", "-44.5304, -373.567, -42.804, 0.52", "-44.568, -374.887, -42.822, 0.52", "-44.5866, -375.765, -42.8671, 0.52", "-44.6169, -376.584, -42.9464, 0.52", "-44.6998, -377.898, -43.1138, 0.52", "-44.9301, -380.199, -43.4425, 0.52", "-45.007, -381.032, -43.5246, 0.52", "-45.1673, -383.016, -43.6229, 0.52", "-45.2603, -384.4, -43.6329, 0.52", "-45.3645, -385.965, -43.5755, 0.52", "-45.4552, -387.135, -43.474, 0.52", "-45.6567, -389.446, -43.1496, 0.52", "-45.8485, -391.384, -42.8122, 0.52", "-45.9642, -392.515, -42.5759, 0.52", "-46.1011, -393.634, -42.3469, 0.52", "-46.233, -394.586, -42.2021, 0.52", "-46.3655, -395.492, -42.1255, 0.52", "-46.544, -396.997, -42.1335, 0.52", "-46.6172, -398.477, -42.1751, 0.52", "-46.6469, -399.387, -42.2063, 0.52", "-46.6494, -400.884, -42.2733, 0.52", "-46.6047, -401.982, -42.3363, 0.52", "-46.3354, -404.98, -42.5437, 0.52", "-45.9224, -407.537, -42.7554, 0.52" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "22.0259, 306.768, -8.51672, 0.44", "21.3599, 308.044, -8.54827, 0.44", "20.8122, 309.136, -8.57586, 0.44", "20.0413, 310.653, -8.6513, 0.44", "19.455, 311.694, -8.70275, 0.44", "18.9598, 312.445, -8.73022, 0.44", "18.2481, 313.378, -8.79575, 0.44", "17.8208, 313.809, -8.86907, 0.44", "17.1222, 314.364, -9.05069, 0.44", "16.1206, 314.972, -9.39886, 0.44", "15.0586, 315.496, -9.80937, 0.44", "13.8354, 316.005, -10.2847, 0.44", "12.7739, 316.368, -10.7167, 0.44", "11.8335, 316.653, -11.1325, 0.44", "10.9109, 316.91, -11.5826, 0.44", "9.63843, 317.279, -12.3606, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "22.0259, 306.768, -8.51672, 0.44", "20.9538, 308.137, -8.72351, 0.44", "20.0277, 309.414, -8.90247, 0.44", "19.1568, 310.663, -8.77351, 0.44", "18.6303, 311.407, -8.56099, 0.44", "18.2205, 311.991, -8.35239, 0.44", "17.5871, 312.893, -8.01027, 0.44", "17.1348, 313.545, -7.6658, 0.44", "15.3585, 316.203, -5.87031, 0.44", "14.8123, 317.038, -5.17509, 0.44", "13.9771, 318.36, -4.02163, 0.44", "13.672, 318.878, -3.57764, 0.44", "12.7675, 320.436, -2.29534, 0.44", "11.8622, 322.043, -1.1497, 0.44", "10.8945, 323.972, -0.110963, 0.44", "10.2975, 325.28, 0.458251, 0.44", "9.81211, 326.406, 0.868664, 0.44", "9.41023, 327.394, 1.13054, 0.44", "8.76153, 329.164, 1.28413, 0.44", "8.26146, 330.748, 1.21281, 0.44", "7.90998, 331.931, 1.07076, 0.44", "7.64357, 332.866, 0.948823, 0.44", "7.13418, 334.709, 0.682182, 0.44", "6.68731, 336.695, 0.368125, 0.44", "6.56497, 337.411, 0.226524, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-182.57, 168.285, -34.6521, 0.44", "-183.497, 168.726, -34.7886, 0.44", "-184.423, 169.134, -34.842, 0.44", "-185.291, 169.551, -34.8318, 0.44", "-185.847, 169.857, -34.7951, 0.44", "-186.852, 170.405, -34.6556, 0.44", "-187.507, 170.752, -34.5485, 0.44", "-188.436, 171.236, -34.3574, 0.44", "-189.304, 171.639, -34.1373, 0.44", "-190.211, 171.984, -33.893, 0.44", "-191.501, 172.373, -33.6046, 0.44", "-192.257, 172.55, -33.4829, 0.44", "-193.283, 172.735, -33.3918, 0.44", "-194.86, 172.935, -33.3639, 0.44", "-196.996, 173.1, -33.4274, 0.44", "-198.72, 173.192, -33.5403, 0.44", "-200.052, 173.3, -33.729, 0.44", "-201.328, 173.464, -34.044, 0.44", "-202.826, 173.735, -34.5654, 0.44", "-204.45, 174.168, -35.347, 0.44", "-205.1, 174.399, -35.7236, 0.44", "-207.051, 175.284, -37.0128, 0.44", "-208.959, 176.335, -38.5003, 0.44", "-209.792, 176.845, -39.2325, 0.44", "-211.072, 177.686, -40.4588, 0.44", "-211.569, 178.013, -40.9529, 0.44", "-212.614, 178.626, -41.958, 0.44", "-214.023, 179.296, -43.1621, 0.44", "-214.889, 179.613, -43.8101, 0.44", "-215.461, 179.764, -44.2161, 0.44", "-216.027, 179.828, -44.5708, 0.44", "-216.839, 179.807, -45.039, 0.44", "-217.624, 179.668, -45.43, 0.44", "-218.442, 179.407, -45.8084, 0.44", "-219.227, 179.082, -46.0944, 0.44", "-220.281, 178.586, -46.4151, 0.44", "-221.15, 178.158, -46.6478, 0.44", "-221.935, 177.772, -46.8225, 0.44", "-223.494, 176.996, -47.0792, 0.44", "-225.92, 175.829, -47.3781, 0.44", "-226.69, 175.488, -47.4464, 0.44", "-228.099, 174.931, -47.536, 0.44", "-229.23, 174.536, -47.5999, 0.44", "-230.767, 174.038, -47.6127, 0.44", "-231.625, 173.794, -47.6099, 0.44", "-232.117, 173.676, -47.624, 0.44", "-232.818, 173.535, -47.6318, 0.44", "-233.575, 173.386, -47.5718, 0.44", "-236.437, 172.845, -47.2354, 0.44", "-238.047, 172.554, -46.931, 0.44", "-239.096, 172.369, -46.6302, 0.44", "-239.931, 172.235, -46.3435, 0.44", "-242.83, 171.801, -45.0857, 0.44", "-243.455, 171.711, -44.7328, 0.44", "-244.96, 171.52, -43.7399, 0.44", "-246.259, 171.36, -42.7662, 0.44", "-247.026, 171.278, -42.126, 0.44", "-248.694, 171.188, -40.6407, 0.44", "-250.598, 171.193, -38.9114, 0.44", "-251.124, 171.201, -38.4115, 0.44", "-251.611, 171.217, -37.9475, 0.44", "-253.007, 171.261, -36.5746, 0.44", "-253.455, 171.28, -36.0878, 0.44" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-182.57, 168.285, -34.6521, 0.52", "-183.066, 169.033, -34.4667, 0.52", "-183.659, 170.079, -34.2652, 0.52", "-184.365, 171.474, -34.0065, 0.52", "-184.629, 172.021, -33.9059, 0.52", "-185.12, 173.072, -33.705, 0.52", "-185.441, 173.827, -33.5722, 0.52", "-185.959, 175.232, -33.3401, 0.52", "-186.181, 175.98, -33.247, 0.52", "-186.379, 176.778, -33.1701, 0.52", "-186.624, 177.843, -33.0809, 0.52", "-186.926, 179.221, -32.9709, 0.44", "-187.064, 179.851, -32.9112, 0.44", "-187.372, 181.257, -32.7397, 0.44", "-187.518, 181.964, -32.6451, 0.44", "-187.625, 182.662, -32.5594, 0.44", "-187.704, 183.363, -32.4588, 0.44", "-187.726, 183.859, -32.3853, 0.44", "-187.71, 184.253, -32.3319, 0.44", "-187.657, 184.713, -32.3096, 0.44", "-187.426, 186.058, -32.4025, 0.44", "-187.186, 187.279, -32.5286, 0.44", "-186.887, 188.732, -32.7481, 0.44", "-186.813, 189.082, -32.8085, 0.44", "-186.394, 191.093, -33.1963, 0.44", "-186.107, 192.463, -33.4837, 0.44", "-185.874, 193.606, -33.728, 0.44", "-185.476, 195.522, -34.239, 0.44" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "97.7367, -96.2058, 10.9621, 0.37", "100.01, -96.9901, 9.60752, 0.37", "101.262, -97.3584, 8.96842, 0.37", "102.558, -97.7331, 8.37176, 0.37", "103.64, -98.0523, 7.88878, 0.37", "104.453, -98.2705, 7.52573, 0.37", "105.414, -98.5235, 7.11063, 0.37", "105.584, -98.5625, 7.05544, 0.37", "106.207, -98.7214, 6.90549, 0.37", "108.018, -99.2691, 6.58797, 0.37", "109.851, -99.9374, 6.37103, 0.37", "110.534, -100.236, 6.31317, 0.37", "110.97, -100.444, 6.29994, 0.37", "112.923, -101.359, 6.38327, 0.37", "113.837, -101.783, 6.49417, 0.37", "114.554, -102.125, 6.64446, 0.37", "115.657, -102.635, 6.91056, 0.37", "116.777, -103.092, 7.15769, 0.37", "117.776, -103.442, 7.35401, 0.37", "118.478, -103.669, 7.46109, 0.37", "119.897, -104.126, 7.67837, 0.37", "121.493, -104.56, 7.75457, 0.37", "122.152, -104.714, 7.72195, 0.37", "122.795, -104.864, 7.62695, 0.37", "123.805, -105.081, 7.40056, 0.37", "124.46, -105.199, 7.22284, 0.37", "127.42, -105.828, 6.4285, 0.37", "128.132, -106.007, 6.28341, 0.37", "128.689, -106.18, 6.2192, 0.37", "129.338, -106.391, 6.2168, 0.37", "130.291, -106.707, 6.23779, 0.37", "132.312, -107.409, 6.30411, 0.37", "133.865, -108.006, 6.46257, 0.37", "135.338, -108.583, 6.59082, 0.37", "137.354, -109.371, 6.7279, 0.37", "139.241, -110.128, 6.79031, 0.37", "140.345, -110.559, 6.76073, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "97.7367, -96.2058, 10.9621, 0.37", "96.9893, -94.8909, 9.16734, 0.37", "96.7329, -94.4399, 8.55174, 0.37", "96.5477, -94.1142, 8.10713, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-39.5088, -208.505, -4.8353, 0.44", "-40.9701, -208.873, -4.62839, 0.44", "-41.5449, -209.018, -4.547, 0.44", "-42.6451, -209.295, -4.39121, 0.44", "-43.7486, -209.573, -4.23496, 0.44", "-44.3482, -209.724, -4.15006, 0.44" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-39.5088, -208.505, -4.8353, 0.44", "-39.051, -206.998, -3.9633, 0.44", "-38.8948, -206.285, -3.59082, 0.44", "-38.4668, -203.69, -2.33408, 0.44", "-38.3316, -202.739, -1.89377, 0.44", "-38.2216, -202.151, -1.53379, 0.44", "-38.0514, -201.416, -1.02654, 0.44", "-37.9, -200.95, -0.444935, 0.44", "-37.7269, -200.54, 0.200259, 0.44", "-37.5176, -200.096, 0.993074, 0.44", "-36.6816, -198.63, 4.01923, 0.44", "-36.5538, -198.443, 4.45492, 0.44", "-34.9755, -196.54, 9.53478, 0.44", "-34.6883, -196.242, 10.4472, 0.44" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-45.9224, -407.537, -42.7554, 0.37", "-44.862, -408.554, -43.2124, 0.37", "-43.8979, -409.329, -43.5294, 0.37", "-43.0228, -409.996, -43.8637, 0.37", "-42.7516, -410.205, -43.9994, 0.37", "-42.3898, -410.505, -44.2098, 0.37", "-41.9231, -410.927, -44.4704, 0.37", "-41.349, -411.482, -44.746, 0.37", "-40.7338, -412.252, -45.1039, 0.37", "-40.3397, -413.056, -45.3592, 0.37", "-40.0966, -413.673, -45.5292, 0.37", "-39.8091, -414.679, -45.7436, 0.37", "-39.6788, -415.366, -45.8461, 0.37", "-39.6078, -415.974, -45.8999, 0.37", "-39.5037, -416.935, -45.7977, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-45.9224, -407.537, -42.7554, 0.52", "-45.992, -408.995, -43.1912, 0.52", "-46.0309, -410.299, -43.5622, 0.52", "-46.1048, -411.767, -44.031, 0.52", "-46.1775, -412.967, -44.4052, 0.52", "-46.2799, -414.67, -44.9052, 0.52", "-46.3538, -415.906, -45.2304, 0.52", "-46.407, -416.79, -45.421, 0.52", "-46.5055, -418.742, -45.8265, 0.52", "-46.558, -420.401, -46.1508, 0.52", "-46.5931, -421.787, -46.3775, 0.52", "-46.6381, -423.898, -46.6149, 0.52", "-46.6554, -424.846, -46.701, 0.52", "-46.6472, -425.802, -46.7211, 0.52", "-46.6339, -426.197, -46.696, 0.52", "-46.6075, -427.375, -46.571, 0.52", "-46.6089, -428.542, -46.4109, 0.52", "-46.6507, -429.683, -46.2337, 0.52", "-46.7843, -431.427, -45.9623, 0.52", "-46.9076, -432.436, -45.8065, 0.52", "-47.0774, -433.622, -45.6362, 0.52", "-47.3392, -435.563, -45.3761, 0.52", "-47.5622, -437.203, -45.1792, 0.52", "-47.7737, -438.67, -44.9988, 0.52", "-47.9413, -439.866, -44.8692, 0.52", "-48.0464, -440.962, -44.7414, 0.52", "-48.1112, -442.704, -44.5401, 0.52", "-48.1201, -443.591, -44.4268, 0.52", "-48.0681, -445.202, -44.2096, 0.52", "-47.9865, -446.287, -44.058, 0.52", "-47.8315, -447.621, -43.8722, 0.52", "-47.6016, -449.466, -43.617, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "140.345, -110.559, 6.76073, 0.37", "140.673, -112.729, 5.2871, 0.37", "140.781, -113.441, 4.80326, 0.37", "140.898, -114.214, 4.27805, 0.37", "140.987, -114.799, 3.88117, 0.37", "141.095, -115.511, 3.39734, 0.37", "141.419, -117.651, 1.94435, 0.37" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "140.345, -110.559, 6.76073, 0.37", "142.383, -111.018, 7.67814, 0.37", "143.921, -111.364, 8.37001, 0.37", "145.295, -111.674, 8.98823, 0.37", "146.308, -111.902, 9.44398, 0.37", "146.709, -111.992, 9.62464, 0.37" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-34.6883, -196.242, 10.4472, 0.44", "-33.8461, -196.761, 10.6005, 0.44" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-34.6883, -196.242, 10.4472, 0.44", "-34.5807, -194.853, 10.4186, 0.44", "-34.5231, -193.971, 10.3981, 0.44", "-34.4688, -193.149, 10.3791, 0.44", "-34.3731, -192.317, 10.3169, 0.44", "-34.1648, -190.946, 10.1835, 0.44", "-34.0523, -190.358, 10.1116, 0.44", "-33.788, -189.421, 9.93009, 0.44", "-33.6382, -188.996, 9.82127, 0.44", "-33.0583, -187.513, 9.35454, 0.44", "-32.719, -186.709, 8.98214, 0.44", "-32.5156, -186.191, 8.68921, 0.44", "-32.1754, -185.295, 8.06626, 0.44", "-31.9997, -184.816, 7.62464, 0.44", "-31.8832, -184.395, 7.1946, 0.44", "-31.6251, -183.024, 5.76281, 0.44", "-31.4988, -182.108, 4.83074, 0.44", "-31.416, -180.738, 3.5525, 0.44", "-31.3868, -178.882, 1.86559, 0.44", "-31.3725, -178.006, 1.09273, 0.44", "-31.3478, -177.254, 0.439736, 0.44", "-31.3051, -176.609, -0.109979, 0.44", "-31.1935, -175.41, -1.12706, 0.44", "-31.0324, -173.785, -2.34451, 0.44", "-30.9431, -173.108, -2.80731, 0.44", "-30.7448, -172.238, -3.51446, 0.44", "-30.4951, -171.431, -4.31009, 0.44" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-47.6016, -449.466, -43.617, 0.52", "-47.6942, -450.563, -43.8328, 0.52", "-47.7594, -451.321, -43.9489, 0.52", "-47.8579, -452.376, -44.1198, 0.52", "-47.9514, -453.641, -44.3258, 0.52", "-47.9876, -454.331, -44.435, 0.52", "-48.0143, -455.385, -44.6019, 0.52", "-48.0217, -456.6, -44.7814, 0.52", "-47.9744, -458.277, -45.0161, 0.52", "-47.8847, -459.651, -45.1911, 0.52", "-47.7588, -461.001, -45.3491, 0.52", "-47.648, -462.092, -45.4536, 0.52", "-47.4829, -463.597, -45.5636, 0.52", "-47.3711, -464.65, -45.6053, 0.52", "-47.2643, -465.836, -45.5987, 0.52", "-47.2203, -466.647, -45.5763, 0.52", "-47.2079, -467.895, -45.5141, 0.52", "-47.2472, -468.655, -45.4561, 0.52", "-47.3585, -469.633, -45.359, 0.52", "-47.586, -471.005, -45.1435, 0.52", "-47.7952, -472.081, -44.9369, 0.52", "-47.9523, -472.788, -44.7878, 0.52", "-48.1362, -473.494, -44.6013, 0.52", "-48.287, -473.998, -44.447, 0.52", "-48.71, -475.273, -44.0521, 0.52", "-49.0031, -476.137, -43.8003, 0.52", "-49.3318, -477.137, -43.5513, 0.52", "-49.5452, -477.852, -43.4178, 0.52", "-49.7592, -478.639, -43.3215, 0.52", "-49.9652, -479.433, -43.2723, 0.52", "-50.1588, -480.18, -43.2744, 0.52", "-50.3265, -480.871, -43.2778, 0.52", "-50.5044, -481.727, -43.2834, 0.52", "-50.667, -482.604, -43.2802, 0.52", "-50.8007, -483.348, -43.2594, 0.52", "-50.9337, -484.041, -43.2128, 0.52", "-51.0406, -484.534, -43.1737, 0.52", "-51.2526, -485.44, -43.0943, 0.52", "-51.4187, -486.059, -43.0297, 0.52", "-51.5755, -486.628, -42.9683, 0.52", "-51.8458, -487.699, -42.8649, 0.52", "-52.0449, -488.596, -42.7915, 0.52", "-52.2298, -489.521, -42.7257, 0.52", "-52.4897, -490.756, -42.6316, 0.52", "-52.8385, -492.289, -42.4791, 0.52", "-53.1185, -493.418, -42.3879, 0.52", "-53.4237, -494.552, -42.3332, 0.52", "-53.8951, -496.124, -42.3193, 0.52", "-54.3387, -497.456, -42.3448, 0.52", "-55.1404, -499.529, -42.415, 0.52", "-55.8379, -501.071, -42.4767, 0.52", "-56.4325, -502.246, -42.5272, 0.52", "-56.9304, -503.169, -42.5745, 0.52", "-57.3197, -503.865, -42.6134, 0.52", "-57.7103, -504.582, -42.6458, 0.52", "-57.9964, -505.129, -42.6456, 0.52", "-58.4009, -505.932, -42.5523, 0.52", "-58.7461, -506.662, -42.4279, 0.52", "-59.181, -507.636, -42.2417, 0.52", "-59.6026, -508.624, -42.0624, 0.52", "-60.0071, -509.68, -41.8933, 0.52", "-60.4726, -510.978, -41.7008, 0.52", "-60.7963, -511.92, -41.5679, 0.52", "-61.1464, -513.009, -41.4261, 0.52", "-61.406, -513.835, -41.3534, 0.52", "-61.8219, -515.186, -41.2496, 0.52", "-61.952, -515.634, -41.2238, 0.52", "-62.2087, -516.634, -41.1979, 0.52", "-62.4187, -517.427, -41.1911, 0.52", "-62.7507, -518.648, -41.2176, 0.52" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-47.6016, -449.466, -43.617, 0.52", "-45.8853, -449.917, -43.8682, 0.52", "-45.2724, -450.077, -43.958, 0.52" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-33.8461, -196.761, 10.6005, 0.44", "-33.6947, -197.257, 9.58703, 0.44", "-33.6024, -197.559, 8.96869, 0.44", "-33.1937, -198.898, 6.23211, 0.44" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-33.8461, -196.761, 10.6005, 0.44", "-34.0823, -198.252, 11.0694, 0.44", "-34.154, -198.686, 11.1863, 0.44", "-34.1955, -199.05, 11.3044, 0.44", "-34.2239, -199.626, 11.4862, 0.44", "-34.2518, -200.381, 11.73, 0.44", "-34.2622, -201.048, 11.9733, 0.44", "-34.273, -201.955, 12.3514, 0.44", "-34.3276, -203.03, 12.8796, 0.44", "-34.4107, -203.826, 13.3823, 0.44", "-34.5222, -204.376, 13.8074, 0.44", "-34.8398, -205.391, 14.8119, 0.44", "-35.2517, -206.423, 16.0154, 0.44", "-35.4511, -206.828, 16.5551, 0.44", "-35.9834, -207.655, 17.7735, 0.44", "-36.3369, -208.198, 18.6311, 0.44", "-36.7472, -208.945, 19.7652, 0.44", "-36.8537, -209.128, 20.0568, 0.44", "-36.9449, -209.361, 20.3993, 0.44", "-37.0028, -209.737, 20.8737, 0.44", "-36.8851, -210.983, 21.8811, 0.44", "-36.7648, -211.513, 22.2406, 0.44" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-30.4951, -171.431, -4.31009, 0.44", "-29.3663, -171.833, -4.43335, 0.44", "-28.4681, -172.154, -4.53143, 0.44", "-27.2152, -172.6, -4.66824, 0.44", "-26.7123, -172.779, -4.72316, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-30.4951, -171.431, -4.31009, 0.44", "-30.5225, -170.461, -4.30402, 0.44", "-30.5503, -169.48, -4.29788, 0.44", "-30.5638, -169.002, -4.29489, 0.44", "-30.5853, -168.244, -4.29015, 0.44", "-30.6108, -167.339, -4.2845, 0.44", "-30.633, -166.556, -4.27959, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-62.7507, -518.648, -41.2176, 0.37", "-63.8049, -519.588, -41.1733, 0.37", "-64.6387, -520.343, -41.2613, 0.37", "-65.5022, -521.179, -41.3883, 0.37", "-66.1631, -521.813, -41.4795, 0.37", "-66.6823, -522.266, -41.526, 0.37", "-67.367, -522.813, -41.5628, 0.37", "-68.5937, -523.613, -41.7275, 0.37", "-69.6546, -524.114, -41.8585, 0.37", "-70.3463, -524.319, -41.9254, 0.37", "-71.7043, -524.548, -42.0354, 0.37", "-72.268, -524.592, -42.0425, 0.37", "-74.6603, -524.607, -41.8984, 0.37", "-75.5586, -524.559, -41.7785, 0.37", "-77.606, -524.336, -41.4236, 0.37", "-78.7814, -524.158, -41.1114, 0.37", "-80.4552, -523.781, -40.5068, 0.37", "-81.7902, -523.386, -39.898, 0.37", "-82.7424, -523.018, -39.363, 0.37", "-83.876, -522.508, -38.725, 0.37", "-85.5954, -521.672, -37.773, 0.37", "-87.1608, -520.857, -36.9756, 0.37", "-88.061, -520.371, -36.6285, 0.37", "-89.572, -519.539, -36.0793, 0.37", "-92.5984, -517.902, -35.0846, 0.37", "-94.4582, -516.932, -34.561, 0.37", "-96.3004, -516.034, -34.1779, 0.37", "-99.0984, -514.776, -33.6552, 0.37" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-62.7507, -518.648, -41.2176, 0.52", "-62.9859, -520.405, -41.0039, 0.52", "-63.0402, -521.11, -40.9488, 0.52", "-63.0472, -521.976, -40.913, 0.52", "-62.9549, -522.832, -40.917, 0.52", "-62.7569, -523.907, -40.9544, 0.52", "-62.4052, -525.642, -41.1553, 0.52", "-62.0744, -526.998, -41.4432, 0.52", "-61.7349, -528.327, -41.7874, 0.52", "-61.2808, -530.171, -42.3207, 0.52", "-61.1123, -530.941, -42.5564, 0.52", "-60.7866, -533.035, -43.2065, 0.52", "-60.7457, -533.789, -43.4297, 0.52", "-60.8675, -534.853, -43.7037, 0.52", "-61.1922, -535.994, -43.9053, 0.52", "-61.5259, -536.845, -43.9871, 0.52", "-61.8857, -537.671, -44.0058, 0.52", "-62.2425, -538.464, -43.9702, 0.52", "-62.9055, -539.937, -43.9004, 0.52", "-63.7283, -541.889, -43.8271, 0.52", "-64.2529, -543.308, -43.8087, 0.52", "-64.9067, -545.159, -43.7927, 0.52", "-65.3022, -546.315, -43.7821, 0.52", "-65.6667, -547.41, -43.7632, 0.52", "-66.0097, -548.583, -43.7231, 0.52", "-66.4299, -550.406, -43.7274, 0.52" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-36.7648, -211.513, 22.2406, 0.44", "-36.2532, -212.893, 23.467, 0.44", "-36.0754, -213.373, 23.8934, 0.44", "-35.8891, -213.876, 24.34, 0.44", "-35.7528, -214.244, 24.6668, 0.44" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-36.7648, -211.513, 22.2406, 0.44", "-35.6611, -211.841, 22.9801, 0.44", "-34.46, -212.198, 23.7849, 0.44", "-33.8018, -212.393, 24.2259, 0.44", "-33.3121, -212.538, 24.554, 0.44" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-30.633, -166.556, -4.27959, 0.44", "-32.3065, -168.078, -3.66122, 0.44", "-33.1729, -168.867, -3.34105, 0.44", "-35.5197, -171.002, -2.47388, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-30.633, -166.556, -4.27959, 0.44", "-30.0287, -165.617, -4.97945, 0.44", "-28.5987, -163.063, -6.69393, 0.44", "-28.2607, -162.362, -7.10047, 0.44", "-27.9532, -161.632, -7.48656, 0.44", "-27.683, -160.813, -7.87984, 0.44", "-27.4443, -159.863, -8.33365, 0.44", "-27.0074, -157.386, -9.39475, 0.44", "-26.8631, -156.018, -9.86907, 0.44", "-26.776, -155.289, -10.1362, 0.44", "-26.5451, -153.681, -10.791, 0.44", "-26.1528, -151.205, -11.8376, 0.44", "-25.978, -150.163, -12.273, 0.44", "-25.7294, -148.749, -12.8184, 0.44", "-25.3789, -147.169, -13.4702, 0.44", "-24.9078, -145.447, -14.1785, 0.44", "-24.5096, -144.295, -14.6291, 0.44", "-24.1814, -143.453, -14.9178, 0.44", "-23.8103, -142.609, -15.2301, 0.44", "-22.9588, -140.845, -15.8842, 0.44", "-22.5815, -140.081, -16.1345, 0.44", "-22.0976, -139.239, -16.3758, 0.44", "-21.6545, -138.542, -16.5803, 0.44", "-20.6461, -136.985, -17.0124, 0.44", "-20.386, -136.558, -17.1192, 0.44", "-20.0856, -135.98, -17.2256, 0.44", "-19.7996, -135.232, -17.3583, 0.44", "-19.6138, -134.445, -17.4746, 0.44", "-19.4609, -133.604, -17.5899, 0.44", "-19.3388, -133.017, -17.7147, 0.44", "-19.1583, -132.327, -17.9111, 0.44", "-18.8836, -131.387, -18.2125, 0.44", "-18.5838, -130.394, -18.5398, 0.44", "-18.1141, -129.045, -18.9433, 0.44", "-17.0692, -126.494, -19.7079, 0.44", "-16.6774, -125.636, -19.9585, 0.44", "-16.2001, -124.689, -20.2522, 0.44", "-15.5331, -123.447, -20.633, 0.44", "-14.5488, -121.675, -21.1226, 0.44", "-13.5688, -119.903, -21.5525, 0.44", "-12.9453, -118.801, -21.7807, 0.44", "-12.0129, -117.244, -22.1453, 0.44", "-11.3384, -116.195, -22.4257, 0.44", "-10.4729, -114.946, -22.8151, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-66.4299, -550.406, -43.7274, 0.52", "-66.6419, -552.709, -43.5145, 0.52", "-66.7705, -554.107, -43.3853, 0.52", "-66.8992, -555.504, -43.256, 0.52", "-67.0348, -556.978, -43.1198, 0.52", "-67.2298, -559.097, -42.924, 0.52" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-66.4299, -550.406, -43.7274, 0.52", "-65.474, -552.768, -44.0654, 0.52", "-64.9465, -554.041, -44.1595, 0.52", "-64.3398, -555.423, -44.1154, 0.52", "-63.6354, -556.921, -43.9944, 0.52", "-62.9257, -558.431, -43.8724, 0.52", "-62.4165, -559.515, -43.7849, 0.52", "-61.7866, -560.752, -43.565, 0.52", "-60.6981, -562.802, -43.1004, 0.52", "-59.965, -564.088, -42.7203, 0.52" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-35.7528, -214.244, 24.6668, 0.44", "-35.6816, -215.37, 25.424, 0.44", "-35.6806, -216.74, 26.2325, 0.44", "-35.6866, -217.485, 26.6252, 0.44", "-35.665, -218.838, 27.2637, 0.44", "-35.568, -220.591, 28.1145, 0.44", "-35.4487, -221.817, 28.6947, 0.44", "-35.3504, -222.74, 29.0684, 0.44", "-35.2613, -223.421, 29.2983, 0.44", "-35.1333, -224.226, 29.5497, 0.44", "-34.82, -226.144, 30.1585, 0.44", "-34.7067, -227.048, 30.4375, 0.44", "-34.6905, -227.935, 30.753, 0.44", "-34.7986, -228.88, 31.1076, 0.44", "-34.9941, -229.74, 31.412, 0.44", "-35.4936, -231.511, 32.0602, 0.44", "-35.7577, -232.283, 32.3353, 0.44", "-36.316, -233.716, 32.8817, 0.44", "-36.6371, -234.518, 33.1907, 0.44", "-37.0667, -235.733, 33.6248, 0.44", "-37.7734, -238.277, 34.3839, 0.44", "-37.9361, -239.016, 34.5496, 0.44", "-38.1754, -240.335, 34.805, 0.44", "-38.2936, -241.053, 34.9149, 0.44", "-38.4834, -242.314, 35.1277, 0.44", "-38.6577, -243.601, 35.3423, 0.44", "-38.8433, -245.02, 35.5513, 0.44", "-38.9699, -246.032, 35.7196, 0.44", "-39.3512, -248.414, 36.1734, 0.44", "-39.7948, -250.346, 36.5912, 0.44", "-40.0257, -251.116, 36.7753, 0.44", "-40.3981, -252.078, 36.9828, 0.44", "-40.8078, -252.916, 37.1341, 0.44", "-41.6041, -254.181, 37.3074, 0.44", "-42.1891, -254.952, 37.3662, 0.44", "-42.6423, -255.54, 37.3912, 0.44", "-43.8262, -257.174, 37.4883, 0.44", "-44.6007, -258.372, 37.5667, 0.44", "-45.2788, -259.616, 37.6487, 0.44", "-45.9124, -261.081, 37.7454, 0.44", "-46.4954, -262.863, 37.8644, 0.44", "-46.8071, -264.109, 37.9568, 0.44", "-46.9762, -265.187, 38.0441, 0.44", "-47.1466, -266.586, 38.1737, 0.44", "-47.3373, -267.781, 38.3111, 0.44", "-47.6627, -269.044, 38.4967, 0.44", "-48.0547, -270.321, 38.6881, 0.44", "-48.4343, -271.324, 38.8767, 0.44", "-49.2079, -272.871, 39.2546, 0.44", "-50.2671, -274.414, 39.76, 0.44", "-50.9342, -275.141, 40.0724, 0.44" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-35.7528, -214.244, 24.6668, 0.44", "-36.7201, -214.816, 24.4184, 0.44", "-37.4077, -215.223, 24.2418, 0.44" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-10.4729, -114.946, -22.8151, 0.44", "-12.1015, -113.827, -24.5634, 0.44", "-12.8403, -113.32, -25.3565, 0.44", "-13.4041, -112.933, -25.9616, 0.44", "-14.4415, -112.22, -27.0753, 0.44" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-10.4729, -114.946, -22.8151, 0.44", "-9.89388, -112.97, -22.9633, 0.44", "-9.33577, -111.064, -23.1062, 0.44", "-8.6695, -108.79, -23.2768, 0.44", "-8.34809, -107.693, -23.3591, 0.44", "-8.08187, -106.784, -23.4273, 0.44" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_0", "dend_75", "dend_30", "dend_16", "dend_1", "dend_89", "dend_76", "dend_72", "dend_31", "dend_28", "dend_17", "dend_13", "dend_2", "dend_91", "dend_90", "dend_78", "dend_77", "dend_74", "dend_73", "dend_67", "dend_32", "dend_27", "dend_18", "dend_15", "dend_14", "dend_10", "dend_3", "dend_93", "dend_92", "dend_80", "dend_79", "dend_71", "dend_68", "dend_64", "dend_33", "dend_24", "dend_19", "dend_12", "dend_11", "dend_9", "dend_4", "dend_88", "dend_81", "dend_70", "dend_69", "dend_66", "dend_65", "dend_45", "dend_34", "dend_26", "dend_25", "dend_21", "dend_20", "dend_6", "dend_5", "dend_83", "dend_82", "dend_63", "dend_46", "dend_44", "dend_35", "dend_23", "dend_22", "dend_8", "dend_7", "dend_85", "dend_84", "dend_62", "dend_47", "dend_43", "dend_36", "dend_87", "dend_86", "dend_55", "dend_48", "dend_38", "dend_37", "dend_61", "dend_56", "dend_54", "dend_49", "dend_42", "dend_39", "dend_58", "dend_57", "dend_53", "dend_50", "dend_41", "dend_40", "dend_60", "dend_59", "dend_52", "dend_51" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_0", "dend_75", "dend_30", "dend_16", "dend_1", "dend_89", "dend_76", "dend_72", "dend_31", "dend_28", "dend_17", "dend_13", "dend_2", "dend_91", "dend_90", "dend_78", "dend_77", "dend_74", "dend_73", "dend_67", "dend_32", "dend_27", "dend_18", "dend_15", "dend_14", "dend_10", "dend_3", "dend_93", "dend_92", "dend_80", "dend_79", "dend_71", "dend_68", "dend_64", "dend_33", "dend_24", "dend_19", "dend_12", "dend_11", "dend_9", "dend_4", "dend_88", "dend_81", "dend_70", "dend_69", "dend_66", "dend_65", "dend_45", "dend_34", "dend_26", "dend_25", "dend_21", "dend_20", "dend_6", "dend_5", "dend_83", "dend_82", "dend_63", "dend_46", "dend_44", "dend_35", "dend_23", "dend_22", "dend_8", "dend_7", "dend_85", "dend_84", "dend_62", "dend_47", "dend_43", "dend_36", "dend_87", "dend_86", "dend_55", "dend_48", "dend_38", "dend_37", "dend_61", "dend_56", "dend_54", "dend_49", "dend_42", "dend_39", "dend_58", "dend_57", "dend_53", "dend_50", "dend_41", "dend_40", "dend_60", "dend_59", "dend_52", "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_93", "dend_93", "dend_93", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79", "dend_79", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_34", "dend_34", "dend_34", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_82", "dend_82", "dend_82", "dend_82", "dend_63", "dend_63", "dend_63", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_DBC_65305c1be2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_75, id: dend_75, parent: dend_29
create dend_75
public dend_75
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_89, id: dend_89, parent: dend_75
create dend_89
public dend_89
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_30
create dend_72
public dend_72
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_16
create dend_28
public dend_28
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_91, id: dend_91, parent: dend_89
create dend_91
public dend_91
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_67, id: dend_67, parent: dend_31
create dend_67
public dend_67
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_17
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_93, id: dend_93, parent: dend_91
create dend_93
public dend_93
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_71, id: dend_71, parent: dend_67
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_64, id: dend_64, parent: dend_32
create dend_64
public dend_64
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_88, id: dend_88, parent: dend_80
create dend_88
public dend_88
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_45, id: dend_45, parent: dend_33
create dend_45
public dend_45
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_63, id: dend_63, parent: dend_45
create dend_63
public dend_63
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_34
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_62, id: dend_62, parent: dend_46
create dend_62
public dend_62
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_55, id: dend_55, parent: dend_47
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_48
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_75, dend_30, dend_16, dend_1, dend_89, dend_76, dend_72, dend_31, dend_28, dend_17, dend_13, dend_2, dend_91, dend_90, dend_78, dend_77, dend_74, dend_73, dend_67, dend_32, dend_27, dend_18, dend_15, dend_14, dend_10, dend_3, dend_93, dend_92, dend_80, dend_79, dend_71, dend_68, dend_64, dend_33, dend_24, dend_19, dend_12, dend_11, dend_9, dend_4, dend_88, dend_81, dend_70, dend_69, dend_66, dend_65, dend_45, dend_34, dend_26, dend_25, dend_21, dend_20, dend_6, dend_5, dend_83, dend_82, dend_63, dend_46, dend_44, dend_35, dend_23, dend_22, dend_8, dend_7, dend_85, dend_84, dend_62, dend_47, dend_43, dend_36, dend_87, dend_86, dend_55, dend_48, dend_38, dend_37, dend_61, dend_56, dend_54, dend_49, dend_42, dend_39, dend_58, dend_57, dend_53, dend_50, dend_41, dend_40, dend_60, dend_59, dend_52, dend_51]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_75, dend_30, dend_16, dend_1, dend_89, dend_76, dend_72, dend_31, dend_28, dend_17, dend_13, dend_2, dend_91, dend_90, dend_78, dend_77, dend_74, dend_73, dend_67, dend_32, dend_27, dend_18, dend_15, dend_14, dend_10, dend_3, dend_93, dend_92, dend_80, dend_79, dend_71, dend_68, dend_64, dend_33, dend_24, dend_19, dend_12, dend_11, dend_9, dend_4, dend_88, dend_81, dend_70, dend_69, dend_66, dend_65, dend_45, dend_34, dend_26, dend_25, dend_21, dend_20, dend_6, dend_5, dend_83, dend_82, dend_63, dend_46, dend_44, dend_35, dend_23, dend_22, dend_8, dend_7, dend_85, dend_84, dend_62, dend_47, dend_43, dend_36, dend_87, dend_86, dend_55, dend_48, dend_38, dend_37, dend_61, dend_56, dend_54, dend_49, dend_42, dend_39, dend_58, dend_57, dend_53, dend_50, dend_41, dend_40, dend_60, dend_59, dend_52, dend_51]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_93
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, axon_1, axon_1, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_34, dend_34, dend_34, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_63, dend_63, dend_63, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_62, dend_62, dend_62, dend_62, dend_62, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.45000018766376804)
    connect dend_0(0), soma_0(0.45000018766376804)
    connect axon_0(0), soma_0(1.0)
    connect dend_75(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_89(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_91(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_67(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_27(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_93(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_71(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_64(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_88(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_45(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_63(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_62(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_55(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.92851, -12.838, 0.0, 2.34028 ) }
    soma_0 { pt3dadd( 1.77053, -11.651, 0.0, 3.94329 ) }
    soma_0 { pt3dadd( 1.61254, -10.464, 0.0, 5.35921 ) }
    soma_0 { pt3dadd( 1.45455, -9.27692, 0.0, 6.69673 ) }
    soma_0 { pt3dadd( 1.29656, -8.08988, 0.0, 7.75393 ) }
    soma_0 { pt3dadd( 1.13858, -6.90284, 0.0, 8.64632 ) }
    soma_0 { pt3dadd( 0.980589, -5.7158, 0.0, 9.469 ) }
    soma_0 { pt3dadd( 0.822601, -4.52876, 0.0, 10.3084 ) }
    soma_0 { pt3dadd( 0.664614, -3.34172, 0.0, 11.1451 ) }
    soma_0 { pt3dadd( 0.506626, -2.15468, 0.0, 11.8845 ) }
    soma_0 { pt3dadd( 0.348639, -0.967645, 0.0, 12.0097 ) }
    soma_0 { pt3dadd( 0.190651, 0.219395, 0.0, 12.0138 ) }
    soma_0 { pt3dadd( 0.0326638, 1.40643, 0.0, 11.4011 ) }
    soma_0 { pt3dadd( -0.125324, 2.59347, 0.0, 10.4698 ) }
    soma_0 { pt3dadd( -0.283311, 3.78051, 0.0, 9.36538 ) }
    soma_0 { pt3dadd( -0.441299, 4.96755, 0.0, 8.29429 ) }
    soma_0 { pt3dadd( -0.599286, 6.15459, 0.0, 7.29384 ) }
    soma_0 { pt3dadd( -0.757274, 7.34163, 0.0, 6.35176 ) }
    soma_0 { pt3dadd( -0.915261, 8.52867, 0.0, 5.48996 ) }
    soma_0 { pt3dadd( -1.07325, 9.71571, 0.0, 4.74604 ) }
    soma_0 { pt3dadd( -1.23124, 10.9027, 0.0, 2.99829 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 2.20047, -12.9375, 0.07, 2.87 ) }
    dend_29 { pt3dadd( 2.26618, -13.3675, 0.0251773, 2.87 ) }
    dend_29 { pt3dadd( 2.62757, -15.5898, 0.0810191, 2.87 ) }
    dend_29 { pt3dadd( 3.025, -17.8716, 0.262392, 2.87 ) }
    dend_29 { pt3dadd( 3.4492, -20.3072, 0.455984, 2.58 ) }
    dend_29 { pt3dadd( 3.89694, -22.878, 0.660321, 2.58 ) }
    dend_29 { pt3dadd( 4.35228, -25.4923, 0.86812, 2.06 ) }
    dend_29 { pt3dadd( 4.99108, -29.1141, 1.22385, 2.06 ) }
    dend_29 { pt3dadd( 5.21848, -30.4146, 1.41055, 2.06 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.13953, 12.4515, 1.0, 3.46 ) }
    dend_0 { pt3dadd( -2.17306, 12.5887, 1.0, 3.46 ) }
    dend_0 { pt3dadd( -2.52844, 14.1706, 0.996174, 2.65 ) }
    dend_0 { pt3dadd( -2.8194, 15.4727, 0.991772, 2.65 ) }
    dend_0 { pt3dadd( -3.14167, 16.9509, 0.986363, 2.65 ) }
    dend_0 { pt3dadd( -3.43425, 18.3256, 0.9492, 2.5 ) }
    dend_0 { pt3dadd( -3.66178, 19.4121, 0.905062, 2.5 ) }
    dend_0 { pt3dadd( -3.92171, 20.6917, 0.837011, 2.5 ) }
    dend_0 { pt3dadd( -4.20821, 22.1159, 0.743725, 2.06 ) }
    dend_0 { pt3dadd( -4.48996, 23.469, 0.650476, 1.99 ) }
    dend_0 { pt3dadd( -4.66836, 24.3038, 0.594495, 1.99 ) }
    dend_0 { pt3dadd( -4.89087, 25.3647, 0.560042, 1.99 ) }
    dend_0 { pt3dadd( -5.15571, 26.6277, 0.526197, 1.99 ) }
    dend_0 { pt3dadd( -5.40604, 27.7558, 0.510071, 1.99 ) }
    dend_0 { pt3dadd( -5.63163, 28.7892, 0.519016, 1.69 ) }
    dend_0 { pt3dadd( -5.91702, 30.0419, 0.583627, 1.4 ) }
    dend_0 { pt3dadd( -6.15937, 31.0895, 0.710321, 1.25 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 47/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.23124, 10.9027, 0.0, 0.52 ) }
    axon_0 { pt3dadd( -3.2102, 25.7716, 0.0, 0.52 ) }
    axon_0 { pt3dadd( -5.18917, 40.6405, 0.0, 0.52 ) }
    // Section: dend_75, id: dend_75, parent: dend_29 (entry count 50/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 5.21848, -30.4146, 1.41055, 0.74 ) }
    dend_75 { pt3dadd( 6.72018, -31.96, 2.07067, 0.74 ) }
    dend_75 { pt3dadd( 7.87945, -33.1504, 2.49126, 0.74 ) }
    dend_75 { pt3dadd( 9.61955, -34.9372, 3.12258, 0.74 ) }
    dend_75 { pt3dadd( 10.7794, -36.1281, 3.54339, 0.74 ) }
    dend_75 { pt3dadd( 12.8117, -38.2149, 4.28072, 0.74 ) }
    dend_75 { pt3dadd( 14.0168, -39.4524, 4.71796, 0.74 ) }
    dend_75 { pt3dadd( 16.149, -41.6177, 5.52623, 0.74 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 58/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 5.21848, -30.4146, 1.41055, 1.33 ) }
    dend_30 { pt3dadd( 5.62738, -34.0838, 1.02316, 1.33 ) }
    dend_30 { pt3dadd( 5.88741, -36.4171, 0.776803, 1.33 ) }
    dend_30 { pt3dadd( 6.25437, -39.71, 0.429139, 1.33 ) }
    dend_30 { pt3dadd( 6.47594, -41.6982, 0.219225, 1.33 ) }
    dend_30 { pt3dadd( 6.71603, -43.8525, -0.00823313, 1.33 ) }
    dend_30 { pt3dadd( 7.04314, -46.7878, -0.318136, 1.33 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 65/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.15937, 31.0895, 0.710321, 1.18 ) }
    dend_16 { pt3dadd( -6.33078, 32.9407, 1.27296, 1.18 ) }
    dend_16 { pt3dadd( -6.38872, 34.3019, 1.53247, 1.18 ) }
    dend_16 { pt3dadd( -6.40791, 35.5542, 1.70731, 1.18 ) }
    dend_16 { pt3dadd( -6.41104, 36.6847, 1.80003, 1.18 ) }
    dend_16 { pt3dadd( -6.41601, 41.0626, 1.7262, 1.25 ) }
    dend_16 { pt3dadd( -6.37074, 44.491, 1.47875, 0.81 ) }
    dend_16 { pt3dadd( -6.29556, 45.9717, 1.34375, 0.81 ) }
    dend_16 { pt3dadd( -6.18899, 47.0036, 1.17697, 0.81 ) }
    dend_16 { pt3dadd( -5.97177, 48.2148, 0.82772, 0.81 ) }
    dend_16 { pt3dadd( -5.54816, 50.0292, 0.106721, 0.81 ) }
    dend_16 { pt3dadd( -5.24098, 51.2074, -0.473545, 0.81 ) }
    dend_16 { pt3dadd( -4.89585, 52.537, -1.02191, 0.81 ) }
    dend_16 { pt3dadd( -4.63953, 53.4748, -1.42295, 0.81 ) }
    dend_16 { pt3dadd( -4.12152, 55.203, -2.11542, 0.81 ) }
    dend_16 { pt3dadd( -3.81396, 56.1691, -2.47695, 0.81 ) }
    dend_16 { pt3dadd( -3.39852, 57.4488, -2.90641, 0.81 ) }
    dend_16 { pt3dadd( -3.12684, 58.3777, -3.24567, 0.81 ) }
    dend_16 { pt3dadd( -2.7887, 59.7931, -3.77483, 0.81 ) }
    dend_16 { pt3dadd( -2.50302, 61.1213, -4.21906, 0.81 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 85/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.15937, 31.0895, 0.710321, 1.25 ) }
    dend_1 { pt3dadd( -6.48011, 32.6875, 1.78754, 1.25 ) }
    dend_1 { pt3dadd( -6.73328, 33.949, 2.63784, 1.25 ) }
    dend_1 { pt3dadd( -7.24296, 36.4884, 4.34964, 1.25 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 89/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -5.18917, 40.6405, 0.0, 0.52 ) }
    axon_1 { pt3dadd( -7.16813, 55.5094, 0.0, 0.52 ) }
    axon_1 { pt3dadd( -9.14709, 70.3782, 0.0, 0.52 ) }
    // Section: dend_89, id: dend_89, parent: dend_75 (entry count 92/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( 16.149, -41.6177, 5.52623, 0.37 ) }
    dend_89 { pt3dadd( 17.6356, -43.8213, 5.90013, 0.37 ) }
    dend_89 { pt3dadd( 18.6598, -45.2149, 6.2932, 0.37 ) }
    dend_89 { pt3dadd( 19.6334, -46.5099, 6.70367, 0.37 ) }
    dend_89 { pt3dadd( 21.1922, -48.6677, 7.36561, 0.37 ) }
    dend_89 { pt3dadd( 22.3557, -50.2372, 7.9817, 0.37 ) }
    dend_89 { pt3dadd( 23.2066, -51.3452, 8.45915, 0.37 ) }
    dend_89 { pt3dadd( 24.2397, -52.6421, 9.12713, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_89 { pt3dadd( 25.2954, -53.9405, 9.82519, 0.37 ) }
    dend_89 { pt3dadd( 26.5735, -55.3707, 10.6262, 0.37 ) }
    dend_89 { pt3dadd( 28.3865, -57.179, 11.5277, 0.37 ) }
    dend_89 { pt3dadd( 29.3784, -58.1118, 12.0315, 0.37 ) }
    dend_89 { pt3dadd( 30.8048, -59.5385, 12.8054, 0.37 ) }
    dend_89 { pt3dadd( 31.1775, -59.9373, 13.0023, 0.37 ) }
    dend_89 { pt3dadd( 32.1068, -61.0077, 13.4973, 0.37 ) }
    dend_89 { pt3dadd( 33.3284, -62.5024, 14.1475, 0.37 ) }
    dend_89 { pt3dadd( 34.4233, -63.9652, 14.6774, 0.37 ) }
    dend_89 { pt3dadd( 35.8561, -65.8908, 15.39, 0.37 ) }
    dend_89 { pt3dadd( 36.8038, -67.2251, 15.896, 0.37 ) }
    dend_89 { pt3dadd( 37.8567, -68.8252, 16.4759, 0.37 ) }
    dend_89 { pt3dadd( 38.417, -69.7883, 16.7904, 0.37 ) }
    dend_89 { pt3dadd( 39.1408, -71.1186, 17.2091, 0.37 ) }
    dend_89 { pt3dadd( 39.8381, -72.1849, 17.4796, 0.37 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 15/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 16.149, -41.6177, 5.52623, 0.59 ) }
    dend_76 { pt3dadd( 16.9487, -41.6484, 5.49282, 0.59 ) }
    dend_76 { pt3dadd( 17.3841, -41.6558, 5.47785, 0.59 ) }
    dend_76 { pt3dadd( 18.2885, -41.661, 5.45422, 0.59 ) }
    dend_76 { pt3dadd( 18.8159, -41.6553, 5.41284, 0.52 ) }
    dend_76 { pt3dadd( 19.1483, -41.6592, 5.37831, 0.52 ) }
    dend_76 { pt3dadd( 19.6585, -41.6689, 5.31823, 0.52 ) }
    dend_76 { pt3dadd( 20.1745, -41.6794, 5.24532, 0.52 ) }
    dend_76 { pt3dadd( 20.7338, -41.6992, 5.18427, 0.52 ) }
    dend_76 { pt3dadd( 21.4453, -41.731, 5.13955, 0.52 ) }
    dend_76 { pt3dadd( 22.1349, -41.7792, 5.13163, 0.52 ) }
    dend_76 { pt3dadd( 22.8476, -41.8477, 5.15754, 0.52 ) }
    dend_76 { pt3dadd( 23.3537, -41.9119, 5.20332, 0.52 ) }
    dend_76 { pt3dadd( 24.1097, -42.026, 5.32387, 0.52 ) }
    dend_76 { pt3dadd( 24.7082, -42.1199, 5.45487, 0.52 ) }
    dend_76 { pt3dadd( 25.1882, -42.1981, 5.60575, 0.52 ) }
    dend_76 { pt3dadd( 25.6475, -42.2697, 5.7632, 0.52 ) }
    dend_76 { pt3dadd( 26.2956, -42.383, 6.00368, 0.52 ) }
    dend_76 { pt3dadd( 26.8189, -42.4777, 6.20123, 0.52 ) }
    dend_76 { pt3dadd( 27.4304, -42.586, 6.4203, 0.52 ) }
    dend_76 { pt3dadd( 28.6359, -42.8003, 6.88214, 0.52 ) }
    // Section: dend_72, id: dend_72, parent: dend_30 (entry count 36/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 7.04314, -46.7878, -0.318136, 0.81 ) }
    dend_72 { pt3dadd( 5.50227, -50.8608, -1.25, 0.81 ) }
    dend_72 { pt3dadd( 4.76258, -52.8669, -1.81575, 0.81 ) }
    dend_72 { pt3dadd( 4.21334, -54.3442, -2.23987, 0.81 ) }
    dend_72 { pt3dadd( 3.41393, -56.3258, -2.79446, 0.59 ) }
    dend_72 { pt3dadd( 3.05473, -57.1667, -3.06682, 0.52 ) }
    dend_72 { pt3dadd( 2.39039, -58.692, -3.58595, 0.52 ) }
    dend_72 { pt3dadd( 1.33857, -60.9205, -4.30539, 0.52 ) }
    dend_72 { pt3dadd( 0.714662, -62.0537, -4.7421, 0.52 ) }
    dend_72 { pt3dadd( 0.159011, -62.9474, -5.11063, 0.52 ) }
    dend_72 { pt3dadd( -1.26471, -64.9951, -5.98279, 0.52 ) }
    dend_72 { pt3dadd( -1.81942, -65.7107, -6.28763, 0.52 ) }
    dend_72 { pt3dadd( -3.46114, -67.5889, -7.04516, 0.52 ) }
    dend_72 { pt3dadd( -4.6331, -68.8903, -7.52766, 0.52 ) }
    dend_72 { pt3dadd( -6.09365, -70.4341, -8.20918, 0.52 ) }
    dend_72 { pt3dadd( -7.23299, -71.6847, -8.79227, 0.52 ) }
    dend_72 { pt3dadd( -7.85841, -72.4131, -9.14769, 0.52 ) }
    dend_72 { pt3dadd( -8.44376, -73.1528, -9.54458, 0.52 ) }
    dend_72 { pt3dadd( -9.58938, -74.8066, -10.5171, 0.52 ) }
    dend_72 { pt3dadd( -10.9674, -77.0413, -11.8709, 0.52 ) }
    dend_72 { pt3dadd( -11.6585, -78.3515, -12.6869, 0.52 ) }
    dend_72 { pt3dadd( -12.4896, -80.1394, -13.771, 0.52 ) }
    dend_72 { pt3dadd( -12.7641, -80.761, -14.1721, 0.52 ) }
    dend_72 { pt3dadd( -13.7875, -83.1461, -15.7314, 0.52 ) }
    dend_72 { pt3dadd( -14.2724, -84.3188, -16.4573, 0.52 ) }
    dend_72 { pt3dadd( -15.0112, -86.2684, -17.6313, 0.52 ) }
    dend_72 { pt3dadd( -15.4998, -87.5529, -18.3953, 0.52 ) }
    dend_72 { pt3dadd( -16.452, -90.1007, -19.77, 0.52 ) }
    dend_72 { pt3dadd( -16.6453, -90.6604, -20.0473, 0.52 ) }
    dend_72 { pt3dadd( -17.1013, -92.1435, -20.6724, 0.52 ) }
    dend_72 { pt3dadd( -17.8584, -94.5681, -21.5923, 0.52 ) }
    dend_72 { pt3dadd( -18.3218, -95.9829, -22.0103, 0.52 ) }
    dend_72 { pt3dadd( -19.0029, -97.9901, -22.4973, 0.52 ) }
    dend_72 { pt3dadd( -19.7374, -100.017, -22.9321, 0.52 ) }
    dend_72 { pt3dadd( -20.3125, -101.443, -23.2017, 0.52 ) }
    dend_72 { pt3dadd( -21.404, -103.793, -23.7072, 0.52 ) }
    dend_72 { pt3dadd( -22.4416, -105.805, -24.1357, 0.52 ) }
    dend_72 { pt3dadd( -22.914, -106.623, -24.3699, 0.52 ) }
    dend_72 { pt3dadd( -24.4281, -109.062, -25.1742, 0.52 ) }
    dend_72 { pt3dadd( -26.0416, -111.513, -26.1913, 0.52 ) }
    dend_72 { pt3dadd( -27.9103, -114.238, -27.5105, 0.52 ) }
    dend_72 { pt3dadd( -29.0757, -115.901, -28.4823, 0.52 ) }
    dend_72 { pt3dadd( -30.9045, -118.507, -30.1869, 0.52 ) }
    dend_72 { pt3dadd( -31.6372, -119.569, -30.9433, 0.52 ) }
    dend_72 { pt3dadd( -33.5256, -122.392, -33.029, 0.52 ) }
    dend_72 { pt3dadd( -33.8147, -122.864, -33.4172, 0.52 ) }
    dend_72 { pt3dadd( -35.3371, -125.698, -35.6471, 0.52 ) }
    dend_72 { pt3dadd( -35.9998, -127.094, -36.8139, 0.52 ) }
    dend_72 { pt3dadd( -36.8568, -129.205, -38.5312, 0.52 ) }
    dend_72 { pt3dadd( -37.3636, -130.515, -39.6144, 0.52 ) }
    dend_72 { pt3dadd( -38.4406, -133.418, -41.8881, 0.52 ) }
    dend_72 { pt3dadd( -38.9403, -134.849, -42.9777, 0.52 ) }
    dend_72 { pt3dadd( -39.862, -137.642, -45.0648, 0.52 ) }
    dend_72 { pt3dadd( -40.1654, -138.536, -45.7274, 0.52 ) }
    dend_72 { pt3dadd( -40.9384, -140.753, -47.2027, 0.52 ) }
    dend_72 { pt3dadd( -41.2756, -141.677, -47.7461, 0.52 ) }
    dend_72 { pt3dadd( -41.7552, -142.932, -48.2979, 0.52 ) }
    dend_72 { pt3dadd( -42.7731, -145.52, -49.1264, 0.52 ) }
    dend_72 { pt3dadd( -43.4054, -146.889, -49.3996, 0.52 ) }
    dend_72 { pt3dadd( -44.2215, -148.328, -49.6135, 0.52 ) }
    dend_72 { pt3dadd( -44.8819, -149.337, -49.6946, 0.52 ) }
    dend_72 { pt3dadd( -45.5617, -150.224, -49.7394, 0.52 ) }
    dend_72 { pt3dadd( -46.9274, -151.679, -49.7207, 0.52 ) }
    dend_72 { pt3dadd( -49.3649, -153.939, -49.6747, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_72 { pt3dadd( -51.2672, -155.595, -49.931, 0.52 ) }
    dend_72 { pt3dadd( -52.6055, -156.738, -50.2265, 0.52 ) }
    dend_72 { pt3dadd( -53.6466, -157.646, -50.5189, 0.52 ) }
    dend_72 { pt3dadd( -56.0998, -159.887, -51.3011, 0.52 ) }
    dend_72 { pt3dadd( -58.2101, -161.925, -52.1041, 0.52 ) }
    dend_72 { pt3dadd( -61.3193, -165.198, -53.3887, 0.52 ) }
    dend_72 { pt3dadd( -62.9849, -167.022, -54.1276, 0.52 ) }
    dend_72 { pt3dadd( -63.9077, -168.062, -54.5663, 0.52 ) }
    dend_72 { pt3dadd( -65.8077, -170.318, -55.6092, 0.52 ) }
    dend_72 { pt3dadd( -68.0124, -173.074, -56.8697, 0.52 ) }
    dend_72 { pt3dadd( -68.6978, -173.958, -57.2257, 0.52 ) }
    dend_72 { pt3dadd( -70.0345, -175.693, -58.0099, 0.52 ) }
    dend_72 { pt3dadd( -71.634, -177.866, -59.1638, 0.52 ) }
    dend_72 { pt3dadd( -73.5697, -180.665, -60.714, 0.52 ) }
    dend_72 { pt3dadd( -74.903, -182.735, -61.8718, 0.52 ) }
    dend_72 { pt3dadd( -75.5424, -183.791, -62.4287, 0.52 ) }
    dend_72 { pt3dadd( -78.03, -187.927, -64.4977, 0.52 ) }
    dend_72 { pt3dadd( -78.998, -189.593, -65.2526, 0.52 ) }
    dend_72 { pt3dadd( -80.1054, -191.407, -66.0233, 0.52 ) }
    dend_72 { pt3dadd( -80.6943, -192.334, -66.381, 0.52 ) }
    dend_72 { pt3dadd( -81.9363, -194.103, -67.3633, 0.52 ) }
    dend_72 { pt3dadd( -82.9369, -195.385, -68.1777, 0.52 ) }
    dend_72 { pt3dadd( -83.8068, -196.427, -68.8472, 0.52 ) }
    dend_72 { pt3dadd( -86.3154, -199.278, -70.9929, 0.52 ) }
    dend_72 { pt3dadd( -87.6458, -200.743, -72.2265, 0.52 ) }
    dend_72 { pt3dadd( -91.3816, -204.843, -75.9733, 0.52 ) }
    dend_72 { pt3dadd( -92.1893, -205.735, -76.8636, 0.52 ) }
    dend_72 { pt3dadd( -93.2384, -206.939, -78.1516, 0.52 ) }
    dend_72 { pt3dadd( -94.7073, -208.611, -80.0472, 0.52 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 29/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 7.04314, -46.7878, -0.318136, 1.33 ) }
    dend_31 { pt3dadd( 7.04395, -46.8413, -0.311324, 1.33 ) }
    dend_31 { pt3dadd( 7.07593, -49.0085, -0.0861542, 1.33 ) }
    dend_31 { pt3dadd( 7.1056, -52.0219, 0.177698, 1.33 ) }
    dend_31 { pt3dadd( 7.12406, -53.7913, 0.3773, 1.33 ) }
    dend_31 { pt3dadd( 7.1581, -55.5678, 0.597885, 1.18 ) }
    dend_31 { pt3dadd( 7.20182, -57.0303, 0.811779, 1.18 ) }
    dend_31 { pt3dadd( 7.29521, -59.0289, 1.13175, 1.18 ) }
    dend_31 { pt3dadd( 7.39156, -60.69, 1.41563, 1.18 ) }
    dend_31 { pt3dadd( 7.45503, -62.222, 1.69989, 1.18 ) }
    dend_31 { pt3dadd( 7.48271, -64.1325, 2.08926, 1.18 ) }
    dend_31 { pt3dadd( 7.47815, -66.1961, 2.56181, 1.18 ) }
    dend_31 { pt3dadd( 7.46212, -67.9244, 2.96898, 1.18 ) }
    dend_31 { pt3dadd( 7.4518, -68.9789, 3.23, 1.18 ) }
    dend_31 { pt3dadd( 7.39914, -70.819, 3.66137, 1.18 ) }
    dend_31 { pt3dadd( 7.30498, -72.4951, 4.00151, 1.03 ) }
    dend_31 { pt3dadd( 7.21519, -73.6922, 4.2474, 1.03 ) }
    dend_31 { pt3dadd( 7.01693, -75.9749, 4.69389, 1.03 ) }
    dend_31 { pt3dadd( 6.88796, -77.4835, 5.00391, 1.03 ) }
    dend_31 { pt3dadd( 6.74988, -79.3888, 5.39094, 1.03 ) }
    dend_31 { pt3dadd( 6.62192, -81.1108, 5.70824, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_16 (entry count 50/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -2.50302, 61.1213, -4.21906, 0.52 ) }
    dend_28 { pt3dadd( -3.374, 62.9536, -5.69276, 0.52 ) }
    dend_28 { pt3dadd( -3.85639, 63.9902, -6.53207, 0.52 ) }
    dend_28 { pt3dadd( -5.01906, 66.3212, -8.29925, 0.52 ) }
    dend_28 { pt3dadd( -5.34631, 66.9367, -8.73419, 0.52 ) }
    dend_28 { pt3dadd( -5.95688, 67.9902, -9.42725, 0.52 ) }
    dend_28 { pt3dadd( -6.41736, 68.7606, -9.89699, 0.52 ) }
    dend_28 { pt3dadd( -7.3628, 70.3447, -10.7856, 0.52 ) }
    dend_28 { pt3dadd( -8.04157, 71.5464, -11.4113, 0.52 ) }
    dend_28 { pt3dadd( -8.5195, 72.4302, -11.799, 0.52 ) }
    dend_28 { pt3dadd( -9.01864, 73.3726, -12.2367, 0.52 ) }
    dend_28 { pt3dadd( -9.40045, 74.1035, -12.5707, 0.52 ) }
    dend_28 { pt3dadd( -10.2385, 75.7364, -13.3959, 0.52 ) }
    dend_28 { pt3dadd( -10.5752, 76.4181, -13.738, 0.52 ) }
    dend_28 { pt3dadd( -10.8818, 77.0271, -14.088, 0.52 ) }
    dend_28 { pt3dadd( -11.3384, 77.8633, -14.5825, 0.52 ) }
    dend_28 { pt3dadd( -11.8241, 78.6444, -15.1334, 0.52 ) }
    dend_28 { pt3dadd( -13.1313, 80.4357, -16.4876, 0.52 ) }
    dend_28 { pt3dadd( -13.5419, 80.9767, -16.8772, 0.52 ) }
    dend_28 { pt3dadd( -13.8685, 81.4225, -17.1932, 0.52 ) }
    dend_28 { pt3dadd( -14.4479, 82.2392, -17.7407, 0.52 ) }
    dend_28 { pt3dadd( -15.7039, 84.0049, -18.8541, 0.52 ) }
    dend_28 { pt3dadd( -16.1376, 84.6103, -19.1709, 0.52 ) }
    dend_28 { pt3dadd( -16.8488, 85.5926, -19.6228, 0.52 ) }
    dend_28 { pt3dadd( -17.4, 86.4178, -20.002, 0.52 ) }
    dend_28 { pt3dadd( -17.9865, 87.3678, -20.505, 0.52 ) }
    dend_28 { pt3dadd( -18.4623, 88.1862, -21.0747, 0.52 ) }
    dend_28 { pt3dadd( -18.927, 89.0536, -21.752, 0.52 ) }
    dend_28 { pt3dadd( -19.6955, 90.6899, -23.2628, 0.52 ) }
    dend_28 { pt3dadd( -20.013, 91.5452, -24.223, 0.52 ) }
    dend_28 { pt3dadd( -20.293, 92.8287, -25.7382, 0.52 ) }
    dend_28 { pt3dadd( -20.3124, 94.6256, -27.9866, 0.52 ) }
    dend_28 { pt3dadd( -20.2693, 94.8784, -28.3385, 0.52 ) }
    dend_28 { pt3dadd( -20.1026, 95.3564, -29.0775, 0.52 ) }
    dend_28 { pt3dadd( -19.5894, 96.2469, -30.6574, 0.52 ) }
    dend_28 { pt3dadd( -19.0826, 96.9672, -32.0399, 0.52 ) }
    dend_28 { pt3dadd( -18.2908, 97.9988, -33.9385, 0.52 ) }
    dend_28 { pt3dadd( -17.1804, 99.3091, -36.2902, 0.52 ) }
    dend_28 { pt3dadd( -16.8937, 99.6441, -36.8877, 0.52 ) }
    dend_28 { pt3dadd( -16.0283, 100.613, -38.6492, 0.52 ) }
    dend_28 { pt3dadd( -15.5923, 101.037, -39.3919, 0.52 ) }
    dend_28 { pt3dadd( -15.167, 101.378, -40.0597, 0.52 ) }
    dend_28 { pt3dadd( -14.7351, 101.694, -40.6343, 0.52 ) }
    dend_28 { pt3dadd( -14.3449, 101.906, -41.1664, 0.52 ) }
    dend_28 { pt3dadd( -12.8548, 102.615, -43.282, 0.52 ) }
    dend_28 { pt3dadd( -12.2957, 102.833, -44.3434, 0.52 ) }
    dend_28 { pt3dadd( -11.1492, 103.112, -46.8606, 0.52 ) }
    dend_28 { pt3dadd( -10.6023, 103.181, -48.0978, 0.52 ) }
    dend_28 { pt3dadd( -8.96187, 103.222, -52.0678, 0.52 ) }
    dend_28 { pt3dadd( -8.59438, 103.203, -52.9378, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_28 { pt3dadd( -5.0668, 102.792, -60.7866, 0.52 ) }
    dend_28 { pt3dadd( -3.74777, 102.574, -63.5678, 0.52 ) }
    dend_28 { pt3dadd( -3.0223, 102.402, -65.067, 0.52 ) }
    dend_28 { pt3dadd( -1.0838, 101.809, -69.1053, 0.52 ) }
    dend_28 { pt3dadd( -0.211616, 101.5, -70.7998, 0.52 ) }
    dend_28 { pt3dadd( 0.482942, 101.21, -72.1062, 0.52 ) }
    dend_28 { pt3dadd( 2.67392, 100.167, -75.796, 0.52 ) }
    dend_28 { pt3dadd( 4.65594, 99.1712, -79.1263, 0.52 ) }
    dend_28 { pt3dadd( 6.46685, 98.1957, -82.3413, 0.52 ) }
    dend_28 { pt3dadd( 7.07556, 97.8261, -83.4444, 0.52 ) }
    dend_28 { pt3dadd( 8.41998, 96.874, -86.1838, 0.52 ) }
    dend_28 { pt3dadd( 9.15927, 96.2809, -87.7931, 0.52 ) }
    dend_28 { pt3dadd( 9.54014, 95.9659, -88.5426, 0.52 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 13/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -2.50302, 61.1213, -4.21906, 0.81 ) }
    dend_17 { pt3dadd( -2.06649, 62.2439, -4.32708, 0.81 ) }
    dend_17 { pt3dadd( -1.71375, 63.2298, -4.50107, 0.81 ) }
    dend_17 { pt3dadd( -1.32639, 64.2099, -4.70534, 0.81 ) }
    dend_17 { pt3dadd( -0.805266, 65.3432, -4.95378, 0.81 ) }
    dend_17 { pt3dadd( -0.308421, 66.3263, -5.17151, 0.81 ) }
    dend_17 { pt3dadd( 0.224594, 67.3811, -5.4051, 0.81 ) }
    dend_17 { pt3dadd( 1.03713, 69.0491, -5.76569, 0.81 ) }
    dend_17 { pt3dadd( 1.53892, 70.0803, -6.00826, 0.81 ) }
    dend_17 { pt3dadd( 2.34589, 71.5882, -6.41008, 0.81 ) }
    dend_17 { pt3dadd( 2.79801, 72.2861, -6.62688, 0.81 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 24/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -7.24296, 36.4884, 4.34964, 0.81 ) }
    dend_13 { pt3dadd( -6.5322, 37.5134, 6.35422, 0.81 ) }
    dend_13 { pt3dadd( -6.32782, 37.6965, 7.02636, 0.81 ) }
    dend_13 { pt3dadd( -5.85252, 37.9301, 8.48266, 0.81 ) }
    dend_13 { pt3dadd( -5.48992, 38.0176, 9.44102, 0.59 ) }
    dend_13 { pt3dadd( -5.20168, 38.0603, 10.1176, 0.52 ) }
    dend_13 { pt3dadd( -4.62975, 38.1462, 11.2911, 0.52 ) }
    dend_13 { pt3dadd( -3.60897, 38.122, 12.8458, 0.52 ) }
    dend_13 { pt3dadd( -3.19696, 38.1007, 13.382, 0.52 ) }
    dend_13 { pt3dadd( -2.70493, 38.0828, 13.9311, 0.52 ) }
    dend_13 { pt3dadd( -2.09911, 38.0797, 14.5743, 0.52 ) }
    dend_13 { pt3dadd( -1.4518, 38.0846, 15.2784, 0.52 ) }
    dend_13 { pt3dadd( -0.938988, 38.083, 15.7847, 0.52 ) }
    dend_13 { pt3dadd( -0.442334, 38.0234, 16.2439, 0.52 ) }
    dend_13 { pt3dadd( 0.332987, 37.7597, 17.096, 0.52 ) }
    dend_13 { pt3dadd( 0.964104, 37.3826, 17.8431, 0.52 ) }
    dend_13 { pt3dadd( 1.55033, 36.9211, 18.5144, 0.52 ) }
    dend_13 { pt3dadd( 1.99539, 36.5243, 19.0021, 0.52 ) }
    dend_13 { pt3dadd( 2.54179, 36.0538, 19.5917, 0.52 ) }
    dend_13 { pt3dadd( 2.93996, 35.7379, 20.0082, 0.52 ) }
    dend_13 { pt3dadd( 3.41904, 35.3991, 20.4411, 0.52 ) }
    dend_13 { pt3dadd( 3.85619, 35.1113, 20.8099, 0.52 ) }
    dend_13 { pt3dadd( 4.20888, 34.9061, 21.104, 0.52 ) }
    dend_13 { pt3dadd( 5.35645, 34.2801, 22.1286, 0.52 ) }
    dend_13 { pt3dadd( 6.11493, 33.8638, 22.8691, 0.52 ) }
    dend_13 { pt3dadd( 6.65757, 33.5452, 23.4176, 0.52 ) }
    dend_13 { pt3dadd( 7.14298, 33.2111, 23.9904, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 51/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -7.24296, 36.4884, 4.34964, 0.88 ) }
    dend_2 { pt3dadd( -8.88506, 37.3111, 5.71409, 0.88 ) }
    dend_2 { pt3dadd( -10.2035, 38.0256, 6.70791, 0.88 ) }
    dend_2 { pt3dadd( -11.6531, 38.8786, 7.67854, 0.81 ) }
    dend_2 { pt3dadd( -12.7113, 39.5125, 8.28041, 0.81 ) }
    dend_2 { pt3dadd( -14.2898, 40.4341, 9.13746, 0.81 ) }
    dend_2 { pt3dadd( -15.3028, 41.0255, 9.68746, 0.81 ) }
    dend_2 { pt3dadd( -16.4243, 41.6777, 10.1995, 0.81 ) }
    dend_2 { pt3dadd( -17.5785, 42.3483, 10.6348, 0.81 ) }
    dend_2 { pt3dadd( -19.0707, 43.2168, 11.0533, 0.81 ) }
    dend_2 { pt3dadd( -20.3244, 43.9969, 11.3762, 0.81 ) }
    // Section: dend_91, id: dend_91, parent: dend_89 (entry count 62/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 39.8381, -72.1849, 17.4796, 0.37 ) }
    dend_91 { pt3dadd( 43.7358, -71.4918, 21.9794, 0.37 ) }
    dend_91 { pt3dadd( 44.2436, -71.5109, 22.555, 0.37 ) }
    dend_91 { pt3dadd( 45.2969, -71.6888, 23.6455, 0.37 ) }
    dend_91 { pt3dadd( 46.2864, -71.8924, 24.5843, 0.37 ) }
    dend_91 { pt3dadd( 48.2256, -72.2778, 26.2824, 0.37 ) }
    dend_91 { pt3dadd( 49.7002, -72.5332, 27.4547, 0.37 ) }
    dend_91 { pt3dadd( 51.5496, -72.9892, 28.444, 0.37 ) }
    dend_91 { pt3dadd( 52.6733, -73.2957, 29.0268, 0.37 ) }
    dend_91 { pt3dadd( 53.3817, -73.5157, 29.5181, 0.37 ) }
    dend_91 { pt3dadd( 54.0876, -73.7351, 30.0076, 0.37 ) }
    dend_91 { pt3dadd( 55.2391, -74.006, 30.7531, 0.37 ) }
    dend_91 { pt3dadd( 57.3192, -74.2808, 32.1726, 0.37 ) }
    dend_91 { pt3dadd( 58.1328, -74.3554, 32.756, 0.37 ) }
    dend_91 { pt3dadd( 61.7911, -74.8623, 35.9917, 0.37 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 77/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 39.8381, -72.1849, 17.4796, 0.37 ) }
    dend_90 { pt3dadd( 40.7312, -72.4941, 17.1053, 0.37 ) }
    dend_90 { pt3dadd( 41.3868, -72.6965, 16.8781, 0.37 ) }
    dend_90 { pt3dadd( 41.856, -72.836, 16.7386, 0.37 ) }
    dend_90 { pt3dadd( 42.5427, -73.0574, 16.557, 0.37 ) }
    dend_90 { pt3dadd( 42.9407, -73.1969, 16.4525, 0.37 ) }
    dend_90 { pt3dadd( 43.3231, -73.3495, 16.3552, 0.37 ) }
    dend_90 { pt3dadd( 43.7863, -73.579, 16.2168, 0.37 ) }
    dend_90 { pt3dadd( 44.2261, -73.8402, 16.117, 0.37 ) }
    dend_90 { pt3dadd( 44.6021, -74.1216, 16.0547, 0.37 ) }
    dend_90 { pt3dadd( 44.8279, -74.3311, 16.0245, 0.37 ) }
    dend_90 { pt3dadd( 45.3199, -74.8743, 15.9327, 0.37 ) }
    dend_90 { pt3dadd( 45.7029, -75.3477, 15.8262, 0.37 ) }
    dend_90 { pt3dadd( 45.9497, -75.6956, 15.6766, 0.37 ) }
    dend_90 { pt3dadd( 46.2913, -76.208, 15.3914, 0.37 ) }
    dend_90 { pt3dadd( 46.6594, -76.7787, 15.0208, 0.37 ) }
    dend_90 { pt3dadd( 47.1141, -77.5094, 14.5059, 0.37 ) }
    dend_90 { pt3dadd( 47.3923, -77.9851, 14.112, 0.37 ) }
    dend_90 { pt3dadd( 48.1329, -79.2945, 12.909, 0.37 ) }
    dend_90 { pt3dadd( 48.2428, -79.491, 12.7048, 0.37 ) }
    dend_90 { pt3dadd( 48.3631, -79.7118, 12.4569, 0.37 ) }
    dend_90 { pt3dadd( 48.5251, -80.0353, 12.0957, 0.37 ) }
    dend_90 { pt3dadd( 48.7753, -80.6296, 11.4857, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_90 { pt3dadd( 48.8615, -80.8852, 11.2661, 0.37 ) }
    dend_90 { pt3dadd( 49.0887, -81.5971, 10.7945, 0.37 ) }
    dend_90 { pt3dadd( 49.1799, -81.9068, 10.5728, 0.37 ) }
    dend_90 { pt3dadd( 49.2989, -82.2918, 10.2923, 0.37 ) }
    dend_90 { pt3dadd( 49.4803, -82.8771, 9.88552, 0.37 ) }
    dend_90 { pt3dadd( 49.6454, -83.3842, 9.55598, 0.37 ) }
    dend_90 { pt3dadd( 49.7579, -83.7196, 9.34497, 0.37 ) }
    dend_90 { pt3dadd( 50.0495, -84.6397, 8.7934, 0.37 ) }
    dend_90 { pt3dadd( 50.2309, -85.2353, 8.43892, 0.37 ) }
    dend_90 { pt3dadd( 50.3189, -85.5365, 8.26492, 0.37 ) }
    dend_90 { pt3dadd( 50.5203, -86.2416, 7.88902, 0.37 ) }
    dend_90 { pt3dadd( 50.6471, -86.6848, 7.66786, 0.37 ) }
    dend_90 { pt3dadd( 50.813, -87.3158, 7.33718, 0.37 ) }
    dend_90 { pt3dadd( 50.9249, -87.7302, 7.10175, 0.37 ) }
    dend_90 { pt3dadd( 51.0057, -87.9725, 6.90757, 0.37 ) }
    dend_90 { pt3dadd( 51.0679, -88.1044, 6.75278, 0.37 ) }
    dend_90 { pt3dadd( 51.1959, -88.2944, 6.4564, 0.37 ) }
    dend_90 { pt3dadd( 51.5261, -88.6264, 5.78247, 0.37 ) }
    dend_90 { pt3dadd( 51.8524, -88.8571, 5.2105, 0.37 ) }
    dend_90 { pt3dadd( 52.2132, -89.0628, 4.62726, 0.37 ) }
    dend_90 { pt3dadd( 52.662, -89.3285, 3.91229, 0.37 ) }
    dend_90 { pt3dadd( 52.8369, -89.4456, 3.63225, 0.37 ) }
    dend_90 { pt3dadd( 53.0693, -89.6071, 3.26675, 0.37 ) }
    dend_90 { pt3dadd( 53.228, -89.7093, 3.04803, 0.37 ) }
    dend_90 { pt3dadd( 53.5784, -89.9415, 2.59143, 0.37 ) }
    dend_90 { pt3dadd( 54.0305, -90.2786, 1.99688, 0.37 ) }
    dend_90 { pt3dadd( 54.4749, -90.6462, 1.41434, 0.37 ) }
    dend_90 { pt3dadd( 54.7435, -90.8939, 1.0325, 0.37 ) }
    dend_90 { pt3dadd( 54.9753, -91.1241, 0.69973, 0.37 ) }
    dend_90 { pt3dadd( 55.418, -91.5514, 0.0808659, 0.37 ) }
    dend_90 { pt3dadd( 55.835, -91.9254, -0.450909, 0.37 ) }
    dend_90 { pt3dadd( 56.0511, -92.1098, -0.712175, 0.37 ) }
    dend_90 { pt3dadd( 56.3836, -92.4311, -1.14618, 0.37 ) }
    dend_90 { pt3dadd( 56.6267, -92.6936, -1.48394, 0.37 ) }
    dend_90 { pt3dadd( 56.9329, -93.0602, -1.97593, 0.37 ) }
    dend_90 { pt3dadd( 57.1147, -93.2742, -2.26388, 0.37 ) }
    dend_90 { pt3dadd( 57.4131, -93.6545, -2.74351, 0.37 ) }
    dend_90 { pt3dadd( 57.7133, -94.0968, -3.26855, 0.37 ) }
    dend_90 { pt3dadd( 57.7965, -94.2274, -3.40646, 0.37 ) }
    dend_90 { pt3dadd( 58.1619, -94.8348, -4.00281, 0.37 ) }
    dend_90 { pt3dadd( 58.4178, -95.2805, -4.42429, 0.37 ) }
    dend_90 { pt3dadd( 58.713, -95.7972, -4.938, 0.37 ) }
    dend_90 { pt3dadd( 58.9445, -96.2199, -5.40359, 0.37 ) }
    dend_90 { pt3dadd( 59.1989, -96.6883, -5.95275, 0.37 ) }
    dend_90 { pt3dadd( 59.3678, -97.0268, -6.39222, 0.37 ) }
    dend_90 { pt3dadd( 59.7466, -97.8339, -7.47037, 0.37 ) }
    dend_90 { pt3dadd( 59.974, -98.3254, -8.15185, 0.37 ) }
    dend_90 { pt3dadd( 60.3796, -99.1876, -9.4018, 0.37 ) }
    dend_90 { pt3dadd( 60.4847, -99.4036, -9.7464, 0.37 ) }
    dend_90 { pt3dadd( 60.9048, -100.21, -11.1564, 0.37 ) }
    dend_90 { pt3dadd( 61.0803, -100.497, -11.6917, 0.37 ) }
    dend_90 { pt3dadd( 61.2369, -100.703, -12.1036, 0.37 ) }
    dend_90 { pt3dadd( 61.735, -101.247, -13.28, 0.37 ) }
    dend_90 { pt3dadd( 62.4221, -101.828, -14.6788, 0.37 ) }
    dend_90 { pt3dadd( 62.6972, -102.011, -15.1628, 0.37 ) }
    dend_90 { pt3dadd( 63.275, -102.294, -16.0076, 0.37 ) }
    dend_90 { pt3dadd( 63.5433, -102.403, -16.4082, 0.37 ) }
    dend_90 { pt3dadd( 64.1304, -102.597, -17.1747, 0.37 ) }
    dend_90 { pt3dadd( 64.6255, -102.718, -17.6869, 0.37 ) }
    dend_90 { pt3dadd( 65.5549, -102.906, -18.4687, 0.37 ) }
    dend_90 { pt3dadd( 65.8557, -102.965, -18.7147, 0.37 ) }
    dend_90 { pt3dadd( 67.553, -103.363, -20.2009, 0.37 ) }
    dend_90 { pt3dadd( 68.4643, -103.611, -21.0472, 0.37 ) }
    dend_90 { pt3dadd( 68.8534, -103.721, -21.4112, 0.37 ) }
    dend_90 { pt3dadd( 69.1332, -103.831, -21.7735, 0.37 ) }
    dend_90 { pt3dadd( 69.7839, -104.195, -22.8907, 0.37 ) }
    dend_90 { pt3dadd( 70.4181, -104.699, -24.2673, 0.37 ) }
    dend_90 { pt3dadd( 70.5146, -104.813, -24.5635, 0.37 ) }
    dend_90 { pt3dadd( 70.6509, -105.054, -25.1845, 0.37 ) }
    dend_90 { pt3dadd( 70.9906, -105.993, -27.6269, 0.37 ) }
    dend_90 { pt3dadd( 71.1115, -106.446, -28.7524, 0.37 ) }
    dend_90 { pt3dadd( 71.2502, -107.102, -30.2934, 0.37 ) }
    dend_90 { pt3dadd( 71.4072, -108.003, -32.2808, 0.37 ) }
    dend_90 { pt3dadd( 71.5151, -108.713, -33.6863, 0.37 ) }
    dend_90 { pt3dadd( 71.6619, -109.895, -35.7371, 0.37 ) }
    dend_90 { pt3dadd( 71.738, -110.414, -36.4786, 0.37 ) }
    dend_90 { pt3dadd( 71.7938, -110.763, -36.908, 0.37 ) }
    dend_90 { pt3dadd( 71.9575, -111.572, -37.7302, 0.37 ) }
    dend_90 { pt3dadd( 72.1927, -112.483, -38.4932, 0.37 ) }
    dend_90 { pt3dadd( 72.6359, -113.873, -39.503, 0.37 ) }
    dend_90 { pt3dadd( 72.9689, -114.713, -40.0351, 0.37 ) }
    dend_90 { pt3dadd( 73.7696, -116.441, -41.2295, 0.37 ) }
    dend_90 { pt3dadd( 74.1671, -117.173, -41.774, 0.37 ) }
    dend_90 { pt3dadd( 74.4387, -117.601, -42.0975, 0.37 ) }
    dend_90 { pt3dadd( 74.957, -118.305, -42.6039, 0.37 ) }
    dend_90 { pt3dadd( 75.7609, -119.295, -43.2484, 0.37 ) }
    dend_90 { pt3dadd( 77.2875, -121.091, -44.286, 0.37 ) }
    dend_90 { pt3dadd( 78.6538, -122.668, -45.1447, 0.37 ) }
    dend_90 { pt3dadd( 79.2815, -123.402, -45.549, 0.37 ) }
    dend_90 { pt3dadd( 80.8273, -125.257, -46.549, 0.37 ) }
    dend_90 { pt3dadd( 81.5974, -126.21, -47.0342, 0.37 ) }
    dend_90 { pt3dadd( 82.9589, -127.891, -47.7699, 0.37 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 92/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 28.6359, -42.8003, 6.88214, 0.44 ) }
    dend_78 { pt3dadd( 29.2955, -42.7338, 7.31804, 0.44 ) }
    dend_78 { pt3dadd( 30.3041, -42.6321, 7.98459, 0.44 ) }
    dend_78 { pt3dadd( 31.1801, -42.5438, 8.56344, 0.44 ) }
    dend_78 { pt3dadd( 31.7942, -42.4819, 8.96931, 0.44 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 97/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 28.6359, -42.8003, 6.88214, 0.44 ) }
    dend_77 { pt3dadd( 29.0486, -41.8301, 6.86391, 0.44 ) }
    dend_77 { pt3dadd( 29.3202, -41.1915, 6.85192, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_77 { pt3dadd( 29.6884, -40.3257, 6.83566, 0.44 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 1/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -94.7073, -208.611, -80.0472, 0.52 ) }
    dend_74 { pt3dadd( -94.5382, -210.005, -79.9083, 0.52 ) }
    dend_74 { pt3dadd( -94.4879, -210.714, -79.8229, 0.52 ) }
    dend_74 { pt3dadd( -94.4413, -211.774, -79.8383, 0.52 ) }
    dend_74 { pt3dadd( -94.4202, -213.092, -79.9129, 0.52 ) }
    dend_74 { pt3dadd( -94.4289, -214.143, -79.9783, 0.52 ) }
    dend_74 { pt3dadd( -94.4576, -215.459, -80.1075, 0.52 ) }
    dend_74 { pt3dadd( -94.5342, -216.57, -80.2265, 0.52 ) }
    dend_74 { pt3dadd( -94.7491, -219.217, -80.7095, 0.44 ) }
    dend_74 { pt3dadd( -94.8281, -220.246, -80.9463, 0.44 ) }
    dend_74 { pt3dadd( -94.9341, -221.724, -81.3433, 0.44 ) }
    dend_74 { pt3dadd( -95.0748, -223.665, -81.9747, 0.44 ) }
    dend_74 { pt3dadd( -95.2254, -225.567, -82.6712, 0.44 ) }
    dend_74 { pt3dadd( -95.4293, -228.217, -83.798, 0.44 ) }
    dend_74 { pt3dadd( -95.4756, -228.915, -84.1442, 0.44 ) }
    dend_74 { pt3dadd( -95.5254, -229.674, -84.5715, 0.44 ) }
    dend_74 { pt3dadd( -95.6401, -231.19, -85.4806, 0.44 ) }
    dend_74 { pt3dadd( -95.7153, -231.979, -86.0017, 0.44 ) }
    dend_74 { pt3dadd( -95.9611, -234.103, -87.468, 0.44 ) }
    dend_74 { pt3dadd( -96.2406, -236.054, -88.7341, 0.44 ) }
    dend_74 { pt3dadd( -96.447, -237.151, -89.3778, 0.44 ) }
    dend_74 { pt3dadd( -96.6762, -238.133, -89.8822, 0.44 ) }
    dend_74 { pt3dadd( -97.5382, -240.877, -91.1176, 0.44 ) }
    dend_74 { pt3dadd( -97.9508, -241.912, -91.5294, 0.44 ) }
    dend_74 { pt3dadd( -98.4533, -242.964, -91.8903, 0.44 ) }
    dend_74 { pt3dadd( -99.5593, -245.125, -92.5176, 0.44 ) }
    dend_74 { pt3dadd( -100.029, -246.018, -92.7437, 0.44 ) }
    dend_74 { pt3dadd( -101.378, -248.506, -93.2152, 0.44 ) }
    dend_74 { pt3dadd( -102.129, -249.869, -93.3761, 0.44 ) }
    dend_74 { pt3dadd( -103.112, -251.672, -93.5553, 0.44 ) }
    dend_74 { pt3dadd( -104.319, -253.876, -93.6244, 0.44 ) }
    dend_74 { pt3dadd( -105.479, -256.014, -93.5416, 0.44 ) }
    dend_74 { pt3dadd( -106.943, -258.733, -93.2419, 0.44 ) }
    dend_74 { pt3dadd( -107.712, -260.178, -92.9606, 0.44 ) }
    dend_74 { pt3dadd( -108.521, -261.679, -92.5931, 0.44 ) }
    dend_74 { pt3dadd( -109.771, -263.925, -91.9197, 0.44 ) }
    dend_74 { pt3dadd( -110.727, -265.588, -91.3586, 0.44 ) }
    dend_74 { pt3dadd( -111.442, -266.821, -90.8818, 0.44 ) }
    dend_74 { pt3dadd( -112.198, -268.101, -90.3116, 0.44 ) }
    dend_74 { pt3dadd( -112.834, -269.169, -89.8143, 0.44 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 41/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -94.7073, -208.611, -80.0472, 0.52 ) }
    dend_73 { pt3dadd( -95.6325, -209.358, -81.1328, 0.52 ) }
    dend_73 { pt3dadd( -98.0607, -211.682, -84.4678, 0.52 ) }
    dend_73 { pt3dadd( -98.7439, -212.405, -85.429, 0.52 ) }
    dend_73 { pt3dadd( -99.2718, -213.022, -86.1994, 0.52 ) }
    dend_73 { pt3dadd( -99.553, -213.367, -86.6202, 0.52 ) }
    dend_73 { pt3dadd( -100.013, -213.951, -87.3533, 0.52 ) }
    dend_73 { pt3dadd( -101.63, -216.08, -89.9552, 0.52 ) }
    dend_73 { pt3dadd( -102.055, -216.654, -90.5867, 0.52 ) }
    dend_73 { pt3dadd( -102.498, -217.257, -91.2631, 0.52 ) }
    dend_73 { pt3dadd( -103.506, -218.579, -92.7531, 0.52 ) }
    dend_73 { pt3dadd( -104.935, -220.455, -94.7319, 0.52 ) }
    dend_73 { pt3dadd( -105.612, -221.407, -95.6777, 0.52 ) }
    dend_73 { pt3dadd( -106.142, -222.162, -96.3433, 0.52 ) }
    dend_73 { pt3dadd( -107.297, -223.941, -97.7922, 0.52 ) }
    dend_73 { pt3dadd( -107.723, -224.645, -98.2999, 0.52 ) }
    dend_73 { pt3dadd( -108.318, -225.81, -99.0207, 0.52 ) }
    dend_73 { pt3dadd( -109.349, -228.179, -100.287, 0.52 ) }
    dend_73 { pt3dadd( -109.843, -229.476, -100.928, 0.52 ) }
    dend_73 { pt3dadd( -110.237, -230.582, -101.407, 0.52 ) }
    dend_73 { pt3dadd( -110.641, -231.755, -101.918, 0.52 ) }
    dend_73 { pt3dadd( -111.193, -233.224, -102.594, 0.52 ) }
    dend_73 { pt3dadd( -111.477, -233.868, -102.898, 0.52 ) }
    dend_73 { pt3dadd( -112.146, -235.175, -103.478, 0.52 ) }
    dend_73 { pt3dadd( -112.822, -236.355, -104.029, 0.52 ) }
    dend_73 { pt3dadd( -114.695, -239.152, -105.338, 0.52 ) }
    dend_73 { pt3dadd( -115.46, -240.12, -105.85, 0.52 ) }
    dend_73 { pt3dadd( -115.997, -240.669, -106.172, 0.52 ) }
    dend_73 { pt3dadd( -116.788, -241.392, -106.723, 0.52 ) }
    dend_73 { pt3dadd( -117.599, -242.075, -107.418, 0.52 ) }
    dend_73 { pt3dadd( -118.978, -243.114, -108.673, 0.52 ) }
    dend_73 { pt3dadd( -120.555, -244.186, -110.102, 0.52 ) }
    dend_73 { pt3dadd( -121.702, -244.97, -111.301, 0.52 ) }
    dend_73 { pt3dadd( -123.578, -246.316, -113.352, 0.52 ) }
    dend_73 { pt3dadd( -125.755, -247.89, -115.76, 0.52 ) }
    dend_73 { pt3dadd( -126.481, -248.466, -116.667, 0.52 ) }
    dend_73 { pt3dadd( -127.152, -249.058, -117.542, 0.52 ) }
    dend_73 { pt3dadd( -129.051, -250.925, -120.01, 0.52 ) }
    dend_73 { pt3dadd( -130.148, -252.172, -121.478, 0.52 ) }
    dend_73 { pt3dadd( -130.672, -252.912, -122.143, 0.52 ) }
    dend_73 { pt3dadd( -132.472, -256.418, -124.495, 0.52 ) }
    dend_73 { pt3dadd( -133.015, -257.925, -125.272, 0.52 ) }
    dend_73 { pt3dadd( -133.304, -259.045, -125.57, 0.52 ) }
    dend_73 { pt3dadd( -133.539, -260.358, -125.554, 0.52 ) }
    dend_73 { pt3dadd( -133.973, -263.123, -124.885, 0.52 ) }
    dend_73 { pt3dadd( -134.281, -264.799, -124.187, 0.52 ) }
    dend_73 { pt3dadd( -134.564, -266.073, -123.532, 0.52 ) }
    dend_73 { pt3dadd( -135.591, -269.798, -121.304, 0.52 ) }
    dend_73 { pt3dadd( -136.039, -271.083, -120.477, 0.52 ) }
    dend_73 { pt3dadd( -136.876, -273.108, -119.135, 0.52 ) }
    dend_73 { pt3dadd( -137.622, -274.634, -118.058, 0.52 ) }
    dend_73 { pt3dadd( -138.64, -276.573, -116.669, 0.52 ) }
    dend_73 { pt3dadd( -139.956, -278.998, -115.074, 0.52 ) }
    dend_73 { pt3dadd( -141.024, -281.01, -114.197, 0.52 ) }
    dend_73 { pt3dadd( -141.991, -282.866, -113.402, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_31 (entry count 96/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 6.62192, -81.1108, 5.70824, 0.66 ) }
    dend_67 { pt3dadd( 5.64948, -82.4187, 5.48942, 0.66 ) }
    dend_67 { pt3dadd( 4.96637, -83.1446, 5.47188, 0.66 ) }
    dend_67 { pt3dadd( 4.16141, -83.9192, 5.51848, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_67 { pt3dadd( 3.41645, -84.6115, 5.57893, 0.66 ) }
    dend_67 { pt3dadd( 2.11203, -85.7747, 5.77235, 0.66 ) }
    dend_67 { pt3dadd( 1.15859, -86.5827, 5.9418, 0.66 ) }
    dend_67 { pt3dadd( -0.524598, -87.8608, 6.31068, 0.66 ) }
    dend_67 { pt3dadd( -1.86928, -88.8005, 6.6839, 0.66 ) }
    dend_67 { pt3dadd( -2.58587, -89.2608, 6.9019, 0.66 ) }
    dend_67 { pt3dadd( -3.84493, -90.0311, 7.3402, 0.66 ) }
    dend_67 { pt3dadd( -4.88799, -90.6715, 7.78332, 0.66 ) }
    dend_67 { pt3dadd( -5.5752, -91.1189, 8.08335, 0.66 ) }
    dend_67 { pt3dadd( -6.70288, -91.8959, 8.49464, 0.66 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 10/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 6.62192, -81.1108, 5.70824, 0.81 ) }
    dend_32 { pt3dadd( 6.62703, -83.089, 5.70837, 0.81 ) }
    dend_32 { pt3dadd( 6.62103, -84.9036, 5.68505, 0.81 ) }
    dend_32 { pt3dadd( 6.59092, -87.2726, 5.64552, 0.81 ) }
    dend_32 { pt3dadd( 6.56868, -88.4481, 5.62535, 0.81 ) }
    dend_32 { pt3dadd( 6.55671, -90.1946, 5.59566, 0.81 ) }
    dend_32 { pt3dadd( 6.58106, -92.2044, 5.56351, 0.81 ) }
    dend_32 { pt3dadd( 6.58873, -94.2873, 5.52464, 0.81 ) }
    dend_32 { pt3dadd( 6.59978, -96.2438, 5.48302, 0.81 ) }
    dend_32 { pt3dadd( 6.6231, -97.8281, 5.46989, 0.81 ) }
    dend_32 { pt3dadd( 6.66588, -99.3519, 5.47929, 0.81 ) }
    dend_32 { pt3dadd( 6.74978, -101.588, 5.52964, 0.81 ) }
    dend_32 { pt3dadd( 6.82984, -103.341, 5.59844, 0.81 ) }
    dend_32 { pt3dadd( 6.8799, -104.397, 5.64666, 0.81 ) }
    dend_32 { pt3dadd( 6.94431, -105.619, 5.71201, 0.81 ) }
    dend_32 { pt3dadd( 7.01374, -107.305, 5.81913, 0.81 ) }
    dend_32 { pt3dadd( 7.01286, -108.797, 5.93598, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_17 (entry count 27/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.79801, 72.2861, -6.62688, 0.52 ) }
    dend_27 { pt3dadd( 4.5263, 72.5571, -6.5599, 0.52 ) }
    dend_27 { pt3dadd( 5.75599, 72.8026, -6.48439, 0.52 ) }
    dend_27 { pt3dadd( 6.40914, 72.9521, -6.43183, 0.52 ) }
    dend_27 { pt3dadd( 7.37869, 73.1703, -6.33576, 0.52 ) }
    dend_27 { pt3dadd( 8.35324, 73.378, -6.31632, 0.52 ) }
    dend_27 { pt3dadd( 9.19348, 73.5354, -6.33436, 0.52 ) }
    dend_27 { pt3dadd( 10.2366, 73.6826, -6.41108, 0.52 ) }
    dend_27 { pt3dadd( 11.5237, 73.7995, -6.52258, 0.52 ) }
    dend_27 { pt3dadd( 12.219, 73.8261, -6.58, 0.52 ) }
    dend_27 { pt3dadd( 14.3535, 73.8004, -6.73828, 0.52 ) }
    dend_27 { pt3dadd( 15.2834, 73.7173, -6.78518, 0.52 ) }
    dend_27 { pt3dadd( 16.5639, 73.4962, -6.85602, 0.52 ) }
    dend_27 { pt3dadd( 18.2289, 73.1088, -6.92653, 0.52 ) }
    dend_27 { pt3dadd( 19.1046, 72.8739, -6.93728, 0.52 ) }
    dend_27 { pt3dadd( 19.9272, 72.653, -6.90671, 0.52 ) }
    dend_27 { pt3dadd( 21.0332, 72.3619, -6.78827, 0.52 ) }
    dend_27 { pt3dadd( 22.1953, 72.0868, -6.67668, 0.52 ) }
    dend_27 { pt3dadd( 23.2539, 71.8683, -6.58333, 0.52 ) }
    dend_27 { pt3dadd( 24.2624, 71.6819, -6.53965, 0.52 ) }
    dend_27 { pt3dadd( 25.4575, 71.4799, -6.4679, 0.52 ) }
    dend_27 { pt3dadd( 26.4955, 71.3424, -6.38162, 0.52 ) }
    dend_27 { pt3dadd( 27.1067, 71.3042, -6.31401, 0.52 ) }
    dend_27 { pt3dadd( 28.2999, 71.2932, -6.14282, 0.52 ) }
    dend_27 { pt3dadd( 29.5027, 71.3281, -5.97029, 0.52 ) }
    dend_27 { pt3dadd( 30.7252, 71.395, -5.79497, 0.52 ) }
    dend_27 { pt3dadd( 31.7319, 71.445, -5.72465, 0.52 ) }
    dend_27 { pt3dadd( 32.9144, 71.486, -5.71825, 0.52 ) }
    dend_27 { pt3dadd( 33.6496, 71.5196, -5.75383, 0.52 ) }
    dend_27 { pt3dadd( 34.1702, 71.5664, -5.80358, 0.52 ) }
    dend_27 { pt3dadd( 35.0849, 71.6593, -5.90677, 0.52 ) }
    dend_27 { pt3dadd( 37.2261, 71.8328, -6.31303, 0.52 ) }
    dend_27 { pt3dadd( 37.9676, 71.87, -6.48511, 0.52 ) }
    dend_27 { pt3dadd( 38.8506, 71.9105, -6.70444, 0.52 ) }
    dend_27 { pt3dadd( 40.1551, 72.0512, -7.01922, 0.52 ) }
    dend_27 { pt3dadd( 41.1809, 72.2409, -7.23765, 0.52 ) }
    dend_27 { pt3dadd( 42.8653, 72.6716, -7.50763, 0.52 ) }
    dend_27 { pt3dadd( 43.6711, 72.9241, -7.56577, 0.52 ) }
    dend_27 { pt3dadd( 44.3769, 73.1583, -7.60566, 0.52 ) }
    dend_27 { pt3dadd( 45.4201, 73.4547, -7.63969, 0.52 ) }
    dend_27 { pt3dadd( 46.1394, 73.6257, -7.6354, 0.52 ) }
    dend_27 { pt3dadd( 46.957, 73.7863, -7.58383, 0.52 ) }
    dend_27 { pt3dadd( 47.8699, 73.9001, -7.45297, 0.52 ) }
    dend_27 { pt3dadd( 48.8058, 73.9402, -7.40269, 0.52 ) }
    dend_27 { pt3dadd( 49.8217, 73.8729, -7.4134, 0.52 ) }
    dend_27 { pt3dadd( 50.7734, 73.7487, -7.45424, 0.52 ) }
    dend_27 { pt3dadd( 51.8939, 73.5791, -7.51658, 0.52 ) }
    dend_27 { pt3dadd( 52.6518, 73.4672, -7.61776, 0.52 ) }
    dend_27 { pt3dadd( 54.6278, 73.1854, -7.96659, 0.52 ) }
    dend_27 { pt3dadd( 56.4062, 72.9866, -8.31996, 0.52 ) }
    dend_27 { pt3dadd( 58.0331, 72.8894, -8.6496, 0.52 ) }
    dend_27 { pt3dadd( 59.2263, 72.8603, -8.88047, 0.52 ) }
    dend_27 { pt3dadd( 61.476, 72.8542, -9.34516, 0.52 ) }
    dend_27 { pt3dadd( 62.4529, 72.8587, -9.53752, 0.52 ) }
    dend_27 { pt3dadd( 63.4274, 72.885, -9.69316, 0.52 ) }
    dend_27 { pt3dadd( 64.5763, 72.9617, -9.88824, 0.52 ) }
    dend_27 { pt3dadd( 65.5684, 73.0524, -10.04, 0.52 ) }
    dend_27 { pt3dadd( 67.2968, 73.2648, -10.2852, 0.52 ) }
    dend_27 { pt3dadd( 68.0799, 73.3621, -10.3611, 0.52 ) }
    dend_27 { pt3dadd( 69.2441, 73.503, -10.489, 0.52 ) }
    dend_27 { pt3dadd( 70.0049, 73.5855, -10.5723, 0.52 ) }
    dend_27 { pt3dadd( 71.1191, 73.6984, -10.6774, 0.52 ) }
    dend_27 { pt3dadd( 72.8661, 73.8698, -10.7864, 0.52 ) }
    dend_27 { pt3dadd( 73.8892, 73.994, -10.8142, 0.52 ) }
    dend_27 { pt3dadd( 75.015, 74.1631, -10.8748, 0.52 ) }
    dend_27 { pt3dadd( 75.7551, 74.2891, -10.9239, 0.52 ) }
    dend_27 { pt3dadd( 76.6453, 74.4842, -10.972, 0.52 ) }
    dend_27 { pt3dadd( 77.386, 74.6481, -10.9921, 0.52 ) }
    dend_27 { pt3dadd( 78.2958, 74.8541, -10.9761, 0.52 ) }
    dend_27 { pt3dadd( 79.2996, 75.0809, -10.9543, 0.52 ) }
    dend_27 { pt3dadd( 80.5936, 75.3541, -10.9114, 0.52 ) }
    dend_27 { pt3dadd( 82.2821, 75.6837, -10.8249, 0.52 ) }
    dend_27 { pt3dadd( 83.4081, 75.8632, -10.7443, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_27 { pt3dadd( 84.6917, 76.0104, -10.6205, 0.52 ) }
    dend_27 { pt3dadd( 85.5879, 76.0834, -10.5082, 0.52 ) }
    dend_27 { pt3dadd( 86.775, 76.1722, -10.338, 0.52 ) }
    dend_27 { pt3dadd( 88.0075, 76.2848, -10.1613, 0.52 ) }
    dend_27 { pt3dadd( 88.8647, 76.3969, -10.0385, 0.52 ) }
    dend_27 { pt3dadd( 89.9639, 76.6234, -9.92119, 0.52 ) }
    dend_27 { pt3dadd( 90.7845, 76.8432, -9.86182, 0.52 ) }
    dend_27 { pt3dadd( 91.5455, 77.0793, -9.83234, 0.52 ) }
    dend_27 { pt3dadd( 92.4822, 77.3713, -9.85747, 0.52 ) }
    dend_27 { pt3dadd( 93.285, 77.6201, -9.91956, 0.52 ) }
    dend_27 { pt3dadd( 94.5107, 77.9603, -10.0948, 0.52 ) }
    dend_27 { pt3dadd( 95.5121, 78.1699, -10.2898, 0.52 ) }
    dend_27 { pt3dadd( 96.1264, 78.2389, -10.4405, 0.52 ) }
    dend_27 { pt3dadd( 97.4315, 78.3221, -10.782, 0.52 ) }
    dend_27 { pt3dadd( 98.1025, 78.3515, -10.9567, 0.52 ) }
    dend_27 { pt3dadd( 99.4925, 78.4032, -11.2953, 0.52 ) }
    dend_27 { pt3dadd( 100.491, 78.4337, -11.4993, 0.52 ) }
    dend_27 { pt3dadd( 102.303, 78.4725, -11.8315, 0.52 ) }
    dend_27 { pt3dadd( 103.415, 78.5001, -12.0085, 0.52 ) }
    dend_27 { pt3dadd( 104.247, 78.5438, -12.11, 0.52 ) }
    dend_27 { pt3dadd( 104.786, 78.588, -12.1824, 0.52 ) }
    dend_27 { pt3dadd( 105.672, 78.7083, -12.3368, 0.52 ) }
    dend_27 { pt3dadd( 106.274, 78.8371, -12.4998, 0.52 ) }
    dend_27 { pt3dadd( 107.427, 79.1657, -13.0336, 0.52 ) }
    dend_27 { pt3dadd( 108.357, 79.4838, -13.6046, 0.52 ) }
    dend_27 { pt3dadd( 109.436, 79.9179, -14.3513, 0.52 ) }
    dend_27 { pt3dadd( 110.626, 80.4234, -15.211, 0.52 ) }
    dend_27 { pt3dadd( 111.807, 80.9097, -16.1541, 0.52 ) }
    dend_27 { pt3dadd( 113.442, 81.4848, -17.5676, 0.52 ) }
    dend_27 { pt3dadd( 113.978, 81.6251, -18.0875, 0.52 ) }
    dend_27 { pt3dadd( 114.741, 81.774, -18.8617, 0.52 ) }
    dend_27 { pt3dadd( 115.429, 81.8761, -19.549, 0.52 ) }
    dend_27 { pt3dadd( 116.91, 82.0808, -20.9715, 0.52 ) }
    dend_27 { pt3dadd( 118.564, 82.3139, -22.4733, 0.52 ) }
    dend_27 { pt3dadd( 120.896, 82.7515, -24.5038, 0.52 ) }
    dend_27 { pt3dadd( 121.954, 83.0341, -25.4515, 0.52 ) }
    dend_27 { pt3dadd( 122.308, 83.1635, -25.7622, 0.52 ) }
    dend_27 { pt3dadd( 123.137, 83.5605, -26.458, 0.52 ) }
    dend_27 { pt3dadd( 123.775, 83.9225, -26.9158, 0.52 ) }
    dend_27 { pt3dadd( 125.199, 84.7663, -27.7541, 0.52 ) }
    dend_27 { pt3dadd( 126.978, 85.7781, -28.6663, 0.52 ) }
    dend_27 { pt3dadd( 127.909, 86.2647, -29.138, 0.52 ) }
    dend_27 { pt3dadd( 129.868, 87.205, -30.0764, 0.52 ) }
    dend_27 { pt3dadd( 131.009, 87.7129, -30.5907, 0.52 ) }
    dend_27 { pt3dadd( 132.35, 88.3068, -31.2061, 0.52 ) }
    dend_27 { pt3dadd( 133.871, 88.9863, -31.9337, 0.52 ) }
    dend_27 { pt3dadd( 135.927, 89.9534, -33.082, 0.52 ) }
    dend_27 { pt3dadd( 137.056, 90.5297, -33.779, 0.52 ) }
    dend_27 { pt3dadd( 137.349, 90.6951, -33.9631, 0.52 ) }
    dend_27 { pt3dadd( 139.191, 91.8555, -35.2365, 0.52 ) }
    dend_27 { pt3dadd( 140.893, 93.048, -36.4521, 0.52 ) }
    dend_27 { pt3dadd( 142.709, 94.4696, -37.8034, 0.52 ) }
    dend_27 { pt3dadd( 143.645, 95.3133, -38.5967, 0.52 ) }
    dend_27 { pt3dadd( 144.591, 96.2574, -39.4447, 0.52 ) }
    dend_27 { pt3dadd( 145.888, 97.6199, -40.6237, 0.52 ) }
    dend_27 { pt3dadd( 146.688, 98.5195, -41.3276, 0.52 ) }
    dend_27 { pt3dadd( 148.192, 100.313, -42.6256, 0.52 ) }
    dend_27 { pt3dadd( 149.695, 102.14, -44.0533, 0.52 ) }
    dend_27 { pt3dadd( 150.43, 103.071, -44.8283, 0.52 ) }
    dend_27 { pt3dadd( 151.666, 104.65, -46.1693, 0.52 ) }
    dend_27 { pt3dadd( 152.268, 105.408, -46.8058, 0.52 ) }
    dend_27 { pt3dadd( 152.997, 106.292, -47.5196, 0.52 ) }
    dend_27 { pt3dadd( 154.795, 108.413, -49.0273, 0.52 ) }
    dend_27 { pt3dadd( 155.662, 109.461, -49.6681, 0.52 ) }
    dend_27 { pt3dadd( 156.202, 110.157, -50.0499, 0.52 ) }
    dend_27 { pt3dadd( 157.856, 112.421, -51.1795, 0.52 ) }
    dend_27 { pt3dadd( 158.736, 113.672, -51.745, 0.52 ) }
    dend_27 { pt3dadd( 159.353, 114.599, -52.0949, 0.52 ) }
    dend_27 { pt3dadd( 160.195, 115.942, -52.4782, 0.52 ) }
    dend_27 { pt3dadd( 160.714, 116.827, -52.7196, 0.52 ) }
    dend_27 { pt3dadd( 162.142, 119.611, -53.3867, 0.52 ) }
    dend_27 { pt3dadd( 162.965, 121.597, -53.7393, 0.52 ) }
    dend_27 { pt3dadd( 163.372, 122.723, -54.0216, 0.52 ) }
    dend_27 { pt3dadd( 163.618, 123.541, -54.2584, 0.52 ) }
    dend_27 { pt3dadd( 163.827, 124.399, -54.5194, 0.52 ) }
    dend_27 { pt3dadd( 164.07, 125.629, -54.9343, 0.52 ) }
    dend_27 { pt3dadd( 164.464, 128.039, -55.7505, 0.52 ) }
    dend_27 { pt3dadd( 165.109, 131.369, -57.0796, 0.52 ) }
    dend_27 { pt3dadd( 165.467, 132.949, -57.7395, 0.52 ) }
    dend_27 { pt3dadd( 165.796, 134.194, -58.3025, 0.52 ) }
    dend_27 { pt3dadd( 166.634, 137.087, -59.6918, 0.52 ) }
    dend_27 { pt3dadd( 167.278, 139.146, -60.7712, 0.52 ) }
    dend_27 { pt3dadd( 168.233, 141.88, -62.3398, 0.52 ) }
    dend_27 { pt3dadd( 168.713, 143.129, -63.0325, 0.52 ) }
    dend_27 { pt3dadd( 169.498, 144.898, -64.0298, 0.52 ) }
    dend_27 { pt3dadd( 170.062, 146.038, -64.6573, 0.52 ) }
    dend_27 { pt3dadd( 171.029, 147.717, -65.5002, 0.52 ) }
    dend_27 { pt3dadd( 172.924, 150.478, -66.7632, 0.52 ) }
    dend_27 { pt3dadd( 174.312, 152.23, -67.4079, 0.52 ) }
    dend_27 { pt3dadd( 175.661, 153.715, -67.9274, 0.52 ) }
    dend_27 { pt3dadd( 176.647, 154.678, -68.2714, 0.52 ) }
    dend_27 { pt3dadd( 178.401, 156.262, -69.0045, 0.52 ) }
    dend_27 { pt3dadd( 179.64, 157.373, -69.6418, 0.52 ) }
    dend_27 { pt3dadd( 180.233, 157.879, -69.9747, 0.52 ) }
    dend_27 { pt3dadd( 182.205, 159.558, -71.3649, 0.52 ) }
    dend_27 { pt3dadd( 183.938, 161.102, -72.8991, 0.52 ) }
    dend_27 { pt3dadd( 185.876, 162.999, -75.0506, 0.52 ) }
    dend_27 { pt3dadd( 187.107, 164.392, -76.8381, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 98/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 2.79801, 72.2861, -6.62688, 0.81 ) }
    dend_18 { pt3dadd( 3.19302, 73.1394, -6.62863, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( 3.54055, 74.0056, -6.66032, 0.81 ) }
    dend_18 { pt3dadd( 3.73047, 74.6129, -6.69654, 0.81 ) }
    dend_18 { pt3dadd( 3.90431, 75.3823, -6.75393, 0.81 ) }
    dend_18 { pt3dadd( 4.04091, 76.2232, -6.82062, 0.52 ) }
    dend_18 { pt3dadd( 4.14013, 76.9677, -6.91386, 0.59 ) }
    dend_18 { pt3dadd( 4.21009, 77.6174, -7.0561, 0.59 ) }
    dend_18 { pt3dadd( 4.26105, 78.2548, -7.22971, 0.59 ) }
    dend_18 { pt3dadd( 4.30838, 78.8631, -7.40676, 0.59 ) }
    dend_18 { pt3dadd( 4.38443, 79.6328, -7.63289, 0.59 ) }
    dend_18 { pt3dadd( 4.55216, 80.885, -7.9839, 0.59 ) }
    dend_18 { pt3dadd( 4.79415, 82.0609, -8.30591, 0.59 ) }
    dend_18 { pt3dadd( 5.07865, 82.9907, -8.55425, 0.59 ) }
    dend_18 { pt3dadd( 5.33321, 83.6368, -8.72253, 0.59 ) }
    dend_18 { pt3dadd( 5.5633, 84.1414, -8.85051, 0.59 ) }
    dend_18 { pt3dadd( 5.83732, 84.6887, -9.00085, 0.59 ) }
    dend_18 { pt3dadd( 6.30418, 85.565, -9.22803, 0.59 ) }
    dend_18 { pt3dadd( 6.66584, 86.2499, -9.40732, 0.59 ) }
    dend_18 { pt3dadd( 6.97543, 86.8681, -9.58504, 0.59 ) }
    dend_18 { pt3dadd( 7.38646, 87.7515, -9.83073, 0.59 ) }
    dend_18 { pt3dadd( 7.77051, 88.6189, -10.0491, 0.59 ) }
    dend_18 { pt3dadd( 8.0449, 89.2211, -10.1979, 0.59 ) }
    dend_18 { pt3dadd( 8.35646, 89.9549, -10.3564, 0.59 ) }
    dend_18 { pt3dadd( 8.57914, 90.5177, -10.4908, 0.59 ) }
    dend_18 { pt3dadd( 8.93015, 91.3829, -10.756, 0.59 ) }
    dend_18 { pt3dadd( 9.15678, 91.9135, -10.9439, 0.59 ) }
    dend_18 { pt3dadd( 9.60477, 92.9186, -11.3223, 0.59 ) }
    dend_18 { pt3dadd( 9.96855, 93.7067, -11.646, 0.59 ) }
    dend_18 { pt3dadd( 10.3515, 94.5382, -11.9722, 0.59 ) }
    dend_18 { pt3dadd( 10.8643, 95.647, -12.4365, 0.59 ) }
    dend_18 { pt3dadd( 11.0549, 96.0759, -12.6258, 0.59 ) }
    dend_18 { pt3dadd( 11.3945, 96.8685, -12.9678, 0.59 ) }
    dend_18 { pt3dadd( 11.7774, 97.8177, -13.3165, 0.59 ) }
    dend_18 { pt3dadd( 12.3694, 99.2068, -13.7542, 0.59 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 33/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 7.14298, 33.2111, 23.9904, 0.52 ) }
    dend_15 { pt3dadd( 8.07931, 33.9259, 24.906, 0.52 ) }
    dend_15 { pt3dadd( 8.91007, 34.5064, 25.6136, 0.52 ) }
    dend_15 { pt3dadd( 9.73154, 35.1259, 26.3525, 0.52 ) }
    dend_15 { pt3dadd( 10.6037, 35.8775, 27.1702, 0.52 ) }
    dend_15 { pt3dadd( 12.0258, 37.3643, 28.701, 0.52 ) }
    dend_15 { pt3dadd( 12.6933, 38.2226, 29.5037, 0.52 ) }
    dend_15 { pt3dadd( 13.292, 39.2302, 30.3586, 0.52 ) }
    dend_15 { pt3dadd( 14.1201, 40.8586, 31.5059, 0.52 ) }
    dend_15 { pt3dadd( 14.5168, 41.8014, 32.0298, 0.52 ) }
    dend_15 { pt3dadd( 15.1023, 43.4982, 32.7623, 0.52 ) }
    dend_15 { pt3dadd( 15.4691, 44.8811, 33.2051, 0.52 ) }
    dend_15 { pt3dadd( 15.6448, 45.7917, 33.4676, 0.52 ) }
    dend_15 { pt3dadd( 15.8468, 47.2569, 33.7922, 0.52 ) }
    dend_15 { pt3dadd( 15.9813, 47.9296, 33.8391, 0.52 ) }
    dend_15 { pt3dadd( 16.4081, 49.101, 33.8199, 0.52 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 49/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 7.14298, 33.2111, 23.9904, 0.52 ) }
    dend_14 { pt3dadd( 8.03001, 32.3372, 24.1032, 0.52 ) }
    dend_14 { pt3dadd( 9.00694, 31.2222, 24.3637, 0.52 ) }
    dend_14 { pt3dadd( 9.51678, 30.6094, 24.5578, 0.52 ) }
    dend_14 { pt3dadd( 9.976, 30.0558, 24.794, 0.52 ) }
    dend_14 { pt3dadd( 10.6582, 29.2204, 25.1697, 0.52 ) }
    dend_14 { pt3dadd( 11.5537, 28.0917, 25.6658, 0.52 ) }
    dend_14 { pt3dadd( 12.6884, 26.6103, 26.3391, 0.52 ) }
    dend_14 { pt3dadd( 13.461, 25.5278, 26.7901, 0.52 ) }
    dend_14 { pt3dadd( 14.348, 24.2719, 27.2997, 0.52 ) }
    dend_14 { pt3dadd( 15.0027, 23.4021, 27.6485, 0.52 ) }
    dend_14 { pt3dadd( 15.6305, 22.6566, 27.9277, 0.52 ) }
    dend_14 { pt3dadd( 16.1943, 22.0919, 28.0832, 0.52 ) }
    dend_14 { pt3dadd( 16.9024, 21.5306, 28.1599, 0.52 ) }
    dend_14 { pt3dadd( 17.6071, 21.1125, 28.1464, 0.52 ) }
    dend_14 { pt3dadd( 18.2588, 20.8653, 28.0833, 0.52 ) }
    dend_14 { pt3dadd( 19.1167, 20.7524, 28.0132, 0.52 ) }
    dend_14 { pt3dadd( 19.7579, 20.7449, 27.9654, 0.52 ) }
    dend_14 { pt3dadd( 20.5939, 20.8224, 27.9083, 0.52 ) }
    dend_14 { pt3dadd( 21.2588, 20.9524, 27.8671, 0.52 ) }
    dend_14 { pt3dadd( 21.9507, 21.1422, 27.8274, 0.52 ) }
    dend_14 { pt3dadd( 22.8716, 21.4895, 27.7804, 0.52 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 71/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -20.3244, 43.9969, 11.3762, 0.44 ) }
    dend_10 { pt3dadd( -22.1937, 44.2392, 12.0783, 0.44 ) }
    dend_10 { pt3dadd( -23.0349, 44.3711, 12.3359, 0.44 ) }
    dend_10 { pt3dadd( -24.2068, 44.5702, 12.6552, 0.44 ) }
    dend_10 { pt3dadd( -25.2149, 44.7554, 12.9033, 0.44 ) }
    dend_10 { pt3dadd( -26.7677, 45.0232, 13.248, 0.44 ) }
    dend_10 { pt3dadd( -27.9331, 45.1848, 13.4866, 0.44 ) }
    dend_10 { pt3dadd( -29.2913, 45.3127, 13.7356, 0.44 ) }
    dend_10 { pt3dadd( -29.7213, 45.3402, 13.8196, 0.44 ) }
    dend_10 { pt3dadd( -30.5316, 45.3842, 14.0047, 0.44 ) }
    dend_10 { pt3dadd( -31.6794, 45.4906, 14.4099, 0.44 ) }
    dend_10 { pt3dadd( -32.6251, 45.5725, 14.8149, 0.44 ) }
    dend_10 { pt3dadd( -34.0208, 45.6485, 15.5302, 0.44 ) }
    dend_10 { pt3dadd( -34.775, 45.6699, 15.9932, 0.44 ) }
    dend_10 { pt3dadd( -35.8037, 45.714, 16.7174, 0.44 ) }
    dend_10 { pt3dadd( -36.8282, 45.8125, 17.6063, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -20.3244, 43.9969, 11.3762, 0.52 ) }
    dend_3 { pt3dadd( -22.1841, 44.5897, 11.467, 0.52 ) }
    dend_3 { pt3dadd( -23.2691, 44.9123, 11.5259, 0.52 ) }
    dend_3 { pt3dadd( -24.1659, 45.1903, 11.6009, 0.52 ) }
    dend_3 { pt3dadd( -25.6594, 45.7042, 11.7458, 0.52 ) }
    dend_3 { pt3dadd( -26.6965, 46.0698, 11.8514, 0.52 ) }
    dend_3 { pt3dadd( -28.2097, 46.5981, 11.966, 0.52 ) }
    dend_3 { pt3dadd( -29.435, 46.9848, 12.0392, 0.52 ) }
    dend_3 { pt3dadd( -30.5652, 47.3557, 12.0877, 0.52 ) }
    dend_3 { pt3dadd( -31.8579, 47.847, 12.1209, 0.52 ) }
    dend_3 { pt3dadd( -33.3786, 48.5508, 12.1336, 0.52 ) }
    dend_3 { pt3dadd( -34.3716, 49.0832, 12.1278, 0.52 ) }
    dend_3 { pt3dadd( -35.1139, 49.5116, 12.1145, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_3 { pt3dadd( -36.2567, 50.1708, 12.0853, 0.52 ) }
    dend_3 { pt3dadd( -37.9274, 51.166, 12.0361, 0.52 ) }
    dend_3 { pt3dadd( -38.9835, 51.8358, 12.0234, 0.52 ) }
    dend_3 { pt3dadd( -40.3319, 52.7634, 12.0725, 0.52 ) }
    dend_3 { pt3dadd( -41.082, 53.2989, 12.1351, 0.52 ) }
    dend_3 { pt3dadd( -42.1679, 54.0985, 12.2567, 0.52 ) }
    dend_3 { pt3dadd( -43.1409, 54.8378, 12.4031, 0.52 ) }
    dend_3 { pt3dadd( -44.244, 55.7092, 12.6108, 0.52 ) }
    dend_3 { pt3dadd( -45.4865, 56.6857, 12.875, 0.52 ) }
    dend_3 { pt3dadd( -46.4652, 57.4429, 13.1491, 0.52 ) }
    dend_3 { pt3dadd( -47.2917, 58.0576, 13.4188, 0.52 ) }
    dend_3 { pt3dadd( -48.5395, 58.8743, 13.6423, 0.52 ) }
    dend_3 { pt3dadd( -48.8747, 59.0572, 13.6687, 0.52 ) }
    dend_3 { pt3dadd( -50.3945, 59.735, 13.4869, 0.52 ) }
    dend_3 { pt3dadd( -51.8624, 60.2589, 12.9758, 0.52 ) }
    dend_3 { pt3dadd( -52.499, 60.4355, 12.6118, 0.52 ) }
    dend_3 { pt3dadd( -56.3765, 61.2097, 9.94053, 0.52 ) }
    dend_3 { pt3dadd( -57.7906, 61.4179, 8.86671, 0.52 ) }
    dend_3 { pt3dadd( -59.5432, 61.6489, 7.50287, 0.52 ) }
    dend_3 { pt3dadd( -60.5725, 61.7793, 6.61249, 0.52 ) }
    dend_3 { pt3dadd( -62.2715, 62.0349, 5.08376, 0.52 ) }
    dend_3 { pt3dadd( -63.1513, 62.2064, 4.28569, 0.52 ) }
    dend_3 { pt3dadd( -63.6452, 62.34, 3.84674, 0.52 ) }
    dend_3 { pt3dadd( -64.5017, 62.5771, 3.03594, 0.52 ) }
    dend_3 { pt3dadd( -66.4328, 63.163, 1.26177, 0.52 ) }
    dend_3 { pt3dadd( -67.908, 63.6945, -0.121066, 0.52 ) }
    dend_3 { pt3dadd( -69.3657, 64.3428, -1.58462, 0.52 ) }
    dend_3 { pt3dadd( -70.5222, 64.9581, -2.91488, 0.52 ) }
    // Section: dend_93, id: dend_93, parent: dend_91 (entry count 28/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 61.7911, -74.8623, 35.9917, 0.37 ) }
    dend_93 { pt3dadd( 62.3702, -74.1169, 35.4268, 0.37 ) }
    dend_93 { pt3dadd( 62.9524, -73.3677, 34.859, 0.37 ) }
    dend_93 { pt3dadd( 63.1017, -73.1756, 34.7134, 0.37 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 32/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 61.7911, -74.8623, 35.9917, 0.37 ) }
    dend_92 { pt3dadd( 63.4579, -74.8333, 36.1741, 0.37 ) }
    dend_92 { pt3dadd( 64.3096, -74.8857, 36.2574, 0.37 ) }
    dend_92 { pt3dadd( 65.7712, -75.1365, 36.3969, 0.37 ) }
    dend_92 { pt3dadd( 67.7519, -75.6336, 36.5426, 0.37 ) }
    dend_92 { pt3dadd( 69.4359, -76.1385, 36.6329, 0.37 ) }
    dend_92 { pt3dadd( 71.1153, -76.7493, 36.7727, 0.37 ) }
    dend_92 { pt3dadd( 72.4598, -77.3976, 36.9303, 0.37 ) }
    dend_92 { pt3dadd( 73.8026, -78.1603, 37.11, 0.37 ) }
    dend_92 { pt3dadd( 75.0726, -79.0439, 37.294, 0.37 ) }
    dend_92 { pt3dadd( 75.724, -79.5914, 37.3708, 0.37 ) }
    dend_92 { pt3dadd( 77.3879, -81.1966, 37.6191, 0.37 ) }
    dend_92 { pt3dadd( 78.832, -82.6918, 37.7958, 0.37 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 45/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 31.7942, -42.4819, 8.96931, 0.44 ) }
    dend_80 { pt3dadd( 32.4775, -42.7072, 8.82985, 0.44 ) }
    dend_80 { pt3dadd( 33.1517, -42.9427, 8.69454, 0.44 ) }
    dend_80 { pt3dadd( 34.0719, -43.2641, 8.5099, 0.44 ) }
    dend_80 { pt3dadd( 34.8297, -43.5289, 8.35783, 0.44 ) }
    dend_80 { pt3dadd( 36.4552, -44.0967, 8.03165, 0.44 ) }
    dend_80 { pt3dadd( 37.5172, -44.4676, 7.81854, 0.44 ) }
    dend_80 { pt3dadd( 38.5365, -44.9038, 7.62943, 0.44 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 53/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 31.7942, -42.4819, 8.96931, 0.44 ) }
    dend_79 { pt3dadd( 31.4309, -41.4415, 8.8452, 0.44 ) }
    dend_79 { pt3dadd( 30.7962, -39.6242, 8.62842, 0.44 ) }
    dend_79 { pt3dadd( 30.4995, -38.7745, 8.52706, 0.44 ) }
    // Section: dend_71, id: dend_71, parent: dend_67 (entry count 57/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -6.70288, -91.8959, 8.49464, 0.52 ) }
    dend_71 { pt3dadd( -8.04732, -92.2542, 8.80466, 0.52 ) }
    dend_71 { pt3dadd( -9.0407, -92.4807, 9.15193, 0.52 ) }
    dend_71 { pt3dadd( -9.9331, -92.6858, 9.50123, 0.52 ) }
    dend_71 { pt3dadd( -10.8927, -92.9447, 9.89877, 0.52 ) }
    dend_71 { pt3dadd( -12.0277, -93.3383, 10.4889, 0.52 ) }
    dend_71 { pt3dadd( -12.8511, -93.6801, 10.9688, 0.52 ) }
    dend_71 { pt3dadd( -14.2792, -94.3667, 11.8915, 0.52 ) }
    dend_71 { pt3dadd( -14.8984, -94.7006, 12.33, 0.52 ) }
    dend_71 { pt3dadd( -15.4408, -95.0315, 12.7328, 0.52 ) }
    dend_71 { pt3dadd( -16.8453, -95.974, 13.7564, 0.52 ) }
    dend_71 { pt3dadd( -17.3735, -96.3327, 14.073, 0.52 ) }
    dend_71 { pt3dadd( -18.2146, -96.8679, 14.4269, 0.52 ) }
    dend_71 { pt3dadd( -19.0398, -97.3161, 14.6713, 0.52 ) }
    dend_71 { pt3dadd( -19.9217, -97.7197, 14.9573, 0.52 ) }
    dend_71 { pt3dadd( -20.8605, -98.0746, 15.2558, 0.52 ) }
    dend_71 { pt3dadd( -22.1835, -98.5174, 15.6446, 0.52 ) }
    dend_71 { pt3dadd( -22.8938, -98.7551, 15.8792, 0.52 ) }
    dend_71 { pt3dadd( -24.2885, -99.2282, 16.3793, 0.52 ) }
    dend_71 { pt3dadd( -26.0747, -99.8994, 17.0962, 0.52 ) }
    dend_71 { pt3dadd( -27.1607, -100.315, 17.5634, 0.52 ) }
    dend_71 { pt3dadd( -27.944, -100.582, 17.9113, 0.52 ) }
    dend_71 { pt3dadd( -28.6184, -100.77, 18.2137, 0.52 ) }
    dend_71 { pt3dadd( -29.669, -100.998, 18.619, 0.52 ) }
    dend_71 { pt3dadd( -30.6286, -101.181, 18.894, 0.52 ) }
    dend_71 { pt3dadd( -31.6811, -101.389, 19.189, 0.52 ) }
    dend_71 { pt3dadd( -32.8064, -101.656, 19.5588, 0.52 ) }
    dend_71 { pt3dadd( -33.4336, -101.835, 19.8774, 0.52 ) }
    dend_71 { pt3dadd( -34.067, -102.056, 20.3197, 0.52 ) }
    dend_71 { pt3dadd( -34.741, -102.356, 20.9034, 0.52 ) }
    dend_71 { pt3dadd( -35.8586, -102.926, 21.9888, 0.52 ) }
    dend_71 { pt3dadd( -36.5716, -103.338, 22.7606, 0.52 ) }
    dend_71 { pt3dadd( -38.2471, -104.318, 24.5913, 0.52 ) }
    dend_71 { pt3dadd( -38.9461, -104.683, 25.3015, 0.52 ) }
    dend_71 { pt3dadd( -39.3388, -104.843, 25.6433, 0.52 ) }
    dend_71 { pt3dadd( -40.0441, -105.042, 26.0977, 0.52 ) }
    dend_71 { pt3dadd( -40.7092, -105.169, 26.3765, 0.52 ) }
    dend_71 { pt3dadd( -41.7523, -105.349, 26.6941, 0.52 ) }
    dend_71 { pt3dadd( -42.8476, -105.58, 26.8977, 0.52 ) }
    dend_71 { pt3dadd( -44.0369, -105.893, 27.1027, 0.52 ) }
    dend_71 { pt3dadd( -45.494, -106.392, 27.368, 0.52 ) }
    dend_71 { pt3dadd( -46.1683, -106.693, 27.5006, 0.52 ) }
    dend_71 { pt3dadd( -47.2347, -107.269, 27.7712, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_71 { pt3dadd( -48.3416, -107.918, 28.1261, 0.52 ) }
    dend_71 { pt3dadd( -48.9456, -108.264, 28.3472, 0.52 ) }
    dend_71 { pt3dadd( -49.8232, -108.717, 28.6863, 0.52 ) }
    dend_71 { pt3dadd( -50.4953, -109.026, 28.9484, 0.52 ) }
    dend_71 { pt3dadd( -51.9816, -109.636, 29.5083, 0.52 ) }
    dend_71 { pt3dadd( -53.0985, -110.053, 29.8957, 0.52 ) }
    dend_71 { pt3dadd( -54.4806, -110.549, 30.3022, 0.52 ) }
    dend_71 { pt3dadd( -55.5394, -110.956, 30.5546, 0.52 ) }
    dend_71 { pt3dadd( -56.1672, -111.231, 30.7187, 0.52 ) }
    dend_71 { pt3dadd( -56.6394, -111.471, 30.8422, 0.52 ) }
    dend_71 { pt3dadd( -57.9578, -112.238, 31.1825, 0.52 ) }
    dend_71 { pt3dadd( -59.5154, -113.198, 31.5565, 0.52 ) }
    dend_71 { pt3dadd( -60.8415, -114.034, 31.8541, 0.52 ) }
    dend_71 { pt3dadd( -64.134, -116.167, 32.5832, 0.52 ) }
    dend_71 { pt3dadd( -65.8601, -117.31, 32.9586, 0.52 ) }
    dend_71 { pt3dadd( -66.5651, -117.801, 33.0969, 0.52 ) }
    dend_71 { pt3dadd( -67.8815, -118.778, 33.3304, 0.52 ) }
    dend_71 { pt3dadd( -68.6374, -119.377, 33.4476, 0.52 ) }
    dend_71 { pt3dadd( -69.6982, -120.21, 33.5106, 0.52 ) }
    dend_71 { pt3dadd( -70.742, -121.001, 33.4417, 0.52 ) }
    dend_71 { pt3dadd( -72.3688, -122.084, 33.2976, 0.52 ) }
    dend_71 { pt3dadd( -73.229, -122.57, 33.2134, 0.52 ) }
    dend_71 { pt3dadd( -74.4861, -123.189, 33.1919, 0.52 ) }
    dend_71 { pt3dadd( -76.4735, -123.906, 33.2686, 0.52 ) }
    dend_71 { pt3dadd( -77.3084, -124.058, 33.3733, 0.52 ) }
    dend_71 { pt3dadd( -78.2031, -124.075, 33.6261, 0.52 ) }
    dend_71 { pt3dadd( -79.223, -123.981, 34.0845, 0.52 ) }
    dend_71 { pt3dadd( -81.2209, -123.688, 35.1548, 0.52 ) }
    dend_71 { pt3dadd( -81.974, -123.547, 35.685, 0.52 ) }
    dend_71 { pt3dadd( -83.0235, -123.326, 36.6946, 0.52 ) }
    dend_71 { pt3dadd( -84.2208, -123.055, 38.0509, 0.52 ) }
    dend_71 { pt3dadd( -84.9351, -122.882, 39.0024, 0.52 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 32/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -6.70288, -91.8959, 8.49464, 0.59 ) }
    dend_68 { pt3dadd( -7.52925, -92.7808, 8.61952, 0.59 ) }
    dend_68 { pt3dadd( -8.22998, -93.6166, 8.72736, 0.59 ) }
    dend_68 { pt3dadd( -8.82256, -94.4233, 8.78109, 0.59 ) }
    dend_68 { pt3dadd( -9.33322, -95.2044, 8.77754, 0.59 ) }
    dend_68 { pt3dadd( -9.93841, -96.1448, 8.73313, 0.59 ) }
    dend_68 { pt3dadd( -10.7684, -97.3552, 8.65502, 0.59 ) }
    dend_68 { pt3dadd( -11.3953, -98.1742, 8.57916, 0.59 ) }
    dend_68 { pt3dadd( -12.228, -99.2022, 8.46047, 0.59 ) }
    dend_68 { pt3dadd( -12.9727, -100.103, 8.37076, 0.59 ) }
    dend_68 { pt3dadd( -13.5374, -100.762, 8.28002, 0.59 ) }
    dend_68 { pt3dadd( -14.2944, -101.539, 8.08917, 0.59 ) }
    dend_68 { pt3dadd( -14.9037, -102.072, 7.91305, 0.59 ) }
    dend_68 { pt3dadd( -15.4305, -102.473, 7.77048, 0.59 ) }
    dend_68 { pt3dadd( -16.4409, -103.214, 7.53151, 0.59 ) }
    dend_68 { pt3dadd( -17.6456, -104.173, 7.31707, 0.59 ) }
    dend_68 { pt3dadd( -18.7451, -105.222, 7.19496, 0.59 ) }
    dend_68 { pt3dadd( -19.2893, -105.827, 7.17332, 0.59 ) }
    dend_68 { pt3dadd( -20.0377, -106.798, 7.25546, 0.59 ) }
    dend_68 { pt3dadd( -20.6018, -107.675, 7.41668, 0.59 ) }
    dend_68 { pt3dadd( -21.205, -108.82, 7.73207, 0.59 ) }
    dend_68 { pt3dadd( -21.6679, -109.861, 8.12213, 0.52 ) }
    dend_68 { pt3dadd( -21.9733, -110.656, 8.44761, 0.52 ) }
    dend_68 { pt3dadd( -22.4292, -111.923, 8.93139, 0.52 ) }
    dend_68 { pt3dadd( -22.7687, -112.923, 9.26816, 0.52 ) }
    dend_68 { pt3dadd( -23.0948, -113.811, 9.55937, 0.52 ) }
    dend_68 { pt3dadd( -23.3172, -114.403, 9.72815, 0.52 ) }
    dend_68 { pt3dadd( -23.6109, -115.179, 9.9313, 0.52 ) }
    dend_68 { pt3dadd( -24.0039, -116.156, 10.1869, 0.52 ) }
    dend_68 { pt3dadd( -24.412, -116.971, 10.3949, 0.52 ) }
    dend_68 { pt3dadd( -25.1302, -118.169, 10.7403, 0.52 ) }
    dend_68 { pt3dadd( -25.4274, -118.625, 10.8779, 0.52 ) }
    dend_68 { pt3dadd( -25.6481, -118.971, 10.978, 0.52 ) }
    dend_68 { pt3dadd( -26.1674, -119.864, 11.2048, 0.52 ) }
    dend_68 { pt3dadd( -26.6676, -120.808, 11.3983, 0.52 ) }
    dend_68 { pt3dadd( -26.9879, -121.434, 11.4918, 0.52 ) }
    dend_68 { pt3dadd( -27.2323, -121.93, 11.5252, 0.52 ) }
    dend_68 { pt3dadd( -27.4928, -122.451, 11.5563, 0.52 ) }
    dend_68 { pt3dadd( -27.9657, -123.398, 11.6071, 0.52 ) }
    dend_68 { pt3dadd( -28.3446, -124.173, 11.6446, 0.52 ) }
    dend_68 { pt3dadd( -28.7148, -124.951, 11.6793, 0.52 ) }
    dend_68 { pt3dadd( -29.0849, -125.763, 11.7127, 0.52 ) }
    dend_68 { pt3dadd( -29.5752, -126.881, 11.7688, 0.52 ) }
    dend_68 { pt3dadd( -30.2261, -128.351, 11.8722, 0.52 ) }
    dend_68 { pt3dadd( -30.6905, -129.371, 11.9654, 0.52 ) }
    dend_68 { pt3dadd( -30.9816, -130.019, 12.0339, 0.52 ) }
    dend_68 { pt3dadd( -31.48, -131.148, 12.1677, 0.52 ) }
    dend_68 { pt3dadd( -32.0269, -132.395, 12.3326, 0.52 ) }
    dend_68 { pt3dadd( -32.5475, -133.656, 12.4965, 0.52 ) }
    dend_68 { pt3dadd( -32.7677, -134.224, 12.5661, 0.52 ) }
    dend_68 { pt3dadd( -33.3065, -135.607, 12.7221, 0.52 ) }
    dend_68 { pt3dadd( -33.76, -136.721, 12.8552, 0.52 ) }
    dend_68 { pt3dadd( -34.219, -137.803, 12.9857, 0.52 ) }
    dend_68 { pt3dadd( -34.629, -138.805, 13.0956, 0.52 ) }
    dend_68 { pt3dadd( -35.109, -140.069, 13.2228, 0.52 ) }
    dend_68 { pt3dadd( -35.6916, -141.594, 13.3787, 0.52 ) }
    dend_68 { pt3dadd( -36.069, -142.537, 13.4827, 0.52 ) }
    dend_68 { pt3dadd( -36.4214, -143.349, 13.5775, 0.52 ) }
    dend_68 { pt3dadd( -36.7571, -144.062, 13.6627, 0.52 ) }
    dend_68 { pt3dadd( -37.0885, -144.683, 13.7388, 0.52 ) }
    dend_68 { pt3dadd( -37.6503, -145.617, 13.8531, 0.52 ) }
    dend_68 { pt3dadd( -38.2326, -146.561, 13.9538, 0.52 ) }
    dend_68 { pt3dadd( -38.7557, -147.405, 14.0355, 0.52 ) }
    dend_68 { pt3dadd( -39.3647, -148.37, 14.1325, 0.52 ) }
    dend_68 { pt3dadd( -39.8106, -149.069, 14.2052, 0.52 ) }
    dend_68 { pt3dadd( -40.1952, -149.707, 14.2701, 0.52 ) }
    dend_68 { pt3dadd( -40.6617, -150.586, 14.3544, 0.52 ) }
    dend_68 { pt3dadd( -40.8791, -151.0, 14.3974, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_64, id: dend_64, parent: dend_32 (entry count 0/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 7.01286, -108.797, 5.93598, 0.59 ) }
    dend_64 { pt3dadd( 7.28308, -109.656, 5.96441, 0.59 ) }
    dend_64 { pt3dadd( 7.41658, -110.164, 5.99794, 0.59 ) }
    dend_64 { pt3dadd( 7.55005, -110.781, 6.04504, 0.52 ) }
    dend_64 { pt3dadd( 7.69344, -111.545, 6.10494, 0.52 ) }
    dend_64 { pt3dadd( 7.79427, -112.169, 6.15409, 0.52 ) }
    dend_64 { pt3dadd( 7.93199, -113.0, 6.21886, 0.52 ) }
    dend_64 { pt3dadd( 8.00325, -113.468, 6.26847, 0.52 ) }
    dend_64 { pt3dadd( 8.08015, -114.048, 6.3193, 0.52 ) }
    dend_64 { pt3dadd( 8.14523, -114.605, 6.36224, 0.52 ) }
    dend_64 { pt3dadd( 8.27107, -115.749, 6.43658, 0.52 ) }
    dend_64 { pt3dadd( 8.37617, -116.688, 6.48193, 0.52 ) }
    dend_64 { pt3dadd( 8.46972, -117.414, 6.49826, 0.44 ) }
    dend_64 { pt3dadd( 8.55904, -117.961, 6.50951, 0.44 ) }
    dend_64 { pt3dadd( 8.65754, -118.463, 6.51875, 0.44 ) }
    dend_64 { pt3dadd( 8.73314, -118.799, 6.52378, 0.44 ) }
    dend_64 { pt3dadd( 8.90831, -119.514, 6.52979, 0.44 ) }
    dend_64 { pt3dadd( 9.08482, -120.244, 6.53246, 0.44 ) }
    dend_64 { pt3dadd( 9.25086, -120.91, 6.53435, 0.44 ) }
    dend_64 { pt3dadd( 9.37398, -121.443, 6.53663, 0.44 ) }
    dend_64 { pt3dadd( 9.42393, -121.689, 6.55105, 0.44 ) }
    dend_64 { pt3dadd( 9.52576, -122.227, 6.58797, 0.44 ) }
    dend_64 { pt3dadd( 9.61816, -122.847, 6.64026, 0.44 ) }
    dend_64 { pt3dadd( 9.66258, -123.4, 6.6992, 0.44 ) }
    dend_64 { pt3dadd( 9.67582, -124.255, 6.80329, 0.44 ) }
    dend_64 { pt3dadd( 9.64758, -125.073, 6.91905, 0.44 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 26/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 7.01286, -108.797, 5.93598, 0.59 ) }
    dend_33 { pt3dadd( 7.13584, -110.286, 5.98258, 0.59 ) }
    dend_33 { pt3dadd( 7.23191, -111.609, 6.01576, 0.59 ) }
    dend_33 { pt3dadd( 7.32551, -113.142, 6.04793, 0.59 ) }
    dend_33 { pt3dadd( 7.36722, -114.002, 6.06331, 0.59 ) }
    dend_33 { pt3dadd( 7.44577, -115.408, 6.08634, 0.59 ) }
    dend_33 { pt3dadd( 7.52286, -116.611, 6.09224, 0.59 ) }
    dend_33 { pt3dadd( 7.68714, -118.365, 6.07292, 0.59 ) }
    dend_33 { pt3dadd( 7.83813, -119.68, 6.04875, 0.59 ) }
    dend_33 { pt3dadd( 8.0163, -121.133, 5.94759, 0.59 ) }
    dend_33 { pt3dadd( 8.2024, -122.554, 5.7859, 0.59 ) }
    dend_33 { pt3dadd( 8.36519, -123.755, 5.57664, 0.59 ) }
    dend_33 { pt3dadd( 8.50146, -124.771, 5.34429, 0.59 ) }
    dend_33 { pt3dadd( 8.5804, -125.434, 5.15701, 0.59 ) }
    dend_33 { pt3dadd( 8.79233, -127.167, 4.54612, 0.59 ) }
    dend_33 { pt3dadd( 8.89572, -128.17, 4.14902, 0.59 ) }
    dend_33 { pt3dadd( 8.94034, -129.337, 3.68697, 0.59 ) }
    dend_33 { pt3dadd( 8.92046, -129.996, 3.4529, 0.59 ) }
    dend_33 { pt3dadd( 8.85853, -130.625, 3.26436, 0.59 ) }
    dend_33 { pt3dadd( 8.66999, -131.916, 2.96571, 0.59 ) }
    dend_33 { pt3dadd( 8.4831, -133.133, 2.73687, 0.59 ) }
    dend_33 { pt3dadd( 8.3203, -134.474, 2.43812, 0.59 ) }
    dend_33 { pt3dadd( 8.20279, -135.686, 2.15658, 0.59 ) }
    dend_33 { pt3dadd( 8.09198, -136.925, 1.85423, 0.59 ) }
    dend_33 { pt3dadd( 7.98227, -137.975, 1.60213, 0.59 ) }
    dend_33 { pt3dadd( 7.79694, -139.42, 1.28049, 0.59 ) }
    dend_33 { pt3dadd( 7.62428, -140.723, 0.980509, 0.59 ) }
    dend_33 { pt3dadd( 7.49405, -141.748, 0.752039, 0.59 ) }
    dend_33 { pt3dadd( 7.38138, -142.699, 0.565087, 0.59 ) }
    dend_33 { pt3dadd( 7.2577, -143.935, 0.372692, 0.59 ) }
    dend_33 { pt3dadd( 7.17878, -145.048, 0.278976, 0.59 ) }
    dend_33 { pt3dadd( 7.15197, -146.022, 0.278154, 0.59 ) }
    dend_33 { pt3dadd( 7.18033, -147.062, 0.326989, 0.59 ) }
    dend_33 { pt3dadd( 7.28939, -148.287, 0.397646, 0.59 ) }
    dend_33 { pt3dadd( 7.40846, -149.351, 0.460784, 0.59 ) }
    dend_33 { pt3dadd( 7.55593, -150.511, 0.529846, 0.59 ) }
    dend_33 { pt3dadd( 7.69435, -151.734, 0.59631, 0.59 ) }
    dend_33 { pt3dadd( 7.76873, -152.589, 0.602701, 0.59 ) }
    dend_33 { pt3dadd( 7.79036, -153.854, 0.551525, 0.59 ) }
    dend_33 { pt3dadd( 7.72216, -155.043, 0.453158, 0.59 ) }
    dend_33 { pt3dadd( 7.64982, -155.731, 0.349663, 0.59 ) }
    dend_33 { pt3dadd( 7.49683, -157.078, 0.080278, 0.59 ) }
    dend_33 { pt3dadd( 7.37824, -158.306, -0.184539, 0.59 ) }
    dend_33 { pt3dadd( 7.30196, -159.593, -0.485184, 0.59 ) }
    dend_33 { pt3dadd( 7.29483, -160.495, -0.693919, 0.59 ) }
    dend_33 { pt3dadd( 7.35558, -161.876, -0.9793, 0.59 ) }
    dend_33 { pt3dadd( 7.42036, -162.89, -1.16051, 0.59 ) }
    dend_33 { pt3dadd( 7.50665, -164.14, -1.34424, 0.59 ) }
    dend_33 { pt3dadd( 7.59368, -165.561, -1.53666, 0.59 ) }
    dend_33 { pt3dadd( 7.69569, -166.937, -1.78554, 0.59 ) }
    dend_33 { pt3dadd( 7.82839, -168.639, -2.13876, 0.59 ) }
    dend_33 { pt3dadd( 7.949, -169.954, -2.42598, 0.59 ) }
    dend_33 { pt3dadd( 8.04683, -170.827, -2.64302, 0.59 ) }
    dend_33 { pt3dadd( 8.25613, -172.18, -3.05464, 0.59 ) }
    dend_33 { pt3dadd( 8.54209, -173.687, -3.5719, 0.59 ) }
    dend_33 { pt3dadd( 8.66547, -174.318, -3.81841, 0.59 ) }
    dend_33 { pt3dadd( 8.81597, -175.134, -4.17149, 0.59 ) }
    dend_33 { pt3dadd( 8.90747, -175.677, -4.39963, 0.59 ) }
    dend_33 { pt3dadd( 9.09132, -176.954, -4.90397, 0.59 ) }
    dend_33 { pt3dadd( 9.17074, -177.884, -5.21841, 0.59 ) }
    dend_33 { pt3dadd( 9.15622, -178.593, -5.45436, 0.59 ) }
    dend_33 { pt3dadd( 8.96551, -180.0, -6.01046, 0.59 ) }
    dend_33 { pt3dadd( 8.73642, -180.945, -6.41371, 0.59 ) }
    dend_33 { pt3dadd( 8.43792, -181.852, -6.7986, 0.59 ) }
    dend_33 { pt3dadd( 8.12735, -182.589, -7.09816, 0.59 ) }
    dend_33 { pt3dadd( 7.51405, -183.824, -7.64998, 0.59 ) }
    dend_33 { pt3dadd( 6.7406, -185.211, -8.28514, 0.59 ) }
    dend_33 { pt3dadd( 6.31994, -185.917, -8.59371, 0.59 ) }
    dend_33 { pt3dadd( 5.71795, -186.956, -9.02366, 0.59 ) }
    dend_33 { pt3dadd( 5.39138, -187.583, -9.2485, 0.59 ) }
    dend_33 { pt3dadd( 4.67, -189.261, -9.75468, 0.59 ) }
    dend_33 { pt3dadd( 4.47056, -189.861, -9.92209, 0.59 ) }
    dend_33 { pt3dadd( 4.20589, -190.914, -10.2027, 0.59 ) }
    dend_33 { pt3dadd( 4.06512, -191.671, -10.411, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_33 { pt3dadd( 3.96001, -192.559, -10.6485, 0.59 ) }
    dend_33 { pt3dadd( 3.90303, -193.575, -10.9193, 0.59 ) }
    dend_33 { pt3dadd( 3.84446, -195.467, -11.3893, 0.59 ) }
    dend_33 { pt3dadd( 3.79475, -196.466, -11.6829, 0.59 ) }
    dend_33 { pt3dadd( 3.73951, -197.212, -11.9242, 0.59 ) }
    dend_33 { pt3dadd( 3.64577, -198.117, -12.2272, 0.59 ) }
    dend_33 { pt3dadd( 3.41858, -199.512, -12.6968, 0.59 ) }
    dend_33 { pt3dadd( 3.17811, -200.476, -13.0106, 0.59 ) }
    dend_33 { pt3dadd( 2.68723, -201.842, -13.4022, 0.59 ) }
    dend_33 { pt3dadd( 2.37766, -202.496, -13.5977, 0.59 ) }
    dend_33 { pt3dadd( 2.08823, -202.989, -13.7587, 0.59 ) }
    dend_33 { pt3dadd( 1.44291, -203.94, -14.067, 0.59 ) }
    dend_33 { pt3dadd( 0.874021, -204.736, -14.2942, 0.59 ) }
    dend_33 { pt3dadd( 0.426823, -205.44, -14.4708, 0.59 ) }
    dend_33 { pt3dadd( 0.144202, -205.989, -14.6031, 0.59 ) }
    dend_33 { pt3dadd( -0.387432, -207.327, -14.9468, 0.59 ) }
    dend_33 { pt3dadd( -0.650492, -208.212, -15.1743, 0.59 ) }
    dend_33 { pt3dadd( -0.820689, -208.985, -15.3997, 0.59 ) }
    dend_33 { pt3dadd( -1.03121, -210.196, -15.7673, 0.59 ) }
    dend_33 { pt3dadd( -1.21355, -211.337, -16.1153, 0.59 ) }
    dend_33 { pt3dadd( -1.33874, -212.191, -16.3678, 0.59 ) }
    dend_33 { pt3dadd( -1.43654, -212.889, -16.5466, 0.59 ) }
    dend_33 { pt3dadd( -1.61703, -214.116, -16.8351, 0.52 ) }
    dend_33 { pt3dadd( -1.78398, -214.924, -16.9997, 0.52 ) }
    dend_33 { pt3dadd( -2.00134, -215.649, -17.1154, 0.52 ) }
    dend_33 { pt3dadd( -2.26663, -216.359, -17.2159, 0.52 ) }
    dend_33 { pt3dadd( -2.80574, -217.71, -17.4073, 0.52 ) }
    dend_33 { pt3dadd( -3.25158, -218.812, -17.5476, 0.52 ) }
    dend_33 { pt3dadd( -3.75072, -219.946, -17.6641, 0.52 ) }
    dend_33 { pt3dadd( -4.33976, -221.201, -17.8574, 0.52 ) }
    dend_33 { pt3dadd( -4.85909, -222.309, -18.0609, 0.52 ) }
    dend_33 { pt3dadd( -5.257, -223.186, -18.2373, 0.52 ) }
    dend_33 { pt3dadd( -5.6869, -224.205, -18.4762, 0.52 ) }
    dend_33 { pt3dadd( -6.29696, -225.877, -18.89, 0.52 ) }
    dend_33 { pt3dadd( -6.80731, -227.663, -19.3795, 0.52 ) }
    dend_33 { pt3dadd( -7.10346, -228.977, -19.7528, 0.52 ) }
    dend_33 { pt3dadd( -7.2776, -229.834, -19.9931, 0.52 ) }
    dend_33 { pt3dadd( -7.55651, -231.347, -20.4342, 0.52 ) }
    dend_33 { pt3dadd( -7.67896, -232.158, -20.6648, 0.52 ) }
    dend_33 { pt3dadd( -7.85285, -233.552, -21.0166, 0.52 ) }
    dend_33 { pt3dadd( -7.97154, -234.361, -21.1738, 0.52 ) }
    dend_33 { pt3dadd( -8.12082, -235.132, -21.3005, 0.52 ) }
    dend_33 { pt3dadd( -8.33173, -236.084, -21.417, 0.52 ) }
    dend_33 { pt3dadd( -8.60542, -237.293, -21.5001, 0.52 ) }
    dend_33 { pt3dadd( -8.92324, -238.697, -21.6028, 0.52 ) }
    dend_33 { pt3dadd( -9.14312, -239.618, -21.6631, 0.52 ) }
    dend_33 { pt3dadd( -9.4966, -241.076, -21.8232, 0.52 ) }
    dend_33 { pt3dadd( -9.67146, -241.824, -21.9299, 0.52 ) }
    dend_33 { pt3dadd( -9.87082, -242.701, -22.075, 0.52 ) }
    dend_33 { pt3dadd( -10.1042, -243.836, -22.2765, 0.52 ) }
    dend_33 { pt3dadd( -10.3617, -245.26, -22.532, 0.52 ) }
    dend_33 { pt3dadd( -10.5792, -246.52, -22.7688, 0.52 ) }
    dend_33 { pt3dadd( -10.7372, -247.477, -22.9444, 0.52 ) }
    dend_33 { pt3dadd( -10.9806, -248.97, -23.1942, 0.52 ) }
    dend_33 { pt3dadd( -11.1763, -250.133, -23.3602, 0.52 ) }
    dend_33 { pt3dadd( -11.3105, -250.963, -23.4475, 0.52 ) }
    dend_33 { pt3dadd( -11.5588, -252.668, -23.6902, 0.52 ) }
    dend_33 { pt3dadd( -11.714, -253.757, -23.8699, 0.52 ) }
    dend_33 { pt3dadd( -11.8461, -254.686, -24.0568, 0.52 ) }
    dend_33 { pt3dadd( -11.9731, -255.567, -24.2601, 0.52 ) }
    dend_33 { pt3dadd( -12.1236, -256.65, -24.5595, 0.52 ) }
    dend_33 { pt3dadd( -12.3447, -258.388, -25.0696, 0.52 ) }
    dend_33 { pt3dadd( -12.416, -258.994, -25.2464, 0.52 ) }
    dend_33 { pt3dadd( -12.4908, -259.755, -25.4628, 0.52 ) }
    dend_33 { pt3dadd( -12.5489, -260.58, -25.672, 0.52 ) }
    dend_33 { pt3dadd( -12.5876, -261.974, -25.9674, 0.52 ) }
    dend_33 { pt3dadd( -12.59, -263.426, -26.2008, 0.52 ) }
    dend_33 { pt3dadd( -12.59, -264.32, -26.2883, 0.52 ) }
    dend_33 { pt3dadd( -12.619, -265.603, -26.3978, 0.52 ) }
    dend_33 { pt3dadd( -12.6888, -266.869, -26.4767, 0.52 ) }
    dend_33 { pt3dadd( -12.7743, -267.722, -26.504, 0.52 ) }
    dend_33 { pt3dadd( -12.8831, -268.378, -26.4639, 0.52 ) }
    dend_33 { pt3dadd( -13.111, -269.295, -26.3589, 0.52 ) }
    dend_33 { pt3dadd( -13.4645, -270.279, -26.1621, 0.52 ) }
    dend_33 { pt3dadd( -13.8327, -271.063, -25.9482, 0.52 ) }
    dend_33 { pt3dadd( -14.3385, -272.024, -25.6384, 0.52 ) }
    dend_33 { pt3dadd( -15.0143, -273.299, -25.2047, 0.52 ) }
    dend_33 { pt3dadd( -15.3639, -273.986, -24.9694, 0.52 ) }
    dend_33 { pt3dadd( -15.8321, -275.019, -24.6329, 0.52 ) }
    dend_33 { pt3dadd( -16.2108, -276.04, -24.3253, 0.52 ) }
    dend_33 { pt3dadd( -16.4178, -276.772, -24.1722, 0.52 ) }
    dend_33 { pt3dadd( -16.6434, -277.787, -24.1026, 0.52 ) }
    dend_33 { pt3dadd( -16.7695, -278.489, -24.1462, 0.52 ) }
    dend_33 { pt3dadd( -16.9172, -279.503, -24.3373, 0.52 ) }
    dend_33 { pt3dadd( -17.0909, -280.932, -24.7431, 0.52 ) }
    dend_33 { pt3dadd( -17.2709, -282.288, -25.193, 0.52 ) }
    dend_33 { pt3dadd( -17.487, -283.649, -25.686, 0.52 ) }
    dend_33 { pt3dadd( -17.6503, -284.478, -26.0268, 0.52 ) }
    dend_33 { pt3dadd( -18.0252, -286.017, -26.7062, 0.52 ) }
    dend_33 { pt3dadd( -18.4732, -287.503, -27.3747, 0.52 ) }
    dend_33 { pt3dadd( -18.7775, -288.316, -27.7291, 0.52 ) }
    dend_33 { pt3dadd( -19.0324, -288.892, -27.9528, 0.52 ) }
    dend_33 { pt3dadd( -19.6421, -290.163, -28.3848, 0.52 ) }
    dend_33 { pt3dadd( -19.9589, -290.788, -28.619, 0.52 ) }
    dend_33 { pt3dadd( -20.4862, -291.8, -29.0965, 0.52 ) }
    dend_33 { pt3dadd( -20.8773, -292.526, -29.4966, 0.52 ) }
    dend_33 { pt3dadd( -21.3209, -293.386, -30.0149, 0.52 ) }
    dend_33 { pt3dadd( -21.6172, -293.999, -30.4152, 0.52 ) }
    dend_33 { pt3dadd( -22.1367, -295.186, -31.2614, 0.52 ) }
    dend_33 { pt3dadd( -22.6446, -296.541, -32.4344, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 0/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 12.3694, 99.2068, -13.7542, 0.59 ) }
    dend_24 { pt3dadd( 13.404, 99.7317, -14.0484, 0.59 ) }
    dend_24 { pt3dadd( 14.1671, 100.105, -14.2337, 0.59 ) }
    dend_24 { pt3dadd( 15.0214, 100.52, -14.4054, 0.59 ) }
    dend_24 { pt3dadd( 15.8345, 100.915, -14.5373, 0.59 ) }
    dend_24 { pt3dadd( 17.0115, 101.453, -14.7531, 0.59 ) }
    dend_24 { pt3dadd( 18.1348, 101.948, -14.9881, 0.59 ) }
    dend_24 { pt3dadd( 19.3984, 102.523, -15.2578, 0.59 ) }
    dend_24 { pt3dadd( 20.2917, 102.944, -15.5359, 0.59 ) }
    dend_24 { pt3dadd( 21.2189, 103.404, -15.9106, 0.59 ) }
    dend_24 { pt3dadd( 22.3017, 104.024, -16.5227, 0.52 ) }
    dend_24 { pt3dadd( 23.1404, 104.621, -17.1372, 0.52 ) }
    dend_24 { pt3dadd( 23.6173, 105.077, -17.6097, 0.52 ) }
    dend_24 { pt3dadd( 24.7882, 106.609, -19.1339, 0.52 ) }
    dend_24 { pt3dadd( 25.0902, 107.224, -19.7111, 0.52 ) }
    dend_24 { pt3dadd( 25.3984, 108.511, -20.8993, 0.52 ) }
    dend_24 { pt3dadd( 25.4433, 109.174, -21.447, 0.52 ) }
    dend_24 { pt3dadd( 25.4165, 110.075, -22.1938, 0.52 ) }
    dend_24 { pt3dadd( 25.3682, 110.689, -22.6795, 0.52 ) }
    dend_24 { pt3dadd( 25.2256, 111.942, -23.5633, 0.52 ) }
    dend_24 { pt3dadd( 24.9973, 113.836, -24.8972, 0.52 ) }
    dend_24 { pt3dadd( 24.9011, 114.782, -25.5335, 0.52 ) }
    dend_24 { pt3dadd( 24.7881, 116.573, -26.7413, 0.52 ) }
    dend_24 { pt3dadd( 24.7671, 117.486, -27.3443, 0.52 ) }
    dend_24 { pt3dadd( 24.7735, 118.107, -27.7176, 0.52 ) }
    dend_24 { pt3dadd( 24.8034, 119.481, -28.4666, 0.52 ) }
    dend_24 { pt3dadd( 24.8022, 120.013, -28.7491, 0.52 ) }
    dend_24 { pt3dadd( 24.7617, 120.934, -29.2689, 0.52 ) }
    dend_24 { pt3dadd( 24.6407, 122.004, -29.8581, 0.52 ) }
    dend_24 { pt3dadd( 24.5025, 122.737, -30.3108, 0.52 ) }
    dend_24 { pt3dadd( 24.1762, 123.943, -31.0723, 0.52 ) }
    dend_24 { pt3dadd( 23.6462, 125.537, -32.1696, 0.52 ) }
    dend_24 { pt3dadd( 23.3789, 126.22, -32.6624, 0.52 ) }
    dend_24 { pt3dadd( 23.0545, 126.964, -33.2787, 0.52 ) }
    dend_24 { pt3dadd( 22.6696, 127.961, -34.7678, 0.52 ) }
    dend_24 { pt3dadd( 22.4746, 128.538, -35.8378, 0.52 ) }
    dend_24 { pt3dadd( 22.2659, 129.323, -37.5465, 0.52 ) }
    dend_24 { pt3dadd( 22.1822, 129.765, -38.5809, 0.52 ) }
    dend_24 { pt3dadd( 22.0812, 130.745, -40.9792, 0.52 ) }
    dend_24 { pt3dadd( 22.014, 134.097, -49.2263, 0.52 ) }
    dend_24 { pt3dadd( 22.0269, 134.493, -50.1606, 0.52 ) }
    dend_24 { pt3dadd( 22.0965, 135.51, -52.3733, 0.52 ) }
    dend_24 { pt3dadd( 22.1523, 136.169, -53.6126, 0.52 ) }
    dend_24 { pt3dadd( 22.2779, 137.331, -55.4204, 0.52 ) }
    dend_24 { pt3dadd( 22.3393, 137.968, -56.08, 0.52 ) }
    dend_24 { pt3dadd( 22.5491, 140.563, -57.5153, 0.52 ) }
    dend_24 { pt3dadd( 22.6754, 141.725, -58.0289, 0.52 ) }
    dend_24 { pt3dadd( 22.8447, 143.101, -58.4635, 0.52 ) }
    dend_24 { pt3dadd( 23.058, 144.518, -58.802, 0.52 ) }
    dend_24 { pt3dadd( 23.4013, 146.381, -59.0567, 0.52 ) }
    dend_24 { pt3dadd( 23.6697, 147.567, -59.1455, 0.52 ) }
    dend_24 { pt3dadd( 24.1128, 149.293, -59.1479, 0.52 ) }
    dend_24 { pt3dadd( 24.3592, 150.289, -59.1347, 0.52 ) }
    dend_24 { pt3dadd( 24.6858, 151.754, -59.1031, 0.52 ) }
    dend_24 { pt3dadd( 25.0193, 153.487, -59.0523, 0.52 ) }
    dend_24 { pt3dadd( 25.3027, 155.158, -59.0022, 0.52 ) }
    dend_24 { pt3dadd( 25.4958, 156.542, -58.9623, 0.52 ) }
    dend_24 { pt3dadd( 25.6424, 157.889, -58.926, 0.52 ) }
    dend_24 { pt3dadd( 25.7974, 159.456, -58.8838, 0.52 ) }
    dend_24 { pt3dadd( 25.9463, 161.031, -58.8411, 0.52 ) }
    dend_24 { pt3dadd( 26.0925, 162.483, -58.8007, 0.52 ) }
    dend_24 { pt3dadd( 26.2342, 163.729, -58.7468, 0.52 ) }
    dend_24 { pt3dadd( 26.3995, 164.969, -58.6626, 0.52 ) }
    dend_24 { pt3dadd( 26.6289, 166.423, -58.5204, 0.52 ) }
    dend_24 { pt3dadd( 26.8392, 167.664, -58.3855, 0.52 ) }
    dend_24 { pt3dadd( 27.0757, 169.069, -58.219, 0.52 ) }
    dend_24 { pt3dadd( 27.3256, 170.614, -58.0089, 0.52 ) }
    dend_24 { pt3dadd( 27.5821, 172.178, -57.7612, 0.52 ) }
    dend_24 { pt3dadd( 27.7775, 173.402, -57.5322, 0.52 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 69/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 12.3694, 99.2068, -13.7542, 0.59 ) }
    dend_19 { pt3dadd( 11.1004, 100.352, -14.014, 0.59 ) }
    dend_19 { pt3dadd( 9.9815, 101.309, -14.267, 0.59 ) }
    dend_19 { pt3dadd( 8.58178, 102.553, -14.6522, 0.59 ) }
    dend_19 { pt3dadd( 7.64359, 103.47, -14.9374, 0.59 ) }
    dend_19 { pt3dadd( 6.60849, 104.595, -15.2428, 0.59 ) }
    dend_19 { pt3dadd( 5.88896, 105.486, -15.4504, 0.59 ) }
    dend_19 { pt3dadd( 4.87319, 106.97, -15.6939, 0.59 ) }
    dend_19 { pt3dadd( 4.27349, 108.162, -15.8108, 0.59 ) }
    dend_19 { pt3dadd( 3.96241, 109.57, -15.8147, 0.59 ) }
    dend_19 { pt3dadd( 4.01685, 110.825, -15.6651, 0.59 ) }
    dend_19 { pt3dadd( 4.33432, 112.099, -15.3972, 0.59 ) }
    dend_19 { pt3dadd( 4.90227, 113.432, -15.0167, 0.59 ) }
    dend_19 { pt3dadd( 5.40756, 114.291, -14.7162, 0.59 ) }
    dend_19 { pt3dadd( 6.09833, 115.285, -14.3285, 0.59 ) }
    dend_19 { pt3dadd( 6.64188, 115.999, -14.0647, 0.59 ) }
    dend_19 { pt3dadd( 7.11575, 116.617, -13.829, 0.59 ) }
    dend_19 { pt3dadd( 7.72675, 117.474, -13.5057, 0.59 ) }
    dend_19 { pt3dadd( 8.53931, 118.656, -13.4759, 0.59 ) }
    dend_19 { pt3dadd( 9.01962, 119.414, -13.6361, 0.59 ) }
    dend_19 { pt3dadd( 9.68231, 120.569, -14.0689, 0.59 ) }
    dend_19 { pt3dadd( 10.5053, 122.108, -14.9512, 0.59 ) }
    dend_19 { pt3dadd( 10.9551, 123.053, -15.5959, 0.59 ) }
    dend_19 { pt3dadd( 13.0223, 128.124, -19.4456, 0.59 ) }
    dend_19 { pt3dadd( 13.3081, 128.998, -20.1356, 0.59 ) }
    dend_19 { pt3dadd( 13.5008, 129.763, -20.7302, 0.59 ) }
    dend_19 { pt3dadd( 13.9357, 132.102, -22.4917, 0.59 ) }
    dend_19 { pt3dadd( 14.06, 133.216, -23.2668, 0.59 ) }
    dend_19 { pt3dadd( 14.058, 133.896, -23.5896, 0.59 ) }
    dend_19 { pt3dadd( 13.8442, 135.478, -23.7634, 0.44 ) }
    dend_19 { pt3dadd( 13.6475, 136.815, -23.7819, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_19 { pt3dadd( 13.4709, 137.799, -23.6696, 0.44 ) }
    dend_19 { pt3dadd( 13.2715, 138.691, -23.4176, 0.44 ) }
    dend_19 { pt3dadd( 12.9096, 140.523, -22.7856, 0.44 ) }
    dend_19 { pt3dadd( 12.6409, 142.259, -22.1363, 0.44 ) }
    dend_19 { pt3dadd( 12.5471, 143.079, -21.8256, 0.44 ) }
    dend_19 { pt3dadd( 12.3903, 144.796, -21.1804, 0.44 ) }
    dend_19 { pt3dadd( 12.263, 146.316, -20.6008, 0.44 ) }
    dend_19 { pt3dadd( 12.1467, 147.825, -20.0512, 0.44 ) }
    dend_19 { pt3dadd( 12.0466, 149.039, -19.6758, 0.44 ) }
    dend_19 { pt3dadd( 11.9213, 150.261, -19.4077, 0.44 ) }
    dend_19 { pt3dadd( 11.7035, 151.995, -19.1225, 0.44 ) }
    dend_19 { pt3dadd( 11.5213, 153.342, -19.0001, 0.44 ) }
    dend_19 { pt3dadd( 11.3418, 154.497, -18.9428, 0.44 ) }
    dend_19 { pt3dadd( 11.0103, 156.301, -18.8608, 0.44 ) }
    dend_19 { pt3dadd( 10.8101, 157.309, -18.8079, 0.44 ) }
    dend_19 { pt3dadd( 10.6236, 158.233, -18.7427, 0.44 ) }
    dend_19 { pt3dadd( 10.3177, 159.886, -18.6101, 0.44 ) }
    dend_19 { pt3dadd( 10.0693, 161.642, -18.4616, 0.44 ) }
    dend_19 { pt3dadd( 9.95233, 162.739, -18.3443, 0.44 ) }
    dend_19 { pt3dadd( 9.81124, 164.258, -18.1713, 0.44 ) }
    dend_19 { pt3dadd( 9.68695, 165.711, -18.0162, 0.44 ) }
    dend_19 { pt3dadd( 9.59078, 167.053, -17.8909, 0.44 ) }
    dend_19 { pt3dadd( 9.55645, 167.958, -17.8365, 0.44 ) }
    dend_19 { pt3dadd( 9.55336, 169.461, -17.8346, 0.44 ) }
    dend_19 { pt3dadd( 9.59409, 171.164, -17.9483, 0.44 ) }
    dend_19 { pt3dadd( 9.65657, 172.582, -18.1221, 0.44 ) }
    dend_19 { pt3dadd( 9.72224, 174.18, -18.3793, 0.44 ) }
    dend_19 { pt3dadd( 9.78355, 175.869, -18.6713, 0.44 ) }
    dend_19 { pt3dadd( 9.82294, 177.738, -19.011, 0.44 ) }
    dend_19 { pt3dadd( 9.86513, 179.852, -19.3937, 0.44 ) }
    dend_19 { pt3dadd( 9.9015, 181.262, -19.6326, 0.44 ) }
    dend_19 { pt3dadd( 9.91497, 182.484, -19.8223, 0.44 ) }
    dend_19 { pt3dadd( 9.89315, 184.421, -20.0723, 0.44 ) }
    dend_19 { pt3dadd( 9.85056, 185.508, -20.1706, 0.44 ) }
    dend_19 { pt3dadd( 9.7721, 187.027, -20.2532, 0.44 ) }
    dend_19 { pt3dadd( 9.70009, 188.365, -20.2916, 0.44 ) }
    dend_19 { pt3dadd( 9.66097, 189.506, -20.3587, 0.44 ) }
    dend_19 { pt3dadd( 9.6429, 191.275, -20.5013, 0.44 ) }
    dend_19 { pt3dadd( 9.65145, 192.902, -20.6615, 0.44 ) }
    dend_19 { pt3dadd( 9.66417, 194.001, -20.7828, 0.44 ) }
    dend_19 { pt3dadd( 9.6586, 195.493, -20.9687, 0.44 ) }
    dend_19 { pt3dadd( 9.63908, 197.423, -21.2196, 0.44 ) }
    dend_19 { pt3dadd( 9.6251, 199.282, -21.4578, 0.44 ) }
    dend_19 { pt3dadd( 9.60114, 200.448, -21.6049, 0.44 ) }
    dend_19 { pt3dadd( 9.52851, 201.908, -21.7783, 0.44 ) }
    dend_19 { pt3dadd( 9.41714, 203.313, -21.9238, 0.44 ) }
    dend_19 { pt3dadd( 9.28215, 204.564, -22.0156, 0.44 ) }
    dend_19 { pt3dadd( 9.15813, 205.653, -22.0866, 0.44 ) }
    dend_19 { pt3dadd( 9.07231, 206.59, -22.1656, 0.44 ) }
    dend_19 { pt3dadd( 9.0224, 208.378, -22.4251, 0.44 ) }
    dend_19 { pt3dadd( 9.08926, 209.707, -22.6766, 0.44 ) }
    dend_19 { pt3dadd( 9.22769, 210.959, -22.9083, 0.44 ) }
    dend_19 { pt3dadd( 9.5514, 212.747, -23.2046, 0.44 ) }
    dend_19 { pt3dadd( 9.7734, 213.656, -23.3249, 0.44 ) }
    dend_19 { pt3dadd( 10.4185, 215.794, -23.5312, 0.44 ) }
    dend_19 { pt3dadd( 10.6623, 216.529, -23.5737, 0.44 ) }
    dend_19 { pt3dadd( 11.1395, 218.085, -23.5942, 0.44 ) }
    dend_19 { pt3dadd( 11.5307, 219.587, -23.5533, 0.44 ) }
    dend_19 { pt3dadd( 11.8607, 221.228, -23.4333, 0.44 ) }
    dend_19 { pt3dadd( 11.9793, 221.981, -23.3709, 0.44 ) }
    dend_19 { pt3dadd( 12.1045, 223.179, -23.262, 0.44 ) }
    dend_19 { pt3dadd( 12.2744, 225.368, -23.1296, 0.44 ) }
    dend_19 { pt3dadd( 12.3765, 226.887, -23.0891, 0.44 ) }
    dend_19 { pt3dadd( 12.4268, 227.743, -23.0612, 0.44 ) }
    dend_19 { pt3dadd( 12.5376, 228.943, -23.0005, 0.44 ) }
    dend_19 { pt3dadd( 12.7104, 230.216, -22.9117, 0.44 ) }
    dend_19 { pt3dadd( 13.01, 231.786, -22.7668, 0.44 ) }
    dend_19 { pt3dadd( 13.3983, 233.424, -22.587, 0.44 ) }
    dend_19 { pt3dadd( 13.5243, 233.901, -22.5302, 0.44 ) }
    dend_19 { pt3dadd( 13.9036, 235.314, -22.3685, 0.44 ) }
    dend_19 { pt3dadd( 14.1823, 236.402, -22.2408, 0.44 ) }
    dend_19 { pt3dadd( 14.4393, 237.47, -22.1194, 0.44 ) }
    dend_19 { pt3dadd( 14.7707, 239.122, -21.961, 0.44 ) }
    dend_19 { pt3dadd( 14.9969, 240.531, -21.8354, 0.44 ) }
    dend_19 { pt3dadd( 15.2058, 242.203, -21.7026, 0.44 ) }
    dend_19 { pt3dadd( 15.3087, 243.363, -21.6223, 0.44 ) }
    dend_19 { pt3dadd( 15.3686, 244.218, -21.5692, 0.44 ) }
    dend_19 { pt3dadd( 15.4997, 246.084, -21.4609, 0.44 ) }
    dend_19 { pt3dadd( 15.5694, 246.914, -21.4369, 0.44 ) }
    dend_19 { pt3dadd( 15.7186, 248.349, -21.4351, 0.44 ) }
    dend_19 { pt3dadd( 15.7996, 249.028, -21.4497, 0.44 ) }
    dend_19 { pt3dadd( 15.9544, 250.112, -21.5129, 0.44 ) }
    dend_19 { pt3dadd( 16.1647, 251.472, -21.6149, 0.44 ) }
    dend_19 { pt3dadd( 16.4374, 253.284, -21.7771, 0.44 ) }
    dend_19 { pt3dadd( 16.6704, 254.936, -21.9369, 0.44 ) }
    dend_19 { pt3dadd( 16.8566, 256.272, -22.0682, 0.44 ) }
    dend_19 { pt3dadd( 17.1115, 258.002, -22.2219, 0.44 ) }
    dend_19 { pt3dadd( 17.2893, 259.072, -22.2982, 0.44 ) }
    dend_19 { pt3dadd( 17.5846, 260.577, -22.3563, 0.44 ) }
    dend_19 { pt3dadd( 17.7737, 261.402, -22.347, 0.44 ) }
    dend_19 { pt3dadd( 17.9836, 262.28, -22.3175, 0.44 ) }
    dend_19 { pt3dadd( 18.2766, 263.563, -22.2505, 0.44 ) }
    dend_19 { pt3dadd( 18.5586, 264.769, -22.1619, 0.44 ) }
    dend_19 { pt3dadd( 19.018, 266.572, -22.016, 0.44 ) }
    dend_19 { pt3dadd( 19.5798, 268.671, -21.8374, 0.44 ) }
    dend_19 { pt3dadd( 20.2213, 270.943, -21.6987, 0.44 ) }
    dend_19 { pt3dadd( 20.8816, 273.212, -21.5811, 0.44 ) }
    dend_19 { pt3dadd( 21.3793, 274.914, -21.4775, 0.44 ) }
    dend_19 { pt3dadd( 21.9704, 276.939, -21.3397, 0.44 ) }
    dend_19 { pt3dadd( 22.5163, 278.747, -21.1982, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_19 { pt3dadd( 23.1193, 280.745, -20.9262, 0.44 ) }
    dend_19 { pt3dadd( 23.4727, 282.027, -20.6583, 0.44 ) }
    dend_19 { pt3dadd( 23.762, 283.261, -20.2513, 0.44 ) }
    dend_19 { pt3dadd( 23.9642, 284.418, -19.765, 0.44 ) }
    dend_19 { pt3dadd( 24.1729, 286.218, -18.8835, 0.44 ) }
    dend_19 { pt3dadd( 24.3159, 288.567, -17.533, 0.44 ) }
    dend_19 { pt3dadd( 24.3688, 290.76, -16.1436, 0.44 ) }
    dend_19 { pt3dadd( 24.3768, 292.78, -14.8314, 0.44 ) }
    dend_19 { pt3dadd( 24.3672, 293.836, -14.125, 0.44 ) }
    dend_19 { pt3dadd( 24.3316, 294.701, -13.4884, 0.44 ) }
    dend_19 { pt3dadd( 24.2191, 295.932, -12.4873, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 11/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -36.8282, 45.8125, 17.6063, 0.44 ) }
    dend_12 { pt3dadd( -37.6516, 46.8248, 19.276, 0.44 ) }
    dend_12 { pt3dadd( -38.0164, 47.2162, 20.1792, 0.44 ) }
    dend_12 { pt3dadd( -38.1875, 47.3843, 20.6665, 0.44 ) }
    dend_12 { pt3dadd( -38.422, 47.5465, 21.3017, 0.44 ) }
    dend_12 { pt3dadd( -38.7661, 47.6759, 22.0938, 0.44 ) }
    dend_12 { pt3dadd( -40.2634, 47.8429, 25.1428, 0.44 ) }
    dend_12 { pt3dadd( -40.4453, 47.7651, 25.5311, 0.44 ) }
    dend_12 { pt3dadd( -40.6264, 47.6463, 25.9635, 0.44 ) }
    dend_12 { pt3dadd( -40.994, 47.3283, 26.9345, 0.44 ) }
    dend_12 { pt3dadd( -41.3457, 46.9289, 27.9641, 0.44 ) }
    dend_12 { pt3dadd( -41.646, 46.5122, 28.7548, 0.44 ) }
    dend_12 { pt3dadd( -42.3529, 45.6175, 29.4474, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 24/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -36.8282, 45.8125, 17.6063, 0.44 ) }
    dend_11 { pt3dadd( -37.6423, 46.0856, 17.6857, 0.44 ) }
    dend_11 { pt3dadd( -38.5328, 46.3562, 17.7761, 0.44 ) }
    dend_11 { pt3dadd( -39.5251, 46.6604, 17.9819, 0.44 ) }
    dend_11 { pt3dadd( -40.3995, 46.9125, 18.2251, 0.44 ) }
    dend_11 { pt3dadd( -41.4302, 47.21, 18.5492, 0.44 ) }
    dend_11 { pt3dadd( -42.2145, 47.4529, 18.8085, 0.44 ) }
    dend_11 { pt3dadd( -42.8467, 47.6877, 19.0713, 0.44 ) }
    dend_11 { pt3dadd( -44.0421, 48.238, 19.6705, 0.44 ) }
    dend_11 { pt3dadd( -44.7615, 48.6454, 20.0916, 0.44 ) }
    dend_11 { pt3dadd( -45.2225, 48.9263, 20.3906, 0.44 ) }
    dend_11 { pt3dadd( -45.7864, 49.3083, 20.7756, 0.44 ) }
    dend_11 { pt3dadd( -46.6853, 50.0023, 21.3962, 0.44 ) }
    dend_11 { pt3dadd( -46.9516, 50.2341, 21.5913, 0.44 ) }
    dend_11 { pt3dadd( -47.4465, 50.6884, 21.9407, 0.44 ) }
    dend_11 { pt3dadd( -48.0729, 51.2948, 22.4099, 0.44 ) }
    dend_11 { pt3dadd( -48.5063, 51.6978, 22.725, 0.44 ) }
    dend_11 { pt3dadd( -49.1587, 52.2606, 23.1559, 0.44 ) }
    dend_11 { pt3dadd( -50.05, 52.9427, 23.6531, 0.44 ) }
    dend_11 { pt3dadd( -50.6004, 53.351, 23.9438, 0.44 ) }
    dend_11 { pt3dadd( -51.2336, 53.8015, 24.2549, 0.44 ) }
    dend_11 { pt3dadd( -51.9572, 54.2864, 24.6148, 0.44 ) }
    dend_11 { pt3dadd( -52.6848, 54.712, 24.9566, 0.44 ) }
    dend_11 { pt3dadd( -53.5578, 55.1832, 25.3652, 0.44 ) }
    dend_11 { pt3dadd( -53.8261, 55.3211, 25.4945, 0.44 ) }
    dend_11 { pt3dadd( -54.4054, 55.6262, 25.8001, 0.44 ) }
    dend_11 { pt3dadd( -55.7487, 56.379, 26.5538, 0.44 ) }
    dend_11 { pt3dadd( -56.422, 56.7983, 26.9435, 0.44 ) }
    dend_11 { pt3dadd( -57.2137, 57.3733, 27.4251, 0.44 ) }
    dend_11 { pt3dadd( -57.7831, 57.8219, 27.7675, 0.44 ) }
    dend_11 { pt3dadd( -58.4379, 58.3601, 28.135, 0.44 ) }
    dend_11 { pt3dadd( -58.901, 58.7539, 28.3662, 0.44 ) }
    dend_11 { pt3dadd( -59.5778, 59.3147, 28.6367, 0.44 ) }
    dend_11 { pt3dadd( -60.5313, 60.0631, 28.9736, 0.44 ) }
    dend_11 { pt3dadd( -61.3082, 60.6134, 29.2054, 0.44 ) }
    dend_11 { pt3dadd( -61.8727, 60.9785, 29.3681, 0.44 ) }
    dend_11 { pt3dadd( -62.5237, 61.3457, 29.5291, 0.44 ) }
    dend_11 { pt3dadd( -63.5069, 61.845, 29.7339, 0.44 ) }
    dend_11 { pt3dadd( -64.5686, 62.34, 29.8617, 0.44 ) }
    dend_11 { pt3dadd( -65.6143, 62.801, 29.9159, 0.44 ) }
    dend_11 { pt3dadd( -66.6041, 63.237, 29.9369, 0.44 ) }
    dend_11 { pt3dadd( -67.7567, 63.7544, 29.9622, 0.44 ) }
    dend_11 { pt3dadd( -68.8649, 64.2844, 29.9835, 0.44 ) }
    dend_11 { pt3dadd( -70.1796, 64.9534, 29.9601, 0.44 ) }
    dend_11 { pt3dadd( -71.1119, 65.4575, 29.9034, 0.44 ) }
    dend_11 { pt3dadd( -71.9723, 65.9571, 29.832, 0.44 ) }
    dend_11 { pt3dadd( -73.0759, 66.6444, 29.7366, 0.44 ) }
    dend_11 { pt3dadd( -73.8433, 67.1283, 29.6923, 0.44 ) }
    dend_11 { pt3dadd( -74.9491, 67.7621, 29.6734, 0.44 ) }
    dend_11 { pt3dadd( -75.8038, 68.1891, 29.6168, 0.44 ) }
    dend_11 { pt3dadd( -77.1029, 68.7717, 29.4415, 0.44 ) }
    dend_11 { pt3dadd( -77.807, 69.0615, 29.3171, 0.44 ) }
    dend_11 { pt3dadd( -78.7086, 69.4047, 29.1421, 0.44 ) }
    dend_11 { pt3dadd( -79.8752, 69.806, 28.8859, 0.44 ) }
    dend_11 { pt3dadd( -82.462, 70.6377, 28.3369, 0.44 ) }
    dend_11 { pt3dadd( -83.3306, 70.9165, 28.1382, 0.44 ) }
    dend_11 { pt3dadd( -84.0696, 71.1646, 27.9534, 0.44 ) }
    dend_11 { pt3dadd( -84.9273, 71.4835, 27.7398, 0.44 ) }
    dend_11 { pt3dadd( -86.7111, 72.2217, 27.3275, 0.44 ) }
    dend_11 { pt3dadd( -87.7311, 72.6655, 27.1574, 0.44 ) }
    dend_11 { pt3dadd( -88.3726, 72.9276, 27.1371, 0.44 ) }
    dend_11 { pt3dadd( -89.1708, 73.2071, 27.1468, 0.44 ) }
    dend_11 { pt3dadd( -89.9303, 73.4415, 27.1987, 0.44 ) }
    dend_11 { pt3dadd( -90.5475, 73.6113, 27.2891, 0.44 ) }
    dend_11 { pt3dadd( -91.4071, 73.8447, 27.5007, 0.44 ) }
    dend_11 { pt3dadd( -91.9387, 73.9889, 27.6317, 0.44 ) }
    dend_11 { pt3dadd( -92.946, 74.2594, 27.8128, 0.44 ) }
    dend_11 { pt3dadd( -93.5472, 74.4193, 27.8644, 0.44 ) }
    dend_11 { pt3dadd( -94.3661, 74.6477, 27.8809, 0.44 ) }
    dend_11 { pt3dadd( -95.4061, 74.9743, 27.7786, 0.44 ) }
    dend_11 { pt3dadd( -96.3927, 75.3459, 27.5815, 0.44 ) }
    dend_11 { pt3dadd( -97.8832, 76.034, 27.1517, 0.44 ) }
    dend_11 { pt3dadd( -98.8646, 76.584, 26.7906, 0.44 ) }
    dend_11 { pt3dadd( -99.5921, 77.0802, 26.4387, 0.44 ) }
    dend_11 { pt3dadd( -100.673, 77.9631, 25.8136, 0.44 ) }
    dend_11 { pt3dadd( -101.229, 78.4756, 25.4256, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_11 { pt3dadd( -101.78, 79.0593, 24.9948, 0.44 ) }
    dend_11 { pt3dadd( -102.33, 79.7357, 24.5486, 0.44 ) }
    dend_11 { pt3dadd( -103.451, 81.244, 23.638, 0.44 ) }
    dend_11 { pt3dadd( -103.86, 81.8221, 23.3095, 0.44 ) }
    dend_11 { pt3dadd( -104.518, 82.7552, 22.8518, 0.44 ) }
    dend_11 { pt3dadd( -104.926, 83.2956, 22.5927, 0.44 ) }
    dend_11 { pt3dadd( -105.234, 83.6912, 22.4298, 0.44 ) }
    dend_11 { pt3dadd( -105.557, 84.0963, 22.2508, 0.44 ) }
    dend_11 { pt3dadd( -105.97, 84.6239, 22.074, 0.44 ) }
    dend_11 { pt3dadd( -106.278, 85.0238, 21.9515, 0.44 ) }
    dend_11 { pt3dadd( -106.657, 85.5311, 21.8386, 0.44 ) }
    dend_11 { pt3dadd( -107.467, 86.558, 21.5601, 0.44 ) }
    dend_11 { pt3dadd( -108.46, 87.8353, 21.1243, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 13/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -70.5222, 64.9581, -2.91488, 0.44 ) }
    dend_9 { pt3dadd( -69.9623, 66.6466, -3.21597, 0.44 ) }
    dend_9 { pt3dadd( -69.6792, 67.5502, -3.52699, 0.44 ) }
    dend_9 { pt3dadd( -69.4851, 68.2088, -3.7912, 0.44 ) }
    dend_9 { pt3dadd( -69.3046, 69.0151, -4.17396, 0.44 ) }
    dend_9 { pt3dadd( -69.0195, 70.7222, -5.01553, 0.44 ) }
    dend_9 { pt3dadd( -68.865, 71.9134, -5.58987, 0.44 ) }
    dend_9 { pt3dadd( -68.6581, 74.232, -6.68752, 0.44 ) }
    dend_9 { pt3dadd( -68.5947, 74.9549, -7.0303, 0.44 ) }
    dend_9 { pt3dadd( -68.4465, 76.6471, -7.8214, 0.44 ) }
    dend_9 { pt3dadd( -68.3642, 77.7842, -8.33532, 0.44 ) }
    dend_9 { pt3dadd( -68.2858, 79.1267, -8.89701, 0.44 ) }
    dend_9 { pt3dadd( -68.2073, 80.3593, -9.40807, 0.44 ) }
    dend_9 { pt3dadd( -68.1245, 81.313, -9.7422, 0.44 ) }
    dend_9 { pt3dadd( -68.0766, 81.7703, -9.91039, 0.44 ) }
    dend_9 { pt3dadd( -68.0138, 82.2828, -10.092, 0.44 ) }
    dend_9 { pt3dadd( -67.9662, 82.8148, -10.2829, 0.44 ) }
    dend_9 { pt3dadd( -67.919, 85.0385, -11.0367, 0.44 ) }
    dend_9 { pt3dadd( -67.9612, 85.8138, -11.2707, 0.44 ) }
    dend_9 { pt3dadd( -68.0909, 87.2249, -11.6432, 0.44 ) }
    dend_9 { pt3dadd( -68.203, 88.4936, -11.9361, 0.44 ) }
    dend_9 { pt3dadd( -68.3024, 90.5511, -12.3405, 0.44 ) }
    dend_9 { pt3dadd( -68.3152, 91.7811, -12.571, 0.44 ) }
    dend_9 { pt3dadd( -68.2951, 93.0032, -12.7579, 0.44 ) }
    dend_9 { pt3dadd( -68.2524, 93.8533, -13.0026, 0.44 ) }
    dend_9 { pt3dadd( -68.1682, 94.5339, -13.2938, 0.44 ) }
    dend_9 { pt3dadd( -67.9222, 95.5998, -14.1839, 0.44 ) }
    dend_9 { pt3dadd( -67.6462, 96.5141, -15.4518, 0.44 ) }
    dend_9 { pt3dadd( -67.4672, 97.2234, -16.6934, 0.44 ) }
    dend_9 { pt3dadd( -67.2332, 98.5484, -19.2331, 0.44 ) }
    dend_9 { pt3dadd( -67.2086, 99.0183, -20.18, 0.44 ) }
    dend_9 { pt3dadd( -67.2834, 101.042, -24.4669, 0.44 ) }
    dend_9 { pt3dadd( -67.482, 102.629, -28.0344, 0.44 ) }
    dend_9 { pt3dadd( -67.6857, 103.935, -30.9665, 0.44 ) }
    dend_9 { pt3dadd( -67.7518, 104.326, -31.8234, 0.44 ) }
    dend_9 { pt3dadd( -68.0525, 105.794, -34.8123, 0.44 ) }
    dend_9 { pt3dadd( -68.3971, 107.375, -37.8775, 0.44 ) }
    dend_9 { pt3dadd( -68.8841, 110.147, -42.6812, 0.44 ) }
    dend_9 { pt3dadd( -68.9304, 110.737, -43.6695, 0.44 ) }
    dend_9 { pt3dadd( -68.8898, 111.355, -44.6614, 0.44 ) }
    dend_9 { pt3dadd( -68.6803, 112.513, -46.4837, 0.44 ) }
    dend_9 { pt3dadd( -68.3316, 113.76, -48.2596, 0.44 ) }
    dend_9 { pt3dadd( -67.9982, 114.791, -49.4897, 0.44 ) }
    dend_9 { pt3dadd( -67.1287, 117.258, -51.9828, 0.44 ) }
    dend_9 { pt3dadd( -66.5997, 118.997, -53.6349, 0.44 ) }
    dend_9 { pt3dadd( -65.99, 121.322, -55.639, 0.44 ) }
    dend_9 { pt3dadd( -65.7043, 122.682, -56.6652, 0.44 ) }
    dend_9 { pt3dadd( -65.378, 124.915, -58.1269, 0.44 ) }
    dend_9 { pt3dadd( -65.2827, 126.212, -58.8752, 0.44 ) }
    dend_9 { pt3dadd( -65.2657, 129.105, -60.2491, 0.44 ) }
    dend_9 { pt3dadd( -65.3038, 130.23, -60.7354, 0.44 ) }
    dend_9 { pt3dadd( -65.4728, 133.115, -61.8632, 0.44 ) }
    dend_9 { pt3dadd( -65.5544, 134.162, -62.3016, 0.44 ) }
    dend_9 { pt3dadd( -65.6616, 135.381, -62.8461, 0.44 ) }
    dend_9 { pt3dadd( -65.7511, 136.707, -63.416, 0.44 ) }
    dend_9 { pt3dadd( -65.7816, 137.961, -63.8043, 0.44 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 69/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -70.5222, 64.9581, -2.91488, 0.52 ) }
    dend_4 { pt3dadd( -71.3988, 65.3771, -3.12813, 0.52 ) }
    dend_4 { pt3dadd( -72.9884, 66.0542, -3.57389, 0.52 ) }
    dend_4 { pt3dadd( -73.5177, 66.2293, -3.71976, 0.52 ) }
    dend_4 { pt3dadd( -74.6737, 66.52, -4.01074, 0.52 ) }
    dend_4 { pt3dadd( -75.5666, 66.7296, -4.26987, 0.52 ) }
    dend_4 { pt3dadd( -76.3156, 66.915, -4.49407, 0.52 ) }
    dend_4 { pt3dadd( -77.4456, 67.221, -4.89884, 0.52 ) }
    dend_4 { pt3dadd( -78.5603, 67.5979, -5.32929, 0.52 ) }
    dend_4 { pt3dadd( -79.61, 68.028, -5.79475, 0.52 ) }
    dend_4 { pt3dadd( -80.854, 68.6307, -6.41388, 0.52 ) }
    dend_4 { pt3dadd( -81.7558, 69.1225, -6.86987, 0.52 ) }
    dend_4 { pt3dadd( -82.9786, 69.9084, -7.45818, 0.52 ) }
    dend_4 { pt3dadd( -83.8125, 70.5359, -7.82429, 0.52 ) }
    dend_4 { pt3dadd( -84.5652, 71.1594, -8.1081, 0.52 ) }
    dend_4 { pt3dadd( -85.4675, 71.9019, -8.33479, 0.52 ) }
    dend_4 { pt3dadd( -86.283, 72.4991, -8.4036, 0.52 ) }
    dend_4 { pt3dadd( -87.3101, 73.1745, -8.38667, 0.52 ) }
    dend_4 { pt3dadd( -87.9589, 73.5676, -8.30934, 0.52 ) }
    dend_4 { pt3dadd( -88.8762, 74.1372, -8.15131, 0.52 ) }
    dend_4 { pt3dadd( -89.7645, 74.7341, -7.93283, 0.52 ) }
    dend_4 { pt3dadd( -90.7446, 75.4672, -7.63972, 0.52 ) }
    dend_4 { pt3dadd( -91.1456, 75.8159, -7.51385, 0.52 ) }
    dend_4 { pt3dadd( -91.7636, 76.4515, -7.34354, 0.52 ) }
    dend_4 { pt3dadd( -92.4355, 77.272, -7.20845, 0.52 ) }
    dend_4 { pt3dadd( -92.9817, 78.0556, -7.16562, 0.52 ) }
    dend_4 { pt3dadd( -93.4364, 78.829, -7.16539, 0.52 ) }
    dend_4 { pt3dadd( -93.8863, 79.6939, -7.18483, 0.52 ) }
    dend_4 { pt3dadd( -94.388, 80.7232, -7.23003, 0.52 ) }
    dend_4 { pt3dadd( -94.889, 81.8723, -7.3026, 0.52 ) }
    dend_4 { pt3dadd( -95.3085, 82.8864, -7.42379, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_4 { pt3dadd( -95.5377, 83.4676, -7.54089, 0.52 ) }
    dend_4 { pt3dadd( -95.8399, 84.2015, -7.71317, 0.52 ) }
    dend_4 { pt3dadd( -96.2603, 85.1257, -7.98302, 0.52 ) }
    dend_4 { pt3dadd( -96.5633, 85.7276, -8.17532, 0.52 ) }
    dend_4 { pt3dadd( -97.1985, 86.8818, -8.58241, 0.52 ) }
    dend_4 { pt3dadd( -98.0001, 88.205, -9.06123, 0.52 ) }
    dend_4 { pt3dadd( -99.0902, 89.791, -9.68569, 0.52 ) }
    dend_4 { pt3dadd( -99.9993, 91.0305, -10.171, 0.52 ) }
    dend_4 { pt3dadd( -100.551, 91.7487, -10.4319, 0.52 ) }
    dend_4 { pt3dadd( -101.062, 92.3729, -10.6297, 0.52 ) }
    dend_4 { pt3dadd( -101.844, 93.2733, -10.8454, 0.52 ) }
    dend_4 { pt3dadd( -102.706, 94.2021, -11.0113, 0.52 ) }
    dend_4 { pt3dadd( -103.916, 95.4376, -11.1888, 0.52 ) }
    dend_4 { pt3dadd( -104.878, 96.3606, -11.2743, 0.52 ) }
    dend_4 { pt3dadd( -105.864, 97.2456, -11.3393, 0.52 ) }
    dend_4 { pt3dadd( -107.331, 98.5097, -11.3991, 0.52 ) }
    dend_4 { pt3dadd( -108.149, 99.1824, -11.409, 0.52 ) }
    dend_4 { pt3dadd( -108.954, 99.7946, -11.3952, 0.52 ) }
    dend_4 { pt3dadd( -109.849, 100.399, -11.382, 0.52 ) }
    dend_4 { pt3dadd( -111.016, 101.16, -11.3198, 0.52 ) }
    dend_4 { pt3dadd( -112.354, 102.054, -11.2032, 0.52 ) }
    dend_4 { pt3dadd( -112.926, 102.444, -11.1383, 0.52 ) }
    dend_4 { pt3dadd( -114.103, 103.273, -10.9838, 0.52 ) }
    dend_4 { pt3dadd( -115.352, 104.179, -10.8033, 0.52 ) }
    dend_4 { pt3dadd( -116.728, 105.197, -10.5915, 0.52 ) }
    dend_4 { pt3dadd( -118.07, 106.181, -10.3784, 0.52 ) }
    dend_4 { pt3dadd( -118.92, 106.792, -10.2485, 0.52 ) }
    dend_4 { pt3dadd( -119.588, 107.263, -10.1601, 0.52 ) }
    dend_4 { pt3dadd( -120.331, 107.778, -10.0603, 0.52 ) }
    dend_4 { pt3dadd( -120.988, 108.207, -10.0148, 0.52 ) }
    dend_4 { pt3dadd( -121.613, 108.586, -10.0028, 0.52 ) }
    dend_4 { pt3dadd( -122.71, 109.21, -9.98209, 0.52 ) }
    dend_4 { pt3dadd( -124.106, 109.963, -9.95681, 0.52 ) }
    dend_4 { pt3dadd( -125.311, 110.582, -9.93631, 0.52 ) }
    dend_4 { pt3dadd( -126.63, 111.283, -9.9149, 0.52 ) }
    // Section: dend_88, id: dend_88, parent: dend_80 (entry count 35/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 38.5365, -44.9038, 7.62943, 0.37 ) }
    dend_88 { pt3dadd( 38.1916, -43.4251, 6.95992, 0.37 ) }
    dend_88 { pt3dadd( 38.0361, -42.7582, 6.65801, 0.37 ) }
    dend_88 { pt3dadd( 37.8331, -41.8876, 6.26386, 0.37 ) }
    dend_88 { pt3dadd( 37.568, -40.7507, 5.74915, 0.37 ) }
    dend_88 { pt3dadd( 37.4233, -40.1305, 5.46834, 0.37 ) }
    dend_88 { pt3dadd( 37.1293, -38.8695, 4.89745, 0.37 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 42/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 38.5365, -44.9038, 7.62943, 0.44 ) }
    dend_81 { pt3dadd( 39.624, -45.2903, 7.63958, 0.44 ) }
    dend_81 { pt3dadd( 40.5176, -45.6385, 7.64511, 0.44 ) }
    dend_81 { pt3dadd( 41.4939, -46.0871, 7.64904, 0.44 ) }
    dend_81 { pt3dadd( 42.5827, -46.6381, 7.71513, 0.44 ) }
    dend_81 { pt3dadd( 44.1915, -47.5117, 7.89942, 0.44 ) }
    dend_81 { pt3dadd( 45.3081, -48.123, 8.06139, 0.44 ) }
    dend_81 { pt3dadd( 45.9459, -48.4854, 8.17654, 0.44 ) }
    dend_81 { pt3dadd( 46.9537, -49.0566, 8.415, 0.44 ) }
    dend_81 { pt3dadd( 48.1371, -49.7515, 8.75377, 0.44 ) }
    dend_81 { pt3dadd( 49.1018, -50.3618, 9.16216, 0.44 ) }
    dend_81 { pt3dadd( 49.8544, -50.915, 9.57838, 0.44 ) }
    dend_81 { pt3dadd( 50.8218, -51.7204, 10.1646, 0.44 ) }
    dend_81 { pt3dadd( 51.5136, -52.3307, 10.5594, 0.44 ) }
    dend_81 { pt3dadd( 52.2806, -53.0163, 10.897, 0.44 ) }
    dend_81 { pt3dadd( 53.6572, -54.2581, 11.493, 0.44 ) }
    dend_81 { pt3dadd( 54.7331, -55.2142, 11.9685, 0.44 ) }
    dend_81 { pt3dadd( 55.8215, -56.1523, 12.4386, 0.44 ) }
    dend_81 { pt3dadd( 57.0804, -57.1854, 12.9364, 0.44 ) }
    dend_81 { pt3dadd( 58.3166, -58.1359, 13.3485, 0.44 ) }
    dend_81 { pt3dadd( 60.6166, -59.8706, 14.0476, 0.44 ) }
    dend_81 { pt3dadd( 61.2263, -60.3285, 14.2121, 0.44 ) }
    dend_81 { pt3dadd( 62.0767, -60.9568, 14.4804, 0.44 ) }
    dend_81 { pt3dadd( 62.7895, -61.4771, 14.7298, 0.44 ) }
    dend_81 { pt3dadd( 63.8317, -62.2263, 15.1357, 0.44 ) }
    dend_81 { pt3dadd( 64.8661, -62.9074, 15.5116, 0.44 ) }
    dend_81 { pt3dadd( 65.8148, -63.4465, 15.7163, 0.44 ) }
    dend_81 { pt3dadd( 66.5781, -63.8107, 15.8767, 0.44 ) }
    dend_81 { pt3dadd( 67.3431, -64.0974, 16.0256, 0.44 ) }
    dend_81 { pt3dadd( 68.5778, -64.5244, 16.2332, 0.44 ) }
    dend_81 { pt3dadd( 69.9978, -65.0076, 16.4324, 0.44 ) }
    dend_81 { pt3dadd( 70.9544, -65.3887, 16.5333, 0.44 ) }
    dend_81 { pt3dadd( 71.6461, -65.7771, 16.582, 0.44 ) }
    dend_81 { pt3dadd( 72.1774, -66.1604, 16.6091, 0.44 ) }
    dend_81 { pt3dadd( 73.4994, -67.2829, 16.6371, 0.44 ) }
    dend_81 { pt3dadd( 74.0086, -67.7816, 16.6298, 0.44 ) }
    dend_81 { pt3dadd( 74.6788, -68.5326, 16.6202, 0.44 ) }
    dend_81 { pt3dadd( 75.4642, -69.4731, 16.6089, 0.44 ) }
    dend_81 { pt3dadd( 76.1589, -70.3398, 16.6016, 0.37 ) }
    dend_81 { pt3dadd( 77.2298, -71.7946, 16.5892, 0.37 ) }
    dend_81 { pt3dadd( 77.8838, -72.7117, 16.5811, 0.37 ) }
    dend_81 { pt3dadd( 78.5276, -73.6179, 16.5525, 0.37 ) }
    dend_81 { pt3dadd( 79.6281, -75.1389, 16.4781, 0.37 ) }
    dend_81 { pt3dadd( 80.8165, -76.7385, 16.3635, 0.37 ) }
    dend_81 { pt3dadd( 82.2537, -78.771, 16.2055, 0.37 ) }
    dend_81 { pt3dadd( 82.8236, -79.5906, 16.133, 0.37 ) }
    dend_81 { pt3dadd( 83.6001, -80.653, 16.0228, 0.37 ) }
    dend_81 { pt3dadd( 84.4306, -81.7006, 15.8887, 0.37 ) }
    dend_81 { pt3dadd( 85.2419, -82.618, 15.7256, 0.37 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 91/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -40.8791, -151.0, 14.3974, 0.52 ) }
    dend_70 { pt3dadd( -41.5552, -151.946, 14.4179, 0.52 ) }
    dend_70 { pt3dadd( -42.0962, -152.771, 14.4447, 0.52 ) }
    dend_70 { pt3dadd( -42.4311, -153.294, 14.465, 0.52 ) }
    dend_70 { pt3dadd( -42.6374, -153.604, 14.4793, 0.52 ) }
    dend_70 { pt3dadd( -42.9589, -154.082, 14.5038, 0.52 ) }
    dend_70 { pt3dadd( -43.4193, -154.815, 14.5746, 0.52 ) }
    dend_70 { pt3dadd( -43.9219, -155.681, 14.7013, 0.52 ) }
    dend_70 { pt3dadd( -44.1028, -156.0, 14.7548, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_70 { pt3dadd( -44.4033, -156.529, 14.8513, 0.52 ) }
    dend_70 { pt3dadd( -44.7006, -157.068, 14.9518, 0.52 ) }
    dend_70 { pt3dadd( -45.3496, -158.328, 15.1825, 0.52 ) }
    dend_70 { pt3dadd( -45.6951, -159.116, 15.3164, 0.52 ) }
    dend_70 { pt3dadd( -46.0376, -160.009, 15.4519, 0.52 ) }
    dend_70 { pt3dadd( -46.2991, -160.758, 15.5223, 0.52 ) }
    dend_70 { pt3dadd( -46.614, -161.713, 15.5619, 0.52 ) }
    dend_70 { pt3dadd( -46.8691, -162.469, 15.5528, 0.52 ) }
    dend_70 { pt3dadd( -47.1621, -163.263, 15.4923, 0.52 ) }
    dend_70 { pt3dadd( -47.4963, -164.128, 15.4119, 0.52 ) }
    dend_70 { pt3dadd( -47.8624, -164.997, 15.363, 0.52 ) }
    dend_70 { pt3dadd( -48.1464, -165.552, 15.3753, 0.52 ) }
    dend_70 { pt3dadd( -48.4158, -165.995, 15.4214, 0.52 ) }
    dend_70 { pt3dadd( -48.9045, -166.723, 15.5424, 0.52 ) }
    dend_70 { pt3dadd( -49.4861, -167.54, 15.7011, 0.52 ) }
    dend_70 { pt3dadd( -50.1748, -168.527, 15.8585, 0.52 ) }
    dend_70 { pt3dadd( -50.7993, -169.495, 15.9852, 0.52 ) }
    dend_70 { pt3dadd( -51.4275, -170.601, 16.0591, 0.52 ) }
    dend_70 { pt3dadd( -51.9961, -171.723, 16.0741, 0.52 ) }
    dend_70 { pt3dadd( -52.2052, -172.193, 16.0561, 0.52 ) }
    dend_70 { pt3dadd( -52.7133, -173.452, 15.9452, 0.52 ) }
    dend_70 { pt3dadd( -53.0468, -174.417, 15.8376, 0.52 ) }
    dend_70 { pt3dadd( -53.4566, -175.722, 15.706, 0.52 ) }
    dend_70 { pt3dadd( -53.6889, -176.439, 15.6645, 0.52 ) }
    dend_70 { pt3dadd( -54.0118, -177.335, 15.6187, 0.52 ) }
    dend_70 { pt3dadd( -54.2345, -177.855, 15.5799, 0.52 ) }
    dend_70 { pt3dadd( -54.9412, -179.268, 15.4433, 0.52 ) }
    dend_70 { pt3dadd( -55.3348, -179.975, 15.3242, 0.52 ) }
    dend_70 { pt3dadd( -55.793, -180.782, 15.1342, 0.52 ) }
    dend_70 { pt3dadd( -56.3256, -181.798, 14.8008, 0.52 ) }
    dend_70 { pt3dadd( -56.9093, -182.988, 14.3206, 0.52 ) }
    dend_70 { pt3dadd( -57.2854, -183.848, 13.9404, 0.52 ) }
    dend_70 { pt3dadd( -57.5728, -184.596, 13.5993, 0.52 ) }
    dend_70 { pt3dadd( -57.7185, -185.062, 13.4171, 0.52 ) }
    dend_70 { pt3dadd( -58.02, -186.158, 13.0968, 0.52 ) }
    dend_70 { pt3dadd( -58.1413, -186.652, 12.9973, 0.52 ) }
    dend_70 { pt3dadd( -58.3705, -187.577, 12.8669, 0.52 ) }
    dend_70 { pt3dadd( -58.6941, -188.667, 12.7106, 0.52 ) }
    dend_70 { pt3dadd( -58.9263, -189.31, 12.6312, 0.52 ) }
    dend_70 { pt3dadd( -59.1738, -189.887, 12.5933, 0.52 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 40/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -40.8791, -151.0, 14.3974, 0.52 ) }
    dend_69 { pt3dadd( -40.5302, -151.747, 14.3038, 0.52 ) }
    dend_69 { pt3dadd( -40.2307, -152.389, 14.2235, 0.52 ) }
    dend_69 { pt3dadd( -39.9495, -152.991, 14.1481, 0.52 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 44/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 9.64758, -125.073, 6.91905, 0.44 ) }
    dend_66 { pt3dadd( 10.431, -127.024, 6.86325, 0.44 ) }
    dend_66 { pt3dadd( 10.7074, -127.951, 6.89981, 0.44 ) }
    dend_66 { pt3dadd( 10.931, -128.879, 6.97067, 0.44 ) }
    dend_66 { pt3dadd( 11.1416, -129.885, 7.06786, 0.44 ) }
    dend_66 { pt3dadd( 11.3803, -131.355, 7.21284, 0.44 ) }
    dend_66 { pt3dadd( 11.4974, -132.385, 7.30781, 0.44 ) }
    dend_66 { pt3dadd( 11.5436, -133.832, 7.45476, 0.44 ) }
    dend_66 { pt3dadd( 11.5398, -134.347, 7.51372, 0.44 ) }
    dend_66 { pt3dadd( 11.4943, -135.438, 7.61833, 0.44 ) }
    dend_66 { pt3dadd( 11.4564, -136.723, 7.71281, 0.44 ) }
    dend_66 { pt3dadd( 11.4717, -137.743, 7.79429, 0.44 ) }
    dend_66 { pt3dadd( 11.5211, -138.878, 7.87506, 0.44 ) }
    dend_66 { pt3dadd( 11.5699, -139.993, 7.93059, 0.44 ) }
    dend_66 { pt3dadd( 11.6053, -140.955, 7.97761, 0.44 ) }
    dend_66 { pt3dadd( 11.6777, -143.522, 8.10478, 0.44 ) }
    dend_66 { pt3dadd( 11.7271, -145.111, 8.14686, 0.44 ) }
    dend_66 { pt3dadd( 11.7585, -147.124, 8.13311, 0.44 ) }
    dend_66 { pt3dadd( 11.7369, -149.11, 8.05479, 0.44 ) }
    dend_66 { pt3dadd( 11.7046, -150.155, 7.98362, 0.44 ) }
    dend_66 { pt3dadd( 11.6618, -151.038, 7.89863, 0.44 ) }
    dend_66 { pt3dadd( 11.5323, -152.423, 7.71126, 0.44 ) }
    dend_66 { pt3dadd( 11.3043, -154.197, 7.4111, 0.44 ) }
    dend_66 { pt3dadd( 11.1042, -155.575, 7.16442, 0.44 ) }
    dend_66 { pt3dadd( 10.9118, -156.636, 6.97019, 0.44 ) }
    dend_66 { pt3dadd( 10.6456, -157.77, 6.76801, 0.44 ) }
    dend_66 { pt3dadd( 10.3541, -158.76, 6.60975, 0.44 ) }
    dend_66 { pt3dadd( 10.083, -159.437, 6.52459, 0.44 ) }
    dend_66 { pt3dadd( 9.85327, -159.873, 6.43454, 0.44 ) }
    dend_66 { pt3dadd( 9.45409, -160.486, 6.27334, 0.44 ) }
    dend_66 { pt3dadd( 9.18829, -160.83, 6.16009, 0.44 ) }
    dend_66 { pt3dadd( 8.77796, -161.288, 5.96981, 0.44 ) }
    dend_66 { pt3dadd( 8.3138, -161.81, 5.71515, 0.44 ) }
    dend_66 { pt3dadd( 7.49228, -162.807, 5.16578, 0.44 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 78/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 9.64758, -125.073, 6.91905, 0.44 ) }
    dend_65 { pt3dadd( 8.66264, -124.759, 7.90471, 0.44 ) }
    dend_65 { pt3dadd( 8.05021, -124.565, 8.5176, 0.44 ) }
    dend_65 { pt3dadd( 6.94218, -124.212, 9.62645, 0.44 ) }
    dend_65 { pt3dadd( 5.47217, -123.744, 11.0976, 0.44 ) }
    // Section: dend_45, id: dend_45, parent: dend_33 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -22.6446, -296.541, -32.4344, 0.44 ) }
    dend_45 { pt3dadd( -23.4656, -294.731, -32.3288, 0.44 ) }
    dend_45 { pt3dadd( -23.8197, -293.879, -32.2194, 0.44 ) }
    dend_45 { pt3dadd( -24.2467, -292.79, -32.0733, 0.44 ) }
    dend_45 { pt3dadd( -24.499, -292.099, -31.9278, 0.44 ) }
    dend_45 { pt3dadd( -24.7505, -291.342, -31.7436, 0.44 ) }
    dend_45 { pt3dadd( -25.5003, -288.954, -30.9891, 0.44 ) }
    dend_45 { pt3dadd( -25.9943, -287.202, -30.3141, 0.44 ) }
    dend_45 { pt3dadd( -26.4077, -285.699, -29.7062, 0.44 ) }
    dend_45 { pt3dadd( -27.2041, -282.908, -28.5793, 0.44 ) }
    dend_45 { pt3dadd( -27.595, -281.556, -28.0523, 0.44 ) }
    dend_45 { pt3dadd( -28.3342, -278.862, -27.0869, 0.44 ) }
    dend_45 { pt3dadd( -28.6101, -277.766, -26.7468, 0.44 ) }
    dend_45 { pt3dadd( -28.8467, -276.709, -26.4566, 0.44 ) }
    dend_45 { pt3dadd( -29.1207, -275.231, -26.109, 0.44 ) }
    dend_45 { pt3dadd( -29.2697, -274.262, -25.9556, 0.44 ) }
    dend_45 { pt3dadd( -29.5004, -272.699, -25.7266, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_45 { pt3dadd( -29.6442, -271.547, -25.5813, 0.44 ) }
    dend_45 { pt3dadd( -29.834, -269.672, -25.2982, 0.44 ) }
    dend_45 { pt3dadd( -30.0611, -267.061, -24.8923, 0.44 ) }
    dend_45 { pt3dadd( -30.24, -265.131, -24.6037, 0.44 ) }
    dend_45 { pt3dadd( -30.3704, -263.754, -24.3877, 0.44 ) }
    dend_45 { pt3dadd( -30.4994, -262.605, -24.203, 0.44 ) }
    dend_45 { pt3dadd( -30.7127, -260.932, -23.9423, 0.44 ) }
    dend_45 { pt3dadd( -31.1366, -258.089, -23.5676, 0.44 ) }
    dend_45 { pt3dadd( -31.3849, -256.468, -23.48, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 9/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -22.6446, -296.541, -32.4344, 0.52 ) }
    dend_34 { pt3dadd( -23.2938, -298.121, -32.2658, 0.52 ) }
    dend_34 { pt3dadd( -23.8609, -299.501, -32.1185, 0.52 ) }
    dend_34 { pt3dadd( -24.0495, -299.96, -32.0695, 0.52 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 13/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 27.7775, 173.402, -57.5322, 0.52 ) }
    dend_26 { pt3dadd( 29.3661, 175.815, -54.4399, 0.52 ) }
    dend_26 { pt3dadd( 30.4631, 177.309, -52.0997, 0.52 ) }
    dend_26 { pt3dadd( 31.1608, 178.155, -50.5221, 0.52 ) }
    dend_26 { pt3dadd( 31.7078, 178.658, -49.3274, 0.52 ) }
    dend_26 { pt3dadd( 34.2237, 180.104, -44.0157, 0.52 ) }
    dend_26 { pt3dadd( 34.4342, 180.085, -43.5299, 0.52 ) }
    dend_26 { pt3dadd( 34.7946, 179.462, -42.3622, 0.52 ) }
    dend_26 { pt3dadd( 34.9505, 179.06, -41.7293, 0.52 ) }
    dend_26 { pt3dadd( 35.2456, 178.066, -40.4118, 0.52 ) }
    dend_26 { pt3dadd( 35.4748, 177.222, -39.5108, 0.52 ) }
    dend_26 { pt3dadd( 36.0279, 175.368, -37.9064, 0.52 ) }
    dend_26 { pt3dadd( 36.5854, 173.778, -36.7542, 0.52 ) }
    dend_26 { pt3dadd( 37.4441, 171.761, -35.5989, 0.52 ) }
    dend_26 { pt3dadd( 38.4554, 169.774, -34.8058, 0.52 ) }
    dend_26 { pt3dadd( 40.0944, 167.169, -34.1576, 0.52 ) }
    dend_26 { pt3dadd( 41.4991, 165.433, -34.2758, 0.52 ) }
    dend_26 { pt3dadd( 46.5181, 160.407, -36.2344, 0.52 ) }
    dend_26 { pt3dadd( 47.7118, 159.412, -36.9115, 0.52 ) }
    dend_26 { pt3dadd( 48.7509, 158.656, -37.6382, 0.52 ) }
    dend_26 { pt3dadd( 50.5683, 157.532, -39.1539, 0.52 ) }
    dend_26 { pt3dadd( 53.2924, 156.205, -41.7446, 0.52 ) }
    dend_26 { pt3dadd( 53.5983, 156.086, -42.0345, 0.52 ) }
    dend_26 { pt3dadd( 54.1729, 155.921, -42.2109, 0.52 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 37/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 27.7775, 173.402, -57.5322, 0.52 ) }
    dend_25 { pt3dadd( 27.838, 175.588, -59.1259, 0.52 ) }
    dend_25 { pt3dadd( 27.946, 177.173, -60.3002, 0.52 ) }
    dend_25 { pt3dadd( 28.0578, 178.048, -60.9611, 0.52 ) }
    dend_25 { pt3dadd( 28.3174, 179.236, -61.9328, 0.52 ) }
    dend_25 { pt3dadd( 28.8193, 180.86, -63.369, 0.52 ) }
    dend_25 { pt3dadd( 29.2453, 181.941, -64.4135, 0.52 ) }
    dend_25 { pt3dadd( 30.307, 183.738, -66.2855, 0.52 ) }
    dend_25 { pt3dadd( 31.0081, 184.545, -67.3314, 0.52 ) }
    dend_25 { pt3dadd( 32.0716, 185.358, -68.8256, 0.52 ) }
    dend_25 { pt3dadd( 32.8866, 185.728, -69.9451, 0.52 ) }
    dend_25 { pt3dadd( 33.8218, 185.989, -71.1738, 0.52 ) }
    dend_25 { pt3dadd( 34.5668, 186.093, -72.1393, 0.52 ) }
    dend_25 { pt3dadd( 36.0984, 186.101, -74.0282, 0.52 ) }
    dend_25 { pt3dadd( 37.2513, 186.012, -75.5324, 0.52 ) }
    dend_25 { pt3dadd( 38.1766, 185.887, -76.839, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 53/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 24.2191, 295.932, -12.4873, 0.44 ) }
    dend_21 { pt3dadd( 24.0096, 297.292, -11.949, 0.44 ) }
    dend_21 { pt3dadd( 23.7853, 298.861, -11.3717, 0.44 ) }
    dend_21 { pt3dadd( 23.5729, 300.086, -10.9349, 0.44 ) }
    dend_21 { pt3dadd( 23.3662, 301.106, -10.5425, 0.44 ) }
    dend_21 { pt3dadd( 23.1537, 302.154, -10.1391, 0.44 ) }
    dend_21 { pt3dadd( 22.9827, 302.997, -9.81455, 0.44 ) }
    dend_21 { pt3dadd( 22.7363, 304.054, -9.40281, 0.44 ) }
    dend_21 { pt3dadd( 22.3173, 305.653, -8.87954, 0.44 ) }
    dend_21 { pt3dadd( 22.0259, 306.768, -8.51672, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 63/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 24.2191, 295.932, -12.4873, 0.44 ) }
    dend_20 { pt3dadd( 22.9532, 296.944, -13.2577, 0.44 ) }
    dend_20 { pt3dadd( 22.0193, 297.69, -13.8261, 0.44 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 66/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -126.63, 111.283, -9.9149, 0.52 ) }
    dend_6 { pt3dadd( -127.291, 112.574, -10.4739, 0.52 ) }
    dend_6 { pt3dadd( -127.728, 113.398, -10.7862, 0.52 ) }
    dend_6 { pt3dadd( -128.55, 114.815, -11.2764, 0.52 ) }
    dend_6 { pt3dadd( -129.459, 116.285, -11.7405, 0.52 ) }
    dend_6 { pt3dadd( -129.88, 116.944, -11.923, 0.52 ) }
    dend_6 { pt3dadd( -130.383, 117.706, -12.1147, 0.52 ) }
    dend_6 { pt3dadd( -130.89, 118.393, -12.3215, 0.52 ) }
    dend_6 { pt3dadd( -131.439, 119.092, -12.5339, 0.52 ) }
    dend_6 { pt3dadd( -131.862, 119.608, -12.657, 0.52 ) }
    dend_6 { pt3dadd( -132.442, 120.329, -12.8058, 0.52 ) }
    dend_6 { pt3dadd( -132.712, 120.699, -12.8978, 0.52 ) }
    dend_6 { pt3dadd( -133.808, 122.325, -13.3133, 0.52 ) }
    dend_6 { pt3dadd( -134.225, 122.978, -13.4722, 0.52 ) }
    dend_6 { pt3dadd( -134.938, 124.134, -13.7276, 0.52 ) }
    dend_6 { pt3dadd( -135.764, 125.488, -13.9852, 0.52 ) }
    dend_6 { pt3dadd( -136.863, 127.249, -14.267, 0.52 ) }
    dend_6 { pt3dadd( -137.475, 128.189, -14.3757, 0.52 ) }
    dend_6 { pt3dadd( -138.036, 129.01, -14.4183, 0.52 ) }
    dend_6 { pt3dadd( -138.64, 129.833, -14.4599, 0.52 ) }
    dend_6 { pt3dadd( -139.323, 130.669, -14.4979, 0.52 ) }
    dend_6 { pt3dadd( -139.87, 131.269, -14.5078, 0.52 ) }
    dend_6 { pt3dadd( -140.666, 132.069, -14.5162, 0.52 ) }
    dend_6 { pt3dadd( -141.209, 132.623, -14.5885, 0.52 ) }
    dend_6 { pt3dadd( -141.852, 133.29, -14.7365, 0.52 ) }
    dend_6 { pt3dadd( -142.57, 134.044, -14.9526, 0.52 ) }
    dend_6 { pt3dadd( -143.485, 135.012, -15.2698, 0.52 ) }
    dend_6 { pt3dadd( -144.392, 136.015, -15.601, 0.52 ) }
    dend_6 { pt3dadd( -145.424, 137.2, -15.9832, 0.52 ) }
    dend_6 { pt3dadd( -146.155, 138.048, -16.2306, 0.52 ) }
    dend_6 { pt3dadd( -146.748, 138.752, -16.4028, 0.52 ) }
    dend_6 { pt3dadd( -147.33, 139.46, -16.5608, 0.52 ) }
    dend_6 { pt3dadd( -147.982, 140.26, -16.7024, 0.52 ) }
    dend_6 { pt3dadd( -148.507, 140.946, -16.7671, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_6 { pt3dadd( -149.436, 142.206, -16.8223, 0.52 ) }
    dend_6 { pt3dadd( -149.963, 142.981, -16.8851, 0.52 ) }
    dend_6 { pt3dadd( -151.144, 144.801, -17.0811, 0.52 ) }
    dend_6 { pt3dadd( -151.869, 145.927, -17.2267, 0.52 ) }
    dend_6 { pt3dadd( -152.691, 147.17, -17.4451, 0.52 ) }
    dend_6 { pt3dadd( -153.131, 147.805, -17.5789, 0.52 ) }
    dend_6 { pt3dadd( -154.021, 149.065, -17.9253, 0.52 ) }
    dend_6 { pt3dadd( -154.542, 149.747, -18.1468, 0.52 ) }
    dend_6 { pt3dadd( -155.264, 150.603, -18.4552, 0.52 ) }
    dend_6 { pt3dadd( -156.2, 151.633, -18.9109, 0.52 ) }
    dend_6 { pt3dadd( -156.992, 152.447, -19.3132, 0.52 ) }
    dend_6 { pt3dadd( -158.002, 153.473, -19.8655, 0.52 ) }
    dend_6 { pt3dadd( -158.775, 154.242, -20.3444, 0.52 ) }
    dend_6 { pt3dadd( -159.481, 154.939, -20.845, 0.52 ) }
    dend_6 { pt3dadd( -160.232, 155.642, -21.4106, 0.52 ) }
    dend_6 { pt3dadd( -160.659, 156.005, -21.7485, 0.52 ) }
    dend_6 { pt3dadd( -161.752, 156.827, -22.6386, 0.52 ) }
    dend_6 { pt3dadd( -162.958, 157.608, -23.6463, 0.52 ) }
    dend_6 { pt3dadd( -163.5, 157.91, -24.1157, 0.52 ) }
    dend_6 { pt3dadd( -164.266, 158.297, -24.8435, 0.52 ) }
    dend_6 { pt3dadd( -165.32, 158.845, -25.8745, 0.52 ) }
    dend_6 { pt3dadd( -165.764, 159.092, -26.2859, 0.52 ) }
    dend_6 { pt3dadd( -166.976, 159.785, -27.3149, 0.52 ) }
    dend_6 { pt3dadd( -167.684, 160.207, -27.8755, 0.52 ) }
    dend_6 { pt3dadd( -169.72, 161.461, -29.391, 0.52 ) }
    dend_6 { pt3dadd( -172.002, 162.855, -30.9033, 0.52 ) }
    dend_6 { pt3dadd( -173.965, 163.982, -31.9448, 0.52 ) }
    dend_6 { pt3dadd( -175.325, 164.762, -32.6229, 0.52 ) }
    dend_6 { pt3dadd( -176.86, 165.632, -33.2902, 0.52 ) }
    dend_6 { pt3dadd( -178.333, 166.444, -33.8422, 0.52 ) }
    dend_6 { pt3dadd( -180.457, 167.459, -34.347, 0.52 ) }
    dend_6 { pt3dadd( -182.57, 168.285, -34.6521, 0.52 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 32/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -126.63, 111.283, -9.9149, 0.52 ) }
    dend_5 { pt3dadd( -127.232, 111.014, -10.7332, 0.52 ) }
    dend_5 { pt3dadd( -127.572, 110.863, -11.1942, 0.52 ) }
    dend_5 { pt3dadd( -128.39, 110.498, -12.3054, 0.52 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 36/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 85.2419, -82.618, 15.7256, 0.37 ) }
    dend_83 { pt3dadd( 86.2722, -83.2787, 15.7098, 0.37 ) }
    dend_83 { pt3dadd( 87.1673, -84.0091, 15.6048, 0.37 ) }
    dend_83 { pt3dadd( 87.6815, -84.4957, 15.5269, 0.37 ) }
    dend_83 { pt3dadd( 88.2526, -85.0803, 15.4339, 0.37 ) }
    dend_83 { pt3dadd( 89.1775, -86.1203, 15.2196, 0.37 ) }
    dend_83 { pt3dadd( 89.8372, -86.8873, 15.0498, 0.37 ) }
    dend_83 { pt3dadd( 91.2612, -88.6243, 14.5395, 0.37 ) }
    dend_83 { pt3dadd( 92.1309, -89.6746, 14.18, 0.37 ) }
    dend_83 { pt3dadd( 92.6037, -90.2461, 13.9533, 0.37 ) }
    dend_83 { pt3dadd( 93.831, -91.7737, 13.312, 0.37 ) }
    dend_83 { pt3dadd( 94.6637, -92.819, 12.8361, 0.37 ) }
    dend_83 { pt3dadd( 95.7636, -94.1395, 12.1794, 0.37 ) }
    dend_83 { pt3dadd( 96.8445, -95.3128, 11.5324, 0.37 ) }
    dend_83 { pt3dadd( 97.7367, -96.2058, 10.9621, 0.37 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 51/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 85.2419, -82.618, 15.7256, 0.37 ) }
    dend_82 { pt3dadd( 84.9236, -83.0948, 15.7574, 0.37 ) }
    dend_82 { pt3dadd( 84.5709, -83.6231, 15.7926, 0.37 ) }
    dend_82 { pt3dadd( 84.2792, -84.06, 15.8217, 0.37 ) }
    dend_82 { pt3dadd( 83.9307, -84.5821, 15.8564, 0.37 ) }
    // Section: dend_63, id: dend_63, parent: dend_45 (entry count 56/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -31.3849, -256.468, -23.48, 0.44 ) }
    dend_63 { pt3dadd( -33.1518, -255.967, -23.6598, 0.44 ) }
    dend_63 { pt3dadd( -34.2292, -255.663, -23.7694, 0.44 ) }
    dend_63 { pt3dadd( -35.3869, -255.335, -23.8872, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 60/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -31.3849, -256.468, -23.48, 0.44 ) }
    dend_46 { pt3dadd( -31.5893, -254.705, -22.8007, 0.44 ) }
    dend_46 { pt3dadd( -31.7098, -253.601, -22.3013, 0.44 ) }
    dend_46 { pt3dadd( -31.8416, -252.228, -21.682, 0.44 ) }
    dend_46 { pt3dadd( -31.9608, -250.733, -21.0484, 0.44 ) }
    dend_46 { pt3dadd( -32.0556, -249.612, -20.6194, 0.44 ) }
    dend_46 { pt3dadd( -32.2404, -247.553, -19.801, 0.44 ) }
    dend_46 { pt3dadd( -32.4717, -245.27, -18.9077, 0.44 ) }
    dend_46 { pt3dadd( -32.6128, -244.089, -18.4862, 0.44 ) }
    dend_46 { pt3dadd( -32.8216, -242.552, -18.0041, 0.44 ) }
    dend_46 { pt3dadd( -33.1693, -240.219, -17.4089, 0.44 ) }
    dend_46 { pt3dadd( -33.5331, -237.828, -16.914, 0.44 ) }
    dend_46 { pt3dadd( -33.7872, -236.231, -16.7021, 0.44 ) }
    dend_46 { pt3dadd( -34.1004, -234.238, -16.5756, 0.44 ) }
    dend_46 { pt3dadd( -34.298, -233.065, -16.5324, 0.44 ) }
    dend_46 { pt3dadd( -34.5078, -231.895, -16.5283, 0.44 ) }
    dend_46 { pt3dadd( -34.7268, -230.642, -16.5833, 0.44 ) }
    dend_46 { pt3dadd( -34.9412, -229.361, -16.7019, 0.44 ) }
    dend_46 { pt3dadd( -35.1055, -228.348, -16.7602, 0.44 ) }
    dend_46 { pt3dadd( -35.3971, -226.874, -16.7538, 0.44 ) }
    dend_46 { pt3dadd( -35.5628, -226.244, -16.7387, 0.44 ) }
    dend_46 { pt3dadd( -35.8303, -225.393, -16.6993, 0.44 ) }
    dend_46 { pt3dadd( -36.1885, -224.342, -16.6568, 0.44 ) }
    dend_46 { pt3dadd( -36.5078, -223.368, -16.5788, 0.44 ) }
    dend_46 { pt3dadd( -36.8571, -222.277, -16.4434, 0.44 ) }
    dend_46 { pt3dadd( -37.1217, -221.344, -16.2481, 0.44 ) }
    dend_46 { pt3dadd( -37.381, -220.372, -15.9073, 0.44 ) }
    dend_46 { pt3dadd( -37.7577, -218.971, -15.2096, 0.44 ) }
    dend_46 { pt3dadd( -38.1837, -217.15, -14.0168, 0.44 ) }
    dend_46 { pt3dadd( -38.3804, -216.108, -13.1648, 0.44 ) }
    dend_46 { pt3dadd( -38.6226, -214.64, -11.8627, 0.44 ) }
    dend_46 { pt3dadd( -38.9194, -212.702, -9.97157, 0.44 ) }
    dend_46 { pt3dadd( -39.1477, -211.163, -8.29088, 0.44 ) }
    dend_46 { pt3dadd( -39.3524, -209.709, -6.4794, 0.44 ) }
    dend_46 { pt3dadd( -39.5088, -208.505, -4.8353, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_34 (entry count 95/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -24.0495, -299.96, -32.0695, 0.29 ) }
    dend_44 { pt3dadd( -24.1295, -302.17, -37.4784, 0.29 ) }
    dend_44 { pt3dadd( -24.1636, -303.121, -39.6363, 0.29 ) }
    dend_44 { pt3dadd( -24.1879, -303.947, -41.3813, 0.29 ) }
    dend_44 { pt3dadd( -24.1823, -304.623, -42.7001, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_44 { pt3dadd( -23.9186, -309.778, -51.7339, 0.29 ) }
    dend_44 { pt3dadd( -23.8072, -310.813, -53.3332, 0.29 ) }
    dend_44 { pt3dadd( -23.7265, -311.363, -54.0546, 0.29 ) }
    dend_44 { pt3dadd( -23.6327, -311.913, -54.6904, 0.29 ) }
    dend_44 { pt3dadd( -23.3732, -313.2, -55.9384, 0.29 ) }
    dend_44 { pt3dadd( -22.9696, -314.834, -57.1267, 0.29 ) }
    dend_44 { pt3dadd( -22.3445, -316.94, -58.2034, 0.29 ) }
    dend_44 { pt3dadd( -21.5306, -320.283, -60.2648, 0.29 ) }
    dend_44 { pt3dadd( -21.0867, -322.291, -61.6625, 0.29 ) }
    dend_44 { pt3dadd( -20.8076, -323.678, -62.7492, 0.29 ) }
    dend_44 { pt3dadd( -20.64, -324.72, -63.7068, 0.29 ) }
    dend_44 { pt3dadd( -20.4262, -326.606, -65.8173, 0.29 ) }
    dend_44 { pt3dadd( -20.2151, -328.609, -68.0697, 0.29 ) }
    dend_44 { pt3dadd( -20.076, -329.922, -69.6005, 0.29 ) }
    dend_44 { pt3dadd( -19.9793, -331.082, -71.1283, 0.29 ) }
    dend_44 { pt3dadd( -19.8087, -332.84, -73.6604, 0.29 ) }
    dend_44 { pt3dadd( -19.5432, -334.77, -76.5517, 0.29 ) }
    dend_44 { pt3dadd( -18.9693, -337.248, -79.9764, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 18/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -24.0495, -299.96, -32.0695, 0.52 ) }
    dend_35 { pt3dadd( -24.4842, -301.36, -32.1291, 0.52 ) }
    dend_35 { pt3dadd( -24.9747, -302.835, -32.2621, 0.52 ) }
    dend_35 { pt3dadd( -25.2667, -303.668, -32.3472, 0.52 ) }
    dend_35 { pt3dadd( -25.8493, -305.241, -32.5841, 0.52 ) }
    dend_35 { pt3dadd( -26.462, -306.916, -32.8705, 0.52 ) }
    dend_35 { pt3dadd( -27.0906, -308.697, -33.186, 0.52 ) }
    dend_35 { pt3dadd( -27.5086, -310.004, -33.4307, 0.52 ) }
    dend_35 { pt3dadd( -27.7532, -310.867, -33.5849, 0.52 ) }
    dend_35 { pt3dadd( -28.2123, -312.606, -33.9205, 0.52 ) }
    dend_35 { pt3dadd( -28.5467, -313.957, -34.1668, 0.52 ) }
    dend_35 { pt3dadd( -28.8532, -315.038, -34.4294, 0.52 ) }
    dend_35 { pt3dadd( -29.1384, -315.998, -34.6872, 0.52 ) }
    dend_35 { pt3dadd( -29.4762, -317.057, -34.9922, 0.52 ) }
    dend_35 { pt3dadd( -30.1717, -319.025, -35.5933, 0.52 ) }
    dend_35 { pt3dadd( -30.6555, -320.329, -35.9745, 0.52 ) }
    dend_35 { pt3dadd( -31.4494, -322.399, -36.5989, 0.52 ) }
    dend_35 { pt3dadd( -31.9172, -323.611, -36.994, 0.52 ) }
    dend_35 { pt3dadd( -32.6073, -325.417, -37.5865, 0.52 ) }
    dend_35 { pt3dadd( -33.0209, -326.565, -37.9166, 0.52 ) }
    dend_35 { pt3dadd( -33.5982, -328.348, -38.3014, 0.52 ) }
    dend_35 { pt3dadd( -33.8764, -329.29, -38.4574, 0.52 ) }
    dend_35 { pt3dadd( -34.2909, -330.964, -38.6229, 0.52 ) }
    dend_35 { pt3dadd( -34.5976, -332.199, -38.7779, 0.52 ) }
    dend_35 { pt3dadd( -35.0223, -333.855, -38.9879, 0.52 ) }
    dend_35 { pt3dadd( -35.3913, -335.172, -39.1584, 0.52 ) }
    dend_35 { pt3dadd( -35.8667, -336.684, -39.4073, 0.52 ) }
    dend_35 { pt3dadd( -36.3444, -338.165, -39.6704, 0.52 ) }
    dend_35 { pt3dadd( -37.0406, -340.348, -40.0523, 0.52 ) }
    dend_35 { pt3dadd( -37.4397, -341.615, -40.2908, 0.52 ) }
    dend_35 { pt3dadd( -38.2752, -344.391, -40.8326, 0.52 ) }
    dend_35 { pt3dadd( -38.916, -346.761, -41.205, 0.52 ) }
    dend_35 { pt3dadd( -39.2469, -348.115, -41.351, 0.52 ) }
    dend_35 { pt3dadd( -39.6026, -349.661, -41.4034, 0.52 ) }
    dend_35 { pt3dadd( -39.8373, -350.82, -41.327, 0.52 ) }
    dend_35 { pt3dadd( -40.0647, -352.041, -41.1779, 0.52 ) }
    dend_35 { pt3dadd( -40.3842, -353.98, -40.7685, 0.52 ) }
    dend_35 { pt3dadd( -40.5182, -354.806, -40.5732, 0.52 ) }
    dend_35 { pt3dadd( -40.7265, -355.932, -40.392, 0.52 ) }
    dend_35 { pt3dadd( -40.9308, -356.855, -40.3304, 0.52 ) }
    dend_35 { pt3dadd( -41.152, -357.731, -40.3565, 0.52 ) }
    dend_35 { pt3dadd( -41.373, -358.549, -40.4494, 0.52 ) }
    dend_35 { pt3dadd( -41.878, -360.58, -40.8321, 0.52 ) }
    dend_35 { pt3dadd( -42.0995, -361.6, -41.0833, 0.52 ) }
    dend_35 { pt3dadd( -42.3276, -362.753, -41.4047, 0.52 ) }
    dend_35 { pt3dadd( -42.5269, -363.681, -41.6632, 0.52 ) }
    dend_35 { pt3dadd( -42.8781, -365.076, -42.0178, 0.52 ) }
    dend_35 { pt3dadd( -43.135, -366.006, -42.2098, 0.52 ) }
    dend_35 { pt3dadd( -43.5452, -367.635, -42.4348, 0.52 ) }
    dend_35 { pt3dadd( -43.6882, -368.25, -42.5212, 0.52 ) }
    dend_35 { pt3dadd( -43.8732, -369.171, -42.6413, 0.52 ) }
    dend_35 { pt3dadd( -44.0237, -369.927, -42.7164, 0.52 ) }
    dend_35 { pt3dadd( -44.2068, -370.902, -42.7772, 0.52 ) }
    dend_35 { pt3dadd( -44.43, -372.342, -42.8104, 0.52 ) }
    dend_35 { pt3dadd( -44.5304, -373.567, -42.804, 0.52 ) }
    dend_35 { pt3dadd( -44.568, -374.887, -42.822, 0.52 ) }
    dend_35 { pt3dadd( -44.5866, -375.765, -42.8671, 0.52 ) }
    dend_35 { pt3dadd( -44.6169, -376.584, -42.9464, 0.52 ) }
    dend_35 { pt3dadd( -44.6998, -377.898, -43.1138, 0.52 ) }
    dend_35 { pt3dadd( -44.9301, -380.199, -43.4425, 0.52 ) }
    dend_35 { pt3dadd( -45.007, -381.032, -43.5246, 0.52 ) }
    dend_35 { pt3dadd( -45.1673, -383.016, -43.6229, 0.52 ) }
    dend_35 { pt3dadd( -45.2603, -384.4, -43.6329, 0.52 ) }
    dend_35 { pt3dadd( -45.3645, -385.965, -43.5755, 0.52 ) }
    dend_35 { pt3dadd( -45.4552, -387.135, -43.474, 0.52 ) }
    dend_35 { pt3dadd( -45.6567, -389.446, -43.1496, 0.52 ) }
    dend_35 { pt3dadd( -45.8485, -391.384, -42.8122, 0.52 ) }
    dend_35 { pt3dadd( -45.9642, -392.515, -42.5759, 0.52 ) }
    dend_35 { pt3dadd( -46.1011, -393.634, -42.3469, 0.52 ) }
    dend_35 { pt3dadd( -46.233, -394.586, -42.2021, 0.52 ) }
    dend_35 { pt3dadd( -46.3655, -395.492, -42.1255, 0.52 ) }
    dend_35 { pt3dadd( -46.544, -396.997, -42.1335, 0.52 ) }
    dend_35 { pt3dadd( -46.6172, -398.477, -42.1751, 0.52 ) }
    dend_35 { pt3dadd( -46.6469, -399.387, -42.2063, 0.52 ) }
    dend_35 { pt3dadd( -46.6494, -400.884, -42.2733, 0.52 ) }
    dend_35 { pt3dadd( -46.6047, -401.982, -42.3363, 0.52 ) }
    dend_35 { pt3dadd( -46.3354, -404.98, -42.5437, 0.52 ) }
    dend_35 { pt3dadd( -45.9224, -407.537, -42.7554, 0.52 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 96/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 22.0259, 306.768, -8.51672, 0.44 ) }
    dend_23 { pt3dadd( 21.3599, 308.044, -8.54827, 0.44 ) }
    dend_23 { pt3dadd( 20.8122, 309.136, -8.57586, 0.44 ) }
    dend_23 { pt3dadd( 20.0413, 310.653, -8.6513, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_23 { pt3dadd( 19.455, 311.694, -8.70275, 0.44 ) }
    dend_23 { pt3dadd( 18.9598, 312.445, -8.73022, 0.44 ) }
    dend_23 { pt3dadd( 18.2481, 313.378, -8.79575, 0.44 ) }
    dend_23 { pt3dadd( 17.8208, 313.809, -8.86907, 0.44 ) }
    dend_23 { pt3dadd( 17.1222, 314.364, -9.05069, 0.44 ) }
    dend_23 { pt3dadd( 16.1206, 314.972, -9.39886, 0.44 ) }
    dend_23 { pt3dadd( 15.0586, 315.496, -9.80937, 0.44 ) }
    dend_23 { pt3dadd( 13.8354, 316.005, -10.2847, 0.44 ) }
    dend_23 { pt3dadd( 12.7739, 316.368, -10.7167, 0.44 ) }
    dend_23 { pt3dadd( 11.8335, 316.653, -11.1325, 0.44 ) }
    dend_23 { pt3dadd( 10.9109, 316.91, -11.5826, 0.44 ) }
    dend_23 { pt3dadd( 9.63843, 317.279, -12.3606, 0.44 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 22.0259, 306.768, -8.51672, 0.44 ) }
    dend_22 { pt3dadd( 20.9538, 308.137, -8.72351, 0.44 ) }
    dend_22 { pt3dadd( 20.0277, 309.414, -8.90247, 0.44 ) }
    dend_22 { pt3dadd( 19.1568, 310.663, -8.77351, 0.44 ) }
    dend_22 { pt3dadd( 18.6303, 311.407, -8.56099, 0.44 ) }
    dend_22 { pt3dadd( 18.2205, 311.991, -8.35239, 0.44 ) }
    dend_22 { pt3dadd( 17.5871, 312.893, -8.01027, 0.44 ) }
    dend_22 { pt3dadd( 17.1348, 313.545, -7.6658, 0.44 ) }
    dend_22 { pt3dadd( 15.3585, 316.203, -5.87031, 0.44 ) }
    dend_22 { pt3dadd( 14.8123, 317.038, -5.17509, 0.44 ) }
    dend_22 { pt3dadd( 13.9771, 318.36, -4.02163, 0.44 ) }
    dend_22 { pt3dadd( 13.672, 318.878, -3.57764, 0.44 ) }
    dend_22 { pt3dadd( 12.7675, 320.436, -2.29534, 0.44 ) }
    dend_22 { pt3dadd( 11.8622, 322.043, -1.1497, 0.44 ) }
    dend_22 { pt3dadd( 10.8945, 323.972, -0.110963, 0.44 ) }
    dend_22 { pt3dadd( 10.2975, 325.28, 0.458251, 0.44 ) }
    dend_22 { pt3dadd( 9.81211, 326.406, 0.868664, 0.44 ) }
    dend_22 { pt3dadd( 9.41023, 327.394, 1.13054, 0.44 ) }
    dend_22 { pt3dadd( 8.76153, 329.164, 1.28413, 0.44 ) }
    dend_22 { pt3dadd( 8.26146, 330.748, 1.21281, 0.44 ) }
    dend_22 { pt3dadd( 7.90998, 331.931, 1.07076, 0.44 ) }
    dend_22 { pt3dadd( 7.64357, 332.866, 0.948823, 0.44 ) }
    dend_22 { pt3dadd( 7.13418, 334.709, 0.682182, 0.44 ) }
    dend_22 { pt3dadd( 6.68731, 336.695, 0.368125, 0.44 ) }
    dend_22 { pt3dadd( 6.56497, 337.411, 0.226524, 0.44 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -182.57, 168.285, -34.6521, 0.44 ) }
    dend_8 { pt3dadd( -183.497, 168.726, -34.7886, 0.44 ) }
    dend_8 { pt3dadd( -184.423, 169.134, -34.842, 0.44 ) }
    dend_8 { pt3dadd( -185.291, 169.551, -34.8318, 0.44 ) }
    dend_8 { pt3dadd( -185.847, 169.857, -34.7951, 0.44 ) }
    dend_8 { pt3dadd( -186.852, 170.405, -34.6556, 0.44 ) }
    dend_8 { pt3dadd( -187.507, 170.752, -34.5485, 0.44 ) }
    dend_8 { pt3dadd( -188.436, 171.236, -34.3574, 0.44 ) }
    dend_8 { pt3dadd( -189.304, 171.639, -34.1373, 0.44 ) }
    dend_8 { pt3dadd( -190.211, 171.984, -33.893, 0.44 ) }
    dend_8 { pt3dadd( -191.501, 172.373, -33.6046, 0.44 ) }
    dend_8 { pt3dadd( -192.257, 172.55, -33.4829, 0.44 ) }
    dend_8 { pt3dadd( -193.283, 172.735, -33.3918, 0.44 ) }
    dend_8 { pt3dadd( -194.86, 172.935, -33.3639, 0.44 ) }
    dend_8 { pt3dadd( -196.996, 173.1, -33.4274, 0.44 ) }
    dend_8 { pt3dadd( -198.72, 173.192, -33.5403, 0.44 ) }
    dend_8 { pt3dadd( -200.052, 173.3, -33.729, 0.44 ) }
    dend_8 { pt3dadd( -201.328, 173.464, -34.044, 0.44 ) }
    dend_8 { pt3dadd( -202.826, 173.735, -34.5654, 0.44 ) }
    dend_8 { pt3dadd( -204.45, 174.168, -35.347, 0.44 ) }
    dend_8 { pt3dadd( -205.1, 174.399, -35.7236, 0.44 ) }
    dend_8 { pt3dadd( -207.051, 175.284, -37.0128, 0.44 ) }
    dend_8 { pt3dadd( -208.959, 176.335, -38.5003, 0.44 ) }
    dend_8 { pt3dadd( -209.792, 176.845, -39.2325, 0.44 ) }
    dend_8 { pt3dadd( -211.072, 177.686, -40.4588, 0.44 ) }
    dend_8 { pt3dadd( -211.569, 178.013, -40.9529, 0.44 ) }
    dend_8 { pt3dadd( -212.614, 178.626, -41.958, 0.44 ) }
    dend_8 { pt3dadd( -214.023, 179.296, -43.1621, 0.44 ) }
    dend_8 { pt3dadd( -214.889, 179.613, -43.8101, 0.44 ) }
    dend_8 { pt3dadd( -215.461, 179.764, -44.2161, 0.44 ) }
    dend_8 { pt3dadd( -216.027, 179.828, -44.5708, 0.44 ) }
    dend_8 { pt3dadd( -216.839, 179.807, -45.039, 0.44 ) }
    dend_8 { pt3dadd( -217.624, 179.668, -45.43, 0.44 ) }
    dend_8 { pt3dadd( -218.442, 179.407, -45.8084, 0.44 ) }
    dend_8 { pt3dadd( -219.227, 179.082, -46.0944, 0.44 ) }
    dend_8 { pt3dadd( -220.281, 178.586, -46.4151, 0.44 ) }
    dend_8 { pt3dadd( -221.15, 178.158, -46.6478, 0.44 ) }
    dend_8 { pt3dadd( -221.935, 177.772, -46.8225, 0.44 ) }
    dend_8 { pt3dadd( -223.494, 176.996, -47.0792, 0.44 ) }
    dend_8 { pt3dadd( -225.92, 175.829, -47.3781, 0.44 ) }
    dend_8 { pt3dadd( -226.69, 175.488, -47.4464, 0.44 ) }
    dend_8 { pt3dadd( -228.099, 174.931, -47.536, 0.44 ) }
    dend_8 { pt3dadd( -229.23, 174.536, -47.5999, 0.44 ) }
    dend_8 { pt3dadd( -230.767, 174.038, -47.6127, 0.44 ) }
    dend_8 { pt3dadd( -231.625, 173.794, -47.6099, 0.44 ) }
    dend_8 { pt3dadd( -232.117, 173.676, -47.624, 0.44 ) }
    dend_8 { pt3dadd( -232.818, 173.535, -47.6318, 0.44 ) }
    dend_8 { pt3dadd( -233.575, 173.386, -47.5718, 0.44 ) }
    dend_8 { pt3dadd( -236.437, 172.845, -47.2354, 0.44 ) }
    dend_8 { pt3dadd( -238.047, 172.554, -46.931, 0.44 ) }
    dend_8 { pt3dadd( -239.096, 172.369, -46.6302, 0.44 ) }
    dend_8 { pt3dadd( -239.931, 172.235, -46.3435, 0.44 ) }
    dend_8 { pt3dadd( -242.83, 171.801, -45.0857, 0.44 ) }
    dend_8 { pt3dadd( -243.455, 171.711, -44.7328, 0.44 ) }
    dend_8 { pt3dadd( -244.96, 171.52, -43.7399, 0.44 ) }
    dend_8 { pt3dadd( -246.259, 171.36, -42.7662, 0.44 ) }
    dend_8 { pt3dadd( -247.026, 171.278, -42.126, 0.44 ) }
    dend_8 { pt3dadd( -248.694, 171.188, -40.6407, 0.44 ) }
    dend_8 { pt3dadd( -250.598, 171.193, -38.9114, 0.44 ) }
    dend_8 { pt3dadd( -251.124, 171.201, -38.4115, 0.44 ) }
    dend_8 { pt3dadd( -251.611, 171.217, -37.9475, 0.44 ) }
    dend_8 { pt3dadd( -253.007, 171.261, -36.5746, 0.44 ) }
    dend_8 { pt3dadd( -253.455, 171.28, -36.0878, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 0/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -182.57, 168.285, -34.6521, 0.52 ) }
    dend_7 { pt3dadd( -183.066, 169.033, -34.4667, 0.52 ) }
    dend_7 { pt3dadd( -183.659, 170.079, -34.2652, 0.52 ) }
    dend_7 { pt3dadd( -184.365, 171.474, -34.0065, 0.52 ) }
    dend_7 { pt3dadd( -184.629, 172.021, -33.9059, 0.52 ) }
    dend_7 { pt3dadd( -185.12, 173.072, -33.705, 0.52 ) }
    dend_7 { pt3dadd( -185.441, 173.827, -33.5722, 0.52 ) }
    dend_7 { pt3dadd( -185.959, 175.232, -33.3401, 0.52 ) }
    dend_7 { pt3dadd( -186.181, 175.98, -33.247, 0.52 ) }
    dend_7 { pt3dadd( -186.379, 176.778, -33.1701, 0.52 ) }
    dend_7 { pt3dadd( -186.624, 177.843, -33.0809, 0.52 ) }
    dend_7 { pt3dadd( -186.926, 179.221, -32.9709, 0.44 ) }
    dend_7 { pt3dadd( -187.064, 179.851, -32.9112, 0.44 ) }
    dend_7 { pt3dadd( -187.372, 181.257, -32.7397, 0.44 ) }
    dend_7 { pt3dadd( -187.518, 181.964, -32.6451, 0.44 ) }
    dend_7 { pt3dadd( -187.625, 182.662, -32.5594, 0.44 ) }
    dend_7 { pt3dadd( -187.704, 183.363, -32.4588, 0.44 ) }
    dend_7 { pt3dadd( -187.726, 183.859, -32.3853, 0.44 ) }
    dend_7 { pt3dadd( -187.71, 184.253, -32.3319, 0.44 ) }
    dend_7 { pt3dadd( -187.657, 184.713, -32.3096, 0.44 ) }
    dend_7 { pt3dadd( -187.426, 186.058, -32.4025, 0.44 ) }
    dend_7 { pt3dadd( -187.186, 187.279, -32.5286, 0.44 ) }
    dend_7 { pt3dadd( -186.887, 188.732, -32.7481, 0.44 ) }
    dend_7 { pt3dadd( -186.813, 189.082, -32.8085, 0.44 ) }
    dend_7 { pt3dadd( -186.394, 191.093, -33.1963, 0.44 ) }
    dend_7 { pt3dadd( -186.107, 192.463, -33.4837, 0.44 ) }
    dend_7 { pt3dadd( -185.874, 193.606, -33.728, 0.44 ) }
    dend_7 { pt3dadd( -185.476, 195.522, -34.239, 0.44 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 28/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 97.7367, -96.2058, 10.9621, 0.37 ) }
    dend_85 { pt3dadd( 100.01, -96.9901, 9.60752, 0.37 ) }
    dend_85 { pt3dadd( 101.262, -97.3584, 8.96842, 0.37 ) }
    dend_85 { pt3dadd( 102.558, -97.7331, 8.37176, 0.37 ) }
    dend_85 { pt3dadd( 103.64, -98.0523, 7.88878, 0.37 ) }
    dend_85 { pt3dadd( 104.453, -98.2705, 7.52573, 0.37 ) }
    dend_85 { pt3dadd( 105.414, -98.5235, 7.11063, 0.37 ) }
    dend_85 { pt3dadd( 105.584, -98.5625, 7.05544, 0.37 ) }
    dend_85 { pt3dadd( 106.207, -98.7214, 6.90549, 0.37 ) }
    dend_85 { pt3dadd( 108.018, -99.2691, 6.58797, 0.37 ) }
    dend_85 { pt3dadd( 109.851, -99.9374, 6.37103, 0.37 ) }
    dend_85 { pt3dadd( 110.534, -100.236, 6.31317, 0.37 ) }
    dend_85 { pt3dadd( 110.97, -100.444, 6.29994, 0.37 ) }
    dend_85 { pt3dadd( 112.923, -101.359, 6.38327, 0.37 ) }
    dend_85 { pt3dadd( 113.837, -101.783, 6.49417, 0.37 ) }
    dend_85 { pt3dadd( 114.554, -102.125, 6.64446, 0.37 ) }
    dend_85 { pt3dadd( 115.657, -102.635, 6.91056, 0.37 ) }
    dend_85 { pt3dadd( 116.777, -103.092, 7.15769, 0.37 ) }
    dend_85 { pt3dadd( 117.776, -103.442, 7.35401, 0.37 ) }
    dend_85 { pt3dadd( 118.478, -103.669, 7.46109, 0.37 ) }
    dend_85 { pt3dadd( 119.897, -104.126, 7.67837, 0.37 ) }
    dend_85 { pt3dadd( 121.493, -104.56, 7.75457, 0.37 ) }
    dend_85 { pt3dadd( 122.152, -104.714, 7.72195, 0.37 ) }
    dend_85 { pt3dadd( 122.795, -104.864, 7.62695, 0.37 ) }
    dend_85 { pt3dadd( 123.805, -105.081, 7.40056, 0.37 ) }
    dend_85 { pt3dadd( 124.46, -105.199, 7.22284, 0.37 ) }
    dend_85 { pt3dadd( 127.42, -105.828, 6.4285, 0.37 ) }
    dend_85 { pt3dadd( 128.132, -106.007, 6.28341, 0.37 ) }
    dend_85 { pt3dadd( 128.689, -106.18, 6.2192, 0.37 ) }
    dend_85 { pt3dadd( 129.338, -106.391, 6.2168, 0.37 ) }
    dend_85 { pt3dadd( 130.291, -106.707, 6.23779, 0.37 ) }
    dend_85 { pt3dadd( 132.312, -107.409, 6.30411, 0.37 ) }
    dend_85 { pt3dadd( 133.865, -108.006, 6.46257, 0.37 ) }
    dend_85 { pt3dadd( 135.338, -108.583, 6.59082, 0.37 ) }
    dend_85 { pt3dadd( 137.354, -109.371, 6.7279, 0.37 ) }
    dend_85 { pt3dadd( 139.241, -110.128, 6.79031, 0.37 ) }
    dend_85 { pt3dadd( 140.345, -110.559, 6.76073, 0.37 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 65/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 97.7367, -96.2058, 10.9621, 0.37 ) }
    dend_84 { pt3dadd( 96.9893, -94.8909, 9.16734, 0.37 ) }
    dend_84 { pt3dadd( 96.7329, -94.4399, 8.55174, 0.37 ) }
    dend_84 { pt3dadd( 96.5477, -94.1142, 8.10713, 0.37 ) }
    // Section: dend_62, id: dend_62, parent: dend_46 (entry count 69/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -39.5088, -208.505, -4.8353, 0.44 ) }
    dend_62 { pt3dadd( -40.9701, -208.873, -4.62839, 0.44 ) }
    dend_62 { pt3dadd( -41.5449, -209.018, -4.547, 0.44 ) }
    dend_62 { pt3dadd( -42.6451, -209.295, -4.39121, 0.44 ) }
    dend_62 { pt3dadd( -43.7486, -209.573, -4.23496, 0.44 ) }
    dend_62 { pt3dadd( -44.3482, -209.724, -4.15006, 0.44 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 75/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -39.5088, -208.505, -4.8353, 0.44 ) }
    dend_47 { pt3dadd( -39.051, -206.998, -3.9633, 0.44 ) }
    dend_47 { pt3dadd( -38.8948, -206.285, -3.59082, 0.44 ) }
    dend_47 { pt3dadd( -38.4668, -203.69, -2.33408, 0.44 ) }
    dend_47 { pt3dadd( -38.3316, -202.739, -1.89377, 0.44 ) }
    dend_47 { pt3dadd( -38.2216, -202.151, -1.53379, 0.44 ) }
    dend_47 { pt3dadd( -38.0514, -201.416, -1.02654, 0.44 ) }
    dend_47 { pt3dadd( -37.9, -200.95, -0.444935, 0.44 ) }
    dend_47 { pt3dadd( -37.7269, -200.54, 0.200259, 0.44 ) }
    dend_47 { pt3dadd( -37.5176, -200.096, 0.993074, 0.44 ) }
    dend_47 { pt3dadd( -36.6816, -198.63, 4.01923, 0.44 ) }
    dend_47 { pt3dadd( -36.5538, -198.443, 4.45492, 0.44 ) }
    dend_47 { pt3dadd( -34.9755, -196.54, 9.53478, 0.44 ) }
    dend_47 { pt3dadd( -34.6883, -196.242, 10.4472, 0.44 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 89/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -45.9224, -407.537, -42.7554, 0.37 ) }
    dend_43 { pt3dadd( -44.862, -408.554, -43.2124, 0.37 ) }
    dend_43 { pt3dadd( -43.8979, -409.329, -43.5294, 0.37 ) }
    dend_43 { pt3dadd( -43.0228, -409.996, -43.8637, 0.37 ) }
    dend_43 { pt3dadd( -42.7516, -410.205, -43.9994, 0.37 ) }
    dend_43 { pt3dadd( -42.3898, -410.505, -44.2098, 0.37 ) }
    dend_43 { pt3dadd( -41.9231, -410.927, -44.4704, 0.37 ) }
    dend_43 { pt3dadd( -41.349, -411.482, -44.746, 0.37 ) }
    dend_43 { pt3dadd( -40.7338, -412.252, -45.1039, 0.37 ) }
    dend_43 { pt3dadd( -40.3397, -413.056, -45.3592, 0.37 ) }
    dend_43 { pt3dadd( -40.0966, -413.673, -45.5292, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_43 { pt3dadd( -39.8091, -414.679, -45.7436, 0.37 ) }
    dend_43 { pt3dadd( -39.6788, -415.366, -45.8461, 0.37 ) }
    dend_43 { pt3dadd( -39.6078, -415.974, -45.8999, 0.37 ) }
    dend_43 { pt3dadd( -39.5037, -416.935, -45.7977, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 4/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -45.9224, -407.537, -42.7554, 0.52 ) }
    dend_36 { pt3dadd( -45.992, -408.995, -43.1912, 0.52 ) }
    dend_36 { pt3dadd( -46.0309, -410.299, -43.5622, 0.52 ) }
    dend_36 { pt3dadd( -46.1048, -411.767, -44.031, 0.52 ) }
    dend_36 { pt3dadd( -46.1775, -412.967, -44.4052, 0.52 ) }
    dend_36 { pt3dadd( -46.2799, -414.67, -44.9052, 0.52 ) }
    dend_36 { pt3dadd( -46.3538, -415.906, -45.2304, 0.52 ) }
    dend_36 { pt3dadd( -46.407, -416.79, -45.421, 0.52 ) }
    dend_36 { pt3dadd( -46.5055, -418.742, -45.8265, 0.52 ) }
    dend_36 { pt3dadd( -46.558, -420.401, -46.1508, 0.52 ) }
    dend_36 { pt3dadd( -46.5931, -421.787, -46.3775, 0.52 ) }
    dend_36 { pt3dadd( -46.6381, -423.898, -46.6149, 0.52 ) }
    dend_36 { pt3dadd( -46.6554, -424.846, -46.701, 0.52 ) }
    dend_36 { pt3dadd( -46.6472, -425.802, -46.7211, 0.52 ) }
    dend_36 { pt3dadd( -46.6339, -426.197, -46.696, 0.52 ) }
    dend_36 { pt3dadd( -46.6075, -427.375, -46.571, 0.52 ) }
    dend_36 { pt3dadd( -46.6089, -428.542, -46.4109, 0.52 ) }
    dend_36 { pt3dadd( -46.6507, -429.683, -46.2337, 0.52 ) }
    dend_36 { pt3dadd( -46.7843, -431.427, -45.9623, 0.52 ) }
    dend_36 { pt3dadd( -46.9076, -432.436, -45.8065, 0.52 ) }
    dend_36 { pt3dadd( -47.0774, -433.622, -45.6362, 0.52 ) }
    dend_36 { pt3dadd( -47.3392, -435.563, -45.3761, 0.52 ) }
    dend_36 { pt3dadd( -47.5622, -437.203, -45.1792, 0.52 ) }
    dend_36 { pt3dadd( -47.7737, -438.67, -44.9988, 0.52 ) }
    dend_36 { pt3dadd( -47.9413, -439.866, -44.8692, 0.52 ) }
    dend_36 { pt3dadd( -48.0464, -440.962, -44.7414, 0.52 ) }
    dend_36 { pt3dadd( -48.1112, -442.704, -44.5401, 0.52 ) }
    dend_36 { pt3dadd( -48.1201, -443.591, -44.4268, 0.52 ) }
    dend_36 { pt3dadd( -48.0681, -445.202, -44.2096, 0.52 ) }
    dend_36 { pt3dadd( -47.9865, -446.287, -44.058, 0.52 ) }
    dend_36 { pt3dadd( -47.8315, -447.621, -43.8722, 0.52 ) }
    dend_36 { pt3dadd( -47.6016, -449.466, -43.617, 0.52 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 36/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 140.345, -110.559, 6.76073, 0.37 ) }
    dend_87 { pt3dadd( 140.673, -112.729, 5.2871, 0.37 ) }
    dend_87 { pt3dadd( 140.781, -113.441, 4.80326, 0.37 ) }
    dend_87 { pt3dadd( 140.898, -114.214, 4.27805, 0.37 ) }
    dend_87 { pt3dadd( 140.987, -114.799, 3.88117, 0.37 ) }
    dend_87 { pt3dadd( 141.095, -115.511, 3.39734, 0.37 ) }
    dend_87 { pt3dadd( 141.419, -117.651, 1.94435, 0.37 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 43/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 140.345, -110.559, 6.76073, 0.37 ) }
    dend_86 { pt3dadd( 142.383, -111.018, 7.67814, 0.37 ) }
    dend_86 { pt3dadd( 143.921, -111.364, 8.37001, 0.37 ) }
    dend_86 { pt3dadd( 145.295, -111.674, 8.98823, 0.37 ) }
    dend_86 { pt3dadd( 146.308, -111.902, 9.44398, 0.37 ) }
    dend_86 { pt3dadd( 146.709, -111.992, 9.62464, 0.37 ) }
    // Section: dend_55, id: dend_55, parent: dend_47 (entry count 49/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -34.6883, -196.242, 10.4472, 0.44 ) }
    dend_55 { pt3dadd( -33.8461, -196.761, 10.6005, 0.44 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 51/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -34.6883, -196.242, 10.4472, 0.44 ) }
    dend_48 { pt3dadd( -34.5807, -194.853, 10.4186, 0.44 ) }
    dend_48 { pt3dadd( -34.5231, -193.971, 10.3981, 0.44 ) }
    dend_48 { pt3dadd( -34.4688, -193.149, 10.3791, 0.44 ) }
    dend_48 { pt3dadd( -34.3731, -192.317, 10.3169, 0.44 ) }
    dend_48 { pt3dadd( -34.1648, -190.946, 10.1835, 0.44 ) }
    dend_48 { pt3dadd( -34.0523, -190.358, 10.1116, 0.44 ) }
    dend_48 { pt3dadd( -33.788, -189.421, 9.93009, 0.44 ) }
    dend_48 { pt3dadd( -33.6382, -188.996, 9.82127, 0.44 ) }
    dend_48 { pt3dadd( -33.0583, -187.513, 9.35454, 0.44 ) }
    dend_48 { pt3dadd( -32.719, -186.709, 8.98214, 0.44 ) }
    dend_48 { pt3dadd( -32.5156, -186.191, 8.68921, 0.44 ) }
    dend_48 { pt3dadd( -32.1754, -185.295, 8.06626, 0.44 ) }
    dend_48 { pt3dadd( -31.9997, -184.816, 7.62464, 0.44 ) }
    dend_48 { pt3dadd( -31.8832, -184.395, 7.1946, 0.44 ) }
    dend_48 { pt3dadd( -31.6251, -183.024, 5.76281, 0.44 ) }
    dend_48 { pt3dadd( -31.4988, -182.108, 4.83074, 0.44 ) }
    dend_48 { pt3dadd( -31.416, -180.738, 3.5525, 0.44 ) }
    dend_48 { pt3dadd( -31.3868, -178.882, 1.86559, 0.44 ) }
    dend_48 { pt3dadd( -31.3725, -178.006, 1.09273, 0.44 ) }
    dend_48 { pt3dadd( -31.3478, -177.254, 0.439736, 0.44 ) }
    dend_48 { pt3dadd( -31.3051, -176.609, -0.109979, 0.44 ) }
    dend_48 { pt3dadd( -31.1935, -175.41, -1.12706, 0.44 ) }
    dend_48 { pt3dadd( -31.0324, -173.785, -2.34451, 0.44 ) }
    dend_48 { pt3dadd( -30.9431, -173.108, -2.80731, 0.44 ) }
    dend_48 { pt3dadd( -30.7448, -172.238, -3.51446, 0.44 ) }
    dend_48 { pt3dadd( -30.4951, -171.431, -4.31009, 0.44 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -47.6016, -449.466, -43.617, 0.52 ) }
    dend_38 { pt3dadd( -47.6942, -450.563, -43.8328, 0.52 ) }
    dend_38 { pt3dadd( -47.7594, -451.321, -43.9489, 0.52 ) }
    dend_38 { pt3dadd( -47.8579, -452.376, -44.1198, 0.52 ) }
    dend_38 { pt3dadd( -47.9514, -453.641, -44.3258, 0.52 ) }
    dend_38 { pt3dadd( -47.9876, -454.331, -44.435, 0.52 ) }
    dend_38 { pt3dadd( -48.0143, -455.385, -44.6019, 0.52 ) }
    dend_38 { pt3dadd( -48.0217, -456.6, -44.7814, 0.52 ) }
    dend_38 { pt3dadd( -47.9744, -458.277, -45.0161, 0.52 ) }
    dend_38 { pt3dadd( -47.8847, -459.651, -45.1911, 0.52 ) }
    dend_38 { pt3dadd( -47.7588, -461.001, -45.3491, 0.52 ) }
    dend_38 { pt3dadd( -47.648, -462.092, -45.4536, 0.52 ) }
    dend_38 { pt3dadd( -47.4829, -463.597, -45.5636, 0.52 ) }
    dend_38 { pt3dadd( -47.3711, -464.65, -45.6053, 0.52 ) }
    dend_38 { pt3dadd( -47.2643, -465.836, -45.5987, 0.52 ) }
    dend_38 { pt3dadd( -47.2203, -466.647, -45.5763, 0.52 ) }
    dend_38 { pt3dadd( -47.2079, -467.895, -45.5141, 0.52 ) }
    dend_38 { pt3dadd( -47.2472, -468.655, -45.4561, 0.52 ) }
    dend_38 { pt3dadd( -47.3585, -469.633, -45.359, 0.52 ) }
    dend_38 { pt3dadd( -47.586, -471.005, -45.1435, 0.52 ) }
    dend_38 { pt3dadd( -47.7952, -472.081, -44.9369, 0.52 ) }
    dend_38 { pt3dadd( -47.9523, -472.788, -44.7878, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_38 { pt3dadd( -48.1362, -473.494, -44.6013, 0.52 ) }
    dend_38 { pt3dadd( -48.287, -473.998, -44.447, 0.52 ) }
    dend_38 { pt3dadd( -48.71, -475.273, -44.0521, 0.52 ) }
    dend_38 { pt3dadd( -49.0031, -476.137, -43.8003, 0.52 ) }
    dend_38 { pt3dadd( -49.3318, -477.137, -43.5513, 0.52 ) }
    dend_38 { pt3dadd( -49.5452, -477.852, -43.4178, 0.52 ) }
    dend_38 { pt3dadd( -49.7592, -478.639, -43.3215, 0.52 ) }
    dend_38 { pt3dadd( -49.9652, -479.433, -43.2723, 0.52 ) }
    dend_38 { pt3dadd( -50.1588, -480.18, -43.2744, 0.52 ) }
    dend_38 { pt3dadd( -50.3265, -480.871, -43.2778, 0.52 ) }
    dend_38 { pt3dadd( -50.5044, -481.727, -43.2834, 0.52 ) }
    dend_38 { pt3dadd( -50.667, -482.604, -43.2802, 0.52 ) }
    dend_38 { pt3dadd( -50.8007, -483.348, -43.2594, 0.52 ) }
    dend_38 { pt3dadd( -50.9337, -484.041, -43.2128, 0.52 ) }
    dend_38 { pt3dadd( -51.0406, -484.534, -43.1737, 0.52 ) }
    dend_38 { pt3dadd( -51.2526, -485.44, -43.0943, 0.52 ) }
    dend_38 { pt3dadd( -51.4187, -486.059, -43.0297, 0.52 ) }
    dend_38 { pt3dadd( -51.5755, -486.628, -42.9683, 0.52 ) }
    dend_38 { pt3dadd( -51.8458, -487.699, -42.8649, 0.52 ) }
    dend_38 { pt3dadd( -52.0449, -488.596, -42.7915, 0.52 ) }
    dend_38 { pt3dadd( -52.2298, -489.521, -42.7257, 0.52 ) }
    dend_38 { pt3dadd( -52.4897, -490.756, -42.6316, 0.52 ) }
    dend_38 { pt3dadd( -52.8385, -492.289, -42.4791, 0.52 ) }
    dend_38 { pt3dadd( -53.1185, -493.418, -42.3879, 0.52 ) }
    dend_38 { pt3dadd( -53.4237, -494.552, -42.3332, 0.52 ) }
    dend_38 { pt3dadd( -53.8951, -496.124, -42.3193, 0.52 ) }
    dend_38 { pt3dadd( -54.3387, -497.456, -42.3448, 0.52 ) }
    dend_38 { pt3dadd( -55.1404, -499.529, -42.415, 0.52 ) }
    dend_38 { pt3dadd( -55.8379, -501.071, -42.4767, 0.52 ) }
    dend_38 { pt3dadd( -56.4325, -502.246, -42.5272, 0.52 ) }
    dend_38 { pt3dadd( -56.9304, -503.169, -42.5745, 0.52 ) }
    dend_38 { pt3dadd( -57.3197, -503.865, -42.6134, 0.52 ) }
    dend_38 { pt3dadd( -57.7103, -504.582, -42.6458, 0.52 ) }
    dend_38 { pt3dadd( -57.9964, -505.129, -42.6456, 0.52 ) }
    dend_38 { pt3dadd( -58.4009, -505.932, -42.5523, 0.52 ) }
    dend_38 { pt3dadd( -58.7461, -506.662, -42.4279, 0.52 ) }
    dend_38 { pt3dadd( -59.181, -507.636, -42.2417, 0.52 ) }
    dend_38 { pt3dadd( -59.6026, -508.624, -42.0624, 0.52 ) }
    dend_38 { pt3dadd( -60.0071, -509.68, -41.8933, 0.52 ) }
    dend_38 { pt3dadd( -60.4726, -510.978, -41.7008, 0.52 ) }
    dend_38 { pt3dadd( -60.7963, -511.92, -41.5679, 0.52 ) }
    dend_38 { pt3dadd( -61.1464, -513.009, -41.4261, 0.52 ) }
    dend_38 { pt3dadd( -61.406, -513.835, -41.3534, 0.52 ) }
    dend_38 { pt3dadd( -61.8219, -515.186, -41.2496, 0.52 ) }
    dend_38 { pt3dadd( -61.952, -515.634, -41.2238, 0.52 ) }
    dend_38 { pt3dadd( -62.2087, -516.634, -41.1979, 0.52 ) }
    dend_38 { pt3dadd( -62.4187, -517.427, -41.1911, 0.52 ) }
    dend_38 { pt3dadd( -62.7507, -518.648, -41.2176, 0.52 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 48/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -47.6016, -449.466, -43.617, 0.52 ) }
    dend_37 { pt3dadd( -45.8853, -449.917, -43.8682, 0.52 ) }
    dend_37 { pt3dadd( -45.2724, -450.077, -43.958, 0.52 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 51/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -33.8461, -196.761, 10.6005, 0.44 ) }
    dend_61 { pt3dadd( -33.6947, -197.257, 9.58703, 0.44 ) }
    dend_61 { pt3dadd( -33.6024, -197.559, 8.96869, 0.44 ) }
    dend_61 { pt3dadd( -33.1937, -198.898, 6.23211, 0.44 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 55/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -33.8461, -196.761, 10.6005, 0.44 ) }
    dend_56 { pt3dadd( -34.0823, -198.252, 11.0694, 0.44 ) }
    dend_56 { pt3dadd( -34.154, -198.686, 11.1863, 0.44 ) }
    dend_56 { pt3dadd( -34.1955, -199.05, 11.3044, 0.44 ) }
    dend_56 { pt3dadd( -34.2239, -199.626, 11.4862, 0.44 ) }
    dend_56 { pt3dadd( -34.2518, -200.381, 11.73, 0.44 ) }
    dend_56 { pt3dadd( -34.2622, -201.048, 11.9733, 0.44 ) }
    dend_56 { pt3dadd( -34.273, -201.955, 12.3514, 0.44 ) }
    dend_56 { pt3dadd( -34.3276, -203.03, 12.8796, 0.44 ) }
    dend_56 { pt3dadd( -34.4107, -203.826, 13.3823, 0.44 ) }
    dend_56 { pt3dadd( -34.5222, -204.376, 13.8074, 0.44 ) }
    dend_56 { pt3dadd( -34.8398, -205.391, 14.8119, 0.44 ) }
    dend_56 { pt3dadd( -35.2517, -206.423, 16.0154, 0.44 ) }
    dend_56 { pt3dadd( -35.4511, -206.828, 16.5551, 0.44 ) }
    dend_56 { pt3dadd( -35.9834, -207.655, 17.7735, 0.44 ) }
    dend_56 { pt3dadd( -36.3369, -208.198, 18.6311, 0.44 ) }
    dend_56 { pt3dadd( -36.7472, -208.945, 19.7652, 0.44 ) }
    dend_56 { pt3dadd( -36.8537, -209.128, 20.0568, 0.44 ) }
    dend_56 { pt3dadd( -36.9449, -209.361, 20.3993, 0.44 ) }
    dend_56 { pt3dadd( -37.0028, -209.737, 20.8737, 0.44 ) }
    dend_56 { pt3dadd( -36.8851, -210.983, 21.8811, 0.44 ) }
    dend_56 { pt3dadd( -36.7648, -211.513, 22.2406, 0.44 ) }
    // Section: dend_54, id: dend_54, parent: dend_48 (entry count 77/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -30.4951, -171.431, -4.31009, 0.44 ) }
    dend_54 { pt3dadd( -29.3663, -171.833, -4.43335, 0.44 ) }
    dend_54 { pt3dadd( -28.4681, -172.154, -4.53143, 0.44 ) }
    dend_54 { pt3dadd( -27.2152, -172.6, -4.66824, 0.44 ) }
    dend_54 { pt3dadd( -26.7123, -172.779, -4.72316, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 82/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -30.4951, -171.431, -4.31009, 0.44 ) }
    dend_49 { pt3dadd( -30.5225, -170.461, -4.30402, 0.44 ) }
    dend_49 { pt3dadd( -30.5503, -169.48, -4.29788, 0.44 ) }
    dend_49 { pt3dadd( -30.5638, -169.002, -4.29489, 0.44 ) }
    dend_49 { pt3dadd( -30.5853, -168.244, -4.29015, 0.44 ) }
    dend_49 { pt3dadd( -30.6108, -167.339, -4.2845, 0.44 ) }
    dend_49 { pt3dadd( -30.633, -166.556, -4.27959, 0.44 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 89/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -62.7507, -518.648, -41.2176, 0.37 ) }
    dend_42 { pt3dadd( -63.8049, -519.588, -41.1733, 0.37 ) }
    dend_42 { pt3dadd( -64.6387, -520.343, -41.2613, 0.37 ) }
    dend_42 { pt3dadd( -65.5022, -521.179, -41.3883, 0.37 ) }
    dend_42 { pt3dadd( -66.1631, -521.813, -41.4795, 0.37 ) }
    dend_42 { pt3dadd( -66.6823, -522.266, -41.526, 0.37 ) }
    dend_42 { pt3dadd( -67.367, -522.813, -41.5628, 0.37 ) }
    dend_42 { pt3dadd( -68.5937, -523.613, -41.7275, 0.37 ) }
    dend_42 { pt3dadd( -69.6546, -524.114, -41.8585, 0.37 ) }
    dend_42 { pt3dadd( -70.3463, -524.319, -41.9254, 0.37 ) }
    dend_42 { pt3dadd( -71.7043, -524.548, -42.0354, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_42 { pt3dadd( -72.268, -524.592, -42.0425, 0.37 ) }
    dend_42 { pt3dadd( -74.6603, -524.607, -41.8984, 0.37 ) }
    dend_42 { pt3dadd( -75.5586, -524.559, -41.7785, 0.37 ) }
    dend_42 { pt3dadd( -77.606, -524.336, -41.4236, 0.37 ) }
    dend_42 { pt3dadd( -78.7814, -524.158, -41.1114, 0.37 ) }
    dend_42 { pt3dadd( -80.4552, -523.781, -40.5068, 0.37 ) }
    dend_42 { pt3dadd( -81.7902, -523.386, -39.898, 0.37 ) }
    dend_42 { pt3dadd( -82.7424, -523.018, -39.363, 0.37 ) }
    dend_42 { pt3dadd( -83.876, -522.508, -38.725, 0.37 ) }
    dend_42 { pt3dadd( -85.5954, -521.672, -37.773, 0.37 ) }
    dend_42 { pt3dadd( -87.1608, -520.857, -36.9756, 0.37 ) }
    dend_42 { pt3dadd( -88.061, -520.371, -36.6285, 0.37 ) }
    dend_42 { pt3dadd( -89.572, -519.539, -36.0793, 0.37 ) }
    dend_42 { pt3dadd( -92.5984, -517.902, -35.0846, 0.37 ) }
    dend_42 { pt3dadd( -94.4582, -516.932, -34.561, 0.37 ) }
    dend_42 { pt3dadd( -96.3004, -516.034, -34.1779, 0.37 ) }
    dend_42 { pt3dadd( -99.0984, -514.776, -33.6552, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 17/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -62.7507, -518.648, -41.2176, 0.52 ) }
    dend_39 { pt3dadd( -62.9859, -520.405, -41.0039, 0.52 ) }
    dend_39 { pt3dadd( -63.0402, -521.11, -40.9488, 0.52 ) }
    dend_39 { pt3dadd( -63.0472, -521.976, -40.913, 0.52 ) }
    dend_39 { pt3dadd( -62.9549, -522.832, -40.917, 0.52 ) }
    dend_39 { pt3dadd( -62.7569, -523.907, -40.9544, 0.52 ) }
    dend_39 { pt3dadd( -62.4052, -525.642, -41.1553, 0.52 ) }
    dend_39 { pt3dadd( -62.0744, -526.998, -41.4432, 0.52 ) }
    dend_39 { pt3dadd( -61.7349, -528.327, -41.7874, 0.52 ) }
    dend_39 { pt3dadd( -61.2808, -530.171, -42.3207, 0.52 ) }
    dend_39 { pt3dadd( -61.1123, -530.941, -42.5564, 0.52 ) }
    dend_39 { pt3dadd( -60.7866, -533.035, -43.2065, 0.52 ) }
    dend_39 { pt3dadd( -60.7457, -533.789, -43.4297, 0.52 ) }
    dend_39 { pt3dadd( -60.8675, -534.853, -43.7037, 0.52 ) }
    dend_39 { pt3dadd( -61.1922, -535.994, -43.9053, 0.52 ) }
    dend_39 { pt3dadd( -61.5259, -536.845, -43.9871, 0.52 ) }
    dend_39 { pt3dadd( -61.8857, -537.671, -44.0058, 0.52 ) }
    dend_39 { pt3dadd( -62.2425, -538.464, -43.9702, 0.52 ) }
    dend_39 { pt3dadd( -62.9055, -539.937, -43.9004, 0.52 ) }
    dend_39 { pt3dadd( -63.7283, -541.889, -43.8271, 0.52 ) }
    dend_39 { pt3dadd( -64.2529, -543.308, -43.8087, 0.52 ) }
    dend_39 { pt3dadd( -64.9067, -545.159, -43.7927, 0.52 ) }
    dend_39 { pt3dadd( -65.3022, -546.315, -43.7821, 0.52 ) }
    dend_39 { pt3dadd( -65.6667, -547.41, -43.7632, 0.52 ) }
    dend_39 { pt3dadd( -66.0097, -548.583, -43.7231, 0.52 ) }
    dend_39 { pt3dadd( -66.4299, -550.406, -43.7274, 0.52 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 43/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -36.7648, -211.513, 22.2406, 0.44 ) }
    dend_58 { pt3dadd( -36.2532, -212.893, 23.467, 0.44 ) }
    dend_58 { pt3dadd( -36.0754, -213.373, 23.8934, 0.44 ) }
    dend_58 { pt3dadd( -35.8891, -213.876, 24.34, 0.44 ) }
    dend_58 { pt3dadd( -35.7528, -214.244, 24.6668, 0.44 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 48/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -36.7648, -211.513, 22.2406, 0.44 ) }
    dend_57 { pt3dadd( -35.6611, -211.841, 22.9801, 0.44 ) }
    dend_57 { pt3dadd( -34.46, -212.198, 23.7849, 0.44 ) }
    dend_57 { pt3dadd( -33.8018, -212.393, 24.2259, 0.44 ) }
    dend_57 { pt3dadd( -33.3121, -212.538, 24.554, 0.44 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 53/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -30.633, -166.556, -4.27959, 0.44 ) }
    dend_53 { pt3dadd( -32.3065, -168.078, -3.66122, 0.44 ) }
    dend_53 { pt3dadd( -33.1729, -168.867, -3.34105, 0.44 ) }
    dend_53 { pt3dadd( -35.5197, -171.002, -2.47388, 0.44 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 57/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -30.633, -166.556, -4.27959, 0.44 ) }
    dend_50 { pt3dadd( -30.0287, -165.617, -4.97945, 0.44 ) }
    dend_50 { pt3dadd( -28.5987, -163.063, -6.69393, 0.44 ) }
    dend_50 { pt3dadd( -28.2607, -162.362, -7.10047, 0.44 ) }
    dend_50 { pt3dadd( -27.9532, -161.632, -7.48656, 0.44 ) }
    dend_50 { pt3dadd( -27.683, -160.813, -7.87984, 0.44 ) }
    dend_50 { pt3dadd( -27.4443, -159.863, -8.33365, 0.44 ) }
    dend_50 { pt3dadd( -27.0074, -157.386, -9.39475, 0.44 ) }
    dend_50 { pt3dadd( -26.8631, -156.018, -9.86907, 0.44 ) }
    dend_50 { pt3dadd( -26.776, -155.289, -10.1362, 0.44 ) }
    dend_50 { pt3dadd( -26.5451, -153.681, -10.791, 0.44 ) }
    dend_50 { pt3dadd( -26.1528, -151.205, -11.8376, 0.44 ) }
    dend_50 { pt3dadd( -25.978, -150.163, -12.273, 0.44 ) }
    dend_50 { pt3dadd( -25.7294, -148.749, -12.8184, 0.44 ) }
    dend_50 { pt3dadd( -25.3789, -147.169, -13.4702, 0.44 ) }
    dend_50 { pt3dadd( -24.9078, -145.447, -14.1785, 0.44 ) }
    dend_50 { pt3dadd( -24.5096, -144.295, -14.6291, 0.44 ) }
    dend_50 { pt3dadd( -24.1814, -143.453, -14.9178, 0.44 ) }
    dend_50 { pt3dadd( -23.8103, -142.609, -15.2301, 0.44 ) }
    dend_50 { pt3dadd( -22.9588, -140.845, -15.8842, 0.44 ) }
    dend_50 { pt3dadd( -22.5815, -140.081, -16.1345, 0.44 ) }
    dend_50 { pt3dadd( -22.0976, -139.239, -16.3758, 0.44 ) }
    dend_50 { pt3dadd( -21.6545, -138.542, -16.5803, 0.44 ) }
    dend_50 { pt3dadd( -20.6461, -136.985, -17.0124, 0.44 ) }
    dend_50 { pt3dadd( -20.386, -136.558, -17.1192, 0.44 ) }
    dend_50 { pt3dadd( -20.0856, -135.98, -17.2256, 0.44 ) }
    dend_50 { pt3dadd( -19.7996, -135.232, -17.3583, 0.44 ) }
    dend_50 { pt3dadd( -19.6138, -134.445, -17.4746, 0.44 ) }
    dend_50 { pt3dadd( -19.4609, -133.604, -17.5899, 0.44 ) }
    dend_50 { pt3dadd( -19.3388, -133.017, -17.7147, 0.44 ) }
    dend_50 { pt3dadd( -19.1583, -132.327, -17.9111, 0.44 ) }
    dend_50 { pt3dadd( -18.8836, -131.387, -18.2125, 0.44 ) }
    dend_50 { pt3dadd( -18.5838, -130.394, -18.5398, 0.44 ) }
    dend_50 { pt3dadd( -18.1141, -129.045, -18.9433, 0.44 ) }
    dend_50 { pt3dadd( -17.0692, -126.494, -19.7079, 0.44 ) }
    dend_50 { pt3dadd( -16.6774, -125.636, -19.9585, 0.44 ) }
    dend_50 { pt3dadd( -16.2001, -124.689, -20.2522, 0.44 ) }
    dend_50 { pt3dadd( -15.5331, -123.447, -20.633, 0.44 ) }
    dend_50 { pt3dadd( -14.5488, -121.675, -21.1226, 0.44 ) }
    dend_50 { pt3dadd( -13.5688, -119.903, -21.5525, 0.44 ) }
    dend_50 { pt3dadd( -12.9453, -118.801, -21.7807, 0.44 ) }
    dend_50 { pt3dadd( -12.0129, -117.244, -22.1453, 0.44 ) }
    dend_50 { pt3dadd( -11.3384, -116.195, -22.4257, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_50 { pt3dadd( -10.4729, -114.946, -22.8151, 0.44 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -66.4299, -550.406, -43.7274, 0.52 ) }
    dend_41 { pt3dadd( -66.6419, -552.709, -43.5145, 0.52 ) }
    dend_41 { pt3dadd( -66.7705, -554.107, -43.3853, 0.52 ) }
    dend_41 { pt3dadd( -66.8992, -555.504, -43.256, 0.52 ) }
    dend_41 { pt3dadd( -67.0348, -556.978, -43.1198, 0.52 ) }
    dend_41 { pt3dadd( -67.2298, -559.097, -42.924, 0.52 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 7/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -66.4299, -550.406, -43.7274, 0.52 ) }
    dend_40 { pt3dadd( -65.474, -552.768, -44.0654, 0.52 ) }
    dend_40 { pt3dadd( -64.9465, -554.041, -44.1595, 0.52 ) }
    dend_40 { pt3dadd( -64.3398, -555.423, -44.1154, 0.52 ) }
    dend_40 { pt3dadd( -63.6354, -556.921, -43.9944, 0.52 ) }
    dend_40 { pt3dadd( -62.9257, -558.431, -43.8724, 0.52 ) }
    dend_40 { pt3dadd( -62.4165, -559.515, -43.7849, 0.52 ) }
    dend_40 { pt3dadd( -61.7866, -560.752, -43.565, 0.52 ) }
    dend_40 { pt3dadd( -60.6981, -562.802, -43.1004, 0.52 ) }
    dend_40 { pt3dadd( -59.965, -564.088, -42.7203, 0.52 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 17/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -35.7528, -214.244, 24.6668, 0.44 ) }
    dend_60 { pt3dadd( -35.6816, -215.37, 25.424, 0.44 ) }
    dend_60 { pt3dadd( -35.6806, -216.74, 26.2325, 0.44 ) }
    dend_60 { pt3dadd( -35.6866, -217.485, 26.6252, 0.44 ) }
    dend_60 { pt3dadd( -35.665, -218.838, 27.2637, 0.44 ) }
    dend_60 { pt3dadd( -35.568, -220.591, 28.1145, 0.44 ) }
    dend_60 { pt3dadd( -35.4487, -221.817, 28.6947, 0.44 ) }
    dend_60 { pt3dadd( -35.3504, -222.74, 29.0684, 0.44 ) }
    dend_60 { pt3dadd( -35.2613, -223.421, 29.2983, 0.44 ) }
    dend_60 { pt3dadd( -35.1333, -224.226, 29.5497, 0.44 ) }
    dend_60 { pt3dadd( -34.82, -226.144, 30.1585, 0.44 ) }
    dend_60 { pt3dadd( -34.7067, -227.048, 30.4375, 0.44 ) }
    dend_60 { pt3dadd( -34.6905, -227.935, 30.753, 0.44 ) }
    dend_60 { pt3dadd( -34.7986, -228.88, 31.1076, 0.44 ) }
    dend_60 { pt3dadd( -34.9941, -229.74, 31.412, 0.44 ) }
    dend_60 { pt3dadd( -35.4936, -231.511, 32.0602, 0.44 ) }
    dend_60 { pt3dadd( -35.7577, -232.283, 32.3353, 0.44 ) }
    dend_60 { pt3dadd( -36.316, -233.716, 32.8817, 0.44 ) }
    dend_60 { pt3dadd( -36.6371, -234.518, 33.1907, 0.44 ) }
    dend_60 { pt3dadd( -37.0667, -235.733, 33.6248, 0.44 ) }
    dend_60 { pt3dadd( -37.7734, -238.277, 34.3839, 0.44 ) }
    dend_60 { pt3dadd( -37.9361, -239.016, 34.5496, 0.44 ) }
    dend_60 { pt3dadd( -38.1754, -240.335, 34.805, 0.44 ) }
    dend_60 { pt3dadd( -38.2936, -241.053, 34.9149, 0.44 ) }
    dend_60 { pt3dadd( -38.4834, -242.314, 35.1277, 0.44 ) }
    dend_60 { pt3dadd( -38.6577, -243.601, 35.3423, 0.44 ) }
    dend_60 { pt3dadd( -38.8433, -245.02, 35.5513, 0.44 ) }
    dend_60 { pt3dadd( -38.9699, -246.032, 35.7196, 0.44 ) }
    dend_60 { pt3dadd( -39.3512, -248.414, 36.1734, 0.44 ) }
    dend_60 { pt3dadd( -39.7948, -250.346, 36.5912, 0.44 ) }
    dend_60 { pt3dadd( -40.0257, -251.116, 36.7753, 0.44 ) }
    dend_60 { pt3dadd( -40.3981, -252.078, 36.9828, 0.44 ) }
    dend_60 { pt3dadd( -40.8078, -252.916, 37.1341, 0.44 ) }
    dend_60 { pt3dadd( -41.6041, -254.181, 37.3074, 0.44 ) }
    dend_60 { pt3dadd( -42.1891, -254.952, 37.3662, 0.44 ) }
    dend_60 { pt3dadd( -42.6423, -255.54, 37.3912, 0.44 ) }
    dend_60 { pt3dadd( -43.8262, -257.174, 37.4883, 0.44 ) }
    dend_60 { pt3dadd( -44.6007, -258.372, 37.5667, 0.44 ) }
    dend_60 { pt3dadd( -45.2788, -259.616, 37.6487, 0.44 ) }
    dend_60 { pt3dadd( -45.9124, -261.081, 37.7454, 0.44 ) }
    dend_60 { pt3dadd( -46.4954, -262.863, 37.8644, 0.44 ) }
    dend_60 { pt3dadd( -46.8071, -264.109, 37.9568, 0.44 ) }
    dend_60 { pt3dadd( -46.9762, -265.187, 38.0441, 0.44 ) }
    dend_60 { pt3dadd( -47.1466, -266.586, 38.1737, 0.44 ) }
    dend_60 { pt3dadd( -47.3373, -267.781, 38.3111, 0.44 ) }
    dend_60 { pt3dadd( -47.6627, -269.044, 38.4967, 0.44 ) }
    dend_60 { pt3dadd( -48.0547, -270.321, 38.6881, 0.44 ) }
    dend_60 { pt3dadd( -48.4343, -271.324, 38.8767, 0.44 ) }
    dend_60 { pt3dadd( -49.2079, -272.871, 39.2546, 0.44 ) }
    dend_60 { pt3dadd( -50.2671, -274.414, 39.76, 0.44 ) }
    dend_60 { pt3dadd( -50.9342, -275.141, 40.0724, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 68/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -35.7528, -214.244, 24.6668, 0.44 ) }
    dend_59 { pt3dadd( -36.7201, -214.816, 24.4184, 0.44 ) }
    dend_59 { pt3dadd( -37.4077, -215.223, 24.2418, 0.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 71/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -10.4729, -114.946, -22.8151, 0.44 ) }
    dend_52 { pt3dadd( -12.1015, -113.827, -24.5634, 0.44 ) }
    dend_52 { pt3dadd( -12.8403, -113.32, -25.3565, 0.44 ) }
    dend_52 { pt3dadd( -13.4041, -112.933, -25.9616, 0.44 ) }
    dend_52 { pt3dadd( -14.4415, -112.22, -27.0753, 0.44 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 76/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -10.4729, -114.946, -22.8151, 0.44 ) }
    dend_51 { pt3dadd( -9.89388, -112.97, -22.9633, 0.44 ) }
    dend_51 { pt3dadd( -9.33577, -111.064, -23.1062, 0.44 ) }
    dend_51 { pt3dadd( -8.6695, -108.79, -23.2768, 0.44 ) }
    dend_51 { pt3dadd( -8.34809, -107.693, -23.3591, 0.44 ) }
    dend_51 { pt3dadd( -8.08187, -106.784, -23.4273, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_75, dend_30, dend_16, dend_1, dend_89, dend_76, dend_72, dend_31, dend_28, dend_17, dend_13, dend_2, dend_91, dend_90, dend_78, dend_77, dend_74, dend_73, dend_67, dend_32, dend_27, dend_18, dend_15, dend_14, dend_10, dend_3, dend_93, dend_92, dend_80, dend_79, dend_71, dend_68, dend_64, dend_33, dend_24, dend_19, dend_12, dend_11, dend_9, dend_4, dend_88, dend_81, dend_70, dend_69, dend_66, dend_65, dend_45, dend_34, dend_26, dend_25, dend_21, dend_20, dend_6, dend_5, dend_83, dend_82, dend_63, dend_46, dend_44, dend_35, dend_23, dend_22, dend_8, dend_7, dend_85, dend_84, dend_62, dend_47, dend_43, dend_36, dend_87, dend_86, dend_55, dend_48, dend_38, dend_37, dend_61, dend_56, dend_54, dend_49, dend_42, dend_39, dend_58, dend_57, dend_53, dend_50, dend_41, dend_40, dend_60, dend_59, dend_52, dend_51]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_75, dend_30, dend_16, dend_1, dend_89, dend_76, dend_72, dend_31, dend_28, dend_17, dend_13, dend_2, dend_91, dend_90, dend_78, dend_77, dend_74, dend_73, dend_67, dend_32, dend_27, dend_18, dend_15, dend_14, dend_10, dend_3, dend_93, dend_92, dend_80, dend_79, dend_71, dend_68, dend_64, dend_33, dend_24, dend_19, dend_12, dend_11, dend_9, dend_4, dend_88, dend_81, dend_70, dend_69, dend_66, dend_65, dend_45, dend_34, dend_26, dend_25, dend_21, dend_20, dend_6, dend_5, dend_83, dend_82, dend_63, dend_46, dend_44, dend_35, dend_23, dend_22, dend_8, dend_7, dend_85, dend_84, dend_62, dend_47, dend_43, dend_36, dend_87, dend_86, dend_55, dend_48, dend_38, dend_37, dend_61, dend_56, dend_54, dend_49, dend_42, dend_39, dend_58, dend_57, dend_53, dend_50, dend_41, dend_40, dend_60, dend_59, dend_52, dend_51]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_89 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_72 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_90 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_74 OneSecGrp_SectionRef_22.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_73 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_27 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_71 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_68 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_33 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_24 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_19 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_9 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_4 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_81 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_70 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_45 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_26 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_6 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_46 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_44 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_35 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_8 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_85 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_36 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_38 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_42 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_50 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_60 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_75 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_30 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_76 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_77 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_78 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_16 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_13 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_79 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_80 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_10 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_17 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_88 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_31 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_15 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_14 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_12 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_67 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_18 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_32 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_91 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_93 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_64 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_65 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_82 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_92 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_84 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_66 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_69 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_5 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_86 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_87 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_25 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_7 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_34 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_20 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_21 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_23 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_63 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_22 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_62 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_47 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_55 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_61 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_43 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_56 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_58 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_57 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_59 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_48 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_54 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_49 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_53 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_37 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_52 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_51 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_39 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_41 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_40 OneSecGrp_SectionRef_93.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, axon_1, axon_1, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_34, dend_34, dend_34, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_63, dend_63, dend_63, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_62, dend_62, dend_62, dend_62, dend_62, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_89 nseg = 3
    dend_72 nseg = 11
    dend_28 nseg = 5
    dend_90 nseg = 5
    dend_74 nseg = 3
    dend_73 nseg = 5
    dend_27 nseg = 13
    dend_3 nseg = 3
    dend_71 nseg = 5
    dend_68 nseg = 3
    dend_33 nseg = 11
    dend_24 nseg = 5
    dend_19 nseg = 11
    dend_11 nseg = 5
    dend_9 nseg = 5
    dend_4 nseg = 3
    dend_81 nseg = 3
    dend_70 nseg = 3
    dend_45 nseg = 3
    dend_26 nseg = 3
    dend_6 nseg = 5
    dend_46 nseg = 3
    dend_44 nseg = 3
    dend_35 nseg = 5
    dend_8 nseg = 5
    dend_85 nseg = 3
    dend_36 nseg = 3
    dend_38 nseg = 3
    dend_42 nseg = 3
    dend_50 nseg = 3
    dend_60 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_DBC_65305c1be2_0_0


