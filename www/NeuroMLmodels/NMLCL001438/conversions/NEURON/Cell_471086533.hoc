// Cell: Cell_471086533
/*
{
  "id" : "Cell_471086533",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "363.733, 371.914, 38.64, 13.389", "370.427, 371.914, 38.64, 13.389", "377.122, 371.914, 38.64, 13.389" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "370.427, 371.914, 38.64, 1.0", "376.269, 385.73, 38.64, 1.0", "382.11, 399.546, 38.64, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999626559115701
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "370.373, 365.074, 43.9631, 0.5338", "370.118, 364.025, 43.1315, 0.6102", "370.059, 362.928, 42.5236, 0.6102", "370.6, 362.02, 42.0008, 0.5084", "371.721, 361.897, 42.0056, 0.4576", "372.824, 362.163, 42.037, 0.4068", "373.953, 362.265, 42.236, 0.4322", "375.0, 362.019, 43.0212, 0.4322", "375.546, 361.06, 43.0816, 0.5084", "375.882, 359.987, 42.8991, 0.6102", "375.951, 359.026, 44.3195, 0.788", "376.155, 358.004, 45.3936, 1.144" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999626559115701
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "363.874, 371.91, 35.9864, 0.3814", "362.77, 371.889, 35.3144, 0.5084", "361.645, 371.739, 35.2876, 0.5592", "360.59, 371.296, 35.3251, 0.5592", "359.485, 371.095, 35.5387, 0.5592", "358.487, 371.506, 36.2863, 0.5848", "357.598, 372.223, 36.3972, 0.6356", "356.563, 372.704, 36.3821, 0.661", "355.435, 372.857, 36.279, 0.7372", "354.345, 373.002, 35.6418, 0.7118", "353.32, 373.475, 35.2839, 0.7372", "352.288, 373.96, 35.3024, 0.7118", "351.186, 374.237, 35.4197, 0.8136", "350.11, 374.435, 36.0682, 0.839", "349.089, 374.925, 36.1796, 0.839", "348.109, 375.424, 35.4777, 0.788", "347.102, 375.947, 35.3413, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999626559115701
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "375.303, 375.828, 36.6626, 0.305", "376.373, 376.196, 36.4, 0.4068", "377.479, 375.924, 36.4, 0.483", "378.576, 375.896, 36.4, 0.5592" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999626559115701
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "373.962, 378.237, 37.5206, 0.5592", "374.652, 379.143, 37.5225, 0.6102", "375.357, 380.043, 37.5315, 0.6356", "376.146, 380.87, 37.567, 0.7118", "376.899, 381.728, 37.7171, 0.8136", "377.352, 382.717, 38.4026, 0.839", "377.758, 383.762, 38.6145, 0.788", "378.518, 384.614, 38.526, 0.6356", "379.23, 385.472, 38.0545, 0.5338", "380.108, 386.138, 37.7938, 0.4576", "381.145, 386.53, 38.1508, 0.5338", "382.178, 386.977, 37.7885, 0.6102", "383.219, 387.313, 38.5034, 0.7118", "384.332, 387.553, 38.64, 0.7118", "385.426, 387.866, 38.6408, 0.7118", "386.56, 388.008, 38.645, 0.6864", "387.646, 388.341, 38.6708, 0.6864", "388.731, 388.689, 38.7996, 0.7372", "390.046, 388.912, 39.0373, 0.7626", "391.096, 389.238, 39.6553, 0.7626", "392.125, 389.723, 39.7538, 0.661", "393.186, 390.137, 39.7242, 0.5848", "394.319, 390.217, 39.5175, 0.5338", "395.358, 390.21, 38.4292, 0.5338", "396.434, 390.164, 37.6622, 0.483", "397.438, 389.833, 38.4846, 0.4576", "398.572, 389.831, 38.6386, 0.4576", "399.638, 390.189, 38.6333, 0.5848", "400.535, 390.898, 38.61, 0.7118", "401.544, 391.428, 38.4773, 0.9152" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999626559115701
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "373.165, 366.008, 32.363, 0.3814", "373.148, 364.884, 31.9203, 0.5338", "373.014, 363.751, 31.9222, 0.661", "372.449, 362.762, 31.932, 0.7626", "371.981, 361.391, 32.0466, 0.9152" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999626559115701
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "382.11, 399.546, 38.64, 1.0", "387.951, 413.362, 38.64, 1.0", "393.793, 427.178, 38.64, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "376.155, 358.004, 45.3936, 1.144", "376.469, 359.561, 48.676, 0.5592", "377.28, 360.386, 51.6715, 0.4068", "378.038, 360.653, 51.6715, 0.356", "378.927, 360.234, 54.6669, 0.3814", "379.439, 360.641, 59.9091, 0.3304", "382.316, 362.598, 63.6532, 0.305", "384.28, 363.691, 63.6532, 0.305", "389.173, 366.152, 66.6487, 0.4576" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "376.155, 358.004, 45.3936, 1.144", "376.58, 357.173, 46.9588, 0.6864", "377.453, 356.523, 47.0935, 0.5338", "378.492, 356.428, 46.0368, 0.5084", "379.523, 356.533, 46.2944, 0.5848", "380.591, 356.165, 46.648, 0.6864", "381.586, 355.693, 47.3099, 0.661", "382.581, 355.156, 47.6221, 0.6102", "383.566, 354.584, 47.7173, 0.5338", "384.632, 354.302, 48.3308, 0.5592", "385.533, 353.624, 48.7206, 0.5848", "386.372, 352.847, 48.7225, 0.5848", "387.324, 352.23, 48.7326, 0.5592", "388.385, 351.814, 48.8018, 0.483", "389.365, 351.272, 49.2117, 0.483", "390.147, 350.514, 49.8106, 0.483", "390.714, 349.522, 49.8523, 0.5848", "391.449, 348.649, 49.8982, 0.6356", "392.336, 347.957, 50.1936, 0.6864", "393.19, 347.272, 50.8138, 0.7118", "394.026, 346.565, 50.1679, 0.7118", "394.971, 345.949, 49.8859, 0.7372", "395.906, 345.3, 50.0713, 0.6864", "396.787, 344.656, 50.6937, 0.6356", "397.74, 344.105, 50.0567, 0.5848", "398.673, 343.456, 49.877, 0.6356", "399.565, 342.746, 50.024, 0.9152" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "347.102, 375.947, 35.3413, 0.6864", "346.34, 376.353, 35.5174, 0.4576", "345.509, 377.033, 36.295, 0.4322", "344.719, 377.856, 36.4165, 0.4322", "343.759, 378.465, 36.4848, 0.483", "342.718, 378.863, 36.9323, 0.5084", "341.691, 379.276, 37.5578, 0.5084", "340.671, 379.711, 37.9977, 0.4576", "339.647, 380.072, 38.6422, 0.4576", "338.629, 380.554, 38.6602, 0.5338", "337.639, 381.117, 38.7887, 0.6356", "336.783, 381.728, 39.6838, 0.6102", "335.938, 382.286, 40.7912, 0.5338", "334.81, 382.287, 40.8758, 0.5084", "333.811, 381.742, 40.8579, 0.5848", "332.697, 381.573, 40.7322, 0.661", "331.632, 381.859, 40.2276, 0.6356", "330.737, 382.375, 41.3126, 0.5848", "329.711, 382.743, 41.9978, 0.5338", "328.596, 382.994, 42.0042, 0.5592", "327.526, 383.375, 42.0249, 0.661", "326.464, 383.779, 42.1484, 0.788", "325.372, 383.905, 42.8408, 0.8644", "324.303, 384.264, 43.076, 0.8136", "323.273, 384.698, 42.7328, 0.6864", "322.277, 385.113, 42.7865, 0.6356", "321.175, 384.958, 43.1586, 0.6356", "320.064, 384.728, 43.351, 0.7372", "318.955, 384.732, 43.6845, 0.7372", "317.839, 384.756, 43.1043, 0.6864", "316.721, 384.938, 42.9503, 0.5338", "315.699, 385.362, 42.3279, 0.4576", "314.688, 385.274, 42.9562, 0.4322", "313.621, 385.18, 43.7455, 0.4576", "312.567, 385.137, 44.5108, 0.483", "311.854, 384.727, 43.12, 0.5592", "310.744, 385.013, 44.2403, 0.6356", "309.622, 385.221, 44.242, 0.661", "308.512, 385.443, 44.2518, 0.6356", "307.392, 385.646, 44.3212, 0.6356", "306.276, 385.663, 44.8216, 0.661", "305.168, 385.773, 45.3673, 0.6864", "304.072, 386.074, 45.4065, 0.6356", "302.932, 386.087, 45.6364, 0.5848", "301.844, 386.022, 46.4444, 0.5084", "300.755, 385.716, 46.7239, 0.5338", "299.672, 385.613, 47.5241, 0.5848", "298.559, 385.427, 47.8139, 0.6864", "297.497, 385.174, 48.5696, 0.7372", "296.365, 385.073, 48.7794, 0.6864", "295.341, 384.606, 49.0442, 0.6102", "294.38, 384.286, 50.2082, 0.5084", "293.296, 384.27, 50.9648, 0.5338", "292.152, 384.272, 50.995, 0.5084", "291.011, 384.284, 51.175, 0.483", "289.908, 384.369, 51.4503, 0.356", "288.904, 384.731, 50.5005, 0.3304", "287.861, 385.13, 50.1816, 0.3814", "286.824, 385.2, 51.2462, 0.483", "285.701, 385.289, 50.7906, 0.5084", "284.697, 385.634, 50.6369, 0.483", "283.649, 385.646, 51.7504, 0.483", "282.529, 385.663, 52.2962, 0.5084", "281.44, 385.757, 53.0662, 0.5338", "280.358, 386.106, 53.2014, 0.5338", "277.401, 387.005, 53.1692, 0.5848", "274.677, 388.351, 53.1692, 0.6102", "273.483, 389.475, 53.1692, 0.5848", "269.316, 390.996, 54.6669, 0.5084", "264.611, 392.577, 56.1646, 0.4068", "262.318, 393.256, 57.6624, 0.305", "262.148, 394.023, 57.6624, 0.2796", "261.807, 394.749, 57.6624, 0.2796", "260.911, 395.346, 57.6624, 0.305", "253.55, 398.687, 59.1601, 0.305", "246.992, 402.555, 62.1555, 0.3304", "244.965, 403.203, 62.1555, 0.4576" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "347.102, 375.947, 35.3413, 0.6864", "346.208, 375.791, 33.2433, 0.7372", "345.106, 375.571, 33.0361, 0.7118", "343.962, 375.548, 33.0134, 0.6356", "342.84, 375.383, 32.8625, 0.5084", "341.819, 374.971, 32.1779, 0.483", "340.722, 374.892, 31.92, 0.483", "339.602, 374.811, 31.92, 0.5592", "338.481, 374.713, 31.9189, 0.5592", "337.451, 374.237, 31.9133, 0.5338", "336.418, 373.779, 31.8805, 0.4576", "335.28, 373.745, 31.6744, 0.4322", "334.186, 373.742, 30.898, 0.4068", "333.046, 373.731, 30.7874, 0.4322", "331.906, 373.644, 30.7054, 0.4068", "330.999, 373.12, 29.9802, 0.4322", "330.569, 372.149, 29.2244, 0.4576" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "378.576, 375.896, 36.4, 0.5592", "379.623, 376.346, 36.3994, 0.5848", "380.745, 376.557, 36.3955, 0.6864" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "401.544, 391.428, 38.4773, 0.9152", "402.229, 392.275, 38.5848, 0.6356", "403.016, 393.061, 38.085, 0.5338", "403.843, 393.66, 38.7386, 0.4068", "404.66, 393.147, 40.115, 0.4068", "405.626, 393.425, 41.0634, 0.4322", "406.416, 394.131, 41.9773, 0.5338", "407.171, 394.814, 43.1614, 0.5338", "407.908, 395.595, 44.0465, 0.5084", "408.856, 396.205, 44.2688, 0.4322", "409.867, 396.714, 44.4217, 0.4322", "410.727, 397.376, 45.1926, 0.4068", "411.835, 397.618, 45.1091, 0.4576", "412.689, 398.13, 44.0877, 0.483", "413.22, 398.991, 42.8764, 0.5084", "413.548, 399.994, 42.9335, 0.483", "413.974, 400.982, 43.7811, 0.483", "414.754, 401.663, 44.7756, 0.5338", "415.607, 402.003, 46.3674, 0.5338", "416.551, 402.537, 47.1808, 0.4576", "417.535, 402.937, 47.9276, 0.3304", "418.018, 403.489, 49.84, 0.2542", "421.352, 404.47, 57.6624, 0.2288", "429.329, 404.945, 60.6578, 0.2288", "430.438, 405.053, 60.6578, 0.2542", "430.888, 405.303, 63.6532, 0.2796", "432.296, 407.711, 67.3977, 0.305", "433.725, 408.611, 65.9, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "401.544, 391.428, 38.4773, 0.9152", "402.847, 391.589, 37.4937, 0.5592", "403.936, 391.573, 36.8771, 0.4576", "405.034, 391.452, 37.5239, 0.483", "406.155, 391.517, 37.8308, 0.5848", "407.232, 391.402, 38.6028, 0.6356", "408.335, 391.144, 38.8335, 0.6356", "409.447, 391.15, 39.2787, 0.6102", "410.556, 391.23, 38.6781, 0.6356", "411.648, 391.553, 38.64, 0.6864", "412.786, 391.654, 38.64, 0.7626", "413.867, 391.979, 38.6403, 0.839", "414.891, 392.465, 38.6414, 0.8898", "416.033, 392.51, 38.6492, 0.839", "417.176, 392.532, 38.705, 0.6864", "418.266, 392.748, 39.1468, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "371.981, 361.391, 32.0466, 0.9152", "370.972, 359.999, 31.2861, 0.5848", "370.508, 359.031, 32.2269, 0.6102", "370.105, 358.069, 33.3284, 0.6864" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "371.981, 361.391, 32.0466, 0.9152", "372.095, 359.764, 32.769, 0.5848", "372.663, 358.826, 32.1073, 0.4576", "373.508, 358.074, 31.8399, 0.4068", "374.539, 358.097, 31.2883, 0.483", "375.43, 358.436, 29.8127, 0.5592", "376.54, 358.424, 29.5341, 0.6102", "377.551, 357.953, 29.0181, 0.5592", "378.566, 357.499, 29.4963, 0.5338", "379.682, 357.358, 29.6797, 0.5084", "380.753, 357.734, 29.6778, 0.5338", "381.787, 358.213, 29.668, 0.5338", "382.86, 358.575, 29.6044, 0.5338", "383.964, 358.471, 29.1197, 0.5848", "384.85, 357.824, 28.5667, 0.5848", "385.456, 356.859, 28.4575, 0.5592", "386.13, 356.025, 27.8152, 0.4576", "386.904, 355.79, 25.8756, 0.4322", "387.941, 355.436, 25.5105, 0.4068", "388.832, 355.181, 26.9643, 0.4322", "389.757, 354.937, 28.2436, 0.4576", "390.767, 354.669, 27.34, 0.5338", "391.464, 354.01, 25.8905, 0.5848", "392.16, 353.35, 24.4538, 0.6102", "393.093, 352.721, 24.1839, 0.661", "394.098, 352.245, 24.6806, 0.7118", "395.162, 351.947, 25.2204, 0.7372", "396.27, 352.203, 25.382, 0.6864", "397.339, 352.196, 24.7162, 0.661", "398.412, 351.985, 24.064, 0.661", "399.318, 351.293, 24.0066, 0.6864", "400.168, 350.532, 23.8045, 0.6864", "401.093, 349.942, 23.0527, 0.6864", "402.003, 349.253, 22.8186, 0.6864", "403.679, 349.105, 21.8557, 0.7372", "404.747, 349.461, 21.6874, 0.9152" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "399.565, 342.746, 50.024, 0.9152", "399.523, 342.208, 49.28, 0.3304", "399.905, 342.133, 49.28, 0.5084", "400.514, 341.827, 49.28, 0.305", "401.01, 341.522, 49.28, 0.2542", "401.582, 341.293, 49.28, 0.2288", "402.345, 341.255, 49.28, 0.2288", "402.993, 341.103, 49.28, 0.2288", "403.49, 340.798, 49.28, 0.2288", "403.984, 340.492, 49.28, 0.2542", "404.518, 340.226, 49.28, 0.2796", "405.001, 339.908, 49.28, 0.305", "405.51, 339.616, 49.28, 0.2796", "406.234, 339.539, 49.28, 0.2542", "406.921, 339.425, 49.28, 0.2288", "407.48, 339.183, 49.28, 0.2288", "408.065, 338.967, 49.28, 0.2542", "408.522, 338.624, 49.28, 0.305", "409.005, 338.306, 49.28, 0.356", "409.654, 338.154, 49.28, 0.4068", "410.227, 337.925, 49.28, 0.4576", "410.594, 337.493, 49.28, 0.5084", "411.141, 337.239, 49.28, 0.483", "411.624, 336.921, 49.28, 0.4576", "412.107, 336.603, 49.28, 0.4576", "412.717, 336.413, 49.28, 0.5338", "413.302, 336.196, 49.28, 0.5084", "414.014, 336.107, 49.28, 0.4322", "414.814, 336.107, 49.28, 0.305", "415.615, 336.107, 49.28, 0.2542", "416.416, 336.107, 49.28, 0.2288", "417.001, 335.891, 49.28, 0.2542", "417.421, 335.51, 49.28, 0.305", "417.865, 335.154, 49.28, 0.3814", "418.246, 334.734, 49.28, 0.4068", "418.602, 334.289, 49.28, 0.3814", "418.983, 333.87, 49.28, 0.356", "419.48, 333.565, 49.28, 0.4068", "420.0, 333.285, 49.28, 0.5084", "420.421, 332.904, 49.28, 0.5848", "420.878, 332.561, 49.28, 0.6102", "421.451, 332.332, 49.28, 0.661", "421.957, 332.039, 49.28, 0.6864", "423.026, 331.506, 49.28, 0.6102", "423.547, 331.226, 49.28, 0.5848", "424.208, 331.086, 49.28, 0.5848", "424.882, 330.73, 49.28, 0.6102", "425.454, 330.73, 49.28, 0.5084", "426.102, 330.578, 49.28, 0.4322", "426.61, 330.285, 49.28, 0.356", "427.207, 330.082, 49.28, 0.3304", "427.779, 329.853, 49.28, 0.2796", "428.085, 329.815, 49.28, 0.2796", "428.632, 329.676, 49.28, 0.3814", "429.522, 329.193, 49.28, 0.661", "430.564, 328.748, 49.56, 0.5592", "431.211, 328.595, 49.56, 0.5084", "431.708, 328.29, 49.56, 0.5338", "432.228, 328.01, 49.56, 0.483", "432.878, 327.858, 49.56, 0.4322", "433.538, 327.718, 49.56, 0.4068", "434.262, 327.642, 49.56, 0.4068", "435.063, 327.642, 49.56, 0.3814", "435.737, 327.515, 49.56, 0.305", "436.284, 327.261, 49.56, 0.2542", "436.779, 326.955, 49.56, 0.2288", "437.339, 326.714, 49.56, 0.2288", "437.923, 326.498, 49.56, 0.2288", "438.495, 326.269, 49.56, 0.2288", "439.067, 326.04, 49.56, 0.2288", "439.652, 325.824, 49.56, 0.2542", "440.173, 325.545, 49.56, 0.2796", "440.783, 325.354, 49.56, 0.3304", "441.279, 325.048, 49.56, 0.3304", "441.927, 324.896, 49.56, 0.3304", "442.651, 324.819, 49.56, 0.2796", "443.25, 324.617, 49.56, 0.2542", "443.796, 324.362, 49.56, 0.2542", "444.469, 324.235, 49.56, 0.2796", "444.927, 323.892, 49.56, 0.305", "445.409, 323.573, 49.56, 0.2796", "445.969, 323.332, 49.56, 0.2542", "446.58, 323.142, 49.56, 0.2288", "447.037, 322.799, 49.56, 0.2288", "447.647, 322.608, 49.56, 0.2288", "448.219, 322.379, 49.56, 0.2288", "448.779, 322.138, 49.56, 0.2288", "449.147, 321.705, 49.56, 0.2288", "449.694, 321.451, 49.56, 0.2288", "450.164, 321.121, 49.56, 0.2288", "450.85, 321.006, 49.56, 0.2542", "451.576, 320.93, 49.56, 0.305", "452.147, 320.701, 49.56, 0.356", "452.809, 320.561, 49.56, 0.356", "453.342, 320.295, 49.56, 0.305", "453.952, 320.104, 49.56, 0.2542", "454.626, 319.977, 49.56, 0.2288", "455.389, 319.939, 49.56, 0.2288", "455.961, 319.71, 49.56, 0.2288", "456.583, 319.532, 49.56, 0.2542", "457.371, 319.519, 49.56, 0.305", "457.714, 319.519, 49.56, 0.3814", "458.059, 319.519, 49.56, 0.4068", "458.49, 319.265, 49.56, 0.305", "459.202, 318.947, 49.56, 0.2288", "459.774, 318.718, 49.56, 0.2288", "460.231, 318.375, 49.56, 0.2288", "460.727, 318.07, 49.56, 0.2288", "461.363, 317.905, 49.56, 0.2542", "461.922, 317.664, 49.56, 0.2796", "462.634, 317.574, 49.56, 0.305", "463.243, 317.383, 49.56, 0.3304", "463.854, 317.193, 49.56, 0.356", "464.578, 317.117, 49.56, 0.4068", "465.011, 316.965, 50.0889, 0.3814", "465.456, 316.736, 50.4, 0.356", "465.964, 316.443, 50.4, 0.2796", "466.625, 316.303, 50.4, 0.2542", "467.21, 316.087, 50.4, 0.2288", "467.705, 315.782, 50.4, 0.2542", "468.214, 315.49, 50.4, 0.2796", "468.697, 315.172, 50.4, 0.305", "469.09, 314.765, 50.4, 0.3304", "469.562, 314.435, 50.4, 0.4068", "470.07, 314.028, 50.68, 0.7372", "470.947, 313.533, 50.68, 0.5848", "471.533, 313.316, 50.68, 0.483", "472.091, 313.075, 50.68, 0.356", "472.815, 312.998, 50.68, 0.2796", "473.375, 312.757, 50.68, 0.2288", "473.845, 312.426, 50.68, 0.2796", "474.404, 312.185, 50.68, 0.356", "474.99, 311.969, 50.68, 0.4322", "475.688, 311.867, 50.68, 0.4068", "476.362, 311.74, 50.68, 0.356", "476.896, 311.588, 50.68, 0.305", "477.125, 311.13, 50.68, 0.2542", "477.543, 310.519, 50.68, 0.3304", "477.964, 310.138, 50.68, 0.3814", "478.344, 309.719, 50.68, 0.3304", "478.891, 309.465, 50.68, 0.2796", "479.222, 309.452, 50.68, 0.2796", "479.692, 309.338, 50.4311, 0.3814", "479.947, 309.032, 50.4, 0.2796", "480.06, 308.803, 50.4, 0.2288", "480.188, 308.587, 50.4, 0.2288", "480.404, 308.46, 50.4, 0.2288", "480.671, 308.385, 50.4, 0.2542", "481.395, 308.079, 50.4, 0.305", "481.967, 308.079, 50.4, 0.2796", "481.853, 307.85, 49.0, 0.2542", "482.539, 307.736, 49.0, 0.2288", "483.34, 307.736, 49.0, 0.2288", "484.141, 307.736, 49.0, 0.2288", "484.942, 307.736, 49.0, 0.2288", "485.742, 307.736, 49.0, 0.2288", "486.543, 307.736, 49.0, 0.2288", "487.344, 307.736, 49.0, 0.2288", "488.03, 307.622, 49.0, 0.2288", "488.704, 307.495, 49.0, 0.2288", "489.174, 307.164, 49.0, 0.2288", "489.823, 307.012, 49.0, 0.2288", "490.471, 306.859, 49.0, 0.2288", "491.005, 306.592, 49.0, 0.2288", "491.577, 306.363, 49.0, 0.2288", "492.161, 306.147, 49.0, 0.2288", "492.823, 306.007, 49.0, 0.2288", "493.421, 305.804, 49.0, 0.2288", "494.017, 305.6, 49.0, 0.2288", "494.551, 305.334, 49.0, 0.2288", "495.111, 305.092, 49.0, 0.2288", "495.733, 304.914, 49.0, 0.2288", "496.191, 304.571, 49.0, 0.2542", "496.75, 304.329, 49.0, 0.305", "497.068, 303.961, 49.0, 0.5084", "497.628, 303.834, 49.0, 0.661", "498.212, 303.389, 49.0, 0.4322", "498.771, 303.147, 49.0, 0.305", "499.177, 302.753, 49.0, 0.2288", "499.649, 302.423, 49.0, 0.2288", "500.042, 302.016, 49.0, 0.2288", "500.652, 301.825, 49.0, 0.2288", "501.263, 301.635, 49.0, 0.2288", "501.669, 301.24, 49.0, 0.2288", "502.178, 300.949, 49.0, 0.2288", "502.661, 300.631, 49.0, 0.2288", "503.132, 300.3, 49.0, 0.2288", "503.589, 299.957, 49.0, 0.2288", "504.123, 299.69, 49.0, 0.2542", "504.771, 299.537, 49.0, 0.305", "505.521, 299.487, 49.0, 0.4068", "506.106, 299.27, 49.0, 0.4576", "506.576, 298.94, 49.0, 0.4576", "506.895, 298.609, 49.3732, 0.356", "507.25, 298.241, 49.56, 0.2796", "507.835, 298.025, 49.56, 0.2288", "508.395, 297.783, 49.56, 0.2288", "509.042, 297.631, 49.56, 0.2288", "509.5, 297.402, 49.84, 0.2288", "510.11, 297.211, 49.84, 0.2288", "510.567, 296.868, 49.84, 0.2288", "510.746, 296.703, 49.84, 0.2288", "510.91, 296.525, 49.84, 0.2288", "511.254, 296.398, 50.3689, 0.2796", "511.724, 296.08, 50.96, 0.2796", "512.105, 295.762, 51.2089, 0.2542", "512.626, 295.495, 51.24, 0.2288", "513.084, 295.152, 51.24, 0.2288", "513.733, 295.0, 51.24, 0.2288", "514.331, 294.796, 51.24, 0.2542", "514.698, 294.478, 51.52, 0.3304", "515.334, 294.313, 51.52, 0.4322", "515.831, 294.008, 51.52, 0.5084", "516.185, 293.563, 51.52, 0.483", "516.707, 293.284, 51.52, 0.4068", "517.203, 292.978, 51.52, 0.305", "517.889, 292.864, 51.52, 0.2542", "518.537, 292.712, 51.52, 0.2288", "519.008, 292.381, 51.52, 0.2542", "519.466, 292.038, 51.52, 0.2796", "519.987, 291.758, 51.52, 0.3304", "520.482, 291.453, 51.52, 0.3304", "521.169, 291.339, 51.52, 0.3304", "521.703, 291.071, 51.52, 0.2796", "522.35, 290.919, 51.52, 0.2542", "522.821, 290.589, 51.52, 0.2542", "523.406, 290.372, 51.52, 0.3304", "523.914, 290.081, 51.52, 0.4576", "524.397, 289.89, 51.8311, 0.5338", "524.982, 289.775, 52.08, 0.5338", "525.782, 289.775, 52.08, 0.4322", "526.38, 289.572, 52.08, 0.356", "526.812, 289.318, 52.08, 0.2542", "526.953, 289.114, 52.08, 0.2288", "527.053, 288.644, 52.08, 0.356", "527.371, 288.275, 52.36, 0.483", "527.766, 287.868, 52.36, 0.5084", "528.083, 287.385, 52.36, 0.483", "528.401, 286.94, 52.4532, 0.356", "528.719, 286.534, 52.64, 0.2796", "529.177, 286.191, 52.64, 0.2288", "529.761, 285.975, 52.64, 0.2796", "530.269, 285.682, 52.64, 0.356", "530.841, 285.453, 52.64, 0.4322", "531.274, 285.085, 52.64, 0.4068", "531.719, 284.729, 52.64, 0.356", "532.074, 284.284, 52.64, 0.356", "532.443, 283.852, 52.64, 0.4576", "533.219, 283.026, 52.64, 0.661", "533.803, 282.682, 52.8889, 0.4576", "534.362, 282.682, 52.92, 0.2542", "534.63, 282.606, 52.92, 0.2288", "534.897, 282.53, 52.92, 0.2288", "535.074, 282.364, 52.92, 0.2288", "535.164, 281.996, 53.2, 0.2542", "535.279, 281.347, 53.2932, 0.2796", "535.43, 280.902, 53.5111, 0.305", "535.735, 280.623, 53.76, 0.4068", "536.282, 280.14, 53.76, 0.4068", "536.766, 279.822, 53.76, 0.356", "537.26, 279.517, 53.76, 0.305", "537.782, 279.352, 54.04, 0.305", "538.302, 279.174, 54.2889, 0.3304", "538.595, 279.136, 54.32, 0.3304", "538.938, 279.136, 54.32, 0.3304", "539.371, 278.882, 54.32, 0.2542", "539.51, 278.793, 54.32, 0.2288", "539.88, 278.36, 54.32, 0.2288", "539.982, 278.119, 54.32, 0.2288", "540.07, 277.865, 54.32, 0.2288", "540.209, 277.661, 54.32, 0.2288", "540.49, 277.599, 54.32, 0.2542", "541.138, 277.216, 54.32, 0.3304", "541.493, 276.771, 54.32, 0.356", "541.964, 276.441, 54.32, 0.3814", "542.497, 276.174, 54.32, 0.356", "543.006, 275.883, 54.32, 0.305", "543.591, 275.666, 54.32, 0.2542", "544.036, 275.437, 54.6311, 0.2288", "544.506, 275.209, 54.88, 0.2288", "545.039, 274.941, 54.88, 0.2288", "545.523, 274.624, 54.88, 0.2288", "546.133, 274.433, 54.88, 0.2288", "546.719, 274.217, 54.88, 0.2288", "547.518, 274.102, 54.88, 0.2542", "548.167, 273.95, 54.88, 0.2796", "548.688, 273.67, 54.88, 0.305", "549.272, 273.454, 54.88, 0.305", "550.023, 273.403, 54.88, 0.3304", "550.264, 273.302, 54.88, 0.356", "550.62, 272.971, 54.88, 0.305", "550.709, 272.717, 54.88, 0.2542", "550.951, 272.386, 54.88, 0.2288", "551.193, 272.285, 54.88, 0.2288", "551.727, 271.904, 54.88, 0.2288", "552.273, 271.65, 54.88, 0.2288", "552.883, 271.459, 54.88, 0.2288", "553.456, 271.23, 54.88, 0.2288", "553.888, 270.861, 54.88, 0.2288", "554.459, 270.633, 54.88, 0.2288", "554.93, 270.34, 54.7868, 0.2288", "555.298, 270.061, 54.4132, 0.2288", "555.706, 269.705, 54.32, 0.2288", "556.136, 269.335, 54.32, 0.2288", "556.67, 269.069, 54.32, 0.2288", "557.014, 268.611, 54.32, 0.2288", "557.484, 268.281, 54.32, 0.2542", "558.005, 268.001, 54.32, 0.2796", "558.464, 267.658, 54.32, 0.356", "558.794, 267.188, 54.32, 0.3814", "558.933, 266.641, 54.32, 0.3304", "559.276, 266.298, 54.32, 0.305", "559.646, 266.094, 54.32, 0.3814", "559.988, 265.751, 54.32, 0.3304", "560.331, 265.751, 54.32, 0.2796", "561.12, 265.51, 54.32, 0.2288", "561.704, 265.294, 54.32, 0.2288", "562.188, 264.976, 54.32, 0.2288", "562.607, 264.595, 54.32, 0.2542", "562.81, 263.997, 54.32, 0.2796", "563.115, 263.615, 54.04, 0.305", "563.484, 263.184, 54.04, 0.2796", "563.878, 262.777, 54.04, 0.2542", "564.246, 262.344, 54.04, 0.2288", "564.678, 261.976, 54.04, 0.2288", "565.174, 261.671, 54.04, 0.2288", "565.594, 261.29, 54.04, 0.2288", "566.052, 260.946, 54.04, 0.2288", "566.623, 260.718, 54.04, 0.2288", "567.131, 260.425, 54.04, 0.2542", "567.755, 260.26, 54.0089, 0.2796", "568.225, 260.069, 53.6668, 0.305", "568.657, 259.777, 53.48, 0.2796", "569.165, 259.484, 53.48, 0.2542", "569.56, 259.078, 53.48, 0.2288", "569.979, 258.696, 53.48, 0.2288", "570.373, 258.29, 53.48, 0.2288", "570.5, 258.188, 53.2, 0.2288", "570.602, 258.061, 52.92, 0.2288", "570.857, 257.972, 52.92, 0.2288", "571.123, 257.895, 52.92, 0.2288", "571.873, 257.616, 52.92, 0.2288", "572.42, 257.362, 52.92, 0.2288", "573.131, 257.273, 52.92, 0.2288", "573.716, 257.057, 52.92, 0.2288", "574.174, 256.714, 52.92, 0.2288", "574.594, 256.333, 52.92, 0.2542", "575.128, 256.065, 52.92, 0.305", "575.673, 255.811, 52.92, 0.356", "576.233, 255.57, 52.92, 0.356", "576.818, 255.353, 52.92, 0.305", "577.365, 255.099, 52.92, 0.2542", "577.961, 254.896, 52.92, 0.2288", "578.586, 254.719, 52.92, 0.2288", "579.094, 254.426, 52.92, 0.2288", "579.563, 254.095, 52.92, 0.2288", "579.995, 253.727, 52.92, 0.2288", "580.276, 253.205, 52.92, 0.2288", "580.466, 252.595, 52.92, 0.2288", "580.581, 251.909, 52.92, 0.2288", "580.771, 251.299, 52.92, 0.2542", "580.911, 250.752, 52.92, 0.356", "581.19, 250.345, 52.92, 0.3304", "581.521, 250.116, 52.9511, 0.356", "581.61, 249.723, 53.4489, 0.305", "581.61, 249.392, 53.48, 0.2542", "581.61, 249.163, 53.48, 0.2288", "581.61, 248.362, 53.48, 0.2288", "581.826, 247.778, 53.48, 0.2288", "581.876, 247.027, 53.48, 0.2288", "581.966, 246.316, 53.48, 0.2288", "582.092, 246.1, 53.48, 0.2288", "582.219, 245.883, 53.48, 0.2288", "582.346, 245.667, 53.48, 0.2288", "582.639, 245.617, 53.48, 0.2288", "582.982, 245.617, 53.48, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "399.565, 342.746, 50.024, 0.9152", "400.24, 341.952, 50.9592, 0.5084", "400.785, 341.087, 52.0173, 0.4576", "401.535, 340.238, 52.1066, 0.5338", "402.428, 339.524, 52.2158, 0.6356", "403.341, 338.904, 52.7744, 0.6864", "404.363, 338.443, 53.233, 0.6864", "405.352, 337.899, 53.394, 0.661", "406.194, 337.208, 54.1089, 0.5848", "407.035, 336.679, 53.2, 0.4576", "407.15, 336.565, 55.16, 0.3304", "407.798, 336.413, 55.16, 0.2796", "408.281, 336.095, 55.16, 0.2796", "408.599, 335.612, 55.16, 0.305", "408.866, 335.078, 55.16, 0.2796", "409.247, 334.658, 55.16, 0.2542", "409.565, 334.175, 55.16, 0.2288", "410.01, 333.819, 55.16, 0.2288", "410.365, 333.374, 55.16, 0.2288", "410.734, 332.942, 55.16, 0.2796", "411.141, 332.663, 55.16, 0.483", "411.484, 332.319, 55.16, 0.4068", "411.497, 331.76, 55.16, 0.305", "411.675, 331.252, 55.16, 0.2542", "411.815, 331.048, 55.16, 0.2288", "412.387, 330.591, 55.16, 0.3304", "412.793, 330.196, 55.16, 0.4576", "413.238, 329.84, 55.16, 0.5848", "414.09, 329.091, 55.16, 0.661", "414.496, 328.696, 55.16, 0.6102", "414.891, 328.29, 55.16, 0.5338", "415.222, 327.82, 55.16, 0.4576", "415.513, 327.311, 55.16, 0.4068", "416.404, 326.599, 55.16, 0.356", "416.759, 326.154, 55.16, 0.3304", "416.988, 325.582, 55.16, 0.305", "417.281, 325.189, 55.16, 0.4068", "417.776, 324.998, 55.16, 0.5338", "418.145, 324.451, 55.16, 0.5592", "418.628, 324.133, 55.16, 0.6356", "419.009, 323.6, 55.16, 0.5338", "419.276, 323.066, 55.16, 0.5338", "419.632, 322.621, 55.16, 0.483", "420.039, 322.227, 55.16, 0.4068", "420.395, 321.782, 55.16, 0.305", "420.776, 321.362, 55.16, 0.305", "421.158, 320.942, 55.16, 0.3814", "421.564, 320.549, 55.16, 0.5084", "422.429, 319.812, 55.16, 0.5338", "422.912, 319.494, 55.16, 0.483", "423.357, 319.138, 55.16, 0.4322", "423.878, 318.858, 55.16, 0.3814", "424.284, 318.464, 55.16, 0.305", "424.792, 318.172, 55.16, 0.2542", "425.339, 317.918, 55.16, 0.2542", "425.671, 317.447, 55.16, 0.2796", "426.038, 317.015, 55.16, 0.305", "426.242, 316.418, 55.16, 0.2796", "426.585, 315.96, 55.16, 0.2542", "426.904, 315.477, 55.16, 0.2288", "427.348, 315.122, 55.16, 0.2796", "427.792, 314.765, 55.16, 0.3814", "428.428, 314.6, 55.16, 0.483", "428.796, 314.282, 55.44, 0.483", "429.178, 313.863, 55.44, 0.4068", "429.547, 313.431, 55.44, 0.3304", "429.953, 313.036, 55.44, 0.3304", "430.145, 312.528, 55.6889, 0.3304", "430.487, 312.083, 55.72, 0.3304", "430.921, 311.715, 55.72, 0.305", "431.517, 311.511, 55.72, 0.305", "432.0, 311.193, 55.72, 0.305", "432.355, 310.748, 55.72, 0.305", "432.711, 310.418, 56.0, 0.305", "433.132, 310.138, 56.2489, 0.305", "433.499, 309.719, 56.28, 0.2796", "433.908, 309.325, 56.28, 0.2542", "434.25, 308.867, 56.28, 0.2288", "434.491, 308.308, 56.28, 0.2288", "434.949, 307.965, 56.28, 0.2542", "435.33, 307.545, 56.28, 0.2796", "435.814, 307.342, 56.56, 0.305", "436.195, 306.923, 56.56, 0.2796", "436.703, 306.63, 56.56, 0.2542", "437.097, 306.224, 56.56, 0.2542", "437.428, 305.753, 56.56, 0.305", "437.885, 305.41, 56.56, 0.3814", "438.304, 305.028, 56.56, 0.4068", "438.839, 304.762, 56.56, 0.3814", "439.194, 304.317, 56.56, 0.3304", "439.716, 304.037, 56.56, 0.3304", "440.135, 303.655, 56.56, 0.356", "440.554, 303.274, 56.56, 0.356", "441.05, 302.969, 56.56, 0.305", "441.534, 302.652, 56.56, 0.2542", "441.915, 302.232, 56.56, 0.2288", "442.233, 301.749, 56.56, 0.2542", "442.703, 301.419, 56.56, 0.2796", "443.186, 301.101, 56.56, 0.305", "443.668, 300.783, 56.56, 0.3304", "444.139, 300.452, 56.56, 0.356", "444.546, 300.059, 56.56, 0.4068", "444.876, 299.588, 56.56, 0.3814", "445.245, 299.156, 56.56, 0.356", "445.55, 298.775, 56.56, 0.2542", "445.715, 298.597, 56.56, 0.2288", "446.033, 298.571, 56.56, 0.2288", "446.198, 298.507, 56.56, 0.2288", "446.707, 298.216, 56.56, 0.2542", "447.177, 297.885, 56.56, 0.2796", "447.647, 297.554, 56.56, 0.305", "448.016, 297.122, 56.56, 0.2796", "448.473, 296.779, 56.56, 0.2542", "449.007, 296.512, 56.56, 0.2288", "449.452, 296.156, 56.56, 0.2288", "449.846, 295.749, 56.56, 0.2542", "450.139, 295.241, 56.56, 0.3304", "450.622, 294.923, 56.56, 0.4068", "451.079, 294.58, 56.56, 0.4322", "451.499, 294.199, 56.56, 0.3814", "451.969, 293.868, 56.56, 0.3304", "452.375, 293.474, 56.56, 0.305", "452.706, 293.004, 56.56, 0.2796", "453.102, 292.597, 56.56, 0.2796", "453.329, 292.025, 56.56, 0.2796", "453.71, 291.606, 56.56, 0.305", "453.977, 291.071, 56.56, 0.2796", "454.397, 290.69, 56.56, 0.2542", "454.766, 290.258, 56.56, 0.2288", "455.121, 289.813, 56.56, 0.2288", "455.529, 289.419, 56.56, 0.2288", "455.961, 289.051, 56.56, 0.2288", "456.215, 288.581, 56.3732, 0.2796", "456.546, 288.263, 56.0, 0.3304", "456.914, 287.83, 56.0, 0.4322", "457.322, 287.437, 56.0, 0.4322", "457.613, 286.928, 56.0, 0.4322", "457.867, 286.381, 56.0, 0.3304", "458.197, 285.911, 56.0, 0.2796", "458.553, 285.466, 56.0, 0.2288", "458.896, 285.008, 56.0, 0.2542", "459.393, 284.704, 56.0, 0.305", "459.774, 284.284, 56.0, 0.356", "460.193, 283.903, 56.0, 0.356", "460.422, 283.445, 56.0, 0.3304", "460.689, 283.369, 56.0, 0.356", "461.146, 283.026, 56.0, 0.305", "461.261, 282.682, 57.68, 0.2542", "461.985, 282.606, 57.68, 0.2288", "462.214, 282.491, 57.68, 0.2288", "462.469, 282.403, 57.68, 0.2288", "462.52, 282.11, 57.68, 0.2288", "462.52, 281.882, 57.68, 0.2288", "462.52, 281.653, 57.68, 0.2288", "462.646, 281.322, 57.68, 0.2288", "462.888, 281.22, 57.68, 0.2288", "463.206, 280.738, 57.68, 0.305", "463.587, 280.432, 57.68, 0.2542", "464.083, 279.899, 57.68, 0.2288", "464.578, 279.594, 57.68, 0.2288", "464.986, 279.2, 57.68, 0.2542", "465.494, 278.907, 57.68, 0.305", "465.951, 278.564, 57.68, 0.356", "466.294, 278.106, 57.68, 0.356", "466.612, 277.624, 57.68, 0.305", "466.74, 277.407, 57.68, 0.2542", "466.841, 277.166, 57.68, 0.2288", "467.083, 277.064, 57.68, 0.2288", "467.299, 276.937, 57.68, 0.2542", "467.77, 276.378, 57.68, 0.305", "467.998, 275.806, 57.68, 0.2796", "468.01, 275.361, 57.68, 0.483", "468.277, 275.055, 57.68, 0.2288", "468.468, 275.018, 57.68, 0.2542", "468.811, 275.018, 57.68, 0.4322", "469.396, 274.801, 57.68, 0.356", "470.07, 274.674, 57.68, 0.2796", "470.642, 274.446, 57.68, 0.2288", "471.328, 274.331, 57.68, 0.2288", "471.9, 274.102, 57.68, 0.2288", "472.46, 273.861, 57.68, 0.2288", "472.904, 273.505, 57.68, 0.2288", "473.527, 273.327, 57.68, 0.2288", "474.086, 273.085, 57.68, 0.2288", "474.608, 272.806, 57.68, 0.2288", "475.141, 272.539, 57.68, 0.2288", "475.701, 272.297, 57.68, 0.2288", "476.21, 272.005, 57.68, 0.2288", "476.743, 271.738, 57.68, 0.2288", "477.214, 271.407, 57.68, 0.2288", "477.747, 271.141, 57.68, 0.2288", "478.192, 270.785, 57.68, 0.2288", "478.535, 270.442, 57.96, 0.2542", "479.005, 270.111, 57.96, 0.2796", "479.488, 269.793, 57.96, 0.305", "479.947, 269.45, 57.96, 0.2796", "480.302, 269.005, 57.96, 0.2796", "480.861, 268.763, 57.96, 0.305", "481.522, 268.624, 57.96, 0.356", "482.197, 268.611, 57.96, 0.356", "482.197, 268.382, 60.2, 0.305", "482.49, 268.332, 60.2, 0.2542", "482.59, 268.09, 60.2, 0.2288", "482.755, 267.912, 60.2, 0.2288", "482.921, 267.505, 60.2, 0.2288", "483.214, 267.455, 60.2, 0.2288", "483.81, 267.137, 60.2, 0.2288", "484.064, 267.047, 60.2, 0.2288", "484.332, 266.972, 60.2, 0.2288", "484.484, 266.781, 60.2, 0.2288", "484.598, 266.552, 60.2, 0.2288", "484.929, 266.311, 60.2, 0.2288", "485.145, 266.184, 60.2, 0.2288", "485.603, 265.726, 60.2, 0.2288", "485.857, 265.637, 60.2, 0.2288", "486.123, 265.56, 60.2, 0.2288", "486.302, 265.395, 60.2, 0.2288", "486.429, 265.179, 60.2, 0.2542", "486.772, 264.95, 60.2, 0.3304", "487.115, 264.836, 60.2, 0.4322", "487.496, 264.531, 60.48, 0.356", "487.737, 264.086, 60.48, 0.2288", "488.03, 264.035, 60.48, 0.2288", "488.336, 263.997, 60.48, 0.2288", "488.501, 263.933, 60.48, 0.2288", "489.11, 263.742, 60.48, 0.2288", "489.861, 263.692, 60.48, 0.2288", "490.318, 263.463, 60.76, 0.2288", "490.878, 263.222, 60.76, 0.2288", "491.462, 263.006, 60.76, 0.2288", "491.958, 262.7, 60.76, 0.2288", "492.454, 262.396, 60.76, 0.2288", "493.077, 262.217, 60.76, 0.2288", "493.714, 262.053, 60.76, 0.2288", "493.891, 261.887, 60.76, 0.2288", "494.068, 261.722, 60.76, 0.2288", "494.322, 261.633, 60.76, 0.2288", "494.666, 261.633, 60.76, 0.2288", "494.895, 261.633, 60.76, 0.2288", "495.504, 261.442, 60.76, 0.2288", "495.911, 261.048, 60.76, 0.2288", "496.395, 260.73, 60.76, 0.2288", "496.916, 260.451, 60.76, 0.2288", "497.538, 260.273, 60.76, 0.2288", "498.174, 260.108, 60.76, 0.2288", "498.605, 259.738, 60.76, 0.2288", "499.216, 259.548, 60.76, 0.2288", "499.814, 259.345, 60.76, 0.2288", "500.462, 259.193, 60.76, 0.2288", "501.072, 259.002, 60.76, 0.2288", "501.632, 258.76, 60.76, 0.2288", "502.115, 258.442, 60.76, 0.2288", "502.775, 258.303, 60.76, 0.2288", "503.22, 257.947, 60.76, 0.2288", "503.741, 257.667, 60.76, 0.2288", "504.123, 257.248, 60.76, 0.2288", "504.618, 256.942, 60.76, 0.2288", "505.19, 256.714, 60.76, 0.2288", "505.661, 256.383, 60.76, 0.2288", "506.245, 256.167, 60.76, 0.2288", "506.805, 255.925, 60.76, 0.2288", "507.478, 255.798, 60.76, 0.2288", "508.279, 255.798, 60.76, 0.2542", "508.865, 255.582, 60.76, 0.3304", "509.538, 255.455, 60.76, 0.4068", "509.882, 255.455, 60.76, 0.4322", "510.465, 255.353, 60.76, 0.2796", "510.707, 255.252, 60.76, 0.2288", "511.254, 254.883, 61.04, 0.2288", "512.055, 254.883, 61.04, 0.2288", "512.844, 254.871, 61.04, 0.2288", "513.542, 254.769, 61.04, 0.2542", "514.342, 254.769, 61.04, 0.3304", "515.068, 254.769, 61.2268, 0.4068", "515.703, 254.642, 61.32, 0.4576", "516.287, 254.426, 61.32, 0.4576", "516.795, 254.133, 61.32, 0.483", "517.355, 253.891, 61.32, 0.483", "518.042, 253.777, 61.32, 0.4322", "518.589, 253.523, 61.32, 0.3304", "519.122, 253.256, 61.32, 0.305", "519.479, 252.811, 61.32, 0.3304", "519.974, 252.506, 61.32, 0.3814", "520.242, 252.087, 61.6, 0.3304", "520.443, 251.489, 61.6, 0.2796", "520.813, 251.058, 61.6, 0.2288", "521.092, 250.536, 61.6, 0.2542", "521.474, 250.116, 61.6, 0.2796", "521.664, 249.506, 61.6, 0.3304", "521.88, 249.036, 61.88, 0.3304", "522.186, 248.655, 62.16, 0.356", "522.579, 248.248, 62.16, 0.3814", "522.974, 247.841, 62.16, 0.4576", "523.495, 247.562, 62.16, 0.483", "523.966, 247.231, 62.16, 0.4576", "524.562, 247.027, 62.16, 0.3814", "525.096, 246.761, 62.16, 0.3304", "525.542, 246.405, 62.16, 0.2796", "525.974, 246.037, 62.16, 0.2542", "526.227, 245.49, 62.16, 0.2288", "526.444, 244.905, 62.16, 0.2542", "526.876, 244.537, 62.16, 0.2796", "527.384, 244.244, 62.16, 0.3304", "527.842, 243.901, 62.16, 0.3304", "528.299, 243.558, 62.16, 0.356", "528.795, 243.252, 62.16, 0.3814", "529.177, 242.986, 62.5332, 0.483", "529.558, 242.642, 62.72, 0.5592", "530.358, 241.956, 63.0, 0.4576", "530.829, 241.625, 63.0, 0.3304", "531.237, 241.232, 63.0, 0.2542", "531.617, 240.812, 63.0, 0.2542", "531.985, 240.38, 63.0, 0.2796", "532.367, 239.961, 63.0, 0.305", "532.57, 239.363, 63.0, 0.305", "532.773, 238.765, 63.0, 0.3304", "533.027, 238.219, 63.0, 0.3814", "533.104, 237.494, 63.0, 0.4068", "533.193, 236.783, 63.0, 0.3814", "533.371, 236.159, 63.0, 0.3304", "533.448, 235.587, 63.0932, 0.4576", "533.893, 234.851, 63.28, 0.5848", "533.943, 234.393, 63.9957, 0.2542", "534.108, 233.923, 64.12, 0.305", "534.362, 233.605, 64.12, 0.356", "534.669, 233.109, 64.12, 0.305", "534.909, 232.588, 64.2132, 0.305", "535.279, 232.27, 64.4932, 0.356", "535.685, 231.953, 64.68, 0.4322", "535.964, 231.431, 64.68, 0.4068", "536.422, 231.088, 64.68, 0.356", "536.803, 230.757, 64.8978, 0.3304", "537.019, 230.541, 65.52, 0.356", "537.222, 230.058, 65.52, 0.305", "537.337, 229.855, 66.1422, 0.305", "537.44, 229.601, 66.3911, 0.2542", "537.451, 229.156, 67.2311, 0.2288", "537.451, 229.016, 67.7289, 0.2288", "537.451, 228.877, 68.2268, 0.2288", "537.451, 228.571, 68.32, 0.2288", "537.451, 228.228, 68.32, 0.2288", "537.451, 227.198, 68.32, 0.3304", "537.451, 226.398, 68.32, 0.3814", "537.451, 225.813, 68.8489, 0.3304", "537.451, 225.025, 68.88, 0.305", "537.451, 224.224, 68.88, 0.3304", "537.451, 223.423, 68.88, 0.4322", "537.451, 222.762, 69.2222, 0.483", "537.451, 222.356, 69.9068, 0.356", "537.706, 222.076, 70.28, 0.305", "538.138, 221.478, 70.28, 0.2542", "538.443, 220.983, 70.28, 0.2288", "538.698, 220.894, 70.28, 0.2288", "538.862, 220.715, 70.28, 0.2288", "539.016, 220.525, 70.28, 0.2288", "539.053, 220.22, 70.28, 0.2288", "539.269, 219.407, 70.28, 0.2288", "539.371, 219.165, 70.28, 0.2288", "539.498, 218.949, 70.28, 0.2288", "539.638, 218.745, 70.28, 0.2288", "539.891, 218.656, 70.28, 0.2288", "540.527, 218.263, 70.28, 0.2288", "540.68, 218.186, 70.28, 0.2288", "540.896, 218.059, 70.28, 0.2288", "541.112, 218.046, 70.28, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "244.965, 403.203, 62.1555, 0.4576", "244.965, 403.214, 60.6578, 0.3304", "239.993, 402.317, 63.6532, 0.3304", "235.474, 400.324, 67.3977, 0.356", "230.802, 397.261, 70.3931, 0.356", "229.23, 395.291, 71.8908, 0.305", "229.091, 395.562, 69.6441, 0.2542", "224.96, 388.369, 71.8908, 0.2288", "223.501, 384.962, 70.3931, 0.2288" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "244.965, 403.203, 62.1555, 0.4576", "244.587, 403.26, 63.28, 0.5848", "243.901, 403.26, 63.28, 0.4576", "243.507, 403.439, 63.28, 0.2542", "243.062, 403.794, 63.28, 0.2288", "242.503, 404.036, 63.28, 0.2288", "241.969, 404.302, 63.28, 0.2288", "241.384, 404.518, 63.28, 0.2288", "240.66, 404.595, 63.28, 0.2288", "240.011, 404.747, 63.28, 0.2288", "239.401, 404.938, 63.28, 0.2288", "238.817, 405.155, 63.28, 0.2288", "238.384, 405.523, 63.28, 0.2288", "237.761, 405.7, 63.28, 0.2288", "237.037, 405.777, 63.28, 0.2288", "236.236, 405.777, 63.28, 0.2288", "235.435, 405.777, 63.28, 0.2288", "234.672, 405.739, 63.28, 0.2288", "233.948, 405.662, 63.28, 0.2288", "233.719, 405.662, 63.28, 0.2288", "233.49, 405.662, 63.28, 0.2288", "233.147, 405.662, 63.28, 0.2288" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "330.569, 372.149, 29.2244, 0.4576", "330.044, 372.143, 28.56, 0.2796", "329.243, 372.143, 28.56, 0.2288", "328.442, 372.143, 28.56, 0.2288", "327.642, 372.143, 28.56, 0.2288", "326.841, 372.143, 28.56, 0.2288", "326.04, 372.143, 28.56, 0.2288", "325.24, 372.143, 28.56, 0.2542", "324.438, 372.143, 28.56, 0.2796", "323.65, 372.131, 28.56, 0.305", "323.066, 371.914, 28.56, 0.2796", "322.722, 371.914, 28.56, 0.305", "322.379, 371.914, 28.56, 0.3814", "321.922, 371.686, 28.56, 0.5848", "321.273, 371.305, 28.56, 0.5338", "320.587, 371.19, 28.56, 0.5848", "319.29, 370.885, 28.56, 0.5848", "318.49, 370.885, 28.56, 0.5084", "317.689, 370.885, 28.56, 0.483", "317.104, 370.669, 28.56, 0.4068", "316.316, 370.656, 28.56, 0.356", "315.516, 370.656, 28.56, 0.3304", "314.829, 370.542, 28.56, 0.4322", "314.066, 370.542, 28.4668, 0.5338", "312.998, 370.198, 28.0, 0.5592", "312.35, 370.084, 27.9068, 0.483", "311.892, 369.817, 27.72, 0.4068", "311.283, 369.626, 27.72, 0.4068", "310.596, 369.512, 27.72, 0.5084", "309.91, 369.398, 27.72, 0.6864", "309.121, 368.94, 27.4089, 0.7626", "308.664, 368.584, 26.88, 0.483", "308.194, 368.254, 26.88, 0.4068", "307.761, 367.885, 26.88, 0.356", "307.342, 367.503, 26.88, 0.4068", "306.935, 367.11, 26.88, 0.5338", "306.617, 366.627, 26.88, 0.6102", "305.677, 365.966, 26.88, 0.5592", "305.092, 365.749, 26.88, 0.5592", "304.304, 365.737, 26.88, 0.5848", "303.58, 365.66, 26.88, 0.6102", "302.779, 364.974, 26.6, 0.6102", "302.13, 364.021, 26.6, 0.6102", "301.8, 363.551, 26.6, 0.5338", "301.177, 362.571, 26.6, 0.6356", "300.3, 361.999, 26.2268, 0.839", "299.728, 361.504, 25.48, 0.356", "299.615, 361.046, 25.48, 0.4322", "299.474, 360.5, 25.48, 0.6356", "298.8, 359.801, 25.48, 0.5338", "297.898, 359.216, 25.2, 0.3304", "297.313, 359.0, 25.2, 0.305", "296.868, 358.644, 25.2, 0.3814", "296.436, 358.377, 24.9511, 0.5084", "296.08, 357.907, 24.1732, 0.7626", "295.495, 357.271, 24.08, 0.839", "294.911, 356.254, 24.08, 0.8136", "294.389, 355.746, 24.08, 0.4576", "293.895, 355.67, 24.08, 0.5084", "293.474, 355.174, 24.08, 0.5084", "293.055, 354.792, 24.08, 0.4576", "292.75, 354.297, 24.08, 0.5084", "292.19, 353.712, 24.08, 0.7118", "291.797, 353.076, 24.08, 0.483", "291.262, 353.038, 24.08, 0.4068", "290.919, 353.038, 24.08, 0.3814", "290.132, 352.911, 24.08, 0.3304", "289.775, 352.81, 24.08, 0.2288" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "330.569, 372.149, 29.2244, 0.4576", "330.083, 371.187, 28.8719, 0.483", "329.473, 370.242, 28.5443, 0.5084", "329.173, 369.146, 28.4525, 0.5084", "328.786, 368.254, 27.44, 0.483", "326.835, 362.928, 26.2102, 0.5338", "326.887, 361.663, 26.2102, 0.5848", "326.259, 360.762, 26.2102, 0.6102", "326.462, 358.651, 24.7125, 0.6356", "326.71, 357.522, 23.2148, 0.6356", "325.59, 356.907, 23.2148, 0.6102", "324.154, 356.791, 23.2148, 0.5338", "322.912, 357.442, 22.4658, 0.5084", "321.097, 358.273, 22.4658, 0.5084", "319.304, 358.408, 22.4658, 0.5084", "317.886, 357.23, 21.7171, 0.5338", "316.987, 355.864, 21.7171, 0.6102", "317.357, 353.694, 21.7171, 0.7626", "317.306, 350.848, 20.2194, 0.788", "313.69, 345.574, 20.2194, 0.7118", "311.163, 341.531, 19.4704, 0.5592", "309.642, 340.116, 19.4704, 0.5084", "308.566, 337.593, 18.7216, 0.5084", "306.772, 336.794, 18.7216, 0.5338", "304.78, 334.356, 17.9726, 0.483", "302.977, 333.286, 17.2239, 0.4322", "302.619, 332.839, 17.2239, 0.356", "302.524, 332.334, 17.2239, 0.356", "303.761, 329.75, 16.4749, 0.356", "305.938, 328.599, 14.9772, 0.4576" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "380.745, 376.557, 36.3955, 0.6864", "381.473, 377.917, 33.6988, 0.4576", "381.217, 379.039, 33.6988, 0.3304", "381.245, 380.139, 33.6988, 0.2796", "381.887, 380.993, 33.6988, 0.3304", "383.061, 382.292, 33.6988, 0.4322", "383.783, 384.053, 33.6988, 0.5084", "383.986, 385.229, 33.6988, 0.5084", "384.305, 385.716, 33.6988, 0.483", "385.261, 386.052, 33.6988, 0.4576", "386.559, 386.701, 32.2011, 0.4576", "390.052, 389.903, 32.2011, 0.4576", "391.107, 390.255, 32.2011, 0.4576", "392.576, 391.607, 32.2011, 0.483", "393.46, 392.417, 31.901, 0.5848", "394.474, 392.925, 31.803, 0.5592", "395.148, 393.791, 31.2729, 0.4576", "395.658, 394.78, 30.7849, 0.3814", "396.479, 395.557, 30.6967, 0.4068", "397.042, 396.477, 29.9617, 0.5338", "397.511, 397.503, 29.6671, 0.6102", "398.054, 398.507, 29.6094, 0.6102", "398.71, 399.435, 29.344, 0.5084", "399.301, 400.366, 28.649, 0.4576", "399.916, 401.324, 28.4928, 0.4068", "400.503, 402.291, 28.1831, 0.4068", "400.629, 403.031, 26.32, 0.3304", "400.876, 403.746, 26.2102, 0.2796", "401.473, 404.093, 26.2102, 0.3304", "402.391, 404.131, 26.2102, 0.4068", "403.553, 404.132, 24.7125, 0.3814", "403.911, 404.652, 24.7125, 0.356", "404.819, 404.587, 24.7125, 0.3304", "405.599, 403.937, 24.7125, 0.3814", "406.508, 403.678, 24.7125, 0.4576", "407.289, 403.654, 23.9635, 0.483", "408.326, 404.204, 23.9635, 0.483", "408.94, 405.086, 23.2148, 0.4322", "409.328, 405.636, 23.2148, 0.3814", "409.197, 406.06, 22.4658, 0.305", "408.842, 406.512, 22.4658, 0.2796", "408.971, 406.997, 22.4658, 0.3304", "409.359, 407.416, 22.4658, 0.4576", "410.521, 407.513, 22.4658, 0.5848", "411.935, 407.644, 21.7171, 0.6356", "412.675, 408.16, 21.7171, 0.6102", "413.816, 408.482, 22.4658, 0.5592", "415.799, 409.648, 23.2148, 0.5084", "416.9, 409.972, 23.2148, 0.5084", "417.904, 409.841, 23.2148, 0.5084", "418.714, 410.069, 23.2148, 0.5848", "419.262, 410.489, 23.2148, 0.6356", "420.248, 411.171, 22.4658, 0.6864", "421.208, 412.034, 22.4658, 0.6356", "421.975, 412.849, 22.4658, 0.5592", "422.79, 413.665, 22.4658, 0.5084", "423.27, 413.809, 22.4658, 0.5592", "424.469, 413.809, 22.4658, 0.661", "426.235, 414.003, 21.7171, 0.7118", "427.957, 413.524, 21.7171, 0.7372", "429.633, 413.381, 21.7171, 0.7372", "430.925, 413.428, 21.7171, 0.7118", "431.691, 413.859, 21.7171, 0.661", "432.552, 414.578, 21.7171, 0.6356", "433.916, 415.104, 22.4658, 0.7372", "435.499, 415.152, 22.4658, 0.8136", "436.699, 415.535, 22.4658, 0.839", "437.368, 416.303, 22.4658, 0.788", "438.523, 416.495, 22.4658, 0.788", "439.72, 416.926, 22.4658, 0.7626", "440.246, 417.213, 22.4658, 0.6864", "440.966, 418.508, 22.4658, 0.5338", "441.495, 419.372, 22.4658, 0.483", "441.975, 419.851, 22.4658, 0.5084", "443.125, 420.379, 22.4658, 0.6102", "445.193, 421.842, 22.4658, 0.661", "446.487, 423.28, 22.4658, 0.7118", "448.236, 424.955, 23.2148, 0.7118", "448.783, 425.577, 23.9635, 0.7118", "449.507, 425.817, 23.9635, 0.6102", "450.036, 426.685, 23.9635, 0.5848", "450.685, 427.79, 23.2148, 0.5592", "451.646, 428.51, 23.2148, 0.661", "452.435, 428.843, 22.4658, 0.6864", "452.743, 430.036, 21.7171, 0.7118", "453.223, 431.138, 21.7171, 0.661", "453.797, 431.76, 21.7171, 0.6102", "455.055, 432.324, 20.9681, 0.5592", "455.964, 433.232, 20.9681, 0.5338", "456.25, 434.187, 20.9681, 0.5592", "456.442, 435.191, 20.9681, 0.5592", "458.104, 436.308, 21.7171, 0.5848", "459.062, 437.408, 21.7171, 0.5592", "459.925, 438.51, 21.7171, 0.5592", "460.117, 439.258, 21.9332, 0.4322", "460.219, 439.881, 22.12, 0.3814", "460.358, 440.542, 22.12, 0.4068", "460.485, 440.758, 22.12, 0.4068", "460.905, 441.025, 22.12, 0.305", "461.159, 441.114, 22.12, 0.2796", "461.972, 441.33, 22.12, 0.356", "462.354, 441.634, 22.4, 0.4068", "462.608, 442.181, 22.4, 0.4576", "462.761, 442.83, 22.4, 0.5338", "463.091, 443.3, 22.4, 0.5592", "463.397, 443.795, 22.4, 0.5592", "463.714, 444.279, 22.4, 0.5592", "464.223, 444.571, 22.4, 0.5592", "464.578, 444.902, 22.68, 0.5338", "465.15, 445.13, 22.68, 0.4322", "465.608, 445.397, 22.8668, 0.356", "466.066, 445.702, 22.96, 0.2796", "466.638, 445.931, 22.96, 0.2796", "467.438, 445.931, 22.96, 0.305", "468.048, 446.008, 23.24, 0.4068", "468.811, 446.046, 23.24, 0.4576", "469.498, 446.16, 23.24, 0.483", "470.082, 446.376, 23.24, 0.4322", "470.654, 446.605, 23.24, 0.4576", "471.124, 446.821, 23.24, 0.5592", "471.442, 447.19, 23.24, 0.5592", "471.773, 447.889, 23.24, 0.483", "472.014, 448.448, 23.24, 0.4322", "472.218, 448.931, 23.24, 0.4322", "472.586, 449.134, 22.96, 0.5338", "473.007, 449.63, 22.96, 0.5338", "473.616, 449.706, 22.96, 0.305", "474.086, 449.808, 22.96, 0.2542", "474.52, 450.062, 22.96, 0.305", "475.103, 450.393, 22.96, 0.2542", "475.409, 450.431, 22.96, 0.2288", "475.536, 450.532, 22.96, 0.2288", "475.637, 450.659, 22.96, 0.2288", "475.675, 450.85, 22.96, 0.2288", "475.675, 451.079, 22.96, 0.2288", "475.802, 451.753, 22.96, 0.2796", "476.018, 452.338, 22.96, 0.3814", "476.272, 452.884, 22.96, 0.5338", "476.641, 453.317, 22.96, 0.5848", "476.971, 453.71, 23.1468, 0.5592", "477.175, 454.27, 23.24, 0.4576", "477.441, 454.804, 23.24, 0.4576", "477.861, 455.185, 23.24, 0.483", "478.065, 455.782, 23.24, 0.5084", "478.281, 456.367, 23.24, 0.4322", "478.46, 456.99, 23.24, 0.356", "478.688, 457.562, 23.24, 0.3304", "478.878, 458.172, 23.24, 0.356", "478.993, 458.858, 23.24, 0.3814", "479.107, 459.545, 23.24, 0.3814", "479.336, 460.117, 23.24, 0.4068", "479.757, 460.498, 23.24, 0.4068", "479.985, 461.07, 23.24, 0.4068", "480.227, 461.629, 23.24, 0.356", "480.594, 462.062, 23.24, 0.356", "481.065, 462.392, 23.24, 0.356", "481.484, 462.773, 23.24, 0.4322", "481.878, 463.168, 23.2089, 0.5084", "482.425, 463.663, 22.96, 0.5084", "482.997, 463.778, 22.96, 0.356", "483.365, 463.79, 22.4932, 0.4068", "483.835, 463.892, 21.9332, 0.3814", "484.598, 463.892, 21.84, 0.305", "485.399, 463.892, 21.84, 0.2542", "486.048, 464.044, 21.84, 0.2288", "486.543, 464.35, 21.84, 0.2542", "487.001, 464.693, 21.84, 0.305", "487.458, 464.922, 21.56, 0.356", "487.878, 464.972, 21.0311, 0.3814", "488.081, 465.443, 21.0, 0.4576", "488.679, 465.875, 21.0, 0.4322", "488.971, 466.257, 20.6889, 0.4576", "489.353, 466.459, 20.16, 0.4576", "489.784, 466.829, 20.16, 0.4576", "490.356, 467.057, 20.16, 0.356", "490.547, 467.095, 20.16, 0.2288", "490.776, 467.095, 20.16, 0.2288", "490.992, 467.222, 20.16, 0.2288", "491.005, 467.438, 20.16, 0.2288", "491.043, 467.744, 20.16, 0.2542", "491.373, 467.985, 20.16, 0.6356", "491.984, 468.633, 20.16, 0.788", "492.53, 469.117, 20.16, 0.7372", "492.835, 469.726, 20.16, 0.6102", "493.572, 470.248, 20.16, 0.5338", "494.056, 470.565, 20.16, 0.3814", "494.526, 470.896, 20.16, 0.2796", "494.666, 471.099, 20.16, 0.2288", "495.225, 471.214, 20.16, 0.3814" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "380.745, 376.557, 36.3955, 0.6864", "381.822, 376.895, 36.3737, 0.6864", "382.798, 377.479, 36.262, 0.6864", "383.828, 377.862, 35.6401, 0.6864", "384.928, 378.105, 35.5099, 0.6864", "385.992, 378.346, 36.2771, 0.7118", "387.115, 378.516, 36.3975, 0.7118", "388.222, 378.773, 36.384, 0.6864", "389.365, 378.775, 36.2832, 0.6102", "390.461, 378.755, 35.6196, 0.5848", "391.477, 378.663, 34.3641, 0.6864" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "418.266, 392.748, 39.1468, 0.2288", "418.664, 392.877, 38.1749, 0.7372", "419.562, 393.377, 37.5236, 0.8898", "420.595, 393.862, 37.5424, 0.9152", "421.635, 394.321, 37.6516, 0.8136", "422.505, 395.001, 38.2449, 0.7118", "423.199, 395.897, 38.46, 0.6102", "423.846, 396.799, 37.8658, 0.6102", "424.697, 397.513, 37.9739, 0.6356", "425.729, 397.934, 38.099, 0.6864", "426.839, 398.018, 38.3426, 0.6356", "427.957, 398.139, 38.7825, 0.6102", "429.28, 398.879, 38.64, 0.5848", "430.234, 399.499, 38.64, 0.6356", "431.067, 400.282, 38.64, 0.661", "431.892, 401.075, 38.64, 0.6864", "432.771, 401.807, 38.64, 0.6356", "433.856, 402.089, 38.64, 0.5592", "434.978, 401.909, 38.6406, 0.4576", "436.093, 401.738, 38.6422, 0.4576" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "418.266, 392.748, 39.1468, 0.2288", "418.508, 392.67, 41.057, 0.356", "418.81, 392.828, 43.4734, 0.4322", "418.939, 393.887, 44.24, 0.4576", "418.977, 395.03, 44.2406, 0.4322", "419.222, 396.135, 44.2434, 0.4322", "419.451, 397.254, 44.2627, 0.3814", "419.79, 398.325, 44.3859, 0.4068", "420.498, 399.136, 45.1604, 0.3814", "421.121, 399.946, 46.3092, 0.4068", "420.992, 400.866, 47.7649, 0.3304", "420.477, 401.759, 48.8964, 0.2796", "420.504, 402.818, 49.215, 0.2542", "421.451, 403.355, 49.1879, 0.305", "422.53, 403.482, 49.4822, 0.356", "423.421, 404.094, 48.739, 0.4322", "424.143, 404.961, 48.8054, 0.4576", "424.753, 405.873, 49.3385, 0.5338", "425.443, 406.743, 49.8758, 0.5592", "426.246, 407.556, 49.9951, 0.6864", "427.104, 408.229, 50.6744, 0.7372", "427.943, 408.943, 51.3492, 0.7372", "428.525, 409.441, 51.6474, 0.5848", "429.487, 409.972, 51.5634, 0.4322", "430.535, 410.352, 51.0362, 0.3304", "431.557, 410.762, 51.5262, 0.3814", "432.526, 411.21, 52.4611, 0.5338", "433.513, 411.68, 53.2235, 0.661", "434.54, 412.094, 53.8048, 0.661", "435.609, 412.215, 54.3368, 0.5592", "436.643, 412.381, 53.3005, 0.5592", "437.658, 412.901, 53.2064, 0.6864", "438.611, 413.529, 53.2316, 0.839", "439.629, 414.041, 53.3733, 0.8898", "440.62, 414.476, 54.1394, 0.839", "441.57, 414.832, 55.3655, 0.8136", "442.578, 415.33, 55.7956, 0.8136", "443.556, 415.828, 56.5172, 0.8136", "444.534, 416.403, 56.7787, 0.7626", "445.521, 416.853, 57.5543, 0.6864", "446.533, 417.269, 58.3159, 0.6102", "447.546, 417.748, 58.7986, 0.5338", "448.61, 418.142, 58.7913, 0.5084", "449.71, 418.426, 58.7468, 0.5338", "450.755, 418.869, 58.5108, 0.6864" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "370.105, 358.069, 33.3284, 0.6864", "367.04, 358.248, 30.7034, 0.356", "367.44, 359.369, 26.959, 0.305", "367.497, 360.224, 26.959, 0.305", "367.555, 360.794, 26.959, 0.2796", "367.155, 360.736, 26.959, 0.2542", "365.261, 359.735, 23.9635, 0.2796", "364.579, 359.679, 23.9635, 0.3304", "362.849, 360.431, 21.7171, 0.4068", "361.776, 360.544, 21.7171, 0.3814", "360.99, 360.555, 20.2194, 0.356", "360.537, 360.555, 20.2194, 0.305", "360.593, 359.71, 20.2194, 0.305", "360.764, 358.922, 20.2194, 0.305", "360.85, 357.635, 19.4704, 0.2796", "361.13, 356.904, 19.4704, 0.2542", "360.792, 356.173, 19.4704, 0.2288", "360.063, 356.51, 19.4704, 0.2288", "359.895, 356.679, 19.4704, 0.2542", "357.25, 358.254, 19.4704, 0.305", "356.52, 359.097, 19.4704, 0.4576", "353.954, 360.906, 17.9726, 0.5592", "351.71, 362.364, 17.9726, 0.661", "350.24, 363.544, 17.2239, 0.5592", "348.557, 364.215, 17.2239, 0.5084", "346.029, 365.167, 16.4749, 0.4322", "343.392, 366.671, 14.9772, 0.5084", "340.379, 368.295, 15.7262, 0.6864" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "370.105, 358.069, 33.3284, 0.6864", "369.974, 356.992, 34.0805, 0.7118", "370.0, 355.852, 33.952, 0.7372", "370.169, 354.808, 33.0033, 0.7626", "370.474, 353.899, 31.5118, 0.7372", "370.854, 353.09, 29.9152, 0.7372", "371.753, 352.4, 29.6794, 0.7372", "372.724, 351.801, 29.6775, 0.7626", "373.712, 351.231, 29.6646, 0.7118", "374.557, 350.526, 29.5691, 0.6356", "374.779, 349.523, 28.8854, 0.4576" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "404.747, 349.461, 21.6874, 0.9152", "405.952, 348.212, 21.3102, 0.5084", "405.794, 347.112, 21.5292, 0.4576", "406.23, 346.138, 21.4248, 0.4576", "406.888, 345.231, 21.8439, 0.483", "407.134, 344.12, 21.8644, 0.5338", "407.462, 343.031, 21.9918, 0.6102", "407.582, 341.936, 22.6747, 0.6864", "407.913, 340.856, 22.8029, 0.7118", "408.124, 339.796, 22.0192, 0.7118", "408.523, 338.81, 21.0109, 0.661", "409.168, 337.899, 20.7189, 0.6356", "410.178, 337.386, 20.7138, 0.6102", "410.996, 336.607, 20.6853, 0.5848", "411.365, 335.532, 20.5103, 0.6102", "411.641, 334.476, 19.7537, 0.6356", "411.882, 333.376, 19.4692, 0.7372", "412.582, 332.537, 18.8611, 0.7626", "412.919, 331.71, 17.2981, 0.8136", "412.651, 330.69, 16.3534, 0.788", "412.324, 329.599, 16.24, 0.7626", "412.04, 328.495, 16.24, 0.6864", "411.878, 327.371, 16.2403, 0.6356", "412.593, 326.623, 16.2422, 0.6356", "413.701, 326.374, 16.2551, 0.6356", "414.79, 326.033, 16.3554, 0.6102", "415.272, 325.239, 17.36, 0.4576" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "404.747, 349.461, 21.6874, 0.9152", "405.949, 350.139, 20.8404, 0.6864", "407.016, 350.306, 20.0368, 0.6356", "408.003, 349.807, 19.7663, 0.6356", "408.697, 348.95, 20.3815, 0.5848", "409.598, 348.276, 20.4179, 0.5592", "410.481, 347.792, 19.1856, 0.5848", "411.568, 347.777, 18.5046, 0.5848", "412.647, 348.147, 18.5618, 0.6356", "413.721, 348.446, 19.024, 0.5848", "414.819, 348.366, 19.5994, 0.6864", "415.735, 347.687, 19.5972, 0.661", "416.589, 346.925, 19.5877, 0.7372", "417.565, 346.331, 19.5392, 0.661", "418.568, 345.823, 19.2452, 0.7118", "419.623, 345.529, 18.5794, 0.6864", "420.603, 344.95, 18.669, 0.7118", "421.617, 344.505, 19.2475, 0.7372", "422.503, 343.912, 18.4862, 0.8136", "423.312, 343.489, 16.8834, 0.9152", "424.357, 343.195, 16.0986, 0.9152", "425.355, 343.48, 15.2141, 0.9152", "426.464, 343.538, 14.6381, 0.839", "427.572, 343.508, 14.0036, 0.788", "428.542, 343.086, 14.0, 0.4576" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "391.477, 378.663, 34.3641, 0.6864", "387.117, 377.754, 29.2057, 0.3304", "385.681, 377.236, 29.2057, 0.2542", "385.402, 378.193, 29.2057, 0.2288", "385.481, 379.429, 29.2057, 0.2288", "385.043, 379.749, 29.2057, 0.2796", "383.322, 379.578, 27.708, 0.3814", "382.368, 379.698, 27.708, 0.5338", "380.31, 379.879, 25.4612, 0.5848", "379.441, 379.444, 25.4612, 0.5338", "378.471, 379.193, 23.2148, 0.3814", "377.606, 379.823, 23.2148, 0.305", "376.938, 380.059, 23.2148, 0.2796", "376.073, 379.547, 23.2148, 0.305", "375.129, 378.958, 23.2148, 0.305", "374.136, 379.576, 21.7171, 0.305", "373.745, 379.928, 21.7171, 0.305", "372.843, 380.163, 21.7171, 0.305", "372.218, 380.633, 21.7171, 0.356", "371.708, 382.748, 21.7171, 0.3814", "371.003, 383.766, 21.7171, 0.4068", "370.313, 384.46, 20.9681, 0.356", "369.863, 384.504, 20.9681, 0.3304", "369.281, 384.369, 20.9681, 0.3304", "368.742, 384.481, 20.9681, 0.3814", "368.48, 385.066, 20.2194, 0.4576", "368.368, 385.603, 20.2194, 0.5338", "368.727, 386.656, 20.2194, 0.5848", "368.206, 387.457, 18.7216, 0.5084", "367.646, 387.613, 18.7216, 0.4068", "367.513, 388.192, 18.7216, 0.3304", "367.909, 388.807, 17.2239, 0.305", "368.71, 389.163, 17.2239, 0.305", "369.31, 389.407, 17.2239, 0.305", "368.776, 390.096, 17.2239, 0.305", "368.125, 391.187, 15.7262, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "391.477, 378.663, 34.3641, 0.6864", "391.935, 378.782, 35.28, 0.5338", "392.438, 379.801, 35.322, 0.483", "393.302, 380.514, 35.5354, 0.483", "394.285, 381.005, 36.2222, 0.5338", "395.29, 381.518, 35.9892, 0.5848", "396.235, 382.097, 35.397, 0.6102", "397.205, 382.692, 35.488, 0.6102", "398.158, 383.242, 36.1673, 0.661", "399.046, 383.952, 36.4092, 0.6864", "400.014, 384.551, 36.4459, 0.6864", "401.011, 385.099, 36.6366, 0.6356", "401.863, 385.777, 37.2548, 0.6102", "402.768, 386.397, 36.6257, 0.6356", "403.789, 386.877, 36.4594, 0.661", "404.852, 386.585, 36.7816, 0.7118", "405.8, 386.023, 37.4716, 0.7372", "406.779, 385.447, 37.7168, 0.6864", "407.783, 385.004, 38.4126, 0.6102", "408.892, 384.888, 38.6324, 0.5338", "409.916, 385.394, 38.5949, 0.6102", "410.882, 385.989, 38.3844, 0.7118", "411.947, 386.342, 38.4969, 0.8136", "413.059, 386.544, 38.7856, 0.8644", "414.162, 386.468, 39.412, 0.8898", "415.222, 386.151, 39.0902, 0.8898", "416.337, 386.026, 38.64, 0.788", "417.434, 385.724, 38.64, 0.6864", "418.572, 385.641, 38.64, 0.661", "419.715, 385.631, 38.64, 0.7118", "420.857, 385.566, 38.64, 0.7626", "421.941, 385.229, 38.6406, 0.7118", "423.016, 384.845, 38.6428, 0.6356", "424.055, 384.376, 38.6562, 0.5338", "425.141, 384.028, 38.7447, 0.5338", "426.193, 383.674, 39.296, 0.6356", "427.197, 383.168, 39.7253, 0.7372", "428.056, 382.421, 39.5811, 0.7626", "428.616, 382.207, 38.7736, 0.6864", "429.48, 381.609, 37.7496, 0.661", "430.281, 380.806, 37.5152, 0.6356", "430.794, 379.792, 37.492, 0.6102", "431.613, 379.028, 37.3307, 0.6102", "432.458, 378.352, 36.5434, 0.6864", "433.379, 377.687, 36.3975, 0.839", "434.281, 376.982, 36.3888, 0.8898", "435.188, 376.294, 36.3454, 0.8644", "435.997, 375.501, 36.1253, 0.7118", "436.553, 374.534, 35.7574, 0.6102", "437.201, 373.624, 36.2345, 0.5338", "438.012, 372.876, 35.8025, 0.5848", "438.751, 372.034, 35.3063, 0.5848", "439.59, 371.259, 35.28, 0.5338", "440.534, 370.616, 35.28, 0.4068", "441.419, 369.893, 35.28, 0.3814", "442.371, 369.265, 35.28, 0.4576", "443.314, 368.618, 35.2794, 0.6356", "444.229, 367.936, 35.2775, 0.788", "445.134, 367.241, 35.2685, 0.8644", "446.03, 366.533, 35.2262, 0.788", "446.83, 365.721, 35.0526, 0.661", "447.596, 364.96, 34.2787, 0.5592", "448.622, 364.477, 34.1508, 0.5848", "449.563, 363.853, 34.1102, 0.6356", "450.279, 362.97, 33.9077, 0.7372", "451.223, 362.423, 33.1492, 0.7626", "452.296, 362.043, 32.9986, 0.788", "453.263, 361.449, 32.8157, 0.7372", "453.967, 360.605, 32.1224, 0.7118", "454.929, 360.051, 32.2624, 0.6864", "456.024, 359.96, 32.9815, 0.6864", "457.107, 359.648, 33.0215, 0.6864", "458.09, 359.074, 32.937, 0.6864", "458.977, 358.419, 32.3935, 0.661", "459.762, 357.807, 31.1114, 0.5848", "460.633, 357.11, 31.3729, 0.483", "461.009, 356.364, 31.1688, 0.4068", "461.69, 355.475, 30.653, 0.4322", "462.48, 354.719, 29.9785, 0.4576", "463.382, 354.036, 29.7892, 0.5084", "464.274, 353.408, 30.4307, 0.483", "465.085, 352.744, 29.8934, 0.483", "465.792, 351.861, 29.6825, 0.4576", "466.648, 351.102, 29.6918, 0.4576", "467.649, 350.556, 29.7424, 0.5084", "468.708, 350.293, 30.3366, 0.5338", "469.744, 349.889, 30.7902, 0.5592", "470.835, 349.561, 30.7415, 0.5084", "471.958, 349.552, 30.3607, 0.5084", "473.037, 349.767, 29.713, 0.5338", "474.141, 349.501, 29.68, 0.6102", "475.249, 349.248, 29.6806, 0.6356", "476.327, 348.872, 29.6822, 0.6102", "477.311, 348.294, 29.6912, 0.5338", "478.391, 347.927, 29.755, 0.4576", "479.474, 347.66, 30.1862, 0.4068", "480.585, 347.59, 30.0171, 0.4322", "481.668, 347.286, 29.68, 0.5084", "482.796, 347.109, 29.68, 0.5848", "483.83, 346.661, 29.68, 0.5338", "484.81, 346.076, 29.68, 0.4576", "485.839, 345.582, 29.68, 0.4068", "486.923, 345.231, 29.68, 0.4322", "487.994, 344.835, 29.68, 0.4322", "489.036, 344.371, 29.6797, 0.3814", "489.958, 343.7, 29.6786, 0.3814", "490.847, 342.985, 29.673, 0.4068", "491.611, 342.154, 29.6405, 0.483", "492.27, 341.223, 29.4596, 0.483", "492.9, 340.433, 28.3349, 0.483", "493.837, 339.981, 27.2185, 0.4322", "494.869, 339.617, 26.5776, 0.3814", "495.827, 339.068, 27.1519, 0.356", "496.66, 338.293, 27.2289, 0.3304", "497.357, 337.447, 26.5289, 0.3814", "498.404, 337.067, 26.32, 0.4322", "499.497, 336.76, 26.3206, 0.5592", "500.622, 336.562, 26.3228, 0.6356", "501.711, 336.228, 26.3396, 0.661", "502.843, 336.074, 26.4516, 0.5848", "503.818, 335.56, 27.078, 0.483", "504.568, 334.725, 27.44, 0.3814", "505.412, 333.973, 27.44, 0.356", "506.442, 333.482, 27.44, 0.3304", "507.478, 333.018, 27.44, 0.3304", "507.478, 332.446, 27.72, 0.2796", "507.491, 332.116, 27.72, 0.2542", "507.632, 331.912, 27.72, 0.2288", "507.822, 331.76, 27.72, 0.2288", "508.343, 331.252, 27.72, 0.2288", "508.724, 330.832, 27.72, 0.2288", "509.13, 330.438, 27.72, 0.2288", "509.55, 330.094, 27.8132, 0.2288", "509.856, 329.676, 28.0, 0.2542", "510.301, 329.32, 28.0, 0.305", "510.707, 328.925, 28.0, 0.3814", "511.063, 328.48, 28.0, 0.4068", "511.559, 328.176, 28.0, 0.3814", "512.029, 327.845, 28.0, 0.305", "512.576, 327.591, 28.0, 0.2542", "512.944, 327.159, 28.0, 0.2288", "513.289, 326.701, 28.0, 0.2288", "513.771, 326.396, 27.9689, 0.2288", "514.342, 326.269, 27.72, 0.2542", "514.813, 325.938, 27.72, 0.305", "515.41, 325.811, 27.5332, 0.4068", "515.944, 325.582, 27.44, 0.5084", "516.63, 325.468, 27.44, 0.6102", "517.177, 325.252, 27.3468, 0.6102", "517.673, 325.125, 26.9111, 0.5592", "518.423, 325.087, 26.88, 0.483", "518.919, 324.883, 26.6311, 0.483", "519.694, 324.337, 25.9468, 0.5338", "520.152, 324.184, 25.48, 0.5084", "520.672, 323.904, 25.48, 0.4322", "521.206, 323.765, 25.1689, 0.4322", "521.816, 323.675, 24.92, 0.4322", "522.466, 323.523, 24.92, 0.4322", "523.0, 323.371, 24.64, 0.4068", "523.495, 323.066, 24.64, 0.4068", "524.182, 322.951, 24.64, 0.483", "524.982, 322.951, 24.64, 0.5848", "525.782, 322.951, 24.64, 0.661", "526.469, 322.837, 24.64, 0.6356", "527.156, 322.837, 24.36, 0.5848", "527.956, 322.837, 24.36, 0.5338", "528.758, 322.837, 24.36, 0.5592", "529.354, 322.926, 24.36, 0.7372", "530.206, 323.561, 23.8, 0.6356", "530.74, 323.829, 23.8, 0.5084", "531.311, 323.866, 23.3332, 0.4576", "532.074, 323.866, 23.24, 0.4576", "532.875, 323.866, 23.24, 0.4322", "533.677, 323.866, 23.24, 0.4068", "534.477, 323.866, 23.24, 0.356", "535.164, 323.866, 22.96, 0.3304", "535.964, 323.866, 22.96, 0.305", "536.766, 323.866, 22.96, 0.356", "537.566, 323.866, 22.96, 0.4322", "538.367, 323.866, 22.96, 0.5338", "539.167, 323.866, 22.96, 0.5848", "539.854, 323.981, 22.96, 0.5848", "540.527, 324.095, 22.9289, 0.5592", "541.151, 324.172, 22.68, 0.5338", "541.607, 324.337, 22.2443, 0.5592", "542.256, 324.667, 22.12, 0.5338", "542.828, 324.667, 22.12, 0.2796", "543.63, 324.667, 22.12, 0.2796", "544.354, 324.591, 22.12, 0.3814", "545.117, 324.553, 22.12, 0.5338", "545.917, 324.553, 22.12, 0.6356", "546.604, 324.553, 22.12, 0.6864", "547.38, 325.036, 21.0, 0.6102", "547.785, 325.43, 21.0, 0.5338", "548.294, 325.722, 21.0, 0.483", "548.891, 325.888, 20.9068, 0.4576", "549.311, 326.192, 20.72, 0.4322", "549.578, 326.714, 20.72, 0.3814", "549.578, 326.841, 20.72, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "391.477, 378.663, 34.3641, 0.6864", "392.066, 378.436, 33.679, 0.7372", "393.041, 378.241, 32.326, 0.661", "394.111, 377.925, 32.3274, 0.4576" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "436.093, 401.738, 38.6422, 0.4576", "437.241, 402.508, 38.829, 0.6356", "438.277, 402.876, 39.5189, 0.661", "439.317, 403.331, 39.4691, 0.661", "440.397, 403.491, 38.7139, 0.6102", "441.539, 403.503, 38.64, 0.5592", "442.68, 403.585, 38.6408, 0.6102", "443.75, 403.967, 38.6453, 0.7372", "444.809, 404.383, 38.6705, 0.839", "445.921, 404.612, 38.8422, 0.839", "446.973, 404.914, 39.5738, 0.7372", "448.047, 405.253, 39.76, 0.661", "449.066, 405.765, 39.76, 0.6356", "450.053, 406.336, 39.76, 0.6864", "451.119, 406.709, 39.76, 0.7626", "452.244, 406.877, 39.76, 0.788", "453.323, 407.255, 39.76, 0.788", "454.366, 407.717, 39.7597, 0.7372", "455.322, 408.344, 39.7589, 0.6864", "456.388, 408.746, 39.7522, 0.5848", "457.415, 409.245, 39.716, 0.483", "458.406, 409.799, 39.5172, 0.4322", "459.337, 410.355, 39.0323, 0.4068", "460.363, 410.815, 38.6963, 0.4576", "461.293, 411.457, 38.3398, 0.483", "462.35, 411.354, 37.6211, 0.5592", "463.44, 411.026, 37.6998, 0.5848", "464.472, 411.163, 37.6079, 0.5848", "465.449, 410.972, 36.3454, 0.5592", "466.53, 410.897, 35.5376, 0.483", "467.611, 411.222, 35.2814, 0.483", "468.743, 411.389, 35.2898, 0.5338", "469.671, 412.022, 35.3699, 0.6864", "470.432, 412.843, 35.7538, 0.7626", "471.128, 413.714, 36.2849, 0.7118", "472.057, 414.341, 36.1178, 0.5848", "473.031, 414.276, 34.8564, 0.4322", "473.955, 414.794, 34.1919, 0.4068", "474.815, 415.548, 34.1589, 0.3814", "475.806, 416.111, 34.1544, 0.4576", "476.895, 416.452, 34.125, 0.483", "477.978, 416.795, 33.945, 0.5848", "479.011, 417.116, 33.1845, 0.6356", "479.947, 417.748, 32.8924, 0.6864", "480.486, 418.689, 32.258, 0.6864", "480.79, 419.767, 31.92, 0.6864", "481.428, 420.706, 31.92, 0.6356", "482.44, 421.233, 31.92, 0.5338", "483.547, 421.519, 31.92, 0.4068", "484.46, 422.184, 31.92, 0.4068", "485.129, 423.103, 31.92, 0.5084", "485.69, 424.098, 31.92, 0.6356", "486.414, 424.982, 31.92, 0.6356", "487.218, 425.796, 31.92, 0.5592", "488.01, 426.621, 31.92, 0.4576", "488.734, 427.501, 31.92, 0.3814", "489.412, 428.42, 31.92, 0.3304", "490.197, 429.252, 31.92, 0.3304", "490.603, 429.855, 31.8522, 0.4068", "491.409, 430.648, 31.5535, 0.5084", "492.22, 431.384, 30.8364, 0.5592", "493.154, 432.039, 30.7471, 0.5338", "493.986, 432.818, 30.5656, 0.4576", "494.75, 433.579, 29.794, 0.4322", "495.743, 434.131, 29.682, 0.4322", "496.718, 434.721, 29.6904, 0.4322", "497.498, 435.545, 29.7352, 0.4068", "498.326, 436.28, 30.2162, 0.3814", "498.936, 437.193, 30.784, 0.3814", "499.516, 438.175, 30.7087, 0.4068", "500.281, 438.987, 30.2938, 0.4322", "500.935, 439.867, 29.6803, 0.4576", "501.264, 440.961, 29.6792, 0.4322", "501.585, 442.055, 29.6747, 0.4322", "501.939, 443.129, 29.6467, 0.4576", "502.516, 444.111, 29.5044, 0.5084", "503.085, 445.057, 28.8672, 0.5084", "503.503, 446.081, 28.56, 0.5084", "503.5, 447.222, 28.56, 0.5084", "503.886, 448.296, 28.56, 0.5084", "504.299, 449.359, 28.56, 0.4322", "504.728, 450.413, 28.56, 0.356", "505.04, 451.505, 28.56, 0.3304", "505.702, 452.436, 28.56, 0.356", "506.563, 453.138, 28.56, 0.356", "506.83, 453.329, 28.28, 0.305", "507.378, 453.583, 28.28, 0.2542", "508.05, 453.71, 28.28, 0.2288", "508.852, 453.71, 28.28, 0.2288", "509.652, 453.71, 28.28, 0.2288", "510.453, 453.71, 28.28, 0.2796", "511.177, 453.787, 28.28, 0.356", "511.673, 454.091, 28.28, 0.4576", "511.953, 454.536, 28.0932, 0.4576", "512.271, 454.981, 28.0, 0.4322", "512.513, 455.503, 27.9068, 0.4068", "512.626, 455.998, 27.72, 0.5848", "513.109, 456.431, 27.72, 0.5084", "513.453, 456.888, 27.72, 0.4322", "513.694, 457.346, 27.4711, 0.3814", "513.885, 457.677, 27.0668, 0.4322", "514.305, 457.867, 26.88, 0.4068", "515.143, 458.058, 26.88, 0.4068", "515.944, 458.058, 26.88, 0.4576", "516.732, 458.058, 26.8489, 0.483", "517.318, 458.172, 26.6, 0.4576", "517.901, 458.274, 26.32, 0.356", "518.589, 458.388, 26.32, 0.305", "519.263, 458.515, 26.32, 0.3304", "519.834, 458.744, 26.32, 0.4576", "520.521, 458.858, 26.32, 0.5848", "521.206, 458.973, 26.32, 0.6102", "522.35, 459.316, 26.04, 0.4576", "522.961, 459.507, 26.04, 0.4068", "523.571, 459.697, 26.04, 0.356", "524.182, 459.888, 26.04, 0.305", "524.867, 460.002, 26.04, 0.2542", "525.211, 460.002, 26.04, 0.2542", "525.745, 460.015, 26.3822, 0.4576", "526.698, 460.346, 26.6, 0.7626", "527.956, 460.689, 26.6, 0.5084", "528.758, 460.689, 26.6, 0.4322", "529.558, 460.689, 26.6, 0.483", "530.143, 460.549, 26.4132, 0.5592", "530.703, 460.46, 26.04, 0.6102", "531.503, 460.46, 26.04, 0.5848", "532.19, 460.46, 26.04, 0.4068", "532.532, 460.46, 26.04, 0.305", "532.773, 460.498, 25.3243, 0.356", "533.448, 460.574, 25.2, 0.4322", "533.982, 460.574, 24.5468, 0.4322", "534.477, 460.574, 24.08, 0.4068", "535.011, 460.422, 24.08, 0.4322", "535.85, 460.231, 24.08, 0.4068", "536.651, 460.231, 24.08, 0.3304", "537.337, 460.231, 23.8, 0.2796", "537.667, 460.219, 23.8, 0.2288", "537.871, 460.079, 23.8, 0.2542", "538.1, 459.672, 23.6757, 0.483", "538.595, 459.354, 23.1468, 0.661", "539.854, 459.087, 22.96, 0.4322", "540.464, 459.087, 22.4932, 0.305", "541.074, 458.935, 22.4, 0.2542", "541.328, 458.846, 22.4, 0.2288", "541.544, 458.719, 22.4, 0.2288", "541.709, 458.63, 22.1822, 0.2288", "542.13, 458.63, 21.8089, 0.3814", "542.612, 458.515, 21.3111, 0.5338", "543.401, 458.515, 21.28, 0.6356", "544.086, 458.515, 21.28, 0.6356", "544.544, 458.286, 21.28, 0.4322", "545.154, 457.867, 21.28, 0.661", "546.081, 457.193, 21.28, 0.7626", "546.49, 456.799, 21.28, 0.5592", "547.01, 456.533, 21.3111, 0.356", "547.443, 456.265, 21.56, 0.2542", "547.951, 455.973, 21.56, 0.2288", "548.281, 455.605, 21.8089, 0.2288", "548.586, 455.121, 21.84, 0.2288", "548.98, 454.715, 21.84, 0.2288", "549.375, 454.308, 21.84, 0.2796", "549.769, 453.901, 21.84, 0.356", "550.214, 453.546, 21.84, 0.4576", "550.544, 453.074, 21.84, 0.483", "550.914, 452.643, 21.84, 0.4576", "551.217, 452.147, 21.84, 0.4068", "551.662, 451.791, 21.84, 0.4068", "552.133, 451.46, 21.84, 0.4576", "552.578, 451.104, 21.84, 0.5084", "552.819, 450.659, 21.84, 0.4576", "553.467, 450.622, 21.84, 0.3304", "554.154, 450.278, 21.84, 0.305", "554.776, 450.202, 22.0889, 0.2796", "555.26, 450.012, 22.4, 0.2542", "555.832, 449.783, 22.4, 0.2288", "556.443, 449.592, 22.4, 0.2288", "557.014, 449.363, 22.4, 0.2288", "557.281, 449.287, 22.4, 0.2542", "557.701, 449.02, 22.4, 0.3814", "558.272, 448.677, 22.4, 0.4576", "558.73, 448.677, 22.4, 0.4068", "559.531, 448.677, 22.4, 0.3814", "560.229, 448.677, 22.1511, 0.3814", "560.854, 448.804, 22.0268, 0.356", "561.399, 448.982, 21.84, 0.305", "562.162, 449.02, 21.84, 0.2542", "562.962, 449.02, 21.84, 0.2542", "563.674, 449.109, 21.84, 0.3304", "564.157, 449.427, 21.84, 0.4322", "564.602, 449.783, 21.84, 0.5084", "565.112, 449.96, 21.84, 0.483", "565.341, 450.418, 21.84, 0.5084", "565.785, 450.545, 21.84, 0.5338", "566.599, 450.99, 21.84, 0.4322", "567.12, 451.27, 21.84, 0.4068", "567.501, 451.689, 21.84, 0.356", "567.768, 452.223, 21.84, 0.3304", "568.148, 452.643, 21.84, 0.2796", "568.454, 453.138, 21.84, 0.2542", "568.695, 453.698, 21.84, 0.2542", "568.924, 454.27, 21.84, 0.3304", "569.255, 454.74, 21.84, 0.4322", "569.662, 455.134, 21.84, 0.5338", "569.865, 455.617, 21.56, 0.5848", "570.144, 456.024, 21.28, 0.6356", "570.589, 456.494, 21.0, 0.5338", "570.628, 457.028, 21.0, 0.2796", "570.704, 457.752, 21.0, 0.2288", "571.008, 458.249, 21.0, 0.2288", "571.086, 458.973, 21.0, 0.2796", "571.086, 459.774, 21.0, 0.356", "571.086, 460.574, 21.0, 0.4576", "570.97, 461.261, 21.0, 0.5084", "570.97, 462.062, 21.0, 0.5592", "570.97, 462.748, 20.72, 0.5592", "570.983, 463.536, 20.72, 0.5084", "571.086, 464.235, 20.72, 0.3814", "571.086, 465.036, 20.72, 0.3304", "571.086, 465.837, 20.72, 0.356", "571.086, 466.409, 20.16, 0.4576" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "436.093, 401.738, 38.6422, 0.4576", "436.928, 401.269, 38.6495, 0.483", "437.755, 400.479, 38.6781, 0.5338", "438.6, 399.71, 38.7951, 0.5592", "439.542, 399.112, 39.2851, 0.5338", "440.498, 398.551, 38.7853, 0.483", "441.362, 397.828, 38.3121, 0.483", "442.217, 397.367, 36.9838, 0.483", "443.274, 397.063, 37.324, 0.483", "444.382, 396.847, 37.592, 0.4576", "445.263, 396.159, 37.9806, 0.5084", "446.078, 395.401, 38.4896, 0.5592", "446.983, 394.761, 38.0058, 0.6102", "447.997, 394.292, 37.49, 0.6356", "449.009, 393.785, 37.3408, 0.6356", "449.862, 393.101, 36.647, 0.6102", "450.671, 392.307, 36.3933, 0.5084", "451.751, 391.972, 36.3569, 0.483", "452.832, 391.64, 36.1402, 0.483", "453.849, 391.302, 35.2285, 0.5084", "454.873, 390.959, 34.4092, 0.4322", "455.806, 390.39, 35.007, 0.3814", "456.887, 390.209, 34.4344, 0.4068", "458.02, 390.16, 34.1323, 0.4576", "459.11, 389.86, 33.98, 0.5084", "460.173, 389.585, 33.2567, 0.5084", "461.078, 388.926, 33.04, 0.5338", "461.745, 388.0, 33.0397, 0.5084", "462.586, 387.228, 33.0386, 0.4576", "463.632, 386.781, 33.0324, 0.4068", "464.585, 386.15, 33.0025, 0.3814", "465.632, 385.9, 32.8283, 0.3814", "466.671, 386.25, 32.0939, 0.4322", "467.792, 386.13, 31.92, 0.5084", "468.932, 386.051, 31.92, 0.5592", "470.035, 385.786, 31.9197, 0.5084", "471.164, 385.642, 31.9178, 0.3814", "472.309, 385.64, 31.9043, 0.2796", "473.451, 385.629, 31.7999, 0.2796", "474.512, 385.503, 30.98, 0.356", "475.517, 384.979, 30.7997, 0.4576", "476.411, 384.266, 30.7983, 0.4576", "477.303, 383.556, 30.7919, 0.4068", "477.951, 382.63, 30.7518, 0.3304", "478.298, 381.55, 30.5206, 0.3304", "478.87, 380.674, 29.7522, 0.356", "479.913, 380.222, 29.6794, 0.3814", "481.047, 380.1, 29.6761, 0.3814", "482.139, 379.81, 29.6556, 0.4322", "483.105, 379.206, 29.5554, 0.4576", "484.093, 378.707, 28.9806, 0.483", "485.093, 378.213, 28.4096, 0.4068", "486.085, 377.734, 27.7726, 0.356", "487.145, 377.356, 27.44, 0.2796", "488.208, 376.974, 27.44, 0.2542", "489.122, 376.287, 27.44, 0.2542", "490.22, 376.029, 27.4392, 0.2796", "491.365, 376.01, 27.4344, 0.3304", "492.494, 375.874, 27.4028, 0.356", "493.591, 375.581, 27.2149, 0.3814", "494.682, 375.499, 26.4393, 0.4068", "495.748, 375.127, 26.3197, 0.4576", "496.74, 374.564, 26.3175, 0.5084", "497.527, 373.744, 26.3046, 0.5084", "498.441, 373.08, 26.2413, 0.4576", "499.516, 373.238, 25.7883, 0.4068", "500.577, 373.582, 25.2896, 0.3814", "501.53, 373.745, 26.32, 0.356", "501.428, 373.643, 25.48, 0.3304", "501.758, 373.63, 25.48, 0.2796", "502.102, 373.63, 25.48, 0.2542", "502.445, 373.63, 25.48, 0.2542", "503.474, 373.63, 25.48, 0.356", "504.136, 373.63, 25.8222, 0.4068", "504.745, 373.63, 26.2889, 0.4576", "505.457, 373.707, 26.32, 0.4068", "506.004, 373.847, 26.6, 0.3304", "506.792, 373.859, 26.6, 0.2542", "507.593, 373.859, 26.6, 0.2288", "508.128, 373.707, 26.88, 0.2288", "508.622, 373.402, 26.88, 0.2288", "509.003, 372.982, 26.88, 0.2288", "509.55, 372.728, 26.88, 0.2288", "510.186, 372.563, 26.88, 0.2288", "510.873, 372.449, 26.88, 0.2288", "511.406, 372.181, 26.88, 0.2542", "511.8, 371.775, 26.88, 0.2796", "512.398, 371.571, 26.88, 0.305", "513.161, 371.533, 26.88, 0.2796", "513.872, 371.444, 26.88, 0.2542", "514.495, 371.266, 26.88, 0.2288", "515.105, 371.076, 26.88, 0.2542", "515.576, 370.745, 26.88, 0.305", "516.021, 370.427, 26.9732, 0.356", "516.479, 370.161, 27.16, 0.3814", "516.784, 369.779, 27.44, 0.356", "517.203, 369.398, 27.44, 0.3304", "517.685, 369.08, 27.44, 0.3304", "518.194, 368.788, 27.44, 0.4068", "518.805, 368.597, 27.44, 0.5084", "519.605, 368.597, 27.44, 0.5848", "520.406, 368.597, 27.44, 0.5592", "521.206, 368.597, 27.44, 0.5084", "521.779, 368.673, 27.0668, 0.4068", "522.453, 368.711, 26.8489, 0.356", "523.151, 368.711, 26.6, 0.2796", "523.953, 368.711, 26.6, 0.305", "524.638, 368.711, 26.32, 0.4068", "525.44, 368.711, 26.32, 0.6102", "526.24, 368.711, 26.32, 0.7626", "526.927, 368.711, 26.32, 0.788", "527.498, 368.368, 26.32, 0.5592", "527.893, 368.075, 26.32, 0.4322", "528.185, 368.025, 26.32, 0.3304", "528.529, 368.025, 26.32, 0.2542", "528.758, 368.025, 26.32, 0.2542", "529.558, 368.025, 26.32, 0.305", "530.358, 368.025, 26.32, 0.4068", "530.906, 367.873, 26.5689, 0.5084", "531.617, 367.796, 26.6, 0.5592", "532.621, 367.428, 27.16, 0.5338", "533.256, 367.262, 27.16, 0.5848", "533.93, 366.983, 27.6268, 0.6864", "534.63, 366.575, 28.0, 0.6102", "535.201, 366.347, 28.0, 0.5592", "535.85, 366.309, 28.28, 0.4576", "536.459, 366.118, 28.28, 0.356", "537.031, 365.889, 28.28, 0.356", "537.604, 365.66, 28.28, 0.4576", "538.138, 365.622, 28.0, 0.6356", "538.404, 365.622, 26.9732, 0.5084", "538.938, 365.622, 26.88, 0.4068", "539.282, 365.622, 26.88, 0.3304", "539.625, 365.635, 26.6311, 0.4068", "539.993, 365.94, 26.6, 0.6102", "540.54, 366.652, 26.32, 0.839", "541.316, 367.364, 26.04, 0.839", "541.977, 367.948, 25.1689, 0.8644", "543.069, 368.355, 24.92, 0.6356", "543.858, 368.368, 24.92, 0.5338", "544.519, 368.508, 24.92, 0.5592", "545.039, 368.788, 24.92, 0.5592", "545.357, 369.271, 24.92, 0.5592", "545.651, 369.677, 25.1689, 0.5338", "546.057, 370.059, 25.2, 0.5338", "546.49, 370.427, 25.2, 0.5338", "546.794, 370.808, 25.48, 0.5338", "547.328, 371.076, 25.48, 0.5592", "547.849, 371.355, 25.48, 0.5338", "548.281, 371.723, 25.48, 0.5338", "548.789, 372.016, 25.48, 0.5084", "549.234, 372.258, 25.2, 0.5848", "550.227, 372.601, 24.5468, 0.661", "550.734, 372.715, 24.1111, 0.6356", "551.294, 372.842, 23.8311, 0.6102", "552.069, 373.541, 23.52, 0.661", "552.667, 373.859, 23.24, 0.5084", "553.162, 373.936, 23.24, 0.305", "553.925, 373.974, 23.24, 0.305", "554.268, 373.974, 23.24, 0.356", "554.612, 373.974, 23.24, 0.4576", "555.146, 374.469, 22.68, 0.3304", "555.68, 374.978, 22.1511, 0.8898", "556.544, 375.359, 21.56, 1.0168", "557.128, 375.804, 21.0, 0.7372", "558.272, 375.804, 20.72, 0.3814", "559.073, 375.804, 20.72, 0.2796", "559.302, 375.804, 20.72, 0.2288", "559.633, 375.918, 20.72, 0.3814" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "450.755, 418.869, 58.5108, 0.6864", "451.309, 419.276, 58.24, 0.7118", "452.566, 419.619, 58.24, 0.4322", "452.999, 419.873, 58.24, 0.2288", "453.126, 420.089, 58.24, 0.2288", "453.176, 420.382, 58.24, 0.2288", "453.24, 420.547, 58.24, 0.2288", "453.621, 420.967, 58.24, 0.2542", "454.104, 421.285, 58.24, 0.2796", "454.589, 421.487, 58.24, 0.2796", "454.804, 421.614, 58.24, 0.2542", "454.892, 421.869, 58.24, 0.2288", "455.198, 422.136, 58.24, 0.2288", "455.464, 422.213, 58.24, 0.2288", "456.1, 422.492, 58.24, 0.2288", "456.494, 422.899, 58.24, 0.2288", "457.003, 423.191, 58.24, 0.2288", "457.562, 423.432, 58.24, 0.2288", "458.059, 423.738, 58.24, 0.2288", "458.706, 423.89, 58.24, 0.2288", "459.279, 424.119, 58.24, 0.2288", "459.863, 424.335, 58.24, 0.2288", "460.27, 424.729, 58.24, 0.2288", "460.803, 424.996, 58.24, 0.2288", "461.413, 425.187, 58.24, 0.2288", "461.96, 425.441, 58.24, 0.2288", "462.596, 425.606, 58.24, 0.2288", "463.206, 425.797, 58.24, 0.2542", "463.549, 425.797, 58.24, 0.305", "464.07, 425.961, 58.24, 0.356", "464.133, 426.242, 58.24, 0.305", "464.248, 426.356, 58.24, 0.2542", "464.731, 426.674, 58.24, 0.2796", "465.303, 426.903, 58.24, 0.3304", "465.875, 427.132, 58.24, 0.3814", "466.523, 427.284, 58.24, 0.356", "467.21, 427.398, 58.24, 0.3814", "467.858, 427.551, 58.24, 0.483", "468.366, 427.742, 57.9911, 0.6102", "468.888, 428.008, 57.96, 0.6864", "469.777, 428.721, 57.96, 0.6356", "470.07, 429.229, 57.96, 0.6102", "470.54, 429.559, 57.96, 0.6102", "471.176, 429.953, 57.96, 0.4576", "471.659, 430.385, 57.96, 0.3814", "472.116, 430.729, 57.96, 0.5592", "472.599, 431.504, 57.96, 0.5084", "473.108, 431.796, 57.96, 0.483", "473.566, 432.139, 57.96, 0.5084", "473.909, 432.597, 57.96, 0.483", "474.188, 433.118, 57.96, 0.3814", "474.646, 433.462, 57.96, 0.2796", "475.218, 433.69, 57.96, 0.2542", "475.854, 433.855, 57.96, 0.2796", "476.336, 434.173, 57.96, 0.356", "476.832, 434.479, 57.96, 0.4322", "477.315, 434.797, 57.96, 0.5592", "477.734, 435.178, 57.96, 0.6102", "478.192, 435.521, 57.96, 0.5848", "478.447, 435.953, 57.96, 0.3304", "478.662, 436.08, 57.96, 0.2542", "478.916, 436.169, 57.96, 0.2288", "479.095, 436.22, 57.96, 0.2288", "479.667, 436.449, 57.96, 0.2288", "480.366, 436.55, 57.96, 0.2542", "480.848, 436.868, 57.96, 0.2796", "481.243, 437.275, 57.96, 0.3304", "481.547, 437.657, 58.24, 0.3304", "481.878, 438.127, 58.24, 0.3304", "482.094, 438.711, 58.24, 0.2796", "482.298, 438.851, 58.24, 0.2542", "482.464, 439.029, 58.24, 0.2288", "482.539, 439.296, 58.24, 0.2288", "482.552, 439.627, 58.24, 0.2288", "482.704, 440.047, 58.24, 0.2288", "482.921, 440.173, 58.24, 0.2288", "483.227, 440.326, 58.24, 0.2288", "483.429, 440.465, 58.24, 0.2288", "483.556, 440.681, 58.24, 0.2288", "483.581, 440.999, 58.24, 0.2288", "483.684, 441.126, 58.24, 0.2288", "483.798, 441.355, 58.24, 0.2288", "483.887, 441.609, 58.24, 0.2288", "484.103, 441.736, 58.24, 0.2288", "484.293, 441.889, 58.24, 0.2288", "484.561, 442.194, 58.24, 0.2288", "484.598, 442.499, 58.24, 0.2288", "484.865, 443.148, 58.24, 0.2288", "485.208, 443.605, 58.24, 0.2542", "485.424, 444.19, 58.24, 0.2796", "485.806, 444.494, 58.24, 0.2796", "485.857, 444.787, 58.24, 0.2542", "485.869, 445.118, 58.24, 0.2288", "486.162, 445.397, 58.24, 0.2288", "486.379, 445.524, 58.24, 0.2288", "487.103, 445.715, 58.24, 0.2288", "487.23, 445.817, 58.24, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "450.755, 418.869, 58.5108, 0.6864", "451.839, 418.922, 57.7536, 0.483", "452.848, 418.417, 57.6811, 0.483", "453.857, 417.885, 57.6859, 0.483", "454.977, 417.709, 57.72, 0.4322", "456.089, 417.917, 57.93, 0.3304", "457.142, 418.132, 58.8, 0.305", "457.6, 418.132, 58.24, 0.356", "458.286, 418.246, 58.24, 0.4322", "459.037, 418.297, 58.24, 0.4068", "459.621, 418.513, 58.24, 0.3304", "460.333, 418.602, 58.24, 0.2542", "460.803, 418.933, 58.24, 0.2288", "461.477, 419.06, 58.24, 0.2542", "462.163, 419.174, 58.24, 0.2796", "462.862, 419.276, 58.24, 0.305", "463.663, 419.276, 58.24, 0.2796", "464.426, 419.238, 58.24, 0.2542", "465.036, 419.047, 58.24, 0.2288", "465.507, 418.717, 58.24, 0.2288", "466.193, 418.602, 58.24, 0.2288", "466.753, 418.361, 58.24, 0.2288", "467.337, 418.145, 58.24, 0.2288", "467.934, 417.941, 58.24, 0.2542", "468.595, 417.801, 58.24, 0.3304", "469.154, 417.56, 58.24, 0.4068", "469.841, 417.446, 58.24, 0.4322", "470.527, 417.331, 58.24, 0.356", "471.214, 417.217, 58.24, 0.2796", "471.85, 417.052, 58.24, 0.2288", "472.472, 416.874, 58.24, 0.2288", "473.26, 416.861, 58.24, 0.2288", "473.96, 416.759, 58.24, 0.2288", "474.76, 416.759, 58.24, 0.2288", "475.447, 416.645, 58.24, 0.2288", "476.247, 416.645, 58.24, 0.2288", "477.048, 416.645, 58.24, 0.2288", "477.849, 416.645, 58.24, 0.2288", "478.65, 416.645, 58.24, 0.2288", "479.451, 416.645, 58.24, 0.2288", "480.251, 416.645, 58.24, 0.2288", "481.052, 416.645, 58.24, 0.2288", "481.853, 416.645, 58.24, 0.2288", "482.654, 416.645, 58.24, 0.2288", "483.454, 416.645, 58.24, 0.2288", "484.255, 416.645, 58.24, 0.2288", "485.056, 416.645, 58.24, 0.2288", "485.857, 416.645, 58.24, 0.2288", "486.658, 416.645, 58.24, 0.2288", "487.458, 416.645, 58.24, 0.2288", "488.259, 416.645, 58.24, 0.2288", "489.06, 416.645, 58.24, 0.2288", "489.861, 416.645, 58.24, 0.2288", "490.662, 416.645, 58.24, 0.2288", "491.462, 416.645, 58.24, 0.2288", "492.174, 416.645, 58.0222, 0.2288", "492.835, 416.645, 57.68, 0.2288", "493.522, 416.645, 57.4, 0.2288", "493.992, 416.759, 56.8711, 0.2288", "494.703, 416.836, 56.84, 0.2288", "495.466, 416.874, 56.84, 0.2288", "496.154, 416.988, 56.84, 0.2288", "496.954, 416.988, 56.84, 0.2288", "497.754, 416.988, 56.84, 0.2288", "498.555, 416.988, 56.84, 0.2288", "499.165, 416.797, 56.84, 0.2288", "499.75, 416.581, 56.84, 0.2288", "500.5, 416.53, 56.84, 0.2288", "501.301, 416.53, 56.84, 0.2288", "502.102, 416.53, 56.84, 0.2288", "502.865, 416.493, 56.84, 0.2288", "503.474, 416.302, 56.84, 0.2288", "504.148, 416.175, 56.84, 0.2288", "504.581, 415.806, 56.84, 0.2288", "505.063, 415.488, 56.84, 0.2288", "505.267, 415.349, 56.84, 0.2288", "505.419, 415.158, 56.84, 0.2288", "505.661, 415.056, 56.84, 0.2288", "505.991, 415.043, 56.84, 0.2288", "506.22, 415.043, 56.84, 0.2288", "506.805, 414.827, 56.84, 0.2288", "507.478, 414.7, 56.84, 0.2288", "508.279, 414.7, 56.84, 0.2288", "509.08, 414.7, 56.84, 0.2288", "509.423, 414.7, 56.84, 0.2288", "509.766, 414.7, 56.84, 0.2288", "510.059, 414.65, 56.84, 0.2288", "510.224, 414.471, 56.84, 0.2288", "510.835, 414.051, 56.84, 0.2288", "511.495, 413.912, 56.84, 0.2288", "512.207, 413.899, 56.6532, 0.2288", "512.779, 413.899, 56.0932, 0.2288", "513.44, 413.797, 56.0, 0.2288", "514.115, 413.67, 56.0, 0.2542", "514.878, 413.633, 56.0, 0.3304", "515.602, 413.556, 56.0, 0.4576", "516.402, 413.556, 56.0, 0.5338", "517.203, 413.556, 56.0, 0.5084", "518.003, 413.556, 56.0, 0.3814", "518.805, 413.556, 56.0, 0.2796", "519.605, 413.556, 56.0, 0.2288", "520.406, 413.556, 56.0, 0.2288", "521.206, 413.556, 56.0, 0.2288", "522.008, 413.556, 56.0, 0.2288", "522.592, 413.772, 56.0, 0.2288", "523.164, 413.785, 55.4711, 0.2288", "523.839, 413.899, 55.44, 0.2288", "524.602, 413.899, 55.3468, 0.2796", "525.146, 414.001, 54.9732, 0.3304", "525.656, 414.128, 54.5689, 0.3814", "525.987, 414.166, 53.7911, 0.356", "526.24, 414.242, 53.76, 0.356", "526.583, 414.242, 53.76, 0.3814", "527.613, 414.242, 53.76, 0.3814", "528.414, 414.242, 53.76, 0.4068", "529.214, 414.242, 53.76, 0.4576", "529.786, 414.471, 53.76, 0.4068", "530.485, 414.573, 53.76, 0.3304", "531.274, 414.586, 53.76, 0.2542", "532.074, 414.586, 53.76, 0.2288", "532.875, 414.586, 53.76, 0.2288", "533.677, 414.586, 53.76, 0.2288", "534.477, 414.586, 53.76, 0.2288", "535.279, 414.586, 53.76, 0.2288", "536.078, 414.586, 53.76, 0.2288", "536.88, 414.586, 53.76, 0.2288", "537.68, 414.586, 53.76, 0.2288", "538.482, 414.586, 53.76, 0.2288", "539.282, 414.586, 53.76, 0.2542", "540.082, 414.586, 53.76, 0.305", "540.883, 414.586, 53.76, 0.3814", "541.685, 414.586, 53.76, 0.4576", "542.485, 414.586, 53.76, 0.5084", "543.286, 414.586, 53.76, 0.5084", "544.036, 414.586, 53.8843, 0.4322", "544.659, 414.586, 54.32, 0.3304", "545.459, 414.586, 54.32, 0.2542", "546.26, 414.586, 54.32, 0.2288", "547.061, 414.586, 54.32, 0.2542", "547.862, 414.586, 54.32, 0.3304", "548.548, 414.471, 54.32, 0.4068", "549.349, 414.471, 54.32, 0.4322", "550.151, 414.471, 54.32, 0.4068", "550.951, 414.471, 54.32, 0.4576", "551.751, 414.471, 54.32, 0.5338", "552.552, 414.471, 54.32, 0.5592", "553.238, 414.586, 54.32, 0.4322", "554.039, 414.586, 54.32, 0.305", "554.841, 414.586, 54.32, 0.2288", "555.641, 414.586, 54.32, 0.2288", "556.443, 414.586, 54.32, 0.2288", "557.242, 414.586, 54.32, 0.2288", "557.471, 414.586, 54.04, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "374.779, 349.523, 28.8854, 0.4576", "374.06, 348.915, 28.5569, 0.483", "373.691, 347.838, 28.5093, 0.5084", "373.402, 346.738, 28.2699, 0.4576", "373.557, 345.685, 27.4532, 0.4576", "373.878, 344.623, 26.9514, 0.4068", "373.357, 343.683, 27.1477, 0.4322", "372.684, 342.776, 27.3101, 0.4068", "372.134, 341.852, 26.53, 0.4322", "372.25, 340.841, 25.8602, 0.4576", "372.987, 340.07, 24.915, 0.5592", "373.708, 339.368, 23.6222, 0.6356", "374.536, 338.632, 23.1952, 0.6864", "375.408, 338.067, 23.7815, 0.6864", "376.225, 337.36, 23.1342, 0.661", "376.593, 336.386, 22.0528, 0.6356", "376.718, 335.273, 21.8142, 0.6102", "375.995, 334.454, 21.5846, 0.661", "376.107, 333.963, 19.987, 0.7118", "377.224, 333.906, 19.5849, 0.7118", "378.344, 333.724, 19.4905, 0.6102", "379.33, 333.273, 18.7796, 0.5084", "379.508, 332.3, 17.5977, 0.5084", "379.154, 331.241, 17.3267, 0.5592", "378.48, 330.317, 17.2194, 0.5848", "378.368, 329.235, 17.0237, 0.5338", "378.658, 328.166, 16.7023, 0.483", "378.736, 327.128, 15.5529, 0.4576", "379.115, 326.098, 14.9436, 0.4576", "379.235, 325.135, 14.1078, 0.483", "378.865, 324.059, 14.0, 0.483", "378.414, 323.009, 14.0, 0.4576", "378.664, 322.036, 14.0, 0.2288" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "374.779, 349.523, 28.8854, 0.4576", "374.935, 348.941, 29.7298, 0.4322", "375.385, 348.083, 30.7854, 0.5084", "375.246, 346.963, 30.6978, 0.5592", "374.97, 345.892, 30.1431, 0.661", "374.977, 344.798, 29.6988, 0.7118", "375.365, 343.73, 29.7814, 0.7626", "375.462, 342.618, 29.9043, 0.7118", "375.469, 341.502, 29.302, 0.6356", "375.513, 340.394, 29.2466, 0.5084", "375.776, 339.31, 29.7153, 0.4068", "375.874, 338.18, 29.9015, 0.3304", "375.638, 337.115, 30.6102, 0.356", "375.583, 336.007, 30.2747, 0.4576", "376.047, 335.025, 29.5081, 0.6102", "376.369, 333.995, 28.7218, 0.7372", "376.378, 332.856, 28.5636, 0.8136", "376.382, 331.712, 28.5841, 0.8136", "376.413, 330.57, 28.7249, 0.788", "376.616, 329.491, 29.3465, 0.7626", "376.835, 328.417, 28.8803, 0.7626", "376.835, 327.322, 28.0885, 0.7372", "376.835, 326.214, 27.4571, 0.6864", "376.844, 325.07, 27.4481, 0.6356", "376.908, 323.928, 27.4929, 0.6102", "377.345, 322.926, 27.9174, 0.6102", "378.138, 322.139, 28.2839, 0.6102", "378.844, 321.327, 27.547, 0.661", "379.148, 320.24, 27.6945, 0.7118", "379.324, 319.165, 28.432, 0.7626", "379.809, 318.135, 28.3517, 0.7118", "380.279, 317.143, 27.6511, 0.6356", "380.617, 316.061, 27.4515, 0.5592", "380.926, 314.966, 27.5078, 0.5338", "380.952, 313.86, 27.4288, 0.5848", "380.952, 312.861, 27.4378, 0.661", "380.954, 311.717, 27.426, 0.7118", "380.968, 310.573, 27.3361, 0.661", "381.05, 309.47, 26.7417, 0.5848", "381.507, 308.46, 26.336, 0.5592", "382.257, 307.596, 26.3858, 0.6356", "382.828, 306.63, 26.6672, 0.6864", "383.246, 305.615, 27.3725, 0.7372", "383.849, 304.65, 27.4859, 0.788", "384.442, 303.678, 27.6662, 0.839", "385.012, 302.74, 28.3738, 0.839", "385.784, 301.909, 28.667, 0.7118", "386.638, 301.182, 29.0657, 0.6356", "387.427, 300.415, 29.6461, 0.5848", "388.097, 299.489, 29.6859, 0.6356", "388.695, 298.526, 29.71, 0.661", "388.97, 297.426, 29.8827, 0.6864", "389.556, 296.517, 30.6706, 0.6864", "390.526, 296.068, 31.4885, 0.6864", "391.587, 295.697, 31.9256, 0.6864", "392.624, 295.269, 31.9581, 0.6864", "393.171, 294.279, 32.1538, 0.7118", "393.367, 293.254, 33.1974, 0.7372", "393.645, 292.242, 34.1065, 0.7626", "394.249, 291.275, 34.1354, 0.7372", "394.76, 290.258, 34.0242, 0.6864", "395.253, 289.27, 33.4121, 0.6102", "395.745, 288.256, 33.04, 0.5592", "396.12, 287.183, 33.04, 0.5084", "396.413, 286.082, 33.04, 0.5084", "396.235, 284.967, 33.04, 0.483", "396.509, 283.898, 33.04, 0.5338", "397.268, 283.045, 33.0397, 0.5848", "398.039, 282.2, 33.0389, 0.6356", "398.666, 281.248, 33.035, 0.6356", "399.284, 280.288, 33.0151, 0.5592", "399.793, 279.269, 32.9036, 0.5338", "400.27, 278.275, 32.2876, 0.5084", "400.645, 277.215, 31.941, 0.5848", "400.918, 276.116, 32.0527, 0.661", "401.227, 275.06, 32.7099, 0.6864", "401.522, 273.98, 33.2013, 0.6356", "401.559, 272.867, 33.7568, 0.5592", "401.645, 271.762, 33.1094, 0.5592", "402.053, 270.705, 32.9888, 0.5592", "402.637, 269.733, 32.7468, 0.5592", "403.461, 269.008, 32.0454, 0.5592", "404.18, 268.13, 32.0995, 0.6102", "404.607, 267.118, 32.781, 0.6356", "405.224, 266.168, 33.04, 0.6102", "405.837, 265.202, 33.0403, 0.5338", "406.234, 264.139, 33.0414, 0.5084", "406.548, 263.046, 33.049, 0.5084", "406.579, 261.903, 33.0982, 0.5338", "406.587, 260.776, 33.4771, 0.5084", "406.636, 259.672, 34.1345, 0.483", "406.943, 258.583, 34.1673, 0.4576", "407.368, 257.526, 34.2056, 0.4322", "408.073, 256.632, 34.3818, 0.4322", "408.49, 255.669, 35.2145, 0.4068", "408.806, 254.577, 35.28, 0.4322", "408.866, 253.437, 35.28, 0.4322", "408.865, 252.293, 35.28, 0.4576", "408.858, 251.149, 35.28, 0.4322", "408.987, 250.059, 35.2814, 0.3814", "409.965, 249.545, 35.2895, 0.356", "410.876, 248.867, 35.3251, 0.4322", "411.68, 248.056, 35.4726, 0.5084", "412.418, 247.263, 36.2653, 0.5592", "412.995, 246.323, 36.7805, 0.5084", "413.383, 245.306, 37.1708, 0.5338", "413.871, 244.317, 36.4986, 0.5848", "414.375, 243.297, 36.512, 0.661", "414.887, 242.344, 37.2148, 0.6864", "415.37, 241.322, 37.3766, 0.6356", "416.012, 240.454, 36.6052, 0.5848", "416.671, 239.538, 36.4006, 0.5338", "416.497, 238.474, 36.4048, 0.5592", "416.585, 237.398, 36.4442, 0.5592", "416.978, 236.332, 36.6458, 0.5848", "417.503, 235.37, 37.3814, 0.6102", "418.094, 234.401, 37.6023, 0.661", "418.529, 233.369, 37.9411, 0.661", "418.943, 232.313, 37.6818, 0.6356", "419.422, 231.311, 38.1441, 0.6356", "419.862, 230.288, 38.7016, 0.6356", "420.225, 229.223, 39.0603, 0.6102", "420.594, 228.184, 39.732, 0.5592", "421.134, 227.182, 39.8826, 0.5338", "421.732, 226.245, 40.4029, 0.5592", "422.24, 225.246, 40.8736, 0.5592", "422.784, 224.242, 40.8436, 0.5848", "423.405, 223.286, 40.6902, 0.5848", "423.891, 222.332, 39.8779, 0.5848", "424.485, 221.362, 39.76, 0.5084", "425.241, 220.524, 39.7603, 0.3814", "425.888, 219.608, 39.7611, 0.3304", "426.431, 218.61, 39.7667, 0.356", "427.072, 217.667, 39.7936, 0.483", "427.831, 216.813, 39.9207, 0.5084", "428.542, 216.102, 40.88, 0.483", "428.848, 215.606, 40.32, 0.305", "429.141, 215.326, 40.32, 0.356", "429.534, 214.92, 40.32, 0.305", "429.839, 214.423, 40.32, 0.2542", "429.928, 213.712, 40.32, 0.2542", "430.246, 213.229, 40.32, 0.356", "430.525, 212.707, 40.32, 0.483", "430.97, 212.352, 40.32, 0.6102", "431.593, 211.602, 39.76, 0.6356", "432.165, 210.814, 39.1689, 0.5592", "432.585, 210.534, 38.92, 0.483", "432.979, 210.128, 38.92, 0.356", "433.449, 209.797, 38.92, 0.2796", "433.919, 209.466, 38.92, 0.2542", "434.352, 209.098, 38.92, 0.2796", "434.72, 208.666, 38.92, 0.3304", "435.038, 208.183, 38.92, 0.356", "435.432, 207.776, 38.92, 0.3814", "435.865, 207.407, 38.92, 0.356", "436.232, 206.975, 38.92, 0.305", "436.628, 206.569, 38.92, 0.2542", "436.919, 206.06, 38.92, 0.2288", "437.237, 205.577, 38.92, 0.2288", "437.478, 205.094, 38.7332, 0.305", "437.835, 204.687, 38.64, 0.4576", "438.266, 203.975, 38.64, 0.788", "438.699, 203.378, 38.64, 0.7118", "439.092, 202.742, 38.64, 0.6864", "439.716, 201.764, 38.64, 0.7626", "440.161, 200.607, 38.64, 0.5848", "440.465, 200.111, 38.64, 0.4576", "440.758, 199.603, 38.64, 0.356", "441.012, 199.056, 38.64, 0.3304", "441.012, 198.255, 38.64, 0.2796", "441.012, 197.454, 38.64, 0.305", "441.012, 196.654, 38.64, 0.3304", "441.012, 195.853, 38.64, 0.4322", "441.012, 195.052, 38.64, 0.483", "441.012, 194.251, 38.64, 0.5338", "441.012, 193.45, 38.64, 0.483", "441.012, 192.65, 38.64, 0.4322", "441.012, 191.849, 38.64, 0.4322", "441.012, 191.048, 38.64, 0.5592", "441.203, 190.438, 38.64, 0.6356", "441.47, 189.904, 38.64, 0.6356", "441.661, 189.294, 38.64, 0.5084", "441.698, 188.531, 38.64, 0.4322", "441.813, 187.845, 38.64, 0.356", "441.813, 187.044, 38.64, 0.305", "442.042, 186.472, 38.64, 0.2542", "442.156, 185.786, 38.64, 0.2288", "442.335, 185.163, 38.64, 0.2288", "442.423, 184.679, 38.08, 0.2288", "442.499, 183.955, 38.08, 0.2288", "442.741, 183.396, 38.08, 0.2288", "442.957, 182.811, 38.08, 0.2542", "443.109, 182.163, 38.08, 0.2796", "443.186, 181.438, 38.08, 0.305", "443.186, 181.095, 38.08, 0.2796", "443.198, 180.765, 38.08, 0.2542", "443.287, 180.523, 38.1111, 0.2288", "443.339, 180.396, 38.5157, 0.2288", "443.72, 179.799, 38.64, 0.2542", "443.872, 179.15, 38.64, 0.3304", "443.872, 178.35, 38.64, 0.4576", "443.91, 177.778, 39.1068, 0.6102", "444.102, 177.206, 39.2, 0.6864", "444.367, 176.099, 39.76, 0.5084", "444.444, 175.375, 39.76, 0.4322", "444.444, 174.574, 39.76, 0.4068", "444.444, 173.774, 39.76, 0.4576", "444.546, 173.075, 39.76, 0.3814", "444.673, 172.401, 39.76, 0.305", "444.787, 171.752, 39.8532, 0.2542", "444.902, 171.257, 40.32, 0.305", "445.016, 170.57, 40.32, 0.356", "445.283, 170.036, 40.32, 0.356", "445.55, 169.503, 40.32, 0.356", "445.817, 168.969, 40.32, 0.356", "446.274, 168.626, 40.32, 0.3814", "446.745, 168.295, 40.32, 0.3304", "447.418, 168.168, 40.32, 0.2796", "447.647, 168.168, 40.32, 0.2288", "447.953, 168.13, 40.32, 0.2288", "448.092, 167.927, 40.32, 0.2288", "448.105, 167.596, 40.32, 0.2288", "448.105, 167.253, 40.32, 0.3304", "448.219, 166.566, 40.32, 0.356", "448.335, 165.88, 40.32, 0.4322", "448.525, 165.27, 40.32, 0.483", "448.766, 164.711, 40.32, 0.5084", "449.16, 164.304, 40.32, 0.4322", "449.516, 163.859, 40.32, 0.3304", "449.897, 163.44, 40.32, 0.2542", "450.241, 162.982, 40.32, 0.305", "450.596, 162.537, 40.32, 0.4322", "450.927, 162.067, 40.32, 0.5592", "451.194, 161.533, 40.32, 0.5338", "451.576, 161.113, 40.32, 0.4068", "452.134, 160.872, 40.32, 0.2796", "452.617, 160.553, 40.32, 0.2288", "453.126, 160.262, 40.32, 0.2288", "453.444, 159.779, 40.32, 0.2288", "453.71, 159.245, 40.32, 0.2288", "453.901, 158.635, 40.32, 0.2288", "454.245, 158.177, 40.32, 0.2288", "454.576, 157.707, 40.32, 0.2288", "454.931, 157.262, 40.32, 0.2288", "455.223, 156.753, 40.32, 0.2288", "455.591, 156.321, 40.32, 0.2288", "456.113, 156.042, 40.32, 0.2288", "456.546, 155.673, 40.32, 0.2288", "457.003, 155.33, 40.32, 0.2288", "457.409, 154.935, 40.32, 0.2542", "457.931, 154.656, 40.32, 0.2796", "458.516, 154.44, 40.32, 0.305", "458.896, 154.351, 40.8489, 0.3304", "459.062, 153.995, 41.2532, 0.356", "459.583, 153.563, 41.44, 0.2542", "460.104, 153.283, 41.44, 0.2542", "460.562, 152.94, 41.44, 0.2796", "461.109, 152.686, 41.44, 0.3304", "461.617, 152.393, 41.44, 0.356", "462.405, 152.381, 41.44, 0.4322", "463.206, 152.381, 41.44, 0.483", "464.007, 152.381, 41.44, 0.5592", "464.807, 152.381, 41.44, 0.5848", "465.43, 152.381, 41.0043, 0.5848", "466.066, 152.495, 40.88, 0.5084", "466.753, 152.495, 40.88, 0.2288" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "394.111, 377.925, 32.3274, 0.4576", "394.523, 377.202, 31.9063, 0.4068", "393.901, 376.248, 31.7918, 0.4576", "393.221, 375.406, 31.0789, 0.5338", "392.783, 374.476, 29.948, 0.5848", "392.251, 373.812, 28.2503, 0.6356", "391.272, 373.394, 27.3193, 0.6102", "390.264, 373.283, 26.1906, 0.5338", "389.816, 373.254, 23.6396, 0.3814", "390.328, 372.915, 21.9036, 0.3304", "391.106, 372.094, 21.9828, 0.3814", "392.164, 371.817, 21.7176, 0.5338", "392.613, 370.978, 20.6816, 0.6356", "393.304, 370.073, 20.5226, 0.6864", "394.018, 369.282, 19.6434, 0.6864", "394.595, 368.394, 18.6637, 0.6356", "395.3, 367.503, 18.3658, 0.6102", "395.792, 366.517, 17.8055, 0.5592", "396.542, 365.7, 17.3267, 0.5848", "397.645, 365.438, 17.1422, 0.5084", "398.658, 365.089, 16.3478, 0.4576", "399.456, 364.298, 15.8858, 0.3814", "399.257, 363.678, 14.0, 0.4576" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "394.111, 377.925, 32.3274, 0.4576", "395.193, 377.987, 34.0166, 0.6102", "396.297, 378.224, 33.9324, 0.661", "397.279, 377.839, 33.0994, 0.6864" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "397.279, 377.839, 33.0994, 0.6864", "397.927, 377.435, 33.0123, 0.661", "398.408, 378.327, 32.0656, 0.5592", "398.708, 379.319, 31.0492, 0.5338", "399.122, 380.346, 31.5585, 0.483", "399.833, 381.188, 31.2654, 0.5084", "400.62, 381.985, 30.7703, 0.5338", "401.408, 382.812, 30.6732, 0.6102", "402.092, 383.692, 30.1921, 0.661", "402.779, 384.577, 29.6951, 0.6864", "403.57, 385.402, 29.5781, 0.6864", "404.316, 386.24, 29.1855, 0.6864", "405.136, 386.975, 28.581, 0.661", "406.025, 387.695, 28.56, 0.6356", "407.035, 388.226, 28.5594, 0.6102", "408.161, 388.402, 28.5555, 0.5848", "409.302, 388.476, 28.5309, 0.5338", "410.322, 388.941, 28.3738, 0.5084", "411.162, 389.627, 27.5929, 0.5592", "412.184, 390.122, 27.403, 0.6864", "413.271, 390.369, 27.2185, 0.7626", "414.36, 390.288, 26.4438, 0.7626", "415.438, 390.63, 26.3231, 0.7118", "416.497, 391.048, 26.3379, 0.661", "417.633, 391.142, 26.4404, 0.6864", "418.75, 391.187, 26.95, 0.7372", "419.706, 391.532, 25.9199, 0.839", "420.71, 391.949, 25.2098, 0.8644", "421.755, 392.353, 25.1717, 0.8136", "422.873, 392.291, 25.0219, 0.7118", "423.962, 392.506, 24.4334, 0.5848", "425.086, 392.506, 24.8321, 0.4576", "426.033, 392.508, 23.4242, 0.3814", "427.147, 392.519, 23.1764, 0.3814", "428.134, 392.591, 24.4331, 0.483", "428.977, 392.607, 25.3498, 0.661", "429.948, 393.05, 25.4453, 0.7372", "430.857, 393.398, 24.1816, 0.788", "431.993, 393.43, 24.3342, 0.7626", "433.102, 393.479, 24.8864, 0.6864", "434.103, 393.788, 23.9775, 0.661", "434.888, 394.484, 23.0101, 0.661", "435.728, 395.257, 22.7937, 0.7118", "436.651, 395.855, 22.1802, 0.6864", "437.668, 396.343, 21.84, 0.6864", "438.75, 396.693, 21.84, 0.6102", "439.807, 397.094, 21.8397, 0.6356", "440.791, 397.669, 21.8383, 0.5848", "441.871, 398.017, 21.8294, 0.5848", "442.984, 398.247, 21.7692, 0.483", "443.819, 399.002, 21.4757, 0.4576", "444.469, 399.896, 20.8174, 0.4576", "445.305, 400.669, 20.72, 0.5592", "446.241, 401.324, 20.7197, 0.6356", "447.069, 402.113, 20.7186, 0.6864", "447.874, 402.926, 20.7144, 0.6356", "448.664, 403.753, 20.6954, 0.5848", "449.432, 404.581, 20.5464, 0.5338", "450.21, 405.331, 19.7431, 0.5848", "450.783, 406.302, 19.5264, 0.5848", "451.221, 407.335, 19.1436, 0.5592", "451.848, 408.247, 18.5354, 0.4322", "452.616, 409.092, 18.3996, 0.356", "453.296, 409.991, 18.1149, 0.305", "453.447, 411.071, 17.4135, 0.356", "453.234, 412.184, 17.36, 0.4576", "453.371, 413.281, 17.36, 0.5848", "454.145, 414.115, 17.36, 0.661", "455.113, 414.715, 17.3594, 0.661", "456.136, 415.219, 17.3572, 0.5848", "457.173, 415.669, 17.3351, 0.483", "458.055, 416.384, 17.1441, 0.4068", "458.98, 416.851, 16.1832, 0.4068", "459.888, 416.759, 15.12, 0.4576" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "397.279, 377.839, 33.0994, 0.6864", "397.856, 376.931, 32.5044, 0.5592", "398.484, 376.057, 31.6921, 0.483", "399.422, 375.602, 30.777, 0.483", "400.493, 375.537, 30.41, 0.483", "401.549, 375.351, 30.9977, 0.4576", "402.399, 374.634, 30.4388, 0.4322", "403.166, 373.881, 29.6887, 0.4576", "404.27, 373.756, 29.2432, 0.5084", "405.402, 373.823, 29.5985, 0.5084", "406.499, 374.114, 29.6181, 0.5338", "407.619, 374.086, 29.2446, 0.5338", "408.589, 373.624, 28.4217, 0.5592", "409.509, 373.037, 27.6226, 0.483", "410.432, 372.437, 26.9142, 0.483", "411.419, 372.013, 25.9963, 0.5592", "412.504, 371.914, 26.1657, 0.7118", "413.53, 371.912, 27.3336, 0.8136", "414.671, 371.902, 27.4, 0.839", "415.806, 371.83, 27.1695, 0.8644", "416.847, 371.467, 26.8624, 0.9152", "417.848, 370.974, 27.4165, 0.9152", "418.868, 370.466, 27.5657, 0.9152", "419.843, 369.943, 28.1403, 0.8898", "420.755, 369.272, 28.4914, 0.9152", "421.732, 368.72, 28.2047, 0.8644", "422.788, 368.551, 27.3176, 0.7626", "423.874, 368.662, 26.509, 0.6356", "424.975, 368.434, 26.402, 0.5592", "425.809, 367.693, 26.787, 0.5848", "426.662, 367.003, 27.3876, 0.6864", "427.673, 366.49, 27.1852, 0.788", "428.542, 365.966, 27.44, 0.8136", "429.311, 365.952, 27.5282, 0.8136", "430.43, 365.875, 27.781, 0.788", "431.514, 365.557, 27.4406, 0.8136", "432.655, 365.492, 27.4397, 0.788", "433.794, 365.404, 27.4372, 0.9152" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "433.794, 365.404, 27.4372, 0.9152", "435.411, 365.157, 26.32, 0.839", "436.546, 365.048, 26.3197, 0.839", "437.689, 365.035, 26.3186, 0.788", "438.829, 364.952, 26.311, 0.7118", "439.846, 364.473, 26.2665, 0.6356", "440.692, 363.707, 26.0781, 0.6356", "441.52, 363.203, 24.848, 0.661", "442.567, 362.986, 24.1122, 0.6864", "443.5, 362.332, 24.2511, 0.6864", "444.294, 361.578, 24.9116, 0.6864", "445.22, 360.98, 24.642, 0.7118", "446.326, 360.852, 24.9015, 0.7626", "447.406, 360.535, 25.2154, 0.788", "448.527, 360.331, 25.3019, 0.7118", "449.608, 360.037, 25.6903, 0.6102", "450.602, 359.999, 24.4933, 0.5338", "451.498, 359.936, 22.7637, 0.5848", "452.542, 359.683, 22.5394, 0.5592", "453.613, 359.955, 22.9415, 0.5338", "454.677, 360.359, 22.8474, 0.4576", "455.772, 360.361, 22.2197, 0.5084", "456.843, 360.036, 21.7115, 0.5592", "457.931, 359.93, 21.0126, 0.6102", "458.876, 359.58, 19.8153, 0.5848", "459.732, 358.835, 19.6238, 0.6102", "460.598, 358.089, 19.7047, 0.6356", "461.619, 357.69, 20.2216, 0.6864", "462.697, 357.418, 20.72, 0.661", "463.826, 357.262, 20.7206, 0.661", "464.969, 357.212, 20.7231, 0.6864", "466.072, 356.938, 20.7413, 0.6864", "467.205, 356.927, 20.8589, 0.6356", "468.253, 357.262, 21.5149, 0.5592", "469.276, 356.986, 21.8296, 0.5848", "470.104, 356.2, 21.7974, 0.6356", "470.9, 355.38, 21.6642, 0.6864", "471.624, 354.565, 20.9731, 0.7118", "472.552, 353.931, 20.4893, 0.7372", "473.595, 353.668, 19.7229, 0.7372", "474.691, 353.941, 19.5026, 0.7118", "475.79, 354.054, 18.9403, 0.661", "476.882, 353.98, 18.1488, 0.6356", "477.901, 353.599, 17.4387, 0.5338", "478.852, 352.973, 17.358, 0.483", "479.759, 352.284, 17.3505, 0.4576", "480.781, 351.777, 17.3088, 0.5084", "481.839, 351.369, 17.0873, 0.5338", "482.924, 351.274, 16.2798, 0.5338", "483.998, 350.964, 16.0045, 0.5592", "484.875, 350.317, 15.3891, 0.5592", "485.668, 349.578, 16.1473, 0.5592", "486.676, 349.047, 16.24, 0.5592", "487.732, 348.62, 16.24, 0.6102", "488.852, 348.404, 16.24, 0.661", "489.943, 348.077, 16.2397, 0.6864", "491.026, 347.747, 16.2386, 0.661", "492.057, 347.259, 16.2316, 0.6356", "493.113, 346.832, 16.1916, 0.6102", "494.24, 346.685, 15.9401, 0.6356", "495.291, 346.407, 15.2018, 0.6356", "496.421, 346.259, 15.141, 0.5848", "497.54, 346.078, 15.2592, 0.5084", "498.54, 345.582, 15.7707, 0.5084", "499.481, 344.988, 15.3434, 0.6102", "500.199, 344.122, 15.1225, 0.7118", "500.757, 343.126, 15.1326, 0.6864", "501.471, 342.234, 15.1785, 0.5848", "502.277, 341.428, 15.372, 0.483", "503.06, 340.671, 16.1487, 0.483", "503.921, 339.924, 16.2383, 0.5084", "504.828, 339.233, 16.2308, 0.5084", "505.511, 338.329, 16.1955, 0.483", "505.727, 337.216, 15.9709, 0.4576", "506.106, 336.222, 15.12, 0.4576" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "433.794, 365.404, 27.4372, 0.9152", "434.663, 365.007, 27.4271, 0.5084", "435.416, 364.149, 27.3809, 0.4576", "435.672, 363.061, 27.0211, 0.5338", "435.88, 361.982, 26.4032, 0.6356", "436.125, 360.877, 26.6106, 0.661", "436.317, 359.793, 27.1676, 0.6102", "436.665, 358.753, 26.4827, 0.5592", "437.116, 357.714, 26.1618, 0.5848", "437.633, 356.745, 25.4867, 0.661", "438.233, 355.81, 24.8438, 0.7372", "438.599, 354.775, 24.1494, 0.7118", "438.969, 353.695, 24.092, 0.6356", "439.47, 352.67, 24.1506, 0.5592", "440.181, 351.798, 24.5008, 0.5592", "440.932, 350.992, 25.1611, 0.6102", "441.581, 350.062, 25.2, 0.661", "441.94, 348.989, 25.2, 0.6864", "441.733, 347.878, 25.1997, 0.7118", "441.882, 346.774, 25.1986, 0.7372", "442.137, 345.661, 25.1913, 0.7372", "442.516, 344.59, 25.1479, 0.661", "442.934, 343.536, 24.9217, 0.5592", "443.141, 342.467, 24.1559, 0.483", "443.458, 341.372, 24.0542, 0.4576", "443.783, 340.289, 23.9033, 0.4576", "444.258, 339.333, 23.0572, 0.4322", "444.777, 338.321, 22.8682, 0.4322", "445.294, 337.328, 22.4344, 0.4576", "445.909, 336.397, 21.9318, 0.5338", "446.538, 335.447, 22.0984, 0.5338", "447.28, 334.657, 22.8634, 0.483", "448.108, 333.87, 22.8785, 0.4068", "448.992, 333.166, 22.6027, 0.4322", "450.029, 332.798, 21.9047, 0.4576", "451.105, 332.42, 21.8277, 0.5084", "452.059, 331.816, 21.7507, 0.5084", "452.651, 330.872, 21.259, 0.5592", "453.305, 329.966, 20.7595, 0.5848", "454.016, 329.073, 20.7206, 0.5848", "454.761, 328.211, 20.7225, 0.5338", "455.731, 327.613, 20.7329, 0.4576", "456.694, 327.008, 20.7889, 0.4322", "457.505, 326.217, 21.068, 0.4322", "458.158, 325.348, 21.8095, 0.4576", "458.849, 324.442, 21.8515, 0.4322", "459.623, 323.599, 21.8904, 0.4322", "460.302, 322.695, 22.1435, 0.4576", "461.32, 322.48, 22.96, 0.5084", "462.461, 322.402, 22.96, 0.5338", "463.553, 322.082, 22.96, 0.483", "464.693, 322.0, 22.96, 0.4576", "465.809, 321.789, 22.9603, 0.4576", "466.511, 320.913, 22.9617, 0.5592", "467.025, 319.894, 22.9698, 0.6102", "467.526, 318.871, 23.0129, 0.6102", "467.895, 317.808, 23.3346, 0.5338", "467.507, 316.807, 23.8095, 0.483", "468.341, 315.884, 22.96, 0.4576", "467.82, 316.051, 22.8267, 0.4576", "468.277, 315.276, 23.9719, 0.483", "469.053, 314.438, 24.0106, 0.5592", "469.806, 313.582, 23.8123, 0.6356", "470.344, 312.623, 23.0742, 0.6356", "470.883, 311.621, 22.9597, 0.5592", "471.597, 310.742, 22.9589, 0.483", "472.651, 310.372, 22.9541, 0.5084", "473.794, 310.363, 22.9183, 0.5848", "474.934, 310.337, 22.7038, 0.661", "476.008, 310.172, 21.9271, 0.661", "477.033, 309.673, 21.7924, 0.5848", "478.011, 309.1, 21.5754, 0.5338", "478.774, 308.348, 20.6948, 0.483", "479.44, 307.486, 20.0256, 0.4576", "480.004, 306.521, 19.696, 0.4068", "481.016, 306.094, 20.2042, 0.3814", "482.074, 305.744, 19.8691, 0.4068", "483.123, 305.354, 19.6092, 0.4068", "483.981, 304.6, 19.6392, 0.4576", "484.822, 303.827, 19.7627, 0.5084", "485.748, 303.207, 20.2826, 0.5848", "486.635, 302.56, 19.6507, 0.6102", "487.534, 301.866, 19.4866, 0.5848", "488.254, 301.046, 18.8633, 0.5592", "488.947, 300.167, 18.3996, 0.5084", "489.607, 299.249, 18.0869, 0.483", "490.27, 298.356, 17.5302, 0.483", "491.108, 297.597, 17.7439, 0.5338", "491.99, 296.93, 18.3848, 0.5592", "492.693, 296.039, 18.4279, 0.5084", "493.567, 295.335, 18.2081, 0.4068", "494.535, 294.995, 17.1128, 0.3304", "495.033, 294.035, 16.5707, 0.3304", "495.672, 293.316, 18.0295, 0.356", "496.411, 292.485, 18.4338, 0.4068", "497.316, 291.791, 18.2473, 0.4576", "498.234, 291.173, 17.5829, 0.483", "499.072, 290.403, 17.6114, 0.4576", "499.848, 289.639, 18.3848, 0.3814", "500.677, 288.853, 18.4727, 0.356", "501.586, 288.166, 18.4419, 0.356", "502.366, 287.341, 18.2588, 0.3814", "503.323, 286.842, 17.5067, 0.356", "504.26, 286.199, 17.36, 0.356", "505.201, 285.56, 17.36, 0.356", "506.215, 285.04, 17.36, 0.4322", "507.229, 284.518, 17.36, 0.5084", "508.233, 283.977, 17.3597, 0.5592", "509.182, 283.349, 17.3586, 0.5084", "509.9, 282.463, 17.3524, 0.4068", "510.867, 281.878, 17.318, 0.3814", "511.964, 281.651, 17.1156, 0.4322", "513.024, 281.388, 16.3492, 0.5338", "514.099, 281.004, 16.2397, 0.5592", "515.157, 280.58, 16.2389, 0.5592", "516.193, 280.104, 16.2333, 0.5338", "517.13, 279.493, 16.1941, 0.5338", "517.975, 278.754, 15.9835, 0.5592", "518.944, 278.252, 15.2628, 0.5848", "519.756, 277.45, 15.2429, 0.6102", "520.435, 276.569, 15.7478, 0.5592", "521.206, 275.737, 15.9667, 0.4576", "521.284, 275.552, 15.12, 0.2542", "521.461, 275.386, 15.12, 0.2288", "521.639, 275.221, 15.12, 0.2288", "521.792, 275.145, 15.12, 0.2288", "522.35, 274.903, 15.12, 0.2288", "522.948, 274.7, 15.12, 0.2542", "523.292, 274.356, 14.84, 0.2796", "523.609, 273.95, 14.6532, 0.3304", "523.927, 273.505, 14.56, 0.356", "524.397, 273.289, 14.56, 0.483", "524.842, 272.819, 13.72, 0.3304", "525.185, 272.361, 13.72, 0.356", "525.516, 272.005, 13.72, 0.3814", "526.036, 271.496, 14.56, 0.4322", "526.432, 271.09, 14.56, 0.4576", "526.633, 270.492, 14.56, 0.5592", "527.079, 269.907, 14.56, 0.5084", "527.613, 269.87, 14.56, 0.305", "528.07, 269.87, 14.56, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_31", "dend_18", "dend_9", "dend_0", "dend_42", "dend_39", "dend_35", "dend_32", "dend_19", "dend_17", "dend_10", "dend_4", "dend_1", "dend_41", "dend_40", "dend_37", "dend_36", "dend_34", "dend_33", "dend_30", "dend_20", "dend_14", "dend_11", "dend_8", "dend_5", "dend_3", "dend_2", "dend_29", "dend_28", "dend_21", "dend_16", "dend_15", "dend_13", "dend_12", "dend_7", "dend_6", "dend_27", "dend_22", "dend_26", "dend_23", "dend_25", "dend_24" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22409",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.61"
  }, {
    "group" : "axon",
    "value" : "1.61"
  }, {
    "group" : "dend",
    "value" : "1.61"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "117.85999"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "3.6158195E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.03703912",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.3307504",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.6141231",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "4.936179E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "5.941591E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "2.6283674E-6",
    "erev" : "-92.921295"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "3.791504E-4",
    "erev" : "-92.921295"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "6.9868827E-7",
    "erev" : "-92.921295"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "4.2080443E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0010956032",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_471086533

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_9
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_19
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_29, id: dend_29, parent: dend_20
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_20
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_27, id: dend_27, parent: dend_21
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_38, dend_31, dend_18, dend_9, dend_0, dend_42, dend_39, dend_35, dend_32, dend_19, dend_17, dend_10, dend_4, dend_1, dend_41, dend_40, dend_37, dend_36, dend_34, dend_33, dend_30, dend_20, dend_14, dend_11, dend_8, dend_5, dend_3, dend_2, dend_29, dend_28, dend_21, dend_16, dend_15, dend_13, dend_12, dend_7, dend_6, dend_27, dend_22, dend_26, dend_23, dend_25, dend_24]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_22409, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_22409
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.4999626559115701)
    connect dend_38(0), soma_0(0.4999626559115701)
    connect dend_31(0), soma_0(0.4999626559115701)
    connect dend_18(0), soma_0(0.4999626559115701)
    connect dend_9(0), soma_0(0.4999626559115701)
    connect dend_0(0), soma_0(0.4999626559115701)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_30(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_29(0), dend_20(1.0)
    connect dend_28(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_27(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 363.733, 371.914, 38.64, 13.389 ) }
    soma_0 { pt3dadd( 370.427, 371.914, 38.64, 13.389 ) }
    soma_0 { pt3dadd( 377.122, 371.914, 38.64, 13.389 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 370.427, 371.914, 38.64, 1.0 ) }
    axon_0 { pt3dadd( 376.269, 385.73, 38.64, 1.0 ) }
    axon_0 { pt3dadd( 382.11, 399.546, 38.64, 1.0 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 6/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 370.373, 365.074, 43.9631, 0.5338 ) }
    dend_38 { pt3dadd( 370.118, 364.025, 43.1315, 0.6102 ) }
    dend_38 { pt3dadd( 370.059, 362.928, 42.5236, 0.6102 ) }
    dend_38 { pt3dadd( 370.6, 362.02, 42.0008, 0.5084 ) }
    dend_38 { pt3dadd( 371.721, 361.897, 42.0056, 0.4576 ) }
    dend_38 { pt3dadd( 372.824, 362.163, 42.037, 0.4068 ) }
    dend_38 { pt3dadd( 373.953, 362.265, 42.236, 0.4322 ) }
    dend_38 { pt3dadd( 375.0, 362.019, 43.0212, 0.4322 ) }
    dend_38 { pt3dadd( 375.546, 361.06, 43.0816, 0.5084 ) }
    dend_38 { pt3dadd( 375.882, 359.987, 42.8991, 0.6102 ) }
    dend_38 { pt3dadd( 375.951, 359.026, 44.3195, 0.788 ) }
    dend_38 { pt3dadd( 376.155, 358.004, 45.3936, 1.144 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 18/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 363.874, 371.91, 35.9864, 0.3814 ) }
    dend_31 { pt3dadd( 362.77, 371.889, 35.3144, 0.5084 ) }
    dend_31 { pt3dadd( 361.645, 371.739, 35.2876, 0.5592 ) }
    dend_31 { pt3dadd( 360.59, 371.296, 35.3251, 0.5592 ) }
    dend_31 { pt3dadd( 359.485, 371.095, 35.5387, 0.5592 ) }
    dend_31 { pt3dadd( 358.487, 371.506, 36.2863, 0.5848 ) }
    dend_31 { pt3dadd( 357.598, 372.223, 36.3972, 0.6356 ) }
    dend_31 { pt3dadd( 356.563, 372.704, 36.3821, 0.661 ) }
    dend_31 { pt3dadd( 355.435, 372.857, 36.279, 0.7372 ) }
    dend_31 { pt3dadd( 354.345, 373.002, 35.6418, 0.7118 ) }
    dend_31 { pt3dadd( 353.32, 373.475, 35.2839, 0.7372 ) }
    dend_31 { pt3dadd( 352.288, 373.96, 35.3024, 0.7118 ) }
    dend_31 { pt3dadd( 351.186, 374.237, 35.4197, 0.8136 ) }
    dend_31 { pt3dadd( 350.11, 374.435, 36.0682, 0.839 ) }
    dend_31 { pt3dadd( 349.089, 374.925, 36.1796, 0.839 ) }
    dend_31 { pt3dadd( 348.109, 375.424, 35.4777, 0.788 ) }
    dend_31 { pt3dadd( 347.102, 375.947, 35.3413, 0.6864 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 35/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 375.303, 375.828, 36.6626, 0.305 ) }
    dend_18 { pt3dadd( 376.373, 376.196, 36.4, 0.4068 ) }
    dend_18 { pt3dadd( 377.479, 375.924, 36.4, 0.483 ) }
    dend_18 { pt3dadd( 378.576, 375.896, 36.4, 0.5592 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 39/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 373.962, 378.237, 37.5206, 0.5592 ) }
    dend_9 { pt3dadd( 374.652, 379.143, 37.5225, 0.6102 ) }
    dend_9 { pt3dadd( 375.357, 380.043, 37.5315, 0.6356 ) }
    dend_9 { pt3dadd( 376.146, 380.87, 37.567, 0.7118 ) }
    dend_9 { pt3dadd( 376.899, 381.728, 37.7171, 0.8136 ) }
    dend_9 { pt3dadd( 377.352, 382.717, 38.4026, 0.839 ) }
    dend_9 { pt3dadd( 377.758, 383.762, 38.6145, 0.788 ) }
    dend_9 { pt3dadd( 378.518, 384.614, 38.526, 0.6356 ) }
    dend_9 { pt3dadd( 379.23, 385.472, 38.0545, 0.5338 ) }
    dend_9 { pt3dadd( 380.108, 386.138, 37.7938, 0.4576 ) }
    dend_9 { pt3dadd( 381.145, 386.53, 38.1508, 0.5338 ) }
    dend_9 { pt3dadd( 382.178, 386.977, 37.7885, 0.6102 ) }
    dend_9 { pt3dadd( 383.219, 387.313, 38.5034, 0.7118 ) }
    dend_9 { pt3dadd( 384.332, 387.553, 38.64, 0.7118 ) }
    dend_9 { pt3dadd( 385.426, 387.866, 38.6408, 0.7118 ) }
    dend_9 { pt3dadd( 386.56, 388.008, 38.645, 0.6864 ) }
    dend_9 { pt3dadd( 387.646, 388.341, 38.6708, 0.6864 ) }
    dend_9 { pt3dadd( 388.731, 388.689, 38.7996, 0.7372 ) }
    dend_9 { pt3dadd( 390.046, 388.912, 39.0373, 0.7626 ) }
    dend_9 { pt3dadd( 391.096, 389.238, 39.6553, 0.7626 ) }
    dend_9 { pt3dadd( 392.125, 389.723, 39.7538, 0.661 ) }
    dend_9 { pt3dadd( 393.186, 390.137, 39.7242, 0.5848 ) }
    dend_9 { pt3dadd( 394.319, 390.217, 39.5175, 0.5338 ) }
    dend_9 { pt3dadd( 395.358, 390.21, 38.4292, 0.5338 ) }
    dend_9 { pt3dadd( 396.434, 390.164, 37.6622, 0.483 ) }
    dend_9 { pt3dadd( 397.438, 389.833, 38.4846, 0.4576 ) }
    dend_9 { pt3dadd( 398.572, 389.831, 38.6386, 0.4576 ) }
    dend_9 { pt3dadd( 399.638, 390.189, 38.6333, 0.5848 ) }
    dend_9 { pt3dadd( 400.535, 390.898, 38.61, 0.7118 ) }
    dend_9 { pt3dadd( 401.544, 391.428, 38.4773, 0.9152 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 69/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 373.165, 366.008, 32.363, 0.3814 ) }
    dend_0 { pt3dadd( 373.148, 364.884, 31.9203, 0.5338 ) }
    dend_0 { pt3dadd( 373.014, 363.751, 31.9222, 0.661 ) }
    dend_0 { pt3dadd( 372.449, 362.762, 31.932, 0.7626 ) }
    dend_0 { pt3dadd( 371.981, 361.391, 32.0466, 0.9152 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 74/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 382.11, 399.546, 38.64, 1.0 ) }
    axon_1 { pt3dadd( 387.951, 413.362, 38.64, 1.0 ) }
    axon_1 { pt3dadd( 393.793, 427.178, 38.64, 1.0 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 77/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 376.155, 358.004, 45.3936, 1.144 ) }
    dend_42 { pt3dadd( 376.469, 359.561, 48.676, 0.5592 ) }
    dend_42 { pt3dadd( 377.28, 360.386, 51.6715, 0.4068 ) }
    dend_42 { pt3dadd( 378.038, 360.653, 51.6715, 0.356 ) }
    dend_42 { pt3dadd( 378.927, 360.234, 54.6669, 0.3814 ) }
    dend_42 { pt3dadd( 379.439, 360.641, 59.9091, 0.3304 ) }
    dend_42 { pt3dadd( 382.316, 362.598, 63.6532, 0.305 ) }
    dend_42 { pt3dadd( 384.28, 363.691, 63.6532, 0.305 ) }
    dend_42 { pt3dadd( 389.173, 366.152, 66.6487, 0.4576 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 86/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 376.155, 358.004, 45.3936, 1.144 ) }
    dend_39 { pt3dadd( 376.58, 357.173, 46.9588, 0.6864 ) }
    dend_39 { pt3dadd( 377.453, 356.523, 47.0935, 0.5338 ) }
    dend_39 { pt3dadd( 378.492, 356.428, 46.0368, 0.5084 ) }
    dend_39 { pt3dadd( 379.523, 356.533, 46.2944, 0.5848 ) }
    dend_39 { pt3dadd( 380.591, 356.165, 46.648, 0.6864 ) }
    dend_39 { pt3dadd( 381.586, 355.693, 47.3099, 0.661 ) }
    dend_39 { pt3dadd( 382.581, 355.156, 47.6221, 0.6102 ) }
    dend_39 { pt3dadd( 383.566, 354.584, 47.7173, 0.5338 ) }
    dend_39 { pt3dadd( 384.632, 354.302, 48.3308, 0.5592 ) }
    dend_39 { pt3dadd( 385.533, 353.624, 48.7206, 0.5848 ) }
    dend_39 { pt3dadd( 386.372, 352.847, 48.7225, 0.5848 ) }
    dend_39 { pt3dadd( 387.324, 352.23, 48.7326, 0.5592 ) }
    dend_39 { pt3dadd( 388.385, 351.814, 48.8018, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( 389.365, 351.272, 49.2117, 0.483 ) }
    dend_39 { pt3dadd( 390.147, 350.514, 49.8106, 0.483 ) }
    dend_39 { pt3dadd( 390.714, 349.522, 49.8523, 0.5848 ) }
    dend_39 { pt3dadd( 391.449, 348.649, 49.8982, 0.6356 ) }
    dend_39 { pt3dadd( 392.336, 347.957, 50.1936, 0.6864 ) }
    dend_39 { pt3dadd( 393.19, 347.272, 50.8138, 0.7118 ) }
    dend_39 { pt3dadd( 394.026, 346.565, 50.1679, 0.7118 ) }
    dend_39 { pt3dadd( 394.971, 345.949, 49.8859, 0.7372 ) }
    dend_39 { pt3dadd( 395.906, 345.3, 50.0713, 0.6864 ) }
    dend_39 { pt3dadd( 396.787, 344.656, 50.6937, 0.6356 ) }
    dend_39 { pt3dadd( 397.74, 344.105, 50.0567, 0.5848 ) }
    dend_39 { pt3dadd( 398.673, 343.456, 49.877, 0.6356 ) }
    dend_39 { pt3dadd( 399.565, 342.746, 50.024, 0.9152 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 13/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 347.102, 375.947, 35.3413, 0.6864 ) }
    dend_35 { pt3dadd( 346.34, 376.353, 35.5174, 0.4576 ) }
    dend_35 { pt3dadd( 345.509, 377.033, 36.295, 0.4322 ) }
    dend_35 { pt3dadd( 344.719, 377.856, 36.4165, 0.4322 ) }
    dend_35 { pt3dadd( 343.759, 378.465, 36.4848, 0.483 ) }
    dend_35 { pt3dadd( 342.718, 378.863, 36.9323, 0.5084 ) }
    dend_35 { pt3dadd( 341.691, 379.276, 37.5578, 0.5084 ) }
    dend_35 { pt3dadd( 340.671, 379.711, 37.9977, 0.4576 ) }
    dend_35 { pt3dadd( 339.647, 380.072, 38.6422, 0.4576 ) }
    dend_35 { pt3dadd( 338.629, 380.554, 38.6602, 0.5338 ) }
    dend_35 { pt3dadd( 337.639, 381.117, 38.7887, 0.6356 ) }
    dend_35 { pt3dadd( 336.783, 381.728, 39.6838, 0.6102 ) }
    dend_35 { pt3dadd( 335.938, 382.286, 40.7912, 0.5338 ) }
    dend_35 { pt3dadd( 334.81, 382.287, 40.8758, 0.5084 ) }
    dend_35 { pt3dadd( 333.811, 381.742, 40.8579, 0.5848 ) }
    dend_35 { pt3dadd( 332.697, 381.573, 40.7322, 0.661 ) }
    dend_35 { pt3dadd( 331.632, 381.859, 40.2276, 0.6356 ) }
    dend_35 { pt3dadd( 330.737, 382.375, 41.3126, 0.5848 ) }
    dend_35 { pt3dadd( 329.711, 382.743, 41.9978, 0.5338 ) }
    dend_35 { pt3dadd( 328.596, 382.994, 42.0042, 0.5592 ) }
    dend_35 { pt3dadd( 327.526, 383.375, 42.0249, 0.661 ) }
    dend_35 { pt3dadd( 326.464, 383.779, 42.1484, 0.788 ) }
    dend_35 { pt3dadd( 325.372, 383.905, 42.8408, 0.8644 ) }
    dend_35 { pt3dadd( 324.303, 384.264, 43.076, 0.8136 ) }
    dend_35 { pt3dadd( 323.273, 384.698, 42.7328, 0.6864 ) }
    dend_35 { pt3dadd( 322.277, 385.113, 42.7865, 0.6356 ) }
    dend_35 { pt3dadd( 321.175, 384.958, 43.1586, 0.6356 ) }
    dend_35 { pt3dadd( 320.064, 384.728, 43.351, 0.7372 ) }
    dend_35 { pt3dadd( 318.955, 384.732, 43.6845, 0.7372 ) }
    dend_35 { pt3dadd( 317.839, 384.756, 43.1043, 0.6864 ) }
    dend_35 { pt3dadd( 316.721, 384.938, 42.9503, 0.5338 ) }
    dend_35 { pt3dadd( 315.699, 385.362, 42.3279, 0.4576 ) }
    dend_35 { pt3dadd( 314.688, 385.274, 42.9562, 0.4322 ) }
    dend_35 { pt3dadd( 313.621, 385.18, 43.7455, 0.4576 ) }
    dend_35 { pt3dadd( 312.567, 385.137, 44.5108, 0.483 ) }
    dend_35 { pt3dadd( 311.854, 384.727, 43.12, 0.5592 ) }
    dend_35 { pt3dadd( 310.744, 385.013, 44.2403, 0.6356 ) }
    dend_35 { pt3dadd( 309.622, 385.221, 44.242, 0.661 ) }
    dend_35 { pt3dadd( 308.512, 385.443, 44.2518, 0.6356 ) }
    dend_35 { pt3dadd( 307.392, 385.646, 44.3212, 0.6356 ) }
    dend_35 { pt3dadd( 306.276, 385.663, 44.8216, 0.661 ) }
    dend_35 { pt3dadd( 305.168, 385.773, 45.3673, 0.6864 ) }
    dend_35 { pt3dadd( 304.072, 386.074, 45.4065, 0.6356 ) }
    dend_35 { pt3dadd( 302.932, 386.087, 45.6364, 0.5848 ) }
    dend_35 { pt3dadd( 301.844, 386.022, 46.4444, 0.5084 ) }
    dend_35 { pt3dadd( 300.755, 385.716, 46.7239, 0.5338 ) }
    dend_35 { pt3dadd( 299.672, 385.613, 47.5241, 0.5848 ) }
    dend_35 { pt3dadd( 298.559, 385.427, 47.8139, 0.6864 ) }
    dend_35 { pt3dadd( 297.497, 385.174, 48.5696, 0.7372 ) }
    dend_35 { pt3dadd( 296.365, 385.073, 48.7794, 0.6864 ) }
    dend_35 { pt3dadd( 295.341, 384.606, 49.0442, 0.6102 ) }
    dend_35 { pt3dadd( 294.38, 384.286, 50.2082, 0.5084 ) }
    dend_35 { pt3dadd( 293.296, 384.27, 50.9648, 0.5338 ) }
    dend_35 { pt3dadd( 292.152, 384.272, 50.995, 0.5084 ) }
    dend_35 { pt3dadd( 291.011, 384.284, 51.175, 0.483 ) }
    dend_35 { pt3dadd( 289.908, 384.369, 51.4503, 0.356 ) }
    dend_35 { pt3dadd( 288.904, 384.731, 50.5005, 0.3304 ) }
    dend_35 { pt3dadd( 287.861, 385.13, 50.1816, 0.3814 ) }
    dend_35 { pt3dadd( 286.824, 385.2, 51.2462, 0.483 ) }
    dend_35 { pt3dadd( 285.701, 385.289, 50.7906, 0.5084 ) }
    dend_35 { pt3dadd( 284.697, 385.634, 50.6369, 0.483 ) }
    dend_35 { pt3dadd( 283.649, 385.646, 51.7504, 0.483 ) }
    dend_35 { pt3dadd( 282.529, 385.663, 52.2962, 0.5084 ) }
    dend_35 { pt3dadd( 281.44, 385.757, 53.0662, 0.5338 ) }
    dend_35 { pt3dadd( 280.358, 386.106, 53.2014, 0.5338 ) }
    dend_35 { pt3dadd( 277.401, 387.005, 53.1692, 0.5848 ) }
    dend_35 { pt3dadd( 274.677, 388.351, 53.1692, 0.6102 ) }
    dend_35 { pt3dadd( 273.483, 389.475, 53.1692, 0.5848 ) }
    dend_35 { pt3dadd( 269.316, 390.996, 54.6669, 0.5084 ) }
    dend_35 { pt3dadd( 264.611, 392.577, 56.1646, 0.4068 ) }
    dend_35 { pt3dadd( 262.318, 393.256, 57.6624, 0.305 ) }
    dend_35 { pt3dadd( 262.148, 394.023, 57.6624, 0.2796 ) }
    dend_35 { pt3dadd( 261.807, 394.749, 57.6624, 0.2796 ) }
    dend_35 { pt3dadd( 260.911, 395.346, 57.6624, 0.305 ) }
    dend_35 { pt3dadd( 253.55, 398.687, 59.1601, 0.305 ) }
    dend_35 { pt3dadd( 246.992, 402.555, 62.1555, 0.3304 ) }
    dend_35 { pt3dadd( 244.965, 403.203, 62.1555, 0.4576 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 347.102, 375.947, 35.3413, 0.6864 ) }
    dend_32 { pt3dadd( 346.208, 375.791, 33.2433, 0.7372 ) }
    dend_32 { pt3dadd( 345.106, 375.571, 33.0361, 0.7118 ) }
    dend_32 { pt3dadd( 343.962, 375.548, 33.0134, 0.6356 ) }
    dend_32 { pt3dadd( 342.84, 375.383, 32.8625, 0.5084 ) }
    dend_32 { pt3dadd( 341.819, 374.971, 32.1779, 0.483 ) }
    dend_32 { pt3dadd( 340.722, 374.892, 31.92, 0.483 ) }
    dend_32 { pt3dadd( 339.602, 374.811, 31.92, 0.5592 ) }
    dend_32 { pt3dadd( 338.481, 374.713, 31.9189, 0.5592 ) }
    dend_32 { pt3dadd( 337.451, 374.237, 31.9133, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_32 { pt3dadd( 336.418, 373.779, 31.8805, 0.4576 ) }
    dend_32 { pt3dadd( 335.28, 373.745, 31.6744, 0.4322 ) }
    dend_32 { pt3dadd( 334.186, 373.742, 30.898, 0.4068 ) }
    dend_32 { pt3dadd( 333.046, 373.731, 30.7874, 0.4322 ) }
    dend_32 { pt3dadd( 331.906, 373.644, 30.7054, 0.4068 ) }
    dend_32 { pt3dadd( 330.999, 373.12, 29.9802, 0.4322 ) }
    dend_32 { pt3dadd( 330.569, 372.149, 29.2244, 0.4576 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 7/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 378.576, 375.896, 36.4, 0.5592 ) }
    dend_19 { pt3dadd( 379.623, 376.346, 36.3994, 0.5848 ) }
    dend_19 { pt3dadd( 380.745, 376.557, 36.3955, 0.6864 ) }
    // Section: dend_17, id: dend_17, parent: dend_9 (entry count 10/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 401.544, 391.428, 38.4773, 0.9152 ) }
    dend_17 { pt3dadd( 402.229, 392.275, 38.5848, 0.6356 ) }
    dend_17 { pt3dadd( 403.016, 393.061, 38.085, 0.5338 ) }
    dend_17 { pt3dadd( 403.843, 393.66, 38.7386, 0.4068 ) }
    dend_17 { pt3dadd( 404.66, 393.147, 40.115, 0.4068 ) }
    dend_17 { pt3dadd( 405.626, 393.425, 41.0634, 0.4322 ) }
    dend_17 { pt3dadd( 406.416, 394.131, 41.9773, 0.5338 ) }
    dend_17 { pt3dadd( 407.171, 394.814, 43.1614, 0.5338 ) }
    dend_17 { pt3dadd( 407.908, 395.595, 44.0465, 0.5084 ) }
    dend_17 { pt3dadd( 408.856, 396.205, 44.2688, 0.4322 ) }
    dend_17 { pt3dadd( 409.867, 396.714, 44.4217, 0.4322 ) }
    dend_17 { pt3dadd( 410.727, 397.376, 45.1926, 0.4068 ) }
    dend_17 { pt3dadd( 411.835, 397.618, 45.1091, 0.4576 ) }
    dend_17 { pt3dadd( 412.689, 398.13, 44.0877, 0.483 ) }
    dend_17 { pt3dadd( 413.22, 398.991, 42.8764, 0.5084 ) }
    dend_17 { pt3dadd( 413.548, 399.994, 42.9335, 0.483 ) }
    dend_17 { pt3dadd( 413.974, 400.982, 43.7811, 0.483 ) }
    dend_17 { pt3dadd( 414.754, 401.663, 44.7756, 0.5338 ) }
    dend_17 { pt3dadd( 415.607, 402.003, 46.3674, 0.5338 ) }
    dend_17 { pt3dadd( 416.551, 402.537, 47.1808, 0.4576 ) }
    dend_17 { pt3dadd( 417.535, 402.937, 47.9276, 0.3304 ) }
    dend_17 { pt3dadd( 418.018, 403.489, 49.84, 0.2542 ) }
    dend_17 { pt3dadd( 421.352, 404.47, 57.6624, 0.2288 ) }
    dend_17 { pt3dadd( 429.329, 404.945, 60.6578, 0.2288 ) }
    dend_17 { pt3dadd( 430.438, 405.053, 60.6578, 0.2542 ) }
    dend_17 { pt3dadd( 430.888, 405.303, 63.6532, 0.2796 ) }
    dend_17 { pt3dadd( 432.296, 407.711, 67.3977, 0.305 ) }
    dend_17 { pt3dadd( 433.725, 408.611, 65.9, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 38/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 401.544, 391.428, 38.4773, 0.9152 ) }
    dend_10 { pt3dadd( 402.847, 391.589, 37.4937, 0.5592 ) }
    dend_10 { pt3dadd( 403.936, 391.573, 36.8771, 0.4576 ) }
    dend_10 { pt3dadd( 405.034, 391.452, 37.5239, 0.483 ) }
    dend_10 { pt3dadd( 406.155, 391.517, 37.8308, 0.5848 ) }
    dend_10 { pt3dadd( 407.232, 391.402, 38.6028, 0.6356 ) }
    dend_10 { pt3dadd( 408.335, 391.144, 38.8335, 0.6356 ) }
    dend_10 { pt3dadd( 409.447, 391.15, 39.2787, 0.6102 ) }
    dend_10 { pt3dadd( 410.556, 391.23, 38.6781, 0.6356 ) }
    dend_10 { pt3dadd( 411.648, 391.553, 38.64, 0.6864 ) }
    dend_10 { pt3dadd( 412.786, 391.654, 38.64, 0.7626 ) }
    dend_10 { pt3dadd( 413.867, 391.979, 38.6403, 0.839 ) }
    dend_10 { pt3dadd( 414.891, 392.465, 38.6414, 0.8898 ) }
    dend_10 { pt3dadd( 416.033, 392.51, 38.6492, 0.839 ) }
    dend_10 { pt3dadd( 417.176, 392.532, 38.705, 0.6864 ) }
    dend_10 { pt3dadd( 418.266, 392.748, 39.1468, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 54/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 371.981, 361.391, 32.0466, 0.9152 ) }
    dend_4 { pt3dadd( 370.972, 359.999, 31.2861, 0.5848 ) }
    dend_4 { pt3dadd( 370.508, 359.031, 32.2269, 0.6102 ) }
    dend_4 { pt3dadd( 370.105, 358.069, 33.3284, 0.6864 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 58/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 371.981, 361.391, 32.0466, 0.9152 ) }
    dend_1 { pt3dadd( 372.095, 359.764, 32.769, 0.5848 ) }
    dend_1 { pt3dadd( 372.663, 358.826, 32.1073, 0.4576 ) }
    dend_1 { pt3dadd( 373.508, 358.074, 31.8399, 0.4068 ) }
    dend_1 { pt3dadd( 374.539, 358.097, 31.2883, 0.483 ) }
    dend_1 { pt3dadd( 375.43, 358.436, 29.8127, 0.5592 ) }
    dend_1 { pt3dadd( 376.54, 358.424, 29.5341, 0.6102 ) }
    dend_1 { pt3dadd( 377.551, 357.953, 29.0181, 0.5592 ) }
    dend_1 { pt3dadd( 378.566, 357.499, 29.4963, 0.5338 ) }
    dend_1 { pt3dadd( 379.682, 357.358, 29.6797, 0.5084 ) }
    dend_1 { pt3dadd( 380.753, 357.734, 29.6778, 0.5338 ) }
    dend_1 { pt3dadd( 381.787, 358.213, 29.668, 0.5338 ) }
    dend_1 { pt3dadd( 382.86, 358.575, 29.6044, 0.5338 ) }
    dend_1 { pt3dadd( 383.964, 358.471, 29.1197, 0.5848 ) }
    dend_1 { pt3dadd( 384.85, 357.824, 28.5667, 0.5848 ) }
    dend_1 { pt3dadd( 385.456, 356.859, 28.4575, 0.5592 ) }
    dend_1 { pt3dadd( 386.13, 356.025, 27.8152, 0.4576 ) }
    dend_1 { pt3dadd( 386.904, 355.79, 25.8756, 0.4322 ) }
    dend_1 { pt3dadd( 387.941, 355.436, 25.5105, 0.4068 ) }
    dend_1 { pt3dadd( 388.832, 355.181, 26.9643, 0.4322 ) }
    dend_1 { pt3dadd( 389.757, 354.937, 28.2436, 0.4576 ) }
    dend_1 { pt3dadd( 390.767, 354.669, 27.34, 0.5338 ) }
    dend_1 { pt3dadd( 391.464, 354.01, 25.8905, 0.5848 ) }
    dend_1 { pt3dadd( 392.16, 353.35, 24.4538, 0.6102 ) }
    dend_1 { pt3dadd( 393.093, 352.721, 24.1839, 0.661 ) }
    dend_1 { pt3dadd( 394.098, 352.245, 24.6806, 0.7118 ) }
    dend_1 { pt3dadd( 395.162, 351.947, 25.2204, 0.7372 ) }
    dend_1 { pt3dadd( 396.27, 352.203, 25.382, 0.6864 ) }
    dend_1 { pt3dadd( 397.339, 352.196, 24.7162, 0.661 ) }
    dend_1 { pt3dadd( 398.412, 351.985, 24.064, 0.661 ) }
    dend_1 { pt3dadd( 399.318, 351.293, 24.0066, 0.6864 ) }
    dend_1 { pt3dadd( 400.168, 350.532, 23.8045, 0.6864 ) }
    dend_1 { pt3dadd( 401.093, 349.942, 23.0527, 0.6864 ) }
    dend_1 { pt3dadd( 402.003, 349.253, 22.8186, 0.6864 ) }
    dend_1 { pt3dadd( 403.679, 349.105, 21.8557, 0.7372 ) }
    dend_1 { pt3dadd( 404.747, 349.461, 21.6874, 0.9152 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 94/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 399.565, 342.746, 50.024, 0.9152 ) }
    dend_41 { pt3dadd( 399.523, 342.208, 49.28, 0.3304 ) }
    dend_41 { pt3dadd( 399.905, 342.133, 49.28, 0.5084 ) }
    dend_41 { pt3dadd( 400.514, 341.827, 49.28, 0.305 ) }
    dend_41 { pt3dadd( 401.01, 341.522, 49.28, 0.2542 ) }
    dend_41 { pt3dadd( 401.582, 341.293, 49.28, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( 402.345, 341.255, 49.28, 0.2288 ) }
    dend_41 { pt3dadd( 402.993, 341.103, 49.28, 0.2288 ) }
    dend_41 { pt3dadd( 403.49, 340.798, 49.28, 0.2288 ) }
    dend_41 { pt3dadd( 403.984, 340.492, 49.28, 0.2542 ) }
    dend_41 { pt3dadd( 404.518, 340.226, 49.28, 0.2796 ) }
    dend_41 { pt3dadd( 405.001, 339.908, 49.28, 0.305 ) }
    dend_41 { pt3dadd( 405.51, 339.616, 49.28, 0.2796 ) }
    dend_41 { pt3dadd( 406.234, 339.539, 49.28, 0.2542 ) }
    dend_41 { pt3dadd( 406.921, 339.425, 49.28, 0.2288 ) }
    dend_41 { pt3dadd( 407.48, 339.183, 49.28, 0.2288 ) }
    dend_41 { pt3dadd( 408.065, 338.967, 49.28, 0.2542 ) }
    dend_41 { pt3dadd( 408.522, 338.624, 49.28, 0.305 ) }
    dend_41 { pt3dadd( 409.005, 338.306, 49.28, 0.356 ) }
    dend_41 { pt3dadd( 409.654, 338.154, 49.28, 0.4068 ) }
    dend_41 { pt3dadd( 410.227, 337.925, 49.28, 0.4576 ) }
    dend_41 { pt3dadd( 410.594, 337.493, 49.28, 0.5084 ) }
    dend_41 { pt3dadd( 411.141, 337.239, 49.28, 0.483 ) }
    dend_41 { pt3dadd( 411.624, 336.921, 49.28, 0.4576 ) }
    dend_41 { pt3dadd( 412.107, 336.603, 49.28, 0.4576 ) }
    dend_41 { pt3dadd( 412.717, 336.413, 49.28, 0.5338 ) }
    dend_41 { pt3dadd( 413.302, 336.196, 49.28, 0.5084 ) }
    dend_41 { pt3dadd( 414.014, 336.107, 49.28, 0.4322 ) }
    dend_41 { pt3dadd( 414.814, 336.107, 49.28, 0.305 ) }
    dend_41 { pt3dadd( 415.615, 336.107, 49.28, 0.2542 ) }
    dend_41 { pt3dadd( 416.416, 336.107, 49.28, 0.2288 ) }
    dend_41 { pt3dadd( 417.001, 335.891, 49.28, 0.2542 ) }
    dend_41 { pt3dadd( 417.421, 335.51, 49.28, 0.305 ) }
    dend_41 { pt3dadd( 417.865, 335.154, 49.28, 0.3814 ) }
    dend_41 { pt3dadd( 418.246, 334.734, 49.28, 0.4068 ) }
    dend_41 { pt3dadd( 418.602, 334.289, 49.28, 0.3814 ) }
    dend_41 { pt3dadd( 418.983, 333.87, 49.28, 0.356 ) }
    dend_41 { pt3dadd( 419.48, 333.565, 49.28, 0.4068 ) }
    dend_41 { pt3dadd( 420.0, 333.285, 49.28, 0.5084 ) }
    dend_41 { pt3dadd( 420.421, 332.904, 49.28, 0.5848 ) }
    dend_41 { pt3dadd( 420.878, 332.561, 49.28, 0.6102 ) }
    dend_41 { pt3dadd( 421.451, 332.332, 49.28, 0.661 ) }
    dend_41 { pt3dadd( 421.957, 332.039, 49.28, 0.6864 ) }
    dend_41 { pt3dadd( 423.026, 331.506, 49.28, 0.6102 ) }
    dend_41 { pt3dadd( 423.547, 331.226, 49.28, 0.5848 ) }
    dend_41 { pt3dadd( 424.208, 331.086, 49.28, 0.5848 ) }
    dend_41 { pt3dadd( 424.882, 330.73, 49.28, 0.6102 ) }
    dend_41 { pt3dadd( 425.454, 330.73, 49.28, 0.5084 ) }
    dend_41 { pt3dadd( 426.102, 330.578, 49.28, 0.4322 ) }
    dend_41 { pt3dadd( 426.61, 330.285, 49.28, 0.356 ) }
    dend_41 { pt3dadd( 427.207, 330.082, 49.28, 0.3304 ) }
    dend_41 { pt3dadd( 427.779, 329.853, 49.28, 0.2796 ) }
    dend_41 { pt3dadd( 428.085, 329.815, 49.28, 0.2796 ) }
    dend_41 { pt3dadd( 428.632, 329.676, 49.28, 0.3814 ) }
    dend_41 { pt3dadd( 429.522, 329.193, 49.28, 0.661 ) }
    dend_41 { pt3dadd( 430.564, 328.748, 49.56, 0.5592 ) }
    dend_41 { pt3dadd( 431.211, 328.595, 49.56, 0.5084 ) }
    dend_41 { pt3dadd( 431.708, 328.29, 49.56, 0.5338 ) }
    dend_41 { pt3dadd( 432.228, 328.01, 49.56, 0.483 ) }
    dend_41 { pt3dadd( 432.878, 327.858, 49.56, 0.4322 ) }
    dend_41 { pt3dadd( 433.538, 327.718, 49.56, 0.4068 ) }
    dend_41 { pt3dadd( 434.262, 327.642, 49.56, 0.4068 ) }
    dend_41 { pt3dadd( 435.063, 327.642, 49.56, 0.3814 ) }
    dend_41 { pt3dadd( 435.737, 327.515, 49.56, 0.305 ) }
    dend_41 { pt3dadd( 436.284, 327.261, 49.56, 0.2542 ) }
    dend_41 { pt3dadd( 436.779, 326.955, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 437.339, 326.714, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 437.923, 326.498, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 438.495, 326.269, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 439.067, 326.04, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 439.652, 325.824, 49.56, 0.2542 ) }
    dend_41 { pt3dadd( 440.173, 325.545, 49.56, 0.2796 ) }
    dend_41 { pt3dadd( 440.783, 325.354, 49.56, 0.3304 ) }
    dend_41 { pt3dadd( 441.279, 325.048, 49.56, 0.3304 ) }
    dend_41 { pt3dadd( 441.927, 324.896, 49.56, 0.3304 ) }
    dend_41 { pt3dadd( 442.651, 324.819, 49.56, 0.2796 ) }
    dend_41 { pt3dadd( 443.25, 324.617, 49.56, 0.2542 ) }
    dend_41 { pt3dadd( 443.796, 324.362, 49.56, 0.2542 ) }
    dend_41 { pt3dadd( 444.469, 324.235, 49.56, 0.2796 ) }
    dend_41 { pt3dadd( 444.927, 323.892, 49.56, 0.305 ) }
    dend_41 { pt3dadd( 445.409, 323.573, 49.56, 0.2796 ) }
    dend_41 { pt3dadd( 445.969, 323.332, 49.56, 0.2542 ) }
    dend_41 { pt3dadd( 446.58, 323.142, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 447.037, 322.799, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 447.647, 322.608, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 448.219, 322.379, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 448.779, 322.138, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 449.147, 321.705, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 449.694, 321.451, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 450.164, 321.121, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 450.85, 321.006, 49.56, 0.2542 ) }
    dend_41 { pt3dadd( 451.576, 320.93, 49.56, 0.305 ) }
    dend_41 { pt3dadd( 452.147, 320.701, 49.56, 0.356 ) }
    dend_41 { pt3dadd( 452.809, 320.561, 49.56, 0.356 ) }
    dend_41 { pt3dadd( 453.342, 320.295, 49.56, 0.305 ) }
    dend_41 { pt3dadd( 453.952, 320.104, 49.56, 0.2542 ) }
    dend_41 { pt3dadd( 454.626, 319.977, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 455.389, 319.939, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 455.961, 319.71, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 456.583, 319.532, 49.56, 0.2542 ) }
    dend_41 { pt3dadd( 457.371, 319.519, 49.56, 0.305 ) }
    dend_41 { pt3dadd( 457.714, 319.519, 49.56, 0.3814 ) }
    dend_41 { pt3dadd( 458.059, 319.519, 49.56, 0.4068 ) }
    dend_41 { pt3dadd( 458.49, 319.265, 49.56, 0.305 ) }
    dend_41 { pt3dadd( 459.202, 318.947, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 459.774, 318.718, 49.56, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_41 { pt3dadd( 460.231, 318.375, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 460.727, 318.07, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 461.363, 317.905, 49.56, 0.2542 ) }
    dend_41 { pt3dadd( 461.922, 317.664, 49.56, 0.2796 ) }
    dend_41 { pt3dadd( 462.634, 317.574, 49.56, 0.305 ) }
    dend_41 { pt3dadd( 463.243, 317.383, 49.56, 0.3304 ) }
    dend_41 { pt3dadd( 463.854, 317.193, 49.56, 0.356 ) }
    dend_41 { pt3dadd( 464.578, 317.117, 49.56, 0.4068 ) }
    dend_41 { pt3dadd( 465.011, 316.965, 50.0889, 0.3814 ) }
    dend_41 { pt3dadd( 465.456, 316.736, 50.4, 0.356 ) }
    dend_41 { pt3dadd( 465.964, 316.443, 50.4, 0.2796 ) }
    dend_41 { pt3dadd( 466.625, 316.303, 50.4, 0.2542 ) }
    dend_41 { pt3dadd( 467.21, 316.087, 50.4, 0.2288 ) }
    dend_41 { pt3dadd( 467.705, 315.782, 50.4, 0.2542 ) }
    dend_41 { pt3dadd( 468.214, 315.49, 50.4, 0.2796 ) }
    dend_41 { pt3dadd( 468.697, 315.172, 50.4, 0.305 ) }
    dend_41 { pt3dadd( 469.09, 314.765, 50.4, 0.3304 ) }
    dend_41 { pt3dadd( 469.562, 314.435, 50.4, 0.4068 ) }
    dend_41 { pt3dadd( 470.07, 314.028, 50.68, 0.7372 ) }
    dend_41 { pt3dadd( 470.947, 313.533, 50.68, 0.5848 ) }
    dend_41 { pt3dadd( 471.533, 313.316, 50.68, 0.483 ) }
    dend_41 { pt3dadd( 472.091, 313.075, 50.68, 0.356 ) }
    dend_41 { pt3dadd( 472.815, 312.998, 50.68, 0.2796 ) }
    dend_41 { pt3dadd( 473.375, 312.757, 50.68, 0.2288 ) }
    dend_41 { pt3dadd( 473.845, 312.426, 50.68, 0.2796 ) }
    dend_41 { pt3dadd( 474.404, 312.185, 50.68, 0.356 ) }
    dend_41 { pt3dadd( 474.99, 311.969, 50.68, 0.4322 ) }
    dend_41 { pt3dadd( 475.688, 311.867, 50.68, 0.4068 ) }
    dend_41 { pt3dadd( 476.362, 311.74, 50.68, 0.356 ) }
    dend_41 { pt3dadd( 476.896, 311.588, 50.68, 0.305 ) }
    dend_41 { pt3dadd( 477.125, 311.13, 50.68, 0.2542 ) }
    dend_41 { pt3dadd( 477.543, 310.519, 50.68, 0.3304 ) }
    dend_41 { pt3dadd( 477.964, 310.138, 50.68, 0.3814 ) }
    dend_41 { pt3dadd( 478.344, 309.719, 50.68, 0.3304 ) }
    dend_41 { pt3dadd( 478.891, 309.465, 50.68, 0.2796 ) }
    dend_41 { pt3dadd( 479.222, 309.452, 50.68, 0.2796 ) }
    dend_41 { pt3dadd( 479.692, 309.338, 50.4311, 0.3814 ) }
    dend_41 { pt3dadd( 479.947, 309.032, 50.4, 0.2796 ) }
    dend_41 { pt3dadd( 480.06, 308.803, 50.4, 0.2288 ) }
    dend_41 { pt3dadd( 480.188, 308.587, 50.4, 0.2288 ) }
    dend_41 { pt3dadd( 480.404, 308.46, 50.4, 0.2288 ) }
    dend_41 { pt3dadd( 480.671, 308.385, 50.4, 0.2542 ) }
    dend_41 { pt3dadd( 481.395, 308.079, 50.4, 0.305 ) }
    dend_41 { pt3dadd( 481.967, 308.079, 50.4, 0.2796 ) }
    dend_41 { pt3dadd( 481.853, 307.85, 49.0, 0.2542 ) }
    dend_41 { pt3dadd( 482.539, 307.736, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 483.34, 307.736, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 484.141, 307.736, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 484.942, 307.736, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 485.742, 307.736, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 486.543, 307.736, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 487.344, 307.736, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 488.03, 307.622, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 488.704, 307.495, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 489.174, 307.164, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 489.823, 307.012, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 490.471, 306.859, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 491.005, 306.592, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 491.577, 306.363, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 492.161, 306.147, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 492.823, 306.007, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 493.421, 305.804, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 494.017, 305.6, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 494.551, 305.334, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 495.111, 305.092, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 495.733, 304.914, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 496.191, 304.571, 49.0, 0.2542 ) }
    dend_41 { pt3dadd( 496.75, 304.329, 49.0, 0.305 ) }
    dend_41 { pt3dadd( 497.068, 303.961, 49.0, 0.5084 ) }
    dend_41 { pt3dadd( 497.628, 303.834, 49.0, 0.661 ) }
    dend_41 { pt3dadd( 498.212, 303.389, 49.0, 0.4322 ) }
    dend_41 { pt3dadd( 498.771, 303.147, 49.0, 0.305 ) }
    dend_41 { pt3dadd( 499.177, 302.753, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 499.649, 302.423, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 500.042, 302.016, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 500.652, 301.825, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 501.263, 301.635, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 501.669, 301.24, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 502.178, 300.949, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 502.661, 300.631, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 503.132, 300.3, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 503.589, 299.957, 49.0, 0.2288 ) }
    dend_41 { pt3dadd( 504.123, 299.69, 49.0, 0.2542 ) }
    dend_41 { pt3dadd( 504.771, 299.537, 49.0, 0.305 ) }
    dend_41 { pt3dadd( 505.521, 299.487, 49.0, 0.4068 ) }
    dend_41 { pt3dadd( 506.106, 299.27, 49.0, 0.4576 ) }
    dend_41 { pt3dadd( 506.576, 298.94, 49.0, 0.4576 ) }
    dend_41 { pt3dadd( 506.895, 298.609, 49.3732, 0.356 ) }
    dend_41 { pt3dadd( 507.25, 298.241, 49.56, 0.2796 ) }
    dend_41 { pt3dadd( 507.835, 298.025, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 508.395, 297.783, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 509.042, 297.631, 49.56, 0.2288 ) }
    dend_41 { pt3dadd( 509.5, 297.402, 49.84, 0.2288 ) }
    dend_41 { pt3dadd( 510.11, 297.211, 49.84, 0.2288 ) }
    dend_41 { pt3dadd( 510.567, 296.868, 49.84, 0.2288 ) }
    dend_41 { pt3dadd( 510.746, 296.703, 49.84, 0.2288 ) }
    dend_41 { pt3dadd( 510.91, 296.525, 49.84, 0.2288 ) }
    dend_41 { pt3dadd( 511.254, 296.398, 50.3689, 0.2796 ) }
    dend_41 { pt3dadd( 511.724, 296.08, 50.96, 0.2796 ) }
    dend_41 { pt3dadd( 512.105, 295.762, 51.2089, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_41 { pt3dadd( 512.626, 295.495, 51.24, 0.2288 ) }
    dend_41 { pt3dadd( 513.084, 295.152, 51.24, 0.2288 ) }
    dend_41 { pt3dadd( 513.733, 295.0, 51.24, 0.2288 ) }
    dend_41 { pt3dadd( 514.331, 294.796, 51.24, 0.2542 ) }
    dend_41 { pt3dadd( 514.698, 294.478, 51.52, 0.3304 ) }
    dend_41 { pt3dadd( 515.334, 294.313, 51.52, 0.4322 ) }
    dend_41 { pt3dadd( 515.831, 294.008, 51.52, 0.5084 ) }
    dend_41 { pt3dadd( 516.185, 293.563, 51.52, 0.483 ) }
    dend_41 { pt3dadd( 516.707, 293.284, 51.52, 0.4068 ) }
    dend_41 { pt3dadd( 517.203, 292.978, 51.52, 0.305 ) }
    dend_41 { pt3dadd( 517.889, 292.864, 51.52, 0.2542 ) }
    dend_41 { pt3dadd( 518.537, 292.712, 51.52, 0.2288 ) }
    dend_41 { pt3dadd( 519.008, 292.381, 51.52, 0.2542 ) }
    dend_41 { pt3dadd( 519.466, 292.038, 51.52, 0.2796 ) }
    dend_41 { pt3dadd( 519.987, 291.758, 51.52, 0.3304 ) }
    dend_41 { pt3dadd( 520.482, 291.453, 51.52, 0.3304 ) }
    dend_41 { pt3dadd( 521.169, 291.339, 51.52, 0.3304 ) }
    dend_41 { pt3dadd( 521.703, 291.071, 51.52, 0.2796 ) }
    dend_41 { pt3dadd( 522.35, 290.919, 51.52, 0.2542 ) }
    dend_41 { pt3dadd( 522.821, 290.589, 51.52, 0.2542 ) }
    dend_41 { pt3dadd( 523.406, 290.372, 51.52, 0.3304 ) }
    dend_41 { pt3dadd( 523.914, 290.081, 51.52, 0.4576 ) }
    dend_41 { pt3dadd( 524.397, 289.89, 51.8311, 0.5338 ) }
    dend_41 { pt3dadd( 524.982, 289.775, 52.08, 0.5338 ) }
    dend_41 { pt3dadd( 525.782, 289.775, 52.08, 0.4322 ) }
    dend_41 { pt3dadd( 526.38, 289.572, 52.08, 0.356 ) }
    dend_41 { pt3dadd( 526.812, 289.318, 52.08, 0.2542 ) }
    dend_41 { pt3dadd( 526.953, 289.114, 52.08, 0.2288 ) }
    dend_41 { pt3dadd( 527.053, 288.644, 52.08, 0.356 ) }
    dend_41 { pt3dadd( 527.371, 288.275, 52.36, 0.483 ) }
    dend_41 { pt3dadd( 527.766, 287.868, 52.36, 0.5084 ) }
    dend_41 { pt3dadd( 528.083, 287.385, 52.36, 0.483 ) }
    dend_41 { pt3dadd( 528.401, 286.94, 52.4532, 0.356 ) }
    dend_41 { pt3dadd( 528.719, 286.534, 52.64, 0.2796 ) }
    dend_41 { pt3dadd( 529.177, 286.191, 52.64, 0.2288 ) }
    dend_41 { pt3dadd( 529.761, 285.975, 52.64, 0.2796 ) }
    dend_41 { pt3dadd( 530.269, 285.682, 52.64, 0.356 ) }
    dend_41 { pt3dadd( 530.841, 285.453, 52.64, 0.4322 ) }
    dend_41 { pt3dadd( 531.274, 285.085, 52.64, 0.4068 ) }
    dend_41 { pt3dadd( 531.719, 284.729, 52.64, 0.356 ) }
    dend_41 { pt3dadd( 532.074, 284.284, 52.64, 0.356 ) }
    dend_41 { pt3dadd( 532.443, 283.852, 52.64, 0.4576 ) }
    dend_41 { pt3dadd( 533.219, 283.026, 52.64, 0.661 ) }
    dend_41 { pt3dadd( 533.803, 282.682, 52.8889, 0.4576 ) }
    dend_41 { pt3dadd( 534.362, 282.682, 52.92, 0.2542 ) }
    dend_41 { pt3dadd( 534.63, 282.606, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 534.897, 282.53, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 535.074, 282.364, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 535.164, 281.996, 53.2, 0.2542 ) }
    dend_41 { pt3dadd( 535.279, 281.347, 53.2932, 0.2796 ) }
    dend_41 { pt3dadd( 535.43, 280.902, 53.5111, 0.305 ) }
    dend_41 { pt3dadd( 535.735, 280.623, 53.76, 0.4068 ) }
    dend_41 { pt3dadd( 536.282, 280.14, 53.76, 0.4068 ) }
    dend_41 { pt3dadd( 536.766, 279.822, 53.76, 0.356 ) }
    dend_41 { pt3dadd( 537.26, 279.517, 53.76, 0.305 ) }
    dend_41 { pt3dadd( 537.782, 279.352, 54.04, 0.305 ) }
    dend_41 { pt3dadd( 538.302, 279.174, 54.2889, 0.3304 ) }
    dend_41 { pt3dadd( 538.595, 279.136, 54.32, 0.3304 ) }
    dend_41 { pt3dadd( 538.938, 279.136, 54.32, 0.3304 ) }
    dend_41 { pt3dadd( 539.371, 278.882, 54.32, 0.2542 ) }
    dend_41 { pt3dadd( 539.51, 278.793, 54.32, 0.2288 ) }
    dend_41 { pt3dadd( 539.88, 278.36, 54.32, 0.2288 ) }
    dend_41 { pt3dadd( 539.982, 278.119, 54.32, 0.2288 ) }
    dend_41 { pt3dadd( 540.07, 277.865, 54.32, 0.2288 ) }
    dend_41 { pt3dadd( 540.209, 277.661, 54.32, 0.2288 ) }
    dend_41 { pt3dadd( 540.49, 277.599, 54.32, 0.2542 ) }
    dend_41 { pt3dadd( 541.138, 277.216, 54.32, 0.3304 ) }
    dend_41 { pt3dadd( 541.493, 276.771, 54.32, 0.356 ) }
    dend_41 { pt3dadd( 541.964, 276.441, 54.32, 0.3814 ) }
    dend_41 { pt3dadd( 542.497, 276.174, 54.32, 0.356 ) }
    dend_41 { pt3dadd( 543.006, 275.883, 54.32, 0.305 ) }
    dend_41 { pt3dadd( 543.591, 275.666, 54.32, 0.2542 ) }
    dend_41 { pt3dadd( 544.036, 275.437, 54.6311, 0.2288 ) }
    dend_41 { pt3dadd( 544.506, 275.209, 54.88, 0.2288 ) }
    dend_41 { pt3dadd( 545.039, 274.941, 54.88, 0.2288 ) }
    dend_41 { pt3dadd( 545.523, 274.624, 54.88, 0.2288 ) }
    dend_41 { pt3dadd( 546.133, 274.433, 54.88, 0.2288 ) }
    dend_41 { pt3dadd( 546.719, 274.217, 54.88, 0.2288 ) }
    dend_41 { pt3dadd( 547.518, 274.102, 54.88, 0.2542 ) }
    dend_41 { pt3dadd( 548.167, 273.95, 54.88, 0.2796 ) }
    dend_41 { pt3dadd( 548.688, 273.67, 54.88, 0.305 ) }
    dend_41 { pt3dadd( 549.272, 273.454, 54.88, 0.305 ) }
    dend_41 { pt3dadd( 550.023, 273.403, 54.88, 0.3304 ) }
    dend_41 { pt3dadd( 550.264, 273.302, 54.88, 0.356 ) }
    dend_41 { pt3dadd( 550.62, 272.971, 54.88, 0.305 ) }
    dend_41 { pt3dadd( 550.709, 272.717, 54.88, 0.2542 ) }
    dend_41 { pt3dadd( 550.951, 272.386, 54.88, 0.2288 ) }
    dend_41 { pt3dadd( 551.193, 272.285, 54.88, 0.2288 ) }
    dend_41 { pt3dadd( 551.727, 271.904, 54.88, 0.2288 ) }
    dend_41 { pt3dadd( 552.273, 271.65, 54.88, 0.2288 ) }
    dend_41 { pt3dadd( 552.883, 271.459, 54.88, 0.2288 ) }
    dend_41 { pt3dadd( 553.456, 271.23, 54.88, 0.2288 ) }
    dend_41 { pt3dadd( 553.888, 270.861, 54.88, 0.2288 ) }
    dend_41 { pt3dadd( 554.459, 270.633, 54.88, 0.2288 ) }
    dend_41 { pt3dadd( 554.93, 270.34, 54.7868, 0.2288 ) }
    dend_41 { pt3dadd( 555.298, 270.061, 54.4132, 0.2288 ) }
    dend_41 { pt3dadd( 555.706, 269.705, 54.32, 0.2288 ) }
    dend_41 { pt3dadd( 556.136, 269.335, 54.32, 0.2288 ) }
    dend_41 { pt3dadd( 556.67, 269.069, 54.32, 0.2288 ) }
    dend_41 { pt3dadd( 557.014, 268.611, 54.32, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_41 { pt3dadd( 557.484, 268.281, 54.32, 0.2542 ) }
    dend_41 { pt3dadd( 558.005, 268.001, 54.32, 0.2796 ) }
    dend_41 { pt3dadd( 558.464, 267.658, 54.32, 0.356 ) }
    dend_41 { pt3dadd( 558.794, 267.188, 54.32, 0.3814 ) }
    dend_41 { pt3dadd( 558.933, 266.641, 54.32, 0.3304 ) }
    dend_41 { pt3dadd( 559.276, 266.298, 54.32, 0.305 ) }
    dend_41 { pt3dadd( 559.646, 266.094, 54.32, 0.3814 ) }
    dend_41 { pt3dadd( 559.988, 265.751, 54.32, 0.3304 ) }
    dend_41 { pt3dadd( 560.331, 265.751, 54.32, 0.2796 ) }
    dend_41 { pt3dadd( 561.12, 265.51, 54.32, 0.2288 ) }
    dend_41 { pt3dadd( 561.704, 265.294, 54.32, 0.2288 ) }
    dend_41 { pt3dadd( 562.188, 264.976, 54.32, 0.2288 ) }
    dend_41 { pt3dadd( 562.607, 264.595, 54.32, 0.2542 ) }
    dend_41 { pt3dadd( 562.81, 263.997, 54.32, 0.2796 ) }
    dend_41 { pt3dadd( 563.115, 263.615, 54.04, 0.305 ) }
    dend_41 { pt3dadd( 563.484, 263.184, 54.04, 0.2796 ) }
    dend_41 { pt3dadd( 563.878, 262.777, 54.04, 0.2542 ) }
    dend_41 { pt3dadd( 564.246, 262.344, 54.04, 0.2288 ) }
    dend_41 { pt3dadd( 564.678, 261.976, 54.04, 0.2288 ) }
    dend_41 { pt3dadd( 565.174, 261.671, 54.04, 0.2288 ) }
    dend_41 { pt3dadd( 565.594, 261.29, 54.04, 0.2288 ) }
    dend_41 { pt3dadd( 566.052, 260.946, 54.04, 0.2288 ) }
    dend_41 { pt3dadd( 566.623, 260.718, 54.04, 0.2288 ) }
    dend_41 { pt3dadd( 567.131, 260.425, 54.04, 0.2542 ) }
    dend_41 { pt3dadd( 567.755, 260.26, 54.0089, 0.2796 ) }
    dend_41 { pt3dadd( 568.225, 260.069, 53.6668, 0.305 ) }
    dend_41 { pt3dadd( 568.657, 259.777, 53.48, 0.2796 ) }
    dend_41 { pt3dadd( 569.165, 259.484, 53.48, 0.2542 ) }
    dend_41 { pt3dadd( 569.56, 259.078, 53.48, 0.2288 ) }
    dend_41 { pt3dadd( 569.979, 258.696, 53.48, 0.2288 ) }
    dend_41 { pt3dadd( 570.373, 258.29, 53.48, 0.2288 ) }
    dend_41 { pt3dadd( 570.5, 258.188, 53.2, 0.2288 ) }
    dend_41 { pt3dadd( 570.602, 258.061, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 570.857, 257.972, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 571.123, 257.895, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 571.873, 257.616, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 572.42, 257.362, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 573.131, 257.273, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 573.716, 257.057, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 574.174, 256.714, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 574.594, 256.333, 52.92, 0.2542 ) }
    dend_41 { pt3dadd( 575.128, 256.065, 52.92, 0.305 ) }
    dend_41 { pt3dadd( 575.673, 255.811, 52.92, 0.356 ) }
    dend_41 { pt3dadd( 576.233, 255.57, 52.92, 0.356 ) }
    dend_41 { pt3dadd( 576.818, 255.353, 52.92, 0.305 ) }
    dend_41 { pt3dadd( 577.365, 255.099, 52.92, 0.2542 ) }
    dend_41 { pt3dadd( 577.961, 254.896, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 578.586, 254.719, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 579.094, 254.426, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 579.563, 254.095, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 579.995, 253.727, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 580.276, 253.205, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 580.466, 252.595, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 580.581, 251.909, 52.92, 0.2288 ) }
    dend_41 { pt3dadd( 580.771, 251.299, 52.92, 0.2542 ) }
    dend_41 { pt3dadd( 580.911, 250.752, 52.92, 0.356 ) }
    dend_41 { pt3dadd( 581.19, 250.345, 52.92, 0.3304 ) }
    dend_41 { pt3dadd( 581.521, 250.116, 52.9511, 0.356 ) }
    dend_41 { pt3dadd( 581.61, 249.723, 53.4489, 0.305 ) }
    dend_41 { pt3dadd( 581.61, 249.392, 53.48, 0.2542 ) }
    dend_41 { pt3dadd( 581.61, 249.163, 53.48, 0.2288 ) }
    dend_41 { pt3dadd( 581.61, 248.362, 53.48, 0.2288 ) }
    dend_41 { pt3dadd( 581.826, 247.778, 53.48, 0.2288 ) }
    dend_41 { pt3dadd( 581.876, 247.027, 53.48, 0.2288 ) }
    dend_41 { pt3dadd( 581.966, 246.316, 53.48, 0.2288 ) }
    dend_41 { pt3dadd( 582.092, 246.1, 53.48, 0.2288 ) }
    dend_41 { pt3dadd( 582.219, 245.883, 53.48, 0.2288 ) }
    dend_41 { pt3dadd( 582.346, 245.667, 53.48, 0.2288 ) }
    dend_41 { pt3dadd( 582.639, 245.617, 53.48, 0.2288 ) }
    dend_41 { pt3dadd( 582.982, 245.617, 53.48, 0.2288 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 70/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 399.565, 342.746, 50.024, 0.9152 ) }
    dend_40 { pt3dadd( 400.24, 341.952, 50.9592, 0.5084 ) }
    dend_40 { pt3dadd( 400.785, 341.087, 52.0173, 0.4576 ) }
    dend_40 { pt3dadd( 401.535, 340.238, 52.1066, 0.5338 ) }
    dend_40 { pt3dadd( 402.428, 339.524, 52.2158, 0.6356 ) }
    dend_40 { pt3dadd( 403.341, 338.904, 52.7744, 0.6864 ) }
    dend_40 { pt3dadd( 404.363, 338.443, 53.233, 0.6864 ) }
    dend_40 { pt3dadd( 405.352, 337.899, 53.394, 0.661 ) }
    dend_40 { pt3dadd( 406.194, 337.208, 54.1089, 0.5848 ) }
    dend_40 { pt3dadd( 407.035, 336.679, 53.2, 0.4576 ) }
    dend_40 { pt3dadd( 407.15, 336.565, 55.16, 0.3304 ) }
    dend_40 { pt3dadd( 407.798, 336.413, 55.16, 0.2796 ) }
    dend_40 { pt3dadd( 408.281, 336.095, 55.16, 0.2796 ) }
    dend_40 { pt3dadd( 408.599, 335.612, 55.16, 0.305 ) }
    dend_40 { pt3dadd( 408.866, 335.078, 55.16, 0.2796 ) }
    dend_40 { pt3dadd( 409.247, 334.658, 55.16, 0.2542 ) }
    dend_40 { pt3dadd( 409.565, 334.175, 55.16, 0.2288 ) }
    dend_40 { pt3dadd( 410.01, 333.819, 55.16, 0.2288 ) }
    dend_40 { pt3dadd( 410.365, 333.374, 55.16, 0.2288 ) }
    dend_40 { pt3dadd( 410.734, 332.942, 55.16, 0.2796 ) }
    dend_40 { pt3dadd( 411.141, 332.663, 55.16, 0.483 ) }
    dend_40 { pt3dadd( 411.484, 332.319, 55.16, 0.4068 ) }
    dend_40 { pt3dadd( 411.497, 331.76, 55.16, 0.305 ) }
    dend_40 { pt3dadd( 411.675, 331.252, 55.16, 0.2542 ) }
    dend_40 { pt3dadd( 411.815, 331.048, 55.16, 0.2288 ) }
    dend_40 { pt3dadd( 412.387, 330.591, 55.16, 0.3304 ) }
    dend_40 { pt3dadd( 412.793, 330.196, 55.16, 0.4576 ) }
    dend_40 { pt3dadd( 413.238, 329.84, 55.16, 0.5848 ) }
    dend_40 { pt3dadd( 414.09, 329.091, 55.16, 0.661 ) }
    dend_40 { pt3dadd( 414.496, 328.696, 55.16, 0.6102 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_40 { pt3dadd( 414.891, 328.29, 55.16, 0.5338 ) }
    dend_40 { pt3dadd( 415.222, 327.82, 55.16, 0.4576 ) }
    dend_40 { pt3dadd( 415.513, 327.311, 55.16, 0.4068 ) }
    dend_40 { pt3dadd( 416.404, 326.599, 55.16, 0.356 ) }
    dend_40 { pt3dadd( 416.759, 326.154, 55.16, 0.3304 ) }
    dend_40 { pt3dadd( 416.988, 325.582, 55.16, 0.305 ) }
    dend_40 { pt3dadd( 417.281, 325.189, 55.16, 0.4068 ) }
    dend_40 { pt3dadd( 417.776, 324.998, 55.16, 0.5338 ) }
    dend_40 { pt3dadd( 418.145, 324.451, 55.16, 0.5592 ) }
    dend_40 { pt3dadd( 418.628, 324.133, 55.16, 0.6356 ) }
    dend_40 { pt3dadd( 419.009, 323.6, 55.16, 0.5338 ) }
    dend_40 { pt3dadd( 419.276, 323.066, 55.16, 0.5338 ) }
    dend_40 { pt3dadd( 419.632, 322.621, 55.16, 0.483 ) }
    dend_40 { pt3dadd( 420.039, 322.227, 55.16, 0.4068 ) }
    dend_40 { pt3dadd( 420.395, 321.782, 55.16, 0.305 ) }
    dend_40 { pt3dadd( 420.776, 321.362, 55.16, 0.305 ) }
    dend_40 { pt3dadd( 421.158, 320.942, 55.16, 0.3814 ) }
    dend_40 { pt3dadd( 421.564, 320.549, 55.16, 0.5084 ) }
    dend_40 { pt3dadd( 422.429, 319.812, 55.16, 0.5338 ) }
    dend_40 { pt3dadd( 422.912, 319.494, 55.16, 0.483 ) }
    dend_40 { pt3dadd( 423.357, 319.138, 55.16, 0.4322 ) }
    dend_40 { pt3dadd( 423.878, 318.858, 55.16, 0.3814 ) }
    dend_40 { pt3dadd( 424.284, 318.464, 55.16, 0.305 ) }
    dend_40 { pt3dadd( 424.792, 318.172, 55.16, 0.2542 ) }
    dend_40 { pt3dadd( 425.339, 317.918, 55.16, 0.2542 ) }
    dend_40 { pt3dadd( 425.671, 317.447, 55.16, 0.2796 ) }
    dend_40 { pt3dadd( 426.038, 317.015, 55.16, 0.305 ) }
    dend_40 { pt3dadd( 426.242, 316.418, 55.16, 0.2796 ) }
    dend_40 { pt3dadd( 426.585, 315.96, 55.16, 0.2542 ) }
    dend_40 { pt3dadd( 426.904, 315.477, 55.16, 0.2288 ) }
    dend_40 { pt3dadd( 427.348, 315.122, 55.16, 0.2796 ) }
    dend_40 { pt3dadd( 427.792, 314.765, 55.16, 0.3814 ) }
    dend_40 { pt3dadd( 428.428, 314.6, 55.16, 0.483 ) }
    dend_40 { pt3dadd( 428.796, 314.282, 55.44, 0.483 ) }
    dend_40 { pt3dadd( 429.178, 313.863, 55.44, 0.4068 ) }
    dend_40 { pt3dadd( 429.547, 313.431, 55.44, 0.3304 ) }
    dend_40 { pt3dadd( 429.953, 313.036, 55.44, 0.3304 ) }
    dend_40 { pt3dadd( 430.145, 312.528, 55.6889, 0.3304 ) }
    dend_40 { pt3dadd( 430.487, 312.083, 55.72, 0.3304 ) }
    dend_40 { pt3dadd( 430.921, 311.715, 55.72, 0.305 ) }
    dend_40 { pt3dadd( 431.517, 311.511, 55.72, 0.305 ) }
    dend_40 { pt3dadd( 432.0, 311.193, 55.72, 0.305 ) }
    dend_40 { pt3dadd( 432.355, 310.748, 55.72, 0.305 ) }
    dend_40 { pt3dadd( 432.711, 310.418, 56.0, 0.305 ) }
    dend_40 { pt3dadd( 433.132, 310.138, 56.2489, 0.305 ) }
    dend_40 { pt3dadd( 433.499, 309.719, 56.28, 0.2796 ) }
    dend_40 { pt3dadd( 433.908, 309.325, 56.28, 0.2542 ) }
    dend_40 { pt3dadd( 434.25, 308.867, 56.28, 0.2288 ) }
    dend_40 { pt3dadd( 434.491, 308.308, 56.28, 0.2288 ) }
    dend_40 { pt3dadd( 434.949, 307.965, 56.28, 0.2542 ) }
    dend_40 { pt3dadd( 435.33, 307.545, 56.28, 0.2796 ) }
    dend_40 { pt3dadd( 435.814, 307.342, 56.56, 0.305 ) }
    dend_40 { pt3dadd( 436.195, 306.923, 56.56, 0.2796 ) }
    dend_40 { pt3dadd( 436.703, 306.63, 56.56, 0.2542 ) }
    dend_40 { pt3dadd( 437.097, 306.224, 56.56, 0.2542 ) }
    dend_40 { pt3dadd( 437.428, 305.753, 56.56, 0.305 ) }
    dend_40 { pt3dadd( 437.885, 305.41, 56.56, 0.3814 ) }
    dend_40 { pt3dadd( 438.304, 305.028, 56.56, 0.4068 ) }
    dend_40 { pt3dadd( 438.839, 304.762, 56.56, 0.3814 ) }
    dend_40 { pt3dadd( 439.194, 304.317, 56.56, 0.3304 ) }
    dend_40 { pt3dadd( 439.716, 304.037, 56.56, 0.3304 ) }
    dend_40 { pt3dadd( 440.135, 303.655, 56.56, 0.356 ) }
    dend_40 { pt3dadd( 440.554, 303.274, 56.56, 0.356 ) }
    dend_40 { pt3dadd( 441.05, 302.969, 56.56, 0.305 ) }
    dend_40 { pt3dadd( 441.534, 302.652, 56.56, 0.2542 ) }
    dend_40 { pt3dadd( 441.915, 302.232, 56.56, 0.2288 ) }
    dend_40 { pt3dadd( 442.233, 301.749, 56.56, 0.2542 ) }
    dend_40 { pt3dadd( 442.703, 301.419, 56.56, 0.2796 ) }
    dend_40 { pt3dadd( 443.186, 301.101, 56.56, 0.305 ) }
    dend_40 { pt3dadd( 443.668, 300.783, 56.56, 0.3304 ) }
    dend_40 { pt3dadd( 444.139, 300.452, 56.56, 0.356 ) }
    dend_40 { pt3dadd( 444.546, 300.059, 56.56, 0.4068 ) }
    dend_40 { pt3dadd( 444.876, 299.588, 56.56, 0.3814 ) }
    dend_40 { pt3dadd( 445.245, 299.156, 56.56, 0.356 ) }
    dend_40 { pt3dadd( 445.55, 298.775, 56.56, 0.2542 ) }
    dend_40 { pt3dadd( 445.715, 298.597, 56.56, 0.2288 ) }
    dend_40 { pt3dadd( 446.033, 298.571, 56.56, 0.2288 ) }
    dend_40 { pt3dadd( 446.198, 298.507, 56.56, 0.2288 ) }
    dend_40 { pt3dadd( 446.707, 298.216, 56.56, 0.2542 ) }
    dend_40 { pt3dadd( 447.177, 297.885, 56.56, 0.2796 ) }
    dend_40 { pt3dadd( 447.647, 297.554, 56.56, 0.305 ) }
    dend_40 { pt3dadd( 448.016, 297.122, 56.56, 0.2796 ) }
    dend_40 { pt3dadd( 448.473, 296.779, 56.56, 0.2542 ) }
    dend_40 { pt3dadd( 449.007, 296.512, 56.56, 0.2288 ) }
    dend_40 { pt3dadd( 449.452, 296.156, 56.56, 0.2288 ) }
    dend_40 { pt3dadd( 449.846, 295.749, 56.56, 0.2542 ) }
    dend_40 { pt3dadd( 450.139, 295.241, 56.56, 0.3304 ) }
    dend_40 { pt3dadd( 450.622, 294.923, 56.56, 0.4068 ) }
    dend_40 { pt3dadd( 451.079, 294.58, 56.56, 0.4322 ) }
    dend_40 { pt3dadd( 451.499, 294.199, 56.56, 0.3814 ) }
    dend_40 { pt3dadd( 451.969, 293.868, 56.56, 0.3304 ) }
    dend_40 { pt3dadd( 452.375, 293.474, 56.56, 0.305 ) }
    dend_40 { pt3dadd( 452.706, 293.004, 56.56, 0.2796 ) }
    dend_40 { pt3dadd( 453.102, 292.597, 56.56, 0.2796 ) }
    dend_40 { pt3dadd( 453.329, 292.025, 56.56, 0.2796 ) }
    dend_40 { pt3dadd( 453.71, 291.606, 56.56, 0.305 ) }
    dend_40 { pt3dadd( 453.977, 291.071, 56.56, 0.2796 ) }
    dend_40 { pt3dadd( 454.397, 290.69, 56.56, 0.2542 ) }
    dend_40 { pt3dadd( 454.766, 290.258, 56.56, 0.2288 ) }
    dend_40 { pt3dadd( 455.121, 289.813, 56.56, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_40 { pt3dadd( 455.529, 289.419, 56.56, 0.2288 ) }
    dend_40 { pt3dadd( 455.961, 289.051, 56.56, 0.2288 ) }
    dend_40 { pt3dadd( 456.215, 288.581, 56.3732, 0.2796 ) }
    dend_40 { pt3dadd( 456.546, 288.263, 56.0, 0.3304 ) }
    dend_40 { pt3dadd( 456.914, 287.83, 56.0, 0.4322 ) }
    dend_40 { pt3dadd( 457.322, 287.437, 56.0, 0.4322 ) }
    dend_40 { pt3dadd( 457.613, 286.928, 56.0, 0.4322 ) }
    dend_40 { pt3dadd( 457.867, 286.381, 56.0, 0.3304 ) }
    dend_40 { pt3dadd( 458.197, 285.911, 56.0, 0.2796 ) }
    dend_40 { pt3dadd( 458.553, 285.466, 56.0, 0.2288 ) }
    dend_40 { pt3dadd( 458.896, 285.008, 56.0, 0.2542 ) }
    dend_40 { pt3dadd( 459.393, 284.704, 56.0, 0.305 ) }
    dend_40 { pt3dadd( 459.774, 284.284, 56.0, 0.356 ) }
    dend_40 { pt3dadd( 460.193, 283.903, 56.0, 0.356 ) }
    dend_40 { pt3dadd( 460.422, 283.445, 56.0, 0.3304 ) }
    dend_40 { pt3dadd( 460.689, 283.369, 56.0, 0.356 ) }
    dend_40 { pt3dadd( 461.146, 283.026, 56.0, 0.305 ) }
    dend_40 { pt3dadd( 461.261, 282.682, 57.68, 0.2542 ) }
    dend_40 { pt3dadd( 461.985, 282.606, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 462.214, 282.491, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 462.469, 282.403, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 462.52, 282.11, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 462.52, 281.882, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 462.52, 281.653, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 462.646, 281.322, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 462.888, 281.22, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 463.206, 280.738, 57.68, 0.305 ) }
    dend_40 { pt3dadd( 463.587, 280.432, 57.68, 0.2542 ) }
    dend_40 { pt3dadd( 464.083, 279.899, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 464.578, 279.594, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 464.986, 279.2, 57.68, 0.2542 ) }
    dend_40 { pt3dadd( 465.494, 278.907, 57.68, 0.305 ) }
    dend_40 { pt3dadd( 465.951, 278.564, 57.68, 0.356 ) }
    dend_40 { pt3dadd( 466.294, 278.106, 57.68, 0.356 ) }
    dend_40 { pt3dadd( 466.612, 277.624, 57.68, 0.305 ) }
    dend_40 { pt3dadd( 466.74, 277.407, 57.68, 0.2542 ) }
    dend_40 { pt3dadd( 466.841, 277.166, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 467.083, 277.064, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 467.299, 276.937, 57.68, 0.2542 ) }
    dend_40 { pt3dadd( 467.77, 276.378, 57.68, 0.305 ) }
    dend_40 { pt3dadd( 467.998, 275.806, 57.68, 0.2796 ) }
    dend_40 { pt3dadd( 468.01, 275.361, 57.68, 0.483 ) }
    dend_40 { pt3dadd( 468.277, 275.055, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 468.468, 275.018, 57.68, 0.2542 ) }
    dend_40 { pt3dadd( 468.811, 275.018, 57.68, 0.4322 ) }
    dend_40 { pt3dadd( 469.396, 274.801, 57.68, 0.356 ) }
    dend_40 { pt3dadd( 470.07, 274.674, 57.68, 0.2796 ) }
    dend_40 { pt3dadd( 470.642, 274.446, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 471.328, 274.331, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 471.9, 274.102, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 472.46, 273.861, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 472.904, 273.505, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 473.527, 273.327, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 474.086, 273.085, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 474.608, 272.806, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 475.141, 272.539, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 475.701, 272.297, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 476.21, 272.005, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 476.743, 271.738, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 477.214, 271.407, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 477.747, 271.141, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 478.192, 270.785, 57.68, 0.2288 ) }
    dend_40 { pt3dadd( 478.535, 270.442, 57.96, 0.2542 ) }
    dend_40 { pt3dadd( 479.005, 270.111, 57.96, 0.2796 ) }
    dend_40 { pt3dadd( 479.488, 269.793, 57.96, 0.305 ) }
    dend_40 { pt3dadd( 479.947, 269.45, 57.96, 0.2796 ) }
    dend_40 { pt3dadd( 480.302, 269.005, 57.96, 0.2796 ) }
    dend_40 { pt3dadd( 480.861, 268.763, 57.96, 0.305 ) }
    dend_40 { pt3dadd( 481.522, 268.624, 57.96, 0.356 ) }
    dend_40 { pt3dadd( 482.197, 268.611, 57.96, 0.356 ) }
    dend_40 { pt3dadd( 482.197, 268.382, 60.2, 0.305 ) }
    dend_40 { pt3dadd( 482.49, 268.332, 60.2, 0.2542 ) }
    dend_40 { pt3dadd( 482.59, 268.09, 60.2, 0.2288 ) }
    dend_40 { pt3dadd( 482.755, 267.912, 60.2, 0.2288 ) }
    dend_40 { pt3dadd( 482.921, 267.505, 60.2, 0.2288 ) }
    dend_40 { pt3dadd( 483.214, 267.455, 60.2, 0.2288 ) }
    dend_40 { pt3dadd( 483.81, 267.137, 60.2, 0.2288 ) }
    dend_40 { pt3dadd( 484.064, 267.047, 60.2, 0.2288 ) }
    dend_40 { pt3dadd( 484.332, 266.972, 60.2, 0.2288 ) }
    dend_40 { pt3dadd( 484.484, 266.781, 60.2, 0.2288 ) }
    dend_40 { pt3dadd( 484.598, 266.552, 60.2, 0.2288 ) }
    dend_40 { pt3dadd( 484.929, 266.311, 60.2, 0.2288 ) }
    dend_40 { pt3dadd( 485.145, 266.184, 60.2, 0.2288 ) }
    dend_40 { pt3dadd( 485.603, 265.726, 60.2, 0.2288 ) }
    dend_40 { pt3dadd( 485.857, 265.637, 60.2, 0.2288 ) }
    dend_40 { pt3dadd( 486.123, 265.56, 60.2, 0.2288 ) }
    dend_40 { pt3dadd( 486.302, 265.395, 60.2, 0.2288 ) }
    dend_40 { pt3dadd( 486.429, 265.179, 60.2, 0.2542 ) }
    dend_40 { pt3dadd( 486.772, 264.95, 60.2, 0.3304 ) }
    dend_40 { pt3dadd( 487.115, 264.836, 60.2, 0.4322 ) }
    dend_40 { pt3dadd( 487.496, 264.531, 60.48, 0.356 ) }
    dend_40 { pt3dadd( 487.737, 264.086, 60.48, 0.2288 ) }
    dend_40 { pt3dadd( 488.03, 264.035, 60.48, 0.2288 ) }
    dend_40 { pt3dadd( 488.336, 263.997, 60.48, 0.2288 ) }
    dend_40 { pt3dadd( 488.501, 263.933, 60.48, 0.2288 ) }
    dend_40 { pt3dadd( 489.11, 263.742, 60.48, 0.2288 ) }
    dend_40 { pt3dadd( 489.861, 263.692, 60.48, 0.2288 ) }
    dend_40 { pt3dadd( 490.318, 263.463, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 490.878, 263.222, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 491.462, 263.006, 60.76, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_40 { pt3dadd( 491.958, 262.7, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 492.454, 262.396, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 493.077, 262.217, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 493.714, 262.053, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 493.891, 261.887, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 494.068, 261.722, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 494.322, 261.633, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 494.666, 261.633, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 494.895, 261.633, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 495.504, 261.442, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 495.911, 261.048, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 496.395, 260.73, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 496.916, 260.451, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 497.538, 260.273, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 498.174, 260.108, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 498.605, 259.738, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 499.216, 259.548, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 499.814, 259.345, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 500.462, 259.193, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 501.072, 259.002, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 501.632, 258.76, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 502.115, 258.442, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 502.775, 258.303, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 503.22, 257.947, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 503.741, 257.667, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 504.123, 257.248, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 504.618, 256.942, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 505.19, 256.714, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 505.661, 256.383, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 506.245, 256.167, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 506.805, 255.925, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 507.478, 255.798, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 508.279, 255.798, 60.76, 0.2542 ) }
    dend_40 { pt3dadd( 508.865, 255.582, 60.76, 0.3304 ) }
    dend_40 { pt3dadd( 509.538, 255.455, 60.76, 0.4068 ) }
    dend_40 { pt3dadd( 509.882, 255.455, 60.76, 0.4322 ) }
    dend_40 { pt3dadd( 510.465, 255.353, 60.76, 0.2796 ) }
    dend_40 { pt3dadd( 510.707, 255.252, 60.76, 0.2288 ) }
    dend_40 { pt3dadd( 511.254, 254.883, 61.04, 0.2288 ) }
    dend_40 { pt3dadd( 512.055, 254.883, 61.04, 0.2288 ) }
    dend_40 { pt3dadd( 512.844, 254.871, 61.04, 0.2288 ) }
    dend_40 { pt3dadd( 513.542, 254.769, 61.04, 0.2542 ) }
    dend_40 { pt3dadd( 514.342, 254.769, 61.04, 0.3304 ) }
    dend_40 { pt3dadd( 515.068, 254.769, 61.2268, 0.4068 ) }
    dend_40 { pt3dadd( 515.703, 254.642, 61.32, 0.4576 ) }
    dend_40 { pt3dadd( 516.287, 254.426, 61.32, 0.4576 ) }
    dend_40 { pt3dadd( 516.795, 254.133, 61.32, 0.483 ) }
    dend_40 { pt3dadd( 517.355, 253.891, 61.32, 0.483 ) }
    dend_40 { pt3dadd( 518.042, 253.777, 61.32, 0.4322 ) }
    dend_40 { pt3dadd( 518.589, 253.523, 61.32, 0.3304 ) }
    dend_40 { pt3dadd( 519.122, 253.256, 61.32, 0.305 ) }
    dend_40 { pt3dadd( 519.479, 252.811, 61.32, 0.3304 ) }
    dend_40 { pt3dadd( 519.974, 252.506, 61.32, 0.3814 ) }
    dend_40 { pt3dadd( 520.242, 252.087, 61.6, 0.3304 ) }
    dend_40 { pt3dadd( 520.443, 251.489, 61.6, 0.2796 ) }
    dend_40 { pt3dadd( 520.813, 251.058, 61.6, 0.2288 ) }
    dend_40 { pt3dadd( 521.092, 250.536, 61.6, 0.2542 ) }
    dend_40 { pt3dadd( 521.474, 250.116, 61.6, 0.2796 ) }
    dend_40 { pt3dadd( 521.664, 249.506, 61.6, 0.3304 ) }
    dend_40 { pt3dadd( 521.88, 249.036, 61.88, 0.3304 ) }
    dend_40 { pt3dadd( 522.186, 248.655, 62.16, 0.356 ) }
    dend_40 { pt3dadd( 522.579, 248.248, 62.16, 0.3814 ) }
    dend_40 { pt3dadd( 522.974, 247.841, 62.16, 0.4576 ) }
    dend_40 { pt3dadd( 523.495, 247.562, 62.16, 0.483 ) }
    dend_40 { pt3dadd( 523.966, 247.231, 62.16, 0.4576 ) }
    dend_40 { pt3dadd( 524.562, 247.027, 62.16, 0.3814 ) }
    dend_40 { pt3dadd( 525.096, 246.761, 62.16, 0.3304 ) }
    dend_40 { pt3dadd( 525.542, 246.405, 62.16, 0.2796 ) }
    dend_40 { pt3dadd( 525.974, 246.037, 62.16, 0.2542 ) }
    dend_40 { pt3dadd( 526.227, 245.49, 62.16, 0.2288 ) }
    dend_40 { pt3dadd( 526.444, 244.905, 62.16, 0.2542 ) }
    dend_40 { pt3dadd( 526.876, 244.537, 62.16, 0.2796 ) }
    dend_40 { pt3dadd( 527.384, 244.244, 62.16, 0.3304 ) }
    dend_40 { pt3dadd( 527.842, 243.901, 62.16, 0.3304 ) }
    dend_40 { pt3dadd( 528.299, 243.558, 62.16, 0.356 ) }
    dend_40 { pt3dadd( 528.795, 243.252, 62.16, 0.3814 ) }
    dend_40 { pt3dadd( 529.177, 242.986, 62.5332, 0.483 ) }
    dend_40 { pt3dadd( 529.558, 242.642, 62.72, 0.5592 ) }
    dend_40 { pt3dadd( 530.358, 241.956, 63.0, 0.4576 ) }
    dend_40 { pt3dadd( 530.829, 241.625, 63.0, 0.3304 ) }
    dend_40 { pt3dadd( 531.237, 241.232, 63.0, 0.2542 ) }
    dend_40 { pt3dadd( 531.617, 240.812, 63.0, 0.2542 ) }
    dend_40 { pt3dadd( 531.985, 240.38, 63.0, 0.2796 ) }
    dend_40 { pt3dadd( 532.367, 239.961, 63.0, 0.305 ) }
    dend_40 { pt3dadd( 532.57, 239.363, 63.0, 0.305 ) }
    dend_40 { pt3dadd( 532.773, 238.765, 63.0, 0.3304 ) }
    dend_40 { pt3dadd( 533.027, 238.219, 63.0, 0.3814 ) }
    dend_40 { pt3dadd( 533.104, 237.494, 63.0, 0.4068 ) }
    dend_40 { pt3dadd( 533.193, 236.783, 63.0, 0.3814 ) }
    dend_40 { pt3dadd( 533.371, 236.159, 63.0, 0.3304 ) }
    dend_40 { pt3dadd( 533.448, 235.587, 63.0932, 0.4576 ) }
    dend_40 { pt3dadd( 533.893, 234.851, 63.28, 0.5848 ) }
    dend_40 { pt3dadd( 533.943, 234.393, 63.9957, 0.2542 ) }
    dend_40 { pt3dadd( 534.108, 233.923, 64.12, 0.305 ) }
    dend_40 { pt3dadd( 534.362, 233.605, 64.12, 0.356 ) }
    dend_40 { pt3dadd( 534.669, 233.109, 64.12, 0.305 ) }
    dend_40 { pt3dadd( 534.909, 232.588, 64.2132, 0.305 ) }
    dend_40 { pt3dadd( 535.279, 232.27, 64.4932, 0.356 ) }
    dend_40 { pt3dadd( 535.685, 231.953, 64.68, 0.4322 ) }
    dend_40 { pt3dadd( 535.964, 231.431, 64.68, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_40 { pt3dadd( 536.422, 231.088, 64.68, 0.356 ) }
    dend_40 { pt3dadd( 536.803, 230.757, 64.8978, 0.3304 ) }
    dend_40 { pt3dadd( 537.019, 230.541, 65.52, 0.356 ) }
    dend_40 { pt3dadd( 537.222, 230.058, 65.52, 0.305 ) }
    dend_40 { pt3dadd( 537.337, 229.855, 66.1422, 0.305 ) }
    dend_40 { pt3dadd( 537.44, 229.601, 66.3911, 0.2542 ) }
    dend_40 { pt3dadd( 537.451, 229.156, 67.2311, 0.2288 ) }
    dend_40 { pt3dadd( 537.451, 229.016, 67.7289, 0.2288 ) }
    dend_40 { pt3dadd( 537.451, 228.877, 68.2268, 0.2288 ) }
    dend_40 { pt3dadd( 537.451, 228.571, 68.32, 0.2288 ) }
    dend_40 { pt3dadd( 537.451, 228.228, 68.32, 0.2288 ) }
    dend_40 { pt3dadd( 537.451, 227.198, 68.32, 0.3304 ) }
    dend_40 { pt3dadd( 537.451, 226.398, 68.32, 0.3814 ) }
    dend_40 { pt3dadd( 537.451, 225.813, 68.8489, 0.3304 ) }
    dend_40 { pt3dadd( 537.451, 225.025, 68.88, 0.305 ) }
    dend_40 { pt3dadd( 537.451, 224.224, 68.88, 0.3304 ) }
    dend_40 { pt3dadd( 537.451, 223.423, 68.88, 0.4322 ) }
    dend_40 { pt3dadd( 537.451, 222.762, 69.2222, 0.483 ) }
    dend_40 { pt3dadd( 537.451, 222.356, 69.9068, 0.356 ) }
    dend_40 { pt3dadd( 537.706, 222.076, 70.28, 0.305 ) }
    dend_40 { pt3dadd( 538.138, 221.478, 70.28, 0.2542 ) }
    dend_40 { pt3dadd( 538.443, 220.983, 70.28, 0.2288 ) }
    dend_40 { pt3dadd( 538.698, 220.894, 70.28, 0.2288 ) }
    dend_40 { pt3dadd( 538.862, 220.715, 70.28, 0.2288 ) }
    dend_40 { pt3dadd( 539.016, 220.525, 70.28, 0.2288 ) }
    dend_40 { pt3dadd( 539.053, 220.22, 70.28, 0.2288 ) }
    dend_40 { pt3dadd( 539.269, 219.407, 70.28, 0.2288 ) }
    dend_40 { pt3dadd( 539.371, 219.165, 70.28, 0.2288 ) }
    dend_40 { pt3dadd( 539.498, 218.949, 70.28, 0.2288 ) }
    dend_40 { pt3dadd( 539.638, 218.745, 70.28, 0.2288 ) }
    dend_40 { pt3dadd( 539.891, 218.656, 70.28, 0.2288 ) }
    dend_40 { pt3dadd( 540.527, 218.263, 70.28, 0.2288 ) }
    dend_40 { pt3dadd( 540.68, 218.186, 70.28, 0.2288 ) }
    dend_40 { pt3dadd( 540.896, 218.059, 70.28, 0.2288 ) }
    dend_40 { pt3dadd( 541.112, 218.046, 70.28, 0.2288 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 35/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 244.965, 403.203, 62.1555, 0.4576 ) }
    dend_37 { pt3dadd( 244.965, 403.214, 60.6578, 0.3304 ) }
    dend_37 { pt3dadd( 239.993, 402.317, 63.6532, 0.3304 ) }
    dend_37 { pt3dadd( 235.474, 400.324, 67.3977, 0.356 ) }
    dend_37 { pt3dadd( 230.802, 397.261, 70.3931, 0.356 ) }
    dend_37 { pt3dadd( 229.23, 395.291, 71.8908, 0.305 ) }
    dend_37 { pt3dadd( 229.091, 395.562, 69.6441, 0.2542 ) }
    dend_37 { pt3dadd( 224.96, 388.369, 71.8908, 0.2288 ) }
    dend_37 { pt3dadd( 223.501, 384.962, 70.3931, 0.2288 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 44/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 244.965, 403.203, 62.1555, 0.4576 ) }
    dend_36 { pt3dadd( 244.587, 403.26, 63.28, 0.5848 ) }
    dend_36 { pt3dadd( 243.901, 403.26, 63.28, 0.4576 ) }
    dend_36 { pt3dadd( 243.507, 403.439, 63.28, 0.2542 ) }
    dend_36 { pt3dadd( 243.062, 403.794, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 242.503, 404.036, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 241.969, 404.302, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 241.384, 404.518, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 240.66, 404.595, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 240.011, 404.747, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 239.401, 404.938, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 238.817, 405.155, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 238.384, 405.523, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 237.761, 405.7, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 237.037, 405.777, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 236.236, 405.777, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 235.435, 405.777, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 234.672, 405.739, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 233.948, 405.662, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 233.719, 405.662, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 233.49, 405.662, 63.28, 0.2288 ) }
    dend_36 { pt3dadd( 233.147, 405.662, 63.28, 0.2288 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 66/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 330.569, 372.149, 29.2244, 0.4576 ) }
    dend_34 { pt3dadd( 330.044, 372.143, 28.56, 0.2796 ) }
    dend_34 { pt3dadd( 329.243, 372.143, 28.56, 0.2288 ) }
    dend_34 { pt3dadd( 328.442, 372.143, 28.56, 0.2288 ) }
    dend_34 { pt3dadd( 327.642, 372.143, 28.56, 0.2288 ) }
    dend_34 { pt3dadd( 326.841, 372.143, 28.56, 0.2288 ) }
    dend_34 { pt3dadd( 326.04, 372.143, 28.56, 0.2288 ) }
    dend_34 { pt3dadd( 325.24, 372.143, 28.56, 0.2542 ) }
    dend_34 { pt3dadd( 324.438, 372.143, 28.56, 0.2796 ) }
    dend_34 { pt3dadd( 323.65, 372.131, 28.56, 0.305 ) }
    dend_34 { pt3dadd( 323.066, 371.914, 28.56, 0.2796 ) }
    dend_34 { pt3dadd( 322.722, 371.914, 28.56, 0.305 ) }
    dend_34 { pt3dadd( 322.379, 371.914, 28.56, 0.3814 ) }
    dend_34 { pt3dadd( 321.922, 371.686, 28.56, 0.5848 ) }
    dend_34 { pt3dadd( 321.273, 371.305, 28.56, 0.5338 ) }
    dend_34 { pt3dadd( 320.587, 371.19, 28.56, 0.5848 ) }
    dend_34 { pt3dadd( 319.29, 370.885, 28.56, 0.5848 ) }
    dend_34 { pt3dadd( 318.49, 370.885, 28.56, 0.5084 ) }
    dend_34 { pt3dadd( 317.689, 370.885, 28.56, 0.483 ) }
    dend_34 { pt3dadd( 317.104, 370.669, 28.56, 0.4068 ) }
    dend_34 { pt3dadd( 316.316, 370.656, 28.56, 0.356 ) }
    dend_34 { pt3dadd( 315.516, 370.656, 28.56, 0.3304 ) }
    dend_34 { pt3dadd( 314.829, 370.542, 28.56, 0.4322 ) }
    dend_34 { pt3dadd( 314.066, 370.542, 28.4668, 0.5338 ) }
    dend_34 { pt3dadd( 312.998, 370.198, 28.0, 0.5592 ) }
    dend_34 { pt3dadd( 312.35, 370.084, 27.9068, 0.483 ) }
    dend_34 { pt3dadd( 311.892, 369.817, 27.72, 0.4068 ) }
    dend_34 { pt3dadd( 311.283, 369.626, 27.72, 0.4068 ) }
    dend_34 { pt3dadd( 310.596, 369.512, 27.72, 0.5084 ) }
    dend_34 { pt3dadd( 309.91, 369.398, 27.72, 0.6864 ) }
    dend_34 { pt3dadd( 309.121, 368.94, 27.4089, 0.7626 ) }
    dend_34 { pt3dadd( 308.664, 368.584, 26.88, 0.483 ) }
    dend_34 { pt3dadd( 308.194, 368.254, 26.88, 0.4068 ) }
    dend_34 { pt3dadd( 307.761, 367.885, 26.88, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( 307.342, 367.503, 26.88, 0.4068 ) }
    dend_34 { pt3dadd( 306.935, 367.11, 26.88, 0.5338 ) }
    dend_34 { pt3dadd( 306.617, 366.627, 26.88, 0.6102 ) }
    dend_34 { pt3dadd( 305.677, 365.966, 26.88, 0.5592 ) }
    dend_34 { pt3dadd( 305.092, 365.749, 26.88, 0.5592 ) }
    dend_34 { pt3dadd( 304.304, 365.737, 26.88, 0.5848 ) }
    dend_34 { pt3dadd( 303.58, 365.66, 26.88, 0.6102 ) }
    dend_34 { pt3dadd( 302.779, 364.974, 26.6, 0.6102 ) }
    dend_34 { pt3dadd( 302.13, 364.021, 26.6, 0.6102 ) }
    dend_34 { pt3dadd( 301.8, 363.551, 26.6, 0.5338 ) }
    dend_34 { pt3dadd( 301.177, 362.571, 26.6, 0.6356 ) }
    dend_34 { pt3dadd( 300.3, 361.999, 26.2268, 0.839 ) }
    dend_34 { pt3dadd( 299.728, 361.504, 25.48, 0.356 ) }
    dend_34 { pt3dadd( 299.615, 361.046, 25.48, 0.4322 ) }
    dend_34 { pt3dadd( 299.474, 360.5, 25.48, 0.6356 ) }
    dend_34 { pt3dadd( 298.8, 359.801, 25.48, 0.5338 ) }
    dend_34 { pt3dadd( 297.898, 359.216, 25.2, 0.3304 ) }
    dend_34 { pt3dadd( 297.313, 359.0, 25.2, 0.305 ) }
    dend_34 { pt3dadd( 296.868, 358.644, 25.2, 0.3814 ) }
    dend_34 { pt3dadd( 296.436, 358.377, 24.9511, 0.5084 ) }
    dend_34 { pt3dadd( 296.08, 357.907, 24.1732, 0.7626 ) }
    dend_34 { pt3dadd( 295.495, 357.271, 24.08, 0.839 ) }
    dend_34 { pt3dadd( 294.911, 356.254, 24.08, 0.8136 ) }
    dend_34 { pt3dadd( 294.389, 355.746, 24.08, 0.4576 ) }
    dend_34 { pt3dadd( 293.895, 355.67, 24.08, 0.5084 ) }
    dend_34 { pt3dadd( 293.474, 355.174, 24.08, 0.5084 ) }
    dend_34 { pt3dadd( 293.055, 354.792, 24.08, 0.4576 ) }
    dend_34 { pt3dadd( 292.75, 354.297, 24.08, 0.5084 ) }
    dend_34 { pt3dadd( 292.19, 353.712, 24.08, 0.7118 ) }
    dend_34 { pt3dadd( 291.797, 353.076, 24.08, 0.483 ) }
    dend_34 { pt3dadd( 291.262, 353.038, 24.08, 0.4068 ) }
    dend_34 { pt3dadd( 290.919, 353.038, 24.08, 0.3814 ) }
    dend_34 { pt3dadd( 290.132, 352.911, 24.08, 0.3304 ) }
    dend_34 { pt3dadd( 289.775, 352.81, 24.08, 0.2288 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 34/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 330.569, 372.149, 29.2244, 0.4576 ) }
    dend_33 { pt3dadd( 330.083, 371.187, 28.8719, 0.483 ) }
    dend_33 { pt3dadd( 329.473, 370.242, 28.5443, 0.5084 ) }
    dend_33 { pt3dadd( 329.173, 369.146, 28.4525, 0.5084 ) }
    dend_33 { pt3dadd( 328.786, 368.254, 27.44, 0.483 ) }
    dend_33 { pt3dadd( 326.835, 362.928, 26.2102, 0.5338 ) }
    dend_33 { pt3dadd( 326.887, 361.663, 26.2102, 0.5848 ) }
    dend_33 { pt3dadd( 326.259, 360.762, 26.2102, 0.6102 ) }
    dend_33 { pt3dadd( 326.462, 358.651, 24.7125, 0.6356 ) }
    dend_33 { pt3dadd( 326.71, 357.522, 23.2148, 0.6356 ) }
    dend_33 { pt3dadd( 325.59, 356.907, 23.2148, 0.6102 ) }
    dend_33 { pt3dadd( 324.154, 356.791, 23.2148, 0.5338 ) }
    dend_33 { pt3dadd( 322.912, 357.442, 22.4658, 0.5084 ) }
    dend_33 { pt3dadd( 321.097, 358.273, 22.4658, 0.5084 ) }
    dend_33 { pt3dadd( 319.304, 358.408, 22.4658, 0.5084 ) }
    dend_33 { pt3dadd( 317.886, 357.23, 21.7171, 0.5338 ) }
    dend_33 { pt3dadd( 316.987, 355.864, 21.7171, 0.6102 ) }
    dend_33 { pt3dadd( 317.357, 353.694, 21.7171, 0.7626 ) }
    dend_33 { pt3dadd( 317.306, 350.848, 20.2194, 0.788 ) }
    dend_33 { pt3dadd( 313.69, 345.574, 20.2194, 0.7118 ) }
    dend_33 { pt3dadd( 311.163, 341.531, 19.4704, 0.5592 ) }
    dend_33 { pt3dadd( 309.642, 340.116, 19.4704, 0.5084 ) }
    dend_33 { pt3dadd( 308.566, 337.593, 18.7216, 0.5084 ) }
    dend_33 { pt3dadd( 306.772, 336.794, 18.7216, 0.5338 ) }
    dend_33 { pt3dadd( 304.78, 334.356, 17.9726, 0.483 ) }
    dend_33 { pt3dadd( 302.977, 333.286, 17.2239, 0.4322 ) }
    dend_33 { pt3dadd( 302.619, 332.839, 17.2239, 0.356 ) }
    dend_33 { pt3dadd( 302.524, 332.334, 17.2239, 0.356 ) }
    dend_33 { pt3dadd( 303.761, 329.75, 16.4749, 0.356 ) }
    dend_33 { pt3dadd( 305.938, 328.599, 14.9772, 0.4576 ) }
    // Section: dend_30, id: dend_30, parent: dend_19 (entry count 64/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 380.745, 376.557, 36.3955, 0.6864 ) }
    dend_30 { pt3dadd( 381.473, 377.917, 33.6988, 0.4576 ) }
    dend_30 { pt3dadd( 381.217, 379.039, 33.6988, 0.3304 ) }
    dend_30 { pt3dadd( 381.245, 380.139, 33.6988, 0.2796 ) }
    dend_30 { pt3dadd( 381.887, 380.993, 33.6988, 0.3304 ) }
    dend_30 { pt3dadd( 383.061, 382.292, 33.6988, 0.4322 ) }
    dend_30 { pt3dadd( 383.783, 384.053, 33.6988, 0.5084 ) }
    dend_30 { pt3dadd( 383.986, 385.229, 33.6988, 0.5084 ) }
    dend_30 { pt3dadd( 384.305, 385.716, 33.6988, 0.483 ) }
    dend_30 { pt3dadd( 385.261, 386.052, 33.6988, 0.4576 ) }
    dend_30 { pt3dadd( 386.559, 386.701, 32.2011, 0.4576 ) }
    dend_30 { pt3dadd( 390.052, 389.903, 32.2011, 0.4576 ) }
    dend_30 { pt3dadd( 391.107, 390.255, 32.2011, 0.4576 ) }
    dend_30 { pt3dadd( 392.576, 391.607, 32.2011, 0.483 ) }
    dend_30 { pt3dadd( 393.46, 392.417, 31.901, 0.5848 ) }
    dend_30 { pt3dadd( 394.474, 392.925, 31.803, 0.5592 ) }
    dend_30 { pt3dadd( 395.148, 393.791, 31.2729, 0.4576 ) }
    dend_30 { pt3dadd( 395.658, 394.78, 30.7849, 0.3814 ) }
    dend_30 { pt3dadd( 396.479, 395.557, 30.6967, 0.4068 ) }
    dend_30 { pt3dadd( 397.042, 396.477, 29.9617, 0.5338 ) }
    dend_30 { pt3dadd( 397.511, 397.503, 29.6671, 0.6102 ) }
    dend_30 { pt3dadd( 398.054, 398.507, 29.6094, 0.6102 ) }
    dend_30 { pt3dadd( 398.71, 399.435, 29.344, 0.5084 ) }
    dend_30 { pt3dadd( 399.301, 400.366, 28.649, 0.4576 ) }
    dend_30 { pt3dadd( 399.916, 401.324, 28.4928, 0.4068 ) }
    dend_30 { pt3dadd( 400.503, 402.291, 28.1831, 0.4068 ) }
    dend_30 { pt3dadd( 400.629, 403.031, 26.32, 0.3304 ) }
    dend_30 { pt3dadd( 400.876, 403.746, 26.2102, 0.2796 ) }
    dend_30 { pt3dadd( 401.473, 404.093, 26.2102, 0.3304 ) }
    dend_30 { pt3dadd( 402.391, 404.131, 26.2102, 0.4068 ) }
    dend_30 { pt3dadd( 403.553, 404.132, 24.7125, 0.3814 ) }
    dend_30 { pt3dadd( 403.911, 404.652, 24.7125, 0.356 ) }
    dend_30 { pt3dadd( 404.819, 404.587, 24.7125, 0.3304 ) }
    dend_30 { pt3dadd( 405.599, 403.937, 24.7125, 0.3814 ) }
    dend_30 { pt3dadd( 406.508, 403.678, 24.7125, 0.4576 ) }
    dend_30 { pt3dadd( 407.289, 403.654, 23.9635, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_30 { pt3dadd( 408.326, 404.204, 23.9635, 0.483 ) }
    dend_30 { pt3dadd( 408.94, 405.086, 23.2148, 0.4322 ) }
    dend_30 { pt3dadd( 409.328, 405.636, 23.2148, 0.3814 ) }
    dend_30 { pt3dadd( 409.197, 406.06, 22.4658, 0.305 ) }
    dend_30 { pt3dadd( 408.842, 406.512, 22.4658, 0.2796 ) }
    dend_30 { pt3dadd( 408.971, 406.997, 22.4658, 0.3304 ) }
    dend_30 { pt3dadd( 409.359, 407.416, 22.4658, 0.4576 ) }
    dend_30 { pt3dadd( 410.521, 407.513, 22.4658, 0.5848 ) }
    dend_30 { pt3dadd( 411.935, 407.644, 21.7171, 0.6356 ) }
    dend_30 { pt3dadd( 412.675, 408.16, 21.7171, 0.6102 ) }
    dend_30 { pt3dadd( 413.816, 408.482, 22.4658, 0.5592 ) }
    dend_30 { pt3dadd( 415.799, 409.648, 23.2148, 0.5084 ) }
    dend_30 { pt3dadd( 416.9, 409.972, 23.2148, 0.5084 ) }
    dend_30 { pt3dadd( 417.904, 409.841, 23.2148, 0.5084 ) }
    dend_30 { pt3dadd( 418.714, 410.069, 23.2148, 0.5848 ) }
    dend_30 { pt3dadd( 419.262, 410.489, 23.2148, 0.6356 ) }
    dend_30 { pt3dadd( 420.248, 411.171, 22.4658, 0.6864 ) }
    dend_30 { pt3dadd( 421.208, 412.034, 22.4658, 0.6356 ) }
    dend_30 { pt3dadd( 421.975, 412.849, 22.4658, 0.5592 ) }
    dend_30 { pt3dadd( 422.79, 413.665, 22.4658, 0.5084 ) }
    dend_30 { pt3dadd( 423.27, 413.809, 22.4658, 0.5592 ) }
    dend_30 { pt3dadd( 424.469, 413.809, 22.4658, 0.661 ) }
    dend_30 { pt3dadd( 426.235, 414.003, 21.7171, 0.7118 ) }
    dend_30 { pt3dadd( 427.957, 413.524, 21.7171, 0.7372 ) }
    dend_30 { pt3dadd( 429.633, 413.381, 21.7171, 0.7372 ) }
    dend_30 { pt3dadd( 430.925, 413.428, 21.7171, 0.7118 ) }
    dend_30 { pt3dadd( 431.691, 413.859, 21.7171, 0.661 ) }
    dend_30 { pt3dadd( 432.552, 414.578, 21.7171, 0.6356 ) }
    dend_30 { pt3dadd( 433.916, 415.104, 22.4658, 0.7372 ) }
    dend_30 { pt3dadd( 435.499, 415.152, 22.4658, 0.8136 ) }
    dend_30 { pt3dadd( 436.699, 415.535, 22.4658, 0.839 ) }
    dend_30 { pt3dadd( 437.368, 416.303, 22.4658, 0.788 ) }
    dend_30 { pt3dadd( 438.523, 416.495, 22.4658, 0.788 ) }
    dend_30 { pt3dadd( 439.72, 416.926, 22.4658, 0.7626 ) }
    dend_30 { pt3dadd( 440.246, 417.213, 22.4658, 0.6864 ) }
    dend_30 { pt3dadd( 440.966, 418.508, 22.4658, 0.5338 ) }
    dend_30 { pt3dadd( 441.495, 419.372, 22.4658, 0.483 ) }
    dend_30 { pt3dadd( 441.975, 419.851, 22.4658, 0.5084 ) }
    dend_30 { pt3dadd( 443.125, 420.379, 22.4658, 0.6102 ) }
    dend_30 { pt3dadd( 445.193, 421.842, 22.4658, 0.661 ) }
    dend_30 { pt3dadd( 446.487, 423.28, 22.4658, 0.7118 ) }
    dend_30 { pt3dadd( 448.236, 424.955, 23.2148, 0.7118 ) }
    dend_30 { pt3dadd( 448.783, 425.577, 23.9635, 0.7118 ) }
    dend_30 { pt3dadd( 449.507, 425.817, 23.9635, 0.6102 ) }
    dend_30 { pt3dadd( 450.036, 426.685, 23.9635, 0.5848 ) }
    dend_30 { pt3dadd( 450.685, 427.79, 23.2148, 0.5592 ) }
    dend_30 { pt3dadd( 451.646, 428.51, 23.2148, 0.661 ) }
    dend_30 { pt3dadd( 452.435, 428.843, 22.4658, 0.6864 ) }
    dend_30 { pt3dadd( 452.743, 430.036, 21.7171, 0.7118 ) }
    dend_30 { pt3dadd( 453.223, 431.138, 21.7171, 0.661 ) }
    dend_30 { pt3dadd( 453.797, 431.76, 21.7171, 0.6102 ) }
    dend_30 { pt3dadd( 455.055, 432.324, 20.9681, 0.5592 ) }
    dend_30 { pt3dadd( 455.964, 433.232, 20.9681, 0.5338 ) }
    dend_30 { pt3dadd( 456.25, 434.187, 20.9681, 0.5592 ) }
    dend_30 { pt3dadd( 456.442, 435.191, 20.9681, 0.5592 ) }
    dend_30 { pt3dadd( 458.104, 436.308, 21.7171, 0.5848 ) }
    dend_30 { pt3dadd( 459.062, 437.408, 21.7171, 0.5592 ) }
    dend_30 { pt3dadd( 459.925, 438.51, 21.7171, 0.5592 ) }
    dend_30 { pt3dadd( 460.117, 439.258, 21.9332, 0.4322 ) }
    dend_30 { pt3dadd( 460.219, 439.881, 22.12, 0.3814 ) }
    dend_30 { pt3dadd( 460.358, 440.542, 22.12, 0.4068 ) }
    dend_30 { pt3dadd( 460.485, 440.758, 22.12, 0.4068 ) }
    dend_30 { pt3dadd( 460.905, 441.025, 22.12, 0.305 ) }
    dend_30 { pt3dadd( 461.159, 441.114, 22.12, 0.2796 ) }
    dend_30 { pt3dadd( 461.972, 441.33, 22.12, 0.356 ) }
    dend_30 { pt3dadd( 462.354, 441.634, 22.4, 0.4068 ) }
    dend_30 { pt3dadd( 462.608, 442.181, 22.4, 0.4576 ) }
    dend_30 { pt3dadd( 462.761, 442.83, 22.4, 0.5338 ) }
    dend_30 { pt3dadd( 463.091, 443.3, 22.4, 0.5592 ) }
    dend_30 { pt3dadd( 463.397, 443.795, 22.4, 0.5592 ) }
    dend_30 { pt3dadd( 463.714, 444.279, 22.4, 0.5592 ) }
    dend_30 { pt3dadd( 464.223, 444.571, 22.4, 0.5592 ) }
    dend_30 { pt3dadd( 464.578, 444.902, 22.68, 0.5338 ) }
    dend_30 { pt3dadd( 465.15, 445.13, 22.68, 0.4322 ) }
    dend_30 { pt3dadd( 465.608, 445.397, 22.8668, 0.356 ) }
    dend_30 { pt3dadd( 466.066, 445.702, 22.96, 0.2796 ) }
    dend_30 { pt3dadd( 466.638, 445.931, 22.96, 0.2796 ) }
    dend_30 { pt3dadd( 467.438, 445.931, 22.96, 0.305 ) }
    dend_30 { pt3dadd( 468.048, 446.008, 23.24, 0.4068 ) }
    dend_30 { pt3dadd( 468.811, 446.046, 23.24, 0.4576 ) }
    dend_30 { pt3dadd( 469.498, 446.16, 23.24, 0.483 ) }
    dend_30 { pt3dadd( 470.082, 446.376, 23.24, 0.4322 ) }
    dend_30 { pt3dadd( 470.654, 446.605, 23.24, 0.4576 ) }
    dend_30 { pt3dadd( 471.124, 446.821, 23.24, 0.5592 ) }
    dend_30 { pt3dadd( 471.442, 447.19, 23.24, 0.5592 ) }
    dend_30 { pt3dadd( 471.773, 447.889, 23.24, 0.483 ) }
    dend_30 { pt3dadd( 472.014, 448.448, 23.24, 0.4322 ) }
    dend_30 { pt3dadd( 472.218, 448.931, 23.24, 0.4322 ) }
    dend_30 { pt3dadd( 472.586, 449.134, 22.96, 0.5338 ) }
    dend_30 { pt3dadd( 473.007, 449.63, 22.96, 0.5338 ) }
    dend_30 { pt3dadd( 473.616, 449.706, 22.96, 0.305 ) }
    dend_30 { pt3dadd( 474.086, 449.808, 22.96, 0.2542 ) }
    dend_30 { pt3dadd( 474.52, 450.062, 22.96, 0.305 ) }
    dend_30 { pt3dadd( 475.103, 450.393, 22.96, 0.2542 ) }
    dend_30 { pt3dadd( 475.409, 450.431, 22.96, 0.2288 ) }
    dend_30 { pt3dadd( 475.536, 450.532, 22.96, 0.2288 ) }
    dend_30 { pt3dadd( 475.637, 450.659, 22.96, 0.2288 ) }
    dend_30 { pt3dadd( 475.675, 450.85, 22.96, 0.2288 ) }
    dend_30 { pt3dadd( 475.675, 451.079, 22.96, 0.2288 ) }
    dend_30 { pt3dadd( 475.802, 451.753, 22.96, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_30 { pt3dadd( 476.018, 452.338, 22.96, 0.3814 ) }
    dend_30 { pt3dadd( 476.272, 452.884, 22.96, 0.5338 ) }
    dend_30 { pt3dadd( 476.641, 453.317, 22.96, 0.5848 ) }
    dend_30 { pt3dadd( 476.971, 453.71, 23.1468, 0.5592 ) }
    dend_30 { pt3dadd( 477.175, 454.27, 23.24, 0.4576 ) }
    dend_30 { pt3dadd( 477.441, 454.804, 23.24, 0.4576 ) }
    dend_30 { pt3dadd( 477.861, 455.185, 23.24, 0.483 ) }
    dend_30 { pt3dadd( 478.065, 455.782, 23.24, 0.5084 ) }
    dend_30 { pt3dadd( 478.281, 456.367, 23.24, 0.4322 ) }
    dend_30 { pt3dadd( 478.46, 456.99, 23.24, 0.356 ) }
    dend_30 { pt3dadd( 478.688, 457.562, 23.24, 0.3304 ) }
    dend_30 { pt3dadd( 478.878, 458.172, 23.24, 0.356 ) }
    dend_30 { pt3dadd( 478.993, 458.858, 23.24, 0.3814 ) }
    dend_30 { pt3dadd( 479.107, 459.545, 23.24, 0.3814 ) }
    dend_30 { pt3dadd( 479.336, 460.117, 23.24, 0.4068 ) }
    dend_30 { pt3dadd( 479.757, 460.498, 23.24, 0.4068 ) }
    dend_30 { pt3dadd( 479.985, 461.07, 23.24, 0.4068 ) }
    dend_30 { pt3dadd( 480.227, 461.629, 23.24, 0.356 ) }
    dend_30 { pt3dadd( 480.594, 462.062, 23.24, 0.356 ) }
    dend_30 { pt3dadd( 481.065, 462.392, 23.24, 0.356 ) }
    dend_30 { pt3dadd( 481.484, 462.773, 23.24, 0.4322 ) }
    dend_30 { pt3dadd( 481.878, 463.168, 23.2089, 0.5084 ) }
    dend_30 { pt3dadd( 482.425, 463.663, 22.96, 0.5084 ) }
    dend_30 { pt3dadd( 482.997, 463.778, 22.96, 0.356 ) }
    dend_30 { pt3dadd( 483.365, 463.79, 22.4932, 0.4068 ) }
    dend_30 { pt3dadd( 483.835, 463.892, 21.9332, 0.3814 ) }
    dend_30 { pt3dadd( 484.598, 463.892, 21.84, 0.305 ) }
    dend_30 { pt3dadd( 485.399, 463.892, 21.84, 0.2542 ) }
    dend_30 { pt3dadd( 486.048, 464.044, 21.84, 0.2288 ) }
    dend_30 { pt3dadd( 486.543, 464.35, 21.84, 0.2542 ) }
    dend_30 { pt3dadd( 487.001, 464.693, 21.84, 0.305 ) }
    dend_30 { pt3dadd( 487.458, 464.922, 21.56, 0.356 ) }
    dend_30 { pt3dadd( 487.878, 464.972, 21.0311, 0.3814 ) }
    dend_30 { pt3dadd( 488.081, 465.443, 21.0, 0.4576 ) }
    dend_30 { pt3dadd( 488.679, 465.875, 21.0, 0.4322 ) }
    dend_30 { pt3dadd( 488.971, 466.257, 20.6889, 0.4576 ) }
    dend_30 { pt3dadd( 489.353, 466.459, 20.16, 0.4576 ) }
    dend_30 { pt3dadd( 489.784, 466.829, 20.16, 0.4576 ) }
    dend_30 { pt3dadd( 490.356, 467.057, 20.16, 0.356 ) }
    dend_30 { pt3dadd( 490.547, 467.095, 20.16, 0.2288 ) }
    dend_30 { pt3dadd( 490.776, 467.095, 20.16, 0.2288 ) }
    dend_30 { pt3dadd( 490.992, 467.222, 20.16, 0.2288 ) }
    dend_30 { pt3dadd( 491.005, 467.438, 20.16, 0.2288 ) }
    dend_30 { pt3dadd( 491.043, 467.744, 20.16, 0.2542 ) }
    dend_30 { pt3dadd( 491.373, 467.985, 20.16, 0.6356 ) }
    dend_30 { pt3dadd( 491.984, 468.633, 20.16, 0.788 ) }
    dend_30 { pt3dadd( 492.53, 469.117, 20.16, 0.7372 ) }
    dend_30 { pt3dadd( 492.835, 469.726, 20.16, 0.6102 ) }
    dend_30 { pt3dadd( 493.572, 470.248, 20.16, 0.5338 ) }
    dend_30 { pt3dadd( 494.056, 470.565, 20.16, 0.3814 ) }
    dend_30 { pt3dadd( 494.526, 470.896, 20.16, 0.2796 ) }
    dend_30 { pt3dadd( 494.666, 471.099, 20.16, 0.2288 ) }
    dend_30 { pt3dadd( 495.225, 471.214, 20.16, 0.3814 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 53/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 380.745, 376.557, 36.3955, 0.6864 ) }
    dend_20 { pt3dadd( 381.822, 376.895, 36.3737, 0.6864 ) }
    dend_20 { pt3dadd( 382.798, 377.479, 36.262, 0.6864 ) }
    dend_20 { pt3dadd( 383.828, 377.862, 35.6401, 0.6864 ) }
    dend_20 { pt3dadd( 384.928, 378.105, 35.5099, 0.6864 ) }
    dend_20 { pt3dadd( 385.992, 378.346, 36.2771, 0.7118 ) }
    dend_20 { pt3dadd( 387.115, 378.516, 36.3975, 0.7118 ) }
    dend_20 { pt3dadd( 388.222, 378.773, 36.384, 0.6864 ) }
    dend_20 { pt3dadd( 389.365, 378.775, 36.2832, 0.6102 ) }
    dend_20 { pt3dadd( 390.461, 378.755, 35.6196, 0.5848 ) }
    dend_20 { pt3dadd( 391.477, 378.663, 34.3641, 0.6864 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 64/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 418.266, 392.748, 39.1468, 0.2288 ) }
    dend_14 { pt3dadd( 418.664, 392.877, 38.1749, 0.7372 ) }
    dend_14 { pt3dadd( 419.562, 393.377, 37.5236, 0.8898 ) }
    dend_14 { pt3dadd( 420.595, 393.862, 37.5424, 0.9152 ) }
    dend_14 { pt3dadd( 421.635, 394.321, 37.6516, 0.8136 ) }
    dend_14 { pt3dadd( 422.505, 395.001, 38.2449, 0.7118 ) }
    dend_14 { pt3dadd( 423.199, 395.897, 38.46, 0.6102 ) }
    dend_14 { pt3dadd( 423.846, 396.799, 37.8658, 0.6102 ) }
    dend_14 { pt3dadd( 424.697, 397.513, 37.9739, 0.6356 ) }
    dend_14 { pt3dadd( 425.729, 397.934, 38.099, 0.6864 ) }
    dend_14 { pt3dadd( 426.839, 398.018, 38.3426, 0.6356 ) }
    dend_14 { pt3dadd( 427.957, 398.139, 38.7825, 0.6102 ) }
    dend_14 { pt3dadd( 429.28, 398.879, 38.64, 0.5848 ) }
    dend_14 { pt3dadd( 430.234, 399.499, 38.64, 0.6356 ) }
    dend_14 { pt3dadd( 431.067, 400.282, 38.64, 0.661 ) }
    dend_14 { pt3dadd( 431.892, 401.075, 38.64, 0.6864 ) }
    dend_14 { pt3dadd( 432.771, 401.807, 38.64, 0.6356 ) }
    dend_14 { pt3dadd( 433.856, 402.089, 38.64, 0.5592 ) }
    dend_14 { pt3dadd( 434.978, 401.909, 38.6406, 0.4576 ) }
    dend_14 { pt3dadd( 436.093, 401.738, 38.6422, 0.4576 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 84/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 418.266, 392.748, 39.1468, 0.2288 ) }
    dend_11 { pt3dadd( 418.508, 392.67, 41.057, 0.356 ) }
    dend_11 { pt3dadd( 418.81, 392.828, 43.4734, 0.4322 ) }
    dend_11 { pt3dadd( 418.939, 393.887, 44.24, 0.4576 ) }
    dend_11 { pt3dadd( 418.977, 395.03, 44.2406, 0.4322 ) }
    dend_11 { pt3dadd( 419.222, 396.135, 44.2434, 0.4322 ) }
    dend_11 { pt3dadd( 419.451, 397.254, 44.2627, 0.3814 ) }
    dend_11 { pt3dadd( 419.79, 398.325, 44.3859, 0.4068 ) }
    dend_11 { pt3dadd( 420.498, 399.136, 45.1604, 0.3814 ) }
    dend_11 { pt3dadd( 421.121, 399.946, 46.3092, 0.4068 ) }
    dend_11 { pt3dadd( 420.992, 400.866, 47.7649, 0.3304 ) }
    dend_11 { pt3dadd( 420.477, 401.759, 48.8964, 0.2796 ) }
    dend_11 { pt3dadd( 420.504, 402.818, 49.215, 0.2542 ) }
    dend_11 { pt3dadd( 421.451, 403.355, 49.1879, 0.305 ) }
    dend_11 { pt3dadd( 422.53, 403.482, 49.4822, 0.356 ) }
    dend_11 { pt3dadd( 423.421, 404.094, 48.739, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 424.143, 404.961, 48.8054, 0.4576 ) }
    dend_11 { pt3dadd( 424.753, 405.873, 49.3385, 0.5338 ) }
    dend_11 { pt3dadd( 425.443, 406.743, 49.8758, 0.5592 ) }
    dend_11 { pt3dadd( 426.246, 407.556, 49.9951, 0.6864 ) }
    dend_11 { pt3dadd( 427.104, 408.229, 50.6744, 0.7372 ) }
    dend_11 { pt3dadd( 427.943, 408.943, 51.3492, 0.7372 ) }
    dend_11 { pt3dadd( 428.525, 409.441, 51.6474, 0.5848 ) }
    dend_11 { pt3dadd( 429.487, 409.972, 51.5634, 0.4322 ) }
    dend_11 { pt3dadd( 430.535, 410.352, 51.0362, 0.3304 ) }
    dend_11 { pt3dadd( 431.557, 410.762, 51.5262, 0.3814 ) }
    dend_11 { pt3dadd( 432.526, 411.21, 52.4611, 0.5338 ) }
    dend_11 { pt3dadd( 433.513, 411.68, 53.2235, 0.661 ) }
    dend_11 { pt3dadd( 434.54, 412.094, 53.8048, 0.661 ) }
    dend_11 { pt3dadd( 435.609, 412.215, 54.3368, 0.5592 ) }
    dend_11 { pt3dadd( 436.643, 412.381, 53.3005, 0.5592 ) }
    dend_11 { pt3dadd( 437.658, 412.901, 53.2064, 0.6864 ) }
    dend_11 { pt3dadd( 438.611, 413.529, 53.2316, 0.839 ) }
    dend_11 { pt3dadd( 439.629, 414.041, 53.3733, 0.8898 ) }
    dend_11 { pt3dadd( 440.62, 414.476, 54.1394, 0.839 ) }
    dend_11 { pt3dadd( 441.57, 414.832, 55.3655, 0.8136 ) }
    dend_11 { pt3dadd( 442.578, 415.33, 55.7956, 0.8136 ) }
    dend_11 { pt3dadd( 443.556, 415.828, 56.5172, 0.8136 ) }
    dend_11 { pt3dadd( 444.534, 416.403, 56.7787, 0.7626 ) }
    dend_11 { pt3dadd( 445.521, 416.853, 57.5543, 0.6864 ) }
    dend_11 { pt3dadd( 446.533, 417.269, 58.3159, 0.6102 ) }
    dend_11 { pt3dadd( 447.546, 417.748, 58.7986, 0.5338 ) }
    dend_11 { pt3dadd( 448.61, 418.142, 58.7913, 0.5084 ) }
    dend_11 { pt3dadd( 449.71, 418.426, 58.7468, 0.5338 ) }
    dend_11 { pt3dadd( 450.755, 418.869, 58.5108, 0.6864 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 29/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 370.105, 358.069, 33.3284, 0.6864 ) }
    dend_8 { pt3dadd( 367.04, 358.248, 30.7034, 0.356 ) }
    dend_8 { pt3dadd( 367.44, 359.369, 26.959, 0.305 ) }
    dend_8 { pt3dadd( 367.497, 360.224, 26.959, 0.305 ) }
    dend_8 { pt3dadd( 367.555, 360.794, 26.959, 0.2796 ) }
    dend_8 { pt3dadd( 367.155, 360.736, 26.959, 0.2542 ) }
    dend_8 { pt3dadd( 365.261, 359.735, 23.9635, 0.2796 ) }
    dend_8 { pt3dadd( 364.579, 359.679, 23.9635, 0.3304 ) }
    dend_8 { pt3dadd( 362.849, 360.431, 21.7171, 0.4068 ) }
    dend_8 { pt3dadd( 361.776, 360.544, 21.7171, 0.3814 ) }
    dend_8 { pt3dadd( 360.99, 360.555, 20.2194, 0.356 ) }
    dend_8 { pt3dadd( 360.537, 360.555, 20.2194, 0.305 ) }
    dend_8 { pt3dadd( 360.593, 359.71, 20.2194, 0.305 ) }
    dend_8 { pt3dadd( 360.764, 358.922, 20.2194, 0.305 ) }
    dend_8 { pt3dadd( 360.85, 357.635, 19.4704, 0.2796 ) }
    dend_8 { pt3dadd( 361.13, 356.904, 19.4704, 0.2542 ) }
    dend_8 { pt3dadd( 360.792, 356.173, 19.4704, 0.2288 ) }
    dend_8 { pt3dadd( 360.063, 356.51, 19.4704, 0.2288 ) }
    dend_8 { pt3dadd( 359.895, 356.679, 19.4704, 0.2542 ) }
    dend_8 { pt3dadd( 357.25, 358.254, 19.4704, 0.305 ) }
    dend_8 { pt3dadd( 356.52, 359.097, 19.4704, 0.4576 ) }
    dend_8 { pt3dadd( 353.954, 360.906, 17.9726, 0.5592 ) }
    dend_8 { pt3dadd( 351.71, 362.364, 17.9726, 0.661 ) }
    dend_8 { pt3dadd( 350.24, 363.544, 17.2239, 0.5592 ) }
    dend_8 { pt3dadd( 348.557, 364.215, 17.2239, 0.5084 ) }
    dend_8 { pt3dadd( 346.029, 365.167, 16.4749, 0.4322 ) }
    dend_8 { pt3dadd( 343.392, 366.671, 14.9772, 0.5084 ) }
    dend_8 { pt3dadd( 340.379, 368.295, 15.7262, 0.6864 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 57/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 370.105, 358.069, 33.3284, 0.6864 ) }
    dend_5 { pt3dadd( 369.974, 356.992, 34.0805, 0.7118 ) }
    dend_5 { pt3dadd( 370.0, 355.852, 33.952, 0.7372 ) }
    dend_5 { pt3dadd( 370.169, 354.808, 33.0033, 0.7626 ) }
    dend_5 { pt3dadd( 370.474, 353.899, 31.5118, 0.7372 ) }
    dend_5 { pt3dadd( 370.854, 353.09, 29.9152, 0.7372 ) }
    dend_5 { pt3dadd( 371.753, 352.4, 29.6794, 0.7372 ) }
    dend_5 { pt3dadd( 372.724, 351.801, 29.6775, 0.7626 ) }
    dend_5 { pt3dadd( 373.712, 351.231, 29.6646, 0.7118 ) }
    dend_5 { pt3dadd( 374.557, 350.526, 29.5691, 0.6356 ) }
    dend_5 { pt3dadd( 374.779, 349.523, 28.8854, 0.4576 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 68/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 404.747, 349.461, 21.6874, 0.9152 ) }
    dend_3 { pt3dadd( 405.952, 348.212, 21.3102, 0.5084 ) }
    dend_3 { pt3dadd( 405.794, 347.112, 21.5292, 0.4576 ) }
    dend_3 { pt3dadd( 406.23, 346.138, 21.4248, 0.4576 ) }
    dend_3 { pt3dadd( 406.888, 345.231, 21.8439, 0.483 ) }
    dend_3 { pt3dadd( 407.134, 344.12, 21.8644, 0.5338 ) }
    dend_3 { pt3dadd( 407.462, 343.031, 21.9918, 0.6102 ) }
    dend_3 { pt3dadd( 407.582, 341.936, 22.6747, 0.6864 ) }
    dend_3 { pt3dadd( 407.913, 340.856, 22.8029, 0.7118 ) }
    dend_3 { pt3dadd( 408.124, 339.796, 22.0192, 0.7118 ) }
    dend_3 { pt3dadd( 408.523, 338.81, 21.0109, 0.661 ) }
    dend_3 { pt3dadd( 409.168, 337.899, 20.7189, 0.6356 ) }
    dend_3 { pt3dadd( 410.178, 337.386, 20.7138, 0.6102 ) }
    dend_3 { pt3dadd( 410.996, 336.607, 20.6853, 0.5848 ) }
    dend_3 { pt3dadd( 411.365, 335.532, 20.5103, 0.6102 ) }
    dend_3 { pt3dadd( 411.641, 334.476, 19.7537, 0.6356 ) }
    dend_3 { pt3dadd( 411.882, 333.376, 19.4692, 0.7372 ) }
    dend_3 { pt3dadd( 412.582, 332.537, 18.8611, 0.7626 ) }
    dend_3 { pt3dadd( 412.919, 331.71, 17.2981, 0.8136 ) }
    dend_3 { pt3dadd( 412.651, 330.69, 16.3534, 0.788 ) }
    dend_3 { pt3dadd( 412.324, 329.599, 16.24, 0.7626 ) }
    dend_3 { pt3dadd( 412.04, 328.495, 16.24, 0.6864 ) }
    dend_3 { pt3dadd( 411.878, 327.371, 16.2403, 0.6356 ) }
    dend_3 { pt3dadd( 412.593, 326.623, 16.2422, 0.6356 ) }
    dend_3 { pt3dadd( 413.701, 326.374, 16.2551, 0.6356 ) }
    dend_3 { pt3dadd( 414.79, 326.033, 16.3554, 0.6102 ) }
    dend_3 { pt3dadd( 415.272, 325.239, 17.36, 0.4576 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 95/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 404.747, 349.461, 21.6874, 0.9152 ) }
    dend_2 { pt3dadd( 405.949, 350.139, 20.8404, 0.6864 ) }
    dend_2 { pt3dadd( 407.016, 350.306, 20.0368, 0.6356 ) }
    dend_2 { pt3dadd( 408.003, 349.807, 19.7663, 0.6356 ) }
    dend_2 { pt3dadd( 408.697, 348.95, 20.3815, 0.5848 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 409.598, 348.276, 20.4179, 0.5592 ) }
    dend_2 { pt3dadd( 410.481, 347.792, 19.1856, 0.5848 ) }
    dend_2 { pt3dadd( 411.568, 347.777, 18.5046, 0.5848 ) }
    dend_2 { pt3dadd( 412.647, 348.147, 18.5618, 0.6356 ) }
    dend_2 { pt3dadd( 413.721, 348.446, 19.024, 0.5848 ) }
    dend_2 { pt3dadd( 414.819, 348.366, 19.5994, 0.6864 ) }
    dend_2 { pt3dadd( 415.735, 347.687, 19.5972, 0.661 ) }
    dend_2 { pt3dadd( 416.589, 346.925, 19.5877, 0.7372 ) }
    dend_2 { pt3dadd( 417.565, 346.331, 19.5392, 0.661 ) }
    dend_2 { pt3dadd( 418.568, 345.823, 19.2452, 0.7118 ) }
    dend_2 { pt3dadd( 419.623, 345.529, 18.5794, 0.6864 ) }
    dend_2 { pt3dadd( 420.603, 344.95, 18.669, 0.7118 ) }
    dend_2 { pt3dadd( 421.617, 344.505, 19.2475, 0.7372 ) }
    dend_2 { pt3dadd( 422.503, 343.912, 18.4862, 0.8136 ) }
    dend_2 { pt3dadd( 423.312, 343.489, 16.8834, 0.9152 ) }
    dend_2 { pt3dadd( 424.357, 343.195, 16.0986, 0.9152 ) }
    dend_2 { pt3dadd( 425.355, 343.48, 15.2141, 0.9152 ) }
    dend_2 { pt3dadd( 426.464, 343.538, 14.6381, 0.839 ) }
    dend_2 { pt3dadd( 427.572, 343.508, 14.0036, 0.788 ) }
    dend_2 { pt3dadd( 428.542, 343.086, 14.0, 0.4576 ) }
    // Section: dend_29, id: dend_29, parent: dend_20 (entry count 20/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 391.477, 378.663, 34.3641, 0.6864 ) }
    dend_29 { pt3dadd( 387.117, 377.754, 29.2057, 0.3304 ) }
    dend_29 { pt3dadd( 385.681, 377.236, 29.2057, 0.2542 ) }
    dend_29 { pt3dadd( 385.402, 378.193, 29.2057, 0.2288 ) }
    dend_29 { pt3dadd( 385.481, 379.429, 29.2057, 0.2288 ) }
    dend_29 { pt3dadd( 385.043, 379.749, 29.2057, 0.2796 ) }
    dend_29 { pt3dadd( 383.322, 379.578, 27.708, 0.3814 ) }
    dend_29 { pt3dadd( 382.368, 379.698, 27.708, 0.5338 ) }
    dend_29 { pt3dadd( 380.31, 379.879, 25.4612, 0.5848 ) }
    dend_29 { pt3dadd( 379.441, 379.444, 25.4612, 0.5338 ) }
    dend_29 { pt3dadd( 378.471, 379.193, 23.2148, 0.3814 ) }
    dend_29 { pt3dadd( 377.606, 379.823, 23.2148, 0.305 ) }
    dend_29 { pt3dadd( 376.938, 380.059, 23.2148, 0.2796 ) }
    dend_29 { pt3dadd( 376.073, 379.547, 23.2148, 0.305 ) }
    dend_29 { pt3dadd( 375.129, 378.958, 23.2148, 0.305 ) }
    dend_29 { pt3dadd( 374.136, 379.576, 21.7171, 0.305 ) }
    dend_29 { pt3dadd( 373.745, 379.928, 21.7171, 0.305 ) }
    dend_29 { pt3dadd( 372.843, 380.163, 21.7171, 0.305 ) }
    dend_29 { pt3dadd( 372.218, 380.633, 21.7171, 0.356 ) }
    dend_29 { pt3dadd( 371.708, 382.748, 21.7171, 0.3814 ) }
    dend_29 { pt3dadd( 371.003, 383.766, 21.7171, 0.4068 ) }
    dend_29 { pt3dadd( 370.313, 384.46, 20.9681, 0.356 ) }
    dend_29 { pt3dadd( 369.863, 384.504, 20.9681, 0.3304 ) }
    dend_29 { pt3dadd( 369.281, 384.369, 20.9681, 0.3304 ) }
    dend_29 { pt3dadd( 368.742, 384.481, 20.9681, 0.3814 ) }
    dend_29 { pt3dadd( 368.48, 385.066, 20.2194, 0.4576 ) }
    dend_29 { pt3dadd( 368.368, 385.603, 20.2194, 0.5338 ) }
    dend_29 { pt3dadd( 368.727, 386.656, 20.2194, 0.5848 ) }
    dend_29 { pt3dadd( 368.206, 387.457, 18.7216, 0.5084 ) }
    dend_29 { pt3dadd( 367.646, 387.613, 18.7216, 0.4068 ) }
    dend_29 { pt3dadd( 367.513, 388.192, 18.7216, 0.3304 ) }
    dend_29 { pt3dadd( 367.909, 388.807, 17.2239, 0.305 ) }
    dend_29 { pt3dadd( 368.71, 389.163, 17.2239, 0.305 ) }
    dend_29 { pt3dadd( 369.31, 389.407, 17.2239, 0.305 ) }
    dend_29 { pt3dadd( 368.776, 390.096, 17.2239, 0.305 ) }
    dend_29 { pt3dadd( 368.125, 391.187, 15.7262, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_20 (entry count 56/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 391.477, 378.663, 34.3641, 0.6864 ) }
    dend_28 { pt3dadd( 391.935, 378.782, 35.28, 0.5338 ) }
    dend_28 { pt3dadd( 392.438, 379.801, 35.322, 0.483 ) }
    dend_28 { pt3dadd( 393.302, 380.514, 35.5354, 0.483 ) }
    dend_28 { pt3dadd( 394.285, 381.005, 36.2222, 0.5338 ) }
    dend_28 { pt3dadd( 395.29, 381.518, 35.9892, 0.5848 ) }
    dend_28 { pt3dadd( 396.235, 382.097, 35.397, 0.6102 ) }
    dend_28 { pt3dadd( 397.205, 382.692, 35.488, 0.6102 ) }
    dend_28 { pt3dadd( 398.158, 383.242, 36.1673, 0.661 ) }
    dend_28 { pt3dadd( 399.046, 383.952, 36.4092, 0.6864 ) }
    dend_28 { pt3dadd( 400.014, 384.551, 36.4459, 0.6864 ) }
    dend_28 { pt3dadd( 401.011, 385.099, 36.6366, 0.6356 ) }
    dend_28 { pt3dadd( 401.863, 385.777, 37.2548, 0.6102 ) }
    dend_28 { pt3dadd( 402.768, 386.397, 36.6257, 0.6356 ) }
    dend_28 { pt3dadd( 403.789, 386.877, 36.4594, 0.661 ) }
    dend_28 { pt3dadd( 404.852, 386.585, 36.7816, 0.7118 ) }
    dend_28 { pt3dadd( 405.8, 386.023, 37.4716, 0.7372 ) }
    dend_28 { pt3dadd( 406.779, 385.447, 37.7168, 0.6864 ) }
    dend_28 { pt3dadd( 407.783, 385.004, 38.4126, 0.6102 ) }
    dend_28 { pt3dadd( 408.892, 384.888, 38.6324, 0.5338 ) }
    dend_28 { pt3dadd( 409.916, 385.394, 38.5949, 0.6102 ) }
    dend_28 { pt3dadd( 410.882, 385.989, 38.3844, 0.7118 ) }
    dend_28 { pt3dadd( 411.947, 386.342, 38.4969, 0.8136 ) }
    dend_28 { pt3dadd( 413.059, 386.544, 38.7856, 0.8644 ) }
    dend_28 { pt3dadd( 414.162, 386.468, 39.412, 0.8898 ) }
    dend_28 { pt3dadd( 415.222, 386.151, 39.0902, 0.8898 ) }
    dend_28 { pt3dadd( 416.337, 386.026, 38.64, 0.788 ) }
    dend_28 { pt3dadd( 417.434, 385.724, 38.64, 0.6864 ) }
    dend_28 { pt3dadd( 418.572, 385.641, 38.64, 0.661 ) }
    dend_28 { pt3dadd( 419.715, 385.631, 38.64, 0.7118 ) }
    dend_28 { pt3dadd( 420.857, 385.566, 38.64, 0.7626 ) }
    dend_28 { pt3dadd( 421.941, 385.229, 38.6406, 0.7118 ) }
    dend_28 { pt3dadd( 423.016, 384.845, 38.6428, 0.6356 ) }
    dend_28 { pt3dadd( 424.055, 384.376, 38.6562, 0.5338 ) }
    dend_28 { pt3dadd( 425.141, 384.028, 38.7447, 0.5338 ) }
    dend_28 { pt3dadd( 426.193, 383.674, 39.296, 0.6356 ) }
    dend_28 { pt3dadd( 427.197, 383.168, 39.7253, 0.7372 ) }
    dend_28 { pt3dadd( 428.056, 382.421, 39.5811, 0.7626 ) }
    dend_28 { pt3dadd( 428.616, 382.207, 38.7736, 0.6864 ) }
    dend_28 { pt3dadd( 429.48, 381.609, 37.7496, 0.661 ) }
    dend_28 { pt3dadd( 430.281, 380.806, 37.5152, 0.6356 ) }
    dend_28 { pt3dadd( 430.794, 379.792, 37.492, 0.6102 ) }
    dend_28 { pt3dadd( 431.613, 379.028, 37.3307, 0.6102 ) }
    dend_28 { pt3dadd( 432.458, 378.352, 36.5434, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_28 { pt3dadd( 433.379, 377.687, 36.3975, 0.839 ) }
    dend_28 { pt3dadd( 434.281, 376.982, 36.3888, 0.8898 ) }
    dend_28 { pt3dadd( 435.188, 376.294, 36.3454, 0.8644 ) }
    dend_28 { pt3dadd( 435.997, 375.501, 36.1253, 0.7118 ) }
    dend_28 { pt3dadd( 436.553, 374.534, 35.7574, 0.6102 ) }
    dend_28 { pt3dadd( 437.201, 373.624, 36.2345, 0.5338 ) }
    dend_28 { pt3dadd( 438.012, 372.876, 35.8025, 0.5848 ) }
    dend_28 { pt3dadd( 438.751, 372.034, 35.3063, 0.5848 ) }
    dend_28 { pt3dadd( 439.59, 371.259, 35.28, 0.5338 ) }
    dend_28 { pt3dadd( 440.534, 370.616, 35.28, 0.4068 ) }
    dend_28 { pt3dadd( 441.419, 369.893, 35.28, 0.3814 ) }
    dend_28 { pt3dadd( 442.371, 369.265, 35.28, 0.4576 ) }
    dend_28 { pt3dadd( 443.314, 368.618, 35.2794, 0.6356 ) }
    dend_28 { pt3dadd( 444.229, 367.936, 35.2775, 0.788 ) }
    dend_28 { pt3dadd( 445.134, 367.241, 35.2685, 0.8644 ) }
    dend_28 { pt3dadd( 446.03, 366.533, 35.2262, 0.788 ) }
    dend_28 { pt3dadd( 446.83, 365.721, 35.0526, 0.661 ) }
    dend_28 { pt3dadd( 447.596, 364.96, 34.2787, 0.5592 ) }
    dend_28 { pt3dadd( 448.622, 364.477, 34.1508, 0.5848 ) }
    dend_28 { pt3dadd( 449.563, 363.853, 34.1102, 0.6356 ) }
    dend_28 { pt3dadd( 450.279, 362.97, 33.9077, 0.7372 ) }
    dend_28 { pt3dadd( 451.223, 362.423, 33.1492, 0.7626 ) }
    dend_28 { pt3dadd( 452.296, 362.043, 32.9986, 0.788 ) }
    dend_28 { pt3dadd( 453.263, 361.449, 32.8157, 0.7372 ) }
    dend_28 { pt3dadd( 453.967, 360.605, 32.1224, 0.7118 ) }
    dend_28 { pt3dadd( 454.929, 360.051, 32.2624, 0.6864 ) }
    dend_28 { pt3dadd( 456.024, 359.96, 32.9815, 0.6864 ) }
    dend_28 { pt3dadd( 457.107, 359.648, 33.0215, 0.6864 ) }
    dend_28 { pt3dadd( 458.09, 359.074, 32.937, 0.6864 ) }
    dend_28 { pt3dadd( 458.977, 358.419, 32.3935, 0.661 ) }
    dend_28 { pt3dadd( 459.762, 357.807, 31.1114, 0.5848 ) }
    dend_28 { pt3dadd( 460.633, 357.11, 31.3729, 0.483 ) }
    dend_28 { pt3dadd( 461.009, 356.364, 31.1688, 0.4068 ) }
    dend_28 { pt3dadd( 461.69, 355.475, 30.653, 0.4322 ) }
    dend_28 { pt3dadd( 462.48, 354.719, 29.9785, 0.4576 ) }
    dend_28 { pt3dadd( 463.382, 354.036, 29.7892, 0.5084 ) }
    dend_28 { pt3dadd( 464.274, 353.408, 30.4307, 0.483 ) }
    dend_28 { pt3dadd( 465.085, 352.744, 29.8934, 0.483 ) }
    dend_28 { pt3dadd( 465.792, 351.861, 29.6825, 0.4576 ) }
    dend_28 { pt3dadd( 466.648, 351.102, 29.6918, 0.4576 ) }
    dend_28 { pt3dadd( 467.649, 350.556, 29.7424, 0.5084 ) }
    dend_28 { pt3dadd( 468.708, 350.293, 30.3366, 0.5338 ) }
    dend_28 { pt3dadd( 469.744, 349.889, 30.7902, 0.5592 ) }
    dend_28 { pt3dadd( 470.835, 349.561, 30.7415, 0.5084 ) }
    dend_28 { pt3dadd( 471.958, 349.552, 30.3607, 0.5084 ) }
    dend_28 { pt3dadd( 473.037, 349.767, 29.713, 0.5338 ) }
    dend_28 { pt3dadd( 474.141, 349.501, 29.68, 0.6102 ) }
    dend_28 { pt3dadd( 475.249, 349.248, 29.6806, 0.6356 ) }
    dend_28 { pt3dadd( 476.327, 348.872, 29.6822, 0.6102 ) }
    dend_28 { pt3dadd( 477.311, 348.294, 29.6912, 0.5338 ) }
    dend_28 { pt3dadd( 478.391, 347.927, 29.755, 0.4576 ) }
    dend_28 { pt3dadd( 479.474, 347.66, 30.1862, 0.4068 ) }
    dend_28 { pt3dadd( 480.585, 347.59, 30.0171, 0.4322 ) }
    dend_28 { pt3dadd( 481.668, 347.286, 29.68, 0.5084 ) }
    dend_28 { pt3dadd( 482.796, 347.109, 29.68, 0.5848 ) }
    dend_28 { pt3dadd( 483.83, 346.661, 29.68, 0.5338 ) }
    dend_28 { pt3dadd( 484.81, 346.076, 29.68, 0.4576 ) }
    dend_28 { pt3dadd( 485.839, 345.582, 29.68, 0.4068 ) }
    dend_28 { pt3dadd( 486.923, 345.231, 29.68, 0.4322 ) }
    dend_28 { pt3dadd( 487.994, 344.835, 29.68, 0.4322 ) }
    dend_28 { pt3dadd( 489.036, 344.371, 29.6797, 0.3814 ) }
    dend_28 { pt3dadd( 489.958, 343.7, 29.6786, 0.3814 ) }
    dend_28 { pt3dadd( 490.847, 342.985, 29.673, 0.4068 ) }
    dend_28 { pt3dadd( 491.611, 342.154, 29.6405, 0.483 ) }
    dend_28 { pt3dadd( 492.27, 341.223, 29.4596, 0.483 ) }
    dend_28 { pt3dadd( 492.9, 340.433, 28.3349, 0.483 ) }
    dend_28 { pt3dadd( 493.837, 339.981, 27.2185, 0.4322 ) }
    dend_28 { pt3dadd( 494.869, 339.617, 26.5776, 0.3814 ) }
    dend_28 { pt3dadd( 495.827, 339.068, 27.1519, 0.356 ) }
    dend_28 { pt3dadd( 496.66, 338.293, 27.2289, 0.3304 ) }
    dend_28 { pt3dadd( 497.357, 337.447, 26.5289, 0.3814 ) }
    dend_28 { pt3dadd( 498.404, 337.067, 26.32, 0.4322 ) }
    dend_28 { pt3dadd( 499.497, 336.76, 26.3206, 0.5592 ) }
    dend_28 { pt3dadd( 500.622, 336.562, 26.3228, 0.6356 ) }
    dend_28 { pt3dadd( 501.711, 336.228, 26.3396, 0.661 ) }
    dend_28 { pt3dadd( 502.843, 336.074, 26.4516, 0.5848 ) }
    dend_28 { pt3dadd( 503.818, 335.56, 27.078, 0.483 ) }
    dend_28 { pt3dadd( 504.568, 334.725, 27.44, 0.3814 ) }
    dend_28 { pt3dadd( 505.412, 333.973, 27.44, 0.356 ) }
    dend_28 { pt3dadd( 506.442, 333.482, 27.44, 0.3304 ) }
    dend_28 { pt3dadd( 507.478, 333.018, 27.44, 0.3304 ) }
    dend_28 { pt3dadd( 507.478, 332.446, 27.72, 0.2796 ) }
    dend_28 { pt3dadd( 507.491, 332.116, 27.72, 0.2542 ) }
    dend_28 { pt3dadd( 507.632, 331.912, 27.72, 0.2288 ) }
    dend_28 { pt3dadd( 507.822, 331.76, 27.72, 0.2288 ) }
    dend_28 { pt3dadd( 508.343, 331.252, 27.72, 0.2288 ) }
    dend_28 { pt3dadd( 508.724, 330.832, 27.72, 0.2288 ) }
    dend_28 { pt3dadd( 509.13, 330.438, 27.72, 0.2288 ) }
    dend_28 { pt3dadd( 509.55, 330.094, 27.8132, 0.2288 ) }
    dend_28 { pt3dadd( 509.856, 329.676, 28.0, 0.2542 ) }
    dend_28 { pt3dadd( 510.301, 329.32, 28.0, 0.305 ) }
    dend_28 { pt3dadd( 510.707, 328.925, 28.0, 0.3814 ) }
    dend_28 { pt3dadd( 511.063, 328.48, 28.0, 0.4068 ) }
    dend_28 { pt3dadd( 511.559, 328.176, 28.0, 0.3814 ) }
    dend_28 { pt3dadd( 512.029, 327.845, 28.0, 0.305 ) }
    dend_28 { pt3dadd( 512.576, 327.591, 28.0, 0.2542 ) }
    dend_28 { pt3dadd( 512.944, 327.159, 28.0, 0.2288 ) }
    dend_28 { pt3dadd( 513.289, 326.701, 28.0, 0.2288 ) }
    dend_28 { pt3dadd( 513.771, 326.396, 27.9689, 0.2288 ) }
    dend_28 { pt3dadd( 514.342, 326.269, 27.72, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_28 { pt3dadd( 514.813, 325.938, 27.72, 0.305 ) }
    dend_28 { pt3dadd( 515.41, 325.811, 27.5332, 0.4068 ) }
    dend_28 { pt3dadd( 515.944, 325.582, 27.44, 0.5084 ) }
    dend_28 { pt3dadd( 516.63, 325.468, 27.44, 0.6102 ) }
    dend_28 { pt3dadd( 517.177, 325.252, 27.3468, 0.6102 ) }
    dend_28 { pt3dadd( 517.673, 325.125, 26.9111, 0.5592 ) }
    dend_28 { pt3dadd( 518.423, 325.087, 26.88, 0.483 ) }
    dend_28 { pt3dadd( 518.919, 324.883, 26.6311, 0.483 ) }
    dend_28 { pt3dadd( 519.694, 324.337, 25.9468, 0.5338 ) }
    dend_28 { pt3dadd( 520.152, 324.184, 25.48, 0.5084 ) }
    dend_28 { pt3dadd( 520.672, 323.904, 25.48, 0.4322 ) }
    dend_28 { pt3dadd( 521.206, 323.765, 25.1689, 0.4322 ) }
    dend_28 { pt3dadd( 521.816, 323.675, 24.92, 0.4322 ) }
    dend_28 { pt3dadd( 522.466, 323.523, 24.92, 0.4322 ) }
    dend_28 { pt3dadd( 523.0, 323.371, 24.64, 0.4068 ) }
    dend_28 { pt3dadd( 523.495, 323.066, 24.64, 0.4068 ) }
    dend_28 { pt3dadd( 524.182, 322.951, 24.64, 0.483 ) }
    dend_28 { pt3dadd( 524.982, 322.951, 24.64, 0.5848 ) }
    dend_28 { pt3dadd( 525.782, 322.951, 24.64, 0.661 ) }
    dend_28 { pt3dadd( 526.469, 322.837, 24.64, 0.6356 ) }
    dend_28 { pt3dadd( 527.156, 322.837, 24.36, 0.5848 ) }
    dend_28 { pt3dadd( 527.956, 322.837, 24.36, 0.5338 ) }
    dend_28 { pt3dadd( 528.758, 322.837, 24.36, 0.5592 ) }
    dend_28 { pt3dadd( 529.354, 322.926, 24.36, 0.7372 ) }
    dend_28 { pt3dadd( 530.206, 323.561, 23.8, 0.6356 ) }
    dend_28 { pt3dadd( 530.74, 323.829, 23.8, 0.5084 ) }
    dend_28 { pt3dadd( 531.311, 323.866, 23.3332, 0.4576 ) }
    dend_28 { pt3dadd( 532.074, 323.866, 23.24, 0.4576 ) }
    dend_28 { pt3dadd( 532.875, 323.866, 23.24, 0.4322 ) }
    dend_28 { pt3dadd( 533.677, 323.866, 23.24, 0.4068 ) }
    dend_28 { pt3dadd( 534.477, 323.866, 23.24, 0.356 ) }
    dend_28 { pt3dadd( 535.164, 323.866, 22.96, 0.3304 ) }
    dend_28 { pt3dadd( 535.964, 323.866, 22.96, 0.305 ) }
    dend_28 { pt3dadd( 536.766, 323.866, 22.96, 0.356 ) }
    dend_28 { pt3dadd( 537.566, 323.866, 22.96, 0.4322 ) }
    dend_28 { pt3dadd( 538.367, 323.866, 22.96, 0.5338 ) }
    dend_28 { pt3dadd( 539.167, 323.866, 22.96, 0.5848 ) }
    dend_28 { pt3dadd( 539.854, 323.981, 22.96, 0.5848 ) }
    dend_28 { pt3dadd( 540.527, 324.095, 22.9289, 0.5592 ) }
    dend_28 { pt3dadd( 541.151, 324.172, 22.68, 0.5338 ) }
    dend_28 { pt3dadd( 541.607, 324.337, 22.2443, 0.5592 ) }
    dend_28 { pt3dadd( 542.256, 324.667, 22.12, 0.5338 ) }
    dend_28 { pt3dadd( 542.828, 324.667, 22.12, 0.2796 ) }
    dend_28 { pt3dadd( 543.63, 324.667, 22.12, 0.2796 ) }
    dend_28 { pt3dadd( 544.354, 324.591, 22.12, 0.3814 ) }
    dend_28 { pt3dadd( 545.117, 324.553, 22.12, 0.5338 ) }
    dend_28 { pt3dadd( 545.917, 324.553, 22.12, 0.6356 ) }
    dend_28 { pt3dadd( 546.604, 324.553, 22.12, 0.6864 ) }
    dend_28 { pt3dadd( 547.38, 325.036, 21.0, 0.6102 ) }
    dend_28 { pt3dadd( 547.785, 325.43, 21.0, 0.5338 ) }
    dend_28 { pt3dadd( 548.294, 325.722, 21.0, 0.483 ) }
    dend_28 { pt3dadd( 548.891, 325.888, 20.9068, 0.4576 ) }
    dend_28 { pt3dadd( 549.311, 326.192, 20.72, 0.4322 ) }
    dend_28 { pt3dadd( 549.578, 326.714, 20.72, 0.3814 ) }
    dend_28 { pt3dadd( 549.578, 326.841, 20.72, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 55/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 391.477, 378.663, 34.3641, 0.6864 ) }
    dend_21 { pt3dadd( 392.066, 378.436, 33.679, 0.7372 ) }
    dend_21 { pt3dadd( 393.041, 378.241, 32.326, 0.661 ) }
    dend_21 { pt3dadd( 394.111, 377.925, 32.3274, 0.4576 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 59/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 436.093, 401.738, 38.6422, 0.4576 ) }
    dend_16 { pt3dadd( 437.241, 402.508, 38.829, 0.6356 ) }
    dend_16 { pt3dadd( 438.277, 402.876, 39.5189, 0.661 ) }
    dend_16 { pt3dadd( 439.317, 403.331, 39.4691, 0.661 ) }
    dend_16 { pt3dadd( 440.397, 403.491, 38.7139, 0.6102 ) }
    dend_16 { pt3dadd( 441.539, 403.503, 38.64, 0.5592 ) }
    dend_16 { pt3dadd( 442.68, 403.585, 38.6408, 0.6102 ) }
    dend_16 { pt3dadd( 443.75, 403.967, 38.6453, 0.7372 ) }
    dend_16 { pt3dadd( 444.809, 404.383, 38.6705, 0.839 ) }
    dend_16 { pt3dadd( 445.921, 404.612, 38.8422, 0.839 ) }
    dend_16 { pt3dadd( 446.973, 404.914, 39.5738, 0.7372 ) }
    dend_16 { pt3dadd( 448.047, 405.253, 39.76, 0.661 ) }
    dend_16 { pt3dadd( 449.066, 405.765, 39.76, 0.6356 ) }
    dend_16 { pt3dadd( 450.053, 406.336, 39.76, 0.6864 ) }
    dend_16 { pt3dadd( 451.119, 406.709, 39.76, 0.7626 ) }
    dend_16 { pt3dadd( 452.244, 406.877, 39.76, 0.788 ) }
    dend_16 { pt3dadd( 453.323, 407.255, 39.76, 0.788 ) }
    dend_16 { pt3dadd( 454.366, 407.717, 39.7597, 0.7372 ) }
    dend_16 { pt3dadd( 455.322, 408.344, 39.7589, 0.6864 ) }
    dend_16 { pt3dadd( 456.388, 408.746, 39.7522, 0.5848 ) }
    dend_16 { pt3dadd( 457.415, 409.245, 39.716, 0.483 ) }
    dend_16 { pt3dadd( 458.406, 409.799, 39.5172, 0.4322 ) }
    dend_16 { pt3dadd( 459.337, 410.355, 39.0323, 0.4068 ) }
    dend_16 { pt3dadd( 460.363, 410.815, 38.6963, 0.4576 ) }
    dend_16 { pt3dadd( 461.293, 411.457, 38.3398, 0.483 ) }
    dend_16 { pt3dadd( 462.35, 411.354, 37.6211, 0.5592 ) }
    dend_16 { pt3dadd( 463.44, 411.026, 37.6998, 0.5848 ) }
    dend_16 { pt3dadd( 464.472, 411.163, 37.6079, 0.5848 ) }
    dend_16 { pt3dadd( 465.449, 410.972, 36.3454, 0.5592 ) }
    dend_16 { pt3dadd( 466.53, 410.897, 35.5376, 0.483 ) }
    dend_16 { pt3dadd( 467.611, 411.222, 35.2814, 0.483 ) }
    dend_16 { pt3dadd( 468.743, 411.389, 35.2898, 0.5338 ) }
    dend_16 { pt3dadd( 469.671, 412.022, 35.3699, 0.6864 ) }
    dend_16 { pt3dadd( 470.432, 412.843, 35.7538, 0.7626 ) }
    dend_16 { pt3dadd( 471.128, 413.714, 36.2849, 0.7118 ) }
    dend_16 { pt3dadd( 472.057, 414.341, 36.1178, 0.5848 ) }
    dend_16 { pt3dadd( 473.031, 414.276, 34.8564, 0.4322 ) }
    dend_16 { pt3dadd( 473.955, 414.794, 34.1919, 0.4068 ) }
    dend_16 { pt3dadd( 474.815, 415.548, 34.1589, 0.3814 ) }
    dend_16 { pt3dadd( 475.806, 416.111, 34.1544, 0.4576 ) }
    dend_16 { pt3dadd( 476.895, 416.452, 34.125, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_16 { pt3dadd( 477.978, 416.795, 33.945, 0.5848 ) }
    dend_16 { pt3dadd( 479.011, 417.116, 33.1845, 0.6356 ) }
    dend_16 { pt3dadd( 479.947, 417.748, 32.8924, 0.6864 ) }
    dend_16 { pt3dadd( 480.486, 418.689, 32.258, 0.6864 ) }
    dend_16 { pt3dadd( 480.79, 419.767, 31.92, 0.6864 ) }
    dend_16 { pt3dadd( 481.428, 420.706, 31.92, 0.6356 ) }
    dend_16 { pt3dadd( 482.44, 421.233, 31.92, 0.5338 ) }
    dend_16 { pt3dadd( 483.547, 421.519, 31.92, 0.4068 ) }
    dend_16 { pt3dadd( 484.46, 422.184, 31.92, 0.4068 ) }
    dend_16 { pt3dadd( 485.129, 423.103, 31.92, 0.5084 ) }
    dend_16 { pt3dadd( 485.69, 424.098, 31.92, 0.6356 ) }
    dend_16 { pt3dadd( 486.414, 424.982, 31.92, 0.6356 ) }
    dend_16 { pt3dadd( 487.218, 425.796, 31.92, 0.5592 ) }
    dend_16 { pt3dadd( 488.01, 426.621, 31.92, 0.4576 ) }
    dend_16 { pt3dadd( 488.734, 427.501, 31.92, 0.3814 ) }
    dend_16 { pt3dadd( 489.412, 428.42, 31.92, 0.3304 ) }
    dend_16 { pt3dadd( 490.197, 429.252, 31.92, 0.3304 ) }
    dend_16 { pt3dadd( 490.603, 429.855, 31.8522, 0.4068 ) }
    dend_16 { pt3dadd( 491.409, 430.648, 31.5535, 0.5084 ) }
    dend_16 { pt3dadd( 492.22, 431.384, 30.8364, 0.5592 ) }
    dend_16 { pt3dadd( 493.154, 432.039, 30.7471, 0.5338 ) }
    dend_16 { pt3dadd( 493.986, 432.818, 30.5656, 0.4576 ) }
    dend_16 { pt3dadd( 494.75, 433.579, 29.794, 0.4322 ) }
    dend_16 { pt3dadd( 495.743, 434.131, 29.682, 0.4322 ) }
    dend_16 { pt3dadd( 496.718, 434.721, 29.6904, 0.4322 ) }
    dend_16 { pt3dadd( 497.498, 435.545, 29.7352, 0.4068 ) }
    dend_16 { pt3dadd( 498.326, 436.28, 30.2162, 0.3814 ) }
    dend_16 { pt3dadd( 498.936, 437.193, 30.784, 0.3814 ) }
    dend_16 { pt3dadd( 499.516, 438.175, 30.7087, 0.4068 ) }
    dend_16 { pt3dadd( 500.281, 438.987, 30.2938, 0.4322 ) }
    dend_16 { pt3dadd( 500.935, 439.867, 29.6803, 0.4576 ) }
    dend_16 { pt3dadd( 501.264, 440.961, 29.6792, 0.4322 ) }
    dend_16 { pt3dadd( 501.585, 442.055, 29.6747, 0.4322 ) }
    dend_16 { pt3dadd( 501.939, 443.129, 29.6467, 0.4576 ) }
    dend_16 { pt3dadd( 502.516, 444.111, 29.5044, 0.5084 ) }
    dend_16 { pt3dadd( 503.085, 445.057, 28.8672, 0.5084 ) }
    dend_16 { pt3dadd( 503.503, 446.081, 28.56, 0.5084 ) }
    dend_16 { pt3dadd( 503.5, 447.222, 28.56, 0.5084 ) }
    dend_16 { pt3dadd( 503.886, 448.296, 28.56, 0.5084 ) }
    dend_16 { pt3dadd( 504.299, 449.359, 28.56, 0.4322 ) }
    dend_16 { pt3dadd( 504.728, 450.413, 28.56, 0.356 ) }
    dend_16 { pt3dadd( 505.04, 451.505, 28.56, 0.3304 ) }
    dend_16 { pt3dadd( 505.702, 452.436, 28.56, 0.356 ) }
    dend_16 { pt3dadd( 506.563, 453.138, 28.56, 0.356 ) }
    dend_16 { pt3dadd( 506.83, 453.329, 28.28, 0.305 ) }
    dend_16 { pt3dadd( 507.378, 453.583, 28.28, 0.2542 ) }
    dend_16 { pt3dadd( 508.05, 453.71, 28.28, 0.2288 ) }
    dend_16 { pt3dadd( 508.852, 453.71, 28.28, 0.2288 ) }
    dend_16 { pt3dadd( 509.652, 453.71, 28.28, 0.2288 ) }
    dend_16 { pt3dadd( 510.453, 453.71, 28.28, 0.2796 ) }
    dend_16 { pt3dadd( 511.177, 453.787, 28.28, 0.356 ) }
    dend_16 { pt3dadd( 511.673, 454.091, 28.28, 0.4576 ) }
    dend_16 { pt3dadd( 511.953, 454.536, 28.0932, 0.4576 ) }
    dend_16 { pt3dadd( 512.271, 454.981, 28.0, 0.4322 ) }
    dend_16 { pt3dadd( 512.513, 455.503, 27.9068, 0.4068 ) }
    dend_16 { pt3dadd( 512.626, 455.998, 27.72, 0.5848 ) }
    dend_16 { pt3dadd( 513.109, 456.431, 27.72, 0.5084 ) }
    dend_16 { pt3dadd( 513.453, 456.888, 27.72, 0.4322 ) }
    dend_16 { pt3dadd( 513.694, 457.346, 27.4711, 0.3814 ) }
    dend_16 { pt3dadd( 513.885, 457.677, 27.0668, 0.4322 ) }
    dend_16 { pt3dadd( 514.305, 457.867, 26.88, 0.4068 ) }
    dend_16 { pt3dadd( 515.143, 458.058, 26.88, 0.4068 ) }
    dend_16 { pt3dadd( 515.944, 458.058, 26.88, 0.4576 ) }
    dend_16 { pt3dadd( 516.732, 458.058, 26.8489, 0.483 ) }
    dend_16 { pt3dadd( 517.318, 458.172, 26.6, 0.4576 ) }
    dend_16 { pt3dadd( 517.901, 458.274, 26.32, 0.356 ) }
    dend_16 { pt3dadd( 518.589, 458.388, 26.32, 0.305 ) }
    dend_16 { pt3dadd( 519.263, 458.515, 26.32, 0.3304 ) }
    dend_16 { pt3dadd( 519.834, 458.744, 26.32, 0.4576 ) }
    dend_16 { pt3dadd( 520.521, 458.858, 26.32, 0.5848 ) }
    dend_16 { pt3dadd( 521.206, 458.973, 26.32, 0.6102 ) }
    dend_16 { pt3dadd( 522.35, 459.316, 26.04, 0.4576 ) }
    dend_16 { pt3dadd( 522.961, 459.507, 26.04, 0.4068 ) }
    dend_16 { pt3dadd( 523.571, 459.697, 26.04, 0.356 ) }
    dend_16 { pt3dadd( 524.182, 459.888, 26.04, 0.305 ) }
    dend_16 { pt3dadd( 524.867, 460.002, 26.04, 0.2542 ) }
    dend_16 { pt3dadd( 525.211, 460.002, 26.04, 0.2542 ) }
    dend_16 { pt3dadd( 525.745, 460.015, 26.3822, 0.4576 ) }
    dend_16 { pt3dadd( 526.698, 460.346, 26.6, 0.7626 ) }
    dend_16 { pt3dadd( 527.956, 460.689, 26.6, 0.5084 ) }
    dend_16 { pt3dadd( 528.758, 460.689, 26.6, 0.4322 ) }
    dend_16 { pt3dadd( 529.558, 460.689, 26.6, 0.483 ) }
    dend_16 { pt3dadd( 530.143, 460.549, 26.4132, 0.5592 ) }
    dend_16 { pt3dadd( 530.703, 460.46, 26.04, 0.6102 ) }
    dend_16 { pt3dadd( 531.503, 460.46, 26.04, 0.5848 ) }
    dend_16 { pt3dadd( 532.19, 460.46, 26.04, 0.4068 ) }
    dend_16 { pt3dadd( 532.532, 460.46, 26.04, 0.305 ) }
    dend_16 { pt3dadd( 532.773, 460.498, 25.3243, 0.356 ) }
    dend_16 { pt3dadd( 533.448, 460.574, 25.2, 0.4322 ) }
    dend_16 { pt3dadd( 533.982, 460.574, 24.5468, 0.4322 ) }
    dend_16 { pt3dadd( 534.477, 460.574, 24.08, 0.4068 ) }
    dend_16 { pt3dadd( 535.011, 460.422, 24.08, 0.4322 ) }
    dend_16 { pt3dadd( 535.85, 460.231, 24.08, 0.4068 ) }
    dend_16 { pt3dadd( 536.651, 460.231, 24.08, 0.3304 ) }
    dend_16 { pt3dadd( 537.337, 460.231, 23.8, 0.2796 ) }
    dend_16 { pt3dadd( 537.667, 460.219, 23.8, 0.2288 ) }
    dend_16 { pt3dadd( 537.871, 460.079, 23.8, 0.2542 ) }
    dend_16 { pt3dadd( 538.1, 459.672, 23.6757, 0.483 ) }
    dend_16 { pt3dadd( 538.595, 459.354, 23.1468, 0.661 ) }
    dend_16 { pt3dadd( 539.854, 459.087, 22.96, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_16 { pt3dadd( 540.464, 459.087, 22.4932, 0.305 ) }
    dend_16 { pt3dadd( 541.074, 458.935, 22.4, 0.2542 ) }
    dend_16 { pt3dadd( 541.328, 458.846, 22.4, 0.2288 ) }
    dend_16 { pt3dadd( 541.544, 458.719, 22.4, 0.2288 ) }
    dend_16 { pt3dadd( 541.709, 458.63, 22.1822, 0.2288 ) }
    dend_16 { pt3dadd( 542.13, 458.63, 21.8089, 0.3814 ) }
    dend_16 { pt3dadd( 542.612, 458.515, 21.3111, 0.5338 ) }
    dend_16 { pt3dadd( 543.401, 458.515, 21.28, 0.6356 ) }
    dend_16 { pt3dadd( 544.086, 458.515, 21.28, 0.6356 ) }
    dend_16 { pt3dadd( 544.544, 458.286, 21.28, 0.4322 ) }
    dend_16 { pt3dadd( 545.154, 457.867, 21.28, 0.661 ) }
    dend_16 { pt3dadd( 546.081, 457.193, 21.28, 0.7626 ) }
    dend_16 { pt3dadd( 546.49, 456.799, 21.28, 0.5592 ) }
    dend_16 { pt3dadd( 547.01, 456.533, 21.3111, 0.356 ) }
    dend_16 { pt3dadd( 547.443, 456.265, 21.56, 0.2542 ) }
    dend_16 { pt3dadd( 547.951, 455.973, 21.56, 0.2288 ) }
    dend_16 { pt3dadd( 548.281, 455.605, 21.8089, 0.2288 ) }
    dend_16 { pt3dadd( 548.586, 455.121, 21.84, 0.2288 ) }
    dend_16 { pt3dadd( 548.98, 454.715, 21.84, 0.2288 ) }
    dend_16 { pt3dadd( 549.375, 454.308, 21.84, 0.2796 ) }
    dend_16 { pt3dadd( 549.769, 453.901, 21.84, 0.356 ) }
    dend_16 { pt3dadd( 550.214, 453.546, 21.84, 0.4576 ) }
    dend_16 { pt3dadd( 550.544, 453.074, 21.84, 0.483 ) }
    dend_16 { pt3dadd( 550.914, 452.643, 21.84, 0.4576 ) }
    dend_16 { pt3dadd( 551.217, 452.147, 21.84, 0.4068 ) }
    dend_16 { pt3dadd( 551.662, 451.791, 21.84, 0.4068 ) }
    dend_16 { pt3dadd( 552.133, 451.46, 21.84, 0.4576 ) }
    dend_16 { pt3dadd( 552.578, 451.104, 21.84, 0.5084 ) }
    dend_16 { pt3dadd( 552.819, 450.659, 21.84, 0.4576 ) }
    dend_16 { pt3dadd( 553.467, 450.622, 21.84, 0.3304 ) }
    dend_16 { pt3dadd( 554.154, 450.278, 21.84, 0.305 ) }
    dend_16 { pt3dadd( 554.776, 450.202, 22.0889, 0.2796 ) }
    dend_16 { pt3dadd( 555.26, 450.012, 22.4, 0.2542 ) }
    dend_16 { pt3dadd( 555.832, 449.783, 22.4, 0.2288 ) }
    dend_16 { pt3dadd( 556.443, 449.592, 22.4, 0.2288 ) }
    dend_16 { pt3dadd( 557.014, 449.363, 22.4, 0.2288 ) }
    dend_16 { pt3dadd( 557.281, 449.287, 22.4, 0.2542 ) }
    dend_16 { pt3dadd( 557.701, 449.02, 22.4, 0.3814 ) }
    dend_16 { pt3dadd( 558.272, 448.677, 22.4, 0.4576 ) }
    dend_16 { pt3dadd( 558.73, 448.677, 22.4, 0.4068 ) }
    dend_16 { pt3dadd( 559.531, 448.677, 22.4, 0.3814 ) }
    dend_16 { pt3dadd( 560.229, 448.677, 22.1511, 0.3814 ) }
    dend_16 { pt3dadd( 560.854, 448.804, 22.0268, 0.356 ) }
    dend_16 { pt3dadd( 561.399, 448.982, 21.84, 0.305 ) }
    dend_16 { pt3dadd( 562.162, 449.02, 21.84, 0.2542 ) }
    dend_16 { pt3dadd( 562.962, 449.02, 21.84, 0.2542 ) }
    dend_16 { pt3dadd( 563.674, 449.109, 21.84, 0.3304 ) }
    dend_16 { pt3dadd( 564.157, 449.427, 21.84, 0.4322 ) }
    dend_16 { pt3dadd( 564.602, 449.783, 21.84, 0.5084 ) }
    dend_16 { pt3dadd( 565.112, 449.96, 21.84, 0.483 ) }
    dend_16 { pt3dadd( 565.341, 450.418, 21.84, 0.5084 ) }
    dend_16 { pt3dadd( 565.785, 450.545, 21.84, 0.5338 ) }
    dend_16 { pt3dadd( 566.599, 450.99, 21.84, 0.4322 ) }
    dend_16 { pt3dadd( 567.12, 451.27, 21.84, 0.4068 ) }
    dend_16 { pt3dadd( 567.501, 451.689, 21.84, 0.356 ) }
    dend_16 { pt3dadd( 567.768, 452.223, 21.84, 0.3304 ) }
    dend_16 { pt3dadd( 568.148, 452.643, 21.84, 0.2796 ) }
    dend_16 { pt3dadd( 568.454, 453.138, 21.84, 0.2542 ) }
    dend_16 { pt3dadd( 568.695, 453.698, 21.84, 0.2542 ) }
    dend_16 { pt3dadd( 568.924, 454.27, 21.84, 0.3304 ) }
    dend_16 { pt3dadd( 569.255, 454.74, 21.84, 0.4322 ) }
    dend_16 { pt3dadd( 569.662, 455.134, 21.84, 0.5338 ) }
    dend_16 { pt3dadd( 569.865, 455.617, 21.56, 0.5848 ) }
    dend_16 { pt3dadd( 570.144, 456.024, 21.28, 0.6356 ) }
    dend_16 { pt3dadd( 570.589, 456.494, 21.0, 0.5338 ) }
    dend_16 { pt3dadd( 570.628, 457.028, 21.0, 0.2796 ) }
    dend_16 { pt3dadd( 570.704, 457.752, 21.0, 0.2288 ) }
    dend_16 { pt3dadd( 571.008, 458.249, 21.0, 0.2288 ) }
    dend_16 { pt3dadd( 571.086, 458.973, 21.0, 0.2796 ) }
    dend_16 { pt3dadd( 571.086, 459.774, 21.0, 0.356 ) }
    dend_16 { pt3dadd( 571.086, 460.574, 21.0, 0.4576 ) }
    dend_16 { pt3dadd( 570.97, 461.261, 21.0, 0.5084 ) }
    dend_16 { pt3dadd( 570.97, 462.062, 21.0, 0.5592 ) }
    dend_16 { pt3dadd( 570.97, 462.748, 20.72, 0.5592 ) }
    dend_16 { pt3dadd( 570.983, 463.536, 20.72, 0.5084 ) }
    dend_16 { pt3dadd( 571.086, 464.235, 20.72, 0.3814 ) }
    dend_16 { pt3dadd( 571.086, 465.036, 20.72, 0.3304 ) }
    dend_16 { pt3dadd( 571.086, 465.837, 20.72, 0.356 ) }
    dend_16 { pt3dadd( 571.086, 466.409, 20.16, 0.4576 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 79/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 436.093, 401.738, 38.6422, 0.4576 ) }
    dend_15 { pt3dadd( 436.928, 401.269, 38.6495, 0.483 ) }
    dend_15 { pt3dadd( 437.755, 400.479, 38.6781, 0.5338 ) }
    dend_15 { pt3dadd( 438.6, 399.71, 38.7951, 0.5592 ) }
    dend_15 { pt3dadd( 439.542, 399.112, 39.2851, 0.5338 ) }
    dend_15 { pt3dadd( 440.498, 398.551, 38.7853, 0.483 ) }
    dend_15 { pt3dadd( 441.362, 397.828, 38.3121, 0.483 ) }
    dend_15 { pt3dadd( 442.217, 397.367, 36.9838, 0.483 ) }
    dend_15 { pt3dadd( 443.274, 397.063, 37.324, 0.483 ) }
    dend_15 { pt3dadd( 444.382, 396.847, 37.592, 0.4576 ) }
    dend_15 { pt3dadd( 445.263, 396.159, 37.9806, 0.5084 ) }
    dend_15 { pt3dadd( 446.078, 395.401, 38.4896, 0.5592 ) }
    dend_15 { pt3dadd( 446.983, 394.761, 38.0058, 0.6102 ) }
    dend_15 { pt3dadd( 447.997, 394.292, 37.49, 0.6356 ) }
    dend_15 { pt3dadd( 449.009, 393.785, 37.3408, 0.6356 ) }
    dend_15 { pt3dadd( 449.862, 393.101, 36.647, 0.6102 ) }
    dend_15 { pt3dadd( 450.671, 392.307, 36.3933, 0.5084 ) }
    dend_15 { pt3dadd( 451.751, 391.972, 36.3569, 0.483 ) }
    dend_15 { pt3dadd( 452.832, 391.64, 36.1402, 0.483 ) }
    dend_15 { pt3dadd( 453.849, 391.302, 35.2285, 0.5084 ) }
    dend_15 { pt3dadd( 454.873, 390.959, 34.4092, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_15 { pt3dadd( 455.806, 390.39, 35.007, 0.3814 ) }
    dend_15 { pt3dadd( 456.887, 390.209, 34.4344, 0.4068 ) }
    dend_15 { pt3dadd( 458.02, 390.16, 34.1323, 0.4576 ) }
    dend_15 { pt3dadd( 459.11, 389.86, 33.98, 0.5084 ) }
    dend_15 { pt3dadd( 460.173, 389.585, 33.2567, 0.5084 ) }
    dend_15 { pt3dadd( 461.078, 388.926, 33.04, 0.5338 ) }
    dend_15 { pt3dadd( 461.745, 388.0, 33.0397, 0.5084 ) }
    dend_15 { pt3dadd( 462.586, 387.228, 33.0386, 0.4576 ) }
    dend_15 { pt3dadd( 463.632, 386.781, 33.0324, 0.4068 ) }
    dend_15 { pt3dadd( 464.585, 386.15, 33.0025, 0.3814 ) }
    dend_15 { pt3dadd( 465.632, 385.9, 32.8283, 0.3814 ) }
    dend_15 { pt3dadd( 466.671, 386.25, 32.0939, 0.4322 ) }
    dend_15 { pt3dadd( 467.792, 386.13, 31.92, 0.5084 ) }
    dend_15 { pt3dadd( 468.932, 386.051, 31.92, 0.5592 ) }
    dend_15 { pt3dadd( 470.035, 385.786, 31.9197, 0.5084 ) }
    dend_15 { pt3dadd( 471.164, 385.642, 31.9178, 0.3814 ) }
    dend_15 { pt3dadd( 472.309, 385.64, 31.9043, 0.2796 ) }
    dend_15 { pt3dadd( 473.451, 385.629, 31.7999, 0.2796 ) }
    dend_15 { pt3dadd( 474.512, 385.503, 30.98, 0.356 ) }
    dend_15 { pt3dadd( 475.517, 384.979, 30.7997, 0.4576 ) }
    dend_15 { pt3dadd( 476.411, 384.266, 30.7983, 0.4576 ) }
    dend_15 { pt3dadd( 477.303, 383.556, 30.7919, 0.4068 ) }
    dend_15 { pt3dadd( 477.951, 382.63, 30.7518, 0.3304 ) }
    dend_15 { pt3dadd( 478.298, 381.55, 30.5206, 0.3304 ) }
    dend_15 { pt3dadd( 478.87, 380.674, 29.7522, 0.356 ) }
    dend_15 { pt3dadd( 479.913, 380.222, 29.6794, 0.3814 ) }
    dend_15 { pt3dadd( 481.047, 380.1, 29.6761, 0.3814 ) }
    dend_15 { pt3dadd( 482.139, 379.81, 29.6556, 0.4322 ) }
    dend_15 { pt3dadd( 483.105, 379.206, 29.5554, 0.4576 ) }
    dend_15 { pt3dadd( 484.093, 378.707, 28.9806, 0.483 ) }
    dend_15 { pt3dadd( 485.093, 378.213, 28.4096, 0.4068 ) }
    dend_15 { pt3dadd( 486.085, 377.734, 27.7726, 0.356 ) }
    dend_15 { pt3dadd( 487.145, 377.356, 27.44, 0.2796 ) }
    dend_15 { pt3dadd( 488.208, 376.974, 27.44, 0.2542 ) }
    dend_15 { pt3dadd( 489.122, 376.287, 27.44, 0.2542 ) }
    dend_15 { pt3dadd( 490.22, 376.029, 27.4392, 0.2796 ) }
    dend_15 { pt3dadd( 491.365, 376.01, 27.4344, 0.3304 ) }
    dend_15 { pt3dadd( 492.494, 375.874, 27.4028, 0.356 ) }
    dend_15 { pt3dadd( 493.591, 375.581, 27.2149, 0.3814 ) }
    dend_15 { pt3dadd( 494.682, 375.499, 26.4393, 0.4068 ) }
    dend_15 { pt3dadd( 495.748, 375.127, 26.3197, 0.4576 ) }
    dend_15 { pt3dadd( 496.74, 374.564, 26.3175, 0.5084 ) }
    dend_15 { pt3dadd( 497.527, 373.744, 26.3046, 0.5084 ) }
    dend_15 { pt3dadd( 498.441, 373.08, 26.2413, 0.4576 ) }
    dend_15 { pt3dadd( 499.516, 373.238, 25.7883, 0.4068 ) }
    dend_15 { pt3dadd( 500.577, 373.582, 25.2896, 0.3814 ) }
    dend_15 { pt3dadd( 501.53, 373.745, 26.32, 0.356 ) }
    dend_15 { pt3dadd( 501.428, 373.643, 25.48, 0.3304 ) }
    dend_15 { pt3dadd( 501.758, 373.63, 25.48, 0.2796 ) }
    dend_15 { pt3dadd( 502.102, 373.63, 25.48, 0.2542 ) }
    dend_15 { pt3dadd( 502.445, 373.63, 25.48, 0.2542 ) }
    dend_15 { pt3dadd( 503.474, 373.63, 25.48, 0.356 ) }
    dend_15 { pt3dadd( 504.136, 373.63, 25.8222, 0.4068 ) }
    dend_15 { pt3dadd( 504.745, 373.63, 26.2889, 0.4576 ) }
    dend_15 { pt3dadd( 505.457, 373.707, 26.32, 0.4068 ) }
    dend_15 { pt3dadd( 506.004, 373.847, 26.6, 0.3304 ) }
    dend_15 { pt3dadd( 506.792, 373.859, 26.6, 0.2542 ) }
    dend_15 { pt3dadd( 507.593, 373.859, 26.6, 0.2288 ) }
    dend_15 { pt3dadd( 508.128, 373.707, 26.88, 0.2288 ) }
    dend_15 { pt3dadd( 508.622, 373.402, 26.88, 0.2288 ) }
    dend_15 { pt3dadd( 509.003, 372.982, 26.88, 0.2288 ) }
    dend_15 { pt3dadd( 509.55, 372.728, 26.88, 0.2288 ) }
    dend_15 { pt3dadd( 510.186, 372.563, 26.88, 0.2288 ) }
    dend_15 { pt3dadd( 510.873, 372.449, 26.88, 0.2288 ) }
    dend_15 { pt3dadd( 511.406, 372.181, 26.88, 0.2542 ) }
    dend_15 { pt3dadd( 511.8, 371.775, 26.88, 0.2796 ) }
    dend_15 { pt3dadd( 512.398, 371.571, 26.88, 0.305 ) }
    dend_15 { pt3dadd( 513.161, 371.533, 26.88, 0.2796 ) }
    dend_15 { pt3dadd( 513.872, 371.444, 26.88, 0.2542 ) }
    dend_15 { pt3dadd( 514.495, 371.266, 26.88, 0.2288 ) }
    dend_15 { pt3dadd( 515.105, 371.076, 26.88, 0.2542 ) }
    dend_15 { pt3dadd( 515.576, 370.745, 26.88, 0.305 ) }
    dend_15 { pt3dadd( 516.021, 370.427, 26.9732, 0.356 ) }
    dend_15 { pt3dadd( 516.479, 370.161, 27.16, 0.3814 ) }
    dend_15 { pt3dadd( 516.784, 369.779, 27.44, 0.356 ) }
    dend_15 { pt3dadd( 517.203, 369.398, 27.44, 0.3304 ) }
    dend_15 { pt3dadd( 517.685, 369.08, 27.44, 0.3304 ) }
    dend_15 { pt3dadd( 518.194, 368.788, 27.44, 0.4068 ) }
    dend_15 { pt3dadd( 518.805, 368.597, 27.44, 0.5084 ) }
    dend_15 { pt3dadd( 519.605, 368.597, 27.44, 0.5848 ) }
    dend_15 { pt3dadd( 520.406, 368.597, 27.44, 0.5592 ) }
    dend_15 { pt3dadd( 521.206, 368.597, 27.44, 0.5084 ) }
    dend_15 { pt3dadd( 521.779, 368.673, 27.0668, 0.4068 ) }
    dend_15 { pt3dadd( 522.453, 368.711, 26.8489, 0.356 ) }
    dend_15 { pt3dadd( 523.151, 368.711, 26.6, 0.2796 ) }
    dend_15 { pt3dadd( 523.953, 368.711, 26.6, 0.305 ) }
    dend_15 { pt3dadd( 524.638, 368.711, 26.32, 0.4068 ) }
    dend_15 { pt3dadd( 525.44, 368.711, 26.32, 0.6102 ) }
    dend_15 { pt3dadd( 526.24, 368.711, 26.32, 0.7626 ) }
    dend_15 { pt3dadd( 526.927, 368.711, 26.32, 0.788 ) }
    dend_15 { pt3dadd( 527.498, 368.368, 26.32, 0.5592 ) }
    dend_15 { pt3dadd( 527.893, 368.075, 26.32, 0.4322 ) }
    dend_15 { pt3dadd( 528.185, 368.025, 26.32, 0.3304 ) }
    dend_15 { pt3dadd( 528.529, 368.025, 26.32, 0.2542 ) }
    dend_15 { pt3dadd( 528.758, 368.025, 26.32, 0.2542 ) }
    dend_15 { pt3dadd( 529.558, 368.025, 26.32, 0.305 ) }
    dend_15 { pt3dadd( 530.358, 368.025, 26.32, 0.4068 ) }
    dend_15 { pt3dadd( 530.906, 367.873, 26.5689, 0.5084 ) }
    dend_15 { pt3dadd( 531.617, 367.796, 26.6, 0.5592 ) }
    dend_15 { pt3dadd( 532.621, 367.428, 27.16, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_15 { pt3dadd( 533.256, 367.262, 27.16, 0.5848 ) }
    dend_15 { pt3dadd( 533.93, 366.983, 27.6268, 0.6864 ) }
    dend_15 { pt3dadd( 534.63, 366.575, 28.0, 0.6102 ) }
    dend_15 { pt3dadd( 535.201, 366.347, 28.0, 0.5592 ) }
    dend_15 { pt3dadd( 535.85, 366.309, 28.28, 0.4576 ) }
    dend_15 { pt3dadd( 536.459, 366.118, 28.28, 0.356 ) }
    dend_15 { pt3dadd( 537.031, 365.889, 28.28, 0.356 ) }
    dend_15 { pt3dadd( 537.604, 365.66, 28.28, 0.4576 ) }
    dend_15 { pt3dadd( 538.138, 365.622, 28.0, 0.6356 ) }
    dend_15 { pt3dadd( 538.404, 365.622, 26.9732, 0.5084 ) }
    dend_15 { pt3dadd( 538.938, 365.622, 26.88, 0.4068 ) }
    dend_15 { pt3dadd( 539.282, 365.622, 26.88, 0.3304 ) }
    dend_15 { pt3dadd( 539.625, 365.635, 26.6311, 0.4068 ) }
    dend_15 { pt3dadd( 539.993, 365.94, 26.6, 0.6102 ) }
    dend_15 { pt3dadd( 540.54, 366.652, 26.32, 0.839 ) }
    dend_15 { pt3dadd( 541.316, 367.364, 26.04, 0.839 ) }
    dend_15 { pt3dadd( 541.977, 367.948, 25.1689, 0.8644 ) }
    dend_15 { pt3dadd( 543.069, 368.355, 24.92, 0.6356 ) }
    dend_15 { pt3dadd( 543.858, 368.368, 24.92, 0.5338 ) }
    dend_15 { pt3dadd( 544.519, 368.508, 24.92, 0.5592 ) }
    dend_15 { pt3dadd( 545.039, 368.788, 24.92, 0.5592 ) }
    dend_15 { pt3dadd( 545.357, 369.271, 24.92, 0.5592 ) }
    dend_15 { pt3dadd( 545.651, 369.677, 25.1689, 0.5338 ) }
    dend_15 { pt3dadd( 546.057, 370.059, 25.2, 0.5338 ) }
    dend_15 { pt3dadd( 546.49, 370.427, 25.2, 0.5338 ) }
    dend_15 { pt3dadd( 546.794, 370.808, 25.48, 0.5338 ) }
    dend_15 { pt3dadd( 547.328, 371.076, 25.48, 0.5592 ) }
    dend_15 { pt3dadd( 547.849, 371.355, 25.48, 0.5338 ) }
    dend_15 { pt3dadd( 548.281, 371.723, 25.48, 0.5338 ) }
    dend_15 { pt3dadd( 548.789, 372.016, 25.48, 0.5084 ) }
    dend_15 { pt3dadd( 549.234, 372.258, 25.2, 0.5848 ) }
    dend_15 { pt3dadd( 550.227, 372.601, 24.5468, 0.661 ) }
    dend_15 { pt3dadd( 550.734, 372.715, 24.1111, 0.6356 ) }
    dend_15 { pt3dadd( 551.294, 372.842, 23.8311, 0.6102 ) }
    dend_15 { pt3dadd( 552.069, 373.541, 23.52, 0.661 ) }
    dend_15 { pt3dadd( 552.667, 373.859, 23.24, 0.5084 ) }
    dend_15 { pt3dadd( 553.162, 373.936, 23.24, 0.305 ) }
    dend_15 { pt3dadd( 553.925, 373.974, 23.24, 0.305 ) }
    dend_15 { pt3dadd( 554.268, 373.974, 23.24, 0.356 ) }
    dend_15 { pt3dadd( 554.612, 373.974, 23.24, 0.4576 ) }
    dend_15 { pt3dadd( 555.146, 374.469, 22.68, 0.3304 ) }
    dend_15 { pt3dadd( 555.68, 374.978, 22.1511, 0.8898 ) }
    dend_15 { pt3dadd( 556.544, 375.359, 21.56, 1.0168 ) }
    dend_15 { pt3dadd( 557.128, 375.804, 21.0, 0.7372 ) }
    dend_15 { pt3dadd( 558.272, 375.804, 20.72, 0.3814 ) }
    dend_15 { pt3dadd( 559.073, 375.804, 20.72, 0.2796 ) }
    dend_15 { pt3dadd( 559.302, 375.804, 20.72, 0.2288 ) }
    dend_15 { pt3dadd( 559.633, 375.918, 20.72, 0.3814 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 48/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 450.755, 418.869, 58.5108, 0.6864 ) }
    dend_13 { pt3dadd( 451.309, 419.276, 58.24, 0.7118 ) }
    dend_13 { pt3dadd( 452.566, 419.619, 58.24, 0.4322 ) }
    dend_13 { pt3dadd( 452.999, 419.873, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 453.126, 420.089, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 453.176, 420.382, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 453.24, 420.547, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 453.621, 420.967, 58.24, 0.2542 ) }
    dend_13 { pt3dadd( 454.104, 421.285, 58.24, 0.2796 ) }
    dend_13 { pt3dadd( 454.589, 421.487, 58.24, 0.2796 ) }
    dend_13 { pt3dadd( 454.804, 421.614, 58.24, 0.2542 ) }
    dend_13 { pt3dadd( 454.892, 421.869, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 455.198, 422.136, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 455.464, 422.213, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 456.1, 422.492, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 456.494, 422.899, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 457.003, 423.191, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 457.562, 423.432, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 458.059, 423.738, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 458.706, 423.89, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 459.279, 424.119, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 459.863, 424.335, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 460.27, 424.729, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 460.803, 424.996, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 461.413, 425.187, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 461.96, 425.441, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 462.596, 425.606, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 463.206, 425.797, 58.24, 0.2542 ) }
    dend_13 { pt3dadd( 463.549, 425.797, 58.24, 0.305 ) }
    dend_13 { pt3dadd( 464.07, 425.961, 58.24, 0.356 ) }
    dend_13 { pt3dadd( 464.133, 426.242, 58.24, 0.305 ) }
    dend_13 { pt3dadd( 464.248, 426.356, 58.24, 0.2542 ) }
    dend_13 { pt3dadd( 464.731, 426.674, 58.24, 0.2796 ) }
    dend_13 { pt3dadd( 465.303, 426.903, 58.24, 0.3304 ) }
    dend_13 { pt3dadd( 465.875, 427.132, 58.24, 0.3814 ) }
    dend_13 { pt3dadd( 466.523, 427.284, 58.24, 0.356 ) }
    dend_13 { pt3dadd( 467.21, 427.398, 58.24, 0.3814 ) }
    dend_13 { pt3dadd( 467.858, 427.551, 58.24, 0.483 ) }
    dend_13 { pt3dadd( 468.366, 427.742, 57.9911, 0.6102 ) }
    dend_13 { pt3dadd( 468.888, 428.008, 57.96, 0.6864 ) }
    dend_13 { pt3dadd( 469.777, 428.721, 57.96, 0.6356 ) }
    dend_13 { pt3dadd( 470.07, 429.229, 57.96, 0.6102 ) }
    dend_13 { pt3dadd( 470.54, 429.559, 57.96, 0.6102 ) }
    dend_13 { pt3dadd( 471.176, 429.953, 57.96, 0.4576 ) }
    dend_13 { pt3dadd( 471.659, 430.385, 57.96, 0.3814 ) }
    dend_13 { pt3dadd( 472.116, 430.729, 57.96, 0.5592 ) }
    dend_13 { pt3dadd( 472.599, 431.504, 57.96, 0.5084 ) }
    dend_13 { pt3dadd( 473.108, 431.796, 57.96, 0.483 ) }
    dend_13 { pt3dadd( 473.566, 432.139, 57.96, 0.5084 ) }
    dend_13 { pt3dadd( 473.909, 432.597, 57.96, 0.483 ) }
    dend_13 { pt3dadd( 474.188, 433.118, 57.96, 0.3814 ) }
    dend_13 { pt3dadd( 474.646, 433.462, 57.96, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_13 { pt3dadd( 475.218, 433.69, 57.96, 0.2542 ) }
    dend_13 { pt3dadd( 475.854, 433.855, 57.96, 0.2796 ) }
    dend_13 { pt3dadd( 476.336, 434.173, 57.96, 0.356 ) }
    dend_13 { pt3dadd( 476.832, 434.479, 57.96, 0.4322 ) }
    dend_13 { pt3dadd( 477.315, 434.797, 57.96, 0.5592 ) }
    dend_13 { pt3dadd( 477.734, 435.178, 57.96, 0.6102 ) }
    dend_13 { pt3dadd( 478.192, 435.521, 57.96, 0.5848 ) }
    dend_13 { pt3dadd( 478.447, 435.953, 57.96, 0.3304 ) }
    dend_13 { pt3dadd( 478.662, 436.08, 57.96, 0.2542 ) }
    dend_13 { pt3dadd( 478.916, 436.169, 57.96, 0.2288 ) }
    dend_13 { pt3dadd( 479.095, 436.22, 57.96, 0.2288 ) }
    dend_13 { pt3dadd( 479.667, 436.449, 57.96, 0.2288 ) }
    dend_13 { pt3dadd( 480.366, 436.55, 57.96, 0.2542 ) }
    dend_13 { pt3dadd( 480.848, 436.868, 57.96, 0.2796 ) }
    dend_13 { pt3dadd( 481.243, 437.275, 57.96, 0.3304 ) }
    dend_13 { pt3dadd( 481.547, 437.657, 58.24, 0.3304 ) }
    dend_13 { pt3dadd( 481.878, 438.127, 58.24, 0.3304 ) }
    dend_13 { pt3dadd( 482.094, 438.711, 58.24, 0.2796 ) }
    dend_13 { pt3dadd( 482.298, 438.851, 58.24, 0.2542 ) }
    dend_13 { pt3dadd( 482.464, 439.029, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 482.539, 439.296, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 482.552, 439.627, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 482.704, 440.047, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 482.921, 440.173, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 483.227, 440.326, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 483.429, 440.465, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 483.556, 440.681, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 483.581, 440.999, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 483.684, 441.126, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 483.798, 441.355, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 483.887, 441.609, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 484.103, 441.736, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 484.293, 441.889, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 484.561, 442.194, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 484.598, 442.499, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 484.865, 443.148, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 485.208, 443.605, 58.24, 0.2542 ) }
    dend_13 { pt3dadd( 485.424, 444.19, 58.24, 0.2796 ) }
    dend_13 { pt3dadd( 485.806, 444.494, 58.24, 0.2796 ) }
    dend_13 { pt3dadd( 485.857, 444.787, 58.24, 0.2542 ) }
    dend_13 { pt3dadd( 485.869, 445.118, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 486.162, 445.397, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 486.379, 445.524, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 487.103, 445.715, 58.24, 0.2288 ) }
    dend_13 { pt3dadd( 487.23, 445.817, 58.24, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 45/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 450.755, 418.869, 58.5108, 0.6864 ) }
    dend_12 { pt3dadd( 451.839, 418.922, 57.7536, 0.483 ) }
    dend_12 { pt3dadd( 452.848, 418.417, 57.6811, 0.483 ) }
    dend_12 { pt3dadd( 453.857, 417.885, 57.6859, 0.483 ) }
    dend_12 { pt3dadd( 454.977, 417.709, 57.72, 0.4322 ) }
    dend_12 { pt3dadd( 456.089, 417.917, 57.93, 0.3304 ) }
    dend_12 { pt3dadd( 457.142, 418.132, 58.8, 0.305 ) }
    dend_12 { pt3dadd( 457.6, 418.132, 58.24, 0.356 ) }
    dend_12 { pt3dadd( 458.286, 418.246, 58.24, 0.4322 ) }
    dend_12 { pt3dadd( 459.037, 418.297, 58.24, 0.4068 ) }
    dend_12 { pt3dadd( 459.621, 418.513, 58.24, 0.3304 ) }
    dend_12 { pt3dadd( 460.333, 418.602, 58.24, 0.2542 ) }
    dend_12 { pt3dadd( 460.803, 418.933, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 461.477, 419.06, 58.24, 0.2542 ) }
    dend_12 { pt3dadd( 462.163, 419.174, 58.24, 0.2796 ) }
    dend_12 { pt3dadd( 462.862, 419.276, 58.24, 0.305 ) }
    dend_12 { pt3dadd( 463.663, 419.276, 58.24, 0.2796 ) }
    dend_12 { pt3dadd( 464.426, 419.238, 58.24, 0.2542 ) }
    dend_12 { pt3dadd( 465.036, 419.047, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 465.507, 418.717, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 466.193, 418.602, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 466.753, 418.361, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 467.337, 418.145, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 467.934, 417.941, 58.24, 0.2542 ) }
    dend_12 { pt3dadd( 468.595, 417.801, 58.24, 0.3304 ) }
    dend_12 { pt3dadd( 469.154, 417.56, 58.24, 0.4068 ) }
    dend_12 { pt3dadd( 469.841, 417.446, 58.24, 0.4322 ) }
    dend_12 { pt3dadd( 470.527, 417.331, 58.24, 0.356 ) }
    dend_12 { pt3dadd( 471.214, 417.217, 58.24, 0.2796 ) }
    dend_12 { pt3dadd( 471.85, 417.052, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 472.472, 416.874, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 473.26, 416.861, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 473.96, 416.759, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 474.76, 416.759, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 475.447, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 476.247, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 477.048, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 477.849, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 478.65, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 479.451, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 480.251, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 481.052, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 481.853, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 482.654, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 483.454, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 484.255, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 485.056, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 485.857, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 486.658, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 487.458, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 488.259, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 489.06, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 489.861, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 490.662, 416.645, 58.24, 0.2288 ) }
    dend_12 { pt3dadd( 491.462, 416.645, 58.24, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_12 { pt3dadd( 492.174, 416.645, 58.0222, 0.2288 ) }
    dend_12 { pt3dadd( 492.835, 416.645, 57.68, 0.2288 ) }
    dend_12 { pt3dadd( 493.522, 416.645, 57.4, 0.2288 ) }
    dend_12 { pt3dadd( 493.992, 416.759, 56.8711, 0.2288 ) }
    dend_12 { pt3dadd( 494.703, 416.836, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 495.466, 416.874, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 496.154, 416.988, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 496.954, 416.988, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 497.754, 416.988, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 498.555, 416.988, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 499.165, 416.797, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 499.75, 416.581, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 500.5, 416.53, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 501.301, 416.53, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 502.102, 416.53, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 502.865, 416.493, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 503.474, 416.302, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 504.148, 416.175, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 504.581, 415.806, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 505.063, 415.488, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 505.267, 415.349, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 505.419, 415.158, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 505.661, 415.056, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 505.991, 415.043, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 506.22, 415.043, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 506.805, 414.827, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 507.478, 414.7, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 508.279, 414.7, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 509.08, 414.7, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 509.423, 414.7, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 509.766, 414.7, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 510.059, 414.65, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 510.224, 414.471, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 510.835, 414.051, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 511.495, 413.912, 56.84, 0.2288 ) }
    dend_12 { pt3dadd( 512.207, 413.899, 56.6532, 0.2288 ) }
    dend_12 { pt3dadd( 512.779, 413.899, 56.0932, 0.2288 ) }
    dend_12 { pt3dadd( 513.44, 413.797, 56.0, 0.2288 ) }
    dend_12 { pt3dadd( 514.115, 413.67, 56.0, 0.2542 ) }
    dend_12 { pt3dadd( 514.878, 413.633, 56.0, 0.3304 ) }
    dend_12 { pt3dadd( 515.602, 413.556, 56.0, 0.4576 ) }
    dend_12 { pt3dadd( 516.402, 413.556, 56.0, 0.5338 ) }
    dend_12 { pt3dadd( 517.203, 413.556, 56.0, 0.5084 ) }
    dend_12 { pt3dadd( 518.003, 413.556, 56.0, 0.3814 ) }
    dend_12 { pt3dadd( 518.805, 413.556, 56.0, 0.2796 ) }
    dend_12 { pt3dadd( 519.605, 413.556, 56.0, 0.2288 ) }
    dend_12 { pt3dadd( 520.406, 413.556, 56.0, 0.2288 ) }
    dend_12 { pt3dadd( 521.206, 413.556, 56.0, 0.2288 ) }
    dend_12 { pt3dadd( 522.008, 413.556, 56.0, 0.2288 ) }
    dend_12 { pt3dadd( 522.592, 413.772, 56.0, 0.2288 ) }
    dend_12 { pt3dadd( 523.164, 413.785, 55.4711, 0.2288 ) }
    dend_12 { pt3dadd( 523.839, 413.899, 55.44, 0.2288 ) }
    dend_12 { pt3dadd( 524.602, 413.899, 55.3468, 0.2796 ) }
    dend_12 { pt3dadd( 525.146, 414.001, 54.9732, 0.3304 ) }
    dend_12 { pt3dadd( 525.656, 414.128, 54.5689, 0.3814 ) }
    dend_12 { pt3dadd( 525.987, 414.166, 53.7911, 0.356 ) }
    dend_12 { pt3dadd( 526.24, 414.242, 53.76, 0.356 ) }
    dend_12 { pt3dadd( 526.583, 414.242, 53.76, 0.3814 ) }
    dend_12 { pt3dadd( 527.613, 414.242, 53.76, 0.3814 ) }
    dend_12 { pt3dadd( 528.414, 414.242, 53.76, 0.4068 ) }
    dend_12 { pt3dadd( 529.214, 414.242, 53.76, 0.4576 ) }
    dend_12 { pt3dadd( 529.786, 414.471, 53.76, 0.4068 ) }
    dend_12 { pt3dadd( 530.485, 414.573, 53.76, 0.3304 ) }
    dend_12 { pt3dadd( 531.274, 414.586, 53.76, 0.2542 ) }
    dend_12 { pt3dadd( 532.074, 414.586, 53.76, 0.2288 ) }
    dend_12 { pt3dadd( 532.875, 414.586, 53.76, 0.2288 ) }
    dend_12 { pt3dadd( 533.677, 414.586, 53.76, 0.2288 ) }
    dend_12 { pt3dadd( 534.477, 414.586, 53.76, 0.2288 ) }
    dend_12 { pt3dadd( 535.279, 414.586, 53.76, 0.2288 ) }
    dend_12 { pt3dadd( 536.078, 414.586, 53.76, 0.2288 ) }
    dend_12 { pt3dadd( 536.88, 414.586, 53.76, 0.2288 ) }
    dend_12 { pt3dadd( 537.68, 414.586, 53.76, 0.2288 ) }
    dend_12 { pt3dadd( 538.482, 414.586, 53.76, 0.2288 ) }
    dend_12 { pt3dadd( 539.282, 414.586, 53.76, 0.2542 ) }
    dend_12 { pt3dadd( 540.082, 414.586, 53.76, 0.305 ) }
    dend_12 { pt3dadd( 540.883, 414.586, 53.76, 0.3814 ) }
    dend_12 { pt3dadd( 541.685, 414.586, 53.76, 0.4576 ) }
    dend_12 { pt3dadd( 542.485, 414.586, 53.76, 0.5084 ) }
    dend_12 { pt3dadd( 543.286, 414.586, 53.76, 0.5084 ) }
    dend_12 { pt3dadd( 544.036, 414.586, 53.8843, 0.4322 ) }
    dend_12 { pt3dadd( 544.659, 414.586, 54.32, 0.3304 ) }
    dend_12 { pt3dadd( 545.459, 414.586, 54.32, 0.2542 ) }
    dend_12 { pt3dadd( 546.26, 414.586, 54.32, 0.2288 ) }
    dend_12 { pt3dadd( 547.061, 414.586, 54.32, 0.2542 ) }
    dend_12 { pt3dadd( 547.862, 414.586, 54.32, 0.3304 ) }
    dend_12 { pt3dadd( 548.548, 414.471, 54.32, 0.4068 ) }
    dend_12 { pt3dadd( 549.349, 414.471, 54.32, 0.4322 ) }
    dend_12 { pt3dadd( 550.151, 414.471, 54.32, 0.4068 ) }
    dend_12 { pt3dadd( 550.951, 414.471, 54.32, 0.4576 ) }
    dend_12 { pt3dadd( 551.751, 414.471, 54.32, 0.5338 ) }
    dend_12 { pt3dadd( 552.552, 414.471, 54.32, 0.5592 ) }
    dend_12 { pt3dadd( 553.238, 414.586, 54.32, 0.4322 ) }
    dend_12 { pt3dadd( 554.039, 414.586, 54.32, 0.305 ) }
    dend_12 { pt3dadd( 554.841, 414.586, 54.32, 0.2288 ) }
    dend_12 { pt3dadd( 555.641, 414.586, 54.32, 0.2288 ) }
    dend_12 { pt3dadd( 556.443, 414.586, 54.32, 0.2288 ) }
    dend_12 { pt3dadd( 557.242, 414.586, 54.32, 0.2288 ) }
    dend_12 { pt3dadd( 557.471, 414.586, 54.04, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 98/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 374.779, 349.523, 28.8854, 0.4576 ) }
    dend_7 { pt3dadd( 374.06, 348.915, 28.5569, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_7 { pt3dadd( 373.691, 347.838, 28.5093, 0.5084 ) }
    dend_7 { pt3dadd( 373.402, 346.738, 28.2699, 0.4576 ) }
    dend_7 { pt3dadd( 373.557, 345.685, 27.4532, 0.4576 ) }
    dend_7 { pt3dadd( 373.878, 344.623, 26.9514, 0.4068 ) }
    dend_7 { pt3dadd( 373.357, 343.683, 27.1477, 0.4322 ) }
    dend_7 { pt3dadd( 372.684, 342.776, 27.3101, 0.4068 ) }
    dend_7 { pt3dadd( 372.134, 341.852, 26.53, 0.4322 ) }
    dend_7 { pt3dadd( 372.25, 340.841, 25.8602, 0.4576 ) }
    dend_7 { pt3dadd( 372.987, 340.07, 24.915, 0.5592 ) }
    dend_7 { pt3dadd( 373.708, 339.368, 23.6222, 0.6356 ) }
    dend_7 { pt3dadd( 374.536, 338.632, 23.1952, 0.6864 ) }
    dend_7 { pt3dadd( 375.408, 338.067, 23.7815, 0.6864 ) }
    dend_7 { pt3dadd( 376.225, 337.36, 23.1342, 0.661 ) }
    dend_7 { pt3dadd( 376.593, 336.386, 22.0528, 0.6356 ) }
    dend_7 { pt3dadd( 376.718, 335.273, 21.8142, 0.6102 ) }
    dend_7 { pt3dadd( 375.995, 334.454, 21.5846, 0.661 ) }
    dend_7 { pt3dadd( 376.107, 333.963, 19.987, 0.7118 ) }
    dend_7 { pt3dadd( 377.224, 333.906, 19.5849, 0.7118 ) }
    dend_7 { pt3dadd( 378.344, 333.724, 19.4905, 0.6102 ) }
    dend_7 { pt3dadd( 379.33, 333.273, 18.7796, 0.5084 ) }
    dend_7 { pt3dadd( 379.508, 332.3, 17.5977, 0.5084 ) }
    dend_7 { pt3dadd( 379.154, 331.241, 17.3267, 0.5592 ) }
    dend_7 { pt3dadd( 378.48, 330.317, 17.2194, 0.5848 ) }
    dend_7 { pt3dadd( 378.368, 329.235, 17.0237, 0.5338 ) }
    dend_7 { pt3dadd( 378.658, 328.166, 16.7023, 0.483 ) }
    dend_7 { pt3dadd( 378.736, 327.128, 15.5529, 0.4576 ) }
    dend_7 { pt3dadd( 379.115, 326.098, 14.9436, 0.4576 ) }
    dend_7 { pt3dadd( 379.235, 325.135, 14.1078, 0.483 ) }
    dend_7 { pt3dadd( 378.865, 324.059, 14.0, 0.483 ) }
    dend_7 { pt3dadd( 378.414, 323.009, 14.0, 0.4576 ) }
    dend_7 { pt3dadd( 378.664, 322.036, 14.0, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 31/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 374.779, 349.523, 28.8854, 0.4576 ) }
    dend_6 { pt3dadd( 374.935, 348.941, 29.7298, 0.4322 ) }
    dend_6 { pt3dadd( 375.385, 348.083, 30.7854, 0.5084 ) }
    dend_6 { pt3dadd( 375.246, 346.963, 30.6978, 0.5592 ) }
    dend_6 { pt3dadd( 374.97, 345.892, 30.1431, 0.661 ) }
    dend_6 { pt3dadd( 374.977, 344.798, 29.6988, 0.7118 ) }
    dend_6 { pt3dadd( 375.365, 343.73, 29.7814, 0.7626 ) }
    dend_6 { pt3dadd( 375.462, 342.618, 29.9043, 0.7118 ) }
    dend_6 { pt3dadd( 375.469, 341.502, 29.302, 0.6356 ) }
    dend_6 { pt3dadd( 375.513, 340.394, 29.2466, 0.5084 ) }
    dend_6 { pt3dadd( 375.776, 339.31, 29.7153, 0.4068 ) }
    dend_6 { pt3dadd( 375.874, 338.18, 29.9015, 0.3304 ) }
    dend_6 { pt3dadd( 375.638, 337.115, 30.6102, 0.356 ) }
    dend_6 { pt3dadd( 375.583, 336.007, 30.2747, 0.4576 ) }
    dend_6 { pt3dadd( 376.047, 335.025, 29.5081, 0.6102 ) }
    dend_6 { pt3dadd( 376.369, 333.995, 28.7218, 0.7372 ) }
    dend_6 { pt3dadd( 376.378, 332.856, 28.5636, 0.8136 ) }
    dend_6 { pt3dadd( 376.382, 331.712, 28.5841, 0.8136 ) }
    dend_6 { pt3dadd( 376.413, 330.57, 28.7249, 0.788 ) }
    dend_6 { pt3dadd( 376.616, 329.491, 29.3465, 0.7626 ) }
    dend_6 { pt3dadd( 376.835, 328.417, 28.8803, 0.7626 ) }
    dend_6 { pt3dadd( 376.835, 327.322, 28.0885, 0.7372 ) }
    dend_6 { pt3dadd( 376.835, 326.214, 27.4571, 0.6864 ) }
    dend_6 { pt3dadd( 376.844, 325.07, 27.4481, 0.6356 ) }
    dend_6 { pt3dadd( 376.908, 323.928, 27.4929, 0.6102 ) }
    dend_6 { pt3dadd( 377.345, 322.926, 27.9174, 0.6102 ) }
    dend_6 { pt3dadd( 378.138, 322.139, 28.2839, 0.6102 ) }
    dend_6 { pt3dadd( 378.844, 321.327, 27.547, 0.661 ) }
    dend_6 { pt3dadd( 379.148, 320.24, 27.6945, 0.7118 ) }
    dend_6 { pt3dadd( 379.324, 319.165, 28.432, 0.7626 ) }
    dend_6 { pt3dadd( 379.809, 318.135, 28.3517, 0.7118 ) }
    dend_6 { pt3dadd( 380.279, 317.143, 27.6511, 0.6356 ) }
    dend_6 { pt3dadd( 380.617, 316.061, 27.4515, 0.5592 ) }
    dend_6 { pt3dadd( 380.926, 314.966, 27.5078, 0.5338 ) }
    dend_6 { pt3dadd( 380.952, 313.86, 27.4288, 0.5848 ) }
    dend_6 { pt3dadd( 380.952, 312.861, 27.4378, 0.661 ) }
    dend_6 { pt3dadd( 380.954, 311.717, 27.426, 0.7118 ) }
    dend_6 { pt3dadd( 380.968, 310.573, 27.3361, 0.661 ) }
    dend_6 { pt3dadd( 381.05, 309.47, 26.7417, 0.5848 ) }
    dend_6 { pt3dadd( 381.507, 308.46, 26.336, 0.5592 ) }
    dend_6 { pt3dadd( 382.257, 307.596, 26.3858, 0.6356 ) }
    dend_6 { pt3dadd( 382.828, 306.63, 26.6672, 0.6864 ) }
    dend_6 { pt3dadd( 383.246, 305.615, 27.3725, 0.7372 ) }
    dend_6 { pt3dadd( 383.849, 304.65, 27.4859, 0.788 ) }
    dend_6 { pt3dadd( 384.442, 303.678, 27.6662, 0.839 ) }
    dend_6 { pt3dadd( 385.012, 302.74, 28.3738, 0.839 ) }
    dend_6 { pt3dadd( 385.784, 301.909, 28.667, 0.7118 ) }
    dend_6 { pt3dadd( 386.638, 301.182, 29.0657, 0.6356 ) }
    dend_6 { pt3dadd( 387.427, 300.415, 29.6461, 0.5848 ) }
    dend_6 { pt3dadd( 388.097, 299.489, 29.6859, 0.6356 ) }
    dend_6 { pt3dadd( 388.695, 298.526, 29.71, 0.661 ) }
    dend_6 { pt3dadd( 388.97, 297.426, 29.8827, 0.6864 ) }
    dend_6 { pt3dadd( 389.556, 296.517, 30.6706, 0.6864 ) }
    dend_6 { pt3dadd( 390.526, 296.068, 31.4885, 0.6864 ) }
    dend_6 { pt3dadd( 391.587, 295.697, 31.9256, 0.6864 ) }
    dend_6 { pt3dadd( 392.624, 295.269, 31.9581, 0.6864 ) }
    dend_6 { pt3dadd( 393.171, 294.279, 32.1538, 0.7118 ) }
    dend_6 { pt3dadd( 393.367, 293.254, 33.1974, 0.7372 ) }
    dend_6 { pt3dadd( 393.645, 292.242, 34.1065, 0.7626 ) }
    dend_6 { pt3dadd( 394.249, 291.275, 34.1354, 0.7372 ) }
    dend_6 { pt3dadd( 394.76, 290.258, 34.0242, 0.6864 ) }
    dend_6 { pt3dadd( 395.253, 289.27, 33.4121, 0.6102 ) }
    dend_6 { pt3dadd( 395.745, 288.256, 33.04, 0.5592 ) }
    dend_6 { pt3dadd( 396.12, 287.183, 33.04, 0.5084 ) }
    dend_6 { pt3dadd( 396.413, 286.082, 33.04, 0.5084 ) }
    dend_6 { pt3dadd( 396.235, 284.967, 33.04, 0.483 ) }
    dend_6 { pt3dadd( 396.509, 283.898, 33.04, 0.5338 ) }
    dend_6 { pt3dadd( 397.268, 283.045, 33.0397, 0.5848 ) }
    dend_6 { pt3dadd( 398.039, 282.2, 33.0389, 0.6356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_6 { pt3dadd( 398.666, 281.248, 33.035, 0.6356 ) }
    dend_6 { pt3dadd( 399.284, 280.288, 33.0151, 0.5592 ) }
    dend_6 { pt3dadd( 399.793, 279.269, 32.9036, 0.5338 ) }
    dend_6 { pt3dadd( 400.27, 278.275, 32.2876, 0.5084 ) }
    dend_6 { pt3dadd( 400.645, 277.215, 31.941, 0.5848 ) }
    dend_6 { pt3dadd( 400.918, 276.116, 32.0527, 0.661 ) }
    dend_6 { pt3dadd( 401.227, 275.06, 32.7099, 0.6864 ) }
    dend_6 { pt3dadd( 401.522, 273.98, 33.2013, 0.6356 ) }
    dend_6 { pt3dadd( 401.559, 272.867, 33.7568, 0.5592 ) }
    dend_6 { pt3dadd( 401.645, 271.762, 33.1094, 0.5592 ) }
    dend_6 { pt3dadd( 402.053, 270.705, 32.9888, 0.5592 ) }
    dend_6 { pt3dadd( 402.637, 269.733, 32.7468, 0.5592 ) }
    dend_6 { pt3dadd( 403.461, 269.008, 32.0454, 0.5592 ) }
    dend_6 { pt3dadd( 404.18, 268.13, 32.0995, 0.6102 ) }
    dend_6 { pt3dadd( 404.607, 267.118, 32.781, 0.6356 ) }
    dend_6 { pt3dadd( 405.224, 266.168, 33.04, 0.6102 ) }
    dend_6 { pt3dadd( 405.837, 265.202, 33.0403, 0.5338 ) }
    dend_6 { pt3dadd( 406.234, 264.139, 33.0414, 0.5084 ) }
    dend_6 { pt3dadd( 406.548, 263.046, 33.049, 0.5084 ) }
    dend_6 { pt3dadd( 406.579, 261.903, 33.0982, 0.5338 ) }
    dend_6 { pt3dadd( 406.587, 260.776, 33.4771, 0.5084 ) }
    dend_6 { pt3dadd( 406.636, 259.672, 34.1345, 0.483 ) }
    dend_6 { pt3dadd( 406.943, 258.583, 34.1673, 0.4576 ) }
    dend_6 { pt3dadd( 407.368, 257.526, 34.2056, 0.4322 ) }
    dend_6 { pt3dadd( 408.073, 256.632, 34.3818, 0.4322 ) }
    dend_6 { pt3dadd( 408.49, 255.669, 35.2145, 0.4068 ) }
    dend_6 { pt3dadd( 408.806, 254.577, 35.28, 0.4322 ) }
    dend_6 { pt3dadd( 408.866, 253.437, 35.28, 0.4322 ) }
    dend_6 { pt3dadd( 408.865, 252.293, 35.28, 0.4576 ) }
    dend_6 { pt3dadd( 408.858, 251.149, 35.28, 0.4322 ) }
    dend_6 { pt3dadd( 408.987, 250.059, 35.2814, 0.3814 ) }
    dend_6 { pt3dadd( 409.965, 249.545, 35.2895, 0.356 ) }
    dend_6 { pt3dadd( 410.876, 248.867, 35.3251, 0.4322 ) }
    dend_6 { pt3dadd( 411.68, 248.056, 35.4726, 0.5084 ) }
    dend_6 { pt3dadd( 412.418, 247.263, 36.2653, 0.5592 ) }
    dend_6 { pt3dadd( 412.995, 246.323, 36.7805, 0.5084 ) }
    dend_6 { pt3dadd( 413.383, 245.306, 37.1708, 0.5338 ) }
    dend_6 { pt3dadd( 413.871, 244.317, 36.4986, 0.5848 ) }
    dend_6 { pt3dadd( 414.375, 243.297, 36.512, 0.661 ) }
    dend_6 { pt3dadd( 414.887, 242.344, 37.2148, 0.6864 ) }
    dend_6 { pt3dadd( 415.37, 241.322, 37.3766, 0.6356 ) }
    dend_6 { pt3dadd( 416.012, 240.454, 36.6052, 0.5848 ) }
    dend_6 { pt3dadd( 416.671, 239.538, 36.4006, 0.5338 ) }
    dend_6 { pt3dadd( 416.497, 238.474, 36.4048, 0.5592 ) }
    dend_6 { pt3dadd( 416.585, 237.398, 36.4442, 0.5592 ) }
    dend_6 { pt3dadd( 416.978, 236.332, 36.6458, 0.5848 ) }
    dend_6 { pt3dadd( 417.503, 235.37, 37.3814, 0.6102 ) }
    dend_6 { pt3dadd( 418.094, 234.401, 37.6023, 0.661 ) }
    dend_6 { pt3dadd( 418.529, 233.369, 37.9411, 0.661 ) }
    dend_6 { pt3dadd( 418.943, 232.313, 37.6818, 0.6356 ) }
    dend_6 { pt3dadd( 419.422, 231.311, 38.1441, 0.6356 ) }
    dend_6 { pt3dadd( 419.862, 230.288, 38.7016, 0.6356 ) }
    dend_6 { pt3dadd( 420.225, 229.223, 39.0603, 0.6102 ) }
    dend_6 { pt3dadd( 420.594, 228.184, 39.732, 0.5592 ) }
    dend_6 { pt3dadd( 421.134, 227.182, 39.8826, 0.5338 ) }
    dend_6 { pt3dadd( 421.732, 226.245, 40.4029, 0.5592 ) }
    dend_6 { pt3dadd( 422.24, 225.246, 40.8736, 0.5592 ) }
    dend_6 { pt3dadd( 422.784, 224.242, 40.8436, 0.5848 ) }
    dend_6 { pt3dadd( 423.405, 223.286, 40.6902, 0.5848 ) }
    dend_6 { pt3dadd( 423.891, 222.332, 39.8779, 0.5848 ) }
    dend_6 { pt3dadd( 424.485, 221.362, 39.76, 0.5084 ) }
    dend_6 { pt3dadd( 425.241, 220.524, 39.7603, 0.3814 ) }
    dend_6 { pt3dadd( 425.888, 219.608, 39.7611, 0.3304 ) }
    dend_6 { pt3dadd( 426.431, 218.61, 39.7667, 0.356 ) }
    dend_6 { pt3dadd( 427.072, 217.667, 39.7936, 0.483 ) }
    dend_6 { pt3dadd( 427.831, 216.813, 39.9207, 0.5084 ) }
    dend_6 { pt3dadd( 428.542, 216.102, 40.88, 0.483 ) }
    dend_6 { pt3dadd( 428.848, 215.606, 40.32, 0.305 ) }
    dend_6 { pt3dadd( 429.141, 215.326, 40.32, 0.356 ) }
    dend_6 { pt3dadd( 429.534, 214.92, 40.32, 0.305 ) }
    dend_6 { pt3dadd( 429.839, 214.423, 40.32, 0.2542 ) }
    dend_6 { pt3dadd( 429.928, 213.712, 40.32, 0.2542 ) }
    dend_6 { pt3dadd( 430.246, 213.229, 40.32, 0.356 ) }
    dend_6 { pt3dadd( 430.525, 212.707, 40.32, 0.483 ) }
    dend_6 { pt3dadd( 430.97, 212.352, 40.32, 0.6102 ) }
    dend_6 { pt3dadd( 431.593, 211.602, 39.76, 0.6356 ) }
    dend_6 { pt3dadd( 432.165, 210.814, 39.1689, 0.5592 ) }
    dend_6 { pt3dadd( 432.585, 210.534, 38.92, 0.483 ) }
    dend_6 { pt3dadd( 432.979, 210.128, 38.92, 0.356 ) }
    dend_6 { pt3dadd( 433.449, 209.797, 38.92, 0.2796 ) }
    dend_6 { pt3dadd( 433.919, 209.466, 38.92, 0.2542 ) }
    dend_6 { pt3dadd( 434.352, 209.098, 38.92, 0.2796 ) }
    dend_6 { pt3dadd( 434.72, 208.666, 38.92, 0.3304 ) }
    dend_6 { pt3dadd( 435.038, 208.183, 38.92, 0.356 ) }
    dend_6 { pt3dadd( 435.432, 207.776, 38.92, 0.3814 ) }
    dend_6 { pt3dadd( 435.865, 207.407, 38.92, 0.356 ) }
    dend_6 { pt3dadd( 436.232, 206.975, 38.92, 0.305 ) }
    dend_6 { pt3dadd( 436.628, 206.569, 38.92, 0.2542 ) }
    dend_6 { pt3dadd( 436.919, 206.06, 38.92, 0.2288 ) }
    dend_6 { pt3dadd( 437.237, 205.577, 38.92, 0.2288 ) }
    dend_6 { pt3dadd( 437.478, 205.094, 38.7332, 0.305 ) }
    dend_6 { pt3dadd( 437.835, 204.687, 38.64, 0.4576 ) }
    dend_6 { pt3dadd( 438.266, 203.975, 38.64, 0.788 ) }
    dend_6 { pt3dadd( 438.699, 203.378, 38.64, 0.7118 ) }
    dend_6 { pt3dadd( 439.092, 202.742, 38.64, 0.6864 ) }
    dend_6 { pt3dadd( 439.716, 201.764, 38.64, 0.7626 ) }
    dend_6 { pt3dadd( 440.161, 200.607, 38.64, 0.5848 ) }
    dend_6 { pt3dadd( 440.465, 200.111, 38.64, 0.4576 ) }
    dend_6 { pt3dadd( 440.758, 199.603, 38.64, 0.356 ) }
    dend_6 { pt3dadd( 441.012, 199.056, 38.64, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_6 { pt3dadd( 441.012, 198.255, 38.64, 0.2796 ) }
    dend_6 { pt3dadd( 441.012, 197.454, 38.64, 0.305 ) }
    dend_6 { pt3dadd( 441.012, 196.654, 38.64, 0.3304 ) }
    dend_6 { pt3dadd( 441.012, 195.853, 38.64, 0.4322 ) }
    dend_6 { pt3dadd( 441.012, 195.052, 38.64, 0.483 ) }
    dend_6 { pt3dadd( 441.012, 194.251, 38.64, 0.5338 ) }
    dend_6 { pt3dadd( 441.012, 193.45, 38.64, 0.483 ) }
    dend_6 { pt3dadd( 441.012, 192.65, 38.64, 0.4322 ) }
    dend_6 { pt3dadd( 441.012, 191.849, 38.64, 0.4322 ) }
    dend_6 { pt3dadd( 441.012, 191.048, 38.64, 0.5592 ) }
    dend_6 { pt3dadd( 441.203, 190.438, 38.64, 0.6356 ) }
    dend_6 { pt3dadd( 441.47, 189.904, 38.64, 0.6356 ) }
    dend_6 { pt3dadd( 441.661, 189.294, 38.64, 0.5084 ) }
    dend_6 { pt3dadd( 441.698, 188.531, 38.64, 0.4322 ) }
    dend_6 { pt3dadd( 441.813, 187.845, 38.64, 0.356 ) }
    dend_6 { pt3dadd( 441.813, 187.044, 38.64, 0.305 ) }
    dend_6 { pt3dadd( 442.042, 186.472, 38.64, 0.2542 ) }
    dend_6 { pt3dadd( 442.156, 185.786, 38.64, 0.2288 ) }
    dend_6 { pt3dadd( 442.335, 185.163, 38.64, 0.2288 ) }
    dend_6 { pt3dadd( 442.423, 184.679, 38.08, 0.2288 ) }
    dend_6 { pt3dadd( 442.499, 183.955, 38.08, 0.2288 ) }
    dend_6 { pt3dadd( 442.741, 183.396, 38.08, 0.2288 ) }
    dend_6 { pt3dadd( 442.957, 182.811, 38.08, 0.2542 ) }
    dend_6 { pt3dadd( 443.109, 182.163, 38.08, 0.2796 ) }
    dend_6 { pt3dadd( 443.186, 181.438, 38.08, 0.305 ) }
    dend_6 { pt3dadd( 443.186, 181.095, 38.08, 0.2796 ) }
    dend_6 { pt3dadd( 443.198, 180.765, 38.08, 0.2542 ) }
    dend_6 { pt3dadd( 443.287, 180.523, 38.1111, 0.2288 ) }
    dend_6 { pt3dadd( 443.339, 180.396, 38.5157, 0.2288 ) }
    dend_6 { pt3dadd( 443.72, 179.799, 38.64, 0.2542 ) }
    dend_6 { pt3dadd( 443.872, 179.15, 38.64, 0.3304 ) }
    dend_6 { pt3dadd( 443.872, 178.35, 38.64, 0.4576 ) }
    dend_6 { pt3dadd( 443.91, 177.778, 39.1068, 0.6102 ) }
    dend_6 { pt3dadd( 444.102, 177.206, 39.2, 0.6864 ) }
    dend_6 { pt3dadd( 444.367, 176.099, 39.76, 0.5084 ) }
    dend_6 { pt3dadd( 444.444, 175.375, 39.76, 0.4322 ) }
    dend_6 { pt3dadd( 444.444, 174.574, 39.76, 0.4068 ) }
    dend_6 { pt3dadd( 444.444, 173.774, 39.76, 0.4576 ) }
    dend_6 { pt3dadd( 444.546, 173.075, 39.76, 0.3814 ) }
    dend_6 { pt3dadd( 444.673, 172.401, 39.76, 0.305 ) }
    dend_6 { pt3dadd( 444.787, 171.752, 39.8532, 0.2542 ) }
    dend_6 { pt3dadd( 444.902, 171.257, 40.32, 0.305 ) }
    dend_6 { pt3dadd( 445.016, 170.57, 40.32, 0.356 ) }
    dend_6 { pt3dadd( 445.283, 170.036, 40.32, 0.356 ) }
    dend_6 { pt3dadd( 445.55, 169.503, 40.32, 0.356 ) }
    dend_6 { pt3dadd( 445.817, 168.969, 40.32, 0.356 ) }
    dend_6 { pt3dadd( 446.274, 168.626, 40.32, 0.3814 ) }
    dend_6 { pt3dadd( 446.745, 168.295, 40.32, 0.3304 ) }
    dend_6 { pt3dadd( 447.418, 168.168, 40.32, 0.2796 ) }
    dend_6 { pt3dadd( 447.647, 168.168, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 447.953, 168.13, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 448.092, 167.927, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 448.105, 167.596, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 448.105, 167.253, 40.32, 0.3304 ) }
    dend_6 { pt3dadd( 448.219, 166.566, 40.32, 0.356 ) }
    dend_6 { pt3dadd( 448.335, 165.88, 40.32, 0.4322 ) }
    dend_6 { pt3dadd( 448.525, 165.27, 40.32, 0.483 ) }
    dend_6 { pt3dadd( 448.766, 164.711, 40.32, 0.5084 ) }
    dend_6 { pt3dadd( 449.16, 164.304, 40.32, 0.4322 ) }
    dend_6 { pt3dadd( 449.516, 163.859, 40.32, 0.3304 ) }
    dend_6 { pt3dadd( 449.897, 163.44, 40.32, 0.2542 ) }
    dend_6 { pt3dadd( 450.241, 162.982, 40.32, 0.305 ) }
    dend_6 { pt3dadd( 450.596, 162.537, 40.32, 0.4322 ) }
    dend_6 { pt3dadd( 450.927, 162.067, 40.32, 0.5592 ) }
    dend_6 { pt3dadd( 451.194, 161.533, 40.32, 0.5338 ) }
    dend_6 { pt3dadd( 451.576, 161.113, 40.32, 0.4068 ) }
    dend_6 { pt3dadd( 452.134, 160.872, 40.32, 0.2796 ) }
    dend_6 { pt3dadd( 452.617, 160.553, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 453.126, 160.262, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 453.444, 159.779, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 453.71, 159.245, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 453.901, 158.635, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 454.245, 158.177, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 454.576, 157.707, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 454.931, 157.262, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 455.223, 156.753, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 455.591, 156.321, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 456.113, 156.042, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 456.546, 155.673, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 457.003, 155.33, 40.32, 0.2288 ) }
    dend_6 { pt3dadd( 457.409, 154.935, 40.32, 0.2542 ) }
    dend_6 { pt3dadd( 457.931, 154.656, 40.32, 0.2796 ) }
    dend_6 { pt3dadd( 458.516, 154.44, 40.32, 0.305 ) }
    dend_6 { pt3dadd( 458.896, 154.351, 40.8489, 0.3304 ) }
    dend_6 { pt3dadd( 459.062, 153.995, 41.2532, 0.356 ) }
    dend_6 { pt3dadd( 459.583, 153.563, 41.44, 0.2542 ) }
    dend_6 { pt3dadd( 460.104, 153.283, 41.44, 0.2542 ) }
    dend_6 { pt3dadd( 460.562, 152.94, 41.44, 0.2796 ) }
    dend_6 { pt3dadd( 461.109, 152.686, 41.44, 0.3304 ) }
    dend_6 { pt3dadd( 461.617, 152.393, 41.44, 0.356 ) }
    dend_6 { pt3dadd( 462.405, 152.381, 41.44, 0.4322 ) }
    dend_6 { pt3dadd( 463.206, 152.381, 41.44, 0.483 ) }
    dend_6 { pt3dadd( 464.007, 152.381, 41.44, 0.5592 ) }
    dend_6 { pt3dadd( 464.807, 152.381, 41.44, 0.5848 ) }
    dend_6 { pt3dadd( 465.43, 152.381, 41.0043, 0.5848 ) }
    dend_6 { pt3dadd( 466.066, 152.495, 40.88, 0.5084 ) }
    dend_6 { pt3dadd( 466.753, 152.495, 40.88, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_21 (entry count 97/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 394.111, 377.925, 32.3274, 0.4576 ) }
    dend_27 { pt3dadd( 394.523, 377.202, 31.9063, 0.4068 ) }
    dend_27 { pt3dadd( 393.901, 376.248, 31.7918, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_27 { pt3dadd( 393.221, 375.406, 31.0789, 0.5338 ) }
    dend_27 { pt3dadd( 392.783, 374.476, 29.948, 0.5848 ) }
    dend_27 { pt3dadd( 392.251, 373.812, 28.2503, 0.6356 ) }
    dend_27 { pt3dadd( 391.272, 373.394, 27.3193, 0.6102 ) }
    dend_27 { pt3dadd( 390.264, 373.283, 26.1906, 0.5338 ) }
    dend_27 { pt3dadd( 389.816, 373.254, 23.6396, 0.3814 ) }
    dend_27 { pt3dadd( 390.328, 372.915, 21.9036, 0.3304 ) }
    dend_27 { pt3dadd( 391.106, 372.094, 21.9828, 0.3814 ) }
    dend_27 { pt3dadd( 392.164, 371.817, 21.7176, 0.5338 ) }
    dend_27 { pt3dadd( 392.613, 370.978, 20.6816, 0.6356 ) }
    dend_27 { pt3dadd( 393.304, 370.073, 20.5226, 0.6864 ) }
    dend_27 { pt3dadd( 394.018, 369.282, 19.6434, 0.6864 ) }
    dend_27 { pt3dadd( 394.595, 368.394, 18.6637, 0.6356 ) }
    dend_27 { pt3dadd( 395.3, 367.503, 18.3658, 0.6102 ) }
    dend_27 { pt3dadd( 395.792, 366.517, 17.8055, 0.5592 ) }
    dend_27 { pt3dadd( 396.542, 365.7, 17.3267, 0.5848 ) }
    dend_27 { pt3dadd( 397.645, 365.438, 17.1422, 0.5084 ) }
    dend_27 { pt3dadd( 398.658, 365.089, 16.3478, 0.4576 ) }
    dend_27 { pt3dadd( 399.456, 364.298, 15.8858, 0.3814 ) }
    dend_27 { pt3dadd( 399.257, 363.678, 14.0, 0.4576 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 20/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 394.111, 377.925, 32.3274, 0.4576 ) }
    dend_22 { pt3dadd( 395.193, 377.987, 34.0166, 0.6102 ) }
    dend_22 { pt3dadd( 396.297, 378.224, 33.9324, 0.661 ) }
    dend_22 { pt3dadd( 397.279, 377.839, 33.0994, 0.6864 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 24/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 397.279, 377.839, 33.0994, 0.6864 ) }
    dend_26 { pt3dadd( 397.927, 377.435, 33.0123, 0.661 ) }
    dend_26 { pt3dadd( 398.408, 378.327, 32.0656, 0.5592 ) }
    dend_26 { pt3dadd( 398.708, 379.319, 31.0492, 0.5338 ) }
    dend_26 { pt3dadd( 399.122, 380.346, 31.5585, 0.483 ) }
    dend_26 { pt3dadd( 399.833, 381.188, 31.2654, 0.5084 ) }
    dend_26 { pt3dadd( 400.62, 381.985, 30.7703, 0.5338 ) }
    dend_26 { pt3dadd( 401.408, 382.812, 30.6732, 0.6102 ) }
    dend_26 { pt3dadd( 402.092, 383.692, 30.1921, 0.661 ) }
    dend_26 { pt3dadd( 402.779, 384.577, 29.6951, 0.6864 ) }
    dend_26 { pt3dadd( 403.57, 385.402, 29.5781, 0.6864 ) }
    dend_26 { pt3dadd( 404.316, 386.24, 29.1855, 0.6864 ) }
    dend_26 { pt3dadd( 405.136, 386.975, 28.581, 0.661 ) }
    dend_26 { pt3dadd( 406.025, 387.695, 28.56, 0.6356 ) }
    dend_26 { pt3dadd( 407.035, 388.226, 28.5594, 0.6102 ) }
    dend_26 { pt3dadd( 408.161, 388.402, 28.5555, 0.5848 ) }
    dend_26 { pt3dadd( 409.302, 388.476, 28.5309, 0.5338 ) }
    dend_26 { pt3dadd( 410.322, 388.941, 28.3738, 0.5084 ) }
    dend_26 { pt3dadd( 411.162, 389.627, 27.5929, 0.5592 ) }
    dend_26 { pt3dadd( 412.184, 390.122, 27.403, 0.6864 ) }
    dend_26 { pt3dadd( 413.271, 390.369, 27.2185, 0.7626 ) }
    dend_26 { pt3dadd( 414.36, 390.288, 26.4438, 0.7626 ) }
    dend_26 { pt3dadd( 415.438, 390.63, 26.3231, 0.7118 ) }
    dend_26 { pt3dadd( 416.497, 391.048, 26.3379, 0.661 ) }
    dend_26 { pt3dadd( 417.633, 391.142, 26.4404, 0.6864 ) }
    dend_26 { pt3dadd( 418.75, 391.187, 26.95, 0.7372 ) }
    dend_26 { pt3dadd( 419.706, 391.532, 25.9199, 0.839 ) }
    dend_26 { pt3dadd( 420.71, 391.949, 25.2098, 0.8644 ) }
    dend_26 { pt3dadd( 421.755, 392.353, 25.1717, 0.8136 ) }
    dend_26 { pt3dadd( 422.873, 392.291, 25.0219, 0.7118 ) }
    dend_26 { pt3dadd( 423.962, 392.506, 24.4334, 0.5848 ) }
    dend_26 { pt3dadd( 425.086, 392.506, 24.8321, 0.4576 ) }
    dend_26 { pt3dadd( 426.033, 392.508, 23.4242, 0.3814 ) }
    dend_26 { pt3dadd( 427.147, 392.519, 23.1764, 0.3814 ) }
    dend_26 { pt3dadd( 428.134, 392.591, 24.4331, 0.483 ) }
    dend_26 { pt3dadd( 428.977, 392.607, 25.3498, 0.661 ) }
    dend_26 { pt3dadd( 429.948, 393.05, 25.4453, 0.7372 ) }
    dend_26 { pt3dadd( 430.857, 393.398, 24.1816, 0.788 ) }
    dend_26 { pt3dadd( 431.993, 393.43, 24.3342, 0.7626 ) }
    dend_26 { pt3dadd( 433.102, 393.479, 24.8864, 0.6864 ) }
    dend_26 { pt3dadd( 434.103, 393.788, 23.9775, 0.661 ) }
    dend_26 { pt3dadd( 434.888, 394.484, 23.0101, 0.661 ) }
    dend_26 { pt3dadd( 435.728, 395.257, 22.7937, 0.7118 ) }
    dend_26 { pt3dadd( 436.651, 395.855, 22.1802, 0.6864 ) }
    dend_26 { pt3dadd( 437.668, 396.343, 21.84, 0.6864 ) }
    dend_26 { pt3dadd( 438.75, 396.693, 21.84, 0.6102 ) }
    dend_26 { pt3dadd( 439.807, 397.094, 21.8397, 0.6356 ) }
    dend_26 { pt3dadd( 440.791, 397.669, 21.8383, 0.5848 ) }
    dend_26 { pt3dadd( 441.871, 398.017, 21.8294, 0.5848 ) }
    dend_26 { pt3dadd( 442.984, 398.247, 21.7692, 0.483 ) }
    dend_26 { pt3dadd( 443.819, 399.002, 21.4757, 0.4576 ) }
    dend_26 { pt3dadd( 444.469, 399.896, 20.8174, 0.4576 ) }
    dend_26 { pt3dadd( 445.305, 400.669, 20.72, 0.5592 ) }
    dend_26 { pt3dadd( 446.241, 401.324, 20.7197, 0.6356 ) }
    dend_26 { pt3dadd( 447.069, 402.113, 20.7186, 0.6864 ) }
    dend_26 { pt3dadd( 447.874, 402.926, 20.7144, 0.6356 ) }
    dend_26 { pt3dadd( 448.664, 403.753, 20.6954, 0.5848 ) }
    dend_26 { pt3dadd( 449.432, 404.581, 20.5464, 0.5338 ) }
    dend_26 { pt3dadd( 450.21, 405.331, 19.7431, 0.5848 ) }
    dend_26 { pt3dadd( 450.783, 406.302, 19.5264, 0.5848 ) }
    dend_26 { pt3dadd( 451.221, 407.335, 19.1436, 0.5592 ) }
    dend_26 { pt3dadd( 451.848, 408.247, 18.5354, 0.4322 ) }
    dend_26 { pt3dadd( 452.616, 409.092, 18.3996, 0.356 ) }
    dend_26 { pt3dadd( 453.296, 409.991, 18.1149, 0.305 ) }
    dend_26 { pt3dadd( 453.447, 411.071, 17.4135, 0.356 ) }
    dend_26 { pt3dadd( 453.234, 412.184, 17.36, 0.4576 ) }
    dend_26 { pt3dadd( 453.371, 413.281, 17.36, 0.5848 ) }
    dend_26 { pt3dadd( 454.145, 414.115, 17.36, 0.661 ) }
    dend_26 { pt3dadd( 455.113, 414.715, 17.3594, 0.661 ) }
    dend_26 { pt3dadd( 456.136, 415.219, 17.3572, 0.5848 ) }
    dend_26 { pt3dadd( 457.173, 415.669, 17.3351, 0.483 ) }
    dend_26 { pt3dadd( 458.055, 416.384, 17.1441, 0.4068 ) }
    dend_26 { pt3dadd( 458.98, 416.851, 16.1832, 0.4068 ) }
    dend_26 { pt3dadd( 459.888, 416.759, 15.12, 0.4576 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 98/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 397.279, 377.839, 33.0994, 0.6864 ) }
    dend_23 { pt3dadd( 397.856, 376.931, 32.5044, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_23 { pt3dadd( 398.484, 376.057, 31.6921, 0.483 ) }
    dend_23 { pt3dadd( 399.422, 375.602, 30.777, 0.483 ) }
    dend_23 { pt3dadd( 400.493, 375.537, 30.41, 0.483 ) }
    dend_23 { pt3dadd( 401.549, 375.351, 30.9977, 0.4576 ) }
    dend_23 { pt3dadd( 402.399, 374.634, 30.4388, 0.4322 ) }
    dend_23 { pt3dadd( 403.166, 373.881, 29.6887, 0.4576 ) }
    dend_23 { pt3dadd( 404.27, 373.756, 29.2432, 0.5084 ) }
    dend_23 { pt3dadd( 405.402, 373.823, 29.5985, 0.5084 ) }
    dend_23 { pt3dadd( 406.499, 374.114, 29.6181, 0.5338 ) }
    dend_23 { pt3dadd( 407.619, 374.086, 29.2446, 0.5338 ) }
    dend_23 { pt3dadd( 408.589, 373.624, 28.4217, 0.5592 ) }
    dend_23 { pt3dadd( 409.509, 373.037, 27.6226, 0.483 ) }
    dend_23 { pt3dadd( 410.432, 372.437, 26.9142, 0.483 ) }
    dend_23 { pt3dadd( 411.419, 372.013, 25.9963, 0.5592 ) }
    dend_23 { pt3dadd( 412.504, 371.914, 26.1657, 0.7118 ) }
    dend_23 { pt3dadd( 413.53, 371.912, 27.3336, 0.8136 ) }
    dend_23 { pt3dadd( 414.671, 371.902, 27.4, 0.839 ) }
    dend_23 { pt3dadd( 415.806, 371.83, 27.1695, 0.8644 ) }
    dend_23 { pt3dadd( 416.847, 371.467, 26.8624, 0.9152 ) }
    dend_23 { pt3dadd( 417.848, 370.974, 27.4165, 0.9152 ) }
    dend_23 { pt3dadd( 418.868, 370.466, 27.5657, 0.9152 ) }
    dend_23 { pt3dadd( 419.843, 369.943, 28.1403, 0.8898 ) }
    dend_23 { pt3dadd( 420.755, 369.272, 28.4914, 0.9152 ) }
    dend_23 { pt3dadd( 421.732, 368.72, 28.2047, 0.8644 ) }
    dend_23 { pt3dadd( 422.788, 368.551, 27.3176, 0.7626 ) }
    dend_23 { pt3dadd( 423.874, 368.662, 26.509, 0.6356 ) }
    dend_23 { pt3dadd( 424.975, 368.434, 26.402, 0.5592 ) }
    dend_23 { pt3dadd( 425.809, 367.693, 26.787, 0.5848 ) }
    dend_23 { pt3dadd( 426.662, 367.003, 27.3876, 0.6864 ) }
    dend_23 { pt3dadd( 427.673, 366.49, 27.1852, 0.788 ) }
    dend_23 { pt3dadd( 428.542, 365.966, 27.44, 0.8136 ) }
    dend_23 { pt3dadd( 429.311, 365.952, 27.5282, 0.8136 ) }
    dend_23 { pt3dadd( 430.43, 365.875, 27.781, 0.788 ) }
    dend_23 { pt3dadd( 431.514, 365.557, 27.4406, 0.8136 ) }
    dend_23 { pt3dadd( 432.655, 365.492, 27.4397, 0.788 ) }
    dend_23 { pt3dadd( 433.794, 365.404, 27.4372, 0.9152 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 36/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 433.794, 365.404, 27.4372, 0.9152 ) }
    dend_25 { pt3dadd( 435.411, 365.157, 26.32, 0.839 ) }
    dend_25 { pt3dadd( 436.546, 365.048, 26.3197, 0.839 ) }
    dend_25 { pt3dadd( 437.689, 365.035, 26.3186, 0.788 ) }
    dend_25 { pt3dadd( 438.829, 364.952, 26.311, 0.7118 ) }
    dend_25 { pt3dadd( 439.846, 364.473, 26.2665, 0.6356 ) }
    dend_25 { pt3dadd( 440.692, 363.707, 26.0781, 0.6356 ) }
    dend_25 { pt3dadd( 441.52, 363.203, 24.848, 0.661 ) }
    dend_25 { pt3dadd( 442.567, 362.986, 24.1122, 0.6864 ) }
    dend_25 { pt3dadd( 443.5, 362.332, 24.2511, 0.6864 ) }
    dend_25 { pt3dadd( 444.294, 361.578, 24.9116, 0.6864 ) }
    dend_25 { pt3dadd( 445.22, 360.98, 24.642, 0.7118 ) }
    dend_25 { pt3dadd( 446.326, 360.852, 24.9015, 0.7626 ) }
    dend_25 { pt3dadd( 447.406, 360.535, 25.2154, 0.788 ) }
    dend_25 { pt3dadd( 448.527, 360.331, 25.3019, 0.7118 ) }
    dend_25 { pt3dadd( 449.608, 360.037, 25.6903, 0.6102 ) }
    dend_25 { pt3dadd( 450.602, 359.999, 24.4933, 0.5338 ) }
    dend_25 { pt3dadd( 451.498, 359.936, 22.7637, 0.5848 ) }
    dend_25 { pt3dadd( 452.542, 359.683, 22.5394, 0.5592 ) }
    dend_25 { pt3dadd( 453.613, 359.955, 22.9415, 0.5338 ) }
    dend_25 { pt3dadd( 454.677, 360.359, 22.8474, 0.4576 ) }
    dend_25 { pt3dadd( 455.772, 360.361, 22.2197, 0.5084 ) }
    dend_25 { pt3dadd( 456.843, 360.036, 21.7115, 0.5592 ) }
    dend_25 { pt3dadd( 457.931, 359.93, 21.0126, 0.6102 ) }
    dend_25 { pt3dadd( 458.876, 359.58, 19.8153, 0.5848 ) }
    dend_25 { pt3dadd( 459.732, 358.835, 19.6238, 0.6102 ) }
    dend_25 { pt3dadd( 460.598, 358.089, 19.7047, 0.6356 ) }
    dend_25 { pt3dadd( 461.619, 357.69, 20.2216, 0.6864 ) }
    dend_25 { pt3dadd( 462.697, 357.418, 20.72, 0.661 ) }
    dend_25 { pt3dadd( 463.826, 357.262, 20.7206, 0.661 ) }
    dend_25 { pt3dadd( 464.969, 357.212, 20.7231, 0.6864 ) }
    dend_25 { pt3dadd( 466.072, 356.938, 20.7413, 0.6864 ) }
    dend_25 { pt3dadd( 467.205, 356.927, 20.8589, 0.6356 ) }
    dend_25 { pt3dadd( 468.253, 357.262, 21.5149, 0.5592 ) }
    dend_25 { pt3dadd( 469.276, 356.986, 21.8296, 0.5848 ) }
    dend_25 { pt3dadd( 470.104, 356.2, 21.7974, 0.6356 ) }
    dend_25 { pt3dadd( 470.9, 355.38, 21.6642, 0.6864 ) }
    dend_25 { pt3dadd( 471.624, 354.565, 20.9731, 0.7118 ) }
    dend_25 { pt3dadd( 472.552, 353.931, 20.4893, 0.7372 ) }
    dend_25 { pt3dadd( 473.595, 353.668, 19.7229, 0.7372 ) }
    dend_25 { pt3dadd( 474.691, 353.941, 19.5026, 0.7118 ) }
    dend_25 { pt3dadd( 475.79, 354.054, 18.9403, 0.661 ) }
    dend_25 { pt3dadd( 476.882, 353.98, 18.1488, 0.6356 ) }
    dend_25 { pt3dadd( 477.901, 353.599, 17.4387, 0.5338 ) }
    dend_25 { pt3dadd( 478.852, 352.973, 17.358, 0.483 ) }
    dend_25 { pt3dadd( 479.759, 352.284, 17.3505, 0.4576 ) }
    dend_25 { pt3dadd( 480.781, 351.777, 17.3088, 0.5084 ) }
    dend_25 { pt3dadd( 481.839, 351.369, 17.0873, 0.5338 ) }
    dend_25 { pt3dadd( 482.924, 351.274, 16.2798, 0.5338 ) }
    dend_25 { pt3dadd( 483.998, 350.964, 16.0045, 0.5592 ) }
    dend_25 { pt3dadd( 484.875, 350.317, 15.3891, 0.5592 ) }
    dend_25 { pt3dadd( 485.668, 349.578, 16.1473, 0.5592 ) }
    dend_25 { pt3dadd( 486.676, 349.047, 16.24, 0.5592 ) }
    dend_25 { pt3dadd( 487.732, 348.62, 16.24, 0.6102 ) }
    dend_25 { pt3dadd( 488.852, 348.404, 16.24, 0.661 ) }
    dend_25 { pt3dadd( 489.943, 348.077, 16.2397, 0.6864 ) }
    dend_25 { pt3dadd( 491.026, 347.747, 16.2386, 0.661 ) }
    dend_25 { pt3dadd( 492.057, 347.259, 16.2316, 0.6356 ) }
    dend_25 { pt3dadd( 493.113, 346.832, 16.1916, 0.6102 ) }
    dend_25 { pt3dadd( 494.24, 346.685, 15.9401, 0.6356 ) }
    dend_25 { pt3dadd( 495.291, 346.407, 15.2018, 0.6356 ) }
    dend_25 { pt3dadd( 496.421, 346.259, 15.141, 0.5848 ) }
    dend_25 { pt3dadd( 497.54, 346.078, 15.2592, 0.5084 ) }
    dend_25 { pt3dadd( 498.54, 345.582, 15.7707, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_25 { pt3dadd( 499.481, 344.988, 15.3434, 0.6102 ) }
    dend_25 { pt3dadd( 500.199, 344.122, 15.1225, 0.7118 ) }
    dend_25 { pt3dadd( 500.757, 343.126, 15.1326, 0.6864 ) }
    dend_25 { pt3dadd( 501.471, 342.234, 15.1785, 0.5848 ) }
    dend_25 { pt3dadd( 502.277, 341.428, 15.372, 0.483 ) }
    dend_25 { pt3dadd( 503.06, 340.671, 16.1487, 0.483 ) }
    dend_25 { pt3dadd( 503.921, 339.924, 16.2383, 0.5084 ) }
    dend_25 { pt3dadd( 504.828, 339.233, 16.2308, 0.5084 ) }
    dend_25 { pt3dadd( 505.511, 338.329, 16.1955, 0.483 ) }
    dend_25 { pt3dadd( 505.727, 337.216, 15.9709, 0.4576 ) }
    dend_25 { pt3dadd( 506.106, 336.222, 15.12, 0.4576 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 11/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 433.794, 365.404, 27.4372, 0.9152 ) }
    dend_24 { pt3dadd( 434.663, 365.007, 27.4271, 0.5084 ) }
    dend_24 { pt3dadd( 435.416, 364.149, 27.3809, 0.4576 ) }
    dend_24 { pt3dadd( 435.672, 363.061, 27.0211, 0.5338 ) }
    dend_24 { pt3dadd( 435.88, 361.982, 26.4032, 0.6356 ) }
    dend_24 { pt3dadd( 436.125, 360.877, 26.6106, 0.661 ) }
    dend_24 { pt3dadd( 436.317, 359.793, 27.1676, 0.6102 ) }
    dend_24 { pt3dadd( 436.665, 358.753, 26.4827, 0.5592 ) }
    dend_24 { pt3dadd( 437.116, 357.714, 26.1618, 0.5848 ) }
    dend_24 { pt3dadd( 437.633, 356.745, 25.4867, 0.661 ) }
    dend_24 { pt3dadd( 438.233, 355.81, 24.8438, 0.7372 ) }
    dend_24 { pt3dadd( 438.599, 354.775, 24.1494, 0.7118 ) }
    dend_24 { pt3dadd( 438.969, 353.695, 24.092, 0.6356 ) }
    dend_24 { pt3dadd( 439.47, 352.67, 24.1506, 0.5592 ) }
    dend_24 { pt3dadd( 440.181, 351.798, 24.5008, 0.5592 ) }
    dend_24 { pt3dadd( 440.932, 350.992, 25.1611, 0.6102 ) }
    dend_24 { pt3dadd( 441.581, 350.062, 25.2, 0.661 ) }
    dend_24 { pt3dadd( 441.94, 348.989, 25.2, 0.6864 ) }
    dend_24 { pt3dadd( 441.733, 347.878, 25.1997, 0.7118 ) }
    dend_24 { pt3dadd( 441.882, 346.774, 25.1986, 0.7372 ) }
    dend_24 { pt3dadd( 442.137, 345.661, 25.1913, 0.7372 ) }
    dend_24 { pt3dadd( 442.516, 344.59, 25.1479, 0.661 ) }
    dend_24 { pt3dadd( 442.934, 343.536, 24.9217, 0.5592 ) }
    dend_24 { pt3dadd( 443.141, 342.467, 24.1559, 0.483 ) }
    dend_24 { pt3dadd( 443.458, 341.372, 24.0542, 0.4576 ) }
    dend_24 { pt3dadd( 443.783, 340.289, 23.9033, 0.4576 ) }
    dend_24 { pt3dadd( 444.258, 339.333, 23.0572, 0.4322 ) }
    dend_24 { pt3dadd( 444.777, 338.321, 22.8682, 0.4322 ) }
    dend_24 { pt3dadd( 445.294, 337.328, 22.4344, 0.4576 ) }
    dend_24 { pt3dadd( 445.909, 336.397, 21.9318, 0.5338 ) }
    dend_24 { pt3dadd( 446.538, 335.447, 22.0984, 0.5338 ) }
    dend_24 { pt3dadd( 447.28, 334.657, 22.8634, 0.483 ) }
    dend_24 { pt3dadd( 448.108, 333.87, 22.8785, 0.4068 ) }
    dend_24 { pt3dadd( 448.992, 333.166, 22.6027, 0.4322 ) }
    dend_24 { pt3dadd( 450.029, 332.798, 21.9047, 0.4576 ) }
    dend_24 { pt3dadd( 451.105, 332.42, 21.8277, 0.5084 ) }
    dend_24 { pt3dadd( 452.059, 331.816, 21.7507, 0.5084 ) }
    dend_24 { pt3dadd( 452.651, 330.872, 21.259, 0.5592 ) }
    dend_24 { pt3dadd( 453.305, 329.966, 20.7595, 0.5848 ) }
    dend_24 { pt3dadd( 454.016, 329.073, 20.7206, 0.5848 ) }
    dend_24 { pt3dadd( 454.761, 328.211, 20.7225, 0.5338 ) }
    dend_24 { pt3dadd( 455.731, 327.613, 20.7329, 0.4576 ) }
    dend_24 { pt3dadd( 456.694, 327.008, 20.7889, 0.4322 ) }
    dend_24 { pt3dadd( 457.505, 326.217, 21.068, 0.4322 ) }
    dend_24 { pt3dadd( 458.158, 325.348, 21.8095, 0.4576 ) }
    dend_24 { pt3dadd( 458.849, 324.442, 21.8515, 0.4322 ) }
    dend_24 { pt3dadd( 459.623, 323.599, 21.8904, 0.4322 ) }
    dend_24 { pt3dadd( 460.302, 322.695, 22.1435, 0.4576 ) }
    dend_24 { pt3dadd( 461.32, 322.48, 22.96, 0.5084 ) }
    dend_24 { pt3dadd( 462.461, 322.402, 22.96, 0.5338 ) }
    dend_24 { pt3dadd( 463.553, 322.082, 22.96, 0.483 ) }
    dend_24 { pt3dadd( 464.693, 322.0, 22.96, 0.4576 ) }
    dend_24 { pt3dadd( 465.809, 321.789, 22.9603, 0.4576 ) }
    dend_24 { pt3dadd( 466.511, 320.913, 22.9617, 0.5592 ) }
    dend_24 { pt3dadd( 467.025, 319.894, 22.9698, 0.6102 ) }
    dend_24 { pt3dadd( 467.526, 318.871, 23.0129, 0.6102 ) }
    dend_24 { pt3dadd( 467.895, 317.808, 23.3346, 0.5338 ) }
    dend_24 { pt3dadd( 467.507, 316.807, 23.8095, 0.483 ) }
    dend_24 { pt3dadd( 468.341, 315.884, 22.96, 0.4576 ) }
    dend_24 { pt3dadd( 467.82, 316.051, 22.8267, 0.4576 ) }
    dend_24 { pt3dadd( 468.277, 315.276, 23.9719, 0.483 ) }
    dend_24 { pt3dadd( 469.053, 314.438, 24.0106, 0.5592 ) }
    dend_24 { pt3dadd( 469.806, 313.582, 23.8123, 0.6356 ) }
    dend_24 { pt3dadd( 470.344, 312.623, 23.0742, 0.6356 ) }
    dend_24 { pt3dadd( 470.883, 311.621, 22.9597, 0.5592 ) }
    dend_24 { pt3dadd( 471.597, 310.742, 22.9589, 0.483 ) }
    dend_24 { pt3dadd( 472.651, 310.372, 22.9541, 0.5084 ) }
    dend_24 { pt3dadd( 473.794, 310.363, 22.9183, 0.5848 ) }
    dend_24 { pt3dadd( 474.934, 310.337, 22.7038, 0.661 ) }
    dend_24 { pt3dadd( 476.008, 310.172, 21.9271, 0.661 ) }
    dend_24 { pt3dadd( 477.033, 309.673, 21.7924, 0.5848 ) }
    dend_24 { pt3dadd( 478.011, 309.1, 21.5754, 0.5338 ) }
    dend_24 { pt3dadd( 478.774, 308.348, 20.6948, 0.483 ) }
    dend_24 { pt3dadd( 479.44, 307.486, 20.0256, 0.4576 ) }
    dend_24 { pt3dadd( 480.004, 306.521, 19.696, 0.4068 ) }
    dend_24 { pt3dadd( 481.016, 306.094, 20.2042, 0.3814 ) }
    dend_24 { pt3dadd( 482.074, 305.744, 19.8691, 0.4068 ) }
    dend_24 { pt3dadd( 483.123, 305.354, 19.6092, 0.4068 ) }
    dend_24 { pt3dadd( 483.981, 304.6, 19.6392, 0.4576 ) }
    dend_24 { pt3dadd( 484.822, 303.827, 19.7627, 0.5084 ) }
    dend_24 { pt3dadd( 485.748, 303.207, 20.2826, 0.5848 ) }
    dend_24 { pt3dadd( 486.635, 302.56, 19.6507, 0.6102 ) }
    dend_24 { pt3dadd( 487.534, 301.866, 19.4866, 0.5848 ) }
    dend_24 { pt3dadd( 488.254, 301.046, 18.8633, 0.5592 ) }
    dend_24 { pt3dadd( 488.947, 300.167, 18.3996, 0.5084 ) }
    dend_24 { pt3dadd( 489.607, 299.249, 18.0869, 0.483 ) }
    dend_24 { pt3dadd( 490.27, 298.356, 17.5302, 0.483 ) }
    dend_24 { pt3dadd( 491.108, 297.597, 17.7439, 0.5338 ) }
    dend_24 { pt3dadd( 491.99, 296.93, 18.3848, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_24 { pt3dadd( 492.693, 296.039, 18.4279, 0.5084 ) }
    dend_24 { pt3dadd( 493.567, 295.335, 18.2081, 0.4068 ) }
    dend_24 { pt3dadd( 494.535, 294.995, 17.1128, 0.3304 ) }
    dend_24 { pt3dadd( 495.033, 294.035, 16.5707, 0.3304 ) }
    dend_24 { pt3dadd( 495.672, 293.316, 18.0295, 0.356 ) }
    dend_24 { pt3dadd( 496.411, 292.485, 18.4338, 0.4068 ) }
    dend_24 { pt3dadd( 497.316, 291.791, 18.2473, 0.4576 ) }
    dend_24 { pt3dadd( 498.234, 291.173, 17.5829, 0.483 ) }
    dend_24 { pt3dadd( 499.072, 290.403, 17.6114, 0.4576 ) }
    dend_24 { pt3dadd( 499.848, 289.639, 18.3848, 0.3814 ) }
    dend_24 { pt3dadd( 500.677, 288.853, 18.4727, 0.356 ) }
    dend_24 { pt3dadd( 501.586, 288.166, 18.4419, 0.356 ) }
    dend_24 { pt3dadd( 502.366, 287.341, 18.2588, 0.3814 ) }
    dend_24 { pt3dadd( 503.323, 286.842, 17.5067, 0.356 ) }
    dend_24 { pt3dadd( 504.26, 286.199, 17.36, 0.356 ) }
    dend_24 { pt3dadd( 505.201, 285.56, 17.36, 0.356 ) }
    dend_24 { pt3dadd( 506.215, 285.04, 17.36, 0.4322 ) }
    dend_24 { pt3dadd( 507.229, 284.518, 17.36, 0.5084 ) }
    dend_24 { pt3dadd( 508.233, 283.977, 17.3597, 0.5592 ) }
    dend_24 { pt3dadd( 509.182, 283.349, 17.3586, 0.5084 ) }
    dend_24 { pt3dadd( 509.9, 282.463, 17.3524, 0.4068 ) }
    dend_24 { pt3dadd( 510.867, 281.878, 17.318, 0.3814 ) }
    dend_24 { pt3dadd( 511.964, 281.651, 17.1156, 0.4322 ) }
    dend_24 { pt3dadd( 513.024, 281.388, 16.3492, 0.5338 ) }
    dend_24 { pt3dadd( 514.099, 281.004, 16.2397, 0.5592 ) }
    dend_24 { pt3dadd( 515.157, 280.58, 16.2389, 0.5592 ) }
    dend_24 { pt3dadd( 516.193, 280.104, 16.2333, 0.5338 ) }
    dend_24 { pt3dadd( 517.13, 279.493, 16.1941, 0.5338 ) }
    dend_24 { pt3dadd( 517.975, 278.754, 15.9835, 0.5592 ) }
    dend_24 { pt3dadd( 518.944, 278.252, 15.2628, 0.5848 ) }
    dend_24 { pt3dadd( 519.756, 277.45, 15.2429, 0.6102 ) }
    dend_24 { pt3dadd( 520.435, 276.569, 15.7478, 0.5592 ) }
    dend_24 { pt3dadd( 521.206, 275.737, 15.9667, 0.4576 ) }
    dend_24 { pt3dadd( 521.284, 275.552, 15.12, 0.2542 ) }
    dend_24 { pt3dadd( 521.461, 275.386, 15.12, 0.2288 ) }
    dend_24 { pt3dadd( 521.639, 275.221, 15.12, 0.2288 ) }
    dend_24 { pt3dadd( 521.792, 275.145, 15.12, 0.2288 ) }
    dend_24 { pt3dadd( 522.35, 274.903, 15.12, 0.2288 ) }
    dend_24 { pt3dadd( 522.948, 274.7, 15.12, 0.2542 ) }
    dend_24 { pt3dadd( 523.292, 274.356, 14.84, 0.2796 ) }
    dend_24 { pt3dadd( 523.609, 273.95, 14.6532, 0.3304 ) }
    dend_24 { pt3dadd( 523.927, 273.505, 14.56, 0.356 ) }
    dend_24 { pt3dadd( 524.397, 273.289, 14.56, 0.483 ) }
    dend_24 { pt3dadd( 524.842, 272.819, 13.72, 0.3304 ) }
    dend_24 { pt3dadd( 525.185, 272.361, 13.72, 0.356 ) }
    dend_24 { pt3dadd( 525.516, 272.005, 13.72, 0.3814 ) }
    dend_24 { pt3dadd( 526.036, 271.496, 14.56, 0.4322 ) }
    dend_24 { pt3dadd( 526.432, 271.09, 14.56, 0.4576 ) }
    dend_24 { pt3dadd( 526.633, 270.492, 14.56, 0.5592 ) }
    dend_24 { pt3dadd( 527.079, 269.907, 14.56, 0.5084 ) }
    dend_24 { pt3dadd( 527.613, 269.87, 14.56, 0.305 ) }
    dend_24 { pt3dadd( 528.07, 269.87, 14.56, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_38, dend_31, dend_18, dend_9, dend_0, dend_42, dend_39, dend_35, dend_32, dend_19, dend_17, dend_10, dend_4, dend_1, dend_41, dend_40, dend_37, dend_36, dend_34, dend_33, dend_30, dend_20, dend_14, dend_11, dend_8, dend_5, dend_3, dend_2, dend_29, dend_28, dend_21, dend_16, dend_15, dend_13, dend_12, dend_7, dend_6, dend_27, dend_22, dend_26, dend_23, dend_25, dend_24]}
    dend = new SectionList()
    dend_38 dend.append()
    dend_31 dend.append()
    dend_18 dend.append()
    dend_9 dend.append()
    dend_0 dend.append()
    dend_42 dend.append()
    dend_39 dend.append()
    dend_35 dend.append()
    dend_32 dend.append()
    dend_19 dend.append()
    dend_17 dend.append()
    dend_10 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()
    dend_41 dend.append()
    dend_40 dend.append()
    dend_37 dend.append()
    dend_36 dend.append()
    dend_34 dend.append()
    dend_33 dend.append()
    dend_30 dend.append()
    dend_20 dend.append()
    dend_14 dend.append()
    dend_11 dend.append()
    dend_8 dend.append()
    dend_5 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_21 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_7 dend.append()
    dend_6 dend.append()
    dend_27 dend.append()
    dend_22 dend.append()
    dend_26 dend.append()
    dend_23 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_22409, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_22409 = new SectionList()
    soma_0 OneSecGrp_SectionRef_22409.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.61  // units: uF/cm2
    forsec axon cm = 1.61  // units: uF/cm2
    forsec dend cm = 1.61  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 117.85999  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 3.6158195E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.03703912  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 0.0  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.3307504  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 1.6141231  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 4.936179E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 5.941591E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.0  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 2.6283674E-6  // units: S cm-2
        e_pas_nml2 = -92.921295  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 3.791504E-4  // units: S cm-2
        e_pas_nml2 = -92.921295  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 6.9868827E-7  // units: S cm-2
        e_pas_nml2 = -92.921295  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 4.2080443E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0010956032  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_35 nseg = 7
    dend_17 nseg = 3
    dend_1 nseg = 3
    dend_41 nseg = 11
    dend_40 nseg = 11
    dend_34 nseg = 3
    dend_33 nseg = 3
    dend_30 nseg = 9
    dend_11 nseg = 3
    dend_8 nseg = 3
    dend_29 nseg = 3
    dend_28 nseg = 9
    dend_16 nseg = 9
    dend_15 nseg = 7
    dend_13 nseg = 3
    dend_12 nseg = 5
    dend_6 nseg = 13
    dend_26 nseg = 5
    dend_23 nseg = 3
    dend_25 nseg = 5
    dend_24 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_471086533


