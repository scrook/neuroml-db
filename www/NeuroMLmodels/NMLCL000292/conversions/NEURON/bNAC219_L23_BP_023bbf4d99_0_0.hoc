// Cell: bNAC219_L23_BP_023bbf4d99_0_0
/*
{
  "id" : "bNAC219_L23_BP_023bbf4d99_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.92845, 10.7418, 1.66", "-0.766692, -11.7197, 13.0546, 1.66", "-1.5371, -14.7323, 15.5508, 1.66", "-2.86017, -19.9061, 19.8378, 1.39", "-8.12204, -40.4824, 36.8872, 1.11", "-9.0451, -44.092, 39.878, 1.11", "-10.2142, -48.6636, 43.666, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.86155, -0.778182, 1.39", "0.627891, 13.7415, 1.78741, 0.83", "0.631449, 15.6775, 2.63219, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-10.2142, -48.6636, 43.666, 0.83", "-11.9749, -53.2172, 42.0472, 0.83", "-12.3941, -54.3014, 41.6617, 0.83", "-13.4643, -57.0691, 40.6778, 0.83", "-13.944, -58.3098, 40.2367, 0.83", "-14.9757, -60.9779, 39.2882, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-10.2142, -48.6636, 43.666, 0.83", "-10.0795, -49.8024, 43.9017, 0.83", "-9.95487, -50.8342, 44.0993, 0.83", "-9.83205, -52.1933, 44.3322, 0.83", "-9.48188, -55.293, 44.7924, 0.83", "-9.15207, -57.8465, 45.1397, 0.55", "-8.57601, -62.18, 45.6335, 0.55", "-8.23305, -64.3248, 45.9092, 0.83", "-7.78556, -66.7681, 46.2376, 0.55", "-6.95894, -70.737, 46.9162, 0.55", "-6.70221, -71.8663, 47.1283, 0.55", "-5.99964, -74.9263, 47.7231, 0.55", "-5.11929, -78.78, 48.5749, 0.55", "-4.59996, -81.0872, 49.1113, 0.55", "-3.94372, -84.1638, 49.8493, 0.55", "-2.96939, -89.7345, 51.2038, 0.55", "-2.53805, -92.6901, 51.892, 0.55", "-2.25834, -94.9052, 52.3654, 0.55", "-2.14474, -96.4587, 52.6114, 0.55", "-2.11036, -97.8316, 52.7861, 0.55", "-2.16892, -100.602, 53.1748, 0.55", "-2.23139, -101.993, 53.3752, 0.55", "-2.35394, -104.117, 53.7678, 0.55", "-2.53632, -106.96, 54.3387, 0.55", "-2.85926, -111.07, 55.2155, 0.55", "-3.13748, -114.764, 56.0629, 0.55", "-3.42187, -117.988, 56.8639, 0.83", "-3.72203, -121.065, 57.734, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.631449, 15.6775, 2.63219, 0.83", "-0.14212, 23.6963, -1.08463, 0.83", "-0.270537, 25.81, -1.99361, 0.83", "-0.433067, 28.4006, -3.13345, 0.83", "-0.527378, 30.5407, -4.01685, 0.83", "-0.651786, 33.963, -5.36019, 0.83", "-0.744019, 38.439, -7.02613, 0.83", "-0.805436, 41.6197, -7.94486, 0.83", "-0.849064, 45.0617, -9.00327, 0.83", "-0.864646, 48.5966, -10.2364, 0.55", "-0.870485, 49.716, -10.6335, 0.55", "-0.912031, 51.631, -11.321, 0.55", "-0.934193, 55.6297, -12.6915, 0.55", "-0.974173, 58.5303, -13.6464, 0.55", "-1.01463, 65.7997, -16.0374, 0.55", "-1.0841, 69.0813, -17.2515, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.631449, 15.6775, 2.63219, 0.83", "1.50377, 17.8369, 3.12156, 0.83", "2.17492, 19.5376, 3.581, 0.83", "3.20269, 22.2154, 4.41756, 0.83", "4.17682, 24.7946, 5.25765, 0.83", "5.26529, 28.0535, 6.23163, 0.83", "6.05602, 30.5101, 6.90584, 0.83", "6.59324, 32.3642, 7.44523, 0.83", "7.13306, 34.3969, 7.97958, 0.83", "7.24559, 34.9489, 8.10468, 0.83", "8.39879, 41.2946, 9.22642, 0.83", "8.58083, 42.6419, 9.39256, 0.83", "8.77422, 44.4732, 9.5352, 0.83", "8.91149, 46.0574, 9.63111, 0.83", "9.03071, 47.893, 9.72478, 0.83", "9.1983, 50.2125, 9.83789, 0.83", "9.31009, 52.5989, 9.9686, 0.83", "9.39744, 53.9637, 10.0358, 0.83", "9.58592, 56.0782, 10.1165, 0.83", "9.74043, 58.1552, 10.2126, 0.83", "9.92857, 60.3405, 10.2764, 0.83", "10.1857, 63.1965, 10.3889, 0.83", "10.3875, 65.0619, 10.5423, 0.83", "10.4919, 66.0929, 10.661, 0.83", "10.6115, 67.2575, 10.8596, 0.83", "10.8259, 68.9801, 11.2507, 0.83", "11.0978, 71.5017, 12.0183, 0.55", "11.521, 74.8095, 13.1472, 0.55", "11.6052, 75.7795, 13.5135, 0.55", "11.7695, 77.819, 14.2755, 0.55", "11.8123, 78.6728, 14.5908, 0.55", "11.8664, 80.2722, 15.188, 0.55", "11.9215, 81.943, 15.7253, 0.55", "12.0478, 84.3779, 16.3344, 0.55", "12.1265, 85.983, 16.7106, 0.55", "12.1557, 87.4422, 17.0175, 0.55", "12.2359, 89.269, 17.3764, 0.55", "12.4104, 91.1787, 17.6755, 0.55", "12.7364, 93.7878, 18.0918, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-14.9757, -60.9779, 39.2882, 0.83", "-16.2711, -64.3249, 40.7295, 0.83", "-17.2901, -66.975, 41.7406, 0.83", "-18.5115, -70.1691, 42.8164, 0.83", "-19.528, -72.8068, 43.6144, 0.83", "-20.1458, -74.4097, 44.0994, 0.83", "-20.8824, -76.3209, 44.6776, 0.83", "-21.364, -77.7062, 44.9928, 0.83", "-21.911, -79.2863, 45.2807, 0.83", "-22.5733, -81.3033, 45.3377, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-14.9757, -60.9779, 39.2882, 0.55", "-12.8345, -61.3631, 48.6015, 0.55", "-10.249, -61.7229, 58.5029, 0.55", "-8.93569, -61.9058, 63.5326, 0.55", "-7.28149, -62.136, 69.8675, 0.28", "-7.00822, -62.1741, 70.9141, 0.83", "-5.57464, -62.3736, 76.4041, 0.28", "-5.29528, -62.3473, 77.3362, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-1.0841, 69.0813, -17.2515, 0.55", "-0.490449, 72.4851, -17.6005, 0.55", "0.133048, 76.081, -18.0702, 0.55", "0.574974, 78.6088, -18.3753, 0.55", "1.27992, 82.4009, -18.8154, 0.83", "1.78447, 85.0963, -19.1124, 0.55", "2.28195, 87.6083, -19.3801, 0.55", "2.75589, 89.9583, -19.5623, 1.11", "3.59499, 94.0372, -20.0062, 0.55", "3.83479, 95.4038, -20.1787, 0.55", "4.12789, 97.1281, -20.4158, 1.11", "4.47873, 99.2686, -20.7251, 0.55", "4.68067, 100.669, -20.9259, 1.11", "5.25874, 104.945, -21.4901, 0.55", "5.46591, 107.203, -21.9408, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-1.0841, 69.0813, -17.2515, 0.28", "-1.8619, 72.3139, -20.4649, 0.28", "-1.95548, 72.7962, -20.9366, 0.55", "-2.66429, 77.0552, -24.9456, 0.28", "-3.27242, 81.0173, -28.9199, 1.11", "-3.55645, 83.0723, -31.1139, 0.28", "-3.55645, 83.0723, -31.1139, 0.55", "-3.45885, 85.5446, -33.333, 0.28", "-3.30771, 86.4841, -34.098, 1.11", "-1.51951, 90.5763, -36.4254, 0.55", "0.644414, 93.7138, -37.2857, 0.28", "4.54831, 98.5854, -38.0533, 1.11", "8.18742, 102.696, -38.2603, 0.28", "8.2872, 102.791, -38.244, 0.55", "11.4773, 105.449, -37.2633, 0.28", "11.7911, 105.681, -37.1092, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-22.5733, -81.3033, 45.3377, 0.83", "-22.593, -87.0944, 47.4507, 0.83", "-22.6476, -91.7335, 49.4616, 0.83", "-22.6135, -93.9058, 50.4177, 0.83", "-22.6168, -95.152, 51.0747, 0.83", "-22.7183, -98.555, 52.9505, 0.83", "-22.7841, -100.57, 53.9131, 0.83", "-22.8517, -104.411, 55.3671, 0.83", "-22.7887, -107.077, 56.3888, 0.83", "-22.4474, -111.637, 57.987, 0.83", "-22.1402, -113.989, 58.6578, 0.83", "-21.213, -119.795, 59.7593, 0.83", "-20.4059, -124.983, 60.403, 0.83", "-19.8289, -129.282, 60.5606, 0.83", "-19.5554, -132.394, 60.5779, 0.83", "-19.5086, -133.022, 60.5606, 0.83", "-19.3963, -136.618, 60.6396, 0.28", "-19.4354, -137.567, 60.7248, 0.83", "-19.6975, -140.014, 60.8713, 0.28", "-20.2171, -144.361, 61.0605, 0.28", "-20.341, -145.293, 61.1355, 0.28", "-20.716, -148.263, 61.3984, 0.83", "-20.9847, -150.891, 61.6696, 0.28", "-21.1884, -152.998, 61.9168, 0.83", "-21.2857, -154.685, 62.1636, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-22.5733, -81.3033, 45.3377, 0.55", "-26.3103, -84.9405, 44.6837, 0.55", "-27.9452, -86.4907, 44.4891, 0.55", "-31.4434, -89.7739, 44.2183, 0.55", "-32.9613, -91.1733, 44.1607, 0.55", "-34.4747, -92.5244, 44.174, 0.28", "-35.151, -93.1283, 44.1799, 0.55", "-36.7997, -94.5009, 44.3863, 0.28", "-37.8741, -95.392, 44.5578, 0.55", "-39.1427, -96.4253, 44.9127, 0.28", "-41.1303, -97.9522, 45.4777, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_BP_023bbf4d99_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.92845, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.766692, -11.7197, 13.0546, 1.66 ) }
    dend_5 { pt3dadd( -1.5371, -14.7323, 15.5508, 1.66 ) }
    dend_5 { pt3dadd( -2.86017, -19.9061, 19.8378, 1.39 ) }
    dend_5 { pt3dadd( -8.12204, -40.4824, 36.8872, 1.11 ) }
    dend_5 { pt3dadd( -9.0451, -44.092, 39.878, 1.11 ) }
    dend_5 { pt3dadd( -10.2142, -48.6636, 43.666, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.86155, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.627891, 13.7415, 1.78741, 0.83 ) }
    dend_0 { pt3dadd( 0.631449, 15.6775, 2.63219, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -10.2142, -48.6636, 43.666, 0.83 ) }
    dend_7 { pt3dadd( -11.9749, -53.2172, 42.0472, 0.83 ) }
    dend_7 { pt3dadd( -12.3941, -54.3014, 41.6617, 0.83 ) }
    dend_7 { pt3dadd( -13.4643, -57.0691, 40.6778, 0.83 ) }
    dend_7 { pt3dadd( -13.944, -58.3098, 40.2367, 0.83 ) }
    dend_7 { pt3dadd( -14.9757, -60.9779, 39.2882, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -10.2142, -48.6636, 43.666, 0.83 ) }
    dend_6 { pt3dadd( -10.0795, -49.8024, 43.9017, 0.83 ) }
    dend_6 { pt3dadd( -9.95487, -50.8342, 44.0993, 0.83 ) }
    dend_6 { pt3dadd( -9.83205, -52.1933, 44.3322, 0.83 ) }
    dend_6 { pt3dadd( -9.48188, -55.293, 44.7924, 0.83 ) }
    dend_6 { pt3dadd( -9.15207, -57.8465, 45.1397, 0.55 ) }
    dend_6 { pt3dadd( -8.57601, -62.18, 45.6335, 0.55 ) }
    dend_6 { pt3dadd( -8.23305, -64.3248, 45.9092, 0.83 ) }
    dend_6 { pt3dadd( -7.78556, -66.7681, 46.2376, 0.55 ) }
    dend_6 { pt3dadd( -6.95894, -70.737, 46.9162, 0.55 ) }
    dend_6 { pt3dadd( -6.70221, -71.8663, 47.1283, 0.55 ) }
    dend_6 { pt3dadd( -5.99964, -74.9263, 47.7231, 0.55 ) }
    dend_6 { pt3dadd( -5.11929, -78.78, 48.5749, 0.55 ) }
    dend_6 { pt3dadd( -4.59996, -81.0872, 49.1113, 0.55 ) }
    dend_6 { pt3dadd( -3.94372, -84.1638, 49.8493, 0.55 ) }
    dend_6 { pt3dadd( -2.96939, -89.7345, 51.2038, 0.55 ) }
    dend_6 { pt3dadd( -2.53805, -92.6901, 51.892, 0.55 ) }
    dend_6 { pt3dadd( -2.25834, -94.9052, 52.3654, 0.55 ) }
    dend_6 { pt3dadd( -2.14474, -96.4587, 52.6114, 0.55 ) }
    dend_6 { pt3dadd( -2.11036, -97.8316, 52.7861, 0.55 ) }
    dend_6 { pt3dadd( -2.16892, -100.602, 53.1748, 0.55 ) }
    dend_6 { pt3dadd( -2.23139, -101.993, 53.3752, 0.55 ) }
    dend_6 { pt3dadd( -2.35394, -104.117, 53.7678, 0.55 ) }
    dend_6 { pt3dadd( -2.53632, -106.96, 54.3387, 0.55 ) }
    dend_6 { pt3dadd( -2.85926, -111.07, 55.2155, 0.55 ) }
    dend_6 { pt3dadd( -3.13748, -114.764, 56.0629, 0.55 ) }
    dend_6 { pt3dadd( -3.42187, -117.988, 56.8639, 0.83 ) }
    dend_6 { pt3dadd( -3.72203, -121.065, 57.734, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.631449, 15.6775, 2.63219, 0.83 ) }
    dend_2 { pt3dadd( -0.14212, 23.6963, -1.08463, 0.83 ) }
    dend_2 { pt3dadd( -0.270537, 25.81, -1.99361, 0.83 ) }
    dend_2 { pt3dadd( -0.433067, 28.4006, -3.13345, 0.83 ) }
    dend_2 { pt3dadd( -0.527378, 30.5407, -4.01685, 0.83 ) }
    dend_2 { pt3dadd( -0.651786, 33.963, -5.36019, 0.83 ) }
    dend_2 { pt3dadd( -0.744019, 38.439, -7.02613, 0.83 ) }
    dend_2 { pt3dadd( -0.805436, 41.6197, -7.94486, 0.83 ) }
    dend_2 { pt3dadd( -0.849064, 45.0617, -9.00327, 0.83 ) }
    dend_2 { pt3dadd( -0.864646, 48.5966, -10.2364, 0.55 ) }
    dend_2 { pt3dadd( -0.870485, 49.716, -10.6335, 0.55 ) }
    dend_2 { pt3dadd( -0.912031, 51.631, -11.321, 0.55 ) }
    dend_2 { pt3dadd( -0.934193, 55.6297, -12.6915, 0.55 ) }
    dend_2 { pt3dadd( -0.974173, 58.5303, -13.6464, 0.55 ) }
    dend_2 { pt3dadd( -1.01463, 65.7997, -16.0374, 0.55 ) }
    dend_2 { pt3dadd( -1.0841, 69.0813, -17.2515, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.631449, 15.6775, 2.63219, 0.83 ) }
    dend_1 { pt3dadd( 1.50377, 17.8369, 3.12156, 0.83 ) }
    dend_1 { pt3dadd( 2.17492, 19.5376, 3.581, 0.83 ) }
    dend_1 { pt3dadd( 3.20269, 22.2154, 4.41756, 0.83 ) }
    dend_1 { pt3dadd( 4.17682, 24.7946, 5.25765, 0.83 ) }
    dend_1 { pt3dadd( 5.26529, 28.0535, 6.23163, 0.83 ) }
    dend_1 { pt3dadd( 6.05602, 30.5101, 6.90584, 0.83 ) }
    dend_1 { pt3dadd( 6.59324, 32.3642, 7.44523, 0.83 ) }
    dend_1 { pt3dadd( 7.13306, 34.3969, 7.97958, 0.83 ) }
    dend_1 { pt3dadd( 7.24559, 34.9489, 8.10468, 0.83 ) }
    dend_1 { pt3dadd( 8.39879, 41.2946, 9.22642, 0.83 ) }
    dend_1 { pt3dadd( 8.58083, 42.6419, 9.39256, 0.83 ) }
    dend_1 { pt3dadd( 8.77422, 44.4732, 9.5352, 0.83 ) }
    dend_1 { pt3dadd( 8.91149, 46.0574, 9.63111, 0.83 ) }
    dend_1 { pt3dadd( 9.03071, 47.893, 9.72478, 0.83 ) }
    dend_1 { pt3dadd( 9.1983, 50.2125, 9.83789, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 9.31009, 52.5989, 9.9686, 0.83 ) }
    dend_1 { pt3dadd( 9.39744, 53.9637, 10.0358, 0.83 ) }
    dend_1 { pt3dadd( 9.58592, 56.0782, 10.1165, 0.83 ) }
    dend_1 { pt3dadd( 9.74043, 58.1552, 10.2126, 0.83 ) }
    dend_1 { pt3dadd( 9.92857, 60.3405, 10.2764, 0.83 ) }
    dend_1 { pt3dadd( 10.1857, 63.1965, 10.3889, 0.83 ) }
    dend_1 { pt3dadd( 10.3875, 65.0619, 10.5423, 0.83 ) }
    dend_1 { pt3dadd( 10.4919, 66.0929, 10.661, 0.83 ) }
    dend_1 { pt3dadd( 10.6115, 67.2575, 10.8596, 0.83 ) }
    dend_1 { pt3dadd( 10.8259, 68.9801, 11.2507, 0.83 ) }
    dend_1 { pt3dadd( 11.0978, 71.5017, 12.0183, 0.55 ) }
    dend_1 { pt3dadd( 11.521, 74.8095, 13.1472, 0.55 ) }
    dend_1 { pt3dadd( 11.6052, 75.7795, 13.5135, 0.55 ) }
    dend_1 { pt3dadd( 11.7695, 77.819, 14.2755, 0.55 ) }
    dend_1 { pt3dadd( 11.8123, 78.6728, 14.5908, 0.55 ) }
    dend_1 { pt3dadd( 11.8664, 80.2722, 15.188, 0.55 ) }
    dend_1 { pt3dadd( 11.9215, 81.943, 15.7253, 0.55 ) }
    dend_1 { pt3dadd( 12.0478, 84.3779, 16.3344, 0.55 ) }
    dend_1 { pt3dadd( 12.1265, 85.983, 16.7106, 0.55 ) }
    dend_1 { pt3dadd( 12.1557, 87.4422, 17.0175, 0.55 ) }
    dend_1 { pt3dadd( 12.2359, 89.269, 17.3764, 0.55 ) }
    dend_1 { pt3dadd( 12.4104, 91.1787, 17.6755, 0.55 ) }
    dend_1 { pt3dadd( 12.7364, 93.7878, 18.0918, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -14.9757, -60.9779, 39.2882, 0.83 ) }
    dend_9 { pt3dadd( -16.2711, -64.3249, 40.7295, 0.83 ) }
    dend_9 { pt3dadd( -17.2901, -66.975, 41.7406, 0.83 ) }
    dend_9 { pt3dadd( -18.5115, -70.1691, 42.8164, 0.83 ) }
    dend_9 { pt3dadd( -19.528, -72.8068, 43.6144, 0.83 ) }
    dend_9 { pt3dadd( -20.1458, -74.4097, 44.0994, 0.83 ) }
    dend_9 { pt3dadd( -20.8824, -76.3209, 44.6776, 0.83 ) }
    dend_9 { pt3dadd( -21.364, -77.7062, 44.9928, 0.83 ) }
    dend_9 { pt3dadd( -21.911, -79.2863, 45.2807, 0.83 ) }
    dend_9 { pt3dadd( -22.5733, -81.3033, 45.3377, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -14.9757, -60.9779, 39.2882, 0.55 ) }
    dend_8 { pt3dadd( -12.8345, -61.3631, 48.6015, 0.55 ) }
    dend_8 { pt3dadd( -10.249, -61.7229, 58.5029, 0.55 ) }
    dend_8 { pt3dadd( -8.93569, -61.9058, 63.5326, 0.55 ) }
    dend_8 { pt3dadd( -7.28149, -62.136, 69.8675, 0.28 ) }
    dend_8 { pt3dadd( -7.00822, -62.1741, 70.9141, 0.83 ) }
    dend_8 { pt3dadd( -5.57464, -62.3736, 76.4041, 0.28 ) }
    dend_8 { pt3dadd( -5.29528, -62.3473, 77.3362, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -1.0841, 69.0813, -17.2515, 0.55 ) }
    dend_4 { pt3dadd( -0.490449, 72.4851, -17.6005, 0.55 ) }
    dend_4 { pt3dadd( 0.133048, 76.081, -18.0702, 0.55 ) }
    dend_4 { pt3dadd( 0.574974, 78.6088, -18.3753, 0.55 ) }
    dend_4 { pt3dadd( 1.27992, 82.4009, -18.8154, 0.83 ) }
    dend_4 { pt3dadd( 1.78447, 85.0963, -19.1124, 0.55 ) }
    dend_4 { pt3dadd( 2.28195, 87.6083, -19.3801, 0.55 ) }
    dend_4 { pt3dadd( 2.75589, 89.9583, -19.5623, 1.11 ) }
    dend_4 { pt3dadd( 3.59499, 94.0372, -20.0062, 0.55 ) }
    dend_4 { pt3dadd( 3.83479, 95.4038, -20.1787, 0.55 ) }
    dend_4 { pt3dadd( 4.12789, 97.1281, -20.4158, 1.11 ) }
    dend_4 { pt3dadd( 4.47873, 99.2686, -20.7251, 0.55 ) }
    dend_4 { pt3dadd( 4.68067, 100.669, -20.9259, 1.11 ) }
    dend_4 { pt3dadd( 5.25874, 104.945, -21.4901, 0.55 ) }
    dend_4 { pt3dadd( 5.46591, 107.203, -21.9408, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -1.0841, 69.0813, -17.2515, 0.28 ) }
    dend_3 { pt3dadd( -1.8619, 72.3139, -20.4649, 0.28 ) }
    dend_3 { pt3dadd( -1.95548, 72.7962, -20.9366, 0.55 ) }
    dend_3 { pt3dadd( -2.66429, 77.0552, -24.9456, 0.28 ) }
    dend_3 { pt3dadd( -3.27242, 81.0173, -28.9199, 1.11 ) }
    dend_3 { pt3dadd( -3.55645, 83.0723, -31.1139, 0.28 ) }
    dend_3 { pt3dadd( -3.55645, 83.0723, -31.1139, 0.55 ) }
    dend_3 { pt3dadd( -3.45885, 85.5446, -33.333, 0.28 ) }
    dend_3 { pt3dadd( -3.30771, 86.4841, -34.098, 1.11 ) }
    dend_3 { pt3dadd( -1.51951, 90.5763, -36.4254, 0.55 ) }
    dend_3 { pt3dadd( 0.644414, 93.7138, -37.2857, 0.28 ) }
    dend_3 { pt3dadd( 4.54831, 98.5854, -38.0533, 1.11 ) }
    dend_3 { pt3dadd( 8.18742, 102.696, -38.2603, 0.28 ) }
    dend_3 { pt3dadd( 8.2872, 102.791, -38.244, 0.55 ) }
    dend_3 { pt3dadd( 11.4773, 105.449, -37.2633, 0.28 ) }
    dend_3 { pt3dadd( 11.7911, 105.681, -37.1092, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -22.5733, -81.3033, 45.3377, 0.83 ) }
    dend_11 { pt3dadd( -22.593, -87.0944, 47.4507, 0.83 ) }
    dend_11 { pt3dadd( -22.6476, -91.7335, 49.4616, 0.83 ) }
    dend_11 { pt3dadd( -22.6135, -93.9058, 50.4177, 0.83 ) }
    dend_11 { pt3dadd( -22.6168, -95.152, 51.0747, 0.83 ) }
    dend_11 { pt3dadd( -22.7183, -98.555, 52.9505, 0.83 ) }
    dend_11 { pt3dadd( -22.7841, -100.57, 53.9131, 0.83 ) }
    dend_11 { pt3dadd( -22.8517, -104.411, 55.3671, 0.83 ) }
    dend_11 { pt3dadd( -22.7887, -107.077, 56.3888, 0.83 ) }
    dend_11 { pt3dadd( -22.4474, -111.637, 57.987, 0.83 ) }
    dend_11 { pt3dadd( -22.1402, -113.989, 58.6578, 0.83 ) }
    dend_11 { pt3dadd( -21.213, -119.795, 59.7593, 0.83 ) }
    dend_11 { pt3dadd( -20.4059, -124.983, 60.403, 0.83 ) }
    dend_11 { pt3dadd( -19.8289, -129.282, 60.5606, 0.83 ) }
    dend_11 { pt3dadd( -19.5554, -132.394, 60.5779, 0.83 ) }
    dend_11 { pt3dadd( -19.5086, -133.022, 60.5606, 0.83 ) }
    dend_11 { pt3dadd( -19.3963, -136.618, 60.6396, 0.28 ) }
    dend_11 { pt3dadd( -19.4354, -137.567, 60.7248, 0.83 ) }
    dend_11 { pt3dadd( -19.6975, -140.014, 60.8713, 0.28 ) }
    dend_11 { pt3dadd( -20.2171, -144.361, 61.0605, 0.28 ) }
    dend_11 { pt3dadd( -20.341, -145.293, 61.1355, 0.28 ) }
    dend_11 { pt3dadd( -20.716, -148.263, 61.3984, 0.83 ) }
    dend_11 { pt3dadd( -20.9847, -150.891, 61.6696, 0.28 ) }
    dend_11 { pt3dadd( -21.1884, -152.998, 61.9168, 0.83 ) }
    dend_11 { pt3dadd( -21.2857, -154.685, 62.1636, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -22.5733, -81.3033, 45.3377, 0.55 ) }
    dend_10 { pt3dadd( -26.3103, -84.9405, 44.6837, 0.55 ) }
    dend_10 { pt3dadd( -27.9452, -86.4907, 44.4891, 0.55 ) }
    dend_10 { pt3dadd( -31.4434, -89.7739, 44.2183, 0.55 ) }
    dend_10 { pt3dadd( -32.9613, -91.1733, 44.1607, 0.55 ) }
    dend_10 { pt3dadd( -34.4747, -92.5244, 44.174, 0.28 ) }
    dend_10 { pt3dadd( -35.151, -93.1283, 44.1799, 0.55 ) }
    dend_10 { pt3dadd( -36.7997, -94.5009, 44.3863, 0.28 ) }
    dend_10 { pt3dadd( -37.8741, -95.392, 44.5578, 0.55 ) }
    dend_10 { pt3dadd( -39.1427, -96.4253, 44.9127, 0.28 ) }
    dend_10 { pt3dadd( -41.1303, -97.9522, 45.4777, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 3
    dend_6 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_BP_023bbf4d99_0_0


