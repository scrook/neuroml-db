// Cell: cSTUT189_L6_LBC_530a402f3f_0_0
/*
{
  "id" : "cSTUT189_L6_LBC_530a402f3f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-11.4272, 2.74365, 0.0, 1.40284", "-10.3338, 2.46774, 0.0, 1.96571", "-9.24032, 2.19183, 0.0, 8.29327", "-8.14687, 1.91592, 0.0, 9.44256", "-7.05343, 1.64001, 0.0, 11.0735", "-5.95999, 1.3641, 0.0, 12.0361", "-4.86655, 1.08818, 0.0, 12.4931", "-3.77311, 0.812273, 0.0, 12.9557", "-2.67966, 0.536361, 0.0, 13.509", "-1.58622, 0.26045, 0.0, 14.2209", "-0.492779, -0.0154621, 0.0, 14.9654", "0.600663, -0.291374, 0.0, 15.6811", "1.6941, -0.567285, 0.0, 16.3347", "2.78755, -0.843197, 0.0, 16.6107", "3.88099, -1.11911, 0.0, 16.5624", "4.97443, -1.39502, 0.0, 15.9355", "6.06787, -1.67093, 0.0, 14.1801", "7.16131, -1.94684, 0.0, 11.0241", "8.25476, -2.22276, 0.0, 8.05605", "9.3482, -2.49867, 0.0, 6.33907", "10.4416, -2.77458, 0.0, 3.78351" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "5.9426, 7.83673, 0.0, 1.83", "6.07032, 8.00124, -0.0916523, 1.71", "8.89805, 11.6435, -2.12081, 1.58", "11.4361, 14.9126, -3.94213, 1.46", "13.9829, 18.1929, -5.76966, 1.34", "18.9656, 24.6108, -9.34525, 1.34", "20.4042, 26.4636, -10.3775, 1.34" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000082183454454
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "10.4126, -2.39027, 21.22, 1.46", "15.4145, -0.169336, 19.9237, 1.46", "18.0974, 1.03366, 19.2457, 1.34", "21.9917, 2.69398, 18.1913, 1.22", "24.3077, 3.65087, 17.5351, 0.97", "25.8158, 4.24923, 17.106, 0.73", "26.8161, 4.63553, 16.8212, 0.73", "26.9542, 4.67729, 16.7762, 0.73", "29.0865, 5.12179, 16.269, 0.73", "29.1781, 5.12812, 16.2656, 0.73", "30.4528, 5.08407, 16.2784, 0.73", "30.6083, 5.06888, 16.2989, 0.73", "32.5453, 4.88474, 16.672, 0.73", "34.5013, 4.7533, 17.156, 0.73", "37.657, 4.58785, 18.4523, 0.73", "39.9301, 4.50072, 19.5567, 0.73", "42.847, 4.41935, 21.1526, 0.49", "44.5025, 4.41057, 22.1325, 0.49", "45.5482, 4.45217, 22.8136, 0.49", "50.0953, 4.93528, 26.0446, 0.61", "51.1679, 5.1717, 26.9428, 0.61", "51.4288, 5.26083, 27.1835, 0.61", "52.0704, 5.54766, 27.7724, 0.61", "52.7595, 5.89966, 28.411, 0.61", "53.5985, 6.4741, 28.9811, 0.61", "53.6574, 6.54805, 28.9818, 0.61", "54.2191, 7.02288, 29.4718, 0.61", "54.317, 7.0524, 29.5827, 0.61", "55.259, 7.14049, 30.7256, 0.61", "55.6552, 7.12078, 31.123, 0.61", "55.7232, 7.11311, 31.1843, 0.61", "59.7331, 6.67469, 34.3157, 0.61", "60.9735, 6.5221, 35.2153, 0.61", "61.0957, 6.51091, 35.2914, 0.61", "63.3539, 6.39109, 36.3934, 0.49", "63.4885, 6.38896, 36.4422, 0.49", "65.203, 6.41342, 37.0378, 0.49", "65.292, 6.41321, 37.0605, 0.49", "67.2265, 6.3687, 37.4266, 0.49", "69.0103, 6.29447, 37.6251, 0.49", "69.3099, 6.27681, 37.64, 0.49", "72.6168, 6.10657, 36.4604, 0.49", "73.8341, 6.10972, 35.4944, 0.49", "76.939, 6.33714, 32.115, 0.49", "77.5368, 6.43979, 31.3518, 0.49", "77.7215, 6.48769, 31.1095, 0.49", "80.8901, 7.62253, 26.6056, 0.37", "81.3616, 7.81855, 25.871, 0.37", "81.4154, 7.84754, 25.7872, 0.37", "82.6077, 8.58236, 24.0743, 0.49", "83.2337, 8.97613, 23.1446, 0.49", "86.0524, 10.6884, 19.2639, 0.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000082183454454,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.0074, -2.79977, 1.21, 1.58", "-16.2796, -2.68695, 1.2839, 1.34", "-16.4273, -2.6843, 1.28564, 1.34" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000082183454454
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-10.1874, 3.72073, 9.01, 1.71", "-11.0146, 4.86054, 7.89869, 1.71", "-12.45, 6.70727, 5.99401, 1.46", "-13.971, 8.60093, 3.94775, 1.46", "-14.5999, 9.28702, 3.06678, 1.1", "-16.1493, 10.8105, 1.04076, 1.1", "-17.5971, 12.1765, -0.66554, 0.97", "-18.2689, 12.776, -1.40791, 0.97", "-18.5334, 12.9976, -1.67678, 0.97", "-21.9035, 15.6634, -4.5305, 0.97", "-23.3143, 16.7283, -5.63727, 0.97", "-25.2316, 18.1525, -6.92241, 0.97", "-26.5291, 19.1115, -7.6972, 0.97", "-26.5826, 19.1524, -7.7257, 0.97", "-28.4647, 20.7322, -8.52334, 0.97", "-29.0231, 21.2991, -8.68004, 0.97", "-30.0906, 22.5349, -8.97462, 1.1", "-31.322, 24.129, -9.28066, 1.1", "-32.2989, 25.5141, -9.47806, 1.1", "-33.9663, 27.9873, -9.72023, 1.1", "-35.3744, 30.2549, -9.77783, 0.97", "-35.9095, 31.1719, -9.77169, 0.97", "-36.5142, 32.3663, -9.74749, 0.97", "-36.5417, 32.4361, -9.74607, 0.97" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000082183454454,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "0.402596, -8.87927, 0.67, 1.46", "0.348052, -8.93233, 0.689381, 1.46", "-1.34733, -10.379, 1.38592, 1.34", "-2.45911, -11.2338, 1.77012, 0.97", "-4.10424, -12.5583, 2.518, 0.97", "-6.02303, -14.1453, 3.50984, 0.97", "-6.11094, -14.218, 3.55528, 0.97", "-7.09823, -14.986, 4.10484, 0.97", "-8.50143, -15.908, 5.04289, 1.1", "-10.5745, -17.2756, 6.79951, 0.97", "-10.6159, -17.3103, 6.8551, 0.97" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000082183454454
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.6026, -8.67977, 2.21, 1.46", "4.53872, -10.1183, 3.9712, 1.46", "4.43244, -12.5117, 6.90145, 1.1", "4.42927, -12.583, 6.98876, 1.1", "4.25029, -16.6134, 11.9231, 0.85", "4.14493, -18.9861, 14.8279, 0.85", "4.09454, -20.1208, 16.2172, 0.85" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000082183454454
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "10.4416, -2.77458, 0.0, 0.898277", "24.9857, -6.44455, 0.0, 0.898277", "39.5298, -10.1145, 0.0, 0.898277" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "20.4042, 26.4636, -10.3775, 1.22", "35.2164, 26.7375, -1.7603, 1.22", "42.801, 26.9359, 2.37368, 0.97", "42.9509, 26.9424, 2.44666, 0.97", "50.1484, 27.2158, 5.56943, 0.97", "50.298, 27.2233, 5.62809, 0.97", "51.9041, 27.3175, 6.21954, 0.97", "54.7757, 27.5307, 6.84099, 0.97", "59.9973, 27.9575, 8.46184, 0.85", "64.8167, 28.6453, 10.0456, 0.73", "67.0814, 29.1317, 10.7922, 0.73", "67.2632, 29.1685, 10.8552, 0.73", "69.0687, 29.6169, 11.6012, 0.73", "76.7478, 32.2089, 15.0717, 0.73", "77.8691, 32.7041, 15.611, 0.73", "78.0007, 32.7759, 15.6761, 0.73", "81.5249, 35.0358, 17.4419, 0.73", "86.7034, 38.7176, 20.2332, 0.61", "90.1776, 41.5031, 22.1791, 0.61", "90.3665, 41.6707, 22.2762, 0.61", "91.2151, 42.4209, 22.7415, 0.61", "93.4139, 44.4365, 24.0148, 0.61", "97.889, 48.8814, 26.9917, 0.61", "98.012, 48.9928, 27.0679, 0.61", "100.197, 50.3913, 28.7276, 0.49", "100.32, 50.4551, 28.8142, 0.49", "102.444, 51.2803, 30.1706, 0.49", "102.668, 51.3561, 30.2908, 0.49", "103.84, 51.7673, 30.8306, 0.49", "112.29, 53.9627, 35.1468, 0.49", "115.366, 54.6608, 36.7735, 0.49", "117.087, 55.06, 37.6685, 0.49", "121.026, 55.9504, 39.6899, 0.49", "121.168, 55.9847, 39.759, 0.49", "130.29, 58.3302, 43.8885, 0.49", "132.278, 58.9342, 44.6682, 0.49", "134.274, 59.5051, 45.6063, 0.49", "134.442, 59.5558, 45.6949, 0.49", "135.591, 59.815, 46.3772, 0.49", "135.757, 59.8595, 46.4722, 0.49" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "20.4042, 26.4636, -10.3775, 0.85", "20.6183, 33.7112, -13.66, 0.85", "20.6956, 36.3276, -14.8451, 0.85", "20.8104, 40.2109, -16.6039, 0.85", "20.8136, 40.3184, -16.6526, 0.85", "20.8485, 41.5005, -17.188, 0.85", "20.8563, 41.7646, -17.3076, 0.85" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "86.0524, 10.6884, 19.2639, 0.49", "85.6989, 11.2029, 19.3632, 0.49", "85.4775, 11.5253, 19.4254, 0.49" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "86.0524, 10.6884, 19.2639, 0.12", "87.1951, 10.6598, 18.2482, 0.12", "92.6113, 10.6863, 14.7724, 0.97", "92.748, 10.6908, 14.7018, 0.97", "94.7222, 10.7575, 13.8109, 0.85", "96.6426, 10.8452, 13.0657, 0.73", "99.5886, 11.0505, 11.903, 0.61", "101.741, 11.3054, 11.2032, 0.49", "103.372, 11.5257, 10.8622, 0.49", "104.25, 11.6517, 10.629, 0.49", "106.279, 11.9538, 9.93985, 0.49", "108.717, 12.3893, 8.93338, 0.49", "108.921, 12.4274, 8.84786, 0.49", "109.989, 12.5818, 8.44331, 0.49", "111.341, 12.7461, 7.98542, 0.49", "111.637, 12.7785, 7.9037, 0.49", "113.157, 12.8199, 7.62114, 0.49", "116.666, 12.7211, 7.30045, 0.49", "116.819, 12.7133, 7.2789, 0.49", "118.224, 12.6743, 7.05383, 0.49", "118.575, 12.6741, 6.98979, 0.49", "120.478, 12.7226, 6.48882, 0.49", "120.623, 12.7295, 6.43805, 0.49", "124.029, 12.9575, 5.02722, 0.49", "125.892, 13.0939, 4.22687, 0.49", "126.623, 13.1483, 3.97718, 0.49", "128.803, 13.3627, 3.41791, 0.49", "128.998, 13.3966, 3.38999, 0.49", "130.522, 13.7039, 3.42768, 0.49", "130.701, 13.7445, 3.47551, 0.49", "134.21, 14.4153, 4.65735, 0.49", "134.423, 14.4533, 4.76977, 0.49", "135.656, 14.66, 5.44402, 0.24", "136.806, 14.8346, 6.00872, 0.24", "137.125, 14.8807, 6.12672, 0.24", "139.029, 15.1139, 6.57663, 0.24", "142.188, 15.4293, 6.71559, 0.24", "145.291, 15.6551, 6.74304, 0.24", "145.434, 15.6604, 6.73874, 0.24", "147.467, 15.7707, 6.62668, 0.24", "147.666, 15.785, 6.61317, 0.24", "149.738, 16.0007, 6.44466, 0.24", "149.989, 16.0317, 6.4215, 0.24", "153.044, 16.4685, 6.33838, 0.24", "156.92, 17.1449, 6.24506, 0.37", "157.124, 17.1847, 6.2407, 0.37", "159.045, 17.6109, 6.19461, 0.37", "159.467, 17.7214, 6.18342, 0.37", "161.99, 18.4694, 6.10581, 0.37", "164.51, 19.4236, 6.00309, 0.37", "164.947, 19.6168, 5.97999, 0.37", "167.422, 20.7765, 5.82477, 0.37", "170.042, 22.1557, 5.67298, 0.37", "170.298, 22.3094, 5.66088, 0.37", "171.812, 23.3123, 5.42794, 0.37", "171.93, 23.3923, 5.40109, 0.37", "172.222, 23.5972, 5.32931, 0.37", "176.903, 26.9998, 4.05596, 0.37", "179.638, 28.9766, 3.25337, 0.37", "183.287, 31.5061, 2.16007, 0.37", "184.254, 32.1339, 1.84941, 0.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-16.4273, -2.6843, 1.28564, 1.34", "-15.9987, -2.95864, 0.83526, 1.34", "-14.2982, -4.48122, -0.682919, 0.97", "-15.0676, -6.68373, 2.62964, 0.97", "-15.2685, -7.08485, 3.30202, 0.73", "-16.1763, -8.85571, 6.26228, 0.73", "-16.2125, -8.9172, 6.37334, 0.73", "-16.7845, -9.75408, 8.00062, 0.73", "-18.371, -11.7676, 12.246, 0.37", "-19.2613, -12.8151, 14.633, 0.37", "-19.324, -12.8772, 14.794, 0.37", "-19.7413, -13.1987, 15.7638, 0.37" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-16.4273, -2.6843, 1.28564, 1.22", "-17.8939, -1.66761, 1.38416, 1.22", "-18.0922, -1.53609, 1.33469, 1.22", "-20.0505, -0.228638, 0.678951, 0.97", "-20.1717, -0.146659, 0.632648, 0.97", "-22.7378, 1.71404, -0.42257, 0.73", "-24.9293, 3.3643, -1.35904, 0.61", "-28.1344, 5.78535, -3.36526, 0.61", "-29.1598, 6.59571, -4.21961, 0.61", "-29.377, 6.795, -4.50238, 0.61", "-29.9739, 7.45106, -5.54768, 0.73", "-30.0253, 7.51782, -5.66172, 0.73", "-31.9545, 10.2377, -10.5546, 0.73", "-31.9957, 10.2867, -10.6628, 0.73", "-33.8072, 12.2112, -15.6126, 0.73", "-33.8439, 12.2508, -15.7259, 0.73", "-34.5679, 13.0507, -18.0927, 0.73", "-34.735, 13.2457, -18.6647, 0.73", "-35.8996, 14.6905, -22.8197, 0.73", "-36.9467, 15.878, -26.7016, 0.73", "-38.5404, 17.5746, -32.3951, 0.73", "-38.7894, 17.8169, -33.3118, 0.73", "-38.8501, 17.8738, -33.5478, 0.73", "-40.6248, 19.3212, -38.992, 0.73", "-42.2155, 20.4932, -43.0373, 0.49", "-44.3164, 21.7596, -47.3287, 0.49", "-49.6756, 24.8093, -56.0832, 0.49", "-49.7449, 24.8487, -56.18, 0.49", "-52.3974, 26.5118, -60.2154, 0.49", "-52.7158, 26.721, -60.7139, 0.49", "-60.481, 32.1901, -73.2474, 0.49", "-62.9149, 33.9583, -77.3232, 0.49", "-64.8588, 35.4769, -80.6418, 0.49", "-74.9096, 43.7314, -99.0925, 0.37", "-75.0042, 43.8172, -99.3086, 0.37", "-76.2153, 45.0335, -102.336, 0.37", "-76.4246, 45.2704, -102.92, 0.37", "-79.1986, 48.6902, -111.485, 0.37", "-79.3093, 48.8306, -111.817, 0.37", "-85.9746, 57.1866, -129.583, 0.37", "-87.6991, 59.119, -133.656, 0.37", "-89.4978, 60.9583, -137.554, 0.37", "-89.5526, 61.0066, -137.656, 0.37", "-93.7037, 64.0816, -144.158, 0.37", "-94.2717, 64.3899, -144.925, 0.37", "-98.189, 65.6905, -149.415, 0.37", "-98.7912, 65.8145, -150.502, 0.37", "-100.658, 66.0841, -154.607, 0.37", "-101.193, 66.1506, -155.871, 0.37", "-105.611, 66.5303, -167.346, 0.37", "-107.004, 66.6815, -171.089, 0.37", "-114.306, 67.6267, -192.35, 0.37", "-114.354, 67.6348, -192.493, 0.37", "-115.496, 67.8875, -196.087, 0.37", "-115.532, 67.8992, -196.206, 0.37", "-115.959, 68.1464, -198.035, 0.37", "-115.985, 68.1641, -198.156, 0.37", "-116.315, 68.3867, -199.569, 0.37", "-116.345, 68.4052, -199.689, 0.37", "-119.552, 70.3591, -212.975, 0.37", "-123.687, 72.6666, -227.664, 0.37", "-123.752, 72.7011, -227.865, 0.37", "-125.035, 73.3402, -231.047, 0.37", "-126.788, 74.1606, -234.569, 0.37", "-126.861, 74.1912, -234.666, 0.37", "-131.354, 75.7567, -236.602, 0.37", "-133.847, 76.5006, -236.828, 0.37", "-138.343, 77.6778, -237.125, 0.37", "-138.465, 77.7026, -237.129, 0.37", "-142.295, 78.1644, -237.035, 0.37", "-142.758, 78.1853, -237.025, 0.37", "-146.01, 77.9542, -236.963, 0.37", "-146.336, 77.8932, -236.958, 0.37", "-148.322, 77.2493, -236.938, 0.37", "-148.742, 77.1016, -236.935, 0.37", "-150.375, 76.3606, -236.923, 0.37" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-16.4273, -2.6843, 1.28564, 0.85", "-21.3815, -7.69198, 6.41273, 0.85", "-23.2502, -9.67228, 8.18306, 0.85", "-24.2576, -10.807, 9.08909, 0.85", "-25.1909, -12.0986, 9.93658, 0.85", "-25.3618, -12.408, 10.101, 0.85", "-26.4791, -14.7497, 11.2282, 0.85", "-26.5822, -15.073, 11.3018, 0.85", "-26.8034, -15.9242, 11.4946, 0.85", "-27.7143, -19.3931, 12.2725, 0.85", "-28.4733, -22.4731, 12.9688, 0.85", "-28.5229, -22.6981, 13.0202, 0.85", "-28.961, -24.761, 13.4922, 0.85", "-29.1165, -25.3827, 13.6327, 0.85", "-29.962, -27.9921, 13.9024, 0.85", "-30.4958, -29.5713, 13.8827, 0.85", "-30.9337, -30.766, 13.8076, 0.85", "-32.1434, -34.119, 13.5496, 0.85", "-32.2264, -34.3598, 13.5284, 0.85", "-33.6828, -38.4328, 13.0841, 0.85", "-35.0664, -42.3012, 12.5374, 0.85", "-35.9325, -44.5179, 12.1825, 0.85", "-36.0791, -44.8793, 12.1242, 0.85", "-36.361, -45.5764, 11.9881, 0.85" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-36.5417, 32.4361, -9.74607, 0.85", "-39.9596, 33.1434, -10.7052, 0.85", "-42.1179, 33.8534, -11.2227, 0.85", "-44.9755, 34.9869, -11.858, 0.85", "-45.3436, 35.1495, -11.9256, 0.85", "-46.7516, 35.7624, -12.1218, 0.85", "-46.8505, 35.8069, -12.1327, 0.85", "-49.2889, 37.0237, -12.1271, 0.85", "-49.3847, 37.0764, -12.1266, 0.85", "-51.2731, 38.2256, -12.1174, 0.85", "-53.621, 39.5944, -12.6178, 0.85", "-55.0693, 40.4011, -13.1422, 0.85", "-55.364, 40.5567, -13.272, 0.85", "-57.5783, 41.7206, -14.3574, 0.85", "-57.6635, 41.7697, -14.405, 0.85", "-62.7161, 44.9299, -17.6223, 0.73", "-62.797, 44.982, -17.6742, 0.73", "-65.5182, 46.6555, -19.2841, 0.73", "-67.2262, 47.5632, -20.3053, 0.73", "-70.6488, 48.9965, -22.1041, 0.73", "-70.7628, 49.0375, -22.156, 0.73", "-73.5095, 49.7988, -23.1361, 0.73", "-75.3013, 50.1664, -23.7628, 0.73", "-80.8649, 50.7934, -25.5655, 0.73", "-86.0057, 51.1034, -26.9445, 0.73", "-86.1433, 51.1076, -26.9738, 0.73", "-89.1934, 51.2791, -27.4963, 0.73", "-89.8273, 51.3257, -27.58, 0.73", "-93.6138, 51.8139, -27.8539, 0.73", "-97.4247, 52.533, -27.843, 0.73", "-97.9187, 52.6735, -27.8764, 0.73", "-102.897, 54.4154, -28.462, 0.73", "-103.37, 54.6093, -28.5369, 0.73", "-107.189, 56.3, -29.2233, 0.73", "-107.297, 56.3501, -29.245, 0.73", "-113.264, 58.9887, -30.4562, 0.73", "-116.93, 60.4944, -31.1793, 0.73", "-117.096, 60.5519, -31.2099, 0.73", "-121.67, 61.9141, -31.9427, 0.73", "-122.837, 62.1391, -32.0823, 0.73", "-127.204, 62.6062, -32.39, 0.73", "-127.842, 62.5893, -32.3912, 0.73", "-131.003, 62.2869, -32.4741, 0.73", "-131.511, 62.2081, -32.5633, 0.73", "-135.758, 61.2879, -33.8079, 0.73", "-135.937, 61.2494, -33.8724, 0.73", "-139.705, 60.4309, -35.4503, 0.73", "-141.33, 60.1353, -36.1539, 0.73", "-149.215, 58.9709, -39.7042, 0.73", "-149.712, 58.9245, -39.94, 0.73", "-152.694, 58.8063, -41.5049, 0.73", "-153.264, 58.7958, -41.8913, 0.73", "-155.533, 58.8243, -43.8087, 0.73", "-156.487, 58.8629, -44.7165, 0.73", "-160.615, 59.1771, -49.1813, 0.73", "-161.499, 59.2318, -50.2739, 0.73", "-165.695, 59.4479, -56.616, 0.73", "-165.76, 59.4506, -56.73, 0.73", "-166.223, 59.4511, -57.8004, 0.73", "-166.67, 59.429, -59.1594, 0.73", "-166.716, 59.3999, -59.5706, 0.73" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-36.5417, 32.4361, -9.74607, 0.97", "-38.1627, 37.1645, -12.4096, 0.97", "-38.2234, 37.2785, -12.4042, 0.97", "-39.4826, 40.0792, -11.8786, 0.73", "-39.5149, 40.1794, -11.8591, 0.73", "-40.1371, 42.485, -11.4071, 0.73", "-40.2276, 42.8975, -11.3303, 0.73", "-41.098, 47.2613, -10.1182, 0.73", "-41.5143, 50.4566, -9.43298, 0.73", "-41.7056, 53.2623, -9.03726, 0.73", "-41.7156, 53.5225, -9.01569, 0.73", "-41.6801, 55.5412, -8.97425, 0.73", "-41.674, 55.6715, -8.98042, 0.73", "-41.4332, 59.2405, -9.46223, 0.73", "-41.4318, 62.6672, -9.92561, 0.73", "-41.4427, 62.8502, -9.94736, 0.73", "-41.5917, 64.6699, -10.1282, 0.73", "-41.6021, 64.7901, -10.1386, 0.73", "-41.8197, 67.3482, -10.3438, 0.73", "-41.9833, 70.223, -10.0802, 0.73", "-41.9959, 72.3831, -9.55295, 0.73", "-41.9977, 72.5454, -9.50715, 0.73", "-42.0164, 74.411, -8.81798, 0.73", "-41.9776, 75.0702, -8.47162, 0.73", "-40.5248, 79.3989, -3.13579, 0.73", "-40.4818, 79.4523, -2.9904, 0.73" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-10.6159, -17.3103, 6.8551, 0.85", "-12.1841, -18.5376, 8.2256, 0.85", "-14.367, -19.6733, 9.5813, 0.73", "-15.1037, -20.0192, 9.93107, 0.73", "-16.3402, -20.5925, 10.4367, 0.73", "-16.4628, -20.6494, 10.4868, 0.73", "-18.3619, -21.53, 11.2634, 0.73", "-18.4663, -21.5494, 11.2923, 0.73", "-19.568, -21.6122, 11.2762, 0.73", "-19.8771, -21.6394, 11.2436, 0.73" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-10.6159, -17.3103, 6.8551, 0.49", "-12.8918, -17.0703, 8.17312, 0.49", "-14.8726, -16.7276, 8.74316, 0.37", "-16.4695, -16.3984, 8.96713, 0.37", "-16.8379, -16.3225, 9.01881, 0.37", "-18.057, -16.0713, 9.18978, 0.37", "-18.9566, -15.8859, 9.31595, 0.37", "-22.5231, -14.8939, 8.91482, 0.37", "-23.0014, -14.7274, 8.76158, 0.37" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "4.09454, -20.1208, 16.2172, 0.85", "4.89691, -19.073, 24.6417, 0.85", "4.95174, -19.0014, 25.2174, 0.85" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.09454, -20.1208, 16.2172, 0.85", "3.13937, -24.0799, 21.5037, 0.85", "3.12358, -24.1702, 21.5933, 0.85", "2.9738, -25.2649, 22.4439, 0.85", "2.82089, -26.1431, 22.9563, 0.61", "2.79752, -26.2598, 23.0127, 0.61", "2.39002, -27.9786, 23.7185, 0.61", "2.0148, -29.8704, 23.5113, 0.37", "1.87318, -30.2257, 23.4572, 0.37", "1.00663, -31.4827, 23.1987, 0.37", "0.923126, -31.5768, 23.1752, 0.37", "0.57472, -31.957, 23.0761, 0.37", "0.503608, -32.0341, 23.0556, 0.37", "-0.368096, -33.1346, 22.7905, 0.24", "-1.36496, -34.4484, 22.4895, 0.24", "-1.4274, -34.5346, 22.4741, 0.24", "-2.59974, -36.1953, 22.2194, 0.24", "-3.7138, -37.9799, 21.9938, 0.24", "-3.85889, -38.2182, 21.9883, 0.24", "-4.73137, -39.6957, 22.0819, 0.24", "-5.79609, -41.4413, 22.3059, 0.24", "-6.05727, -41.8762, 22.384, 0.24", "-7.03665, -43.6166, 22.7945, 0.24", "-8.34564, -46.1466, 23.3287, 0.24", "-8.4258, -46.3118, 23.3572, 0.24", "-9.05743, -47.6884, 23.519, 0.24", "-9.27112, -48.1563, 23.5429, 0.24", "-9.9445, -49.3821, 23.5108, 0.24", "-11.7161, -52.1648, 23.1876, 0.24", "-11.8077, -52.2961, 23.1759, 0.24", "-12.9551, -53.7143, 23.1877, 0.24", "-13.0325, -53.7872, 23.1951, 0.24", "-14.8877, -55.1767, 23.4708, 0.24", "-14.9799, -55.2248, 23.4887, 0.24", "-18.3903, -56.6749, 24.3644, 0.24", "-19.3488, -57.0764, 24.6299, 0.24", "-21.118, -57.7889, 25.1682, 0.24", "-21.2223, -57.8349, 25.2006, 0.24", "-22.3933, -58.5025, 25.6184, 0.24", "-24.0189, -59.8835, 26.0392, 0.24", "-23.9508, -60.1423, 26.035, 0.24", "-23.7772, -60.6648, 26.0342, 0.24", "-23.6831, -60.9359, 26.0346, 0.24", "-23.1844, -62.2295, 26.0471, 0.24", "-22.6095, -63.5461, 26.0741, 0.24", "-21.8563, -64.9521, 26.1324, 0.24" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "39.5298, -10.1145, 0.0, 0.37", "54.074, -13.7845, 0.0, 0.37", "68.6181, -17.4544, 0.0, 0.37" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "20.8563, 41.7646, -17.3076, 0.85", "23.7859, 43.698, -19.7874, 0.85", "25.8449, 44.9366, -21.3318, 0.73", "30.3616, 47.4571, -23.9565, 0.73", "30.5485, 47.5573, -24.0504, 0.73", "31.7051, 48.1126, -24.5485, 0.73", "31.9043, 48.2019, -24.6257, 0.73", "33.8058, 48.8366, -25.0891, 0.73", "37.2549, 49.5482, -25.5166, 0.73", "37.3608, 49.5667, -25.5202, 0.73", "39.1891, 49.9054, -25.6697, 0.73", "39.3422, 49.935, -25.6874, 0.73", "41.1277, 50.2855, -25.9304, 0.73", "41.2324, 50.3047, -25.9463, 0.73", "45.7841, 51.0851, -26.6826, 0.73", "48.5938, 51.7699, -27.2988, 0.73", "48.8352, 51.843, -27.3623, 0.73", "49.7702, 52.2337, -27.6801, 0.73", "51.7222, 53.2506, -28.4731, 0.73", "51.9258, 53.375, -28.565, 0.73", "55.8477, 56.2701, -30.5909, 0.73", "55.9167, 56.3255, -30.6306, 0.73", "59.2188, 59.1024, -32.5768, 0.73", "59.2986, 59.1699, -32.6271, 0.73", "59.8565, 59.6473, -32.9936, 0.73", "60.0449, 59.7951, -33.1021, 0.73", "61.434, 60.7334, -33.7227, 0.73", "61.6374, 60.8644, -33.7994, 0.73", "64.3912, 62.3403, -34.7178, 0.73", "64.5324, 62.4152, -34.7602, 0.73", "66.1465, 63.2721, -35.2221, 0.73", "66.2426, 63.3229, -35.2606, 0.73", "67.7375, 64.1271, -35.9753, 0.73", "69.7431, 65.2483, -36.9553, 0.73", "72.3975, 66.772, -38.2717, 0.73", "72.4839, 66.8216, -38.3145, 0.73", "76.0451, 68.7958, -40.1114, 0.73", "76.1687, 68.8624, -40.1836, 0.73", "78.1711, 69.9958, -41.2899, 0.73", "78.2443, 70.0431, -41.3314, 0.73", "79.9185, 71.2571, -42.255, 0.73", "80.1773, 71.453, -42.388, 0.73", "84.9074, 75.3246, -44.6615, 0.73", "88.612, 78.4583, -46.516, 0.61", "92.2361, 81.6485, -48.4059, 0.61", "94.5544, 83.7676, -49.6308, 0.61", "94.6281, 83.838, -49.6707, 0.61", "97.831, 87.0605, -51.5279, 0.61", "98.0752, 87.3267, -51.6759, 0.61", "99.9174, 89.4421, -53.0447, 0.61", "101.019, 90.6971, -53.8457, 0.61", "101.08, 90.7623, -53.8856, 0.61", "104.554, 94.3967, -55.8635, 0.61", "104.66, 94.5065, -55.9124, 0.61", "105.571, 95.4737, -56.252, 0.61", "108.598, 98.8216, -57.0247, 0.37", "110.327, 100.806, -57.2623, 0.37", "110.473, 100.983, -57.2629, 0.37", "111.553, 102.366, -57.0626, 0.37", "111.716, 102.568, -57.0349, 0.37", "112.988, 104.059, -57.2103, 0.37", "113.218, 104.327, -57.3123, 0.37", "115.199, 106.428, -58.5441, 0.37", "115.302, 106.527, -58.6142, 0.37", "117.273, 108.161, -60.0159, 0.37", "121.79, 111.544, -63.3144, 0.37", "121.909, 111.635, -63.4133, 0.37", "122.798, 112.343, -64.2184, 0.37", "122.931, 112.468, -64.3514, 0.37", "123.63, 113.3, -65.0524, 0.37", "123.883, 113.764, -65.2876, 0.37", "125.446, 117.623, -66.1566, 0.37", "125.478, 117.715, -66.1742, 0.37", "126.373, 120.707, -66.6652, 0.37", "126.47, 121.027, -66.7351, 0.37", "127.262, 123.655, -67.3841, 0.37", "127.296, 123.766, -67.4116, 0.37", "127.775, 125.293, -67.7738, 0.37", "127.84, 125.517, -67.8314, 0.37", "129.249, 130.31, -69.2091, 0.37", "129.284, 130.421, -69.2398, 0.37", "130.098, 132.976, -69.9412, 0.37", "130.13, 133.077, -69.9763, 0.37", "130.679, 134.817, -70.6862, 0.37", "130.968, 135.697, -71.0637, 0.37", "131.653, 137.585, -71.865, 0.37", "131.697, 137.683, -71.9127, 0.37", "133.596, 140.999, -73.8414, 0.37", "133.676, 141.127, -73.9159, 0.37", "134.372, 142.153, -74.5458, 0.37", "134.891, 142.885, -74.956, 0.37", "135.679, 143.885, -75.4096, 0.37", "135.789, 144.009, -75.4372, 0.37", "136.563, 144.774, -75.3953, 0.37", "136.668, 144.874, -75.3894, 0.37", "137.816, 145.927, -75.3288, 0.37", "138.189, 146.314, -75.5443, 0.37", "138.879, 147.157, -76.2662, 0.37", "138.936, 147.229, -76.3369, 0.37", "139.482, 147.908, -77.0631, 0.37", "139.776, 148.293, -77.5014, 0.37", "142.326, 151.935, -82.0289, 0.37", "142.937, 152.828, -83.2346, 0.37", "143.143, 153.128, -83.6865, 0.37", "143.473, 153.625, -84.4704, 0.37" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "20.8563, 41.7646, -17.3076, 0.97", "18.2478, 44.3397, -16.8815, 0.97", "18.128, 44.4369, -16.8605, 0.97", "15.1859, 46.4464, -16.3259, 0.97", "12.5542, 48.0122, -15.8349, 0.85", "12.4208, 48.0864, -15.8097, 0.85", "9.55364, 49.7277, -15.2366, 0.85", "6.97068, 51.0842, -14.6689, 0.85", "4.72627, 52.4198, -14.1377, 0.85", "2.27803, 54.0816, -13.5047, 0.85", "2.15972, 54.1814, -13.4705, 0.85", "-0.0349086, 56.739, -12.7399, 0.85", "-0.110184, 56.8569, -12.7107, 0.85", "-1.87344, 60.6144, -11.8873, 0.85", "-2.17859, 61.4075, -11.7248, 0.85", "-3.6693, 65.1396, -10.9571, 0.85", "-5.44738, 68.9285, -10.1525, 0.85", "-5.52703, 69.0797, -10.1196, 0.85", "-7.52609, 72.3825, -9.36435, 0.85", "-7.66356, 72.5794, -9.31731, 0.85", "-11.2064, 77.278, -8.15842, 0.85", "-13.5623, 80.1478, -7.42472, 0.85", "-13.669, 80.2726, -7.3812, 0.85", "-15.7612, 82.854, -6.34294, 0.85", "-15.8587, 82.9826, -6.28885, 0.85", "-17.8169, 85.8849, -5.1018, 0.85", "-17.8945, 86.0126, -5.05004, 0.85", "-21.079, 91.6354, -2.8228, 0.85", "-24.5178, 98.2129, -0.363842, 0.85", "-27.0722, 103.453, 1.5147, 0.85", "-28.5555, 106.766, 2.6289, 0.85", "-28.6451, 106.986, 2.6962, 0.85", "-30.3226, 111.527, 3.92018, 0.85", "-31.6912, 116.108, 4.86646, 0.85", "-31.7442, 116.346, 4.91278, 0.85", "-32.2459, 119.312, 5.44784, 0.85", "-33.0642, 124.508, 6.34461, 0.85", "-33.0917, 124.68, 6.37305, 0.85", "-33.7139, 128.847, 7.01894, 0.85", "-33.7474, 129.06, 7.05205, 0.85", "-34.9321, 136.131, 8.15816, 0.85", "-35.0564, 136.813, 8.26576, 0.85", "-35.7101, 141.034, 8.90931, 0.85" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "184.254, 32.1339, 1.84941, 0.37", "184.474, 32.6595, 1.72809, 0.37", "185.519, 35.1499, 1.15328, 0.37", "186.818, 38.2472, 0.438399, 0.37", "187.112, 38.9471, 0.276855, 0.37" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "184.254, 32.1339, 1.84941, 0.37", "185.876, 33.351, 1.91834, 0.37", "187.157, 34.1584, 1.96904, 0.37", "189.018, 35.1837, 2.0399, 0.37", "191.693, 36.5211, 2.12917, 0.37", "194.437, 37.8176, 2.21906, 0.37", "195.841, 38.4045, 2.25148, 0.37", "198.726, 39.4565, 2.39491, 0.37", "201.264, 40.2782, 2.49519, 0.37", "201.899, 40.4072, 2.50118, 0.37", "203.478, 40.5135, 2.4625, 0.37", "205.405, 40.3361, 2.33341, 0.37", "205.898, 40.2309, 2.38493, 0.37", "207.701, 39.6506, 2.91274, 0.37", "209.52, 38.9512, 3.55714, 0.37", "211.078, 38.3402, 4.15378, 0.37", "213.73, 37.2215, 5.43296, 0.37", "219.289, 35.0217, 8.46804, 0.37", "222.594, 33.6538, 10.3697, 0.37", "224.963, 32.5704, 11.7972, 0.37", "225.081, 32.5159, 11.8727, 0.37", "227.336, 31.3848, 13.2787, 0.37", "228.771, 30.7877, 14.1058, 0.37", "230.179, 30.2192, 14.4644, 0.37", "231.051, 29.754, 14.8363, 0.37", "231.504, 29.4764, 15.0632, 0.37", "233.086, 28.4444, 15.546, 0.37" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-36.361, -45.5764, 11.9881, 0.85", "-36.9125, -46.4737, 12.1614, 0.85", "-37.0859, -46.7557, 12.2158, 0.85", "-37.8398, -47.9823, 12.4526, 0.85", "-38.1711, -48.5212, 12.5567, 0.85", "-39.6818, -50.979, 13.0313, 0.85" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-40.4818, 79.4523, -2.9904, 0.61", "-40.0908, 83.7565, -3.69264, 0.61", "-39.9578, 85.4504, -4.06188, 0.61", "-39.9428, 85.6476, -4.10756, 0.61", "-39.7624, 87.9272, -4.64594, 0.61", "-39.7342, 88.2249, -4.71354, 0.61", "-39.3985, 91.4609, -5.43082, 0.61", "-39.389, 91.5907, -5.46907, 0.61", "-39.1454, 93.9003, -6.23298, 0.61", "-39.1095, 94.2028, -6.33525, 0.61", "-38.8624, 96.0174, -6.96383, 0.61", "-38.847, 96.1166, -6.99483, 0.61", "-38.3362, 99.0206, -7.77022, 0.61", "-38.2304, 99.6075, -7.94176, 0.61", "-37.8816, 101.528, -8.59349, 0.61", "-37.8673, 101.623, -8.63452, 0.61", "-37.7607, 103.219, -9.43612, 0.61", "-37.7633, 103.499, -9.5831, 0.61", "-38.0166, 104.778, -10.244, 0.61", "-38.1891, 105.134, -10.4092, 0.61", "-39.6968, 107.11, -11.1967, 0.61", "-40.8276, 108.356, -11.6313, 0.61", "-41.2715, 108.794, -11.754, 0.61", "-42.937, 110.388, -12.0933, 0.49", "-45.1816, 112.522, -12.3753, 0.49", "-46.6808, 113.998, -12.4592, 0.49", "-46.7457, 114.066, -12.4574, 0.49", "-48.0616, 115.668, -12.4304, 0.49", "-48.1891, 115.851, -12.4289, 0.49", "-48.5909, 116.693, -12.4333, 0.49", "-49.1548, 118.372, -12.439, 0.49", "-49.6655, 120.117, -12.4406, 0.49", "-50.245, 122.09, -12.4387, 0.49", "-50.2856, 122.233, -12.4385, 0.49", "-51.068, 125.011, -12.4326, 0.49", "-51.427, 126.431, -12.4309, 0.49", "-51.9608, 128.543, -12.4283, 0.49", "-52.5712, 130.606, -12.4203, 0.49", "-53.2484, 132.552, -12.4118, 0.49", "-53.2851, 132.642, -12.4115, 0.49", "-54.4441, 135.028, -12.4002, 0.49", "-55.1729, 136.422, -12.4014, 0.49", "-56.0605, 137.962, -12.4017, 0.49", "-56.1519, 138.104, -12.4015, 0.49", "-57.016, 139.434, -12.3972, 0.49", "-57.0611, 139.507, -12.3972, 0.49", "-57.8904, 140.947, -12.4011, 0.49", "-58.6944, 142.712, -12.4096, 0.49", "-58.747, 142.844, -12.4103, 0.49", "-59.3874, 144.33, -12.0972, 0.49", "-59.4447, 144.444, -12.0539, 0.49", "-60.2429, 145.878, -11.3619, 0.49", "-60.2832, 145.944, -11.3257, 0.49", "-61.406, 147.66, -10.3071, 0.49", "-63.8321, 151.312, -8.23491, 0.49", "-65.1532, 153.208, -7.18571, 0.49", "-65.2064, 153.285, -7.14574, 0.49", "-66.3737, 155.06, -6.32537, 0.49", "-66.4211, 155.137, -6.29685, 0.49", "-67.3186, 156.823, -5.93118, 0.49", "-67.7092, 157.751, -5.93753, 0.49", "-67.851, 158.185, -5.94168, 0.49", "-68.2186, 159.513, -5.95629, 0.49", "-68.2632, 159.717, -5.95887, 0.49", "-68.5704, 161.165, -5.97748, 0.49", "-68.5874, 161.261, -5.97881, 0.49", "-68.9776, 163.328, -6.00676, 0.49", "-69.2613, 164.552, -6.0218, 0.49", "-69.2895, 164.651, -6.02288, 0.49", "-69.8025, 166.251, -6.04295, 0.49", "-70.2582, 167.35, -6.22736, 0.49", "-70.7147, 168.356, -6.52254, 0.49", "-70.977, 168.85, -6.72697, 0.49", "-71.3955, 169.438, -7.1944, 0.49", "-71.4359, 169.492, -7.24491, 0.49", "-73.3307, 171.938, -9.81622, 0.49", "-73.6256, 172.324, -10.212, 0.49", "-74.4126, 173.405, -11.2993, 0.49", "-76.8696, 176.812, -14.7359, 0.49", "-77.7933, 178.106, -15.9725, 0.49", "-77.8328, 178.162, -16.0221, 0.49", "-78.9996, 179.871, -17.3002, 0.49", "-79.082, 179.994, -17.3841, 0.49", "-80.372, 182.101, -18.5569, 0.49", "-81.1613, 183.475, -19.0149, 0.49", "-81.2389, 183.586, -19.0512, 0.49", "-82.3309, 184.939, -19.4346, 0.49", "-82.3991, 185.013, -19.4515, 0.49", "-83.1497, 185.849, -19.5577, 0.49", "-83.6002, 186.355, -19.5544, 0.49", "-84.8408, 187.946, -19.77, 0.49", "-85.3902, 188.8, -19.9787, 0.49", "-85.485, 188.977, -20.0352, 0.49", "-86.2619, 190.525, -20.5676, 0.49", "-86.3012, 190.616, -20.5987, 0.49", "-87.2647, 193.291, -21.4806, 0.49", "-87.5705, 194.33, -22.0435, 0.49", "-87.9358, 195.432, -22.7557, 0.49", "-88.2354, 196.261, -23.304, 0.49", "-88.7897, 197.526, -24.1482, 0.49", "-88.8932, 197.746, -24.352, 0.49", "-90.4811, 200.731, -27.5688, 0.49", "-91.5548, 202.603, -29.7967, 0.49", "-92.1778, 203.722, -31.1259, 0.49", "-92.8361, 205.04, -32.5498, 0.49", "-94.7145, 208.934, -36.3097, 0.49", "-95.6466, 210.896, -37.854, 0.49", "-96.1293, 211.92, -38.428, 0.49", "-96.8326, 213.524, -39.1977, 0.49", "-97.7592, 215.55, -39.8561, 0.49", "-98.225, 216.602, -40.0071, 0.49", "-98.7628, 217.828, -40.0148, 0.49", "-99.1756, 218.705, -40.0196, 0.49", "-100.065, 220.443, -40.027, 0.49", "-100.969, 222.201, -40.0387, 0.49", "-101.721, 223.869, -40.0549, 0.49", "-102.219, 225.373, -40.0755, 0.49", "-103.023, 228.605, -40.1281, 0.49", "-103.384, 230.41, -40.1626, 0.49", "-104.114, 234.837, -40.3649, 0.49", "-104.492, 237.99, -40.5862, 0.49", "-104.802, 241.438, -40.9087, 0.49", "-104.849, 242.493, -41.0308, 0.49", "-104.81, 243.383, -41.154, 0.49", "-104.641, 245.28, -41.5038, 0.37", "-104.536, 246.305, -41.8011, 0.37", "-104.41, 248.497, -42.6154, 0.37", "-104.441, 250.127, -43.2996, 0.37", "-104.54, 252.065, -44.2218, 0.37", "-104.694, 253.707, -45.0632, 0.37", "-104.994, 255.821, -46.2514, 0.37", "-105.136, 256.612, -46.7287, 0.37", "-105.914, 260.473, -49.11, 0.37", "-106.681, 263.862, -51.1917, 0.37", "-107.684, 268.0, -53.927, 0.37", "-108.447, 271.451, -56.1952, 0.37", "-108.657, 272.568, -56.9209, 0.37", "-108.931, 274.326, -58.0688, 0.37", "-108.991, 274.869, -58.4066, 0.37", "-109.179, 278.546, -60.3134, 0.37", "-109.25, 281.471, -61.4986, 0.37", "-109.27, 282.349, -61.7475, 0.37", "-109.37, 283.963, -62.1132, 0.37", "-109.619, 286.481, -62.6045, 0.37", "-109.812, 288.059, -63.0394, 0.37", "-110.198, 290.541, -63.82, 0.37", "-110.576, 292.555, -64.6967, 0.37", "-110.96, 294.635, -65.9021, 0.37", "-111.101, 295.543, -66.6037, 0.37", "-111.636, 299.735, -70.5559, 0.37", "-111.806, 301.445, -72.8367, 0.37", "-111.855, 302.447, -74.454, 0.37", "-111.902, 303.834, -76.9265, 0.37", "-111.864, 305.41, -79.7293, 0.37", "-111.866, 305.774, -80.2632, 0.37", "-111.978, 310.38, -85.4754, 0.37", "-112.009, 311.284, -86.4185, 0.37", "-112.102, 312.348, -87.3257, 0.37", "-112.302, 313.997, -88.2127, 0.37", "-112.9, 318.192, -89.7112, 0.37", "-113.196, 320.455, -90.2966, 0.37", "-113.427, 321.743, -90.5462, 0.37", "-113.81, 323.489, -91.1665, 0.37", "-114.509, 326.438, -92.5896, 0.37", "-114.893, 327.974, -93.5002, 0.37", "-115.628, 330.687, -95.3755, 0.37", "-116.945, 334.492, -99.1143, 0.37", "-118.286, 337.664, -104.303, 0.37", "-118.492, 338.147, -105.324, 0.37", "-118.643, 338.503, -106.212, 0.37", "-118.983, 339.431, -108.681, 0.37", "-120.0, 342.68, -117.738, 0.37", "-120.665, 346.466, -127.619, 0.37", "-120.761, 347.25, -129.377, 0.37", "-120.834, 348.009, -130.975, 0.37", "-120.895, 348.947, -132.843, 0.37", "-120.91, 350.173, -135.084, 0.37", "-120.947, 354.073, -140.716, 0.37", "-121.027, 356.041, -143.285, 0.37", "-121.123, 357.078, -144.739, 0.37", "-121.528, 359.184, -147.747, 0.37", "-121.879, 360.301, -149.401, 0.37", "-122.091, 360.705, -149.947, 0.37", "-122.978, 361.901, -151.279, 0.37", "-123.74, 362.817, -152.163, 0.37", "-125.866, 365.18, -154.1, 0.37", "-127.945, 367.729, -155.43, 0.37", "-130.656, 371.647, -156.799, 0.37", "-131.234, 372.715, -157.038, 0.37", "-131.388, 373.094, -157.077, 0.37", "-132.235, 376.057, -157.122, 0.37", "-133.447, 382.181, -156.629, 0.37", "-133.898, 384.731, -156.912, 0.37", "-134.297, 387.099, -157.754, 0.37", "-134.662, 389.001, -158.78, 0.37", "-135.218, 391.467, -160.586, 0.37", "-135.866, 394.071, -162.841, 0.37", "-138.727, 403.182, -171.956, 0.37", "-139.826, 406.169, -175.212, 0.37", "-140.422, 407.746, -177.068, 0.37", "-141.947, 411.919, -182.356, 0.37", "-142.253, 412.8, -183.554, 0.37", "-142.757, 414.29, -185.608, 0.37", "-143.449, 416.251, -187.954, 0.37", "-144.536, 419.34, -191.589, 0.37", "-145.326, 421.695, -194.403, 0.37", "-145.48, 422.231, -195.056, 0.37", "-145.746, 423.443, -196.641, 0.37", "-145.779, 423.991, -197.372, 0.37", "-145.776, 424.077, -197.474, 0.37" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-40.4818, 79.4523, -2.9904, 0.37", "-48.3039, 87.3317, 1.62396, 0.37", "-49.89, 88.989, 2.30372, 0.37", "-52.465, 91.7197, 3.02789, 0.37", "-54.3339, 93.7011, 3.43945, 0.37", "-56.1096, 95.5833, 3.71707, 0.37", "-57.8546, 97.4532, 3.89217, 0.37", "-57.9272, 97.5432, 3.87637, 0.37", "-59.7575, 99.6433, 3.57437, 0.37", "-59.8356, 99.7294, 3.56721, 0.37", "-61.7635, 101.847, 3.38497, 0.37", "-63.9085, 104.522, 3.21873, 0.37", "-65.622, 106.916, 3.11433, 0.37", "-65.6944, 107.039, 3.10713, 0.37", "-66.454, 108.647, 2.99268, 0.37", "-66.5004, 108.769, 2.98264, 0.37", "-67.0788, 110.982, 2.77607, 0.37", "-67.1352, 111.252, 2.74626, 0.37", "-68.2545, 115.306, 2.16589, 0.37", "-68.3032, 115.438, 2.14365, 0.37", "-68.9944, 116.737, 1.87441, 0.37", "-69.0838, 116.856, 1.84493, 0.37", "-71.0035, 118.586, 1.31575, 0.49", "-72.9289, 120.08, 0.889247, 0.49", "-73.1625, 120.271, 0.837176, 0.49", "-74.4717, 121.546, 0.577508, 0.49", "-74.6786, 121.773, 0.539371, 0.49", "-76.0059, 123.319, 0.316398, 0.49", "-77.6394, 125.411, 0.223332, 0.49", "-79.8547, 128.457, 0.283199, 0.49", "-81.1935, 130.391, 0.406713, 0.49", "-81.27, 130.51, 0.419241, 0.49", "-82.7639, 132.875, 0.718887, 0.49", "-84.6399, 135.878, 1.17004, 0.49", "-84.7486, 136.052, 1.19799, 0.49", "-86.0739, 138.088, 1.48634, 0.49", "-87.2907, 139.859, 1.66893, 0.49", "-88.8641, 141.896, 1.81126, 0.49", "-89.9927, 143.255, 1.86206, 0.49", "-91.6368, 145.161, 1.87255, 0.49", "-93.9429, 147.755, 1.8994, 0.49", "-96.7343, 150.779, 1.94151, 0.49", "-99.881, 154.139, 2.01169, 0.49", "-101.018, 155.375, 2.04429, 0.49", "-102.584, 157.104, 2.07873, 0.49", "-102.791, 157.352, 2.07573, 0.49", "-103.95, 159.061, 2.00191, 0.49", "-104.002, 159.165, 1.99139, 0.49", "-105.106, 161.818, 1.65857, 0.49", "-105.321, 162.23, 1.59046, 0.49", "-106.499, 164.109, 1.22526, 0.49", "-106.604, 164.285, 1.1945, 0.49", "-108.13, 166.998, 0.795125, 0.49", "-108.197, 167.123, 0.781663, 0.49", "-110.071, 170.797, 0.548127, 0.49", "-110.608, 171.86, 0.513931, 0.49", "-111.715, 174.41, 0.358434, 0.49", "-112.442, 176.453, 0.184383, 0.49", "-113.337, 179.792, -0.124743, 0.49", "-113.979, 182.852, -0.418081, 0.49", "-113.993, 182.97, -0.428652, 0.49", "-114.452, 188.342, -0.878686, 0.24", "-114.651, 191.766, -1.15697, 0.24", "-114.662, 193.918, -1.32975, 0.24", "-114.652, 194.121, -1.34667, 0.24", "-114.469, 196.519, -1.65935, 0.24", "-114.285, 198.93, -2.03602, 0.24", "-114.261, 199.237, -2.08247, 0.24", "-114.047, 201.974, -2.62802, 0.24", "-114.021, 202.434, -2.73347, 0.24", "-113.809, 208.218, -4.06924, 0.24", "-113.808, 208.334, -4.09506, 0.24", "-113.793, 211.321, -4.71774, 0.24", "-113.79, 212.713, -4.97891, 0.24", "-113.792, 212.946, -5.01476, 0.24", "-113.877, 215.239, -5.27284, 0.24", "-114.046, 217.776, -5.54961, 0.24", "-114.08, 218.125, -5.6098, 0.24", "-114.409, 220.671, -6.2393, 0.24", "-114.491, 221.219, -6.37858, 0.24", "-114.773, 222.955, -6.83099, 0.24", "-115.12, 225.114, -7.34564, 0.24", "-115.543, 227.706, -7.89833, 0.24", "-115.603, 228.091, -7.96341, 0.24", "-116.671, 234.752, -8.83819, 0.24", "-116.69, 234.893, -8.85686, 0.24", "-117.091, 238.224, -9.26672, 0.24", "-117.12, 238.424, -9.28653, 0.24", "-117.326, 239.822, -9.43801, 0.24", "-117.347, 239.942, -9.45193, 0.24", "-118.051, 243.143, -9.82183, 0.24", "-118.113, 243.423, -9.84876, 0.24", "-118.84, 246.644, -10.1226, 0.24", "-119.046, 249.156, -10.5909, 0.24", "-119.047, 249.273, -10.618, 0.24", "-118.941, 251.039, -11.0127, 0.24", "-118.663, 253.33, -11.5043, 0.24", "-118.588, 253.875, -11.6222, 0.24", "-117.02, 262.669, -13.7207, 0.24", "-116.996, 262.796, -13.7535, 0.24", "-116.353, 266.068, -14.607, 0.24", "-116.296, 266.337, -14.6786, 0.24", "-115.689, 269.156, -15.3648, 0.24", "-115.373, 270.702, -15.634, 0.24", "-115.357, 270.844, -15.6287, 0.24", "-115.287, 272.332, -15.5791, 0.24", "-115.285, 272.955, -15.5606, 0.24", "-115.38, 274.942, -15.4762, 0.24", "-115.4, 275.145, -15.4637, 0.24", "-116.004, 279.034, -15.1654, 0.24", "-116.316, 280.511, -15.0708, 0.24", "-116.397, 280.812, -15.0556, 0.24", "-116.946, 282.747, -14.9607, 0.24", "-117.387, 284.272, -14.8842, 0.24", "-117.417, 284.387, -14.8769, 0.24", "-117.792, 286.131, -14.7321, 0.24", "-117.815, 286.271, -14.719, 0.24", "-118.094, 288.373, -14.5058, 0.24", "-118.1, 288.506, -14.4897, 0.24", "-118.089, 290.759, -14.1889, 0.24", "-118.081, 290.952, -14.1616, 0.24", "-117.958, 292.325, -14.0489, 0.24", "-117.933, 292.61, -14.0364, 0.24", "-117.661, 295.104, -13.9679, 0.24", "-117.406, 297.189, -13.9802, 0.24", "-117.39, 297.321, -13.9832, 0.24", "-116.849, 301.958, -14.123, 0.37", "-116.619, 304.107, -14.2015, 0.37", "-116.429, 306.037, -14.2798, 0.37", "-116.079, 310.231, -14.4436, 0.37", "-115.9, 312.655, -14.5144, 0.37", "-115.894, 312.786, -14.5153, 0.37", "-115.918, 314.29, -14.4661, 0.37", "-115.939, 314.615, -14.4546, 0.37", "-116.358, 317.414, -14.3206, 0.37", "-116.388, 317.554, -14.3089, 0.37", "-116.762, 319.336, -14.1574, 0.37", "-117.183, 321.5, -13.9658, 0.37", "-117.204, 321.632, -13.9606, 0.37", "-117.567, 323.852, -13.9821, 0.37", "-117.591, 323.99, -14.0044, 0.37", "-117.866, 325.805, -14.6013, 0.37", "-117.901, 326.062, -14.7176, 0.37", "-118.291, 328.563, -15.9516, 0.37", "-118.736, 331.058, -17.2314, 0.37", "-119.27, 334.105, -18.7508, 0.37", "-119.788, 337.014, -20.1284, 0.37", "-119.836, 337.287, -20.2382, 0.37", "-120.463, 340.596, -21.2318, 0.37", "-120.49, 340.734, -21.2582, 0.37", "-120.963, 343.469, -21.4632, 0.37", "-120.986, 343.601, -21.4581, 0.37", "-121.68, 347.241, -21.132, 0.37", "-122.178, 349.809, -20.9041, 0.37", "-122.206, 350.001, -20.885, 0.37", "-122.587, 352.921, -20.5809, 0.37", "-122.602, 353.064, -20.5651, 0.37", "-122.772, 355.345, -20.2967, 0.37", "-122.778, 355.489, -20.2786, 0.37", "-122.856, 358.222, -19.9266, 0.37", "-122.881, 358.535, -19.8902, 0.37", "-123.239, 361.646, -19.5548, 0.37", "-123.488, 363.613, -19.3482, 0.37", "-123.517, 363.899, -19.3164, 0.37", "-123.67, 365.333, -19.1589, 0.37", "-124.028, 367.993, -18.8844, 0.37", "-124.25, 370.049, -18.6592, 0.37", "-124.273, 370.362, -18.6212, 0.37", "-124.356, 372.595, -18.3236, 0.37", "-124.351, 372.739, -18.3197, 0.37", "-124.237, 374.909, -18.4522, 0.37", "-124.217, 375.349, -18.515, 0.37", "-124.186, 378.287, -19.07, 0.37", "-124.189, 378.555, -19.1271, 0.37", "-124.278, 383.501, -20.2218, 0.37", "-124.3, 385.374, -20.577, 0.37", "-124.298, 385.515, -20.5953, 0.37", "-124.313, 387.665, -20.7084, 0.37", "-124.32, 387.981, -20.7007, 0.37", "-124.408, 390.199, -20.4362, 0.37", "-124.571, 392.776, -19.8502, 0.37", "-124.644, 394.671, -19.4117, 0.37", "-124.735, 397.515, -18.9053, 0.37", "-124.743, 397.819, -18.8634, 0.37", "-124.814, 400.593, -18.5999, 0.37", "-124.819, 401.027, -18.5784, 0.37", "-124.741, 403.331, -18.5508, 0.37", "-124.551, 406.063, -18.6036, 0.37", "-124.532, 406.205, -18.6043, 0.37", "-124.201, 407.85, -18.8174, 0.37", "-123.751, 409.69, -19.1852, 0.37", "-123.421, 411.054, -19.4594, 0.37", "-123.126, 412.244, -19.7022, 0.37", "-122.757, 413.83, -19.9543, 0.37", "-121.301, 420.343, -20.9223, 0.37", "-120.878, 422.815, -21.2653, 0.37", "-120.472, 426.067, -21.6844, 0.37", "-120.46, 426.21, -21.6967, 0.37", "-120.207, 430.794, -21.8765, 0.37", "-120.201, 431.101, -21.8643, 0.37", "-120.238, 434.854, -21.3499, 0.37", "-120.233, 434.987, -21.3464, 0.37", "-119.888, 439.564, -21.5861, 0.37", "-119.864, 439.876, -21.6193, 0.37", "-119.445, 444.838, -22.4171, 0.37", "-119.342, 446.001, -22.6273, 0.37", "-118.407, 453.272, -24.0194, 0.37", "-118.383, 453.461, -24.057, 0.37", "-117.956, 456.843, -24.7684, 0.37", "-117.93, 457.039, -24.8048, 0.37", "-117.616, 459.319, -25.1362, 0.37", "-117.295, 462.06, -25.1291, 0.37", "-117.273, 462.489, -25.0118, 0.37", "-117.303, 464.118, -24.4972, 0.37", "-117.321, 464.377, -24.3988, 0.37", "-117.547, 465.689, -23.8933, 0.37", "-118.063, 467.144, -23.0341, 0.37", "-118.896, 468.941, -22.0765, 0.37", "-119.917, 471.076, -21.08, 0.37", "-119.959, 471.181, -21.0434, 0.37", "-120.548, 473.051, -20.5543, 0.37", "-120.937, 477.43, -20.7029, 0.37", "-120.511, 481.752, -21.8316, 0.37", "-120.409, 482.304, -22.0527, 0.37", "-119.898, 484.68, -23.2725, 0.37", "-119.855, 484.949, -23.4141, 0.37", "-119.292, 489.01, -25.7291, 0.37", "-119.277, 489.132, -25.7944, 0.37", "-119.078, 491.403, -26.6601, 0.37", "-119.067, 491.585, -26.723, 0.37", "-118.974, 494.301, -27.5411, 0.37", "-118.968, 494.529, -27.5955, 0.37", "-118.942, 496.902, -27.9221, 0.37", "-118.914, 500.24, -28.2186, 0.37", "-118.901, 500.648, -28.2393, 0.37", "-118.874, 502.522, -28.2475, 0.37", "-118.875, 502.641, -28.2418, 0.37", "-118.9, 504.505, -28.0428, 0.37", "-119.006, 507.099, -27.5837, 0.37", "-119.014, 507.239, -27.5487, 0.37", "-119.081, 508.999, -27.1172, 0.37", "-119.099, 509.299, -27.0528, 0.37", "-119.301, 512.092, -26.5517, 0.37", "-119.304, 512.21, -26.5352, 0.37", "-119.297, 514.46, -26.3456, 0.37", "-119.294, 514.604, -26.3472, 0.37", "-119.21, 517.678, -26.587, 0.37", "-119.207, 517.796, -26.599, 0.37", "-119.143, 520.111, -26.9034, 0.37", "-119.128, 520.491, -26.953, 0.37", "-118.806, 525.663, -27.6151, 0.37", "-118.793, 525.847, -27.6346, 0.37", "-118.546, 528.826, -27.9171, 0.37", "-118.541, 528.942, -27.9417, 0.37", "-118.549, 530.533, -28.4512, 0.37", "-118.557, 530.923, -28.5863, 0.37", "-118.667, 533.373, -29.6906, 0.37", "-118.676, 533.608, -29.8208, 0.37", "-118.827, 538.277, -33.4832, 0.37", "-118.83, 538.364, -33.5604, 0.37" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 25
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-21.8563, -64.9521, 26.1324, 0.24", "-19.3267, -65.5019, 24.5851, 0.24", "-17.9552, -65.8, 23.7461, 0.24", "-17.8664, -65.8193, 23.6918, 0.24" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-21.8563, -64.9521, 26.1324, 0.24", "-19.6502, -70.2916, 27.511, 0.24", "-18.6803, -72.6391, 28.1171, 0.24", "-17.4194, -75.691, 28.9051, 0.24", "-17.3699, -75.8108, 28.936, 0.24" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-35.7101, 141.034, 8.90931, 0.85", "-37.5456, 144.827, 0.689442, 0.85", "-37.8097, 145.524, -0.463339, 0.85", "-37.8681, 145.7, -0.709332, 0.85", "-38.167, 146.625, -1.70142, 0.85", "-38.252, 146.896, -1.92212, 0.85", "-38.6953, 148.493, -2.9743, 0.85", "-39.1506, 150.71, -3.64769, 0.85", "-39.1821, 150.833, -3.68599, 0.85", "-39.7275, 152.733, -4.27002, 0.85", "-41.2415, 156.658, -5.97336, 0.85", "-41.8741, 158.174, -6.65251, 0.85", "-41.9112, 158.26, -6.69149, 0.85", "-42.4628, 159.538, -7.30069, 0.85", "-42.4991, 159.623, -7.34055, 0.85", "-45.3185, 165.974, -10.1672, 0.85", "-46.398, 168.238, -11.0333, 0.85", "-46.4967, 168.431, -11.1029, 0.85", "-47.1006, 169.616, -11.4589, 0.85", "-47.1408, 169.697, -11.4782, 0.85", "-47.9442, 171.551, -12.1463, 0.85", "-47.9753, 171.639, -12.1875, 0.85", "-48.4545, 173.043, -13.0926, 0.85", "-48.8558, 174.264, -13.9625, 0.85", "-48.9177, 174.506, -14.1418, 0.85", "-50.083, 180.895, -18.9714, 0.85", "-50.1012, 181.091, -19.1262, 0.85", "-50.1536, 182.577, -20.3103, 0.85", "-50.1542, 182.659, -20.3699, 0.85", "-50.119, 184.789, -21.6034, 0.85", "-50.107, 185.254, -21.783, 0.85", "-50.0627, 186.056, -21.873, 0.85", "-50.0515, 186.254, -21.8939, 0.85", "-49.7592, 190.886, -22.5474, 0.85", "-49.6209, 193.09, -22.8643, 0.85", "-49.6149, 193.216, -22.8828, 0.85", "-49.5691, 194.511, -23.0453, 0.85", "-49.5652, 194.614, -23.056, 0.85", "-49.4214, 197.335, -23.2505, 0.85", "-49.2027, 199.828, -23.3378, 0.85", "-49.1979, 199.932, -23.3393, 0.85", "-49.0994, 201.858, -23.3264, 0.85", "-49.0891, 202.263, -23.3932, 0.85", "-49.1606, 204.201, -23.9598, 0.85", "-49.2165, 204.651, -24.1366, 0.85", "-49.4305, 205.958, -24.7906, 0.85", "-49.5737, 206.893, -25.287, 0.85", "-50.2972, 212.096, -28.325, 0.85", "-50.4674, 213.503, -29.1419, 0.85", "-50.6453, 215.068, -30.0837, 0.85", "-50.7035, 215.576, -30.3443, 0.85", "-50.8882, 216.787, -30.7331, 0.85", "-50.9334, 217.09, -30.7656, 0.85", "-51.0147, 218.724, -30.563, 0.85", "-51.0169, 218.856, -30.5475, 0.85", "-51.0804, 220.876, -30.3007, 0.85", "-51.3868, 223.761, -29.9054, 0.85", "-51.4338, 224.055, -29.8624, 0.85", "-51.8442, 225.881, -29.858, 0.85", "-52.473, 227.972, -30.1441, 0.73", "-52.5261, 228.115, -30.1799, 0.73", "-53.3847, 230.309, -30.9302, 0.73", "-53.4138, 230.382, -30.959, 0.73", "-55.102, 234.702, -32.5701, 0.73", "-55.214, 234.981, -32.676, 0.73", "-56.072, 237.431, -33.5774, 0.73", "-56.6626, 239.343, -34.1865, 0.73", "-56.7829, 239.806, -34.288, 0.73", "-57.0832, 241.07, -34.4094, 0.73", "-57.1051, 241.168, -34.42, 0.73", "-57.3662, 242.294, -34.7308, 0.73", "-57.4339, 242.573, -34.8885, 0.73", "-57.8287, 244.287, -35.9727, 0.73", "-57.9161, 244.7, -36.2437, 0.73", "-58.6179, 248.596, -39.1978, 0.73", "-58.6399, 248.75, -39.3148, 0.73", "-59.0437, 252.897, -42.2719, 0.73", "-59.1528, 254.473, -43.5825, 0.73", "-59.1571, 254.579, -43.6785, 0.73", "-59.2414, 259.154, -47.8203, 0.73", "-59.2391, 260.808, -49.2658, 0.73", "-59.2379, 262.905, -51.0907, 0.73", "-59.2691, 269.325, -56.5215, 0.73", "-59.2727, 269.447, -56.6243, 0.73", "-59.4009, 271.15, -57.9586, 0.73", "-59.5938, 272.689, -59.043, 0.73", "-59.6267, 272.87, -59.1669, 0.73", "-60.0179, 274.436, -60.0954, 0.73", "-60.0732, 274.633, -60.1698, 0.73", "-61.2886, 278.636, -61.7761, 0.73", "-61.3457, 278.808, -61.8526, 0.73", "-61.7406, 280.137, -62.3245, 0.73", "-62.449, 282.789, -63.0746, 0.73", "-62.4739, 282.887, -63.0942, 0.73", "-63.0975, 285.494, -63.3769, 0.73", "-63.1222, 285.631, -63.3756, 0.73", "-63.8668, 290.597, -63.1702, 0.73", "-63.8809, 290.742, -63.1583, 0.73", "-63.9373, 292.308, -62.9398, 0.73", "-63.9328, 292.448, -62.9387, 0.73", "-63.6717, 294.561, -63.2242, 0.73", "-63.6534, 294.659, -63.2469, 0.73", "-63.3098, 295.957, -63.7036, 0.73", "-63.2916, 296.053, -63.7315, 0.73", "-62.5201, 300.852, -65.0354, 0.73", "-62.4833, 301.14, -65.0985, 0.73", "-62.247, 303.69, -65.5648, 0.73", "-62.2386, 303.79, -65.5779, 0.73", "-61.9397, 307.921, -65.9111, 0.61", "-61.9219, 308.245, -65.9124, 0.61", "-61.7424, 311.035, -65.6396, 0.61", "-61.7337, 311.137, -65.6224, 0.61", "-61.5887, 313.363, -65.6959, 0.61", "-61.5821, 313.488, -65.7202, 0.61", "-61.4397, 316.075, -66.5383, 0.61", "-61.3554, 318.197, -67.2623, 0.61", "-61.2842, 321.123, -68.3801, 0.61", "-61.0856, 330.193, -71.8098, 0.61", "-61.0249, 333.498, -73.1141, 0.49", "-61.0188, 333.802, -73.244, 0.49", "-60.9683, 336.133, -74.3476, 0.49", "-60.9684, 336.226, -74.3901, 0.49", "-60.9729, 338.259, -75.2116, 0.49", "-60.9715, 338.36, -75.2337, 0.49", "-61.0521, 342.87, -76.6031, 0.49", "-61.0578, 342.966, -76.6338, 0.49", "-61.1889, 345.047, -77.2489, 0.49", "-61.2341, 345.837, -77.4611, 0.49", "-61.3791, 348.665, -78.0853, 0.49", "-61.3828, 348.749, -78.0997, 0.49", "-61.5284, 352.45, -78.5054, 0.49", "-61.625, 355.827, -78.8552, 0.49", "-61.6283, 356.026, -78.8766, 0.49", "-61.7571, 359.841, -79.1331, 0.49", "-61.7668, 360.068, -79.1288, 0.49", "-61.7725, 360.171, -79.1229, 0.49", "-61.9942, 363.607, -79.0676, 0.49", "-62.0294, 364.118, -79.0802, 0.49", "-62.2913, 368.79, -79.2926, 0.49", "-62.3913, 371.429, -79.5237, 0.49", "-62.3989, 371.767, -79.5622, 0.49", "-62.4353, 376.594, -80.3824, 0.49", "-62.4032, 379.433, -81.0182, 0.49", "-62.4016, 379.533, -81.0431, 0.49", "-62.303, 383.113, -82.1374, 0.49", "-62.3143, 383.413, -82.2477, 0.49", "-62.6487, 387.26, -83.6642, 0.49", "-62.6641, 387.357, -83.6954, 0.49", "-63.2194, 389.949, -84.5898, 0.49", "-63.2424, 390.045, -84.6193, 0.49", "-64.708, 394.602, -86.6255, 0.49", "-64.7636, 394.769, -86.708, 0.49", "-65.7472, 397.672, -88.2562, 0.49", "-65.7728, 397.756, -88.3076, 0.49", "-66.4267, 400.076, -89.9014, 0.49", "-68.0745, 406.639, -94.3811, 0.49", "-68.4677, 408.509, -95.603, 0.49", "-68.5335, 408.84, -95.8199, 0.49", "-69.1827, 412.865, -98.6961, 0.49", "-69.1918, 412.934, -98.7453, 0.49", "-69.3334, 414.684, -99.9236, 0.49", "-69.3618, 416.439, -100.87, 0.49", "-69.3655, 416.656, -101.057, 0.49", "-69.4372, 421.251, -105.579, 0.49", "-69.4379, 421.319, -105.653, 0.49", "-69.4544, 422.866, -107.533, 0.49", "-69.4556, 423.255, -108.049, 0.49", "-69.4142, 430.323, -117.882, 0.49", "-69.3873, 431.228, -119.163, 0.49", "-69.3743, 431.46, -119.502, 0.49", "-69.178, 433.815, -123.285, 0.49", "-69.1292, 434.242, -124.041, 0.49", "-69.0734, 434.517, -124.544, 0.49", "-68.8843, 435.168, -125.864, 0.49", "-68.857, 435.257, -126.065, 0.49", "-67.9389, 438.42, -133.1, 0.49", "-67.9225, 438.497, -133.302, 0.49", "-67.6716, 439.984, -137.643, 0.49", "-67.4296, 442.058, -144.096, 0.49", "-67.4256, 442.121, -144.297, 0.49", "-67.4034, 442.584, -145.801, 0.49", "-67.3126, 445.68, -156.335, 0.49", "-67.3197, 445.914, -157.198, 0.49", "-67.3238, 445.934, -157.288, 0.49" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-35.7101, 141.034, 8.90931, 0.49", "-36.1629, 142.422, 9.16548, 0.49", "-36.7438, 145.1, 9.62465, 0.49", "-37.4635, 149.334, 10.3269, 0.37", "-37.4736, 149.42, 10.3403, 0.37", "-37.603, 150.849, 10.5593, 0.37", "-37.6903, 152.049, 10.7399, 0.37", "-37.7805, 155.682, 11.2466, 0.49", "-37.7746, 155.779, 11.2591, 0.49", "-37.4777, 157.567, 11.4707, 0.49", "-37.4589, 157.669, 11.483, 0.49", "-37.2194, 159.009, 11.6426, 0.49", "-37.2083, 159.105, 11.6547, 0.49", "-37.1806, 160.214, 11.807, 0.49", "-37.163, 160.562, 11.9359, 0.49", "-37.118, 161.192, 12.318, 0.49", "-36.9336, 162.471, 13.2254, 0.49", "-36.9145, 162.546, 13.2806, 0.49", "-36.5747, 163.664, 14.0683, 0.49", "-35.5376, 166.68, 16.1828, 0.49", "-35.5147, 166.749, 16.2281, 0.49", "-34.9495, 168.411, 17.227, 0.49", "-34.4051, 169.992, 18.0455, 0.49", "-34.1005, 170.987, 18.4647, 0.49", "-34.0773, 171.077, 18.4899, 0.49", "-33.7979, 172.632, 18.7056, 0.49", "-33.6831, 173.536, 18.8307, 0.49", "-33.5958, 174.851, 19.0166, 0.49", "-33.5924, 175.146, 19.0601, 0.49", "-33.5552, 177.054, 19.3394, 0.49", "-33.5226, 178.03, 19.4809, 0.49", "-33.4379, 179.759, 19.5995, 0.49", "-33.4355, 179.962, 19.6024, 0.49", "-33.4828, 181.157, 19.5857, 0.49", "-33.5794, 182.573, 19.5383, 0.49", "-33.5923, 182.678, 19.5339, 0.49", "-33.9599, 185.305, 19.4598, 0.49", "-34.2182, 186.894, 19.4508, 0.49", "-34.461, 188.699, 19.4363, 0.49", "-34.4724, 188.796, 19.4356, 0.49", "-34.5957, 190.598, 19.4519, 0.49", "-34.6159, 192.504, 19.5255, 0.49", "-34.5357, 194.156, 19.6383, 0.49", "-34.291, 196.989, 19.8268, 0.49", "-34.2791, 197.093, 19.8337, 0.49", "-33.9672, 200.039, 20.0524, 0.49", "-33.7487, 202.533, 20.2661, 0.49", "-33.7176, 203.275, 20.3433, 0.49", "-33.7289, 206.084, 20.7032, 0.49", "-33.749, 206.482, 20.7668, 0.49", "-33.8676, 208.503, 21.0894, 0.49", "-34.0304, 210.512, 21.4167, 0.49", "-34.1271, 212.132, 21.677, 0.49", "-34.134, 212.338, 21.7099, 0.49", "-34.1164, 214.172, 21.993, 0.49", "-34.0126, 216.778, 22.3892, 0.49", "-34.0024, 216.948, 22.4148, 0.49", "-33.9032, 218.369, 22.6273, 0.49", "-33.893, 218.56, 22.6561, 0.49", "-33.859, 220.564, 22.8143, 0.49", "-33.8593, 220.667, 22.8158, 0.49", "-33.8982, 222.232, 22.7655, 0.49", "-33.9939, 225.169, 22.6093, 0.49", "-33.9973, 225.266, 22.6017, 0.49", "-34.0335, 228.005, 22.3683, 0.49", "-34.019, 230.119, 22.1014, 0.49", "-34.0148, 230.346, 22.0677, 0.49", "-33.9751, 231.206, 21.9303, 0.49", "-33.971, 231.339, 21.9094, 0.49", "-33.909, 233.457, 21.6899, 0.49", "-33.8382, 235.448, 21.6263, 0.49", "-33.8355, 235.535, 21.624, 0.49", "-33.7458, 237.465, 21.594, 0.49", "-33.7307, 237.675, 21.595, 0.49", "-33.6253, 239.12, 21.6588, 0.49", "-33.587, 239.634, 21.7027, 0.49", "-33.4255, 241.167, 21.9086, 0.49", "-33.4135, 241.269, 21.9225, 0.49", "-33.1673, 242.858, 22.1322, 0.49", "-32.8966, 244.637, 22.2645, 0.49", "-32.8695, 244.828, 22.2685, 0.49", "-32.72, 246.356, 22.1683, 0.49", "-32.7069, 246.546, 22.14, 0.49", "-32.6067, 247.658, 21.9179, 0.49", "-32.3983, 249.544, 21.4625, 0.49", "-32.2733, 251.006, 21.1585, 0.49", "-32.2744, 252.387, 20.996, 0.49", "-32.2937, 252.759, 20.9722, 0.49", "-32.462, 254.942, 20.971, 0.49", "-32.5732, 256.255, 21.0455, 0.49", "-32.755, 258.874, 21.3223, 0.49", "-32.9467, 262.034, 21.7188, 0.49", "-32.9645, 262.356, 21.7664, 0.49", "-33.1132, 265.213, 22.188, 0.49", "-33.1406, 267.369, 22.4972, 0.49", "-33.1153, 267.788, 22.5541, 0.49", "-32.906, 269.192, 22.6077, 0.49", "-32.8749, 269.337, 22.6008, 0.49", "-32.3243, 272.032, 22.3188, 0.49", "-31.8194, 274.541, 21.887, 0.49", "-31.7968, 274.684, 21.8588, 0.49", "-31.3289, 278.608, 21.0584, 0.49", "-31.3183, 278.701, 21.0407, 0.49", "-31.1267, 280.587, 20.7415, 0.49", "-31.1176, 280.699, 20.7264, 0.49", "-30.9559, 283.039, 20.5675, 0.49", "-30.9414, 283.183, 20.5691, 0.49", "-30.5289, 286.19, 20.6746, 0.49", "-30.3618, 287.31, 20.6354, 0.49", "-30.3456, 287.412, 20.6257, 0.49", "-30.1257, 288.91, 20.4253, 0.49", "-30.1122, 289.004, 20.4104, 0.49", "-29.6939, 292.304, 19.8647, 0.49", "-29.6557, 292.723, 19.8014, 0.49", "-29.4653, 294.684, 19.5633, 0.49", "-29.446, 294.883, 19.549, 0.49", "-29.1899, 297.416, 19.4924, 0.49", "-29.1784, 297.513, 19.4963, 0.49", "-28.9157, 299.826, 19.8118, 0.49", "-28.8926, 300.052, 19.8423, 0.49", "-28.7847, 301.776, 20.0831, 0.49", "-28.7795, 301.998, 20.1145, 0.49", "-28.8027, 303.008, 20.2599, 0.49", "-28.8763, 304.75, 20.5117, 0.49", "-28.8909, 304.97, 20.5261, 0.49", "-29.066, 307.062, 20.5442, 0.49", "-29.0783, 307.148, 20.5412, 0.49", "-29.2199, 307.953, 20.4899, 0.49", "-29.4174, 309.061, 20.397, 0.49", "-29.7589, 311.34, 20.1644, 0.49", "-29.7785, 311.531, 20.1487, 0.49", "-29.8924, 313.486, 20.0048, 0.49", "-29.8945, 313.729, 19.9963, 0.49", "-29.8264, 316.006, 19.9923, 0.49", "-29.811, 316.368, 20.0096, 0.49", "-29.7052, 318.804, 20.268, 0.49", "-29.6954, 319.124, 20.3036, 0.49", "-29.6356, 321.038, 20.524, 0.49", "-29.6425, 321.352, 20.5645, 0.49", "-29.8157, 323.439, 20.8595, 0.49", "-29.881, 323.943, 20.9346, 0.49", "-30.1744, 325.682, 21.1652, 0.49", "-30.209, 325.906, 21.1614, 0.49", "-30.4238, 327.485, 20.9524, 0.49", "-30.4305, 327.587, 20.9318, 0.49", "-30.4288, 329.103, 20.5586, 0.49", "-30.4, 330.016, 20.3161, 0.49", "-30.2164, 333.851, 19.1066, 0.49", "-30.2043, 334.056, 19.0378, 0.49", "-30.0892, 335.975, 18.4115, 0.49", "-30.0198, 337.38, 17.9864, 0.49", "-30.0074, 337.703, 17.9032, 0.49", "-29.92, 340.476, 17.4018, 0.49", "-29.9144, 340.617, 17.3886, 0.49", "-29.816, 343.018, 17.1731, 0.49", "-29.7918, 343.46, 17.1388, 0.49", "-29.6464, 345.224, 17.0082, 0.49", "-29.5839, 345.933, 16.9795, 0.49", "-29.4741, 347.052, 16.9872, 0.49", "-29.4387, 347.384, 16.9866, 0.49", "-29.2166, 348.882, 16.9652, 0.49", "-29.0725, 349.762, 16.9519, 0.49", "-28.4924, 353.023, 16.506, 0.49", "-28.266, 354.307, 16.2174, 0.49", "-28.2073, 354.647, 16.1196, 0.49", "-28.0393, 355.659, 15.7866, 0.49", "-28.025, 355.748, 15.7533, 0.49", "-27.4547, 359.228, 14.3553, 0.49", "-27.3511, 359.869, 14.0338, 0.49", "-27.2269, 360.886, 13.5272, 0.49", "-27.1877, 361.302, 13.3499, 0.49", "-27.1283, 362.113, 13.0649, 0.49", "-27.1176, 362.196, 13.0459, 0.49", "-26.8673, 363.38, 13.0311, 0.49", "-26.8041, 363.724, 12.8477, 0.49", "-26.6427, 364.693, 12.1208, 0.49", "-26.6177, 364.879, 12.0062, 0.49", "-26.5607, 365.719, 11.5688, 0.49", "-26.5303, 366.624, 11.1438, 0.49", "-26.4064, 373.091, 8.38816, 0.49", "-26.4047, 373.315, 8.3012, 0.49", "-26.3263, 378.081, 6.69104, 0.49", "-26.2708, 380.243, 6.07731, 0.49", "-26.2652, 380.465, 6.02224, 0.49", "-26.2034, 381.794, 5.79709, 0.49", "-26.1601, 382.255, 5.79931, 0.49", "-25.9071, 384.262, 5.69956, 0.49", "-25.8477, 384.57, 5.65985, 0.49", "-25.3433, 387.066, 5.36071, 0.49", "-25.2436, 387.669, 5.29974, 0.49", "-25.0118, 389.606, 5.17239, 0.49", "-24.9549, 390.215, 5.15252, 0.49", "-24.8405, 392.043, 5.18575, 0.49", "-24.7236, 393.819, 5.30988, 0.49", "-24.7172, 393.916, 5.32328, 0.49", "-24.6911, 396.088, 5.6325, 0.49", "-24.7011, 396.296, 5.64852, 0.49", "-24.9521, 398.101, 5.55637, 0.49", "-24.9736, 398.202, 5.53884, 0.49", "-25.2597, 399.404, 5.24549, 0.49", "-25.7057, 401.155, 4.75211, 0.49", "-26.2489, 403.215, 4.10303, 0.49", "-26.814, 405.479, 3.38259, 0.49", "-26.9239, 406.145, 3.16394, 0.49", "-27.1029, 408.289, 2.58198, 0.49", "-27.1054, 408.391, 2.55981, 0.49", "-27.0638, 409.601, 2.35859, 0.49", "-27.0545, 409.828, 2.32843, 0.49", "-26.946, 413.433, 1.85863, 0.49", "-26.9499, 414.946, 1.60008, 0.49", "-26.9938, 416.237, 1.22151, 0.49", "-27.0177, 416.64, 1.07528, 0.49", "-27.2138, 419.315, -0.015965, 0.49", "-27.3877, 421.281, -0.878967, 0.49", "-27.4274, 421.658, -1.0577, 0.49", "-27.7, 425.06, -2.76683, 0.49", "-27.7015, 425.154, -2.8098, 0.49", "-27.6398, 426.934, -3.50153, 0.49", "-27.6298, 427.034, -3.52947, 0.49", "-27.5207, 428.087, -3.84965, 0.49", "-27.5058, 428.288, -3.89932, 0.49", "-27.435, 430.181, -4.25521, 0.49", "-27.4318, 430.283, -4.27363, 0.49", "-27.3974, 431.841, -4.5599, 0.49", "-27.3139, 437.325, -5.41089, 0.49", "-27.2963, 439.18, -5.66653, 0.49", "-27.2788, 440.549, -5.81424, 0.49", "-27.2268, 443.086, -6.01619, 0.49", "-27.2157, 443.41, -6.03347, 0.49", "-27.0651, 446.303, -6.08304, 0.49", "-27.0363, 446.704, -6.06151, 0.49", "-26.8486, 448.832, -5.99015, 0.49", "-26.7771, 449.672, -5.96788, 0.49", "-26.5038, 453.795, -5.88292, 0.49", "-26.4985, 453.9, -5.87971, 0.49", "-26.3954, 456.56, -5.78561, 0.49", "-26.3907, 456.972, -5.7866, 0.49", "-26.4263, 459.392, -5.86829, 0.49", "-26.4329, 459.538, -5.8779, 0.49", "-26.6402, 462.898, -6.19648, 0.49", "-26.6467, 462.992, -6.20945, 0.49", "-26.872, 465.662, -6.73111, 0.49", "-26.885, 465.806, -6.76115, 0.49", "-27.0589, 467.309, -7.03992, 0.49", "-27.1278, 467.915, -7.12056, 0.49", "-27.2394, 469.648, -7.23421, 0.49", "-27.2417, 469.754, -7.23315, 0.49", "-27.2117, 471.585, -7.0554, 0.49", "-27.1223, 474.345, -6.74073, 0.49", "-27.0846, 475.21, -6.62224, 0.49", "-26.9986, 477.32, -6.3412, 0.49", "-26.974, 477.932, -6.33973, 0.49", "-26.8672, 480.135, -6.56592, 0.49", "-26.8635, 480.238, -6.5864, 0.49", "-26.8529, 481.372, -6.90555, 0.49", "-26.8705, 481.714, -7.01552, 0.49", "-27.3327, 486.142, -8.77696, 0.49", "-27.3791, 486.586, -9.01, 0.49", "-27.4983, 488.292, -9.90221, 0.49", "-27.4992, 488.387, -9.94297, 0.49", "-27.3996, 490.354, -10.5936, 0.49", "-27.2283, 491.545, -10.7302, 0.49", "-26.5257, 494.346, -10.2942, 0.49", "-25.2482, 499.085, -9.31831, 0.49", "-24.653, 501.079, -8.82406, 0.49", "-24.5919, 501.292, -8.76637, 0.49", "-23.9932, 503.441, -8.10359, 0.49", "-23.844, 504.088, -7.90506, 0.49", "-23.4311, 506.383, -7.27652, 0.49", "-23.3118, 507.283, -7.1556, 0.49", "-23.0304, 509.277, -6.8894, 0.49", "-22.9963, 509.501, -6.85988, 0.49", "-22.7509, 511.29, -6.62027, 0.49", "-22.6293, 512.194, -6.49914, 0.49", "-22.3427, 514.285, -6.21911, 0.49", "-22.2197, 515.142, -6.10496, 0.49", "-22.0861, 515.93, -6.00215, 0.49", "-21.68, 517.974, -5.74191, 0.49", "-21.281, 519.772, -5.51753, 0.49", "-20.9314, 521.25, -5.33526, 0.49", "-20.7547, 521.953, -5.24966, 0.49", "-20.4924, 523.211, -5.0909, 0.49", "-20.4329, 523.607, -5.03842, 0.49", "-20.3959, 523.937, -4.99329, 0.49", "-20.2848, 524.888, -4.86401, 0.49", "-20.0632, 526.898, -4.58911, 0.49", "-19.7816, 529.757, -4.19462, 0.49", "-19.6336, 531.551, -3.94032, 0.49", "-19.5606, 533.256, -3.6926, 0.49", "-19.53, 536.296, -3.24176, 0.49", "-19.5552, 538.052, -2.97723, 0.49", "-19.6082, 540.857, -2.43441, 0.49", "-19.5388, 544.311, -1.64202, 0.49", "-19.2679, 547.825, -0.753114, 0.49", "-18.821, 549.812, -0.24711, 0.49", "-18.3711, 550.902, 0.0225, 0.49", "-16.8344, 553.485, 0.455212, 0.49", "-14.4543, 556.792, 0.956211, 0.49", "-12.4847, 559.074, 1.24537, 0.49", "-7.53963, 564.066, 1.72453, 0.49", "-4.96331, 566.491, 1.85679, 0.49", "-1.43957, 569.716, 1.8318, 0.49" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-39.6818, -50.979, 13.0313, 0.49", "-40.0558, -53.1213, 20.8165, 0.49", "-39.9821, -52.7342, 21.9512, 0.49", "-40.1042, -54.1557, 21.2456, 0.37", "-40.1268, -54.4841, 21.1286, 0.37", "-40.2761, -56.737, 20.4033, 0.37", "-40.2875, -56.8872, 20.3485, 0.37", "-40.7954, -62.4495, 17.8513, 0.37", "-41.0277, -65.5493, 16.4274, 0.37", "-41.1104, -67.2306, 15.6552, 0.49", "-41.1167, -67.3784, 15.5942, 0.49", "-41.245, -69.689, 14.7748, 0.49", "-41.3191, -70.3593, 14.6064, 0.49", "-41.806, -73.0322, 14.3466, 0.49", "-42.265, -75.2309, 13.4856, 0.49", "-42.7063, -77.369, 12.3173, 0.49", "-42.9857, -78.7429, 11.4749, 0.49", "-43.2174, -79.9311, 10.7215, 0.49", "-43.25, -80.106, 10.5867, 0.49", "-44.7412, -87.9645, 3.39204, 0.49", "-44.9443, -89.1312, 2.22954, 0.49", "-44.973, -89.3356, 2.00899, 0.49", "-45.1029, -90.6448, 0.521272, 0.49", "-45.2469, -93.1987, -2.42207, 0.49", "-45.251, -93.3046, -2.53755, 0.49", "-45.2363, -94.1971, -3.07518, 0.49", "-45.2269, -94.3539, -3.20342, 0.49" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-39.6818, -50.979, 13.0313, 0.73", "-41.0055, -52.3761, 14.9044, 0.73", "-42.4537, -53.9045, 16.9536, 0.73", "-46.0132, -57.6611, 21.9904, 0.73", "-47.8547, -59.6047, 24.5963, 0.73", "-47.9967, -59.7544, 24.7971, 0.73", "-49.718, -61.5711, 27.2328, 0.73" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-145.776, 424.077, -197.474, 0.37", "-145.659, 424.938, -207.986, 0.37", "-145.658, 424.951, -208.142, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-145.776, 424.077, -197.474, 0.37", "-147.557, 425.24, -195.507, 0.37", "-149.141, 426.358, -193.813, 0.37", "-149.337, 426.503, -193.607, 0.37", "-150.697, 427.683, -191.955, 0.37", "-154.778, 431.61, -186.58, 0.37", "-155.07, 431.932, -186.177, 0.37", "-155.928, 433.105, -184.705, 0.37", "-156.04, 433.292, -184.486, 0.37", "-157.659, 436.256, -181.103, 0.37", "-157.79, 436.551, -180.793, 0.37", "-158.338, 438.399, -179.59, 0.37", "-158.405, 438.652, -179.415, 0.37", "-159.002, 441.386, -177.394, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-118.83, 538.364, -33.5604, 0.37", "-121.474, 537.829, -32.4026, 0.37", "-124.276, 537.262, -31.1756, 0.37", "-126.494, 536.814, -30.2043, 0.37", "-126.65, 536.783, -30.1361, 0.37" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-118.83, 538.364, -33.5604, 0.37", "-118.503, 540.528, -35.2492, 0.37", "-118.434, 540.95, -35.6301, 0.37", "-118.358, 541.415, -36.0586, 0.37", "-118.02, 543.924, -38.3653, 0.37", "-117.83, 546.342, -40.4389, 0.37", "-117.801, 547.554, -41.4178, 0.37", "-117.926, 549.132, -42.794, 0.37", "-117.998, 549.663, -43.2255, 0.37", "-118.106, 550.246, -43.6512, 0.37", "-118.487, 551.714, -44.6248, 0.37", "-118.714, 552.367, -45.0755, 0.37", "-119.377, 554.272, -46.2119, 0.37", "-119.651, 555.266, -46.7585, 0.37", "-120.083, 557.112, -47.8307, 0.37", "-120.311, 558.441, -48.6338, 0.37", "-120.394, 559.565, -49.3238, 0.37", "-120.375, 560.712, -49.962, 0.37", "-120.2, 562.881, -51.0042, 0.37", "-120.147, 563.181, -51.1368, 0.37", "-119.742, 564.781, -51.9569, 0.37", "-119.189, 566.427, -52.8595, 0.37", "-118.732, 567.791, -53.5829, 0.37", "-118.416, 569.279, -54.2503, 0.37", "-118.152, 571.349, -55.043, 0.37", "-117.873, 574.886, -56.3331, 0.37", "-117.828, 576.978, -57.0421, 0.37", "-117.93, 579.905, -57.9752, 0.37", "-118.337, 585.405, -59.5765, 0.37", "-118.486, 586.967, -59.9645, 0.37", "-118.736, 588.902, -60.3419, 0.37", "-118.947, 590.563, -60.5417, 0.37", "-119.064, 591.496, -60.6989, 0.37", "-119.224, 593.246, -61.061, 0.37", "-119.304, 594.369, -61.3047, 0.37", "-119.578, 596.626, -61.8145, 0.37", "-119.842, 598.296, -62.2035, 0.37", "-120.303, 601.398, -62.9412, 0.37", "-120.394, 602.046, -63.1237, 0.37", "-120.667, 604.108, -63.9643, 0.37", "-120.852, 605.568, -64.6903, 0.37", "-120.964, 606.51, -65.2291, 0.37", "-121.246, 608.893, -66.6041, 0.37", "-121.448, 610.83, -67.6499, 0.37", "-121.64, 613.543, -69.3638, 0.37", "-121.634, 614.244, -69.9186, 0.37", "-121.529, 615.731, -71.3134, 0.37" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-1.43957, 569.716, 1.8318, 0.49", "-0.808077, 571.784, 2.00804, 0.49", "-0.328703, 573.11, 2.12471, 0.49", "0.818175, 576.109, 2.04142, 0.49", "2.95626, 581.146, 1.55034, 0.49", "3.14611, 581.584, 1.49947, 0.49", "4.22234, 584.288, 1.19536, 0.37", "4.94703, 586.43, 1.00677, 0.37", "6.2506, 590.818, 0.582649, 0.37", "7.43863, 595.283, -0.165681, 0.37", "8.34714, 599.411, -1.06836, 0.37", "9.06633, 603.455, -2.00177, 0.37", "9.56425, 607.233, -2.84829, 0.37", "9.6132, 607.644, -2.92151, 0.37", "10.1477, 612.314, -3.55227, 0.37", "10.2845, 613.606, -3.78277, 0.37", "10.467, 614.691, -4.0023, 0.37", "11.3388, 618.064, -4.61288, 0.37", "12.6185, 621.928, -5.11127, 0.37", "13.0896, 623.253, -5.19672, 0.37", "13.7866, 625.136, -5.14579, 0.37", "14.3648, 626.618, -5.12068, 0.37", "15.5027, 629.357, -5.10726, 0.37", "16.0402, 630.597, -5.12533, 0.37", "16.2586, 631.158, -5.12473, 0.37" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-1.43957, 569.716, 1.8318, 0.24", "-1.11084, 570.535, 1.93186, 0.24", "-0.258549, 573.395, 2.30306, 0.24", "0.512809, 576.265, 2.64265, 0.24", "1.67892, 580.739, 3.14889, 0.24", "2.54753, 584.175, 3.52678, 0.24", "3.22414, 586.927, 3.82511, 0.24", "4.66288, 593.78, 4.24427, 0.24", "4.78064, 594.477, 4.24653, 0.24", "5.27781, 597.73, 4.05815, 0.24", "5.637, 600.153, 3.79378, 0.24", "5.7154, 600.561, 3.72113, 0.24", "6.86709, 605.487, 2.31537, 0.24", "7.4731, 608.068, 0.906145, 0.24", "7.56782, 608.49, 0.643825, 0.24" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-49.718, -61.5711, 27.2328, 0.73", "-59.8838, -56.7943, 37.7044, 0.73", "-62.3697, -55.8171, 39.7906, 0.73", "-65.7965, -54.6129, 42.3234, 0.73", "-66.1855, -54.4823, 42.5734, 0.73", "-68.2392, -53.7926, 43.8932, 0.73", "-69.4693, -53.3794, 44.6838, 0.73", "-70.9525, -53.1696, 44.6836, 0.73", "-71.1289, -53.1613, 44.6943, 0.73", "-74.5592, -52.9976, 45.1974, 0.73" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-49.718, -61.5711, 27.2328, 0.37", "-51.8553, -65.4499, 27.9056, 0.37", "-53.067, -67.4028, 28.1091, 0.24", "-54.3877, -69.5226, 28.2722, 0.37", "-55.1655, -70.8821, 28.2165, 0.37", "-56.5629, -73.4188, 27.9669, 0.37", "-57.8974, -75.7822, 27.6685, 0.37", "-58.2423, -76.2991, 27.5292, 0.37", "-59.0097, -77.2871, 27.4378, 0.37", "-61.5265, -80.1614, 27.8131, 0.37", "-61.6485, -80.286, 27.8536, 0.37", "-63.5229, -81.8829, 28.9774, 0.37", "-65.505, -83.3728, 30.3846, 0.37", "-70.2348, -86.682, 34.4477, 0.37", "-70.3397, -86.7549, 34.5512, 0.37", "-72.473, -88.2414, 36.9472, 0.37", "-75.5179, -90.5132, 40.5209, 0.37", "-75.6148, -90.592, 40.6437, 0.37", "-77.6826, -92.6742, 43.411, 0.37", "-78.5672, -93.827, 44.49, 0.37", "-78.7111, -94.0485, 44.7331, 0.37", "-79.3205, -95.1424, 46.1406, 0.37", "-79.4518, -95.3639, 46.387, 0.37", "-80.4061, -96.8094, 47.7174, 0.37", "-80.8529, -97.4516, 48.2277, 0.37", "-83.3446, -100.904, 50.9614, 0.37", "-84.2789, -102.158, 52.0364, 0.37", "-85.8515, -104.617, 54.0935, 0.37", "-87.8947, -108.135, 56.8043, 0.37", "-88.1107, -108.5, 57.046, 0.37", "-88.1852, -108.634, 57.1148, 0.37", "-89.0913, -110.643, 57.8397, 0.37", "-90.2717, -113.972, 58.9976, 0.37", "-90.7948, -115.573, 59.5265, 0.37", "-91.8901, -118.781, 60.51, 0.37", "-92.663, -121.019, 61.1427, 0.37", "-93.6477, -123.895, 61.88, 0.37", "-94.4379, -126.161, 62.4725, 0.37", "-95.0999, -128.123, 63.1162, 0.37", "-95.8192, -130.378, 63.9874, 0.37", "-95.9294, -130.725, 64.139, 0.37", "-96.0511, -131.059, 64.2957, 0.37", "-97.2738, -133.801, 65.6674, 0.37", "-99.244, -137.98, 67.8633, 0.37", "-100.545, -140.726, 69.325, 0.37", "-101.435, -142.447, 70.2126, 0.37", "-102.104, -143.747, 70.8241, 0.37", "-102.325, -144.166, 70.9874, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-145.658, 424.951, -208.142, 0.37", "-142.998, 423.916, -208.257, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-145.658, 424.951, -208.142, 0.37", "-145.657, 425.081, -208.15, 0.37", "-145.655, 425.873, -208.201, 0.37", "-145.654, 426.226, -208.224, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-121.529, 615.731, -71.3134, 0.37", "-123.934, 616.87, -70.6401, 0.37", "-128.924, 619.234, -69.2428, 0.37", "-129.547, 619.529, -69.0686, 0.37", "-129.948, 619.719, -68.9561, 0.37", "-130.49, 619.976, -68.8045, 0.37" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-121.529, 615.731, -71.3134, 0.37", "-121.541, 616.785, -71.1664, 0.37", "-121.55, 620.094, -70.6965, 0.37", "-121.523, 621.95, -70.4239, 0.37", "-121.448, 625.081, -70.3823, 0.37", "-121.345, 627.203, -70.483, 0.37", "-121.182, 628.844, -70.7769, 0.37", "-121.148, 629.058, -70.8444, 0.37", "-120.185, 633.274, -72.6637, 0.37", "-118.926, 637.928, -75.0315, 0.37", "-118.575, 639.082, -75.7453, 0.37", "-117.134, 643.399, -78.8217, 0.37", "-116.161, 645.995, -80.9005, 0.37", "-115.828, 646.797, -81.6155, 0.37" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-74.5592, -52.9976, 45.1974, 0.73", "-75.2395, -51.1489, 46.4564, 0.73", "-75.2936, -51.0018, 46.5566, 0.73" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-74.5592, -52.9976, 45.1974, 0.61", "-77.233, -53.1605, 50.08, 0.61", "-77.7803, -53.2386, 50.8665, 0.37", "-77.858, -53.2528, 50.9602, 0.37", "-78.7326, -53.5119, 51.8604, 0.37", "-78.8203, -53.5504, 51.9379, 0.37", "-80.0277, -54.2744, 53.3604, 0.37", "-80.3359, -54.5416, 53.6567, 0.37", "-80.4111, -54.6029, 53.7344, 0.37", "-81.0346, -55.0777, 54.4658, 0.37", "-81.5159, -55.4292, 55.0791, 0.37", "-84.0372, -57.5615, 58.6335, 0.37", "-85.0102, -58.5073, 60.1859, 0.37", "-85.1221, -58.6222, 60.3614, 0.37", "-86.4812, -60.068, 62.3905, 0.37", "-86.5559, -60.1528, 62.4964, 0.37", "-87.3052, -61.0493, 63.572, 0.37", "-87.3628, -61.1284, 63.6502, 0.37", "-88.1325, -62.0945, 64.7952, 0.37", "-88.5555, -62.5957, 65.3816, 0.37", "-89.121, -63.2276, 66.1041, 0.37", "-91.2454, -65.3754, 68.4969, 0.37", "-91.3453, -65.4735, 68.6041, 0.37", "-92.6004, -66.7279, 69.9093, 0.37", "-93.7396, -67.7605, 70.9293, 0.37", "-93.992, -67.9823, 71.1365, 0.37", "-95.7336, -69.5027, 72.3101, 0.37", "-96.4702, -70.2418, 72.6152, 0.37", "-96.5541, -70.3295, 72.6462, 0.37", "-98.1001, -72.1143, 73.0036, 0.37" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_32", "dend_21", "dend_8", "dend_5", "dend_0", "apic_8", "apic_1", "dend_36", "dend_33", "dend_31", "dend_30", "dend_22", "dend_20", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "apic_7", "apic_2", "dend_35", "dend_34", "dend_23", "dend_15", "dend_10", "dend_3", "dend_2", "apic_6", "apic_3", "dend_29", "dend_24", "dend_17", "dend_16", "dend_14", "dend_11", "apic_5", "apic_4", "dend_26", "dend_25", "dend_19", "dend_18", "dend_13", "dend_12", "dend_28", "dend_27" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_32", "dend_21", "dend_8", "dend_5", "dend_0", "apic_8", "apic_1", "dend_36", "dend_33", "dend_31", "dend_30", "dend_22", "dend_20", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "apic_7", "apic_2", "dend_35", "dend_34", "dend_23", "dend_15", "dend_10", "dend_3", "dend_2", "apic_6", "apic_3", "dend_29", "dend_24", "dend_17", "dend_16", "dend_14", "dend_11", "apic_5", "apic_4", "dend_26", "dend_25", "dend_19", "dend_18", "dend_13", "dend_12", "dend_28", "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_21", "dend_21", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L6_LBC_530a402f3f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_8, id: apic_8, parent: apic_0
create apic_8
public apic_8
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_21
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_21
create dend_30
public dend_30
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_8
create dend_20
public dend_20
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_7, id: apic_7, parent: apic_1
create apic_7
public apic_7
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_15, id: dend_15, parent: dend_9
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_6, id: apic_6, parent: apic_2
create apic_6
public apic_6
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_32, dend_21, dend_8, dend_5, dend_0, apic_8, apic_1, dend_36, dend_33, dend_31, dend_30, dend_22, dend_20, dend_9, dend_7, dend_6, dend_4, dend_1, apic_7, apic_2, dend_35, dend_34, dend_23, dend_15, dend_10, dend_3, dend_2, apic_6, apic_3, dend_29, dend_24, dend_17, dend_16, dend_14, dend_11, apic_5, apic_4, dend_26, dend_25, dend_19, dend_18, dend_13, dend_12, dend_28, dend_27]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_32, dend_21, dend_8, dend_5, dend_0, apic_8, apic_1, dend_36, dend_33, dend_31, dend_30, dend_22, dend_20, dend_9, dend_7, dend_6, dend_4, dend_1, apic_7, apic_2, dend_35, dend_34, dend_23, dend_15, dend_10, dend_3, dend_2, apic_6, apic_3, dend_29, dend_24, dend_17, dend_16, dend_14, dend_11, apic_5, apic_4, dend_26, dend_25, dend_19, dend_18, dend_13, dend_12, dend_28, dend_27]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.45000082183454454)
    connect dend_32(0), soma_0(0.45000082183454454)
    connect dend_21(0), soma_0(0.45000082183454454)
    connect dend_8(0), soma_0(0.45000082183454454)
    connect dend_5(0), soma_0(0.45000082183454454)
    connect dend_0(0), soma_0(0.45000082183454454)
    connect axon_0(0), soma_0(1.0)
    connect apic_8(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_21(1.0)
    connect dend_30(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_7(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_15(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_6(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -11.4272, 2.74365, 0.0, 1.40284 ) }
    soma_0 { pt3dadd( -10.3338, 2.46774, 0.0, 1.96571 ) }
    soma_0 { pt3dadd( -9.24032, 2.19183, 0.0, 8.29327 ) }
    soma_0 { pt3dadd( -8.14687, 1.91592, 0.0, 9.44256 ) }
    soma_0 { pt3dadd( -7.05343, 1.64001, 0.0, 11.0735 ) }
    soma_0 { pt3dadd( -5.95999, 1.3641, 0.0, 12.0361 ) }
    soma_0 { pt3dadd( -4.86655, 1.08818, 0.0, 12.4931 ) }
    soma_0 { pt3dadd( -3.77311, 0.812273, 0.0, 12.9557 ) }
    soma_0 { pt3dadd( -2.67966, 0.536361, 0.0, 13.509 ) }
    soma_0 { pt3dadd( -1.58622, 0.26045, 0.0, 14.2209 ) }
    soma_0 { pt3dadd( -0.492779, -0.0154621, 0.0, 14.9654 ) }
    soma_0 { pt3dadd( 0.600663, -0.291374, 0.0, 15.6811 ) }
    soma_0 { pt3dadd( 1.6941, -0.567285, 0.0, 16.3347 ) }
    soma_0 { pt3dadd( 2.78755, -0.843197, 0.0, 16.6107 ) }
    soma_0 { pt3dadd( 3.88099, -1.11911, 0.0, 16.5624 ) }
    soma_0 { pt3dadd( 4.97443, -1.39502, 0.0, 15.9355 ) }
    soma_0 { pt3dadd( 6.06787, -1.67093, 0.0, 14.1801 ) }
    soma_0 { pt3dadd( 7.16131, -1.94684, 0.0, 11.0241 ) }
    soma_0 { pt3dadd( 8.25476, -2.22276, 0.0, 8.05605 ) }
    soma_0 { pt3dadd( 9.3482, -2.49867, 0.0, 6.33907 ) }
    soma_0 { pt3dadd( 10.4416, -2.77458, 0.0, 3.78351 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 5.9426, 7.83673, 0.0, 1.83 ) }
    apic_0 { pt3dadd( 6.07032, 8.00124, -0.0916523, 1.71 ) }
    apic_0 { pt3dadd( 8.89805, 11.6435, -2.12081, 1.58 ) }
    apic_0 { pt3dadd( 11.4361, 14.9126, -3.94213, 1.46 ) }
    apic_0 { pt3dadd( 13.9829, 18.1929, -5.76966, 1.34 ) }
    apic_0 { pt3dadd( 18.9656, 24.6108, -9.34525, 1.34 ) }
    apic_0 { pt3dadd( 20.4042, 26.4636, -10.3775, 1.34 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 28/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 10.4126, -2.39027, 21.22, 1.46 ) }
    dend_32 { pt3dadd( 15.4145, -0.169336, 19.9237, 1.46 ) }
    dend_32 { pt3dadd( 18.0974, 1.03366, 19.2457, 1.34 ) }
    dend_32 { pt3dadd( 21.9917, 2.69398, 18.1913, 1.22 ) }
    dend_32 { pt3dadd( 24.3077, 3.65087, 17.5351, 0.97 ) }
    dend_32 { pt3dadd( 25.8158, 4.24923, 17.106, 0.73 ) }
    dend_32 { pt3dadd( 26.8161, 4.63553, 16.8212, 0.73 ) }
    dend_32 { pt3dadd( 26.9542, 4.67729, 16.7762, 0.73 ) }
    dend_32 { pt3dadd( 29.0865, 5.12179, 16.269, 0.73 ) }
    dend_32 { pt3dadd( 29.1781, 5.12812, 16.2656, 0.73 ) }
    dend_32 { pt3dadd( 30.4528, 5.08407, 16.2784, 0.73 ) }
    dend_32 { pt3dadd( 30.6083, 5.06888, 16.2989, 0.73 ) }
    dend_32 { pt3dadd( 32.5453, 4.88474, 16.672, 0.73 ) }
    dend_32 { pt3dadd( 34.5013, 4.7533, 17.156, 0.73 ) }
    dend_32 { pt3dadd( 37.657, 4.58785, 18.4523, 0.73 ) }
    dend_32 { pt3dadd( 39.9301, 4.50072, 19.5567, 0.73 ) }
    dend_32 { pt3dadd( 42.847, 4.41935, 21.1526, 0.49 ) }
    dend_32 { pt3dadd( 44.5025, 4.41057, 22.1325, 0.49 ) }
    dend_32 { pt3dadd( 45.5482, 4.45217, 22.8136, 0.49 ) }
    dend_32 { pt3dadd( 50.0953, 4.93528, 26.0446, 0.61 ) }
    dend_32 { pt3dadd( 51.1679, 5.1717, 26.9428, 0.61 ) }
    dend_32 { pt3dadd( 51.4288, 5.26083, 27.1835, 0.61 ) }
    dend_32 { pt3dadd( 52.0704, 5.54766, 27.7724, 0.61 ) }
    dend_32 { pt3dadd( 52.7595, 5.89966, 28.411, 0.61 ) }
    dend_32 { pt3dadd( 53.5985, 6.4741, 28.9811, 0.61 ) }
    dend_32 { pt3dadd( 53.6574, 6.54805, 28.9818, 0.61 ) }
    dend_32 { pt3dadd( 54.2191, 7.02288, 29.4718, 0.61 ) }
    dend_32 { pt3dadd( 54.317, 7.0524, 29.5827, 0.61 ) }
    dend_32 { pt3dadd( 55.259, 7.14049, 30.7256, 0.61 ) }
    dend_32 { pt3dadd( 55.6552, 7.12078, 31.123, 0.61 ) }
    dend_32 { pt3dadd( 55.7232, 7.11311, 31.1843, 0.61 ) }
    dend_32 { pt3dadd( 59.7331, 6.67469, 34.3157, 0.61 ) }
    dend_32 { pt3dadd( 60.9735, 6.5221, 35.2153, 0.61 ) }
    dend_32 { pt3dadd( 61.0957, 6.51091, 35.2914, 0.61 ) }
    dend_32 { pt3dadd( 63.3539, 6.39109, 36.3934, 0.49 ) }
    dend_32 { pt3dadd( 63.4885, 6.38896, 36.4422, 0.49 ) }
    dend_32 { pt3dadd( 65.203, 6.41342, 37.0378, 0.49 ) }
    dend_32 { pt3dadd( 65.292, 6.41321, 37.0605, 0.49 ) }
    dend_32 { pt3dadd( 67.2265, 6.3687, 37.4266, 0.49 ) }
    dend_32 { pt3dadd( 69.0103, 6.29447, 37.6251, 0.49 ) }
    dend_32 { pt3dadd( 69.3099, 6.27681, 37.64, 0.49 ) }
    dend_32 { pt3dadd( 72.6168, 6.10657, 36.4604, 0.49 ) }
    dend_32 { pt3dadd( 73.8341, 6.10972, 35.4944, 0.49 ) }
    dend_32 { pt3dadd( 76.939, 6.33714, 32.115, 0.49 ) }
    dend_32 { pt3dadd( 77.5368, 6.43979, 31.3518, 0.49 ) }
    dend_32 { pt3dadd( 77.7215, 6.48769, 31.1095, 0.49 ) }
    dend_32 { pt3dadd( 80.8901, 7.62253, 26.6056, 0.37 ) }
    dend_32 { pt3dadd( 81.3616, 7.81855, 25.871, 0.37 ) }
    dend_32 { pt3dadd( 81.4154, 7.84754, 25.7872, 0.37 ) }
    dend_32 { pt3dadd( 82.6077, 8.58236, 24.0743, 0.49 ) }
    dend_32 { pt3dadd( 83.2337, 8.97613, 23.1446, 0.49 ) }
    dend_32 { pt3dadd( 86.0524, 10.6884, 19.2639, 0.49 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 80/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.0074, -2.79977, 1.21, 1.58 ) }
    dend_21 { pt3dadd( -16.2796, -2.68695, 1.2839, 1.34 ) }
    dend_21 { pt3dadd( -16.4273, -2.6843, 1.28564, 1.34 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 83/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -10.1874, 3.72073, 9.01, 1.71 ) }
    dend_8 { pt3dadd( -11.0146, 4.86054, 7.89869, 1.71 ) }
    dend_8 { pt3dadd( -12.45, 6.70727, 5.99401, 1.46 ) }
    dend_8 { pt3dadd( -13.971, 8.60093, 3.94775, 1.46 ) }
    dend_8 { pt3dadd( -14.5999, 9.28702, 3.06678, 1.1 ) }
    dend_8 { pt3dadd( -16.1493, 10.8105, 1.04076, 1.1 ) }
    dend_8 { pt3dadd( -17.5971, 12.1765, -0.66554, 0.97 ) }
    dend_8 { pt3dadd( -18.2689, 12.776, -1.40791, 0.97 ) }
    dend_8 { pt3dadd( -18.5334, 12.9976, -1.67678, 0.97 ) }
    dend_8 { pt3dadd( -21.9035, 15.6634, -4.5305, 0.97 ) }
    dend_8 { pt3dadd( -23.3143, 16.7283, -5.63727, 0.97 ) }
    dend_8 { pt3dadd( -25.2316, 18.1525, -6.92241, 0.97 ) }
    dend_8 { pt3dadd( -26.5291, 19.1115, -7.6972, 0.97 ) }
    dend_8 { pt3dadd( -26.5826, 19.1524, -7.7257, 0.97 ) }
    dend_8 { pt3dadd( -28.4647, 20.7322, -8.52334, 0.97 ) }
    dend_8 { pt3dadd( -29.0231, 21.2991, -8.68004, 0.97 ) }
    dend_8 { pt3dadd( -30.0906, 22.5349, -8.97462, 1.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_8 { pt3dadd( -31.322, 24.129, -9.28066, 1.1 ) }
    dend_8 { pt3dadd( -32.2989, 25.5141, -9.47806, 1.1 ) }
    dend_8 { pt3dadd( -33.9663, 27.9873, -9.72023, 1.1 ) }
    dend_8 { pt3dadd( -35.3744, 30.2549, -9.77783, 0.97 ) }
    dend_8 { pt3dadd( -35.9095, 31.1719, -9.77169, 0.97 ) }
    dend_8 { pt3dadd( -36.5142, 32.3663, -9.74749, 0.97 ) }
    dend_8 { pt3dadd( -36.5417, 32.4361, -9.74607, 0.97 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 7/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 0.402596, -8.87927, 0.67, 1.46 ) }
    dend_5 { pt3dadd( 0.348052, -8.93233, 0.689381, 1.46 ) }
    dend_5 { pt3dadd( -1.34733, -10.379, 1.38592, 1.34 ) }
    dend_5 { pt3dadd( -2.45911, -11.2338, 1.77012, 0.97 ) }
    dend_5 { pt3dadd( -4.10424, -12.5583, 2.518, 0.97 ) }
    dend_5 { pt3dadd( -6.02303, -14.1453, 3.50984, 0.97 ) }
    dend_5 { pt3dadd( -6.11094, -14.218, 3.55528, 0.97 ) }
    dend_5 { pt3dadd( -7.09823, -14.986, 4.10484, 0.97 ) }
    dend_5 { pt3dadd( -8.50143, -15.908, 5.04289, 1.1 ) }
    dend_5 { pt3dadd( -10.5745, -17.2756, 6.79951, 0.97 ) }
    dend_5 { pt3dadd( -10.6159, -17.3103, 6.8551, 0.97 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 18/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.6026, -8.67977, 2.21, 1.46 ) }
    dend_0 { pt3dadd( 4.53872, -10.1183, 3.9712, 1.46 ) }
    dend_0 { pt3dadd( 4.43244, -12.5117, 6.90145, 1.1 ) }
    dend_0 { pt3dadd( 4.42927, -12.583, 6.98876, 1.1 ) }
    dend_0 { pt3dadd( 4.25029, -16.6134, 11.9231, 0.85 ) }
    dend_0 { pt3dadd( 4.14493, -18.9861, 14.8279, 0.85 ) }
    dend_0 { pt3dadd( 4.09454, -20.1208, 16.2172, 0.85 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 25/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 10.4416, -2.77458, 0.0, 0.898277 ) }
    axon_0 { pt3dadd( 24.9857, -6.44455, 0.0, 0.898277 ) }
    axon_0 { pt3dadd( 39.5298, -10.1145, 0.0, 0.898277 ) }
    // Section: apic_8, id: apic_8, parent: apic_0 (entry count 28/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 20.4042, 26.4636, -10.3775, 1.22 ) }
    apic_8 { pt3dadd( 35.2164, 26.7375, -1.7603, 1.22 ) }
    apic_8 { pt3dadd( 42.801, 26.9359, 2.37368, 0.97 ) }
    apic_8 { pt3dadd( 42.9509, 26.9424, 2.44666, 0.97 ) }
    apic_8 { pt3dadd( 50.1484, 27.2158, 5.56943, 0.97 ) }
    apic_8 { pt3dadd( 50.298, 27.2233, 5.62809, 0.97 ) }
    apic_8 { pt3dadd( 51.9041, 27.3175, 6.21954, 0.97 ) }
    apic_8 { pt3dadd( 54.7757, 27.5307, 6.84099, 0.97 ) }
    apic_8 { pt3dadd( 59.9973, 27.9575, 8.46184, 0.85 ) }
    apic_8 { pt3dadd( 64.8167, 28.6453, 10.0456, 0.73 ) }
    apic_8 { pt3dadd( 67.0814, 29.1317, 10.7922, 0.73 ) }
    apic_8 { pt3dadd( 67.2632, 29.1685, 10.8552, 0.73 ) }
    apic_8 { pt3dadd( 69.0687, 29.6169, 11.6012, 0.73 ) }
    apic_8 { pt3dadd( 76.7478, 32.2089, 15.0717, 0.73 ) }
    apic_8 { pt3dadd( 77.8691, 32.7041, 15.611, 0.73 ) }
    apic_8 { pt3dadd( 78.0007, 32.7759, 15.6761, 0.73 ) }
    apic_8 { pt3dadd( 81.5249, 35.0358, 17.4419, 0.73 ) }
    apic_8 { pt3dadd( 86.7034, 38.7176, 20.2332, 0.61 ) }
    apic_8 { pt3dadd( 90.1776, 41.5031, 22.1791, 0.61 ) }
    apic_8 { pt3dadd( 90.3665, 41.6707, 22.2762, 0.61 ) }
    apic_8 { pt3dadd( 91.2151, 42.4209, 22.7415, 0.61 ) }
    apic_8 { pt3dadd( 93.4139, 44.4365, 24.0148, 0.61 ) }
    apic_8 { pt3dadd( 97.889, 48.8814, 26.9917, 0.61 ) }
    apic_8 { pt3dadd( 98.012, 48.9928, 27.0679, 0.61 ) }
    apic_8 { pt3dadd( 100.197, 50.3913, 28.7276, 0.49 ) }
    apic_8 { pt3dadd( 100.32, 50.4551, 28.8142, 0.49 ) }
    apic_8 { pt3dadd( 102.444, 51.2803, 30.1706, 0.49 ) }
    apic_8 { pt3dadd( 102.668, 51.3561, 30.2908, 0.49 ) }
    apic_8 { pt3dadd( 103.84, 51.7673, 30.8306, 0.49 ) }
    apic_8 { pt3dadd( 112.29, 53.9627, 35.1468, 0.49 ) }
    apic_8 { pt3dadd( 115.366, 54.6608, 36.7735, 0.49 ) }
    apic_8 { pt3dadd( 117.087, 55.06, 37.6685, 0.49 ) }
    apic_8 { pt3dadd( 121.026, 55.9504, 39.6899, 0.49 ) }
    apic_8 { pt3dadd( 121.168, 55.9847, 39.759, 0.49 ) }
    apic_8 { pt3dadd( 130.29, 58.3302, 43.8885, 0.49 ) }
    apic_8 { pt3dadd( 132.278, 58.9342, 44.6682, 0.49 ) }
    apic_8 { pt3dadd( 134.274, 59.5051, 45.6063, 0.49 ) }
    apic_8 { pt3dadd( 134.442, 59.5558, 45.6949, 0.49 ) }
    apic_8 { pt3dadd( 135.591, 59.815, 46.3772, 0.49 ) }
    apic_8 { pt3dadd( 135.757, 59.8595, 46.4722, 0.49 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 68/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 20.4042, 26.4636, -10.3775, 0.85 ) }
    apic_1 { pt3dadd( 20.6183, 33.7112, -13.66, 0.85 ) }
    apic_1 { pt3dadd( 20.6956, 36.3276, -14.8451, 0.85 ) }
    apic_1 { pt3dadd( 20.8104, 40.2109, -16.6039, 0.85 ) }
    apic_1 { pt3dadd( 20.8136, 40.3184, -16.6526, 0.85 ) }
    apic_1 { pt3dadd( 20.8485, 41.5005, -17.188, 0.85 ) }
    apic_1 { pt3dadd( 20.8563, 41.7646, -17.3076, 0.85 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 75/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 86.0524, 10.6884, 19.2639, 0.49 ) }
    dend_36 { pt3dadd( 85.6989, 11.2029, 19.3632, 0.49 ) }
    dend_36 { pt3dadd( 85.4775, 11.5253, 19.4254, 0.49 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 78/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 86.0524, 10.6884, 19.2639, 0.12 ) }
    dend_33 { pt3dadd( 87.1951, 10.6598, 18.2482, 0.12 ) }
    dend_33 { pt3dadd( 92.6113, 10.6863, 14.7724, 0.97 ) }
    dend_33 { pt3dadd( 92.748, 10.6908, 14.7018, 0.97 ) }
    dend_33 { pt3dadd( 94.7222, 10.7575, 13.8109, 0.85 ) }
    dend_33 { pt3dadd( 96.6426, 10.8452, 13.0657, 0.73 ) }
    dend_33 { pt3dadd( 99.5886, 11.0505, 11.903, 0.61 ) }
    dend_33 { pt3dadd( 101.741, 11.3054, 11.2032, 0.49 ) }
    dend_33 { pt3dadd( 103.372, 11.5257, 10.8622, 0.49 ) }
    dend_33 { pt3dadd( 104.25, 11.6517, 10.629, 0.49 ) }
    dend_33 { pt3dadd( 106.279, 11.9538, 9.93985, 0.49 ) }
    dend_33 { pt3dadd( 108.717, 12.3893, 8.93338, 0.49 ) }
    dend_33 { pt3dadd( 108.921, 12.4274, 8.84786, 0.49 ) }
    dend_33 { pt3dadd( 109.989, 12.5818, 8.44331, 0.49 ) }
    dend_33 { pt3dadd( 111.341, 12.7461, 7.98542, 0.49 ) }
    dend_33 { pt3dadd( 111.637, 12.7785, 7.9037, 0.49 ) }
    dend_33 { pt3dadd( 113.157, 12.8199, 7.62114, 0.49 ) }
    dend_33 { pt3dadd( 116.666, 12.7211, 7.30045, 0.49 ) }
    dend_33 { pt3dadd( 116.819, 12.7133, 7.2789, 0.49 ) }
    dend_33 { pt3dadd( 118.224, 12.6743, 7.05383, 0.49 ) }
    dend_33 { pt3dadd( 118.575, 12.6741, 6.98979, 0.49 ) }
    dend_33 { pt3dadd( 120.478, 12.7226, 6.48882, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_33 { pt3dadd( 120.623, 12.7295, 6.43805, 0.49 ) }
    dend_33 { pt3dadd( 124.029, 12.9575, 5.02722, 0.49 ) }
    dend_33 { pt3dadd( 125.892, 13.0939, 4.22687, 0.49 ) }
    dend_33 { pt3dadd( 126.623, 13.1483, 3.97718, 0.49 ) }
    dend_33 { pt3dadd( 128.803, 13.3627, 3.41791, 0.49 ) }
    dend_33 { pt3dadd( 128.998, 13.3966, 3.38999, 0.49 ) }
    dend_33 { pt3dadd( 130.522, 13.7039, 3.42768, 0.49 ) }
    dend_33 { pt3dadd( 130.701, 13.7445, 3.47551, 0.49 ) }
    dend_33 { pt3dadd( 134.21, 14.4153, 4.65735, 0.49 ) }
    dend_33 { pt3dadd( 134.423, 14.4533, 4.76977, 0.49 ) }
    dend_33 { pt3dadd( 135.656, 14.66, 5.44402, 0.24 ) }
    dend_33 { pt3dadd( 136.806, 14.8346, 6.00872, 0.24 ) }
    dend_33 { pt3dadd( 137.125, 14.8807, 6.12672, 0.24 ) }
    dend_33 { pt3dadd( 139.029, 15.1139, 6.57663, 0.24 ) }
    dend_33 { pt3dadd( 142.188, 15.4293, 6.71559, 0.24 ) }
    dend_33 { pt3dadd( 145.291, 15.6551, 6.74304, 0.24 ) }
    dend_33 { pt3dadd( 145.434, 15.6604, 6.73874, 0.24 ) }
    dend_33 { pt3dadd( 147.467, 15.7707, 6.62668, 0.24 ) }
    dend_33 { pt3dadd( 147.666, 15.785, 6.61317, 0.24 ) }
    dend_33 { pt3dadd( 149.738, 16.0007, 6.44466, 0.24 ) }
    dend_33 { pt3dadd( 149.989, 16.0317, 6.4215, 0.24 ) }
    dend_33 { pt3dadd( 153.044, 16.4685, 6.33838, 0.24 ) }
    dend_33 { pt3dadd( 156.92, 17.1449, 6.24506, 0.37 ) }
    dend_33 { pt3dadd( 157.124, 17.1847, 6.2407, 0.37 ) }
    dend_33 { pt3dadd( 159.045, 17.6109, 6.19461, 0.37 ) }
    dend_33 { pt3dadd( 159.467, 17.7214, 6.18342, 0.37 ) }
    dend_33 { pt3dadd( 161.99, 18.4694, 6.10581, 0.37 ) }
    dend_33 { pt3dadd( 164.51, 19.4236, 6.00309, 0.37 ) }
    dend_33 { pt3dadd( 164.947, 19.6168, 5.97999, 0.37 ) }
    dend_33 { pt3dadd( 167.422, 20.7765, 5.82477, 0.37 ) }
    dend_33 { pt3dadd( 170.042, 22.1557, 5.67298, 0.37 ) }
    dend_33 { pt3dadd( 170.298, 22.3094, 5.66088, 0.37 ) }
    dend_33 { pt3dadd( 171.812, 23.3123, 5.42794, 0.37 ) }
    dend_33 { pt3dadd( 171.93, 23.3923, 5.40109, 0.37 ) }
    dend_33 { pt3dadd( 172.222, 23.5972, 5.32931, 0.37 ) }
    dend_33 { pt3dadd( 176.903, 26.9998, 4.05596, 0.37 ) }
    dend_33 { pt3dadd( 179.638, 28.9766, 3.25337, 0.37 ) }
    dend_33 { pt3dadd( 183.287, 31.5061, 2.16007, 0.37 ) }
    dend_33 { pt3dadd( 184.254, 32.1339, 1.84941, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_21 (entry count 39/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -16.4273, -2.6843, 1.28564, 1.34 ) }
    dend_31 { pt3dadd( -15.9987, -2.95864, 0.83526, 1.34 ) }
    dend_31 { pt3dadd( -14.2982, -4.48122, -0.682919, 0.97 ) }
    dend_31 { pt3dadd( -15.0676, -6.68373, 2.62964, 0.97 ) }
    dend_31 { pt3dadd( -15.2685, -7.08485, 3.30202, 0.73 ) }
    dend_31 { pt3dadd( -16.1763, -8.85571, 6.26228, 0.73 ) }
    dend_31 { pt3dadd( -16.2125, -8.9172, 6.37334, 0.73 ) }
    dend_31 { pt3dadd( -16.7845, -9.75408, 8.00062, 0.73 ) }
    dend_31 { pt3dadd( -18.371, -11.7676, 12.246, 0.37 ) }
    dend_31 { pt3dadd( -19.2613, -12.8151, 14.633, 0.37 ) }
    dend_31 { pt3dadd( -19.324, -12.8772, 14.794, 0.37 ) }
    dend_31 { pt3dadd( -19.7413, -13.1987, 15.7638, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_21 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -16.4273, -2.6843, 1.28564, 1.22 ) }
    dend_30 { pt3dadd( -17.8939, -1.66761, 1.38416, 1.22 ) }
    dend_30 { pt3dadd( -18.0922, -1.53609, 1.33469, 1.22 ) }
    dend_30 { pt3dadd( -20.0505, -0.228638, 0.678951, 0.97 ) }
    dend_30 { pt3dadd( -20.1717, -0.146659, 0.632648, 0.97 ) }
    dend_30 { pt3dadd( -22.7378, 1.71404, -0.42257, 0.73 ) }
    dend_30 { pt3dadd( -24.9293, 3.3643, -1.35904, 0.61 ) }
    dend_30 { pt3dadd( -28.1344, 5.78535, -3.36526, 0.61 ) }
    dend_30 { pt3dadd( -29.1598, 6.59571, -4.21961, 0.61 ) }
    dend_30 { pt3dadd( -29.377, 6.795, -4.50238, 0.61 ) }
    dend_30 { pt3dadd( -29.9739, 7.45106, -5.54768, 0.73 ) }
    dend_30 { pt3dadd( -30.0253, 7.51782, -5.66172, 0.73 ) }
    dend_30 { pt3dadd( -31.9545, 10.2377, -10.5546, 0.73 ) }
    dend_30 { pt3dadd( -31.9957, 10.2867, -10.6628, 0.73 ) }
    dend_30 { pt3dadd( -33.8072, 12.2112, -15.6126, 0.73 ) }
    dend_30 { pt3dadd( -33.8439, 12.2508, -15.7259, 0.73 ) }
    dend_30 { pt3dadd( -34.5679, 13.0507, -18.0927, 0.73 ) }
    dend_30 { pt3dadd( -34.735, 13.2457, -18.6647, 0.73 ) }
    dend_30 { pt3dadd( -35.8996, 14.6905, -22.8197, 0.73 ) }
    dend_30 { pt3dadd( -36.9467, 15.878, -26.7016, 0.73 ) }
    dend_30 { pt3dadd( -38.5404, 17.5746, -32.3951, 0.73 ) }
    dend_30 { pt3dadd( -38.7894, 17.8169, -33.3118, 0.73 ) }
    dend_30 { pt3dadd( -38.8501, 17.8738, -33.5478, 0.73 ) }
    dend_30 { pt3dadd( -40.6248, 19.3212, -38.992, 0.73 ) }
    dend_30 { pt3dadd( -42.2155, 20.4932, -43.0373, 0.49 ) }
    dend_30 { pt3dadd( -44.3164, 21.7596, -47.3287, 0.49 ) }
    dend_30 { pt3dadd( -49.6756, 24.8093, -56.0832, 0.49 ) }
    dend_30 { pt3dadd( -49.7449, 24.8487, -56.18, 0.49 ) }
    dend_30 { pt3dadd( -52.3974, 26.5118, -60.2154, 0.49 ) }
    dend_30 { pt3dadd( -52.7158, 26.721, -60.7139, 0.49 ) }
    dend_30 { pt3dadd( -60.481, 32.1901, -73.2474, 0.49 ) }
    dend_30 { pt3dadd( -62.9149, 33.9583, -77.3232, 0.49 ) }
    dend_30 { pt3dadd( -64.8588, 35.4769, -80.6418, 0.49 ) }
    dend_30 { pt3dadd( -74.9096, 43.7314, -99.0925, 0.37 ) }
    dend_30 { pt3dadd( -75.0042, 43.8172, -99.3086, 0.37 ) }
    dend_30 { pt3dadd( -76.2153, 45.0335, -102.336, 0.37 ) }
    dend_30 { pt3dadd( -76.4246, 45.2704, -102.92, 0.37 ) }
    dend_30 { pt3dadd( -79.1986, 48.6902, -111.485, 0.37 ) }
    dend_30 { pt3dadd( -79.3093, 48.8306, -111.817, 0.37 ) }
    dend_30 { pt3dadd( -85.9746, 57.1866, -129.583, 0.37 ) }
    dend_30 { pt3dadd( -87.6991, 59.119, -133.656, 0.37 ) }
    dend_30 { pt3dadd( -89.4978, 60.9583, -137.554, 0.37 ) }
    dend_30 { pt3dadd( -89.5526, 61.0066, -137.656, 0.37 ) }
    dend_30 { pt3dadd( -93.7037, 64.0816, -144.158, 0.37 ) }
    dend_30 { pt3dadd( -94.2717, 64.3899, -144.925, 0.37 ) }
    dend_30 { pt3dadd( -98.189, 65.6905, -149.415, 0.37 ) }
    dend_30 { pt3dadd( -98.7912, 65.8145, -150.502, 0.37 ) }
    dend_30 { pt3dadd( -100.658, 66.0841, -154.607, 0.37 ) }
    dend_30 { pt3dadd( -101.193, 66.1506, -155.871, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_30 { pt3dadd( -105.611, 66.5303, -167.346, 0.37 ) }
    dend_30 { pt3dadd( -107.004, 66.6815, -171.089, 0.37 ) }
    dend_30 { pt3dadd( -114.306, 67.6267, -192.35, 0.37 ) }
    dend_30 { pt3dadd( -114.354, 67.6348, -192.493, 0.37 ) }
    dend_30 { pt3dadd( -115.496, 67.8875, -196.087, 0.37 ) }
    dend_30 { pt3dadd( -115.532, 67.8992, -196.206, 0.37 ) }
    dend_30 { pt3dadd( -115.959, 68.1464, -198.035, 0.37 ) }
    dend_30 { pt3dadd( -115.985, 68.1641, -198.156, 0.37 ) }
    dend_30 { pt3dadd( -116.315, 68.3867, -199.569, 0.37 ) }
    dend_30 { pt3dadd( -116.345, 68.4052, -199.689, 0.37 ) }
    dend_30 { pt3dadd( -119.552, 70.3591, -212.975, 0.37 ) }
    dend_30 { pt3dadd( -123.687, 72.6666, -227.664, 0.37 ) }
    dend_30 { pt3dadd( -123.752, 72.7011, -227.865, 0.37 ) }
    dend_30 { pt3dadd( -125.035, 73.3402, -231.047, 0.37 ) }
    dend_30 { pt3dadd( -126.788, 74.1606, -234.569, 0.37 ) }
    dend_30 { pt3dadd( -126.861, 74.1912, -234.666, 0.37 ) }
    dend_30 { pt3dadd( -131.354, 75.7567, -236.602, 0.37 ) }
    dend_30 { pt3dadd( -133.847, 76.5006, -236.828, 0.37 ) }
    dend_30 { pt3dadd( -138.343, 77.6778, -237.125, 0.37 ) }
    dend_30 { pt3dadd( -138.465, 77.7026, -237.129, 0.37 ) }
    dend_30 { pt3dadd( -142.295, 78.1644, -237.035, 0.37 ) }
    dend_30 { pt3dadd( -142.758, 78.1853, -237.025, 0.37 ) }
    dend_30 { pt3dadd( -146.01, 77.9542, -236.963, 0.37 ) }
    dend_30 { pt3dadd( -146.336, 77.8932, -236.958, 0.37 ) }
    dend_30 { pt3dadd( -148.322, 77.2493, -236.938, 0.37 ) }
    dend_30 { pt3dadd( -148.742, 77.1016, -236.935, 0.37 ) }
    dend_30 { pt3dadd( -150.375, 76.3606, -236.923, 0.37 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 27/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -16.4273, -2.6843, 1.28564, 0.85 ) }
    dend_22 { pt3dadd( -21.3815, -7.69198, 6.41273, 0.85 ) }
    dend_22 { pt3dadd( -23.2502, -9.67228, 8.18306, 0.85 ) }
    dend_22 { pt3dadd( -24.2576, -10.807, 9.08909, 0.85 ) }
    dend_22 { pt3dadd( -25.1909, -12.0986, 9.93658, 0.85 ) }
    dend_22 { pt3dadd( -25.3618, -12.408, 10.101, 0.85 ) }
    dend_22 { pt3dadd( -26.4791, -14.7497, 11.2282, 0.85 ) }
    dend_22 { pt3dadd( -26.5822, -15.073, 11.3018, 0.85 ) }
    dend_22 { pt3dadd( -26.8034, -15.9242, 11.4946, 0.85 ) }
    dend_22 { pt3dadd( -27.7143, -19.3931, 12.2725, 0.85 ) }
    dend_22 { pt3dadd( -28.4733, -22.4731, 12.9688, 0.85 ) }
    dend_22 { pt3dadd( -28.5229, -22.6981, 13.0202, 0.85 ) }
    dend_22 { pt3dadd( -28.961, -24.761, 13.4922, 0.85 ) }
    dend_22 { pt3dadd( -29.1165, -25.3827, 13.6327, 0.85 ) }
    dend_22 { pt3dadd( -29.962, -27.9921, 13.9024, 0.85 ) }
    dend_22 { pt3dadd( -30.4958, -29.5713, 13.8827, 0.85 ) }
    dend_22 { pt3dadd( -30.9337, -30.766, 13.8076, 0.85 ) }
    dend_22 { pt3dadd( -32.1434, -34.119, 13.5496, 0.85 ) }
    dend_22 { pt3dadd( -32.2264, -34.3598, 13.5284, 0.85 ) }
    dend_22 { pt3dadd( -33.6828, -38.4328, 13.0841, 0.85 ) }
    dend_22 { pt3dadd( -35.0664, -42.3012, 12.5374, 0.85 ) }
    dend_22 { pt3dadd( -35.9325, -44.5179, 12.1825, 0.85 ) }
    dend_22 { pt3dadd( -36.0791, -44.8793, 12.1242, 0.85 ) }
    dend_22 { pt3dadd( -36.361, -45.5764, 11.9881, 0.85 ) }
    // Section: dend_20, id: dend_20, parent: dend_8 (entry count 51/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -36.5417, 32.4361, -9.74607, 0.85 ) }
    dend_20 { pt3dadd( -39.9596, 33.1434, -10.7052, 0.85 ) }
    dend_20 { pt3dadd( -42.1179, 33.8534, -11.2227, 0.85 ) }
    dend_20 { pt3dadd( -44.9755, 34.9869, -11.858, 0.85 ) }
    dend_20 { pt3dadd( -45.3436, 35.1495, -11.9256, 0.85 ) }
    dend_20 { pt3dadd( -46.7516, 35.7624, -12.1218, 0.85 ) }
    dend_20 { pt3dadd( -46.8505, 35.8069, -12.1327, 0.85 ) }
    dend_20 { pt3dadd( -49.2889, 37.0237, -12.1271, 0.85 ) }
    dend_20 { pt3dadd( -49.3847, 37.0764, -12.1266, 0.85 ) }
    dend_20 { pt3dadd( -51.2731, 38.2256, -12.1174, 0.85 ) }
    dend_20 { pt3dadd( -53.621, 39.5944, -12.6178, 0.85 ) }
    dend_20 { pt3dadd( -55.0693, 40.4011, -13.1422, 0.85 ) }
    dend_20 { pt3dadd( -55.364, 40.5567, -13.272, 0.85 ) }
    dend_20 { pt3dadd( -57.5783, 41.7206, -14.3574, 0.85 ) }
    dend_20 { pt3dadd( -57.6635, 41.7697, -14.405, 0.85 ) }
    dend_20 { pt3dadd( -62.7161, 44.9299, -17.6223, 0.73 ) }
    dend_20 { pt3dadd( -62.797, 44.982, -17.6742, 0.73 ) }
    dend_20 { pt3dadd( -65.5182, 46.6555, -19.2841, 0.73 ) }
    dend_20 { pt3dadd( -67.2262, 47.5632, -20.3053, 0.73 ) }
    dend_20 { pt3dadd( -70.6488, 48.9965, -22.1041, 0.73 ) }
    dend_20 { pt3dadd( -70.7628, 49.0375, -22.156, 0.73 ) }
    dend_20 { pt3dadd( -73.5095, 49.7988, -23.1361, 0.73 ) }
    dend_20 { pt3dadd( -75.3013, 50.1664, -23.7628, 0.73 ) }
    dend_20 { pt3dadd( -80.8649, 50.7934, -25.5655, 0.73 ) }
    dend_20 { pt3dadd( -86.0057, 51.1034, -26.9445, 0.73 ) }
    dend_20 { pt3dadd( -86.1433, 51.1076, -26.9738, 0.73 ) }
    dend_20 { pt3dadd( -89.1934, 51.2791, -27.4963, 0.73 ) }
    dend_20 { pt3dadd( -89.8273, 51.3257, -27.58, 0.73 ) }
    dend_20 { pt3dadd( -93.6138, 51.8139, -27.8539, 0.73 ) }
    dend_20 { pt3dadd( -97.4247, 52.533, -27.843, 0.73 ) }
    dend_20 { pt3dadd( -97.9187, 52.6735, -27.8764, 0.73 ) }
    dend_20 { pt3dadd( -102.897, 54.4154, -28.462, 0.73 ) }
    dend_20 { pt3dadd( -103.37, 54.6093, -28.5369, 0.73 ) }
    dend_20 { pt3dadd( -107.189, 56.3, -29.2233, 0.73 ) }
    dend_20 { pt3dadd( -107.297, 56.3501, -29.245, 0.73 ) }
    dend_20 { pt3dadd( -113.264, 58.9887, -30.4562, 0.73 ) }
    dend_20 { pt3dadd( -116.93, 60.4944, -31.1793, 0.73 ) }
    dend_20 { pt3dadd( -117.096, 60.5519, -31.2099, 0.73 ) }
    dend_20 { pt3dadd( -121.67, 61.9141, -31.9427, 0.73 ) }
    dend_20 { pt3dadd( -122.837, 62.1391, -32.0823, 0.73 ) }
    dend_20 { pt3dadd( -127.204, 62.6062, -32.39, 0.73 ) }
    dend_20 { pt3dadd( -127.842, 62.5893, -32.3912, 0.73 ) }
    dend_20 { pt3dadd( -131.003, 62.2869, -32.4741, 0.73 ) }
    dend_20 { pt3dadd( -131.511, 62.2081, -32.5633, 0.73 ) }
    dend_20 { pt3dadd( -135.758, 61.2879, -33.8079, 0.73 ) }
    dend_20 { pt3dadd( -135.937, 61.2494, -33.8724, 0.73 ) }
    dend_20 { pt3dadd( -139.705, 60.4309, -35.4503, 0.73 ) }
    dend_20 { pt3dadd( -141.33, 60.1353, -36.1539, 0.73 ) }
    dend_20 { pt3dadd( -149.215, 58.9709, -39.7042, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_20 { pt3dadd( -149.712, 58.9245, -39.94, 0.73 ) }
    dend_20 { pt3dadd( -152.694, 58.8063, -41.5049, 0.73 ) }
    dend_20 { pt3dadd( -153.264, 58.7958, -41.8913, 0.73 ) }
    dend_20 { pt3dadd( -155.533, 58.8243, -43.8087, 0.73 ) }
    dend_20 { pt3dadd( -156.487, 58.8629, -44.7165, 0.73 ) }
    dend_20 { pt3dadd( -160.615, 59.1771, -49.1813, 0.73 ) }
    dend_20 { pt3dadd( -161.499, 59.2318, -50.2739, 0.73 ) }
    dend_20 { pt3dadd( -165.695, 59.4479, -56.616, 0.73 ) }
    dend_20 { pt3dadd( -165.76, 59.4506, -56.73, 0.73 ) }
    dend_20 { pt3dadd( -166.223, 59.4511, -57.8004, 0.73 ) }
    dend_20 { pt3dadd( -166.67, 59.429, -59.1594, 0.73 ) }
    dend_20 { pt3dadd( -166.716, 59.3999, -59.5706, 0.73 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 12/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -36.5417, 32.4361, -9.74607, 0.97 ) }
    dend_9 { pt3dadd( -38.1627, 37.1645, -12.4096, 0.97 ) }
    dend_9 { pt3dadd( -38.2234, 37.2785, -12.4042, 0.97 ) }
    dend_9 { pt3dadd( -39.4826, 40.0792, -11.8786, 0.73 ) }
    dend_9 { pt3dadd( -39.5149, 40.1794, -11.8591, 0.73 ) }
    dend_9 { pt3dadd( -40.1371, 42.485, -11.4071, 0.73 ) }
    dend_9 { pt3dadd( -40.2276, 42.8975, -11.3303, 0.73 ) }
    dend_9 { pt3dadd( -41.098, 47.2613, -10.1182, 0.73 ) }
    dend_9 { pt3dadd( -41.5143, 50.4566, -9.43298, 0.73 ) }
    dend_9 { pt3dadd( -41.7056, 53.2623, -9.03726, 0.73 ) }
    dend_9 { pt3dadd( -41.7156, 53.5225, -9.01569, 0.73 ) }
    dend_9 { pt3dadd( -41.6801, 55.5412, -8.97425, 0.73 ) }
    dend_9 { pt3dadd( -41.674, 55.6715, -8.98042, 0.73 ) }
    dend_9 { pt3dadd( -41.4332, 59.2405, -9.46223, 0.73 ) }
    dend_9 { pt3dadd( -41.4318, 62.6672, -9.92561, 0.73 ) }
    dend_9 { pt3dadd( -41.4427, 62.8502, -9.94736, 0.73 ) }
    dend_9 { pt3dadd( -41.5917, 64.6699, -10.1282, 0.73 ) }
    dend_9 { pt3dadd( -41.6021, 64.7901, -10.1386, 0.73 ) }
    dend_9 { pt3dadd( -41.8197, 67.3482, -10.3438, 0.73 ) }
    dend_9 { pt3dadd( -41.9833, 70.223, -10.0802, 0.73 ) }
    dend_9 { pt3dadd( -41.9959, 72.3831, -9.55295, 0.73 ) }
    dend_9 { pt3dadd( -41.9977, 72.5454, -9.50715, 0.73 ) }
    dend_9 { pt3dadd( -42.0164, 74.411, -8.81798, 0.73 ) }
    dend_9 { pt3dadd( -41.9776, 75.0702, -8.47162, 0.73 ) }
    dend_9 { pt3dadd( -40.5248, 79.3989, -3.13579, 0.73 ) }
    dend_9 { pt3dadd( -40.4818, 79.4523, -2.9904, 0.73 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 38/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -10.6159, -17.3103, 6.8551, 0.85 ) }
    dend_7 { pt3dadd( -12.1841, -18.5376, 8.2256, 0.85 ) }
    dend_7 { pt3dadd( -14.367, -19.6733, 9.5813, 0.73 ) }
    dend_7 { pt3dadd( -15.1037, -20.0192, 9.93107, 0.73 ) }
    dend_7 { pt3dadd( -16.3402, -20.5925, 10.4367, 0.73 ) }
    dend_7 { pt3dadd( -16.4628, -20.6494, 10.4868, 0.73 ) }
    dend_7 { pt3dadd( -18.3619, -21.53, 11.2634, 0.73 ) }
    dend_7 { pt3dadd( -18.4663, -21.5494, 11.2923, 0.73 ) }
    dend_7 { pt3dadd( -19.568, -21.6122, 11.2762, 0.73 ) }
    dend_7 { pt3dadd( -19.8771, -21.6394, 11.2436, 0.73 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -10.6159, -17.3103, 6.8551, 0.49 ) }
    dend_6 { pt3dadd( -12.8918, -17.0703, 8.17312, 0.49 ) }
    dend_6 { pt3dadd( -14.8726, -16.7276, 8.74316, 0.37 ) }
    dend_6 { pt3dadd( -16.4695, -16.3984, 8.96713, 0.37 ) }
    dend_6 { pt3dadd( -16.8379, -16.3225, 9.01881, 0.37 ) }
    dend_6 { pt3dadd( -18.057, -16.0713, 9.18978, 0.37 ) }
    dend_6 { pt3dadd( -18.9566, -15.8859, 9.31595, 0.37 ) }
    dend_6 { pt3dadd( -22.5231, -14.8939, 8.91482, 0.37 ) }
    dend_6 { pt3dadd( -23.0014, -14.7274, 8.76158, 0.37 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 57/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 4.09454, -20.1208, 16.2172, 0.85 ) }
    dend_4 { pt3dadd( 4.89691, -19.073, 24.6417, 0.85 ) }
    dend_4 { pt3dadd( 4.95174, -19.0014, 25.2174, 0.85 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 60/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.09454, -20.1208, 16.2172, 0.85 ) }
    dend_1 { pt3dadd( 3.13937, -24.0799, 21.5037, 0.85 ) }
    dend_1 { pt3dadd( 3.12358, -24.1702, 21.5933, 0.85 ) }
    dend_1 { pt3dadd( 2.9738, -25.2649, 22.4439, 0.85 ) }
    dend_1 { pt3dadd( 2.82089, -26.1431, 22.9563, 0.61 ) }
    dend_1 { pt3dadd( 2.79752, -26.2598, 23.0127, 0.61 ) }
    dend_1 { pt3dadd( 2.39002, -27.9786, 23.7185, 0.61 ) }
    dend_1 { pt3dadd( 2.0148, -29.8704, 23.5113, 0.37 ) }
    dend_1 { pt3dadd( 1.87318, -30.2257, 23.4572, 0.37 ) }
    dend_1 { pt3dadd( 1.00663, -31.4827, 23.1987, 0.37 ) }
    dend_1 { pt3dadd( 0.923126, -31.5768, 23.1752, 0.37 ) }
    dend_1 { pt3dadd( 0.57472, -31.957, 23.0761, 0.37 ) }
    dend_1 { pt3dadd( 0.503608, -32.0341, 23.0556, 0.37 ) }
    dend_1 { pt3dadd( -0.368096, -33.1346, 22.7905, 0.24 ) }
    dend_1 { pt3dadd( -1.36496, -34.4484, 22.4895, 0.24 ) }
    dend_1 { pt3dadd( -1.4274, -34.5346, 22.4741, 0.24 ) }
    dend_1 { pt3dadd( -2.59974, -36.1953, 22.2194, 0.24 ) }
    dend_1 { pt3dadd( -3.7138, -37.9799, 21.9938, 0.24 ) }
    dend_1 { pt3dadd( -3.85889, -38.2182, 21.9883, 0.24 ) }
    dend_1 { pt3dadd( -4.73137, -39.6957, 22.0819, 0.24 ) }
    dend_1 { pt3dadd( -5.79609, -41.4413, 22.3059, 0.24 ) }
    dend_1 { pt3dadd( -6.05727, -41.8762, 22.384, 0.24 ) }
    dend_1 { pt3dadd( -7.03665, -43.6166, 22.7945, 0.24 ) }
    dend_1 { pt3dadd( -8.34564, -46.1466, 23.3287, 0.24 ) }
    dend_1 { pt3dadd( -8.4258, -46.3118, 23.3572, 0.24 ) }
    dend_1 { pt3dadd( -9.05743, -47.6884, 23.519, 0.24 ) }
    dend_1 { pt3dadd( -9.27112, -48.1563, 23.5429, 0.24 ) }
    dend_1 { pt3dadd( -9.9445, -49.3821, 23.5108, 0.24 ) }
    dend_1 { pt3dadd( -11.7161, -52.1648, 23.1876, 0.24 ) }
    dend_1 { pt3dadd( -11.8077, -52.2961, 23.1759, 0.24 ) }
    dend_1 { pt3dadd( -12.9551, -53.7143, 23.1877, 0.24 ) }
    dend_1 { pt3dadd( -13.0325, -53.7872, 23.1951, 0.24 ) }
    dend_1 { pt3dadd( -14.8877, -55.1767, 23.4708, 0.24 ) }
    dend_1 { pt3dadd( -14.9799, -55.2248, 23.4887, 0.24 ) }
    dend_1 { pt3dadd( -18.3903, -56.6749, 24.3644, 0.24 ) }
    dend_1 { pt3dadd( -19.3488, -57.0764, 24.6299, 0.24 ) }
    dend_1 { pt3dadd( -21.118, -57.7889, 25.1682, 0.24 ) }
    dend_1 { pt3dadd( -21.2223, -57.8349, 25.2006, 0.24 ) }
    dend_1 { pt3dadd( -22.3933, -58.5025, 25.6184, 0.24 ) }
    dend_1 { pt3dadd( -24.0189, -59.8835, 26.0392, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -23.9508, -60.1423, 26.035, 0.24 ) }
    dend_1 { pt3dadd( -23.7772, -60.6648, 26.0342, 0.24 ) }
    dend_1 { pt3dadd( -23.6831, -60.9359, 26.0346, 0.24 ) }
    dend_1 { pt3dadd( -23.1844, -62.2295, 26.0471, 0.24 ) }
    dend_1 { pt3dadd( -22.6095, -63.5461, 26.0741, 0.24 ) }
    dend_1 { pt3dadd( -21.8563, -64.9521, 26.1324, 0.24 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 6/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 39.5298, -10.1145, 0.0, 0.37 ) }
    axon_1 { pt3dadd( 54.074, -13.7845, 0.0, 0.37 ) }
    axon_1 { pt3dadd( 68.6181, -17.4544, 0.0, 0.37 ) }
    // Section: apic_7, id: apic_7, parent: apic_1 (entry count 9/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 20.8563, 41.7646, -17.3076, 0.85 ) }
    apic_7 { pt3dadd( 23.7859, 43.698, -19.7874, 0.85 ) }
    apic_7 { pt3dadd( 25.8449, 44.9366, -21.3318, 0.73 ) }
    apic_7 { pt3dadd( 30.3616, 47.4571, -23.9565, 0.73 ) }
    apic_7 { pt3dadd( 30.5485, 47.5573, -24.0504, 0.73 ) }
    apic_7 { pt3dadd( 31.7051, 48.1126, -24.5485, 0.73 ) }
    apic_7 { pt3dadd( 31.9043, 48.2019, -24.6257, 0.73 ) }
    apic_7 { pt3dadd( 33.8058, 48.8366, -25.0891, 0.73 ) }
    apic_7 { pt3dadd( 37.2549, 49.5482, -25.5166, 0.73 ) }
    apic_7 { pt3dadd( 37.3608, 49.5667, -25.5202, 0.73 ) }
    apic_7 { pt3dadd( 39.1891, 49.9054, -25.6697, 0.73 ) }
    apic_7 { pt3dadd( 39.3422, 49.935, -25.6874, 0.73 ) }
    apic_7 { pt3dadd( 41.1277, 50.2855, -25.9304, 0.73 ) }
    apic_7 { pt3dadd( 41.2324, 50.3047, -25.9463, 0.73 ) }
    apic_7 { pt3dadd( 45.7841, 51.0851, -26.6826, 0.73 ) }
    apic_7 { pt3dadd( 48.5938, 51.7699, -27.2988, 0.73 ) }
    apic_7 { pt3dadd( 48.8352, 51.843, -27.3623, 0.73 ) }
    apic_7 { pt3dadd( 49.7702, 52.2337, -27.6801, 0.73 ) }
    apic_7 { pt3dadd( 51.7222, 53.2506, -28.4731, 0.73 ) }
    apic_7 { pt3dadd( 51.9258, 53.375, -28.565, 0.73 ) }
    apic_7 { pt3dadd( 55.8477, 56.2701, -30.5909, 0.73 ) }
    apic_7 { pt3dadd( 55.9167, 56.3255, -30.6306, 0.73 ) }
    apic_7 { pt3dadd( 59.2188, 59.1024, -32.5768, 0.73 ) }
    apic_7 { pt3dadd( 59.2986, 59.1699, -32.6271, 0.73 ) }
    apic_7 { pt3dadd( 59.8565, 59.6473, -32.9936, 0.73 ) }
    apic_7 { pt3dadd( 60.0449, 59.7951, -33.1021, 0.73 ) }
    apic_7 { pt3dadd( 61.434, 60.7334, -33.7227, 0.73 ) }
    apic_7 { pt3dadd( 61.6374, 60.8644, -33.7994, 0.73 ) }
    apic_7 { pt3dadd( 64.3912, 62.3403, -34.7178, 0.73 ) }
    apic_7 { pt3dadd( 64.5324, 62.4152, -34.7602, 0.73 ) }
    apic_7 { pt3dadd( 66.1465, 63.2721, -35.2221, 0.73 ) }
    apic_7 { pt3dadd( 66.2426, 63.3229, -35.2606, 0.73 ) }
    apic_7 { pt3dadd( 67.7375, 64.1271, -35.9753, 0.73 ) }
    apic_7 { pt3dadd( 69.7431, 65.2483, -36.9553, 0.73 ) }
    apic_7 { pt3dadd( 72.3975, 66.772, -38.2717, 0.73 ) }
    apic_7 { pt3dadd( 72.4839, 66.8216, -38.3145, 0.73 ) }
    apic_7 { pt3dadd( 76.0451, 68.7958, -40.1114, 0.73 ) }
    apic_7 { pt3dadd( 76.1687, 68.8624, -40.1836, 0.73 ) }
    apic_7 { pt3dadd( 78.1711, 69.9958, -41.2899, 0.73 ) }
    apic_7 { pt3dadd( 78.2443, 70.0431, -41.3314, 0.73 ) }
    apic_7 { pt3dadd( 79.9185, 71.2571, -42.255, 0.73 ) }
    apic_7 { pt3dadd( 80.1773, 71.453, -42.388, 0.73 ) }
    apic_7 { pt3dadd( 84.9074, 75.3246, -44.6615, 0.73 ) }
    apic_7 { pt3dadd( 88.612, 78.4583, -46.516, 0.61 ) }
    apic_7 { pt3dadd( 92.2361, 81.6485, -48.4059, 0.61 ) }
    apic_7 { pt3dadd( 94.5544, 83.7676, -49.6308, 0.61 ) }
    apic_7 { pt3dadd( 94.6281, 83.838, -49.6707, 0.61 ) }
    apic_7 { pt3dadd( 97.831, 87.0605, -51.5279, 0.61 ) }
    apic_7 { pt3dadd( 98.0752, 87.3267, -51.6759, 0.61 ) }
    apic_7 { pt3dadd( 99.9174, 89.4421, -53.0447, 0.61 ) }
    apic_7 { pt3dadd( 101.019, 90.6971, -53.8457, 0.61 ) }
    apic_7 { pt3dadd( 101.08, 90.7623, -53.8856, 0.61 ) }
    apic_7 { pt3dadd( 104.554, 94.3967, -55.8635, 0.61 ) }
    apic_7 { pt3dadd( 104.66, 94.5065, -55.9124, 0.61 ) }
    apic_7 { pt3dadd( 105.571, 95.4737, -56.252, 0.61 ) }
    apic_7 { pt3dadd( 108.598, 98.8216, -57.0247, 0.37 ) }
    apic_7 { pt3dadd( 110.327, 100.806, -57.2623, 0.37 ) }
    apic_7 { pt3dadd( 110.473, 100.983, -57.2629, 0.37 ) }
    apic_7 { pt3dadd( 111.553, 102.366, -57.0626, 0.37 ) }
    apic_7 { pt3dadd( 111.716, 102.568, -57.0349, 0.37 ) }
    apic_7 { pt3dadd( 112.988, 104.059, -57.2103, 0.37 ) }
    apic_7 { pt3dadd( 113.218, 104.327, -57.3123, 0.37 ) }
    apic_7 { pt3dadd( 115.199, 106.428, -58.5441, 0.37 ) }
    apic_7 { pt3dadd( 115.302, 106.527, -58.6142, 0.37 ) }
    apic_7 { pt3dadd( 117.273, 108.161, -60.0159, 0.37 ) }
    apic_7 { pt3dadd( 121.79, 111.544, -63.3144, 0.37 ) }
    apic_7 { pt3dadd( 121.909, 111.635, -63.4133, 0.37 ) }
    apic_7 { pt3dadd( 122.798, 112.343, -64.2184, 0.37 ) }
    apic_7 { pt3dadd( 122.931, 112.468, -64.3514, 0.37 ) }
    apic_7 { pt3dadd( 123.63, 113.3, -65.0524, 0.37 ) }
    apic_7 { pt3dadd( 123.883, 113.764, -65.2876, 0.37 ) }
    apic_7 { pt3dadd( 125.446, 117.623, -66.1566, 0.37 ) }
    apic_7 { pt3dadd( 125.478, 117.715, -66.1742, 0.37 ) }
    apic_7 { pt3dadd( 126.373, 120.707, -66.6652, 0.37 ) }
    apic_7 { pt3dadd( 126.47, 121.027, -66.7351, 0.37 ) }
    apic_7 { pt3dadd( 127.262, 123.655, -67.3841, 0.37 ) }
    apic_7 { pt3dadd( 127.296, 123.766, -67.4116, 0.37 ) }
    apic_7 { pt3dadd( 127.775, 125.293, -67.7738, 0.37 ) }
    apic_7 { pt3dadd( 127.84, 125.517, -67.8314, 0.37 ) }
    apic_7 { pt3dadd( 129.249, 130.31, -69.2091, 0.37 ) }
    apic_7 { pt3dadd( 129.284, 130.421, -69.2398, 0.37 ) }
    apic_7 { pt3dadd( 130.098, 132.976, -69.9412, 0.37 ) }
    apic_7 { pt3dadd( 130.13, 133.077, -69.9763, 0.37 ) }
    apic_7 { pt3dadd( 130.679, 134.817, -70.6862, 0.37 ) }
    apic_7 { pt3dadd( 130.968, 135.697, -71.0637, 0.37 ) }
    apic_7 { pt3dadd( 131.653, 137.585, -71.865, 0.37 ) }
    apic_7 { pt3dadd( 131.697, 137.683, -71.9127, 0.37 ) }
    apic_7 { pt3dadd( 133.596, 140.999, -73.8414, 0.37 ) }
    apic_7 { pt3dadd( 133.676, 141.127, -73.9159, 0.37 ) }
    apic_7 { pt3dadd( 134.372, 142.153, -74.5458, 0.37 ) }
    apic_7 { pt3dadd( 134.891, 142.885, -74.956, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    apic_7 { pt3dadd( 135.679, 143.885, -75.4096, 0.37 ) }
    apic_7 { pt3dadd( 135.789, 144.009, -75.4372, 0.37 ) }
    apic_7 { pt3dadd( 136.563, 144.774, -75.3953, 0.37 ) }
    apic_7 { pt3dadd( 136.668, 144.874, -75.3894, 0.37 ) }
    apic_7 { pt3dadd( 137.816, 145.927, -75.3288, 0.37 ) }
    apic_7 { pt3dadd( 138.189, 146.314, -75.5443, 0.37 ) }
    apic_7 { pt3dadd( 138.879, 147.157, -76.2662, 0.37 ) }
    apic_7 { pt3dadd( 138.936, 147.229, -76.3369, 0.37 ) }
    apic_7 { pt3dadd( 139.482, 147.908, -77.0631, 0.37 ) }
    apic_7 { pt3dadd( 139.776, 148.293, -77.5014, 0.37 ) }
    apic_7 { pt3dadd( 142.326, 151.935, -82.0289, 0.37 ) }
    apic_7 { pt3dadd( 142.937, 152.828, -83.2346, 0.37 ) }
    apic_7 { pt3dadd( 143.143, 153.128, -83.6865, 0.37 ) }
    apic_7 { pt3dadd( 143.473, 153.625, -84.4704, 0.37 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 14/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 20.8563, 41.7646, -17.3076, 0.97 ) }
    apic_2 { pt3dadd( 18.2478, 44.3397, -16.8815, 0.97 ) }
    apic_2 { pt3dadd( 18.128, 44.4369, -16.8605, 0.97 ) }
    apic_2 { pt3dadd( 15.1859, 46.4464, -16.3259, 0.97 ) }
    apic_2 { pt3dadd( 12.5542, 48.0122, -15.8349, 0.85 ) }
    apic_2 { pt3dadd( 12.4208, 48.0864, -15.8097, 0.85 ) }
    apic_2 { pt3dadd( 9.55364, 49.7277, -15.2366, 0.85 ) }
    apic_2 { pt3dadd( 6.97068, 51.0842, -14.6689, 0.85 ) }
    apic_2 { pt3dadd( 4.72627, 52.4198, -14.1377, 0.85 ) }
    apic_2 { pt3dadd( 2.27803, 54.0816, -13.5047, 0.85 ) }
    apic_2 { pt3dadd( 2.15972, 54.1814, -13.4705, 0.85 ) }
    apic_2 { pt3dadd( -0.0349086, 56.739, -12.7399, 0.85 ) }
    apic_2 { pt3dadd( -0.110184, 56.8569, -12.7107, 0.85 ) }
    apic_2 { pt3dadd( -1.87344, 60.6144, -11.8873, 0.85 ) }
    apic_2 { pt3dadd( -2.17859, 61.4075, -11.7248, 0.85 ) }
    apic_2 { pt3dadd( -3.6693, 65.1396, -10.9571, 0.85 ) }
    apic_2 { pt3dadd( -5.44738, 68.9285, -10.1525, 0.85 ) }
    apic_2 { pt3dadd( -5.52703, 69.0797, -10.1196, 0.85 ) }
    apic_2 { pt3dadd( -7.52609, 72.3825, -9.36435, 0.85 ) }
    apic_2 { pt3dadd( -7.66356, 72.5794, -9.31731, 0.85 ) }
    apic_2 { pt3dadd( -11.2064, 77.278, -8.15842, 0.85 ) }
    apic_2 { pt3dadd( -13.5623, 80.1478, -7.42472, 0.85 ) }
    apic_2 { pt3dadd( -13.669, 80.2726, -7.3812, 0.85 ) }
    apic_2 { pt3dadd( -15.7612, 82.854, -6.34294, 0.85 ) }
    apic_2 { pt3dadd( -15.8587, 82.9826, -6.28885, 0.85 ) }
    apic_2 { pt3dadd( -17.8169, 85.8849, -5.1018, 0.85 ) }
    apic_2 { pt3dadd( -17.8945, 86.0126, -5.05004, 0.85 ) }
    apic_2 { pt3dadd( -21.079, 91.6354, -2.8228, 0.85 ) }
    apic_2 { pt3dadd( -24.5178, 98.2129, -0.363842, 0.85 ) }
    apic_2 { pt3dadd( -27.0722, 103.453, 1.5147, 0.85 ) }
    apic_2 { pt3dadd( -28.5555, 106.766, 2.6289, 0.85 ) }
    apic_2 { pt3dadd( -28.6451, 106.986, 2.6962, 0.85 ) }
    apic_2 { pt3dadd( -30.3226, 111.527, 3.92018, 0.85 ) }
    apic_2 { pt3dadd( -31.6912, 116.108, 4.86646, 0.85 ) }
    apic_2 { pt3dadd( -31.7442, 116.346, 4.91278, 0.85 ) }
    apic_2 { pt3dadd( -32.2459, 119.312, 5.44784, 0.85 ) }
    apic_2 { pt3dadd( -33.0642, 124.508, 6.34461, 0.85 ) }
    apic_2 { pt3dadd( -33.0917, 124.68, 6.37305, 0.85 ) }
    apic_2 { pt3dadd( -33.7139, 128.847, 7.01894, 0.85 ) }
    apic_2 { pt3dadd( -33.7474, 129.06, 7.05205, 0.85 ) }
    apic_2 { pt3dadd( -34.9321, 136.131, 8.15816, 0.85 ) }
    apic_2 { pt3dadd( -35.0564, 136.813, 8.26576, 0.85 ) }
    apic_2 { pt3dadd( -35.7101, 141.034, 8.90931, 0.85 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 57/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 184.254, 32.1339, 1.84941, 0.37 ) }
    dend_35 { pt3dadd( 184.474, 32.6595, 1.72809, 0.37 ) }
    dend_35 { pt3dadd( 185.519, 35.1499, 1.15328, 0.37 ) }
    dend_35 { pt3dadd( 186.818, 38.2472, 0.438399, 0.37 ) }
    dend_35 { pt3dadd( 187.112, 38.9471, 0.276855, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 62/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 184.254, 32.1339, 1.84941, 0.37 ) }
    dend_34 { pt3dadd( 185.876, 33.351, 1.91834, 0.37 ) }
    dend_34 { pt3dadd( 187.157, 34.1584, 1.96904, 0.37 ) }
    dend_34 { pt3dadd( 189.018, 35.1837, 2.0399, 0.37 ) }
    dend_34 { pt3dadd( 191.693, 36.5211, 2.12917, 0.37 ) }
    dend_34 { pt3dadd( 194.437, 37.8176, 2.21906, 0.37 ) }
    dend_34 { pt3dadd( 195.841, 38.4045, 2.25148, 0.37 ) }
    dend_34 { pt3dadd( 198.726, 39.4565, 2.39491, 0.37 ) }
    dend_34 { pt3dadd( 201.264, 40.2782, 2.49519, 0.37 ) }
    dend_34 { pt3dadd( 201.899, 40.4072, 2.50118, 0.37 ) }
    dend_34 { pt3dadd( 203.478, 40.5135, 2.4625, 0.37 ) }
    dend_34 { pt3dadd( 205.405, 40.3361, 2.33341, 0.37 ) }
    dend_34 { pt3dadd( 205.898, 40.2309, 2.38493, 0.37 ) }
    dend_34 { pt3dadd( 207.701, 39.6506, 2.91274, 0.37 ) }
    dend_34 { pt3dadd( 209.52, 38.9512, 3.55714, 0.37 ) }
    dend_34 { pt3dadd( 211.078, 38.3402, 4.15378, 0.37 ) }
    dend_34 { pt3dadd( 213.73, 37.2215, 5.43296, 0.37 ) }
    dend_34 { pt3dadd( 219.289, 35.0217, 8.46804, 0.37 ) }
    dend_34 { pt3dadd( 222.594, 33.6538, 10.3697, 0.37 ) }
    dend_34 { pt3dadd( 224.963, 32.5704, 11.7972, 0.37 ) }
    dend_34 { pt3dadd( 225.081, 32.5159, 11.8727, 0.37 ) }
    dend_34 { pt3dadd( 227.336, 31.3848, 13.2787, 0.37 ) }
    dend_34 { pt3dadd( 228.771, 30.7877, 14.1058, 0.37 ) }
    dend_34 { pt3dadd( 230.179, 30.2192, 14.4644, 0.37 ) }
    dend_34 { pt3dadd( 231.051, 29.754, 14.8363, 0.37 ) }
    dend_34 { pt3dadd( 231.504, 29.4764, 15.0632, 0.37 ) }
    dend_34 { pt3dadd( 233.086, 28.4444, 15.546, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 89/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -36.361, -45.5764, 11.9881, 0.85 ) }
    dend_23 { pt3dadd( -36.9125, -46.4737, 12.1614, 0.85 ) }
    dend_23 { pt3dadd( -37.0859, -46.7557, 12.2158, 0.85 ) }
    dend_23 { pt3dadd( -37.8398, -47.9823, 12.4526, 0.85 ) }
    dend_23 { pt3dadd( -38.1711, -48.5212, 12.5567, 0.85 ) }
    dend_23 { pt3dadd( -39.6818, -50.979, 13.0313, 0.85 ) }
    // Section: dend_15, id: dend_15, parent: dend_9 (entry count 95/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -40.4818, 79.4523, -2.9904, 0.61 ) }
    dend_15 { pt3dadd( -40.0908, 83.7565, -3.69264, 0.61 ) }
    dend_15 { pt3dadd( -39.9578, 85.4504, -4.06188, 0.61 ) }
    dend_15 { pt3dadd( -39.9428, 85.6476, -4.10756, 0.61 ) }
    dend_15 { pt3dadd( -39.7624, 87.9272, -4.64594, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_15 { pt3dadd( -39.7342, 88.2249, -4.71354, 0.61 ) }
    dend_15 { pt3dadd( -39.3985, 91.4609, -5.43082, 0.61 ) }
    dend_15 { pt3dadd( -39.389, 91.5907, -5.46907, 0.61 ) }
    dend_15 { pt3dadd( -39.1454, 93.9003, -6.23298, 0.61 ) }
    dend_15 { pt3dadd( -39.1095, 94.2028, -6.33525, 0.61 ) }
    dend_15 { pt3dadd( -38.8624, 96.0174, -6.96383, 0.61 ) }
    dend_15 { pt3dadd( -38.847, 96.1166, -6.99483, 0.61 ) }
    dend_15 { pt3dadd( -38.3362, 99.0206, -7.77022, 0.61 ) }
    dend_15 { pt3dadd( -38.2304, 99.6075, -7.94176, 0.61 ) }
    dend_15 { pt3dadd( -37.8816, 101.528, -8.59349, 0.61 ) }
    dend_15 { pt3dadd( -37.8673, 101.623, -8.63452, 0.61 ) }
    dend_15 { pt3dadd( -37.7607, 103.219, -9.43612, 0.61 ) }
    dend_15 { pt3dadd( -37.7633, 103.499, -9.5831, 0.61 ) }
    dend_15 { pt3dadd( -38.0166, 104.778, -10.244, 0.61 ) }
    dend_15 { pt3dadd( -38.1891, 105.134, -10.4092, 0.61 ) }
    dend_15 { pt3dadd( -39.6968, 107.11, -11.1967, 0.61 ) }
    dend_15 { pt3dadd( -40.8276, 108.356, -11.6313, 0.61 ) }
    dend_15 { pt3dadd( -41.2715, 108.794, -11.754, 0.61 ) }
    dend_15 { pt3dadd( -42.937, 110.388, -12.0933, 0.49 ) }
    dend_15 { pt3dadd( -45.1816, 112.522, -12.3753, 0.49 ) }
    dend_15 { pt3dadd( -46.6808, 113.998, -12.4592, 0.49 ) }
    dend_15 { pt3dadd( -46.7457, 114.066, -12.4574, 0.49 ) }
    dend_15 { pt3dadd( -48.0616, 115.668, -12.4304, 0.49 ) }
    dend_15 { pt3dadd( -48.1891, 115.851, -12.4289, 0.49 ) }
    dend_15 { pt3dadd( -48.5909, 116.693, -12.4333, 0.49 ) }
    dend_15 { pt3dadd( -49.1548, 118.372, -12.439, 0.49 ) }
    dend_15 { pt3dadd( -49.6655, 120.117, -12.4406, 0.49 ) }
    dend_15 { pt3dadd( -50.245, 122.09, -12.4387, 0.49 ) }
    dend_15 { pt3dadd( -50.2856, 122.233, -12.4385, 0.49 ) }
    dend_15 { pt3dadd( -51.068, 125.011, -12.4326, 0.49 ) }
    dend_15 { pt3dadd( -51.427, 126.431, -12.4309, 0.49 ) }
    dend_15 { pt3dadd( -51.9608, 128.543, -12.4283, 0.49 ) }
    dend_15 { pt3dadd( -52.5712, 130.606, -12.4203, 0.49 ) }
    dend_15 { pt3dadd( -53.2484, 132.552, -12.4118, 0.49 ) }
    dend_15 { pt3dadd( -53.2851, 132.642, -12.4115, 0.49 ) }
    dend_15 { pt3dadd( -54.4441, 135.028, -12.4002, 0.49 ) }
    dend_15 { pt3dadd( -55.1729, 136.422, -12.4014, 0.49 ) }
    dend_15 { pt3dadd( -56.0605, 137.962, -12.4017, 0.49 ) }
    dend_15 { pt3dadd( -56.1519, 138.104, -12.4015, 0.49 ) }
    dend_15 { pt3dadd( -57.016, 139.434, -12.3972, 0.49 ) }
    dend_15 { pt3dadd( -57.0611, 139.507, -12.3972, 0.49 ) }
    dend_15 { pt3dadd( -57.8904, 140.947, -12.4011, 0.49 ) }
    dend_15 { pt3dadd( -58.6944, 142.712, -12.4096, 0.49 ) }
    dend_15 { pt3dadd( -58.747, 142.844, -12.4103, 0.49 ) }
    dend_15 { pt3dadd( -59.3874, 144.33, -12.0972, 0.49 ) }
    dend_15 { pt3dadd( -59.4447, 144.444, -12.0539, 0.49 ) }
    dend_15 { pt3dadd( -60.2429, 145.878, -11.3619, 0.49 ) }
    dend_15 { pt3dadd( -60.2832, 145.944, -11.3257, 0.49 ) }
    dend_15 { pt3dadd( -61.406, 147.66, -10.3071, 0.49 ) }
    dend_15 { pt3dadd( -63.8321, 151.312, -8.23491, 0.49 ) }
    dend_15 { pt3dadd( -65.1532, 153.208, -7.18571, 0.49 ) }
    dend_15 { pt3dadd( -65.2064, 153.285, -7.14574, 0.49 ) }
    dend_15 { pt3dadd( -66.3737, 155.06, -6.32537, 0.49 ) }
    dend_15 { pt3dadd( -66.4211, 155.137, -6.29685, 0.49 ) }
    dend_15 { pt3dadd( -67.3186, 156.823, -5.93118, 0.49 ) }
    dend_15 { pt3dadd( -67.7092, 157.751, -5.93753, 0.49 ) }
    dend_15 { pt3dadd( -67.851, 158.185, -5.94168, 0.49 ) }
    dend_15 { pt3dadd( -68.2186, 159.513, -5.95629, 0.49 ) }
    dend_15 { pt3dadd( -68.2632, 159.717, -5.95887, 0.49 ) }
    dend_15 { pt3dadd( -68.5704, 161.165, -5.97748, 0.49 ) }
    dend_15 { pt3dadd( -68.5874, 161.261, -5.97881, 0.49 ) }
    dend_15 { pt3dadd( -68.9776, 163.328, -6.00676, 0.49 ) }
    dend_15 { pt3dadd( -69.2613, 164.552, -6.0218, 0.49 ) }
    dend_15 { pt3dadd( -69.2895, 164.651, -6.02288, 0.49 ) }
    dend_15 { pt3dadd( -69.8025, 166.251, -6.04295, 0.49 ) }
    dend_15 { pt3dadd( -70.2582, 167.35, -6.22736, 0.49 ) }
    dend_15 { pt3dadd( -70.7147, 168.356, -6.52254, 0.49 ) }
    dend_15 { pt3dadd( -70.977, 168.85, -6.72697, 0.49 ) }
    dend_15 { pt3dadd( -71.3955, 169.438, -7.1944, 0.49 ) }
    dend_15 { pt3dadd( -71.4359, 169.492, -7.24491, 0.49 ) }
    dend_15 { pt3dadd( -73.3307, 171.938, -9.81622, 0.49 ) }
    dend_15 { pt3dadd( -73.6256, 172.324, -10.212, 0.49 ) }
    dend_15 { pt3dadd( -74.4126, 173.405, -11.2993, 0.49 ) }
    dend_15 { pt3dadd( -76.8696, 176.812, -14.7359, 0.49 ) }
    dend_15 { pt3dadd( -77.7933, 178.106, -15.9725, 0.49 ) }
    dend_15 { pt3dadd( -77.8328, 178.162, -16.0221, 0.49 ) }
    dend_15 { pt3dadd( -78.9996, 179.871, -17.3002, 0.49 ) }
    dend_15 { pt3dadd( -79.082, 179.994, -17.3841, 0.49 ) }
    dend_15 { pt3dadd( -80.372, 182.101, -18.5569, 0.49 ) }
    dend_15 { pt3dadd( -81.1613, 183.475, -19.0149, 0.49 ) }
    dend_15 { pt3dadd( -81.2389, 183.586, -19.0512, 0.49 ) }
    dend_15 { pt3dadd( -82.3309, 184.939, -19.4346, 0.49 ) }
    dend_15 { pt3dadd( -82.3991, 185.013, -19.4515, 0.49 ) }
    dend_15 { pt3dadd( -83.1497, 185.849, -19.5577, 0.49 ) }
    dend_15 { pt3dadd( -83.6002, 186.355, -19.5544, 0.49 ) }
    dend_15 { pt3dadd( -84.8408, 187.946, -19.77, 0.49 ) }
    dend_15 { pt3dadd( -85.3902, 188.8, -19.9787, 0.49 ) }
    dend_15 { pt3dadd( -85.485, 188.977, -20.0352, 0.49 ) }
    dend_15 { pt3dadd( -86.2619, 190.525, -20.5676, 0.49 ) }
    dend_15 { pt3dadd( -86.3012, 190.616, -20.5987, 0.49 ) }
    dend_15 { pt3dadd( -87.2647, 193.291, -21.4806, 0.49 ) }
    dend_15 { pt3dadd( -87.5705, 194.33, -22.0435, 0.49 ) }
    dend_15 { pt3dadd( -87.9358, 195.432, -22.7557, 0.49 ) }
    dend_15 { pt3dadd( -88.2354, 196.261, -23.304, 0.49 ) }
    dend_15 { pt3dadd( -88.7897, 197.526, -24.1482, 0.49 ) }
    dend_15 { pt3dadd( -88.8932, 197.746, -24.352, 0.49 ) }
    dend_15 { pt3dadd( -90.4811, 200.731, -27.5688, 0.49 ) }
    dend_15 { pt3dadd( -91.5548, 202.603, -29.7967, 0.49 ) }
    dend_15 { pt3dadd( -92.1778, 203.722, -31.1259, 0.49 ) }
    dend_15 { pt3dadd( -92.8361, 205.04, -32.5498, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_15 { pt3dadd( -94.7145, 208.934, -36.3097, 0.49 ) }
    dend_15 { pt3dadd( -95.6466, 210.896, -37.854, 0.49 ) }
    dend_15 { pt3dadd( -96.1293, 211.92, -38.428, 0.49 ) }
    dend_15 { pt3dadd( -96.8326, 213.524, -39.1977, 0.49 ) }
    dend_15 { pt3dadd( -97.7592, 215.55, -39.8561, 0.49 ) }
    dend_15 { pt3dadd( -98.225, 216.602, -40.0071, 0.49 ) }
    dend_15 { pt3dadd( -98.7628, 217.828, -40.0148, 0.49 ) }
    dend_15 { pt3dadd( -99.1756, 218.705, -40.0196, 0.49 ) }
    dend_15 { pt3dadd( -100.065, 220.443, -40.027, 0.49 ) }
    dend_15 { pt3dadd( -100.969, 222.201, -40.0387, 0.49 ) }
    dend_15 { pt3dadd( -101.721, 223.869, -40.0549, 0.49 ) }
    dend_15 { pt3dadd( -102.219, 225.373, -40.0755, 0.49 ) }
    dend_15 { pt3dadd( -103.023, 228.605, -40.1281, 0.49 ) }
    dend_15 { pt3dadd( -103.384, 230.41, -40.1626, 0.49 ) }
    dend_15 { pt3dadd( -104.114, 234.837, -40.3649, 0.49 ) }
    dend_15 { pt3dadd( -104.492, 237.99, -40.5862, 0.49 ) }
    dend_15 { pt3dadd( -104.802, 241.438, -40.9087, 0.49 ) }
    dend_15 { pt3dadd( -104.849, 242.493, -41.0308, 0.49 ) }
    dend_15 { pt3dadd( -104.81, 243.383, -41.154, 0.49 ) }
    dend_15 { pt3dadd( -104.641, 245.28, -41.5038, 0.37 ) }
    dend_15 { pt3dadd( -104.536, 246.305, -41.8011, 0.37 ) }
    dend_15 { pt3dadd( -104.41, 248.497, -42.6154, 0.37 ) }
    dend_15 { pt3dadd( -104.441, 250.127, -43.2996, 0.37 ) }
    dend_15 { pt3dadd( -104.54, 252.065, -44.2218, 0.37 ) }
    dend_15 { pt3dadd( -104.694, 253.707, -45.0632, 0.37 ) }
    dend_15 { pt3dadd( -104.994, 255.821, -46.2514, 0.37 ) }
    dend_15 { pt3dadd( -105.136, 256.612, -46.7287, 0.37 ) }
    dend_15 { pt3dadd( -105.914, 260.473, -49.11, 0.37 ) }
    dend_15 { pt3dadd( -106.681, 263.862, -51.1917, 0.37 ) }
    dend_15 { pt3dadd( -107.684, 268.0, -53.927, 0.37 ) }
    dend_15 { pt3dadd( -108.447, 271.451, -56.1952, 0.37 ) }
    dend_15 { pt3dadd( -108.657, 272.568, -56.9209, 0.37 ) }
    dend_15 { pt3dadd( -108.931, 274.326, -58.0688, 0.37 ) }
    dend_15 { pt3dadd( -108.991, 274.869, -58.4066, 0.37 ) }
    dend_15 { pt3dadd( -109.179, 278.546, -60.3134, 0.37 ) }
    dend_15 { pt3dadd( -109.25, 281.471, -61.4986, 0.37 ) }
    dend_15 { pt3dadd( -109.27, 282.349, -61.7475, 0.37 ) }
    dend_15 { pt3dadd( -109.37, 283.963, -62.1132, 0.37 ) }
    dend_15 { pt3dadd( -109.619, 286.481, -62.6045, 0.37 ) }
    dend_15 { pt3dadd( -109.812, 288.059, -63.0394, 0.37 ) }
    dend_15 { pt3dadd( -110.198, 290.541, -63.82, 0.37 ) }
    dend_15 { pt3dadd( -110.576, 292.555, -64.6967, 0.37 ) }
    dend_15 { pt3dadd( -110.96, 294.635, -65.9021, 0.37 ) }
    dend_15 { pt3dadd( -111.101, 295.543, -66.6037, 0.37 ) }
    dend_15 { pt3dadd( -111.636, 299.735, -70.5559, 0.37 ) }
    dend_15 { pt3dadd( -111.806, 301.445, -72.8367, 0.37 ) }
    dend_15 { pt3dadd( -111.855, 302.447, -74.454, 0.37 ) }
    dend_15 { pt3dadd( -111.902, 303.834, -76.9265, 0.37 ) }
    dend_15 { pt3dadd( -111.864, 305.41, -79.7293, 0.37 ) }
    dend_15 { pt3dadd( -111.866, 305.774, -80.2632, 0.37 ) }
    dend_15 { pt3dadd( -111.978, 310.38, -85.4754, 0.37 ) }
    dend_15 { pt3dadd( -112.009, 311.284, -86.4185, 0.37 ) }
    dend_15 { pt3dadd( -112.102, 312.348, -87.3257, 0.37 ) }
    dend_15 { pt3dadd( -112.302, 313.997, -88.2127, 0.37 ) }
    dend_15 { pt3dadd( -112.9, 318.192, -89.7112, 0.37 ) }
    dend_15 { pt3dadd( -113.196, 320.455, -90.2966, 0.37 ) }
    dend_15 { pt3dadd( -113.427, 321.743, -90.5462, 0.37 ) }
    dend_15 { pt3dadd( -113.81, 323.489, -91.1665, 0.37 ) }
    dend_15 { pt3dadd( -114.509, 326.438, -92.5896, 0.37 ) }
    dend_15 { pt3dadd( -114.893, 327.974, -93.5002, 0.37 ) }
    dend_15 { pt3dadd( -115.628, 330.687, -95.3755, 0.37 ) }
    dend_15 { pt3dadd( -116.945, 334.492, -99.1143, 0.37 ) }
    dend_15 { pt3dadd( -118.286, 337.664, -104.303, 0.37 ) }
    dend_15 { pt3dadd( -118.492, 338.147, -105.324, 0.37 ) }
    dend_15 { pt3dadd( -118.643, 338.503, -106.212, 0.37 ) }
    dend_15 { pt3dadd( -118.983, 339.431, -108.681, 0.37 ) }
    dend_15 { pt3dadd( -120.0, 342.68, -117.738, 0.37 ) }
    dend_15 { pt3dadd( -120.665, 346.466, -127.619, 0.37 ) }
    dend_15 { pt3dadd( -120.761, 347.25, -129.377, 0.37 ) }
    dend_15 { pt3dadd( -120.834, 348.009, -130.975, 0.37 ) }
    dend_15 { pt3dadd( -120.895, 348.947, -132.843, 0.37 ) }
    dend_15 { pt3dadd( -120.91, 350.173, -135.084, 0.37 ) }
    dend_15 { pt3dadd( -120.947, 354.073, -140.716, 0.37 ) }
    dend_15 { pt3dadd( -121.027, 356.041, -143.285, 0.37 ) }
    dend_15 { pt3dadd( -121.123, 357.078, -144.739, 0.37 ) }
    dend_15 { pt3dadd( -121.528, 359.184, -147.747, 0.37 ) }
    dend_15 { pt3dadd( -121.879, 360.301, -149.401, 0.37 ) }
    dend_15 { pt3dadd( -122.091, 360.705, -149.947, 0.37 ) }
    dend_15 { pt3dadd( -122.978, 361.901, -151.279, 0.37 ) }
    dend_15 { pt3dadd( -123.74, 362.817, -152.163, 0.37 ) }
    dend_15 { pt3dadd( -125.866, 365.18, -154.1, 0.37 ) }
    dend_15 { pt3dadd( -127.945, 367.729, -155.43, 0.37 ) }
    dend_15 { pt3dadd( -130.656, 371.647, -156.799, 0.37 ) }
    dend_15 { pt3dadd( -131.234, 372.715, -157.038, 0.37 ) }
    dend_15 { pt3dadd( -131.388, 373.094, -157.077, 0.37 ) }
    dend_15 { pt3dadd( -132.235, 376.057, -157.122, 0.37 ) }
    dend_15 { pt3dadd( -133.447, 382.181, -156.629, 0.37 ) }
    dend_15 { pt3dadd( -133.898, 384.731, -156.912, 0.37 ) }
    dend_15 { pt3dadd( -134.297, 387.099, -157.754, 0.37 ) }
    dend_15 { pt3dadd( -134.662, 389.001, -158.78, 0.37 ) }
    dend_15 { pt3dadd( -135.218, 391.467, -160.586, 0.37 ) }
    dend_15 { pt3dadd( -135.866, 394.071, -162.841, 0.37 ) }
    dend_15 { pt3dadd( -138.727, 403.182, -171.956, 0.37 ) }
    dend_15 { pt3dadd( -139.826, 406.169, -175.212, 0.37 ) }
    dend_15 { pt3dadd( -140.422, 407.746, -177.068, 0.37 ) }
    dend_15 { pt3dadd( -141.947, 411.919, -182.356, 0.37 ) }
    dend_15 { pt3dadd( -142.253, 412.8, -183.554, 0.37 ) }
    dend_15 { pt3dadd( -142.757, 414.29, -185.608, 0.37 ) }
    dend_15 { pt3dadd( -143.449, 416.251, -187.954, 0.37 ) }
    dend_15 { pt3dadd( -144.536, 419.34, -191.589, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( -145.326, 421.695, -194.403, 0.37 ) }
    dend_15 { pt3dadd( -145.48, 422.231, -195.056, 0.37 ) }
    dend_15 { pt3dadd( -145.746, 423.443, -196.641, 0.37 ) }
    dend_15 { pt3dadd( -145.779, 423.991, -197.372, 0.37 ) }
    dend_15 { pt3dadd( -145.776, 424.077, -197.474, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 5/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -40.4818, 79.4523, -2.9904, 0.37 ) }
    dend_10 { pt3dadd( -48.3039, 87.3317, 1.62396, 0.37 ) }
    dend_10 { pt3dadd( -49.89, 88.989, 2.30372, 0.37 ) }
    dend_10 { pt3dadd( -52.465, 91.7197, 3.02789, 0.37 ) }
    dend_10 { pt3dadd( -54.3339, 93.7011, 3.43945, 0.37 ) }
    dend_10 { pt3dadd( -56.1096, 95.5833, 3.71707, 0.37 ) }
    dend_10 { pt3dadd( -57.8546, 97.4532, 3.89217, 0.37 ) }
    dend_10 { pt3dadd( -57.9272, 97.5432, 3.87637, 0.37 ) }
    dend_10 { pt3dadd( -59.7575, 99.6433, 3.57437, 0.37 ) }
    dend_10 { pt3dadd( -59.8356, 99.7294, 3.56721, 0.37 ) }
    dend_10 { pt3dadd( -61.7635, 101.847, 3.38497, 0.37 ) }
    dend_10 { pt3dadd( -63.9085, 104.522, 3.21873, 0.37 ) }
    dend_10 { pt3dadd( -65.622, 106.916, 3.11433, 0.37 ) }
    dend_10 { pt3dadd( -65.6944, 107.039, 3.10713, 0.37 ) }
    dend_10 { pt3dadd( -66.454, 108.647, 2.99268, 0.37 ) }
    dend_10 { pt3dadd( -66.5004, 108.769, 2.98264, 0.37 ) }
    dend_10 { pt3dadd( -67.0788, 110.982, 2.77607, 0.37 ) }
    dend_10 { pt3dadd( -67.1352, 111.252, 2.74626, 0.37 ) }
    dend_10 { pt3dadd( -68.2545, 115.306, 2.16589, 0.37 ) }
    dend_10 { pt3dadd( -68.3032, 115.438, 2.14365, 0.37 ) }
    dend_10 { pt3dadd( -68.9944, 116.737, 1.87441, 0.37 ) }
    dend_10 { pt3dadd( -69.0838, 116.856, 1.84493, 0.37 ) }
    dend_10 { pt3dadd( -71.0035, 118.586, 1.31575, 0.49 ) }
    dend_10 { pt3dadd( -72.9289, 120.08, 0.889247, 0.49 ) }
    dend_10 { pt3dadd( -73.1625, 120.271, 0.837176, 0.49 ) }
    dend_10 { pt3dadd( -74.4717, 121.546, 0.577508, 0.49 ) }
    dend_10 { pt3dadd( -74.6786, 121.773, 0.539371, 0.49 ) }
    dend_10 { pt3dadd( -76.0059, 123.319, 0.316398, 0.49 ) }
    dend_10 { pt3dadd( -77.6394, 125.411, 0.223332, 0.49 ) }
    dend_10 { pt3dadd( -79.8547, 128.457, 0.283199, 0.49 ) }
    dend_10 { pt3dadd( -81.1935, 130.391, 0.406713, 0.49 ) }
    dend_10 { pt3dadd( -81.27, 130.51, 0.419241, 0.49 ) }
    dend_10 { pt3dadd( -82.7639, 132.875, 0.718887, 0.49 ) }
    dend_10 { pt3dadd( -84.6399, 135.878, 1.17004, 0.49 ) }
    dend_10 { pt3dadd( -84.7486, 136.052, 1.19799, 0.49 ) }
    dend_10 { pt3dadd( -86.0739, 138.088, 1.48634, 0.49 ) }
    dend_10 { pt3dadd( -87.2907, 139.859, 1.66893, 0.49 ) }
    dend_10 { pt3dadd( -88.8641, 141.896, 1.81126, 0.49 ) }
    dend_10 { pt3dadd( -89.9927, 143.255, 1.86206, 0.49 ) }
    dend_10 { pt3dadd( -91.6368, 145.161, 1.87255, 0.49 ) }
    dend_10 { pt3dadd( -93.9429, 147.755, 1.8994, 0.49 ) }
    dend_10 { pt3dadd( -96.7343, 150.779, 1.94151, 0.49 ) }
    dend_10 { pt3dadd( -99.881, 154.139, 2.01169, 0.49 ) }
    dend_10 { pt3dadd( -101.018, 155.375, 2.04429, 0.49 ) }
    dend_10 { pt3dadd( -102.584, 157.104, 2.07873, 0.49 ) }
    dend_10 { pt3dadd( -102.791, 157.352, 2.07573, 0.49 ) }
    dend_10 { pt3dadd( -103.95, 159.061, 2.00191, 0.49 ) }
    dend_10 { pt3dadd( -104.002, 159.165, 1.99139, 0.49 ) }
    dend_10 { pt3dadd( -105.106, 161.818, 1.65857, 0.49 ) }
    dend_10 { pt3dadd( -105.321, 162.23, 1.59046, 0.49 ) }
    dend_10 { pt3dadd( -106.499, 164.109, 1.22526, 0.49 ) }
    dend_10 { pt3dadd( -106.604, 164.285, 1.1945, 0.49 ) }
    dend_10 { pt3dadd( -108.13, 166.998, 0.795125, 0.49 ) }
    dend_10 { pt3dadd( -108.197, 167.123, 0.781663, 0.49 ) }
    dend_10 { pt3dadd( -110.071, 170.797, 0.548127, 0.49 ) }
    dend_10 { pt3dadd( -110.608, 171.86, 0.513931, 0.49 ) }
    dend_10 { pt3dadd( -111.715, 174.41, 0.358434, 0.49 ) }
    dend_10 { pt3dadd( -112.442, 176.453, 0.184383, 0.49 ) }
    dend_10 { pt3dadd( -113.337, 179.792, -0.124743, 0.49 ) }
    dend_10 { pt3dadd( -113.979, 182.852, -0.418081, 0.49 ) }
    dend_10 { pt3dadd( -113.993, 182.97, -0.428652, 0.49 ) }
    dend_10 { pt3dadd( -114.452, 188.342, -0.878686, 0.24 ) }
    dend_10 { pt3dadd( -114.651, 191.766, -1.15697, 0.24 ) }
    dend_10 { pt3dadd( -114.662, 193.918, -1.32975, 0.24 ) }
    dend_10 { pt3dadd( -114.652, 194.121, -1.34667, 0.24 ) }
    dend_10 { pt3dadd( -114.469, 196.519, -1.65935, 0.24 ) }
    dend_10 { pt3dadd( -114.285, 198.93, -2.03602, 0.24 ) }
    dend_10 { pt3dadd( -114.261, 199.237, -2.08247, 0.24 ) }
    dend_10 { pt3dadd( -114.047, 201.974, -2.62802, 0.24 ) }
    dend_10 { pt3dadd( -114.021, 202.434, -2.73347, 0.24 ) }
    dend_10 { pt3dadd( -113.809, 208.218, -4.06924, 0.24 ) }
    dend_10 { pt3dadd( -113.808, 208.334, -4.09506, 0.24 ) }
    dend_10 { pt3dadd( -113.793, 211.321, -4.71774, 0.24 ) }
    dend_10 { pt3dadd( -113.79, 212.713, -4.97891, 0.24 ) }
    dend_10 { pt3dadd( -113.792, 212.946, -5.01476, 0.24 ) }
    dend_10 { pt3dadd( -113.877, 215.239, -5.27284, 0.24 ) }
    dend_10 { pt3dadd( -114.046, 217.776, -5.54961, 0.24 ) }
    dend_10 { pt3dadd( -114.08, 218.125, -5.6098, 0.24 ) }
    dend_10 { pt3dadd( -114.409, 220.671, -6.2393, 0.24 ) }
    dend_10 { pt3dadd( -114.491, 221.219, -6.37858, 0.24 ) }
    dend_10 { pt3dadd( -114.773, 222.955, -6.83099, 0.24 ) }
    dend_10 { pt3dadd( -115.12, 225.114, -7.34564, 0.24 ) }
    dend_10 { pt3dadd( -115.543, 227.706, -7.89833, 0.24 ) }
    dend_10 { pt3dadd( -115.603, 228.091, -7.96341, 0.24 ) }
    dend_10 { pt3dadd( -116.671, 234.752, -8.83819, 0.24 ) }
    dend_10 { pt3dadd( -116.69, 234.893, -8.85686, 0.24 ) }
    dend_10 { pt3dadd( -117.091, 238.224, -9.26672, 0.24 ) }
    dend_10 { pt3dadd( -117.12, 238.424, -9.28653, 0.24 ) }
    dend_10 { pt3dadd( -117.326, 239.822, -9.43801, 0.24 ) }
    dend_10 { pt3dadd( -117.347, 239.942, -9.45193, 0.24 ) }
    dend_10 { pt3dadd( -118.051, 243.143, -9.82183, 0.24 ) }
    dend_10 { pt3dadd( -118.113, 243.423, -9.84876, 0.24 ) }
    dend_10 { pt3dadd( -118.84, 246.644, -10.1226, 0.24 ) }
    dend_10 { pt3dadd( -119.046, 249.156, -10.5909, 0.24 ) }
    dend_10 { pt3dadd( -119.047, 249.273, -10.618, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( -118.941, 251.039, -11.0127, 0.24 ) }
    dend_10 { pt3dadd( -118.663, 253.33, -11.5043, 0.24 ) }
    dend_10 { pt3dadd( -118.588, 253.875, -11.6222, 0.24 ) }
    dend_10 { pt3dadd( -117.02, 262.669, -13.7207, 0.24 ) }
    dend_10 { pt3dadd( -116.996, 262.796, -13.7535, 0.24 ) }
    dend_10 { pt3dadd( -116.353, 266.068, -14.607, 0.24 ) }
    dend_10 { pt3dadd( -116.296, 266.337, -14.6786, 0.24 ) }
    dend_10 { pt3dadd( -115.689, 269.156, -15.3648, 0.24 ) }
    dend_10 { pt3dadd( -115.373, 270.702, -15.634, 0.24 ) }
    dend_10 { pt3dadd( -115.357, 270.844, -15.6287, 0.24 ) }
    dend_10 { pt3dadd( -115.287, 272.332, -15.5791, 0.24 ) }
    dend_10 { pt3dadd( -115.285, 272.955, -15.5606, 0.24 ) }
    dend_10 { pt3dadd( -115.38, 274.942, -15.4762, 0.24 ) }
    dend_10 { pt3dadd( -115.4, 275.145, -15.4637, 0.24 ) }
    dend_10 { pt3dadd( -116.004, 279.034, -15.1654, 0.24 ) }
    dend_10 { pt3dadd( -116.316, 280.511, -15.0708, 0.24 ) }
    dend_10 { pt3dadd( -116.397, 280.812, -15.0556, 0.24 ) }
    dend_10 { pt3dadd( -116.946, 282.747, -14.9607, 0.24 ) }
    dend_10 { pt3dadd( -117.387, 284.272, -14.8842, 0.24 ) }
    dend_10 { pt3dadd( -117.417, 284.387, -14.8769, 0.24 ) }
    dend_10 { pt3dadd( -117.792, 286.131, -14.7321, 0.24 ) }
    dend_10 { pt3dadd( -117.815, 286.271, -14.719, 0.24 ) }
    dend_10 { pt3dadd( -118.094, 288.373, -14.5058, 0.24 ) }
    dend_10 { pt3dadd( -118.1, 288.506, -14.4897, 0.24 ) }
    dend_10 { pt3dadd( -118.089, 290.759, -14.1889, 0.24 ) }
    dend_10 { pt3dadd( -118.081, 290.952, -14.1616, 0.24 ) }
    dend_10 { pt3dadd( -117.958, 292.325, -14.0489, 0.24 ) }
    dend_10 { pt3dadd( -117.933, 292.61, -14.0364, 0.24 ) }
    dend_10 { pt3dadd( -117.661, 295.104, -13.9679, 0.24 ) }
    dend_10 { pt3dadd( -117.406, 297.189, -13.9802, 0.24 ) }
    dend_10 { pt3dadd( -117.39, 297.321, -13.9832, 0.24 ) }
    dend_10 { pt3dadd( -116.849, 301.958, -14.123, 0.37 ) }
    dend_10 { pt3dadd( -116.619, 304.107, -14.2015, 0.37 ) }
    dend_10 { pt3dadd( -116.429, 306.037, -14.2798, 0.37 ) }
    dend_10 { pt3dadd( -116.079, 310.231, -14.4436, 0.37 ) }
    dend_10 { pt3dadd( -115.9, 312.655, -14.5144, 0.37 ) }
    dend_10 { pt3dadd( -115.894, 312.786, -14.5153, 0.37 ) }
    dend_10 { pt3dadd( -115.918, 314.29, -14.4661, 0.37 ) }
    dend_10 { pt3dadd( -115.939, 314.615, -14.4546, 0.37 ) }
    dend_10 { pt3dadd( -116.358, 317.414, -14.3206, 0.37 ) }
    dend_10 { pt3dadd( -116.388, 317.554, -14.3089, 0.37 ) }
    dend_10 { pt3dadd( -116.762, 319.336, -14.1574, 0.37 ) }
    dend_10 { pt3dadd( -117.183, 321.5, -13.9658, 0.37 ) }
    dend_10 { pt3dadd( -117.204, 321.632, -13.9606, 0.37 ) }
    dend_10 { pt3dadd( -117.567, 323.852, -13.9821, 0.37 ) }
    dend_10 { pt3dadd( -117.591, 323.99, -14.0044, 0.37 ) }
    dend_10 { pt3dadd( -117.866, 325.805, -14.6013, 0.37 ) }
    dend_10 { pt3dadd( -117.901, 326.062, -14.7176, 0.37 ) }
    dend_10 { pt3dadd( -118.291, 328.563, -15.9516, 0.37 ) }
    dend_10 { pt3dadd( -118.736, 331.058, -17.2314, 0.37 ) }
    dend_10 { pt3dadd( -119.27, 334.105, -18.7508, 0.37 ) }
    dend_10 { pt3dadd( -119.788, 337.014, -20.1284, 0.37 ) }
    dend_10 { pt3dadd( -119.836, 337.287, -20.2382, 0.37 ) }
    dend_10 { pt3dadd( -120.463, 340.596, -21.2318, 0.37 ) }
    dend_10 { pt3dadd( -120.49, 340.734, -21.2582, 0.37 ) }
    dend_10 { pt3dadd( -120.963, 343.469, -21.4632, 0.37 ) }
    dend_10 { pt3dadd( -120.986, 343.601, -21.4581, 0.37 ) }
    dend_10 { pt3dadd( -121.68, 347.241, -21.132, 0.37 ) }
    dend_10 { pt3dadd( -122.178, 349.809, -20.9041, 0.37 ) }
    dend_10 { pt3dadd( -122.206, 350.001, -20.885, 0.37 ) }
    dend_10 { pt3dadd( -122.587, 352.921, -20.5809, 0.37 ) }
    dend_10 { pt3dadd( -122.602, 353.064, -20.5651, 0.37 ) }
    dend_10 { pt3dadd( -122.772, 355.345, -20.2967, 0.37 ) }
    dend_10 { pt3dadd( -122.778, 355.489, -20.2786, 0.37 ) }
    dend_10 { pt3dadd( -122.856, 358.222, -19.9266, 0.37 ) }
    dend_10 { pt3dadd( -122.881, 358.535, -19.8902, 0.37 ) }
    dend_10 { pt3dadd( -123.239, 361.646, -19.5548, 0.37 ) }
    dend_10 { pt3dadd( -123.488, 363.613, -19.3482, 0.37 ) }
    dend_10 { pt3dadd( -123.517, 363.899, -19.3164, 0.37 ) }
    dend_10 { pt3dadd( -123.67, 365.333, -19.1589, 0.37 ) }
    dend_10 { pt3dadd( -124.028, 367.993, -18.8844, 0.37 ) }
    dend_10 { pt3dadd( -124.25, 370.049, -18.6592, 0.37 ) }
    dend_10 { pt3dadd( -124.273, 370.362, -18.6212, 0.37 ) }
    dend_10 { pt3dadd( -124.356, 372.595, -18.3236, 0.37 ) }
    dend_10 { pt3dadd( -124.351, 372.739, -18.3197, 0.37 ) }
    dend_10 { pt3dadd( -124.237, 374.909, -18.4522, 0.37 ) }
    dend_10 { pt3dadd( -124.217, 375.349, -18.515, 0.37 ) }
    dend_10 { pt3dadd( -124.186, 378.287, -19.07, 0.37 ) }
    dend_10 { pt3dadd( -124.189, 378.555, -19.1271, 0.37 ) }
    dend_10 { pt3dadd( -124.278, 383.501, -20.2218, 0.37 ) }
    dend_10 { pt3dadd( -124.3, 385.374, -20.577, 0.37 ) }
    dend_10 { pt3dadd( -124.298, 385.515, -20.5953, 0.37 ) }
    dend_10 { pt3dadd( -124.313, 387.665, -20.7084, 0.37 ) }
    dend_10 { pt3dadd( -124.32, 387.981, -20.7007, 0.37 ) }
    dend_10 { pt3dadd( -124.408, 390.199, -20.4362, 0.37 ) }
    dend_10 { pt3dadd( -124.571, 392.776, -19.8502, 0.37 ) }
    dend_10 { pt3dadd( -124.644, 394.671, -19.4117, 0.37 ) }
    dend_10 { pt3dadd( -124.735, 397.515, -18.9053, 0.37 ) }
    dend_10 { pt3dadd( -124.743, 397.819, -18.8634, 0.37 ) }
    dend_10 { pt3dadd( -124.814, 400.593, -18.5999, 0.37 ) }
    dend_10 { pt3dadd( -124.819, 401.027, -18.5784, 0.37 ) }
    dend_10 { pt3dadd( -124.741, 403.331, -18.5508, 0.37 ) }
    dend_10 { pt3dadd( -124.551, 406.063, -18.6036, 0.37 ) }
    dend_10 { pt3dadd( -124.532, 406.205, -18.6043, 0.37 ) }
    dend_10 { pt3dadd( -124.201, 407.85, -18.8174, 0.37 ) }
    dend_10 { pt3dadd( -123.751, 409.69, -19.1852, 0.37 ) }
    dend_10 { pt3dadd( -123.421, 411.054, -19.4594, 0.37 ) }
    dend_10 { pt3dadd( -123.126, 412.244, -19.7022, 0.37 ) }
    dend_10 { pt3dadd( -122.757, 413.83, -19.9543, 0.37 ) }
    dend_10 { pt3dadd( -121.301, 420.343, -20.9223, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_10 { pt3dadd( -120.878, 422.815, -21.2653, 0.37 ) }
    dend_10 { pt3dadd( -120.472, 426.067, -21.6844, 0.37 ) }
    dend_10 { pt3dadd( -120.46, 426.21, -21.6967, 0.37 ) }
    dend_10 { pt3dadd( -120.207, 430.794, -21.8765, 0.37 ) }
    dend_10 { pt3dadd( -120.201, 431.101, -21.8643, 0.37 ) }
    dend_10 { pt3dadd( -120.238, 434.854, -21.3499, 0.37 ) }
    dend_10 { pt3dadd( -120.233, 434.987, -21.3464, 0.37 ) }
    dend_10 { pt3dadd( -119.888, 439.564, -21.5861, 0.37 ) }
    dend_10 { pt3dadd( -119.864, 439.876, -21.6193, 0.37 ) }
    dend_10 { pt3dadd( -119.445, 444.838, -22.4171, 0.37 ) }
    dend_10 { pt3dadd( -119.342, 446.001, -22.6273, 0.37 ) }
    dend_10 { pt3dadd( -118.407, 453.272, -24.0194, 0.37 ) }
    dend_10 { pt3dadd( -118.383, 453.461, -24.057, 0.37 ) }
    dend_10 { pt3dadd( -117.956, 456.843, -24.7684, 0.37 ) }
    dend_10 { pt3dadd( -117.93, 457.039, -24.8048, 0.37 ) }
    dend_10 { pt3dadd( -117.616, 459.319, -25.1362, 0.37 ) }
    dend_10 { pt3dadd( -117.295, 462.06, -25.1291, 0.37 ) }
    dend_10 { pt3dadd( -117.273, 462.489, -25.0118, 0.37 ) }
    dend_10 { pt3dadd( -117.303, 464.118, -24.4972, 0.37 ) }
    dend_10 { pt3dadd( -117.321, 464.377, -24.3988, 0.37 ) }
    dend_10 { pt3dadd( -117.547, 465.689, -23.8933, 0.37 ) }
    dend_10 { pt3dadd( -118.063, 467.144, -23.0341, 0.37 ) }
    dend_10 { pt3dadd( -118.896, 468.941, -22.0765, 0.37 ) }
    dend_10 { pt3dadd( -119.917, 471.076, -21.08, 0.37 ) }
    dend_10 { pt3dadd( -119.959, 471.181, -21.0434, 0.37 ) }
    dend_10 { pt3dadd( -120.548, 473.051, -20.5543, 0.37 ) }
    dend_10 { pt3dadd( -120.937, 477.43, -20.7029, 0.37 ) }
    dend_10 { pt3dadd( -120.511, 481.752, -21.8316, 0.37 ) }
    dend_10 { pt3dadd( -120.409, 482.304, -22.0527, 0.37 ) }
    dend_10 { pt3dadd( -119.898, 484.68, -23.2725, 0.37 ) }
    dend_10 { pt3dadd( -119.855, 484.949, -23.4141, 0.37 ) }
    dend_10 { pt3dadd( -119.292, 489.01, -25.7291, 0.37 ) }
    dend_10 { pt3dadd( -119.277, 489.132, -25.7944, 0.37 ) }
    dend_10 { pt3dadd( -119.078, 491.403, -26.6601, 0.37 ) }
    dend_10 { pt3dadd( -119.067, 491.585, -26.723, 0.37 ) }
    dend_10 { pt3dadd( -118.974, 494.301, -27.5411, 0.37 ) }
    dend_10 { pt3dadd( -118.968, 494.529, -27.5955, 0.37 ) }
    dend_10 { pt3dadd( -118.942, 496.902, -27.9221, 0.37 ) }
    dend_10 { pt3dadd( -118.914, 500.24, -28.2186, 0.37 ) }
    dend_10 { pt3dadd( -118.901, 500.648, -28.2393, 0.37 ) }
    dend_10 { pt3dadd( -118.874, 502.522, -28.2475, 0.37 ) }
    dend_10 { pt3dadd( -118.875, 502.641, -28.2418, 0.37 ) }
    dend_10 { pt3dadd( -118.9, 504.505, -28.0428, 0.37 ) }
    dend_10 { pt3dadd( -119.006, 507.099, -27.5837, 0.37 ) }
    dend_10 { pt3dadd( -119.014, 507.239, -27.5487, 0.37 ) }
    dend_10 { pt3dadd( -119.081, 508.999, -27.1172, 0.37 ) }
    dend_10 { pt3dadd( -119.099, 509.299, -27.0528, 0.37 ) }
    dend_10 { pt3dadd( -119.301, 512.092, -26.5517, 0.37 ) }
    dend_10 { pt3dadd( -119.304, 512.21, -26.5352, 0.37 ) }
    dend_10 { pt3dadd( -119.297, 514.46, -26.3456, 0.37 ) }
    dend_10 { pt3dadd( -119.294, 514.604, -26.3472, 0.37 ) }
    dend_10 { pt3dadd( -119.21, 517.678, -26.587, 0.37 ) }
    dend_10 { pt3dadd( -119.207, 517.796, -26.599, 0.37 ) }
    dend_10 { pt3dadd( -119.143, 520.111, -26.9034, 0.37 ) }
    dend_10 { pt3dadd( -119.128, 520.491, -26.953, 0.37 ) }
    dend_10 { pt3dadd( -118.806, 525.663, -27.6151, 0.37 ) }
    dend_10 { pt3dadd( -118.793, 525.847, -27.6346, 0.37 ) }
    dend_10 { pt3dadd( -118.546, 528.826, -27.9171, 0.37 ) }
    dend_10 { pt3dadd( -118.541, 528.942, -27.9417, 0.37 ) }
    dend_10 { pt3dadd( -118.549, 530.533, -28.4512, 0.37 ) }
    dend_10 { pt3dadd( -118.557, 530.923, -28.5863, 0.37 ) }
    dend_10 { pt3dadd( -118.667, 533.373, -29.6906, 0.37 ) }
    dend_10 { pt3dadd( -118.676, 533.608, -29.8208, 0.37 ) }
    dend_10 { pt3dadd( -118.827, 538.277, -33.4832, 0.37 ) }
    dend_10 { pt3dadd( -118.83, 538.364, -33.5604, 0.37 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 65/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -21.8563, -64.9521, 26.1324, 0.24 ) }
    dend_3 { pt3dadd( -19.3267, -65.5019, 24.5851, 0.24 ) }
    dend_3 { pt3dadd( -17.9552, -65.8, 23.7461, 0.24 ) }
    dend_3 { pt3dadd( -17.8664, -65.8193, 23.6918, 0.24 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 69/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -21.8563, -64.9521, 26.1324, 0.24 ) }
    dend_2 { pt3dadd( -19.6502, -70.2916, 27.511, 0.24 ) }
    dend_2 { pt3dadd( -18.6803, -72.6391, 28.1171, 0.24 ) }
    dend_2 { pt3dadd( -17.4194, -75.691, 28.9051, 0.24 ) }
    dend_2 { pt3dadd( -17.3699, -75.8108, 28.936, 0.24 ) }
    // Section: apic_6, id: apic_6, parent: apic_2 (entry count 74/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -35.7101, 141.034, 8.90931, 0.85 ) }
    apic_6 { pt3dadd( -37.5456, 144.827, 0.689442, 0.85 ) }
    apic_6 { pt3dadd( -37.8097, 145.524, -0.463339, 0.85 ) }
    apic_6 { pt3dadd( -37.8681, 145.7, -0.709332, 0.85 ) }
    apic_6 { pt3dadd( -38.167, 146.625, -1.70142, 0.85 ) }
    apic_6 { pt3dadd( -38.252, 146.896, -1.92212, 0.85 ) }
    apic_6 { pt3dadd( -38.6953, 148.493, -2.9743, 0.85 ) }
    apic_6 { pt3dadd( -39.1506, 150.71, -3.64769, 0.85 ) }
    apic_6 { pt3dadd( -39.1821, 150.833, -3.68599, 0.85 ) }
    apic_6 { pt3dadd( -39.7275, 152.733, -4.27002, 0.85 ) }
    apic_6 { pt3dadd( -41.2415, 156.658, -5.97336, 0.85 ) }
    apic_6 { pt3dadd( -41.8741, 158.174, -6.65251, 0.85 ) }
    apic_6 { pt3dadd( -41.9112, 158.26, -6.69149, 0.85 ) }
    apic_6 { pt3dadd( -42.4628, 159.538, -7.30069, 0.85 ) }
    apic_6 { pt3dadd( -42.4991, 159.623, -7.34055, 0.85 ) }
    apic_6 { pt3dadd( -45.3185, 165.974, -10.1672, 0.85 ) }
    apic_6 { pt3dadd( -46.398, 168.238, -11.0333, 0.85 ) }
    apic_6 { pt3dadd( -46.4967, 168.431, -11.1029, 0.85 ) }
    apic_6 { pt3dadd( -47.1006, 169.616, -11.4589, 0.85 ) }
    apic_6 { pt3dadd( -47.1408, 169.697, -11.4782, 0.85 ) }
    apic_6 { pt3dadd( -47.9442, 171.551, -12.1463, 0.85 ) }
    apic_6 { pt3dadd( -47.9753, 171.639, -12.1875, 0.85 ) }
    apic_6 { pt3dadd( -48.4545, 173.043, -13.0926, 0.85 ) }
    apic_6 { pt3dadd( -48.8558, 174.264, -13.9625, 0.85 ) }
    apic_6 { pt3dadd( -48.9177, 174.506, -14.1418, 0.85 ) }
    apic_6 { pt3dadd( -50.083, 180.895, -18.9714, 0.85 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_6 { pt3dadd( -50.1012, 181.091, -19.1262, 0.85 ) }
    apic_6 { pt3dadd( -50.1536, 182.577, -20.3103, 0.85 ) }
    apic_6 { pt3dadd( -50.1542, 182.659, -20.3699, 0.85 ) }
    apic_6 { pt3dadd( -50.119, 184.789, -21.6034, 0.85 ) }
    apic_6 { pt3dadd( -50.107, 185.254, -21.783, 0.85 ) }
    apic_6 { pt3dadd( -50.0627, 186.056, -21.873, 0.85 ) }
    apic_6 { pt3dadd( -50.0515, 186.254, -21.8939, 0.85 ) }
    apic_6 { pt3dadd( -49.7592, 190.886, -22.5474, 0.85 ) }
    apic_6 { pt3dadd( -49.6209, 193.09, -22.8643, 0.85 ) }
    apic_6 { pt3dadd( -49.6149, 193.216, -22.8828, 0.85 ) }
    apic_6 { pt3dadd( -49.5691, 194.511, -23.0453, 0.85 ) }
    apic_6 { pt3dadd( -49.5652, 194.614, -23.056, 0.85 ) }
    apic_6 { pt3dadd( -49.4214, 197.335, -23.2505, 0.85 ) }
    apic_6 { pt3dadd( -49.2027, 199.828, -23.3378, 0.85 ) }
    apic_6 { pt3dadd( -49.1979, 199.932, -23.3393, 0.85 ) }
    apic_6 { pt3dadd( -49.0994, 201.858, -23.3264, 0.85 ) }
    apic_6 { pt3dadd( -49.0891, 202.263, -23.3932, 0.85 ) }
    apic_6 { pt3dadd( -49.1606, 204.201, -23.9598, 0.85 ) }
    apic_6 { pt3dadd( -49.2165, 204.651, -24.1366, 0.85 ) }
    apic_6 { pt3dadd( -49.4305, 205.958, -24.7906, 0.85 ) }
    apic_6 { pt3dadd( -49.5737, 206.893, -25.287, 0.85 ) }
    apic_6 { pt3dadd( -50.2972, 212.096, -28.325, 0.85 ) }
    apic_6 { pt3dadd( -50.4674, 213.503, -29.1419, 0.85 ) }
    apic_6 { pt3dadd( -50.6453, 215.068, -30.0837, 0.85 ) }
    apic_6 { pt3dadd( -50.7035, 215.576, -30.3443, 0.85 ) }
    apic_6 { pt3dadd( -50.8882, 216.787, -30.7331, 0.85 ) }
    apic_6 { pt3dadd( -50.9334, 217.09, -30.7656, 0.85 ) }
    apic_6 { pt3dadd( -51.0147, 218.724, -30.563, 0.85 ) }
    apic_6 { pt3dadd( -51.0169, 218.856, -30.5475, 0.85 ) }
    apic_6 { pt3dadd( -51.0804, 220.876, -30.3007, 0.85 ) }
    apic_6 { pt3dadd( -51.3868, 223.761, -29.9054, 0.85 ) }
    apic_6 { pt3dadd( -51.4338, 224.055, -29.8624, 0.85 ) }
    apic_6 { pt3dadd( -51.8442, 225.881, -29.858, 0.85 ) }
    apic_6 { pt3dadd( -52.473, 227.972, -30.1441, 0.73 ) }
    apic_6 { pt3dadd( -52.5261, 228.115, -30.1799, 0.73 ) }
    apic_6 { pt3dadd( -53.3847, 230.309, -30.9302, 0.73 ) }
    apic_6 { pt3dadd( -53.4138, 230.382, -30.959, 0.73 ) }
    apic_6 { pt3dadd( -55.102, 234.702, -32.5701, 0.73 ) }
    apic_6 { pt3dadd( -55.214, 234.981, -32.676, 0.73 ) }
    apic_6 { pt3dadd( -56.072, 237.431, -33.5774, 0.73 ) }
    apic_6 { pt3dadd( -56.6626, 239.343, -34.1865, 0.73 ) }
    apic_6 { pt3dadd( -56.7829, 239.806, -34.288, 0.73 ) }
    apic_6 { pt3dadd( -57.0832, 241.07, -34.4094, 0.73 ) }
    apic_6 { pt3dadd( -57.1051, 241.168, -34.42, 0.73 ) }
    apic_6 { pt3dadd( -57.3662, 242.294, -34.7308, 0.73 ) }
    apic_6 { pt3dadd( -57.4339, 242.573, -34.8885, 0.73 ) }
    apic_6 { pt3dadd( -57.8287, 244.287, -35.9727, 0.73 ) }
    apic_6 { pt3dadd( -57.9161, 244.7, -36.2437, 0.73 ) }
    apic_6 { pt3dadd( -58.6179, 248.596, -39.1978, 0.73 ) }
    apic_6 { pt3dadd( -58.6399, 248.75, -39.3148, 0.73 ) }
    apic_6 { pt3dadd( -59.0437, 252.897, -42.2719, 0.73 ) }
    apic_6 { pt3dadd( -59.1528, 254.473, -43.5825, 0.73 ) }
    apic_6 { pt3dadd( -59.1571, 254.579, -43.6785, 0.73 ) }
    apic_6 { pt3dadd( -59.2414, 259.154, -47.8203, 0.73 ) }
    apic_6 { pt3dadd( -59.2391, 260.808, -49.2658, 0.73 ) }
    apic_6 { pt3dadd( -59.2379, 262.905, -51.0907, 0.73 ) }
    apic_6 { pt3dadd( -59.2691, 269.325, -56.5215, 0.73 ) }
    apic_6 { pt3dadd( -59.2727, 269.447, -56.6243, 0.73 ) }
    apic_6 { pt3dadd( -59.4009, 271.15, -57.9586, 0.73 ) }
    apic_6 { pt3dadd( -59.5938, 272.689, -59.043, 0.73 ) }
    apic_6 { pt3dadd( -59.6267, 272.87, -59.1669, 0.73 ) }
    apic_6 { pt3dadd( -60.0179, 274.436, -60.0954, 0.73 ) }
    apic_6 { pt3dadd( -60.0732, 274.633, -60.1698, 0.73 ) }
    apic_6 { pt3dadd( -61.2886, 278.636, -61.7761, 0.73 ) }
    apic_6 { pt3dadd( -61.3457, 278.808, -61.8526, 0.73 ) }
    apic_6 { pt3dadd( -61.7406, 280.137, -62.3245, 0.73 ) }
    apic_6 { pt3dadd( -62.449, 282.789, -63.0746, 0.73 ) }
    apic_6 { pt3dadd( -62.4739, 282.887, -63.0942, 0.73 ) }
    apic_6 { pt3dadd( -63.0975, 285.494, -63.3769, 0.73 ) }
    apic_6 { pt3dadd( -63.1222, 285.631, -63.3756, 0.73 ) }
    apic_6 { pt3dadd( -63.8668, 290.597, -63.1702, 0.73 ) }
    apic_6 { pt3dadd( -63.8809, 290.742, -63.1583, 0.73 ) }
    apic_6 { pt3dadd( -63.9373, 292.308, -62.9398, 0.73 ) }
    apic_6 { pt3dadd( -63.9328, 292.448, -62.9387, 0.73 ) }
    apic_6 { pt3dadd( -63.6717, 294.561, -63.2242, 0.73 ) }
    apic_6 { pt3dadd( -63.6534, 294.659, -63.2469, 0.73 ) }
    apic_6 { pt3dadd( -63.3098, 295.957, -63.7036, 0.73 ) }
    apic_6 { pt3dadd( -63.2916, 296.053, -63.7315, 0.73 ) }
    apic_6 { pt3dadd( -62.5201, 300.852, -65.0354, 0.73 ) }
    apic_6 { pt3dadd( -62.4833, 301.14, -65.0985, 0.73 ) }
    apic_6 { pt3dadd( -62.247, 303.69, -65.5648, 0.73 ) }
    apic_6 { pt3dadd( -62.2386, 303.79, -65.5779, 0.73 ) }
    apic_6 { pt3dadd( -61.9397, 307.921, -65.9111, 0.61 ) }
    apic_6 { pt3dadd( -61.9219, 308.245, -65.9124, 0.61 ) }
    apic_6 { pt3dadd( -61.7424, 311.035, -65.6396, 0.61 ) }
    apic_6 { pt3dadd( -61.7337, 311.137, -65.6224, 0.61 ) }
    apic_6 { pt3dadd( -61.5887, 313.363, -65.6959, 0.61 ) }
    apic_6 { pt3dadd( -61.5821, 313.488, -65.7202, 0.61 ) }
    apic_6 { pt3dadd( -61.4397, 316.075, -66.5383, 0.61 ) }
    apic_6 { pt3dadd( -61.3554, 318.197, -67.2623, 0.61 ) }
    apic_6 { pt3dadd( -61.2842, 321.123, -68.3801, 0.61 ) }
    apic_6 { pt3dadd( -61.0856, 330.193, -71.8098, 0.61 ) }
    apic_6 { pt3dadd( -61.0249, 333.498, -73.1141, 0.49 ) }
    apic_6 { pt3dadd( -61.0188, 333.802, -73.244, 0.49 ) }
    apic_6 { pt3dadd( -60.9683, 336.133, -74.3476, 0.49 ) }
    apic_6 { pt3dadd( -60.9684, 336.226, -74.3901, 0.49 ) }
    apic_6 { pt3dadd( -60.9729, 338.259, -75.2116, 0.49 ) }
    apic_6 { pt3dadd( -60.9715, 338.36, -75.2337, 0.49 ) }
    apic_6 { pt3dadd( -61.0521, 342.87, -76.6031, 0.49 ) }
    apic_6 { pt3dadd( -61.0578, 342.966, -76.6338, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_6 { pt3dadd( -61.1889, 345.047, -77.2489, 0.49 ) }
    apic_6 { pt3dadd( -61.2341, 345.837, -77.4611, 0.49 ) }
    apic_6 { pt3dadd( -61.3791, 348.665, -78.0853, 0.49 ) }
    apic_6 { pt3dadd( -61.3828, 348.749, -78.0997, 0.49 ) }
    apic_6 { pt3dadd( -61.5284, 352.45, -78.5054, 0.49 ) }
    apic_6 { pt3dadd( -61.625, 355.827, -78.8552, 0.49 ) }
    apic_6 { pt3dadd( -61.6283, 356.026, -78.8766, 0.49 ) }
    apic_6 { pt3dadd( -61.7571, 359.841, -79.1331, 0.49 ) }
    apic_6 { pt3dadd( -61.7668, 360.068, -79.1288, 0.49 ) }
    apic_6 { pt3dadd( -61.7725, 360.171, -79.1229, 0.49 ) }
    apic_6 { pt3dadd( -61.9942, 363.607, -79.0676, 0.49 ) }
    apic_6 { pt3dadd( -62.0294, 364.118, -79.0802, 0.49 ) }
    apic_6 { pt3dadd( -62.2913, 368.79, -79.2926, 0.49 ) }
    apic_6 { pt3dadd( -62.3913, 371.429, -79.5237, 0.49 ) }
    apic_6 { pt3dadd( -62.3989, 371.767, -79.5622, 0.49 ) }
    apic_6 { pt3dadd( -62.4353, 376.594, -80.3824, 0.49 ) }
    apic_6 { pt3dadd( -62.4032, 379.433, -81.0182, 0.49 ) }
    apic_6 { pt3dadd( -62.4016, 379.533, -81.0431, 0.49 ) }
    apic_6 { pt3dadd( -62.303, 383.113, -82.1374, 0.49 ) }
    apic_6 { pt3dadd( -62.3143, 383.413, -82.2477, 0.49 ) }
    apic_6 { pt3dadd( -62.6487, 387.26, -83.6642, 0.49 ) }
    apic_6 { pt3dadd( -62.6641, 387.357, -83.6954, 0.49 ) }
    apic_6 { pt3dadd( -63.2194, 389.949, -84.5898, 0.49 ) }
    apic_6 { pt3dadd( -63.2424, 390.045, -84.6193, 0.49 ) }
    apic_6 { pt3dadd( -64.708, 394.602, -86.6255, 0.49 ) }
    apic_6 { pt3dadd( -64.7636, 394.769, -86.708, 0.49 ) }
    apic_6 { pt3dadd( -65.7472, 397.672, -88.2562, 0.49 ) }
    apic_6 { pt3dadd( -65.7728, 397.756, -88.3076, 0.49 ) }
    apic_6 { pt3dadd( -66.4267, 400.076, -89.9014, 0.49 ) }
    apic_6 { pt3dadd( -68.0745, 406.639, -94.3811, 0.49 ) }
    apic_6 { pt3dadd( -68.4677, 408.509, -95.603, 0.49 ) }
    apic_6 { pt3dadd( -68.5335, 408.84, -95.8199, 0.49 ) }
    apic_6 { pt3dadd( -69.1827, 412.865, -98.6961, 0.49 ) }
    apic_6 { pt3dadd( -69.1918, 412.934, -98.7453, 0.49 ) }
    apic_6 { pt3dadd( -69.3334, 414.684, -99.9236, 0.49 ) }
    apic_6 { pt3dadd( -69.3618, 416.439, -100.87, 0.49 ) }
    apic_6 { pt3dadd( -69.3655, 416.656, -101.057, 0.49 ) }
    apic_6 { pt3dadd( -69.4372, 421.251, -105.579, 0.49 ) }
    apic_6 { pt3dadd( -69.4379, 421.319, -105.653, 0.49 ) }
    apic_6 { pt3dadd( -69.4544, 422.866, -107.533, 0.49 ) }
    apic_6 { pt3dadd( -69.4556, 423.255, -108.049, 0.49 ) }
    apic_6 { pt3dadd( -69.4142, 430.323, -117.882, 0.49 ) }
    apic_6 { pt3dadd( -69.3873, 431.228, -119.163, 0.49 ) }
    apic_6 { pt3dadd( -69.3743, 431.46, -119.502, 0.49 ) }
    apic_6 { pt3dadd( -69.178, 433.815, -123.285, 0.49 ) }
    apic_6 { pt3dadd( -69.1292, 434.242, -124.041, 0.49 ) }
    apic_6 { pt3dadd( -69.0734, 434.517, -124.544, 0.49 ) }
    apic_6 { pt3dadd( -68.8843, 435.168, -125.864, 0.49 ) }
    apic_6 { pt3dadd( -68.857, 435.257, -126.065, 0.49 ) }
    apic_6 { pt3dadd( -67.9389, 438.42, -133.1, 0.49 ) }
    apic_6 { pt3dadd( -67.9225, 438.497, -133.302, 0.49 ) }
    apic_6 { pt3dadd( -67.6716, 439.984, -137.643, 0.49 ) }
    apic_6 { pt3dadd( -67.4296, 442.058, -144.096, 0.49 ) }
    apic_6 { pt3dadd( -67.4256, 442.121, -144.297, 0.49 ) }
    apic_6 { pt3dadd( -67.4034, 442.584, -145.801, 0.49 ) }
    apic_6 { pt3dadd( -67.3126, 445.68, -156.335, 0.49 ) }
    apic_6 { pt3dadd( -67.3197, 445.914, -157.198, 0.49 ) }
    apic_6 { pt3dadd( -67.3238, 445.934, -157.288, 0.49 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 58/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -35.7101, 141.034, 8.90931, 0.49 ) }
    apic_3 { pt3dadd( -36.1629, 142.422, 9.16548, 0.49 ) }
    apic_3 { pt3dadd( -36.7438, 145.1, 9.62465, 0.49 ) }
    apic_3 { pt3dadd( -37.4635, 149.334, 10.3269, 0.37 ) }
    apic_3 { pt3dadd( -37.4736, 149.42, 10.3403, 0.37 ) }
    apic_3 { pt3dadd( -37.603, 150.849, 10.5593, 0.37 ) }
    apic_3 { pt3dadd( -37.6903, 152.049, 10.7399, 0.37 ) }
    apic_3 { pt3dadd( -37.7805, 155.682, 11.2466, 0.49 ) }
    apic_3 { pt3dadd( -37.7746, 155.779, 11.2591, 0.49 ) }
    apic_3 { pt3dadd( -37.4777, 157.567, 11.4707, 0.49 ) }
    apic_3 { pt3dadd( -37.4589, 157.669, 11.483, 0.49 ) }
    apic_3 { pt3dadd( -37.2194, 159.009, 11.6426, 0.49 ) }
    apic_3 { pt3dadd( -37.2083, 159.105, 11.6547, 0.49 ) }
    apic_3 { pt3dadd( -37.1806, 160.214, 11.807, 0.49 ) }
    apic_3 { pt3dadd( -37.163, 160.562, 11.9359, 0.49 ) }
    apic_3 { pt3dadd( -37.118, 161.192, 12.318, 0.49 ) }
    apic_3 { pt3dadd( -36.9336, 162.471, 13.2254, 0.49 ) }
    apic_3 { pt3dadd( -36.9145, 162.546, 13.2806, 0.49 ) }
    apic_3 { pt3dadd( -36.5747, 163.664, 14.0683, 0.49 ) }
    apic_3 { pt3dadd( -35.5376, 166.68, 16.1828, 0.49 ) }
    apic_3 { pt3dadd( -35.5147, 166.749, 16.2281, 0.49 ) }
    apic_3 { pt3dadd( -34.9495, 168.411, 17.227, 0.49 ) }
    apic_3 { pt3dadd( -34.4051, 169.992, 18.0455, 0.49 ) }
    apic_3 { pt3dadd( -34.1005, 170.987, 18.4647, 0.49 ) }
    apic_3 { pt3dadd( -34.0773, 171.077, 18.4899, 0.49 ) }
    apic_3 { pt3dadd( -33.7979, 172.632, 18.7056, 0.49 ) }
    apic_3 { pt3dadd( -33.6831, 173.536, 18.8307, 0.49 ) }
    apic_3 { pt3dadd( -33.5958, 174.851, 19.0166, 0.49 ) }
    apic_3 { pt3dadd( -33.5924, 175.146, 19.0601, 0.49 ) }
    apic_3 { pt3dadd( -33.5552, 177.054, 19.3394, 0.49 ) }
    apic_3 { pt3dadd( -33.5226, 178.03, 19.4809, 0.49 ) }
    apic_3 { pt3dadd( -33.4379, 179.759, 19.5995, 0.49 ) }
    apic_3 { pt3dadd( -33.4355, 179.962, 19.6024, 0.49 ) }
    apic_3 { pt3dadd( -33.4828, 181.157, 19.5857, 0.49 ) }
    apic_3 { pt3dadd( -33.5794, 182.573, 19.5383, 0.49 ) }
    apic_3 { pt3dadd( -33.5923, 182.678, 19.5339, 0.49 ) }
    apic_3 { pt3dadd( -33.9599, 185.305, 19.4598, 0.49 ) }
    apic_3 { pt3dadd( -34.2182, 186.894, 19.4508, 0.49 ) }
    apic_3 { pt3dadd( -34.461, 188.699, 19.4363, 0.49 ) }
    apic_3 { pt3dadd( -34.4724, 188.796, 19.4356, 0.49 ) }
    apic_3 { pt3dadd( -34.5957, 190.598, 19.4519, 0.49 ) }
    apic_3 { pt3dadd( -34.6159, 192.504, 19.5255, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_3 { pt3dadd( -34.5357, 194.156, 19.6383, 0.49 ) }
    apic_3 { pt3dadd( -34.291, 196.989, 19.8268, 0.49 ) }
    apic_3 { pt3dadd( -34.2791, 197.093, 19.8337, 0.49 ) }
    apic_3 { pt3dadd( -33.9672, 200.039, 20.0524, 0.49 ) }
    apic_3 { pt3dadd( -33.7487, 202.533, 20.2661, 0.49 ) }
    apic_3 { pt3dadd( -33.7176, 203.275, 20.3433, 0.49 ) }
    apic_3 { pt3dadd( -33.7289, 206.084, 20.7032, 0.49 ) }
    apic_3 { pt3dadd( -33.749, 206.482, 20.7668, 0.49 ) }
    apic_3 { pt3dadd( -33.8676, 208.503, 21.0894, 0.49 ) }
    apic_3 { pt3dadd( -34.0304, 210.512, 21.4167, 0.49 ) }
    apic_3 { pt3dadd( -34.1271, 212.132, 21.677, 0.49 ) }
    apic_3 { pt3dadd( -34.134, 212.338, 21.7099, 0.49 ) }
    apic_3 { pt3dadd( -34.1164, 214.172, 21.993, 0.49 ) }
    apic_3 { pt3dadd( -34.0126, 216.778, 22.3892, 0.49 ) }
    apic_3 { pt3dadd( -34.0024, 216.948, 22.4148, 0.49 ) }
    apic_3 { pt3dadd( -33.9032, 218.369, 22.6273, 0.49 ) }
    apic_3 { pt3dadd( -33.893, 218.56, 22.6561, 0.49 ) }
    apic_3 { pt3dadd( -33.859, 220.564, 22.8143, 0.49 ) }
    apic_3 { pt3dadd( -33.8593, 220.667, 22.8158, 0.49 ) }
    apic_3 { pt3dadd( -33.8982, 222.232, 22.7655, 0.49 ) }
    apic_3 { pt3dadd( -33.9939, 225.169, 22.6093, 0.49 ) }
    apic_3 { pt3dadd( -33.9973, 225.266, 22.6017, 0.49 ) }
    apic_3 { pt3dadd( -34.0335, 228.005, 22.3683, 0.49 ) }
    apic_3 { pt3dadd( -34.019, 230.119, 22.1014, 0.49 ) }
    apic_3 { pt3dadd( -34.0148, 230.346, 22.0677, 0.49 ) }
    apic_3 { pt3dadd( -33.9751, 231.206, 21.9303, 0.49 ) }
    apic_3 { pt3dadd( -33.971, 231.339, 21.9094, 0.49 ) }
    apic_3 { pt3dadd( -33.909, 233.457, 21.6899, 0.49 ) }
    apic_3 { pt3dadd( -33.8382, 235.448, 21.6263, 0.49 ) }
    apic_3 { pt3dadd( -33.8355, 235.535, 21.624, 0.49 ) }
    apic_3 { pt3dadd( -33.7458, 237.465, 21.594, 0.49 ) }
    apic_3 { pt3dadd( -33.7307, 237.675, 21.595, 0.49 ) }
    apic_3 { pt3dadd( -33.6253, 239.12, 21.6588, 0.49 ) }
    apic_3 { pt3dadd( -33.587, 239.634, 21.7027, 0.49 ) }
    apic_3 { pt3dadd( -33.4255, 241.167, 21.9086, 0.49 ) }
    apic_3 { pt3dadd( -33.4135, 241.269, 21.9225, 0.49 ) }
    apic_3 { pt3dadd( -33.1673, 242.858, 22.1322, 0.49 ) }
    apic_3 { pt3dadd( -32.8966, 244.637, 22.2645, 0.49 ) }
    apic_3 { pt3dadd( -32.8695, 244.828, 22.2685, 0.49 ) }
    apic_3 { pt3dadd( -32.72, 246.356, 22.1683, 0.49 ) }
    apic_3 { pt3dadd( -32.7069, 246.546, 22.14, 0.49 ) }
    apic_3 { pt3dadd( -32.6067, 247.658, 21.9179, 0.49 ) }
    apic_3 { pt3dadd( -32.3983, 249.544, 21.4625, 0.49 ) }
    apic_3 { pt3dadd( -32.2733, 251.006, 21.1585, 0.49 ) }
    apic_3 { pt3dadd( -32.2744, 252.387, 20.996, 0.49 ) }
    apic_3 { pt3dadd( -32.2937, 252.759, 20.9722, 0.49 ) }
    apic_3 { pt3dadd( -32.462, 254.942, 20.971, 0.49 ) }
    apic_3 { pt3dadd( -32.5732, 256.255, 21.0455, 0.49 ) }
    apic_3 { pt3dadd( -32.755, 258.874, 21.3223, 0.49 ) }
    apic_3 { pt3dadd( -32.9467, 262.034, 21.7188, 0.49 ) }
    apic_3 { pt3dadd( -32.9645, 262.356, 21.7664, 0.49 ) }
    apic_3 { pt3dadd( -33.1132, 265.213, 22.188, 0.49 ) }
    apic_3 { pt3dadd( -33.1406, 267.369, 22.4972, 0.49 ) }
    apic_3 { pt3dadd( -33.1153, 267.788, 22.5541, 0.49 ) }
    apic_3 { pt3dadd( -32.906, 269.192, 22.6077, 0.49 ) }
    apic_3 { pt3dadd( -32.8749, 269.337, 22.6008, 0.49 ) }
    apic_3 { pt3dadd( -32.3243, 272.032, 22.3188, 0.49 ) }
    apic_3 { pt3dadd( -31.8194, 274.541, 21.887, 0.49 ) }
    apic_3 { pt3dadd( -31.7968, 274.684, 21.8588, 0.49 ) }
    apic_3 { pt3dadd( -31.3289, 278.608, 21.0584, 0.49 ) }
    apic_3 { pt3dadd( -31.3183, 278.701, 21.0407, 0.49 ) }
    apic_3 { pt3dadd( -31.1267, 280.587, 20.7415, 0.49 ) }
    apic_3 { pt3dadd( -31.1176, 280.699, 20.7264, 0.49 ) }
    apic_3 { pt3dadd( -30.9559, 283.039, 20.5675, 0.49 ) }
    apic_3 { pt3dadd( -30.9414, 283.183, 20.5691, 0.49 ) }
    apic_3 { pt3dadd( -30.5289, 286.19, 20.6746, 0.49 ) }
    apic_3 { pt3dadd( -30.3618, 287.31, 20.6354, 0.49 ) }
    apic_3 { pt3dadd( -30.3456, 287.412, 20.6257, 0.49 ) }
    apic_3 { pt3dadd( -30.1257, 288.91, 20.4253, 0.49 ) }
    apic_3 { pt3dadd( -30.1122, 289.004, 20.4104, 0.49 ) }
    apic_3 { pt3dadd( -29.6939, 292.304, 19.8647, 0.49 ) }
    apic_3 { pt3dadd( -29.6557, 292.723, 19.8014, 0.49 ) }
    apic_3 { pt3dadd( -29.4653, 294.684, 19.5633, 0.49 ) }
    apic_3 { pt3dadd( -29.446, 294.883, 19.549, 0.49 ) }
    apic_3 { pt3dadd( -29.1899, 297.416, 19.4924, 0.49 ) }
    apic_3 { pt3dadd( -29.1784, 297.513, 19.4963, 0.49 ) }
    apic_3 { pt3dadd( -28.9157, 299.826, 19.8118, 0.49 ) }
    apic_3 { pt3dadd( -28.8926, 300.052, 19.8423, 0.49 ) }
    apic_3 { pt3dadd( -28.7847, 301.776, 20.0831, 0.49 ) }
    apic_3 { pt3dadd( -28.7795, 301.998, 20.1145, 0.49 ) }
    apic_3 { pt3dadd( -28.8027, 303.008, 20.2599, 0.49 ) }
    apic_3 { pt3dadd( -28.8763, 304.75, 20.5117, 0.49 ) }
    apic_3 { pt3dadd( -28.8909, 304.97, 20.5261, 0.49 ) }
    apic_3 { pt3dadd( -29.066, 307.062, 20.5442, 0.49 ) }
    apic_3 { pt3dadd( -29.0783, 307.148, 20.5412, 0.49 ) }
    apic_3 { pt3dadd( -29.2199, 307.953, 20.4899, 0.49 ) }
    apic_3 { pt3dadd( -29.4174, 309.061, 20.397, 0.49 ) }
    apic_3 { pt3dadd( -29.7589, 311.34, 20.1644, 0.49 ) }
    apic_3 { pt3dadd( -29.7785, 311.531, 20.1487, 0.49 ) }
    apic_3 { pt3dadd( -29.8924, 313.486, 20.0048, 0.49 ) }
    apic_3 { pt3dadd( -29.8945, 313.729, 19.9963, 0.49 ) }
    apic_3 { pt3dadd( -29.8264, 316.006, 19.9923, 0.49 ) }
    apic_3 { pt3dadd( -29.811, 316.368, 20.0096, 0.49 ) }
    apic_3 { pt3dadd( -29.7052, 318.804, 20.268, 0.49 ) }
    apic_3 { pt3dadd( -29.6954, 319.124, 20.3036, 0.49 ) }
    apic_3 { pt3dadd( -29.6356, 321.038, 20.524, 0.49 ) }
    apic_3 { pt3dadd( -29.6425, 321.352, 20.5645, 0.49 ) }
    apic_3 { pt3dadd( -29.8157, 323.439, 20.8595, 0.49 ) }
    apic_3 { pt3dadd( -29.881, 323.943, 20.9346, 0.49 ) }
    apic_3 { pt3dadd( -30.1744, 325.682, 21.1652, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    apic_3 { pt3dadd( -30.209, 325.906, 21.1614, 0.49 ) }
    apic_3 { pt3dadd( -30.4238, 327.485, 20.9524, 0.49 ) }
    apic_3 { pt3dadd( -30.4305, 327.587, 20.9318, 0.49 ) }
    apic_3 { pt3dadd( -30.4288, 329.103, 20.5586, 0.49 ) }
    apic_3 { pt3dadd( -30.4, 330.016, 20.3161, 0.49 ) }
    apic_3 { pt3dadd( -30.2164, 333.851, 19.1066, 0.49 ) }
    apic_3 { pt3dadd( -30.2043, 334.056, 19.0378, 0.49 ) }
    apic_3 { pt3dadd( -30.0892, 335.975, 18.4115, 0.49 ) }
    apic_3 { pt3dadd( -30.0198, 337.38, 17.9864, 0.49 ) }
    apic_3 { pt3dadd( -30.0074, 337.703, 17.9032, 0.49 ) }
    apic_3 { pt3dadd( -29.92, 340.476, 17.4018, 0.49 ) }
    apic_3 { pt3dadd( -29.9144, 340.617, 17.3886, 0.49 ) }
    apic_3 { pt3dadd( -29.816, 343.018, 17.1731, 0.49 ) }
    apic_3 { pt3dadd( -29.7918, 343.46, 17.1388, 0.49 ) }
    apic_3 { pt3dadd( -29.6464, 345.224, 17.0082, 0.49 ) }
    apic_3 { pt3dadd( -29.5839, 345.933, 16.9795, 0.49 ) }
    apic_3 { pt3dadd( -29.4741, 347.052, 16.9872, 0.49 ) }
    apic_3 { pt3dadd( -29.4387, 347.384, 16.9866, 0.49 ) }
    apic_3 { pt3dadd( -29.2166, 348.882, 16.9652, 0.49 ) }
    apic_3 { pt3dadd( -29.0725, 349.762, 16.9519, 0.49 ) }
    apic_3 { pt3dadd( -28.4924, 353.023, 16.506, 0.49 ) }
    apic_3 { pt3dadd( -28.266, 354.307, 16.2174, 0.49 ) }
    apic_3 { pt3dadd( -28.2073, 354.647, 16.1196, 0.49 ) }
    apic_3 { pt3dadd( -28.0393, 355.659, 15.7866, 0.49 ) }
    apic_3 { pt3dadd( -28.025, 355.748, 15.7533, 0.49 ) }
    apic_3 { pt3dadd( -27.4547, 359.228, 14.3553, 0.49 ) }
    apic_3 { pt3dadd( -27.3511, 359.869, 14.0338, 0.49 ) }
    apic_3 { pt3dadd( -27.2269, 360.886, 13.5272, 0.49 ) }
    apic_3 { pt3dadd( -27.1877, 361.302, 13.3499, 0.49 ) }
    apic_3 { pt3dadd( -27.1283, 362.113, 13.0649, 0.49 ) }
    apic_3 { pt3dadd( -27.1176, 362.196, 13.0459, 0.49 ) }
    apic_3 { pt3dadd( -26.8673, 363.38, 13.0311, 0.49 ) }
    apic_3 { pt3dadd( -26.8041, 363.724, 12.8477, 0.49 ) }
    apic_3 { pt3dadd( -26.6427, 364.693, 12.1208, 0.49 ) }
    apic_3 { pt3dadd( -26.6177, 364.879, 12.0062, 0.49 ) }
    apic_3 { pt3dadd( -26.5607, 365.719, 11.5688, 0.49 ) }
    apic_3 { pt3dadd( -26.5303, 366.624, 11.1438, 0.49 ) }
    apic_3 { pt3dadd( -26.4064, 373.091, 8.38816, 0.49 ) }
    apic_3 { pt3dadd( -26.4047, 373.315, 8.3012, 0.49 ) }
    apic_3 { pt3dadd( -26.3263, 378.081, 6.69104, 0.49 ) }
    apic_3 { pt3dadd( -26.2708, 380.243, 6.07731, 0.49 ) }
    apic_3 { pt3dadd( -26.2652, 380.465, 6.02224, 0.49 ) }
    apic_3 { pt3dadd( -26.2034, 381.794, 5.79709, 0.49 ) }
    apic_3 { pt3dadd( -26.1601, 382.255, 5.79931, 0.49 ) }
    apic_3 { pt3dadd( -25.9071, 384.262, 5.69956, 0.49 ) }
    apic_3 { pt3dadd( -25.8477, 384.57, 5.65985, 0.49 ) }
    apic_3 { pt3dadd( -25.3433, 387.066, 5.36071, 0.49 ) }
    apic_3 { pt3dadd( -25.2436, 387.669, 5.29974, 0.49 ) }
    apic_3 { pt3dadd( -25.0118, 389.606, 5.17239, 0.49 ) }
    apic_3 { pt3dadd( -24.9549, 390.215, 5.15252, 0.49 ) }
    apic_3 { pt3dadd( -24.8405, 392.043, 5.18575, 0.49 ) }
    apic_3 { pt3dadd( -24.7236, 393.819, 5.30988, 0.49 ) }
    apic_3 { pt3dadd( -24.7172, 393.916, 5.32328, 0.49 ) }
    apic_3 { pt3dadd( -24.6911, 396.088, 5.6325, 0.49 ) }
    apic_3 { pt3dadd( -24.7011, 396.296, 5.64852, 0.49 ) }
    apic_3 { pt3dadd( -24.9521, 398.101, 5.55637, 0.49 ) }
    apic_3 { pt3dadd( -24.9736, 398.202, 5.53884, 0.49 ) }
    apic_3 { pt3dadd( -25.2597, 399.404, 5.24549, 0.49 ) }
    apic_3 { pt3dadd( -25.7057, 401.155, 4.75211, 0.49 ) }
    apic_3 { pt3dadd( -26.2489, 403.215, 4.10303, 0.49 ) }
    apic_3 { pt3dadd( -26.814, 405.479, 3.38259, 0.49 ) }
    apic_3 { pt3dadd( -26.9239, 406.145, 3.16394, 0.49 ) }
    apic_3 { pt3dadd( -27.1029, 408.289, 2.58198, 0.49 ) }
    apic_3 { pt3dadd( -27.1054, 408.391, 2.55981, 0.49 ) }
    apic_3 { pt3dadd( -27.0638, 409.601, 2.35859, 0.49 ) }
    apic_3 { pt3dadd( -27.0545, 409.828, 2.32843, 0.49 ) }
    apic_3 { pt3dadd( -26.946, 413.433, 1.85863, 0.49 ) }
    apic_3 { pt3dadd( -26.9499, 414.946, 1.60008, 0.49 ) }
    apic_3 { pt3dadd( -26.9938, 416.237, 1.22151, 0.49 ) }
    apic_3 { pt3dadd( -27.0177, 416.64, 1.07528, 0.49 ) }
    apic_3 { pt3dadd( -27.2138, 419.315, -0.015965, 0.49 ) }
    apic_3 { pt3dadd( -27.3877, 421.281, -0.878967, 0.49 ) }
    apic_3 { pt3dadd( -27.4274, 421.658, -1.0577, 0.49 ) }
    apic_3 { pt3dadd( -27.7, 425.06, -2.76683, 0.49 ) }
    apic_3 { pt3dadd( -27.7015, 425.154, -2.8098, 0.49 ) }
    apic_3 { pt3dadd( -27.6398, 426.934, -3.50153, 0.49 ) }
    apic_3 { pt3dadd( -27.6298, 427.034, -3.52947, 0.49 ) }
    apic_3 { pt3dadd( -27.5207, 428.087, -3.84965, 0.49 ) }
    apic_3 { pt3dadd( -27.5058, 428.288, -3.89932, 0.49 ) }
    apic_3 { pt3dadd( -27.435, 430.181, -4.25521, 0.49 ) }
    apic_3 { pt3dadd( -27.4318, 430.283, -4.27363, 0.49 ) }
    apic_3 { pt3dadd( -27.3974, 431.841, -4.5599, 0.49 ) }
    apic_3 { pt3dadd( -27.3139, 437.325, -5.41089, 0.49 ) }
    apic_3 { pt3dadd( -27.2963, 439.18, -5.66653, 0.49 ) }
    apic_3 { pt3dadd( -27.2788, 440.549, -5.81424, 0.49 ) }
    apic_3 { pt3dadd( -27.2268, 443.086, -6.01619, 0.49 ) }
    apic_3 { pt3dadd( -27.2157, 443.41, -6.03347, 0.49 ) }
    apic_3 { pt3dadd( -27.0651, 446.303, -6.08304, 0.49 ) }
    apic_3 { pt3dadd( -27.0363, 446.704, -6.06151, 0.49 ) }
    apic_3 { pt3dadd( -26.8486, 448.832, -5.99015, 0.49 ) }
    apic_3 { pt3dadd( -26.7771, 449.672, -5.96788, 0.49 ) }
    apic_3 { pt3dadd( -26.5038, 453.795, -5.88292, 0.49 ) }
    apic_3 { pt3dadd( -26.4985, 453.9, -5.87971, 0.49 ) }
    apic_3 { pt3dadd( -26.3954, 456.56, -5.78561, 0.49 ) }
    apic_3 { pt3dadd( -26.3907, 456.972, -5.7866, 0.49 ) }
    apic_3 { pt3dadd( -26.4263, 459.392, -5.86829, 0.49 ) }
    apic_3 { pt3dadd( -26.4329, 459.538, -5.8779, 0.49 ) }
    apic_3 { pt3dadd( -26.6402, 462.898, -6.19648, 0.49 ) }
    apic_3 { pt3dadd( -26.6467, 462.992, -6.20945, 0.49 ) }
    apic_3 { pt3dadd( -26.872, 465.662, -6.73111, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_3 { pt3dadd( -26.885, 465.806, -6.76115, 0.49 ) }
    apic_3 { pt3dadd( -27.0589, 467.309, -7.03992, 0.49 ) }
    apic_3 { pt3dadd( -27.1278, 467.915, -7.12056, 0.49 ) }
    apic_3 { pt3dadd( -27.2394, 469.648, -7.23421, 0.49 ) }
    apic_3 { pt3dadd( -27.2417, 469.754, -7.23315, 0.49 ) }
    apic_3 { pt3dadd( -27.2117, 471.585, -7.0554, 0.49 ) }
    apic_3 { pt3dadd( -27.1223, 474.345, -6.74073, 0.49 ) }
    apic_3 { pt3dadd( -27.0846, 475.21, -6.62224, 0.49 ) }
    apic_3 { pt3dadd( -26.9986, 477.32, -6.3412, 0.49 ) }
    apic_3 { pt3dadd( -26.974, 477.932, -6.33973, 0.49 ) }
    apic_3 { pt3dadd( -26.8672, 480.135, -6.56592, 0.49 ) }
    apic_3 { pt3dadd( -26.8635, 480.238, -6.5864, 0.49 ) }
    apic_3 { pt3dadd( -26.8529, 481.372, -6.90555, 0.49 ) }
    apic_3 { pt3dadd( -26.8705, 481.714, -7.01552, 0.49 ) }
    apic_3 { pt3dadd( -27.3327, 486.142, -8.77696, 0.49 ) }
    apic_3 { pt3dadd( -27.3791, 486.586, -9.01, 0.49 ) }
    apic_3 { pt3dadd( -27.4983, 488.292, -9.90221, 0.49 ) }
    apic_3 { pt3dadd( -27.4992, 488.387, -9.94297, 0.49 ) }
    apic_3 { pt3dadd( -27.3996, 490.354, -10.5936, 0.49 ) }
    apic_3 { pt3dadd( -27.2283, 491.545, -10.7302, 0.49 ) }
    apic_3 { pt3dadd( -26.5257, 494.346, -10.2942, 0.49 ) }
    apic_3 { pt3dadd( -25.2482, 499.085, -9.31831, 0.49 ) }
    apic_3 { pt3dadd( -24.653, 501.079, -8.82406, 0.49 ) }
    apic_3 { pt3dadd( -24.5919, 501.292, -8.76637, 0.49 ) }
    apic_3 { pt3dadd( -23.9932, 503.441, -8.10359, 0.49 ) }
    apic_3 { pt3dadd( -23.844, 504.088, -7.90506, 0.49 ) }
    apic_3 { pt3dadd( -23.4311, 506.383, -7.27652, 0.49 ) }
    apic_3 { pt3dadd( -23.3118, 507.283, -7.1556, 0.49 ) }
    apic_3 { pt3dadd( -23.0304, 509.277, -6.8894, 0.49 ) }
    apic_3 { pt3dadd( -22.9963, 509.501, -6.85988, 0.49 ) }
    apic_3 { pt3dadd( -22.7509, 511.29, -6.62027, 0.49 ) }
    apic_3 { pt3dadd( -22.6293, 512.194, -6.49914, 0.49 ) }
    apic_3 { pt3dadd( -22.3427, 514.285, -6.21911, 0.49 ) }
    apic_3 { pt3dadd( -22.2197, 515.142, -6.10496, 0.49 ) }
    apic_3 { pt3dadd( -22.0861, 515.93, -6.00215, 0.49 ) }
    apic_3 { pt3dadd( -21.68, 517.974, -5.74191, 0.49 ) }
    apic_3 { pt3dadd( -21.281, 519.772, -5.51753, 0.49 ) }
    apic_3 { pt3dadd( -20.9314, 521.25, -5.33526, 0.49 ) }
    apic_3 { pt3dadd( -20.7547, 521.953, -5.24966, 0.49 ) }
    apic_3 { pt3dadd( -20.4924, 523.211, -5.0909, 0.49 ) }
    apic_3 { pt3dadd( -20.4329, 523.607, -5.03842, 0.49 ) }
    apic_3 { pt3dadd( -20.3959, 523.937, -4.99329, 0.49 ) }
    apic_3 { pt3dadd( -20.2848, 524.888, -4.86401, 0.49 ) }
    apic_3 { pt3dadd( -20.0632, 526.898, -4.58911, 0.49 ) }
    apic_3 { pt3dadd( -19.7816, 529.757, -4.19462, 0.49 ) }
    apic_3 { pt3dadd( -19.6336, 531.551, -3.94032, 0.49 ) }
    apic_3 { pt3dadd( -19.5606, 533.256, -3.6926, 0.49 ) }
    apic_3 { pt3dadd( -19.53, 536.296, -3.24176, 0.49 ) }
    apic_3 { pt3dadd( -19.5552, 538.052, -2.97723, 0.49 ) }
    apic_3 { pt3dadd( -19.6082, 540.857, -2.43441, 0.49 ) }
    apic_3 { pt3dadd( -19.5388, 544.311, -1.64202, 0.49 ) }
    apic_3 { pt3dadd( -19.2679, 547.825, -0.753114, 0.49 ) }
    apic_3 { pt3dadd( -18.821, 549.812, -0.24711, 0.49 ) }
    apic_3 { pt3dadd( -18.3711, 550.902, 0.0225, 0.49 ) }
    apic_3 { pt3dadd( -16.8344, 553.485, 0.455212, 0.49 ) }
    apic_3 { pt3dadd( -14.4543, 556.792, 0.956211, 0.49 ) }
    apic_3 { pt3dadd( -12.4847, 559.074, 1.24537, 0.49 ) }
    apic_3 { pt3dadd( -7.53963, 564.066, 1.72453, 0.49 ) }
    apic_3 { pt3dadd( -4.96331, 566.491, 1.85679, 0.49 ) }
    apic_3 { pt3dadd( -1.43957, 569.716, 1.8318, 0.49 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -39.6818, -50.979, 13.0313, 0.49 ) }
    dend_29 { pt3dadd( -40.0558, -53.1213, 20.8165, 0.49 ) }
    dend_29 { pt3dadd( -39.9821, -52.7342, 21.9512, 0.49 ) }
    dend_29 { pt3dadd( -40.1042, -54.1557, 21.2456, 0.37 ) }
    dend_29 { pt3dadd( -40.1268, -54.4841, 21.1286, 0.37 ) }
    dend_29 { pt3dadd( -40.2761, -56.737, 20.4033, 0.37 ) }
    dend_29 { pt3dadd( -40.2875, -56.8872, 20.3485, 0.37 ) }
    dend_29 { pt3dadd( -40.7954, -62.4495, 17.8513, 0.37 ) }
    dend_29 { pt3dadd( -41.0277, -65.5493, 16.4274, 0.37 ) }
    dend_29 { pt3dadd( -41.1104, -67.2306, 15.6552, 0.49 ) }
    dend_29 { pt3dadd( -41.1167, -67.3784, 15.5942, 0.49 ) }
    dend_29 { pt3dadd( -41.245, -69.689, 14.7748, 0.49 ) }
    dend_29 { pt3dadd( -41.3191, -70.3593, 14.6064, 0.49 ) }
    dend_29 { pt3dadd( -41.806, -73.0322, 14.3466, 0.49 ) }
    dend_29 { pt3dadd( -42.265, -75.2309, 13.4856, 0.49 ) }
    dend_29 { pt3dadd( -42.7063, -77.369, 12.3173, 0.49 ) }
    dend_29 { pt3dadd( -42.9857, -78.7429, 11.4749, 0.49 ) }
    dend_29 { pt3dadd( -43.2174, -79.9311, 10.7215, 0.49 ) }
    dend_29 { pt3dadd( -43.25, -80.106, 10.5867, 0.49 ) }
    dend_29 { pt3dadd( -44.7412, -87.9645, 3.39204, 0.49 ) }
    dend_29 { pt3dadd( -44.9443, -89.1312, 2.22954, 0.49 ) }
    dend_29 { pt3dadd( -44.973, -89.3356, 2.00899, 0.49 ) }
    dend_29 { pt3dadd( -45.1029, -90.6448, 0.521272, 0.49 ) }
    dend_29 { pt3dadd( -45.2469, -93.1987, -2.42207, 0.49 ) }
    dend_29 { pt3dadd( -45.251, -93.3046, -2.53755, 0.49 ) }
    dend_29 { pt3dadd( -45.2363, -94.1971, -3.07518, 0.49 ) }
    dend_29 { pt3dadd( -45.2269, -94.3539, -3.20342, 0.49 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 87/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -39.6818, -50.979, 13.0313, 0.73 ) }
    dend_24 { pt3dadd( -41.0055, -52.3761, 14.9044, 0.73 ) }
    dend_24 { pt3dadd( -42.4537, -53.9045, 16.9536, 0.73 ) }
    dend_24 { pt3dadd( -46.0132, -57.6611, 21.9904, 0.73 ) }
    dend_24 { pt3dadd( -47.8547, -59.6047, 24.5963, 0.73 ) }
    dend_24 { pt3dadd( -47.9967, -59.7544, 24.7971, 0.73 ) }
    dend_24 { pt3dadd( -49.718, -61.5711, 27.2328, 0.73 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 94/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -145.776, 424.077, -197.474, 0.37 ) }
    dend_17 { pt3dadd( -145.659, 424.938, -207.986, 0.37 ) }
    dend_17 { pt3dadd( -145.658, 424.951, -208.142, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 97/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -145.776, 424.077, -197.474, 0.37 ) }
    dend_16 { pt3dadd( -147.557, 425.24, -195.507, 0.37 ) }
    dend_16 { pt3dadd( -149.141, 426.358, -193.813, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_16 { pt3dadd( -149.337, 426.503, -193.607, 0.37 ) }
    dend_16 { pt3dadd( -150.697, 427.683, -191.955, 0.37 ) }
    dend_16 { pt3dadd( -154.778, 431.61, -186.58, 0.37 ) }
    dend_16 { pt3dadd( -155.07, 431.932, -186.177, 0.37 ) }
    dend_16 { pt3dadd( -155.928, 433.105, -184.705, 0.37 ) }
    dend_16 { pt3dadd( -156.04, 433.292, -184.486, 0.37 ) }
    dend_16 { pt3dadd( -157.659, 436.256, -181.103, 0.37 ) }
    dend_16 { pt3dadd( -157.79, 436.551, -180.793, 0.37 ) }
    dend_16 { pt3dadd( -158.338, 438.399, -179.59, 0.37 ) }
    dend_16 { pt3dadd( -158.405, 438.652, -179.415, 0.37 ) }
    dend_16 { pt3dadd( -159.002, 441.386, -177.394, 0.37 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 11/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -118.83, 538.364, -33.5604, 0.37 ) }
    dend_14 { pt3dadd( -121.474, 537.829, -32.4026, 0.37 ) }
    dend_14 { pt3dadd( -124.276, 537.262, -31.1756, 0.37 ) }
    dend_14 { pt3dadd( -126.494, 536.814, -30.2043, 0.37 ) }
    dend_14 { pt3dadd( -126.65, 536.783, -30.1361, 0.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 16/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -118.83, 538.364, -33.5604, 0.37 ) }
    dend_11 { pt3dadd( -118.503, 540.528, -35.2492, 0.37 ) }
    dend_11 { pt3dadd( -118.434, 540.95, -35.6301, 0.37 ) }
    dend_11 { pt3dadd( -118.358, 541.415, -36.0586, 0.37 ) }
    dend_11 { pt3dadd( -118.02, 543.924, -38.3653, 0.37 ) }
    dend_11 { pt3dadd( -117.83, 546.342, -40.4389, 0.37 ) }
    dend_11 { pt3dadd( -117.801, 547.554, -41.4178, 0.37 ) }
    dend_11 { pt3dadd( -117.926, 549.132, -42.794, 0.37 ) }
    dend_11 { pt3dadd( -117.998, 549.663, -43.2255, 0.37 ) }
    dend_11 { pt3dadd( -118.106, 550.246, -43.6512, 0.37 ) }
    dend_11 { pt3dadd( -118.487, 551.714, -44.6248, 0.37 ) }
    dend_11 { pt3dadd( -118.714, 552.367, -45.0755, 0.37 ) }
    dend_11 { pt3dadd( -119.377, 554.272, -46.2119, 0.37 ) }
    dend_11 { pt3dadd( -119.651, 555.266, -46.7585, 0.37 ) }
    dend_11 { pt3dadd( -120.083, 557.112, -47.8307, 0.37 ) }
    dend_11 { pt3dadd( -120.311, 558.441, -48.6338, 0.37 ) }
    dend_11 { pt3dadd( -120.394, 559.565, -49.3238, 0.37 ) }
    dend_11 { pt3dadd( -120.375, 560.712, -49.962, 0.37 ) }
    dend_11 { pt3dadd( -120.2, 562.881, -51.0042, 0.37 ) }
    dend_11 { pt3dadd( -120.147, 563.181, -51.1368, 0.37 ) }
    dend_11 { pt3dadd( -119.742, 564.781, -51.9569, 0.37 ) }
    dend_11 { pt3dadd( -119.189, 566.427, -52.8595, 0.37 ) }
    dend_11 { pt3dadd( -118.732, 567.791, -53.5829, 0.37 ) }
    dend_11 { pt3dadd( -118.416, 569.279, -54.2503, 0.37 ) }
    dend_11 { pt3dadd( -118.152, 571.349, -55.043, 0.37 ) }
    dend_11 { pt3dadd( -117.873, 574.886, -56.3331, 0.37 ) }
    dend_11 { pt3dadd( -117.828, 576.978, -57.0421, 0.37 ) }
    dend_11 { pt3dadd( -117.93, 579.905, -57.9752, 0.37 ) }
    dend_11 { pt3dadd( -118.337, 585.405, -59.5765, 0.37 ) }
    dend_11 { pt3dadd( -118.486, 586.967, -59.9645, 0.37 ) }
    dend_11 { pt3dadd( -118.736, 588.902, -60.3419, 0.37 ) }
    dend_11 { pt3dadd( -118.947, 590.563, -60.5417, 0.37 ) }
    dend_11 { pt3dadd( -119.064, 591.496, -60.6989, 0.37 ) }
    dend_11 { pt3dadd( -119.224, 593.246, -61.061, 0.37 ) }
    dend_11 { pt3dadd( -119.304, 594.369, -61.3047, 0.37 ) }
    dend_11 { pt3dadd( -119.578, 596.626, -61.8145, 0.37 ) }
    dend_11 { pt3dadd( -119.842, 598.296, -62.2035, 0.37 ) }
    dend_11 { pt3dadd( -120.303, 601.398, -62.9412, 0.37 ) }
    dend_11 { pt3dadd( -120.394, 602.046, -63.1237, 0.37 ) }
    dend_11 { pt3dadd( -120.667, 604.108, -63.9643, 0.37 ) }
    dend_11 { pt3dadd( -120.852, 605.568, -64.6903, 0.37 ) }
    dend_11 { pt3dadd( -120.964, 606.51, -65.2291, 0.37 ) }
    dend_11 { pt3dadd( -121.246, 608.893, -66.6041, 0.37 ) }
    dend_11 { pt3dadd( -121.448, 610.83, -67.6499, 0.37 ) }
    dend_11 { pt3dadd( -121.64, 613.543, -69.3638, 0.37 ) }
    dend_11 { pt3dadd( -121.634, 614.244, -69.9186, 0.37 ) }
    dend_11 { pt3dadd( -121.529, 615.731, -71.3134, 0.37 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 63/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -1.43957, 569.716, 1.8318, 0.49 ) }
    apic_5 { pt3dadd( -0.808077, 571.784, 2.00804, 0.49 ) }
    apic_5 { pt3dadd( -0.328703, 573.11, 2.12471, 0.49 ) }
    apic_5 { pt3dadd( 0.818175, 576.109, 2.04142, 0.49 ) }
    apic_5 { pt3dadd( 2.95626, 581.146, 1.55034, 0.49 ) }
    apic_5 { pt3dadd( 3.14611, 581.584, 1.49947, 0.49 ) }
    apic_5 { pt3dadd( 4.22234, 584.288, 1.19536, 0.37 ) }
    apic_5 { pt3dadd( 4.94703, 586.43, 1.00677, 0.37 ) }
    apic_5 { pt3dadd( 6.2506, 590.818, 0.582649, 0.37 ) }
    apic_5 { pt3dadd( 7.43863, 595.283, -0.165681, 0.37 ) }
    apic_5 { pt3dadd( 8.34714, 599.411, -1.06836, 0.37 ) }
    apic_5 { pt3dadd( 9.06633, 603.455, -2.00177, 0.37 ) }
    apic_5 { pt3dadd( 9.56425, 607.233, -2.84829, 0.37 ) }
    apic_5 { pt3dadd( 9.6132, 607.644, -2.92151, 0.37 ) }
    apic_5 { pt3dadd( 10.1477, 612.314, -3.55227, 0.37 ) }
    apic_5 { pt3dadd( 10.2845, 613.606, -3.78277, 0.37 ) }
    apic_5 { pt3dadd( 10.467, 614.691, -4.0023, 0.37 ) }
    apic_5 { pt3dadd( 11.3388, 618.064, -4.61288, 0.37 ) }
    apic_5 { pt3dadd( 12.6185, 621.928, -5.11127, 0.37 ) }
    apic_5 { pt3dadd( 13.0896, 623.253, -5.19672, 0.37 ) }
    apic_5 { pt3dadd( 13.7866, 625.136, -5.14579, 0.37 ) }
    apic_5 { pt3dadd( 14.3648, 626.618, -5.12068, 0.37 ) }
    apic_5 { pt3dadd( 15.5027, 629.357, -5.10726, 0.37 ) }
    apic_5 { pt3dadd( 16.0402, 630.597, -5.12533, 0.37 ) }
    apic_5 { pt3dadd( 16.2586, 631.158, -5.12473, 0.37 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 88/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -1.43957, 569.716, 1.8318, 0.24 ) }
    apic_4 { pt3dadd( -1.11084, 570.535, 1.93186, 0.24 ) }
    apic_4 { pt3dadd( -0.258549, 573.395, 2.30306, 0.24 ) }
    apic_4 { pt3dadd( 0.512809, 576.265, 2.64265, 0.24 ) }
    apic_4 { pt3dadd( 1.67892, 580.739, 3.14889, 0.24 ) }
    apic_4 { pt3dadd( 2.54753, 584.175, 3.52678, 0.24 ) }
    apic_4 { pt3dadd( 3.22414, 586.927, 3.82511, 0.24 ) }
    apic_4 { pt3dadd( 4.66288, 593.78, 4.24427, 0.24 ) }
    apic_4 { pt3dadd( 4.78064, 594.477, 4.24653, 0.24 ) }
    apic_4 { pt3dadd( 5.27781, 597.73, 4.05815, 0.24 ) }
    apic_4 { pt3dadd( 5.637, 600.153, 3.79378, 0.24 ) }
    apic_4 { pt3dadd( 5.7154, 600.561, 3.72113, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_4 { pt3dadd( 6.86709, 605.487, 2.31537, 0.24 ) }
    apic_4 { pt3dadd( 7.4731, 608.068, 0.906145, 0.24 ) }
    apic_4 { pt3dadd( 7.56782, 608.49, 0.643825, 0.24 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 3/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -49.718, -61.5711, 27.2328, 0.73 ) }
    dend_26 { pt3dadd( -59.8838, -56.7943, 37.7044, 0.73 ) }
    dend_26 { pt3dadd( -62.3697, -55.8171, 39.7906, 0.73 ) }
    dend_26 { pt3dadd( -65.7965, -54.6129, 42.3234, 0.73 ) }
    dend_26 { pt3dadd( -66.1855, -54.4823, 42.5734, 0.73 ) }
    dend_26 { pt3dadd( -68.2392, -53.7926, 43.8932, 0.73 ) }
    dend_26 { pt3dadd( -69.4693, -53.3794, 44.6838, 0.73 ) }
    dend_26 { pt3dadd( -70.9525, -53.1696, 44.6836, 0.73 ) }
    dend_26 { pt3dadd( -71.1289, -53.1613, 44.6943, 0.73 ) }
    dend_26 { pt3dadd( -74.5592, -52.9976, 45.1974, 0.73 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 13/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -49.718, -61.5711, 27.2328, 0.37 ) }
    dend_25 { pt3dadd( -51.8553, -65.4499, 27.9056, 0.37 ) }
    dend_25 { pt3dadd( -53.067, -67.4028, 28.1091, 0.24 ) }
    dend_25 { pt3dadd( -54.3877, -69.5226, 28.2722, 0.37 ) }
    dend_25 { pt3dadd( -55.1655, -70.8821, 28.2165, 0.37 ) }
    dend_25 { pt3dadd( -56.5629, -73.4188, 27.9669, 0.37 ) }
    dend_25 { pt3dadd( -57.8974, -75.7822, 27.6685, 0.37 ) }
    dend_25 { pt3dadd( -58.2423, -76.2991, 27.5292, 0.37 ) }
    dend_25 { pt3dadd( -59.0097, -77.2871, 27.4378, 0.37 ) }
    dend_25 { pt3dadd( -61.5265, -80.1614, 27.8131, 0.37 ) }
    dend_25 { pt3dadd( -61.6485, -80.286, 27.8536, 0.37 ) }
    dend_25 { pt3dadd( -63.5229, -81.8829, 28.9774, 0.37 ) }
    dend_25 { pt3dadd( -65.505, -83.3728, 30.3846, 0.37 ) }
    dend_25 { pt3dadd( -70.2348, -86.682, 34.4477, 0.37 ) }
    dend_25 { pt3dadd( -70.3397, -86.7549, 34.5512, 0.37 ) }
    dend_25 { pt3dadd( -72.473, -88.2414, 36.9472, 0.37 ) }
    dend_25 { pt3dadd( -75.5179, -90.5132, 40.5209, 0.37 ) }
    dend_25 { pt3dadd( -75.6148, -90.592, 40.6437, 0.37 ) }
    dend_25 { pt3dadd( -77.6826, -92.6742, 43.411, 0.37 ) }
    dend_25 { pt3dadd( -78.5672, -93.827, 44.49, 0.37 ) }
    dend_25 { pt3dadd( -78.7111, -94.0485, 44.7331, 0.37 ) }
    dend_25 { pt3dadd( -79.3205, -95.1424, 46.1406, 0.37 ) }
    dend_25 { pt3dadd( -79.4518, -95.3639, 46.387, 0.37 ) }
    dend_25 { pt3dadd( -80.4061, -96.8094, 47.7174, 0.37 ) }
    dend_25 { pt3dadd( -80.8529, -97.4516, 48.2277, 0.37 ) }
    dend_25 { pt3dadd( -83.3446, -100.904, 50.9614, 0.37 ) }
    dend_25 { pt3dadd( -84.2789, -102.158, 52.0364, 0.37 ) }
    dend_25 { pt3dadd( -85.8515, -104.617, 54.0935, 0.37 ) }
    dend_25 { pt3dadd( -87.8947, -108.135, 56.8043, 0.37 ) }
    dend_25 { pt3dadd( -88.1107, -108.5, 57.046, 0.37 ) }
    dend_25 { pt3dadd( -88.1852, -108.634, 57.1148, 0.37 ) }
    dend_25 { pt3dadd( -89.0913, -110.643, 57.8397, 0.37 ) }
    dend_25 { pt3dadd( -90.2717, -113.972, 58.9976, 0.37 ) }
    dend_25 { pt3dadd( -90.7948, -115.573, 59.5265, 0.37 ) }
    dend_25 { pt3dadd( -91.8901, -118.781, 60.51, 0.37 ) }
    dend_25 { pt3dadd( -92.663, -121.019, 61.1427, 0.37 ) }
    dend_25 { pt3dadd( -93.6477, -123.895, 61.88, 0.37 ) }
    dend_25 { pt3dadd( -94.4379, -126.161, 62.4725, 0.37 ) }
    dend_25 { pt3dadd( -95.0999, -128.123, 63.1162, 0.37 ) }
    dend_25 { pt3dadd( -95.8192, -130.378, 63.9874, 0.37 ) }
    dend_25 { pt3dadd( -95.9294, -130.725, 64.139, 0.37 ) }
    dend_25 { pt3dadd( -96.0511, -131.059, 64.2957, 0.37 ) }
    dend_25 { pt3dadd( -97.2738, -133.801, 65.6674, 0.37 ) }
    dend_25 { pt3dadd( -99.244, -137.98, 67.8633, 0.37 ) }
    dend_25 { pt3dadd( -100.545, -140.726, 69.325, 0.37 ) }
    dend_25 { pt3dadd( -101.435, -142.447, 70.2126, 0.37 ) }
    dend_25 { pt3dadd( -102.104, -143.747, 70.8241, 0.37 ) }
    dend_25 { pt3dadd( -102.325, -144.166, 70.9874, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 61/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -145.658, 424.951, -208.142, 0.37 ) }
    dend_19 { pt3dadd( -142.998, 423.916, -208.257, 0.37 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 63/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -145.658, 424.951, -208.142, 0.37 ) }
    dend_18 { pt3dadd( -145.657, 425.081, -208.15, 0.37 ) }
    dend_18 { pt3dadd( -145.655, 425.873, -208.201, 0.37 ) }
    dend_18 { pt3dadd( -145.654, 426.226, -208.224, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 67/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -121.529, 615.731, -71.3134, 0.37 ) }
    dend_13 { pt3dadd( -123.934, 616.87, -70.6401, 0.37 ) }
    dend_13 { pt3dadd( -128.924, 619.234, -69.2428, 0.37 ) }
    dend_13 { pt3dadd( -129.547, 619.529, -69.0686, 0.37 ) }
    dend_13 { pt3dadd( -129.948, 619.719, -68.9561, 0.37 ) }
    dend_13 { pt3dadd( -130.49, 619.976, -68.8045, 0.37 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 73/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -121.529, 615.731, -71.3134, 0.37 ) }
    dend_12 { pt3dadd( -121.541, 616.785, -71.1664, 0.37 ) }
    dend_12 { pt3dadd( -121.55, 620.094, -70.6965, 0.37 ) }
    dend_12 { pt3dadd( -121.523, 621.95, -70.4239, 0.37 ) }
    dend_12 { pt3dadd( -121.448, 625.081, -70.3823, 0.37 ) }
    dend_12 { pt3dadd( -121.345, 627.203, -70.483, 0.37 ) }
    dend_12 { pt3dadd( -121.182, 628.844, -70.7769, 0.37 ) }
    dend_12 { pt3dadd( -121.148, 629.058, -70.8444, 0.37 ) }
    dend_12 { pt3dadd( -120.185, 633.274, -72.6637, 0.37 ) }
    dend_12 { pt3dadd( -118.926, 637.928, -75.0315, 0.37 ) }
    dend_12 { pt3dadd( -118.575, 639.082, -75.7453, 0.37 ) }
    dend_12 { pt3dadd( -117.134, 643.399, -78.8217, 0.37 ) }
    dend_12 { pt3dadd( -116.161, 645.995, -80.9005, 0.37 ) }
    dend_12 { pt3dadd( -115.828, 646.797, -81.6155, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 87/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -74.5592, -52.9976, 45.1974, 0.73 ) }
    dend_28 { pt3dadd( -75.2395, -51.1489, 46.4564, 0.73 ) }
    dend_28 { pt3dadd( -75.2936, -51.0018, 46.5566, 0.73 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 90/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -74.5592, -52.9976, 45.1974, 0.61 ) }
    dend_27 { pt3dadd( -77.233, -53.1605, 50.08, 0.61 ) }
    dend_27 { pt3dadd( -77.7803, -53.2386, 50.8665, 0.37 ) }
    dend_27 { pt3dadd( -77.858, -53.2528, 50.9602, 0.37 ) }
    dend_27 { pt3dadd( -78.7326, -53.5119, 51.8604, 0.37 ) }
    dend_27 { pt3dadd( -78.8203, -53.5504, 51.9379, 0.37 ) }
    dend_27 { pt3dadd( -80.0277, -54.2744, 53.3604, 0.37 ) }
    dend_27 { pt3dadd( -80.3359, -54.5416, 53.6567, 0.37 ) }
    dend_27 { pt3dadd( -80.4111, -54.6029, 53.7344, 0.37 ) }
    dend_27 { pt3dadd( -81.0346, -55.0777, 54.4658, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_27 { pt3dadd( -81.5159, -55.4292, 55.0791, 0.37 ) }
    dend_27 { pt3dadd( -84.0372, -57.5615, 58.6335, 0.37 ) }
    dend_27 { pt3dadd( -85.0102, -58.5073, 60.1859, 0.37 ) }
    dend_27 { pt3dadd( -85.1221, -58.6222, 60.3614, 0.37 ) }
    dend_27 { pt3dadd( -86.4812, -60.068, 62.3905, 0.37 ) }
    dend_27 { pt3dadd( -86.5559, -60.1528, 62.4964, 0.37 ) }
    dend_27 { pt3dadd( -87.3052, -61.0493, 63.572, 0.37 ) }
    dend_27 { pt3dadd( -87.3628, -61.1284, 63.6502, 0.37 ) }
    dend_27 { pt3dadd( -88.1325, -62.0945, 64.7952, 0.37 ) }
    dend_27 { pt3dadd( -88.5555, -62.5957, 65.3816, 0.37 ) }
    dend_27 { pt3dadd( -89.121, -63.2276, 66.1041, 0.37 ) }
    dend_27 { pt3dadd( -91.2454, -65.3754, 68.4969, 0.37 ) }
    dend_27 { pt3dadd( -91.3453, -65.4735, 68.6041, 0.37 ) }
    dend_27 { pt3dadd( -92.6004, -66.7279, 69.9093, 0.37 ) }
    dend_27 { pt3dadd( -93.7396, -67.7605, 70.9293, 0.37 ) }
    dend_27 { pt3dadd( -93.992, -67.9823, 71.1365, 0.37 ) }
    dend_27 { pt3dadd( -95.7336, -69.5027, 72.3101, 0.37 ) }
    dend_27 { pt3dadd( -96.4702, -70.2418, 72.6152, 0.37 ) }
    dend_27 { pt3dadd( -96.5541, -70.3295, 72.6462, 0.37 ) }
    dend_27 { pt3dadd( -98.1001, -72.1143, 73.0036, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_32, dend_21, dend_8, dend_5, dend_0, apic_8, apic_1, dend_36, dend_33, dend_31, dend_30, dend_22, dend_20, dend_9, dend_7, dend_6, dend_4, dend_1, apic_7, apic_2, dend_35, dend_34, dend_23, dend_15, dend_10, dend_3, dend_2, apic_6, apic_3, dend_29, dend_24, dend_17, dend_16, dend_14, dend_11, apic_5, apic_4, dend_26, dend_25, dend_19, dend_18, dend_13, dend_12, dend_28, dend_27]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_32, dend_21, dend_8, dend_5, dend_0, apic_8, apic_1, dend_36, dend_33, dend_31, dend_30, dend_22, dend_20, dend_9, dend_7, dend_6, dend_4, dend_1, apic_7, apic_2, dend_35, dend_34, dend_23, dend_15, dend_10, dend_3, dend_2, apic_6, apic_3, dend_29, dend_24, dend_17, dend_16, dend_14, dend_11, apic_5, apic_4, dend_26, dend_25, dend_19, dend_18, dend_13, dend_12, dend_28, dend_27]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_32 OneSecGrp_SectionRef_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_8 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_8 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_33 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_20 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_9 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    apic_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    apic_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_34 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_15 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_10 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    apic_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_29 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_11 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_40 = new SectionList()
    apic_5 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_41 = new SectionList()
    apic_4 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_25 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_27 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_21 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_5 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_7 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_4 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_6 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_31 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_1 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_23 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_3 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_2 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_36 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_26 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_28 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_35 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_18 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_19 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_14 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_12 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_32 nseg = 5
    dend_8 nseg = 3
    apic_8 nseg = 7
    dend_33 nseg = 5
    dend_30 nseg = 15
    dend_22 nseg = 3
    dend_20 nseg = 7
    dend_9 nseg = 3
    dend_1 nseg = 3
    apic_7 nseg = 9
    apic_2 nseg = 7
    dend_34 nseg = 3
    dend_15 nseg = 23
    dend_10 nseg = 25
    apic_6 nseg = 19
    apic_3 nseg = 23
    dend_29 nseg = 3
    dend_11 nseg = 5
    apic_5 nseg = 3
    apic_4 nseg = 3
    dend_25 nseg = 5
    dend_27 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L6_LBC_530a402f3f_0_0


