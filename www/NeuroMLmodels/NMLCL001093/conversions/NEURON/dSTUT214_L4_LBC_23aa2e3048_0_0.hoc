// Cell: dSTUT214_L4_LBC_23aa2e3048_0_0
/*
{
  "id" : "dSTUT214_L4_LBC_23aa2e3048_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.10291, 7.90899, -2.15843, 3.34194", "1.9029, 7.18155, -1.9753, 5.85803", "1.70289, 6.4541, -1.79218, 8.32042", "1.50288, 5.72665, -1.60905, 9.88267", "1.30286, 4.9992, -1.42592, 10.8351", "1.10285, 4.27175, -1.24279, 11.6726", "0.902844, 3.54431, -1.05967, 12.0481", "0.702833, 2.81686, -0.876538, 12.3612", "0.502823, 2.08941, -0.693411, 12.4649", "0.302812, 1.36196, -0.510283, 12.4525", "0.102801, 0.634515, -0.327156, 12.4603", "-0.0972091, -0.0929329, -0.144028, 12.179", "-0.29722, -0.820381, 0.0390996, 11.8016", "-0.49723, -1.54783, 0.222227, 11.2647", "-0.697241, -2.27528, 0.405355, 10.6908", "-0.897251, -3.00272, 0.588482, 9.84874", "-1.09726, -3.73017, 0.77161, 8.85587", "-1.29727, -4.45762, 0.954738, 7.71115", "-1.49728, -5.18507, 1.13787, 5.78386", "-1.69729, -5.91252, 1.32099, 3.65042", "-1.8973, -6.63996, 1.50412, 2.23669" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.645558, 4.90742, -18.5313, 1.18", "-0.69467, 4.96061, -18.539, 1.18", "-1.13396, 5.66308, -18.6809, 1.18", "-1.39664, 6.51556, -18.8716, 1.18", "-1.4205, 6.67915, -18.9099, 1.18", "-1.36995, 7.5894, -19.1445, 1.03", "-0.937659, 9.20305, -19.5747, 0.52", "-0.327238, 10.4476, -19.9169, 0.66", "0.295927, 11.4342, -20.2638, 0.81", "0.331717, 11.4913, -20.2994, 0.81", "0.697778, 12.1908, -20.9027, 0.59", "0.929549, 12.7265, -21.5002, 0.52", "0.865781, 13.0167, -22.1729, 0.52", "0.600307, 13.3236, -23.2272, 1.25", "-0.290658, 13.9082, -25.6564, 1.69", "-0.486926, 14.0164, -26.0979, 1.69", "-0.54748, 14.046, -26.2091, 1.69", "-2.06672, 14.8343, -28.5739, 0.81", "-2.09872, 14.8527, -28.6212, 0.81", "-2.60009, 15.1631, -29.3409, 0.66", "-3.25621, 15.5645, -30.2826, 0.59", "-3.74919, 15.8193, -31.029, 0.44", "-4.49518, 16.1436, -32.1089, 0.37", "-5.80419, 16.7225, -33.966, 1.18", "-6.80956, 17.1165, -35.4635, 1.47", "-7.59757, 17.3538, -36.7412, 1.62", "-8.52587, 17.4927, -38.3082, 1.62", "-8.99637, 17.4942, -39.1584, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002013478323
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.27444, 6.92742, 4.47868, 2.8", "1.27444, 6.92742, 4.47868, 2.8", "1.7844, 7.91071, 4.47868, 2.58", "2.67398, 9.49688, 4.47868, 2.43", "3.50312, 10.8857, 4.47868, 2.43", "4.08019, 11.8153, 4.47868, 2.43", "4.81161, 12.9666, 4.47868, 2.73", "5.41076, 13.8397, 4.47868, 2.95", "6.14546, 14.7644, 4.47868, 3.09", "6.86112, 15.5097, 4.47868, 3.09", "7.72616, 16.2604, 4.397, 3.17", "7.77526, 16.2999, 4.39158, 3.17", "8.80215, 17.0591, 4.25609, 3.17", "9.84065, 17.7634, 4.09342, 2.28", "11.26, 18.633, 3.82702, 2.14", "13.3989, 19.7997, 3.35477, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002013478323
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.56556, -5.95258, 3.97868, 3.76", "-2.56556, -5.95258, 3.97868, 3.76", "-2.64113, -7.56152, 3.89273, 2.28", "-2.74983, -10.2686, 3.72264, 1.77", "-2.82379, -12.4886, 3.53766, 1.77", "-2.87516, -14.0278, 3.34892, 2.36", "-2.94769, -16.2284, 3.00139, 3.02", "-3.00993, -18.0647, 2.62987, 3.39", "-3.01165, -18.1356, 2.61333, 3.39", "-3.05691, -20.3557, 1.99531, 3.09", "-3.13142, -22.4348, 1.32559, 2.65", "-3.21846, -24.5233, 0.574705, 2.36", "-3.30655, -26.1296, -0.056427, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002013478323
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.8973, -6.63996, 1.50412, 0.710378", "-5.87395, -21.1032, 1.50412, 0.710378", "-9.85061, -35.5665, 1.50412, 0.710378" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-8.99637, 17.4942, -39.1584, 0.37", "-8.98899, 16.3176, -41.5249, 0.37", "-8.99792, 15.2961, -43.3258, 1.25", "-9.00531, 15.1208, -43.5996, 1.25", "-9.17851, 12.8185, -47.0368, 0.44", "-9.21937, 12.4814, -47.522, 1.33", "-9.30381, 12.0007, -48.2145, 1.47", "-9.4416, 11.4489, -49.0419, 0.52", "-9.53805, 11.0287, -49.6883, 0.29", "-9.5913, 10.4645, -50.826, 0.81", "-9.57342, 10.3142, -51.3944, 0.81", "-9.46958, 9.79426, -53.6527, 1.33", "-9.3546, 9.42438, -55.5551, 1.62", "-9.13598, 8.94874, -58.5002, 1.84", "-8.81489, 8.49076, -61.8269, 2.36", "-8.03828, 7.72538, -68.2567, 2.36" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-8.99637, 17.4942, -39.1584, 0.44", "-10.4522, 19.2786, -42.4293, 0.44", "-10.8372, 19.7504, -43.2942, 1.47", "-11.2719, 20.2832, -44.2708, 2.28" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "13.3989, 19.7997, 3.35477, 0.81", "13.0259, 20.7452, 3.64113, 0.81", "12.6509, 21.6645, 3.9108, 0.81", "12.2631, 22.6123, 4.16849, 0.74", "12.063, 23.0973, 4.29045, 0.81", "11.8345, 23.6281, 4.41401, 0.44", "11.3789, 24.6183, 4.62578, 0.44", "11.1176, 25.1537, 4.73392, 0.44", "10.8149, 25.7337, 4.82811, 0.66", "10.5796, 26.184, 4.87024, 0.96", "10.3413, 26.7242, 4.93667, 1.11", "10.1119, 27.4358, 4.99154, 1.11", "10.1011, 27.4981, 4.99314, 1.11", "10.0576, 28.389, 4.98022, 0.37", "10.0684, 29.2491, 4.94449, 0.37", "10.1377, 30.3832, 4.87514, 0.88", "10.267, 31.7174, 4.77183, 0.37", "10.361, 32.5479, 4.69477, 0.37", "10.4389, 33.5155, 4.5569, 0.37", "10.4506, 33.9837, 4.44793, 0.59", "10.442, 34.0617, 4.42258, 0.59", "10.3384, 34.4518, 4.24827, 0.81", "10.2268, 34.757, 4.10701, 0.81", "9.97251, 35.4579, 3.72596, 0.59", "9.80552, 36.0468, 3.40613, 0.37", "9.65866, 36.7295, 3.02765, 0.37", "9.5075, 37.8265, 2.39339, 1.25", "9.49144, 38.0967, 2.24102, 1.4", "9.49754, 39.0738, 1.73674, 0.81", "9.5473, 39.9038, 1.36691, 0.88", "9.5645, 40.1337, 1.27023, 0.88", "9.58757, 41.0638, 0.901662, 0.52", "9.51426, 41.8743, 0.620798, 0.37", "9.40323, 42.5055, 0.421376, 0.66", "9.27834, 42.9858, 0.293823, 0.66", "9.0192, 43.876, 0.0868347, 0.44", "8.77845, 44.8065, -0.119756, 0.29", "8.48781, 46.0587, -0.389927, 0.81", "8.3997, 46.5697, -0.51979, 1.11", "8.3394, 47.2755, -0.70985, 1.25", "8.33349, 48.1511, -0.950538, 1.25", "8.47316, 50.0874, -1.46819, 0.29", "8.54277, 50.5013, -1.58636, 0.66", "8.7963, 51.4085, -1.8473, 0.66", "9.10599, 52.2585, -2.06553, 0.44", "9.13663, 52.3231, -2.07931, 0.44", "9.42562, 52.8328, -2.13422, 0.44", "9.89041, 53.5742, -2.0761, 0.29", "10.3182, 54.4153, -1.95591, 0.44", "10.6967, 55.386, -1.76135, 0.44", "10.7395, 55.5323, -1.73181, 0.44", "10.9696, 56.5331, -1.54445, 0.52", "11.0845, 57.2493, -1.42304, 0.52", "11.2011, 58.4208, -1.2944, 0.66", "11.2814, 59.6481, -1.23651, 1.47", "11.355, 60.7548, -1.24357, 2.14", "11.4155, 61.5206, -1.29545, 2.14", "11.4791, 62.3183, -1.39228, 1.92", "11.5495, 63.4397, -1.60181, 0.88", "11.5713, 64.1755, -1.7881, 0.44", "11.5652, 65.3651, -2.14986, 0.44", "11.5283, 66.738, -2.57769, 0.37", "11.5048, 67.3641, -2.76499, 0.59", "11.4728, 68.0395, -2.94413, 0.88", "11.4351, 68.5307, -3.04532, 0.88", "11.3408, 69.2952, -3.1727, 0.22", "11.1306, 70.6173, -3.31659, 0.22", "11.1306, 70.6173, -3.31659, 0.96", "11.0036, 71.294, -3.36559, 1.03", "10.9003, 71.7938, -3.41145, 1.03", "10.5463, 73.2943, -3.59237, 0.29", "10.3477, 74.0604, -3.69795, 1.25", "10.1504, 74.7767, -3.80335, 1.77", "9.74369, 76.3049, -4.02662, 0.37", "9.56458, 77.0009, -4.1307, 0.29", "9.38377, 77.788, -4.24838, 0.29", "9.19708, 78.8104, -4.35495, 0.22", "9.18204, 78.9077, -4.35886, 0.22", "9.11464, 79.4431, -4.33648, 0.59", "9.10553, 79.515, -4.33049, 0.59", "9.02835, 80.0429, -4.33556, 0.81", "8.84301, 81.0355, -4.41368, 0.29", "8.66169, 81.8251, -4.51208, 0.44", "8.56723, 82.2429, -4.61106, 0.44", "8.27173, 83.6814, -5.07443, 0.29", "8.06125, 84.7694, -5.48354, 1.62", "7.9129, 85.5641, -5.81755, 2.06", "7.84518, 85.966, -6.00168, 2.43", "7.5116, 88.2584, -7.01518, 0.29", "7.38897, 89.2191, -7.40816, 0.22", "7.38271, 89.2882, -7.43019, 0.22", "7.32922, 90.0601, -7.60845, 0.22", "7.31743, 90.6581, -7.69415, 1.03", "7.34777, 91.7443, -7.76694, 1.84", "7.38239, 92.1825, -7.76278, 2.06", "7.51979, 93.3936, -7.75709, 0.29", "7.65394, 94.3361, -7.77264, 0.22", "7.9365, 95.8624, -7.7911, 0.22", "8.09988, 96.6262, -7.79917, 0.52", "8.35146, 97.6769, -7.81215, 0.22", "8.46722, 98.1328, -7.81973, 0.59", "8.60025, 98.709, -7.82292, 0.59", "8.8129, 99.7878, -7.78636, 0.22", "8.91163, 100.44, -7.74056, 1.03", "9.00811, 101.164, -7.66889, 1.84", "9.09825, 101.884, -7.58928, 2.06", "9.31373, 103.633, -7.41872, 0.29", "9.39109, 104.287, -7.36594, 0.52", "9.55323, 105.744, -7.29255, 0.29", "9.56171, 105.817, -7.28933, 0.29", "9.63429, 106.375, -7.26695, 0.52", "9.70363, 106.9, -7.25131, 0.59", "9.71564, 106.972, -7.25063, 0.59", "9.95381, 108.292, -7.23475, 0.22", "10.0776, 109.007, -7.2244, 0.22", "10.0961, 109.099, -7.22304, 0.22", "10.2144, 109.64, -7.21533, 0.96", "10.2335, 109.71, -7.21495, 0.96", "10.4429, 110.436, -7.15896, 1.62", "10.554, 110.839, -7.10798, 1.99", "10.6883, 111.34, -7.0319, 1.99", "10.8886, 112.105, -6.97472, 1.4", "11.302, 113.925, -6.95086, 0.22", "11.526, 115.034, -6.98456, 1.03", "11.6657, 115.826, -7.04136, 1.33", "11.6758, 115.898, -7.04945, 1.33", "11.8652, 117.676, -7.33897, 0.29", "11.9469, 118.733, -7.58504, 0.29", "11.9497, 118.801, -7.60976, 0.29", "11.9685, 119.079, -7.72348, 0.96", "12.0145, 119.574, -7.89881, 1.25", "12.043, 119.823, -7.97654, 1.25", "12.1362, 120.331, -8.10425, 1.25", "12.4995, 121.893, -8.50558, 0.29", "12.6217, 122.428, -8.63648, 0.74", "12.7964, 123.17, -8.81408, 0.88", "13.0523, 124.197, -9.0774, 0.22", "13.2298, 124.976, -9.27484, 0.22", "13.4827, 126.136, -9.55923, 1.25", "13.6106, 126.694, -9.67892, 1.55", "13.631, 126.772, -9.69565, 1.55", "13.9948, 127.955, -9.88625, 0.22", "14.2685, 128.775, -9.95675, 0.22", "14.3051, 128.876, -9.96195, 0.22", "14.5934, 129.545, -9.97075, 0.44", "14.8489, 130.171, -9.96315, 0.66", "15.2349, 131.206, -9.91995, 0.22", "15.4341, 131.824, -9.867, 1.18", "15.537, 132.216, -9.84017, 1.47", "15.6135, 132.662, -9.82092, 1.47", "15.6907, 133.775, -9.80372, 0.22", "15.6891, 133.847, -9.80173, 0.22", "15.6412, 134.508, -9.78242, 0.22", "15.5822, 135.176, -9.74077, 0.88", "15.5457, 135.57, -9.70623, 1.11", "15.5126, 135.967, -9.66222, 1.11", "15.4099, 136.86, -9.54876, 0.29", "15.2984, 137.629, -9.45325, 0.22", "15.1639, 138.344, -9.36697, 0.22", "15.081, 138.704, -9.32646, 0.74", "14.9393, 139.198, -9.27946, 0.74", "14.4502, 140.599, -9.13275, 0.29", "14.4255, 140.657, -9.12704, 0.29", "14.1892, 141.13, -9.06172, 0.44", "14.1178, 141.254, -9.0345, 0.44", "13.763, 141.821, -8.87439, 0.66", "13.3161, 142.454, -8.61832, 1.25", "12.985, 142.866, -8.41367, 1.4", "12.9417, 142.919, -8.38835, 1.4", "12.2217, 143.854, -7.98598, 0.37", "12.1053, 144.031, -7.93324, 0.37", "11.6635, 144.826, -7.78946, 1.03", "11.2879, 145.707, -7.67923, 1.33", "11.0676, 146.482, -7.59927, 1.69", "10.8948, 147.505, -7.4848, 2.06", "10.8411, 148.907, -7.30084, 0.29", "10.9021, 150.057, -7.1274, 0.29", "11.1193, 151.703, -6.86229, 0.29", "11.4654, 153.463, -6.53012, 0.29", "11.7994, 154.816, -6.24407, 1.11", "12.1709, 156.157, -5.92993, 0.22", "12.3166, 156.653, -5.80308, 0.22", "12.4521, 157.143, -5.70235, 0.81", "12.5527, 157.673, -5.64261, 0.96", "12.6537, 158.946, -5.58441, 0.22", "12.6691, 159.607, -5.58492, 0.81", "12.6515, 160.265, -5.60323, 0.96", "12.5744, 162.04, -5.65886, 0.22", "12.4814, 164.026, -5.73078, 0.22", "12.4001, 165.415, -5.79091, 1.4" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "13.3989, 19.7997, 3.35477, 1.55", "14.348, 20.3263, 4.11065, 1.55", "15.5444, 21.0402, 5.07408, 1.25", "16.7237, 21.7972, 6.13761, 1.47", "17.308, 22.2147, 6.73219, 1.47", "18.2683, 23.0288, 7.84591, 1.69", "19.1209, 23.8646, 8.91153, 1.84", "19.4524, 24.311, 9.41416, 1.84", "20.1768, 25.6371, 10.7354, 1.99", "20.6694, 26.8757, 11.8033, 1.62", "21.0178, 28.128, 12.7737, 1.4", "21.1489, 28.8817, 13.3029, 1.4", "21.2896, 29.99, 14.0078, 1.33", "21.3679, 30.8993, 14.5527, 1.69", "21.4238, 32.1438, 15.1779, 2.21", "21.4467, 32.821, 15.4882, 2.28", "21.5484, 34.2969, 16.194, 2.58", "21.6031, 34.8969, 16.539, 2.58" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.30655, -26.1296, -0.056427, 1.11", "-3.66261, -27.6003, -0.148748, 1.11", "-3.98497, -28.6895, -0.163177, 1.25", "-4.30632, -29.7138, -0.163281, 1.4", "-4.49042, -30.2517, -0.162852, 1.55", "-4.79858, -31.143, -0.158885, 1.47", "-5.38018, -32.8859, -0.186168, 1.11", "-5.94776, -34.4854, -0.229504, 1.18", "-5.96617, -34.5425, -0.231472, 1.18", "-6.34266, -35.8984, -0.300751, 1.18", "-6.6316, -37.2495, -0.414132, 1.03", "-6.79154, -38.607, -0.568763, 1.62", "-6.77738, -39.4141, -0.681507, 1.99", "-6.67446, -40.0527, -0.802106, 2.21", "-6.43348, -40.9308, -0.980688, 2.21", "-6.04374, -42.0127, -1.15218, 1.25", "-5.61186, -43.1311, -1.24176, 1.03", "-5.04961, -44.6058, -1.19547, 1.03", "-4.4754, -46.2319, -0.956958, 1.03", "-4.03258, -47.6784, -0.512204, 0.88", "-3.62341, -49.3283, 0.290868, 1.18", "-3.38722, -50.5015, 1.00753, 1.99", "-3.20487, -51.5518, 1.72428, 2.21", "-3.05091, -52.5292, 2.42168, 2.36", "-2.81603, -53.9687, 3.4767, 1.4", "-2.56346, -55.098, 4.21276, 0.96", "-2.06921, -56.5353, 4.85102, 0.96", "-1.62831, -57.57, 5.06503, 1.18", "-1.20414, -58.5264, 5.05573, 1.47", "-1.06902, -58.8755, 4.98627, 1.55", "-0.741432, -60.029, 4.55335, 0.88", "-0.594803, -60.9711, 4.11695, 0.81", "-0.601973, -62.0961, 3.56163, 0.74", "-0.689014, -63.108, 3.05661, 1.03", "-0.914637, -64.556, 2.34629, 1.25", "-1.19895, -65.8178, 1.72025, 2.28", "-1.41032, -66.4481, 1.41023, 2.73", "-1.85334, -67.479, 0.886685, 3.09" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.30655, -26.1296, -0.056427, 1.11", "-4.29895, -26.8747, 0.477378, 1.11", "-5.53392, -27.7894, 1.34953, 1.03", "-6.49333, -28.4941, 2.07031, 1.03", "-7.08658, -28.9384, 2.56095, 1.25", "-7.72374, -29.439, 3.12139, 1.25", "-8.19366, -29.8384, 3.56061, 1.25", "-9.58124, -31.1327, 5.00079, 1.55", "-9.95049, -31.5258, 5.44543, 1.62", "-10.7836, -32.5939, 6.65947, 1.69", "-11.2478, -33.2945, 7.47232, 1.84", "-11.7676, -34.1871, 8.4865, 2.14", "-12.0514, -34.7705, 9.15358, 1.84", "-12.5446, -36.051, 10.5157, 1.62", "-13.0088, -37.6251, 12.1621, 0.74", "-13.2019, -38.5504, 13.0767, 1.03", "-13.2564, -38.9401, 13.4409, 1.03", "-13.3457, -40.2611, 14.5776, 0.88", "-13.347, -41.2341, 15.3138, 0.96", "-13.2935, -42.242, 15.8839, 1.55", "-13.2245, -42.9907, 16.1984, 1.77", "-13.157, -43.6793, 16.4339, 1.77", "-13.0554, -44.9297, 16.7893, 1.25", "-13.0137, -46.3292, 17.0746, 1.03", "-13.0579, -47.7234, 17.3183, 1.03", "-13.1699, -48.8676, 17.4773, 0.96", "-13.2823, -49.5284, 17.5668, 1.33", "-13.5508, -50.636, 17.7015, 1.03", "-14.0738, -52.2535, 17.9069, 0.96", "-14.5941, -53.4845, 18.1103, 0.96", "-14.8601, -53.9626, 18.2333, 1.33", "-15.4509, -54.7963, 18.5622, 1.77", "-15.8622, -55.2551, 18.8408, 2.14", "-16.5977, -55.8849, 19.3876, 1.99", "-17.2913, -56.3263, 19.9687, 1.18", "-18.3455, -56.9017, 20.8826, 0.88", "-19.2239, -57.3383, 21.675, 0.88", "-20.1459, -57.7309, 22.5274, 0.96", "-20.5669, -57.879, 22.9207, 1.11", "-21.6296, -58.1795, 23.888, 1.25" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-9.85061, -35.5665, 1.50412, 0.657175", "-13.8273, -50.0298, 1.50412, 0.657175", "-17.8039, -64.493, 1.50412, 0.657175" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-8.03828, 7.72538, -68.2567, 1.03", "-7.3113, 7.64979, -79.0943, 1.03", "-7.20081, 7.66126, -81.202, 1.03", "-7.19711, 7.66263, -81.2845, 1.03", "-6.95751, 7.98864, -88.738, 1.69", "-6.79689, 8.39859, -95.6517, 0.81", "-6.62972, 9.259, -106.912, 1.11", "-6.68357, 9.70896, -111.32, 1.77", "-6.69596, 9.79256, -111.976, 1.77", "-6.80648, 10.8719, -119.427, 0.81", "-6.82334, 11.1535, -121.068, 1.47", "-6.92109, 12.2139, -126.494, 0.52", "-6.96926, 13.1134, -131.075, 0.96", "-6.97124, 13.6177, -133.797, 0.96", "-6.85625, 15.3077, -143.296, 1.25", "-6.85258, 15.3282, -143.414, 1.25", "-6.57176, 16.3093, -148.901, 1.33", "-6.2307, 17.3374, -154.49, 0.59", "-6.22655, 17.3516, -154.561, 0.59", "-6.16126, 17.736, -156.302, 1.47", "-6.12785, 17.9542, -157.067, 1.99", "-5.80441, 19.6302, -162.745, 1.62", "-5.45471, 21.1152, -167.6, 0.29", "-5.39008, 21.4496, -168.709, 1.99", "-5.1209, 22.5595, -172.529, 0.29", "-5.01474, 22.9433, -173.953, 0.29", "-4.87399, 23.4374, -175.756, 1.77", "-4.8416, 23.5155, -176.044, 1.92", "-4.83041, 23.5332, -176.114, 1.92", "-3.6939, 24.7132, -181.767, 0.52", "-2.76933, 25.3383, -186.085, 1.47", "-2.65453, 25.3857, -186.721, 1.77", "-1.78741, 25.5291, -192.602, 1.47", "-1.70142, 25.5192, -193.258, 1.55", "-1.36338, 25.3339, -196.561, 0.88", "-1.15175, 24.8219, -200.007, 1.18", "-1.04158, 23.883, -204.467, 1.11", "-1.03628, 23.4784, -206.058, 0.37", "-1.0407, 23.4537, -206.137, 0.37", "-1.16399, 22.8707, -207.958, 0.37", "-1.59563, 21.4223, -212.343, 0.44", "-1.58946, 21.3633, -212.495, 0.44", "-1.02581, 20.675, -213.653, 0.44", "-0.99109, 20.6407, -213.693, 0.44", "0.144111, 19.5896, -214.448, 0.44", "0.30592, 19.4493, -214.504, 0.44", "1.44257, 18.5306, -214.504, 0.44", "1.50655, 18.4786, -214.504, 0.44", "2.34883, 17.7268, -214.504, 0.44", "3.22281, 16.8986, -214.444, 0.59", "3.52425, 16.602, -214.407, 0.59", "4.45808, 15.713, -214.265, 0.59", "4.50484, 15.6712, -214.257, 0.59", "5.43184, 14.8424, -214.082, 0.59", "6.86305, 13.5644, -213.787, 0.44", "7.81085, 12.6634, -213.648, 0.52", "7.86969, 12.6058, -213.644, 0.52", "8.36018, 12.1196, -213.616, 0.81", "8.52756, 11.9615, -213.613, 0.81", "9.12705, 11.4564, -213.663, 0.81", "10.3606, 10.4274, -214.052, 0.22", "10.9264, 9.91996, -214.29, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-8.03828, 7.72538, -68.2567, 0.37", "-9.51107, 8.74899, -70.2151, 0.37", "-9.94508, 8.98953, -70.7506, 0.29", "-11.0725, 9.56896, -72.0922, 0.66", "-12.6176, 10.3409, -73.9084, 0.88", "-12.9587, 10.5196, -74.3214, 1.11", "-14.0853, 11.125, -75.8178, 0.29", "-15.1443, 11.7183, -77.3125, 0.29", "-15.8197, 12.1131, -78.5944, 1.4", "-15.8475, 12.1268, -78.6602, 1.4", "-16.3321, 12.3177, -79.9467, 1.69", "-17.1181, 12.5461, -82.4536, 0.59", "-17.4145, 12.6048, -83.5675, 0.88", "-18.5845, 12.7508, -88.8822, 1.03", "-19.1781, 12.697, -92.0314, 0.29", "-19.372, 12.6411, -93.1665, 0.66", "-19.7338, 12.4504, -95.4237, 0.66", "-19.7418, 12.4433, -95.4827, 0.66", "-19.9271, 12.1258, -97.3716, 0.88", "-19.9658, 11.8231, -98.3375, 1.18", "-19.9565, 11.8021, -98.4036, 1.18" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-11.2719, 20.2832, -44.2708, 0.52", "-11.1627, 21.5701, -44.3862, 0.52", "-11.0873, 22.7099, -44.4964, 0.37", "-11.0329, 23.5742, -44.5826, 0.66", "-10.9495, 24.9186, -44.8642, 0.22", "-10.9464, 24.9891, -44.8821, 0.22", "-10.908, 26.0056, -45.1883, 1.69", "-10.9016, 26.5367, -45.3755, 1.92", "-10.9015, 26.6128, -45.4072, 1.92", "-10.9044, 28.4947, -46.2323, 0.22", "-10.9121, 29.5833, -46.6802, 0.22", "-10.9218, 30.1607, -46.9128, 1.03", "-10.9451, 30.8017, -47.1673, 1.03", "-11.0502, 32.607, -47.8481, 0.22", "-11.0968, 33.2411, -48.0652, 1.18", "-11.1568, 33.8931, -48.2554, 1.92", "-11.2723, 34.7387, -48.4914, 1.92", "-11.6789, 36.851, -49.1649, 0.22", "-11.808, 37.3894, -49.3643, 0.74", "-11.9446, 37.8649, -49.5548, 0.81", "-12.2701, 38.8656, -49.9684, 0.22", "-12.6843, 40.0169, -50.4503, 0.22", "-13.5214, 42.2174, -51.3358, 1.55", "-13.7215, 42.7121, -51.5293, 1.92", "-14.1307, 43.7468, -51.924, 0.15", "-14.4266, 44.565, -52.2105, 0.15", "-14.6522, 45.2765, -52.4255, 1.18", "-14.836, 46.0053, -52.5929, 1.69", "-14.9557, 46.5799, -52.6564, 1.69", "-15.1309, 47.6262, -52.794, 0.29", "-15.2645, 48.6451, -52.9506, 0.22", "-15.3171, 49.157, -53.0381, 0.37", "-15.3696, 49.657, -53.1372, 0.37", "-15.4917, 50.7036, -53.3816, 0.22", "-15.6081, 51.9296, -53.6791, 1.47", "-15.661, 52.5664, -53.8364, 1.69", "-15.6653, 52.637, -53.8537, 1.69", "-15.7043, 54.3005, -54.2411, 0.29", "-15.6912, 55.4969, -54.5126, 0.29", "-15.6189, 56.6931, -54.8041, 0.29", "-15.6048, 56.8371, -54.8383, 0.29", "-15.4729, 57.9144, -55.1075, 0.29", "-15.2568, 59.4746, -55.4923, 3.32", "-15.1049, 60.4856, -55.7335, 1.84", "-14.9053, 61.956, -56.0782, 0.22", "-14.8418, 62.4441, -56.2288, 0.59", "-14.7859, 62.8553, -56.3743, 0.59", "-14.6536, 63.8534, -56.7696, 0.22", "-14.5808, 64.4698, -57.014, 1.25", "-14.5234, 65.1239, -57.2573, 1.77", "-14.3746, 67.5019, -58.0572, 0.22", "-14.3552, 67.6959, -58.1235, 0.59", "-14.2987, 68.1254, -58.2782, 0.59", "-14.1336, 69.2241, -58.6716, 0.22", "-14.0076, 69.8156, -58.931, 1.18", "-13.8545, 70.4591, -59.2324, 1.62", "-13.4072, 72.1233, -60.0607, 0.29", "-13.2183, 72.7418, -60.4034, 1.33", "-12.9946, 73.4346, -60.8439, 1.55", "-12.3785, 75.5156, -62.2696, 0.22", "-12.209, 76.1262, -62.6892, 0.22", "-11.9459, 77.186, -63.4289, 1.33", "-11.8438, 77.6654, -63.7518, 1.47", "-11.595, 78.9374, -64.668, 0.22", "-11.4487, 79.9563, -65.4214, 0.22", "-11.4052, 80.7831, -66.0156, 0.22", "-11.3939, 81.8761, -66.843, 1.62", "-11.405, 82.3365, -67.1919, 1.92", "-11.4723, 84.5658, -68.9529, 0.22", "-11.4897, 85.1917, -69.4429, 0.22", "-11.5065, 86.0584, -70.1207, 0.88", "-11.5132, 86.4691, -70.427, 1.33", "-11.5057, 86.937, -70.7659, 1.33", "-11.3969, 88.5283, -71.8785, 0.22", "-11.2371, 89.5804, -72.6277, 1.92", "-11.152, 89.9976, -72.9473, 1.92", "-10.7368, 91.7523, -74.3551, 0.22", "-10.4995, 92.631, -75.0918, 0.88", "-10.3722, 93.0473, -75.4487, 0.88", "-9.75328, 94.7204, -76.8338, 0.29", "-9.48151, 95.3362, -77.353, 0.22", "-9.45593, 95.3875, -77.3979, 0.22", "-8.97164, 96.2531, -78.129, 0.22", "-8.46551, 97.0597, -78.8313, 1.4", "-7.99698, 97.7544, -79.4566, 1.69", "-6.78444, 99.4368, -80.9245, 0.22", "-6.06796, 100.406, -81.7831, 1.77", "-5.71697, 100.89, -82.202, 1.77", "-4.33637, 102.911, -83.8643, 0.22", "-4.24071, 103.06, -83.9769, 0.37", "-3.72274, 103.973, -84.5665, 0.22", "-3.57355, 104.274, -84.7143, 0.44", "-3.02395, 105.513, -85.2226, 0.22", "-2.57216, 106.64, -85.6335, 1.84", "-2.29565, 107.415, -85.8694, 2.28", "-1.62968, 109.361, -86.4827, 0.22", "-1.31682, 110.321, -86.8015, 0.22", "-1.10759, 110.979, -87.0302, 0.88", "-1.02951, 111.256, -87.1276, 1.03", "-0.759912, 112.337, -87.5376, 0.22", "-0.676649, 112.704, -87.6797, 0.37", "-0.428201, 113.848, -88.1397, 0.22", "-0.339702, 114.263, -88.3298, 0.59", "-0.21837, 114.775, -88.586, 0.96", "0.171791, 116.259, -89.3643, 0.22", "0.361541, 116.975, -89.7457, 0.22", "0.597038, 117.912, -90.2394, 1.25", "0.796329, 118.781, -90.6547, 0.96", "1.08015, 120.074, -91.226, 0.15", "1.18375, 120.588, -91.4361, 1.03", "1.25162, 121.009, -91.586, 1.25", "1.46485, 122.591, -92.1304, 0.15", "1.62965, 123.958, -92.5506, 0.15", "1.75257, 125.151, -92.9061, 0.96", "1.78955, 125.637, -93.0641, 1.4", "1.81589, 126.12, -93.233, 1.4", "1.86022, 127.97, -93.9075, 0.15", "1.85083, 128.499, -94.1023, 0.66", "1.78371, 130.173, -94.6902, 0.15", "1.74624, 131.042, -94.9583, 1.62", "1.71986, 131.771, -95.155, 1.84", "1.6851, 132.864, -95.3821, 0.22", "1.63151, 134.381, -95.588, 0.15", "1.60847, 135.879, -95.7329, 0.15", "1.63187, 136.963, -95.778, 0.88", "1.66085, 137.741, -95.7789, 0.88", "1.73796, 138.963, -95.7508, 0.15", "1.78164, 139.513, -95.719, 0.59", "1.80662, 139.882, -95.6828, 0.59", "1.8445, 140.892, -95.5761, 0.15", "1.86652, 141.496, -95.5181, 0.96", "1.87057, 141.568, -95.5132, 0.96", "1.94943, 142.014, -95.5009, 1.18", "1.96813, 142.084, -95.5026, 1.18", "2.47439, 143.646, -95.5999, 0.15", "2.61344, 143.98, -95.6456, 0.59", "2.80132, 144.362, -95.7296, 0.59", "3.66528, 146.016, -96.1615, 0.15", "3.94233, 146.51, -96.3082, 0.88", "4.19789, 146.948, -96.463, 0.88", "5.0987, 148.38, -97.0781, 0.15", "5.63758, 149.257, -97.5488, 1.25", "5.83003, 149.576, -97.747, 1.69", "5.89951, 149.696, -97.8322, 1.69", "6.24808, 150.304, -98.2656, 1.47", "6.27338, 150.347, -98.2995, 1.47", "7.40234, 152.272, -99.9377, 0.15", "7.58301, 152.565, -100.187, 0.74", "7.61398, 152.613, -100.227, 0.74", "7.91291, 153.065, -100.58, 0.74", "9.15091, 154.795, -101.91, 0.15", "9.18156, 154.836, -101.942, 0.15", "9.5616, 155.305, -102.289, 1.03", "10.0012, 155.801, -102.609, 1.69", "10.2585, 156.069, -102.753, 1.69", "11.5701, 157.29, -103.259, 0.15", "11.631, 157.343, -103.274, 0.15", "12.125, 157.764, -103.381, 0.81", "13.6992, 159.065, -103.66, 0.15", "14.3195, 159.546, -103.736, 1.33", "15.7643, 160.628, -103.854, 0.22", "15.9303, 160.75, -103.861, 0.37", "16.1072, 160.883, -103.869, 0.37", "16.9726, 161.591, -103.956, 0.22", "18.0756, 162.591, -104.127, 0.15", "18.4519, 162.944, -104.191, 0.29", "19.3609, 163.835, -104.353, 0.15", "19.9334, 164.409, -104.462, 1.25", "21.9737, 166.563, -104.898, 0.15", "22.2707, 166.906, -104.975, 0.74" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-11.2719, 20.2832, -44.2708, 0.37", "-12.729, 19.6083, -43.7823, 0.37", "-13.5194, 19.2542, -43.5413, 0.66", "-13.5909, 19.2189, -43.5202, 0.66", "-15.1089, 18.4547, -43.1064, 0.29", "-15.172, 18.4223, -43.0901, 0.29", "-16.0926, 17.9355, -42.8641, 1.47", "-16.6694, 17.6105, -42.747, 1.77", "-17.9283, 16.908, -42.5052, 0.29", "-18.6288, 16.5261, -42.3871, 0.29", "-18.9262, 16.3669, -42.347, 0.66", "-19.2874, 16.1771, -42.3028, 0.88", "-19.8281, 15.8991, -42.2471, 0.88", "-21.0382, 15.297, -42.2701, 0.22", "-21.4312, 15.1102, -42.3336, 0.59", "-21.8189, 14.9252, -42.4272, 0.74", "-22.1469, 14.7733, -42.5217, 0.88", "-22.4684, 14.6302, -42.6255, 0.88", "-24.0691, 13.9305, -43.1898, 0.22", "-24.8921, 13.5344, -43.5237, 0.22", "-25.5181, 13.2198, -43.7778, 0.22", "-26.0142, 12.9577, -43.9752, 0.74", "-26.454, 12.7214, -44.1366, 1.18", "-26.9543, 12.4511, -44.287, 1.18", "-28.1502, 11.8157, -44.5152, 0.22", "-28.2128, 11.7815, -44.5295, 0.22", "-28.5945, 11.5661, -44.6233, 0.52", "-28.9125, 11.395, -44.7133, 0.52", "-29.5172, 11.1357, -44.8686, 0.22", "-29.5863, 11.1187, -44.8843, 0.22", "-30.6462, 10.9929, -45.0895, 1.92", "-31.0776, 10.9654, -45.17, 2.28", "-31.7536, 10.9357, -45.2857, 2.14", "-33.1417, 10.8778, -45.498, 0.29", "-34.2985, 10.8506, -45.6496, 0.29", "-34.5186, 10.849, -45.6728, 0.74", "-34.9876, 10.8541, -45.7059, 0.74", "-35.8099, 10.8506, -45.7363, 0.22", "-36.7814, 10.8362, -45.7312, 0.22", "-37.3777, 10.8231, -45.7498, 0.81", "-37.7433, 10.8125, -45.7675, 1.03", "-38.3431, 10.8117, -45.8105, 0.81", "-39.1619, 10.8196, -45.9195, 0.15", "-40.1007, 10.8363, -46.0846, 0.15", "-41.2543, 10.8176, -46.3204, 1.55", "-41.5568, 10.8008, -46.3868, 1.55", "-41.6273, 10.793, -46.4031, 1.55", "-43.3336, 10.5311, -46.8049, 0.22", "-44.1866, 10.3743, -46.9961, 0.22", "-44.8431, 10.2258, -47.0464, 0.81", "-45.1274, 10.1515, -47.0333, 0.81", "-46.6543, 9.71686, -46.8971, 0.22", "-47.3554, 9.50399, -46.7907, 1.47", "-48.2112, 9.22281, -46.5587, 1.92", "-50.6268, 8.40158, -45.7811, 0.29", "-52.0059, 7.92389, -45.2271, 0.22", "-53.1985, 7.50851, -44.6786, 1.62", "-54.0209, 7.23065, -44.2545, 1.92", "-56.1367, 6.58521, -43.0606, 0.22", "-57.0023, 6.3715, -42.5552, 0.22", "-58.3643, 6.14782, -41.7597, 0.22", "-58.6943, 6.12112, -41.5496, 1.03", "-59.3078, 6.12502, -41.1468, 1.4", "-61.0321, 6.29393, -40.1007, 0.15", "-62.0225, 6.50399, -39.5653, 0.15", "-62.4732, 6.62425, -39.3274, 0.96", "-62.5398, 6.64033, -39.2941, 0.96", "-62.877, 6.70006, -39.12, 0.96", "-63.8736, 6.75228, -38.6157, 0.22", "-64.412, 6.7042, -38.3459, 0.22", "-65.6841, 6.41812, -37.603, 1.84", "-66.915, 6.07592, -36.7899, 0.29", "-67.4859, 5.88214, -36.3689, 0.29", "-68.385, 5.52611, -35.6487, 0.15", "-69.2667, 5.13403, -34.8625, 1.62", "-70.222, 4.66914, -33.929, 1.62", "-71.4349, 4.04448, -32.6872, 0.29", "-72.2942, 3.62516, -31.7621, 0.29", "-72.3388, 3.60536, -31.712, 0.29", "-73.2596, 3.24962, -30.6731, 0.74", "-73.3141, 3.22851, -30.6149, 0.74", "-74.0022, 2.96462, -29.9623, 0.22", "-74.0541, 2.94328, -29.9205, 0.22", "-74.8124, 2.66535, -29.4045, 0.22", "-75.9519, 2.30883, -28.7428, 0.22", "-76.5504, 2.15493, -28.4582, 1.03", "-77.1484, 2.0277, -28.2071, 1.4", "-77.9837, 1.88655, -27.9022, 1.4", "-79.4313, 1.69599, -27.496, 0.22", "-80.355, 1.60801, -27.3255, 0.22", "-81.2692, 1.54659, -27.2212, 1.25", "-81.8746, 1.51708, -27.1464, 1.92", "-82.302, 1.50573, -27.0866, 1.92", "-83.6459, 1.51487, -26.8898, 0.22", "-84.7912, 1.57234, -26.6312, 0.22", "-85.079, 1.59244, -26.5367, 1.03", "-86.4902, 1.75268, -25.9267, 0.22", "-86.9947, 1.83661, -25.6665, 0.59", "-87.4609, 1.9055, -25.3625, 0.74", "-89.0722, 2.06292, -24.1678, 0.22", "-89.1195, 2.06333, -24.1308, 0.22", "-89.912, 1.99763, -23.5418, 1.33", "-90.2712, 1.92295, -23.3123, 1.69", "-91.7457, 1.50899, -22.4514, 0.15", "-93.0019, 1.08691, -21.8278, 0.15", "-94.2977, 0.666935, -21.3565, 1.77", "-94.9093, 0.48593, -21.1593, 1.99", "-96.8044, -0.0488086, -20.6169, 0.22", "-96.9322, -0.0819376, -20.5844, 0.22", "-97.9889, -0.320576, -20.3554, 0.22", "-99.9345, -0.764114, -19.9281, 0.22", "-100.854, -0.965132, -19.757, 0.66", "-101.021, -0.993881, -19.7393, 0.66", "-102.546, -1.16172, -19.7184, 0.22", "-103.483, -1.22799, -19.7675, 1.62", "-103.542, -1.22877, -19.7771, 1.62", "-104.243, -1.20876, -19.9695, 1.62", "-106.575, -0.96237, -20.7857, 0.22", "-107.416, -0.791607, -21.1364, 0.59", "-107.844, -0.674621, -21.3369, 0.59", "-108.972, -0.351771, -21.8609, 0.22", "-109.037, -0.334905, -21.8891, 0.22", "-109.661, -0.140971, -22.0602, 0.59", "-110.697, 0.263356, -22.1439, 0.22", "-111.869, 0.703885, -22.1203, 0.22", "-112.761, 1.00513, -22.0409, 1.69", "-113.187, 1.11071, -21.9709, 1.69", "-115.867, 1.54706, -21.4526, 0.22", "-116.336, 1.57803, -21.3442, 1.03", "-117.669, 1.5963, -20.98, 0.22", "-118.241, 1.61002, -20.8269, 0.74", "-119.275, 1.6118, -20.5999, 0.22", "-119.447, 1.6046, -20.5781, 0.22", "-120.074, 1.57909, -20.5385, 0.22", "-121.038, 1.71483, -20.3963, 0.22", "-121.478, 1.8579, -20.2911, 1.03", "-122.096, 2.10684, -20.1066, 1.18", "-122.151, 2.13251, -20.0871, 1.18", "-123.682, 2.87417, -19.4929, 0.22", "-124.274, 3.1806, -19.2193, 1.33", "-124.535, 3.3224, -19.0865, 1.47", "-124.595, 3.35611, -19.0544, 1.47", "-125.57, 3.96551, -18.5584, 0.29", "-126.137, 4.34548, -18.3005, 0.22", "-126.851, 4.86211, -18.0179, 0.96", "-127.209, 5.13076, -17.8771, 1.18", "-127.98, 5.72853, -17.5746, 0.22", "-129.029, 6.57755, -17.1715, 0.22", "-129.406, 6.90735, -17.0368, 0.52", "-129.459, 6.95419, -17.0192, 0.52" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "12.4001, 165.415, -5.79091, 1.03", "12.4909, 166.118, -5.91015, 1.03", "12.4984, 166.19, -5.92058, 1.03", "12.5644, 166.783, -5.96667, 0.29", "12.6693, 167.647, -5.99767, 0.29", "12.682, 167.783, -5.99129, 0.44", "12.7077, 168.218, -5.90974, 0.52", "12.7212, 168.595, -5.77328, 0.52", "12.7444, 169.261, -5.47299, 0.22", "12.7844, 169.989, -5.09211, 0.22", "12.8431, 170.872, -4.53965, 0.66", "12.9315, 172.25, -3.65711, 0.22", "13.0069, 173.396, -2.88697, 1.18", "13.0279, 173.732, -2.65035, 1.55", "13.0489, 174.099, -2.37945, 1.55", "13.1733, 176.028, -0.874373, 0.22", "13.2597, 176.92, -0.192627, 0.81" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "12.4001, 165.415, -5.79091, 0.52", "11.4635, 165.221, -5.65828, 0.52", "10.8523, 165.092, -5.56724, 0.37", "9.20752, 164.742, -5.31718, 0.22", "8.985, 164.695, -5.28336, 0.37", "7.44632, 164.368, -5.04943, 0.22", "7.27931, 164.332, -5.02404, 0.74", "6.85555, 164.244, -4.9467, 0.66", "6.77706, 164.226, -4.92945, 0.66" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "21.6031, 34.8969, 16.539, 0.52", "22.196, 35.3635, 15.6645, 0.52", "22.6992, 35.8813, 14.8606, 0.52", "23.2522, 36.4772, 14.0184, 0.59", "23.8262, 37.1315, 13.1743, 1.25", "24.7786, 38.2665, 11.7753, 0.74", "25.5412, 39.2207, 10.6915, 0.96", "25.8197, 39.61, 10.2782, 1.33", "26.603, 40.8014, 9.19123, 1.33", "27.2662, 41.7845, 8.43708, 1.33", "27.9376, 42.7023, 7.82103, 0.66", "28.7571, 43.6609, 7.24532, 0.66", "29.2304, 44.1619, 6.95466, 0.96", "30.0682, 45.0215, 6.46706, 0.96", "31.1153, 46.1159, 5.87853, 0.74", "31.1562, 46.1584, 5.85582, 0.74", "31.7642, 46.8165, 5.50634, 0.88", "32.4518, 47.6906, 4.93782, 0.29", "32.681, 48.14, 4.59263, 0.44", "32.7907, 48.8349, 4.00701, 0.96", "32.7458, 49.1712, 3.72232, 1.47", "32.6728, 49.4577, 3.49383, 1.47", "32.2905, 50.4818, 2.71332, 0.96", "31.9797, 51.2005, 2.22854, 0.52", "31.6901, 51.8533, 1.82486, 0.52", "31.2921, 52.8375, 1.29528, 0.44", "31.1251, 53.3499, 1.04352, 0.59", "31.1114, 53.4099, 1.01673, 0.59", "31.0348, 54.1016, 0.761059, 0.59", "31.0361, 54.7859, 0.523837, 0.59", "31.256, 56.345, -0.0161077, 0.22", "31.4579, 56.9698, -0.247748, 0.81", "31.7599, 57.5626, -0.50675, 1.18", "31.9528, 57.8722, -0.650484, 1.47", "31.9921, 57.9275, -0.67681, 1.47", "32.3249, 58.3852, -0.86093, 1.47", "33.0395, 59.4709, -1.17257, 0.29", "33.5449, 60.6029, -1.39723, 0.29", "33.6769, 61.0391, -1.46073, 1.03", "33.8211, 61.6802, -1.53166, 1.33", "33.9958, 62.6296, -1.61801, 1.77", "34.0857, 63.3762, -1.66135, 1.18", "34.1484, 64.5484, -1.6615, 0.59", "34.169, 65.8319, -1.64178, 0.37", "34.2188, 67.4317, -1.64588, 0.37" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "21.6031, 34.8969, 16.539, 2.5", "23.3934, 34.9177, 19.4351, 2.5", "25.2295, 34.7822, 21.6905, 1.55", "25.9073, 34.7138, 22.3501, 1.55", "26.8263, 34.6292, 23.0839, 1.4", "28.4462, 34.5881, 24.1289, 1.03", "28.5728, 34.5954, 24.2004, 1.03", "29.9841, 34.7648, 24.6297, 1.03", "30.8318, 34.9689, 24.8532, 1.03", "31.6398, 35.2581, 25.1008, 1.18", "33.1713, 35.9927, 25.6032, 1.18", "34.7179, 36.9035, 26.1161, 1.18", "35.8348, 37.6144, 26.5205, 0.96", "37.4003, 38.7486, 27.1742, 1.11", "37.5084, 38.8317, 27.2252, 1.11", "38.4125, 39.551, 27.7067, 1.11", "38.6924, 39.7756, 27.8792, 1.11" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.85334, -67.479, 0.886685, 0.74", "-0.402253, -67.9768, 0.62525, 0.74", "0.881179, -68.4293, 0.418905, 0.37", "1.63717, -68.7353, 0.308724, 0.52", "2.26595, -69.0166, 0.22396, 0.52", "2.79811, -69.2823, 0.158519, 0.22", "3.48011, -69.6718, 0.0856699, 0.22", "3.73588, -69.8282, 0.0707165, 0.81", "4.22291, -70.1628, 0.0643038, 1.11", "4.40821, -70.3089, 0.0602208, 1.11", "4.84294, -70.6507, 0.0485671, 1.25", "5.65043, -71.2093, -0.00158902, 0.44", "6.62357, -71.6973, -0.082306, 0.22", "7.22439, -71.9362, -0.136622, 1.25", "7.85457, -72.1528, -0.194352, 1.69", "8.54227, -72.3755, -0.257904, 1.47", "9.55181, -72.684, -0.35211, 0.66", "11.1355, -73.1448, -0.502128, 0.29", "11.8712, -73.3895, -0.575523, 0.29", "12.3635, -73.6033, -0.622224, 0.81", "12.7447, -73.819, -0.636237, 1.25", "13.0947, -74.0717, -0.623991, 1.25", "13.1487, -74.1202, -0.617396, 1.25", "13.7989, -74.7603, -0.436107, 0.52", "14.5706, -75.4363, -0.160609, 0.29", "15.4481, -76.1146, 0.188169, 1.4", "15.9571, -76.4446, 0.398189, 1.84", "16.1375, -76.5382, 0.487672, 1.84", "17.3589, -77.0896, 1.15019, 0.59", "18.0495, -77.3405, 1.56045, 0.29", "18.1094, -77.3595, 1.59715, 0.29", "18.7149, -77.5705, 1.94783, 0.74", "19.8508, -78.051, 2.59148, 0.74", "20.5527, -78.4469, 2.97403, 0.29", "20.6149, -78.4977, 3.0031, 0.29", "20.8663, -78.7477, 3.11323, 0.52", "21.3374, -79.265, 3.29731, 1.03", "21.6359, -79.584, 3.43478, 1.18", "22.4803, -80.3979, 3.82268, 0.52", "23.2227, -80.9881, 4.30106, 0.52", "23.8396, -81.376, 5.01598, 0.29", "23.8725, -81.3956, 5.0622, 0.29", "24.8756, -82.0061, 6.63769, 0.29", "25.0862, -82.1432, 6.98869, 1.03", "25.774, -82.657, 8.20886, 2.5", "27.6094, -84.2783, 11.732, 0.44", "27.9322, -84.6112, 12.3818, 0.96", "28.1921, -84.9221, 12.9003, 1.18", "28.5073, -85.3768, 13.4889, 1.33", "29.222, -86.4954, 14.7609, 0.29", "29.6431, -87.1829, 15.3547, 0.66", "29.6778, -87.2371, 15.3887, 0.66", "29.8613, -87.4744, 15.5767, 0.66", "30.5315, -88.2443, 16.3666, 0.37", "30.5697, -88.2854, 16.4129, 0.37", "31.0284, -88.7438, 16.9488, 0.59", "31.9282, -89.6138, 18.0, 0.29", "32.6391, -90.3074, 18.8835, 0.96", "33.5234, -91.1731, 20.0948, 2.21", "33.9212, -91.563, 20.7244, 2.5", "40.0315, -98.143, 25.1254, 2.5", "44.9374, -104.835, 30.7059, 2.5", "50.251, -112.527, 34.2564, 2.5", "55.535, -120.485, 37.2135, 2.5" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-1.85334, -67.479, 0.886685, 1.4", "-2.4499, -69.0838, 0.201707, 1.4", "-2.85254, -70.7955, -0.370762, 0.44", "-2.97597, -71.6509, -0.602998, 0.44", "-3.03585, -72.2899, -0.747625, 0.88", "-3.12158, -73.65, -1.00779, 1.11", "-3.16164, -74.6329, -1.17922, 1.62", "-3.10567, -75.6326, -1.28628, 1.92", "-3.01737, -76.5805, -1.33902, 1.92", "-2.92843, -77.5048, -1.39377, 1.99", "-2.84762, -78.4991, -1.46473, 1.92", "-2.76852, -79.497, -1.54342, 1.69", "-2.69587, -80.252, -1.5909, 1.4", "-2.62015, -80.9904, -1.62974, 1.25", "-2.6103, -81.0722, -1.63343, 1.25", "-2.41705, -82.295, -1.65133, 0.88", "-2.17291, -83.512, -1.62705, 0.88", "-1.94904, -84.4174, -1.55075, 1.18", "-1.92563, -84.4989, -1.54081, 1.18", "-1.76364, -85.0562, -1.45936, 1.4", "-1.55695, -85.909, -1.32036, 1.4", "-1.42483, -86.6854, -1.14054, 1.03", "-1.37169, -87.6677, -0.882965, 0.74", "-1.49674, -88.7858, -0.560097, 0.59", "-1.68958, -89.484, -0.339813, 0.44", "-2.09421, -90.3108, -0.061188, 0.44", "-2.75222, -91.217, 0.260794, 1.18", "-3.26188, -91.7481, 0.460681, 1.62", "-4.10229, -92.4422, 0.713858, 2.21", "-4.49154, -92.7374, 0.82008, 2.36", "-4.98039, -93.1376, 0.934707, 2.06", "-5.54027, -93.6955, 1.03595, 1.33", "-5.95301, -94.1367, 1.0744, 0.81", "-6.66869, -95.0068, 1.12345, 0.44", "-7.07335, -95.6074, 1.1223, 0.37", "-7.48491, -96.3275, 1.10683, 0.81", "-7.73772, -96.8755, 1.0725, 0.81" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-21.6296, -58.1795, 23.888, 0.37", "-22.1754, -57.284, 24.6451, 0.37", "-22.2041, -57.2407, 24.6812, 0.37", "-22.6219, -56.6314, 25.2499, 0.37", "-23.1233, -55.8981, 25.9477, 0.37", "-23.5973, -55.1452, 26.6615, 0.37", "-23.9073, -54.4805, 27.3088, 0.37", "-24.023, -54.0262, 27.7969, 0.66", "-24.0706, -53.2397, 28.6862, 0.66", "-24.0315, -53.0117, 28.9673, 0.66", "-23.786, -52.2067, 29.9858, 0.44", "-23.2564, -51.0255, 31.501, 0.29", "-22.7071, -50.116, 32.6877, 0.66", "-22.3589, -49.6458, 33.313, 1.25", "-21.9307, -49.1554, 33.9529, 1.25", "-23.8939, -43.5647, 42.0085, 1.25", "-23.9149, -37.2064, 49.7267, 1.25", "-24.3901, -30.0461, 56.6912, 1.25", "-25.7463, -23.6943, 64.2948, 1.25", "-28.5411, -16.2597, 70.3707, 1.25", "-30.2663, -9.73918, 77.7534, 1.25", "-30.1813, -4.36169, 86.1841, 1.25", "-31.0091, 1.33777, 94.359, 1.25", "-31.1828, 7.85627, 101.94, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-21.6296, -58.1795, 23.888, 0.96", "-22.8718, -58.6483, 24.5075, 0.96", "-23.5025, -58.8174, 24.8566, 0.96", "-24.4419, -58.9545, 25.375, 1.03", "-24.7675, -58.9558, 25.544, 1.18", "-24.8192, -58.9486, 25.5736, 1.18", "-25.3189, -58.8891, 26.0123, 1.18", "-26.1244, -58.8201, 27.171, 0.74", "-26.3784, -58.8974, 27.8122, 0.74", "-26.5184, -59.2003, 28.7196, 0.74", "-26.5487, -59.8994, 30.1816, 1.03", "-26.2525, -61.5928, 32.7547, 0.81", "-25.8665, -62.6922, 34.0925, 0.81", "-25.416, -63.8293, 35.2437, 0.81", "-25.0861, -64.7107, 36.0571, 1.33", "-25.0515, -64.8102, 36.1431, 1.69", "-24.7966, -65.6604, 36.8163, 1.69", "-24.3526, -67.9209, 38.5443, 0.66", "-24.1922, -69.1303, 39.5522, 0.59", "-24.1128, -70.1221, 40.4827, 0.52", "-24.0894, -70.9762, 41.3285, 0.96", "-24.1004, -71.3923, 41.7574, 0.96", "-24.1545, -71.7065, 42.1086, 0.96", "-26.1516, -78.2417, 49.4095, 0.96", "-28.0642, -85.6572, 55.8401, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "34.2188, 67.4317, -1.64588, 0.37", "35.2623, 67.6566, -2.73112, 0.37", "35.7132, 67.8646, -3.38603, 0.88", "35.9375, 68.0656, -3.90517, 1.18", "36.651, 68.8239, -5.75784, 0.29", "36.9027, 69.1327, -6.44474, 0.29", "37.1914, 69.5153, -7.23617, 0.74", "37.6486, 70.2723, -8.59768, 1.4", "38.3648, 71.6452, -10.748, 0.52", "38.6711, 72.2824, -11.6649, 0.44", "39.0515, 73.1194, -12.7285, 0.22", "39.3053, 73.6385, -13.3372, 0.88", "39.4415, 73.9018, -13.5939, 1.03", "40.2658, 75.3257, -14.6803, 0.22", "40.2992, 75.386, -14.7124, 0.22", "40.5301, 75.841, -14.932, 0.74", "40.8475, 76.4742, -15.2194, 0.22", "41.0405, 76.9007, -15.428, 0.59", "41.4997, 78.0083, -16.0168, 0.22", "41.7789, 78.7342, -16.4135, 0.74", "42.0899, 79.551, -16.8431, 1.33", "42.2547, 79.9941, -17.0682, 1.33", "42.7931, 81.4481, -17.7651, 0.22", "42.8181, 81.523, -17.7976, 0.22", "43.2524, 82.9907, -18.368, 0.59", "43.7087, 84.5152, -18.8835, 0.22", "44.0459, 85.5679, -19.1784, 1.55", "44.1953, 86.0025, -19.2851, 1.92", "44.9824, 88.0938, -19.6985, 0.22", "45.0682, 88.3044, -19.7344, 0.37", "45.7627, 89.8711, -19.9463, 0.15", "46.3549, 91.029, -20.0545, 0.44", "46.6192, 91.4841, -20.0824, 0.44", "47.0358, 92.1395, -20.1068, 0.22", "47.6338, 92.9485, -20.1068, 1.47", "47.8438, 93.2062, -20.1068, 1.69", "49.1115, 94.6406, -20.1255, 0.22", "49.3933, 94.9489, -20.1325, 1.03", "49.946, 95.5162, -20.141, 1.69", "51.4994, 96.9931, -20.1543, 0.15", "52.9048, 98.2252, -20.0931, 0.15", "53.3577, 98.5984, -20.0555, 1.55", "53.4386, 98.6618, -20.0495, 1.55", "54.7529, 99.6688, -19.9702, 0.15", "55.2336, 100.018, -19.936, 1.18", "56.5778, 100.951, -19.8106, 0.15", "56.6623, 101.009, -19.8009, 0.52", "58.04, 101.959, -19.6288, 0.15", "58.8304, 102.552, -19.5557, 0.52" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "34.2188, 67.4317, -1.64588, 0.88", "34.3002, 68.3668, -1.52863, 0.88", "34.4521, 69.7493, -1.39243, 1.92", "34.5593, 70.6282, -1.32231, 2.5", "34.6607, 71.2781, -1.2781, 2.5", "34.7926, 72.0222, -1.19715, 2.28", "34.9981, 73.1091, -1.05171, 1.25", "35.1624, 74.002, -0.904229, 0.59", "35.3059, 74.8708, -0.788361, 0.29", "35.4014, 75.6059, -0.676159, 0.29", "35.4766, 76.6956, -0.496607, 0.29", "35.4751, 76.7544, -0.484952, 0.29", "35.3286, 77.6664, -0.285784, 0.29", "35.1837, 78.2086, -0.167245, 0.37", "35.1406, 78.3353, -0.143052, 0.37", "34.883, 79.0121, -0.0446437, 0.37", "34.6383, 79.8293, -0.0409867, 1.18", "34.5515, 80.4208, -0.0684977, 1.69", "34.5521, 80.5224, -0.0851197, 1.69", "34.5796, 80.9703, -0.186668, 1.69", "34.5842, 81.0404, -0.205948, 1.69", "34.6768, 82.2262, -0.604604, 0.44", "34.7498, 83.1721, -0.948219, 0.22", "34.8042, 84.2546, -1.40832, 1.11", "34.8068, 84.8691, -1.66918, 1.4", "34.7694, 85.6256, -1.94633, 1.47", "34.6779, 86.564, -2.20556, 0.96", "34.5847, 87.247, -2.32936, 0.81", "34.3371, 88.8538, -2.46942, 0.52", "34.1152, 90.3469, -2.42446, 0.52", "33.9726, 91.6421, -2.29593, 1.33", "33.9064, 92.6349, -2.14072, 1.99", "33.8694, 93.4926, -1.95524, 1.99", "33.8627, 94.6201, -1.65647, 0.66", "33.9, 95.5464, -1.39916, 0.29", "33.9706, 96.2767, -1.28051, 0.29", "34.0939, 97.1789, -1.2739, 0.59", "34.1939, 97.9057, -1.32405, 0.81", "34.2107, 98.0399, -1.33797, 0.81", "34.3579, 99.3552, -1.52458, 0.29", "34.4722, 100.59, -1.70101, 0.29", "34.5414, 101.441, -1.79194, 0.96", "34.6302, 102.313, -1.84791, 1.4", "34.7285, 103.184, -1.87612, 1.69", "34.7446, 103.338, -1.8757, 1.69", "34.8351, 104.189, -1.83748, 1.69", "34.9155, 105.02, -1.81204, 1.84", "34.9536, 105.802, -1.80185, 1.69", "34.9596, 106.755, -1.81215, 1.4", "34.8948, 107.684, -1.82364, 0.81", "34.7741, 108.392, -1.83331, 0.52", "34.5809, 108.983, -1.85074, 0.52", "34.2024, 109.82, -1.88868, 0.52", "34.1014, 110.009, -1.89985, 0.52", "33.7123, 110.657, -1.94661, 0.44", "33.3692, 111.253, -1.99481, 0.37", "32.9931, 112.089, -2.05816, 0.29", "32.7797, 112.849, -2.14152, 0.88", "32.6906, 113.439, -2.21243, 1.11", "32.6858, 113.521, -2.22416, 1.11", "32.7326, 114.54, -2.48292, 0.52", "32.8379, 115.471, -2.77409, 0.52", "32.9991, 116.563, -3.15064, 1.69", "33.1364, 117.513, -3.4921, 2.43", "33.2879, 118.626, -3.88984, 2.58", "33.5429, 120.637, -4.58962, 0.74", "33.6358, 121.423, -4.85651, 0.52", "33.7509, 122.414, -5.18782, 0.44", "33.8429, 123.323, -5.45946, 1.11", "33.9013, 124.1, -5.67458, 1.77", "33.9197, 124.639, -5.7987, 1.99", "33.9228, 125.798, -6.00306, 1.62", "33.9737, 127.074, -6.24408, 0.44", "34.0451, 127.924, -6.41302, 0.29", "34.1951, 128.914, -6.61065, 0.88", "34.28, 129.273, -6.6669, 1.25", "34.467, 129.863, -6.7266, 1.25", "35.0804, 131.178, -6.71279, 0.22", "35.1129, 131.228, -6.70668, 0.22", "35.4229, 131.617, -6.63963, 0.96", "36.106, 132.386, -6.46446, 1.18", "36.1614, 132.446, -6.45051, 1.18", "36.6224, 132.922, -6.39527, 1.18", "37.6767, 134.034, -6.41027, 0.22", "37.7258, 134.087, -6.41751, 0.22", "37.9002, 134.286, -6.48194, 0.74", "37.9437, 134.337, -6.50879, 0.74", "38.8006, 135.39, -7.1374, 0.74", "38.8485, 135.447, -7.17847, 1.4", "38.8851, 135.485, -7.20699, 1.4", "39.3304, 135.962, -7.51387, 1.69", "39.3748, 136.013, -7.54116, 1.69", "39.5994, 136.284, -7.6618, 1.69", "40.3049, 137.204, -7.96714, 0.52", "40.8963, 138.045, -8.20784, 0.22", "41.2288, 138.601, -8.33118, 0.81", "41.4812, 139.098, -8.4129, 1.11", "41.5081, 139.165, -8.42117, 1.11", "41.6196, 139.509, -8.44033, 1.11", "41.7476, 139.991, -8.43, 0.81", "41.9802, 140.86, -8.3735, 0.29", "42.0013, 140.929, -8.36783, 0.29", "42.3491, 141.893, -8.27956, 0.29", "42.8105, 143.001, -8.17213, 0.29", "43.2574, 143.947, -8.07436, 0.81", "43.6573, 144.701, -7.99409, 1.25", "43.6967, 144.766, -7.98974, 1.25", "44.0976, 145.418, -7.96682, 1.25", "44.3613, 145.837, -7.96706, 1.03", "44.4511, 145.982, -7.98094, 1.03", "44.8274, 146.599, -8.08087, 0.81", "45.463, 147.707, -8.30132, 0.22", "45.9131, 148.518, -8.44785, 0.96", "46.1659, 148.965, -8.52601, 1.69", "46.7039, 149.806, -8.66763, 1.99", "46.785, 149.914, -8.68483, 1.99", "47.25, 150.43, -8.7967, 1.99", "48.2011, 151.304, -9.0282, 0.52", "48.7599, 151.757, -9.1819, 0.29", "49.3111, 152.178, -9.33432, 0.88", "49.6942, 152.461, -9.43367, 0.88", "50.6016, 153.184, -9.72957, 0.29", "50.6532, 153.231, -9.75026, 0.29", "51.0457, 153.679, -9.92765, 0.59", "51.0885, 153.735, -9.94475, 0.59", "51.2875, 153.987, -9.99915, 0.59", "51.8519, 154.669, -10.0857, 0.22", "52.5607, 155.504, -10.1209, 1.62", "53.1873, 156.221, -10.1573, 2.65", "53.3889, 156.444, -10.1694, 2.8", "54.4707, 157.642, -10.2333, 0.59", "54.837, 158.042, -10.2793, 0.22", "55.635, 158.857, -10.4401, 0.22", "56.2644, 159.489, -10.6255, 0.88", "56.4848, 159.69, -10.7058, 1.11", "56.8229, 159.969, -10.8543, 1.18", "57.9688, 160.811, -11.4528, 0.29", "58.6253, 161.233, -11.7966, 0.29", "58.6914, 161.27, -11.83, 0.29", "59.5032, 161.7, -12.2067, 0.29", "60.3249, 162.136, -12.5548, 0.22", "60.7604, 162.424, -12.6687, 0.96", "61.233, 162.885, -12.675, 1.25", "61.3224, 163.0, -12.6658, 1.25", "61.4706, 163.221, -12.6266, 1.25", "61.5137, 163.29, -12.6115, 1.25", "62.4156, 164.734, -12.338, 0.22", "62.938, 165.573, -12.3191, 1.33", "63.2094, 166.008, -12.3612, 1.92", "63.7598, 166.844, -12.5137, 1.69", "64.8746, 168.459, -12.9735, 0.22", "65.4319, 169.253, -13.3548, 1.11", "66.4703, 170.693, -14.3585, 0.29", "66.7809, 171.145, -14.7216, 1.33", "67.0777, 171.583, -15.1287, 1.69", "67.4532, 172.127, -15.71, 1.69", "68.2609, 173.296, -17.0702, 0.37", "68.2954, 173.338, -17.1189, 0.37", "68.7678, 173.841, -17.6991, 0.37", "69.3106, 174.402, -18.3964, 0.88", "69.5917, 174.697, -18.7502, 0.88", "69.6339, 174.738, -18.7936, 0.88", "70.3031, 175.457, -19.6736, 0.22", "70.5664, 175.8, -20.1207, 0.22", "70.7821, 176.162, -20.5835, 0.81", "70.9645, 176.556, -21.0661, 1.25", "71.1015, 176.856, -21.4457, 1.25", "71.9938, 178.675, -23.7319, 0.37", "72.1348, 178.969, -24.1083, 0.29", "72.5598, 179.847, -25.2509, 0.59", "72.8685, 180.468, -26.0384, 0.59", "73.3479, 181.306, -27.1136, 0.29", "73.664, 181.81, -27.7516, 2.28", "74.8494, 183.48, -29.7424, 0.37", "75.102, 183.831, -30.1624, 0.29", "75.319, 184.197, -30.5473, 0.22", "75.8037, 185.11, -31.4345, 0.22", "76.2595, 186.147, -32.3557, 0.22", "76.2791, 186.198, -32.399, 0.22", "76.5862, 187.024, -32.9193, 1.92", "77.1403, 188.848, -34.0534, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "38.6924, 39.7756, 27.8792, 0.44", "39.6154, 39.4068, 27.9216, 0.44", "40.7016, 39.0443, 27.9628, 0.66", "42.0149, 38.7355, 27.9911, 0.29", "42.1, 38.7281, 27.9912, 0.29", "43.447, 38.7421, 27.9754, 0.29", "44.3227, 38.9323, 27.9534, 0.29", "44.3916, 38.9775, 27.9495, 0.29", "45.0297, 39.6917, 27.8381, 0.22", "45.5982, 40.3618, 27.7038, 0.22", "45.644, 40.4041, 27.6938, 0.22", "46.869, 41.2855, 27.4582, 0.22", "46.9631, 41.3367, 27.4431, 0.22", "47.7537, 41.6965, 27.3315, 0.29", "49.1997, 42.2286, 27.1526, 0.29", "50.9646, 42.7783, 26.9505, 0.22", "52.049, 43.0607, 26.8357, 0.22", "52.1204, 43.0731, 26.8293, 0.22", "52.7121, 43.1675, 26.7918, 0.37", "52.94, 43.1985, 26.7918, 0.37", "53.3039, 43.2654, 26.7918, 0.37", "62.1483, 47.2248, 24.3219, 0.37", "71.085, 49.7819, 20.6345, 0.37", "79.8, 54.0308, 18.186, 0.37", "88.4059, 58.4396, 15.6363, 0.37", "96.6501, 63.7545, 13.6909, 0.37", "105.391, 68.6107, 13.5571, 0.37", "114.895, 71.6023, 14.4075, 0.37" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "38.6924, 39.7756, 27.8792, 2.06", "38.8656, 40.6067, 33.9785, 2.06", "38.8822, 40.6863, 34.5631, 2.21" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-7.73772, -96.8755, 1.0725, 0.22", "-6.40846, -96.7183, 1.10411, 0.22", "-5.11628, -96.3673, 1.28162, 0.22", "-4.6722, -96.2137, 1.35376, 0.44", "-4.11026, -95.9779, 1.47162, 0.44", "-2.67039, -95.3105, 1.79463, 0.22", "-1.30503, -94.6484, 2.10997, 0.22", "0.527424, -93.6685, 2.60933, 0.22", "1.60838, -93.0391, 2.90926, 0.44", "3.09071, -92.1558, 3.31617, 0.15", "3.86681, -91.6972, 3.51962, 0.15", "3.93682, -91.6564, 3.53495, 0.15", "4.71628, -91.1984, 3.65012, 0.59", "5.16055, -90.9355, 3.64833, 0.74", "5.22444, -90.8955, 3.63737, 0.74", "5.94443, -90.4169, 3.41918, 0.29", "6.58375, -89.9293, 3.16939, 0.44", "7.71948, -88.9899, 2.67207, 0.22", "8.41144, -88.379, 2.37052, 1.4", "9.63894, -87.3229, 1.84966, 0.22", "10.0295, -86.9963, 1.68799, 0.59", "11.5026, -85.8034, 1.0769, 0.22", "11.615, -85.7169, 1.03281, 0.22", "13.3649, -84.4172, 0.330265, 0.22", "14.5847, -83.5796, -0.188393, 0.22", "14.6661, -83.5271, -0.223199, 0.22", "15.6154, -82.9019, -0.65472, 0.22", "16.6814, -82.1323, -1.18296, 0.66", "17.5293, -81.437, -1.66443, 0.59", "18.8177, -80.1869, -2.52262, 0.22", "19.4976, -79.3515, -3.03853, 0.22", "20.3641, -78.0719, -3.78403, 0.22", "20.9873, -76.8952, -4.41585, 0.22", "21.1508, -76.472, -4.62542, 0.66", "21.3137, -75.8473, -4.89638, 0.66", "21.5166, -74.3637, -5.47657, 0.22", "21.557, -73.7923, -5.70442, 0.52", "21.5892, -73.4466, -5.82282, 0.52", "21.7279, -72.5556, -6.06103, 0.22", "21.7781, -72.3352, -6.10481, 0.52", "21.9323, -71.8743, -6.15287, 0.52", "21.9611, -71.8074, -6.15285, 0.52", "22.6312, -70.3496, -6.0906, 0.22", "22.7467, -70.1143, -6.07674, 0.37", "22.8493, -69.9364, -6.06116, 0.37", "23.8111, -68.4595, -5.9345, 0.15", "23.9642, -68.247, -5.9175, 0.74", "24.3558, -67.7179, -5.88055, 0.74", "24.407, -67.6535, -5.87749, 0.74", "25.5038, -66.3458, -5.80645, 0.22", "25.8551, -65.9613, -5.78089, 0.66", "26.2373, -65.6263, -5.74646, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-7.73772, -96.8755, 1.0725, 1.47", "-7.69058, -97.1307, 1.02042, 1.47", "-7.59044, -97.9916, 0.823047, 1.99", "-7.5496, -98.9799, 0.599055, 1.77", "-7.57019, -100.3, 0.301296, 1.25", "-7.63883, -101.551, 0.0337878, 0.81", "-7.73311, -102.615, -0.224411, 1.47", "-7.87255, -103.712, -0.516061, 2.06", "-8.03421, -104.699, -0.79255, 2.06", "-8.25429, -105.776, -1.10661, 2.43", "-8.50072, -106.787, -1.39711, 2.14", "-8.94178, -108.587, -1.92849, 0.96", "-9.2294, -109.781, -2.29303, 1.25" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "77.1403, 188.848, -34.0534, 0.22", "77.7433, 189.941, -34.3321, 0.22", "78.0927, 190.571, -34.5284, 1.4", "78.3151, 190.994, -34.6605, 1.69", "78.5262, 191.4, -34.7463, 1.77", "78.9383, 192.187, -34.8603, 1.4", "79.6963, 193.594, -34.9943, 0.22", "79.7277, 193.649, -34.9961, 0.22", "80.1647, 194.393, -34.991, 0.22", "80.8001, 195.492, -34.9424, 1.03", "81.1124, 196.041, -34.8951, 1.03", "81.4821, 196.737, -34.8247, 0.59", "81.9654, 197.839, -34.6969, 0.22", "82.1227, 198.283, -34.6777, 0.74", "82.1437, 198.343, -34.6856, 0.74", "82.342, 198.882, -34.8358, 0.74", "82.7238, 199.848, -35.215, 0.22", "83.0844, 200.643, -35.5879, 0.22", "83.5453, 201.542, -36.0616, 0.96", "84.5521, 203.055, -37.0161, 0.22", "84.9284, 203.505, -37.3297, 1.18", "85.6181, 204.175, -37.8566, 1.55", "86.3674, 204.778, -38.3675, 1.55", "86.4203, 204.815, -38.4011, 1.55", "87.8166, 205.74, -39.2468, 0.22", "88.4983, 206.216, -39.6179, 0.44", "89.0198, 206.579, -39.889, 0.81", "89.3916, 206.841, -40.066, 0.81", "90.495, 207.687, -40.5784, 0.22", "90.9816, 208.111, -40.7796, 1.18", "91.3785, 208.496, -40.9253, 1.84", "91.7588, 208.843, -41.0829, 1.84", "92.9874, 209.896, -41.6104, 0.29", "93.618, 210.37, -41.887, 0.29", "94.5398, 211.004, -42.2878, 0.29", "95.1307, 211.365, -42.5326, 1.11", "96.3941, 211.982, -43.035, 0.29", "96.4476, 212.003, -43.0611, 0.29", "97.328, 212.284, -43.5382, 0.59", "97.9879, 212.491, -43.9827, 0.74", "98.7448, 212.757, -44.547, 0.74", "99.3614, 213.019, -45.0208, 0.74", "101.14, 213.934, -46.3941, 0.29", "101.448, 214.104, -46.6449, 0.96", "102.765, 214.889, -47.7619, 0.29", "103.17, 215.116, -48.0881, 1.25", "103.413, 215.246, -48.2583, 1.69", "103.932, 215.523, -48.5527, 1.84", "104.817, 215.975, -48.9458, 0.88", "106.006, 216.578, -49.4212, 0.29", "106.695, 216.93, -49.6571, 0.37", "107.984, 217.612, -50.09, 0.29", "108.474, 217.869, -50.2565, 1.25", "110.266, 218.785, -50.854, 0.22", "111.285, 219.27, -51.2034, 1.4", "111.688, 219.451, -51.3522, 1.69", "112.398, 219.763, -51.6426, 1.25", "114.168, 220.522, -52.4188, 0.22", "114.48, 220.645, -52.5663, 0.88", "115.985, 221.182, -53.2962, 0.22", "116.047, 221.203, -53.3287, 0.44", "116.456, 221.339, -53.5517, 0.44", "117.324, 221.595, -54.0973, 1.33", "118.659, 221.998, -55.0653, 0.22", "119.588, 222.279, -55.7957, 0.81", "119.884, 222.356, -56.0858, 0.81", "119.95, 222.373, -56.1748, 0.81", "120.845, 222.671, -58.0927, 0.29", "121.236, 222.856, -59.2922, 1.62", "121.255, 222.868, -59.3713, 1.62", "121.763, 223.385, -62.2454, 0.74", "122.118, 224.064, -65.053, 0.88", "122.379, 225.001, -68.2165, 0.29", "122.392, 225.202, -68.7666, 1.11", "122.391, 225.225, -68.8222, 1.11", "122.374, 225.43, -69.2213, 1.11", "122.101, 227.286, -71.7729, 0.22", "122.085, 227.441, -71.9395, 0.66", "122.072, 227.771, -72.2357, 0.66", "122.074, 227.878, -72.335, 0.66", "122.142, 229.054, -73.4361, 0.15", "122.242, 229.877, -74.1662, 1.18", "122.253, 229.941, -74.2168, 1.18", "122.335, 230.337, -74.5376, 1.11", "122.688, 231.861, -75.7944, 0.22", "122.704, 231.925, -75.8448, 0.29", "122.987, 232.69, -76.395, 0.15", "122.987, 232.69, -76.395, 0.22" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "77.1403, 188.848, -34.0534, 0.15", "76.3401, 189.419, -33.9247, 0.15", "75.123, 190.287, -33.7289, 0.15", "73.1914, 191.665, -33.4182, 0.74", "73.1327, 191.707, -33.4086, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "38.8822, 40.6863, 34.5631, 0.96", "39.9616, 38.0021, 35.9624, 0.96", "40.4406, 36.6749, 36.7179, 0.59", "40.965, 35.3512, 37.4697, 0.74", "41.2653, 34.6948, 37.8364, 0.66", "41.8869, 33.5006, 38.4132, 0.59", "42.5419, 32.3729, 38.8821, 0.44", "42.587, 32.3047, 38.8928, 0.44", "43.3781, 31.2038, 38.9477, 0.44", "43.8739, 30.5939, 38.8573, 0.66", "44.6926, 29.5456, 38.6369, 0.81", "45.1275, 28.9467, 38.5158, 0.96", "45.6306, 28.1466, 38.3896, 0.74", "46.2513, 26.9191, 38.3098, 0.52", "46.6732, 25.7937, 38.3383, 0.44", "47.0602, 24.4314, 38.4954, 0.44", "47.3585, 23.0818, 38.7897, 1.33", "47.4882, 22.4157, 38.9627, 1.55", "47.5898, 21.9224, 39.0999, 1.55", "47.6072, 21.8541, 39.118, 1.55", "47.8993, 20.7455, 39.3545, 1.33", "48.219, 19.7436, 39.4507, 0.96", "48.5235, 18.9073, 39.4474, 0.59", "48.9096, 17.9798, 39.4391, 0.44", "49.1265, 17.5085, 39.4315, 0.52", "52.6401, 8.90831, 43.1316, 0.52", "57.268, 0.942237, 47.0207, 0.52", "61.8815, -6.41236, 51.9832, 0.52", "65.7149, -13.5736, 57.8158, 0.52", "70.0208, -20.3497, 63.7776, 0.52", "74.4683, -27.2997, 69.4272, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "38.8822, 40.6863, 34.5631, 0.81", "38.6995, 42.8604, 35.8204, 0.81", "38.7339, 43.8515, 36.2379, 0.66", "38.8767, 44.7499, 36.5354, 0.66", "39.2661, 46.0872, 36.9058, 0.66", "39.7731, 47.3266, 37.2029, 0.44", "40.2173, 48.1777, 37.4144, 0.44", "41.0083, 49.2618, 37.464, 0.66", "41.6315, 49.9265, 37.445, 0.37", "42.3104, 50.4378, 37.4124, 0.37", "42.727, 50.6312, 37.3797, 1.25", "43.5466, 50.8498, 37.2698, 1.47" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.2294, -109.781, -2.29303, 0.52", "-9.89851, -111.101, -2.76132, 0.52", "-10.2697, -111.857, -2.99639, 1.33", "-10.605, -112.54, -3.18032, 1.99", "-10.9721, -113.36, -3.36141, 2.28", "-11.2563, -114.029, -3.47308, 2.58", "-11.7132, -115.145, -3.61799, 2.28", "-12.0683, -116.105, -3.71629, 1.92", "-12.3823, -117.025, -3.81913, 1.69", "-12.8042, -118.434, -4.00904, 1.03", "-13.0482, -119.403, -4.17214, 0.52", "-13.2544, -120.458, -4.42404, 0.44", "-13.4156, -121.532, -4.75131, 1.11", "-13.5245, -122.453, -5.06246, 1.62", "-13.6107, -123.492, -5.43979, 1.77", "-13.6825, -124.678, -5.87308, 1.62", "-13.7143, -125.869, -6.25302, 0.66", "-13.7042, -126.886, -6.47622, 0.37", "-13.6722, -127.749, -6.47159, 0.96", "-13.652, -128.254, -6.36645, 1.25", "-13.6334, -128.954, -6.15404, 1.25", "-13.6308, -129.859, -5.83064, 1.11", "-13.6458, -130.707, -5.59902, 0.74", "-13.7642, -132.528, -5.44807, 0.37", "-13.8864, -133.621, -5.57141, 0.37", "-14.0691, -134.903, -5.91827, 1.25", "-14.1835, -135.633, -6.20733, 1.84", "-14.4816, -137.451, -7.06137, 1.62", "-14.6759, -138.519, -7.65567, 0.52", "-14.7966, -139.172, -8.09132, 0.29", "-14.9617, -140.205, -8.79932, 1.11", "-15.0655, -140.973, -9.27776, 1.84", "-15.1299, -141.555, -9.612, 2.14" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-9.2294, -109.781, -2.29303, 0.22", "-8.46512, -110.872, -1.89631, 0.22", "-7.60995, -112.092, -1.45239, 0.22", "-6.92611, -113.068, -1.09742, 0.22", "-6.31093, -113.945, -0.778078, 0.44", "-5.95125, -114.459, -0.591374, 0.44" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "43.5466, 50.8498, 37.2698, 1.33", "43.7689, 50.7074, 37.9473, 1.33", "44.5277, 50.2215, 40.2593, 0.96" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "43.5466, 50.8498, 37.2698, 0.29", "42.8549, 51.6699, 37.038, 0.29", "42.204, 52.4046, 36.8372, 0.29", "41.6676, 52.9613, 36.7011, 0.29", "41.6265, 53.0035, 36.6896, 0.29", "40.9562, 53.6929, 36.5009, 0.29", "40.9152, 53.7352, 36.4893, 0.29", "40.4028, 54.1791, 36.3519, 0.29", "39.673, 54.7548, 36.1935, 0.29", "39.2421, 55.1108, 36.1088, 0.29", "31.7328, 60.9304, 32.9874, 0.29", "24.8088, 67.021, 29.1194, 0.29", "19.0888, 73.7003, 24.3581, 0.29", "12.9613, 80.9513, 21.2155, 0.29", "6.8115, 88.3707, 18.5448, 0.29", "1.23189, 96.0597, 15.4228, 0.29", "-4.40311, 104.245, 14.3042, 0.29", "-8.44261, 112.96, 11.5243, 0.29", "-11.4336, 122.002, 8.47484, 0.29", "-15.7979, 129.876, 4.1216, 0.29", "-18.2522, 139.148, 1.29222, 0.29", "-20.7323, 148.629, -0.696274, 0.29", "-22.4558, 157.78, -4.3418, 0.29", "-24.2199, 167.514, -5.80652, 0.29", "-26.5961, 177.198, -6.56823, 0.29", "-28.4899, 186.952, -7.69513, 0.29", "-29.1072, 196.671, -9.96445, 0.29" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-15.1299, -141.555, -9.612, 0.37", "-14.8991, -142.382, -10.1837, 0.37", "-14.7961, -143.408, -11.1954, 0.37", "-14.8096, -144.463, -12.2972, 0.74", "-14.7768, -145.066, -13.1055, 0.37", "-14.7392, -145.505, -13.7322, 1.03", "-14.7155, -145.762, -14.1017, 1.18", "-14.6076, -147.477, -16.7149, 0.29", "-14.5874, -147.848, -17.3012, 0.29", "-14.3591, -150.268, -21.0041, 0.29", "-14.2727, -150.935, -22.0083, 0.29", "-14.1668, -151.548, -22.8485, 1.25", "-14.1263, -151.739, -23.0725, 1.47", "-14.0817, -151.912, -23.2262, 1.47", "-13.7235, -153.469, -24.2692, 0.22", "-13.6792, -153.765, -24.3746, 0.66", "-13.426, -155.44, -24.8651, 0.22", "-13.3237, -156.079, -25.0097, 0.59", "-13.2809, -156.333, -25.0615, 0.59", "-13.0306, -157.665, -25.2895, 0.22", "-13.0306, -157.665, -25.2895, 0.37", "-13.0136, -157.734, -25.3057, 0.37", "-12.5717, -159.511, -25.8, 0.22", "-12.3055, -160.56, -26.1187, 0.96", "-12.1671, -161.099, -26.288, 1.47", "-11.6736, -162.991, -26.8891, 0.22", "-11.5393, -163.574, -27.0913, 0.37", "-11.5264, -163.638, -27.1153, 0.37", "-11.3509, -164.739, -27.5707, 0.22", "-11.2975, -165.171, -27.7466, 0.74", "-11.2575, -165.576, -27.9154, 0.81", "-11.1344, -166.963, -28.4534, 0.15", "-11.0974, -167.296, -28.5914, 0.59", "-11.0854, -167.39, -28.6314, 0.74", "-11.0617, -167.54, -28.6959, 0.74", "-10.8833, -168.526, -29.0696, 0.22", "-10.7539, -169.228, -29.2876, 0.88", "-10.7377, -169.307, -29.3043, 0.88", "-10.7255, -169.377, -29.3191, 1.18", "-10.6841, -169.653, -29.379, 1.18", "-10.4601, -171.322, -29.735, 0.22", "-10.4112, -171.703, -29.8114, 1.11", "-10.3297, -172.393, -29.9939, 1.18", "-10.1651, -173.821, -30.4172, 0.22", "-10.0214, -175.135, -30.8583, 0.22", "-10.0014, -175.34, -30.9332, 0.66", "-9.97069, -175.688, -31.0736, 0.88", "-9.85409, -177.424, -31.8059, 0.22", "-9.83167, -178.123, -32.0888, 0.22", "-9.83215, -179.017, -32.4298, 1.18", "-9.84883, -179.475, -32.5908, 1.4", "-9.85265, -179.545, -32.6127, 1.4", "-10.0039, -181.138, -33.0453, 0.22", "-10.1768, -182.524, -33.3252, 0.22", "-10.2422, -182.965, -33.4062, 0.66", "-10.3408, -183.57, -33.5047, 0.96", "-10.4138, -184.002, -33.5794, 0.96", "-10.7104, -185.696, -33.8743, 0.15", "-10.9023, -186.745, -34.0531, 0.15", "-11.0161, -187.366, -34.187, 0.15", "-11.0264, -187.424, -34.1999, 0.15", "-11.1091, -187.914, -34.3165, 0.96", "-11.1571, -188.294, -34.3964, 1.11", "-11.1603, -188.354, -34.4027, 1.11", "-11.1859, -189.961, -34.4696, 0.22", "-11.1716, -191.249, -34.4571, 0.22", "-11.1555, -191.756, -34.4291, 0.96", "-11.0919, -192.953, -34.3049, 0.15", "-10.9631, -194.389, -34.0135, 0.15", "-10.9375, -194.6, -33.9506, 1.03", "-10.9287, -194.654, -33.9273, 1.03", "-10.8648, -195.034, -33.7422, 1.03", "-10.8558, -195.099, -33.7103, 1.03", "-10.6388, -196.961, -32.7958, 0.15", "-10.6333, -197.018, -32.7692, 0.15", "-10.5848, -197.551, -32.527, 0.15", "-10.5601, -197.895, -32.3852, 0.96", "-10.5307, -198.444, -32.1835, 1.11", "-10.4349, -200.425, -31.501, 0.15", "-10.4149, -200.927, -31.3525, 0.88", "-10.3974, -201.278, -31.2461, 1.18", "-10.3201, -202.497, -30.8591, 0.15", "-10.2784, -203.154, -30.6502, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-15.1299, -141.555, -9.612, 1.4", "-15.3471, -142.362, -9.18194, 1.4", "-15.8413, -144.421, -8.3548, 0.44", "-16.1081, -145.638, -7.97793, 0.29", "-16.361, -146.85, -7.71276, 0.29", "-16.499, -147.531, -7.60813, 0.81", "-16.7223, -148.75, -7.50618, 1.4", "-16.8514, -149.538, -7.55526, 1.99", "-16.9262, -150.031, -7.71555, 2.28", "-17.0215, -150.732, -8.02613, 2.43", "-17.094, -151.261, -8.29148, 2.43", "-17.2611, -152.43, -8.85988, 1.03", "-17.3597, -153.156, -9.1742, 0.66", "-17.6223, -155.204, -9.94835, 0.29", "-17.7041, -155.985, -10.1898, 0.37", "-17.7725, -157.06, -10.4378, 0.37", "-17.7926, -157.904, -10.5536, 0.66", "-17.7574, -158.83, -10.5405, 0.96", "-17.7155, -159.214, -10.4803, 1.18", "-17.5789, -159.978, -10.2611, 0.44", "-17.3922, -160.885, -10.0039, 0.29", "-17.2165, -161.701, -9.79091, 1.25", "-17.0142, -162.774, -9.57302, 1.62", "-16.9358, -163.349, -9.48615, 1.84", "-16.8985, -164.002, -9.41338, 1.62", "-16.9636, -164.963, -9.38218, 0.81", "-17.1254, -165.76, -9.43037, 0.29", "-17.3418, -166.404, -9.53831, 0.29", "-17.6425, -167.032, -9.68786, 0.29", "-17.9831, -167.609, -9.84461, 0.29", "-18.3954, -168.233, -10.021, 0.96", "-18.5671, -168.501, -10.0919, 1.11", "-18.735, -168.823, -10.1702, 1.11", "-18.7937, -169.03, -10.2093, 1.11", "-18.8359, -169.842, -10.2829, 0.29", "-18.7731, -170.46, -10.3054, 0.44", "-18.6721, -171.036, -10.2989, 0.59", "-18.583, -171.523, -10.2863, 0.59", "-18.473, -172.164, -10.263, 0.52", "-18.3158, -173.212, -10.1961, 0.52", "-18.2389, -173.732, -10.1517, 0.88", "-18.1492, -174.576, -10.08, 0.88", "-18.079, -175.423, -10.0012, 1.25", "-18.0211, -176.372, -9.91085, 1.69", "-17.9809, -177.189, -9.83582, 1.84", "-17.9458, -178.065, -9.76549, 1.84", "-17.9014, -179.177, -9.68023, 1.77", "-17.8778, -180.048, -9.62039, 1.77", "-17.8773, -180.42, -9.59893, 2.06", "-17.9268, -181.232, -9.55885, 2.06", "-18.1101, -182.471, -9.51659, 1.25", "-18.3856, -183.517, -9.50024, 0.66", "-18.812, -184.658, -9.50489, 0.59", "-19.1576, -185.355, -9.53281, 0.66", "-19.6372, -186.201, -9.59004, 0.52", "-20.0246, -186.826, -9.65181, 0.52", "-20.5609, -187.669, -9.76362, 0.52", "-20.7634, -188.007, -9.81916, 0.66", "-21.132, -188.826, -9.97435, 0.59", "-21.2682, -189.543, -10.1131, 0.59", "-21.2317, -190.203, -10.2305, 0.66", "-21.1419, -190.761, -10.3117, 0.66", "-21.03, -191.325, -10.391, 0.74", "-20.9307, -191.931, -10.4771, 0.29", "-20.8547, -192.67, -10.5954, 0.96", "-20.8459, -193.385, -10.73, 1.69", "-20.9209, -194.3, -10.9328, 1.69", "-21.0696, -195.19, -11.1482, 2.06", "-21.2076, -195.787, -11.2853, 2.14", "-21.4577, -196.675, -11.422, 1.77", "-21.4743, -196.732, -11.4264, 1.77", "-21.6881, -197.5, -11.4246, 1.25", "-21.82, -198.051, -11.3762, 0.81", "-22.0315, -199.114, -11.1375, 0.29", "-22.1568, -200.236, -10.7963, 0.74", "-22.1684, -200.716, -10.6153, 0.96", "-22.1501, -201.016, -10.4966, 1.11", "-22.0843, -201.487, -10.3035, 1.11", "-21.8651, -202.496, -10.0213, 0.37", "-21.6438, -203.395, -9.92905, 0.29", "-21.5233, -203.921, -9.95825, 0.29", "-21.4264, -204.501, -10.0566, 0.29", "-21.3705, -205.0, -10.1726, 0.96", "-21.2754, -206.414, -10.6103, 1.4", "-21.2528, -207.214, -10.9221, 1.69", "-21.263, -207.792, -11.1549, 1.62", "-21.3222, -208.954, -11.6171, 1.25", "-21.3998, -210.222, -12.1292, 0.96", "-21.5036, -211.747, -12.7209, 0.96", "-21.622, -213.067, -13.1956, 0.81", "-21.6814, -213.75, -13.4314, 0.96", "-21.7283, -214.301, -13.6044, 0.96", "-21.7929, -215.146, -13.8304, 0.81", "-21.8416, -215.946, -14.0118, 0.59", "-21.8506, -216.829, -14.135, 0.59", "-21.7714, -217.685, -14.1789, 0.66", "-21.6547, -218.261, -14.1888, 1.25", "-21.5201, -218.677, -14.18, 1.25", "-21.337, -219.066, -14.1703, 1.25", "-20.8861, -219.771, -14.2084, 0.81", "-20.2174, -220.722, -14.3261, 0.44", "-19.9612, -221.114, -14.4052, 0.66", "-19.6353, -221.687, -14.5498, 0.66", "-19.281, -222.563, -14.7957, 0.52", "-19.099, -223.467, -15.0553, 0.37", "-19.1283, -224.331, -15.2898, 0.37", "-19.3, -225.146, -15.4928, 0.37", "-19.4692, -225.697, -15.5991, 0.81", "-19.832, -226.668, -15.7359, 0.81", "-20.1134, -227.367, -15.7903, 1.47", "-20.4203, -228.13, -15.8228, 2.14", "-20.5646, -228.529, -15.8462, 2.36", "-20.7791, -229.199, -15.9023, 1.99", "-20.9848, -229.936, -15.9744, 1.18", "-21.2187, -231.022, -16.1016, 0.37", "-21.3777, -231.938, -16.2229, 0.37", "-21.4591, -232.753, -16.3597, 0.29", "-21.4496, -233.621, -16.5408, 0.81", "-21.3188, -234.307, -16.7195, 1.33", "-21.1556, -234.754, -16.8559, 1.33", "-21.1287, -234.809, -16.874, 1.33", "-20.6369, -235.706, -17.1671, 0.88", "-20.0731, -236.737, -17.4749, 0.44", "-19.4945, -237.921, -17.8007, 0.37", "-19.2453, -238.546, -17.9422, 0.29", "-19.001, -239.483, -18.0942, 1.33", "-18.9149, -240.197, -18.1785, 1.99", "-18.907, -240.76, -18.216, 1.92", "-18.9379, -241.556, -18.2494, 1.25", "-19.0, -242.598, -18.263, 0.44", "-19.0466, -243.895, -18.2621, 0.29", "-19.0452, -245.03, -18.2548, 0.29", "-19.0058, -246.091, -18.2489, 0.29", "-18.9335, -247.073, -18.2393, 0.44", "-18.8731, -247.687, -18.2165, 0.81", "-18.8186, -248.274, -18.1481, 1.03", "-18.7748, -248.857, -18.025, 1.03", "-18.7811, -249.635, -17.7904, 0.88", "-18.9215, -250.535, -17.4264, 0.52", "-19.1678, -251.456, -16.995, 0.37", "-19.5527, -252.606, -16.3811, 0.81", "-19.7083, -253.011, -16.1418, 0.81", "-19.8801, -253.414, -15.8962, 0.81", "-20.2784, -254.274, -15.3754, 0.22", "-20.6067, -254.929, -15.0072, 0.22", "-21.0227, -255.816, -14.6227, 0.96", "-21.165, -256.177, -14.523, 1.33", "-21.3753, -256.82, -14.4013, 1.99", "-21.516, -257.323, -14.3466, 2.14", "-21.6079, -257.684, -14.3406, 2.14", "-21.8213, -258.52, -14.3566, 1.47", "-22.0495, -259.442, -14.4259, 0.66", "-22.2664, -260.346, -14.4969, 0.52", "-22.3347, -260.664, -14.5223, 1.11", "-22.4073, -261.072, -14.5574, 1.4" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "44.5277, 50.2215, 40.2593, 0.22", "43.8055, 49.2387, 40.402, 0.22", "43.2104, 48.4289, 40.5195, 0.22", "38.9996, 39.3721, 41.0117, 0.22", "35.0171, 30.2544, 42.016, 0.22", "30.7179, 21.6404, 44.7206, 0.22" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "44.5277, 50.2215, 40.2593, 0.29", "44.9948, 51.2456, 40.6415, 0.29", "45.3856, 52.1021, 40.9613, 0.37", "45.7014, 52.7945, 41.2197, 0.37", "50.5435, 60.7562, 44.8479, 0.37", "54.1937, 69.562, 47.8703, 0.37" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-22.4073, -261.072, -14.5574, 0.66", "-23.0951, -261.579, -15.0792, 0.66", "-23.8754, -262.121, -15.7363, 0.22", "-24.3079, -262.425, -16.1365, 0.88", "-24.5409, -262.613, -16.3638, 1.33", "-24.8253, -262.884, -16.6539, 1.4", "-26.2365, -264.474, -18.1559, 0.44", "-26.4753, -264.81, -18.4603, 0.59", "-26.8473, -265.484, -18.9941, 0.29", "-27.1376, -266.174, -19.4729, 0.29", "-27.347, -266.853, -19.8524, 0.29", "-27.4849, -267.567, -20.1089, 0.74", "-27.5412, -268.148, -20.1782, 1.11", "-27.5531, -268.569, -20.2027, 1.11", "-27.5601, -268.965, -20.2111, 1.11", "-27.5912, -269.661, -20.2811, 0.66", "-27.644, -270.437, -20.409, 0.29", "-27.7653, -271.546, -20.676, 0.22", "-28.015, -272.851, -21.1259, 0.22", "-28.1938, -273.359, -21.3665, 1.62", "-28.835, -274.548, -22.0847, 1.69", "-29.0247, -274.79, -22.2729, 1.55", "-29.6104, -275.344, -22.8025, 0.74", "-30.4166, -275.914, -23.45, 0.37", "-31.4275, -276.468, -24.0836, 0.29", "-31.777, -276.642, -24.2446, 1.03", "-32.4459, -276.954, -24.4277, 1.25", "-32.6552, -277.045, -24.461, 1.4", "-33.0684, -277.217, -24.473, 1.4", "-34.1265, -277.662, -24.3798, 0.66", "-34.7864, -277.955, -24.2677, 0.66", "-35.644, -278.345, -24.0869, 0.59", "-36.2895, -278.634, -23.9206, 0.74", "-36.6796, -278.809, -23.8186, 1.11", "-36.6796, -278.809, -23.8186, 1.4", "-37.0172, -278.961, -23.7505, 1.55", "-37.2162, -279.046, -23.7215, 1.77", "-37.5002, -279.157, -23.706, 1.92", "-37.8488, -279.291, -23.6921, 1.92", "-38.3176, -279.471, -23.665, 1.62", "-38.3767, -279.493, -23.6611, 1.62", "-39.6118, -279.989, -23.702, 0.44", "-40.3546, -280.33, -23.7993, 0.44", "-40.8767, -280.604, -23.905, 0.88", "-41.2274, -280.845, -24.0152, 0.88", "-41.6486, -281.212, -24.1895, 0.88", "-42.745, -282.406, -24.7593, 0.29", "-43.2079, -283.123, -25.0276, 1.62", "-43.3795, -283.436, -25.146, 1.62", "-43.9976, -284.762, -25.6468, 0.29", "-44.2267, -285.369, -25.8505, 1.03", "-44.337, -285.785, -25.953, 1.03", "-44.5517, -287.539, -26.0028, 0.44" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-22.4073, -261.072, -14.5574, 0.22", "-22.1621, -262.103, -14.0444, 0.22", "-21.9283, -262.985, -13.6606, 0.22", "-21.6057, -264.109, -13.2284, 1.03", "-21.4669, -264.565, -13.0921, 1.03", "-21.1191, -265.678, -12.8269, 0.22", "-20.9238, -266.303, -12.7003, 0.88", "-20.7439, -266.864, -12.6153, 1.03", "-20.5764, -267.349, -12.5717, 1.18", "-19.9831, -269.005, -12.5362, 0.22", "-19.6596, -269.899, -12.5317, 0.22", "-19.4724, -270.382, -12.5413, 0.52", "-19.3537, -270.657, -12.5416, 0.52", "-18.9473, -271.57, -12.5436, 0.22", "-18.8884, -271.692, -12.5441, 0.22", "-18.7372, -271.948, -12.5467, 1.11", "-18.4515, -272.352, -12.5467, 1.25", "-17.7932, -273.168, -12.5467, 0.37" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-44.5517, -287.539, -26.0028, 0.29", "-44.6588, -288.402, -26.2489, 0.29", "-44.7437, -289.204, -26.4557, 0.22", "-44.8767, -290.361, -26.7133, 0.22", "-44.9632, -290.874, -26.8139, 0.74", "-45.0263, -291.163, -26.8639, 0.88", "-45.114, -291.509, -26.9162, 1.11", "-45.2525, -291.924, -26.9624, 1.11", "-45.5598, -292.764, -27.0242, 0.22", "-45.8434, -293.409, -27.0349, 0.22", "-46.105, -293.926, -27.0596, 0.96", "-46.3945, -294.476, -27.0958, 1.47", "-46.5944, -294.904, -27.1385, 1.62", "-46.6202, -294.961, -27.1504, 1.62", "-46.8436, -295.455, -27.3551, 1.62", "-47.3927, -296.59, -27.9724, 0.29", "-47.8566, -297.47, -28.5636, 0.29", "-48.4595, -298.516, -29.41, 0.29", "-49.0453, -299.474, -30.2538, 0.81", "-49.9008, -300.825, -31.615, 0.29", "-50.2426, -301.321, -32.1684, 0.29", "-50.6484, -301.897, -32.8896, 0.29", "-51.1479, -302.608, -33.8263, 1.11", "-51.4433, -303.05, -34.4007, 1.18", "-52.3229, -304.546, -36.1991, 0.59", "-52.6238, -305.081, -36.8348, 0.59", "-53.3099, -306.238, -38.215, 0.96", "-53.6532, -306.773, -38.8267, 1.4", "-54.1627, -307.536, -39.6406, 1.4", "-54.5878, -308.138, -40.2448, 0.88", "-55.3081, -309.102, -41.0382, 0.37", "-55.9929, -309.964, -41.6431, 0.37", "-56.5197, -310.579, -41.9658, 0.81", "-56.903, -311.045, -42.1529, 1.47", "-57.1485, -311.354, -42.2713, 1.62", "-58.0167, -312.528, -42.7401, 0.37", "-58.6319, -313.382, -43.144, 0.37", "-59.0675, -313.904, -43.4838, 0.37", "-59.4986, -314.335, -43.8288, 0.88", "-60.6883, -315.433, -44.7788, 0.44", "-60.9913, -315.706, -45.0214, 0.96", "-61.7291, -316.355, -45.6239, 0.29", "-62.5501, -317.138, -46.2967, 0.29", "-63.0713, -317.673, -46.6796, 0.29", "-63.6669, -318.345, -47.0024, 0.88", "-63.9555, -318.73, -47.0898, 1.25", "-64.1868, -319.073, -47.1367, 1.03", "-64.6698, -319.876, -47.1856, 0.29", "-65.0479, -320.52, -47.2136, 0.29", "-65.8728, -321.683, -47.2766, 0.29", "-66.1749, -322.061, -47.2934, 0.81", "-66.281, -322.197, -47.2974, 1.18", "-66.6225, -322.642, -47.3171, 1.4", "-66.9996, -323.136, -47.354, 1.03", "-67.5554, -323.897, -47.4305, 0.52", "-67.9855, -324.543, -47.5111, 0.37", "-68.4445, -325.199, -47.5665, 0.74", "-69.1181, -326.109, -47.5912, 0.29", "-69.21, -326.234, -47.5831, 0.59", "-69.2531, -326.292, -47.5741, 0.59", "-69.4781, -326.575, -47.5131, 0.59", "-70.1253, -327.35, -47.3186, 0.29", "-70.5414, -327.896, -47.1729, 0.29", "-70.9104, -328.535, -47.0127, 0.74", "-71.1146, -328.946, -46.9313, 1.11", "-71.3504, -329.486, -46.8493, 1.33", "-71.5406, -329.98, -46.8356, 1.33", "-71.8755, -330.976, -46.8701, 0.29", "-72.1408, -331.836, -46.925, 0.29", "-72.3253, -332.456, -46.993, 1.11", "-72.4778, -333.009, -47.066, 1.47", "-72.8148, -334.285, -47.2824, 1.62" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-44.5517, -287.539, -26.0028, 0.37", "-45.4581, -287.554, -25.2624, 0.37", "-46.3125, -287.569, -24.5645, 0.66", "-46.8218, -287.578, -24.1485, 0.88", "-48.4827, -287.607, -22.7918, 0.29", "-49.2419, -287.62, -22.1717, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-72.8148, -334.285, -47.2824, 0.22", "-72.5389, -335.514, -44.688, 0.22", "-72.3608, -336.087, -43.1393, 0.37", "-72.1593, -336.736, -41.3875, 0.29", "-72.1505, -336.764, -41.3106, 0.29", "-71.7811, -337.953, -38.0989, 0.66", "-71.4036, -339.168, -34.8163, 0.44", "-71.1474, -339.816, -32.5206, 3.54" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-72.8148, -334.285, -47.2824, 0.44", "-73.7942, -334.8, -47.2824, 0.44", "-74.6303, -335.225, -47.2824, 0.29", "-75.1503, -335.498, -47.2824, 0.66", "-75.6781, -335.755, -47.3159, 0.96", "-75.87, -335.858, -47.3332, 1.25", "-75.9397, -335.901, -47.3405, 1.25", "-76.2805, -336.175, -47.3868, 1.25", "-76.7477, -336.635, -47.4462, 0.74", "-77.73, -337.754, -47.5038, 0.29", "-78.1931, -338.341, -47.5057, 0.44", "-78.6864, -338.996, -47.5014, 0.44", "-79.2048, -339.726, -47.4858, 0.52", "-79.6986, -340.491, -47.4499, 0.52", "-80.2473, -341.453, -47.3602, 0.74", "-80.533, -342.068, -47.2515, 1.03" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-80.533, -342.068, -47.2515, 0.37", "-78.7605, -341.983, -44.4791, 0.37", "-77.7908, -341.937, -43.0341, 0.52", "-77.0674, -341.894, -42.0301, 0.29", "-77.0305, -341.892, -41.9788, 0.29", "-76.2894, -341.848, -40.9501, 0.44", "-75.4732, -341.8, -39.8173, 0.22", "-74.9473, -341.753, -39.2319, 0.66", "-74.5508, -341.719, -38.7988, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-80.533, -342.068, -47.2515, 1.4", "-81.4133, -343.498, -46.359, 1.4", "-81.8023, -344.13, -45.9646, 1.62", "-82.264, -344.88, -45.4964, 1.47", "-82.5581, -345.358, -45.1982, 1.47" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-82.5581, -345.358, -45.1982, 0.22", "-84.843, -346.751, -47.343, 0.22", "-86.1994, -347.503, -48.4691, 0.22", "-86.8117, -347.79, -48.9461, 0.22", "-86.8667, -347.814, -48.9875, 0.22", "-87.7098, -348.124, -49.6485, 0.52", "-88.7993, -348.46, -50.4834, 0.59", "-89.8493, -348.655, -51.2985, 0.22", "-90.8647, -348.815, -52.2635, 0.22", "-90.9102, -348.822, -52.3161, 0.22", "-92.0342, -349.054, -53.7101, 0.22", "-93.1704, -349.348, -55.1936, 0.88", "-94.8774, -349.89, -57.4854, 0.29", "-96.3448, -350.458, -59.5717, 0.22", "-97.9198, -351.261, -61.8449, 0.22", "-98.8286, -351.848, -63.1102, 0.22", "-99.291, -352.235, -63.7181, 0.52", "-99.3235, -352.269, -63.76, 0.52", "-99.5514, -352.567, -63.9953, 0.52", "-100.46, -353.858, -64.6472, 0.22", "-101.274, -355.235, -65.0573, 0.22", "-101.527, -355.695, -65.1898, 0.29", "-102.101, -356.669, -65.5051, 0.29", "-102.133, -356.721, -65.5228, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-82.5581, -345.358, -45.1982, 0.29", "-83.2964, -346.373, -45.2772, 0.29", "-83.6703, -347.045, -45.4244, 0.29", "-84.1334, -348.067, -45.6897, 0.22", "-84.4386, -348.887, -45.9036, 1.4", "-84.5464, -349.235, -45.9825, 1.69", "-84.7608, -349.993, -46.1404, 1.33", "-85.1659, -351.707, -46.4661, 0.74", "-85.3485, -352.587, -46.6106, 0.66", "-85.475, -353.388, -46.6947, 0.52", "-85.6269, -354.273, -46.7317, 0.52", "-85.8294, -355.152, -46.7078, 0.96", "-85.9624, -355.548, -46.6611, 1.4", "-86.3646, -356.393, -46.4503, 1.47", "-86.873, -357.27, -46.1889, 0.29", "-87.3177, -357.939, -45.9664, 0.29", "-87.569, -358.3, -45.8161, 0.59", "-87.7159, -358.515, -45.7085, 0.59", "-88.2245, -359.276, -45.3027, 0.29", "-88.4388, -359.6, -45.1268, 0.59", "-88.5851, -359.825, -45.0012, 0.59", "-89.2878, -361.149, -44.2386, 0.29", "-89.5103, -361.632, -43.9458, 0.29", "-89.5306, -361.683, -43.9134, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-89.5306, -361.683, -43.9134, 0.66", "-90.0018, -361.73, -43.4025, 0.66", "-90.3475, -361.723, -43.0296, 0.81", "-91.9986, -361.351, -40.7286, 0.22", "-92.6352, -361.184, -39.7455, 0.22", "-93.2382, -361.038, -38.6542, 0.37", "-93.6484, -360.927, -37.8493, 0.22", "-93.904, -360.845, -37.3126, 0.44", "-95.0824, -360.464, -34.6336, 0.29", "-95.7533, -360.222, -33.0163, 0.29", "-96.7518, -359.908, -30.5322, 0.44", "-97.1347, -359.843, -29.6571, 0.37", "-97.5012, -359.833, -28.8972, 0.29", "-98.3169, -359.919, -27.4193, 0.59", "-99.0197, -360.086, -26.4252, 0.37", "-99.8136, -360.316, -25.5033, 0.37", "-100.48, -360.558, -24.9009, 0.29", "-101.135, -360.859, -24.3445, 0.29", "-102.296, -361.469, -23.4271, 0.29", "-103.553, -362.159, -22.5205, 0.29", "-104.198, -362.519, -22.0759, 0.29", "-104.657, -362.754, -21.7675, 0.29", "-105.621, -363.189, -21.1142, 0.44", "-106.103, -363.389, -20.8064, 0.44", "-107.515, -363.932, -19.8005, 0.29", "-107.974, -364.087, -19.3965, 0.29", "-108.457, -364.214, -18.8707, 0.29", "-109.029, -364.358, -18.0618, 0.29", "-109.451, -364.51, -17.2512, 0.52", "-110.258, -365.125, -14.7609, 0.29", "-110.485, -365.468, -13.5931, 0.29", "-110.619, -365.777, -12.6186, 0.29", "-110.797, -366.297, -10.9186, 0.29", "-110.893, -366.653, -9.66888, 0.37", "-111.026, -367.047, -8.12884, 0.37", "-111.291, -367.483, -6.47038, 0.29", "-111.312, -367.503, -6.39305, 0.29", "-111.849, -367.812, -5.04332, 0.29", "-111.885, -367.819, -4.98331, 0.29", "-112.728, -367.912, -3.86242, 0.29", "-113.533, -368.043, -2.98114, 0.29", "-113.901, -368.157, -2.63802, 0.37", "-114.387, -368.391, -2.24528, 0.37", "-115.462, -369.068, -1.57788, 0.29", "-116.112, -369.499, -1.26782, 0.29", "-116.991, -370.105, -0.979207, 0.29", "-117.774, -370.639, -0.783685, 0.29", "-118.736, -371.312, -0.591766, 0.29", "-119.613, -371.962, -0.458968, 0.29", "-120.493, -372.646, -0.269535, 0.29", "-121.224, -373.209, -0.0371238, 0.29", "-121.304, -373.275, 0.00363418, 0.29", "-121.925, -373.902, 0.474875, 0.59", "-122.602, -374.738, 1.25768, 0.22", "-123.567, -376.203, 2.65815, 0.22", "-123.602, -376.268, 2.72808, 0.22", "-124.011, -377.102, 3.70351, 0.29", "-124.168, -377.458, 4.14052, 0.29", "-124.471, -378.235, 5.17279, 0.29", "-124.695, -378.902, 6.07254, 0.29", "-125.093, -380.317, 7.74889, 0.59", "-125.157, -380.56, 8.0291, 0.37", "-125.265, -381.01, 8.51955, 0.29", "-125.293, -381.425, 9.01811, 0.29", "-129.131, -384.647, 17.6715, 0.29" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-89.5306, -361.683, -43.9134, 0.88", "-89.8141, -362.102, -43.9954, 0.88", "-90.1254, -362.577, -44.0249, 0.88", "-90.689, -363.418, -44.0263, 0.22", "-91.1387, -364.013, -43.9226, 0.22", "-91.6111, -364.607, -43.7285, 0.22", "-92.2833, -365.429, -43.3833, 0.22", "-92.783, -366.0, -43.0412, 0.66", "-92.9464, -366.184, -42.8985, 0.66", "-93.7919, -367.18, -41.9943, 0.22", "-94.171, -367.678, -41.5625, 0.22", "-94.2384, -367.762, -41.4907, 0.22", "-94.506, -368.091, -41.2293, 0.81", "-94.7338, -368.394, -41.0223, 0.96", "-95.4781, -369.478, -40.3832, 0.22", "-95.9352, -370.238, -40.0772, 0.74", "-96.2327, -370.727, -39.916, 1.11", "-96.2681, -370.785, -39.8991, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_25", "dend_0", "dend_48", "dend_45", "dend_41", "dend_26", "dend_4", "dend_1", "dend_50", "dend_49", "dend_47", "dend_46", "dend_43", "dend_42", "dend_36", "dend_27", "dend_24", "dend_5", "dend_3", "dend_2", "dend_40", "dend_37", "dend_35", "dend_28", "dend_23", "dend_6", "dend_39", "dend_38", "dend_34", "dend_29", "dend_8", "dend_7", "dend_31", "dend_30", "dend_22", "dend_9", "dend_33", "dend_32", "dend_11", "dend_10", "dend_13", "dend_12", "dend_21", "dend_14", "dend_20", "dend_15", "dend_19", "dend_16", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_25", "dend_0", "dend_48", "dend_45", "dend_41", "dend_26", "dend_4", "dend_1", "dend_50", "dend_49", "dend_47", "dend_46", "dend_43", "dend_42", "dend_36", "dend_27", "dend_24", "dend_5", "dend_3", "dend_2", "dend_40", "dend_37", "dend_35", "dend_28", "dend_23", "dend_6", "dend_39", "dend_38", "dend_34", "dend_29", "dend_8", "dend_7", "dend_31", "dend_30", "dend_22", "dend_9", "dend_33", "dend_32", "dend_11", "dend_10", "dend_13", "dend_12", "dend_21", "dend_14", "dend_20", "dend_15", "dend_19", "dend_16", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L4_LBC_23aa2e3048_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_25
create dend_41
public dend_41
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_26
create dend_36
public dend_36
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_4
create dend_24
public dend_24
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_27
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_5
create dend_23
public dend_23
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_22, id: dend_22, parent: dend_8
create dend_22
public dend_22
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_21, id: dend_21, parent: dend_13
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_25, dend_0, dend_48, dend_45, dend_41, dend_26, dend_4, dend_1, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_36, dend_27, dend_24, dend_5, dend_3, dend_2, dend_40, dend_37, dend_35, dend_28, dend_23, dend_6, dend_39, dend_38, dend_34, dend_29, dend_8, dend_7, dend_31, dend_30, dend_22, dend_9, dend_33, dend_32, dend_11, dend_10, dend_13, dend_12, dend_21, dend_14, dend_20, dend_15, dend_19, dend_16, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_44, dend_25, dend_0, dend_48, dend_45, dend_41, dend_26, dend_4, dend_1, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_36, dend_27, dend_24, dend_5, dend_3, dend_2, dend_40, dend_37, dend_35, dend_28, dend_23, dend_6, dend_39, dend_38, dend_34, dend_29, dend_8, dend_7, dend_31, dend_30, dend_22, dend_9, dend_33, dend_32, dend_11, dend_10, dend_13, dend_12, dend_21, dend_14, dend_20, dend_15, dend_19, dend_16, dend_18, dend_17]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_51
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.4500002013478323)
    connect dend_25(0), soma_0(0.4500002013478323)
    connect dend_0(0), soma_0(0.4500002013478323)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_22(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_21(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.10291, 7.90899, -2.15843, 3.34194 ) }
    soma_0 { pt3dadd( 1.9029, 7.18155, -1.9753, 5.85803 ) }
    soma_0 { pt3dadd( 1.70289, 6.4541, -1.79218, 8.32042 ) }
    soma_0 { pt3dadd( 1.50288, 5.72665, -1.60905, 9.88267 ) }
    soma_0 { pt3dadd( 1.30286, 4.9992, -1.42592, 10.8351 ) }
    soma_0 { pt3dadd( 1.10285, 4.27175, -1.24279, 11.6726 ) }
    soma_0 { pt3dadd( 0.902844, 3.54431, -1.05967, 12.0481 ) }
    soma_0 { pt3dadd( 0.702833, 2.81686, -0.876538, 12.3612 ) }
    soma_0 { pt3dadd( 0.502823, 2.08941, -0.693411, 12.4649 ) }
    soma_0 { pt3dadd( 0.302812, 1.36196, -0.510283, 12.4525 ) }
    soma_0 { pt3dadd( 0.102801, 0.634515, -0.327156, 12.4603 ) }
    soma_0 { pt3dadd( -0.0972091, -0.0929329, -0.144028, 12.179 ) }
    soma_0 { pt3dadd( -0.29722, -0.820381, 0.0390996, 11.8016 ) }
    soma_0 { pt3dadd( -0.49723, -1.54783, 0.222227, 11.2647 ) }
    soma_0 { pt3dadd( -0.697241, -2.27528, 0.405355, 10.6908 ) }
    soma_0 { pt3dadd( -0.897251, -3.00272, 0.588482, 9.84874 ) }
    soma_0 { pt3dadd( -1.09726, -3.73017, 0.77161, 8.85587 ) }
    soma_0 { pt3dadd( -1.29727, -4.45762, 0.954738, 7.71115 ) }
    soma_0 { pt3dadd( -1.49728, -5.18507, 1.13787, 5.78386 ) }
    soma_0 { pt3dadd( -1.69729, -5.91252, 1.32099, 3.65042 ) }
    soma_0 { pt3dadd( -1.8973, -6.63996, 1.50412, 2.23669 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.645558, 4.90742, -18.5313, 1.18 ) }
    dend_44 { pt3dadd( -0.69467, 4.96061, -18.539, 1.18 ) }
    dend_44 { pt3dadd( -1.13396, 5.66308, -18.6809, 1.18 ) }
    dend_44 { pt3dadd( -1.39664, 6.51556, -18.8716, 1.18 ) }
    dend_44 { pt3dadd( -1.4205, 6.67915, -18.9099, 1.18 ) }
    dend_44 { pt3dadd( -1.36995, 7.5894, -19.1445, 1.03 ) }
    dend_44 { pt3dadd( -0.937659, 9.20305, -19.5747, 0.52 ) }
    dend_44 { pt3dadd( -0.327238, 10.4476, -19.9169, 0.66 ) }
    dend_44 { pt3dadd( 0.295927, 11.4342, -20.2638, 0.81 ) }
    dend_44 { pt3dadd( 0.331717, 11.4913, -20.2994, 0.81 ) }
    dend_44 { pt3dadd( 0.697778, 12.1908, -20.9027, 0.59 ) }
    dend_44 { pt3dadd( 0.929549, 12.7265, -21.5002, 0.52 ) }
    dend_44 { pt3dadd( 0.865781, 13.0167, -22.1729, 0.52 ) }
    dend_44 { pt3dadd( 0.600307, 13.3236, -23.2272, 1.25 ) }
    dend_44 { pt3dadd( -0.290658, 13.9082, -25.6564, 1.69 ) }
    dend_44 { pt3dadd( -0.486926, 14.0164, -26.0979, 1.69 ) }
    dend_44 { pt3dadd( -0.54748, 14.046, -26.2091, 1.69 ) }
    dend_44 { pt3dadd( -2.06672, 14.8343, -28.5739, 0.81 ) }
    dend_44 { pt3dadd( -2.09872, 14.8527, -28.6212, 0.81 ) }
    dend_44 { pt3dadd( -2.60009, 15.1631, -29.3409, 0.66 ) }
    dend_44 { pt3dadd( -3.25621, 15.5645, -30.2826, 0.59 ) }
    dend_44 { pt3dadd( -3.74919, 15.8193, -31.029, 0.44 ) }
    dend_44 { pt3dadd( -4.49518, 16.1436, -32.1089, 0.37 ) }
    dend_44 { pt3dadd( -5.80419, 16.7225, -33.966, 1.18 ) }
    dend_44 { pt3dadd( -6.80956, 17.1165, -35.4635, 1.47 ) }
    dend_44 { pt3dadd( -7.59757, 17.3538, -36.7412, 1.62 ) }
    dend_44 { pt3dadd( -8.52587, 17.4927, -38.3082, 1.62 ) }
    dend_44 { pt3dadd( -8.99637, 17.4942, -39.1584, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 49/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.27444, 6.92742, 4.47868, 2.8 ) }
    dend_25 { pt3dadd( 1.27444, 6.92742, 4.47868, 2.8 ) }
    dend_25 { pt3dadd( 1.7844, 7.91071, 4.47868, 2.58 ) }
    dend_25 { pt3dadd( 2.67398, 9.49688, 4.47868, 2.43 ) }
    dend_25 { pt3dadd( 3.50312, 10.8857, 4.47868, 2.43 ) }
    dend_25 { pt3dadd( 4.08019, 11.8153, 4.47868, 2.43 ) }
    dend_25 { pt3dadd( 4.81161, 12.9666, 4.47868, 2.73 ) }
    dend_25 { pt3dadd( 5.41076, 13.8397, 4.47868, 2.95 ) }
    dend_25 { pt3dadd( 6.14546, 14.7644, 4.47868, 3.09 ) }
    dend_25 { pt3dadd( 6.86112, 15.5097, 4.47868, 3.09 ) }
    dend_25 { pt3dadd( 7.72616, 16.2604, 4.397, 3.17 ) }
    dend_25 { pt3dadd( 7.77526, 16.2999, 4.39158, 3.17 ) }
    dend_25 { pt3dadd( 8.80215, 17.0591, 4.25609, 3.17 ) }
    dend_25 { pt3dadd( 9.84065, 17.7634, 4.09342, 2.28 ) }
    dend_25 { pt3dadd( 11.26, 18.633, 3.82702, 2.14 ) }
    dend_25 { pt3dadd( 13.3989, 19.7997, 3.35477, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 65/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.56556, -5.95258, 3.97868, 3.76 ) }
    dend_0 { pt3dadd( -2.56556, -5.95258, 3.97868, 3.76 ) }
    dend_0 { pt3dadd( -2.64113, -7.56152, 3.89273, 2.28 ) }
    dend_0 { pt3dadd( -2.74983, -10.2686, 3.72264, 1.77 ) }
    dend_0 { pt3dadd( -2.82379, -12.4886, 3.53766, 1.77 ) }
    dend_0 { pt3dadd( -2.87516, -14.0278, 3.34892, 2.36 ) }
    dend_0 { pt3dadd( -2.94769, -16.2284, 3.00139, 3.02 ) }
    dend_0 { pt3dadd( -3.00993, -18.0647, 2.62987, 3.39 ) }
    dend_0 { pt3dadd( -3.01165, -18.1356, 2.61333, 3.39 ) }
    dend_0 { pt3dadd( -3.05691, -20.3557, 1.99531, 3.09 ) }
    dend_0 { pt3dadd( -3.13142, -22.4348, 1.32559, 2.65 ) }
    dend_0 { pt3dadd( -3.21846, -24.5233, 0.574705, 2.36 ) }
    dend_0 { pt3dadd( -3.30655, -26.1296, -0.056427, 2.36 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 78/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.8973, -6.63996, 1.50412, 0.710378 ) }
    axon_0 { pt3dadd( -5.87395, -21.1032, 1.50412, 0.710378 ) }
    axon_0 { pt3dadd( -9.85061, -35.5665, 1.50412, 0.710378 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 81/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -8.99637, 17.4942, -39.1584, 0.37 ) }
    dend_48 { pt3dadd( -8.98899, 16.3176, -41.5249, 0.37 ) }
    dend_48 { pt3dadd( -8.99792, 15.2961, -43.3258, 1.25 ) }
    dend_48 { pt3dadd( -9.00531, 15.1208, -43.5996, 1.25 ) }
    dend_48 { pt3dadd( -9.17851, 12.8185, -47.0368, 0.44 ) }
    dend_48 { pt3dadd( -9.21937, 12.4814, -47.522, 1.33 ) }
    dend_48 { pt3dadd( -9.30381, 12.0007, -48.2145, 1.47 ) }
    dend_48 { pt3dadd( -9.4416, 11.4489, -49.0419, 0.52 ) }
    dend_48 { pt3dadd( -9.53805, 11.0287, -49.6883, 0.29 ) }
    dend_48 { pt3dadd( -9.5913, 10.4645, -50.826, 0.81 ) }
    dend_48 { pt3dadd( -9.57342, 10.3142, -51.3944, 0.81 ) }
    dend_48 { pt3dadd( -9.46958, 9.79426, -53.6527, 1.33 ) }
    dend_48 { pt3dadd( -9.3546, 9.42438, -55.5551, 1.62 ) }
    dend_48 { pt3dadd( -9.13598, 8.94874, -58.5002, 1.84 ) }
    dend_48 { pt3dadd( -8.81489, 8.49076, -61.8269, 2.36 ) }
    dend_48 { pt3dadd( -8.03828, 7.72538, -68.2567, 2.36 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 97/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -8.99637, 17.4942, -39.1584, 0.44 ) }
    dend_45 { pt3dadd( -10.4522, 19.2786, -42.4293, 0.44 ) }
    dend_45 { pt3dadd( -10.8372, 19.7504, -43.2942, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_45 { pt3dadd( -11.2719, 20.2832, -44.2708, 2.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_25 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 13.3989, 19.7997, 3.35477, 0.81 ) }
    dend_41 { pt3dadd( 13.0259, 20.7452, 3.64113, 0.81 ) }
    dend_41 { pt3dadd( 12.6509, 21.6645, 3.9108, 0.81 ) }
    dend_41 { pt3dadd( 12.2631, 22.6123, 4.16849, 0.74 ) }
    dend_41 { pt3dadd( 12.063, 23.0973, 4.29045, 0.81 ) }
    dend_41 { pt3dadd( 11.8345, 23.6281, 4.41401, 0.44 ) }
    dend_41 { pt3dadd( 11.3789, 24.6183, 4.62578, 0.44 ) }
    dend_41 { pt3dadd( 11.1176, 25.1537, 4.73392, 0.44 ) }
    dend_41 { pt3dadd( 10.8149, 25.7337, 4.82811, 0.66 ) }
    dend_41 { pt3dadd( 10.5796, 26.184, 4.87024, 0.96 ) }
    dend_41 { pt3dadd( 10.3413, 26.7242, 4.93667, 1.11 ) }
    dend_41 { pt3dadd( 10.1119, 27.4358, 4.99154, 1.11 ) }
    dend_41 { pt3dadd( 10.1011, 27.4981, 4.99314, 1.11 ) }
    dend_41 { pt3dadd( 10.0576, 28.389, 4.98022, 0.37 ) }
    dend_41 { pt3dadd( 10.0684, 29.2491, 4.94449, 0.37 ) }
    dend_41 { pt3dadd( 10.1377, 30.3832, 4.87514, 0.88 ) }
    dend_41 { pt3dadd( 10.267, 31.7174, 4.77183, 0.37 ) }
    dend_41 { pt3dadd( 10.361, 32.5479, 4.69477, 0.37 ) }
    dend_41 { pt3dadd( 10.4389, 33.5155, 4.5569, 0.37 ) }
    dend_41 { pt3dadd( 10.4506, 33.9837, 4.44793, 0.59 ) }
    dend_41 { pt3dadd( 10.442, 34.0617, 4.42258, 0.59 ) }
    dend_41 { pt3dadd( 10.3384, 34.4518, 4.24827, 0.81 ) }
    dend_41 { pt3dadd( 10.2268, 34.757, 4.10701, 0.81 ) }
    dend_41 { pt3dadd( 9.97251, 35.4579, 3.72596, 0.59 ) }
    dend_41 { pt3dadd( 9.80552, 36.0468, 3.40613, 0.37 ) }
    dend_41 { pt3dadd( 9.65866, 36.7295, 3.02765, 0.37 ) }
    dend_41 { pt3dadd( 9.5075, 37.8265, 2.39339, 1.25 ) }
    dend_41 { pt3dadd( 9.49144, 38.0967, 2.24102, 1.4 ) }
    dend_41 { pt3dadd( 9.49754, 39.0738, 1.73674, 0.81 ) }
    dend_41 { pt3dadd( 9.5473, 39.9038, 1.36691, 0.88 ) }
    dend_41 { pt3dadd( 9.5645, 40.1337, 1.27023, 0.88 ) }
    dend_41 { pt3dadd( 9.58757, 41.0638, 0.901662, 0.52 ) }
    dend_41 { pt3dadd( 9.51426, 41.8743, 0.620798, 0.37 ) }
    dend_41 { pt3dadd( 9.40323, 42.5055, 0.421376, 0.66 ) }
    dend_41 { pt3dadd( 9.27834, 42.9858, 0.293823, 0.66 ) }
    dend_41 { pt3dadd( 9.0192, 43.876, 0.0868347, 0.44 ) }
    dend_41 { pt3dadd( 8.77845, 44.8065, -0.119756, 0.29 ) }
    dend_41 { pt3dadd( 8.48781, 46.0587, -0.389927, 0.81 ) }
    dend_41 { pt3dadd( 8.3997, 46.5697, -0.51979, 1.11 ) }
    dend_41 { pt3dadd( 8.3394, 47.2755, -0.70985, 1.25 ) }
    dend_41 { pt3dadd( 8.33349, 48.1511, -0.950538, 1.25 ) }
    dend_41 { pt3dadd( 8.47316, 50.0874, -1.46819, 0.29 ) }
    dend_41 { pt3dadd( 8.54277, 50.5013, -1.58636, 0.66 ) }
    dend_41 { pt3dadd( 8.7963, 51.4085, -1.8473, 0.66 ) }
    dend_41 { pt3dadd( 9.10599, 52.2585, -2.06553, 0.44 ) }
    dend_41 { pt3dadd( 9.13663, 52.3231, -2.07931, 0.44 ) }
    dend_41 { pt3dadd( 9.42562, 52.8328, -2.13422, 0.44 ) }
    dend_41 { pt3dadd( 9.89041, 53.5742, -2.0761, 0.29 ) }
    dend_41 { pt3dadd( 10.3182, 54.4153, -1.95591, 0.44 ) }
    dend_41 { pt3dadd( 10.6967, 55.386, -1.76135, 0.44 ) }
    dend_41 { pt3dadd( 10.7395, 55.5323, -1.73181, 0.44 ) }
    dend_41 { pt3dadd( 10.9696, 56.5331, -1.54445, 0.52 ) }
    dend_41 { pt3dadd( 11.0845, 57.2493, -1.42304, 0.52 ) }
    dend_41 { pt3dadd( 11.2011, 58.4208, -1.2944, 0.66 ) }
    dend_41 { pt3dadd( 11.2814, 59.6481, -1.23651, 1.47 ) }
    dend_41 { pt3dadd( 11.355, 60.7548, -1.24357, 2.14 ) }
    dend_41 { pt3dadd( 11.4155, 61.5206, -1.29545, 2.14 ) }
    dend_41 { pt3dadd( 11.4791, 62.3183, -1.39228, 1.92 ) }
    dend_41 { pt3dadd( 11.5495, 63.4397, -1.60181, 0.88 ) }
    dend_41 { pt3dadd( 11.5713, 64.1755, -1.7881, 0.44 ) }
    dend_41 { pt3dadd( 11.5652, 65.3651, -2.14986, 0.44 ) }
    dend_41 { pt3dadd( 11.5283, 66.738, -2.57769, 0.37 ) }
    dend_41 { pt3dadd( 11.5048, 67.3641, -2.76499, 0.59 ) }
    dend_41 { pt3dadd( 11.4728, 68.0395, -2.94413, 0.88 ) }
    dend_41 { pt3dadd( 11.4351, 68.5307, -3.04532, 0.88 ) }
    dend_41 { pt3dadd( 11.3408, 69.2952, -3.1727, 0.22 ) }
    dend_41 { pt3dadd( 11.1306, 70.6173, -3.31659, 0.22 ) }
    dend_41 { pt3dadd( 11.1306, 70.6173, -3.31659, 0.96 ) }
    dend_41 { pt3dadd( 11.0036, 71.294, -3.36559, 1.03 ) }
    dend_41 { pt3dadd( 10.9003, 71.7938, -3.41145, 1.03 ) }
    dend_41 { pt3dadd( 10.5463, 73.2943, -3.59237, 0.29 ) }
    dend_41 { pt3dadd( 10.3477, 74.0604, -3.69795, 1.25 ) }
    dend_41 { pt3dadd( 10.1504, 74.7767, -3.80335, 1.77 ) }
    dend_41 { pt3dadd( 9.74369, 76.3049, -4.02662, 0.37 ) }
    dend_41 { pt3dadd( 9.56458, 77.0009, -4.1307, 0.29 ) }
    dend_41 { pt3dadd( 9.38377, 77.788, -4.24838, 0.29 ) }
    dend_41 { pt3dadd( 9.19708, 78.8104, -4.35495, 0.22 ) }
    dend_41 { pt3dadd( 9.18204, 78.9077, -4.35886, 0.22 ) }
    dend_41 { pt3dadd( 9.11464, 79.4431, -4.33648, 0.59 ) }
    dend_41 { pt3dadd( 9.10553, 79.515, -4.33049, 0.59 ) }
    dend_41 { pt3dadd( 9.02835, 80.0429, -4.33556, 0.81 ) }
    dend_41 { pt3dadd( 8.84301, 81.0355, -4.41368, 0.29 ) }
    dend_41 { pt3dadd( 8.66169, 81.8251, -4.51208, 0.44 ) }
    dend_41 { pt3dadd( 8.56723, 82.2429, -4.61106, 0.44 ) }
    dend_41 { pt3dadd( 8.27173, 83.6814, -5.07443, 0.29 ) }
    dend_41 { pt3dadd( 8.06125, 84.7694, -5.48354, 1.62 ) }
    dend_41 { pt3dadd( 7.9129, 85.5641, -5.81755, 2.06 ) }
    dend_41 { pt3dadd( 7.84518, 85.966, -6.00168, 2.43 ) }
    dend_41 { pt3dadd( 7.5116, 88.2584, -7.01518, 0.29 ) }
    dend_41 { pt3dadd( 7.38897, 89.2191, -7.40816, 0.22 ) }
    dend_41 { pt3dadd( 7.38271, 89.2882, -7.43019, 0.22 ) }
    dend_41 { pt3dadd( 7.32922, 90.0601, -7.60845, 0.22 ) }
    dend_41 { pt3dadd( 7.31743, 90.6581, -7.69415, 1.03 ) }
    dend_41 { pt3dadd( 7.34777, 91.7443, -7.76694, 1.84 ) }
    dend_41 { pt3dadd( 7.38239, 92.1825, -7.76278, 2.06 ) }
    dend_41 { pt3dadd( 7.51979, 93.3936, -7.75709, 0.29 ) }
    dend_41 { pt3dadd( 7.65394, 94.3361, -7.77264, 0.22 ) }
    dend_41 { pt3dadd( 7.9365, 95.8624, -7.7911, 0.22 ) }
    dend_41 { pt3dadd( 8.09988, 96.6262, -7.79917, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_41 { pt3dadd( 8.35146, 97.6769, -7.81215, 0.22 ) }
    dend_41 { pt3dadd( 8.46722, 98.1328, -7.81973, 0.59 ) }
    dend_41 { pt3dadd( 8.60025, 98.709, -7.82292, 0.59 ) }
    dend_41 { pt3dadd( 8.8129, 99.7878, -7.78636, 0.22 ) }
    dend_41 { pt3dadd( 8.91163, 100.44, -7.74056, 1.03 ) }
    dend_41 { pt3dadd( 9.00811, 101.164, -7.66889, 1.84 ) }
    dend_41 { pt3dadd( 9.09825, 101.884, -7.58928, 2.06 ) }
    dend_41 { pt3dadd( 9.31373, 103.633, -7.41872, 0.29 ) }
    dend_41 { pt3dadd( 9.39109, 104.287, -7.36594, 0.52 ) }
    dend_41 { pt3dadd( 9.55323, 105.744, -7.29255, 0.29 ) }
    dend_41 { pt3dadd( 9.56171, 105.817, -7.28933, 0.29 ) }
    dend_41 { pt3dadd( 9.63429, 106.375, -7.26695, 0.52 ) }
    dend_41 { pt3dadd( 9.70363, 106.9, -7.25131, 0.59 ) }
    dend_41 { pt3dadd( 9.71564, 106.972, -7.25063, 0.59 ) }
    dend_41 { pt3dadd( 9.95381, 108.292, -7.23475, 0.22 ) }
    dend_41 { pt3dadd( 10.0776, 109.007, -7.2244, 0.22 ) }
    dend_41 { pt3dadd( 10.0961, 109.099, -7.22304, 0.22 ) }
    dend_41 { pt3dadd( 10.2144, 109.64, -7.21533, 0.96 ) }
    dend_41 { pt3dadd( 10.2335, 109.71, -7.21495, 0.96 ) }
    dend_41 { pt3dadd( 10.4429, 110.436, -7.15896, 1.62 ) }
    dend_41 { pt3dadd( 10.554, 110.839, -7.10798, 1.99 ) }
    dend_41 { pt3dadd( 10.6883, 111.34, -7.0319, 1.99 ) }
    dend_41 { pt3dadd( 10.8886, 112.105, -6.97472, 1.4 ) }
    dend_41 { pt3dadd( 11.302, 113.925, -6.95086, 0.22 ) }
    dend_41 { pt3dadd( 11.526, 115.034, -6.98456, 1.03 ) }
    dend_41 { pt3dadd( 11.6657, 115.826, -7.04136, 1.33 ) }
    dend_41 { pt3dadd( 11.6758, 115.898, -7.04945, 1.33 ) }
    dend_41 { pt3dadd( 11.8652, 117.676, -7.33897, 0.29 ) }
    dend_41 { pt3dadd( 11.9469, 118.733, -7.58504, 0.29 ) }
    dend_41 { pt3dadd( 11.9497, 118.801, -7.60976, 0.29 ) }
    dend_41 { pt3dadd( 11.9685, 119.079, -7.72348, 0.96 ) }
    dend_41 { pt3dadd( 12.0145, 119.574, -7.89881, 1.25 ) }
    dend_41 { pt3dadd( 12.043, 119.823, -7.97654, 1.25 ) }
    dend_41 { pt3dadd( 12.1362, 120.331, -8.10425, 1.25 ) }
    dend_41 { pt3dadd( 12.4995, 121.893, -8.50558, 0.29 ) }
    dend_41 { pt3dadd( 12.6217, 122.428, -8.63648, 0.74 ) }
    dend_41 { pt3dadd( 12.7964, 123.17, -8.81408, 0.88 ) }
    dend_41 { pt3dadd( 13.0523, 124.197, -9.0774, 0.22 ) }
    dend_41 { pt3dadd( 13.2298, 124.976, -9.27484, 0.22 ) }
    dend_41 { pt3dadd( 13.4827, 126.136, -9.55923, 1.25 ) }
    dend_41 { pt3dadd( 13.6106, 126.694, -9.67892, 1.55 ) }
    dend_41 { pt3dadd( 13.631, 126.772, -9.69565, 1.55 ) }
    dend_41 { pt3dadd( 13.9948, 127.955, -9.88625, 0.22 ) }
    dend_41 { pt3dadd( 14.2685, 128.775, -9.95675, 0.22 ) }
    dend_41 { pt3dadd( 14.3051, 128.876, -9.96195, 0.22 ) }
    dend_41 { pt3dadd( 14.5934, 129.545, -9.97075, 0.44 ) }
    dend_41 { pt3dadd( 14.8489, 130.171, -9.96315, 0.66 ) }
    dend_41 { pt3dadd( 15.2349, 131.206, -9.91995, 0.22 ) }
    dend_41 { pt3dadd( 15.4341, 131.824, -9.867, 1.18 ) }
    dend_41 { pt3dadd( 15.537, 132.216, -9.84017, 1.47 ) }
    dend_41 { pt3dadd( 15.6135, 132.662, -9.82092, 1.47 ) }
    dend_41 { pt3dadd( 15.6907, 133.775, -9.80372, 0.22 ) }
    dend_41 { pt3dadd( 15.6891, 133.847, -9.80173, 0.22 ) }
    dend_41 { pt3dadd( 15.6412, 134.508, -9.78242, 0.22 ) }
    dend_41 { pt3dadd( 15.5822, 135.176, -9.74077, 0.88 ) }
    dend_41 { pt3dadd( 15.5457, 135.57, -9.70623, 1.11 ) }
    dend_41 { pt3dadd( 15.5126, 135.967, -9.66222, 1.11 ) }
    dend_41 { pt3dadd( 15.4099, 136.86, -9.54876, 0.29 ) }
    dend_41 { pt3dadd( 15.2984, 137.629, -9.45325, 0.22 ) }
    dend_41 { pt3dadd( 15.1639, 138.344, -9.36697, 0.22 ) }
    dend_41 { pt3dadd( 15.081, 138.704, -9.32646, 0.74 ) }
    dend_41 { pt3dadd( 14.9393, 139.198, -9.27946, 0.74 ) }
    dend_41 { pt3dadd( 14.4502, 140.599, -9.13275, 0.29 ) }
    dend_41 { pt3dadd( 14.4255, 140.657, -9.12704, 0.29 ) }
    dend_41 { pt3dadd( 14.1892, 141.13, -9.06172, 0.44 ) }
    dend_41 { pt3dadd( 14.1178, 141.254, -9.0345, 0.44 ) }
    dend_41 { pt3dadd( 13.763, 141.821, -8.87439, 0.66 ) }
    dend_41 { pt3dadd( 13.3161, 142.454, -8.61832, 1.25 ) }
    dend_41 { pt3dadd( 12.985, 142.866, -8.41367, 1.4 ) }
    dend_41 { pt3dadd( 12.9417, 142.919, -8.38835, 1.4 ) }
    dend_41 { pt3dadd( 12.2217, 143.854, -7.98598, 0.37 ) }
    dend_41 { pt3dadd( 12.1053, 144.031, -7.93324, 0.37 ) }
    dend_41 { pt3dadd( 11.6635, 144.826, -7.78946, 1.03 ) }
    dend_41 { pt3dadd( 11.2879, 145.707, -7.67923, 1.33 ) }
    dend_41 { pt3dadd( 11.0676, 146.482, -7.59927, 1.69 ) }
    dend_41 { pt3dadd( 10.8948, 147.505, -7.4848, 2.06 ) }
    dend_41 { pt3dadd( 10.8411, 148.907, -7.30084, 0.29 ) }
    dend_41 { pt3dadd( 10.9021, 150.057, -7.1274, 0.29 ) }
    dend_41 { pt3dadd( 11.1193, 151.703, -6.86229, 0.29 ) }
    dend_41 { pt3dadd( 11.4654, 153.463, -6.53012, 0.29 ) }
    dend_41 { pt3dadd( 11.7994, 154.816, -6.24407, 1.11 ) }
    dend_41 { pt3dadd( 12.1709, 156.157, -5.92993, 0.22 ) }
    dend_41 { pt3dadd( 12.3166, 156.653, -5.80308, 0.22 ) }
    dend_41 { pt3dadd( 12.4521, 157.143, -5.70235, 0.81 ) }
    dend_41 { pt3dadd( 12.5527, 157.673, -5.64261, 0.96 ) }
    dend_41 { pt3dadd( 12.6537, 158.946, -5.58441, 0.22 ) }
    dend_41 { pt3dadd( 12.6691, 159.607, -5.58492, 0.81 ) }
    dend_41 { pt3dadd( 12.6515, 160.265, -5.60323, 0.96 ) }
    dend_41 { pt3dadd( 12.5744, 162.04, -5.65886, 0.22 ) }
    dend_41 { pt3dadd( 12.4814, 164.026, -5.73078, 0.22 ) }
    dend_41 { pt3dadd( 12.4001, 165.415, -5.79091, 1.4 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 91/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 13.3989, 19.7997, 3.35477, 1.55 ) }
    dend_26 { pt3dadd( 14.348, 20.3263, 4.11065, 1.55 ) }
    dend_26 { pt3dadd( 15.5444, 21.0402, 5.07408, 1.25 ) }
    dend_26 { pt3dadd( 16.7237, 21.7972, 6.13761, 1.47 ) }
    dend_26 { pt3dadd( 17.308, 22.2147, 6.73219, 1.47 ) }
    dend_26 { pt3dadd( 18.2683, 23.0288, 7.84591, 1.69 ) }
    dend_26 { pt3dadd( 19.1209, 23.8646, 8.91153, 1.84 ) }
    dend_26 { pt3dadd( 19.4524, 24.311, 9.41416, 1.84 ) }
    dend_26 { pt3dadd( 20.1768, 25.6371, 10.7354, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_26 { pt3dadd( 20.6694, 26.8757, 11.8033, 1.62 ) }
    dend_26 { pt3dadd( 21.0178, 28.128, 12.7737, 1.4 ) }
    dend_26 { pt3dadd( 21.1489, 28.8817, 13.3029, 1.4 ) }
    dend_26 { pt3dadd( 21.2896, 29.99, 14.0078, 1.33 ) }
    dend_26 { pt3dadd( 21.3679, 30.8993, 14.5527, 1.69 ) }
    dend_26 { pt3dadd( 21.4238, 32.1438, 15.1779, 2.21 ) }
    dend_26 { pt3dadd( 21.4467, 32.821, 15.4882, 2.28 ) }
    dend_26 { pt3dadd( 21.5484, 34.2969, 16.194, 2.58 ) }
    dend_26 { pt3dadd( 21.6031, 34.8969, 16.539, 2.58 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 9/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.30655, -26.1296, -0.056427, 1.11 ) }
    dend_4 { pt3dadd( -3.66261, -27.6003, -0.148748, 1.11 ) }
    dend_4 { pt3dadd( -3.98497, -28.6895, -0.163177, 1.25 ) }
    dend_4 { pt3dadd( -4.30632, -29.7138, -0.163281, 1.4 ) }
    dend_4 { pt3dadd( -4.49042, -30.2517, -0.162852, 1.55 ) }
    dend_4 { pt3dadd( -4.79858, -31.143, -0.158885, 1.47 ) }
    dend_4 { pt3dadd( -5.38018, -32.8859, -0.186168, 1.11 ) }
    dend_4 { pt3dadd( -5.94776, -34.4854, -0.229504, 1.18 ) }
    dend_4 { pt3dadd( -5.96617, -34.5425, -0.231472, 1.18 ) }
    dend_4 { pt3dadd( -6.34266, -35.8984, -0.300751, 1.18 ) }
    dend_4 { pt3dadd( -6.6316, -37.2495, -0.414132, 1.03 ) }
    dend_4 { pt3dadd( -6.79154, -38.607, -0.568763, 1.62 ) }
    dend_4 { pt3dadd( -6.77738, -39.4141, -0.681507, 1.99 ) }
    dend_4 { pt3dadd( -6.67446, -40.0527, -0.802106, 2.21 ) }
    dend_4 { pt3dadd( -6.43348, -40.9308, -0.980688, 2.21 ) }
    dend_4 { pt3dadd( -6.04374, -42.0127, -1.15218, 1.25 ) }
    dend_4 { pt3dadd( -5.61186, -43.1311, -1.24176, 1.03 ) }
    dend_4 { pt3dadd( -5.04961, -44.6058, -1.19547, 1.03 ) }
    dend_4 { pt3dadd( -4.4754, -46.2319, -0.956958, 1.03 ) }
    dend_4 { pt3dadd( -4.03258, -47.6784, -0.512204, 0.88 ) }
    dend_4 { pt3dadd( -3.62341, -49.3283, 0.290868, 1.18 ) }
    dend_4 { pt3dadd( -3.38722, -50.5015, 1.00753, 1.99 ) }
    dend_4 { pt3dadd( -3.20487, -51.5518, 1.72428, 2.21 ) }
    dend_4 { pt3dadd( -3.05091, -52.5292, 2.42168, 2.36 ) }
    dend_4 { pt3dadd( -2.81603, -53.9687, 3.4767, 1.4 ) }
    dend_4 { pt3dadd( -2.56346, -55.098, 4.21276, 0.96 ) }
    dend_4 { pt3dadd( -2.06921, -56.5353, 4.85102, 0.96 ) }
    dend_4 { pt3dadd( -1.62831, -57.57, 5.06503, 1.18 ) }
    dend_4 { pt3dadd( -1.20414, -58.5264, 5.05573, 1.47 ) }
    dend_4 { pt3dadd( -1.06902, -58.8755, 4.98627, 1.55 ) }
    dend_4 { pt3dadd( -0.741432, -60.029, 4.55335, 0.88 ) }
    dend_4 { pt3dadd( -0.594803, -60.9711, 4.11695, 0.81 ) }
    dend_4 { pt3dadd( -0.601973, -62.0961, 3.56163, 0.74 ) }
    dend_4 { pt3dadd( -0.689014, -63.108, 3.05661, 1.03 ) }
    dend_4 { pt3dadd( -0.914637, -64.556, 2.34629, 1.25 ) }
    dend_4 { pt3dadd( -1.19895, -65.8178, 1.72025, 2.28 ) }
    dend_4 { pt3dadd( -1.41032, -66.4481, 1.41023, 2.73 ) }
    dend_4 { pt3dadd( -1.85334, -67.479, 0.886685, 3.09 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 47/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.30655, -26.1296, -0.056427, 1.11 ) }
    dend_1 { pt3dadd( -4.29895, -26.8747, 0.477378, 1.11 ) }
    dend_1 { pt3dadd( -5.53392, -27.7894, 1.34953, 1.03 ) }
    dend_1 { pt3dadd( -6.49333, -28.4941, 2.07031, 1.03 ) }
    dend_1 { pt3dadd( -7.08658, -28.9384, 2.56095, 1.25 ) }
    dend_1 { pt3dadd( -7.72374, -29.439, 3.12139, 1.25 ) }
    dend_1 { pt3dadd( -8.19366, -29.8384, 3.56061, 1.25 ) }
    dend_1 { pt3dadd( -9.58124, -31.1327, 5.00079, 1.55 ) }
    dend_1 { pt3dadd( -9.95049, -31.5258, 5.44543, 1.62 ) }
    dend_1 { pt3dadd( -10.7836, -32.5939, 6.65947, 1.69 ) }
    dend_1 { pt3dadd( -11.2478, -33.2945, 7.47232, 1.84 ) }
    dend_1 { pt3dadd( -11.7676, -34.1871, 8.4865, 2.14 ) }
    dend_1 { pt3dadd( -12.0514, -34.7705, 9.15358, 1.84 ) }
    dend_1 { pt3dadd( -12.5446, -36.051, 10.5157, 1.62 ) }
    dend_1 { pt3dadd( -13.0088, -37.6251, 12.1621, 0.74 ) }
    dend_1 { pt3dadd( -13.2019, -38.5504, 13.0767, 1.03 ) }
    dend_1 { pt3dadd( -13.2564, -38.9401, 13.4409, 1.03 ) }
    dend_1 { pt3dadd( -13.3457, -40.2611, 14.5776, 0.88 ) }
    dend_1 { pt3dadd( -13.347, -41.2341, 15.3138, 0.96 ) }
    dend_1 { pt3dadd( -13.2935, -42.242, 15.8839, 1.55 ) }
    dend_1 { pt3dadd( -13.2245, -42.9907, 16.1984, 1.77 ) }
    dend_1 { pt3dadd( -13.157, -43.6793, 16.4339, 1.77 ) }
    dend_1 { pt3dadd( -13.0554, -44.9297, 16.7893, 1.25 ) }
    dend_1 { pt3dadd( -13.0137, -46.3292, 17.0746, 1.03 ) }
    dend_1 { pt3dadd( -13.0579, -47.7234, 17.3183, 1.03 ) }
    dend_1 { pt3dadd( -13.1699, -48.8676, 17.4773, 0.96 ) }
    dend_1 { pt3dadd( -13.2823, -49.5284, 17.5668, 1.33 ) }
    dend_1 { pt3dadd( -13.5508, -50.636, 17.7015, 1.03 ) }
    dend_1 { pt3dadd( -14.0738, -52.2535, 17.9069, 0.96 ) }
    dend_1 { pt3dadd( -14.5941, -53.4845, 18.1103, 0.96 ) }
    dend_1 { pt3dadd( -14.8601, -53.9626, 18.2333, 1.33 ) }
    dend_1 { pt3dadd( -15.4509, -54.7963, 18.5622, 1.77 ) }
    dend_1 { pt3dadd( -15.8622, -55.2551, 18.8408, 2.14 ) }
    dend_1 { pt3dadd( -16.5977, -55.8849, 19.3876, 1.99 ) }
    dend_1 { pt3dadd( -17.2913, -56.3263, 19.9687, 1.18 ) }
    dend_1 { pt3dadd( -18.3455, -56.9017, 20.8826, 0.88 ) }
    dend_1 { pt3dadd( -19.2239, -57.3383, 21.675, 0.88 ) }
    dend_1 { pt3dadd( -20.1459, -57.7309, 22.5274, 0.96 ) }
    dend_1 { pt3dadd( -20.5669, -57.879, 22.9207, 1.11 ) }
    dend_1 { pt3dadd( -21.6296, -58.1795, 23.888, 1.25 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 87/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -9.85061, -35.5665, 1.50412, 0.657175 ) }
    axon_1 { pt3dadd( -13.8273, -50.0298, 1.50412, 0.657175 ) }
    axon_1 { pt3dadd( -17.8039, -64.493, 1.50412, 0.657175 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 90/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -8.03828, 7.72538, -68.2567, 1.03 ) }
    dend_50 { pt3dadd( -7.3113, 7.64979, -79.0943, 1.03 ) }
    dend_50 { pt3dadd( -7.20081, 7.66126, -81.202, 1.03 ) }
    dend_50 { pt3dadd( -7.19711, 7.66263, -81.2845, 1.03 ) }
    dend_50 { pt3dadd( -6.95751, 7.98864, -88.738, 1.69 ) }
    dend_50 { pt3dadd( -6.79689, 8.39859, -95.6517, 0.81 ) }
    dend_50 { pt3dadd( -6.62972, 9.259, -106.912, 1.11 ) }
    dend_50 { pt3dadd( -6.68357, 9.70896, -111.32, 1.77 ) }
    dend_50 { pt3dadd( -6.69596, 9.79256, -111.976, 1.77 ) }
    dend_50 { pt3dadd( -6.80648, 10.8719, -119.427, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_50 { pt3dadd( -6.82334, 11.1535, -121.068, 1.47 ) }
    dend_50 { pt3dadd( -6.92109, 12.2139, -126.494, 0.52 ) }
    dend_50 { pt3dadd( -6.96926, 13.1134, -131.075, 0.96 ) }
    dend_50 { pt3dadd( -6.97124, 13.6177, -133.797, 0.96 ) }
    dend_50 { pt3dadd( -6.85625, 15.3077, -143.296, 1.25 ) }
    dend_50 { pt3dadd( -6.85258, 15.3282, -143.414, 1.25 ) }
    dend_50 { pt3dadd( -6.57176, 16.3093, -148.901, 1.33 ) }
    dend_50 { pt3dadd( -6.2307, 17.3374, -154.49, 0.59 ) }
    dend_50 { pt3dadd( -6.22655, 17.3516, -154.561, 0.59 ) }
    dend_50 { pt3dadd( -6.16126, 17.736, -156.302, 1.47 ) }
    dend_50 { pt3dadd( -6.12785, 17.9542, -157.067, 1.99 ) }
    dend_50 { pt3dadd( -5.80441, 19.6302, -162.745, 1.62 ) }
    dend_50 { pt3dadd( -5.45471, 21.1152, -167.6, 0.29 ) }
    dend_50 { pt3dadd( -5.39008, 21.4496, -168.709, 1.99 ) }
    dend_50 { pt3dadd( -5.1209, 22.5595, -172.529, 0.29 ) }
    dend_50 { pt3dadd( -5.01474, 22.9433, -173.953, 0.29 ) }
    dend_50 { pt3dadd( -4.87399, 23.4374, -175.756, 1.77 ) }
    dend_50 { pt3dadd( -4.8416, 23.5155, -176.044, 1.92 ) }
    dend_50 { pt3dadd( -4.83041, 23.5332, -176.114, 1.92 ) }
    dend_50 { pt3dadd( -3.6939, 24.7132, -181.767, 0.52 ) }
    dend_50 { pt3dadd( -2.76933, 25.3383, -186.085, 1.47 ) }
    dend_50 { pt3dadd( -2.65453, 25.3857, -186.721, 1.77 ) }
    dend_50 { pt3dadd( -1.78741, 25.5291, -192.602, 1.47 ) }
    dend_50 { pt3dadd( -1.70142, 25.5192, -193.258, 1.55 ) }
    dend_50 { pt3dadd( -1.36338, 25.3339, -196.561, 0.88 ) }
    dend_50 { pt3dadd( -1.15175, 24.8219, -200.007, 1.18 ) }
    dend_50 { pt3dadd( -1.04158, 23.883, -204.467, 1.11 ) }
    dend_50 { pt3dadd( -1.03628, 23.4784, -206.058, 0.37 ) }
    dend_50 { pt3dadd( -1.0407, 23.4537, -206.137, 0.37 ) }
    dend_50 { pt3dadd( -1.16399, 22.8707, -207.958, 0.37 ) }
    dend_50 { pt3dadd( -1.59563, 21.4223, -212.343, 0.44 ) }
    dend_50 { pt3dadd( -1.58946, 21.3633, -212.495, 0.44 ) }
    dend_50 { pt3dadd( -1.02581, 20.675, -213.653, 0.44 ) }
    dend_50 { pt3dadd( -0.99109, 20.6407, -213.693, 0.44 ) }
    dend_50 { pt3dadd( 0.144111, 19.5896, -214.448, 0.44 ) }
    dend_50 { pt3dadd( 0.30592, 19.4493, -214.504, 0.44 ) }
    dend_50 { pt3dadd( 1.44257, 18.5306, -214.504, 0.44 ) }
    dend_50 { pt3dadd( 1.50655, 18.4786, -214.504, 0.44 ) }
    dend_50 { pt3dadd( 2.34883, 17.7268, -214.504, 0.44 ) }
    dend_50 { pt3dadd( 3.22281, 16.8986, -214.444, 0.59 ) }
    dend_50 { pt3dadd( 3.52425, 16.602, -214.407, 0.59 ) }
    dend_50 { pt3dadd( 4.45808, 15.713, -214.265, 0.59 ) }
    dend_50 { pt3dadd( 4.50484, 15.6712, -214.257, 0.59 ) }
    dend_50 { pt3dadd( 5.43184, 14.8424, -214.082, 0.59 ) }
    dend_50 { pt3dadd( 6.86305, 13.5644, -213.787, 0.44 ) }
    dend_50 { pt3dadd( 7.81085, 12.6634, -213.648, 0.52 ) }
    dend_50 { pt3dadd( 7.86969, 12.6058, -213.644, 0.52 ) }
    dend_50 { pt3dadd( 8.36018, 12.1196, -213.616, 0.81 ) }
    dend_50 { pt3dadd( 8.52756, 11.9615, -213.613, 0.81 ) }
    dend_50 { pt3dadd( 9.12705, 11.4564, -213.663, 0.81 ) }
    dend_50 { pt3dadd( 10.3606, 10.4274, -214.052, 0.22 ) }
    dend_50 { pt3dadd( 10.9264, 9.91996, -214.29, 0.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 52/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -8.03828, 7.72538, -68.2567, 0.37 ) }
    dend_49 { pt3dadd( -9.51107, 8.74899, -70.2151, 0.37 ) }
    dend_49 { pt3dadd( -9.94508, 8.98953, -70.7506, 0.29 ) }
    dend_49 { pt3dadd( -11.0725, 9.56896, -72.0922, 0.66 ) }
    dend_49 { pt3dadd( -12.6176, 10.3409, -73.9084, 0.88 ) }
    dend_49 { pt3dadd( -12.9587, 10.5196, -74.3214, 1.11 ) }
    dend_49 { pt3dadd( -14.0853, 11.125, -75.8178, 0.29 ) }
    dend_49 { pt3dadd( -15.1443, 11.7183, -77.3125, 0.29 ) }
    dend_49 { pt3dadd( -15.8197, 12.1131, -78.5944, 1.4 ) }
    dend_49 { pt3dadd( -15.8475, 12.1268, -78.6602, 1.4 ) }
    dend_49 { pt3dadd( -16.3321, 12.3177, -79.9467, 1.69 ) }
    dend_49 { pt3dadd( -17.1181, 12.5461, -82.4536, 0.59 ) }
    dend_49 { pt3dadd( -17.4145, 12.6048, -83.5675, 0.88 ) }
    dend_49 { pt3dadd( -18.5845, 12.7508, -88.8822, 1.03 ) }
    dend_49 { pt3dadd( -19.1781, 12.697, -92.0314, 0.29 ) }
    dend_49 { pt3dadd( -19.372, 12.6411, -93.1665, 0.66 ) }
    dend_49 { pt3dadd( -19.7338, 12.4504, -95.4237, 0.66 ) }
    dend_49 { pt3dadd( -19.7418, 12.4433, -95.4827, 0.66 ) }
    dend_49 { pt3dadd( -19.9271, 12.1258, -97.3716, 0.88 ) }
    dend_49 { pt3dadd( -19.9658, 11.8231, -98.3375, 1.18 ) }
    dend_49 { pt3dadd( -19.9565, 11.8021, -98.4036, 1.18 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 73/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -11.2719, 20.2832, -44.2708, 0.52 ) }
    dend_47 { pt3dadd( -11.1627, 21.5701, -44.3862, 0.52 ) }
    dend_47 { pt3dadd( -11.0873, 22.7099, -44.4964, 0.37 ) }
    dend_47 { pt3dadd( -11.0329, 23.5742, -44.5826, 0.66 ) }
    dend_47 { pt3dadd( -10.9495, 24.9186, -44.8642, 0.22 ) }
    dend_47 { pt3dadd( -10.9464, 24.9891, -44.8821, 0.22 ) }
    dend_47 { pt3dadd( -10.908, 26.0056, -45.1883, 1.69 ) }
    dend_47 { pt3dadd( -10.9016, 26.5367, -45.3755, 1.92 ) }
    dend_47 { pt3dadd( -10.9015, 26.6128, -45.4072, 1.92 ) }
    dend_47 { pt3dadd( -10.9044, 28.4947, -46.2323, 0.22 ) }
    dend_47 { pt3dadd( -10.9121, 29.5833, -46.6802, 0.22 ) }
    dend_47 { pt3dadd( -10.9218, 30.1607, -46.9128, 1.03 ) }
    dend_47 { pt3dadd( -10.9451, 30.8017, -47.1673, 1.03 ) }
    dend_47 { pt3dadd( -11.0502, 32.607, -47.8481, 0.22 ) }
    dend_47 { pt3dadd( -11.0968, 33.2411, -48.0652, 1.18 ) }
    dend_47 { pt3dadd( -11.1568, 33.8931, -48.2554, 1.92 ) }
    dend_47 { pt3dadd( -11.2723, 34.7387, -48.4914, 1.92 ) }
    dend_47 { pt3dadd( -11.6789, 36.851, -49.1649, 0.22 ) }
    dend_47 { pt3dadd( -11.808, 37.3894, -49.3643, 0.74 ) }
    dend_47 { pt3dadd( -11.9446, 37.8649, -49.5548, 0.81 ) }
    dend_47 { pt3dadd( -12.2701, 38.8656, -49.9684, 0.22 ) }
    dend_47 { pt3dadd( -12.6843, 40.0169, -50.4503, 0.22 ) }
    dend_47 { pt3dadd( -13.5214, 42.2174, -51.3358, 1.55 ) }
    dend_47 { pt3dadd( -13.7215, 42.7121, -51.5293, 1.92 ) }
    dend_47 { pt3dadd( -14.1307, 43.7468, -51.924, 0.15 ) }
    dend_47 { pt3dadd( -14.4266, 44.565, -52.2105, 0.15 ) }
    dend_47 { pt3dadd( -14.6522, 45.2765, -52.4255, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_47 { pt3dadd( -14.836, 46.0053, -52.5929, 1.69 ) }
    dend_47 { pt3dadd( -14.9557, 46.5799, -52.6564, 1.69 ) }
    dend_47 { pt3dadd( -15.1309, 47.6262, -52.794, 0.29 ) }
    dend_47 { pt3dadd( -15.2645, 48.6451, -52.9506, 0.22 ) }
    dend_47 { pt3dadd( -15.3171, 49.157, -53.0381, 0.37 ) }
    dend_47 { pt3dadd( -15.3696, 49.657, -53.1372, 0.37 ) }
    dend_47 { pt3dadd( -15.4917, 50.7036, -53.3816, 0.22 ) }
    dend_47 { pt3dadd( -15.6081, 51.9296, -53.6791, 1.47 ) }
    dend_47 { pt3dadd( -15.661, 52.5664, -53.8364, 1.69 ) }
    dend_47 { pt3dadd( -15.6653, 52.637, -53.8537, 1.69 ) }
    dend_47 { pt3dadd( -15.7043, 54.3005, -54.2411, 0.29 ) }
    dend_47 { pt3dadd( -15.6912, 55.4969, -54.5126, 0.29 ) }
    dend_47 { pt3dadd( -15.6189, 56.6931, -54.8041, 0.29 ) }
    dend_47 { pt3dadd( -15.6048, 56.8371, -54.8383, 0.29 ) }
    dend_47 { pt3dadd( -15.4729, 57.9144, -55.1075, 0.29 ) }
    dend_47 { pt3dadd( -15.2568, 59.4746, -55.4923, 3.32 ) }
    dend_47 { pt3dadd( -15.1049, 60.4856, -55.7335, 1.84 ) }
    dend_47 { pt3dadd( -14.9053, 61.956, -56.0782, 0.22 ) }
    dend_47 { pt3dadd( -14.8418, 62.4441, -56.2288, 0.59 ) }
    dend_47 { pt3dadd( -14.7859, 62.8553, -56.3743, 0.59 ) }
    dend_47 { pt3dadd( -14.6536, 63.8534, -56.7696, 0.22 ) }
    dend_47 { pt3dadd( -14.5808, 64.4698, -57.014, 1.25 ) }
    dend_47 { pt3dadd( -14.5234, 65.1239, -57.2573, 1.77 ) }
    dend_47 { pt3dadd( -14.3746, 67.5019, -58.0572, 0.22 ) }
    dend_47 { pt3dadd( -14.3552, 67.6959, -58.1235, 0.59 ) }
    dend_47 { pt3dadd( -14.2987, 68.1254, -58.2782, 0.59 ) }
    dend_47 { pt3dadd( -14.1336, 69.2241, -58.6716, 0.22 ) }
    dend_47 { pt3dadd( -14.0076, 69.8156, -58.931, 1.18 ) }
    dend_47 { pt3dadd( -13.8545, 70.4591, -59.2324, 1.62 ) }
    dend_47 { pt3dadd( -13.4072, 72.1233, -60.0607, 0.29 ) }
    dend_47 { pt3dadd( -13.2183, 72.7418, -60.4034, 1.33 ) }
    dend_47 { pt3dadd( -12.9946, 73.4346, -60.8439, 1.55 ) }
    dend_47 { pt3dadd( -12.3785, 75.5156, -62.2696, 0.22 ) }
    dend_47 { pt3dadd( -12.209, 76.1262, -62.6892, 0.22 ) }
    dend_47 { pt3dadd( -11.9459, 77.186, -63.4289, 1.33 ) }
    dend_47 { pt3dadd( -11.8438, 77.6654, -63.7518, 1.47 ) }
    dend_47 { pt3dadd( -11.595, 78.9374, -64.668, 0.22 ) }
    dend_47 { pt3dadd( -11.4487, 79.9563, -65.4214, 0.22 ) }
    dend_47 { pt3dadd( -11.4052, 80.7831, -66.0156, 0.22 ) }
    dend_47 { pt3dadd( -11.3939, 81.8761, -66.843, 1.62 ) }
    dend_47 { pt3dadd( -11.405, 82.3365, -67.1919, 1.92 ) }
    dend_47 { pt3dadd( -11.4723, 84.5658, -68.9529, 0.22 ) }
    dend_47 { pt3dadd( -11.4897, 85.1917, -69.4429, 0.22 ) }
    dend_47 { pt3dadd( -11.5065, 86.0584, -70.1207, 0.88 ) }
    dend_47 { pt3dadd( -11.5132, 86.4691, -70.427, 1.33 ) }
    dend_47 { pt3dadd( -11.5057, 86.937, -70.7659, 1.33 ) }
    dend_47 { pt3dadd( -11.3969, 88.5283, -71.8785, 0.22 ) }
    dend_47 { pt3dadd( -11.2371, 89.5804, -72.6277, 1.92 ) }
    dend_47 { pt3dadd( -11.152, 89.9976, -72.9473, 1.92 ) }
    dend_47 { pt3dadd( -10.7368, 91.7523, -74.3551, 0.22 ) }
    dend_47 { pt3dadd( -10.4995, 92.631, -75.0918, 0.88 ) }
    dend_47 { pt3dadd( -10.3722, 93.0473, -75.4487, 0.88 ) }
    dend_47 { pt3dadd( -9.75328, 94.7204, -76.8338, 0.29 ) }
    dend_47 { pt3dadd( -9.48151, 95.3362, -77.353, 0.22 ) }
    dend_47 { pt3dadd( -9.45593, 95.3875, -77.3979, 0.22 ) }
    dend_47 { pt3dadd( -8.97164, 96.2531, -78.129, 0.22 ) }
    dend_47 { pt3dadd( -8.46551, 97.0597, -78.8313, 1.4 ) }
    dend_47 { pt3dadd( -7.99698, 97.7544, -79.4566, 1.69 ) }
    dend_47 { pt3dadd( -6.78444, 99.4368, -80.9245, 0.22 ) }
    dend_47 { pt3dadd( -6.06796, 100.406, -81.7831, 1.77 ) }
    dend_47 { pt3dadd( -5.71697, 100.89, -82.202, 1.77 ) }
    dend_47 { pt3dadd( -4.33637, 102.911, -83.8643, 0.22 ) }
    dend_47 { pt3dadd( -4.24071, 103.06, -83.9769, 0.37 ) }
    dend_47 { pt3dadd( -3.72274, 103.973, -84.5665, 0.22 ) }
    dend_47 { pt3dadd( -3.57355, 104.274, -84.7143, 0.44 ) }
    dend_47 { pt3dadd( -3.02395, 105.513, -85.2226, 0.22 ) }
    dend_47 { pt3dadd( -2.57216, 106.64, -85.6335, 1.84 ) }
    dend_47 { pt3dadd( -2.29565, 107.415, -85.8694, 2.28 ) }
    dend_47 { pt3dadd( -1.62968, 109.361, -86.4827, 0.22 ) }
    dend_47 { pt3dadd( -1.31682, 110.321, -86.8015, 0.22 ) }
    dend_47 { pt3dadd( -1.10759, 110.979, -87.0302, 0.88 ) }
    dend_47 { pt3dadd( -1.02951, 111.256, -87.1276, 1.03 ) }
    dend_47 { pt3dadd( -0.759912, 112.337, -87.5376, 0.22 ) }
    dend_47 { pt3dadd( -0.676649, 112.704, -87.6797, 0.37 ) }
    dend_47 { pt3dadd( -0.428201, 113.848, -88.1397, 0.22 ) }
    dend_47 { pt3dadd( -0.339702, 114.263, -88.3298, 0.59 ) }
    dend_47 { pt3dadd( -0.21837, 114.775, -88.586, 0.96 ) }
    dend_47 { pt3dadd( 0.171791, 116.259, -89.3643, 0.22 ) }
    dend_47 { pt3dadd( 0.361541, 116.975, -89.7457, 0.22 ) }
    dend_47 { pt3dadd( 0.597038, 117.912, -90.2394, 1.25 ) }
    dend_47 { pt3dadd( 0.796329, 118.781, -90.6547, 0.96 ) }
    dend_47 { pt3dadd( 1.08015, 120.074, -91.226, 0.15 ) }
    dend_47 { pt3dadd( 1.18375, 120.588, -91.4361, 1.03 ) }
    dend_47 { pt3dadd( 1.25162, 121.009, -91.586, 1.25 ) }
    dend_47 { pt3dadd( 1.46485, 122.591, -92.1304, 0.15 ) }
    dend_47 { pt3dadd( 1.62965, 123.958, -92.5506, 0.15 ) }
    dend_47 { pt3dadd( 1.75257, 125.151, -92.9061, 0.96 ) }
    dend_47 { pt3dadd( 1.78955, 125.637, -93.0641, 1.4 ) }
    dend_47 { pt3dadd( 1.81589, 126.12, -93.233, 1.4 ) }
    dend_47 { pt3dadd( 1.86022, 127.97, -93.9075, 0.15 ) }
    dend_47 { pt3dadd( 1.85083, 128.499, -94.1023, 0.66 ) }
    dend_47 { pt3dadd( 1.78371, 130.173, -94.6902, 0.15 ) }
    dend_47 { pt3dadd( 1.74624, 131.042, -94.9583, 1.62 ) }
    dend_47 { pt3dadd( 1.71986, 131.771, -95.155, 1.84 ) }
    dend_47 { pt3dadd( 1.6851, 132.864, -95.3821, 0.22 ) }
    dend_47 { pt3dadd( 1.63151, 134.381, -95.588, 0.15 ) }
    dend_47 { pt3dadd( 1.60847, 135.879, -95.7329, 0.15 ) }
    dend_47 { pt3dadd( 1.63187, 136.963, -95.778, 0.88 ) }
    dend_47 { pt3dadd( 1.66085, 137.741, -95.7789, 0.88 ) }
    dend_47 { pt3dadd( 1.73796, 138.963, -95.7508, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_47 { pt3dadd( 1.78164, 139.513, -95.719, 0.59 ) }
    dend_47 { pt3dadd( 1.80662, 139.882, -95.6828, 0.59 ) }
    dend_47 { pt3dadd( 1.8445, 140.892, -95.5761, 0.15 ) }
    dend_47 { pt3dadd( 1.86652, 141.496, -95.5181, 0.96 ) }
    dend_47 { pt3dadd( 1.87057, 141.568, -95.5132, 0.96 ) }
    dend_47 { pt3dadd( 1.94943, 142.014, -95.5009, 1.18 ) }
    dend_47 { pt3dadd( 1.96813, 142.084, -95.5026, 1.18 ) }
    dend_47 { pt3dadd( 2.47439, 143.646, -95.5999, 0.15 ) }
    dend_47 { pt3dadd( 2.61344, 143.98, -95.6456, 0.59 ) }
    dend_47 { pt3dadd( 2.80132, 144.362, -95.7296, 0.59 ) }
    dend_47 { pt3dadd( 3.66528, 146.016, -96.1615, 0.15 ) }
    dend_47 { pt3dadd( 3.94233, 146.51, -96.3082, 0.88 ) }
    dend_47 { pt3dadd( 4.19789, 146.948, -96.463, 0.88 ) }
    dend_47 { pt3dadd( 5.0987, 148.38, -97.0781, 0.15 ) }
    dend_47 { pt3dadd( 5.63758, 149.257, -97.5488, 1.25 ) }
    dend_47 { pt3dadd( 5.83003, 149.576, -97.747, 1.69 ) }
    dend_47 { pt3dadd( 5.89951, 149.696, -97.8322, 1.69 ) }
    dend_47 { pt3dadd( 6.24808, 150.304, -98.2656, 1.47 ) }
    dend_47 { pt3dadd( 6.27338, 150.347, -98.2995, 1.47 ) }
    dend_47 { pt3dadd( 7.40234, 152.272, -99.9377, 0.15 ) }
    dend_47 { pt3dadd( 7.58301, 152.565, -100.187, 0.74 ) }
    dend_47 { pt3dadd( 7.61398, 152.613, -100.227, 0.74 ) }
    dend_47 { pt3dadd( 7.91291, 153.065, -100.58, 0.74 ) }
    dend_47 { pt3dadd( 9.15091, 154.795, -101.91, 0.15 ) }
    dend_47 { pt3dadd( 9.18156, 154.836, -101.942, 0.15 ) }
    dend_47 { pt3dadd( 9.5616, 155.305, -102.289, 1.03 ) }
    dend_47 { pt3dadd( 10.0012, 155.801, -102.609, 1.69 ) }
    dend_47 { pt3dadd( 10.2585, 156.069, -102.753, 1.69 ) }
    dend_47 { pt3dadd( 11.5701, 157.29, -103.259, 0.15 ) }
    dend_47 { pt3dadd( 11.631, 157.343, -103.274, 0.15 ) }
    dend_47 { pt3dadd( 12.125, 157.764, -103.381, 0.81 ) }
    dend_47 { pt3dadd( 13.6992, 159.065, -103.66, 0.15 ) }
    dend_47 { pt3dadd( 14.3195, 159.546, -103.736, 1.33 ) }
    dend_47 { pt3dadd( 15.7643, 160.628, -103.854, 0.22 ) }
    dend_47 { pt3dadd( 15.9303, 160.75, -103.861, 0.37 ) }
    dend_47 { pt3dadd( 16.1072, 160.883, -103.869, 0.37 ) }
    dend_47 { pt3dadd( 16.9726, 161.591, -103.956, 0.22 ) }
    dend_47 { pt3dadd( 18.0756, 162.591, -104.127, 0.15 ) }
    dend_47 { pt3dadd( 18.4519, 162.944, -104.191, 0.29 ) }
    dend_47 { pt3dadd( 19.3609, 163.835, -104.353, 0.15 ) }
    dend_47 { pt3dadd( 19.9334, 164.409, -104.462, 1.25 ) }
    dend_47 { pt3dadd( 21.9737, 166.563, -104.898, 0.15 ) }
    dend_47 { pt3dadd( 22.2707, 166.906, -104.975, 0.74 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 43/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -11.2719, 20.2832, -44.2708, 0.37 ) }
    dend_46 { pt3dadd( -12.729, 19.6083, -43.7823, 0.37 ) }
    dend_46 { pt3dadd( -13.5194, 19.2542, -43.5413, 0.66 ) }
    dend_46 { pt3dadd( -13.5909, 19.2189, -43.5202, 0.66 ) }
    dend_46 { pt3dadd( -15.1089, 18.4547, -43.1064, 0.29 ) }
    dend_46 { pt3dadd( -15.172, 18.4223, -43.0901, 0.29 ) }
    dend_46 { pt3dadd( -16.0926, 17.9355, -42.8641, 1.47 ) }
    dend_46 { pt3dadd( -16.6694, 17.6105, -42.747, 1.77 ) }
    dend_46 { pt3dadd( -17.9283, 16.908, -42.5052, 0.29 ) }
    dend_46 { pt3dadd( -18.6288, 16.5261, -42.3871, 0.29 ) }
    dend_46 { pt3dadd( -18.9262, 16.3669, -42.347, 0.66 ) }
    dend_46 { pt3dadd( -19.2874, 16.1771, -42.3028, 0.88 ) }
    dend_46 { pt3dadd( -19.8281, 15.8991, -42.2471, 0.88 ) }
    dend_46 { pt3dadd( -21.0382, 15.297, -42.2701, 0.22 ) }
    dend_46 { pt3dadd( -21.4312, 15.1102, -42.3336, 0.59 ) }
    dend_46 { pt3dadd( -21.8189, 14.9252, -42.4272, 0.74 ) }
    dend_46 { pt3dadd( -22.1469, 14.7733, -42.5217, 0.88 ) }
    dend_46 { pt3dadd( -22.4684, 14.6302, -42.6255, 0.88 ) }
    dend_46 { pt3dadd( -24.0691, 13.9305, -43.1898, 0.22 ) }
    dend_46 { pt3dadd( -24.8921, 13.5344, -43.5237, 0.22 ) }
    dend_46 { pt3dadd( -25.5181, 13.2198, -43.7778, 0.22 ) }
    dend_46 { pt3dadd( -26.0142, 12.9577, -43.9752, 0.74 ) }
    dend_46 { pt3dadd( -26.454, 12.7214, -44.1366, 1.18 ) }
    dend_46 { pt3dadd( -26.9543, 12.4511, -44.287, 1.18 ) }
    dend_46 { pt3dadd( -28.1502, 11.8157, -44.5152, 0.22 ) }
    dend_46 { pt3dadd( -28.2128, 11.7815, -44.5295, 0.22 ) }
    dend_46 { pt3dadd( -28.5945, 11.5661, -44.6233, 0.52 ) }
    dend_46 { pt3dadd( -28.9125, 11.395, -44.7133, 0.52 ) }
    dend_46 { pt3dadd( -29.5172, 11.1357, -44.8686, 0.22 ) }
    dend_46 { pt3dadd( -29.5863, 11.1187, -44.8843, 0.22 ) }
    dend_46 { pt3dadd( -30.6462, 10.9929, -45.0895, 1.92 ) }
    dend_46 { pt3dadd( -31.0776, 10.9654, -45.17, 2.28 ) }
    dend_46 { pt3dadd( -31.7536, 10.9357, -45.2857, 2.14 ) }
    dend_46 { pt3dadd( -33.1417, 10.8778, -45.498, 0.29 ) }
    dend_46 { pt3dadd( -34.2985, 10.8506, -45.6496, 0.29 ) }
    dend_46 { pt3dadd( -34.5186, 10.849, -45.6728, 0.74 ) }
    dend_46 { pt3dadd( -34.9876, 10.8541, -45.7059, 0.74 ) }
    dend_46 { pt3dadd( -35.8099, 10.8506, -45.7363, 0.22 ) }
    dend_46 { pt3dadd( -36.7814, 10.8362, -45.7312, 0.22 ) }
    dend_46 { pt3dadd( -37.3777, 10.8231, -45.7498, 0.81 ) }
    dend_46 { pt3dadd( -37.7433, 10.8125, -45.7675, 1.03 ) }
    dend_46 { pt3dadd( -38.3431, 10.8117, -45.8105, 0.81 ) }
    dend_46 { pt3dadd( -39.1619, 10.8196, -45.9195, 0.15 ) }
    dend_46 { pt3dadd( -40.1007, 10.8363, -46.0846, 0.15 ) }
    dend_46 { pt3dadd( -41.2543, 10.8176, -46.3204, 1.55 ) }
    dend_46 { pt3dadd( -41.5568, 10.8008, -46.3868, 1.55 ) }
    dend_46 { pt3dadd( -41.6273, 10.793, -46.4031, 1.55 ) }
    dend_46 { pt3dadd( -43.3336, 10.5311, -46.8049, 0.22 ) }
    dend_46 { pt3dadd( -44.1866, 10.3743, -46.9961, 0.22 ) }
    dend_46 { pt3dadd( -44.8431, 10.2258, -47.0464, 0.81 ) }
    dend_46 { pt3dadd( -45.1274, 10.1515, -47.0333, 0.81 ) }
    dend_46 { pt3dadd( -46.6543, 9.71686, -46.8971, 0.22 ) }
    dend_46 { pt3dadd( -47.3554, 9.50399, -46.7907, 1.47 ) }
    dend_46 { pt3dadd( -48.2112, 9.22281, -46.5587, 1.92 ) }
    dend_46 { pt3dadd( -50.6268, 8.40158, -45.7811, 0.29 ) }
    dend_46 { pt3dadd( -52.0059, 7.92389, -45.2271, 0.22 ) }
    dend_46 { pt3dadd( -53.1985, 7.50851, -44.6786, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_46 { pt3dadd( -54.0209, 7.23065, -44.2545, 1.92 ) }
    dend_46 { pt3dadd( -56.1367, 6.58521, -43.0606, 0.22 ) }
    dend_46 { pt3dadd( -57.0023, 6.3715, -42.5552, 0.22 ) }
    dend_46 { pt3dadd( -58.3643, 6.14782, -41.7597, 0.22 ) }
    dend_46 { pt3dadd( -58.6943, 6.12112, -41.5496, 1.03 ) }
    dend_46 { pt3dadd( -59.3078, 6.12502, -41.1468, 1.4 ) }
    dend_46 { pt3dadd( -61.0321, 6.29393, -40.1007, 0.15 ) }
    dend_46 { pt3dadd( -62.0225, 6.50399, -39.5653, 0.15 ) }
    dend_46 { pt3dadd( -62.4732, 6.62425, -39.3274, 0.96 ) }
    dend_46 { pt3dadd( -62.5398, 6.64033, -39.2941, 0.96 ) }
    dend_46 { pt3dadd( -62.877, 6.70006, -39.12, 0.96 ) }
    dend_46 { pt3dadd( -63.8736, 6.75228, -38.6157, 0.22 ) }
    dend_46 { pt3dadd( -64.412, 6.7042, -38.3459, 0.22 ) }
    dend_46 { pt3dadd( -65.6841, 6.41812, -37.603, 1.84 ) }
    dend_46 { pt3dadd( -66.915, 6.07592, -36.7899, 0.29 ) }
    dend_46 { pt3dadd( -67.4859, 5.88214, -36.3689, 0.29 ) }
    dend_46 { pt3dadd( -68.385, 5.52611, -35.6487, 0.15 ) }
    dend_46 { pt3dadd( -69.2667, 5.13403, -34.8625, 1.62 ) }
    dend_46 { pt3dadd( -70.222, 4.66914, -33.929, 1.62 ) }
    dend_46 { pt3dadd( -71.4349, 4.04448, -32.6872, 0.29 ) }
    dend_46 { pt3dadd( -72.2942, 3.62516, -31.7621, 0.29 ) }
    dend_46 { pt3dadd( -72.3388, 3.60536, -31.712, 0.29 ) }
    dend_46 { pt3dadd( -73.2596, 3.24962, -30.6731, 0.74 ) }
    dend_46 { pt3dadd( -73.3141, 3.22851, -30.6149, 0.74 ) }
    dend_46 { pt3dadd( -74.0022, 2.96462, -29.9623, 0.22 ) }
    dend_46 { pt3dadd( -74.0541, 2.94328, -29.9205, 0.22 ) }
    dend_46 { pt3dadd( -74.8124, 2.66535, -29.4045, 0.22 ) }
    dend_46 { pt3dadd( -75.9519, 2.30883, -28.7428, 0.22 ) }
    dend_46 { pt3dadd( -76.5504, 2.15493, -28.4582, 1.03 ) }
    dend_46 { pt3dadd( -77.1484, 2.0277, -28.2071, 1.4 ) }
    dend_46 { pt3dadd( -77.9837, 1.88655, -27.9022, 1.4 ) }
    dend_46 { pt3dadd( -79.4313, 1.69599, -27.496, 0.22 ) }
    dend_46 { pt3dadd( -80.355, 1.60801, -27.3255, 0.22 ) }
    dend_46 { pt3dadd( -81.2692, 1.54659, -27.2212, 1.25 ) }
    dend_46 { pt3dadd( -81.8746, 1.51708, -27.1464, 1.92 ) }
    dend_46 { pt3dadd( -82.302, 1.50573, -27.0866, 1.92 ) }
    dend_46 { pt3dadd( -83.6459, 1.51487, -26.8898, 0.22 ) }
    dend_46 { pt3dadd( -84.7912, 1.57234, -26.6312, 0.22 ) }
    dend_46 { pt3dadd( -85.079, 1.59244, -26.5367, 1.03 ) }
    dend_46 { pt3dadd( -86.4902, 1.75268, -25.9267, 0.22 ) }
    dend_46 { pt3dadd( -86.9947, 1.83661, -25.6665, 0.59 ) }
    dend_46 { pt3dadd( -87.4609, 1.9055, -25.3625, 0.74 ) }
    dend_46 { pt3dadd( -89.0722, 2.06292, -24.1678, 0.22 ) }
    dend_46 { pt3dadd( -89.1195, 2.06333, -24.1308, 0.22 ) }
    dend_46 { pt3dadd( -89.912, 1.99763, -23.5418, 1.33 ) }
    dend_46 { pt3dadd( -90.2712, 1.92295, -23.3123, 1.69 ) }
    dend_46 { pt3dadd( -91.7457, 1.50899, -22.4514, 0.15 ) }
    dend_46 { pt3dadd( -93.0019, 1.08691, -21.8278, 0.15 ) }
    dend_46 { pt3dadd( -94.2977, 0.666935, -21.3565, 1.77 ) }
    dend_46 { pt3dadd( -94.9093, 0.48593, -21.1593, 1.99 ) }
    dend_46 { pt3dadd( -96.8044, -0.0488086, -20.6169, 0.22 ) }
    dend_46 { pt3dadd( -96.9322, -0.0819376, -20.5844, 0.22 ) }
    dend_46 { pt3dadd( -97.9889, -0.320576, -20.3554, 0.22 ) }
    dend_46 { pt3dadd( -99.9345, -0.764114, -19.9281, 0.22 ) }
    dend_46 { pt3dadd( -100.854, -0.965132, -19.757, 0.66 ) }
    dend_46 { pt3dadd( -101.021, -0.993881, -19.7393, 0.66 ) }
    dend_46 { pt3dadd( -102.546, -1.16172, -19.7184, 0.22 ) }
    dend_46 { pt3dadd( -103.483, -1.22799, -19.7675, 1.62 ) }
    dend_46 { pt3dadd( -103.542, -1.22877, -19.7771, 1.62 ) }
    dend_46 { pt3dadd( -104.243, -1.20876, -19.9695, 1.62 ) }
    dend_46 { pt3dadd( -106.575, -0.96237, -20.7857, 0.22 ) }
    dend_46 { pt3dadd( -107.416, -0.791607, -21.1364, 0.59 ) }
    dend_46 { pt3dadd( -107.844, -0.674621, -21.3369, 0.59 ) }
    dend_46 { pt3dadd( -108.972, -0.351771, -21.8609, 0.22 ) }
    dend_46 { pt3dadd( -109.037, -0.334905, -21.8891, 0.22 ) }
    dend_46 { pt3dadd( -109.661, -0.140971, -22.0602, 0.59 ) }
    dend_46 { pt3dadd( -110.697, 0.263356, -22.1439, 0.22 ) }
    dend_46 { pt3dadd( -111.869, 0.703885, -22.1203, 0.22 ) }
    dend_46 { pt3dadd( -112.761, 1.00513, -22.0409, 1.69 ) }
    dend_46 { pt3dadd( -113.187, 1.11071, -21.9709, 1.69 ) }
    dend_46 { pt3dadd( -115.867, 1.54706, -21.4526, 0.22 ) }
    dend_46 { pt3dadd( -116.336, 1.57803, -21.3442, 1.03 ) }
    dend_46 { pt3dadd( -117.669, 1.5963, -20.98, 0.22 ) }
    dend_46 { pt3dadd( -118.241, 1.61002, -20.8269, 0.74 ) }
    dend_46 { pt3dadd( -119.275, 1.6118, -20.5999, 0.22 ) }
    dend_46 { pt3dadd( -119.447, 1.6046, -20.5781, 0.22 ) }
    dend_46 { pt3dadd( -120.074, 1.57909, -20.5385, 0.22 ) }
    dend_46 { pt3dadd( -121.038, 1.71483, -20.3963, 0.22 ) }
    dend_46 { pt3dadd( -121.478, 1.8579, -20.2911, 1.03 ) }
    dend_46 { pt3dadd( -122.096, 2.10684, -20.1066, 1.18 ) }
    dend_46 { pt3dadd( -122.151, 2.13251, -20.0871, 1.18 ) }
    dend_46 { pt3dadd( -123.682, 2.87417, -19.4929, 0.22 ) }
    dend_46 { pt3dadd( -124.274, 3.1806, -19.2193, 1.33 ) }
    dend_46 { pt3dadd( -124.535, 3.3224, -19.0865, 1.47 ) }
    dend_46 { pt3dadd( -124.595, 3.35611, -19.0544, 1.47 ) }
    dend_46 { pt3dadd( -125.57, 3.96551, -18.5584, 0.29 ) }
    dend_46 { pt3dadd( -126.137, 4.34548, -18.3005, 0.22 ) }
    dend_46 { pt3dadd( -126.851, 4.86211, -18.0179, 0.96 ) }
    dend_46 { pt3dadd( -127.209, 5.13076, -17.8771, 1.18 ) }
    dend_46 { pt3dadd( -127.98, 5.72853, -17.5746, 0.22 ) }
    dend_46 { pt3dadd( -129.029, 6.57755, -17.1715, 0.22 ) }
    dend_46 { pt3dadd( -129.406, 6.90735, -17.0368, 0.52 ) }
    dend_46 { pt3dadd( -129.459, 6.95419, -17.0192, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 93/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 12.4001, 165.415, -5.79091, 1.03 ) }
    dend_43 { pt3dadd( 12.4909, 166.118, -5.91015, 1.03 ) }
    dend_43 { pt3dadd( 12.4984, 166.19, -5.92058, 1.03 ) }
    dend_43 { pt3dadd( 12.5644, 166.783, -5.96667, 0.29 ) }
    dend_43 { pt3dadd( 12.6693, 167.647, -5.99767, 0.29 ) }
    dend_43 { pt3dadd( 12.682, 167.783, -5.99129, 0.44 ) }
    dend_43 { pt3dadd( 12.7077, 168.218, -5.90974, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_43 { pt3dadd( 12.7212, 168.595, -5.77328, 0.52 ) }
    dend_43 { pt3dadd( 12.7444, 169.261, -5.47299, 0.22 ) }
    dend_43 { pt3dadd( 12.7844, 169.989, -5.09211, 0.22 ) }
    dend_43 { pt3dadd( 12.8431, 170.872, -4.53965, 0.66 ) }
    dend_43 { pt3dadd( 12.9315, 172.25, -3.65711, 0.22 ) }
    dend_43 { pt3dadd( 13.0069, 173.396, -2.88697, 1.18 ) }
    dend_43 { pt3dadd( 13.0279, 173.732, -2.65035, 1.55 ) }
    dend_43 { pt3dadd( 13.0489, 174.099, -2.37945, 1.55 ) }
    dend_43 { pt3dadd( 13.1733, 176.028, -0.874373, 0.22 ) }
    dend_43 { pt3dadd( 13.2597, 176.92, -0.192627, 0.81 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 10/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 12.4001, 165.415, -5.79091, 0.52 ) }
    dend_42 { pt3dadd( 11.4635, 165.221, -5.65828, 0.52 ) }
    dend_42 { pt3dadd( 10.8523, 165.092, -5.56724, 0.37 ) }
    dend_42 { pt3dadd( 9.20752, 164.742, -5.31718, 0.22 ) }
    dend_42 { pt3dadd( 8.985, 164.695, -5.28336, 0.37 ) }
    dend_42 { pt3dadd( 7.44632, 164.368, -5.04943, 0.22 ) }
    dend_42 { pt3dadd( 7.27931, 164.332, -5.02404, 0.74 ) }
    dend_42 { pt3dadd( 6.85555, 164.244, -4.9467, 0.66 ) }
    dend_42 { pt3dadd( 6.77706, 164.226, -4.92945, 0.66 ) }
    // Section: dend_36, id: dend_36, parent: dend_26 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 21.6031, 34.8969, 16.539, 0.52 ) }
    dend_36 { pt3dadd( 22.196, 35.3635, 15.6645, 0.52 ) }
    dend_36 { pt3dadd( 22.6992, 35.8813, 14.8606, 0.52 ) }
    dend_36 { pt3dadd( 23.2522, 36.4772, 14.0184, 0.59 ) }
    dend_36 { pt3dadd( 23.8262, 37.1315, 13.1743, 1.25 ) }
    dend_36 { pt3dadd( 24.7786, 38.2665, 11.7753, 0.74 ) }
    dend_36 { pt3dadd( 25.5412, 39.2207, 10.6915, 0.96 ) }
    dend_36 { pt3dadd( 25.8197, 39.61, 10.2782, 1.33 ) }
    dend_36 { pt3dadd( 26.603, 40.8014, 9.19123, 1.33 ) }
    dend_36 { pt3dadd( 27.2662, 41.7845, 8.43708, 1.33 ) }
    dend_36 { pt3dadd( 27.9376, 42.7023, 7.82103, 0.66 ) }
    dend_36 { pt3dadd( 28.7571, 43.6609, 7.24532, 0.66 ) }
    dend_36 { pt3dadd( 29.2304, 44.1619, 6.95466, 0.96 ) }
    dend_36 { pt3dadd( 30.0682, 45.0215, 6.46706, 0.96 ) }
    dend_36 { pt3dadd( 31.1153, 46.1159, 5.87853, 0.74 ) }
    dend_36 { pt3dadd( 31.1562, 46.1584, 5.85582, 0.74 ) }
    dend_36 { pt3dadd( 31.7642, 46.8165, 5.50634, 0.88 ) }
    dend_36 { pt3dadd( 32.4518, 47.6906, 4.93782, 0.29 ) }
    dend_36 { pt3dadd( 32.681, 48.14, 4.59263, 0.44 ) }
    dend_36 { pt3dadd( 32.7907, 48.8349, 4.00701, 0.96 ) }
    dend_36 { pt3dadd( 32.7458, 49.1712, 3.72232, 1.47 ) }
    dend_36 { pt3dadd( 32.6728, 49.4577, 3.49383, 1.47 ) }
    dend_36 { pt3dadd( 32.2905, 50.4818, 2.71332, 0.96 ) }
    dend_36 { pt3dadd( 31.9797, 51.2005, 2.22854, 0.52 ) }
    dend_36 { pt3dadd( 31.6901, 51.8533, 1.82486, 0.52 ) }
    dend_36 { pt3dadd( 31.2921, 52.8375, 1.29528, 0.44 ) }
    dend_36 { pt3dadd( 31.1251, 53.3499, 1.04352, 0.59 ) }
    dend_36 { pt3dadd( 31.1114, 53.4099, 1.01673, 0.59 ) }
    dend_36 { pt3dadd( 31.0348, 54.1016, 0.761059, 0.59 ) }
    dend_36 { pt3dadd( 31.0361, 54.7859, 0.523837, 0.59 ) }
    dend_36 { pt3dadd( 31.256, 56.345, -0.0161077, 0.22 ) }
    dend_36 { pt3dadd( 31.4579, 56.9698, -0.247748, 0.81 ) }
    dend_36 { pt3dadd( 31.7599, 57.5626, -0.50675, 1.18 ) }
    dend_36 { pt3dadd( 31.9528, 57.8722, -0.650484, 1.47 ) }
    dend_36 { pt3dadd( 31.9921, 57.9275, -0.67681, 1.47 ) }
    dend_36 { pt3dadd( 32.3249, 58.3852, -0.86093, 1.47 ) }
    dend_36 { pt3dadd( 33.0395, 59.4709, -1.17257, 0.29 ) }
    dend_36 { pt3dadd( 33.5449, 60.6029, -1.39723, 0.29 ) }
    dend_36 { pt3dadd( 33.6769, 61.0391, -1.46073, 1.03 ) }
    dend_36 { pt3dadd( 33.8211, 61.6802, -1.53166, 1.33 ) }
    dend_36 { pt3dadd( 33.9958, 62.6296, -1.61801, 1.77 ) }
    dend_36 { pt3dadd( 34.0857, 63.3762, -1.66135, 1.18 ) }
    dend_36 { pt3dadd( 34.1484, 64.5484, -1.6615, 0.59 ) }
    dend_36 { pt3dadd( 34.169, 65.8319, -1.64178, 0.37 ) }
    dend_36 { pt3dadd( 34.2188, 67.4317, -1.64588, 0.37 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 64/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 21.6031, 34.8969, 16.539, 2.5 ) }
    dend_27 { pt3dadd( 23.3934, 34.9177, 19.4351, 2.5 ) }
    dend_27 { pt3dadd( 25.2295, 34.7822, 21.6905, 1.55 ) }
    dend_27 { pt3dadd( 25.9073, 34.7138, 22.3501, 1.55 ) }
    dend_27 { pt3dadd( 26.8263, 34.6292, 23.0839, 1.4 ) }
    dend_27 { pt3dadd( 28.4462, 34.5881, 24.1289, 1.03 ) }
    dend_27 { pt3dadd( 28.5728, 34.5954, 24.2004, 1.03 ) }
    dend_27 { pt3dadd( 29.9841, 34.7648, 24.6297, 1.03 ) }
    dend_27 { pt3dadd( 30.8318, 34.9689, 24.8532, 1.03 ) }
    dend_27 { pt3dadd( 31.6398, 35.2581, 25.1008, 1.18 ) }
    dend_27 { pt3dadd( 33.1713, 35.9927, 25.6032, 1.18 ) }
    dend_27 { pt3dadd( 34.7179, 36.9035, 26.1161, 1.18 ) }
    dend_27 { pt3dadd( 35.8348, 37.6144, 26.5205, 0.96 ) }
    dend_27 { pt3dadd( 37.4003, 38.7486, 27.1742, 1.11 ) }
    dend_27 { pt3dadd( 37.5084, 38.8317, 27.2252, 1.11 ) }
    dend_27 { pt3dadd( 38.4125, 39.551, 27.7067, 1.11 ) }
    dend_27 { pt3dadd( 38.6924, 39.7756, 27.8792, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_4 (entry count 81/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.85334, -67.479, 0.886685, 0.74 ) }
    dend_24 { pt3dadd( -0.402253, -67.9768, 0.62525, 0.74 ) }
    dend_24 { pt3dadd( 0.881179, -68.4293, 0.418905, 0.37 ) }
    dend_24 { pt3dadd( 1.63717, -68.7353, 0.308724, 0.52 ) }
    dend_24 { pt3dadd( 2.26595, -69.0166, 0.22396, 0.52 ) }
    dend_24 { pt3dadd( 2.79811, -69.2823, 0.158519, 0.22 ) }
    dend_24 { pt3dadd( 3.48011, -69.6718, 0.0856699, 0.22 ) }
    dend_24 { pt3dadd( 3.73588, -69.8282, 0.0707165, 0.81 ) }
    dend_24 { pt3dadd( 4.22291, -70.1628, 0.0643038, 1.11 ) }
    dend_24 { pt3dadd( 4.40821, -70.3089, 0.0602208, 1.11 ) }
    dend_24 { pt3dadd( 4.84294, -70.6507, 0.0485671, 1.25 ) }
    dend_24 { pt3dadd( 5.65043, -71.2093, -0.00158902, 0.44 ) }
    dend_24 { pt3dadd( 6.62357, -71.6973, -0.082306, 0.22 ) }
    dend_24 { pt3dadd( 7.22439, -71.9362, -0.136622, 1.25 ) }
    dend_24 { pt3dadd( 7.85457, -72.1528, -0.194352, 1.69 ) }
    dend_24 { pt3dadd( 8.54227, -72.3755, -0.257904, 1.47 ) }
    dend_24 { pt3dadd( 9.55181, -72.684, -0.35211, 0.66 ) }
    dend_24 { pt3dadd( 11.1355, -73.1448, -0.502128, 0.29 ) }
    dend_24 { pt3dadd( 11.8712, -73.3895, -0.575523, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_24 { pt3dadd( 12.3635, -73.6033, -0.622224, 0.81 ) }
    dend_24 { pt3dadd( 12.7447, -73.819, -0.636237, 1.25 ) }
    dend_24 { pt3dadd( 13.0947, -74.0717, -0.623991, 1.25 ) }
    dend_24 { pt3dadd( 13.1487, -74.1202, -0.617396, 1.25 ) }
    dend_24 { pt3dadd( 13.7989, -74.7603, -0.436107, 0.52 ) }
    dend_24 { pt3dadd( 14.5706, -75.4363, -0.160609, 0.29 ) }
    dend_24 { pt3dadd( 15.4481, -76.1146, 0.188169, 1.4 ) }
    dend_24 { pt3dadd( 15.9571, -76.4446, 0.398189, 1.84 ) }
    dend_24 { pt3dadd( 16.1375, -76.5382, 0.487672, 1.84 ) }
    dend_24 { pt3dadd( 17.3589, -77.0896, 1.15019, 0.59 ) }
    dend_24 { pt3dadd( 18.0495, -77.3405, 1.56045, 0.29 ) }
    dend_24 { pt3dadd( 18.1094, -77.3595, 1.59715, 0.29 ) }
    dend_24 { pt3dadd( 18.7149, -77.5705, 1.94783, 0.74 ) }
    dend_24 { pt3dadd( 19.8508, -78.051, 2.59148, 0.74 ) }
    dend_24 { pt3dadd( 20.5527, -78.4469, 2.97403, 0.29 ) }
    dend_24 { pt3dadd( 20.6149, -78.4977, 3.0031, 0.29 ) }
    dend_24 { pt3dadd( 20.8663, -78.7477, 3.11323, 0.52 ) }
    dend_24 { pt3dadd( 21.3374, -79.265, 3.29731, 1.03 ) }
    dend_24 { pt3dadd( 21.6359, -79.584, 3.43478, 1.18 ) }
    dend_24 { pt3dadd( 22.4803, -80.3979, 3.82268, 0.52 ) }
    dend_24 { pt3dadd( 23.2227, -80.9881, 4.30106, 0.52 ) }
    dend_24 { pt3dadd( 23.8396, -81.376, 5.01598, 0.29 ) }
    dend_24 { pt3dadd( 23.8725, -81.3956, 5.0622, 0.29 ) }
    dend_24 { pt3dadd( 24.8756, -82.0061, 6.63769, 0.29 ) }
    dend_24 { pt3dadd( 25.0862, -82.1432, 6.98869, 1.03 ) }
    dend_24 { pt3dadd( 25.774, -82.657, 8.20886, 2.5 ) }
    dend_24 { pt3dadd( 27.6094, -84.2783, 11.732, 0.44 ) }
    dend_24 { pt3dadd( 27.9322, -84.6112, 12.3818, 0.96 ) }
    dend_24 { pt3dadd( 28.1921, -84.9221, 12.9003, 1.18 ) }
    dend_24 { pt3dadd( 28.5073, -85.3768, 13.4889, 1.33 ) }
    dend_24 { pt3dadd( 29.222, -86.4954, 14.7609, 0.29 ) }
    dend_24 { pt3dadd( 29.6431, -87.1829, 15.3547, 0.66 ) }
    dend_24 { pt3dadd( 29.6778, -87.2371, 15.3887, 0.66 ) }
    dend_24 { pt3dadd( 29.8613, -87.4744, 15.5767, 0.66 ) }
    dend_24 { pt3dadd( 30.5315, -88.2443, 16.3666, 0.37 ) }
    dend_24 { pt3dadd( 30.5697, -88.2854, 16.4129, 0.37 ) }
    dend_24 { pt3dadd( 31.0284, -88.7438, 16.9488, 0.59 ) }
    dend_24 { pt3dadd( 31.9282, -89.6138, 18.0, 0.29 ) }
    dend_24 { pt3dadd( 32.6391, -90.3074, 18.8835, 0.96 ) }
    dend_24 { pt3dadd( 33.5234, -91.1731, 20.0948, 2.21 ) }
    dend_24 { pt3dadd( 33.9212, -91.563, 20.7244, 2.5 ) }
    dend_24 { pt3dadd( 40.0315, -98.143, 25.1254, 2.5 ) }
    dend_24 { pt3dadd( 44.9374, -104.835, 30.7059, 2.5 ) }
    dend_24 { pt3dadd( 50.251, -112.527, 34.2564, 2.5 ) }
    dend_24 { pt3dadd( 55.535, -120.485, 37.2135, 2.5 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 45/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -1.85334, -67.479, 0.886685, 1.4 ) }
    dend_5 { pt3dadd( -2.4499, -69.0838, 0.201707, 1.4 ) }
    dend_5 { pt3dadd( -2.85254, -70.7955, -0.370762, 0.44 ) }
    dend_5 { pt3dadd( -2.97597, -71.6509, -0.602998, 0.44 ) }
    dend_5 { pt3dadd( -3.03585, -72.2899, -0.747625, 0.88 ) }
    dend_5 { pt3dadd( -3.12158, -73.65, -1.00779, 1.11 ) }
    dend_5 { pt3dadd( -3.16164, -74.6329, -1.17922, 1.62 ) }
    dend_5 { pt3dadd( -3.10567, -75.6326, -1.28628, 1.92 ) }
    dend_5 { pt3dadd( -3.01737, -76.5805, -1.33902, 1.92 ) }
    dend_5 { pt3dadd( -2.92843, -77.5048, -1.39377, 1.99 ) }
    dend_5 { pt3dadd( -2.84762, -78.4991, -1.46473, 1.92 ) }
    dend_5 { pt3dadd( -2.76852, -79.497, -1.54342, 1.69 ) }
    dend_5 { pt3dadd( -2.69587, -80.252, -1.5909, 1.4 ) }
    dend_5 { pt3dadd( -2.62015, -80.9904, -1.62974, 1.25 ) }
    dend_5 { pt3dadd( -2.6103, -81.0722, -1.63343, 1.25 ) }
    dend_5 { pt3dadd( -2.41705, -82.295, -1.65133, 0.88 ) }
    dend_5 { pt3dadd( -2.17291, -83.512, -1.62705, 0.88 ) }
    dend_5 { pt3dadd( -1.94904, -84.4174, -1.55075, 1.18 ) }
    dend_5 { pt3dadd( -1.92563, -84.4989, -1.54081, 1.18 ) }
    dend_5 { pt3dadd( -1.76364, -85.0562, -1.45936, 1.4 ) }
    dend_5 { pt3dadd( -1.55695, -85.909, -1.32036, 1.4 ) }
    dend_5 { pt3dadd( -1.42483, -86.6854, -1.14054, 1.03 ) }
    dend_5 { pt3dadd( -1.37169, -87.6677, -0.882965, 0.74 ) }
    dend_5 { pt3dadd( -1.49674, -88.7858, -0.560097, 0.59 ) }
    dend_5 { pt3dadd( -1.68958, -89.484, -0.339813, 0.44 ) }
    dend_5 { pt3dadd( -2.09421, -90.3108, -0.061188, 0.44 ) }
    dend_5 { pt3dadd( -2.75222, -91.217, 0.260794, 1.18 ) }
    dend_5 { pt3dadd( -3.26188, -91.7481, 0.460681, 1.62 ) }
    dend_5 { pt3dadd( -4.10229, -92.4422, 0.713858, 2.21 ) }
    dend_5 { pt3dadd( -4.49154, -92.7374, 0.82008, 2.36 ) }
    dend_5 { pt3dadd( -4.98039, -93.1376, 0.934707, 2.06 ) }
    dend_5 { pt3dadd( -5.54027, -93.6955, 1.03595, 1.33 ) }
    dend_5 { pt3dadd( -5.95301, -94.1367, 1.0744, 0.81 ) }
    dend_5 { pt3dadd( -6.66869, -95.0068, 1.12345, 0.44 ) }
    dend_5 { pt3dadd( -7.07335, -95.6074, 1.1223, 0.37 ) }
    dend_5 { pt3dadd( -7.48491, -96.3275, 1.10683, 0.81 ) }
    dend_5 { pt3dadd( -7.73772, -96.8755, 1.0725, 0.81 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 82/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -21.6296, -58.1795, 23.888, 0.37 ) }
    dend_3 { pt3dadd( -22.1754, -57.284, 24.6451, 0.37 ) }
    dend_3 { pt3dadd( -22.2041, -57.2407, 24.6812, 0.37 ) }
    dend_3 { pt3dadd( -22.6219, -56.6314, 25.2499, 0.37 ) }
    dend_3 { pt3dadd( -23.1233, -55.8981, 25.9477, 0.37 ) }
    dend_3 { pt3dadd( -23.5973, -55.1452, 26.6615, 0.37 ) }
    dend_3 { pt3dadd( -23.9073, -54.4805, 27.3088, 0.37 ) }
    dend_3 { pt3dadd( -24.023, -54.0262, 27.7969, 0.66 ) }
    dend_3 { pt3dadd( -24.0706, -53.2397, 28.6862, 0.66 ) }
    dend_3 { pt3dadd( -24.0315, -53.0117, 28.9673, 0.66 ) }
    dend_3 { pt3dadd( -23.786, -52.2067, 29.9858, 0.44 ) }
    dend_3 { pt3dadd( -23.2564, -51.0255, 31.501, 0.29 ) }
    dend_3 { pt3dadd( -22.7071, -50.116, 32.6877, 0.66 ) }
    dend_3 { pt3dadd( -22.3589, -49.6458, 33.313, 1.25 ) }
    dend_3 { pt3dadd( -21.9307, -49.1554, 33.9529, 1.25 ) }
    dend_3 { pt3dadd( -23.8939, -43.5647, 42.0085, 1.25 ) }
    dend_3 { pt3dadd( -23.9149, -37.2064, 49.7267, 1.25 ) }
    dend_3 { pt3dadd( -24.3901, -30.0461, 56.6912, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_3 { pt3dadd( -25.7463, -23.6943, 64.2948, 1.25 ) }
    dend_3 { pt3dadd( -28.5411, -16.2597, 70.3707, 1.25 ) }
    dend_3 { pt3dadd( -30.2663, -9.73918, 77.7534, 1.25 ) }
    dend_3 { pt3dadd( -30.1813, -4.36169, 86.1841, 1.25 ) }
    dend_3 { pt3dadd( -31.0091, 1.33777, 94.359, 1.25 ) }
    dend_3 { pt3dadd( -31.1828, 7.85627, 101.94, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 6/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -21.6296, -58.1795, 23.888, 0.96 ) }
    dend_2 { pt3dadd( -22.8718, -58.6483, 24.5075, 0.96 ) }
    dend_2 { pt3dadd( -23.5025, -58.8174, 24.8566, 0.96 ) }
    dend_2 { pt3dadd( -24.4419, -58.9545, 25.375, 1.03 ) }
    dend_2 { pt3dadd( -24.7675, -58.9558, 25.544, 1.18 ) }
    dend_2 { pt3dadd( -24.8192, -58.9486, 25.5736, 1.18 ) }
    dend_2 { pt3dadd( -25.3189, -58.8891, 26.0123, 1.18 ) }
    dend_2 { pt3dadd( -26.1244, -58.8201, 27.171, 0.74 ) }
    dend_2 { pt3dadd( -26.3784, -58.8974, 27.8122, 0.74 ) }
    dend_2 { pt3dadd( -26.5184, -59.2003, 28.7196, 0.74 ) }
    dend_2 { pt3dadd( -26.5487, -59.8994, 30.1816, 1.03 ) }
    dend_2 { pt3dadd( -26.2525, -61.5928, 32.7547, 0.81 ) }
    dend_2 { pt3dadd( -25.8665, -62.6922, 34.0925, 0.81 ) }
    dend_2 { pt3dadd( -25.416, -63.8293, 35.2437, 0.81 ) }
    dend_2 { pt3dadd( -25.0861, -64.7107, 36.0571, 1.33 ) }
    dend_2 { pt3dadd( -25.0515, -64.8102, 36.1431, 1.69 ) }
    dend_2 { pt3dadd( -24.7966, -65.6604, 36.8163, 1.69 ) }
    dend_2 { pt3dadd( -24.3526, -67.9209, 38.5443, 0.66 ) }
    dend_2 { pt3dadd( -24.1922, -69.1303, 39.5522, 0.59 ) }
    dend_2 { pt3dadd( -24.1128, -70.1221, 40.4827, 0.52 ) }
    dend_2 { pt3dadd( -24.0894, -70.9762, 41.3285, 0.96 ) }
    dend_2 { pt3dadd( -24.1004, -71.3923, 41.7574, 0.96 ) }
    dend_2 { pt3dadd( -24.1545, -71.7065, 42.1086, 0.96 ) }
    dend_2 { pt3dadd( -26.1516, -78.2417, 49.4095, 0.96 ) }
    dend_2 { pt3dadd( -28.0642, -85.6572, 55.8401, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 31/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 34.2188, 67.4317, -1.64588, 0.37 ) }
    dend_40 { pt3dadd( 35.2623, 67.6566, -2.73112, 0.37 ) }
    dend_40 { pt3dadd( 35.7132, 67.8646, -3.38603, 0.88 ) }
    dend_40 { pt3dadd( 35.9375, 68.0656, -3.90517, 1.18 ) }
    dend_40 { pt3dadd( 36.651, 68.8239, -5.75784, 0.29 ) }
    dend_40 { pt3dadd( 36.9027, 69.1327, -6.44474, 0.29 ) }
    dend_40 { pt3dadd( 37.1914, 69.5153, -7.23617, 0.74 ) }
    dend_40 { pt3dadd( 37.6486, 70.2723, -8.59768, 1.4 ) }
    dend_40 { pt3dadd( 38.3648, 71.6452, -10.748, 0.52 ) }
    dend_40 { pt3dadd( 38.6711, 72.2824, -11.6649, 0.44 ) }
    dend_40 { pt3dadd( 39.0515, 73.1194, -12.7285, 0.22 ) }
    dend_40 { pt3dadd( 39.3053, 73.6385, -13.3372, 0.88 ) }
    dend_40 { pt3dadd( 39.4415, 73.9018, -13.5939, 1.03 ) }
    dend_40 { pt3dadd( 40.2658, 75.3257, -14.6803, 0.22 ) }
    dend_40 { pt3dadd( 40.2992, 75.386, -14.7124, 0.22 ) }
    dend_40 { pt3dadd( 40.5301, 75.841, -14.932, 0.74 ) }
    dend_40 { pt3dadd( 40.8475, 76.4742, -15.2194, 0.22 ) }
    dend_40 { pt3dadd( 41.0405, 76.9007, -15.428, 0.59 ) }
    dend_40 { pt3dadd( 41.4997, 78.0083, -16.0168, 0.22 ) }
    dend_40 { pt3dadd( 41.7789, 78.7342, -16.4135, 0.74 ) }
    dend_40 { pt3dadd( 42.0899, 79.551, -16.8431, 1.33 ) }
    dend_40 { pt3dadd( 42.2547, 79.9941, -17.0682, 1.33 ) }
    dend_40 { pt3dadd( 42.7931, 81.4481, -17.7651, 0.22 ) }
    dend_40 { pt3dadd( 42.8181, 81.523, -17.7976, 0.22 ) }
    dend_40 { pt3dadd( 43.2524, 82.9907, -18.368, 0.59 ) }
    dend_40 { pt3dadd( 43.7087, 84.5152, -18.8835, 0.22 ) }
    dend_40 { pt3dadd( 44.0459, 85.5679, -19.1784, 1.55 ) }
    dend_40 { pt3dadd( 44.1953, 86.0025, -19.2851, 1.92 ) }
    dend_40 { pt3dadd( 44.9824, 88.0938, -19.6985, 0.22 ) }
    dend_40 { pt3dadd( 45.0682, 88.3044, -19.7344, 0.37 ) }
    dend_40 { pt3dadd( 45.7627, 89.8711, -19.9463, 0.15 ) }
    dend_40 { pt3dadd( 46.3549, 91.029, -20.0545, 0.44 ) }
    dend_40 { pt3dadd( 46.6192, 91.4841, -20.0824, 0.44 ) }
    dend_40 { pt3dadd( 47.0358, 92.1395, -20.1068, 0.22 ) }
    dend_40 { pt3dadd( 47.6338, 92.9485, -20.1068, 1.47 ) }
    dend_40 { pt3dadd( 47.8438, 93.2062, -20.1068, 1.69 ) }
    dend_40 { pt3dadd( 49.1115, 94.6406, -20.1255, 0.22 ) }
    dend_40 { pt3dadd( 49.3933, 94.9489, -20.1325, 1.03 ) }
    dend_40 { pt3dadd( 49.946, 95.5162, -20.141, 1.69 ) }
    dend_40 { pt3dadd( 51.4994, 96.9931, -20.1543, 0.15 ) }
    dend_40 { pt3dadd( 52.9048, 98.2252, -20.0931, 0.15 ) }
    dend_40 { pt3dadd( 53.3577, 98.5984, -20.0555, 1.55 ) }
    dend_40 { pt3dadd( 53.4386, 98.6618, -20.0495, 1.55 ) }
    dend_40 { pt3dadd( 54.7529, 99.6688, -19.9702, 0.15 ) }
    dend_40 { pt3dadd( 55.2336, 100.018, -19.936, 1.18 ) }
    dend_40 { pt3dadd( 56.5778, 100.951, -19.8106, 0.15 ) }
    dend_40 { pt3dadd( 56.6623, 101.009, -19.8009, 0.52 ) }
    dend_40 { pt3dadd( 58.04, 101.959, -19.6288, 0.15 ) }
    dend_40 { pt3dadd( 58.8304, 102.552, -19.5557, 0.52 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 80/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 34.2188, 67.4317, -1.64588, 0.88 ) }
    dend_37 { pt3dadd( 34.3002, 68.3668, -1.52863, 0.88 ) }
    dend_37 { pt3dadd( 34.4521, 69.7493, -1.39243, 1.92 ) }
    dend_37 { pt3dadd( 34.5593, 70.6282, -1.32231, 2.5 ) }
    dend_37 { pt3dadd( 34.6607, 71.2781, -1.2781, 2.5 ) }
    dend_37 { pt3dadd( 34.7926, 72.0222, -1.19715, 2.28 ) }
    dend_37 { pt3dadd( 34.9981, 73.1091, -1.05171, 1.25 ) }
    dend_37 { pt3dadd( 35.1624, 74.002, -0.904229, 0.59 ) }
    dend_37 { pt3dadd( 35.3059, 74.8708, -0.788361, 0.29 ) }
    dend_37 { pt3dadd( 35.4014, 75.6059, -0.676159, 0.29 ) }
    dend_37 { pt3dadd( 35.4766, 76.6956, -0.496607, 0.29 ) }
    dend_37 { pt3dadd( 35.4751, 76.7544, -0.484952, 0.29 ) }
    dend_37 { pt3dadd( 35.3286, 77.6664, -0.285784, 0.29 ) }
    dend_37 { pt3dadd( 35.1837, 78.2086, -0.167245, 0.37 ) }
    dend_37 { pt3dadd( 35.1406, 78.3353, -0.143052, 0.37 ) }
    dend_37 { pt3dadd( 34.883, 79.0121, -0.0446437, 0.37 ) }
    dend_37 { pt3dadd( 34.6383, 79.8293, -0.0409867, 1.18 ) }
    dend_37 { pt3dadd( 34.5515, 80.4208, -0.0684977, 1.69 ) }
    dend_37 { pt3dadd( 34.5521, 80.5224, -0.0851197, 1.69 ) }
    dend_37 { pt3dadd( 34.5796, 80.9703, -0.186668, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_37 { pt3dadd( 34.5842, 81.0404, -0.205948, 1.69 ) }
    dend_37 { pt3dadd( 34.6768, 82.2262, -0.604604, 0.44 ) }
    dend_37 { pt3dadd( 34.7498, 83.1721, -0.948219, 0.22 ) }
    dend_37 { pt3dadd( 34.8042, 84.2546, -1.40832, 1.11 ) }
    dend_37 { pt3dadd( 34.8068, 84.8691, -1.66918, 1.4 ) }
    dend_37 { pt3dadd( 34.7694, 85.6256, -1.94633, 1.47 ) }
    dend_37 { pt3dadd( 34.6779, 86.564, -2.20556, 0.96 ) }
    dend_37 { pt3dadd( 34.5847, 87.247, -2.32936, 0.81 ) }
    dend_37 { pt3dadd( 34.3371, 88.8538, -2.46942, 0.52 ) }
    dend_37 { pt3dadd( 34.1152, 90.3469, -2.42446, 0.52 ) }
    dend_37 { pt3dadd( 33.9726, 91.6421, -2.29593, 1.33 ) }
    dend_37 { pt3dadd( 33.9064, 92.6349, -2.14072, 1.99 ) }
    dend_37 { pt3dadd( 33.8694, 93.4926, -1.95524, 1.99 ) }
    dend_37 { pt3dadd( 33.8627, 94.6201, -1.65647, 0.66 ) }
    dend_37 { pt3dadd( 33.9, 95.5464, -1.39916, 0.29 ) }
    dend_37 { pt3dadd( 33.9706, 96.2767, -1.28051, 0.29 ) }
    dend_37 { pt3dadd( 34.0939, 97.1789, -1.2739, 0.59 ) }
    dend_37 { pt3dadd( 34.1939, 97.9057, -1.32405, 0.81 ) }
    dend_37 { pt3dadd( 34.2107, 98.0399, -1.33797, 0.81 ) }
    dend_37 { pt3dadd( 34.3579, 99.3552, -1.52458, 0.29 ) }
    dend_37 { pt3dadd( 34.4722, 100.59, -1.70101, 0.29 ) }
    dend_37 { pt3dadd( 34.5414, 101.441, -1.79194, 0.96 ) }
    dend_37 { pt3dadd( 34.6302, 102.313, -1.84791, 1.4 ) }
    dend_37 { pt3dadd( 34.7285, 103.184, -1.87612, 1.69 ) }
    dend_37 { pt3dadd( 34.7446, 103.338, -1.8757, 1.69 ) }
    dend_37 { pt3dadd( 34.8351, 104.189, -1.83748, 1.69 ) }
    dend_37 { pt3dadd( 34.9155, 105.02, -1.81204, 1.84 ) }
    dend_37 { pt3dadd( 34.9536, 105.802, -1.80185, 1.69 ) }
    dend_37 { pt3dadd( 34.9596, 106.755, -1.81215, 1.4 ) }
    dend_37 { pt3dadd( 34.8948, 107.684, -1.82364, 0.81 ) }
    dend_37 { pt3dadd( 34.7741, 108.392, -1.83331, 0.52 ) }
    dend_37 { pt3dadd( 34.5809, 108.983, -1.85074, 0.52 ) }
    dend_37 { pt3dadd( 34.2024, 109.82, -1.88868, 0.52 ) }
    dend_37 { pt3dadd( 34.1014, 110.009, -1.89985, 0.52 ) }
    dend_37 { pt3dadd( 33.7123, 110.657, -1.94661, 0.44 ) }
    dend_37 { pt3dadd( 33.3692, 111.253, -1.99481, 0.37 ) }
    dend_37 { pt3dadd( 32.9931, 112.089, -2.05816, 0.29 ) }
    dend_37 { pt3dadd( 32.7797, 112.849, -2.14152, 0.88 ) }
    dend_37 { pt3dadd( 32.6906, 113.439, -2.21243, 1.11 ) }
    dend_37 { pt3dadd( 32.6858, 113.521, -2.22416, 1.11 ) }
    dend_37 { pt3dadd( 32.7326, 114.54, -2.48292, 0.52 ) }
    dend_37 { pt3dadd( 32.8379, 115.471, -2.77409, 0.52 ) }
    dend_37 { pt3dadd( 32.9991, 116.563, -3.15064, 1.69 ) }
    dend_37 { pt3dadd( 33.1364, 117.513, -3.4921, 2.43 ) }
    dend_37 { pt3dadd( 33.2879, 118.626, -3.88984, 2.58 ) }
    dend_37 { pt3dadd( 33.5429, 120.637, -4.58962, 0.74 ) }
    dend_37 { pt3dadd( 33.6358, 121.423, -4.85651, 0.52 ) }
    dend_37 { pt3dadd( 33.7509, 122.414, -5.18782, 0.44 ) }
    dend_37 { pt3dadd( 33.8429, 123.323, -5.45946, 1.11 ) }
    dend_37 { pt3dadd( 33.9013, 124.1, -5.67458, 1.77 ) }
    dend_37 { pt3dadd( 33.9197, 124.639, -5.7987, 1.99 ) }
    dend_37 { pt3dadd( 33.9228, 125.798, -6.00306, 1.62 ) }
    dend_37 { pt3dadd( 33.9737, 127.074, -6.24408, 0.44 ) }
    dend_37 { pt3dadd( 34.0451, 127.924, -6.41302, 0.29 ) }
    dend_37 { pt3dadd( 34.1951, 128.914, -6.61065, 0.88 ) }
    dend_37 { pt3dadd( 34.28, 129.273, -6.6669, 1.25 ) }
    dend_37 { pt3dadd( 34.467, 129.863, -6.7266, 1.25 ) }
    dend_37 { pt3dadd( 35.0804, 131.178, -6.71279, 0.22 ) }
    dend_37 { pt3dadd( 35.1129, 131.228, -6.70668, 0.22 ) }
    dend_37 { pt3dadd( 35.4229, 131.617, -6.63963, 0.96 ) }
    dend_37 { pt3dadd( 36.106, 132.386, -6.46446, 1.18 ) }
    dend_37 { pt3dadd( 36.1614, 132.446, -6.45051, 1.18 ) }
    dend_37 { pt3dadd( 36.6224, 132.922, -6.39527, 1.18 ) }
    dend_37 { pt3dadd( 37.6767, 134.034, -6.41027, 0.22 ) }
    dend_37 { pt3dadd( 37.7258, 134.087, -6.41751, 0.22 ) }
    dend_37 { pt3dadd( 37.9002, 134.286, -6.48194, 0.74 ) }
    dend_37 { pt3dadd( 37.9437, 134.337, -6.50879, 0.74 ) }
    dend_37 { pt3dadd( 38.8006, 135.39, -7.1374, 0.74 ) }
    dend_37 { pt3dadd( 38.8485, 135.447, -7.17847, 1.4 ) }
    dend_37 { pt3dadd( 38.8851, 135.485, -7.20699, 1.4 ) }
    dend_37 { pt3dadd( 39.3304, 135.962, -7.51387, 1.69 ) }
    dend_37 { pt3dadd( 39.3748, 136.013, -7.54116, 1.69 ) }
    dend_37 { pt3dadd( 39.5994, 136.284, -7.6618, 1.69 ) }
    dend_37 { pt3dadd( 40.3049, 137.204, -7.96714, 0.52 ) }
    dend_37 { pt3dadd( 40.8963, 138.045, -8.20784, 0.22 ) }
    dend_37 { pt3dadd( 41.2288, 138.601, -8.33118, 0.81 ) }
    dend_37 { pt3dadd( 41.4812, 139.098, -8.4129, 1.11 ) }
    dend_37 { pt3dadd( 41.5081, 139.165, -8.42117, 1.11 ) }
    dend_37 { pt3dadd( 41.6196, 139.509, -8.44033, 1.11 ) }
    dend_37 { pt3dadd( 41.7476, 139.991, -8.43, 0.81 ) }
    dend_37 { pt3dadd( 41.9802, 140.86, -8.3735, 0.29 ) }
    dend_37 { pt3dadd( 42.0013, 140.929, -8.36783, 0.29 ) }
    dend_37 { pt3dadd( 42.3491, 141.893, -8.27956, 0.29 ) }
    dend_37 { pt3dadd( 42.8105, 143.001, -8.17213, 0.29 ) }
    dend_37 { pt3dadd( 43.2574, 143.947, -8.07436, 0.81 ) }
    dend_37 { pt3dadd( 43.6573, 144.701, -7.99409, 1.25 ) }
    dend_37 { pt3dadd( 43.6967, 144.766, -7.98974, 1.25 ) }
    dend_37 { pt3dadd( 44.0976, 145.418, -7.96682, 1.25 ) }
    dend_37 { pt3dadd( 44.3613, 145.837, -7.96706, 1.03 ) }
    dend_37 { pt3dadd( 44.4511, 145.982, -7.98094, 1.03 ) }
    dend_37 { pt3dadd( 44.8274, 146.599, -8.08087, 0.81 ) }
    dend_37 { pt3dadd( 45.463, 147.707, -8.30132, 0.22 ) }
    dend_37 { pt3dadd( 45.9131, 148.518, -8.44785, 0.96 ) }
    dend_37 { pt3dadd( 46.1659, 148.965, -8.52601, 1.69 ) }
    dend_37 { pt3dadd( 46.7039, 149.806, -8.66763, 1.99 ) }
    dend_37 { pt3dadd( 46.785, 149.914, -8.68483, 1.99 ) }
    dend_37 { pt3dadd( 47.25, 150.43, -8.7967, 1.99 ) }
    dend_37 { pt3dadd( 48.2011, 151.304, -9.0282, 0.52 ) }
    dend_37 { pt3dadd( 48.7599, 151.757, -9.1819, 0.29 ) }
    dend_37 { pt3dadd( 49.3111, 152.178, -9.33432, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_37 { pt3dadd( 49.6942, 152.461, -9.43367, 0.88 ) }
    dend_37 { pt3dadd( 50.6016, 153.184, -9.72957, 0.29 ) }
    dend_37 { pt3dadd( 50.6532, 153.231, -9.75026, 0.29 ) }
    dend_37 { pt3dadd( 51.0457, 153.679, -9.92765, 0.59 ) }
    dend_37 { pt3dadd( 51.0885, 153.735, -9.94475, 0.59 ) }
    dend_37 { pt3dadd( 51.2875, 153.987, -9.99915, 0.59 ) }
    dend_37 { pt3dadd( 51.8519, 154.669, -10.0857, 0.22 ) }
    dend_37 { pt3dadd( 52.5607, 155.504, -10.1209, 1.62 ) }
    dend_37 { pt3dadd( 53.1873, 156.221, -10.1573, 2.65 ) }
    dend_37 { pt3dadd( 53.3889, 156.444, -10.1694, 2.8 ) }
    dend_37 { pt3dadd( 54.4707, 157.642, -10.2333, 0.59 ) }
    dend_37 { pt3dadd( 54.837, 158.042, -10.2793, 0.22 ) }
    dend_37 { pt3dadd( 55.635, 158.857, -10.4401, 0.22 ) }
    dend_37 { pt3dadd( 56.2644, 159.489, -10.6255, 0.88 ) }
    dend_37 { pt3dadd( 56.4848, 159.69, -10.7058, 1.11 ) }
    dend_37 { pt3dadd( 56.8229, 159.969, -10.8543, 1.18 ) }
    dend_37 { pt3dadd( 57.9688, 160.811, -11.4528, 0.29 ) }
    dend_37 { pt3dadd( 58.6253, 161.233, -11.7966, 0.29 ) }
    dend_37 { pt3dadd( 58.6914, 161.27, -11.83, 0.29 ) }
    dend_37 { pt3dadd( 59.5032, 161.7, -12.2067, 0.29 ) }
    dend_37 { pt3dadd( 60.3249, 162.136, -12.5548, 0.22 ) }
    dend_37 { pt3dadd( 60.7604, 162.424, -12.6687, 0.96 ) }
    dend_37 { pt3dadd( 61.233, 162.885, -12.675, 1.25 ) }
    dend_37 { pt3dadd( 61.3224, 163.0, -12.6658, 1.25 ) }
    dend_37 { pt3dadd( 61.4706, 163.221, -12.6266, 1.25 ) }
    dend_37 { pt3dadd( 61.5137, 163.29, -12.6115, 1.25 ) }
    dend_37 { pt3dadd( 62.4156, 164.734, -12.338, 0.22 ) }
    dend_37 { pt3dadd( 62.938, 165.573, -12.3191, 1.33 ) }
    dend_37 { pt3dadd( 63.2094, 166.008, -12.3612, 1.92 ) }
    dend_37 { pt3dadd( 63.7598, 166.844, -12.5137, 1.69 ) }
    dend_37 { pt3dadd( 64.8746, 168.459, -12.9735, 0.22 ) }
    dend_37 { pt3dadd( 65.4319, 169.253, -13.3548, 1.11 ) }
    dend_37 { pt3dadd( 66.4703, 170.693, -14.3585, 0.29 ) }
    dend_37 { pt3dadd( 66.7809, 171.145, -14.7216, 1.33 ) }
    dend_37 { pt3dadd( 67.0777, 171.583, -15.1287, 1.69 ) }
    dend_37 { pt3dadd( 67.4532, 172.127, -15.71, 1.69 ) }
    dend_37 { pt3dadd( 68.2609, 173.296, -17.0702, 0.37 ) }
    dend_37 { pt3dadd( 68.2954, 173.338, -17.1189, 0.37 ) }
    dend_37 { pt3dadd( 68.7678, 173.841, -17.6991, 0.37 ) }
    dend_37 { pt3dadd( 69.3106, 174.402, -18.3964, 0.88 ) }
    dend_37 { pt3dadd( 69.5917, 174.697, -18.7502, 0.88 ) }
    dend_37 { pt3dadd( 69.6339, 174.738, -18.7936, 0.88 ) }
    dend_37 { pt3dadd( 70.3031, 175.457, -19.6736, 0.22 ) }
    dend_37 { pt3dadd( 70.5664, 175.8, -20.1207, 0.22 ) }
    dend_37 { pt3dadd( 70.7821, 176.162, -20.5835, 0.81 ) }
    dend_37 { pt3dadd( 70.9645, 176.556, -21.0661, 1.25 ) }
    dend_37 { pt3dadd( 71.1015, 176.856, -21.4457, 1.25 ) }
    dend_37 { pt3dadd( 71.9938, 178.675, -23.7319, 0.37 ) }
    dend_37 { pt3dadd( 72.1348, 178.969, -24.1083, 0.29 ) }
    dend_37 { pt3dadd( 72.5598, 179.847, -25.2509, 0.59 ) }
    dend_37 { pt3dadd( 72.8685, 180.468, -26.0384, 0.59 ) }
    dend_37 { pt3dadd( 73.3479, 181.306, -27.1136, 0.29 ) }
    dend_37 { pt3dadd( 73.664, 181.81, -27.7516, 2.28 ) }
    dend_37 { pt3dadd( 74.8494, 183.48, -29.7424, 0.37 ) }
    dend_37 { pt3dadd( 75.102, 183.831, -30.1624, 0.29 ) }
    dend_37 { pt3dadd( 75.319, 184.197, -30.5473, 0.22 ) }
    dend_37 { pt3dadd( 75.8037, 185.11, -31.4345, 0.22 ) }
    dend_37 { pt3dadd( 76.2595, 186.147, -32.3557, 0.22 ) }
    dend_37 { pt3dadd( 76.2791, 186.198, -32.399, 0.22 ) }
    dend_37 { pt3dadd( 76.5862, 187.024, -32.9193, 1.92 ) }
    dend_37 { pt3dadd( 77.1403, 188.848, -34.0534, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_27 (entry count 61/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 38.6924, 39.7756, 27.8792, 0.44 ) }
    dend_35 { pt3dadd( 39.6154, 39.4068, 27.9216, 0.44 ) }
    dend_35 { pt3dadd( 40.7016, 39.0443, 27.9628, 0.66 ) }
    dend_35 { pt3dadd( 42.0149, 38.7355, 27.9911, 0.29 ) }
    dend_35 { pt3dadd( 42.1, 38.7281, 27.9912, 0.29 ) }
    dend_35 { pt3dadd( 43.447, 38.7421, 27.9754, 0.29 ) }
    dend_35 { pt3dadd( 44.3227, 38.9323, 27.9534, 0.29 ) }
    dend_35 { pt3dadd( 44.3916, 38.9775, 27.9495, 0.29 ) }
    dend_35 { pt3dadd( 45.0297, 39.6917, 27.8381, 0.22 ) }
    dend_35 { pt3dadd( 45.5982, 40.3618, 27.7038, 0.22 ) }
    dend_35 { pt3dadd( 45.644, 40.4041, 27.6938, 0.22 ) }
    dend_35 { pt3dadd( 46.869, 41.2855, 27.4582, 0.22 ) }
    dend_35 { pt3dadd( 46.9631, 41.3367, 27.4431, 0.22 ) }
    dend_35 { pt3dadd( 47.7537, 41.6965, 27.3315, 0.29 ) }
    dend_35 { pt3dadd( 49.1997, 42.2286, 27.1526, 0.29 ) }
    dend_35 { pt3dadd( 50.9646, 42.7783, 26.9505, 0.22 ) }
    dend_35 { pt3dadd( 52.049, 43.0607, 26.8357, 0.22 ) }
    dend_35 { pt3dadd( 52.1204, 43.0731, 26.8293, 0.22 ) }
    dend_35 { pt3dadd( 52.7121, 43.1675, 26.7918, 0.37 ) }
    dend_35 { pt3dadd( 52.94, 43.1985, 26.7918, 0.37 ) }
    dend_35 { pt3dadd( 53.3039, 43.2654, 26.7918, 0.37 ) }
    dend_35 { pt3dadd( 62.1483, 47.2248, 24.3219, 0.37 ) }
    dend_35 { pt3dadd( 71.085, 49.7819, 20.6345, 0.37 ) }
    dend_35 { pt3dadd( 79.8, 54.0308, 18.186, 0.37 ) }
    dend_35 { pt3dadd( 88.4059, 58.4396, 15.6363, 0.37 ) }
    dend_35 { pt3dadd( 96.6501, 63.7545, 13.6909, 0.37 ) }
    dend_35 { pt3dadd( 105.391, 68.6107, 13.5571, 0.37 ) }
    dend_35 { pt3dadd( 114.895, 71.6023, 14.4075, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 89/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 38.6924, 39.7756, 27.8792, 2.06 ) }
    dend_28 { pt3dadd( 38.8656, 40.6067, 33.9785, 2.06 ) }
    dend_28 { pt3dadd( 38.8822, 40.6863, 34.5631, 2.21 ) }
    // Section: dend_23, id: dend_23, parent: dend_5 (entry count 92/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -7.73772, -96.8755, 1.0725, 0.22 ) }
    dend_23 { pt3dadd( -6.40846, -96.7183, 1.10411, 0.22 ) }
    dend_23 { pt3dadd( -5.11628, -96.3673, 1.28162, 0.22 ) }
    dend_23 { pt3dadd( -4.6722, -96.2137, 1.35376, 0.44 ) }
    dend_23 { pt3dadd( -4.11026, -95.9779, 1.47162, 0.44 ) }
    dend_23 { pt3dadd( -2.67039, -95.3105, 1.79463, 0.22 ) }
    dend_23 { pt3dadd( -1.30503, -94.6484, 2.10997, 0.22 ) }
    dend_23 { pt3dadd( 0.527424, -93.6685, 2.60933, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_23 { pt3dadd( 1.60838, -93.0391, 2.90926, 0.44 ) }
    dend_23 { pt3dadd( 3.09071, -92.1558, 3.31617, 0.15 ) }
    dend_23 { pt3dadd( 3.86681, -91.6972, 3.51962, 0.15 ) }
    dend_23 { pt3dadd( 3.93682, -91.6564, 3.53495, 0.15 ) }
    dend_23 { pt3dadd( 4.71628, -91.1984, 3.65012, 0.59 ) }
    dend_23 { pt3dadd( 5.16055, -90.9355, 3.64833, 0.74 ) }
    dend_23 { pt3dadd( 5.22444, -90.8955, 3.63737, 0.74 ) }
    dend_23 { pt3dadd( 5.94443, -90.4169, 3.41918, 0.29 ) }
    dend_23 { pt3dadd( 6.58375, -89.9293, 3.16939, 0.44 ) }
    dend_23 { pt3dadd( 7.71948, -88.9899, 2.67207, 0.22 ) }
    dend_23 { pt3dadd( 8.41144, -88.379, 2.37052, 1.4 ) }
    dend_23 { pt3dadd( 9.63894, -87.3229, 1.84966, 0.22 ) }
    dend_23 { pt3dadd( 10.0295, -86.9963, 1.68799, 0.59 ) }
    dend_23 { pt3dadd( 11.5026, -85.8034, 1.0769, 0.22 ) }
    dend_23 { pt3dadd( 11.615, -85.7169, 1.03281, 0.22 ) }
    dend_23 { pt3dadd( 13.3649, -84.4172, 0.330265, 0.22 ) }
    dend_23 { pt3dadd( 14.5847, -83.5796, -0.188393, 0.22 ) }
    dend_23 { pt3dadd( 14.6661, -83.5271, -0.223199, 0.22 ) }
    dend_23 { pt3dadd( 15.6154, -82.9019, -0.65472, 0.22 ) }
    dend_23 { pt3dadd( 16.6814, -82.1323, -1.18296, 0.66 ) }
    dend_23 { pt3dadd( 17.5293, -81.437, -1.66443, 0.59 ) }
    dend_23 { pt3dadd( 18.8177, -80.1869, -2.52262, 0.22 ) }
    dend_23 { pt3dadd( 19.4976, -79.3515, -3.03853, 0.22 ) }
    dend_23 { pt3dadd( 20.3641, -78.0719, -3.78403, 0.22 ) }
    dend_23 { pt3dadd( 20.9873, -76.8952, -4.41585, 0.22 ) }
    dend_23 { pt3dadd( 21.1508, -76.472, -4.62542, 0.66 ) }
    dend_23 { pt3dadd( 21.3137, -75.8473, -4.89638, 0.66 ) }
    dend_23 { pt3dadd( 21.5166, -74.3637, -5.47657, 0.22 ) }
    dend_23 { pt3dadd( 21.557, -73.7923, -5.70442, 0.52 ) }
    dend_23 { pt3dadd( 21.5892, -73.4466, -5.82282, 0.52 ) }
    dend_23 { pt3dadd( 21.7279, -72.5556, -6.06103, 0.22 ) }
    dend_23 { pt3dadd( 21.7781, -72.3352, -6.10481, 0.52 ) }
    dend_23 { pt3dadd( 21.9323, -71.8743, -6.15287, 0.52 ) }
    dend_23 { pt3dadd( 21.9611, -71.8074, -6.15285, 0.52 ) }
    dend_23 { pt3dadd( 22.6312, -70.3496, -6.0906, 0.22 ) }
    dend_23 { pt3dadd( 22.7467, -70.1143, -6.07674, 0.37 ) }
    dend_23 { pt3dadd( 22.8493, -69.9364, -6.06116, 0.37 ) }
    dend_23 { pt3dadd( 23.8111, -68.4595, -5.9345, 0.15 ) }
    dend_23 { pt3dadd( 23.9642, -68.247, -5.9175, 0.74 ) }
    dend_23 { pt3dadd( 24.3558, -67.7179, -5.88055, 0.74 ) }
    dend_23 { pt3dadd( 24.407, -67.6535, -5.87749, 0.74 ) }
    dend_23 { pt3dadd( 25.5038, -66.3458, -5.80645, 0.22 ) }
    dend_23 { pt3dadd( 25.8551, -65.9613, -5.78089, 0.66 ) }
    dend_23 { pt3dadd( 26.2373, -65.6263, -5.74646, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 44/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -7.73772, -96.8755, 1.0725, 1.47 ) }
    dend_6 { pt3dadd( -7.69058, -97.1307, 1.02042, 1.47 ) }
    dend_6 { pt3dadd( -7.59044, -97.9916, 0.823047, 1.99 ) }
    dend_6 { pt3dadd( -7.5496, -98.9799, 0.599055, 1.77 ) }
    dend_6 { pt3dadd( -7.57019, -100.3, 0.301296, 1.25 ) }
    dend_6 { pt3dadd( -7.63883, -101.551, 0.0337878, 0.81 ) }
    dend_6 { pt3dadd( -7.73311, -102.615, -0.224411, 1.47 ) }
    dend_6 { pt3dadd( -7.87255, -103.712, -0.516061, 2.06 ) }
    dend_6 { pt3dadd( -8.03421, -104.699, -0.79255, 2.06 ) }
    dend_6 { pt3dadd( -8.25429, -105.776, -1.10661, 2.43 ) }
    dend_6 { pt3dadd( -8.50072, -106.787, -1.39711, 2.14 ) }
    dend_6 { pt3dadd( -8.94178, -108.587, -1.92849, 0.96 ) }
    dend_6 { pt3dadd( -9.2294, -109.781, -2.29303, 1.25 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 57/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 77.1403, 188.848, -34.0534, 0.22 ) }
    dend_39 { pt3dadd( 77.7433, 189.941, -34.3321, 0.22 ) }
    dend_39 { pt3dadd( 78.0927, 190.571, -34.5284, 1.4 ) }
    dend_39 { pt3dadd( 78.3151, 190.994, -34.6605, 1.69 ) }
    dend_39 { pt3dadd( 78.5262, 191.4, -34.7463, 1.77 ) }
    dend_39 { pt3dadd( 78.9383, 192.187, -34.8603, 1.4 ) }
    dend_39 { pt3dadd( 79.6963, 193.594, -34.9943, 0.22 ) }
    dend_39 { pt3dadd( 79.7277, 193.649, -34.9961, 0.22 ) }
    dend_39 { pt3dadd( 80.1647, 194.393, -34.991, 0.22 ) }
    dend_39 { pt3dadd( 80.8001, 195.492, -34.9424, 1.03 ) }
    dend_39 { pt3dadd( 81.1124, 196.041, -34.8951, 1.03 ) }
    dend_39 { pt3dadd( 81.4821, 196.737, -34.8247, 0.59 ) }
    dend_39 { pt3dadd( 81.9654, 197.839, -34.6969, 0.22 ) }
    dend_39 { pt3dadd( 82.1227, 198.283, -34.6777, 0.74 ) }
    dend_39 { pt3dadd( 82.1437, 198.343, -34.6856, 0.74 ) }
    dend_39 { pt3dadd( 82.342, 198.882, -34.8358, 0.74 ) }
    dend_39 { pt3dadd( 82.7238, 199.848, -35.215, 0.22 ) }
    dend_39 { pt3dadd( 83.0844, 200.643, -35.5879, 0.22 ) }
    dend_39 { pt3dadd( 83.5453, 201.542, -36.0616, 0.96 ) }
    dend_39 { pt3dadd( 84.5521, 203.055, -37.0161, 0.22 ) }
    dend_39 { pt3dadd( 84.9284, 203.505, -37.3297, 1.18 ) }
    dend_39 { pt3dadd( 85.6181, 204.175, -37.8566, 1.55 ) }
    dend_39 { pt3dadd( 86.3674, 204.778, -38.3675, 1.55 ) }
    dend_39 { pt3dadd( 86.4203, 204.815, -38.4011, 1.55 ) }
    dend_39 { pt3dadd( 87.8166, 205.74, -39.2468, 0.22 ) }
    dend_39 { pt3dadd( 88.4983, 206.216, -39.6179, 0.44 ) }
    dend_39 { pt3dadd( 89.0198, 206.579, -39.889, 0.81 ) }
    dend_39 { pt3dadd( 89.3916, 206.841, -40.066, 0.81 ) }
    dend_39 { pt3dadd( 90.495, 207.687, -40.5784, 0.22 ) }
    dend_39 { pt3dadd( 90.9816, 208.111, -40.7796, 1.18 ) }
    dend_39 { pt3dadd( 91.3785, 208.496, -40.9253, 1.84 ) }
    dend_39 { pt3dadd( 91.7588, 208.843, -41.0829, 1.84 ) }
    dend_39 { pt3dadd( 92.9874, 209.896, -41.6104, 0.29 ) }
    dend_39 { pt3dadd( 93.618, 210.37, -41.887, 0.29 ) }
    dend_39 { pt3dadd( 94.5398, 211.004, -42.2878, 0.29 ) }
    dend_39 { pt3dadd( 95.1307, 211.365, -42.5326, 1.11 ) }
    dend_39 { pt3dadd( 96.3941, 211.982, -43.035, 0.29 ) }
    dend_39 { pt3dadd( 96.4476, 212.003, -43.0611, 0.29 ) }
    dend_39 { pt3dadd( 97.328, 212.284, -43.5382, 0.59 ) }
    dend_39 { pt3dadd( 97.9879, 212.491, -43.9827, 0.74 ) }
    dend_39 { pt3dadd( 98.7448, 212.757, -44.547, 0.74 ) }
    dend_39 { pt3dadd( 99.3614, 213.019, -45.0208, 0.74 ) }
    dend_39 { pt3dadd( 101.14, 213.934, -46.3941, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_39 { pt3dadd( 101.448, 214.104, -46.6449, 0.96 ) }
    dend_39 { pt3dadd( 102.765, 214.889, -47.7619, 0.29 ) }
    dend_39 { pt3dadd( 103.17, 215.116, -48.0881, 1.25 ) }
    dend_39 { pt3dadd( 103.413, 215.246, -48.2583, 1.69 ) }
    dend_39 { pt3dadd( 103.932, 215.523, -48.5527, 1.84 ) }
    dend_39 { pt3dadd( 104.817, 215.975, -48.9458, 0.88 ) }
    dend_39 { pt3dadd( 106.006, 216.578, -49.4212, 0.29 ) }
    dend_39 { pt3dadd( 106.695, 216.93, -49.6571, 0.37 ) }
    dend_39 { pt3dadd( 107.984, 217.612, -50.09, 0.29 ) }
    dend_39 { pt3dadd( 108.474, 217.869, -50.2565, 1.25 ) }
    dend_39 { pt3dadd( 110.266, 218.785, -50.854, 0.22 ) }
    dend_39 { pt3dadd( 111.285, 219.27, -51.2034, 1.4 ) }
    dend_39 { pt3dadd( 111.688, 219.451, -51.3522, 1.69 ) }
    dend_39 { pt3dadd( 112.398, 219.763, -51.6426, 1.25 ) }
    dend_39 { pt3dadd( 114.168, 220.522, -52.4188, 0.22 ) }
    dend_39 { pt3dadd( 114.48, 220.645, -52.5663, 0.88 ) }
    dend_39 { pt3dadd( 115.985, 221.182, -53.2962, 0.22 ) }
    dend_39 { pt3dadd( 116.047, 221.203, -53.3287, 0.44 ) }
    dend_39 { pt3dadd( 116.456, 221.339, -53.5517, 0.44 ) }
    dend_39 { pt3dadd( 117.324, 221.595, -54.0973, 1.33 ) }
    dend_39 { pt3dadd( 118.659, 221.998, -55.0653, 0.22 ) }
    dend_39 { pt3dadd( 119.588, 222.279, -55.7957, 0.81 ) }
    dend_39 { pt3dadd( 119.884, 222.356, -56.0858, 0.81 ) }
    dend_39 { pt3dadd( 119.95, 222.373, -56.1748, 0.81 ) }
    dend_39 { pt3dadd( 120.845, 222.671, -58.0927, 0.29 ) }
    dend_39 { pt3dadd( 121.236, 222.856, -59.2922, 1.62 ) }
    dend_39 { pt3dadd( 121.255, 222.868, -59.3713, 1.62 ) }
    dend_39 { pt3dadd( 121.763, 223.385, -62.2454, 0.74 ) }
    dend_39 { pt3dadd( 122.118, 224.064, -65.053, 0.88 ) }
    dend_39 { pt3dadd( 122.379, 225.001, -68.2165, 0.29 ) }
    dend_39 { pt3dadd( 122.392, 225.202, -68.7666, 1.11 ) }
    dend_39 { pt3dadd( 122.391, 225.225, -68.8222, 1.11 ) }
    dend_39 { pt3dadd( 122.374, 225.43, -69.2213, 1.11 ) }
    dend_39 { pt3dadd( 122.101, 227.286, -71.7729, 0.22 ) }
    dend_39 { pt3dadd( 122.085, 227.441, -71.9395, 0.66 ) }
    dend_39 { pt3dadd( 122.072, 227.771, -72.2357, 0.66 ) }
    dend_39 { pt3dadd( 122.074, 227.878, -72.335, 0.66 ) }
    dend_39 { pt3dadd( 122.142, 229.054, -73.4361, 0.15 ) }
    dend_39 { pt3dadd( 122.242, 229.877, -74.1662, 1.18 ) }
    dend_39 { pt3dadd( 122.253, 229.941, -74.2168, 1.18 ) }
    dend_39 { pt3dadd( 122.335, 230.337, -74.5376, 1.11 ) }
    dend_39 { pt3dadd( 122.688, 231.861, -75.7944, 0.22 ) }
    dend_39 { pt3dadd( 122.704, 231.925, -75.8448, 0.29 ) }
    dend_39 { pt3dadd( 122.987, 232.69, -76.395, 0.15 ) }
    dend_39 { pt3dadd( 122.987, 232.69, -76.395, 0.22 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 45/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 77.1403, 188.848, -34.0534, 0.15 ) }
    dend_38 { pt3dadd( 76.3401, 189.419, -33.9247, 0.15 ) }
    dend_38 { pt3dadd( 75.123, 190.287, -33.7289, 0.15 ) }
    dend_38 { pt3dadd( 73.1914, 191.665, -33.4182, 0.74 ) }
    dend_38 { pt3dadd( 73.1327, 191.707, -33.4086, 0.74 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 50/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 38.8822, 40.6863, 34.5631, 0.96 ) }
    dend_34 { pt3dadd( 39.9616, 38.0021, 35.9624, 0.96 ) }
    dend_34 { pt3dadd( 40.4406, 36.6749, 36.7179, 0.59 ) }
    dend_34 { pt3dadd( 40.965, 35.3512, 37.4697, 0.74 ) }
    dend_34 { pt3dadd( 41.2653, 34.6948, 37.8364, 0.66 ) }
    dend_34 { pt3dadd( 41.8869, 33.5006, 38.4132, 0.59 ) }
    dend_34 { pt3dadd( 42.5419, 32.3729, 38.8821, 0.44 ) }
    dend_34 { pt3dadd( 42.587, 32.3047, 38.8928, 0.44 ) }
    dend_34 { pt3dadd( 43.3781, 31.2038, 38.9477, 0.44 ) }
    dend_34 { pt3dadd( 43.8739, 30.5939, 38.8573, 0.66 ) }
    dend_34 { pt3dadd( 44.6926, 29.5456, 38.6369, 0.81 ) }
    dend_34 { pt3dadd( 45.1275, 28.9467, 38.5158, 0.96 ) }
    dend_34 { pt3dadd( 45.6306, 28.1466, 38.3896, 0.74 ) }
    dend_34 { pt3dadd( 46.2513, 26.9191, 38.3098, 0.52 ) }
    dend_34 { pt3dadd( 46.6732, 25.7937, 38.3383, 0.44 ) }
    dend_34 { pt3dadd( 47.0602, 24.4314, 38.4954, 0.44 ) }
    dend_34 { pt3dadd( 47.3585, 23.0818, 38.7897, 1.33 ) }
    dend_34 { pt3dadd( 47.4882, 22.4157, 38.9627, 1.55 ) }
    dend_34 { pt3dadd( 47.5898, 21.9224, 39.0999, 1.55 ) }
    dend_34 { pt3dadd( 47.6072, 21.8541, 39.118, 1.55 ) }
    dend_34 { pt3dadd( 47.8993, 20.7455, 39.3545, 1.33 ) }
    dend_34 { pt3dadd( 48.219, 19.7436, 39.4507, 0.96 ) }
    dend_34 { pt3dadd( 48.5235, 18.9073, 39.4474, 0.59 ) }
    dend_34 { pt3dadd( 48.9096, 17.9798, 39.4391, 0.44 ) }
    dend_34 { pt3dadd( 49.1265, 17.5085, 39.4315, 0.52 ) }
    dend_34 { pt3dadd( 52.6401, 8.90831, 43.1316, 0.52 ) }
    dend_34 { pt3dadd( 57.268, 0.942237, 47.0207, 0.52 ) }
    dend_34 { pt3dadd( 61.8815, -6.41236, 51.9832, 0.52 ) }
    dend_34 { pt3dadd( 65.7149, -13.5736, 57.8158, 0.52 ) }
    dend_34 { pt3dadd( 70.0208, -20.3497, 63.7776, 0.52 ) }
    dend_34 { pt3dadd( 74.4683, -27.2997, 69.4272, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 81/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 38.8822, 40.6863, 34.5631, 0.81 ) }
    dend_29 { pt3dadd( 38.6995, 42.8604, 35.8204, 0.81 ) }
    dend_29 { pt3dadd( 38.7339, 43.8515, 36.2379, 0.66 ) }
    dend_29 { pt3dadd( 38.8767, 44.7499, 36.5354, 0.66 ) }
    dend_29 { pt3dadd( 39.2661, 46.0872, 36.9058, 0.66 ) }
    dend_29 { pt3dadd( 39.7731, 47.3266, 37.2029, 0.44 ) }
    dend_29 { pt3dadd( 40.2173, 48.1777, 37.4144, 0.44 ) }
    dend_29 { pt3dadd( 41.0083, 49.2618, 37.464, 0.66 ) }
    dend_29 { pt3dadd( 41.6315, 49.9265, 37.445, 0.37 ) }
    dend_29 { pt3dadd( 42.3104, 50.4378, 37.4124, 0.37 ) }
    dend_29 { pt3dadd( 42.727, 50.6312, 37.3797, 1.25 ) }
    dend_29 { pt3dadd( 43.5466, 50.8498, 37.2698, 1.47 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 93/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.2294, -109.781, -2.29303, 0.52 ) }
    dend_8 { pt3dadd( -9.89851, -111.101, -2.76132, 0.52 ) }
    dend_8 { pt3dadd( -10.2697, -111.857, -2.99639, 1.33 ) }
    dend_8 { pt3dadd( -10.605, -112.54, -3.18032, 1.99 ) }
    dend_8 { pt3dadd( -10.9721, -113.36, -3.36141, 2.28 ) }
    dend_8 { pt3dadd( -11.2563, -114.029, -3.47308, 2.58 ) }
    dend_8 { pt3dadd( -11.7132, -115.145, -3.61799, 2.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_8 { pt3dadd( -12.0683, -116.105, -3.71629, 1.92 ) }
    dend_8 { pt3dadd( -12.3823, -117.025, -3.81913, 1.69 ) }
    dend_8 { pt3dadd( -12.8042, -118.434, -4.00904, 1.03 ) }
    dend_8 { pt3dadd( -13.0482, -119.403, -4.17214, 0.52 ) }
    dend_8 { pt3dadd( -13.2544, -120.458, -4.42404, 0.44 ) }
    dend_8 { pt3dadd( -13.4156, -121.532, -4.75131, 1.11 ) }
    dend_8 { pt3dadd( -13.5245, -122.453, -5.06246, 1.62 ) }
    dend_8 { pt3dadd( -13.6107, -123.492, -5.43979, 1.77 ) }
    dend_8 { pt3dadd( -13.6825, -124.678, -5.87308, 1.62 ) }
    dend_8 { pt3dadd( -13.7143, -125.869, -6.25302, 0.66 ) }
    dend_8 { pt3dadd( -13.7042, -126.886, -6.47622, 0.37 ) }
    dend_8 { pt3dadd( -13.6722, -127.749, -6.47159, 0.96 ) }
    dend_8 { pt3dadd( -13.652, -128.254, -6.36645, 1.25 ) }
    dend_8 { pt3dadd( -13.6334, -128.954, -6.15404, 1.25 ) }
    dend_8 { pt3dadd( -13.6308, -129.859, -5.83064, 1.11 ) }
    dend_8 { pt3dadd( -13.6458, -130.707, -5.59902, 0.74 ) }
    dend_8 { pt3dadd( -13.7642, -132.528, -5.44807, 0.37 ) }
    dend_8 { pt3dadd( -13.8864, -133.621, -5.57141, 0.37 ) }
    dend_8 { pt3dadd( -14.0691, -134.903, -5.91827, 1.25 ) }
    dend_8 { pt3dadd( -14.1835, -135.633, -6.20733, 1.84 ) }
    dend_8 { pt3dadd( -14.4816, -137.451, -7.06137, 1.62 ) }
    dend_8 { pt3dadd( -14.6759, -138.519, -7.65567, 0.52 ) }
    dend_8 { pt3dadd( -14.7966, -139.172, -8.09132, 0.29 ) }
    dend_8 { pt3dadd( -14.9617, -140.205, -8.79932, 1.11 ) }
    dend_8 { pt3dadd( -15.0655, -140.973, -9.27776, 1.84 ) }
    dend_8 { pt3dadd( -15.1299, -141.555, -9.612, 2.14 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 26/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -9.2294, -109.781, -2.29303, 0.22 ) }
    dend_7 { pt3dadd( -8.46512, -110.872, -1.89631, 0.22 ) }
    dend_7 { pt3dadd( -7.60995, -112.092, -1.45239, 0.22 ) }
    dend_7 { pt3dadd( -6.92611, -113.068, -1.09742, 0.22 ) }
    dend_7 { pt3dadd( -6.31093, -113.945, -0.778078, 0.44 ) }
    dend_7 { pt3dadd( -5.95125, -114.459, -0.591374, 0.44 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 32/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 43.5466, 50.8498, 37.2698, 1.33 ) }
    dend_31 { pt3dadd( 43.7689, 50.7074, 37.9473, 1.33 ) }
    dend_31 { pt3dadd( 44.5277, 50.2215, 40.2593, 0.96 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 35/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 43.5466, 50.8498, 37.2698, 0.29 ) }
    dend_30 { pt3dadd( 42.8549, 51.6699, 37.038, 0.29 ) }
    dend_30 { pt3dadd( 42.204, 52.4046, 36.8372, 0.29 ) }
    dend_30 { pt3dadd( 41.6676, 52.9613, 36.7011, 0.29 ) }
    dend_30 { pt3dadd( 41.6265, 53.0035, 36.6896, 0.29 ) }
    dend_30 { pt3dadd( 40.9562, 53.6929, 36.5009, 0.29 ) }
    dend_30 { pt3dadd( 40.9152, 53.7352, 36.4893, 0.29 ) }
    dend_30 { pt3dadd( 40.4028, 54.1791, 36.3519, 0.29 ) }
    dend_30 { pt3dadd( 39.673, 54.7548, 36.1935, 0.29 ) }
    dend_30 { pt3dadd( 39.2421, 55.1108, 36.1088, 0.29 ) }
    dend_30 { pt3dadd( 31.7328, 60.9304, 32.9874, 0.29 ) }
    dend_30 { pt3dadd( 24.8088, 67.021, 29.1194, 0.29 ) }
    dend_30 { pt3dadd( 19.0888, 73.7003, 24.3581, 0.29 ) }
    dend_30 { pt3dadd( 12.9613, 80.9513, 21.2155, 0.29 ) }
    dend_30 { pt3dadd( 6.8115, 88.3707, 18.5448, 0.29 ) }
    dend_30 { pt3dadd( 1.23189, 96.0597, 15.4228, 0.29 ) }
    dend_30 { pt3dadd( -4.40311, 104.245, 14.3042, 0.29 ) }
    dend_30 { pt3dadd( -8.44261, 112.96, 11.5243, 0.29 ) }
    dend_30 { pt3dadd( -11.4336, 122.002, 8.47484, 0.29 ) }
    dend_30 { pt3dadd( -15.7979, 129.876, 4.1216, 0.29 ) }
    dend_30 { pt3dadd( -18.2522, 139.148, 1.29222, 0.29 ) }
    dend_30 { pt3dadd( -20.7323, 148.629, -0.696274, 0.29 ) }
    dend_30 { pt3dadd( -22.4558, 157.78, -4.3418, 0.29 ) }
    dend_30 { pt3dadd( -24.2199, 167.514, -5.80652, 0.29 ) }
    dend_30 { pt3dadd( -26.5961, 177.198, -6.56823, 0.29 ) }
    dend_30 { pt3dadd( -28.4899, 186.952, -7.69513, 0.29 ) }
    dend_30 { pt3dadd( -29.1072, 196.671, -9.96445, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_8 (entry count 62/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -15.1299, -141.555, -9.612, 0.37 ) }
    dend_22 { pt3dadd( -14.8991, -142.382, -10.1837, 0.37 ) }
    dend_22 { pt3dadd( -14.7961, -143.408, -11.1954, 0.37 ) }
    dend_22 { pt3dadd( -14.8096, -144.463, -12.2972, 0.74 ) }
    dend_22 { pt3dadd( -14.7768, -145.066, -13.1055, 0.37 ) }
    dend_22 { pt3dadd( -14.7392, -145.505, -13.7322, 1.03 ) }
    dend_22 { pt3dadd( -14.7155, -145.762, -14.1017, 1.18 ) }
    dend_22 { pt3dadd( -14.6076, -147.477, -16.7149, 0.29 ) }
    dend_22 { pt3dadd( -14.5874, -147.848, -17.3012, 0.29 ) }
    dend_22 { pt3dadd( -14.3591, -150.268, -21.0041, 0.29 ) }
    dend_22 { pt3dadd( -14.2727, -150.935, -22.0083, 0.29 ) }
    dend_22 { pt3dadd( -14.1668, -151.548, -22.8485, 1.25 ) }
    dend_22 { pt3dadd( -14.1263, -151.739, -23.0725, 1.47 ) }
    dend_22 { pt3dadd( -14.0817, -151.912, -23.2262, 1.47 ) }
    dend_22 { pt3dadd( -13.7235, -153.469, -24.2692, 0.22 ) }
    dend_22 { pt3dadd( -13.6792, -153.765, -24.3746, 0.66 ) }
    dend_22 { pt3dadd( -13.426, -155.44, -24.8651, 0.22 ) }
    dend_22 { pt3dadd( -13.3237, -156.079, -25.0097, 0.59 ) }
    dend_22 { pt3dadd( -13.2809, -156.333, -25.0615, 0.59 ) }
    dend_22 { pt3dadd( -13.0306, -157.665, -25.2895, 0.22 ) }
    dend_22 { pt3dadd( -13.0306, -157.665, -25.2895, 0.37 ) }
    dend_22 { pt3dadd( -13.0136, -157.734, -25.3057, 0.37 ) }
    dend_22 { pt3dadd( -12.5717, -159.511, -25.8, 0.22 ) }
    dend_22 { pt3dadd( -12.3055, -160.56, -26.1187, 0.96 ) }
    dend_22 { pt3dadd( -12.1671, -161.099, -26.288, 1.47 ) }
    dend_22 { pt3dadd( -11.6736, -162.991, -26.8891, 0.22 ) }
    dend_22 { pt3dadd( -11.5393, -163.574, -27.0913, 0.37 ) }
    dend_22 { pt3dadd( -11.5264, -163.638, -27.1153, 0.37 ) }
    dend_22 { pt3dadd( -11.3509, -164.739, -27.5707, 0.22 ) }
    dend_22 { pt3dadd( -11.2975, -165.171, -27.7466, 0.74 ) }
    dend_22 { pt3dadd( -11.2575, -165.576, -27.9154, 0.81 ) }
    dend_22 { pt3dadd( -11.1344, -166.963, -28.4534, 0.15 ) }
    dend_22 { pt3dadd( -11.0974, -167.296, -28.5914, 0.59 ) }
    dend_22 { pt3dadd( -11.0854, -167.39, -28.6314, 0.74 ) }
    dend_22 { pt3dadd( -11.0617, -167.54, -28.6959, 0.74 ) }
    dend_22 { pt3dadd( -10.8833, -168.526, -29.0696, 0.22 ) }
    dend_22 { pt3dadd( -10.7539, -169.228, -29.2876, 0.88 ) }
    dend_22 { pt3dadd( -10.7377, -169.307, -29.3043, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_22 { pt3dadd( -10.7255, -169.377, -29.3191, 1.18 ) }
    dend_22 { pt3dadd( -10.6841, -169.653, -29.379, 1.18 ) }
    dend_22 { pt3dadd( -10.4601, -171.322, -29.735, 0.22 ) }
    dend_22 { pt3dadd( -10.4112, -171.703, -29.8114, 1.11 ) }
    dend_22 { pt3dadd( -10.3297, -172.393, -29.9939, 1.18 ) }
    dend_22 { pt3dadd( -10.1651, -173.821, -30.4172, 0.22 ) }
    dend_22 { pt3dadd( -10.0214, -175.135, -30.8583, 0.22 ) }
    dend_22 { pt3dadd( -10.0014, -175.34, -30.9332, 0.66 ) }
    dend_22 { pt3dadd( -9.97069, -175.688, -31.0736, 0.88 ) }
    dend_22 { pt3dadd( -9.85409, -177.424, -31.8059, 0.22 ) }
    dend_22 { pt3dadd( -9.83167, -178.123, -32.0888, 0.22 ) }
    dend_22 { pt3dadd( -9.83215, -179.017, -32.4298, 1.18 ) }
    dend_22 { pt3dadd( -9.84883, -179.475, -32.5908, 1.4 ) }
    dend_22 { pt3dadd( -9.85265, -179.545, -32.6127, 1.4 ) }
    dend_22 { pt3dadd( -10.0039, -181.138, -33.0453, 0.22 ) }
    dend_22 { pt3dadd( -10.1768, -182.524, -33.3252, 0.22 ) }
    dend_22 { pt3dadd( -10.2422, -182.965, -33.4062, 0.66 ) }
    dend_22 { pt3dadd( -10.3408, -183.57, -33.5047, 0.96 ) }
    dend_22 { pt3dadd( -10.4138, -184.002, -33.5794, 0.96 ) }
    dend_22 { pt3dadd( -10.7104, -185.696, -33.8743, 0.15 ) }
    dend_22 { pt3dadd( -10.9023, -186.745, -34.0531, 0.15 ) }
    dend_22 { pt3dadd( -11.0161, -187.366, -34.187, 0.15 ) }
    dend_22 { pt3dadd( -11.0264, -187.424, -34.1999, 0.15 ) }
    dend_22 { pt3dadd( -11.1091, -187.914, -34.3165, 0.96 ) }
    dend_22 { pt3dadd( -11.1571, -188.294, -34.3964, 1.11 ) }
    dend_22 { pt3dadd( -11.1603, -188.354, -34.4027, 1.11 ) }
    dend_22 { pt3dadd( -11.1859, -189.961, -34.4696, 0.22 ) }
    dend_22 { pt3dadd( -11.1716, -191.249, -34.4571, 0.22 ) }
    dend_22 { pt3dadd( -11.1555, -191.756, -34.4291, 0.96 ) }
    dend_22 { pt3dadd( -11.0919, -192.953, -34.3049, 0.15 ) }
    dend_22 { pt3dadd( -10.9631, -194.389, -34.0135, 0.15 ) }
    dend_22 { pt3dadd( -10.9375, -194.6, -33.9506, 1.03 ) }
    dend_22 { pt3dadd( -10.9287, -194.654, -33.9273, 1.03 ) }
    dend_22 { pt3dadd( -10.8648, -195.034, -33.7422, 1.03 ) }
    dend_22 { pt3dadd( -10.8558, -195.099, -33.7103, 1.03 ) }
    dend_22 { pt3dadd( -10.6388, -196.961, -32.7958, 0.15 ) }
    dend_22 { pt3dadd( -10.6333, -197.018, -32.7692, 0.15 ) }
    dend_22 { pt3dadd( -10.5848, -197.551, -32.527, 0.15 ) }
    dend_22 { pt3dadd( -10.5601, -197.895, -32.3852, 0.96 ) }
    dend_22 { pt3dadd( -10.5307, -198.444, -32.1835, 1.11 ) }
    dend_22 { pt3dadd( -10.4349, -200.425, -31.501, 0.15 ) }
    dend_22 { pt3dadd( -10.4149, -200.927, -31.3525, 0.88 ) }
    dend_22 { pt3dadd( -10.3974, -201.278, -31.2461, 1.18 ) }
    dend_22 { pt3dadd( -10.3201, -202.497, -30.8591, 0.15 ) }
    dend_22 { pt3dadd( -10.2784, -203.154, -30.6502, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 45/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -15.1299, -141.555, -9.612, 1.4 ) }
    dend_9 { pt3dadd( -15.3471, -142.362, -9.18194, 1.4 ) }
    dend_9 { pt3dadd( -15.8413, -144.421, -8.3548, 0.44 ) }
    dend_9 { pt3dadd( -16.1081, -145.638, -7.97793, 0.29 ) }
    dend_9 { pt3dadd( -16.361, -146.85, -7.71276, 0.29 ) }
    dend_9 { pt3dadd( -16.499, -147.531, -7.60813, 0.81 ) }
    dend_9 { pt3dadd( -16.7223, -148.75, -7.50618, 1.4 ) }
    dend_9 { pt3dadd( -16.8514, -149.538, -7.55526, 1.99 ) }
    dend_9 { pt3dadd( -16.9262, -150.031, -7.71555, 2.28 ) }
    dend_9 { pt3dadd( -17.0215, -150.732, -8.02613, 2.43 ) }
    dend_9 { pt3dadd( -17.094, -151.261, -8.29148, 2.43 ) }
    dend_9 { pt3dadd( -17.2611, -152.43, -8.85988, 1.03 ) }
    dend_9 { pt3dadd( -17.3597, -153.156, -9.1742, 0.66 ) }
    dend_9 { pt3dadd( -17.6223, -155.204, -9.94835, 0.29 ) }
    dend_9 { pt3dadd( -17.7041, -155.985, -10.1898, 0.37 ) }
    dend_9 { pt3dadd( -17.7725, -157.06, -10.4378, 0.37 ) }
    dend_9 { pt3dadd( -17.7926, -157.904, -10.5536, 0.66 ) }
    dend_9 { pt3dadd( -17.7574, -158.83, -10.5405, 0.96 ) }
    dend_9 { pt3dadd( -17.7155, -159.214, -10.4803, 1.18 ) }
    dend_9 { pt3dadd( -17.5789, -159.978, -10.2611, 0.44 ) }
    dend_9 { pt3dadd( -17.3922, -160.885, -10.0039, 0.29 ) }
    dend_9 { pt3dadd( -17.2165, -161.701, -9.79091, 1.25 ) }
    dend_9 { pt3dadd( -17.0142, -162.774, -9.57302, 1.62 ) }
    dend_9 { pt3dadd( -16.9358, -163.349, -9.48615, 1.84 ) }
    dend_9 { pt3dadd( -16.8985, -164.002, -9.41338, 1.62 ) }
    dend_9 { pt3dadd( -16.9636, -164.963, -9.38218, 0.81 ) }
    dend_9 { pt3dadd( -17.1254, -165.76, -9.43037, 0.29 ) }
    dend_9 { pt3dadd( -17.3418, -166.404, -9.53831, 0.29 ) }
    dend_9 { pt3dadd( -17.6425, -167.032, -9.68786, 0.29 ) }
    dend_9 { pt3dadd( -17.9831, -167.609, -9.84461, 0.29 ) }
    dend_9 { pt3dadd( -18.3954, -168.233, -10.021, 0.96 ) }
    dend_9 { pt3dadd( -18.5671, -168.501, -10.0919, 1.11 ) }
    dend_9 { pt3dadd( -18.735, -168.823, -10.1702, 1.11 ) }
    dend_9 { pt3dadd( -18.7937, -169.03, -10.2093, 1.11 ) }
    dend_9 { pt3dadd( -18.8359, -169.842, -10.2829, 0.29 ) }
    dend_9 { pt3dadd( -18.7731, -170.46, -10.3054, 0.44 ) }
    dend_9 { pt3dadd( -18.6721, -171.036, -10.2989, 0.59 ) }
    dend_9 { pt3dadd( -18.583, -171.523, -10.2863, 0.59 ) }
    dend_9 { pt3dadd( -18.473, -172.164, -10.263, 0.52 ) }
    dend_9 { pt3dadd( -18.3158, -173.212, -10.1961, 0.52 ) }
    dend_9 { pt3dadd( -18.2389, -173.732, -10.1517, 0.88 ) }
    dend_9 { pt3dadd( -18.1492, -174.576, -10.08, 0.88 ) }
    dend_9 { pt3dadd( -18.079, -175.423, -10.0012, 1.25 ) }
    dend_9 { pt3dadd( -18.0211, -176.372, -9.91085, 1.69 ) }
    dend_9 { pt3dadd( -17.9809, -177.189, -9.83582, 1.84 ) }
    dend_9 { pt3dadd( -17.9458, -178.065, -9.76549, 1.84 ) }
    dend_9 { pt3dadd( -17.9014, -179.177, -9.68023, 1.77 ) }
    dend_9 { pt3dadd( -17.8778, -180.048, -9.62039, 1.77 ) }
    dend_9 { pt3dadd( -17.8773, -180.42, -9.59893, 2.06 ) }
    dend_9 { pt3dadd( -17.9268, -181.232, -9.55885, 2.06 ) }
    dend_9 { pt3dadd( -18.1101, -182.471, -9.51659, 1.25 ) }
    dend_9 { pt3dadd( -18.3856, -183.517, -9.50024, 0.66 ) }
    dend_9 { pt3dadd( -18.812, -184.658, -9.50489, 0.59 ) }
    dend_9 { pt3dadd( -19.1576, -185.355, -9.53281, 0.66 ) }
    dend_9 { pt3dadd( -19.6372, -186.201, -9.59004, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_9 { pt3dadd( -20.0246, -186.826, -9.65181, 0.52 ) }
    dend_9 { pt3dadd( -20.5609, -187.669, -9.76362, 0.52 ) }
    dend_9 { pt3dadd( -20.7634, -188.007, -9.81916, 0.66 ) }
    dend_9 { pt3dadd( -21.132, -188.826, -9.97435, 0.59 ) }
    dend_9 { pt3dadd( -21.2682, -189.543, -10.1131, 0.59 ) }
    dend_9 { pt3dadd( -21.2317, -190.203, -10.2305, 0.66 ) }
    dend_9 { pt3dadd( -21.1419, -190.761, -10.3117, 0.66 ) }
    dend_9 { pt3dadd( -21.03, -191.325, -10.391, 0.74 ) }
    dend_9 { pt3dadd( -20.9307, -191.931, -10.4771, 0.29 ) }
    dend_9 { pt3dadd( -20.8547, -192.67, -10.5954, 0.96 ) }
    dend_9 { pt3dadd( -20.8459, -193.385, -10.73, 1.69 ) }
    dend_9 { pt3dadd( -20.9209, -194.3, -10.9328, 1.69 ) }
    dend_9 { pt3dadd( -21.0696, -195.19, -11.1482, 2.06 ) }
    dend_9 { pt3dadd( -21.2076, -195.787, -11.2853, 2.14 ) }
    dend_9 { pt3dadd( -21.4577, -196.675, -11.422, 1.77 ) }
    dend_9 { pt3dadd( -21.4743, -196.732, -11.4264, 1.77 ) }
    dend_9 { pt3dadd( -21.6881, -197.5, -11.4246, 1.25 ) }
    dend_9 { pt3dadd( -21.82, -198.051, -11.3762, 0.81 ) }
    dend_9 { pt3dadd( -22.0315, -199.114, -11.1375, 0.29 ) }
    dend_9 { pt3dadd( -22.1568, -200.236, -10.7963, 0.74 ) }
    dend_9 { pt3dadd( -22.1684, -200.716, -10.6153, 0.96 ) }
    dend_9 { pt3dadd( -22.1501, -201.016, -10.4966, 1.11 ) }
    dend_9 { pt3dadd( -22.0843, -201.487, -10.3035, 1.11 ) }
    dend_9 { pt3dadd( -21.8651, -202.496, -10.0213, 0.37 ) }
    dend_9 { pt3dadd( -21.6438, -203.395, -9.92905, 0.29 ) }
    dend_9 { pt3dadd( -21.5233, -203.921, -9.95825, 0.29 ) }
    dend_9 { pt3dadd( -21.4264, -204.501, -10.0566, 0.29 ) }
    dend_9 { pt3dadd( -21.3705, -205.0, -10.1726, 0.96 ) }
    dend_9 { pt3dadd( -21.2754, -206.414, -10.6103, 1.4 ) }
    dend_9 { pt3dadd( -21.2528, -207.214, -10.9221, 1.69 ) }
    dend_9 { pt3dadd( -21.263, -207.792, -11.1549, 1.62 ) }
    dend_9 { pt3dadd( -21.3222, -208.954, -11.6171, 1.25 ) }
    dend_9 { pt3dadd( -21.3998, -210.222, -12.1292, 0.96 ) }
    dend_9 { pt3dadd( -21.5036, -211.747, -12.7209, 0.96 ) }
    dend_9 { pt3dadd( -21.622, -213.067, -13.1956, 0.81 ) }
    dend_9 { pt3dadd( -21.6814, -213.75, -13.4314, 0.96 ) }
    dend_9 { pt3dadd( -21.7283, -214.301, -13.6044, 0.96 ) }
    dend_9 { pt3dadd( -21.7929, -215.146, -13.8304, 0.81 ) }
    dend_9 { pt3dadd( -21.8416, -215.946, -14.0118, 0.59 ) }
    dend_9 { pt3dadd( -21.8506, -216.829, -14.135, 0.59 ) }
    dend_9 { pt3dadd( -21.7714, -217.685, -14.1789, 0.66 ) }
    dend_9 { pt3dadd( -21.6547, -218.261, -14.1888, 1.25 ) }
    dend_9 { pt3dadd( -21.5201, -218.677, -14.18, 1.25 ) }
    dend_9 { pt3dadd( -21.337, -219.066, -14.1703, 1.25 ) }
    dend_9 { pt3dadd( -20.8861, -219.771, -14.2084, 0.81 ) }
    dend_9 { pt3dadd( -20.2174, -220.722, -14.3261, 0.44 ) }
    dend_9 { pt3dadd( -19.9612, -221.114, -14.4052, 0.66 ) }
    dend_9 { pt3dadd( -19.6353, -221.687, -14.5498, 0.66 ) }
    dend_9 { pt3dadd( -19.281, -222.563, -14.7957, 0.52 ) }
    dend_9 { pt3dadd( -19.099, -223.467, -15.0553, 0.37 ) }
    dend_9 { pt3dadd( -19.1283, -224.331, -15.2898, 0.37 ) }
    dend_9 { pt3dadd( -19.3, -225.146, -15.4928, 0.37 ) }
    dend_9 { pt3dadd( -19.4692, -225.697, -15.5991, 0.81 ) }
    dend_9 { pt3dadd( -19.832, -226.668, -15.7359, 0.81 ) }
    dend_9 { pt3dadd( -20.1134, -227.367, -15.7903, 1.47 ) }
    dend_9 { pt3dadd( -20.4203, -228.13, -15.8228, 2.14 ) }
    dend_9 { pt3dadd( -20.5646, -228.529, -15.8462, 2.36 ) }
    dend_9 { pt3dadd( -20.7791, -229.199, -15.9023, 1.99 ) }
    dend_9 { pt3dadd( -20.9848, -229.936, -15.9744, 1.18 ) }
    dend_9 { pt3dadd( -21.2187, -231.022, -16.1016, 0.37 ) }
    dend_9 { pt3dadd( -21.3777, -231.938, -16.2229, 0.37 ) }
    dend_9 { pt3dadd( -21.4591, -232.753, -16.3597, 0.29 ) }
    dend_9 { pt3dadd( -21.4496, -233.621, -16.5408, 0.81 ) }
    dend_9 { pt3dadd( -21.3188, -234.307, -16.7195, 1.33 ) }
    dend_9 { pt3dadd( -21.1556, -234.754, -16.8559, 1.33 ) }
    dend_9 { pt3dadd( -21.1287, -234.809, -16.874, 1.33 ) }
    dend_9 { pt3dadd( -20.6369, -235.706, -17.1671, 0.88 ) }
    dend_9 { pt3dadd( -20.0731, -236.737, -17.4749, 0.44 ) }
    dend_9 { pt3dadd( -19.4945, -237.921, -17.8007, 0.37 ) }
    dend_9 { pt3dadd( -19.2453, -238.546, -17.9422, 0.29 ) }
    dend_9 { pt3dadd( -19.001, -239.483, -18.0942, 1.33 ) }
    dend_9 { pt3dadd( -18.9149, -240.197, -18.1785, 1.99 ) }
    dend_9 { pt3dadd( -18.907, -240.76, -18.216, 1.92 ) }
    dend_9 { pt3dadd( -18.9379, -241.556, -18.2494, 1.25 ) }
    dend_9 { pt3dadd( -19.0, -242.598, -18.263, 0.44 ) }
    dend_9 { pt3dadd( -19.0466, -243.895, -18.2621, 0.29 ) }
    dend_9 { pt3dadd( -19.0452, -245.03, -18.2548, 0.29 ) }
    dend_9 { pt3dadd( -19.0058, -246.091, -18.2489, 0.29 ) }
    dend_9 { pt3dadd( -18.9335, -247.073, -18.2393, 0.44 ) }
    dend_9 { pt3dadd( -18.8731, -247.687, -18.2165, 0.81 ) }
    dend_9 { pt3dadd( -18.8186, -248.274, -18.1481, 1.03 ) }
    dend_9 { pt3dadd( -18.7748, -248.857, -18.025, 1.03 ) }
    dend_9 { pt3dadd( -18.7811, -249.635, -17.7904, 0.88 ) }
    dend_9 { pt3dadd( -18.9215, -250.535, -17.4264, 0.52 ) }
    dend_9 { pt3dadd( -19.1678, -251.456, -16.995, 0.37 ) }
    dend_9 { pt3dadd( -19.5527, -252.606, -16.3811, 0.81 ) }
    dend_9 { pt3dadd( -19.7083, -253.011, -16.1418, 0.81 ) }
    dend_9 { pt3dadd( -19.8801, -253.414, -15.8962, 0.81 ) }
    dend_9 { pt3dadd( -20.2784, -254.274, -15.3754, 0.22 ) }
    dend_9 { pt3dadd( -20.6067, -254.929, -15.0072, 0.22 ) }
    dend_9 { pt3dadd( -21.0227, -255.816, -14.6227, 0.96 ) }
    dend_9 { pt3dadd( -21.165, -256.177, -14.523, 1.33 ) }
    dend_9 { pt3dadd( -21.3753, -256.82, -14.4013, 1.99 ) }
    dend_9 { pt3dadd( -21.516, -257.323, -14.3466, 2.14 ) }
    dend_9 { pt3dadd( -21.6079, -257.684, -14.3406, 2.14 ) }
    dend_9 { pt3dadd( -21.8213, -258.52, -14.3566, 1.47 ) }
    dend_9 { pt3dadd( -22.0495, -259.442, -14.4259, 0.66 ) }
    dend_9 { pt3dadd( -22.2664, -260.346, -14.4969, 0.52 ) }
    dend_9 { pt3dadd( -22.3347, -260.664, -14.5223, 1.11 ) }
    dend_9 { pt3dadd( -22.4073, -261.072, -14.5574, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 0/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 44.5277, 50.2215, 40.2593, 0.22 ) }
    dend_33 { pt3dadd( 43.8055, 49.2387, 40.402, 0.22 ) }
    dend_33 { pt3dadd( 43.2104, 48.4289, 40.5195, 0.22 ) }
    dend_33 { pt3dadd( 38.9996, 39.3721, 41.0117, 0.22 ) }
    dend_33 { pt3dadd( 35.0171, 30.2544, 42.016, 0.22 ) }
    dend_33 { pt3dadd( 30.7179, 21.6404, 44.7206, 0.22 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 6/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 44.5277, 50.2215, 40.2593, 0.29 ) }
    dend_32 { pt3dadd( 44.9948, 51.2456, 40.6415, 0.29 ) }
    dend_32 { pt3dadd( 45.3856, 52.1021, 40.9613, 0.37 ) }
    dend_32 { pt3dadd( 45.7014, 52.7945, 41.2197, 0.37 ) }
    dend_32 { pt3dadd( 50.5435, 60.7562, 44.8479, 0.37 ) }
    dend_32 { pt3dadd( 54.1937, 69.562, 47.8703, 0.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 12/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -22.4073, -261.072, -14.5574, 0.66 ) }
    dend_11 { pt3dadd( -23.0951, -261.579, -15.0792, 0.66 ) }
    dend_11 { pt3dadd( -23.8754, -262.121, -15.7363, 0.22 ) }
    dend_11 { pt3dadd( -24.3079, -262.425, -16.1365, 0.88 ) }
    dend_11 { pt3dadd( -24.5409, -262.613, -16.3638, 1.33 ) }
    dend_11 { pt3dadd( -24.8253, -262.884, -16.6539, 1.4 ) }
    dend_11 { pt3dadd( -26.2365, -264.474, -18.1559, 0.44 ) }
    dend_11 { pt3dadd( -26.4753, -264.81, -18.4603, 0.59 ) }
    dend_11 { pt3dadd( -26.8473, -265.484, -18.9941, 0.29 ) }
    dend_11 { pt3dadd( -27.1376, -266.174, -19.4729, 0.29 ) }
    dend_11 { pt3dadd( -27.347, -266.853, -19.8524, 0.29 ) }
    dend_11 { pt3dadd( -27.4849, -267.567, -20.1089, 0.74 ) }
    dend_11 { pt3dadd( -27.5412, -268.148, -20.1782, 1.11 ) }
    dend_11 { pt3dadd( -27.5531, -268.569, -20.2027, 1.11 ) }
    dend_11 { pt3dadd( -27.5601, -268.965, -20.2111, 1.11 ) }
    dend_11 { pt3dadd( -27.5912, -269.661, -20.2811, 0.66 ) }
    dend_11 { pt3dadd( -27.644, -270.437, -20.409, 0.29 ) }
    dend_11 { pt3dadd( -27.7653, -271.546, -20.676, 0.22 ) }
    dend_11 { pt3dadd( -28.015, -272.851, -21.1259, 0.22 ) }
    dend_11 { pt3dadd( -28.1938, -273.359, -21.3665, 1.62 ) }
    dend_11 { pt3dadd( -28.835, -274.548, -22.0847, 1.69 ) }
    dend_11 { pt3dadd( -29.0247, -274.79, -22.2729, 1.55 ) }
    dend_11 { pt3dadd( -29.6104, -275.344, -22.8025, 0.74 ) }
    dend_11 { pt3dadd( -30.4166, -275.914, -23.45, 0.37 ) }
    dend_11 { pt3dadd( -31.4275, -276.468, -24.0836, 0.29 ) }
    dend_11 { pt3dadd( -31.777, -276.642, -24.2446, 1.03 ) }
    dend_11 { pt3dadd( -32.4459, -276.954, -24.4277, 1.25 ) }
    dend_11 { pt3dadd( -32.6552, -277.045, -24.461, 1.4 ) }
    dend_11 { pt3dadd( -33.0684, -277.217, -24.473, 1.4 ) }
    dend_11 { pt3dadd( -34.1265, -277.662, -24.3798, 0.66 ) }
    dend_11 { pt3dadd( -34.7864, -277.955, -24.2677, 0.66 ) }
    dend_11 { pt3dadd( -35.644, -278.345, -24.0869, 0.59 ) }
    dend_11 { pt3dadd( -36.2895, -278.634, -23.9206, 0.74 ) }
    dend_11 { pt3dadd( -36.6796, -278.809, -23.8186, 1.11 ) }
    dend_11 { pt3dadd( -36.6796, -278.809, -23.8186, 1.4 ) }
    dend_11 { pt3dadd( -37.0172, -278.961, -23.7505, 1.55 ) }
    dend_11 { pt3dadd( -37.2162, -279.046, -23.7215, 1.77 ) }
    dend_11 { pt3dadd( -37.5002, -279.157, -23.706, 1.92 ) }
    dend_11 { pt3dadd( -37.8488, -279.291, -23.6921, 1.92 ) }
    dend_11 { pt3dadd( -38.3176, -279.471, -23.665, 1.62 ) }
    dend_11 { pt3dadd( -38.3767, -279.493, -23.6611, 1.62 ) }
    dend_11 { pt3dadd( -39.6118, -279.989, -23.702, 0.44 ) }
    dend_11 { pt3dadd( -40.3546, -280.33, -23.7993, 0.44 ) }
    dend_11 { pt3dadd( -40.8767, -280.604, -23.905, 0.88 ) }
    dend_11 { pt3dadd( -41.2274, -280.845, -24.0152, 0.88 ) }
    dend_11 { pt3dadd( -41.6486, -281.212, -24.1895, 0.88 ) }
    dend_11 { pt3dadd( -42.745, -282.406, -24.7593, 0.29 ) }
    dend_11 { pt3dadd( -43.2079, -283.123, -25.0276, 1.62 ) }
    dend_11 { pt3dadd( -43.3795, -283.436, -25.146, 1.62 ) }
    dend_11 { pt3dadd( -43.9976, -284.762, -25.6468, 0.29 ) }
    dend_11 { pt3dadd( -44.2267, -285.369, -25.8505, 1.03 ) }
    dend_11 { pt3dadd( -44.337, -285.785, -25.953, 1.03 ) }
    dend_11 { pt3dadd( -44.5517, -287.539, -26.0028, 0.44 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 65/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -22.4073, -261.072, -14.5574, 0.22 ) }
    dend_10 { pt3dadd( -22.1621, -262.103, -14.0444, 0.22 ) }
    dend_10 { pt3dadd( -21.9283, -262.985, -13.6606, 0.22 ) }
    dend_10 { pt3dadd( -21.6057, -264.109, -13.2284, 1.03 ) }
    dend_10 { pt3dadd( -21.4669, -264.565, -13.0921, 1.03 ) }
    dend_10 { pt3dadd( -21.1191, -265.678, -12.8269, 0.22 ) }
    dend_10 { pt3dadd( -20.9238, -266.303, -12.7003, 0.88 ) }
    dend_10 { pt3dadd( -20.7439, -266.864, -12.6153, 1.03 ) }
    dend_10 { pt3dadd( -20.5764, -267.349, -12.5717, 1.18 ) }
    dend_10 { pt3dadd( -19.9831, -269.005, -12.5362, 0.22 ) }
    dend_10 { pt3dadd( -19.6596, -269.899, -12.5317, 0.22 ) }
    dend_10 { pt3dadd( -19.4724, -270.382, -12.5413, 0.52 ) }
    dend_10 { pt3dadd( -19.3537, -270.657, -12.5416, 0.52 ) }
    dend_10 { pt3dadd( -18.9473, -271.57, -12.5436, 0.22 ) }
    dend_10 { pt3dadd( -18.8884, -271.692, -12.5441, 0.22 ) }
    dend_10 { pt3dadd( -18.7372, -271.948, -12.5467, 1.11 ) }
    dend_10 { pt3dadd( -18.4515, -272.352, -12.5467, 1.25 ) }
    dend_10 { pt3dadd( -17.7932, -273.168, -12.5467, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 83/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -44.5517, -287.539, -26.0028, 0.29 ) }
    dend_13 { pt3dadd( -44.6588, -288.402, -26.2489, 0.29 ) }
    dend_13 { pt3dadd( -44.7437, -289.204, -26.4557, 0.22 ) }
    dend_13 { pt3dadd( -44.8767, -290.361, -26.7133, 0.22 ) }
    dend_13 { pt3dadd( -44.9632, -290.874, -26.8139, 0.74 ) }
    dend_13 { pt3dadd( -45.0263, -291.163, -26.8639, 0.88 ) }
    dend_13 { pt3dadd( -45.114, -291.509, -26.9162, 1.11 ) }
    dend_13 { pt3dadd( -45.2525, -291.924, -26.9624, 1.11 ) }
    dend_13 { pt3dadd( -45.5598, -292.764, -27.0242, 0.22 ) }
    dend_13 { pt3dadd( -45.8434, -293.409, -27.0349, 0.22 ) }
    dend_13 { pt3dadd( -46.105, -293.926, -27.0596, 0.96 ) }
    dend_13 { pt3dadd( -46.3945, -294.476, -27.0958, 1.47 ) }
    dend_13 { pt3dadd( -46.5944, -294.904, -27.1385, 1.62 ) }
    dend_13 { pt3dadd( -46.6202, -294.961, -27.1504, 1.62 ) }
    dend_13 { pt3dadd( -46.8436, -295.455, -27.3551, 1.62 ) }
    dend_13 { pt3dadd( -47.3927, -296.59, -27.9724, 0.29 ) }
    dend_13 { pt3dadd( -47.8566, -297.47, -28.5636, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( -48.4595, -298.516, -29.41, 0.29 ) }
    dend_13 { pt3dadd( -49.0453, -299.474, -30.2538, 0.81 ) }
    dend_13 { pt3dadd( -49.9008, -300.825, -31.615, 0.29 ) }
    dend_13 { pt3dadd( -50.2426, -301.321, -32.1684, 0.29 ) }
    dend_13 { pt3dadd( -50.6484, -301.897, -32.8896, 0.29 ) }
    dend_13 { pt3dadd( -51.1479, -302.608, -33.8263, 1.11 ) }
    dend_13 { pt3dadd( -51.4433, -303.05, -34.4007, 1.18 ) }
    dend_13 { pt3dadd( -52.3229, -304.546, -36.1991, 0.59 ) }
    dend_13 { pt3dadd( -52.6238, -305.081, -36.8348, 0.59 ) }
    dend_13 { pt3dadd( -53.3099, -306.238, -38.215, 0.96 ) }
    dend_13 { pt3dadd( -53.6532, -306.773, -38.8267, 1.4 ) }
    dend_13 { pt3dadd( -54.1627, -307.536, -39.6406, 1.4 ) }
    dend_13 { pt3dadd( -54.5878, -308.138, -40.2448, 0.88 ) }
    dend_13 { pt3dadd( -55.3081, -309.102, -41.0382, 0.37 ) }
    dend_13 { pt3dadd( -55.9929, -309.964, -41.6431, 0.37 ) }
    dend_13 { pt3dadd( -56.5197, -310.579, -41.9658, 0.81 ) }
    dend_13 { pt3dadd( -56.903, -311.045, -42.1529, 1.47 ) }
    dend_13 { pt3dadd( -57.1485, -311.354, -42.2713, 1.62 ) }
    dend_13 { pt3dadd( -58.0167, -312.528, -42.7401, 0.37 ) }
    dend_13 { pt3dadd( -58.6319, -313.382, -43.144, 0.37 ) }
    dend_13 { pt3dadd( -59.0675, -313.904, -43.4838, 0.37 ) }
    dend_13 { pt3dadd( -59.4986, -314.335, -43.8288, 0.88 ) }
    dend_13 { pt3dadd( -60.6883, -315.433, -44.7788, 0.44 ) }
    dend_13 { pt3dadd( -60.9913, -315.706, -45.0214, 0.96 ) }
    dend_13 { pt3dadd( -61.7291, -316.355, -45.6239, 0.29 ) }
    dend_13 { pt3dadd( -62.5501, -317.138, -46.2967, 0.29 ) }
    dend_13 { pt3dadd( -63.0713, -317.673, -46.6796, 0.29 ) }
    dend_13 { pt3dadd( -63.6669, -318.345, -47.0024, 0.88 ) }
    dend_13 { pt3dadd( -63.9555, -318.73, -47.0898, 1.25 ) }
    dend_13 { pt3dadd( -64.1868, -319.073, -47.1367, 1.03 ) }
    dend_13 { pt3dadd( -64.6698, -319.876, -47.1856, 0.29 ) }
    dend_13 { pt3dadd( -65.0479, -320.52, -47.2136, 0.29 ) }
    dend_13 { pt3dadd( -65.8728, -321.683, -47.2766, 0.29 ) }
    dend_13 { pt3dadd( -66.1749, -322.061, -47.2934, 0.81 ) }
    dend_13 { pt3dadd( -66.281, -322.197, -47.2974, 1.18 ) }
    dend_13 { pt3dadd( -66.6225, -322.642, -47.3171, 1.4 ) }
    dend_13 { pt3dadd( -66.9996, -323.136, -47.354, 1.03 ) }
    dend_13 { pt3dadd( -67.5554, -323.897, -47.4305, 0.52 ) }
    dend_13 { pt3dadd( -67.9855, -324.543, -47.5111, 0.37 ) }
    dend_13 { pt3dadd( -68.4445, -325.199, -47.5665, 0.74 ) }
    dend_13 { pt3dadd( -69.1181, -326.109, -47.5912, 0.29 ) }
    dend_13 { pt3dadd( -69.21, -326.234, -47.5831, 0.59 ) }
    dend_13 { pt3dadd( -69.2531, -326.292, -47.5741, 0.59 ) }
    dend_13 { pt3dadd( -69.4781, -326.575, -47.5131, 0.59 ) }
    dend_13 { pt3dadd( -70.1253, -327.35, -47.3186, 0.29 ) }
    dend_13 { pt3dadd( -70.5414, -327.896, -47.1729, 0.29 ) }
    dend_13 { pt3dadd( -70.9104, -328.535, -47.0127, 0.74 ) }
    dend_13 { pt3dadd( -71.1146, -328.946, -46.9313, 1.11 ) }
    dend_13 { pt3dadd( -71.3504, -329.486, -46.8493, 1.33 ) }
    dend_13 { pt3dadd( -71.5406, -329.98, -46.8356, 1.33 ) }
    dend_13 { pt3dadd( -71.8755, -330.976, -46.8701, 0.29 ) }
    dend_13 { pt3dadd( -72.1408, -331.836, -46.925, 0.29 ) }
    dend_13 { pt3dadd( -72.3253, -332.456, -46.993, 1.11 ) }
    dend_13 { pt3dadd( -72.4778, -333.009, -47.066, 1.47 ) }
    dend_13 { pt3dadd( -72.8148, -334.285, -47.2824, 1.62 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -44.5517, -287.539, -26.0028, 0.37 ) }
    dend_12 { pt3dadd( -45.4581, -287.554, -25.2624, 0.37 ) }
    dend_12 { pt3dadd( -46.3125, -287.569, -24.5645, 0.66 ) }
    dend_12 { pt3dadd( -46.8218, -287.578, -24.1485, 0.88 ) }
    dend_12 { pt3dadd( -48.4827, -287.607, -22.7918, 0.29 ) }
    dend_12 { pt3dadd( -49.2419, -287.62, -22.1717, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_13 (entry count 61/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -72.8148, -334.285, -47.2824, 0.22 ) }
    dend_21 { pt3dadd( -72.5389, -335.514, -44.688, 0.22 ) }
    dend_21 { pt3dadd( -72.3608, -336.087, -43.1393, 0.37 ) }
    dend_21 { pt3dadd( -72.1593, -336.736, -41.3875, 0.29 ) }
    dend_21 { pt3dadd( -72.1505, -336.764, -41.3106, 0.29 ) }
    dend_21 { pt3dadd( -71.7811, -337.953, -38.0989, 0.66 ) }
    dend_21 { pt3dadd( -71.4036, -339.168, -34.8163, 0.44 ) }
    dend_21 { pt3dadd( -71.1474, -339.816, -32.5206, 3.54 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 69/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -72.8148, -334.285, -47.2824, 0.44 ) }
    dend_14 { pt3dadd( -73.7942, -334.8, -47.2824, 0.44 ) }
    dend_14 { pt3dadd( -74.6303, -335.225, -47.2824, 0.29 ) }
    dend_14 { pt3dadd( -75.1503, -335.498, -47.2824, 0.66 ) }
    dend_14 { pt3dadd( -75.6781, -335.755, -47.3159, 0.96 ) }
    dend_14 { pt3dadd( -75.87, -335.858, -47.3332, 1.25 ) }
    dend_14 { pt3dadd( -75.9397, -335.901, -47.3405, 1.25 ) }
    dend_14 { pt3dadd( -76.2805, -336.175, -47.3868, 1.25 ) }
    dend_14 { pt3dadd( -76.7477, -336.635, -47.4462, 0.74 ) }
    dend_14 { pt3dadd( -77.73, -337.754, -47.5038, 0.29 ) }
    dend_14 { pt3dadd( -78.1931, -338.341, -47.5057, 0.44 ) }
    dend_14 { pt3dadd( -78.6864, -338.996, -47.5014, 0.44 ) }
    dend_14 { pt3dadd( -79.2048, -339.726, -47.4858, 0.52 ) }
    dend_14 { pt3dadd( -79.6986, -340.491, -47.4499, 0.52 ) }
    dend_14 { pt3dadd( -80.2473, -341.453, -47.3602, 0.74 ) }
    dend_14 { pt3dadd( -80.533, -342.068, -47.2515, 1.03 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -80.533, -342.068, -47.2515, 0.37 ) }
    dend_20 { pt3dadd( -78.7605, -341.983, -44.4791, 0.37 ) }
    dend_20 { pt3dadd( -77.7908, -341.937, -43.0341, 0.52 ) }
    dend_20 { pt3dadd( -77.0674, -341.894, -42.0301, 0.29 ) }
    dend_20 { pt3dadd( -77.0305, -341.892, -41.9788, 0.29 ) }
    dend_20 { pt3dadd( -76.2894, -341.848, -40.9501, 0.44 ) }
    dend_20 { pt3dadd( -75.4732, -341.8, -39.8173, 0.22 ) }
    dend_20 { pt3dadd( -74.9473, -341.753, -39.2319, 0.66 ) }
    dend_20 { pt3dadd( -74.5508, -341.719, -38.7988, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 94/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -80.533, -342.068, -47.2515, 1.4 ) }
    dend_15 { pt3dadd( -81.4133, -343.498, -46.359, 1.4 ) }
    dend_15 { pt3dadd( -81.8023, -344.13, -45.9646, 1.62 ) }
    dend_15 { pt3dadd( -82.264, -344.88, -45.4964, 1.47 ) }
    dend_15 { pt3dadd( -82.5581, -345.358, -45.1982, 1.47 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 99/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -82.5581, -345.358, -45.1982, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_19 { pt3dadd( -84.843, -346.751, -47.343, 0.22 ) }
    dend_19 { pt3dadd( -86.1994, -347.503, -48.4691, 0.22 ) }
    dend_19 { pt3dadd( -86.8117, -347.79, -48.9461, 0.22 ) }
    dend_19 { pt3dadd( -86.8667, -347.814, -48.9875, 0.22 ) }
    dend_19 { pt3dadd( -87.7098, -348.124, -49.6485, 0.52 ) }
    dend_19 { pt3dadd( -88.7993, -348.46, -50.4834, 0.59 ) }
    dend_19 { pt3dadd( -89.8493, -348.655, -51.2985, 0.22 ) }
    dend_19 { pt3dadd( -90.8647, -348.815, -52.2635, 0.22 ) }
    dend_19 { pt3dadd( -90.9102, -348.822, -52.3161, 0.22 ) }
    dend_19 { pt3dadd( -92.0342, -349.054, -53.7101, 0.22 ) }
    dend_19 { pt3dadd( -93.1704, -349.348, -55.1936, 0.88 ) }
    dend_19 { pt3dadd( -94.8774, -349.89, -57.4854, 0.29 ) }
    dend_19 { pt3dadd( -96.3448, -350.458, -59.5717, 0.22 ) }
    dend_19 { pt3dadd( -97.9198, -351.261, -61.8449, 0.22 ) }
    dend_19 { pt3dadd( -98.8286, -351.848, -63.1102, 0.22 ) }
    dend_19 { pt3dadd( -99.291, -352.235, -63.7181, 0.52 ) }
    dend_19 { pt3dadd( -99.3235, -352.269, -63.76, 0.52 ) }
    dend_19 { pt3dadd( -99.5514, -352.567, -63.9953, 0.52 ) }
    dend_19 { pt3dadd( -100.46, -353.858, -64.6472, 0.22 ) }
    dend_19 { pt3dadd( -101.274, -355.235, -65.0573, 0.22 ) }
    dend_19 { pt3dadd( -101.527, -355.695, -65.1898, 0.29 ) }
    dend_19 { pt3dadd( -102.101, -356.669, -65.5051, 0.29 ) }
    dend_19 { pt3dadd( -102.133, -356.721, -65.5228, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 23/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -82.5581, -345.358, -45.1982, 0.29 ) }
    dend_16 { pt3dadd( -83.2964, -346.373, -45.2772, 0.29 ) }
    dend_16 { pt3dadd( -83.6703, -347.045, -45.4244, 0.29 ) }
    dend_16 { pt3dadd( -84.1334, -348.067, -45.6897, 0.22 ) }
    dend_16 { pt3dadd( -84.4386, -348.887, -45.9036, 1.4 ) }
    dend_16 { pt3dadd( -84.5464, -349.235, -45.9825, 1.69 ) }
    dend_16 { pt3dadd( -84.7608, -349.993, -46.1404, 1.33 ) }
    dend_16 { pt3dadd( -85.1659, -351.707, -46.4661, 0.74 ) }
    dend_16 { pt3dadd( -85.3485, -352.587, -46.6106, 0.66 ) }
    dend_16 { pt3dadd( -85.475, -353.388, -46.6947, 0.52 ) }
    dend_16 { pt3dadd( -85.6269, -354.273, -46.7317, 0.52 ) }
    dend_16 { pt3dadd( -85.8294, -355.152, -46.7078, 0.96 ) }
    dend_16 { pt3dadd( -85.9624, -355.548, -46.6611, 1.4 ) }
    dend_16 { pt3dadd( -86.3646, -356.393, -46.4503, 1.47 ) }
    dend_16 { pt3dadd( -86.873, -357.27, -46.1889, 0.29 ) }
    dend_16 { pt3dadd( -87.3177, -357.939, -45.9664, 0.29 ) }
    dend_16 { pt3dadd( -87.569, -358.3, -45.8161, 0.59 ) }
    dend_16 { pt3dadd( -87.7159, -358.515, -45.7085, 0.59 ) }
    dend_16 { pt3dadd( -88.2245, -359.276, -45.3027, 0.29 ) }
    dend_16 { pt3dadd( -88.4388, -359.6, -45.1268, 0.59 ) }
    dend_16 { pt3dadd( -88.5851, -359.825, -45.0012, 0.59 ) }
    dend_16 { pt3dadd( -89.2878, -361.149, -44.2386, 0.29 ) }
    dend_16 { pt3dadd( -89.5103, -361.632, -43.9458, 0.29 ) }
    dend_16 { pt3dadd( -89.5306, -361.683, -43.9134, 0.29 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 47/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -89.5306, -361.683, -43.9134, 0.66 ) }
    dend_18 { pt3dadd( -90.0018, -361.73, -43.4025, 0.66 ) }
    dend_18 { pt3dadd( -90.3475, -361.723, -43.0296, 0.81 ) }
    dend_18 { pt3dadd( -91.9986, -361.351, -40.7286, 0.22 ) }
    dend_18 { pt3dadd( -92.6352, -361.184, -39.7455, 0.22 ) }
    dend_18 { pt3dadd( -93.2382, -361.038, -38.6542, 0.37 ) }
    dend_18 { pt3dadd( -93.6484, -360.927, -37.8493, 0.22 ) }
    dend_18 { pt3dadd( -93.904, -360.845, -37.3126, 0.44 ) }
    dend_18 { pt3dadd( -95.0824, -360.464, -34.6336, 0.29 ) }
    dend_18 { pt3dadd( -95.7533, -360.222, -33.0163, 0.29 ) }
    dend_18 { pt3dadd( -96.7518, -359.908, -30.5322, 0.44 ) }
    dend_18 { pt3dadd( -97.1347, -359.843, -29.6571, 0.37 ) }
    dend_18 { pt3dadd( -97.5012, -359.833, -28.8972, 0.29 ) }
    dend_18 { pt3dadd( -98.3169, -359.919, -27.4193, 0.59 ) }
    dend_18 { pt3dadd( -99.0197, -360.086, -26.4252, 0.37 ) }
    dend_18 { pt3dadd( -99.8136, -360.316, -25.5033, 0.37 ) }
    dend_18 { pt3dadd( -100.48, -360.558, -24.9009, 0.29 ) }
    dend_18 { pt3dadd( -101.135, -360.859, -24.3445, 0.29 ) }
    dend_18 { pt3dadd( -102.296, -361.469, -23.4271, 0.29 ) }
    dend_18 { pt3dadd( -103.553, -362.159, -22.5205, 0.29 ) }
    dend_18 { pt3dadd( -104.198, -362.519, -22.0759, 0.29 ) }
    dend_18 { pt3dadd( -104.657, -362.754, -21.7675, 0.29 ) }
    dend_18 { pt3dadd( -105.621, -363.189, -21.1142, 0.44 ) }
    dend_18 { pt3dadd( -106.103, -363.389, -20.8064, 0.44 ) }
    dend_18 { pt3dadd( -107.515, -363.932, -19.8005, 0.29 ) }
    dend_18 { pt3dadd( -107.974, -364.087, -19.3965, 0.29 ) }
    dend_18 { pt3dadd( -108.457, -364.214, -18.8707, 0.29 ) }
    dend_18 { pt3dadd( -109.029, -364.358, -18.0618, 0.29 ) }
    dend_18 { pt3dadd( -109.451, -364.51, -17.2512, 0.52 ) }
    dend_18 { pt3dadd( -110.258, -365.125, -14.7609, 0.29 ) }
    dend_18 { pt3dadd( -110.485, -365.468, -13.5931, 0.29 ) }
    dend_18 { pt3dadd( -110.619, -365.777, -12.6186, 0.29 ) }
    dend_18 { pt3dadd( -110.797, -366.297, -10.9186, 0.29 ) }
    dend_18 { pt3dadd( -110.893, -366.653, -9.66888, 0.37 ) }
    dend_18 { pt3dadd( -111.026, -367.047, -8.12884, 0.37 ) }
    dend_18 { pt3dadd( -111.291, -367.483, -6.47038, 0.29 ) }
    dend_18 { pt3dadd( -111.312, -367.503, -6.39305, 0.29 ) }
    dend_18 { pt3dadd( -111.849, -367.812, -5.04332, 0.29 ) }
    dend_18 { pt3dadd( -111.885, -367.819, -4.98331, 0.29 ) }
    dend_18 { pt3dadd( -112.728, -367.912, -3.86242, 0.29 ) }
    dend_18 { pt3dadd( -113.533, -368.043, -2.98114, 0.29 ) }
    dend_18 { pt3dadd( -113.901, -368.157, -2.63802, 0.37 ) }
    dend_18 { pt3dadd( -114.387, -368.391, -2.24528, 0.37 ) }
    dend_18 { pt3dadd( -115.462, -369.068, -1.57788, 0.29 ) }
    dend_18 { pt3dadd( -116.112, -369.499, -1.26782, 0.29 ) }
    dend_18 { pt3dadd( -116.991, -370.105, -0.979207, 0.29 ) }
    dend_18 { pt3dadd( -117.774, -370.639, -0.783685, 0.29 ) }
    dend_18 { pt3dadd( -118.736, -371.312, -0.591766, 0.29 ) }
    dend_18 { pt3dadd( -119.613, -371.962, -0.458968, 0.29 ) }
    dend_18 { pt3dadd( -120.493, -372.646, -0.269535, 0.29 ) }
    dend_18 { pt3dadd( -121.224, -373.209, -0.0371238, 0.29 ) }
    dend_18 { pt3dadd( -121.304, -373.275, 0.00363418, 0.29 ) }
    dend_18 { pt3dadd( -121.925, -373.902, 0.474875, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_18 { pt3dadd( -122.602, -374.738, 1.25768, 0.22 ) }
    dend_18 { pt3dadd( -123.567, -376.203, 2.65815, 0.22 ) }
    dend_18 { pt3dadd( -123.602, -376.268, 2.72808, 0.22 ) }
    dend_18 { pt3dadd( -124.011, -377.102, 3.70351, 0.29 ) }
    dend_18 { pt3dadd( -124.168, -377.458, 4.14052, 0.29 ) }
    dend_18 { pt3dadd( -124.471, -378.235, 5.17279, 0.29 ) }
    dend_18 { pt3dadd( -124.695, -378.902, 6.07254, 0.29 ) }
    dend_18 { pt3dadd( -125.093, -380.317, 7.74889, 0.59 ) }
    dend_18 { pt3dadd( -125.157, -380.56, 8.0291, 0.37 ) }
    dend_18 { pt3dadd( -125.265, -381.01, 8.51955, 0.29 ) }
    dend_18 { pt3dadd( -125.293, -381.425, 9.01811, 0.29 ) }
    dend_18 { pt3dadd( -129.131, -384.647, 17.6715, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 12/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -89.5306, -361.683, -43.9134, 0.88 ) }
    dend_17 { pt3dadd( -89.8141, -362.102, -43.9954, 0.88 ) }
    dend_17 { pt3dadd( -90.1254, -362.577, -44.0249, 0.88 ) }
    dend_17 { pt3dadd( -90.689, -363.418, -44.0263, 0.22 ) }
    dend_17 { pt3dadd( -91.1387, -364.013, -43.9226, 0.22 ) }
    dend_17 { pt3dadd( -91.6111, -364.607, -43.7285, 0.22 ) }
    dend_17 { pt3dadd( -92.2833, -365.429, -43.3833, 0.22 ) }
    dend_17 { pt3dadd( -92.783, -366.0, -43.0412, 0.66 ) }
    dend_17 { pt3dadd( -92.9464, -366.184, -42.8985, 0.66 ) }
    dend_17 { pt3dadd( -93.7919, -367.18, -41.9943, 0.22 ) }
    dend_17 { pt3dadd( -94.171, -367.678, -41.5625, 0.22 ) }
    dend_17 { pt3dadd( -94.2384, -367.762, -41.4907, 0.22 ) }
    dend_17 { pt3dadd( -94.506, -368.091, -41.2293, 0.81 ) }
    dend_17 { pt3dadd( -94.7338, -368.394, -41.0223, 0.96 ) }
    dend_17 { pt3dadd( -95.4781, -369.478, -40.3832, 0.22 ) }
    dend_17 { pt3dadd( -95.9352, -370.238, -40.0772, 0.74 ) }
    dend_17 { pt3dadd( -96.2327, -370.727, -39.916, 1.11 ) }
    dend_17 { pt3dadd( -96.2681, -370.785, -39.8991, 1.11 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_25, dend_0, dend_48, dend_45, dend_41, dend_26, dend_4, dend_1, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_36, dend_27, dend_24, dend_5, dend_3, dend_2, dend_40, dend_37, dend_35, dend_28, dend_23, dend_6, dend_39, dend_38, dend_34, dend_29, dend_8, dend_7, dend_31, dend_30, dend_22, dend_9, dend_33, dend_32, dend_11, dend_10, dend_13, dend_12, dend_21, dend_14, dend_20, dend_15, dend_19, dend_16, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_44, dend_25, dend_0, dend_48, dend_45, dend_41, dend_26, dend_4, dend_1, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_36, dend_27, dend_24, dend_5, dend_3, dend_2, dend_40, dend_37, dend_35, dend_28, dend_23, dend_6, dend_39, dend_38, dend_34, dend_29, dend_8, dend_7, dend_31, dend_30, dend_22, dend_9, dend_33, dend_32, dend_11, dend_10, dend_13, dend_12, dend_21, dend_14, dend_20, dend_15, dend_19, dend_16, dend_18, dend_17]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_41 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_50 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_47 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_46 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_36 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_24 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_40 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_37 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_35 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_39 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_34 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_30 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_22 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_9 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_13 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_18 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_45 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_27 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_28 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_29 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_31 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_32 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_6 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_7 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_33 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_8 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_43 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_38 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_10 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_12 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_14 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_15 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_21 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_20 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_17 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_19 OneSecGrp_SectionRef_51.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_41 nseg = 7
    dend_4 nseg = 3
    dend_1 nseg = 3
    dend_50 nseg = 9
    dend_47 nseg = 9
    dend_46 nseg = 7
    dend_36 nseg = 3
    dend_24 nseg = 5
    dend_3 nseg = 5
    dend_2 nseg = 3
    dend_40 nseg = 3
    dend_37 nseg = 7
    dend_35 nseg = 5
    dend_23 nseg = 3
    dend_39 nseg = 5
    dend_34 nseg = 5
    dend_30 nseg = 9
    dend_22 nseg = 3
    dend_9 nseg = 7
    dend_11 nseg = 3
    dend_13 nseg = 3
    dend_18 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L4_LBC_23aa2e3048_0_0


