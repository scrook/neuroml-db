// Cell: cACint209_L23_SBC_7b122f5ac9_0_0
/*
{
  "id" : "cACint209_L23_SBC_7b122f5ac9_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.64474, 5.38609, 0.0, 2.72918", "-4.94488, 4.87435, 0.0, 4.81414", "-4.24503, 4.3626, 0.0, 7.1492", "-3.54517, 3.85086, 0.0, 8.53401", "-2.84532, 3.33911, 0.0, 9.57564", "-2.14546, 2.82737, 0.0, 10.8503", "-1.44561, 2.31563, 0.0, 12.1522", "-0.745753, 1.80388, 0.0, 12.8799", "-0.0458981, 1.29214, 0.0, 13.4334", "0.653957, 0.780393, 0.0, 13.9226", "1.35381, 0.268649, 0.0, 14.2619", "2.05367, -0.243096, 0.0, 14.3692", "2.75352, -0.75484, 0.0, 14.1641", "3.45338, -1.26658, 0.0, 13.1753", "4.15323, -1.77833, 0.0, 12.1789", "4.85309, -2.29007, 0.0, 11.1057", "5.55294, -2.80182, 0.0, 9.95742", "6.2528, -3.31356, 0.0, 8.56382", "6.95265, -3.82531, 0.0, 6.88712", "7.65251, -4.33705, 0.0, 5.18943", "8.35236, -4.84879, 0.0, 3.05405" ]
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "6.1315, -1.77316, -8.75, 1.68", "6.7083, -3.26344, -9.49129, 1.68", "7.31955, -4.84274, -10.2769, 1.92", "7.68985, -5.79948, -10.7528, 2.04", "8.03676, -6.69578, -11.1986, 2.04" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000012714525545
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-1.8885, 4.26209, -20.04, 1.8", "-3.07357, 4.8458, -21.1004, 1.8", "-4.44751, 5.52254, -22.3299, 2.04", "-5.32127, 5.95292, -23.1117, 2.04", "-8.36423, 7.45173, -25.8346, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000012714525545
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-0.4985, 7.06034, -12.5, 1.44", "-0.427786, 8.61027, -12.494, 0.96", "-0.395407, 9.93624, -12.4868, 0.96", "-0.378927, 11.3651, -12.4353, 0.6", "-0.361742, 12.404, -12.3892, 0.6", "-0.304375, 13.497, -12.3397, 0.6", "-0.0897951, 15.4739, -12.2211, 1.32", "0.129983, 16.6661, -12.136, 0.84", "0.727755, 18.9424, -11.8096, 1.08", "1.45314, 21.2438, -11.3516, 0.72", "2.08529, 22.96, -10.8701, 0.72", "2.77277, 24.5771, -10.3147, 0.96", "3.31639, 25.7494, -9.85868, 1.44", "4.51938, 28.3566, -8.80415, 0.24", "4.92108, 29.2044, -8.46554, 0.24", "5.93193, 31.3221, -7.65578, 1.44", "6.53121, 32.5423, -7.23499, 0.48", "7.3763, 34.2166, -6.81384, 0.72", "8.19431, 35.6958, -6.59309, 0.84", "9.33949, 37.4726, -6.59256, 0.84", "10.2165, 38.5914, -6.83675, 0.84", "11.2929, 39.7366, -7.38314, 0.24", "12.289, 40.724, -8.01668, 0.84", "12.8597, 41.3007, -8.45363, 0.84", "13.5297, 42.0811, -9.11468, 1.08", "15.2448, 44.7646, -11.36, 0.36", "15.617, 45.5677, -11.9221, 0.36", "15.998, 46.69, -12.5409, 0.96", "16.3487, 47.961, -13.0277, 0.96", "16.6861, 49.4627, -13.3982, 0.84", "16.9373, 50.6528, -13.4019, 0.12", "17.3999, 52.496, -12.8352, 0.12", "17.5973, 53.0519, -12.5398, 1.08", "18.0647, 53.7868, -11.8414, 1.08", "18.523, 54.2336, -11.1914, 1.08", "19.631, 55.1162, -9.49263, 0.48", "20.3376, 55.6475, -8.47877, 0.48", "20.728, 55.997, -7.99797, 0.24", "21.0872, 56.3991, -7.56148, 0.24", "21.5101, 57.0459, -7.02901, 0.96", "22.2335, 58.5159, -6.12903, 0.96", "22.6486, 59.599, -5.63874, 0.6", "23.0977, 60.9313, -5.12045, 0.6", "23.5015, 62.2278, -4.69377, 0.12", "23.948, 63.6301, -4.29446, 0.12", "24.3355, 64.6932, -4.0537, 0.12", "24.6883, 65.6045, -3.89453, 0.6", "25.0575, 66.5688, -3.72699, 0.6", "25.4059, 67.5448, -3.58035, 0.48", "25.8553, 68.8684, -3.43418, 0.48", "26.3161, 70.1905, -3.30981, 0.48", "26.6104, 71.0674, -3.22959, 0.6", "26.8672, 71.8446, -3.14649, 0.24", "27.3687, 73.516, -2.97829, 0.24", "27.5025, 74.0803, -2.92835, 0.24", "27.6325, 74.9153, -2.87047, 0.72", "27.7641, 76.2069, -2.8083, 0.72", "27.8074, 76.8008, -2.79508, 0.12", "27.9032, 78.9075, -2.75241, 0.12", "27.9044, 80.1647, -2.72677, 0.84", "27.8493, 81.4407, -2.70627, 0.6", "27.8066, 81.8524, -2.70372, 0.12", "27.705, 82.5857, -2.70472, 0.12", "27.6087, 83.2814, -2.71125, 0.84", "27.5053, 84.0237, -2.71983, 0.12", "27.4462, 84.613, -2.72758, 0.12", "27.2717, 86.5882, -2.75646, 0.12", "27.2066, 87.636, -2.77237, 0.24", "27.1677, 88.6784, -2.78867, 0.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000012714525545,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-3.5785, -4.91266, -4.33, 2.52", "-3.63104, -5.81703, -4.25338, 2.04", "-3.70488, -7.08792, -4.1457, 1.92", "-3.77872, -8.35881, -4.03802, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000012714525545
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "7.6015, -5.83891, -3.41, 2.04", "8.32344, -7.19744, -2.54475, 1.56", "9.22304, -8.8903, -1.46656, 1.44", "10.2067, -10.7413, -0.287635, 1.8", "10.8907, -12.0284, 0.532124, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000012714525545
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "5.9615, 5.03234, -3.98, 1.08", "5.89751, 6.74535, -3.47435, 1.08", "5.86738, 8.86857, -2.54753, 1.32", "5.9773, 10.5736, -1.70784, 0.84", "6.46588, 13.4634, -0.195577, 0.96", "6.84214, 14.6863, 0.473533, 1.08", "7.02469, 15.2796, 0.798156, 1.08", "7.56548, 16.9056, 1.99822, 1.08", "7.94988, 17.7173, 2.85187, 1.32", "8.54336, 18.4388, 3.76982, 1.32", "9.81607, 19.0834, 4.3952, 0.96" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000012714525545
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "8.8915, -1.30516, -0.42, 1.68", "10.0781, -1.40385, -0.701631, 1.08", "11.54, -1.43462, -1.00807, 1.08", "13.6129, -1.37759, -1.39055, 1.08", "15.6217, -1.32231, -1.76123, 1.44", "17.1552, -1.28012, -2.04419, 1.2", "18.2332, -1.25046, -2.2431, 1.32", "19.4786, -1.16639, -2.46599, 1.32", "20.3789, -1.05244, -2.59183, 1.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000012714525545
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.35236, -4.84879, 0.0, 0.676437", "20.4607, -13.7026, 0.0, 0.676437", "32.569, -22.5563, 0.0, 0.676437" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "8.03676, -6.69578, -11.1986, 0.6", "7.44085, -6.44772, -11.2312, 0.6", "7.04503, -6.27878, -11.3143, 0.6", "6.27718, -5.9969, -11.4943, 0.6", "5.45365, -5.77394, -11.6752, 0.6", "4.96857, -5.6923, -11.7741, 0.6", "4.22343, -5.65516, -11.9131, 0.6", "2.78895, -5.79717, -12.165, 0.6", "1.99683, -6.01845, -12.3676, 0.6", "1.04989, -6.53987, -12.7042, 0.6", "0.476224, -7.13465, -13.1077, 0.6", "0.297677, -8.02608, -13.8611, 0.6", "0.418308, -8.9007, -14.643, 0.6", "0.822919, -10.2676, -15.8938, 0.96", "1.15057, -11.1877, -16.7226, 0.96", "1.86499, -13.0621, -18.2908, 0.6", "2.20441, -13.9351, -18.9906, 0.84", "2.45859, -14.5878, -19.474, 0.84", "2.91675, -15.8498, -20.2919, 1.2", "3.30777, -16.8075, -21.0746, 1.2", "3.73521, -17.8735, -22.0939, 0.36", "4.08242, -18.7979, -23.0175, 0.36", "4.33401, -19.4017, -23.6744, 0.36", "4.54756, -19.9139, -24.2396, 0.96", "6.07891, -23.6769, -28.4263, 0.96", "6.25655, -24.1625, -28.9882, 1.08", "6.4455, -24.8553, -29.8047, 1.08", "6.54416, -25.838, -30.8448, 0.96", "6.37522, -27.0901, -31.908, 0.36", "6.17265, -27.4669, -32.12, 0.12", "5.83759, -27.8034, -32.2357, 0.12", "5.30569, -28.2151, -32.5034, 0.84", "4.82703, -28.5359, -32.7866, 1.2", "4.13167, -28.9326, -33.218, 1.2", "2.23899, -29.8749, -34.4845, 0.48", "0.671408, -30.6366, -35.5615, 0.36", "-0.407258, -31.169, -36.3994, 0.12", "-0.917153, -31.4449, -36.8384, 1.2", "-1.31766, -31.6863, -37.2103, 0.12", "-2.1526, -32.2193, -37.9936, 0.12", "-2.82614, -32.6703, -38.613, 1.2", "-4.34936, -33.6334, -40.0587, 0.12", "-4.87105, -33.9396, -40.5117, 0.12", "-5.46457, -34.2448, -41.0147, 0.12", "-6.23462, -34.6244, -41.6642, 0.12", "-7.16569, -35.0429, -42.3877, 1.2", "-8.20913, -35.3879, -43.2064, 1.32", "-9.25065, -35.6379, -43.9274, 0.12", "-10.0358, -35.7946, -44.553, 0.24", "-10.2351, -35.834, -44.7286, 0.24", "-10.6688, -35.9259, -45.1384, 0.24", "-11.9517, -36.1771, -46.2658, 0.96", "-12.7095, -36.3476, -46.9121, 1.08", "-13.945, -36.7505, -48.0683, 0.12", "-14.298, -36.9177, -48.3926, 0.12", "-14.7713, -37.1867, -48.8279, 0.12", "-15.4177, -37.6208, -49.3978, 0.12", "-15.8419, -37.944, -49.7382, 0.12", "-16.726, -38.6576, -50.4252, 0.72", "-17.1529, -39.0188, -50.7187, 1.08", "-17.4967, -39.3421, -50.987, 0.24", "-17.8804, -39.7708, -51.3337, 0.24", "-18.4448, -40.484, -51.9277, 1.2", "-18.9021, -41.0054, -52.3892, 1.56" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "8.03676, -6.69578, -11.1986, 1.2", "8.67556, -9.67057, -11.3534, 1.2", "9.05575, -10.6629, -11.3718, 1.08", "9.74653, -12.1177, -11.2616, 1.08", "10.2116, -13.0587, -11.154, 0.96", "10.8414, -14.3294, -10.991, 0.96", "11.4381, -15.5481, -10.8308, 0.96", "12.0852, -16.7886, -10.5623, 0.96", "12.72, -18.0247, -10.33, 0.84", "13.31, -19.2986, -10.1128, 0.84", "13.6128, -20.0747, -9.96719, 0.84", "13.8625, -20.8772, -9.81423, 0.84", "14.1333, -21.8779, -9.63377, 1.44", "14.388, -22.7595, -9.49199, 1.08", "14.923, -24.185, -9.32082, 0.72", "15.2566, -24.8349, -9.24296, 0.72", "15.8998, -25.8172, -9.13705, 0.84", "16.5192, -26.6126, -9.0696, 0.84", "17.1086, -27.2924, -9.02831, 0.84", "17.9144, -28.2504, -9.00577, 1.08", "18.6823, -29.2502, -9.07927, 1.32", "19.2994, -30.2258, -9.19116, 0.96", "19.7553, -31.1569, -9.32539, 0.96", "19.9866, -31.812, -9.46079, 0.96", "20.4004, -33.4586, -9.86601, 0.96", "20.6545, -34.8259, -10.2351, 1.2", "20.7867, -35.8303, -10.5312, 1.44", "20.863, -36.6312, -10.7882, 1.44", "20.9912, -38.0742, -11.29, 1.2", "21.1096, -39.0885, -11.6704, 1.2", "21.2962, -40.1435, -12.0823, 1.2" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "8.03676, -6.69578, -11.1986, 1.32", "8.6858, -5.25267, -12.584, 1.32", "9.16153, -4.1949, -13.5995, 1.08", "9.52158, -3.39433, -14.3681, 1.08", "9.85693, -2.6487, -15.0839, 1.2", "10.1913, -1.90529, -15.7976, 1.2", "10.9907, -0.127789, -17.504, 1.44" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-8.36423, 7.45173, -25.8346, 1.2", "-8.06893, 5.34003, -25.4635, 1.2", "-7.8774, 4.08305, -25.2853, 1.08", "-7.63005, 2.56963, -25.1104, 1.08", "-7.45404, 1.47776, -25.0059, 0.96", "-7.31129, 0.564812, -24.9327, 1.08", "-7.18839, -0.307176, -24.8732, 1.08", "-7.01915, -1.34391, -24.8787, 1.08", "-6.85207, -2.4102, -24.8857, 1.08", "-6.71273, -3.44453, -24.8943, 1.08", "-6.64882, -4.02043, -24.9002, 1.08", "-6.56504, -4.86821, -24.9111, 0.96" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-8.36423, 7.45173, -25.8346, 0.6", "-9.41102, 7.41954, -25.8915, 0.6", "-9.79, 7.43137, -25.9067, 0.6", "-10.1626, 7.4824, -25.9182, 0.6", "-10.9686, 7.71315, -25.9141, 0.84", "-11.432, 7.87525, -25.9041, 0.96", "-12.1041, 8.12614, -25.8847, 0.96", "-12.8434, 8.43613, -25.904, 1.08", "-13.7077, 8.79929, -25.973, 0.96", "-15.056, 9.33096, -26.1455, 0.36", "-15.621, 9.51389, -26.2867, 0.48", "-15.9492, 9.56004, -26.4268, 0.48", "-17.1789, 9.34846, -27.2295, 0.84", "-17.6225, 9.12827, -27.5853, 0.96", "-18.0305, 8.84123, -27.976, 0.96", "-18.8657, 8.18855, -28.8083, 0.84", "-19.2168, 7.93811, -29.1302, 0.84", "-19.7506, 7.65491, -29.5317, 0.84", "-20.2143, 7.52227, -29.7652, 0.84", "-21.3575, 7.35603, -30.2217, 0.96", "-22.0475, 7.31031, -30.4217, 0.96", "-22.5338, 7.30706, -30.4818, 0.96", "-23.4626, 7.35386, -30.5222, 0.84", "-24.6611, 7.48101, -30.4919, 0.84", "-25.2421, 7.59, -30.4387, 0.72", "-26.1826, 7.85309, -30.2909, 0.72", "-27.4366, 8.33963, -30.1403, 0.48", "-28.1954, 8.68886, -30.0766, 0.72", "-28.6468, 8.91753, -30.0564, 0.96", "-29.4767, 9.38565, -30.0536, 1.2", "-30.5094, 9.99569, -30.0892, 0.84", "-31.6616, 10.7166, -30.2456, 0.6", "-32.1574, 11.0302, -30.3491, 0.6", "-32.9562, 11.5329, -30.5281, 0.96", "-33.8036, 12.0647, -30.717, 0.96", "-34.6936, 12.6296, -30.8383, 0.12", "-35.8477, 13.3931, -30.886, 0.12", "-36.5298, 13.8645, -30.8403, 0.72", "-36.9557, 14.1782, -30.7846, 0.96", "-37.8419, 14.8489, -30.6104, 0.84", "-39.1907, 15.8414, -30.2718, 0.12", "-39.591, 16.1115, -30.1835, 0.12", "-39.9119, 16.3017, -30.129, 0.84", "-40.7515, 16.7578, -30.0768, 1.2", "-41.3311, 17.0363, -30.0862, 1.2", "-42.2652, 17.4597, -30.1527, 0.96", "-43.4433, 17.9794, -30.2977, 0.6", "-44.6572, 18.5417, -30.4317, 0.6", "-45.3803, 18.8853, -30.4614, 0.84", "-46.7903, 19.5727, -30.4241, 0.84", "-47.1872, 19.768, -30.3841, 0.24", "-47.7171, 20.0237, -30.2819, 0.48", "-48.4489, 20.3629, -30.0027, 0.48", "-49.6371, 20.8877, -29.4073, 0.12", "-49.9148, 21.0015, -29.2509, 0.84", "-50.2972, 21.1533, -29.0061, 0.96", "-50.6852, 21.296, -28.7643, 0.96", "-52.0622, 21.7486, -27.9482, 0.48", "-52.5243, 21.8836, -27.7131, 0.72", "-53.1804, 22.0612, -27.45, 0.96", "-54.8414, 22.455, -26.9032, 0.84", "-55.6273, 22.62, -26.6793, 0.48", "-56.3187, 22.7436, -26.5236, 0.48", "-57.1055, 22.8352, -26.4137, 0.84", "-57.8302, 22.8654, -26.3318, 0.84", "-59.1506, 22.8308, -26.1762, 0.48", "-59.8397, 22.7603, -26.1067, 0.48", "-60.3101, 22.6954, -26.0382, 0.84", "-60.97, 22.6142, -25.9026, 1.08", "-61.6806, 22.552, -25.7486, 0.72", "-62.72, 22.5604, -25.5651, 0.12", "-63.0761, 22.6019, -25.534, 0.12", "-63.5624, 22.6894, -25.5503, 0.48", "-64.0891, 22.7864, -25.5772, 0.48", "-65.2295, 22.9383, -25.6617, 0.12", "-66.0897, 22.9417, -25.7433, 0.12", "-66.7829, 22.8793, -25.8137, 0.6", "-67.448, 22.7876, -25.8254, 0.6", "-68.2703, 22.7064, -25.7837, 0.12", "-69.0305, 22.6451, -25.7038, 0.12", "-69.6236, 22.6437, -25.6133, 0.12", "-70.0655, 22.6773, -25.5566, 0.72", "-70.6968, 22.799, -25.4977, 1.2", "-71.8, 23.0399, -25.4371, 0.84", "-72.169, 23.1249, -25.4232, 0.48", "-73.0072, 23.308, -25.3853, 0.48", "-73.3633, 23.3568, -25.3681, 0.48", "-74.3288, 23.3964, -25.3219, 0.48", "-75.5858, 23.3252, -25.2864, 0.48", "-76.055, 23.2516, -25.2827, 0.12", "-76.5233, 23.1495, -25.2886, 0.12", "-77.3513, 22.9249, -25.3161, 0.12", "-77.7663, 22.8078, -25.3396, 0.48", "-78.3927, 22.6069, -25.3871, 0.48", "-78.8591, 22.4458, -25.3954, 0.84", "-79.4315, 22.2363, -25.3719, 1.08", "-80.333, 21.9083, -25.2832, 1.08", "-80.9105, 21.7178, -25.1964, 0.84", "-81.7138, 21.4878, -25.0412, 0.48", "-82.7772, 21.2162, -24.798, 0.12", "-83.9784, 20.899, -24.4289, 0.12", "-84.192, 20.8252, -24.3499, 0.48", "-84.4938, 20.6933, -24.2354, 0.48", "-85.0483, 20.4299, -24.0426, 0.48", "-85.9417, 20.0246, -23.7594, 0.48", "-87.0425, 19.5439, -23.4763, 1.08", "-88.2981, 19.0404, -23.1742, 0.36", "-88.8913, 18.8215, -22.9873, 0.36", "-89.4406, 18.6387, -22.7938, 0.36", "-90.3018, 18.401, -22.4779, 0.72", "-90.8612, 18.2641, -22.2736, 1.08", "-92.3855, 17.9259, -21.772, 0.48", "-93.8787, 17.6272, -21.2515, 0.36", "-94.1961, 17.5448, -21.1659, 0.36", "-94.981, 17.2567, -21.0367, 0.36", "-95.8311, 16.8287, -20.9991, 0.36", "-96.4099, 16.4467, -21.0326, 0.36", "-96.9291, 15.9714, -21.138, 0.6", "-98.0654, 14.6801, -21.5576, 0.12", "-98.4701, 14.1488, -21.7274, 0.12", "-98.8546, 13.5822, -21.9089, 0.36", "-99.1732, 13.0944, -22.0594, 0.96", "-99.7644, 12.0965, -22.336, 1.08", "-100.34, 11.0776, -22.555, 0.12", "-100.508, 10.7934, -22.595, 0.48", "-100.79, 10.3769, -22.6451, 0.6", "-101.191, 9.83849, -22.6613, 0.6", "-101.504, 9.4504, -22.6447, 0.6", "-102.326, 8.50322, -22.5386, 0.48", "-102.831, 7.94944, -22.4435, 0.12", "-104.237, 6.54384, -22.1735, 0.12", "-105.175, 5.67285, -21.9904, 0.84", "-105.866, 5.06714, -21.858, 0.84", "-106.457, 4.54895, -21.744, 0.48", "-106.826, 4.22614, -21.6759, 0.36", "-107.751, 3.48416, -21.5366, 0.36", "-108.191, 3.23629, -21.5071, 0.12", "-108.765, 2.96635, -21.5035, 0.12", "-109.638, 2.60107, -21.4975, 0.36", "-110.095, 2.41728, -21.4946, 0.12", "-111.418, 1.86328, -21.484, 0.48", "-113.937, 0.715854, -21.4605, 0.96", "-114.385, 0.510004, -21.4573, 0.12", "-115.309, 0.0803756, -21.4524, 0.12", "-115.771, -0.125863, -21.4507, 0.6", "-116.587, -0.508609, -21.4491, 0.84", "-117.649, -1.12516, -21.4503, 0.72", "-118.089, -1.42529, -21.4532, 0.12", "-118.452, -1.65304, -21.4572, 0.12", "-119.111, -2.02492, -21.4675, 0.12", "-119.444, -2.20206, -21.4718, 0.12", "-120.068, -2.51742, -21.4776, 0.12", "-120.984, -2.95802, -21.5753, 0.96", "-121.516, -3.21215, -21.6696, 0.12", "-122.118, -3.49151, -21.7945, 0.12", "-122.783, -3.79544, -21.947, 0.12", "-123.238, -3.98856, -22.0599, 0.12", "-124.587, -4.46521, -22.3948, 0.12", "-125.181, -4.62526, -22.5902, 0.6", "-125.639, -4.71878, -22.7502, 0.12", "-126.197, -4.81599, -22.9798, 0.12", "-126.739, -4.91453, -23.2168, 0.12", "-127.673, -5.10379, -23.6178, 1.32", "-128.861, -5.30827, -24.0677, 0.48", "-129.643, -5.40955, -24.4348, 0.48", "-130.373, -5.47295, -24.8148, 0.12", "-130.826, -5.48047, -25.0488, 0.12", "-131.496, -5.43792, -25.4009, 0.12", "-132.694, -5.32308, -26.0137, 0.12", "-133.822, -5.23553, -26.5122, 0.84", "-134.277, -5.21661, -26.706, 1.2", "-135.184, -5.24331, -27.0444, 0.12", "-135.694, -5.32275, -27.2176, 0.12", "-136.181, -5.4825, -27.3555, 0.12", "-136.71, -5.73928, -27.46, 0.6", "-137.15, -5.98611, -27.4986, 0.12", "-137.51, -6.21365, -27.5544, 0.12", "-138.495, -6.89384, -27.7444, 0.12", "-138.893, -7.17163, -27.8243, 0.96", "-139.365, -7.50481, -27.966, 1.08", "-139.962, -7.92135, -28.1915, 0.12", "-141.174, -8.68664, -28.7093, 0.12", "-141.446, -8.84466, -28.8315, 0.6", "-141.985, -9.14917, -29.0829, 0.6", "-142.839, -9.55635, -29.4423, 0.12", "-143.177, -9.66316, -29.5779, 0.12", "-144.136, -9.82581, -29.9276, 0.12", "-145.118, -9.88558, -30.2214, 0.12", "-145.701, -9.88385, -30.3671, 0.96", "-146.414, -9.85256, -30.5134, 1.2", "-147.705, -9.78964, -30.5855, 0.24", "-147.964, -9.78251, -30.5776, 0.24", "-148.227, -9.7831, -30.5493, 0.12", "-150.24, -9.77366, -30.2156, 0.12", "-150.709, -9.7823, -30.1171, 0.96", "-152.468, -9.94168, -29.6835, 0.12", "-153.15, -10.0514, -29.4476, 0.12", "-154.162, -10.2697, -29.0601, 0.12", "-154.801, -10.4642, -28.7969, 0.84", "-155.221, -10.6478, -28.6155, 0.12", "-156.145, -11.1174, -28.2594, 0.12", "-157.362, -11.8216, -27.7123, 0.84", "-157.73, -12.0806, -27.4824, 0.84", "-158.466, -12.6904, -26.9085, 0.12", "-158.951, -13.1209, -26.4913, 0.12", "-159.173, -13.3197, -26.2954, 0.6", "-160.542, -14.4782, -24.9929, 0.12", "-161.074, -14.9053, -24.5305, 0.12", "-161.471, -15.196, -24.1931, 0.12", "-161.796, -15.425, -23.9289, 0.84", "-162.238, -15.7166, -23.5653, 1.2", "-163.426, -16.4595, -22.5665, 1.2", "-164.115, -16.824, -22.0521, 1.2", "-164.604, -17.0199, -21.6802, 0.36", "-165.074, -17.1616, -21.2769, 0.96", "-166.507, -17.4216, -19.9766, 0.12", "-167.224, -17.4564, -19.3426, 0.12", "-167.993, -17.3448, -18.7509, 0.12", "-168.661, -17.1267, -18.2505, 1.08", "-169.6, -16.6731, -17.6192, 0.24", "-170.141, -16.3806, -17.3384, 0.24", "-170.91, -15.9299, -17.1191, 0.6", "-171.628, -15.4868, -16.9884, 0.6", "-172.298, -15.0742, -16.7887, 0.12", "-172.705, -14.8565, -16.581, 0.12", "-173.516, -14.4967, -16.0869, 0.12", "-173.975, -14.3188, -15.7464, 0.12", "-174.505, -14.161, -15.1739, 0.12", "-175.54, -13.9201, -13.8641, 0.96", "-176.393, -13.7542, -12.7248, 0.12", "-176.822, -13.6672, -12.1292, 0.12", "-177.085, -13.5873, -11.718, 0.12", "-178.599, -13.0824, -9.37891, 0.72", "-178.839, -12.9919, -9.03091, 0.72", "-179.069, -12.8832, -8.75031, 0.12", "-179.52, -12.641, -8.30786, 0.12", "-181.43, -11.5202, -6.72952, 0.48", "-182.895, -10.4984, -5.99485, 0.12", "-183.296, -10.1832, -5.85853, 0.12", "-183.758, -9.83637, -5.67625, 0.12", "-184.421, -9.34982, -5.41157, 0.48", "-184.63, -9.20581, -5.33007, 0.12", "-185.791, -8.47013, -4.93166, 0.12", "-187.668, -7.27273, -3.9378, 0.24", "-188.104, -6.95245, -3.66176, 0.24" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-8.36423, 7.45173, -25.8346, 1.2", "-8.76355, 9.1341, -25.8261, 1.2", "-9.23386, 11.1156, -25.816, 1.32", "-9.51416, 12.2965, -25.81, 1.32", "-9.92582, 14.0308, -25.8011, 1.32", "-10.3176, 15.6814, -25.7927, 1.44" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-3.77872, -8.35881, -4.03802, 0.84", "-4.19283, -9.47402, -3.67647, 0.84", "-4.96213, -11.1461, -3.08651, 0.84", "-5.63989, -12.1823, -2.63167, 0.84", "-6.29809, -12.6662, -2.23711, 0.84", "-7.44491, -13.0284, -1.64507, 0.84", "-8.2231, -13.1624, -1.2856, 0.84", "-9.13699, -13.1056, -0.904138, 0.84", "-10.7326, -12.7548, -0.17141, 0.96", "-12.8365, -12.2342, 0.933734, 0.6", "-13.8752, -11.9896, 1.51396, 0.6", "-14.6021, -11.842, 1.92466, 0.6", "-15.2824, -11.744, 2.34322, 0.6", "-17.6686, -11.6228, 3.8437, 0.96", "-19.2411, -11.7214, 4.86243, 0.72", "-20.0409, -11.8414, 5.37677, 0.72", "-20.9756, -12.0004, 6.00587, 0.72", "-22.0969, -12.223, 6.75706, 0.72", "-23.1963, -12.496, 7.43173, 0.72", "-24.6049, -12.9076, 8.03291, 0.96", "-25.3546, -13.062, 8.27937, 0.96" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-3.77872, -8.35881, -4.03802, 1.2", "-3.13485, -10.5985, -3.47007, 1.2", "-2.82807, -11.8436, -3.11597, 1.44", "-2.58077, -12.8474, -2.83053, 1.56", "-2.0453, -15.0208, -2.21247, 1.56", "-1.60193, -16.8204, -1.70071, 1.56", "-1.30158, -18.0395, -1.35404, 1.56", "-1.01051, -19.7206, -1.01052, 1.56" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "10.8907, -12.0284, 0.532124, 0.84", "12.252, -12.8323, 1.40653, 0.84", "13.2894, -13.6026, 2.13565, 0.84", "14.2559, -14.3474, 2.89258, 1.08", "16.112, -15.6855, 4.34288, 0.72", "16.8251, -16.1557, 4.88228, 0.72", "17.5884, -16.6094, 5.42938, 0.84", "18.2995, -17.0206, 5.97324, 0.72", "19.5822, -17.6461, 6.84626, 0.72", "20.3424, -17.9139, 7.27281, 1.08", "20.8841, -18.0411, 7.60017, 1.32", "21.4843, -18.1578, 8.01569, 0.96", "22.3931, -18.3277, 8.62218, 1.2", "23.3097, -18.5052, 9.34561, 1.32", "24.5364, -18.7886, 10.3759, 0.96", "27.1497, -19.4038, 12.6457, 0.84", "27.7277, -19.5118, 13.1397, 0.96", "28.722, -19.6169, 13.9446, 1.56", "31.1114, -19.7845, 15.9274, 0.96", "32.15, -19.7987, 16.7547, 0.96", "32.9857, -19.7494, 17.2821, 0.96", "34.3015, -19.5511, 17.8265, 0.96", "35.4668, -19.2826, 18.3338, 0.96" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "10.8907, -12.0284, 0.532124, 0.84", "11.4729, -13.6376, 1.80481, 0.84", "11.9362, -14.9189, 2.69935, 0.84", "12.3653, -16.0621, 3.41522, 0.84", "13.6125, -19.0781, 5.11776, 0.72", "14.2823, -20.5441, 5.96932, 0.72", "14.8347, -21.5952, 6.58446, 0.96", "15.3814, -22.4416, 7.06329, 0.96", "15.9088, -23.1685, 7.52697, 0.72", "16.6109, -24.1268, 8.15654, 0.72", "17.5397, -25.3677, 8.89727, 0.24", "18.3201, -26.3886, 9.60285, 0.24", "18.7673, -27.0365, 10.0775, 0.6", "20.0543, -29.2422, 11.4618, 0.84", "20.4087, -29.9994, 11.9171, 0.84", "20.6919, -30.8024, 12.4402, 0.84", "20.9076, -31.5296, 12.9047, 0.84", "21.2295, -32.7224, 13.764, 0.6", "21.7531, -34.4903, 15.3206, 0.6", "22.4156, -36.5219, 17.0813, 0.6", "23.0397, -38.3626, 18.7842, 0.6", "23.1924, -38.8586, 19.2528, 0.6", "23.4296, -39.739, 20.0936, 0.84", "23.7168, -41.0871, 21.3417, 0.12", "24.0706, -42.8409, 23.178, 0.12", "24.0906, -43.5978, 23.471, 0.24", "23.9522, -44.6825, 23.3955, 0.24", "23.8257, -45.1786, 23.2899, 0.48", "23.5741, -45.8988, 22.975, 0.72" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "9.81607, 19.0834, 4.3952, 0.24", "10.7461, 19.6184, 6.34288, 0.24", "11.3285, 19.9345, 7.40598, 0.48", "12.1838, 20.3538, 8.84727, 0.48", "15.8688, 21.9927, 14.7413, 1.08", "16.494, 22.2344, 15.7131, 0.48", "17.4302, 22.5394, 17.1178, 0.12", "17.9005, 22.6642, 17.8142, 0.12", "18.4813, 22.7771, 18.6739, 0.12", "18.7185, 22.8125, 18.9679, 0.36", "19.6279, 22.954, 19.5258, 0.36", "20.1433, 23.1014, 19.9409, 0.36", "20.8979, 23.4169, 20.6322, 0.36", "23.1137, 24.5841, 22.3384, 0.6", "23.9154, 25.0405, 22.8839, 0.12", "24.3436, 25.3096, 23.1532, 0.12", "24.8106, 25.6729, 23.4367, 0.24", "24.989, 25.8407, 23.5393, 0.6", "26.0337, 26.8897, 24.0633, 0.6", "27.2376, 27.9669, 24.4748, 0.12", "27.898, 28.4958, 24.7718, 0.12", "28.8015, 29.2428, 25.2649, 0.12", "29.2998, 29.6957, 25.5995, 0.12", "29.8075, 30.2047, 26.0077, 0.48", "30.4268, 30.9373, 26.6576, 0.6", "30.7262, 31.2457, 26.8924, 0.6", "30.9772, 31.3564, 27.0907, 0.6", "37.0791, 35.6171, 33.699, 0.6", "41.2319, 40.0211, 41.5953, 0.6" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "9.81607, 19.0834, 4.3952, 0.36", "10.8289, 20.4469, 4.43047, 0.36", "11.3406, 21.2033, 4.44526, 0.36", "12.0915, 22.306, 4.46289, 0.48", "12.965, 23.5294, 4.48004, 0.6", "14.099, 24.9673, 4.49834, 0.6", "15.0251, 26.0435, 4.51071, 0.84", "15.9318, 27.0299, 4.51071, 0.36", "16.7983, 27.9722, 4.51071, 0.36", "17.3832, 28.6174, 4.51071, 0.36", "18.3331, 29.6792, 4.51071, 0.36", "19.1341, 30.6681, 4.51071, 0.48", "19.8073, 31.654, 4.33999, 0.48", "20.4665, 32.8314, 3.93174, 0.84", "20.9007, 33.8135, 3.5169, 0.48", "21.2463, 34.8408, 2.99224, 0.48", "21.7549, 36.7913, 1.93279, 0.48", "22.4413, 40.2623, 0.0731967, 0.6", "22.7447, 42.191, -0.930406, 0.6", "22.9485, 43.8894, -1.76804, 0.48", "23.2031, 47.1175, -3.26278, 0.48", "23.2526, 48.6254, -3.89101, 0.48", "23.2178, 51.2905, -4.80566, 0.6", "23.1213, 52.6551, -5.10723, 0.72", "22.9386, 54.1669, -5.35965, 0.84", "22.6898, 55.6963, -5.56224, 0.48", "22.4617, 56.9249, -5.64274, 0.72", "22.245, 58.0872, -5.71823, 0.72", "21.9736, 59.6795, -5.81577, 0.24", "21.8763, 60.3841, -5.84927, 0.12", "21.7891, 61.0807, -5.86953, 0.48", "21.6725, 62.0647, -5.8717, 0.72", "21.494, 64.0363, -5.87522, 0.72", "21.4651, 64.5583, -5.85208, 0.12", "21.4705, 65.7207, -5.75721, 0.12", "21.5201, 67.2354, -5.65415, 0.48", "21.5449, 67.7118, -5.62518, 0.12", "21.6179, 68.9854, -5.55776, 0.12", "21.7592, 70.7465, -5.49984, 0.84", "21.8978, 72.1975, -5.47796, 0.84", "22.1882, 74.4539, -5.4885, 0.12", "22.2124, 74.6176, -5.49243, 0.12", "22.3678, 75.7727, -5.54548, 0.12", "22.5399, 77.1973, -5.67441, 0.48", "22.5663, 77.4278, -5.70609, 0.12", "22.7634, 79.1841, -5.92991, 0.12", "22.8715, 79.9146, -6.00338, 1.08", "23.1238, 81.4163, -6.1588, 0.12", "23.2792, 82.2314, -6.24627, 0.12", "23.4662, 83.1226, -6.33558, 0.36", "23.5338, 83.3746, -6.36023, 0.12", "23.7229, 83.9151, -6.44612, 0.12", "23.9682, 84.4516, -6.55343, 0.48", "24.1128, 84.7443, -6.61777, 0.12", "24.4945, 85.5283, -6.77973, 0.12", "24.9854, 86.5611, -6.99951, 0.36", "25.4, 87.4472, -7.17592, 0.12", "25.8861, 88.4998, -7.37098, 0.12", "26.28, 89.3395, -7.51243, 0.96", "26.439, 89.6666, -7.59113, 0.96", "26.6912, 90.2186, -7.75364, 0.12", "27.0502, 91.0687, -8.02012, 0.12", "27.2439, 91.4951, -8.14657, 0.12", "27.3994, 91.815, -8.25703, 0.12", "28.1673, 93.2646, -8.77629, 0.12", "28.5593, 93.9586, -9.02055, 0.12", "28.9526, 94.6, -9.23554, 0.6", "29.4377, 95.3568, -9.43738, 0.84", "29.7544, 95.8767, -9.58204, 0.12", "30.0946, 96.5194, -9.74288, 0.12", "30.2594, 96.8969, -9.8433, 0.48", "30.4757, 97.4799, -10.06, 0.12", "30.7952, 98.5949, -10.5515, 0.12", "31.0605, 99.8291, -11.2132, 0.84", "31.2055, 100.559, -11.6194, 0.84", "31.402, 101.614, -12.1871, 0.12", "31.4971, 102.135, -12.4467, 0.12", "31.6409, 102.8, -12.6649, 0.36", "31.9326, 103.546, -12.7607, 0.12", "32.6179, 105.014, -12.683, 0.12", "33.0037, 105.794, -12.6164, 0.12", "33.2345, 106.26, -12.5776, 0.12", "34.18, 108.329, -12.4919, 0.12", "35.0184, 110.244, -12.4533, 0.12", "36.2226, 113.031, -12.3766, 0.12", "36.5773, 113.87, -12.3741, 0.96", "36.9595, 114.81, -12.4065, 0.12", "38.1587, 118.054, -12.7209, 0.12", "38.3483, 118.688, -12.8576, 0.84" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "20.3789, -1.05244, -2.59183, 0.72", "21.0933, -2.2792, -2.53352, 0.72", "21.8213, -3.48405, -2.35749, 0.6", "22.5601, -4.59004, -2.1412, 0.48", "23.5729, -5.98954, -1.76714, 0.48", "24.1053, -6.70243, -1.55244, 0.48", "24.5929, -7.35593, -1.33458, 0.84", "25.5896, -8.75283, -0.805012, 0.84", "26.2902, -9.67062, -0.418477, 0.6", "26.8742, -10.3373, -0.130299, 0.6", "27.4843, -10.9385, 0.157436, 0.6", "28.2704, -11.6634, 0.491184, 0.6", "28.8559, -12.1501, 0.695337, 0.36", "29.6011, -12.7142, 0.910033, 0.6", "30.5751, -13.4015, 1.19411, 0.96", "31.3169, -13.916, 1.40257, 0.96", "32.2178, -14.5461, 1.67028, 0.72", "33.4341, -15.4785, 2.09189, 0.72", "34.3226, -16.3053, 2.47593, 0.36", "34.6192, -16.6759, 2.63949, 0.36", "35.0091, -17.3809, 2.91632, 0.96", "35.3473, -18.1967, 3.21293, 1.2", "35.6435, -19.3243, 3.57998, 0.96", "35.7478, -20.2262, 3.80434, 0.96", "35.7718, -20.914, 3.94676, 1.2", "35.7902, -21.7497, 4.12915, 1.2" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "20.3789, -1.05244, -2.59183, 0.72", "21.4053, -0.02446, -1.95684, 0.72", "22.6454, 1.06352, -1.33809, 0.24", "23.2957, 1.57385, -1.06831, 0.24", "24.036, 2.11378, -0.800439, 0.24", "24.8048, 2.63512, -0.55734, 0.6", "25.373, 3.00236, -0.399703, 0.12", "25.7791, 3.24612, -0.344986, 0.12", "26.2171, 3.47023, -0.335441, 0.48", "26.4517, 3.59726, -0.331317, 0.48", "26.9819, 3.96183, -0.370346, 0.12", "27.3964, 4.3695, -0.449813, 0.36", "27.6798, 4.75508, -0.539615, 0.36", "27.9296, 5.15948, -0.641408, 0.12", "28.3294, 5.80907, -0.814486, 0.12", "28.9055, 6.66986, -1.08998, 1.32", "29.4763, 7.37017, -1.36422, 1.32", "30.0101, 7.80958, -1.57574, 0.12", "30.4189, 8.02244, -1.70051, 0.12", "31.1942, 8.37832, -1.78789, 0.48", "31.8139, 8.65401, -1.77065, 0.6", "32.6046, 9.00061, -1.66234, 0.12", "33.376, 9.30012, -1.48751, 0.12", "33.7698, 9.43821, -1.37764, 0.12", "35.6917, 10.1265, -0.778679, 0.6", "36.0815, 10.2611, -0.651546, 0.12", "36.8546, 10.5023, -0.40423, 0.12", "37.9093, 10.7768, -0.102755, 0.6", "39.0671, 11.0165, 0.175669, 0.84", "40.1413, 11.1907, 0.371192, 0.84", "40.9792, 11.2829, 0.466111, 0.84", "41.9322, 11.4206, 0.554448, 0.12", "42.6338, 11.5772, 0.571558, 0.12", "43.2688, 11.8062, 0.521235, 0.72", "43.8928, 12.222, 0.423237, 0.72", "43.9986, 12.3466, 0.387445, 0.12", "44.2236, 12.7426, 0.26592, 0.12", "44.5957, 13.6013, 5.75733E-4, 0.6", "44.8279, 14.1551, -0.17016, 0.6", "45.3573, 15.2736, -0.516327, 0.6", "45.689, 15.8378, -0.676199, 0.12", "45.9949, 16.2489, -0.823342, 0.12", "46.5207, 16.7499, -1.04675, 0.72", "47.1083, 17.1209, -1.25336, 0.72", "47.6482, 17.3185, -1.45801, 0.72", "48.6344, 17.54, -1.88867, 0.72", "49.8929, 17.7656, -2.4624, 0.12", "50.867, 17.9243, -2.94391, 0.12", "51.5019, 18.0366, -3.26342, 1.08", "52.8982, 18.3542, -3.87038, 0.12", "53.666, 18.5921, -4.13443, 0.12", "54.4089, 18.88, -4.28743, 0.12", "54.7102, 19.0319, -4.30011, 0.84", "55.5662, 19.5612, -4.29514, 0.84", "56.747, 20.3494, -4.21482, 0.48", "57.6988, 21.0134, -4.08696, 0.72", "58.1522, 21.3347, -4.00751, 0.12", "58.812, 21.8674, -3.88493, 0.12", "59.3386, 22.3565, -3.79002, 0.84", "59.8749, 22.9361, -3.70668, 0.84", "60.7383, 23.9685, -3.60458, 0.12", "61.331, 24.7804, -3.48389, 0.48", "62.1019, 25.9798, -3.29412, 0.72", "62.5755, 26.8033, -3.14436, 0.84", "63.2015, 27.8925, -2.93236, 0.12", "63.6982, 28.7589, -2.78332, 0.12", "64.2611, 29.723, -2.65097, 1.08", "64.7172, 30.449, -2.6233, 0.12", "64.9521, 30.7933, -2.63677, 0.12", "66.0791, 32.3933, -2.79659, 0.12", "66.6842, 33.2476, -2.93324, 0.84", "67.5147, 34.3839, -3.10124, 0.84", "68.3851, 35.433, -3.25022, 0.12", "68.9221, 36.0095, -3.30488, 0.12", "69.4653, 36.5393, -3.3173, 0.12", "69.7827, 36.8118, -3.28208, 0.48", "71.136, 37.7437, -2.95622, 0.12", "71.8476, 38.1644, -2.77636, 0.12", "72.3028, 38.4225, -2.6727, 0.48", "72.5357, 38.5452, -2.62884, 0.12", "73.1517, 38.8586, -2.54665, 0.12", "74.296, 39.3853, -2.46406, 0.12", "75.3073, 39.8532, -2.47061, 0.96", "76.3466, 40.3935, -2.46416, 0.96", "77.1056, 40.7942, -2.44845, 0.12", "77.8868, 41.1744, -2.41764, 0.12", "78.7135, 41.53, -2.37243, 0.12", "79.5682, 41.8808, -2.30829, 0.6", "80.8301, 42.4399, -2.19334, 0.12", "81.0416, 42.5535, -2.18251, 0.12", "81.8584, 43.0982, -2.18608, 0.12", "82.4509, 43.58, -2.19698, 0.48", "83.1937, 44.2819, -2.2197, 0.84", "83.7183, 44.8068, -2.34595, 0.84", "84.7074, 45.8572, -2.79188, 0.12", "85.2172, 46.5148, -3.14796, 0.12", "85.4788, 46.9576, -3.44419, 0.6", "85.6435, 47.2734, -3.679, 0.12", "86.5885, 49.3105, -5.42911, 0.12", "86.7588, 49.7087, -5.82541, 0.12", "87.112, 50.5539, -6.84487, 0.12", "87.5032, 51.3604, -7.92907, 1.08" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "32.569, -22.5563, 0.0, 0.6", "44.6773, -31.4101, 0.0, 0.6", "56.7856, -40.2638, 0.0, 0.6" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "-18.9021, -41.0054, -52.3892, 0.12", "-19.7112, -40.2813, -52.5772, 0.12", "-19.8279, -40.1005, -52.675, 0.12", "-20.0156, -39.5464, -53.1099, 0.12", "-20.1357, -39.147, -53.5315, 0.12", "-20.371, -38.3223, -54.3347, 0.12", "-20.6638, -37.2146, -55.4079, 0.12", "-20.7229, -36.9681, -55.6573, 0.12", "-20.976, -36.1987, -56.5511, 0.96", "-21.3232, -35.3236, -57.6677, 0.24", "-21.6317, -34.6287, -58.6008, 0.24", "-21.8681, -34.1532, -59.2647, 0.84", "-22.0484, -33.7868, -59.7586, 0.84", "-22.8848, -31.882, -62.3152, 0.48", "-23.0286, -31.5056, -62.7888, 0.12", "-23.1342, -31.1766, -63.1453, 0.12", "-23.3057, -30.4983, -63.8232, 0.48", "-23.4331, -29.7778, -64.3783, 0.12", "-23.4895, -29.2109, -64.7992, 0.12", "-23.5128, -28.4433, -65.2444, 0.12", "-23.5555, -27.4452, -65.8149, 0.12", "-23.6122, -26.7848, -66.2034, 1.2", "-23.7169, -25.9648, -66.6952, 1.2", "-24.0591, -23.6878, -68.142, 0.12", "-24.2408, -22.1879, -69.268, 0.12" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-18.9021, -41.0054, -52.3892, 0.12", "-19.8317, -41.7271, -52.8303, 0.12", "-20.24, -42.0872, -53.0479, 0.12", "-21.1424, -43.017, -53.6633, 0.12", "-21.523, -43.4465, -53.944, 0.12", "-22.121, -44.1262, -54.367, 0.96", "-22.7157, -44.789, -54.7576, 0.12", "-23.2547, -45.4521, -55.2766, 0.12", "-23.8542, -46.2689, -56.0173, 0.12", "-24.0879, -46.6042, -56.3422, 0.12", "-24.525, -47.1739, -56.9775, 0.12", "-24.8814, -47.5551, -57.4354, 1.08", "-26.5703, -49.1197, -59.4039, 0.12", "-26.9194, -49.4001, -59.7981, 0.12", "-27.5071, -49.7877, -60.3679, 0.48", "-28.518, -50.3673, -61.2084, 0.12", "-29.5673, -50.9183, -62.0515, 0.12", "-30.1768, -51.2351, -62.4822, 1.08", "-30.7671, -51.539, -62.8108, 0.12", "-31.6346, -52.0071, -63.2968, 0.12", "-32.4279, -52.4978, -63.8206, 1.08", "-33.8561, -53.5989, -64.8721, 0.12", "-34.4612, -54.1871, -65.4216, 0.12", "-34.6656, -54.4261, -65.6268, 0.72", "-35.0515, -54.9988, -66.1221, 0.72", "-35.6315, -56.1515, -67.1551, 0.12", "-35.9397, -56.9043, -67.8324, 0.12", "-36.0336, -57.1842, -68.1499, 0.72", "-36.1515, -57.6237, -68.7369, 1.08", "-36.4636, -58.792, -70.3714, 0.12", "-36.5919, -59.2859, -71.0753, 0.12", "-36.6247, -59.3832, -71.2086, 0.48", "-37.3876, -61.3392, -73.7957, 0.12", "-37.6341, -61.916, -74.4969, 0.12", "-37.9101, -62.5294, -75.1781, 0.72", "-38.2324, -63.2199, -75.787, 0.12", "-38.5975, -64.0732, -76.4054, 0.12", "-38.9365, -64.949, -76.8926, 0.12", "-39.3444, -65.9952, -77.2657, 0.84", "-39.6848, -66.8426, -77.6592, 0.12", "-39.9962, -67.6643, -78.0503, 0.12", "-40.3595, -68.4815, -78.4045, 0.12", "-40.6718, -69.0673, -78.7473, 0.12", "-40.8814, -69.3403, -79.6441, 1.08", "-41.3665, -69.8411, -81.8419, 0.12", "-41.6688, -70.1022, -83.1794, 0.12", "-42.121, -70.4564, -85.2141, 0.12", "-42.6636, -70.8493, -87.7551, 0.48", "-45.0969, -72.5647, -100.702, 0.12", "-45.2606, -72.678, -101.918, 0.12", "-45.2909, -72.6994, -102.411, 0.36", "-45.2427, -72.7592, -113.426, 0.12", "-45.1222, -72.6984, -114.702, 0.12", "-45.2401, -72.7537, -114.005, 0.84", "-45.6567, -72.9194, -112.184, 0.12", "-46.0012, -73.0173, -110.759, 0.12", "-46.1393, -73.0446, -110.241, 0.48", "-46.6002, -72.9817, -109.862, 0.48", "-46.6002, -72.9817, -109.862, 0.12", "-47.8853, -72.5808, -109.05, 0.12", "-48.5988, -72.4956, -108.923, 0.6" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "21.2962, -40.1435, -12.0823, 0.36", "21.3824, -42.1327, -12.6114, 0.36", "21.5449, -42.8006, -12.7268, 0.24", "21.9918, -44.0171, -13.0336, 0.24", "22.2182, -44.5436, -13.1822, 1.2", "22.6559, -45.4545, -13.4436, 1.44", "23.2151, -46.5264, -13.7384, 0.84", "24.1397, -48.0021, -14.0338, 0.36", "25.0152, -49.2448, -14.316, 0.12", "25.3235, -49.6618, -14.4161, 0.12", "25.8955, -50.4689, -14.6071, 0.84", "26.5703, -51.5145, -14.8475, 0.84", "27.2525, -52.7446, -15.1017, 0.84", "27.8865, -54.1468, -15.3489, 0.24", "28.2481, -55.1288, -15.468, 0.24", "28.4016, -55.6206, -15.5679, 0.24", "28.5267, -56.1125, -15.7011, 0.6", "28.6724, -56.7592, -15.9085, 0.6", "28.9229, -57.925, -16.3057, 0.6", "29.2011, -59.02, -16.7659, 0.6", "29.7939, -60.7061, -17.5762, 1.68", "30.0647, -61.3106, -17.8986, 1.32", "30.6964, -62.5717, -18.6134, 0.72", "31.0962, -63.32, -19.073, 0.72", "31.8434, -64.7478, -19.9805, 0.72", "32.3223, -65.793, -20.6711, 0.72", "32.5626, -66.5273, -21.2099, 0.48", "32.6271, -66.9623, -21.5937, 0.48", "32.6224, -67.616, -22.2376, 0.72", "32.5609, -68.2725, -22.8773, 0.96", "32.4743, -69.1086, -23.6611, 0.96", "32.4908, -70.5956, -25.1702, 0.36", "32.5796, -71.1059, -25.7039, 0.36", "32.7889, -71.7393, -26.3574, 0.36", "33.0093, -72.257, -26.8554, 0.36", "33.5495, -73.365, -27.8344, 1.2", "34.074, -74.4817, -28.6407, 0.12", "34.4073, -75.3469, -29.1332, 0.12", "34.572, -75.9559, -29.4514, 0.12", "34.649, -76.5708, -29.7446, 0.12", "34.6736, -77.1998, -29.9913, 0.48", "34.65, -78.1458, -30.2917, 0.48", "34.6421, -78.9343, -30.5132, 0.48", "34.7381, -79.7815, -30.7462, 0.48", "34.8732, -80.3431, -30.9309, 1.2", "35.1789, -81.1803, -31.2285, 1.2", "35.5449, -81.982, -31.516, 0.12", "35.8394, -82.5592, -31.7172, 0.12", "36.1581, -83.316, -31.9288, 0.12", "36.3052, -83.769, -32.0335, 0.96", "36.5221, -84.6898, -32.1787, 1.2", "36.6562, -85.3859, -32.2501, 1.2", "36.7237, -85.7402, -32.2673, 0.12", "37.0056, -87.3365, -32.3184, 0.12", "37.0436, -87.5675, -32.322, 0.96", "37.2143, -88.5082, -32.3105, 1.44", "37.5169, -89.9961, -32.2786, 0.6", "37.753, -91.0077, -32.2502, 0.24", "38.0368, -92.0299, -32.2165, 0.24", "38.4166, -93.2469, -32.1713, 0.24", "38.6125, -93.9061, -32.1474, 0.96", "38.856, -94.8084, -32.1148, 1.32", "39.0069, -95.4245, -32.0937, 1.32", "39.2182, -96.234, -32.0698, 0.24", "39.4698, -97.127, -32.0502, 0.24", "40.0151, -98.9719, -32.0284, 0.24", "40.1251, -99.326, -32.0284, 1.08", "40.3653, -100.066, -32.0284, 1.08", "40.6383, -100.94, -32.0284, 0.96", "40.9305, -101.95, -32.0284, 0.24", "41.1607, -102.762, -32.0212, 0.24", "41.5823, -104.377, -31.994, 0.24", "41.709, -104.899, -31.9824, 0.72", "41.901, -105.823, -31.9571, 0.96", "42.0957, -106.967, -31.9214, 0.48", "42.1697, -107.482, -31.9054, 0.24", "42.2842, -108.418, -31.8782, 0.24", "42.3325, -108.775, -31.8693, 0.6", "42.3974, -109.12, -31.8932, 0.12", "42.6983, -110.235, -32.0695, 0.12", "42.8544, -110.689, -32.1729, 1.08", "43.1162, -111.397, -32.3673, 1.08", "43.4647, -112.29, -32.6424, 0.72", "44.0211, -113.805, -33.1387, 0.48", "44.281, -114.558, -33.4052, 0.12", "44.5068, -115.388, -33.8047, 0.12", "44.5331, -115.676, -33.9705, 0.12", "44.5109, -115.81, -34.0556, 0.6", "44.2776, -116.403, -34.4443, 0.96", "44.1581, -116.624, -34.572, 0.96", "43.3929, -117.969, -35.3372, 0.12", "43.0711, -118.69, -35.7469, 0.12", "42.8747, -119.413, -36.1088, 0.12", "42.8535, -119.565, -36.1738, 0.72", "42.8506, -120.122, -36.364, 1.08", "42.9114, -120.794, -36.5624, 1.08", "43.1445, -122.144, -36.8717, 0.24", "43.3234, -122.922, -37.0576, 0.24", "43.4705, -123.487, -37.1896, 1.08", "43.7682, -124.525, -37.4165, 1.08", "44.0384, -125.393, -37.5898, 0.12", "44.3642, -126.401, -37.7567, 0.12", "44.5744, -127.047, -37.8288, 0.12", "44.7801, -127.747, -37.8968, 0.12", "44.955, -128.47, -37.8945, 0.12", "45.0031, -128.735, -37.8669, 0.48", "45.115, -129.419, -37.7463, 0.72", "45.2327, -130.24, -37.5817, 1.08", "45.3743, -131.377, -37.355, 1.08", "45.5669, -132.894, -37.0537, 0.12", "45.7781, -134.269, -36.7898, 0.12", "45.9777, -135.333, -36.6143, 1.56", "46.1504, -136.126, -36.5012, 0.12", "46.4907, -137.477, -36.35, 0.12", "46.5803, -137.796, -36.3296, 0.6", "46.8043, -138.59, -36.2524, 0.12", "47.2421, -140.281, -35.9352, 0.12", "47.3243, -140.681, -35.8276, 0.96", "47.4301, -141.371, -35.6034, 1.44", "47.4904, -142.04, -35.3636, 1.44", "47.549, -144.29, -34.5268, 0.12", "47.5394, -144.536, -34.4361, 0.12", "47.4919, -145.174, -34.2173, 0.12", "47.437, -146.636, -33.8301, 0.12", "47.4687, -147.558, -33.6782, 0.12", "47.4895, -147.735, -33.6751, 0.48", "47.6863, -148.873, -33.7976, 0.48", "47.7845, -149.371, -33.8586, 0.12", "48.0846, -150.749, -34.043, 0.12", "48.3873, -152.063, -34.2349, 1.56", "48.6719, -153.333, -34.4211, 0.12", "48.834, -154.132, -34.5312, 0.12", "48.9831, -154.956, -34.6324, 0.12", "49.0816, -155.882, -34.7113, 0.12", "49.087, -156.046, -34.7269, 0.6", "49.086, -156.629, -34.7784, 0.12", "49.087, -157.56, -34.8456, 0.12", "49.0955, -158.082, -34.8894, 1.08", "49.1621, -160.074, -35.0608, 0.36", "49.2042, -161.099, -35.145, 0.12", "49.2819, -162.721, -35.2714, 0.12", "49.3213, -163.448, -35.3253, 1.08", "49.3516, -163.929, -35.3582, 0.12", "49.4487, -165.323, -35.4384, 0.12", "49.5926, -166.597, -35.4815, 0.36", "49.6249, -166.829, -35.4815, 0.12", "49.7048, -167.295, -35.4815, 0.12", "49.7589, -167.567, -35.4815, 0.96", "49.8721, -168.027, -35.4815, 0.12", "50.3645, -169.652, -35.4815, 0.12", "50.6242, -170.386, -35.4815, 0.72", "50.7575, -170.732, -35.4734, 0.12", "51.5087, -172.506, -35.4046, 0.12", "51.8158, -173.19, -35.3715, 0.96", "52.1462, -173.905, -35.3313, 1.56", "52.8415, -175.414, -35.2362, 0.12", "53.3622, -176.556, -35.1605, 0.12", "53.9536, -177.956, -35.0716, 0.12", "54.3347, -178.924, -35.0116, 0.12", "54.4821, -179.358, -34.9876, 0.6", "54.7317, -180.261, -34.9476, 0.6", "54.7836, -180.581, -34.9386, 0.12", "54.7391, -182.68, -34.9259, 0.12", "54.6942, -182.938, -34.9148, 0.84", "54.5581, -183.434, -34.8811, 1.08", "54.3245, -184.106, -34.8252, 0.12", "53.805, -185.413, -34.7108, 0.12", "52.9333, -187.491, -34.4842, 0.12", "52.4457, -188.594, -34.3432, 1.08", "52.1229, -189.37, -34.2413, 0.12", "51.6622, -190.584, -34.0801, 0.12", "51.1731, -192.016, -33.821, 0.12", "50.9411, -192.862, -33.6296, 0.6", "50.8465, -193.321, -33.5109, 0.12", "50.6112, -194.545, -33.1944, 0.12", "50.5087, -195.091, -33.0402, 0.72", "50.2359, -196.455, -32.5425, 0.12", "50.0874, -197.082, -32.2804, 0.12", "49.7031, -198.438, -31.7122, 0.12", "49.4913, -199.042, -31.4669, 0.12", "49.3097, -199.493, -31.2897, 0.48", "48.8104, -200.645, -30.9175, 0.12", "48.4655, -201.383, -30.751, 0.12", "48.2157, -201.897, -30.6499, 0.84", "47.5165, -203.29, -30.3225, 0.36", "47.3888, -203.551, -30.2604, 0.12", "46.8678, -204.669, -30.0153, 0.12", "46.3571, -205.805, -29.8019, 0.12", "45.8067, -207.032, -29.5611, 0.12", "45.2467, -208.311, -29.3067, 0.12", "44.9386, -209.026, -29.0696, 0.12", "44.4701, -210.15, -28.5891, 1.08", "44.3625, -210.467, -28.4262, 0.12", "44.0501, -211.921, -27.6107, 0.12", "44.0218, -212.286, -27.4128, 0.48", "44.1383, -214.944, -26.1607, 0.12", "44.2263, -215.88, -25.6824, 0.12", "44.4221, -216.99, -25.0777, 0.12", "44.6677, -217.915, -24.5774, 0.12", "45.1723, -219.127, -23.9655, 0.12", "45.5191, -219.859, -23.7166, 0.6" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "21.2962, -40.1435, -12.0823, 0.48", "22.4017, -40.1007, -12.0823, 0.48", "23.4952, -40.0562, -12.1311, 0.48", "24.2136, -40.0449, -12.1778, 0.48", "25.3358, -40.1008, -12.262, 0.96", "26.0779, -40.1698, -12.4043, 0.96", "27.3731, -40.2874, -12.7329, 0.72", "27.9524, -40.3012, -12.9423, 0.6", "28.4128, -40.2862, -13.159, 0.84", "29.2636, -40.1539, -13.7127, 0.84", "30.8896, -39.7877, -15.0559, 0.48", "31.4992, -39.6161, -15.6442, 0.48", "32.1584, -39.4494, -16.4741, 0.48", "32.6032, -39.3611, -17.0705, 0.48", "33.5393, -39.1518, -18.3999, 0.48", "33.9492, -39.033, -19.0269, 0.48", "34.4029, -38.8721, -19.7469, 0.48", "35.4212, -38.4312, -22.4991, 0.12", "35.581, -38.388, -22.9496, 0.12", "35.7649, -38.3666, -23.5328, 0.12", "36.0043, -38.3614, -24.2673, 0.96", "36.4667, -38.3577, -25.6258, 0.96", "38.6823, -38.3894, -31.6193, 0.96", "39.1608, -38.4292, -32.794, 1.32", "40.6947, -38.7604, -36.264, 0.12", "41.1622, -38.9279, -37.2123, 0.12", "41.6454, -39.1487, -38.0494, 0.84", "42.1781, -39.4267, -38.7954, 1.2", "42.8447, -39.7684, -39.408, 0.12", "43.6913, -40.2191, -40.1451, 0.12", "44.5903, -40.6682, -40.9001, 0.84", "45.3544, -40.9992, -41.6951, 0.12", "45.7435, -41.144, -42.1434, 0.12", "46.5156, -41.3676, -43.1364, 0.96", "47.2025, -41.4977, -44.025, 0.96", "48.8683, -41.6118, -46.0927, 0.36", "49.5754, -41.609, -46.9002, 0.96", "49.8198, -41.5961, -47.1642, 0.96", "50.519, -41.5149, -47.8508, 0.24", "51.105, -41.3946, -48.3172, 0.24", "51.6752, -41.2478, -48.7472, 0.24", "52.4711, -41.0864, -49.224, 0.84", "53.4763, -40.9069, -49.8027, 0.12", "53.9066, -40.8174, -50.0587, 0.12", "54.607, -40.692, -50.4529, 0.48", "55.9431, -40.5119, -51.2915, 0.24", "56.9502, -40.4592, -51.9417, 0.12", "57.4779, -40.4759, -52.3145, 0.48", "58.3082, -40.542, -52.9853, 0.12", "59.272, -40.6542, -53.8388, 1.2", "60.1711, -40.8233, -54.674, 0.12", "60.6492, -40.9331, -55.1651, 0.12", "61.538, -41.1926, -56.2098, 0.48", "62.4345, -41.4999, -57.3133, 0.12", "62.7346, -41.6165, -57.6818, 0.6", "63.2864, -41.8136, -58.3697, 0.96", "64.5933, -42.2784, -59.7288, 0.12", "65.108, -42.4773, -60.2616, 0.12", "65.3401, -42.5912, -60.4799, 0.48", "65.6015, -42.7314, -60.7144, 0.12", "66.0943, -42.9829, -61.1451, 0.12", "66.9324, -43.3801, -61.8655, 0.96", "68.5678, -44.1942, -63.1518, 0.24", "69.1606, -44.4862, -63.6686, 0.24", "69.5304, -44.6746, -64.0133, 0.24", "69.9232, -44.8989, -64.4104, 0.84" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "10.9907, -0.127789, -17.504, 1.08", "10.3271, 1.67627, -18.6644, 1.08", "10.7706, 3.01922, -19.6113, 1.08", "12.0652, 4.38768, -20.6307, 0.12", "12.7741, 4.96012, -21.0227, 0.12", "13.6195, 5.52188, -21.389, 0.12", "14.7449, 6.15824, -21.9277, 1.08", "16.1885, 6.74097, -22.6423, 0.72", "16.7086, 6.89972, -22.9163, 0.12", "17.6956, 7.14325, -23.4187, 1.2", "18.5221, 7.34242, -23.8623, 1.2", "20.2354, 7.8341, -24.8009, 0.96", "21.6965, 8.33622, -25.556, 1.32", "22.6098, 8.70704, -26.0054, 1.56", "23.9789, 9.31793, -26.5935, 0.84", "25.2248, 9.90329, -27.0455, 0.72", "26.5404, 10.5154, -27.3965, 0.6", "27.8301, 11.0876, -27.6436, 0.6", "29.3785, 11.7465, -27.8772, 1.08", "30.4388, 12.1865, -28.1208, 1.32", "31.6242, 12.6615, -28.4588, 1.08", "33.2508, 13.2627, -29.0094, 1.08", "34.6564, 13.7405, -29.5215, 0.84", "36.4737, 14.3709, -30.3496, 0.84", "38.6269, 15.2209, -31.5775, 0.72", "39.348, 15.5737, -32.0545, 1.32", "39.9816, 15.9731, -32.5136, 1.32", "40.9836, 16.7679, -33.2739, 0.84", "42.385, 18.074, -34.3134, 0.12", "43.2302, 18.9324, -34.9984, 0.96", "43.7731, 19.4813, -35.4531, 1.2", "44.507, 20.1737, -36.1646, 0.84", "45.0545, 20.6385, -36.7198, 0.6", "45.6536, 21.0955, -37.3361, 0.96", "46.9292, 21.9617, -38.5347, 1.32", "48.1834, 22.718, -39.647, 0.36", "48.9838, 23.1812, -40.3837, 0.36", "49.7239, 23.6111, -41.0778, 0.36", "50.3924, 24.0439, -41.6702, 1.2", "50.8834, 24.4528, -42.069, 1.32", "51.7155, 25.3882, -42.637, 0.12", "52.1126, 25.9004, -42.8842, 0.12", "52.3977, 26.2451, -43.0546, 0.96", "53.0013, 26.7846, -43.4604, 0.12", "53.7981, 27.229, -43.9804, 0.12", "54.3174, 27.4136, -44.3152, 0.12", "55.2353, 27.6359, -44.8923, 1.08", "56.5181, 27.8848, -45.675, 0.48", "58.1365, 28.1232, -46.7072, 0.12", "58.4619, 28.1384, -46.9017, 0.12", "58.6714, 28.1343, -47.0547, 0.12", "59.1342, 28.0927, -47.4526, 0.6", "59.4537, 28.031, -47.8052, 0.72", "60.2345, 27.8018, -48.7353, 1.08", "61.3524, 27.4056, -49.9772, 0.12", "62.9832, 26.8791, -51.7026, 0.12", "63.6886, 26.6582, -52.4098, 1.56", "65.2806, 26.1742, -53.8442, 0.12", "65.951, 25.9793, -54.379, 0.12", "66.4403, 25.8605, -54.7256, 0.12", "67.546, 25.6936, -55.367, 0.12", "68.4691, 25.6254, -55.7074, 0.12", "69.6273, 25.5971, -56.1015, 1.32", "70.4029, 25.5975, -56.3173, 0.84", "71.222, 25.6004, -56.5691, 0.12", "72.0296, 25.582, -56.8288, 0.12", "72.9512, 25.5254, -57.1493, 1.32", "74.0687, 25.4984, -57.5649, 0.12", "74.5582, 25.5149, -57.7842, 0.12", "75.0468, 25.5529, -58.0137, 0.48", "75.4406, 25.5815, -58.1905, 0.12", "76.613, 25.6491, -58.7812, 1.32", "77.4914, 25.6666, -59.2262, 0.48", "78.5951, 25.6873, -59.7441, 0.12", "79.2557, 25.711, -60.0537, 0.12", "80.0797, 25.7782, -60.4639, 1.32", "81.1163, 25.9355, -60.9873, 0.12", "82.0702, 26.1472, -61.4179, 0.12", "82.7564, 26.3354, -61.6877, 0.84", "83.3955, 26.5416, -61.943, 0.84", "84.3207, 26.8942, -62.3145, 0.12", "84.7895, 27.0937, -62.4769, 0.12", "86.0694, 27.6255, -62.9194, 0.12", "86.602, 27.833, -63.1088, 1.08", "87.7579, 28.2435, -63.5591, 0.12", "88.8246, 28.5979, -64.0608, 0.12", "90.2278, 29.1152, -64.7979, 1.56", "91.487, 29.5985, -65.5359, 0.12", "92.2686, 29.8899, -66.0596, 0.12", "93.5754, 30.3459, -66.9613, 0.84", "94.9942, 30.8501, -67.9267, 0.12", "95.8333, 31.1613, -68.5088, 0.12", "96.7527, 31.4847, -69.1107, 0.12", "98.3147, 32.0386, -69.9328, 1.56", "99.0278, 32.2895, -70.2298, 0.12", "99.9629, 32.6037, -70.472, 0.12", "100.773, 32.8857, -70.5893, 0.12", "101.584, 33.1783, -70.7336, 0.12", "102.483, 33.6178, -70.9146, 0.84", "103.201, 34.0586, -71.0581, 0.12", "103.807, 34.4708, -71.2259, 0.12", "104.549, 34.9754, -71.5704, 0.12", "105.67, 35.7753, -72.2406, 0.12", "106.269, 36.2476, -72.6335, 0.12", "106.663, 36.5967, -72.909, 0.12", "107.295, 37.2213, -73.3994, 1.2", "108.399, 38.3935, -74.2358, 0.12", "109.037, 39.1136, -74.7592, 0.12", "109.673, 39.8795, -75.2557, 0.12", "110.243, 40.644, -75.732, 0.12", "110.746, 41.4362, -76.2475, 0.96", "111.169, 42.2135, -76.7191, 0.12", "111.79, 43.4915, -77.4109, 0.12", "112.248, 44.4803, -77.966, 0.12", "112.675, 45.3772, -78.4615, 1.32", "113.33, 46.5498, -79.0947, 0.12", "114.178, 47.7874, -79.7428, 0.12", "114.466, 48.1124, -79.9683, 0.36", "114.614, 48.2455, -80.0785, 0.12", "115.258, 48.6918, -80.5831, 0.12", "116.226, 49.1807, -81.3808, 0.12", "117.341, 49.6211, -82.2723, 1.2", "118.743, 50.0678, -83.4714, 0.12", "119.333, 50.2715, -83.9622, 0.12", "120.155, 50.5935, -84.6141, 0.12", "121.349, 51.1074, -85.4946, 0.12", "121.715, 51.2856, -85.7684, 0.6", "121.928, 51.3742, -85.9042, 0.12", "122.808, 51.6124, -86.3543, 0.12", "123.276, 51.6757, -86.6083, 0.72", "123.938, 51.7276, -86.978, 0.84", "125.662, 51.8581, -87.8784, 0.36", "126.215, 51.8767, -88.164, 0.72", "126.766, 51.8821, -88.4276, 0.72", "127.686, 51.8798, -88.9114, 0.12", "128.513, 51.9231, -89.3511, 0.12", "129.086, 51.9874, -89.6428, 0.12", "129.952, 52.1407, -90.0202, 1.32", "130.816, 52.358, -90.4476, 0.12", "132.258, 52.7859, -91.1807, 0.12", "132.857, 52.9674, -91.4732, 0.12", "133.09, 53.0334, -91.588, 0.6", "133.629, 53.1819, -91.8242, 1.2", "134.776, 53.4949, -92.2368, 0.12", "135.693, 53.6495, -92.47, 0.12", "136.324, 53.703, -92.5781, 0.72", "136.698, 53.7199, -92.6415, 0.12", "137.885, 53.796, -92.8345, 0.12", "138.359, 53.8278, -92.9014, 0.72", "139.622, 53.8946, -93.165, 0.12", "140.513, 53.9527, -93.4411, 0.12", "141.071, 54.0017, -93.655, 0.12", "141.854, 54.0906, -93.9981, 0.12", "142.398, 54.1901, -94.2671, 0.12", "144.17, 54.6403, -95.1743, 0.96", "144.492, 54.7606, -95.332, 0.12", "145.152, 55.0302, -95.5847, 0.12", "145.651, 55.2195, -95.8559, 0.12", "146.206, 55.4291, -96.2068, 0.36", "146.416, 55.5151, -96.3491, 0.12", "147.295, 55.8762, -96.9087, 0.12", "148.105, 56.1762, -97.4624, 1.2", "150.322, 56.959, -99.1362, 0.24", "150.59, 57.0449, -99.39, 0.24", "150.704, 57.0791, -99.5102, 0.12", "151.283, 57.2577, -100.139, 0.12", "151.66, 57.3782, -100.589, 0.12", "152.068, 57.534, -101.051, 0.48", "153.375, 58.147, -102.206, 0.12", "153.961, 58.444, -102.837, 0.12", "154.34, 58.6732, -103.305, 0.6", "154.881, 59.052, -104.045, 0.12", "155.151, 59.2374, -104.41, 0.12", "155.256, 59.2961, -104.529, 0.36", "156.225, 59.7648, -105.346, 0.12", "156.63, 59.9652, -105.738, 0.12", "156.918, 60.1082, -106.025, 0.36", "157.113, 60.198, -106.185, 0.12", "157.766, 60.4568, -106.687, 0.12", "158.712, 60.6889, -107.191, 0.48" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "10.9907, -0.127789, -17.504, 0.12", "10.8141, 1.08202, -17.3295, 0.12", "10.5558, 2.56343, -17.1645, 0.12", "10.4657, 3.15732, -17.1766, 0.84", "10.4261, 3.62684, -17.2195, 1.2", "10.4677, 4.95181, -17.5326, 0.12", "10.5756, 5.94411, -17.9528, 0.12", "10.7372, 6.72828, -18.4467, 0.12", "11.1989, 7.97625, -19.4479, 1.32", "11.6349, 8.78616, -20.1961, 1.32", "12.7992, 10.3518, -21.8611, 0.12", "13.9126, 11.5505, -23.2657, 0.24", "14.3522, 11.9591, -23.7941, 0.24", "15.101, 12.6122, -24.6662, 0.6", "15.6679, 13.0856, -25.2621, 0.84", "16.5023, 13.7426, -26.0571, 0.84", "16.9826, 14.113, -26.4165, 0.12", "17.6875, 14.6754, -26.8293, 0.12", "18.3094, 15.178, -27.1621, 0.12", "18.9196, 15.6745, -27.49, 0.84", "19.6315, 16.2948, -27.8638, 1.2", "20.927, 17.4403, -28.4771, 0.6", "21.7349, 18.1368, -28.8486, 0.48", "22.5698, 18.8661, -29.21, 0.48", "23.7089, 19.8898, -29.7587, 0.24", "24.5827, 20.7379, -30.2174, 0.24", "25.2225, 21.4267, -30.5984, 0.36", "25.8933, 22.1965, -31.0316, 0.36", "26.2582, 22.5937, -31.2783, 0.36", "26.8335, 23.1631, -31.6568, 1.08", "27.137, 23.4219, -31.8288, 1.44", "28.033, 24.0941, -32.4318, 0.12", "28.3822, 24.3655, -32.7041, 0.12", "29.3552, 25.1377, -33.4697, 0.12", "29.7884, 25.5011, -33.804, 0.12", "30.0363, 25.7277, -33.973, 0.12", "31.022, 26.7615, -34.6603, 0.84", "31.343, 27.1261, -34.8727, 1.08", "31.8784, 27.7844, -35.2248, 0.12", "32.3417, 28.4398, -35.5358, 0.12", "32.876, 29.2122, -35.911, 1.56", "33.7309, 30.4099, -36.4817, 0.12", "33.9911, 30.7742, -36.6491, 0.12", "34.1918, 31.054, -36.7952, 0.12", "34.665, 31.6541, -37.1236, 0.36", "35.447, 32.6235, -37.5995, 0.36", "36.0103, 33.369, -37.9733, 1.32", "36.4352, 33.9524, -38.2453, 0.12", "36.7748, 34.4443, -38.4637, 0.12", "37.7105, 35.8042, -39.0408, 0.12", "38.568, 37.0272, -39.5134, 0.12", "39.3534, 38.2403, -39.9153, 0.84", "39.5612, 38.5927, -40.0311, 1.2", "40.0087, 39.4579, -40.2833, 0.12", "40.1306, 39.7502, -40.3591, 0.12", "40.3673, 40.4841, -40.5182, 0.12", "40.7232, 41.7325, -40.7903, 0.84", "40.8313, 42.2098, -40.879, 0.12", "41.0696, 43.5584, -41.2014, 0.12", "41.1997, 44.6973, -41.5055, 1.44", "41.273, 45.5993, -41.751, 0.12", "41.3521, 46.9256, -42.1023, 0.12", "41.4316, 48.2708, -42.4892, 0.36", "41.4976, 49.2468, -42.8104, 0.12", "41.6283, 50.6963, -43.3337, 0.12", "41.7355, 51.6296, -43.685, 0.6", "41.9367, 52.9428, -44.1588, 1.56", "42.1982, 54.3418, -44.6068, 0.12", "42.3789, 55.1932, -44.9045, 0.12", "42.527, 55.882, -45.1388, 0.48", "42.527, 55.882, -45.1388, 0.12", "42.719, 56.8405, -45.5851, 0.12", "42.783, 57.1566, -45.7516, 0.48", "42.9544, 57.9557, -46.1584, 0.12", "43.1098, 58.6211, -46.6227, 0.12", "43.1539, 58.7891, -46.7685, 0.48", "43.37, 59.5806, -47.4836, 0.12", "43.47, 59.8997, -47.8409, 0.12", "43.5881, 60.2235, -48.218, 0.6", "43.9662, 61.1021, -49.225, 0.12", "44.0981, 61.3661, -49.5858, 0.12", "44.3192, 61.8429, -50.232, 1.32", "44.6855, 62.7385, -51.4267, 0.12", "44.9666, 63.5109, -52.4532, 0.12", "45.0761, 63.8209, -52.8658, 1.08", "45.6128, 65.2319, -54.676, 0.6", "45.8035, 65.6663, -55.2477, 0.6", "46.09, 66.1849, -55.936, 0.12", "46.2717, 66.458, -56.2809, 0.12", "46.2717, 66.458, -56.2809, 0.36", "46.4485, 66.6445, -56.5095, 0.12", "46.9194, 67.1256, -57.0119, 0.12", "47.4894, 67.7222, -57.7505, 0.48", "48.2381, 68.5912, -58.7612, 0.12", "48.6837, 69.1779, -59.4565, 0.12", "49.2193, 69.9881, -60.4474, 0.12", "49.4191, 70.3438, -60.8827, 0.84", "49.9242, 71.4685, -62.1966, 0.12", "50.2961, 72.4627, -63.3118, 0.12", "50.4769, 73.0055, -63.893, 0.48", "50.6832, 73.7077, -64.6797, 0.12", "50.7783, 73.946, -64.954, 0.12", "50.916, 74.2476, -65.3147, 0.48" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-6.56504, -4.86821, -24.9111, 0.96", "-7.17639, -5.25577, -24.8508, 0.96", "-8.28737, -6.02425, -24.7224, 0.96", "-9.21288, -6.72602, -24.6098, 0.96", "-10.3367, -7.77844, -24.4683, 0.96", "-10.9318, -8.4175, -24.4087, 0.96", "-11.417, -8.99708, -24.3687, 0.96", "-11.9482, -9.77083, -24.2828, 1.32", "-12.3198, -10.467, -24.1965, 1.56", "-13.0044, -12.0579, -24.0038, 0.96", "-13.2213, -12.6492, -23.9243, 0.48", "-13.3769, -13.0783, -23.8695, 0.48", "-13.8935, -14.4463, -23.6689, 1.08", "-14.3039, -15.3916, -23.5128, 1.08", "-15.0089, -16.6565, -23.2795, 0.84", "-15.4803, -17.2589, -23.1872, 0.72", "-16.5099, -18.3121, -23.0748, 0.72", "-16.9537, -18.7057, -23.084, 0.72", "-17.6003, -19.2269, -23.2109, 0.96", "-18.6281, -20.0133, -23.5241, 1.2", "-20.1294, -21.0658, -24.2653, 0.36", "-20.7948, -21.5085, -24.6968, 0.36", "-21.6267, -22.011, -25.3382, 0.6", "-22.5176, -22.5059, -26.1128, 0.96", "-23.0539, -22.716, -26.5898, 0.96", "-24.4394, -22.9013, -27.8892, 0.24", "-24.6204, -22.8693, -28.0434, 0.24", "-25.2494, -22.6574, -28.4884, 0.6", "-25.8777, -22.3961, -28.8403, 1.08", "-27.7901, -21.5959, -29.7187, 0.6", "-29.0911, -21.121, -30.2487, 0.12", "-29.4868, -21.0313, -30.3715, 0.12", "-30.184, -21.0356, -30.5877, 0.12", "-30.4757, -21.1718, -30.6645, 0.84", "-31.2566, -21.8024, -30.8161, 1.2", "-32.2721, -22.8259, -30.9289, 0.72", "-32.7124, -23.219, -30.9892, 0.12", "-33.0082, -23.4323, -31.0819, 0.12", "-33.8207, -23.8404, -31.4614, 0.12", "-34.3291, -24.0054, -31.7402, 0.96", "-34.9529, -24.1217, -32.1, 1.08", "-36.5109, -24.3284, -33.0829, 0.12", "-37.434, -24.4586, -33.6787, 0.12", "-38.1224, -24.5739, -34.1024, 0.6", "-38.6317, -24.6811, -34.4, 1.2", "-39.4181, -24.8981, -34.8001, 1.2", "-40.6824, -25.362, -35.3062, 0.12", "-41.2089, -25.597, -35.5037, 0.48", "-42.1372, -26.0559, -35.8788, 0.48", "-42.5413, -26.2759, -36.0538, 0.84", "-43.1559, -26.6582, -36.276, 1.2", "-43.8997, -27.1738, -36.4895, 1.2", "-45.5472, -28.4109, -36.8201, 0.84", "-46.0738, -28.8203, -36.9044, 0.84", "-47.8774, -30.2384, -37.1026, 0.36", "-49.2125, -31.2459, -37.168, 0.12", "-49.6417, -31.5578, -37.2052, 0.12", "-49.8539, -31.7166, -37.2261, 0.6", "-50.5064, -32.2446, -37.1927, 1.08", "-51.1061, -32.7677, -37.1708, 1.2", "-51.6849, -33.3068, -37.1816, 0.12", "-53.1883, -34.6766, -37.3013, 0.48", "-53.994, -35.3729, -37.3011, 0.48", "-55.5973, -36.6661, -37.2166, 0.48", "-55.8564, -36.8677, -37.1914, 0.96", "-56.5195, -37.3967, -37.0206, 1.32", "-57.1161, -37.8819, -36.81, 1.32", "-58.5636, -39.0662, -36.2113, 0.6", "-59.1152, -39.5371, -36.0155, 0.12", "-59.604, -39.9801, -35.8912, 0.24", "-61.4914, -41.7308, -35.414, 0.24", "-62.1087, -42.3162, -35.2838, 0.6", "-62.6043, -42.7796, -35.2049, 0.96", "-63.8101, -43.8849, -35.0983, 0.24", "-64.4898, -44.4548, -35.2025, 0.24", "-65.2657, -45.0292, -35.5318, 0.48", "-66.0957, -45.5689, -36.119, 0.48", "-66.5973, -45.8936, -36.5316, 1.08", "-67.1598, -46.2609, -37.0432, 1.08", "-68.8844, -47.3901, -38.711, 0.12", "-69.3116, -47.6962, -39.0805, 0.12", "-69.5663, -47.8989, -39.2699, 0.12", "-70.0539, -48.2935, -39.5458, 0.36", "-70.4401, -48.6142, -39.7211, 0.36", "-70.9878, -49.0787, -39.8637, 1.44", "-71.8128, -49.8552, -39.98, 0.12", "-72.2237, -50.2575, -40.0972, 0.12", "-72.9386, -51.0069, -40.3897, 0.6", "-73.3215, -51.4154, -40.5842, 0.84", "-73.7633, -51.8964, -40.8401, 0.12", "-74.6099, -52.7376, -41.4183, 0.12", "-75.1833, -53.2158, -41.8034, 0.12", "-75.5618, -53.4781, -42.012, 0.72", "-76.1367, -53.8252, -42.2593, 1.2", "-76.5436, -54.0544, -42.4142, 1.44", "-77.8409, -54.8035, -42.8238, 0.12", "-78.6038, -55.2767, -43.0094, 0.24", "-79.0715, -55.6178, -43.106, 0.24", "-79.4854, -55.9441, -43.1752, 0.24", "-79.9471, -56.3681, -43.2328, 0.48", "-80.6405, -57.0985, -43.3867, 0.48", "-80.7469, -57.224, -43.4169, 0.12", "-82.1127, -58.9762, -43.9712, 0.12", "-82.3531, -59.3004, -44.0903, 0.12", "-82.9612, -60.1407, -44.4239, 1.56", "-84.0919, -61.7549, -45.2857, 0.36", "-84.1468, -61.8361, -45.3363, 0.36", "-84.4273, -62.275, -45.6212, 0.36", "-84.8565, -62.9795, -46.1004, 0.36", "-85.3348, -63.7195, -46.567, 0.36", "-86.5014, -65.3952, -47.5996, 1.44", "-86.8488, -65.8992, -47.8697, 0.12", "-87.2836, -66.5822, -48.2421, 0.12", "-87.5255, -66.9939, -48.4683, 0.84", "-87.8582, -67.6204, -48.8002, 0.84", "-88.5362, -68.9803, -49.4209, 0.12", "-88.7589, -69.4129, -49.5999, 0.12", "-89.0337, -69.8818, -49.8305, 0.12", "-89.3009, -70.2836, -50.0468, 0.12", "-89.6172, -70.7214, -50.2732, 0.48", "-90.152, -71.3899, -50.5831, 1.08", "-91.1586, -72.5348, -51.0463, 0.12", "-91.7597, -73.1792, -51.3076, 0.12", "-92.1032, -73.5549, -51.4545, 0.48", "-92.6774, -74.2453, -51.7514, 0.48", "-93.1278, -74.8444, -52.0114, 0.48", "-93.452, -75.3175, -52.1961, 0.12", "-93.7008, -75.7078, -52.3885, 0.84", "-93.9231, -76.116, -52.64, 0.84", "-94.3356, -76.9652, -53.2343, 0.12", "-94.5955, -77.6219, -53.7114, 0.12", "-94.8682, -78.4387, -54.3679, 1.32", "-95.3317, -80.1794, -55.7455, 0.12", "-95.5019, -81.0358, -56.3795, 0.12", "-95.5304, -81.2326, -56.5064, 0.6", "-95.6037, -82.0388, -56.9836, 0.6", "-95.6186, -83.2163, -57.6757, 0.12", "-95.5754, -84.0344, -58.119, 0.12", "-95.5165, -85.0248, -58.4711, 0.12", "-95.4994, -86.0011, -58.8478, 1.56" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-6.56504, -4.86821, -24.9111, 0.6", "-6.35526, -6.34561, -24.9414, 0.6", "-6.2679, -7.6407, -24.9825, 0.6", "-6.24013, -8.57088, -25.0165, 0.12", "-6.25011, -9.64155, -25.0543, 0.12", "-6.25657, -9.97937, -25.0522, 0.12", "-6.26326, -10.3957, -25.0412, 0.48", "-6.29138, -11.0249, -25.0587, 0.48", "-6.3395, -11.6099, -25.0451, 0.24", "-6.46772, -12.881, -24.9245, 0.24", "-6.56847, -13.9319, -24.8059, 0.6", "-6.59968, -14.6283, -24.7201, 0.72" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-10.3176, 15.6814, -25.7927, 0.6", "-8.73113, 18.3488, -26.7545, 0.6", "-8.20669, 19.4397, -27.1325, 0.72", "-7.77701, 20.5083, -27.4776, 0.96", "-7.46582, 21.4217, -27.7503, 0.96", "-7.19396, 22.4286, -28.0502, 0.72", "-6.91939, 23.7286, -28.4794, 0.72", "-6.77996, 25.408, -28.9902, 0.72", "-6.82174, 26.1827, -29.2852, 0.96", "-6.95, 26.9199, -29.6245, 0.96", "-7.20108, 27.8927, -30.1859, 0.12", "-7.58325, 29.2019, -31.1509, 0.12", "-7.8216, 30.0851, -31.9026, 0.48", "-7.9877, 30.8715, -32.6301, 1.44", "-8.07793, 31.4585, -33.2019, 1.44", "-8.20034, 32.9861, -34.68, 0.48", "-8.19764, 34.4118, -35.9331, 0.24", "-8.14834, 35.1032, -36.5076, 0.6", "-8.0233, 35.9032, -37.1215, 0.6", "-7.93922, 36.2769, -37.3979, 0.6", "-7.67105, 37.2327, -38.1239, 0.84", "-7.38409, 38.1988, -38.9314, 0.6", "-7.09647, 39.249, -39.8577, 1.08", "-6.914, 39.9051, -40.5285, 1.08", "-6.67663, 40.6638, -41.3617, 1.08", "-6.18217, 42.0507, -42.9637, 0.72", "-5.7561, 43.0648, -44.1309, 0.12", "-5.39507, 43.8168, -44.9706, 0.12", "-4.87196, 44.8329, -45.997, 0.96", "-4.59465, 45.3471, -46.4721, 1.2", "-4.31401, 45.8551, -46.8455, 1.32", "-3.67523, 46.9918, -47.455, 0.24", "-3.16672, 47.844, -47.8746, 0.12", "-2.6121, 48.7282, -48.3085, 0.12", "-2.26194, 49.3163, -48.6076, 0.84", "-1.90083, 49.9679, -48.9698, 1.08", "-1.70272, 50.3529, -49.1927, 1.08", "-1.25348, 51.3272, -49.7885, 0.12", "-0.813283, 52.3906, -50.4523, 0.12", "-0.346141, 53.6929, -51.2619, 1.2", "-0.164567, 54.2663, -51.6422, 1.56", "-0.0151739, 54.7476, -51.9567, 1.56", "0.318866, 55.8561, -52.6053, 0.12", "0.615639, 56.8953, -53.176, 0.12", "0.827167, 57.7118, -53.6117, 0.12", "1.07004, 58.6726, -54.1424, 0.12", "1.32455, 59.7256, -54.7563, 0.96", "1.56557, 60.7986, -55.3706, 0.48", "1.82854, 62.0963, -56.1196, 0.12", "1.96399, 62.7912, -56.5229, 0.12", "2.1884, 64.1632, -57.4154, 0.12", "2.26014, 64.85, -57.8831, 1.2", "2.29669, 65.6169, -58.4193, 0.12", "2.33418, 66.6353, -59.1607, 0.12", "2.37366, 67.2917, -59.6001, 0.12", "2.47043, 68.3411, -60.3014, 0.6", "2.53417, 68.7465, -60.5429, 0.6", "2.7546, 69.6527, -61.1446, 0.96", "3.06242, 70.6007, -61.7714, 0.12", "3.31956, 71.1962, -62.1373, 0.12", "3.97437, 72.3698, -62.871, 1.08", "4.53887, 73.1702, -63.3572, 0.12", "5.556, 74.3459, -64.2254, 0.12", "6.28409, 74.9859, -64.7917, 0.24", "7.11363, 75.5743, -65.3704, 0.12", "7.89301, 76.0257, -65.8865, 0.72", "8.37262, 76.2562, -66.184, 0.84", "9.8396, 76.9109, -67.0842, 0.12", "10.9015, 77.3851, -67.7315, 0.12", "11.6385, 77.7305, -68.2238, 1.2", "12.0067, 77.9576, -68.4871, 1.2", "12.4588, 78.3499, -68.8136, 0.12", "12.9856, 78.9704, -69.2426, 0.12", "13.6725, 80.1204, -69.8038, 0.6", "13.8004, 80.4028, -69.926, 0.12", "14.2171, 81.4093, -70.3466, 0.12", "14.5308, 82.2507, -70.6885, 0.96", "14.8763, 83.3133, -71.0847, 0.12", "15.2776, 84.9032, -71.6327, 0.12", "15.4496, 85.7534, -71.8568, 1.08" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-10.3176, 15.6814, -25.7927, 0.72", "-9.71347, 15.8145, -25.9772, 0.72", "-8.77939, 16.2422, -26.5532, 0.84", "-8.21581, 16.6538, -27.0703, 0.84", "-7.61764, 17.3677, -28.0373, 0.84", "-7.21035, 18.449, -29.4422, 0.84", "-7.19859, 19.0827, -30.3281, 0.84", "-7.6683, 20.6153, -32.5492, 0.6", "-8.07318, 21.4484, -33.7066, 0.84", "-8.85507, 22.7489, -35.3952, 0.96", "-9.79123, 24.1822, -37.1599, 0.72", "-10.7444, 25.5533, -38.7504, 0.72", "-11.4846, 26.5717, -39.8792, 0.72", "-11.9922, 27.2558, -40.5519, 0.96", "-12.5278, 28.0289, -41.2694, 0.72", "-13.5941, 29.81, -42.998, 0.72", "-14.1683, 30.9565, -44.1651, 0.48", "-14.5172, 31.7504, -44.9657, 0.48", "-14.9203, 32.7301, -46.0217, 0.48", "-15.3174, 33.76, -47.2105, 1.2", "-16.1054, 35.9475, -49.839, 0.48", "-16.298, 36.54, -50.5535, 0.24", "-16.5986, 37.7999, -52.2017, 0.84", "-16.6161, 37.9023, -52.3339, 0.12", "-16.6538, 38.2098, -52.7005, 0.12", "-16.6845, 38.4449, -52.9374, 0.12", "-16.7617, 38.8516, -53.266, 0.12", "-17.4283, 41.7074, -55.5042, 0.6", "-17.7332, 42.9519, -56.5439, 0.72", "-17.8426, 43.4687, -57.0189, 0.84", "-17.9019, 43.8329, -57.3597, 0.84", "-17.9641, 44.3585, -57.833, 0.84", "-18.0142, 44.9378, -58.3177, 0.84", "-18.2384, 47.0217, -59.942, 0.24", "-18.4593, 48.2586, -60.9841, 0.12", "-18.6079, 48.8583, -61.5344, 0.12", "-18.7544, 49.3693, -62.006, 0.12", "-18.8668, 49.7589, -62.3462, 0.12", "-19.1483, 50.7705, -63.1138, 0.84", "-19.3706, 51.5363, -63.6377, 0.96", "-19.7831, 53.0832, -64.7059, 0.12", "-19.9263, 53.6566, -65.0958, 0.12", "-20.1152, 54.426, -65.5899, 0.96", "-20.263, 55.0176, -65.9277, 0.96", "-20.7773, 56.9901, -66.8685, 0.12", "-21.0658, 57.9306, -67.2306, 0.12", "-21.5422, 59.2904, -67.7133, 0.12", "-21.934, 60.3563, -68.1084, 0.96", "-22.2935, 61.3353, -68.4623, 1.2", "-22.5805, 62.1772, -68.7908, 1.2", "-22.8304, 63.0171, -69.1081, 0.36", "-23.3418, 65.1578, -70.0489, 0.24", "-23.4957, 66.121, -70.4994, 0.24", "-23.5594, 66.8568, -70.8821, 0.24", "-23.6271, 68.6544, -71.8496, 1.08", "-23.6372, 69.3831, -72.2333, 1.44", "-23.6461, 69.9028, -72.5086, 1.44", "-23.7237, 71.0832, -73.0625, 0.96", "-23.9805, 72.8981, -74.0995, 0.12", "-24.166, 73.7599, -74.6732, 0.12", "-24.3456, 74.3452, -75.1357, 0.12", "-24.754, 75.352, -76.0764, 0.12", "-25.1158, 76.0789, -76.8384, 1.2", "-26.0224, 77.493, -78.5819, 0.12", "-26.4644, 78.0402, -79.3587, 0.12", "-27.0478, 78.6529, -80.332, 0.12", "-27.4589, 79.0258, -80.9681, 0.84", "-27.7339, 79.2388, -81.3739, 1.08", "-28.979, 80.0654, -83.0994, 0.12", "-29.9507, 80.6315, -84.2519, 0.12", "-30.4383, 80.875, -84.7771, 0.48", "-30.8535, 81.0622, -85.1835, 0.48", "-32.1176, 81.5648, -86.3197, 0.12", "-32.66, 81.771, -86.7599, 0.12", "-32.9493, 81.8938, -86.9334, 0.84", "-33.35, 82.1767, -87.3491, 0.84", "-33.5663, 82.3908, -87.7543, 0.12", "-33.8204, 82.7589, -88.4386, 0.12", "-34.1234, 83.4496, -89.6479, 0.72", "-34.264, 83.9589, -90.5175, 1.32", "-34.522, 86.192, -94.0982, 0.12", "-34.4735, 87.184, -95.496, 0.12", "-34.3448, 87.8421, -96.2995, 0.12", "-34.1873, 88.3163, -96.7772, 0.48", "-33.8963, 88.9273, -97.1125, 0.12", "-33.3544, 89.8868, -97.2517, 0.12", "-32.4939, 91.3805, -97.013, 0.12", "-32.0613, 92.1916, -96.8596, 0.24", "-31.8855, 92.5441, -96.8156, 0.12", "-31.5713, 93.205, -96.7561, 0.12", "-31.1002, 94.2618, -96.7615, 0.48", "-31.032, 94.4276, -96.7732, 0.12", "-30.6894, 95.3158, -96.8862, 0.12", "-30.5102, 95.7891, -96.9898, 0.36", "-30.4178, 95.9948, -97.0573, 0.12", "-29.8431, 97.0377, -97.6088, 0.12", "-29.1808, 98.0197, -98.3147, 1.08", "-28.8566, 98.3988, -98.662, 0.12", "-27.7982, 99.271, -99.8257, 0.12", "-26.9662, 99.7738, -100.719, 0.48", "-25.9054, 100.174, -101.754, 0.12", "-25.492, 100.223, -102.093, 0.12", "-24.6313, 100.179, -102.717, 0.24", "-23.7907, 100.089, -103.345, 0.12", "-23.1588, 100.025, -103.783, 1.44", "-22.4252, 100.014, -104.263, 0.24", "-21.4608, 100.084, -104.863, 0.24", "-20.6127, 100.21, -105.511, 1.44", "-18.1847, 100.662, -107.416, 0.72", "-17.4802, 100.803, -107.98, 0.24", "-16.0303, 101.111, -109.214, 0.24", "-14.6799, 101.465, -110.453, 1.32", "-12.0, 102.33, -113.067, 0.24" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-25.3546, -13.062, 8.27937, 0.12", "-25.6139, -14.1653, 8.68096, 0.12", "-25.8919, -15.5655, 9.18918, 0.24", "-26.0764, -16.6767, 9.56454, 0.24", "-26.3256, -18.6025, 10.1619, 0.24", "-26.449, -19.846, 10.5162, 0.24", "-26.528, -20.8604, 10.7819, 0.24", "-26.562, -21.4384, 10.9296, 0.6", "-26.6016, -22.4424, 11.2176, 0.6", "-26.6499, -23.2631, 11.4063, 0.6", "-26.7038, -23.9665, 11.5036, 0.72", "-26.783, -24.6469, 11.6075, 0.84", "-26.9493, -25.8286, 11.8293, 0.84", "-27.1194, -27.0517, 12.1102, 0.72", "-27.2996, -28.4553, 12.4701, 0.72", "-27.4566, -29.9022, 12.8505, 0.72", "-27.5894, -30.8656, 13.1481, 0.6", "-27.7312, -31.7393, 13.4542, 0.6", "-27.9596, -33.0762, 13.9554, 0.48", "-28.0962, -33.8436, 14.2414, 0.48", "-28.3319, -34.9105, 14.6628, 0.48", "-28.8782, -36.856, 15.3779, 0.48", "-29.037, -37.3915, 15.5063, 0.48", "-29.2367, -38.0496, 15.5994, 0.48", "-29.4141, -38.6044, 15.6678, 0.48", "-29.7488, -39.6181, 15.7877, 0.48", "-30.2205, -41.0519, 15.9189, 0.48", "-30.6573, -42.6388, 15.8831, 0.48", "-30.9149, -43.6562, 15.8192, 0.48", "-31.3021, -45.3236, 15.3856, 0.12", "-31.4946, -46.1555, 15.0489, 0.12", "-31.6502, -46.6614, 14.8052, 0.96", "-32.1583, -47.9259, 14.1721, 0.36", "-33.1407, -49.8331, 13.2303, 0.36", "-34.6613, -52.4611, 12.0365, 0.12", "-35.4019, -53.6409, 11.5658, 0.12", "-36.8179, -55.5464, 11.0823, 0.12", "-37.9684, -56.7109, 11.0715, 0.12", "-39.1886, -57.6562, 11.3774, 0.12", "-40.9744, -58.5979, 12.2582, 0.84", "-42.7903, -59.3451, 13.59, 0.12", "-43.5642, -59.505, 14.3253, 0.12", "-44.1172, -59.4545, 15.0802, 0.12" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-25.3546, -13.062, 8.27937, 0.48", "-25.5493, -12.8601, 8.82601, 0.48", "-25.9214, -12.5896, 9.67777, 0.48", "-26.3095, -12.35, 10.369, 0.48", "-26.9207, -12.0098, 11.1706, 0.12", "-30.201, -10.5184, 14.662, 0.84", "-30.8627, -10.272, 15.2797, 0.96", "-31.5895, -10.1173, 15.9118, 0.96", "-32.6407, -10.0547, 16.8972, 0.6", "-34.0382, -10.1745, 18.1615, 0.36", "-35.0683, -10.3701, 18.9868, 0.36", "-35.6236, -10.4746, 19.1932, 0.48", "-36.6583, -10.6302, 19.9352, 0.6", "-38.5663, -10.9712, 21.9397, 0.36", "-38.7927, -11.0112, 22.2166, 0.48", "-39.0746, -11.0286, 22.5443, 0.48", "-39.5089, -10.999, 22.8582, 0.48", "-40.297, -10.908, 23.4848, 0.72", "-40.6811, -10.8341, 23.7873, 0.96", "-41.1867, -10.7436, 24.137, 0.6", "-41.9041, -10.6294, 24.669, 0.24", "-42.912, -10.5264, 25.4328, 0.48", "-45.9575, -10.4093, 27.6903, 0.36", "-46.6451, -10.4244, 28.1702, 0.36", "-47.5977, -10.4802, 28.73, 0.36", "-48.3277, -10.5388, 29.0429, 0.36", "-49.1462, -10.5428, 29.2384, 0.12", "-50.157, -10.3585, 29.2484, 0.12", "-50.7675, -10.1784, 29.1444, 0.12", "-52.4912, -9.52743, 28.8451, 0.12", "-53.7626, -8.86289, 28.6215, 0.12", "-55.3527, -7.87982, 28.334, 0.12", "-56.881, -6.77626, 28.0693, 0.12", "-57.1377, -6.56313, 28.0301, 0.12", "-57.9856, -5.74765, 27.8837, 0.12", "-58.6289, -4.97483, 27.7459, 0.12", "-67.2483, -2.85804, 32.3275, 0.12", "-75.4763, -1.67666, 37.8802, 0.12", "-83.9766, -0.201674, 42.9256, 0.12", "-91.8635, 0.255086, 49.0556, 0.12", "-100.64, 2.40529, 53.3125, 0.12", "-109.59, 5.62263, 56.3106, 0.12", "-117.934, 8.64074, 60.8719, 0.12", "-126.498, 10.2544, 65.7626, 0.12", "-135.229, 11.4029, 70.4932, 0.12" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.01051, -19.7206, -1.01052, 0.6", "-1.3174, -20.9961, -0.98032, 0.6", "-1.56169, -22.0383, -0.986093, 0.48", "-1.8044, -23.0808, -1.00626, 0.6", "-2.1148, -24.3432, -1.03872, 0.6", "-2.33388, -25.1577, -1.06164, 0.6", "-2.64408, -26.2463, -1.09876, 0.72", "-2.92697, -27.169, -1.15866, 0.84", "-3.25403, -28.0677, -1.219, 0.84", "-3.67555, -29.0186, -1.28161, 0.84", "-4.22719, -30.0852, -1.34418, 0.84", "-4.54776, -30.6485, -1.36872, 0.72", "-5.04436, -31.448, -1.38667, 0.72", "-5.57091, -32.2493, -1.40283, 0.72", "-6.05094, -32.9445, -1.42487, 0.72", "-6.53349, -33.654, -1.45256, 0.84", "-7.13016, -34.5878, -1.48841, 0.84", "-7.489, -35.1634, -1.50785, 0.84", "-8.36654, -36.6076, -1.55775, 0.84", "-8.69122, -37.1699, -1.57665, 0.84", "-9.04928, -37.7786, -1.59611, 0.84", "-9.55626, -38.5732, -1.61916, 0.6", "-10.3612, -39.7329, -1.69896, 0.6", "-10.888, -40.4777, -1.7531, 0.84", "-11.3266, -41.08, -1.7989, 0.96", "-11.7861, -41.6885, -1.84179, 0.48", "-12.4247, -42.4497, -1.91427, 0.48", "-13.3943, -43.505, -2.06388, 1.56" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-1.01051, -19.7206, -1.01052, 0.84", "-0.813359, -23.7081, 2.4727, 0.84", "-0.778234, -24.1347, 2.78143, 0.72", "-0.600398, -25.6415, 3.83432, 0.84", "-0.378505, -27.5732, 5.08938, 0.96", "-0.272399, -28.5003, 5.62515, 0.96", "-0.164448, -29.4337, 6.14697, 0.72", "-0.0338814, -30.5403, 6.59399, 0.72", "0.240371, -32.4939, 7.37309, 0.96", "0.439929, -33.6281, 7.76366, 1.08", "0.760384, -35.2803, 8.29968, 1.32", "1.23596, -37.5254, 9.0664, 0.72", "1.45181, -38.5182, 9.41123, 0.72", "1.7239, -39.7926, 9.81649, 0.72", "2.12269, -41.4153, 10.2564, 0.72", "2.69404, -43.2605, 10.8314, 0.84", "2.82636, -43.6441, 10.9534, 0.84", "3.10871, -44.4338, 11.1966, 0.6", "3.54109, -45.7065, 11.607, 0.6", "4.03134, -47.1692, 12.1127, 0.6", "4.54418, -48.7195, 12.6699, 0.6", "5.03584, -50.2544, 13.1236, 0.72", "5.56697, -51.9029, 13.6218, 0.48", "6.04969, -53.2822, 14.0493, 0.48" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-1.01051, -19.7206, -1.01052, 0.48", "-0.416266, -19.6761, 0.0124653, 0.48", "-0.0662829, -19.7507, 0.607575, 0.48", "1.46685, -21.0278, 4.1648, 0.72", "1.73366, -21.41, 4.93527, 0.72", "1.98032, -21.9673, 5.8138, 0.72", "2.17229, -22.6004, 6.64228, 0.72", "2.25741, -23.2828, 7.2938, 0.84", "2.44479, -25.7336, 9.05594, 1.2", "2.4852, -26.3609, 9.43811, 0.6", "2.57453, -27.2434, 10.072, 0.48", "2.66886, -27.8855, 10.5825, 0.48", "2.78577, -28.5443, 11.0966, 0.48", "2.97491, -29.372, 11.7256, 0.48", "3.59502, -31.4069, 12.9721, 0.48", "3.80396, -31.9482, 13.3704, 0.36", "4.00335, -32.3687, 13.7559, 0.36", "4.41647, -33.2096, 14.6829, 0.36" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "35.4668, -19.2826, 18.3338, 0.12", "36.7351, -19.9673, 19.269, 0.12", "37.7084, -20.3645, 19.8613, 0.12", "39.3935, -20.8731, 20.7489, 0.84", "40.0765, -20.9988, 21.0536, 0.6", "41.1057, -21.1269, 21.4252, 0.48", "42.8319, -21.3074, 21.9255, 0.12", "44.2614, -21.4394, 22.4131, 0.6", "44.7496, -21.4442, 22.5573, 0.12", "45.5872, -21.3678, 22.7354, 0.36", "46.7238, -21.1345, 22.9308, 0.36", "47.8096, -20.8008, 23.0778, 0.36", "49.3413, -20.2476, 23.2195, 0.6", "49.651, -20.1227, 23.2729, 0.12", "50.44, -19.7023, 23.413, 0.12", "51.5399, -18.6731, 23.5927, 0.12", "51.6619, -17.9344, 23.5552, 0.36", "51.481, -16.7384, 23.3756, 0.36", "51.3442, -16.3785, 23.2832, 0.12", "50.7675, -15.4036, 23.0339, 0.12", "60.1488, -14.1549, 26.251, 0.12", "69.809, -13.4551, 28.7343, 0.12", "79.3632, -13.8615, 31.6571, 0.12", "88.9342, -15.0493, 34.286, 0.12", "98.2126, -16.5326, 37.6915, 0.12", "106.868, -18.5435, 42.2546, 0.12" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "35.4668, -19.2826, 18.3338, 0.24", "36.0267, -20.0541, 18.3867, 0.24", "36.8062, -21.0382, 18.4445, 0.24", "37.919, -22.2356, 18.5075, 0.24", "38.612, -22.9236, 18.5397, 0.24", "39.3871, -23.7161, 18.5709, 0.6", "40.1466, -24.4899, 18.5966, 0.72", "40.852, -25.1666, 18.5966, 0.72", "41.8822, -25.978, 18.6499, 0.72", "42.5274, -26.3667, 18.707, 0.72", "43.8151, -26.9673, 18.8539, 0.72", "45.019, -27.4372, 19.0116, 0.72", "46.3989, -27.8725, 19.1637, 0.72", "48.1734, -28.3153, 19.4542, 0.72", "48.9129, -28.4589, 19.6017, 0.72", "49.7586, -28.576, 19.7848, 0.72", "51.4099, -28.7202, 20.1572, 0.72", "52.7145, -28.8533, 20.464, 0.72", "54.7759, -29.1908, 20.9479, 0.96", "55.5285, -29.4097, 21.1033, 0.96", "56.116, -29.641, 21.2302, 0.96", "56.6623, -29.8546, 21.347, 0.12", "57.2652, -30.0559, 21.4539, 0.12", "57.5972, -30.1586, 21.4885, 0.48", "58.6958, -30.4336, 21.3909, 0.48", "59.4367, -30.5783, 21.4073, 0.48", "60.8438, -30.8426, 21.5498, 0.72", "61.8242, -31.0136, 21.6868, 0.12", "62.3222, -31.0852, 21.7635, 0.12", "63.5734, -31.155, 21.9693, 0.48", "65.3734, -31.1093, 22.2958, 0.48", "66.6411, -31.0612, 22.5428, 1.08", "67.704, -31.1, 22.7596, 0.24", "68.6399, -31.2056, 22.9439, 0.24", "70.258, -31.4945, 23.1969, 0.24", "70.7875, -31.5942, 23.242, 0.24", "71.5093, -31.7666, 23.2412, 0.48", "72.8277, -32.1987, 23.2387, 0.48", "73.9218, -32.7397, 23.2358, 0.48", "74.8068, -33.2569, 23.2044, 0.12", "76.0281, -34.0097, 23.198, 0.36", "76.9361, -34.58, 23.1926, 0.36", "77.4421, -34.8833, 23.1918, 0.12", "78.6088, -35.4759, 23.1913, 0.12", "80.0439, -36.1119, 23.1937, 0.6", "81.3107, -36.673, 23.2008, 0.6" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "23.5741, -45.8988, 22.975, 0.12", "22.9268, -45.5497, 23.1715, 0.12", "22.0918, -44.8985, 23.4243, 0.12", "21.2191, -44.0345, 23.6967, 0.12", "20.0391, -42.6962, 24.2172, 0.12", "18.9491, -41.2409, 24.8207, 0.12", "17.4017, -38.8718, 25.6642, 0.12", "16.7201, -37.4742, 26.1503, 0.12", "16.5042, -36.5907, 26.4113, 0.36", "16.4583, -34.6275, 26.8605, 0.12", "16.6039, -33.5515, 27.067, 0.12", "17.2865, -31.1205, 27.458, 0.24", "17.8767, -29.8, 27.7159, 0.12", "18.7887, -28.0272, 27.9843, 0.12", "18.9492, -27.692, 27.9799, 0.12", "18.5705, -18.2389, 30.3994, 0.12", "19.4032, -8.531, 30.8105, 0.12" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "23.5741, -45.8988, 22.975, 0.48", "23.6127, -47.2691, 23.026, 0.48", "23.6358, -48.2044, 23.0582, 0.12", "23.6674, -49.4824, 23.1021, 0.12", "23.7107, -51.2321, 23.1622, 0.12", "23.7451, -52.6268, 23.2101, 0.12", "23.7944, -54.6181, 23.2786, 0.12", "23.7952, -54.7536, 23.2782, 0.36", "24.7983, -64.3512, 24.7257, 0.36", "23.9333, -74.0646, 24.6993, 0.36", "22.023, -83.568, 25.859, 0.36", "20.4496, -93.0023, 27.8327, 0.36", "17.7435, -102.232, 29.5828, 0.36", "13.9608, -111.162, 30.9238, 0.36", "11.3265, -120.269, 33.337, 0.36", "6.56038, -128.686, 34.9954, 0.36", "-0.387776, -135.698, 35.0212, 0.36", "-7.0564, -142.775, 36.7091, 0.36" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "41.2319, 40.0211, 41.5953, 0.12", "46.6953, 44.1125, 48.844, 0.12", "51.4924, 48.9094, 56.1091, 0.12", "57.0192, 53.4512, 63.0196, 0.12", "63.2533, 58.8746, 68.5146, 0.12", "69.4069, 63.0337, 75.1431, 0.12", "76.3235, 67.4332, 80.7822, 0.12", "83.1908, 72.1179, 86.2369, 0.12", "90.424, 74.9608, 92.4962, 0.12", "98.8641, 77.8263, 96.9825, 0.12", "107.889, 80.9481, 99.8664, 0.12", "116.697, 84.6889, 102.641, 0.12", "125.84, 87.6979, 105.262, 0.12", "134.7, 90.6348, 108.788, 0.12", "142.827, 93.3142, 113.924, 0.12", "149.933, 96.8034, 119.984, 0.12", "155.614, 100.562, 127.254, 0.12", "160.698, 103.797, 135.201, 0.12" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "41.2319, 40.0211, 41.5953, 0.12", "47.7429, 43.7083, 48.176, 0.12", "53.2385, 47.8679, 55.3591, 0.12", "58.7548, 51.177, 62.9783, 0.12", "62.9543, 54.8616, 71.2295, 0.12", "65.6696, 57.1831, 80.5546, 0.12", "67.2293, 59.7635, 90.0711, 0.12", "68.0287, 62.5526, 99.6198, 0.12", "68.0848, 67.1463, 108.44, 0.12", "68.1466, 72.3418, 116.902, 0.12", "67.0347, 76.8713, 125.687, 0.12" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "35.7902, -21.7497, 4.12915, 0.48", "37.2339, -22.3104, 4.44969, 0.48", "38.7603, -22.9426, 4.69711, 0.48", "39.9494, -23.4425, 4.82997, 0.48", "41.291, -23.9903, 4.94586, 0.72", "42.4354, -24.4372, 5.02792, 0.72", "43.9051, -24.9431, 5.07211, 0.72", "45.7658, -25.4431, 4.89035, 0.72", "47.3814, -25.7853, 4.53249, 0.72", "48.1656, -25.9017, 4.25599, 0.12", "48.7164, -25.9509, 3.99434, 0.36", "50.2338, -25.9894, 3.00116, 0.96", "51.8948, -25.9144, 1.66081, 0.48", "52.8722, -25.8068, 0.755004, 0.6", "53.8953, -25.6555, -0.29679, 0.36", "54.4542, -25.5831, -0.871368, 0.12", "55.9692, -25.4676, -2.33462, 0.6", "56.5076, -25.5009, -2.7858, 0.96", "57.1273, -25.5935, -3.22997, 0.12", "58.114, -25.7274, -3.80882, 0.12", "58.9784, -25.828, -4.23072, 0.72", "59.6116, -25.8998, -4.50674, 0.36", "60.9938, -26.0445, -4.99862, 0.36", "61.2191, -26.0687, -5.07771, 0.12", "62.1279, -26.1633, -5.37124, 0.12", "63.3712, -26.2639, -5.71625, 0.72", "64.8073, -26.3472, -6.16989, 1.08", "65.7826, -26.3762, -6.49589, 0.12", "66.7597, -26.3989, -6.82814, 0.12", "67.3697, -26.4565, -7.03321, 0.48", "67.9697, -26.5863, -7.22055, 0.48", "68.8323, -26.8667, -7.4139, 0.48", "69.0772, -26.9641, -7.45931, 0.12", "69.671, -27.171, -7.54914, 0.12", "70.0004, -27.239, -7.59151, 1.08", "70.9621, -27.3299, -7.67737, 1.56", "72.3028, -27.3355, -7.72673, 0.12", "72.4224, -27.3261, -7.72532, 0.12", "73.0877, -27.2354, -7.71661, 0.12", "73.4582, -27.1557, -7.7117, 0.6", "73.7011, -27.0983, -7.71805, 0.12", "74.7846, -26.8882, -7.77766, 0.12", "75.3159, -26.8243, -7.81587, 0.84", "76.2911, -26.7628, -7.97125, 1.2", "77.3904, -26.702, -8.21065, 0.72", "78.4811, -26.65, -8.48152, 0.36", "79.607, -26.5969, -8.82333, 0.36", "80.5542, -26.546, -9.21215, 0.72", "82.0318, -26.4874, -9.91316, 0.12", "83.3068, -26.4014, -10.6171, 0.12", "84.3512, -26.2824, -11.2393, 1.32", "85.5577, -26.0806, -11.9937, 0.12", "86.9861, -25.7794, -12.926, 0.12", "87.5918, -25.6418, -13.3081, 0.12", "88.6284, -25.4152, -13.8845, 0.12", "89.4601, -25.248, -14.3376, 0.12", "90.1804, -25.0877, -14.6863, 0.48", "90.6823, -24.9789, -14.8551, 0.12", "91.3764, -24.8426, -15.0038, 0.12", "91.8589, -24.7803, -15.0924, 1.08", "92.653, -24.7827, -15.1939, 0.12", "93.6161, -24.879, -15.3934, 0.12", "94.1486, -24.9516, -15.5292, 0.48", "94.3731, -24.9983, -15.5992, 0.12", "95.1908, -25.2411, -15.8956, 0.12", "96.0416, -25.5493, -16.2072, 0.72", "97.4758, -26.0936, -16.578, 0.12", "98.2791, -26.3675, -16.6905, 0.12", "98.6951, -26.4803, -16.7192, 0.36", "98.9586, -26.5294, -16.7209, 0.12", "100.039, -26.623, -16.666, 0.12", "101.679, -26.6527, -16.49, 1.32", "102.869, -26.6181, -16.2977, 0.36", "103.823, -26.5421, -16.1517, 0.12", "104.665, -26.4279, -16.0358, 0.12", "105.254, -26.3169, -15.9682, 0.12", "105.957, -26.1308, -15.9134, 0.6", "106.424, -25.9686, -15.9077, 0.12", "107.127, -25.6851, -15.8998, 0.12", "107.584, -25.4987, -15.8915, 0.6", "108.189, -25.2775, -15.8779, 0.6", "108.759, -25.0964, -15.8642, 0.12", "109.634, -24.8398, -15.8393, 0.12", "110.097, -24.7186, -15.8248, 1.08", "110.59, -24.6221, -15.8095, 0.12", "111.439, -24.4984, -15.789, 0.12", "111.969, -24.4535, -15.7811, 0.84", "112.461, -24.4117, -15.8012, 0.84", "112.953, -24.3797, -15.8411, 0.12", "114.152, -24.3584, -15.9726, 0.12", "114.649, -24.3665, -16.037, 0.12", "116.154, -24.4068, -16.4444, 0.12", "117.299, -24.4807, -16.8569, 1.68", "117.943, -24.5383, -17.064, 0.12", "118.997, -24.6654, -17.3691, 0.12", "119.927, -24.7792, -17.6094, 0.12", "122.504, -25.062, -18.1187, 0.12", "123.767, -25.2247, -18.3385, 0.12", "125.896, -25.5272, -18.5755, 0.6", "126.405, -25.5712, -18.6143, 0.6", "127.176, -25.595, -18.6009, 0.12", "128.137, -25.658, -18.3223, 0.12" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "35.7902, -21.7497, 4.12915, 0.12", "36.4195, -23.2446, 3.8112, 0.12", "36.8332, -24.097, 3.7877, 0.12", "37.1046, -24.6567, 3.83813, 0.12", "37.4364, -25.3699, 3.93881, 0.6", "37.871, -26.3413, 4.09956, 0.6", "38.1051, -26.8721, 4.19291, 0.6", "38.687, -28.081, 4.54889, 0.12", "39.1285, -28.9839, 4.87578, 0.12", "39.3119, -29.3885, 5.03239, 0.48", "39.392, -29.5939, 5.11495, 0.12", "39.6075, -30.1966, 5.33663, 0.12", "39.7799, -30.671, 5.48325, 0.6", "40.1095, -31.457, 5.6758, 0.12", "40.5263, -32.2965, 5.8882, 0.12", "41.1469, -33.3964, 6.14498, 0.6", "41.7366, -34.3122, 6.32507, 0.36", "42.125, -34.8683, 6.44124, 0.12", "42.45, -35.365, 6.53696, 0.12", "42.7587, -35.8605, 6.617, 0.6", "43.3555, -36.8541, 6.77893, 1.32", "44.1096, -38.1354, 6.97254, 0.12", "44.6021, -38.9767, 7.12517, 0.24", "45.382, -40.3052, 7.38994, 0.24", "45.6404, -40.7545, 7.48447, 0.36", "46.0053, -41.4309, 7.62308, 0.72", "46.3821, -42.1823, 7.73638, 0.72", "46.7788, -43.0467, 7.80522, 0.12", "46.965, -43.4257, 7.8437, 0.12", "47.0427, -43.5706, 7.86923, 0.48", "47.6971, -44.8977, 8.17027, 0.48", "48.0417, -45.6592, 8.37257, 0.12", "48.2088, -46.1019, 8.49746, 0.12", "48.7195, -47.6283, 8.91376, 0.72", "48.8737, -48.0704, 9.03801, 0.72", "49.0566, -48.5013, 9.16433, 0.12", "49.2556, -48.8691, 9.23739, 0.12", "49.4465, -49.178, 9.24563, 0.6", "49.8716, -49.7781, 9.1174, 0.6", "50.3637, -50.4157, 8.84056, 0.6", "50.6991, -50.7869, 8.66567, 0.6", "51.7019, -51.7401, 8.30917, 0.12", "52.2933, -52.1928, 8.18466, 0.12", "52.704, -52.4505, 8.14468, 0.6", "53.0849, -52.6497, 8.12543, 0.12", "54.0986, -53.1412, 8.12004, 0.12", "55.2408, -53.7357, 8.08511, 0.72", "55.768, -54.0346, 8.07161, 0.12", "56.1876, -54.3023, 7.98375, 0.12", "57.1411, -55.0054, 7.61992, 1.08", "57.78, -55.5639, 7.25908, 0.12", "58.5838, -56.395, 6.64583, 0.12", "58.8471, -56.7162, 6.40617, 0.12", "59.7121, -57.929, 5.63216, 0.6", "59.8941, -58.1998, 5.49329, 0.12", "60.2573, -58.7708, 5.30835, 0.12", "60.6853, -59.3935, 5.20151, 0.96", "61.2198, -60.1051, 5.19255, 0.96", "61.7441, -60.7384, 5.22197, 0.12", "62.3912, -61.4281, 5.30799, 0.12", "63.2777, -62.2131, 5.38439, 0.12", "63.9133, -62.6917, 5.41288, 0.72", "64.137, -62.8362, 5.41422, 0.72", "64.7406, -63.1568, 5.39456, 0.12", "65.5276, -63.5222, 5.33576, 0.12", "66.3088, -63.818, 5.27909, 0.6", "66.797, -63.9561, 5.25003, 0.12", "67.7925, -64.1866, 5.37832, 0.12", "68.2402, -64.2852, 5.51896, 0.36", "68.3888, -64.3366, 5.58165, 0.12", "69.085, -64.7051, 5.88569, 0.12", "69.5675, -65.0132, 6.06523, 0.72", "71.651, -66.4109, 6.87171, 0.12", "72.7984, -67.2457, 7.33126, 0.12", "74.7015, -68.7343, 8.08025, 0.12", "76.2776, -70.06, 8.65956, 0.12", "77.1784, -70.9198, 8.93889, 0.36", "84.8785, -77.1384, 9.11247, 0.36" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "-24.2408, -22.1879, -69.268, 0.12", "-23.6394, -21.865, -69.3068, 0.12", "-22.0068, -20.9884, -69.4121, 0.12", "-21.2076, -20.5592, -69.4637, 0.36", "-19.4025, -19.59, -69.5802, 0.36" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "-24.2408, -22.1879, -69.268, 0.12", "-24.6518, -22.2588, -68.8999, 0.12", "-25.9126, -22.2798, -68.0502, 0.12", "-26.7599, -22.2939, -67.4793, 0.48", "-28.3398, -22.3202, -66.4146, 0.12", "-29.1441, -22.3336, -65.8726, 0.12", "-29.8477, -22.3453, -65.3984, 0.12", "-31.2889, -22.3594, -64.4502, 0.12" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "-48.5988, -72.4956, -108.923, 0.12", "-48.472, -72.7201, -108.59, 0.12", "-48.099, -73.2676, -107.631, 0.12", "-47.9415, -73.5385, -107.123, 0.6", "-47.4035, -74.7156, -104.913, 0.12", "-47.235, -75.3877, -103.659, 0.12", "-47.1395, -76.3954, -101.861, 0.96", "-47.2089, -77.2054, -100.345, 0.48", "-47.3639, -77.7304, -99.3494, 0.12", "-47.548, -78.0654, -98.7641, 0.12", "-48.2597, -78.8744, -97.5544, 0.12", "-48.5999, -79.2003, -97.0424, 0.84", "-49.2468, -79.7703, -95.9895, 0.12", "-49.4934, -79.9492, -95.5605, 0.12", "-49.8513, -80.1553, -94.5565, 0.12", "-50.2495, -80.3136, -92.9424, 0.84", "-50.6979, -80.4493, -90.8904, 0.84", "-51.3188, -80.6228, -87.8617, 0.84", "-51.5445, -80.6816, -86.6493, 0.84", "-52.4774, -80.9293, -81.2433, 0.84", "-53.1752, -81.1502, -76.9473, 0.36", "-53.4418, -81.2471, -75.3694, 0.36", "-53.5774, -81.3119, -74.6553, 0.72", "-54.1774, -81.8992, -71.3443, 0.12", "-54.2515, -82.051, -70.8361, 0.12", "-54.3037, -82.4171, -70.2727, 0.12", "-54.2732, -82.8471, -69.8497, 0.12", "-54.1318, -83.6367, -69.1108, 0.12", "-54.0158, -84.0434, -68.843, 0.48", "-53.4698, -85.5856, -68.2851, 0.24", "-53.0661, -86.7219, -67.9311, 0.24", "-52.967, -87.0387, -67.847, 0.6", "-52.8438, -87.5368, -67.7381, 0.12", "-52.6812, -88.6015, -67.5025, 0.12", "-52.6026, -89.5151, -67.3215, 0.12", "-52.5982, -90.6796, -67.1543, 0.12", "-52.6678, -91.4422, -67.0239, 0.12", "-52.723, -91.7834, -66.9598, 0.48", "-53.0139, -92.9431, -66.7236, 0.12", "-53.1855, -93.4817, -66.6075, 0.12", "-53.6999, -94.9172, -66.2913, 0.12", "-54.0762, -95.9904, -66.1424, 0.12", "-54.1839, -96.345, -66.1341, 0.48", "-54.3231, -96.8273, -66.1835, 0.12", "-54.4814, -97.42, -66.3101, 0.12", "-54.4814, -97.42, -66.3101, 0.36", "-54.7422, -98.7536, -66.588, 0.12", "-54.8595, -99.4255, -66.7122, 0.12", "-55.0664, -100.494, -66.8823, 0.12", "-55.3803, -101.762, -67.1202, 0.12", "-55.7438, -102.972, -67.3601, 0.12", "-56.0634, -103.962, -67.5466, 0.12", "-56.1974, -104.349, -67.6094, 0.48", "-56.432, -104.978, -67.7496, 0.12", "-56.9878, -106.362, -68.1515, 0.12", "-57.1825, -106.766, -68.297, 0.12", "-57.6115, -107.532, -68.6135, 0.12", "-57.8848, -108.015, -68.8133, 0.6", "-58.2858, -108.763, -69.0917, 0.12", "-58.5032, -109.187, -69.2184, 0.12", "-58.7719, -109.698, -69.3339, 0.6", "-58.8835, -109.899, -69.3839, 0.12", "-59.2196, -110.502, -69.538, 0.12", "-59.4111, -110.871, -69.6231, 0.6", "-59.6093, -111.321, -69.7048, 0.96", "-59.8753, -111.926, -69.8195, 0.12", "-60.1939, -112.668, -69.9663, 0.12", "-60.2949, -112.877, -70.0078, 0.12", "-60.4587, -113.162, -70.0605, 0.36", "-60.5858, -113.38, -70.0928, 0.36", "-60.854, -113.902, -70.1401, 0.36", "-61.1306, -114.436, -70.0875, 0.6", "-61.3041, -114.759, -70.0245, 0.6", "-61.6918, -115.477, -69.8568, 0.6", "-61.9202, -115.892, -69.7518, 0.12", "-62.5092, -117.004, -69.4625, 0.12", "-63.123, -118.271, -69.1324, 0.12", "-63.5327, -119.169, -68.91, 0.12", "-63.941, -120.168, -68.6962, 0.12", "-64.172, -120.781, -68.5853, 0.72", "-64.3719, -121.331, -68.5137, 0.12", "-64.6141, -122.0, -68.4666, 0.12", "-64.9279, -122.943, -68.4666, 0.12", "-65.2118, -123.857, -68.4666, 0.12", "-65.3594, -124.317, -68.4666, 0.12", "-65.7532, -125.467, -68.4666, 0.12", "-65.9636, -126.006, -68.4512, 0.48", "-66.3717, -126.973, -68.3956, 0.48", "-66.5095, -127.285, -68.3688, 0.12", "-66.9629, -128.291, -68.2612, 0.12", "-67.1142, -128.62, -68.2474, 0.24", "-67.3893, -129.196, -68.2635, 0.12", "-67.6889, -129.842, -68.3242, 0.12", "-68.2039, -131.028, -68.5009, 0.12", "-68.4215, -131.56, -68.6331, 0.36", "-68.8614, -132.803, -68.9782, 0.12", "-69.0617, -133.508, -69.1682, 0.12", "-69.3262, -134.502, -69.476, 0.12", "-69.4211, -134.894, -69.6031, 0.6", "-69.6526, -136.159, -70.0027, 0.6", "-69.7805, -137.065, -70.2216, 0.12", "-69.8688, -138.341, -70.3174, 0.12" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-48.5988, -72.4956, -108.923, 0.12", "-50.1876, -71.4865, -112.989, 0.12", "-50.4471, -71.2854, -113.605, 0.12", "-50.6653, -71.0622, -114.169, 0.72", "-50.8753, -70.7608, -114.76, 0.12", "-51.7988, -69.3571, -117.176, 0.12", "-52.0274, -68.9865, -117.744, 0.72", "-52.1341, -68.7671, -117.974, 0.72", "-52.626, -67.5444, -119.155, 0.12", "-52.9871, -66.587, -119.979, 0.12", "-53.4832, -65.2381, -121.098, 0.12", "-53.969, -63.9799, -122.041, 0.12", "-54.2622, -63.2472, -122.598, 0.12", "-54.9613, -61.5494, -123.841, 0.12", "-55.5074, -60.3462, -124.627, 0.12" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "69.9232, -44.8989, -64.4104, 0.12", "70.0888, -44.3208, -65.176, 0.12", "70.1942, -43.3695, -66.2419, 0.12", "70.1982, -42.9938, -66.6025, 0.84", "70.2275, -42.2815, -67.3813, 0.84", "70.3505, -41.5848, -68.4958, 0.12", "70.4606, -41.1547, -69.3386, 0.12", "70.5835, -40.8035, -70.2831, 0.12", "70.6668, -40.7011, -70.8801, 0.6", "71.1314, -40.6191, -73.7328, 0.12", "71.802, -40.9739, -77.131, 0.12", "72.0314, -41.1464, -77.7902, 0.48", "72.5708, -41.591, -78.8999, 0.48", "73.6323, -42.526, -80.8518, 0.6", "73.7907, -42.6799, -81.1072, 0.6", "74.2337, -43.1549, -81.6148, 0.12", "76.5997, -45.425, -83.2903, 0.12", "76.9586, -45.698, -83.5022, 0.36" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "69.9232, -44.8989, -64.4104, 0.12", "69.8782, -46.6501, -63.9689, 0.12", "69.823, -48.7987, -63.4272, 0.12", "69.7905, -50.0611, -63.1089, 0.12", "69.7723, -50.7705, -62.9301, 0.12", "69.7635, -51.1112, -62.8441, 0.12", "69.7606, -51.2248, -62.8155, 0.24" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "158.712, 60.6889, -107.191, 0.12", "159.273, 60.8528, -107.671, 0.12", "160.254, 61.0805, -108.419, 0.12", "160.665, 61.1663, -108.706, 1.2", "162.176, 61.3315, -109.598, 0.12", "163.044, 61.3703, -110.144, 0.12", "163.857, 61.3794, -110.669, 0.12", "163.957, 61.3689, -110.734, 0.6", "164.184, 61.3185, -110.867, 0.12", "165.324, 61.0549, -111.425, 0.12", "166.757, 60.7868, -111.897, 0.12", "166.877, 60.7644, -111.941, 0.36", "167.032, 60.7323, -112.003, 0.12", "167.726, 60.5956, -112.267, 0.12", "168.853, 60.4029, -112.649, 0.12", "169.596, 60.3602, -112.79, 0.72" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "158.712, 60.6889, -107.191, 0.12", "159.021, 60.0447, -107.108, 0.12", "159.34, 59.379, -107.022, 0.12", "160.002, 58.003, -106.844, 0.12", "160.355, 57.2674, -106.748, 0.36" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-95.4994, -86.0011, -58.8478, 0.12", "-95.6624, -86.6146, -58.8664, 0.12", "-96.1815, -88.3217, -59.7297, 0.12", "-96.3, -88.7427, -60.0255, 1.08", "-96.4318, -89.2109, -60.3811, 0.12", "-96.6148, -89.8676, -60.8785, 0.12", "-96.8337, -90.6533, -61.4611, 0.84", "-97.6389, -93.3502, -63.6841, 0.12", "-97.814, -94.0121, -64.3508, 0.12", "-97.8622, -94.2934, -64.6583, 0.12", "-97.8958, -94.6976, -65.107, 0.72", "-97.8868, -94.9533, -65.3857, 0.12", "-97.8386, -95.285, -65.7064, 0.12", "-97.5923, -96.7301, -66.6182, 0.84", "-97.4197, -97.5135, -67.1126, 0.12", "-97.2327, -98.2179, -67.5667, 0.12", "-97.1853, -98.3555, -67.6482, 0.36", "-97.0761, -98.6447, -67.8404, 0.12", "-96.7668, -99.4899, -68.3992, 0.12", "-96.5979, -99.9759, -68.6873, 0.12", "-96.3071, -100.833, -69.1708, 1.08", "-95.9182, -101.968, -69.9184, 0.12", "-95.3841, -103.627, -70.981, 0.12", "-95.2265, -104.118, -71.2899, 0.12", "-95.059, -104.632, -71.607, 0.12", "-94.786, -105.586, -72.1205, 1.08", "-94.4062, -106.998, -72.74, 0.12", "-94.0092, -108.625, -73.3048, 0.12", "-93.9109, -109.014, -73.4112, 0.36", "-93.8716, -109.17, -73.4535, 0.12", "-93.5368, -110.49, -73.7759, 0.12", "-93.412, -110.962, -73.8702, 0.84", "-93.0931, -112.094, -74.0264, 0.96", "-92.8055, -113.016, -74.1624, 0.12", "-92.4514, -114.139, -74.3201, 0.12", "-92.0163, -115.469, -74.4867, 0.12", "-91.7298, -116.297, -74.6072, 0.12", "-91.578, -116.794, -74.6803, 0.48", "-91.5066, -117.044, -74.714, 0.12", "-91.302, -117.824, -74.7987, 0.12", "-91.0704, -118.895, -74.9413, 1.2", "-90.9499, -119.675, -75.0544, 0.12", "-90.7944, -121.17, -75.2644, 0.12", "-90.7055, -122.262, -75.4021, 0.12", "-90.6879, -122.494, -75.4266, 0.36", "-90.6646, -122.823, -75.4536, 0.12", "-90.6278, -123.397, -75.4811, 0.12", "-90.5089, -124.67, -75.4819, 0.72", "-90.4414, -125.194, -75.4818, 0.12", "-90.3156, -126.027, -75.4741, 0.12", "-90.2407, -126.39, -75.4685, 0.48", "-90.1541, -126.741, -75.4618, 0.12", "-89.7724, -128.129, -75.4305, 0.12", "-89.5329, -129.003, -75.4092, 0.48", "-89.4047, -129.529, -75.3982, 0.12", "-88.9581, -131.461, -75.3649, 0.12", "-88.8572, -131.933, -75.3591, 0.6", "-88.7926, -132.288, -75.3563, 0.12", "-88.5967, -133.557, -75.3524, 0.12", "-88.5112, -134.496, -75.3556, 1.08", "-88.4985, -135.015, -75.361, 0.12", "-88.5816, -136.412, -75.3754, 0.12", "-88.6266, -136.892, -75.3798, 0.48", "-88.6423, -137.008, -75.3806, 0.12", "-88.9988, -139.118, -75.3914, 0.12", "-89.0639, -139.443, -75.3923, 0.84", "-89.3332, -140.626, -75.3923, 0.84", "-89.4734, -141.195, -75.3923, 0.12", "-89.9632, -143.162, -75.3923, 0.12", "-90.0503, -143.522, -75.3923, 0.36", "-90.1045, -143.77, -75.3923, 0.12", "-90.3048, -144.811, -75.3923, 0.12", "-90.3048, -144.811, -75.3923, 0.36", "-90.3261, -144.975, -75.3923, 0.12", "-90.5701, -147.31, -75.3923, 0.12", "-90.6339, -147.999, -75.3923, 0.48", "-90.6472, -148.164, -75.3923, 0.12", "-90.736, -149.439, -75.3923, 0.12", "-90.7577, -149.808, -75.3923, 0.48" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-95.4994, -86.0011, -58.8478, 0.12", "-96.2879, -86.2834, -58.8478, 0.12", "-97.117, -86.5803, -58.8478, 0.12", "-97.3689, -86.6704, -58.8478, 0.48", "-97.7251, -86.798, -58.8478, 0.12", "-98.5374, -87.0888, -58.8478, 0.12", "-98.6501, -87.1291, -58.8478, 0.48" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "15.4496, 85.7534, -71.8568, 0.12", "15.8887, 86.7822, -72.8748, 0.12", "16.1915, 87.2307, -73.4496, 0.12", "16.3625, 87.4486, -73.7041, 0.48", "16.7604, 87.9797, -74.2073, 0.12", "17.2676, 88.7514, -74.9084, 0.12", "17.5746, 89.2677, -75.3728, 0.6", "18.2393, 90.4063, -76.4164, 0.12", "18.6417, 91.1531, -77.1059, 0.12", "19.0367, 92.0376, -77.8587, 0.12", "19.3972, 93.0637, -78.6485, 0.6", "19.5963, 93.775, -79.109, 0.12", "19.9622, 95.3824, -80.0241, 0.12", "20.1483, 96.4533, -80.5129, 0.12", "20.2776, 97.5054, -80.9977, 0.12", "20.3351, 97.9393, -81.186, 0.12", "20.5052, 98.9665, -81.5629, 0.12", "20.6113, 99.6282, -81.7788, 0.12", "20.7519, 100.548, -82.0422, 0.12", "21.1325, 102.938, -82.8592, 0.12", "21.2696, 103.711, -83.1758, 0.72", "21.3917, 104.377, -83.4885, 1.08" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "15.4496, 85.7534, -71.8568, 0.36", "16.9356, 86.5947, -73.29, 0.36", "17.38, 86.9443, -73.7286, 0.12", "17.6479, 87.2222, -74.0277, 0.84", "17.9402, 87.5153, -74.3288, 1.08", "18.6419, 88.2229, -75.0752, 0.12", "19.4518, 89.0572, -75.9423, 0.12", "19.7619, 89.4425, -76.2916, 0.72", "20.3271, 90.2783, -77.0255, 0.12", "20.7916, 91.0205, -77.6465, 0.12", "21.2916, 91.8112, -78.2632, 0.6", "21.4718, 92.0785, -78.4343, 0.84", "21.9579, 92.6853, -78.7671, 0.12", "22.5426, 93.3291, -79.1401, 0.12", "23.0151, 93.8256, -79.4758, 0.84", "23.3965, 94.248, -79.7747, 1.32", "24.0886, 95.0131, -80.3222, 0.24", "24.5504, 95.4955, -80.686, 0.24", "25.7572, 96.7005, -81.5996, 0.12", "26.7575, 97.7047, -82.4049, 0.12", "27.324, 98.3405, -82.9397, 0.84", "27.5856, 98.6723, -83.2278, 0.12", "28.0386, 99.309, -83.8132, 0.12", "28.366, 99.8085, -84.2832, 0.48", "28.4944, 100.044, -84.4844, 0.12", "29.0202, 101.16, -85.5134, 0.12", "29.2814, 101.743, -86.1369, 0.72", "29.5923, 102.55, -87.029, 0.84", "29.8099, 103.389, -87.9142, 0.12", "29.9336, 103.953, -88.517, 1.2", "30.1594, 105.038, -89.6289, 0.12", "30.3616, 105.956, -90.5319, 0.12", "30.4816, 106.446, -91.0035, 0.12", "30.7404, 107.321, -91.8839, 0.12", "31.027, 108.102, -92.6865, 0.48", "31.2035, 108.436, -93.0467, 0.48", "31.7215, 109.134, -93.7989, 0.48", "31.8493, 109.263, -93.9681, 0.6", "32.5982, 109.873, -94.9387, 0.24", "33.0633, 110.224, -95.5243, 0.24", "33.4326, 110.503, -95.9706, 0.36", "33.9267, 110.887, -96.552, 0.36", "35.2166, 112.126, -98.1889, 1.08", "35.6966, 112.666, -98.868, 0.12", "35.9626, 113.04, -99.3146, 0.12", "36.1872, 113.432, -99.7686, 0.12", "36.4182, 113.951, -100.314, 0.12", "36.7773, 114.992, -101.293, 0.84", "37.0074, 115.943, -102.027, 0.12", "37.1773, 117.196, -102.985, 0.12", "37.2086, 117.821, -103.472, 0.24", "37.1813, 118.353, -103.863, 0.24", "37.0787, 119.222, -104.492, 0.24", "36.9756, 120.103, -105.029, 0.72", "36.7548, 121.212, -105.906, 0.12", "36.6708, 121.476, -106.158, 0.12", "36.4611, 122.122, -106.819, 0.12", "36.2876, 122.673, -107.615, 0.12", "36.1086, 123.322, -108.697, 0.6", "35.8056, 125.009, -111.661, 0.12", "35.7713, 125.553, -112.607, 0.12", "35.7962, 126.06, -113.605, 1.44", "36.0584, 127.996, -117.46, 0.12", "36.0901, 128.221, -117.896, 0.12", "36.1416, 128.637, -118.692, 0.36", "36.2564, 129.581, -120.32, 0.36", "36.3913, 131.176, -123.141, 0.12", "36.3837, 131.846, -124.263, 0.12", "36.3492, 132.291, -124.868, 0.84", "36.2814, 132.713, -125.44, 0.84", "36.0104, 133.497, -126.456, 0.12", "35.8408, 133.814, -126.835, 0.12", "35.6645, 134.139, -127.156, 0.48", "35.3264, 134.938, -128.013, 0.12", "35.2064, 135.512, -128.599, 0.12", "35.1955, 136.05, -129.135, 0.6", "35.4586, 137.532, -130.477, 0.12", "35.6251, 138.05, -130.956, 0.12", "35.7791, 138.435, -131.379, 0.12", "35.9795, 138.876, -131.874, 0.12", "36.3298, 139.486, -132.608, 0.12", "36.6604, 139.944, -133.159, 0.12", "37.1727, 140.552, -133.88, 0.6", "38.0847, 141.65, -135.211, 0.12", "38.3456, 142.012, -135.622, 0.12", "38.6238, 142.481, -136.095, 0.12", "38.795, 142.829, -136.392, 0.72", "39.1405, 143.592, -137.034, 0.12", "39.4963, 144.344, -137.547, 0.12", "39.6768, 144.72, -137.746, 0.6", "39.8587, 145.069, -137.964, 0.12", "39.9632, 145.28, -138.103, 0.12", "40.5676, 146.517, -138.875, 0.12", "40.8499, 147.044, -139.172, 0.12", "41.1704, 147.524, -139.441, 0.12", "41.6887, 148.213, -139.89, 0.12", "41.9264, 148.505, -140.088, 0.12", "42.3604, 149.12, -140.454, 0.12", "42.7476, 149.737, -140.742, 0.12", "42.9107, 150.072, -140.948, 0.36", "43.3773, 151.251, -141.731, 0.12", "43.4782, 151.596, -141.958, 0.12", "43.7466, 152.651, -142.688, 0.12", "43.8961, 153.253, -143.11, 1.2", "44.2709, 154.839, -144.137, 0.12", "44.4169, 155.423, -144.459, 0.12", "44.6473, 156.213, -144.821, 0.12", "44.6473, 156.213, -144.821, 0.48", "44.8844, 156.773, -145.09, 0.12", "45.1234, 157.315, -145.316, 0.12", "45.3347, 157.742, -145.441, 0.12", "45.6002, 158.219, -145.65, 0.12", "45.9568, 158.802, -145.952, 0.12", "46.2289, 159.293, -146.216, 0.12", "46.5794, 159.963, -146.595, 0.12", "46.6736, 160.137, -146.725, 0.48", "47.0181, 160.754, -147.207, 0.12", "47.4748, 161.479, -147.727, 0.12", "47.6643, 161.743, -147.915, 0.48", "47.8865, 162.043, -148.122, 0.48", "48.6916, 163.136, -148.907, 0.12", "49.2914, 163.899, -149.446, 0.12", "49.9669, 164.698, -149.963, 0.12", "50.2034, 164.94, -150.147, 0.48" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-12.0, 102.33, -113.067, 0.24", "-10.9181, 102.597, -114.208, 0.24", "-10.4017, 102.725, -114.753, 0.24", "-9.90704, 102.847, -115.275, 0.24", "-9.38356, 102.976, -115.828, 0.24", "-8.73584, 103.136, -116.511, 0.6", "-8.41058, 103.216, -116.855, 0.12" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-12.0, 102.33, -113.067, 0.12", "-12.0296, 102.897, -114.019, 0.12", "-11.952, 103.222, -114.604, 0.12", "-11.8197, 103.532, -115.098, 0.12", "-11.41, 104.492, -116.627, 0.72", "-11.2264, 104.922, -117.312, 0.12", "-11.0362, 105.368, -118.022, 0.12", "-10.9794, 105.523, -118.316, 0.12", "-10.7592, 106.077, -119.646, 0.84" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-44.1172, -59.4545, 15.0802, 0.12", "-44.1771, -58.172, 15.12, 0.12", "-44.2269, -57.1044, 15.1531, 0.12", "-45.7647, -47.6336, 16.9643, 0.12" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-44.1172, -59.4545, 15.0802, 0.12", "-44.9271, -59.3354, 15.1399, 0.12", "-46.2782, -59.1367, 15.2396, 0.12", "-48.2999, -58.8394, 15.3887, 0.12", "-57.777, -56.827, 17.8227, 0.12" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-135.229, 11.4029, 70.4932, 0.12", "-137.827, 17.6818, 77.6886, 0.12" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-135.229, 11.4029, 70.4932, 0.12", "-144.798, 8.60962, 70.9671, 0.12", "-154.486, 6.28018, 70.3134, 0.12", "-163.993, 3.3802, 69.4336, 0.12", "-173.38, 0.774305, 67.2522, 0.12", "-182.742, -1.83698, 64.9821, 0.12", "-191.798, -5.56434, 63.1452, 0.12" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-13.3943, -43.505, -2.06388, 0.12", "-14.7639, -42.9199, -2.20608, 0.12", "-15.9832, -42.399, -2.33267, 0.12", "-16.8654, -42.0222, -2.42426, 0.12", "-18.6575, -41.2566, -2.61032, 0.12", "-19.1086, -41.0639, -2.65716, 0.12" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-13.3943, -43.505, -2.06388, 0.6", "-13.6725, -44.4753, -1.68817, 0.6", "-13.998, -45.7783, -1.15671, 0.6", "-14.3552, -47.4124, -0.485954, 0.48", "-14.6771, -49.1978, 0.237845, 0.48", "-14.9187, -50.6618, 0.814922, 0.48", "-15.0666, -51.5362, 1.14646, 0.48", "-15.1752, -52.1544, 1.39912, 0.48", "-15.2542, -52.4935, 1.53807, 0.12", "-15.4048, -52.9518, 1.66276, 0.12", "-15.6582, -53.472, 1.62159, 0.48", "-15.9784, -54.0345, 1.43445, 0.6", "-16.4028, -54.6865, 1.14993, 0.6", "-17.1133, -55.7057, 0.654558, 0.6", "-17.7675, -56.6772, 0.179119, 0.12", "-18.2687, -57.4683, -0.197046, 0.24", "-18.8996, -58.5771, -0.619546, 0.48", "-19.1774, -59.1238, -0.780819, 0.48", "-19.3821, -59.5905, -0.867444, 0.6", "-19.7587, -60.5689, -0.970091, 0.6", "-20.0051, -61.2687, -0.974562, 0.6", "-20.4906, -62.7001, -0.846101, 0.36", "-20.5704, -62.9459, -0.800706, 0.48", "-20.796, -63.7201, -0.652313, 0.48", "-20.9834, -64.4803, -0.459147, 0.36", "-21.2001, -65.4423, -0.0866901, 0.36", "-21.354, -66.3456, 0.32569, 0.84", "-21.4231, -66.8816, 0.585398, 0.96", "-21.533, -67.8087, 1.0636, 0.96", "-21.6531, -68.8668, 1.625, 0.12", "-21.8126, -70.0413, 2.21455, 0.6", "-21.9957, -70.9976, 2.61924, 0.24", "-22.105, -71.3374, 2.72231, 0.72", "-22.4962, -72.1685, 2.91539, 1.08", "-22.9326, -72.8593, 3.01915, 1.08", "-23.6191, -73.8592, 3.0781, 1.08", "-24.1998, -74.6747, 3.09435, 1.08", "-25.3196, -76.2068, 3.1364, 0.72", "-25.9462, -77.0979, 3.16455, 0.36", "-26.5028, -77.9361, 3.23432, 0.36", "-27.188, -79.0417, 3.3696, 0.36", "-27.827, -80.1876, 3.54499, 0.72", "-28.3836, -81.2996, 3.7342, 0.96", "-28.8153, -82.2619, 3.93956, 0.96", "-29.4348, -83.7039, 4.28117, 0.12", "-29.7823, -84.5206, 4.48541, 0.12", "-30.0438, -85.1351, 4.64043, 0.84", "-30.6072, -86.5893, 4.97947, 0.84", "-30.9901, -87.6382, 5.20819, 0.12", "-31.3871, -88.7207, 5.40908, 0.12", "-31.7275, -89.6092, 5.52636, 0.72", "-32.1177, -90.6011, 5.64949, 0.12", "-32.558, -91.5861, 5.74718, 0.12", "-32.6203, -91.7066, 5.75859, 0.12", "-33.0428, -92.3678, 5.80892, 0.12", "-33.5005, -92.9069, 5.86562, 0.48", "-34.1788, -93.5743, 5.95169, 0.6", "-35.4671, -94.6779, 6.11119, 0.6", "-36.5037, -95.5161, 6.2386, 0.24", "-37.0971, -96.0347, 6.31528, 0.24", "-37.8947, -96.785, 6.42808, 0.24", "-37.9802, -96.8662, 6.43976, 0.12", "-38.6054, -97.4086, 6.5287, 0.12", "-38.8626, -97.6218, 6.56294, 1.08", "-40.1241, -98.6895, 6.69039, 0.36", "-40.2095, -98.771, 6.70078, 0.12", "-41.1701, -99.8161, 6.83822, 0.12", "-41.836, -100.513, 6.93854, 0.84" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "6.04969, -53.2822, 14.0493, 0.48", "5.18865, -52.6914, 13.6193, 0.48", "4.34715, -52.0888, 13.277, 0.48", "3.0916, -51.2897, 12.7283, 0.48", "2.25541, -50.8206, 12.361, 0.72", "1.4135, -50.4222, 11.9364, 0.36", "0.624979, -50.1371, 11.4603, 0.36", "-0.280824, -50.0107, 10.8501, 0.36", "-1.80751, -50.1474, 9.74256, 0.36", "-2.27954, -50.283, 9.39928, 0.36", "-3.43936, -50.8845, 8.49644, 0.96", "-4.41722, -51.6529, 7.59651, 0.36", "-5.06213, -52.3838, 6.92728, 0.36", "-5.46694, -52.9843, 6.38694, 0.6", "-5.63824, -53.2544, 6.14718, 0.12", "-6.04355, -53.8121, 5.64214, 0.12", "-6.89824, -54.7754, 4.74801, 0.72", "-7.67175, -55.4027, 4.1126, 0.96", "-9.59426, -56.4338, 2.95107, 0.48", "-10.5241, -56.7953, 2.5198, 0.48", "-11.5645, -57.1106, 2.16353, 0.96", "-12.3138, -57.3146, 1.99476, 0.12", "-14.1672, -57.7502, 1.73728, 0.12", "-15.8421, -58.075, 1.5914, 0.12", "-17.4934, -58.3852, 1.56118, 0.12", "-18.979, -58.6734, 1.54363, 0.12", "-21.4967, -59.1844, 1.51494, 0.12", "-22.9498, -59.4676, 1.52781, 0.12", "-24.3692, -59.6824, 1.6485, 0.24", "-25.1522, -59.7212, 1.78613, 0.12", "-26.5701, -59.5975, 2.20658, 0.12", "-27.0458, -59.458, 2.40966, 0.12", "-27.7128, -58.9584, 2.82313, 0.36", "-28.8743, -57.5766, 3.71174, 0.12", "-29.5971, -56.3921, 4.37192, 0.12", "-29.8711, -55.7993, 4.65202, 0.36", "-30.0014, -55.3884, 4.82887, 0.12", "-30.3943, -53.8561, 5.41379, 0.12", "-30.4605, -53.5432, 5.50219, 0.24", "-40.0148, -52.2384, 2.87069, 0.24", "-49.5279, -49.7743, 1.10599, 0.24" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "6.04969, -53.2822, 14.0493, 0.6", "5.91894, -54.1586, 14.2573, 0.6", "5.7427, -55.4161, 14.5431, 0.48", "5.48427, -57.0932, 14.9047, 0.48", "5.26124, -58.2483, 15.1098, 0.12", "5.0236, -59.5049, 15.2228, 0.12", "4.95032, -59.9259, 15.241, 0.96", "4.83963, -60.5504, 15.2415, 0.48", "4.7221, -61.3203, 15.2063, 0.24", "4.51753, -63.3903, 14.984, 0.24", "4.47016, -65.0772, 14.732, 0.48", "4.43706, -66.0143, 14.6265, 0.36", "4.44083, -67.2874, 14.5211, 0.36", "4.68721, -69.8295, 14.3939, 0.36", "4.86689, -70.6793, 14.3837, 0.12", "5.52479, -72.6393, 14.4518, 0.12", "6.41559, -74.7999, 14.6174, 0.12", "7.02146, -76.1161, 14.7348, 0.12", "7.88619, -77.7476, 14.9095, 0.12", "8.87508, -79.354, 15.1208, 0.12", "10.3713, -81.757, 15.4617, 0.12", "10.7234, -82.3128, 15.5105, 0.84", "12.8599, -91.7333, 16.9526, 0.84", "13.9931, -101.408, 17.4534, 0.84" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "4.41647, -33.2096, 14.6829, 0.12", "4.50997, -31.9377, 14.7115, 0.12", "4.60168, -30.6901, 14.7396, 0.12", "4.75495, -28.605, 14.7866, 0.12", "4.81185, -27.8311, 14.8041, 0.12", "4.90895, -26.5102, 14.8338, 0.12", "7.12628, -17.1198, 13.3092, 0.12", "10.139, -7.95526, 11.7054, 0.12" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "4.41647, -33.2096, 14.6829, 0.12", "5.149, -33.6132, 14.6961, 0.12", "6.0527, -34.111, 14.7124, 0.12", "6.74568, -34.4928, 14.7249, 0.12", "7.87725, -35.1162, 14.7453, 0.12", "9.02633, -35.7493, 14.7661, 0.12", "10.0916, -36.3362, 14.7853, 0.12", "17.7778, -42.376, 16.3821, 0.12", "24.1147, -49.068, 19.9506, 0.12", "29.3035, -55.8655, 24.8973, 0.12", "33.1888, -63.687, 29.4308, 0.12" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "106.868, -18.5435, 42.2546, 0.12", "116.489, -19.5145, 39.715, 0.12", "125.844, -19.496, 36.1832, 0.12", "134.077, -17.7814, 30.784, 0.12", "142.201, -16.9427, 25.0173, 0.12", "151.026, -14.5287, 21.019, 0.12" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "106.868, -18.5435, 42.2546, 0.12", "115.237, -17.9669, 47.6957, 0.12", "123.644, -18.469, 53.0874, 0.12", "131.587, -19.6682, 59.036, 0.12", "139.552, -22.559, 64.3054, 0.12", "148.121, -24.8583, 68.8888, 0.12", "156.517, -26.5222, 74.0457, 0.12", "164.266, -28.9401, 79.8619, 0.12", "171.974, -32.0848, 85.3542, 0.12", "179.221, -33.9941, 91.9606, 0.12", "185.366, -36.576, 99.3922, 0.12" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "81.3107, -36.673, 23.2008, 0.12", "81.4137, -36.2012, 23.2106, 0.12", "81.6623, -35.0628, 23.2343, 0.12", "82.0337, -33.3618, 23.2697, 0.12", "82.1367, -32.89, 23.2796, 0.24", "83.0921, -23.3014, 24.8188, 0.24", "84.5742, -13.769, 26.3082, 0.24", "87.9957, -4.95753, 28.8807, 0.24", "92.2528, 2.9926, 32.8037, 0.24", "95.7395, 10.5969, 38.0012, 0.24" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "81.3107, -36.673, 23.2008, 0.48", "81.9588, -37.2198, 23.3803, 0.48", "83.1149, -38.0563, 23.7037, 0.48", "84.3873, -38.8344, 23.9978, 0.48", "86.1503, -39.6758, 24.3144, 0.12", "87.1276, -40.0781, 24.4451, 0.12", "87.8498, -40.3317, 24.4793, 0.48", "89.0144, -40.5608, 24.41, 0.48", "90.1062, -40.5889, 24.3242, 0.48", "90.6964, -40.4328, 24.1156, 0.72", "91.5212, -40.0927, 23.6359, 0.72", "92.3151, -39.7037, 23.0403, 0.12", "92.7978, -39.6069, 22.6223, 0.12", "102.702, -40.86, 22.1196, 0.12" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-7.0564, -142.775, 36.7091, 0.12", "-9.34019, -152.267, 36.716, 0.12", "-10.2176, -161.966, 37.2388, 0.12", "-10.089, -171.465, 39.4905, 0.12", "-8.38124, -180.41, 43.0835, 0.12" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-7.0564, -142.775, 36.7091, 0.12", "-10.3864, -151.713, 38.9165, 0.12", "-12.4077, -161.042, 41.0045, 0.12", "-14.0608, -170.273, 43.7669, 0.12", "-15.7951, -179.602, 46.0986, 0.12" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "67.0347, 76.8713, 125.687, 0.12", "69.9555, 80.5117, 134.492, 0.12", "73.7249, 83.651, 143.177, 0.12", "77.0851, 87.7593, 151.6, 0.12" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "67.0347, 76.8713, 125.687, 0.12", "69.2908, 81.1094, 134.406, 0.12" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "84.8785, -77.1384, 9.11247, 0.12", "91.5188, -84.3936, 8.38141, 0.12" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "84.8785, -77.1384, 9.11247, 0.12", "91.2888, -84.4971, 10.5068, 0.12" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "-31.2889, -22.3594, -64.4502, 0.12", "-31.6673, -21.0257, -64.9771, 0.12", "-31.6892, -20.8687, -65.0262, 0.12", "-31.8296, -20.2233, -65.1666, 0.12", "-32.1792, -18.9718, -65.4, 0.12", "-32.3896, -18.419, -65.4928, 0.12", "-32.6947, -17.7478, -65.5876, 0.12", "-32.9379, -17.3276, -65.5876, 0.48", "-33.6908, -16.3316, -65.5876, 0.36", "-33.8989, -16.1664, -65.5876, 0.12", "-34.4825, -16.0306, -65.5876, 0.12", "-35.2406, -15.9974, -65.5876, 0.96", "-35.7302, -16.0672, -65.5876, 0.36", "-36.2725, -16.2761, -65.729, 0.36", "-36.7725, -16.5496, -66.1212, 0.12", "-37.2153, -16.8228, -66.5848, 0.12", "-37.6338, -17.1601, -67.0874, 0.12", "-38.0072, -17.5173, -67.5521, 0.96", "-39.3977, -18.8095, -69.2427, 0.24", "-40.422, -19.7472, -70.4462, 0.12", "-40.8594, -20.1473, -70.9266, 0.12", "-41.757, -20.9363, -71.7278, 0.12", "-42.322, -21.3744, -72.1897, 0.12", "-43.0517, -21.8288, -72.6688, 0.12", "-43.595, -22.0748, -72.9113, 0.12", "-44.2086, -22.3113, -73.1442, 0.12", "-45.4713, -22.6686, -73.6082, 0.12", "-47.9065, -23.1918, -74.4562, 0.12", "-48.5807, -23.3195, -74.6722, 0.12", "-49.7458, -23.5348, -75.0013, 0.12", "-51.5242, -23.8621, -75.4293, 0.12", "-52.8008, -24.1183, -75.6698, 0.12", "-53.5333, -24.2958, -75.7496, 0.12", "-54.5769, -24.6025, -75.7496, 0.12", "-55.6141, -24.9187, -75.7496, 0.12", "-56.2228, -25.1015, -75.7496, 0.12", "-56.8489, -25.2574, -75.7496, 0.12", "-57.6609, -25.4726, -75.7496, 0.12", "-58.7104, -25.7474, -75.7496, 0.12", "-59.9142, -26.0757, -75.7496, 0.12", "-60.8399, -26.3235, -75.7532, 0.12", "-61.2598, -26.4366, -75.7547, 0.12", "-61.5167, -26.5123, -75.7555, 0.36", "-61.8253, -26.65, -75.7566, 0.12", "-62.1511, -26.9277, -75.7577, 0.12", "-62.6468, -27.5498, -75.7584, 0.12", "-63.0078, -28.0099, -75.7582, 0.36", "-63.1141, -28.1388, -75.758, 0.12", "-63.5877, -28.6574, -75.8643, 0.12", "-63.8782, -28.9542, -75.9652, 0.12", "-64.38, -29.4374, -76.2457, 0.12", "-64.9107, -29.9702, -76.5996, 0.12", "-65.9364, -30.9459, -77.3136, 0.12", "-67.1503, -32.0689, -78.2, 0.84", "-67.5751, -32.4534, -78.5396, 0.84", "-68.3921, -33.2307, -79.2801, 0.12", "-69.4898, -34.4137, -80.4837, 0.12" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "-31.2889, -22.3594, -64.4502, 0.48", "-31.5085, -22.6555, -65.1881, 0.48", "-31.754, -23.0443, -66.0963, 0.48", "-32.7292, -24.4646, -69.1642, 0.12", "-32.9117, -24.731, -69.6662, 0.12", "-33.0743, -24.959, -70.1852, 0.48", "-33.7237, -25.7813, -72.1586, 0.12", "-33.8621, -25.9699, -72.5755, 0.12", "-34.2221, -26.4377, -73.5394, 0.12", "-34.8708, -27.1406, -74.8455, 0.48", "-36.873, -29.1391, -78.3753, 0.12", "-37.2966, -29.5366, -79.0344, 0.12", "-38.1973, -30.3269, -80.3736, 0.12", "-38.798, -30.8412, -81.2685, 0.12", "-39.2866, -31.2589, -81.9752, 0.12", "-39.8032, -31.6499, -82.6003, 0.12", "-40.9993, -32.5031, -83.7147, 0.48", "-42.9919, -33.8997, -85.6208, 0.12", "-43.7298, -34.3701, -86.2892, 0.12", "-44.2063, -34.684, -86.6788, 0.12", "-44.8358, -35.1151, -87.1074, 0.12", "-45.5617, -35.6298, -87.4551, 0.12", "-46.3439, -36.244, -87.6084, 0.12", "-47.1873, -36.9894, -87.6084, 0.12", "-47.9064, -37.702, -87.6084, 0.12", "-48.5195, -38.4095, -87.6084, 0.12", "-49.0983, -39.1533, -87.6084, 0.12", "-49.5453, -39.7599, -87.6675, 0.12", "-50.0106, -40.4458, -87.8609, 0.48", "-50.2344, -40.855, -88.0218, 0.12", "-50.6769, -41.8311, -88.4427, 0.12", "-51.023, -42.7065, -88.8384, 0.36", "-51.4776, -44.0974, -89.6077, 0.12", "-51.8395, -45.7156, -90.5587, 0.12", "-51.9921, -47.0125, -91.3197, 0.12", "-52.0012, -48.46, -92.1211, 0.12", "-51.9471, -49.0409, -92.484, 0.48", "-51.6574, -50.8336, -93.6212, 0.12", "-51.4339, -52.0397, -94.3474, 0.12", "-51.2681, -52.8758, -94.9128, 0.12", "-51.068, -53.9326, -95.9994, 0.12", "-50.845, -55.4551, -98.5173, 0.12", "-50.8152, -55.8531, -99.383, 0.12", "-50.8098, -56.1036, -100.034, 0.12", "-50.8203, -56.5104, -101.249, 0.48", "-50.9635, -57.7195, -105.111, 0.84", "-51.2668, -58.9718, -109.355, 0.48", "-51.4147, -59.4132, -110.957, 0.48", "-51.5687, -59.754, -112.318, 0.12", "-51.6293, -59.8743, -112.783, 0.12", "-51.7936, -60.1367, -113.666, 0.12", "-52.0564, -60.4596, -114.547, 1.2", "-53.4743, -61.6698, -117.485, 0.12", "-53.7555, -61.8612, -117.977, 0.12", "-54.2366, -62.1047, -118.766, 0.12", "-54.6515, -62.2792, -119.514, 0.12" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "-55.5074, -60.3462, -124.627, 0.12", "-54.5397, -60.3686, -124.364, 0.12", "-53.4018, -60.4147, -123.968, 0.12", "-51.9017, -60.4428, -123.409, 0.12", "-50.1252, -60.4372, -122.693, 0.12", "-49.7833, -60.432, -122.58, 0.48", "-48.086, -60.3446, -122.392, 0.12", "-46.8673, -60.2361, -122.386, 0.12", "-46.0996, -60.1271, -122.411, 0.12", "-44.7385, -59.8316, -122.53, 0.12", "-42.8845, -59.3218, -122.962, 0.12", "-39.1986, -58.1122, -124.097, 0.12", "-38.3862, -57.8086, -124.406, 0.12", "-36.6052, -57.0226, -125.144, 0.72", "-35.9996, -56.7188, -125.407, 0.72", "-33.9426, -55.5732, -126.363, 0.12", "-32.4961, -54.7627, -126.946, 0.12", "-32.1264, -54.5864, -127.079, 0.48", "-31.3596, -54.3488, -127.409, 0.12", "-30.7546, -54.2725, -127.752, 0.12", "-29.4957, -54.3597, -128.468, 0.12", "-28.5319, -54.6172, -128.982, 0.12", "-27.8605, -54.9172, -129.4, 0.12", "-27.1697, -55.3262, -129.838, 0.48", "-25.57, -56.5505, -130.743, 0.12", "-25.22, -56.8474, -130.915, 0.12", "-24.8765, -57.1605, -131.069, 0.36", "-24.5745, -57.4442, -131.175, 0.12", "-23.7752, -58.259, -131.37, 0.12", "-22.4505, -59.7479, -131.548, 0.12", "-22.0416, -60.231, -131.564, 0.48", "-21.1752, -61.2717, -131.562, 0.12", "-20.0836, -62.5753, -131.512, 0.12", "-18.9986, -63.7952, -131.422, 0.12", "-17.6358, -65.2515, -131.262, 0.12", "-17.0081, -65.9238, -131.167, 0.12", "-16.4262, -66.5419, -131.058, 0.48", "-16.0093, -66.9577, -130.954, 0.12", "-14.7304, -68.1104, -130.656, 0.12", "-14.2681, -68.4615, -130.527, 0.6" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "-55.5074, -60.3462, -124.627, 0.12", "-56.7221, -57.8841, -127.893, 0.12", "-56.9398, -57.4499, -128.468, 0.12", "-57.7512, -55.9117, -130.269, 0.12", "-58.0564, -55.3358, -130.896, 0.12", "-58.2053, -55.069, -131.196, 0.12", "-58.3802, -54.7636, -131.533, 0.84", "-58.8842, -53.938, -132.332, 0.12", "-59.6126, -52.8607, -133.434, 0.12", "-60.2887, -52.0531, -134.299, 0.48", "-61.0628, -51.2041, -135.249, 0.24", "-61.4646, -50.775, -135.791, 0.6", "-62.0198, -50.2296, -136.53, 0.12", "-62.4859, -49.8265, -137.095, 0.12", "-63.1614, -49.2939, -137.91, 0.12", "-63.5869, -48.9393, -138.378, 0.6", "-64.8575, -47.7951, -139.667, 0.12", "-65.3174, -47.4054, -140.119, 0.12", "-65.6193, -47.1599, -140.471, 0.12", "-66.0048, -46.8665, -140.972, 0.12", "-67.089, -46.1064, -142.377, 0.12", "-67.4876, -45.8729, -142.825, 0.6", "-67.9944, -45.5827, -143.325, 0.6", "-69.9537, -44.4733, -145.281, 0.12", "-70.2717, -44.3035, -145.595, 0.12", "-70.7564, -44.0446, -146.057, 0.12", "-71.5849, -43.5907, -146.77, 0.12", "-72.6538, -42.9397, -147.727, 0.12", "-72.9005, -42.7464, -147.937, 0.96", "-73.5059, -42.1574, -148.479, 0.12", "-73.8779, -41.7363, -148.877, 0.12", "-74.0573, -41.5031, -149.12, 0.48", "-74.9584, -40.0983, -150.48, 0.12", "-75.6669, -38.8205, -151.583, 0.12", "-76.395, -37.3328, -152.784, 0.12", "-76.627, -36.7495, -153.199, 1.08", "-77.1021, -35.2941, -154.141, 0.12", "-77.6147, -33.1909, -155.502, 0.12", "-77.6838, -32.6187, -155.913, 0.96", "-77.673, -32.1637, -156.414, 0.12", "-77.5785, -31.1437, -157.61, 0.12", "-77.5306, -30.8901, -157.952, 0.6", "-77.0764, -29.5373, -160.216, 0.24", "-76.4935, -28.4981, -162.695, 0.96", "-75.7421, -27.4059, -165.843, 0.36" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "21.3917, 104.377, -83.4885, 0.12", "21.4198, 105.074, -83.6963, 0.12", "21.5876, 107.002, -84.3659, 0.12", "21.784, 108.597, -85.0481, 0.12", "22.079, 110.718, -86.0188, 0.12", "22.3042, 112.443, -86.8303, 0.12", "22.4232, 113.423, -87.3305, 0.12", "22.633, 115.396, -88.4214, 0.48", "22.7301, 116.685, -89.2712, 0.24", "22.7208, 117.522, -89.9093, 0.24", "22.6313, 118.054, -90.3389, 0.48", "22.232, 119.065, -91.1234, 0.12", "21.707, 120.045, -91.7426, 0.12", "20.5161, 121.993, -92.7284, 0.12", "19.8481, 123.105, -93.1676, 0.12", "19.3061, 124.095, -93.4834, 0.12", "18.3438, 126.065, -93.9786, 0.12", "17.7266, 127.475, -94.2264, 0.72", "17.2074, 128.81, -94.4215, 0.12", "16.3922, 131.127, -94.6632, 0.12", "15.7239, 133.359, -94.9866, 0.12", "15.5239, 134.136, -95.1047, 0.12", "15.0996, 136.104, -95.4201, 0.36", "14.8135, 137.472, -95.6396, 0.96", "14.6933, 138.076, -95.7248, 1.2", "14.3929, 139.815, -96.0811, 0.12" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "21.3917, 104.377, -83.4885, 0.12", "22.2975, 103.617, -83.9835, 0.12", "22.7129, 103.274, -84.2368, 0.12", "23.2318, 102.847, -84.5533, 0.12", "24.1718, 102.072, -85.1265, 0.12", "25.073, 101.329, -85.6761, 0.12", "25.5539, 100.933, -85.9694, 0.12", "26.3827, 100.199, -86.4559, 0.12" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-10.7592, 106.077, -119.646, 0.12", "-10.2404, 106.083, -119.692, 0.12", "-9.57274, 106.21, -119.747, 0.12", "-8.95432, 106.533, -119.795, 0.12", "-8.54224, 106.904, -120.009, 0.24", "-8.37122, 107.066, -120.15, 0.12", "-8.26439, 107.165, -120.26, 0.12", "-7.7293, 107.642, -120.873, 0.12", "-7.3165, 107.925, -121.401, 0.12", "-6.34627, 108.32, -122.842, 0.84", "-5.87163, 108.409, -123.558, 0.12", "-5.40668, 108.422, -124.215, 0.6", "-5.04332, 108.383, -124.703, 0.84", "-4.11287, 108.129, -125.841, 0.36", "-2.79816, 107.551, -127.228, 0.36", "-2.37897, 107.318, -127.585, 0.36", "-2.03374, 107.072, -128.005, 0.36", "-1.91968, 106.966, -128.186, 0.36", "-1.6612, 106.684, -128.69, 0.72", "-1.247, 106.222, -129.621, 0.72", "-0.701017, 105.581, -130.98, 0.12", "1.12728, 103.505, -135.722, 0.12", "1.3724, 103.249, -136.346, 0.12", "1.5705, 103.074, -136.812, 0.36", "1.90077, 102.833, -137.477, 0.36", "2.03693, 102.773, -137.7, 0.12", "2.32195, 102.691, -138.077, 0.12", "2.75853, 102.68, -138.389, 0.12", "3.15278, 102.709, -138.702, 0.48", "4.10343, 102.824, -139.482, 0.48", "6.25803, 103.118, -141.483, 0.48", "6.5121, 103.161, -141.735, 0.12", "6.79951, 103.22, -142.041, 0.12", "7.51537, 103.409, -142.862, 0.48", "7.96568, 103.555, -143.416, 0.48", "8.91251, 103.95, -144.648, 0.12", "9.38412, 104.072, -145.072, 0.12" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-10.7592, 106.077, -119.646, 0.12", "-11.4378, 107.286, -119.98, 0.12", "-11.9164, 107.955, -120.123, 0.12", "-12.302, 108.442, -120.211, 0.12", "-12.8432, 109.061, -120.308, 0.12", "-13.2114, 109.432, -120.361, 0.84", "-13.4841, 109.688, -120.394, 0.12", "-14.3631, 110.471, -120.374, 0.12", "-14.4963, 110.573, -120.371, 0.48", "-14.9481, 110.848, -120.362, 0.12", "-15.493, 111.092, -120.356, 0.12", "-15.6511, 111.153, -120.356, 0.48" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-45.7647, -47.6336, 16.9643, 0.12", "-49.6405, -40.6517, 11.1591, 0.12", "-52.6868, -33.0981, 5.61848, 0.12", "-56.0231, -26.5125, -0.957716, 0.12", "-57.5948, -18.51, -6.4499, 0.12", "-59.8753, -10.1273, -11.0193, 0.12", "-62.3686, -2.18311, -16.2534, 0.12", "-64.9157, 6.61107, -19.7402, 0.12", "-68.5874, 15.3946, -22.0558, 0.12" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-45.7647, -47.6336, 16.9643, 0.12", "-46.5425, -38.2876, 19.7047, 0.12", "-47.998, -29.3492, 23.4247, 0.12", "-48.0548, -20.5209, 27.6684, 0.12" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-41.836, -100.513, 6.93854, 0.12", "-42.9637, -99.482, 8.48956, 0.12", "-43.3132, -99.1624, 8.97032, 0.12", "-43.9667, -98.5648, 9.86911, 0.12", "-49.6629, -94.961, 17.2102, 0.12", "-55.0202, -91.5233, 24.8827, 0.12", "-60.03, -88.5576, 32.9852, 0.12", "-63.3196, -85.1582, 41.7614, 0.12", "-68.5119, -80.9369, 49.1299, 0.12", "-74.1834, -78.4518, 56.9617, 0.12", "-81.0876, -77.3047, 64.0996, 0.12" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-41.836, -100.513, 6.93854, 0.12", "-42.0043, -100.878, 7.33127, 0.12", "-42.3375, -101.627, 7.92295, 0.12", "-43.5628, -104.033, 9.11405, 0.96", "-43.8348, -104.511, 9.35741, 1.2", "-44.4569, -105.403, 9.81211, 0.96", "-44.8272, -105.828, 10.0253, 0.12", "-45.8057, -106.652, 10.3652, 0.12", "-47.3099, -107.624, 10.7816, 0.36", "-49.0085, -108.474, 11.117, 0.12", "-50.3045, -109.036, 11.393, 0.48", "-51.6411, -109.521, 11.7052, 1.08", "-53.6272, -110.146, 12.2263, 0.24", "-55.3218, -110.583, 12.7161, 0.12", "-56.7675, -110.93, 13.1818, 0.12", "-63.3387, -116.882, 17.6029, 0.12" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-49.5279, -49.7743, 1.10599, 0.12", "-52.4031, -47.0498, -8.05505, 0.12", "-56.4777, -42.976, -16.1753, 0.12", "-60.412, -38.8618, -24.3433, 0.12", "-63.3554, -35.2829, -33.1673, 0.12" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-49.5279, -49.7743, 1.10599, 0.12", "-53.7715, -52.3922, 9.75364, 0.12" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "151.026, -14.5287, 21.019, 0.12", "159.913, -15.2624, 16.4966, 0.12", "169.038, -14.676, 12.4491, 0.12", "178.193, -13.4324, 8.63384, 0.12", "186.561, -13.43, 3.15802, 0.12", "194.7, -13.9353, -2.62776, 0.12" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "151.026, -14.5287, 21.019, 0.12", "159.954, -12.8129, 16.8714, 0.12", "169.133, -9.50258, 14.8215, 0.12", "177.697, -4.86174, 12.8185, 0.12", "185.469, 1.26516, 12.4809, 0.12" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "14.3929, 139.815, -96.0811, 0.12", "14.3944, 139.981, -96.0054, 0.12", "14.3988, 140.459, -95.7869, 0.12", "14.4114, 141.821, -95.1645, 0.6", "14.4155, 142.265, -94.9616, 0.12", "14.4265, 143.451, -94.4196, 0.12" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "14.3929, 139.815, -96.0811, 0.12", "13.2905, 140.902, -95.4079, 0.12", "12.6355, 141.548, -95.008, 0.12", "12.2858, 141.892, -94.7944, 0.12" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "9.38412, 104.072, -145.072, 0.12", "9.87027, 104.185, -145.078, 0.12", "10.8203, 104.409, -145.088, 0.12", "11.342, 104.531, -145.094, 0.84", "11.9701, 104.679, -145.1, 0.12", "12.6986, 104.851, -145.108, 0.12", "13.4363, 105.024, -145.116, 0.12", "13.9125, 105.155, -145.116, 0.48" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "9.38412, 104.072, -145.072, 0.6", "10.1938, 103.255, -145.94, 0.6", "10.7868, 102.656, -146.575, 0.6" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-63.3554, -35.2829, -33.1673, 0.12", "-57.9562, -28.5001, -37.9059, 0.12" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-63.3554, -35.2829, -33.1673, 0.12", "-71.0387, -35.9354, -39.5327, 0.12", "-79.4821, -38.0148, -44.448, 0.12", "-88.6552, -39.9524, -47.8984, 0.12" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "194.7, -13.9353, -2.62776, 0.12", "202.906, -9.93679, -6.60869, 0.12", "210.85, -4.94055, -9.87034, 0.12" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "194.7, -13.9353, -2.62776, 0.12", "203.283, -15.5618, -7.4817, 0.12" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "185.469, 1.26516, 12.4809, 0.12", "194.036, 6.23412, 11.6861, 0.12", "202.754, 10.9348, 12.5486, 0.12" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "185.469, 1.26516, 12.4809, 0.12", "194.145, 3.45475, 8.04491, 0.12", "202.194, 7.0809, 3.42053, 0.12", "210.36, 10.201, -1.38338, 0.12", "217.956, 13.6666, -6.82998, 0.12", "226.26, 17.2292, -11.033, 0.12", "234.419, 20.2406, -15.9239, 0.12" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "210.85, -4.94055, -9.87034, 0.12", "219.016, -0.300114, -13.1356, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "210.85, -4.94055, -9.87034, 0.12", "218.893, -0.513555, -13.7041, 0.12", "227.435, 2.94097, -17.5082, 0.12", "236.051, 5.55794, -21.8153, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_84", "dend_62", "dend_61", "dend_35", "dend_14", "dend_7", "dend_0", "dend_95", "dend_90", "dend_85", "dend_79", "dend_78", "dend_63", "dend_52", "dend_36", "dend_20", "dend_15", "dend_9", "dend_8", "dend_2", "dend_1", "dend_101", "dend_96", "dend_94", "dend_91", "dend_87", "dend_86", "dend_81", "dend_80", "dend_71", "dend_64", "dend_56", "dend_53", "dend_47", "dend_40", "dend_37", "dend_24", "dend_21", "dend_19", "dend_16", "dend_13", "dend_10", "dend_6", "dend_3", "dend_105", "dend_102", "dend_100", "dend_97", "dend_93", "dend_92", "dend_89", "dend_88", "dend_83", "dend_82", "dend_73", "dend_72", "dend_70", "dend_65", "dend_58", "dend_57", "dend_55", "dend_54", "dend_51", "dend_48", "dend_42", "dend_41", "dend_39", "dend_38", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_12", "dend_11", "dend_5", "dend_4", "dend_104", "dend_103", "dend_99", "dend_98", "dend_75", "dend_74", "dend_67", "dend_66", "dend_60", "dend_59", "dend_50", "dend_49", "dend_44", "dend_43", "dend_30", "dend_27", "dend_77", "dend_76", "dend_69", "dend_68", "dend_46", "dend_45", "dend_32", "dend_31", "dend_29", "dend_28", "dend_34", "dend_33" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_84", "dend_62", "dend_61", "dend_35", "dend_14", "dend_7", "dend_0", "dend_95", "dend_90", "dend_85", "dend_79", "dend_78", "dend_63", "dend_52", "dend_36", "dend_20", "dend_15", "dend_9", "dend_8", "dend_2", "dend_1", "dend_101", "dend_96", "dend_94", "dend_91", "dend_87", "dend_86", "dend_81", "dend_80", "dend_71", "dend_64", "dend_56", "dend_53", "dend_47", "dend_40", "dend_37", "dend_24", "dend_21", "dend_19", "dend_16", "dend_13", "dend_10", "dend_6", "dend_3", "dend_105", "dend_102", "dend_100", "dend_97", "dend_93", "dend_92", "dend_89", "dend_88", "dend_83", "dend_82", "dend_73", "dend_72", "dend_70", "dend_65", "dend_58", "dend_57", "dend_55", "dend_54", "dend_51", "dend_48", "dend_42", "dend_41", "dend_39", "dend_38", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_12", "dend_11", "dend_5", "dend_4", "dend_104", "dend_103", "dend_99", "dend_98", "dend_75", "dend_74", "dend_67", "dend_66", "dend_60", "dend_59", "dend_50", "dend_49", "dend_44", "dend_43", "dend_30", "dend_27", "dend_77", "dend_76", "dend_69", "dend_68", "dend_46", "dend_45", "dend_32", "dend_31", "dend_29", "dend_28", "dend_34", "dend_33" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_84", "dend_62", "dend_61", "dend_35", "dend_14", "dend_7", "dend_0", "axon_0", "dend_95", "dend_90", "dend_85", "dend_79", "dend_78", "dend_63", "dend_52", "dend_36", "dend_20", "dend_15", "dend_9", "dend_8", "dend_2", "dend_1", "axon_1", "dend_101", "dend_96", "dend_94", "dend_91", "dend_87", "dend_86", "dend_81", "dend_80", "dend_71", "dend_64", "dend_56", "dend_53", "dend_47", "dend_40", "dend_37", "dend_24", "dend_21", "dend_19", "dend_16", "dend_13", "dend_10", "dend_6", "dend_3", "dend_105", "dend_102", "dend_100", "dend_97", "dend_93", "dend_92", "dend_89", "dend_88", "dend_83", "dend_82", "dend_73", "dend_72", "dend_70", "dend_65", "dend_58", "dend_57", "dend_55", "dend_54", "dend_51", "dend_48", "dend_42", "dend_41", "dend_39", "dend_38", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_12", "dend_11", "dend_5", "dend_4", "dend_104", "dend_103", "dend_99", "dend_98", "dend_75", "dend_74", "dend_67", "dend_66", "dend_60", "dend_59", "dend_50", "dend_49", "dend_44", "dend_43", "dend_30", "dend_27", "dend_77", "dend_76", "dend_69", "dend_68", "dend_46", "dend_45", "dend_32", "dend_31", "dend_29", "dend_28", "dend_34", "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_84", "dend_84", "dend_84", "dend_84", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_35", "dend_35", "dend_35", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_105", "dend_105", "dend_105", "dend_105", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_88", "dend_88", "dend_88", "dend_88", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_11", "dend_5", "dend_4", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_46", "dend_45", "dend_45", "dend_45", "dend_32", "dend_32", "dend_31", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_34", "dend_33", "dend_33", "dend_33" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_SBC_7b122f5ac9_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_84, id: dend_84, parent: soma_0
create dend_84
public dend_84
// Section: dend_62, id: dend_62, parent: soma_0
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: soma_0
create dend_61
public dend_61
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_95, id: dend_95, parent: dend_84
create dend_95
public dend_95
// Section: dend_90, id: dend_90, parent: dend_84
create dend_90
public dend_90
// Section: dend_85, id: dend_85, parent: dend_84
create dend_85
public dend_85
// Section: dend_79, id: dend_79, parent: dend_62
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_62
create dend_78
public dend_78
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_52, id: dend_52, parent: dend_35
create dend_52
public dend_52
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_101, id: dend_101, parent: dend_95
create dend_101
public dend_101
// Section: dend_96, id: dend_96, parent: dend_95
create dend_96
public dend_96
// Section: dend_94, id: dend_94, parent: dend_90
create dend_94
public dend_94
// Section: dend_91, id: dend_91, parent: dend_90
create dend_91
public dend_91
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_81, id: dend_81, parent: dend_79
create dend_81
public dend_81
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_63
create dend_71
public dend_71
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_47, id: dend_47, parent: dend_36
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_105, id: dend_105, parent: dend_101
create dend_105
public dend_105
// Section: dend_102, id: dend_102, parent: dend_101
create dend_102
public dend_102
// Section: dend_100, id: dend_100, parent: dend_96
create dend_100
public dend_100
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_93, id: dend_93, parent: dend_91
create dend_93
public dend_93
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_89, id: dend_89, parent: dend_87
create dend_89
public dend_89
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_70, id: dend_70, parent: dend_64
create dend_70
public dend_70
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_104, id: dend_104, parent: dend_102
create dend_104
public dend_104
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103
// Section: dend_99, id: dend_99, parent: dend_97
create dend_99
public dend_99
// Section: dend_98, id: dend_98, parent: dend_97
create dend_98
public dend_98
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_84, dend_62, dend_61, dend_35, dend_14, dend_7, dend_0, dend_95, dend_90, dend_85, dend_79, dend_78, dend_63, dend_52, dend_36, dend_20, dend_15, dend_9, dend_8, dend_2, dend_1, dend_101, dend_96, dend_94, dend_91, dend_87, dend_86, dend_81, dend_80, dend_71, dend_64, dend_56, dend_53, dend_47, dend_40, dend_37, dend_24, dend_21, dend_19, dend_16, dend_13, dend_10, dend_6, dend_3, dend_105, dend_102, dend_100, dend_97, dend_93, dend_92, dend_89, dend_88, dend_83, dend_82, dend_73, dend_72, dend_70, dend_65, dend_58, dend_57, dend_55, dend_54, dend_51, dend_48, dend_42, dend_41, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_12, dend_11, dend_5, dend_4, dend_104, dend_103, dend_99, dend_98, dend_75, dend_74, dend_67, dend_66, dend_60, dend_59, dend_50, dend_49, dend_44, dend_43, dend_30, dend_27, dend_77, dend_76, dend_69, dend_68, dend_46, dend_45, dend_32, dend_31, dend_29, dend_28, dend_34, dend_33]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_84, dend_62, dend_61, dend_35, dend_14, dend_7, dend_0, dend_95, dend_90, dend_85, dend_79, dend_78, dend_63, dend_52, dend_36, dend_20, dend_15, dend_9, dend_8, dend_2, dend_1, dend_101, dend_96, dend_94, dend_91, dend_87, dend_86, dend_81, dend_80, dend_71, dend_64, dend_56, dend_53, dend_47, dend_40, dend_37, dend_24, dend_21, dend_19, dend_16, dend_13, dend_10, dend_6, dend_3, dend_105, dend_102, dend_100, dend_97, dend_93, dend_92, dend_89, dend_88, dend_83, dend_82, dend_73, dend_72, dend_70, dend_65, dend_58, dend_57, dend_55, dend_54, dend_51, dend_48, dend_42, dend_41, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_12, dend_11, dend_5, dend_4, dend_104, dend_103, dend_99, dend_98, dend_75, dend_74, dend_67, dend_66, dend_60, dend_59, dend_50, dend_49, dend_44, dend_43, dend_30, dend_27, dend_77, dend_76, dend_69, dend_68, dend_46, dend_45, dend_32, dend_31, dend_29, dend_28, dend_34, dend_33]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_84, dend_62, dend_61, dend_35, dend_14, dend_7, dend_0, axon_0, dend_95, dend_90, dend_85, dend_79, dend_78, dend_63, dend_52, dend_36, dend_20, dend_15, dend_9, dend_8, dend_2, dend_1, axon_1, dend_101, dend_96, dend_94, dend_91, dend_87, dend_86, dend_81, dend_80, dend_71, dend_64, dend_56, dend_53, dend_47, dend_40, dend_37, dend_24, dend_21, dend_19, dend_16, dend_13, dend_10, dend_6, dend_3, dend_105, dend_102, dend_100, dend_97, dend_93, dend_92, dend_89, dend_88, dend_83, dend_82, dend_73, dend_72, dend_70, dend_65, dend_58, dend_57, dend_55, dend_54, dend_51, dend_48, dend_42, dend_41, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_12, dend_11, dend_5, dend_4, dend_104, dend_103, dend_99, dend_98, dend_75, dend_74, dend_67, dend_66, dend_60, dend_59, dend_50, dend_49, dend_44, dend_43, dend_30, dend_27, dend_77, dend_76, dend_69, dend_68, dend_46, dend_45, dend_32, dend_31, dend_29, dend_28, dend_34, dend_33]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_109
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_84, dend_84, dend_84, dend_84, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_35, dend_35, dend_35, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_63, dend_63, dend_63, dend_63, dend_63, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_105, dend_105, dend_105, dend_105, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_88, dend_88, dend_88, dend_88, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_11, dend_5, dend_4, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_46, dend_45, dend_45, dend_45, dend_32, dend_32, dend_31, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_34, dend_33, dend_33, dend_33]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_84(0), soma_0(0.45000012714525545)
    connect dend_62(0), soma_0(0.45000012714525545)
    connect dend_61(0), soma_0(0.45000012714525545)
    connect dend_35(0), soma_0(0.45000012714525545)
    connect dend_14(0), soma_0(0.45000012714525545)
    connect dend_7(0), soma_0(0.45000012714525545)
    connect dend_0(0), soma_0(0.45000012714525545)
    connect axon_0(0), soma_0(1.0)
    connect dend_95(0), dend_84(1.0)
    connect dend_90(0), dend_84(1.0)
    connect dend_85(0), dend_84(1.0)
    connect dend_79(0), dend_62(1.0)
    connect dend_78(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_52(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_101(0), dend_95(1.0)
    connect dend_96(0), dend_95(1.0)
    connect dend_94(0), dend_90(1.0)
    connect dend_91(0), dend_90(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_81(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_71(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_47(0), dend_36(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_105(0), dend_101(1.0)
    connect dend_102(0), dend_101(1.0)
    connect dend_100(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_93(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_89(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_70(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_104(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)
    connect dend_99(0), dend_97(1.0)
    connect dend_98(0), dend_97(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.64474, 5.38609, 0.0, 2.72918 ) }
    soma_0 { pt3dadd( -4.94488, 4.87435, 0.0, 4.81414 ) }
    soma_0 { pt3dadd( -4.24503, 4.3626, 0.0, 7.1492 ) }
    soma_0 { pt3dadd( -3.54517, 3.85086, 0.0, 8.53401 ) }
    soma_0 { pt3dadd( -2.84532, 3.33911, 0.0, 9.57564 ) }
    soma_0 { pt3dadd( -2.14546, 2.82737, 0.0, 10.8503 ) }
    soma_0 { pt3dadd( -1.44561, 2.31563, 0.0, 12.1522 ) }
    soma_0 { pt3dadd( -0.745753, 1.80388, 0.0, 12.8799 ) }
    soma_0 { pt3dadd( -0.0458981, 1.29214, 0.0, 13.4334 ) }
    soma_0 { pt3dadd( 0.653957, 0.780393, 0.0, 13.9226 ) }
    soma_0 { pt3dadd( 1.35381, 0.268649, 0.0, 14.2619 ) }
    soma_0 { pt3dadd( 2.05367, -0.243096, 0.0, 14.3692 ) }
    soma_0 { pt3dadd( 2.75352, -0.75484, 0.0, 14.1641 ) }
    soma_0 { pt3dadd( 3.45338, -1.26658, 0.0, 13.1753 ) }
    soma_0 { pt3dadd( 4.15323, -1.77833, 0.0, 12.1789 ) }
    soma_0 { pt3dadd( 4.85309, -2.29007, 0.0, 11.1057 ) }
    soma_0 { pt3dadd( 5.55294, -2.80182, 0.0, 9.95742 ) }
    soma_0 { pt3dadd( 6.2528, -3.31356, 0.0, 8.56382 ) }
    soma_0 { pt3dadd( 6.95265, -3.82531, 0.0, 6.88712 ) }
    soma_0 { pt3dadd( 7.65251, -4.33705, 0.0, 5.18943 ) }
    soma_0 { pt3dadd( 8.35236, -4.84879, 0.0, 3.05405 ) }
    // Section: dend_84, id: dend_84, parent: soma_0 (entry count 21/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 6.1315, -1.77316, -8.75, 1.68 ) }
    dend_84 { pt3dadd( 6.7083, -3.26344, -9.49129, 1.68 ) }
    dend_84 { pt3dadd( 7.31955, -4.84274, -10.2769, 1.92 ) }
    dend_84 { pt3dadd( 7.68985, -5.79948, -10.7528, 2.04 ) }
    dend_84 { pt3dadd( 8.03676, -6.69578, -11.1986, 2.04 ) }
    // Section: dend_62, id: dend_62, parent: soma_0 (entry count 26/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -1.8885, 4.26209, -20.04, 1.8 ) }
    dend_62 { pt3dadd( -3.07357, 4.8458, -21.1004, 1.8 ) }
    dend_62 { pt3dadd( -4.44751, 5.52254, -22.3299, 2.04 ) }
    dend_62 { pt3dadd( -5.32127, 5.95292, -23.1117, 2.04 ) }
    dend_62 { pt3dadd( -8.36423, 7.45173, -25.8346, 1.92 ) }
    // Section: dend_61, id: dend_61, parent: soma_0 (entry count 31/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -0.4985, 7.06034, -12.5, 1.44 ) }
    dend_61 { pt3dadd( -0.427786, 8.61027, -12.494, 0.96 ) }
    dend_61 { pt3dadd( -0.395407, 9.93624, -12.4868, 0.96 ) }
    dend_61 { pt3dadd( -0.378927, 11.3651, -12.4353, 0.6 ) }
    dend_61 { pt3dadd( -0.361742, 12.404, -12.3892, 0.6 ) }
    dend_61 { pt3dadd( -0.304375, 13.497, -12.3397, 0.6 ) }
    dend_61 { pt3dadd( -0.0897951, 15.4739, -12.2211, 1.32 ) }
    dend_61 { pt3dadd( 0.129983, 16.6661, -12.136, 0.84 ) }
    dend_61 { pt3dadd( 0.727755, 18.9424, -11.8096, 1.08 ) }
    dend_61 { pt3dadd( 1.45314, 21.2438, -11.3516, 0.72 ) }
    dend_61 { pt3dadd( 2.08529, 22.96, -10.8701, 0.72 ) }
    dend_61 { pt3dadd( 2.77277, 24.5771, -10.3147, 0.96 ) }
    dend_61 { pt3dadd( 3.31639, 25.7494, -9.85868, 1.44 ) }
    dend_61 { pt3dadd( 4.51938, 28.3566, -8.80415, 0.24 ) }
    dend_61 { pt3dadd( 4.92108, 29.2044, -8.46554, 0.24 ) }
    dend_61 { pt3dadd( 5.93193, 31.3221, -7.65578, 1.44 ) }
    dend_61 { pt3dadd( 6.53121, 32.5423, -7.23499, 0.48 ) }
    dend_61 { pt3dadd( 7.3763, 34.2166, -6.81384, 0.72 ) }
    dend_61 { pt3dadd( 8.19431, 35.6958, -6.59309, 0.84 ) }
    dend_61 { pt3dadd( 9.33949, 37.4726, -6.59256, 0.84 ) }
    dend_61 { pt3dadd( 10.2165, 38.5914, -6.83675, 0.84 ) }
    dend_61 { pt3dadd( 11.2929, 39.7366, -7.38314, 0.24 ) }
    dend_61 { pt3dadd( 12.289, 40.724, -8.01668, 0.84 ) }
    dend_61 { pt3dadd( 12.8597, 41.3007, -8.45363, 0.84 ) }
    dend_61 { pt3dadd( 13.5297, 42.0811, -9.11468, 1.08 ) }
    dend_61 { pt3dadd( 15.2448, 44.7646, -11.36, 0.36 ) }
    dend_61 { pt3dadd( 15.617, 45.5677, -11.9221, 0.36 ) }
    dend_61 { pt3dadd( 15.998, 46.69, -12.5409, 0.96 ) }
    dend_61 { pt3dadd( 16.3487, 47.961, -13.0277, 0.96 ) }
    dend_61 { pt3dadd( 16.6861, 49.4627, -13.3982, 0.84 ) }
    dend_61 { pt3dadd( 16.9373, 50.6528, -13.4019, 0.12 ) }
    dend_61 { pt3dadd( 17.3999, 52.496, -12.8352, 0.12 ) }
    dend_61 { pt3dadd( 17.5973, 53.0519, -12.5398, 1.08 ) }
    dend_61 { pt3dadd( 18.0647, 53.7868, -11.8414, 1.08 ) }
    dend_61 { pt3dadd( 18.523, 54.2336, -11.1914, 1.08 ) }
    dend_61 { pt3dadd( 19.631, 55.1162, -9.49263, 0.48 ) }
    dend_61 { pt3dadd( 20.3376, 55.6475, -8.47877, 0.48 ) }
    dend_61 { pt3dadd( 20.728, 55.997, -7.99797, 0.24 ) }
    dend_61 { pt3dadd( 21.0872, 56.3991, -7.56148, 0.24 ) }
    dend_61 { pt3dadd( 21.5101, 57.0459, -7.02901, 0.96 ) }
    dend_61 { pt3dadd( 22.2335, 58.5159, -6.12903, 0.96 ) }
    dend_61 { pt3dadd( 22.6486, 59.599, -5.63874, 0.6 ) }
    dend_61 { pt3dadd( 23.0977, 60.9313, -5.12045, 0.6 ) }
    dend_61 { pt3dadd( 23.5015, 62.2278, -4.69377, 0.12 ) }
    dend_61 { pt3dadd( 23.948, 63.6301, -4.29446, 0.12 ) }
    dend_61 { pt3dadd( 24.3355, 64.6932, -4.0537, 0.12 ) }
    dend_61 { pt3dadd( 24.6883, 65.6045, -3.89453, 0.6 ) }
    dend_61 { pt3dadd( 25.0575, 66.5688, -3.72699, 0.6 ) }
    dend_61 { pt3dadd( 25.4059, 67.5448, -3.58035, 0.48 ) }
    dend_61 { pt3dadd( 25.8553, 68.8684, -3.43418, 0.48 ) }
    dend_61 { pt3dadd( 26.3161, 70.1905, -3.30981, 0.48 ) }
    dend_61 { pt3dadd( 26.6104, 71.0674, -3.22959, 0.6 ) }
    dend_61 { pt3dadd( 26.8672, 71.8446, -3.14649, 0.24 ) }
    dend_61 { pt3dadd( 27.3687, 73.516, -2.97829, 0.24 ) }
    dend_61 { pt3dadd( 27.5025, 74.0803, -2.92835, 0.24 ) }
    dend_61 { pt3dadd( 27.6325, 74.9153, -2.87047, 0.72 ) }
    dend_61 { pt3dadd( 27.7641, 76.2069, -2.8083, 0.72 ) }
    dend_61 { pt3dadd( 27.8074, 76.8008, -2.79508, 0.12 ) }
    dend_61 { pt3dadd( 27.9032, 78.9075, -2.75241, 0.12 ) }
    dend_61 { pt3dadd( 27.9044, 80.1647, -2.72677, 0.84 ) }
    dend_61 { pt3dadd( 27.8493, 81.4407, -2.70627, 0.6 ) }
    dend_61 { pt3dadd( 27.8066, 81.8524, -2.70372, 0.12 ) }
    dend_61 { pt3dadd( 27.705, 82.5857, -2.70472, 0.12 ) }
    dend_61 { pt3dadd( 27.6087, 83.2814, -2.71125, 0.84 ) }
    dend_61 { pt3dadd( 27.5053, 84.0237, -2.71983, 0.12 ) }
    dend_61 { pt3dadd( 27.4462, 84.613, -2.72758, 0.12 ) }
    dend_61 { pt3dadd( 27.2717, 86.5882, -2.75646, 0.12 ) }
    dend_61 { pt3dadd( 27.2066, 87.636, -2.77237, 0.24 ) }
    dend_61 { pt3dadd( 27.1677, 88.6784, -2.78867, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 0/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -3.5785, -4.91266, -4.33, 2.52 ) }
    dend_35 { pt3dadd( -3.63104, -5.81703, -4.25338, 2.04 ) }
    dend_35 { pt3dadd( -3.70488, -7.08792, -4.1457, 1.92 ) }
    dend_35 { pt3dadd( -3.77872, -8.35881, -4.03802, 1.92 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 4/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 7.6015, -5.83891, -3.41, 2.04 ) }
    dend_14 { pt3dadd( 8.32344, -7.19744, -2.54475, 1.56 ) }
    dend_14 { pt3dadd( 9.22304, -8.8903, -1.46656, 1.44 ) }
    dend_14 { pt3dadd( 10.2067, -10.7413, -0.287635, 1.8 ) }
    dend_14 { pt3dadd( 10.8907, -12.0284, 0.532124, 1.8 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 9/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 5.9615, 5.03234, -3.98, 1.08 ) }
    dend_7 { pt3dadd( 5.89751, 6.74535, -3.47435, 1.08 ) }
    dend_7 { pt3dadd( 5.86738, 8.86857, -2.54753, 1.32 ) }
    dend_7 { pt3dadd( 5.9773, 10.5736, -1.70784, 0.84 ) }
    dend_7 { pt3dadd( 6.46588, 13.4634, -0.195577, 0.96 ) }
    dend_7 { pt3dadd( 6.84214, 14.6863, 0.473533, 1.08 ) }
    dend_7 { pt3dadd( 7.02469, 15.2796, 0.798156, 1.08 ) }
    dend_7 { pt3dadd( 7.56548, 16.9056, 1.99822, 1.08 ) }
    dend_7 { pt3dadd( 7.94988, 17.7173, 2.85187, 1.32 ) }
    dend_7 { pt3dadd( 8.54336, 18.4388, 3.76982, 1.32 ) }
    dend_7 { pt3dadd( 9.81607, 19.0834, 4.3952, 0.96 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 20/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 8.8915, -1.30516, -0.42, 1.68 ) }
    dend_0 { pt3dadd( 10.0781, -1.40385, -0.701631, 1.08 ) }
    dend_0 { pt3dadd( 11.54, -1.43462, -1.00807, 1.08 ) }
    dend_0 { pt3dadd( 13.6129, -1.37759, -1.39055, 1.08 ) }
    dend_0 { pt3dadd( 15.6217, -1.32231, -1.76123, 1.44 ) }
    dend_0 { pt3dadd( 17.1552, -1.28012, -2.04419, 1.2 ) }
    dend_0 { pt3dadd( 18.2332, -1.25046, -2.2431, 1.32 ) }
    dend_0 { pt3dadd( 19.4786, -1.16639, -2.46599, 1.32 ) }
    dend_0 { pt3dadd( 20.3789, -1.05244, -2.59183, 1.44 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 29/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.35236, -4.84879, 0.0, 0.676437 ) }
    axon_0 { pt3dadd( 20.4607, -13.7026, 0.0, 0.676437 ) }
    axon_0 { pt3dadd( 32.569, -22.5563, 0.0, 0.676437 ) }
    // Section: dend_95, id: dend_95, parent: dend_84 (entry count 32/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( 8.03676, -6.69578, -11.1986, 0.6 ) }
    dend_95 { pt3dadd( 7.44085, -6.44772, -11.2312, 0.6 ) }
    dend_95 { pt3dadd( 7.04503, -6.27878, -11.3143, 0.6 ) }
    dend_95 { pt3dadd( 6.27718, -5.9969, -11.4943, 0.6 ) }
    dend_95 { pt3dadd( 5.45365, -5.77394, -11.6752, 0.6 ) }
    dend_95 { pt3dadd( 4.96857, -5.6923, -11.7741, 0.6 ) }
    dend_95 { pt3dadd( 4.22343, -5.65516, -11.9131, 0.6 ) }
    dend_95 { pt3dadd( 2.78895, -5.79717, -12.165, 0.6 ) }
    dend_95 { pt3dadd( 1.99683, -6.01845, -12.3676, 0.6 ) }
    dend_95 { pt3dadd( 1.04989, -6.53987, -12.7042, 0.6 ) }
    dend_95 { pt3dadd( 0.476224, -7.13465, -13.1077, 0.6 ) }
    dend_95 { pt3dadd( 0.297677, -8.02608, -13.8611, 0.6 ) }
    dend_95 { pt3dadd( 0.418308, -8.9007, -14.643, 0.6 ) }
    dend_95 { pt3dadd( 0.822919, -10.2676, -15.8938, 0.96 ) }
    dend_95 { pt3dadd( 1.15057, -11.1877, -16.7226, 0.96 ) }
    dend_95 { pt3dadd( 1.86499, -13.0621, -18.2908, 0.6 ) }
    dend_95 { pt3dadd( 2.20441, -13.9351, -18.9906, 0.84 ) }
    dend_95 { pt3dadd( 2.45859, -14.5878, -19.474, 0.84 ) }
    dend_95 { pt3dadd( 2.91675, -15.8498, -20.2919, 1.2 ) }
    dend_95 { pt3dadd( 3.30777, -16.8075, -21.0746, 1.2 ) }
    dend_95 { pt3dadd( 3.73521, -17.8735, -22.0939, 0.36 ) }
    dend_95 { pt3dadd( 4.08242, -18.7979, -23.0175, 0.36 ) }
    dend_95 { pt3dadd( 4.33401, -19.4017, -23.6744, 0.36 ) }
    dend_95 { pt3dadd( 4.54756, -19.9139, -24.2396, 0.96 ) }
    dend_95 { pt3dadd( 6.07891, -23.6769, -28.4263, 0.96 ) }
    dend_95 { pt3dadd( 6.25655, -24.1625, -28.9882, 1.08 ) }
    dend_95 { pt3dadd( 6.4455, -24.8553, -29.8047, 1.08 ) }
    dend_95 { pt3dadd( 6.54416, -25.838, -30.8448, 0.96 ) }
    dend_95 { pt3dadd( 6.37522, -27.0901, -31.908, 0.36 ) }
    dend_95 { pt3dadd( 6.17265, -27.4669, -32.12, 0.12 ) }
    dend_95 { pt3dadd( 5.83759, -27.8034, -32.2357, 0.12 ) }
    dend_95 { pt3dadd( 5.30569, -28.2151, -32.5034, 0.84 ) }
    dend_95 { pt3dadd( 4.82703, -28.5359, -32.7866, 1.2 ) }
    dend_95 { pt3dadd( 4.13167, -28.9326, -33.218, 1.2 ) }
    dend_95 { pt3dadd( 2.23899, -29.8749, -34.4845, 0.48 ) }
    dend_95 { pt3dadd( 0.671408, -30.6366, -35.5615, 0.36 ) }
    dend_95 { pt3dadd( -0.407258, -31.169, -36.3994, 0.12 ) }
    dend_95 { pt3dadd( -0.917153, -31.4449, -36.8384, 1.2 ) }
    dend_95 { pt3dadd( -1.31766, -31.6863, -37.2103, 0.12 ) }
    dend_95 { pt3dadd( -2.1526, -32.2193, -37.9936, 0.12 ) }
    dend_95 { pt3dadd( -2.82614, -32.6703, -38.613, 1.2 ) }
    dend_95 { pt3dadd( -4.34936, -33.6334, -40.0587, 0.12 ) }
    dend_95 { pt3dadd( -4.87105, -33.9396, -40.5117, 0.12 ) }
    dend_95 { pt3dadd( -5.46457, -34.2448, -41.0147, 0.12 ) }
    dend_95 { pt3dadd( -6.23462, -34.6244, -41.6642, 0.12 ) }
    dend_95 { pt3dadd( -7.16569, -35.0429, -42.3877, 1.2 ) }
    dend_95 { pt3dadd( -8.20913, -35.3879, -43.2064, 1.32 ) }
    dend_95 { pt3dadd( -9.25065, -35.6379, -43.9274, 0.12 ) }
    dend_95 { pt3dadd( -10.0358, -35.7946, -44.553, 0.24 ) }
    dend_95 { pt3dadd( -10.2351, -35.834, -44.7286, 0.24 ) }
    dend_95 { pt3dadd( -10.6688, -35.9259, -45.1384, 0.24 ) }
    dend_95 { pt3dadd( -11.9517, -36.1771, -46.2658, 0.96 ) }
    dend_95 { pt3dadd( -12.7095, -36.3476, -46.9121, 1.08 ) }
    dend_95 { pt3dadd( -13.945, -36.7505, -48.0683, 0.12 ) }
    dend_95 { pt3dadd( -14.298, -36.9177, -48.3926, 0.12 ) }
    dend_95 { pt3dadd( -14.7713, -37.1867, -48.8279, 0.12 ) }
    dend_95 { pt3dadd( -15.4177, -37.6208, -49.3978, 0.12 ) }
    dend_95 { pt3dadd( -15.8419, -37.944, -49.7382, 0.12 ) }
    dend_95 { pt3dadd( -16.726, -38.6576, -50.4252, 0.72 ) }
    dend_95 { pt3dadd( -17.1529, -39.0188, -50.7187, 1.08 ) }
    dend_95 { pt3dadd( -17.4967, -39.3421, -50.987, 0.24 ) }
    dend_95 { pt3dadd( -17.8804, -39.7708, -51.3337, 0.24 ) }
    dend_95 { pt3dadd( -18.4448, -40.484, -51.9277, 1.2 ) }
    dend_95 { pt3dadd( -18.9021, -41.0054, -52.3892, 1.56 ) }
    // Section: dend_90, id: dend_90, parent: dend_84 (entry count 96/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 8.03676, -6.69578, -11.1986, 1.2 ) }
    dend_90 { pt3dadd( 8.67556, -9.67057, -11.3534, 1.2 ) }
    dend_90 { pt3dadd( 9.05575, -10.6629, -11.3718, 1.08 ) }
    dend_90 { pt3dadd( 9.74653, -12.1177, -11.2616, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_90 { pt3dadd( 10.2116, -13.0587, -11.154, 0.96 ) }
    dend_90 { pt3dadd( 10.8414, -14.3294, -10.991, 0.96 ) }
    dend_90 { pt3dadd( 11.4381, -15.5481, -10.8308, 0.96 ) }
    dend_90 { pt3dadd( 12.0852, -16.7886, -10.5623, 0.96 ) }
    dend_90 { pt3dadd( 12.72, -18.0247, -10.33, 0.84 ) }
    dend_90 { pt3dadd( 13.31, -19.2986, -10.1128, 0.84 ) }
    dend_90 { pt3dadd( 13.6128, -20.0747, -9.96719, 0.84 ) }
    dend_90 { pt3dadd( 13.8625, -20.8772, -9.81423, 0.84 ) }
    dend_90 { pt3dadd( 14.1333, -21.8779, -9.63377, 1.44 ) }
    dend_90 { pt3dadd( 14.388, -22.7595, -9.49199, 1.08 ) }
    dend_90 { pt3dadd( 14.923, -24.185, -9.32082, 0.72 ) }
    dend_90 { pt3dadd( 15.2566, -24.8349, -9.24296, 0.72 ) }
    dend_90 { pt3dadd( 15.8998, -25.8172, -9.13705, 0.84 ) }
    dend_90 { pt3dadd( 16.5192, -26.6126, -9.0696, 0.84 ) }
    dend_90 { pt3dadd( 17.1086, -27.2924, -9.02831, 0.84 ) }
    dend_90 { pt3dadd( 17.9144, -28.2504, -9.00577, 1.08 ) }
    dend_90 { pt3dadd( 18.6823, -29.2502, -9.07927, 1.32 ) }
    dend_90 { pt3dadd( 19.2994, -30.2258, -9.19116, 0.96 ) }
    dend_90 { pt3dadd( 19.7553, -31.1569, -9.32539, 0.96 ) }
    dend_90 { pt3dadd( 19.9866, -31.812, -9.46079, 0.96 ) }
    dend_90 { pt3dadd( 20.4004, -33.4586, -9.86601, 0.96 ) }
    dend_90 { pt3dadd( 20.6545, -34.8259, -10.2351, 1.2 ) }
    dend_90 { pt3dadd( 20.7867, -35.8303, -10.5312, 1.44 ) }
    dend_90 { pt3dadd( 20.863, -36.6312, -10.7882, 1.44 ) }
    dend_90 { pt3dadd( 20.9912, -38.0742, -11.29, 1.2 ) }
    dend_90 { pt3dadd( 21.1096, -39.0885, -11.6704, 1.2 ) }
    dend_90 { pt3dadd( 21.2962, -40.1435, -12.0823, 1.2 ) }
    // Section: dend_85, id: dend_85, parent: dend_84 (entry count 27/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 8.03676, -6.69578, -11.1986, 1.32 ) }
    dend_85 { pt3dadd( 8.6858, -5.25267, -12.584, 1.32 ) }
    dend_85 { pt3dadd( 9.16153, -4.1949, -13.5995, 1.08 ) }
    dend_85 { pt3dadd( 9.52158, -3.39433, -14.3681, 1.08 ) }
    dend_85 { pt3dadd( 9.85693, -2.6487, -15.0839, 1.2 ) }
    dend_85 { pt3dadd( 10.1913, -1.90529, -15.7976, 1.2 ) }
    dend_85 { pt3dadd( 10.9907, -0.127789, -17.504, 1.44 ) }
    // Section: dend_79, id: dend_79, parent: dend_62 (entry count 34/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -8.36423, 7.45173, -25.8346, 1.2 ) }
    dend_79 { pt3dadd( -8.06893, 5.34003, -25.4635, 1.2 ) }
    dend_79 { pt3dadd( -7.8774, 4.08305, -25.2853, 1.08 ) }
    dend_79 { pt3dadd( -7.63005, 2.56963, -25.1104, 1.08 ) }
    dend_79 { pt3dadd( -7.45404, 1.47776, -25.0059, 0.96 ) }
    dend_79 { pt3dadd( -7.31129, 0.564812, -24.9327, 1.08 ) }
    dend_79 { pt3dadd( -7.18839, -0.307176, -24.8732, 1.08 ) }
    dend_79 { pt3dadd( -7.01915, -1.34391, -24.8787, 1.08 ) }
    dend_79 { pt3dadd( -6.85207, -2.4102, -24.8857, 1.08 ) }
    dend_79 { pt3dadd( -6.71273, -3.44453, -24.8943, 1.08 ) }
    dend_79 { pt3dadd( -6.64882, -4.02043, -24.9002, 1.08 ) }
    dend_79 { pt3dadd( -6.56504, -4.86821, -24.9111, 0.96 ) }
    // Section: dend_78, id: dend_78, parent: dend_62 (entry count 46/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -8.36423, 7.45173, -25.8346, 0.6 ) }
    dend_78 { pt3dadd( -9.41102, 7.41954, -25.8915, 0.6 ) }
    dend_78 { pt3dadd( -9.79, 7.43137, -25.9067, 0.6 ) }
    dend_78 { pt3dadd( -10.1626, 7.4824, -25.9182, 0.6 ) }
    dend_78 { pt3dadd( -10.9686, 7.71315, -25.9141, 0.84 ) }
    dend_78 { pt3dadd( -11.432, 7.87525, -25.9041, 0.96 ) }
    dend_78 { pt3dadd( -12.1041, 8.12614, -25.8847, 0.96 ) }
    dend_78 { pt3dadd( -12.8434, 8.43613, -25.904, 1.08 ) }
    dend_78 { pt3dadd( -13.7077, 8.79929, -25.973, 0.96 ) }
    dend_78 { pt3dadd( -15.056, 9.33096, -26.1455, 0.36 ) }
    dend_78 { pt3dadd( -15.621, 9.51389, -26.2867, 0.48 ) }
    dend_78 { pt3dadd( -15.9492, 9.56004, -26.4268, 0.48 ) }
    dend_78 { pt3dadd( -17.1789, 9.34846, -27.2295, 0.84 ) }
    dend_78 { pt3dadd( -17.6225, 9.12827, -27.5853, 0.96 ) }
    dend_78 { pt3dadd( -18.0305, 8.84123, -27.976, 0.96 ) }
    dend_78 { pt3dadd( -18.8657, 8.18855, -28.8083, 0.84 ) }
    dend_78 { pt3dadd( -19.2168, 7.93811, -29.1302, 0.84 ) }
    dend_78 { pt3dadd( -19.7506, 7.65491, -29.5317, 0.84 ) }
    dend_78 { pt3dadd( -20.2143, 7.52227, -29.7652, 0.84 ) }
    dend_78 { pt3dadd( -21.3575, 7.35603, -30.2217, 0.96 ) }
    dend_78 { pt3dadd( -22.0475, 7.31031, -30.4217, 0.96 ) }
    dend_78 { pt3dadd( -22.5338, 7.30706, -30.4818, 0.96 ) }
    dend_78 { pt3dadd( -23.4626, 7.35386, -30.5222, 0.84 ) }
    dend_78 { pt3dadd( -24.6611, 7.48101, -30.4919, 0.84 ) }
    dend_78 { pt3dadd( -25.2421, 7.59, -30.4387, 0.72 ) }
    dend_78 { pt3dadd( -26.1826, 7.85309, -30.2909, 0.72 ) }
    dend_78 { pt3dadd( -27.4366, 8.33963, -30.1403, 0.48 ) }
    dend_78 { pt3dadd( -28.1954, 8.68886, -30.0766, 0.72 ) }
    dend_78 { pt3dadd( -28.6468, 8.91753, -30.0564, 0.96 ) }
    dend_78 { pt3dadd( -29.4767, 9.38565, -30.0536, 1.2 ) }
    dend_78 { pt3dadd( -30.5094, 9.99569, -30.0892, 0.84 ) }
    dend_78 { pt3dadd( -31.6616, 10.7166, -30.2456, 0.6 ) }
    dend_78 { pt3dadd( -32.1574, 11.0302, -30.3491, 0.6 ) }
    dend_78 { pt3dadd( -32.9562, 11.5329, -30.5281, 0.96 ) }
    dend_78 { pt3dadd( -33.8036, 12.0647, -30.717, 0.96 ) }
    dend_78 { pt3dadd( -34.6936, 12.6296, -30.8383, 0.12 ) }
    dend_78 { pt3dadd( -35.8477, 13.3931, -30.886, 0.12 ) }
    dend_78 { pt3dadd( -36.5298, 13.8645, -30.8403, 0.72 ) }
    dend_78 { pt3dadd( -36.9557, 14.1782, -30.7846, 0.96 ) }
    dend_78 { pt3dadd( -37.8419, 14.8489, -30.6104, 0.84 ) }
    dend_78 { pt3dadd( -39.1907, 15.8414, -30.2718, 0.12 ) }
    dend_78 { pt3dadd( -39.591, 16.1115, -30.1835, 0.12 ) }
    dend_78 { pt3dadd( -39.9119, 16.3017, -30.129, 0.84 ) }
    dend_78 { pt3dadd( -40.7515, 16.7578, -30.0768, 1.2 ) }
    dend_78 { pt3dadd( -41.3311, 17.0363, -30.0862, 1.2 ) }
    dend_78 { pt3dadd( -42.2652, 17.4597, -30.1527, 0.96 ) }
    dend_78 { pt3dadd( -43.4433, 17.9794, -30.2977, 0.6 ) }
    dend_78 { pt3dadd( -44.6572, 18.5417, -30.4317, 0.6 ) }
    dend_78 { pt3dadd( -45.3803, 18.8853, -30.4614, 0.84 ) }
    dend_78 { pt3dadd( -46.7903, 19.5727, -30.4241, 0.84 ) }
    dend_78 { pt3dadd( -47.1872, 19.768, -30.3841, 0.24 ) }
    dend_78 { pt3dadd( -47.7171, 20.0237, -30.2819, 0.48 ) }
    dend_78 { pt3dadd( -48.4489, 20.3629, -30.0027, 0.48 ) }
    dend_78 { pt3dadd( -49.6371, 20.8877, -29.4073, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_78 { pt3dadd( -49.9148, 21.0015, -29.2509, 0.84 ) }
    dend_78 { pt3dadd( -50.2972, 21.1533, -29.0061, 0.96 ) }
    dend_78 { pt3dadd( -50.6852, 21.296, -28.7643, 0.96 ) }
    dend_78 { pt3dadd( -52.0622, 21.7486, -27.9482, 0.48 ) }
    dend_78 { pt3dadd( -52.5243, 21.8836, -27.7131, 0.72 ) }
    dend_78 { pt3dadd( -53.1804, 22.0612, -27.45, 0.96 ) }
    dend_78 { pt3dadd( -54.8414, 22.455, -26.9032, 0.84 ) }
    dend_78 { pt3dadd( -55.6273, 22.62, -26.6793, 0.48 ) }
    dend_78 { pt3dadd( -56.3187, 22.7436, -26.5236, 0.48 ) }
    dend_78 { pt3dadd( -57.1055, 22.8352, -26.4137, 0.84 ) }
    dend_78 { pt3dadd( -57.8302, 22.8654, -26.3318, 0.84 ) }
    dend_78 { pt3dadd( -59.1506, 22.8308, -26.1762, 0.48 ) }
    dend_78 { pt3dadd( -59.8397, 22.7603, -26.1067, 0.48 ) }
    dend_78 { pt3dadd( -60.3101, 22.6954, -26.0382, 0.84 ) }
    dend_78 { pt3dadd( -60.97, 22.6142, -25.9026, 1.08 ) }
    dend_78 { pt3dadd( -61.6806, 22.552, -25.7486, 0.72 ) }
    dend_78 { pt3dadd( -62.72, 22.5604, -25.5651, 0.12 ) }
    dend_78 { pt3dadd( -63.0761, 22.6019, -25.534, 0.12 ) }
    dend_78 { pt3dadd( -63.5624, 22.6894, -25.5503, 0.48 ) }
    dend_78 { pt3dadd( -64.0891, 22.7864, -25.5772, 0.48 ) }
    dend_78 { pt3dadd( -65.2295, 22.9383, -25.6617, 0.12 ) }
    dend_78 { pt3dadd( -66.0897, 22.9417, -25.7433, 0.12 ) }
    dend_78 { pt3dadd( -66.7829, 22.8793, -25.8137, 0.6 ) }
    dend_78 { pt3dadd( -67.448, 22.7876, -25.8254, 0.6 ) }
    dend_78 { pt3dadd( -68.2703, 22.7064, -25.7837, 0.12 ) }
    dend_78 { pt3dadd( -69.0305, 22.6451, -25.7038, 0.12 ) }
    dend_78 { pt3dadd( -69.6236, 22.6437, -25.6133, 0.12 ) }
    dend_78 { pt3dadd( -70.0655, 22.6773, -25.5566, 0.72 ) }
    dend_78 { pt3dadd( -70.6968, 22.799, -25.4977, 1.2 ) }
    dend_78 { pt3dadd( -71.8, 23.0399, -25.4371, 0.84 ) }
    dend_78 { pt3dadd( -72.169, 23.1249, -25.4232, 0.48 ) }
    dend_78 { pt3dadd( -73.0072, 23.308, -25.3853, 0.48 ) }
    dend_78 { pt3dadd( -73.3633, 23.3568, -25.3681, 0.48 ) }
    dend_78 { pt3dadd( -74.3288, 23.3964, -25.3219, 0.48 ) }
    dend_78 { pt3dadd( -75.5858, 23.3252, -25.2864, 0.48 ) }
    dend_78 { pt3dadd( -76.055, 23.2516, -25.2827, 0.12 ) }
    dend_78 { pt3dadd( -76.5233, 23.1495, -25.2886, 0.12 ) }
    dend_78 { pt3dadd( -77.3513, 22.9249, -25.3161, 0.12 ) }
    dend_78 { pt3dadd( -77.7663, 22.8078, -25.3396, 0.48 ) }
    dend_78 { pt3dadd( -78.3927, 22.6069, -25.3871, 0.48 ) }
    dend_78 { pt3dadd( -78.8591, 22.4458, -25.3954, 0.84 ) }
    dend_78 { pt3dadd( -79.4315, 22.2363, -25.3719, 1.08 ) }
    dend_78 { pt3dadd( -80.333, 21.9083, -25.2832, 1.08 ) }
    dend_78 { pt3dadd( -80.9105, 21.7178, -25.1964, 0.84 ) }
    dend_78 { pt3dadd( -81.7138, 21.4878, -25.0412, 0.48 ) }
    dend_78 { pt3dadd( -82.7772, 21.2162, -24.798, 0.12 ) }
    dend_78 { pt3dadd( -83.9784, 20.899, -24.4289, 0.12 ) }
    dend_78 { pt3dadd( -84.192, 20.8252, -24.3499, 0.48 ) }
    dend_78 { pt3dadd( -84.4938, 20.6933, -24.2354, 0.48 ) }
    dend_78 { pt3dadd( -85.0483, 20.4299, -24.0426, 0.48 ) }
    dend_78 { pt3dadd( -85.9417, 20.0246, -23.7594, 0.48 ) }
    dend_78 { pt3dadd( -87.0425, 19.5439, -23.4763, 1.08 ) }
    dend_78 { pt3dadd( -88.2981, 19.0404, -23.1742, 0.36 ) }
    dend_78 { pt3dadd( -88.8913, 18.8215, -22.9873, 0.36 ) }
    dend_78 { pt3dadd( -89.4406, 18.6387, -22.7938, 0.36 ) }
    dend_78 { pt3dadd( -90.3018, 18.401, -22.4779, 0.72 ) }
    dend_78 { pt3dadd( -90.8612, 18.2641, -22.2736, 1.08 ) }
    dend_78 { pt3dadd( -92.3855, 17.9259, -21.772, 0.48 ) }
    dend_78 { pt3dadd( -93.8787, 17.6272, -21.2515, 0.36 ) }
    dend_78 { pt3dadd( -94.1961, 17.5448, -21.1659, 0.36 ) }
    dend_78 { pt3dadd( -94.981, 17.2567, -21.0367, 0.36 ) }
    dend_78 { pt3dadd( -95.8311, 16.8287, -20.9991, 0.36 ) }
    dend_78 { pt3dadd( -96.4099, 16.4467, -21.0326, 0.36 ) }
    dend_78 { pt3dadd( -96.9291, 15.9714, -21.138, 0.6 ) }
    dend_78 { pt3dadd( -98.0654, 14.6801, -21.5576, 0.12 ) }
    dend_78 { pt3dadd( -98.4701, 14.1488, -21.7274, 0.12 ) }
    dend_78 { pt3dadd( -98.8546, 13.5822, -21.9089, 0.36 ) }
    dend_78 { pt3dadd( -99.1732, 13.0944, -22.0594, 0.96 ) }
    dend_78 { pt3dadd( -99.7644, 12.0965, -22.336, 1.08 ) }
    dend_78 { pt3dadd( -100.34, 11.0776, -22.555, 0.12 ) }
    dend_78 { pt3dadd( -100.508, 10.7934, -22.595, 0.48 ) }
    dend_78 { pt3dadd( -100.79, 10.3769, -22.6451, 0.6 ) }
    dend_78 { pt3dadd( -101.191, 9.83849, -22.6613, 0.6 ) }
    dend_78 { pt3dadd( -101.504, 9.4504, -22.6447, 0.6 ) }
    dend_78 { pt3dadd( -102.326, 8.50322, -22.5386, 0.48 ) }
    dend_78 { pt3dadd( -102.831, 7.94944, -22.4435, 0.12 ) }
    dend_78 { pt3dadd( -104.237, 6.54384, -22.1735, 0.12 ) }
    dend_78 { pt3dadd( -105.175, 5.67285, -21.9904, 0.84 ) }
    dend_78 { pt3dadd( -105.866, 5.06714, -21.858, 0.84 ) }
    dend_78 { pt3dadd( -106.457, 4.54895, -21.744, 0.48 ) }
    dend_78 { pt3dadd( -106.826, 4.22614, -21.6759, 0.36 ) }
    dend_78 { pt3dadd( -107.751, 3.48416, -21.5366, 0.36 ) }
    dend_78 { pt3dadd( -108.191, 3.23629, -21.5071, 0.12 ) }
    dend_78 { pt3dadd( -108.765, 2.96635, -21.5035, 0.12 ) }
    dend_78 { pt3dadd( -109.638, 2.60107, -21.4975, 0.36 ) }
    dend_78 { pt3dadd( -110.095, 2.41728, -21.4946, 0.12 ) }
    dend_78 { pt3dadd( -111.418, 1.86328, -21.484, 0.48 ) }
    dend_78 { pt3dadd( -113.937, 0.715854, -21.4605, 0.96 ) }
    dend_78 { pt3dadd( -114.385, 0.510004, -21.4573, 0.12 ) }
    dend_78 { pt3dadd( -115.309, 0.0803756, -21.4524, 0.12 ) }
    dend_78 { pt3dadd( -115.771, -0.125863, -21.4507, 0.6 ) }
    dend_78 { pt3dadd( -116.587, -0.508609, -21.4491, 0.84 ) }
    dend_78 { pt3dadd( -117.649, -1.12516, -21.4503, 0.72 ) }
    dend_78 { pt3dadd( -118.089, -1.42529, -21.4532, 0.12 ) }
    dend_78 { pt3dadd( -118.452, -1.65304, -21.4572, 0.12 ) }
    dend_78 { pt3dadd( -119.111, -2.02492, -21.4675, 0.12 ) }
    dend_78 { pt3dadd( -119.444, -2.20206, -21.4718, 0.12 ) }
    dend_78 { pt3dadd( -120.068, -2.51742, -21.4776, 0.12 ) }
    dend_78 { pt3dadd( -120.984, -2.95802, -21.5753, 0.96 ) }
    dend_78 { pt3dadd( -121.516, -3.21215, -21.6696, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_78 { pt3dadd( -122.118, -3.49151, -21.7945, 0.12 ) }
    dend_78 { pt3dadd( -122.783, -3.79544, -21.947, 0.12 ) }
    dend_78 { pt3dadd( -123.238, -3.98856, -22.0599, 0.12 ) }
    dend_78 { pt3dadd( -124.587, -4.46521, -22.3948, 0.12 ) }
    dend_78 { pt3dadd( -125.181, -4.62526, -22.5902, 0.6 ) }
    dend_78 { pt3dadd( -125.639, -4.71878, -22.7502, 0.12 ) }
    dend_78 { pt3dadd( -126.197, -4.81599, -22.9798, 0.12 ) }
    dend_78 { pt3dadd( -126.739, -4.91453, -23.2168, 0.12 ) }
    dend_78 { pt3dadd( -127.673, -5.10379, -23.6178, 1.32 ) }
    dend_78 { pt3dadd( -128.861, -5.30827, -24.0677, 0.48 ) }
    dend_78 { pt3dadd( -129.643, -5.40955, -24.4348, 0.48 ) }
    dend_78 { pt3dadd( -130.373, -5.47295, -24.8148, 0.12 ) }
    dend_78 { pt3dadd( -130.826, -5.48047, -25.0488, 0.12 ) }
    dend_78 { pt3dadd( -131.496, -5.43792, -25.4009, 0.12 ) }
    dend_78 { pt3dadd( -132.694, -5.32308, -26.0137, 0.12 ) }
    dend_78 { pt3dadd( -133.822, -5.23553, -26.5122, 0.84 ) }
    dend_78 { pt3dadd( -134.277, -5.21661, -26.706, 1.2 ) }
    dend_78 { pt3dadd( -135.184, -5.24331, -27.0444, 0.12 ) }
    dend_78 { pt3dadd( -135.694, -5.32275, -27.2176, 0.12 ) }
    dend_78 { pt3dadd( -136.181, -5.4825, -27.3555, 0.12 ) }
    dend_78 { pt3dadd( -136.71, -5.73928, -27.46, 0.6 ) }
    dend_78 { pt3dadd( -137.15, -5.98611, -27.4986, 0.12 ) }
    dend_78 { pt3dadd( -137.51, -6.21365, -27.5544, 0.12 ) }
    dend_78 { pt3dadd( -138.495, -6.89384, -27.7444, 0.12 ) }
    dend_78 { pt3dadd( -138.893, -7.17163, -27.8243, 0.96 ) }
    dend_78 { pt3dadd( -139.365, -7.50481, -27.966, 1.08 ) }
    dend_78 { pt3dadd( -139.962, -7.92135, -28.1915, 0.12 ) }
    dend_78 { pt3dadd( -141.174, -8.68664, -28.7093, 0.12 ) }
    dend_78 { pt3dadd( -141.446, -8.84466, -28.8315, 0.6 ) }
    dend_78 { pt3dadd( -141.985, -9.14917, -29.0829, 0.6 ) }
    dend_78 { pt3dadd( -142.839, -9.55635, -29.4423, 0.12 ) }
    dend_78 { pt3dadd( -143.177, -9.66316, -29.5779, 0.12 ) }
    dend_78 { pt3dadd( -144.136, -9.82581, -29.9276, 0.12 ) }
    dend_78 { pt3dadd( -145.118, -9.88558, -30.2214, 0.12 ) }
    dend_78 { pt3dadd( -145.701, -9.88385, -30.3671, 0.96 ) }
    dend_78 { pt3dadd( -146.414, -9.85256, -30.5134, 1.2 ) }
    dend_78 { pt3dadd( -147.705, -9.78964, -30.5855, 0.24 ) }
    dend_78 { pt3dadd( -147.964, -9.78251, -30.5776, 0.24 ) }
    dend_78 { pt3dadd( -148.227, -9.7831, -30.5493, 0.12 ) }
    dend_78 { pt3dadd( -150.24, -9.77366, -30.2156, 0.12 ) }
    dend_78 { pt3dadd( -150.709, -9.7823, -30.1171, 0.96 ) }
    dend_78 { pt3dadd( -152.468, -9.94168, -29.6835, 0.12 ) }
    dend_78 { pt3dadd( -153.15, -10.0514, -29.4476, 0.12 ) }
    dend_78 { pt3dadd( -154.162, -10.2697, -29.0601, 0.12 ) }
    dend_78 { pt3dadd( -154.801, -10.4642, -28.7969, 0.84 ) }
    dend_78 { pt3dadd( -155.221, -10.6478, -28.6155, 0.12 ) }
    dend_78 { pt3dadd( -156.145, -11.1174, -28.2594, 0.12 ) }
    dend_78 { pt3dadd( -157.362, -11.8216, -27.7123, 0.84 ) }
    dend_78 { pt3dadd( -157.73, -12.0806, -27.4824, 0.84 ) }
    dend_78 { pt3dadd( -158.466, -12.6904, -26.9085, 0.12 ) }
    dend_78 { pt3dadd( -158.951, -13.1209, -26.4913, 0.12 ) }
    dend_78 { pt3dadd( -159.173, -13.3197, -26.2954, 0.6 ) }
    dend_78 { pt3dadd( -160.542, -14.4782, -24.9929, 0.12 ) }
    dend_78 { pt3dadd( -161.074, -14.9053, -24.5305, 0.12 ) }
    dend_78 { pt3dadd( -161.471, -15.196, -24.1931, 0.12 ) }
    dend_78 { pt3dadd( -161.796, -15.425, -23.9289, 0.84 ) }
    dend_78 { pt3dadd( -162.238, -15.7166, -23.5653, 1.2 ) }
    dend_78 { pt3dadd( -163.426, -16.4595, -22.5665, 1.2 ) }
    dend_78 { pt3dadd( -164.115, -16.824, -22.0521, 1.2 ) }
    dend_78 { pt3dadd( -164.604, -17.0199, -21.6802, 0.36 ) }
    dend_78 { pt3dadd( -165.074, -17.1616, -21.2769, 0.96 ) }
    dend_78 { pt3dadd( -166.507, -17.4216, -19.9766, 0.12 ) }
    dend_78 { pt3dadd( -167.224, -17.4564, -19.3426, 0.12 ) }
    dend_78 { pt3dadd( -167.993, -17.3448, -18.7509, 0.12 ) }
    dend_78 { pt3dadd( -168.661, -17.1267, -18.2505, 1.08 ) }
    dend_78 { pt3dadd( -169.6, -16.6731, -17.6192, 0.24 ) }
    dend_78 { pt3dadd( -170.141, -16.3806, -17.3384, 0.24 ) }
    dend_78 { pt3dadd( -170.91, -15.9299, -17.1191, 0.6 ) }
    dend_78 { pt3dadd( -171.628, -15.4868, -16.9884, 0.6 ) }
    dend_78 { pt3dadd( -172.298, -15.0742, -16.7887, 0.12 ) }
    dend_78 { pt3dadd( -172.705, -14.8565, -16.581, 0.12 ) }
    dend_78 { pt3dadd( -173.516, -14.4967, -16.0869, 0.12 ) }
    dend_78 { pt3dadd( -173.975, -14.3188, -15.7464, 0.12 ) }
    dend_78 { pt3dadd( -174.505, -14.161, -15.1739, 0.12 ) }
    dend_78 { pt3dadd( -175.54, -13.9201, -13.8641, 0.96 ) }
    dend_78 { pt3dadd( -176.393, -13.7542, -12.7248, 0.12 ) }
    dend_78 { pt3dadd( -176.822, -13.6672, -12.1292, 0.12 ) }
    dend_78 { pt3dadd( -177.085, -13.5873, -11.718, 0.12 ) }
    dend_78 { pt3dadd( -178.599, -13.0824, -9.37891, 0.72 ) }
    dend_78 { pt3dadd( -178.839, -12.9919, -9.03091, 0.72 ) }
    dend_78 { pt3dadd( -179.069, -12.8832, -8.75031, 0.12 ) }
    dend_78 { pt3dadd( -179.52, -12.641, -8.30786, 0.12 ) }
    dend_78 { pt3dadd( -181.43, -11.5202, -6.72952, 0.48 ) }
    dend_78 { pt3dadd( -182.895, -10.4984, -5.99485, 0.12 ) }
    dend_78 { pt3dadd( -183.296, -10.1832, -5.85853, 0.12 ) }
    dend_78 { pt3dadd( -183.758, -9.83637, -5.67625, 0.12 ) }
    dend_78 { pt3dadd( -184.421, -9.34982, -5.41157, 0.48 ) }
    dend_78 { pt3dadd( -184.63, -9.20581, -5.33007, 0.12 ) }
    dend_78 { pt3dadd( -185.791, -8.47013, -4.93166, 0.12 ) }
    dend_78 { pt3dadd( -187.668, -7.27273, -3.9378, 0.24 ) }
    dend_78 { pt3dadd( -188.104, -6.95245, -3.66176, 0.24 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 91/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -8.36423, 7.45173, -25.8346, 1.2 ) }
    dend_63 { pt3dadd( -8.76355, 9.1341, -25.8261, 1.2 ) }
    dend_63 { pt3dadd( -9.23386, 11.1156, -25.816, 1.32 ) }
    dend_63 { pt3dadd( -9.51416, 12.2965, -25.81, 1.32 ) }
    dend_63 { pt3dadd( -9.92582, 14.0308, -25.8011, 1.32 ) }
    dend_63 { pt3dadd( -10.3176, 15.6814, -25.7927, 1.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_35 (entry count 97/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -3.77872, -8.35881, -4.03802, 0.84 ) }
    dend_52 { pt3dadd( -4.19283, -9.47402, -3.67647, 0.84 ) }
    dend_52 { pt3dadd( -4.96213, -11.1461, -3.08651, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_52 { pt3dadd( -5.63989, -12.1823, -2.63167, 0.84 ) }
    dend_52 { pt3dadd( -6.29809, -12.6662, -2.23711, 0.84 ) }
    dend_52 { pt3dadd( -7.44491, -13.0284, -1.64507, 0.84 ) }
    dend_52 { pt3dadd( -8.2231, -13.1624, -1.2856, 0.84 ) }
    dend_52 { pt3dadd( -9.13699, -13.1056, -0.904138, 0.84 ) }
    dend_52 { pt3dadd( -10.7326, -12.7548, -0.17141, 0.96 ) }
    dend_52 { pt3dadd( -12.8365, -12.2342, 0.933734, 0.6 ) }
    dend_52 { pt3dadd( -13.8752, -11.9896, 1.51396, 0.6 ) }
    dend_52 { pt3dadd( -14.6021, -11.842, 1.92466, 0.6 ) }
    dend_52 { pt3dadd( -15.2824, -11.744, 2.34322, 0.6 ) }
    dend_52 { pt3dadd( -17.6686, -11.6228, 3.8437, 0.96 ) }
    dend_52 { pt3dadd( -19.2411, -11.7214, 4.86243, 0.72 ) }
    dend_52 { pt3dadd( -20.0409, -11.8414, 5.37677, 0.72 ) }
    dend_52 { pt3dadd( -20.9756, -12.0004, 6.00587, 0.72 ) }
    dend_52 { pt3dadd( -22.0969, -12.223, 6.75706, 0.72 ) }
    dend_52 { pt3dadd( -23.1963, -12.496, 7.43173, 0.72 ) }
    dend_52 { pt3dadd( -24.6049, -12.9076, 8.03291, 0.96 ) }
    dend_52 { pt3dadd( -25.3546, -13.062, 8.27937, 0.96 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 18/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -3.77872, -8.35881, -4.03802, 1.2 ) }
    dend_36 { pt3dadd( -3.13485, -10.5985, -3.47007, 1.2 ) }
    dend_36 { pt3dadd( -2.82807, -11.8436, -3.11597, 1.44 ) }
    dend_36 { pt3dadd( -2.58077, -12.8474, -2.83053, 1.56 ) }
    dend_36 { pt3dadd( -2.0453, -15.0208, -2.21247, 1.56 ) }
    dend_36 { pt3dadd( -1.60193, -16.8204, -1.70071, 1.56 ) }
    dend_36 { pt3dadd( -1.30158, -18.0395, -1.35404, 1.56 ) }
    dend_36 { pt3dadd( -1.01051, -19.7206, -1.01052, 1.56 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 26/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 10.8907, -12.0284, 0.532124, 0.84 ) }
    dend_20 { pt3dadd( 12.252, -12.8323, 1.40653, 0.84 ) }
    dend_20 { pt3dadd( 13.2894, -13.6026, 2.13565, 0.84 ) }
    dend_20 { pt3dadd( 14.2559, -14.3474, 2.89258, 1.08 ) }
    dend_20 { pt3dadd( 16.112, -15.6855, 4.34288, 0.72 ) }
    dend_20 { pt3dadd( 16.8251, -16.1557, 4.88228, 0.72 ) }
    dend_20 { pt3dadd( 17.5884, -16.6094, 5.42938, 0.84 ) }
    dend_20 { pt3dadd( 18.2995, -17.0206, 5.97324, 0.72 ) }
    dend_20 { pt3dadd( 19.5822, -17.6461, 6.84626, 0.72 ) }
    dend_20 { pt3dadd( 20.3424, -17.9139, 7.27281, 1.08 ) }
    dend_20 { pt3dadd( 20.8841, -18.0411, 7.60017, 1.32 ) }
    dend_20 { pt3dadd( 21.4843, -18.1578, 8.01569, 0.96 ) }
    dend_20 { pt3dadd( 22.3931, -18.3277, 8.62218, 1.2 ) }
    dend_20 { pt3dadd( 23.3097, -18.5052, 9.34561, 1.32 ) }
    dend_20 { pt3dadd( 24.5364, -18.7886, 10.3759, 0.96 ) }
    dend_20 { pt3dadd( 27.1497, -19.4038, 12.6457, 0.84 ) }
    dend_20 { pt3dadd( 27.7277, -19.5118, 13.1397, 0.96 ) }
    dend_20 { pt3dadd( 28.722, -19.6169, 13.9446, 1.56 ) }
    dend_20 { pt3dadd( 31.1114, -19.7845, 15.9274, 0.96 ) }
    dend_20 { pt3dadd( 32.15, -19.7987, 16.7547, 0.96 ) }
    dend_20 { pt3dadd( 32.9857, -19.7494, 17.2821, 0.96 ) }
    dend_20 { pt3dadd( 34.3015, -19.5511, 17.8265, 0.96 ) }
    dend_20 { pt3dadd( 35.4668, -19.2826, 18.3338, 0.96 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 49/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 10.8907, -12.0284, 0.532124, 0.84 ) }
    dend_15 { pt3dadd( 11.4729, -13.6376, 1.80481, 0.84 ) }
    dend_15 { pt3dadd( 11.9362, -14.9189, 2.69935, 0.84 ) }
    dend_15 { pt3dadd( 12.3653, -16.0621, 3.41522, 0.84 ) }
    dend_15 { pt3dadd( 13.6125, -19.0781, 5.11776, 0.72 ) }
    dend_15 { pt3dadd( 14.2823, -20.5441, 5.96932, 0.72 ) }
    dend_15 { pt3dadd( 14.8347, -21.5952, 6.58446, 0.96 ) }
    dend_15 { pt3dadd( 15.3814, -22.4416, 7.06329, 0.96 ) }
    dend_15 { pt3dadd( 15.9088, -23.1685, 7.52697, 0.72 ) }
    dend_15 { pt3dadd( 16.6109, -24.1268, 8.15654, 0.72 ) }
    dend_15 { pt3dadd( 17.5397, -25.3677, 8.89727, 0.24 ) }
    dend_15 { pt3dadd( 18.3201, -26.3886, 9.60285, 0.24 ) }
    dend_15 { pt3dadd( 18.7673, -27.0365, 10.0775, 0.6 ) }
    dend_15 { pt3dadd( 20.0543, -29.2422, 11.4618, 0.84 ) }
    dend_15 { pt3dadd( 20.4087, -29.9994, 11.9171, 0.84 ) }
    dend_15 { pt3dadd( 20.6919, -30.8024, 12.4402, 0.84 ) }
    dend_15 { pt3dadd( 20.9076, -31.5296, 12.9047, 0.84 ) }
    dend_15 { pt3dadd( 21.2295, -32.7224, 13.764, 0.6 ) }
    dend_15 { pt3dadd( 21.7531, -34.4903, 15.3206, 0.6 ) }
    dend_15 { pt3dadd( 22.4156, -36.5219, 17.0813, 0.6 ) }
    dend_15 { pt3dadd( 23.0397, -38.3626, 18.7842, 0.6 ) }
    dend_15 { pt3dadd( 23.1924, -38.8586, 19.2528, 0.6 ) }
    dend_15 { pt3dadd( 23.4296, -39.739, 20.0936, 0.84 ) }
    dend_15 { pt3dadd( 23.7168, -41.0871, 21.3417, 0.12 ) }
    dend_15 { pt3dadd( 24.0706, -42.8409, 23.178, 0.12 ) }
    dend_15 { pt3dadd( 24.0906, -43.5978, 23.471, 0.24 ) }
    dend_15 { pt3dadd( 23.9522, -44.6825, 23.3955, 0.24 ) }
    dend_15 { pt3dadd( 23.8257, -45.1786, 23.2899, 0.48 ) }
    dend_15 { pt3dadd( 23.5741, -45.8988, 22.975, 0.72 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 78/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 9.81607, 19.0834, 4.3952, 0.24 ) }
    dend_9 { pt3dadd( 10.7461, 19.6184, 6.34288, 0.24 ) }
    dend_9 { pt3dadd( 11.3285, 19.9345, 7.40598, 0.48 ) }
    dend_9 { pt3dadd( 12.1838, 20.3538, 8.84727, 0.48 ) }
    dend_9 { pt3dadd( 15.8688, 21.9927, 14.7413, 1.08 ) }
    dend_9 { pt3dadd( 16.494, 22.2344, 15.7131, 0.48 ) }
    dend_9 { pt3dadd( 17.4302, 22.5394, 17.1178, 0.12 ) }
    dend_9 { pt3dadd( 17.9005, 22.6642, 17.8142, 0.12 ) }
    dend_9 { pt3dadd( 18.4813, 22.7771, 18.6739, 0.12 ) }
    dend_9 { pt3dadd( 18.7185, 22.8125, 18.9679, 0.36 ) }
    dend_9 { pt3dadd( 19.6279, 22.954, 19.5258, 0.36 ) }
    dend_9 { pt3dadd( 20.1433, 23.1014, 19.9409, 0.36 ) }
    dend_9 { pt3dadd( 20.8979, 23.4169, 20.6322, 0.36 ) }
    dend_9 { pt3dadd( 23.1137, 24.5841, 22.3384, 0.6 ) }
    dend_9 { pt3dadd( 23.9154, 25.0405, 22.8839, 0.12 ) }
    dend_9 { pt3dadd( 24.3436, 25.3096, 23.1532, 0.12 ) }
    dend_9 { pt3dadd( 24.8106, 25.6729, 23.4367, 0.24 ) }
    dend_9 { pt3dadd( 24.989, 25.8407, 23.5393, 0.6 ) }
    dend_9 { pt3dadd( 26.0337, 26.8897, 24.0633, 0.6 ) }
    dend_9 { pt3dadd( 27.2376, 27.9669, 24.4748, 0.12 ) }
    dend_9 { pt3dadd( 27.898, 28.4958, 24.7718, 0.12 ) }
    dend_9 { pt3dadd( 28.8015, 29.2428, 25.2649, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_9 { pt3dadd( 29.2998, 29.6957, 25.5995, 0.12 ) }
    dend_9 { pt3dadd( 29.8075, 30.2047, 26.0077, 0.48 ) }
    dend_9 { pt3dadd( 30.4268, 30.9373, 26.6576, 0.6 ) }
    dend_9 { pt3dadd( 30.7262, 31.2457, 26.8924, 0.6 ) }
    dend_9 { pt3dadd( 30.9772, 31.3564, 27.0907, 0.6 ) }
    dend_9 { pt3dadd( 37.0791, 35.6171, 33.699, 0.6 ) }
    dend_9 { pt3dadd( 41.2319, 40.0211, 41.5953, 0.6 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 7/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 9.81607, 19.0834, 4.3952, 0.36 ) }
    dend_8 { pt3dadd( 10.8289, 20.4469, 4.43047, 0.36 ) }
    dend_8 { pt3dadd( 11.3406, 21.2033, 4.44526, 0.36 ) }
    dend_8 { pt3dadd( 12.0915, 22.306, 4.46289, 0.48 ) }
    dend_8 { pt3dadd( 12.965, 23.5294, 4.48004, 0.6 ) }
    dend_8 { pt3dadd( 14.099, 24.9673, 4.49834, 0.6 ) }
    dend_8 { pt3dadd( 15.0251, 26.0435, 4.51071, 0.84 ) }
    dend_8 { pt3dadd( 15.9318, 27.0299, 4.51071, 0.36 ) }
    dend_8 { pt3dadd( 16.7983, 27.9722, 4.51071, 0.36 ) }
    dend_8 { pt3dadd( 17.3832, 28.6174, 4.51071, 0.36 ) }
    dend_8 { pt3dadd( 18.3331, 29.6792, 4.51071, 0.36 ) }
    dend_8 { pt3dadd( 19.1341, 30.6681, 4.51071, 0.48 ) }
    dend_8 { pt3dadd( 19.8073, 31.654, 4.33999, 0.48 ) }
    dend_8 { pt3dadd( 20.4665, 32.8314, 3.93174, 0.84 ) }
    dend_8 { pt3dadd( 20.9007, 33.8135, 3.5169, 0.48 ) }
    dend_8 { pt3dadd( 21.2463, 34.8408, 2.99224, 0.48 ) }
    dend_8 { pt3dadd( 21.7549, 36.7913, 1.93279, 0.48 ) }
    dend_8 { pt3dadd( 22.4413, 40.2623, 0.0731967, 0.6 ) }
    dend_8 { pt3dadd( 22.7447, 42.191, -0.930406, 0.6 ) }
    dend_8 { pt3dadd( 22.9485, 43.8894, -1.76804, 0.48 ) }
    dend_8 { pt3dadd( 23.2031, 47.1175, -3.26278, 0.48 ) }
    dend_8 { pt3dadd( 23.2526, 48.6254, -3.89101, 0.48 ) }
    dend_8 { pt3dadd( 23.2178, 51.2905, -4.80566, 0.6 ) }
    dend_8 { pt3dadd( 23.1213, 52.6551, -5.10723, 0.72 ) }
    dend_8 { pt3dadd( 22.9386, 54.1669, -5.35965, 0.84 ) }
    dend_8 { pt3dadd( 22.6898, 55.6963, -5.56224, 0.48 ) }
    dend_8 { pt3dadd( 22.4617, 56.9249, -5.64274, 0.72 ) }
    dend_8 { pt3dadd( 22.245, 58.0872, -5.71823, 0.72 ) }
    dend_8 { pt3dadd( 21.9736, 59.6795, -5.81577, 0.24 ) }
    dend_8 { pt3dadd( 21.8763, 60.3841, -5.84927, 0.12 ) }
    dend_8 { pt3dadd( 21.7891, 61.0807, -5.86953, 0.48 ) }
    dend_8 { pt3dadd( 21.6725, 62.0647, -5.8717, 0.72 ) }
    dend_8 { pt3dadd( 21.494, 64.0363, -5.87522, 0.72 ) }
    dend_8 { pt3dadd( 21.4651, 64.5583, -5.85208, 0.12 ) }
    dend_8 { pt3dadd( 21.4705, 65.7207, -5.75721, 0.12 ) }
    dend_8 { pt3dadd( 21.5201, 67.2354, -5.65415, 0.48 ) }
    dend_8 { pt3dadd( 21.5449, 67.7118, -5.62518, 0.12 ) }
    dend_8 { pt3dadd( 21.6179, 68.9854, -5.55776, 0.12 ) }
    dend_8 { pt3dadd( 21.7592, 70.7465, -5.49984, 0.84 ) }
    dend_8 { pt3dadd( 21.8978, 72.1975, -5.47796, 0.84 ) }
    dend_8 { pt3dadd( 22.1882, 74.4539, -5.4885, 0.12 ) }
    dend_8 { pt3dadd( 22.2124, 74.6176, -5.49243, 0.12 ) }
    dend_8 { pt3dadd( 22.3678, 75.7727, -5.54548, 0.12 ) }
    dend_8 { pt3dadd( 22.5399, 77.1973, -5.67441, 0.48 ) }
    dend_8 { pt3dadd( 22.5663, 77.4278, -5.70609, 0.12 ) }
    dend_8 { pt3dadd( 22.7634, 79.1841, -5.92991, 0.12 ) }
    dend_8 { pt3dadd( 22.8715, 79.9146, -6.00338, 1.08 ) }
    dend_8 { pt3dadd( 23.1238, 81.4163, -6.1588, 0.12 ) }
    dend_8 { pt3dadd( 23.2792, 82.2314, -6.24627, 0.12 ) }
    dend_8 { pt3dadd( 23.4662, 83.1226, -6.33558, 0.36 ) }
    dend_8 { pt3dadd( 23.5338, 83.3746, -6.36023, 0.12 ) }
    dend_8 { pt3dadd( 23.7229, 83.9151, -6.44612, 0.12 ) }
    dend_8 { pt3dadd( 23.9682, 84.4516, -6.55343, 0.48 ) }
    dend_8 { pt3dadd( 24.1128, 84.7443, -6.61777, 0.12 ) }
    dend_8 { pt3dadd( 24.4945, 85.5283, -6.77973, 0.12 ) }
    dend_8 { pt3dadd( 24.9854, 86.5611, -6.99951, 0.36 ) }
    dend_8 { pt3dadd( 25.4, 87.4472, -7.17592, 0.12 ) }
    dend_8 { pt3dadd( 25.8861, 88.4998, -7.37098, 0.12 ) }
    dend_8 { pt3dadd( 26.28, 89.3395, -7.51243, 0.96 ) }
    dend_8 { pt3dadd( 26.439, 89.6666, -7.59113, 0.96 ) }
    dend_8 { pt3dadd( 26.6912, 90.2186, -7.75364, 0.12 ) }
    dend_8 { pt3dadd( 27.0502, 91.0687, -8.02012, 0.12 ) }
    dend_8 { pt3dadd( 27.2439, 91.4951, -8.14657, 0.12 ) }
    dend_8 { pt3dadd( 27.3994, 91.815, -8.25703, 0.12 ) }
    dend_8 { pt3dadd( 28.1673, 93.2646, -8.77629, 0.12 ) }
    dend_8 { pt3dadd( 28.5593, 93.9586, -9.02055, 0.12 ) }
    dend_8 { pt3dadd( 28.9526, 94.6, -9.23554, 0.6 ) }
    dend_8 { pt3dadd( 29.4377, 95.3568, -9.43738, 0.84 ) }
    dend_8 { pt3dadd( 29.7544, 95.8767, -9.58204, 0.12 ) }
    dend_8 { pt3dadd( 30.0946, 96.5194, -9.74288, 0.12 ) }
    dend_8 { pt3dadd( 30.2594, 96.8969, -9.8433, 0.48 ) }
    dend_8 { pt3dadd( 30.4757, 97.4799, -10.06, 0.12 ) }
    dend_8 { pt3dadd( 30.7952, 98.5949, -10.5515, 0.12 ) }
    dend_8 { pt3dadd( 31.0605, 99.8291, -11.2132, 0.84 ) }
    dend_8 { pt3dadd( 31.2055, 100.559, -11.6194, 0.84 ) }
    dend_8 { pt3dadd( 31.402, 101.614, -12.1871, 0.12 ) }
    dend_8 { pt3dadd( 31.4971, 102.135, -12.4467, 0.12 ) }
    dend_8 { pt3dadd( 31.6409, 102.8, -12.6649, 0.36 ) }
    dend_8 { pt3dadd( 31.9326, 103.546, -12.7607, 0.12 ) }
    dend_8 { pt3dadd( 32.6179, 105.014, -12.683, 0.12 ) }
    dend_8 { pt3dadd( 33.0037, 105.794, -12.6164, 0.12 ) }
    dend_8 { pt3dadd( 33.2345, 106.26, -12.5776, 0.12 ) }
    dend_8 { pt3dadd( 34.18, 108.329, -12.4919, 0.12 ) }
    dend_8 { pt3dadd( 35.0184, 110.244, -12.4533, 0.12 ) }
    dend_8 { pt3dadd( 36.2226, 113.031, -12.3766, 0.12 ) }
    dend_8 { pt3dadd( 36.5773, 113.87, -12.3741, 0.96 ) }
    dend_8 { pt3dadd( 36.9595, 114.81, -12.4065, 0.12 ) }
    dend_8 { pt3dadd( 38.1587, 118.054, -12.7209, 0.12 ) }
    dend_8 { pt3dadd( 38.3483, 118.688, -12.8576, 0.84 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 96/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 20.3789, -1.05244, -2.59183, 0.72 ) }
    dend_2 { pt3dadd( 21.0933, -2.2792, -2.53352, 0.72 ) }
    dend_2 { pt3dadd( 21.8213, -3.48405, -2.35749, 0.6 ) }
    dend_2 { pt3dadd( 22.5601, -4.59004, -2.1412, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_2 { pt3dadd( 23.5729, -5.98954, -1.76714, 0.48 ) }
    dend_2 { pt3dadd( 24.1053, -6.70243, -1.55244, 0.48 ) }
    dend_2 { pt3dadd( 24.5929, -7.35593, -1.33458, 0.84 ) }
    dend_2 { pt3dadd( 25.5896, -8.75283, -0.805012, 0.84 ) }
    dend_2 { pt3dadd( 26.2902, -9.67062, -0.418477, 0.6 ) }
    dend_2 { pt3dadd( 26.8742, -10.3373, -0.130299, 0.6 ) }
    dend_2 { pt3dadd( 27.4843, -10.9385, 0.157436, 0.6 ) }
    dend_2 { pt3dadd( 28.2704, -11.6634, 0.491184, 0.6 ) }
    dend_2 { pt3dadd( 28.8559, -12.1501, 0.695337, 0.36 ) }
    dend_2 { pt3dadd( 29.6011, -12.7142, 0.910033, 0.6 ) }
    dend_2 { pt3dadd( 30.5751, -13.4015, 1.19411, 0.96 ) }
    dend_2 { pt3dadd( 31.3169, -13.916, 1.40257, 0.96 ) }
    dend_2 { pt3dadd( 32.2178, -14.5461, 1.67028, 0.72 ) }
    dend_2 { pt3dadd( 33.4341, -15.4785, 2.09189, 0.72 ) }
    dend_2 { pt3dadd( 34.3226, -16.3053, 2.47593, 0.36 ) }
    dend_2 { pt3dadd( 34.6192, -16.6759, 2.63949, 0.36 ) }
    dend_2 { pt3dadd( 35.0091, -17.3809, 2.91632, 0.96 ) }
    dend_2 { pt3dadd( 35.3473, -18.1967, 3.21293, 1.2 ) }
    dend_2 { pt3dadd( 35.6435, -19.3243, 3.57998, 0.96 ) }
    dend_2 { pt3dadd( 35.7478, -20.2262, 3.80434, 0.96 ) }
    dend_2 { pt3dadd( 35.7718, -20.914, 3.94676, 1.2 ) }
    dend_2 { pt3dadd( 35.7902, -21.7497, 4.12915, 1.2 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 22/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 20.3789, -1.05244, -2.59183, 0.72 ) }
    dend_1 { pt3dadd( 21.4053, -0.02446, -1.95684, 0.72 ) }
    dend_1 { pt3dadd( 22.6454, 1.06352, -1.33809, 0.24 ) }
    dend_1 { pt3dadd( 23.2957, 1.57385, -1.06831, 0.24 ) }
    dend_1 { pt3dadd( 24.036, 2.11378, -0.800439, 0.24 ) }
    dend_1 { pt3dadd( 24.8048, 2.63512, -0.55734, 0.6 ) }
    dend_1 { pt3dadd( 25.373, 3.00236, -0.399703, 0.12 ) }
    dend_1 { pt3dadd( 25.7791, 3.24612, -0.344986, 0.12 ) }
    dend_1 { pt3dadd( 26.2171, 3.47023, -0.335441, 0.48 ) }
    dend_1 { pt3dadd( 26.4517, 3.59726, -0.331317, 0.48 ) }
    dend_1 { pt3dadd( 26.9819, 3.96183, -0.370346, 0.12 ) }
    dend_1 { pt3dadd( 27.3964, 4.3695, -0.449813, 0.36 ) }
    dend_1 { pt3dadd( 27.6798, 4.75508, -0.539615, 0.36 ) }
    dend_1 { pt3dadd( 27.9296, 5.15948, -0.641408, 0.12 ) }
    dend_1 { pt3dadd( 28.3294, 5.80907, -0.814486, 0.12 ) }
    dend_1 { pt3dadd( 28.9055, 6.66986, -1.08998, 1.32 ) }
    dend_1 { pt3dadd( 29.4763, 7.37017, -1.36422, 1.32 ) }
    dend_1 { pt3dadd( 30.0101, 7.80958, -1.57574, 0.12 ) }
    dend_1 { pt3dadd( 30.4189, 8.02244, -1.70051, 0.12 ) }
    dend_1 { pt3dadd( 31.1942, 8.37832, -1.78789, 0.48 ) }
    dend_1 { pt3dadd( 31.8139, 8.65401, -1.77065, 0.6 ) }
    dend_1 { pt3dadd( 32.6046, 9.00061, -1.66234, 0.12 ) }
    dend_1 { pt3dadd( 33.376, 9.30012, -1.48751, 0.12 ) }
    dend_1 { pt3dadd( 33.7698, 9.43821, -1.37764, 0.12 ) }
    dend_1 { pt3dadd( 35.6917, 10.1265, -0.778679, 0.6 ) }
    dend_1 { pt3dadd( 36.0815, 10.2611, -0.651546, 0.12 ) }
    dend_1 { pt3dadd( 36.8546, 10.5023, -0.40423, 0.12 ) }
    dend_1 { pt3dadd( 37.9093, 10.7768, -0.102755, 0.6 ) }
    dend_1 { pt3dadd( 39.0671, 11.0165, 0.175669, 0.84 ) }
    dend_1 { pt3dadd( 40.1413, 11.1907, 0.371192, 0.84 ) }
    dend_1 { pt3dadd( 40.9792, 11.2829, 0.466111, 0.84 ) }
    dend_1 { pt3dadd( 41.9322, 11.4206, 0.554448, 0.12 ) }
    dend_1 { pt3dadd( 42.6338, 11.5772, 0.571558, 0.12 ) }
    dend_1 { pt3dadd( 43.2688, 11.8062, 0.521235, 0.72 ) }
    dend_1 { pt3dadd( 43.8928, 12.222, 0.423237, 0.72 ) }
    dend_1 { pt3dadd( 43.9986, 12.3466, 0.387445, 0.12 ) }
    dend_1 { pt3dadd( 44.2236, 12.7426, 0.26592, 0.12 ) }
    dend_1 { pt3dadd( 44.5957, 13.6013, 5.75733E-4, 0.6 ) }
    dend_1 { pt3dadd( 44.8279, 14.1551, -0.17016, 0.6 ) }
    dend_1 { pt3dadd( 45.3573, 15.2736, -0.516327, 0.6 ) }
    dend_1 { pt3dadd( 45.689, 15.8378, -0.676199, 0.12 ) }
    dend_1 { pt3dadd( 45.9949, 16.2489, -0.823342, 0.12 ) }
    dend_1 { pt3dadd( 46.5207, 16.7499, -1.04675, 0.72 ) }
    dend_1 { pt3dadd( 47.1083, 17.1209, -1.25336, 0.72 ) }
    dend_1 { pt3dadd( 47.6482, 17.3185, -1.45801, 0.72 ) }
    dend_1 { pt3dadd( 48.6344, 17.54, -1.88867, 0.72 ) }
    dend_1 { pt3dadd( 49.8929, 17.7656, -2.4624, 0.12 ) }
    dend_1 { pt3dadd( 50.867, 17.9243, -2.94391, 0.12 ) }
    dend_1 { pt3dadd( 51.5019, 18.0366, -3.26342, 1.08 ) }
    dend_1 { pt3dadd( 52.8982, 18.3542, -3.87038, 0.12 ) }
    dend_1 { pt3dadd( 53.666, 18.5921, -4.13443, 0.12 ) }
    dend_1 { pt3dadd( 54.4089, 18.88, -4.28743, 0.12 ) }
    dend_1 { pt3dadd( 54.7102, 19.0319, -4.30011, 0.84 ) }
    dend_1 { pt3dadd( 55.5662, 19.5612, -4.29514, 0.84 ) }
    dend_1 { pt3dadd( 56.747, 20.3494, -4.21482, 0.48 ) }
    dend_1 { pt3dadd( 57.6988, 21.0134, -4.08696, 0.72 ) }
    dend_1 { pt3dadd( 58.1522, 21.3347, -4.00751, 0.12 ) }
    dend_1 { pt3dadd( 58.812, 21.8674, -3.88493, 0.12 ) }
    dend_1 { pt3dadd( 59.3386, 22.3565, -3.79002, 0.84 ) }
    dend_1 { pt3dadd( 59.8749, 22.9361, -3.70668, 0.84 ) }
    dend_1 { pt3dadd( 60.7383, 23.9685, -3.60458, 0.12 ) }
    dend_1 { pt3dadd( 61.331, 24.7804, -3.48389, 0.48 ) }
    dend_1 { pt3dadd( 62.1019, 25.9798, -3.29412, 0.72 ) }
    dend_1 { pt3dadd( 62.5755, 26.8033, -3.14436, 0.84 ) }
    dend_1 { pt3dadd( 63.2015, 27.8925, -2.93236, 0.12 ) }
    dend_1 { pt3dadd( 63.6982, 28.7589, -2.78332, 0.12 ) }
    dend_1 { pt3dadd( 64.2611, 29.723, -2.65097, 1.08 ) }
    dend_1 { pt3dadd( 64.7172, 30.449, -2.6233, 0.12 ) }
    dend_1 { pt3dadd( 64.9521, 30.7933, -2.63677, 0.12 ) }
    dend_1 { pt3dadd( 66.0791, 32.3933, -2.79659, 0.12 ) }
    dend_1 { pt3dadd( 66.6842, 33.2476, -2.93324, 0.84 ) }
    dend_1 { pt3dadd( 67.5147, 34.3839, -3.10124, 0.84 ) }
    dend_1 { pt3dadd( 68.3851, 35.433, -3.25022, 0.12 ) }
    dend_1 { pt3dadd( 68.9221, 36.0095, -3.30488, 0.12 ) }
    dend_1 { pt3dadd( 69.4653, 36.5393, -3.3173, 0.12 ) }
    dend_1 { pt3dadd( 69.7827, 36.8118, -3.28208, 0.48 ) }
    dend_1 { pt3dadd( 71.136, 37.7437, -2.95622, 0.12 ) }
    dend_1 { pt3dadd( 71.8476, 38.1644, -2.77636, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_1 { pt3dadd( 72.3028, 38.4225, -2.6727, 0.48 ) }
    dend_1 { pt3dadd( 72.5357, 38.5452, -2.62884, 0.12 ) }
    dend_1 { pt3dadd( 73.1517, 38.8586, -2.54665, 0.12 ) }
    dend_1 { pt3dadd( 74.296, 39.3853, -2.46406, 0.12 ) }
    dend_1 { pt3dadd( 75.3073, 39.8532, -2.47061, 0.96 ) }
    dend_1 { pt3dadd( 76.3466, 40.3935, -2.46416, 0.96 ) }
    dend_1 { pt3dadd( 77.1056, 40.7942, -2.44845, 0.12 ) }
    dend_1 { pt3dadd( 77.8868, 41.1744, -2.41764, 0.12 ) }
    dend_1 { pt3dadd( 78.7135, 41.53, -2.37243, 0.12 ) }
    dend_1 { pt3dadd( 79.5682, 41.8808, -2.30829, 0.6 ) }
    dend_1 { pt3dadd( 80.8301, 42.4399, -2.19334, 0.12 ) }
    dend_1 { pt3dadd( 81.0416, 42.5535, -2.18251, 0.12 ) }
    dend_1 { pt3dadd( 81.8584, 43.0982, -2.18608, 0.12 ) }
    dend_1 { pt3dadd( 82.4509, 43.58, -2.19698, 0.48 ) }
    dend_1 { pt3dadd( 83.1937, 44.2819, -2.2197, 0.84 ) }
    dend_1 { pt3dadd( 83.7183, 44.8068, -2.34595, 0.84 ) }
    dend_1 { pt3dadd( 84.7074, 45.8572, -2.79188, 0.12 ) }
    dend_1 { pt3dadd( 85.2172, 46.5148, -3.14796, 0.12 ) }
    dend_1 { pt3dadd( 85.4788, 46.9576, -3.44419, 0.6 ) }
    dend_1 { pt3dadd( 85.6435, 47.2734, -3.679, 0.12 ) }
    dend_1 { pt3dadd( 86.5885, 49.3105, -5.42911, 0.12 ) }
    dend_1 { pt3dadd( 86.7588, 49.7087, -5.82541, 0.12 ) }
    dend_1 { pt3dadd( 87.112, 50.5539, -6.84487, 0.12 ) }
    dend_1 { pt3dadd( 87.5032, 51.3604, -7.92907, 1.08 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 24/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 32.569, -22.5563, 0.0, 0.6 ) }
    axon_1 { pt3dadd( 44.6773, -31.4101, 0.0, 0.6 ) }
    axon_1 { pt3dadd( 56.7856, -40.2638, 0.0, 0.6 ) }
    // Section: dend_101, id: dend_101, parent: dend_95 (entry count 27/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( -18.9021, -41.0054, -52.3892, 0.12 ) }
    dend_101 { pt3dadd( -19.7112, -40.2813, -52.5772, 0.12 ) }
    dend_101 { pt3dadd( -19.8279, -40.1005, -52.675, 0.12 ) }
    dend_101 { pt3dadd( -20.0156, -39.5464, -53.1099, 0.12 ) }
    dend_101 { pt3dadd( -20.1357, -39.147, -53.5315, 0.12 ) }
    dend_101 { pt3dadd( -20.371, -38.3223, -54.3347, 0.12 ) }
    dend_101 { pt3dadd( -20.6638, -37.2146, -55.4079, 0.12 ) }
    dend_101 { pt3dadd( -20.7229, -36.9681, -55.6573, 0.12 ) }
    dend_101 { pt3dadd( -20.976, -36.1987, -56.5511, 0.96 ) }
    dend_101 { pt3dadd( -21.3232, -35.3236, -57.6677, 0.24 ) }
    dend_101 { pt3dadd( -21.6317, -34.6287, -58.6008, 0.24 ) }
    dend_101 { pt3dadd( -21.8681, -34.1532, -59.2647, 0.84 ) }
    dend_101 { pt3dadd( -22.0484, -33.7868, -59.7586, 0.84 ) }
    dend_101 { pt3dadd( -22.8848, -31.882, -62.3152, 0.48 ) }
    dend_101 { pt3dadd( -23.0286, -31.5056, -62.7888, 0.12 ) }
    dend_101 { pt3dadd( -23.1342, -31.1766, -63.1453, 0.12 ) }
    dend_101 { pt3dadd( -23.3057, -30.4983, -63.8232, 0.48 ) }
    dend_101 { pt3dadd( -23.4331, -29.7778, -64.3783, 0.12 ) }
    dend_101 { pt3dadd( -23.4895, -29.2109, -64.7992, 0.12 ) }
    dend_101 { pt3dadd( -23.5128, -28.4433, -65.2444, 0.12 ) }
    dend_101 { pt3dadd( -23.5555, -27.4452, -65.8149, 0.12 ) }
    dend_101 { pt3dadd( -23.6122, -26.7848, -66.2034, 1.2 ) }
    dend_101 { pt3dadd( -23.7169, -25.9648, -66.6952, 1.2 ) }
    dend_101 { pt3dadd( -24.0591, -23.6878, -68.142, 0.12 ) }
    dend_101 { pt3dadd( -24.2408, -22.1879, -69.268, 0.12 ) }
    // Section: dend_96, id: dend_96, parent: dend_95 (entry count 52/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -18.9021, -41.0054, -52.3892, 0.12 ) }
    dend_96 { pt3dadd( -19.8317, -41.7271, -52.8303, 0.12 ) }
    dend_96 { pt3dadd( -20.24, -42.0872, -53.0479, 0.12 ) }
    dend_96 { pt3dadd( -21.1424, -43.017, -53.6633, 0.12 ) }
    dend_96 { pt3dadd( -21.523, -43.4465, -53.944, 0.12 ) }
    dend_96 { pt3dadd( -22.121, -44.1262, -54.367, 0.96 ) }
    dend_96 { pt3dadd( -22.7157, -44.789, -54.7576, 0.12 ) }
    dend_96 { pt3dadd( -23.2547, -45.4521, -55.2766, 0.12 ) }
    dend_96 { pt3dadd( -23.8542, -46.2689, -56.0173, 0.12 ) }
    dend_96 { pt3dadd( -24.0879, -46.6042, -56.3422, 0.12 ) }
    dend_96 { pt3dadd( -24.525, -47.1739, -56.9775, 0.12 ) }
    dend_96 { pt3dadd( -24.8814, -47.5551, -57.4354, 1.08 ) }
    dend_96 { pt3dadd( -26.5703, -49.1197, -59.4039, 0.12 ) }
    dend_96 { pt3dadd( -26.9194, -49.4001, -59.7981, 0.12 ) }
    dend_96 { pt3dadd( -27.5071, -49.7877, -60.3679, 0.48 ) }
    dend_96 { pt3dadd( -28.518, -50.3673, -61.2084, 0.12 ) }
    dend_96 { pt3dadd( -29.5673, -50.9183, -62.0515, 0.12 ) }
    dend_96 { pt3dadd( -30.1768, -51.2351, -62.4822, 1.08 ) }
    dend_96 { pt3dadd( -30.7671, -51.539, -62.8108, 0.12 ) }
    dend_96 { pt3dadd( -31.6346, -52.0071, -63.2968, 0.12 ) }
    dend_96 { pt3dadd( -32.4279, -52.4978, -63.8206, 1.08 ) }
    dend_96 { pt3dadd( -33.8561, -53.5989, -64.8721, 0.12 ) }
    dend_96 { pt3dadd( -34.4612, -54.1871, -65.4216, 0.12 ) }
    dend_96 { pt3dadd( -34.6656, -54.4261, -65.6268, 0.72 ) }
    dend_96 { pt3dadd( -35.0515, -54.9988, -66.1221, 0.72 ) }
    dend_96 { pt3dadd( -35.6315, -56.1515, -67.1551, 0.12 ) }
    dend_96 { pt3dadd( -35.9397, -56.9043, -67.8324, 0.12 ) }
    dend_96 { pt3dadd( -36.0336, -57.1842, -68.1499, 0.72 ) }
    dend_96 { pt3dadd( -36.1515, -57.6237, -68.7369, 1.08 ) }
    dend_96 { pt3dadd( -36.4636, -58.792, -70.3714, 0.12 ) }
    dend_96 { pt3dadd( -36.5919, -59.2859, -71.0753, 0.12 ) }
    dend_96 { pt3dadd( -36.6247, -59.3832, -71.2086, 0.48 ) }
    dend_96 { pt3dadd( -37.3876, -61.3392, -73.7957, 0.12 ) }
    dend_96 { pt3dadd( -37.6341, -61.916, -74.4969, 0.12 ) }
    dend_96 { pt3dadd( -37.9101, -62.5294, -75.1781, 0.72 ) }
    dend_96 { pt3dadd( -38.2324, -63.2199, -75.787, 0.12 ) }
    dend_96 { pt3dadd( -38.5975, -64.0732, -76.4054, 0.12 ) }
    dend_96 { pt3dadd( -38.9365, -64.949, -76.8926, 0.12 ) }
    dend_96 { pt3dadd( -39.3444, -65.9952, -77.2657, 0.84 ) }
    dend_96 { pt3dadd( -39.6848, -66.8426, -77.6592, 0.12 ) }
    dend_96 { pt3dadd( -39.9962, -67.6643, -78.0503, 0.12 ) }
    dend_96 { pt3dadd( -40.3595, -68.4815, -78.4045, 0.12 ) }
    dend_96 { pt3dadd( -40.6718, -69.0673, -78.7473, 0.12 ) }
    dend_96 { pt3dadd( -40.8814, -69.3403, -79.6441, 1.08 ) }
    dend_96 { pt3dadd( -41.3665, -69.8411, -81.8419, 0.12 ) }
    dend_96 { pt3dadd( -41.6688, -70.1022, -83.1794, 0.12 ) }
    dend_96 { pt3dadd( -42.121, -70.4564, -85.2141, 0.12 ) }
    dend_96 { pt3dadd( -42.6636, -70.8493, -87.7551, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_96 { pt3dadd( -45.0969, -72.5647, -100.702, 0.12 ) }
    dend_96 { pt3dadd( -45.2606, -72.678, -101.918, 0.12 ) }
    dend_96 { pt3dadd( -45.2909, -72.6994, -102.411, 0.36 ) }
    dend_96 { pt3dadd( -45.2427, -72.7592, -113.426, 0.12 ) }
    dend_96 { pt3dadd( -45.1222, -72.6984, -114.702, 0.12 ) }
    dend_96 { pt3dadd( -45.2401, -72.7537, -114.005, 0.84 ) }
    dend_96 { pt3dadd( -45.6567, -72.9194, -112.184, 0.12 ) }
    dend_96 { pt3dadd( -46.0012, -73.0173, -110.759, 0.12 ) }
    dend_96 { pt3dadd( -46.1393, -73.0446, -110.241, 0.48 ) }
    dend_96 { pt3dadd( -46.6002, -72.9817, -109.862, 0.48 ) }
    dend_96 { pt3dadd( -46.6002, -72.9817, -109.862, 0.12 ) }
    dend_96 { pt3dadd( -47.8853, -72.5808, -109.05, 0.12 ) }
    dend_96 { pt3dadd( -48.5988, -72.4956, -108.923, 0.6 ) }
    // Section: dend_94, id: dend_94, parent: dend_90 (entry count 13/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( 21.2962, -40.1435, -12.0823, 0.36 ) }
    dend_94 { pt3dadd( 21.3824, -42.1327, -12.6114, 0.36 ) }
    dend_94 { pt3dadd( 21.5449, -42.8006, -12.7268, 0.24 ) }
    dend_94 { pt3dadd( 21.9918, -44.0171, -13.0336, 0.24 ) }
    dend_94 { pt3dadd( 22.2182, -44.5436, -13.1822, 1.2 ) }
    dend_94 { pt3dadd( 22.6559, -45.4545, -13.4436, 1.44 ) }
    dend_94 { pt3dadd( 23.2151, -46.5264, -13.7384, 0.84 ) }
    dend_94 { pt3dadd( 24.1397, -48.0021, -14.0338, 0.36 ) }
    dend_94 { pt3dadd( 25.0152, -49.2448, -14.316, 0.12 ) }
    dend_94 { pt3dadd( 25.3235, -49.6618, -14.4161, 0.12 ) }
    dend_94 { pt3dadd( 25.8955, -50.4689, -14.6071, 0.84 ) }
    dend_94 { pt3dadd( 26.5703, -51.5145, -14.8475, 0.84 ) }
    dend_94 { pt3dadd( 27.2525, -52.7446, -15.1017, 0.84 ) }
    dend_94 { pt3dadd( 27.8865, -54.1468, -15.3489, 0.24 ) }
    dend_94 { pt3dadd( 28.2481, -55.1288, -15.468, 0.24 ) }
    dend_94 { pt3dadd( 28.4016, -55.6206, -15.5679, 0.24 ) }
    dend_94 { pt3dadd( 28.5267, -56.1125, -15.7011, 0.6 ) }
    dend_94 { pt3dadd( 28.6724, -56.7592, -15.9085, 0.6 ) }
    dend_94 { pt3dadd( 28.9229, -57.925, -16.3057, 0.6 ) }
    dend_94 { pt3dadd( 29.2011, -59.02, -16.7659, 0.6 ) }
    dend_94 { pt3dadd( 29.7939, -60.7061, -17.5762, 1.68 ) }
    dend_94 { pt3dadd( 30.0647, -61.3106, -17.8986, 1.32 ) }
    dend_94 { pt3dadd( 30.6964, -62.5717, -18.6134, 0.72 ) }
    dend_94 { pt3dadd( 31.0962, -63.32, -19.073, 0.72 ) }
    dend_94 { pt3dadd( 31.8434, -64.7478, -19.9805, 0.72 ) }
    dend_94 { pt3dadd( 32.3223, -65.793, -20.6711, 0.72 ) }
    dend_94 { pt3dadd( 32.5626, -66.5273, -21.2099, 0.48 ) }
    dend_94 { pt3dadd( 32.6271, -66.9623, -21.5937, 0.48 ) }
    dend_94 { pt3dadd( 32.6224, -67.616, -22.2376, 0.72 ) }
    dend_94 { pt3dadd( 32.5609, -68.2725, -22.8773, 0.96 ) }
    dend_94 { pt3dadd( 32.4743, -69.1086, -23.6611, 0.96 ) }
    dend_94 { pt3dadd( 32.4908, -70.5956, -25.1702, 0.36 ) }
    dend_94 { pt3dadd( 32.5796, -71.1059, -25.7039, 0.36 ) }
    dend_94 { pt3dadd( 32.7889, -71.7393, -26.3574, 0.36 ) }
    dend_94 { pt3dadd( 33.0093, -72.257, -26.8554, 0.36 ) }
    dend_94 { pt3dadd( 33.5495, -73.365, -27.8344, 1.2 ) }
    dend_94 { pt3dadd( 34.074, -74.4817, -28.6407, 0.12 ) }
    dend_94 { pt3dadd( 34.4073, -75.3469, -29.1332, 0.12 ) }
    dend_94 { pt3dadd( 34.572, -75.9559, -29.4514, 0.12 ) }
    dend_94 { pt3dadd( 34.649, -76.5708, -29.7446, 0.12 ) }
    dend_94 { pt3dadd( 34.6736, -77.1998, -29.9913, 0.48 ) }
    dend_94 { pt3dadd( 34.65, -78.1458, -30.2917, 0.48 ) }
    dend_94 { pt3dadd( 34.6421, -78.9343, -30.5132, 0.48 ) }
    dend_94 { pt3dadd( 34.7381, -79.7815, -30.7462, 0.48 ) }
    dend_94 { pt3dadd( 34.8732, -80.3431, -30.9309, 1.2 ) }
    dend_94 { pt3dadd( 35.1789, -81.1803, -31.2285, 1.2 ) }
    dend_94 { pt3dadd( 35.5449, -81.982, -31.516, 0.12 ) }
    dend_94 { pt3dadd( 35.8394, -82.5592, -31.7172, 0.12 ) }
    dend_94 { pt3dadd( 36.1581, -83.316, -31.9288, 0.12 ) }
    dend_94 { pt3dadd( 36.3052, -83.769, -32.0335, 0.96 ) }
    dend_94 { pt3dadd( 36.5221, -84.6898, -32.1787, 1.2 ) }
    dend_94 { pt3dadd( 36.6562, -85.3859, -32.2501, 1.2 ) }
    dend_94 { pt3dadd( 36.7237, -85.7402, -32.2673, 0.12 ) }
    dend_94 { pt3dadd( 37.0056, -87.3365, -32.3184, 0.12 ) }
    dend_94 { pt3dadd( 37.0436, -87.5675, -32.322, 0.96 ) }
    dend_94 { pt3dadd( 37.2143, -88.5082, -32.3105, 1.44 ) }
    dend_94 { pt3dadd( 37.5169, -89.9961, -32.2786, 0.6 ) }
    dend_94 { pt3dadd( 37.753, -91.0077, -32.2502, 0.24 ) }
    dend_94 { pt3dadd( 38.0368, -92.0299, -32.2165, 0.24 ) }
    dend_94 { pt3dadd( 38.4166, -93.2469, -32.1713, 0.24 ) }
    dend_94 { pt3dadd( 38.6125, -93.9061, -32.1474, 0.96 ) }
    dend_94 { pt3dadd( 38.856, -94.8084, -32.1148, 1.32 ) }
    dend_94 { pt3dadd( 39.0069, -95.4245, -32.0937, 1.32 ) }
    dend_94 { pt3dadd( 39.2182, -96.234, -32.0698, 0.24 ) }
    dend_94 { pt3dadd( 39.4698, -97.127, -32.0502, 0.24 ) }
    dend_94 { pt3dadd( 40.0151, -98.9719, -32.0284, 0.24 ) }
    dend_94 { pt3dadd( 40.1251, -99.326, -32.0284, 1.08 ) }
    dend_94 { pt3dadd( 40.3653, -100.066, -32.0284, 1.08 ) }
    dend_94 { pt3dadd( 40.6383, -100.94, -32.0284, 0.96 ) }
    dend_94 { pt3dadd( 40.9305, -101.95, -32.0284, 0.24 ) }
    dend_94 { pt3dadd( 41.1607, -102.762, -32.0212, 0.24 ) }
    dend_94 { pt3dadd( 41.5823, -104.377, -31.994, 0.24 ) }
    dend_94 { pt3dadd( 41.709, -104.899, -31.9824, 0.72 ) }
    dend_94 { pt3dadd( 41.901, -105.823, -31.9571, 0.96 ) }
    dend_94 { pt3dadd( 42.0957, -106.967, -31.9214, 0.48 ) }
    dend_94 { pt3dadd( 42.1697, -107.482, -31.9054, 0.24 ) }
    dend_94 { pt3dadd( 42.2842, -108.418, -31.8782, 0.24 ) }
    dend_94 { pt3dadd( 42.3325, -108.775, -31.8693, 0.6 ) }
    dend_94 { pt3dadd( 42.3974, -109.12, -31.8932, 0.12 ) }
    dend_94 { pt3dadd( 42.6983, -110.235, -32.0695, 0.12 ) }
    dend_94 { pt3dadd( 42.8544, -110.689, -32.1729, 1.08 ) }
    dend_94 { pt3dadd( 43.1162, -111.397, -32.3673, 1.08 ) }
    dend_94 { pt3dadd( 43.4647, -112.29, -32.6424, 0.72 ) }
    dend_94 { pt3dadd( 44.0211, -113.805, -33.1387, 0.48 ) }
    dend_94 { pt3dadd( 44.281, -114.558, -33.4052, 0.12 ) }
    dend_94 { pt3dadd( 44.5068, -115.388, -33.8047, 0.12 ) }
    dend_94 { pt3dadd( 44.5331, -115.676, -33.9705, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_94 { pt3dadd( 44.5109, -115.81, -34.0556, 0.6 ) }
    dend_94 { pt3dadd( 44.2776, -116.403, -34.4443, 0.96 ) }
    dend_94 { pt3dadd( 44.1581, -116.624, -34.572, 0.96 ) }
    dend_94 { pt3dadd( 43.3929, -117.969, -35.3372, 0.12 ) }
    dend_94 { pt3dadd( 43.0711, -118.69, -35.7469, 0.12 ) }
    dend_94 { pt3dadd( 42.8747, -119.413, -36.1088, 0.12 ) }
    dend_94 { pt3dadd( 42.8535, -119.565, -36.1738, 0.72 ) }
    dend_94 { pt3dadd( 42.8506, -120.122, -36.364, 1.08 ) }
    dend_94 { pt3dadd( 42.9114, -120.794, -36.5624, 1.08 ) }
    dend_94 { pt3dadd( 43.1445, -122.144, -36.8717, 0.24 ) }
    dend_94 { pt3dadd( 43.3234, -122.922, -37.0576, 0.24 ) }
    dend_94 { pt3dadd( 43.4705, -123.487, -37.1896, 1.08 ) }
    dend_94 { pt3dadd( 43.7682, -124.525, -37.4165, 1.08 ) }
    dend_94 { pt3dadd( 44.0384, -125.393, -37.5898, 0.12 ) }
    dend_94 { pt3dadd( 44.3642, -126.401, -37.7567, 0.12 ) }
    dend_94 { pt3dadd( 44.5744, -127.047, -37.8288, 0.12 ) }
    dend_94 { pt3dadd( 44.7801, -127.747, -37.8968, 0.12 ) }
    dend_94 { pt3dadd( 44.955, -128.47, -37.8945, 0.12 ) }
    dend_94 { pt3dadd( 45.0031, -128.735, -37.8669, 0.48 ) }
    dend_94 { pt3dadd( 45.115, -129.419, -37.7463, 0.72 ) }
    dend_94 { pt3dadd( 45.2327, -130.24, -37.5817, 1.08 ) }
    dend_94 { pt3dadd( 45.3743, -131.377, -37.355, 1.08 ) }
    dend_94 { pt3dadd( 45.5669, -132.894, -37.0537, 0.12 ) }
    dend_94 { pt3dadd( 45.7781, -134.269, -36.7898, 0.12 ) }
    dend_94 { pt3dadd( 45.9777, -135.333, -36.6143, 1.56 ) }
    dend_94 { pt3dadd( 46.1504, -136.126, -36.5012, 0.12 ) }
    dend_94 { pt3dadd( 46.4907, -137.477, -36.35, 0.12 ) }
    dend_94 { pt3dadd( 46.5803, -137.796, -36.3296, 0.6 ) }
    dend_94 { pt3dadd( 46.8043, -138.59, -36.2524, 0.12 ) }
    dend_94 { pt3dadd( 47.2421, -140.281, -35.9352, 0.12 ) }
    dend_94 { pt3dadd( 47.3243, -140.681, -35.8276, 0.96 ) }
    dend_94 { pt3dadd( 47.4301, -141.371, -35.6034, 1.44 ) }
    dend_94 { pt3dadd( 47.4904, -142.04, -35.3636, 1.44 ) }
    dend_94 { pt3dadd( 47.549, -144.29, -34.5268, 0.12 ) }
    dend_94 { pt3dadd( 47.5394, -144.536, -34.4361, 0.12 ) }
    dend_94 { pt3dadd( 47.4919, -145.174, -34.2173, 0.12 ) }
    dend_94 { pt3dadd( 47.437, -146.636, -33.8301, 0.12 ) }
    dend_94 { pt3dadd( 47.4687, -147.558, -33.6782, 0.12 ) }
    dend_94 { pt3dadd( 47.4895, -147.735, -33.6751, 0.48 ) }
    dend_94 { pt3dadd( 47.6863, -148.873, -33.7976, 0.48 ) }
    dend_94 { pt3dadd( 47.7845, -149.371, -33.8586, 0.12 ) }
    dend_94 { pt3dadd( 48.0846, -150.749, -34.043, 0.12 ) }
    dend_94 { pt3dadd( 48.3873, -152.063, -34.2349, 1.56 ) }
    dend_94 { pt3dadd( 48.6719, -153.333, -34.4211, 0.12 ) }
    dend_94 { pt3dadd( 48.834, -154.132, -34.5312, 0.12 ) }
    dend_94 { pt3dadd( 48.9831, -154.956, -34.6324, 0.12 ) }
    dend_94 { pt3dadd( 49.0816, -155.882, -34.7113, 0.12 ) }
    dend_94 { pt3dadd( 49.087, -156.046, -34.7269, 0.6 ) }
    dend_94 { pt3dadd( 49.086, -156.629, -34.7784, 0.12 ) }
    dend_94 { pt3dadd( 49.087, -157.56, -34.8456, 0.12 ) }
    dend_94 { pt3dadd( 49.0955, -158.082, -34.8894, 1.08 ) }
    dend_94 { pt3dadd( 49.1621, -160.074, -35.0608, 0.36 ) }
    dend_94 { pt3dadd( 49.2042, -161.099, -35.145, 0.12 ) }
    dend_94 { pt3dadd( 49.2819, -162.721, -35.2714, 0.12 ) }
    dend_94 { pt3dadd( 49.3213, -163.448, -35.3253, 1.08 ) }
    dend_94 { pt3dadd( 49.3516, -163.929, -35.3582, 0.12 ) }
    dend_94 { pt3dadd( 49.4487, -165.323, -35.4384, 0.12 ) }
    dend_94 { pt3dadd( 49.5926, -166.597, -35.4815, 0.36 ) }
    dend_94 { pt3dadd( 49.6249, -166.829, -35.4815, 0.12 ) }
    dend_94 { pt3dadd( 49.7048, -167.295, -35.4815, 0.12 ) }
    dend_94 { pt3dadd( 49.7589, -167.567, -35.4815, 0.96 ) }
    dend_94 { pt3dadd( 49.8721, -168.027, -35.4815, 0.12 ) }
    dend_94 { pt3dadd( 50.3645, -169.652, -35.4815, 0.12 ) }
    dend_94 { pt3dadd( 50.6242, -170.386, -35.4815, 0.72 ) }
    dend_94 { pt3dadd( 50.7575, -170.732, -35.4734, 0.12 ) }
    dend_94 { pt3dadd( 51.5087, -172.506, -35.4046, 0.12 ) }
    dend_94 { pt3dadd( 51.8158, -173.19, -35.3715, 0.96 ) }
    dend_94 { pt3dadd( 52.1462, -173.905, -35.3313, 1.56 ) }
    dend_94 { pt3dadd( 52.8415, -175.414, -35.2362, 0.12 ) }
    dend_94 { pt3dadd( 53.3622, -176.556, -35.1605, 0.12 ) }
    dend_94 { pt3dadd( 53.9536, -177.956, -35.0716, 0.12 ) }
    dend_94 { pt3dadd( 54.3347, -178.924, -35.0116, 0.12 ) }
    dend_94 { pt3dadd( 54.4821, -179.358, -34.9876, 0.6 ) }
    dend_94 { pt3dadd( 54.7317, -180.261, -34.9476, 0.6 ) }
    dend_94 { pt3dadd( 54.7836, -180.581, -34.9386, 0.12 ) }
    dend_94 { pt3dadd( 54.7391, -182.68, -34.9259, 0.12 ) }
    dend_94 { pt3dadd( 54.6942, -182.938, -34.9148, 0.84 ) }
    dend_94 { pt3dadd( 54.5581, -183.434, -34.8811, 1.08 ) }
    dend_94 { pt3dadd( 54.3245, -184.106, -34.8252, 0.12 ) }
    dend_94 { pt3dadd( 53.805, -185.413, -34.7108, 0.12 ) }
    dend_94 { pt3dadd( 52.9333, -187.491, -34.4842, 0.12 ) }
    dend_94 { pt3dadd( 52.4457, -188.594, -34.3432, 1.08 ) }
    dend_94 { pt3dadd( 52.1229, -189.37, -34.2413, 0.12 ) }
    dend_94 { pt3dadd( 51.6622, -190.584, -34.0801, 0.12 ) }
    dend_94 { pt3dadd( 51.1731, -192.016, -33.821, 0.12 ) }
    dend_94 { pt3dadd( 50.9411, -192.862, -33.6296, 0.6 ) }
    dend_94 { pt3dadd( 50.8465, -193.321, -33.5109, 0.12 ) }
    dend_94 { pt3dadd( 50.6112, -194.545, -33.1944, 0.12 ) }
    dend_94 { pt3dadd( 50.5087, -195.091, -33.0402, 0.72 ) }
    dend_94 { pt3dadd( 50.2359, -196.455, -32.5425, 0.12 ) }
    dend_94 { pt3dadd( 50.0874, -197.082, -32.2804, 0.12 ) }
    dend_94 { pt3dadd( 49.7031, -198.438, -31.7122, 0.12 ) }
    dend_94 { pt3dadd( 49.4913, -199.042, -31.4669, 0.12 ) }
    dend_94 { pt3dadd( 49.3097, -199.493, -31.2897, 0.48 ) }
    dend_94 { pt3dadd( 48.8104, -200.645, -30.9175, 0.12 ) }
    dend_94 { pt3dadd( 48.4655, -201.383, -30.751, 0.12 ) }
    dend_94 { pt3dadd( 48.2157, -201.897, -30.6499, 0.84 ) }
    dend_94 { pt3dadd( 47.5165, -203.29, -30.3225, 0.36 ) }
    dend_94 { pt3dadd( 47.3888, -203.551, -30.2604, 0.12 ) }
    dend_94 { pt3dadd( 46.8678, -204.669, -30.0153, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_94 { pt3dadd( 46.3571, -205.805, -29.8019, 0.12 ) }
    dend_94 { pt3dadd( 45.8067, -207.032, -29.5611, 0.12 ) }
    dend_94 { pt3dadd( 45.2467, -208.311, -29.3067, 0.12 ) }
    dend_94 { pt3dadd( 44.9386, -209.026, -29.0696, 0.12 ) }
    dend_94 { pt3dadd( 44.4701, -210.15, -28.5891, 1.08 ) }
    dend_94 { pt3dadd( 44.3625, -210.467, -28.4262, 0.12 ) }
    dend_94 { pt3dadd( 44.0501, -211.921, -27.6107, 0.12 ) }
    dend_94 { pt3dadd( 44.0218, -212.286, -27.4128, 0.48 ) }
    dend_94 { pt3dadd( 44.1383, -214.944, -26.1607, 0.12 ) }
    dend_94 { pt3dadd( 44.2263, -215.88, -25.6824, 0.12 ) }
    dend_94 { pt3dadd( 44.4221, -216.99, -25.0777, 0.12 ) }
    dend_94 { pt3dadd( 44.6677, -217.915, -24.5774, 0.12 ) }
    dend_94 { pt3dadd( 45.1723, -219.127, -23.9655, 0.12 ) }
    dend_94 { pt3dadd( 45.5191, -219.859, -23.7166, 0.6 ) }
    // Section: dend_91, id: dend_91, parent: dend_90 (entry count 14/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 21.2962, -40.1435, -12.0823, 0.48 ) }
    dend_91 { pt3dadd( 22.4017, -40.1007, -12.0823, 0.48 ) }
    dend_91 { pt3dadd( 23.4952, -40.0562, -12.1311, 0.48 ) }
    dend_91 { pt3dadd( 24.2136, -40.0449, -12.1778, 0.48 ) }
    dend_91 { pt3dadd( 25.3358, -40.1008, -12.262, 0.96 ) }
    dend_91 { pt3dadd( 26.0779, -40.1698, -12.4043, 0.96 ) }
    dend_91 { pt3dadd( 27.3731, -40.2874, -12.7329, 0.72 ) }
    dend_91 { pt3dadd( 27.9524, -40.3012, -12.9423, 0.6 ) }
    dend_91 { pt3dadd( 28.4128, -40.2862, -13.159, 0.84 ) }
    dend_91 { pt3dadd( 29.2636, -40.1539, -13.7127, 0.84 ) }
    dend_91 { pt3dadd( 30.8896, -39.7877, -15.0559, 0.48 ) }
    dend_91 { pt3dadd( 31.4992, -39.6161, -15.6442, 0.48 ) }
    dend_91 { pt3dadd( 32.1584, -39.4494, -16.4741, 0.48 ) }
    dend_91 { pt3dadd( 32.6032, -39.3611, -17.0705, 0.48 ) }
    dend_91 { pt3dadd( 33.5393, -39.1518, -18.3999, 0.48 ) }
    dend_91 { pt3dadd( 33.9492, -39.033, -19.0269, 0.48 ) }
    dend_91 { pt3dadd( 34.4029, -38.8721, -19.7469, 0.48 ) }
    dend_91 { pt3dadd( 35.4212, -38.4312, -22.4991, 0.12 ) }
    dend_91 { pt3dadd( 35.581, -38.388, -22.9496, 0.12 ) }
    dend_91 { pt3dadd( 35.7649, -38.3666, -23.5328, 0.12 ) }
    dend_91 { pt3dadd( 36.0043, -38.3614, -24.2673, 0.96 ) }
    dend_91 { pt3dadd( 36.4667, -38.3577, -25.6258, 0.96 ) }
    dend_91 { pt3dadd( 38.6823, -38.3894, -31.6193, 0.96 ) }
    dend_91 { pt3dadd( 39.1608, -38.4292, -32.794, 1.32 ) }
    dend_91 { pt3dadd( 40.6947, -38.7604, -36.264, 0.12 ) }
    dend_91 { pt3dadd( 41.1622, -38.9279, -37.2123, 0.12 ) }
    dend_91 { pt3dadd( 41.6454, -39.1487, -38.0494, 0.84 ) }
    dend_91 { pt3dadd( 42.1781, -39.4267, -38.7954, 1.2 ) }
    dend_91 { pt3dadd( 42.8447, -39.7684, -39.408, 0.12 ) }
    dend_91 { pt3dadd( 43.6913, -40.2191, -40.1451, 0.12 ) }
    dend_91 { pt3dadd( 44.5903, -40.6682, -40.9001, 0.84 ) }
    dend_91 { pt3dadd( 45.3544, -40.9992, -41.6951, 0.12 ) }
    dend_91 { pt3dadd( 45.7435, -41.144, -42.1434, 0.12 ) }
    dend_91 { pt3dadd( 46.5156, -41.3676, -43.1364, 0.96 ) }
    dend_91 { pt3dadd( 47.2025, -41.4977, -44.025, 0.96 ) }
    dend_91 { pt3dadd( 48.8683, -41.6118, -46.0927, 0.36 ) }
    dend_91 { pt3dadd( 49.5754, -41.609, -46.9002, 0.96 ) }
    dend_91 { pt3dadd( 49.8198, -41.5961, -47.1642, 0.96 ) }
    dend_91 { pt3dadd( 50.519, -41.5149, -47.8508, 0.24 ) }
    dend_91 { pt3dadd( 51.105, -41.3946, -48.3172, 0.24 ) }
    dend_91 { pt3dadd( 51.6752, -41.2478, -48.7472, 0.24 ) }
    dend_91 { pt3dadd( 52.4711, -41.0864, -49.224, 0.84 ) }
    dend_91 { pt3dadd( 53.4763, -40.9069, -49.8027, 0.12 ) }
    dend_91 { pt3dadd( 53.9066, -40.8174, -50.0587, 0.12 ) }
    dend_91 { pt3dadd( 54.607, -40.692, -50.4529, 0.48 ) }
    dend_91 { pt3dadd( 55.9431, -40.5119, -51.2915, 0.24 ) }
    dend_91 { pt3dadd( 56.9502, -40.4592, -51.9417, 0.12 ) }
    dend_91 { pt3dadd( 57.4779, -40.4759, -52.3145, 0.48 ) }
    dend_91 { pt3dadd( 58.3082, -40.542, -52.9853, 0.12 ) }
    dend_91 { pt3dadd( 59.272, -40.6542, -53.8388, 1.2 ) }
    dend_91 { pt3dadd( 60.1711, -40.8233, -54.674, 0.12 ) }
    dend_91 { pt3dadd( 60.6492, -40.9331, -55.1651, 0.12 ) }
    dend_91 { pt3dadd( 61.538, -41.1926, -56.2098, 0.48 ) }
    dend_91 { pt3dadd( 62.4345, -41.4999, -57.3133, 0.12 ) }
    dend_91 { pt3dadd( 62.7346, -41.6165, -57.6818, 0.6 ) }
    dend_91 { pt3dadd( 63.2864, -41.8136, -58.3697, 0.96 ) }
    dend_91 { pt3dadd( 64.5933, -42.2784, -59.7288, 0.12 ) }
    dend_91 { pt3dadd( 65.108, -42.4773, -60.2616, 0.12 ) }
    dend_91 { pt3dadd( 65.3401, -42.5912, -60.4799, 0.48 ) }
    dend_91 { pt3dadd( 65.6015, -42.7314, -60.7144, 0.12 ) }
    dend_91 { pt3dadd( 66.0943, -42.9829, -61.1451, 0.12 ) }
    dend_91 { pt3dadd( 66.9324, -43.3801, -61.8655, 0.96 ) }
    dend_91 { pt3dadd( 68.5678, -44.1942, -63.1518, 0.24 ) }
    dend_91 { pt3dadd( 69.1606, -44.4862, -63.6686, 0.24 ) }
    dend_91 { pt3dadd( 69.5304, -44.6746, -64.0133, 0.24 ) }
    dend_91 { pt3dadd( 69.9232, -44.8989, -64.4104, 0.84 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 80/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 10.9907, -0.127789, -17.504, 1.08 ) }
    dend_87 { pt3dadd( 10.3271, 1.67627, -18.6644, 1.08 ) }
    dend_87 { pt3dadd( 10.7706, 3.01922, -19.6113, 1.08 ) }
    dend_87 { pt3dadd( 12.0652, 4.38768, -20.6307, 0.12 ) }
    dend_87 { pt3dadd( 12.7741, 4.96012, -21.0227, 0.12 ) }
    dend_87 { pt3dadd( 13.6195, 5.52188, -21.389, 0.12 ) }
    dend_87 { pt3dadd( 14.7449, 6.15824, -21.9277, 1.08 ) }
    dend_87 { pt3dadd( 16.1885, 6.74097, -22.6423, 0.72 ) }
    dend_87 { pt3dadd( 16.7086, 6.89972, -22.9163, 0.12 ) }
    dend_87 { pt3dadd( 17.6956, 7.14325, -23.4187, 1.2 ) }
    dend_87 { pt3dadd( 18.5221, 7.34242, -23.8623, 1.2 ) }
    dend_87 { pt3dadd( 20.2354, 7.8341, -24.8009, 0.96 ) }
    dend_87 { pt3dadd( 21.6965, 8.33622, -25.556, 1.32 ) }
    dend_87 { pt3dadd( 22.6098, 8.70704, -26.0054, 1.56 ) }
    dend_87 { pt3dadd( 23.9789, 9.31793, -26.5935, 0.84 ) }
    dend_87 { pt3dadd( 25.2248, 9.90329, -27.0455, 0.72 ) }
    dend_87 { pt3dadd( 26.5404, 10.5154, -27.3965, 0.6 ) }
    dend_87 { pt3dadd( 27.8301, 11.0876, -27.6436, 0.6 ) }
    dend_87 { pt3dadd( 29.3785, 11.7465, -27.8772, 1.08 ) }
    dend_87 { pt3dadd( 30.4388, 12.1865, -28.1208, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_87 { pt3dadd( 31.6242, 12.6615, -28.4588, 1.08 ) }
    dend_87 { pt3dadd( 33.2508, 13.2627, -29.0094, 1.08 ) }
    dend_87 { pt3dadd( 34.6564, 13.7405, -29.5215, 0.84 ) }
    dend_87 { pt3dadd( 36.4737, 14.3709, -30.3496, 0.84 ) }
    dend_87 { pt3dadd( 38.6269, 15.2209, -31.5775, 0.72 ) }
    dend_87 { pt3dadd( 39.348, 15.5737, -32.0545, 1.32 ) }
    dend_87 { pt3dadd( 39.9816, 15.9731, -32.5136, 1.32 ) }
    dend_87 { pt3dadd( 40.9836, 16.7679, -33.2739, 0.84 ) }
    dend_87 { pt3dadd( 42.385, 18.074, -34.3134, 0.12 ) }
    dend_87 { pt3dadd( 43.2302, 18.9324, -34.9984, 0.96 ) }
    dend_87 { pt3dadd( 43.7731, 19.4813, -35.4531, 1.2 ) }
    dend_87 { pt3dadd( 44.507, 20.1737, -36.1646, 0.84 ) }
    dend_87 { pt3dadd( 45.0545, 20.6385, -36.7198, 0.6 ) }
    dend_87 { pt3dadd( 45.6536, 21.0955, -37.3361, 0.96 ) }
    dend_87 { pt3dadd( 46.9292, 21.9617, -38.5347, 1.32 ) }
    dend_87 { pt3dadd( 48.1834, 22.718, -39.647, 0.36 ) }
    dend_87 { pt3dadd( 48.9838, 23.1812, -40.3837, 0.36 ) }
    dend_87 { pt3dadd( 49.7239, 23.6111, -41.0778, 0.36 ) }
    dend_87 { pt3dadd( 50.3924, 24.0439, -41.6702, 1.2 ) }
    dend_87 { pt3dadd( 50.8834, 24.4528, -42.069, 1.32 ) }
    dend_87 { pt3dadd( 51.7155, 25.3882, -42.637, 0.12 ) }
    dend_87 { pt3dadd( 52.1126, 25.9004, -42.8842, 0.12 ) }
    dend_87 { pt3dadd( 52.3977, 26.2451, -43.0546, 0.96 ) }
    dend_87 { pt3dadd( 53.0013, 26.7846, -43.4604, 0.12 ) }
    dend_87 { pt3dadd( 53.7981, 27.229, -43.9804, 0.12 ) }
    dend_87 { pt3dadd( 54.3174, 27.4136, -44.3152, 0.12 ) }
    dend_87 { pt3dadd( 55.2353, 27.6359, -44.8923, 1.08 ) }
    dend_87 { pt3dadd( 56.5181, 27.8848, -45.675, 0.48 ) }
    dend_87 { pt3dadd( 58.1365, 28.1232, -46.7072, 0.12 ) }
    dend_87 { pt3dadd( 58.4619, 28.1384, -46.9017, 0.12 ) }
    dend_87 { pt3dadd( 58.6714, 28.1343, -47.0547, 0.12 ) }
    dend_87 { pt3dadd( 59.1342, 28.0927, -47.4526, 0.6 ) }
    dend_87 { pt3dadd( 59.4537, 28.031, -47.8052, 0.72 ) }
    dend_87 { pt3dadd( 60.2345, 27.8018, -48.7353, 1.08 ) }
    dend_87 { pt3dadd( 61.3524, 27.4056, -49.9772, 0.12 ) }
    dend_87 { pt3dadd( 62.9832, 26.8791, -51.7026, 0.12 ) }
    dend_87 { pt3dadd( 63.6886, 26.6582, -52.4098, 1.56 ) }
    dend_87 { pt3dadd( 65.2806, 26.1742, -53.8442, 0.12 ) }
    dend_87 { pt3dadd( 65.951, 25.9793, -54.379, 0.12 ) }
    dend_87 { pt3dadd( 66.4403, 25.8605, -54.7256, 0.12 ) }
    dend_87 { pt3dadd( 67.546, 25.6936, -55.367, 0.12 ) }
    dend_87 { pt3dadd( 68.4691, 25.6254, -55.7074, 0.12 ) }
    dend_87 { pt3dadd( 69.6273, 25.5971, -56.1015, 1.32 ) }
    dend_87 { pt3dadd( 70.4029, 25.5975, -56.3173, 0.84 ) }
    dend_87 { pt3dadd( 71.222, 25.6004, -56.5691, 0.12 ) }
    dend_87 { pt3dadd( 72.0296, 25.582, -56.8288, 0.12 ) }
    dend_87 { pt3dadd( 72.9512, 25.5254, -57.1493, 1.32 ) }
    dend_87 { pt3dadd( 74.0687, 25.4984, -57.5649, 0.12 ) }
    dend_87 { pt3dadd( 74.5582, 25.5149, -57.7842, 0.12 ) }
    dend_87 { pt3dadd( 75.0468, 25.5529, -58.0137, 0.48 ) }
    dend_87 { pt3dadd( 75.4406, 25.5815, -58.1905, 0.12 ) }
    dend_87 { pt3dadd( 76.613, 25.6491, -58.7812, 1.32 ) }
    dend_87 { pt3dadd( 77.4914, 25.6666, -59.2262, 0.48 ) }
    dend_87 { pt3dadd( 78.5951, 25.6873, -59.7441, 0.12 ) }
    dend_87 { pt3dadd( 79.2557, 25.711, -60.0537, 0.12 ) }
    dend_87 { pt3dadd( 80.0797, 25.7782, -60.4639, 1.32 ) }
    dend_87 { pt3dadd( 81.1163, 25.9355, -60.9873, 0.12 ) }
    dend_87 { pt3dadd( 82.0702, 26.1472, -61.4179, 0.12 ) }
    dend_87 { pt3dadd( 82.7564, 26.3354, -61.6877, 0.84 ) }
    dend_87 { pt3dadd( 83.3955, 26.5416, -61.943, 0.84 ) }
    dend_87 { pt3dadd( 84.3207, 26.8942, -62.3145, 0.12 ) }
    dend_87 { pt3dadd( 84.7895, 27.0937, -62.4769, 0.12 ) }
    dend_87 { pt3dadd( 86.0694, 27.6255, -62.9194, 0.12 ) }
    dend_87 { pt3dadd( 86.602, 27.833, -63.1088, 1.08 ) }
    dend_87 { pt3dadd( 87.7579, 28.2435, -63.5591, 0.12 ) }
    dend_87 { pt3dadd( 88.8246, 28.5979, -64.0608, 0.12 ) }
    dend_87 { pt3dadd( 90.2278, 29.1152, -64.7979, 1.56 ) }
    dend_87 { pt3dadd( 91.487, 29.5985, -65.5359, 0.12 ) }
    dend_87 { pt3dadd( 92.2686, 29.8899, -66.0596, 0.12 ) }
    dend_87 { pt3dadd( 93.5754, 30.3459, -66.9613, 0.84 ) }
    dend_87 { pt3dadd( 94.9942, 30.8501, -67.9267, 0.12 ) }
    dend_87 { pt3dadd( 95.8333, 31.1613, -68.5088, 0.12 ) }
    dend_87 { pt3dadd( 96.7527, 31.4847, -69.1107, 0.12 ) }
    dend_87 { pt3dadd( 98.3147, 32.0386, -69.9328, 1.56 ) }
    dend_87 { pt3dadd( 99.0278, 32.2895, -70.2298, 0.12 ) }
    dend_87 { pt3dadd( 99.9629, 32.6037, -70.472, 0.12 ) }
    dend_87 { pt3dadd( 100.773, 32.8857, -70.5893, 0.12 ) }
    dend_87 { pt3dadd( 101.584, 33.1783, -70.7336, 0.12 ) }
    dend_87 { pt3dadd( 102.483, 33.6178, -70.9146, 0.84 ) }
    dend_87 { pt3dadd( 103.201, 34.0586, -71.0581, 0.12 ) }
    dend_87 { pt3dadd( 103.807, 34.4708, -71.2259, 0.12 ) }
    dend_87 { pt3dadd( 104.549, 34.9754, -71.5704, 0.12 ) }
    dend_87 { pt3dadd( 105.67, 35.7753, -72.2406, 0.12 ) }
    dend_87 { pt3dadd( 106.269, 36.2476, -72.6335, 0.12 ) }
    dend_87 { pt3dadd( 106.663, 36.5967, -72.909, 0.12 ) }
    dend_87 { pt3dadd( 107.295, 37.2213, -73.3994, 1.2 ) }
    dend_87 { pt3dadd( 108.399, 38.3935, -74.2358, 0.12 ) }
    dend_87 { pt3dadd( 109.037, 39.1136, -74.7592, 0.12 ) }
    dend_87 { pt3dadd( 109.673, 39.8795, -75.2557, 0.12 ) }
    dend_87 { pt3dadd( 110.243, 40.644, -75.732, 0.12 ) }
    dend_87 { pt3dadd( 110.746, 41.4362, -76.2475, 0.96 ) }
    dend_87 { pt3dadd( 111.169, 42.2135, -76.7191, 0.12 ) }
    dend_87 { pt3dadd( 111.79, 43.4915, -77.4109, 0.12 ) }
    dend_87 { pt3dadd( 112.248, 44.4803, -77.966, 0.12 ) }
    dend_87 { pt3dadd( 112.675, 45.3772, -78.4615, 1.32 ) }
    dend_87 { pt3dadd( 113.33, 46.5498, -79.0947, 0.12 ) }
    dend_87 { pt3dadd( 114.178, 47.7874, -79.7428, 0.12 ) }
    dend_87 { pt3dadd( 114.466, 48.1124, -79.9683, 0.36 ) }
    dend_87 { pt3dadd( 114.614, 48.2455, -80.0785, 0.12 ) }
    dend_87 { pt3dadd( 115.258, 48.6918, -80.5831, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_87 { pt3dadd( 116.226, 49.1807, -81.3808, 0.12 ) }
    dend_87 { pt3dadd( 117.341, 49.6211, -82.2723, 1.2 ) }
    dend_87 { pt3dadd( 118.743, 50.0678, -83.4714, 0.12 ) }
    dend_87 { pt3dadd( 119.333, 50.2715, -83.9622, 0.12 ) }
    dend_87 { pt3dadd( 120.155, 50.5935, -84.6141, 0.12 ) }
    dend_87 { pt3dadd( 121.349, 51.1074, -85.4946, 0.12 ) }
    dend_87 { pt3dadd( 121.715, 51.2856, -85.7684, 0.6 ) }
    dend_87 { pt3dadd( 121.928, 51.3742, -85.9042, 0.12 ) }
    dend_87 { pt3dadd( 122.808, 51.6124, -86.3543, 0.12 ) }
    dend_87 { pt3dadd( 123.276, 51.6757, -86.6083, 0.72 ) }
    dend_87 { pt3dadd( 123.938, 51.7276, -86.978, 0.84 ) }
    dend_87 { pt3dadd( 125.662, 51.8581, -87.8784, 0.36 ) }
    dend_87 { pt3dadd( 126.215, 51.8767, -88.164, 0.72 ) }
    dend_87 { pt3dadd( 126.766, 51.8821, -88.4276, 0.72 ) }
    dend_87 { pt3dadd( 127.686, 51.8798, -88.9114, 0.12 ) }
    dend_87 { pt3dadd( 128.513, 51.9231, -89.3511, 0.12 ) }
    dend_87 { pt3dadd( 129.086, 51.9874, -89.6428, 0.12 ) }
    dend_87 { pt3dadd( 129.952, 52.1407, -90.0202, 1.32 ) }
    dend_87 { pt3dadd( 130.816, 52.358, -90.4476, 0.12 ) }
    dend_87 { pt3dadd( 132.258, 52.7859, -91.1807, 0.12 ) }
    dend_87 { pt3dadd( 132.857, 52.9674, -91.4732, 0.12 ) }
    dend_87 { pt3dadd( 133.09, 53.0334, -91.588, 0.6 ) }
    dend_87 { pt3dadd( 133.629, 53.1819, -91.8242, 1.2 ) }
    dend_87 { pt3dadd( 134.776, 53.4949, -92.2368, 0.12 ) }
    dend_87 { pt3dadd( 135.693, 53.6495, -92.47, 0.12 ) }
    dend_87 { pt3dadd( 136.324, 53.703, -92.5781, 0.72 ) }
    dend_87 { pt3dadd( 136.698, 53.7199, -92.6415, 0.12 ) }
    dend_87 { pt3dadd( 137.885, 53.796, -92.8345, 0.12 ) }
    dend_87 { pt3dadd( 138.359, 53.8278, -92.9014, 0.72 ) }
    dend_87 { pt3dadd( 139.622, 53.8946, -93.165, 0.12 ) }
    dend_87 { pt3dadd( 140.513, 53.9527, -93.4411, 0.12 ) }
    dend_87 { pt3dadd( 141.071, 54.0017, -93.655, 0.12 ) }
    dend_87 { pt3dadd( 141.854, 54.0906, -93.9981, 0.12 ) }
    dend_87 { pt3dadd( 142.398, 54.1901, -94.2671, 0.12 ) }
    dend_87 { pt3dadd( 144.17, 54.6403, -95.1743, 0.96 ) }
    dend_87 { pt3dadd( 144.492, 54.7606, -95.332, 0.12 ) }
    dend_87 { pt3dadd( 145.152, 55.0302, -95.5847, 0.12 ) }
    dend_87 { pt3dadd( 145.651, 55.2195, -95.8559, 0.12 ) }
    dend_87 { pt3dadd( 146.206, 55.4291, -96.2068, 0.36 ) }
    dend_87 { pt3dadd( 146.416, 55.5151, -96.3491, 0.12 ) }
    dend_87 { pt3dadd( 147.295, 55.8762, -96.9087, 0.12 ) }
    dend_87 { pt3dadd( 148.105, 56.1762, -97.4624, 1.2 ) }
    dend_87 { pt3dadd( 150.322, 56.959, -99.1362, 0.24 ) }
    dend_87 { pt3dadd( 150.59, 57.0449, -99.39, 0.24 ) }
    dend_87 { pt3dadd( 150.704, 57.0791, -99.5102, 0.12 ) }
    dend_87 { pt3dadd( 151.283, 57.2577, -100.139, 0.12 ) }
    dend_87 { pt3dadd( 151.66, 57.3782, -100.589, 0.12 ) }
    dend_87 { pt3dadd( 152.068, 57.534, -101.051, 0.48 ) }
    dend_87 { pt3dadd( 153.375, 58.147, -102.206, 0.12 ) }
    dend_87 { pt3dadd( 153.961, 58.444, -102.837, 0.12 ) }
    dend_87 { pt3dadd( 154.34, 58.6732, -103.305, 0.6 ) }
    dend_87 { pt3dadd( 154.881, 59.052, -104.045, 0.12 ) }
    dend_87 { pt3dadd( 155.151, 59.2374, -104.41, 0.12 ) }
    dend_87 { pt3dadd( 155.256, 59.2961, -104.529, 0.36 ) }
    dend_87 { pt3dadd( 156.225, 59.7648, -105.346, 0.12 ) }
    dend_87 { pt3dadd( 156.63, 59.9652, -105.738, 0.12 ) }
    dend_87 { pt3dadd( 156.918, 60.1082, -106.025, 0.36 ) }
    dend_87 { pt3dadd( 157.113, 60.198, -106.185, 0.12 ) }
    dend_87 { pt3dadd( 157.766, 60.4568, -106.687, 0.12 ) }
    dend_87 { pt3dadd( 158.712, 60.6889, -107.191, 0.48 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 60/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 10.9907, -0.127789, -17.504, 0.12 ) }
    dend_86 { pt3dadd( 10.8141, 1.08202, -17.3295, 0.12 ) }
    dend_86 { pt3dadd( 10.5558, 2.56343, -17.1645, 0.12 ) }
    dend_86 { pt3dadd( 10.4657, 3.15732, -17.1766, 0.84 ) }
    dend_86 { pt3dadd( 10.4261, 3.62684, -17.2195, 1.2 ) }
    dend_86 { pt3dadd( 10.4677, 4.95181, -17.5326, 0.12 ) }
    dend_86 { pt3dadd( 10.5756, 5.94411, -17.9528, 0.12 ) }
    dend_86 { pt3dadd( 10.7372, 6.72828, -18.4467, 0.12 ) }
    dend_86 { pt3dadd( 11.1989, 7.97625, -19.4479, 1.32 ) }
    dend_86 { pt3dadd( 11.6349, 8.78616, -20.1961, 1.32 ) }
    dend_86 { pt3dadd( 12.7992, 10.3518, -21.8611, 0.12 ) }
    dend_86 { pt3dadd( 13.9126, 11.5505, -23.2657, 0.24 ) }
    dend_86 { pt3dadd( 14.3522, 11.9591, -23.7941, 0.24 ) }
    dend_86 { pt3dadd( 15.101, 12.6122, -24.6662, 0.6 ) }
    dend_86 { pt3dadd( 15.6679, 13.0856, -25.2621, 0.84 ) }
    dend_86 { pt3dadd( 16.5023, 13.7426, -26.0571, 0.84 ) }
    dend_86 { pt3dadd( 16.9826, 14.113, -26.4165, 0.12 ) }
    dend_86 { pt3dadd( 17.6875, 14.6754, -26.8293, 0.12 ) }
    dend_86 { pt3dadd( 18.3094, 15.178, -27.1621, 0.12 ) }
    dend_86 { pt3dadd( 18.9196, 15.6745, -27.49, 0.84 ) }
    dend_86 { pt3dadd( 19.6315, 16.2948, -27.8638, 1.2 ) }
    dend_86 { pt3dadd( 20.927, 17.4403, -28.4771, 0.6 ) }
    dend_86 { pt3dadd( 21.7349, 18.1368, -28.8486, 0.48 ) }
    dend_86 { pt3dadd( 22.5698, 18.8661, -29.21, 0.48 ) }
    dend_86 { pt3dadd( 23.7089, 19.8898, -29.7587, 0.24 ) }
    dend_86 { pt3dadd( 24.5827, 20.7379, -30.2174, 0.24 ) }
    dend_86 { pt3dadd( 25.2225, 21.4267, -30.5984, 0.36 ) }
    dend_86 { pt3dadd( 25.8933, 22.1965, -31.0316, 0.36 ) }
    dend_86 { pt3dadd( 26.2582, 22.5937, -31.2783, 0.36 ) }
    dend_86 { pt3dadd( 26.8335, 23.1631, -31.6568, 1.08 ) }
    dend_86 { pt3dadd( 27.137, 23.4219, -31.8288, 1.44 ) }
    dend_86 { pt3dadd( 28.033, 24.0941, -32.4318, 0.12 ) }
    dend_86 { pt3dadd( 28.3822, 24.3655, -32.7041, 0.12 ) }
    dend_86 { pt3dadd( 29.3552, 25.1377, -33.4697, 0.12 ) }
    dend_86 { pt3dadd( 29.7884, 25.5011, -33.804, 0.12 ) }
    dend_86 { pt3dadd( 30.0363, 25.7277, -33.973, 0.12 ) }
    dend_86 { pt3dadd( 31.022, 26.7615, -34.6603, 0.84 ) }
    dend_86 { pt3dadd( 31.343, 27.1261, -34.8727, 1.08 ) }
    dend_86 { pt3dadd( 31.8784, 27.7844, -35.2248, 0.12 ) }
    dend_86 { pt3dadd( 32.3417, 28.4398, -35.5358, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_86 { pt3dadd( 32.876, 29.2122, -35.911, 1.56 ) }
    dend_86 { pt3dadd( 33.7309, 30.4099, -36.4817, 0.12 ) }
    dend_86 { pt3dadd( 33.9911, 30.7742, -36.6491, 0.12 ) }
    dend_86 { pt3dadd( 34.1918, 31.054, -36.7952, 0.12 ) }
    dend_86 { pt3dadd( 34.665, 31.6541, -37.1236, 0.36 ) }
    dend_86 { pt3dadd( 35.447, 32.6235, -37.5995, 0.36 ) }
    dend_86 { pt3dadd( 36.0103, 33.369, -37.9733, 1.32 ) }
    dend_86 { pt3dadd( 36.4352, 33.9524, -38.2453, 0.12 ) }
    dend_86 { pt3dadd( 36.7748, 34.4443, -38.4637, 0.12 ) }
    dend_86 { pt3dadd( 37.7105, 35.8042, -39.0408, 0.12 ) }
    dend_86 { pt3dadd( 38.568, 37.0272, -39.5134, 0.12 ) }
    dend_86 { pt3dadd( 39.3534, 38.2403, -39.9153, 0.84 ) }
    dend_86 { pt3dadd( 39.5612, 38.5927, -40.0311, 1.2 ) }
    dend_86 { pt3dadd( 40.0087, 39.4579, -40.2833, 0.12 ) }
    dend_86 { pt3dadd( 40.1306, 39.7502, -40.3591, 0.12 ) }
    dend_86 { pt3dadd( 40.3673, 40.4841, -40.5182, 0.12 ) }
    dend_86 { pt3dadd( 40.7232, 41.7325, -40.7903, 0.84 ) }
    dend_86 { pt3dadd( 40.8313, 42.2098, -40.879, 0.12 ) }
    dend_86 { pt3dadd( 41.0696, 43.5584, -41.2014, 0.12 ) }
    dend_86 { pt3dadd( 41.1997, 44.6973, -41.5055, 1.44 ) }
    dend_86 { pt3dadd( 41.273, 45.5993, -41.751, 0.12 ) }
    dend_86 { pt3dadd( 41.3521, 46.9256, -42.1023, 0.12 ) }
    dend_86 { pt3dadd( 41.4316, 48.2708, -42.4892, 0.36 ) }
    dend_86 { pt3dadd( 41.4976, 49.2468, -42.8104, 0.12 ) }
    dend_86 { pt3dadd( 41.6283, 50.6963, -43.3337, 0.12 ) }
    dend_86 { pt3dadd( 41.7355, 51.6296, -43.685, 0.6 ) }
    dend_86 { pt3dadd( 41.9367, 52.9428, -44.1588, 1.56 ) }
    dend_86 { pt3dadd( 42.1982, 54.3418, -44.6068, 0.12 ) }
    dend_86 { pt3dadd( 42.3789, 55.1932, -44.9045, 0.12 ) }
    dend_86 { pt3dadd( 42.527, 55.882, -45.1388, 0.48 ) }
    dend_86 { pt3dadd( 42.527, 55.882, -45.1388, 0.12 ) }
    dend_86 { pt3dadd( 42.719, 56.8405, -45.5851, 0.12 ) }
    dend_86 { pt3dadd( 42.783, 57.1566, -45.7516, 0.48 ) }
    dend_86 { pt3dadd( 42.9544, 57.9557, -46.1584, 0.12 ) }
    dend_86 { pt3dadd( 43.1098, 58.6211, -46.6227, 0.12 ) }
    dend_86 { pt3dadd( 43.1539, 58.7891, -46.7685, 0.48 ) }
    dend_86 { pt3dadd( 43.37, 59.5806, -47.4836, 0.12 ) }
    dend_86 { pt3dadd( 43.47, 59.8997, -47.8409, 0.12 ) }
    dend_86 { pt3dadd( 43.5881, 60.2235, -48.218, 0.6 ) }
    dend_86 { pt3dadd( 43.9662, 61.1021, -49.225, 0.12 ) }
    dend_86 { pt3dadd( 44.0981, 61.3661, -49.5858, 0.12 ) }
    dend_86 { pt3dadd( 44.3192, 61.8429, -50.232, 1.32 ) }
    dend_86 { pt3dadd( 44.6855, 62.7385, -51.4267, 0.12 ) }
    dend_86 { pt3dadd( 44.9666, 63.5109, -52.4532, 0.12 ) }
    dend_86 { pt3dadd( 45.0761, 63.8209, -52.8658, 1.08 ) }
    dend_86 { pt3dadd( 45.6128, 65.2319, -54.676, 0.6 ) }
    dend_86 { pt3dadd( 45.8035, 65.6663, -55.2477, 0.6 ) }
    dend_86 { pt3dadd( 46.09, 66.1849, -55.936, 0.12 ) }
    dend_86 { pt3dadd( 46.2717, 66.458, -56.2809, 0.12 ) }
    dend_86 { pt3dadd( 46.2717, 66.458, -56.2809, 0.36 ) }
    dend_86 { pt3dadd( 46.4485, 66.6445, -56.5095, 0.12 ) }
    dend_86 { pt3dadd( 46.9194, 67.1256, -57.0119, 0.12 ) }
    dend_86 { pt3dadd( 47.4894, 67.7222, -57.7505, 0.48 ) }
    dend_86 { pt3dadd( 48.2381, 68.5912, -58.7612, 0.12 ) }
    dend_86 { pt3dadd( 48.6837, 69.1779, -59.4565, 0.12 ) }
    dend_86 { pt3dadd( 49.2193, 69.9881, -60.4474, 0.12 ) }
    dend_86 { pt3dadd( 49.4191, 70.3438, -60.8827, 0.84 ) }
    dend_86 { pt3dadd( 49.9242, 71.4685, -62.1966, 0.12 ) }
    dend_86 { pt3dadd( 50.2961, 72.4627, -63.3118, 0.12 ) }
    dend_86 { pt3dadd( 50.4769, 73.0055, -63.893, 0.48 ) }
    dend_86 { pt3dadd( 50.6832, 73.7077, -64.6797, 0.12 ) }
    dend_86 { pt3dadd( 50.7783, 73.946, -64.954, 0.12 ) }
    dend_86 { pt3dadd( 50.916, 74.2476, -65.3147, 0.48 ) }
    // Section: dend_81, id: dend_81, parent: dend_79 (entry count 63/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -6.56504, -4.86821, -24.9111, 0.96 ) }
    dend_81 { pt3dadd( -7.17639, -5.25577, -24.8508, 0.96 ) }
    dend_81 { pt3dadd( -8.28737, -6.02425, -24.7224, 0.96 ) }
    dend_81 { pt3dadd( -9.21288, -6.72602, -24.6098, 0.96 ) }
    dend_81 { pt3dadd( -10.3367, -7.77844, -24.4683, 0.96 ) }
    dend_81 { pt3dadd( -10.9318, -8.4175, -24.4087, 0.96 ) }
    dend_81 { pt3dadd( -11.417, -8.99708, -24.3687, 0.96 ) }
    dend_81 { pt3dadd( -11.9482, -9.77083, -24.2828, 1.32 ) }
    dend_81 { pt3dadd( -12.3198, -10.467, -24.1965, 1.56 ) }
    dend_81 { pt3dadd( -13.0044, -12.0579, -24.0038, 0.96 ) }
    dend_81 { pt3dadd( -13.2213, -12.6492, -23.9243, 0.48 ) }
    dend_81 { pt3dadd( -13.3769, -13.0783, -23.8695, 0.48 ) }
    dend_81 { pt3dadd( -13.8935, -14.4463, -23.6689, 1.08 ) }
    dend_81 { pt3dadd( -14.3039, -15.3916, -23.5128, 1.08 ) }
    dend_81 { pt3dadd( -15.0089, -16.6565, -23.2795, 0.84 ) }
    dend_81 { pt3dadd( -15.4803, -17.2589, -23.1872, 0.72 ) }
    dend_81 { pt3dadd( -16.5099, -18.3121, -23.0748, 0.72 ) }
    dend_81 { pt3dadd( -16.9537, -18.7057, -23.084, 0.72 ) }
    dend_81 { pt3dadd( -17.6003, -19.2269, -23.2109, 0.96 ) }
    dend_81 { pt3dadd( -18.6281, -20.0133, -23.5241, 1.2 ) }
    dend_81 { pt3dadd( -20.1294, -21.0658, -24.2653, 0.36 ) }
    dend_81 { pt3dadd( -20.7948, -21.5085, -24.6968, 0.36 ) }
    dend_81 { pt3dadd( -21.6267, -22.011, -25.3382, 0.6 ) }
    dend_81 { pt3dadd( -22.5176, -22.5059, -26.1128, 0.96 ) }
    dend_81 { pt3dadd( -23.0539, -22.716, -26.5898, 0.96 ) }
    dend_81 { pt3dadd( -24.4394, -22.9013, -27.8892, 0.24 ) }
    dend_81 { pt3dadd( -24.6204, -22.8693, -28.0434, 0.24 ) }
    dend_81 { pt3dadd( -25.2494, -22.6574, -28.4884, 0.6 ) }
    dend_81 { pt3dadd( -25.8777, -22.3961, -28.8403, 1.08 ) }
    dend_81 { pt3dadd( -27.7901, -21.5959, -29.7187, 0.6 ) }
    dend_81 { pt3dadd( -29.0911, -21.121, -30.2487, 0.12 ) }
    dend_81 { pt3dadd( -29.4868, -21.0313, -30.3715, 0.12 ) }
    dend_81 { pt3dadd( -30.184, -21.0356, -30.5877, 0.12 ) }
    dend_81 { pt3dadd( -30.4757, -21.1718, -30.6645, 0.84 ) }
    dend_81 { pt3dadd( -31.2566, -21.8024, -30.8161, 1.2 ) }
    dend_81 { pt3dadd( -32.2721, -22.8259, -30.9289, 0.72 ) }
    dend_81 { pt3dadd( -32.7124, -23.219, -30.9892, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_81 { pt3dadd( -33.0082, -23.4323, -31.0819, 0.12 ) }
    dend_81 { pt3dadd( -33.8207, -23.8404, -31.4614, 0.12 ) }
    dend_81 { pt3dadd( -34.3291, -24.0054, -31.7402, 0.96 ) }
    dend_81 { pt3dadd( -34.9529, -24.1217, -32.1, 1.08 ) }
    dend_81 { pt3dadd( -36.5109, -24.3284, -33.0829, 0.12 ) }
    dend_81 { pt3dadd( -37.434, -24.4586, -33.6787, 0.12 ) }
    dend_81 { pt3dadd( -38.1224, -24.5739, -34.1024, 0.6 ) }
    dend_81 { pt3dadd( -38.6317, -24.6811, -34.4, 1.2 ) }
    dend_81 { pt3dadd( -39.4181, -24.8981, -34.8001, 1.2 ) }
    dend_81 { pt3dadd( -40.6824, -25.362, -35.3062, 0.12 ) }
    dend_81 { pt3dadd( -41.2089, -25.597, -35.5037, 0.48 ) }
    dend_81 { pt3dadd( -42.1372, -26.0559, -35.8788, 0.48 ) }
    dend_81 { pt3dadd( -42.5413, -26.2759, -36.0538, 0.84 ) }
    dend_81 { pt3dadd( -43.1559, -26.6582, -36.276, 1.2 ) }
    dend_81 { pt3dadd( -43.8997, -27.1738, -36.4895, 1.2 ) }
    dend_81 { pt3dadd( -45.5472, -28.4109, -36.8201, 0.84 ) }
    dend_81 { pt3dadd( -46.0738, -28.8203, -36.9044, 0.84 ) }
    dend_81 { pt3dadd( -47.8774, -30.2384, -37.1026, 0.36 ) }
    dend_81 { pt3dadd( -49.2125, -31.2459, -37.168, 0.12 ) }
    dend_81 { pt3dadd( -49.6417, -31.5578, -37.2052, 0.12 ) }
    dend_81 { pt3dadd( -49.8539, -31.7166, -37.2261, 0.6 ) }
    dend_81 { pt3dadd( -50.5064, -32.2446, -37.1927, 1.08 ) }
    dend_81 { pt3dadd( -51.1061, -32.7677, -37.1708, 1.2 ) }
    dend_81 { pt3dadd( -51.6849, -33.3068, -37.1816, 0.12 ) }
    dend_81 { pt3dadd( -53.1883, -34.6766, -37.3013, 0.48 ) }
    dend_81 { pt3dadd( -53.994, -35.3729, -37.3011, 0.48 ) }
    dend_81 { pt3dadd( -55.5973, -36.6661, -37.2166, 0.48 ) }
    dend_81 { pt3dadd( -55.8564, -36.8677, -37.1914, 0.96 ) }
    dend_81 { pt3dadd( -56.5195, -37.3967, -37.0206, 1.32 ) }
    dend_81 { pt3dadd( -57.1161, -37.8819, -36.81, 1.32 ) }
    dend_81 { pt3dadd( -58.5636, -39.0662, -36.2113, 0.6 ) }
    dend_81 { pt3dadd( -59.1152, -39.5371, -36.0155, 0.12 ) }
    dend_81 { pt3dadd( -59.604, -39.9801, -35.8912, 0.24 ) }
    dend_81 { pt3dadd( -61.4914, -41.7308, -35.414, 0.24 ) }
    dend_81 { pt3dadd( -62.1087, -42.3162, -35.2838, 0.6 ) }
    dend_81 { pt3dadd( -62.6043, -42.7796, -35.2049, 0.96 ) }
    dend_81 { pt3dadd( -63.8101, -43.8849, -35.0983, 0.24 ) }
    dend_81 { pt3dadd( -64.4898, -44.4548, -35.2025, 0.24 ) }
    dend_81 { pt3dadd( -65.2657, -45.0292, -35.5318, 0.48 ) }
    dend_81 { pt3dadd( -66.0957, -45.5689, -36.119, 0.48 ) }
    dend_81 { pt3dadd( -66.5973, -45.8936, -36.5316, 1.08 ) }
    dend_81 { pt3dadd( -67.1598, -46.2609, -37.0432, 1.08 ) }
    dend_81 { pt3dadd( -68.8844, -47.3901, -38.711, 0.12 ) }
    dend_81 { pt3dadd( -69.3116, -47.6962, -39.0805, 0.12 ) }
    dend_81 { pt3dadd( -69.5663, -47.8989, -39.2699, 0.12 ) }
    dend_81 { pt3dadd( -70.0539, -48.2935, -39.5458, 0.36 ) }
    dend_81 { pt3dadd( -70.4401, -48.6142, -39.7211, 0.36 ) }
    dend_81 { pt3dadd( -70.9878, -49.0787, -39.8637, 1.44 ) }
    dend_81 { pt3dadd( -71.8128, -49.8552, -39.98, 0.12 ) }
    dend_81 { pt3dadd( -72.2237, -50.2575, -40.0972, 0.12 ) }
    dend_81 { pt3dadd( -72.9386, -51.0069, -40.3897, 0.6 ) }
    dend_81 { pt3dadd( -73.3215, -51.4154, -40.5842, 0.84 ) }
    dend_81 { pt3dadd( -73.7633, -51.8964, -40.8401, 0.12 ) }
    dend_81 { pt3dadd( -74.6099, -52.7376, -41.4183, 0.12 ) }
    dend_81 { pt3dadd( -75.1833, -53.2158, -41.8034, 0.12 ) }
    dend_81 { pt3dadd( -75.5618, -53.4781, -42.012, 0.72 ) }
    dend_81 { pt3dadd( -76.1367, -53.8252, -42.2593, 1.2 ) }
    dend_81 { pt3dadd( -76.5436, -54.0544, -42.4142, 1.44 ) }
    dend_81 { pt3dadd( -77.8409, -54.8035, -42.8238, 0.12 ) }
    dend_81 { pt3dadd( -78.6038, -55.2767, -43.0094, 0.24 ) }
    dend_81 { pt3dadd( -79.0715, -55.6178, -43.106, 0.24 ) }
    dend_81 { pt3dadd( -79.4854, -55.9441, -43.1752, 0.24 ) }
    dend_81 { pt3dadd( -79.9471, -56.3681, -43.2328, 0.48 ) }
    dend_81 { pt3dadd( -80.6405, -57.0985, -43.3867, 0.48 ) }
    dend_81 { pt3dadd( -80.7469, -57.224, -43.4169, 0.12 ) }
    dend_81 { pt3dadd( -82.1127, -58.9762, -43.9712, 0.12 ) }
    dend_81 { pt3dadd( -82.3531, -59.3004, -44.0903, 0.12 ) }
    dend_81 { pt3dadd( -82.9612, -60.1407, -44.4239, 1.56 ) }
    dend_81 { pt3dadd( -84.0919, -61.7549, -45.2857, 0.36 ) }
    dend_81 { pt3dadd( -84.1468, -61.8361, -45.3363, 0.36 ) }
    dend_81 { pt3dadd( -84.4273, -62.275, -45.6212, 0.36 ) }
    dend_81 { pt3dadd( -84.8565, -62.9795, -46.1004, 0.36 ) }
    dend_81 { pt3dadd( -85.3348, -63.7195, -46.567, 0.36 ) }
    dend_81 { pt3dadd( -86.5014, -65.3952, -47.5996, 1.44 ) }
    dend_81 { pt3dadd( -86.8488, -65.8992, -47.8697, 0.12 ) }
    dend_81 { pt3dadd( -87.2836, -66.5822, -48.2421, 0.12 ) }
    dend_81 { pt3dadd( -87.5255, -66.9939, -48.4683, 0.84 ) }
    dend_81 { pt3dadd( -87.8582, -67.6204, -48.8002, 0.84 ) }
    dend_81 { pt3dadd( -88.5362, -68.9803, -49.4209, 0.12 ) }
    dend_81 { pt3dadd( -88.7589, -69.4129, -49.5999, 0.12 ) }
    dend_81 { pt3dadd( -89.0337, -69.8818, -49.8305, 0.12 ) }
    dend_81 { pt3dadd( -89.3009, -70.2836, -50.0468, 0.12 ) }
    dend_81 { pt3dadd( -89.6172, -70.7214, -50.2732, 0.48 ) }
    dend_81 { pt3dadd( -90.152, -71.3899, -50.5831, 1.08 ) }
    dend_81 { pt3dadd( -91.1586, -72.5348, -51.0463, 0.12 ) }
    dend_81 { pt3dadd( -91.7597, -73.1792, -51.3076, 0.12 ) }
    dend_81 { pt3dadd( -92.1032, -73.5549, -51.4545, 0.48 ) }
    dend_81 { pt3dadd( -92.6774, -74.2453, -51.7514, 0.48 ) }
    dend_81 { pt3dadd( -93.1278, -74.8444, -52.0114, 0.48 ) }
    dend_81 { pt3dadd( -93.452, -75.3175, -52.1961, 0.12 ) }
    dend_81 { pt3dadd( -93.7008, -75.7078, -52.3885, 0.84 ) }
    dend_81 { pt3dadd( -93.9231, -76.116, -52.64, 0.84 ) }
    dend_81 { pt3dadd( -94.3356, -76.9652, -53.2343, 0.12 ) }
    dend_81 { pt3dadd( -94.5955, -77.6219, -53.7114, 0.12 ) }
    dend_81 { pt3dadd( -94.8682, -78.4387, -54.3679, 1.32 ) }
    dend_81 { pt3dadd( -95.3317, -80.1794, -55.7455, 0.12 ) }
    dend_81 { pt3dadd( -95.5019, -81.0358, -56.3795, 0.12 ) }
    dend_81 { pt3dadd( -95.5304, -81.2326, -56.5064, 0.6 ) }
    dend_81 { pt3dadd( -95.6037, -82.0388, -56.9836, 0.6 ) }
    dend_81 { pt3dadd( -95.6186, -83.2163, -57.6757, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_81 { pt3dadd( -95.5754, -84.0344, -58.119, 0.12 ) }
    dend_81 { pt3dadd( -95.5165, -85.0248, -58.4711, 0.12 ) }
    dend_81 { pt3dadd( -95.4994, -86.0011, -58.8478, 1.56 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 3/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -6.56504, -4.86821, -24.9111, 0.6 ) }
    dend_80 { pt3dadd( -6.35526, -6.34561, -24.9414, 0.6 ) }
    dend_80 { pt3dadd( -6.2679, -7.6407, -24.9825, 0.6 ) }
    dend_80 { pt3dadd( -6.24013, -8.57088, -25.0165, 0.12 ) }
    dend_80 { pt3dadd( -6.25011, -9.64155, -25.0543, 0.12 ) }
    dend_80 { pt3dadd( -6.25657, -9.97937, -25.0522, 0.12 ) }
    dend_80 { pt3dadd( -6.26326, -10.3957, -25.0412, 0.48 ) }
    dend_80 { pt3dadd( -6.29138, -11.0249, -25.0587, 0.48 ) }
    dend_80 { pt3dadd( -6.3395, -11.6099, -25.0451, 0.24 ) }
    dend_80 { pt3dadd( -6.46772, -12.881, -24.9245, 0.24 ) }
    dend_80 { pt3dadd( -6.56847, -13.9319, -24.8059, 0.6 ) }
    dend_80 { pt3dadd( -6.59968, -14.6283, -24.7201, 0.72 ) }
    // Section: dend_71, id: dend_71, parent: dend_63 (entry count 15/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -10.3176, 15.6814, -25.7927, 0.6 ) }
    dend_71 { pt3dadd( -8.73113, 18.3488, -26.7545, 0.6 ) }
    dend_71 { pt3dadd( -8.20669, 19.4397, -27.1325, 0.72 ) }
    dend_71 { pt3dadd( -7.77701, 20.5083, -27.4776, 0.96 ) }
    dend_71 { pt3dadd( -7.46582, 21.4217, -27.7503, 0.96 ) }
    dend_71 { pt3dadd( -7.19396, 22.4286, -28.0502, 0.72 ) }
    dend_71 { pt3dadd( -6.91939, 23.7286, -28.4794, 0.72 ) }
    dend_71 { pt3dadd( -6.77996, 25.408, -28.9902, 0.72 ) }
    dend_71 { pt3dadd( -6.82174, 26.1827, -29.2852, 0.96 ) }
    dend_71 { pt3dadd( -6.95, 26.9199, -29.6245, 0.96 ) }
    dend_71 { pt3dadd( -7.20108, 27.8927, -30.1859, 0.12 ) }
    dend_71 { pt3dadd( -7.58325, 29.2019, -31.1509, 0.12 ) }
    dend_71 { pt3dadd( -7.8216, 30.0851, -31.9026, 0.48 ) }
    dend_71 { pt3dadd( -7.9877, 30.8715, -32.6301, 1.44 ) }
    dend_71 { pt3dadd( -8.07793, 31.4585, -33.2019, 1.44 ) }
    dend_71 { pt3dadd( -8.20034, 32.9861, -34.68, 0.48 ) }
    dend_71 { pt3dadd( -8.19764, 34.4118, -35.9331, 0.24 ) }
    dend_71 { pt3dadd( -8.14834, 35.1032, -36.5076, 0.6 ) }
    dend_71 { pt3dadd( -8.0233, 35.9032, -37.1215, 0.6 ) }
    dend_71 { pt3dadd( -7.93922, 36.2769, -37.3979, 0.6 ) }
    dend_71 { pt3dadd( -7.67105, 37.2327, -38.1239, 0.84 ) }
    dend_71 { pt3dadd( -7.38409, 38.1988, -38.9314, 0.6 ) }
    dend_71 { pt3dadd( -7.09647, 39.249, -39.8577, 1.08 ) }
    dend_71 { pt3dadd( -6.914, 39.9051, -40.5285, 1.08 ) }
    dend_71 { pt3dadd( -6.67663, 40.6638, -41.3617, 1.08 ) }
    dend_71 { pt3dadd( -6.18217, 42.0507, -42.9637, 0.72 ) }
    dend_71 { pt3dadd( -5.7561, 43.0648, -44.1309, 0.12 ) }
    dend_71 { pt3dadd( -5.39507, 43.8168, -44.9706, 0.12 ) }
    dend_71 { pt3dadd( -4.87196, 44.8329, -45.997, 0.96 ) }
    dend_71 { pt3dadd( -4.59465, 45.3471, -46.4721, 1.2 ) }
    dend_71 { pt3dadd( -4.31401, 45.8551, -46.8455, 1.32 ) }
    dend_71 { pt3dadd( -3.67523, 46.9918, -47.455, 0.24 ) }
    dend_71 { pt3dadd( -3.16672, 47.844, -47.8746, 0.12 ) }
    dend_71 { pt3dadd( -2.6121, 48.7282, -48.3085, 0.12 ) }
    dend_71 { pt3dadd( -2.26194, 49.3163, -48.6076, 0.84 ) }
    dend_71 { pt3dadd( -1.90083, 49.9679, -48.9698, 1.08 ) }
    dend_71 { pt3dadd( -1.70272, 50.3529, -49.1927, 1.08 ) }
    dend_71 { pt3dadd( -1.25348, 51.3272, -49.7885, 0.12 ) }
    dend_71 { pt3dadd( -0.813283, 52.3906, -50.4523, 0.12 ) }
    dend_71 { pt3dadd( -0.346141, 53.6929, -51.2619, 1.2 ) }
    dend_71 { pt3dadd( -0.164567, 54.2663, -51.6422, 1.56 ) }
    dend_71 { pt3dadd( -0.0151739, 54.7476, -51.9567, 1.56 ) }
    dend_71 { pt3dadd( 0.318866, 55.8561, -52.6053, 0.12 ) }
    dend_71 { pt3dadd( 0.615639, 56.8953, -53.176, 0.12 ) }
    dend_71 { pt3dadd( 0.827167, 57.7118, -53.6117, 0.12 ) }
    dend_71 { pt3dadd( 1.07004, 58.6726, -54.1424, 0.12 ) }
    dend_71 { pt3dadd( 1.32455, 59.7256, -54.7563, 0.96 ) }
    dend_71 { pt3dadd( 1.56557, 60.7986, -55.3706, 0.48 ) }
    dend_71 { pt3dadd( 1.82854, 62.0963, -56.1196, 0.12 ) }
    dend_71 { pt3dadd( 1.96399, 62.7912, -56.5229, 0.12 ) }
    dend_71 { pt3dadd( 2.1884, 64.1632, -57.4154, 0.12 ) }
    dend_71 { pt3dadd( 2.26014, 64.85, -57.8831, 1.2 ) }
    dend_71 { pt3dadd( 2.29669, 65.6169, -58.4193, 0.12 ) }
    dend_71 { pt3dadd( 2.33418, 66.6353, -59.1607, 0.12 ) }
    dend_71 { pt3dadd( 2.37366, 67.2917, -59.6001, 0.12 ) }
    dend_71 { pt3dadd( 2.47043, 68.3411, -60.3014, 0.6 ) }
    dend_71 { pt3dadd( 2.53417, 68.7465, -60.5429, 0.6 ) }
    dend_71 { pt3dadd( 2.7546, 69.6527, -61.1446, 0.96 ) }
    dend_71 { pt3dadd( 3.06242, 70.6007, -61.7714, 0.12 ) }
    dend_71 { pt3dadd( 3.31956, 71.1962, -62.1373, 0.12 ) }
    dend_71 { pt3dadd( 3.97437, 72.3698, -62.871, 1.08 ) }
    dend_71 { pt3dadd( 4.53887, 73.1702, -63.3572, 0.12 ) }
    dend_71 { pt3dadd( 5.556, 74.3459, -64.2254, 0.12 ) }
    dend_71 { pt3dadd( 6.28409, 74.9859, -64.7917, 0.24 ) }
    dend_71 { pt3dadd( 7.11363, 75.5743, -65.3704, 0.12 ) }
    dend_71 { pt3dadd( 7.89301, 76.0257, -65.8865, 0.72 ) }
    dend_71 { pt3dadd( 8.37262, 76.2562, -66.184, 0.84 ) }
    dend_71 { pt3dadd( 9.8396, 76.9109, -67.0842, 0.12 ) }
    dend_71 { pt3dadd( 10.9015, 77.3851, -67.7315, 0.12 ) }
    dend_71 { pt3dadd( 11.6385, 77.7305, -68.2238, 1.2 ) }
    dend_71 { pt3dadd( 12.0067, 77.9576, -68.4871, 1.2 ) }
    dend_71 { pt3dadd( 12.4588, 78.3499, -68.8136, 0.12 ) }
    dend_71 { pt3dadd( 12.9856, 78.9704, -69.2426, 0.12 ) }
    dend_71 { pt3dadd( 13.6725, 80.1204, -69.8038, 0.6 ) }
    dend_71 { pt3dadd( 13.8004, 80.4028, -69.926, 0.12 ) }
    dend_71 { pt3dadd( 14.2171, 81.4093, -70.3466, 0.12 ) }
    dend_71 { pt3dadd( 14.5308, 82.2507, -70.6885, 0.96 ) }
    dend_71 { pt3dadd( 14.8763, 83.3133, -71.0847, 0.12 ) }
    dend_71 { pt3dadd( 15.2776, 84.9032, -71.6327, 0.12 ) }
    dend_71 { pt3dadd( 15.4496, 85.7534, -71.8568, 1.08 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 95/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -10.3176, 15.6814, -25.7927, 0.72 ) }
    dend_64 { pt3dadd( -9.71347, 15.8145, -25.9772, 0.72 ) }
    dend_64 { pt3dadd( -8.77939, 16.2422, -26.5532, 0.84 ) }
    dend_64 { pt3dadd( -8.21581, 16.6538, -27.0703, 0.84 ) }
    dend_64 { pt3dadd( -7.61764, 17.3677, -28.0373, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_64 { pt3dadd( -7.21035, 18.449, -29.4422, 0.84 ) }
    dend_64 { pt3dadd( -7.19859, 19.0827, -30.3281, 0.84 ) }
    dend_64 { pt3dadd( -7.6683, 20.6153, -32.5492, 0.6 ) }
    dend_64 { pt3dadd( -8.07318, 21.4484, -33.7066, 0.84 ) }
    dend_64 { pt3dadd( -8.85507, 22.7489, -35.3952, 0.96 ) }
    dend_64 { pt3dadd( -9.79123, 24.1822, -37.1599, 0.72 ) }
    dend_64 { pt3dadd( -10.7444, 25.5533, -38.7504, 0.72 ) }
    dend_64 { pt3dadd( -11.4846, 26.5717, -39.8792, 0.72 ) }
    dend_64 { pt3dadd( -11.9922, 27.2558, -40.5519, 0.96 ) }
    dend_64 { pt3dadd( -12.5278, 28.0289, -41.2694, 0.72 ) }
    dend_64 { pt3dadd( -13.5941, 29.81, -42.998, 0.72 ) }
    dend_64 { pt3dadd( -14.1683, 30.9565, -44.1651, 0.48 ) }
    dend_64 { pt3dadd( -14.5172, 31.7504, -44.9657, 0.48 ) }
    dend_64 { pt3dadd( -14.9203, 32.7301, -46.0217, 0.48 ) }
    dend_64 { pt3dadd( -15.3174, 33.76, -47.2105, 1.2 ) }
    dend_64 { pt3dadd( -16.1054, 35.9475, -49.839, 0.48 ) }
    dend_64 { pt3dadd( -16.298, 36.54, -50.5535, 0.24 ) }
    dend_64 { pt3dadd( -16.5986, 37.7999, -52.2017, 0.84 ) }
    dend_64 { pt3dadd( -16.6161, 37.9023, -52.3339, 0.12 ) }
    dend_64 { pt3dadd( -16.6538, 38.2098, -52.7005, 0.12 ) }
    dend_64 { pt3dadd( -16.6845, 38.4449, -52.9374, 0.12 ) }
    dend_64 { pt3dadd( -16.7617, 38.8516, -53.266, 0.12 ) }
    dend_64 { pt3dadd( -17.4283, 41.7074, -55.5042, 0.6 ) }
    dend_64 { pt3dadd( -17.7332, 42.9519, -56.5439, 0.72 ) }
    dend_64 { pt3dadd( -17.8426, 43.4687, -57.0189, 0.84 ) }
    dend_64 { pt3dadd( -17.9019, 43.8329, -57.3597, 0.84 ) }
    dend_64 { pt3dadd( -17.9641, 44.3585, -57.833, 0.84 ) }
    dend_64 { pt3dadd( -18.0142, 44.9378, -58.3177, 0.84 ) }
    dend_64 { pt3dadd( -18.2384, 47.0217, -59.942, 0.24 ) }
    dend_64 { pt3dadd( -18.4593, 48.2586, -60.9841, 0.12 ) }
    dend_64 { pt3dadd( -18.6079, 48.8583, -61.5344, 0.12 ) }
    dend_64 { pt3dadd( -18.7544, 49.3693, -62.006, 0.12 ) }
    dend_64 { pt3dadd( -18.8668, 49.7589, -62.3462, 0.12 ) }
    dend_64 { pt3dadd( -19.1483, 50.7705, -63.1138, 0.84 ) }
    dend_64 { pt3dadd( -19.3706, 51.5363, -63.6377, 0.96 ) }
    dend_64 { pt3dadd( -19.7831, 53.0832, -64.7059, 0.12 ) }
    dend_64 { pt3dadd( -19.9263, 53.6566, -65.0958, 0.12 ) }
    dend_64 { pt3dadd( -20.1152, 54.426, -65.5899, 0.96 ) }
    dend_64 { pt3dadd( -20.263, 55.0176, -65.9277, 0.96 ) }
    dend_64 { pt3dadd( -20.7773, 56.9901, -66.8685, 0.12 ) }
    dend_64 { pt3dadd( -21.0658, 57.9306, -67.2306, 0.12 ) }
    dend_64 { pt3dadd( -21.5422, 59.2904, -67.7133, 0.12 ) }
    dend_64 { pt3dadd( -21.934, 60.3563, -68.1084, 0.96 ) }
    dend_64 { pt3dadd( -22.2935, 61.3353, -68.4623, 1.2 ) }
    dend_64 { pt3dadd( -22.5805, 62.1772, -68.7908, 1.2 ) }
    dend_64 { pt3dadd( -22.8304, 63.0171, -69.1081, 0.36 ) }
    dend_64 { pt3dadd( -23.3418, 65.1578, -70.0489, 0.24 ) }
    dend_64 { pt3dadd( -23.4957, 66.121, -70.4994, 0.24 ) }
    dend_64 { pt3dadd( -23.5594, 66.8568, -70.8821, 0.24 ) }
    dend_64 { pt3dadd( -23.6271, 68.6544, -71.8496, 1.08 ) }
    dend_64 { pt3dadd( -23.6372, 69.3831, -72.2333, 1.44 ) }
    dend_64 { pt3dadd( -23.6461, 69.9028, -72.5086, 1.44 ) }
    dend_64 { pt3dadd( -23.7237, 71.0832, -73.0625, 0.96 ) }
    dend_64 { pt3dadd( -23.9805, 72.8981, -74.0995, 0.12 ) }
    dend_64 { pt3dadd( -24.166, 73.7599, -74.6732, 0.12 ) }
    dend_64 { pt3dadd( -24.3456, 74.3452, -75.1357, 0.12 ) }
    dend_64 { pt3dadd( -24.754, 75.352, -76.0764, 0.12 ) }
    dend_64 { pt3dadd( -25.1158, 76.0789, -76.8384, 1.2 ) }
    dend_64 { pt3dadd( -26.0224, 77.493, -78.5819, 0.12 ) }
    dend_64 { pt3dadd( -26.4644, 78.0402, -79.3587, 0.12 ) }
    dend_64 { pt3dadd( -27.0478, 78.6529, -80.332, 0.12 ) }
    dend_64 { pt3dadd( -27.4589, 79.0258, -80.9681, 0.84 ) }
    dend_64 { pt3dadd( -27.7339, 79.2388, -81.3739, 1.08 ) }
    dend_64 { pt3dadd( -28.979, 80.0654, -83.0994, 0.12 ) }
    dend_64 { pt3dadd( -29.9507, 80.6315, -84.2519, 0.12 ) }
    dend_64 { pt3dadd( -30.4383, 80.875, -84.7771, 0.48 ) }
    dend_64 { pt3dadd( -30.8535, 81.0622, -85.1835, 0.48 ) }
    dend_64 { pt3dadd( -32.1176, 81.5648, -86.3197, 0.12 ) }
    dend_64 { pt3dadd( -32.66, 81.771, -86.7599, 0.12 ) }
    dend_64 { pt3dadd( -32.9493, 81.8938, -86.9334, 0.84 ) }
    dend_64 { pt3dadd( -33.35, 82.1767, -87.3491, 0.84 ) }
    dend_64 { pt3dadd( -33.5663, 82.3908, -87.7543, 0.12 ) }
    dend_64 { pt3dadd( -33.8204, 82.7589, -88.4386, 0.12 ) }
    dend_64 { pt3dadd( -34.1234, 83.4496, -89.6479, 0.72 ) }
    dend_64 { pt3dadd( -34.264, 83.9589, -90.5175, 1.32 ) }
    dend_64 { pt3dadd( -34.522, 86.192, -94.0982, 0.12 ) }
    dend_64 { pt3dadd( -34.4735, 87.184, -95.496, 0.12 ) }
    dend_64 { pt3dadd( -34.3448, 87.8421, -96.2995, 0.12 ) }
    dend_64 { pt3dadd( -34.1873, 88.3163, -96.7772, 0.48 ) }
    dend_64 { pt3dadd( -33.8963, 88.9273, -97.1125, 0.12 ) }
    dend_64 { pt3dadd( -33.3544, 89.8868, -97.2517, 0.12 ) }
    dend_64 { pt3dadd( -32.4939, 91.3805, -97.013, 0.12 ) }
    dend_64 { pt3dadd( -32.0613, 92.1916, -96.8596, 0.24 ) }
    dend_64 { pt3dadd( -31.8855, 92.5441, -96.8156, 0.12 ) }
    dend_64 { pt3dadd( -31.5713, 93.205, -96.7561, 0.12 ) }
    dend_64 { pt3dadd( -31.1002, 94.2618, -96.7615, 0.48 ) }
    dend_64 { pt3dadd( -31.032, 94.4276, -96.7732, 0.12 ) }
    dend_64 { pt3dadd( -30.6894, 95.3158, -96.8862, 0.12 ) }
    dend_64 { pt3dadd( -30.5102, 95.7891, -96.9898, 0.36 ) }
    dend_64 { pt3dadd( -30.4178, 95.9948, -97.0573, 0.12 ) }
    dend_64 { pt3dadd( -29.8431, 97.0377, -97.6088, 0.12 ) }
    dend_64 { pt3dadd( -29.1808, 98.0197, -98.3147, 1.08 ) }
    dend_64 { pt3dadd( -28.8566, 98.3988, -98.662, 0.12 ) }
    dend_64 { pt3dadd( -27.7982, 99.271, -99.8257, 0.12 ) }
    dend_64 { pt3dadd( -26.9662, 99.7738, -100.719, 0.48 ) }
    dend_64 { pt3dadd( -25.9054, 100.174, -101.754, 0.12 ) }
    dend_64 { pt3dadd( -25.492, 100.223, -102.093, 0.12 ) }
    dend_64 { pt3dadd( -24.6313, 100.179, -102.717, 0.24 ) }
    dend_64 { pt3dadd( -23.7907, 100.089, -103.345, 0.12 ) }
    dend_64 { pt3dadd( -23.1588, 100.025, -103.783, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_64 { pt3dadd( -22.4252, 100.014, -104.263, 0.24 ) }
    dend_64 { pt3dadd( -21.4608, 100.084, -104.863, 0.24 ) }
    dend_64 { pt3dadd( -20.6127, 100.21, -105.511, 1.44 ) }
    dend_64 { pt3dadd( -18.1847, 100.662, -107.416, 0.72 ) }
    dend_64 { pt3dadd( -17.4802, 100.803, -107.98, 0.24 ) }
    dend_64 { pt3dadd( -16.0303, 101.111, -109.214, 0.24 ) }
    dend_64 { pt3dadd( -14.6799, 101.465, -110.453, 1.32 ) }
    dend_64 { pt3dadd( -12.0, 102.33, -113.067, 0.24 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -25.3546, -13.062, 8.27937, 0.12 ) }
    dend_56 { pt3dadd( -25.6139, -14.1653, 8.68096, 0.12 ) }
    dend_56 { pt3dadd( -25.8919, -15.5655, 9.18918, 0.24 ) }
    dend_56 { pt3dadd( -26.0764, -16.6767, 9.56454, 0.24 ) }
    dend_56 { pt3dadd( -26.3256, -18.6025, 10.1619, 0.24 ) }
    dend_56 { pt3dadd( -26.449, -19.846, 10.5162, 0.24 ) }
    dend_56 { pt3dadd( -26.528, -20.8604, 10.7819, 0.24 ) }
    dend_56 { pt3dadd( -26.562, -21.4384, 10.9296, 0.6 ) }
    dend_56 { pt3dadd( -26.6016, -22.4424, 11.2176, 0.6 ) }
    dend_56 { pt3dadd( -26.6499, -23.2631, 11.4063, 0.6 ) }
    dend_56 { pt3dadd( -26.7038, -23.9665, 11.5036, 0.72 ) }
    dend_56 { pt3dadd( -26.783, -24.6469, 11.6075, 0.84 ) }
    dend_56 { pt3dadd( -26.9493, -25.8286, 11.8293, 0.84 ) }
    dend_56 { pt3dadd( -27.1194, -27.0517, 12.1102, 0.72 ) }
    dend_56 { pt3dadd( -27.2996, -28.4553, 12.4701, 0.72 ) }
    dend_56 { pt3dadd( -27.4566, -29.9022, 12.8505, 0.72 ) }
    dend_56 { pt3dadd( -27.5894, -30.8656, 13.1481, 0.6 ) }
    dend_56 { pt3dadd( -27.7312, -31.7393, 13.4542, 0.6 ) }
    dend_56 { pt3dadd( -27.9596, -33.0762, 13.9554, 0.48 ) }
    dend_56 { pt3dadd( -28.0962, -33.8436, 14.2414, 0.48 ) }
    dend_56 { pt3dadd( -28.3319, -34.9105, 14.6628, 0.48 ) }
    dend_56 { pt3dadd( -28.8782, -36.856, 15.3779, 0.48 ) }
    dend_56 { pt3dadd( -29.037, -37.3915, 15.5063, 0.48 ) }
    dend_56 { pt3dadd( -29.2367, -38.0496, 15.5994, 0.48 ) }
    dend_56 { pt3dadd( -29.4141, -38.6044, 15.6678, 0.48 ) }
    dend_56 { pt3dadd( -29.7488, -39.6181, 15.7877, 0.48 ) }
    dend_56 { pt3dadd( -30.2205, -41.0519, 15.9189, 0.48 ) }
    dend_56 { pt3dadd( -30.6573, -42.6388, 15.8831, 0.48 ) }
    dend_56 { pt3dadd( -30.9149, -43.6562, 15.8192, 0.48 ) }
    dend_56 { pt3dadd( -31.3021, -45.3236, 15.3856, 0.12 ) }
    dend_56 { pt3dadd( -31.4946, -46.1555, 15.0489, 0.12 ) }
    dend_56 { pt3dadd( -31.6502, -46.6614, 14.8052, 0.96 ) }
    dend_56 { pt3dadd( -32.1583, -47.9259, 14.1721, 0.36 ) }
    dend_56 { pt3dadd( -33.1407, -49.8331, 13.2303, 0.36 ) }
    dend_56 { pt3dadd( -34.6613, -52.4611, 12.0365, 0.12 ) }
    dend_56 { pt3dadd( -35.4019, -53.6409, 11.5658, 0.12 ) }
    dend_56 { pt3dadd( -36.8179, -55.5464, 11.0823, 0.12 ) }
    dend_56 { pt3dadd( -37.9684, -56.7109, 11.0715, 0.12 ) }
    dend_56 { pt3dadd( -39.1886, -57.6562, 11.3774, 0.12 ) }
    dend_56 { pt3dadd( -40.9744, -58.5979, 12.2582, 0.84 ) }
    dend_56 { pt3dadd( -42.7903, -59.3451, 13.59, 0.12 ) }
    dend_56 { pt3dadd( -43.5642, -59.505, 14.3253, 0.12 ) }
    dend_56 { pt3dadd( -44.1172, -59.4545, 15.0802, 0.12 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 51/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -25.3546, -13.062, 8.27937, 0.48 ) }
    dend_53 { pt3dadd( -25.5493, -12.8601, 8.82601, 0.48 ) }
    dend_53 { pt3dadd( -25.9214, -12.5896, 9.67777, 0.48 ) }
    dend_53 { pt3dadd( -26.3095, -12.35, 10.369, 0.48 ) }
    dend_53 { pt3dadd( -26.9207, -12.0098, 11.1706, 0.12 ) }
    dend_53 { pt3dadd( -30.201, -10.5184, 14.662, 0.84 ) }
    dend_53 { pt3dadd( -30.8627, -10.272, 15.2797, 0.96 ) }
    dend_53 { pt3dadd( -31.5895, -10.1173, 15.9118, 0.96 ) }
    dend_53 { pt3dadd( -32.6407, -10.0547, 16.8972, 0.6 ) }
    dend_53 { pt3dadd( -34.0382, -10.1745, 18.1615, 0.36 ) }
    dend_53 { pt3dadd( -35.0683, -10.3701, 18.9868, 0.36 ) }
    dend_53 { pt3dadd( -35.6236, -10.4746, 19.1932, 0.48 ) }
    dend_53 { pt3dadd( -36.6583, -10.6302, 19.9352, 0.6 ) }
    dend_53 { pt3dadd( -38.5663, -10.9712, 21.9397, 0.36 ) }
    dend_53 { pt3dadd( -38.7927, -11.0112, 22.2166, 0.48 ) }
    dend_53 { pt3dadd( -39.0746, -11.0286, 22.5443, 0.48 ) }
    dend_53 { pt3dadd( -39.5089, -10.999, 22.8582, 0.48 ) }
    dend_53 { pt3dadd( -40.297, -10.908, 23.4848, 0.72 ) }
    dend_53 { pt3dadd( -40.6811, -10.8341, 23.7873, 0.96 ) }
    dend_53 { pt3dadd( -41.1867, -10.7436, 24.137, 0.6 ) }
    dend_53 { pt3dadd( -41.9041, -10.6294, 24.669, 0.24 ) }
    dend_53 { pt3dadd( -42.912, -10.5264, 25.4328, 0.48 ) }
    dend_53 { pt3dadd( -45.9575, -10.4093, 27.6903, 0.36 ) }
    dend_53 { pt3dadd( -46.6451, -10.4244, 28.1702, 0.36 ) }
    dend_53 { pt3dadd( -47.5977, -10.4802, 28.73, 0.36 ) }
    dend_53 { pt3dadd( -48.3277, -10.5388, 29.0429, 0.36 ) }
    dend_53 { pt3dadd( -49.1462, -10.5428, 29.2384, 0.12 ) }
    dend_53 { pt3dadd( -50.157, -10.3585, 29.2484, 0.12 ) }
    dend_53 { pt3dadd( -50.7675, -10.1784, 29.1444, 0.12 ) }
    dend_53 { pt3dadd( -52.4912, -9.52743, 28.8451, 0.12 ) }
    dend_53 { pt3dadd( -53.7626, -8.86289, 28.6215, 0.12 ) }
    dend_53 { pt3dadd( -55.3527, -7.87982, 28.334, 0.12 ) }
    dend_53 { pt3dadd( -56.881, -6.77626, 28.0693, 0.12 ) }
    dend_53 { pt3dadd( -57.1377, -6.56313, 28.0301, 0.12 ) }
    dend_53 { pt3dadd( -57.9856, -5.74765, 27.8837, 0.12 ) }
    dend_53 { pt3dadd( -58.6289, -4.97483, 27.7459, 0.12 ) }
    dend_53 { pt3dadd( -67.2483, -2.85804, 32.3275, 0.12 ) }
    dend_53 { pt3dadd( -75.4763, -1.67666, 37.8802, 0.12 ) }
    dend_53 { pt3dadd( -83.9766, -0.201674, 42.9256, 0.12 ) }
    dend_53 { pt3dadd( -91.8635, 0.255086, 49.0556, 0.12 ) }
    dend_53 { pt3dadd( -100.64, 2.40529, 53.3125, 0.12 ) }
    dend_53 { pt3dadd( -109.59, 5.62263, 56.3106, 0.12 ) }
    dend_53 { pt3dadd( -117.934, 8.64074, 60.8719, 0.12 ) }
    dend_53 { pt3dadd( -126.498, 10.2544, 65.7626, 0.12 ) }
    dend_53 { pt3dadd( -135.229, 11.4029, 70.4932, 0.12 ) }
    // Section: dend_47, id: dend_47, parent: dend_36 (entry count 96/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.01051, -19.7206, -1.01052, 0.6 ) }
    dend_47 { pt3dadd( -1.3174, -20.9961, -0.98032, 0.6 ) }
    dend_47 { pt3dadd( -1.56169, -22.0383, -0.986093, 0.48 ) }
    dend_47 { pt3dadd( -1.8044, -23.0808, -1.00626, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_47 { pt3dadd( -2.1148, -24.3432, -1.03872, 0.6 ) }
    dend_47 { pt3dadd( -2.33388, -25.1577, -1.06164, 0.6 ) }
    dend_47 { pt3dadd( -2.64408, -26.2463, -1.09876, 0.72 ) }
    dend_47 { pt3dadd( -2.92697, -27.169, -1.15866, 0.84 ) }
    dend_47 { pt3dadd( -3.25403, -28.0677, -1.219, 0.84 ) }
    dend_47 { pt3dadd( -3.67555, -29.0186, -1.28161, 0.84 ) }
    dend_47 { pt3dadd( -4.22719, -30.0852, -1.34418, 0.84 ) }
    dend_47 { pt3dadd( -4.54776, -30.6485, -1.36872, 0.72 ) }
    dend_47 { pt3dadd( -5.04436, -31.448, -1.38667, 0.72 ) }
    dend_47 { pt3dadd( -5.57091, -32.2493, -1.40283, 0.72 ) }
    dend_47 { pt3dadd( -6.05094, -32.9445, -1.42487, 0.72 ) }
    dend_47 { pt3dadd( -6.53349, -33.654, -1.45256, 0.84 ) }
    dend_47 { pt3dadd( -7.13016, -34.5878, -1.48841, 0.84 ) }
    dend_47 { pt3dadd( -7.489, -35.1634, -1.50785, 0.84 ) }
    dend_47 { pt3dadd( -8.36654, -36.6076, -1.55775, 0.84 ) }
    dend_47 { pt3dadd( -8.69122, -37.1699, -1.57665, 0.84 ) }
    dend_47 { pt3dadd( -9.04928, -37.7786, -1.59611, 0.84 ) }
    dend_47 { pt3dadd( -9.55626, -38.5732, -1.61916, 0.6 ) }
    dend_47 { pt3dadd( -10.3612, -39.7329, -1.69896, 0.6 ) }
    dend_47 { pt3dadd( -10.888, -40.4777, -1.7531, 0.84 ) }
    dend_47 { pt3dadd( -11.3266, -41.08, -1.7989, 0.96 ) }
    dend_47 { pt3dadd( -11.7861, -41.6885, -1.84179, 0.48 ) }
    dend_47 { pt3dadd( -12.4247, -42.4497, -1.91427, 0.48 ) }
    dend_47 { pt3dadd( -13.3943, -43.505, -2.06388, 1.56 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 24/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -1.01051, -19.7206, -1.01052, 0.84 ) }
    dend_40 { pt3dadd( -0.813359, -23.7081, 2.4727, 0.84 ) }
    dend_40 { pt3dadd( -0.778234, -24.1347, 2.78143, 0.72 ) }
    dend_40 { pt3dadd( -0.600398, -25.6415, 3.83432, 0.84 ) }
    dend_40 { pt3dadd( -0.378505, -27.5732, 5.08938, 0.96 ) }
    dend_40 { pt3dadd( -0.272399, -28.5003, 5.62515, 0.96 ) }
    dend_40 { pt3dadd( -0.164448, -29.4337, 6.14697, 0.72 ) }
    dend_40 { pt3dadd( -0.0338814, -30.5403, 6.59399, 0.72 ) }
    dend_40 { pt3dadd( 0.240371, -32.4939, 7.37309, 0.96 ) }
    dend_40 { pt3dadd( 0.439929, -33.6281, 7.76366, 1.08 ) }
    dend_40 { pt3dadd( 0.760384, -35.2803, 8.29968, 1.32 ) }
    dend_40 { pt3dadd( 1.23596, -37.5254, 9.0664, 0.72 ) }
    dend_40 { pt3dadd( 1.45181, -38.5182, 9.41123, 0.72 ) }
    dend_40 { pt3dadd( 1.7239, -39.7926, 9.81649, 0.72 ) }
    dend_40 { pt3dadd( 2.12269, -41.4153, 10.2564, 0.72 ) }
    dend_40 { pt3dadd( 2.69404, -43.2605, 10.8314, 0.84 ) }
    dend_40 { pt3dadd( 2.82636, -43.6441, 10.9534, 0.84 ) }
    dend_40 { pt3dadd( 3.10871, -44.4338, 11.1966, 0.6 ) }
    dend_40 { pt3dadd( 3.54109, -45.7065, 11.607, 0.6 ) }
    dend_40 { pt3dadd( 4.03134, -47.1692, 12.1127, 0.6 ) }
    dend_40 { pt3dadd( 4.54418, -48.7195, 12.6699, 0.6 ) }
    dend_40 { pt3dadd( 5.03584, -50.2544, 13.1236, 0.72 ) }
    dend_40 { pt3dadd( 5.56697, -51.9029, 13.6218, 0.48 ) }
    dend_40 { pt3dadd( 6.04969, -53.2822, 14.0493, 0.48 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 48/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -1.01051, -19.7206, -1.01052, 0.48 ) }
    dend_37 { pt3dadd( -0.416266, -19.6761, 0.0124653, 0.48 ) }
    dend_37 { pt3dadd( -0.0662829, -19.7507, 0.607575, 0.48 ) }
    dend_37 { pt3dadd( 1.46685, -21.0278, 4.1648, 0.72 ) }
    dend_37 { pt3dadd( 1.73366, -21.41, 4.93527, 0.72 ) }
    dend_37 { pt3dadd( 1.98032, -21.9673, 5.8138, 0.72 ) }
    dend_37 { pt3dadd( 2.17229, -22.6004, 6.64228, 0.72 ) }
    dend_37 { pt3dadd( 2.25741, -23.2828, 7.2938, 0.84 ) }
    dend_37 { pt3dadd( 2.44479, -25.7336, 9.05594, 1.2 ) }
    dend_37 { pt3dadd( 2.4852, -26.3609, 9.43811, 0.6 ) }
    dend_37 { pt3dadd( 2.57453, -27.2434, 10.072, 0.48 ) }
    dend_37 { pt3dadd( 2.66886, -27.8855, 10.5825, 0.48 ) }
    dend_37 { pt3dadd( 2.78577, -28.5443, 11.0966, 0.48 ) }
    dend_37 { pt3dadd( 2.97491, -29.372, 11.7256, 0.48 ) }
    dend_37 { pt3dadd( 3.59502, -31.4069, 12.9721, 0.48 ) }
    dend_37 { pt3dadd( 3.80396, -31.9482, 13.3704, 0.36 ) }
    dend_37 { pt3dadd( 4.00335, -32.3687, 13.7559, 0.36 ) }
    dend_37 { pt3dadd( 4.41647, -33.2096, 14.6829, 0.36 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 66/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 35.4668, -19.2826, 18.3338, 0.12 ) }
    dend_24 { pt3dadd( 36.7351, -19.9673, 19.269, 0.12 ) }
    dend_24 { pt3dadd( 37.7084, -20.3645, 19.8613, 0.12 ) }
    dend_24 { pt3dadd( 39.3935, -20.8731, 20.7489, 0.84 ) }
    dend_24 { pt3dadd( 40.0765, -20.9988, 21.0536, 0.6 ) }
    dend_24 { pt3dadd( 41.1057, -21.1269, 21.4252, 0.48 ) }
    dend_24 { pt3dadd( 42.8319, -21.3074, 21.9255, 0.12 ) }
    dend_24 { pt3dadd( 44.2614, -21.4394, 22.4131, 0.6 ) }
    dend_24 { pt3dadd( 44.7496, -21.4442, 22.5573, 0.12 ) }
    dend_24 { pt3dadd( 45.5872, -21.3678, 22.7354, 0.36 ) }
    dend_24 { pt3dadd( 46.7238, -21.1345, 22.9308, 0.36 ) }
    dend_24 { pt3dadd( 47.8096, -20.8008, 23.0778, 0.36 ) }
    dend_24 { pt3dadd( 49.3413, -20.2476, 23.2195, 0.6 ) }
    dend_24 { pt3dadd( 49.651, -20.1227, 23.2729, 0.12 ) }
    dend_24 { pt3dadd( 50.44, -19.7023, 23.413, 0.12 ) }
    dend_24 { pt3dadd( 51.5399, -18.6731, 23.5927, 0.12 ) }
    dend_24 { pt3dadd( 51.6619, -17.9344, 23.5552, 0.36 ) }
    dend_24 { pt3dadd( 51.481, -16.7384, 23.3756, 0.36 ) }
    dend_24 { pt3dadd( 51.3442, -16.3785, 23.2832, 0.12 ) }
    dend_24 { pt3dadd( 50.7675, -15.4036, 23.0339, 0.12 ) }
    dend_24 { pt3dadd( 60.1488, -14.1549, 26.251, 0.12 ) }
    dend_24 { pt3dadd( 69.809, -13.4551, 28.7343, 0.12 ) }
    dend_24 { pt3dadd( 79.3632, -13.8615, 31.6571, 0.12 ) }
    dend_24 { pt3dadd( 88.9342, -15.0493, 34.286, 0.12 ) }
    dend_24 { pt3dadd( 98.2126, -16.5326, 37.6915, 0.12 ) }
    dend_24 { pt3dadd( 106.868, -18.5435, 42.2546, 0.12 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 92/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 35.4668, -19.2826, 18.3338, 0.24 ) }
    dend_21 { pt3dadd( 36.0267, -20.0541, 18.3867, 0.24 ) }
    dend_21 { pt3dadd( 36.8062, -21.0382, 18.4445, 0.24 ) }
    dend_21 { pt3dadd( 37.919, -22.2356, 18.5075, 0.24 ) }
    dend_21 { pt3dadd( 38.612, -22.9236, 18.5397, 0.24 ) }
    dend_21 { pt3dadd( 39.3871, -23.7161, 18.5709, 0.6 ) }
    dend_21 { pt3dadd( 40.1466, -24.4899, 18.5966, 0.72 ) }
    dend_21 { pt3dadd( 40.852, -25.1666, 18.5966, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_21 { pt3dadd( 41.8822, -25.978, 18.6499, 0.72 ) }
    dend_21 { pt3dadd( 42.5274, -26.3667, 18.707, 0.72 ) }
    dend_21 { pt3dadd( 43.8151, -26.9673, 18.8539, 0.72 ) }
    dend_21 { pt3dadd( 45.019, -27.4372, 19.0116, 0.72 ) }
    dend_21 { pt3dadd( 46.3989, -27.8725, 19.1637, 0.72 ) }
    dend_21 { pt3dadd( 48.1734, -28.3153, 19.4542, 0.72 ) }
    dend_21 { pt3dadd( 48.9129, -28.4589, 19.6017, 0.72 ) }
    dend_21 { pt3dadd( 49.7586, -28.576, 19.7848, 0.72 ) }
    dend_21 { pt3dadd( 51.4099, -28.7202, 20.1572, 0.72 ) }
    dend_21 { pt3dadd( 52.7145, -28.8533, 20.464, 0.72 ) }
    dend_21 { pt3dadd( 54.7759, -29.1908, 20.9479, 0.96 ) }
    dend_21 { pt3dadd( 55.5285, -29.4097, 21.1033, 0.96 ) }
    dend_21 { pt3dadd( 56.116, -29.641, 21.2302, 0.96 ) }
    dend_21 { pt3dadd( 56.6623, -29.8546, 21.347, 0.12 ) }
    dend_21 { pt3dadd( 57.2652, -30.0559, 21.4539, 0.12 ) }
    dend_21 { pt3dadd( 57.5972, -30.1586, 21.4885, 0.48 ) }
    dend_21 { pt3dadd( 58.6958, -30.4336, 21.3909, 0.48 ) }
    dend_21 { pt3dadd( 59.4367, -30.5783, 21.4073, 0.48 ) }
    dend_21 { pt3dadd( 60.8438, -30.8426, 21.5498, 0.72 ) }
    dend_21 { pt3dadd( 61.8242, -31.0136, 21.6868, 0.12 ) }
    dend_21 { pt3dadd( 62.3222, -31.0852, 21.7635, 0.12 ) }
    dend_21 { pt3dadd( 63.5734, -31.155, 21.9693, 0.48 ) }
    dend_21 { pt3dadd( 65.3734, -31.1093, 22.2958, 0.48 ) }
    dend_21 { pt3dadd( 66.6411, -31.0612, 22.5428, 1.08 ) }
    dend_21 { pt3dadd( 67.704, -31.1, 22.7596, 0.24 ) }
    dend_21 { pt3dadd( 68.6399, -31.2056, 22.9439, 0.24 ) }
    dend_21 { pt3dadd( 70.258, -31.4945, 23.1969, 0.24 ) }
    dend_21 { pt3dadd( 70.7875, -31.5942, 23.242, 0.24 ) }
    dend_21 { pt3dadd( 71.5093, -31.7666, 23.2412, 0.48 ) }
    dend_21 { pt3dadd( 72.8277, -32.1987, 23.2387, 0.48 ) }
    dend_21 { pt3dadd( 73.9218, -32.7397, 23.2358, 0.48 ) }
    dend_21 { pt3dadd( 74.8068, -33.2569, 23.2044, 0.12 ) }
    dend_21 { pt3dadd( 76.0281, -34.0097, 23.198, 0.36 ) }
    dend_21 { pt3dadd( 76.9361, -34.58, 23.1926, 0.36 ) }
    dend_21 { pt3dadd( 77.4421, -34.8833, 23.1918, 0.12 ) }
    dend_21 { pt3dadd( 78.6088, -35.4759, 23.1913, 0.12 ) }
    dend_21 { pt3dadd( 80.0439, -36.1119, 23.1937, 0.6 ) }
    dend_21 { pt3dadd( 81.3107, -36.673, 23.2008, 0.6 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 38/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 23.5741, -45.8988, 22.975, 0.12 ) }
    dend_19 { pt3dadd( 22.9268, -45.5497, 23.1715, 0.12 ) }
    dend_19 { pt3dadd( 22.0918, -44.8985, 23.4243, 0.12 ) }
    dend_19 { pt3dadd( 21.2191, -44.0345, 23.6967, 0.12 ) }
    dend_19 { pt3dadd( 20.0391, -42.6962, 24.2172, 0.12 ) }
    dend_19 { pt3dadd( 18.9491, -41.2409, 24.8207, 0.12 ) }
    dend_19 { pt3dadd( 17.4017, -38.8718, 25.6642, 0.12 ) }
    dend_19 { pt3dadd( 16.7201, -37.4742, 26.1503, 0.12 ) }
    dend_19 { pt3dadd( 16.5042, -36.5907, 26.4113, 0.36 ) }
    dend_19 { pt3dadd( 16.4583, -34.6275, 26.8605, 0.12 ) }
    dend_19 { pt3dadd( 16.6039, -33.5515, 27.067, 0.12 ) }
    dend_19 { pt3dadd( 17.2865, -31.1205, 27.458, 0.24 ) }
    dend_19 { pt3dadd( 17.8767, -29.8, 27.7159, 0.12 ) }
    dend_19 { pt3dadd( 18.7887, -28.0272, 27.9843, 0.12 ) }
    dend_19 { pt3dadd( 18.9492, -27.692, 27.9799, 0.12 ) }
    dend_19 { pt3dadd( 18.5705, -18.2389, 30.3994, 0.12 ) }
    dend_19 { pt3dadd( 19.4032, -8.531, 30.8105, 0.12 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 55/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 23.5741, -45.8988, 22.975, 0.48 ) }
    dend_16 { pt3dadd( 23.6127, -47.2691, 23.026, 0.48 ) }
    dend_16 { pt3dadd( 23.6358, -48.2044, 23.0582, 0.12 ) }
    dend_16 { pt3dadd( 23.6674, -49.4824, 23.1021, 0.12 ) }
    dend_16 { pt3dadd( 23.7107, -51.2321, 23.1622, 0.12 ) }
    dend_16 { pt3dadd( 23.7451, -52.6268, 23.2101, 0.12 ) }
    dend_16 { pt3dadd( 23.7944, -54.6181, 23.2786, 0.12 ) }
    dend_16 { pt3dadd( 23.7952, -54.7536, 23.2782, 0.36 ) }
    dend_16 { pt3dadd( 24.7983, -64.3512, 24.7257, 0.36 ) }
    dend_16 { pt3dadd( 23.9333, -74.0646, 24.6993, 0.36 ) }
    dend_16 { pt3dadd( 22.023, -83.568, 25.859, 0.36 ) }
    dend_16 { pt3dadd( 20.4496, -93.0023, 27.8327, 0.36 ) }
    dend_16 { pt3dadd( 17.7435, -102.232, 29.5828, 0.36 ) }
    dend_16 { pt3dadd( 13.9608, -111.162, 30.9238, 0.36 ) }
    dend_16 { pt3dadd( 11.3265, -120.269, 33.337, 0.36 ) }
    dend_16 { pt3dadd( 6.56038, -128.686, 34.9954, 0.36 ) }
    dend_16 { pt3dadd( -0.387776, -135.698, 35.0212, 0.36 ) }
    dend_16 { pt3dadd( -7.0564, -142.775, 36.7091, 0.36 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 73/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 41.2319, 40.0211, 41.5953, 0.12 ) }
    dend_13 { pt3dadd( 46.6953, 44.1125, 48.844, 0.12 ) }
    dend_13 { pt3dadd( 51.4924, 48.9094, 56.1091, 0.12 ) }
    dend_13 { pt3dadd( 57.0192, 53.4512, 63.0196, 0.12 ) }
    dend_13 { pt3dadd( 63.2533, 58.8746, 68.5146, 0.12 ) }
    dend_13 { pt3dadd( 69.4069, 63.0337, 75.1431, 0.12 ) }
    dend_13 { pt3dadd( 76.3235, 67.4332, 80.7822, 0.12 ) }
    dend_13 { pt3dadd( 83.1908, 72.1179, 86.2369, 0.12 ) }
    dend_13 { pt3dadd( 90.424, 74.9608, 92.4962, 0.12 ) }
    dend_13 { pt3dadd( 98.8641, 77.8263, 96.9825, 0.12 ) }
    dend_13 { pt3dadd( 107.889, 80.9481, 99.8664, 0.12 ) }
    dend_13 { pt3dadd( 116.697, 84.6889, 102.641, 0.12 ) }
    dend_13 { pt3dadd( 125.84, 87.6979, 105.262, 0.12 ) }
    dend_13 { pt3dadd( 134.7, 90.6348, 108.788, 0.12 ) }
    dend_13 { pt3dadd( 142.827, 93.3142, 113.924, 0.12 ) }
    dend_13 { pt3dadd( 149.933, 96.8034, 119.984, 0.12 ) }
    dend_13 { pt3dadd( 155.614, 100.562, 127.254, 0.12 ) }
    dend_13 { pt3dadd( 160.698, 103.797, 135.201, 0.12 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 91/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 41.2319, 40.0211, 41.5953, 0.12 ) }
    dend_10 { pt3dadd( 47.7429, 43.7083, 48.176, 0.12 ) }
    dend_10 { pt3dadd( 53.2385, 47.8679, 55.3591, 0.12 ) }
    dend_10 { pt3dadd( 58.7548, 51.177, 62.9783, 0.12 ) }
    dend_10 { pt3dadd( 62.9543, 54.8616, 71.2295, 0.12 ) }
    dend_10 { pt3dadd( 65.6696, 57.1831, 80.5546, 0.12 ) }
    dend_10 { pt3dadd( 67.2293, 59.7635, 90.0711, 0.12 ) }
    dend_10 { pt3dadd( 68.0287, 62.5526, 99.6198, 0.12 ) }
    dend_10 { pt3dadd( 68.0848, 67.1463, 108.44, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_10 { pt3dadd( 68.1466, 72.3418, 116.902, 0.12 ) }
    dend_10 { pt3dadd( 67.0347, 76.8713, 125.687, 0.12 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 2/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 35.7902, -21.7497, 4.12915, 0.48 ) }
    dend_6 { pt3dadd( 37.2339, -22.3104, 4.44969, 0.48 ) }
    dend_6 { pt3dadd( 38.7603, -22.9426, 4.69711, 0.48 ) }
    dend_6 { pt3dadd( 39.9494, -23.4425, 4.82997, 0.48 ) }
    dend_6 { pt3dadd( 41.291, -23.9903, 4.94586, 0.72 ) }
    dend_6 { pt3dadd( 42.4354, -24.4372, 5.02792, 0.72 ) }
    dend_6 { pt3dadd( 43.9051, -24.9431, 5.07211, 0.72 ) }
    dend_6 { pt3dadd( 45.7658, -25.4431, 4.89035, 0.72 ) }
    dend_6 { pt3dadd( 47.3814, -25.7853, 4.53249, 0.72 ) }
    dend_6 { pt3dadd( 48.1656, -25.9017, 4.25599, 0.12 ) }
    dend_6 { pt3dadd( 48.7164, -25.9509, 3.99434, 0.36 ) }
    dend_6 { pt3dadd( 50.2338, -25.9894, 3.00116, 0.96 ) }
    dend_6 { pt3dadd( 51.8948, -25.9144, 1.66081, 0.48 ) }
    dend_6 { pt3dadd( 52.8722, -25.8068, 0.755004, 0.6 ) }
    dend_6 { pt3dadd( 53.8953, -25.6555, -0.29679, 0.36 ) }
    dend_6 { pt3dadd( 54.4542, -25.5831, -0.871368, 0.12 ) }
    dend_6 { pt3dadd( 55.9692, -25.4676, -2.33462, 0.6 ) }
    dend_6 { pt3dadd( 56.5076, -25.5009, -2.7858, 0.96 ) }
    dend_6 { pt3dadd( 57.1273, -25.5935, -3.22997, 0.12 ) }
    dend_6 { pt3dadd( 58.114, -25.7274, -3.80882, 0.12 ) }
    dend_6 { pt3dadd( 58.9784, -25.828, -4.23072, 0.72 ) }
    dend_6 { pt3dadd( 59.6116, -25.8998, -4.50674, 0.36 ) }
    dend_6 { pt3dadd( 60.9938, -26.0445, -4.99862, 0.36 ) }
    dend_6 { pt3dadd( 61.2191, -26.0687, -5.07771, 0.12 ) }
    dend_6 { pt3dadd( 62.1279, -26.1633, -5.37124, 0.12 ) }
    dend_6 { pt3dadd( 63.3712, -26.2639, -5.71625, 0.72 ) }
    dend_6 { pt3dadd( 64.8073, -26.3472, -6.16989, 1.08 ) }
    dend_6 { pt3dadd( 65.7826, -26.3762, -6.49589, 0.12 ) }
    dend_6 { pt3dadd( 66.7597, -26.3989, -6.82814, 0.12 ) }
    dend_6 { pt3dadd( 67.3697, -26.4565, -7.03321, 0.48 ) }
    dend_6 { pt3dadd( 67.9697, -26.5863, -7.22055, 0.48 ) }
    dend_6 { pt3dadd( 68.8323, -26.8667, -7.4139, 0.48 ) }
    dend_6 { pt3dadd( 69.0772, -26.9641, -7.45931, 0.12 ) }
    dend_6 { pt3dadd( 69.671, -27.171, -7.54914, 0.12 ) }
    dend_6 { pt3dadd( 70.0004, -27.239, -7.59151, 1.08 ) }
    dend_6 { pt3dadd( 70.9621, -27.3299, -7.67737, 1.56 ) }
    dend_6 { pt3dadd( 72.3028, -27.3355, -7.72673, 0.12 ) }
    dend_6 { pt3dadd( 72.4224, -27.3261, -7.72532, 0.12 ) }
    dend_6 { pt3dadd( 73.0877, -27.2354, -7.71661, 0.12 ) }
    dend_6 { pt3dadd( 73.4582, -27.1557, -7.7117, 0.6 ) }
    dend_6 { pt3dadd( 73.7011, -27.0983, -7.71805, 0.12 ) }
    dend_6 { pt3dadd( 74.7846, -26.8882, -7.77766, 0.12 ) }
    dend_6 { pt3dadd( 75.3159, -26.8243, -7.81587, 0.84 ) }
    dend_6 { pt3dadd( 76.2911, -26.7628, -7.97125, 1.2 ) }
    dend_6 { pt3dadd( 77.3904, -26.702, -8.21065, 0.72 ) }
    dend_6 { pt3dadd( 78.4811, -26.65, -8.48152, 0.36 ) }
    dend_6 { pt3dadd( 79.607, -26.5969, -8.82333, 0.36 ) }
    dend_6 { pt3dadd( 80.5542, -26.546, -9.21215, 0.72 ) }
    dend_6 { pt3dadd( 82.0318, -26.4874, -9.91316, 0.12 ) }
    dend_6 { pt3dadd( 83.3068, -26.4014, -10.6171, 0.12 ) }
    dend_6 { pt3dadd( 84.3512, -26.2824, -11.2393, 1.32 ) }
    dend_6 { pt3dadd( 85.5577, -26.0806, -11.9937, 0.12 ) }
    dend_6 { pt3dadd( 86.9861, -25.7794, -12.926, 0.12 ) }
    dend_6 { pt3dadd( 87.5918, -25.6418, -13.3081, 0.12 ) }
    dend_6 { pt3dadd( 88.6284, -25.4152, -13.8845, 0.12 ) }
    dend_6 { pt3dadd( 89.4601, -25.248, -14.3376, 0.12 ) }
    dend_6 { pt3dadd( 90.1804, -25.0877, -14.6863, 0.48 ) }
    dend_6 { pt3dadd( 90.6823, -24.9789, -14.8551, 0.12 ) }
    dend_6 { pt3dadd( 91.3764, -24.8426, -15.0038, 0.12 ) }
    dend_6 { pt3dadd( 91.8589, -24.7803, -15.0924, 1.08 ) }
    dend_6 { pt3dadd( 92.653, -24.7827, -15.1939, 0.12 ) }
    dend_6 { pt3dadd( 93.6161, -24.879, -15.3934, 0.12 ) }
    dend_6 { pt3dadd( 94.1486, -24.9516, -15.5292, 0.48 ) }
    dend_6 { pt3dadd( 94.3731, -24.9983, -15.5992, 0.12 ) }
    dend_6 { pt3dadd( 95.1908, -25.2411, -15.8956, 0.12 ) }
    dend_6 { pt3dadd( 96.0416, -25.5493, -16.2072, 0.72 ) }
    dend_6 { pt3dadd( 97.4758, -26.0936, -16.578, 0.12 ) }
    dend_6 { pt3dadd( 98.2791, -26.3675, -16.6905, 0.12 ) }
    dend_6 { pt3dadd( 98.6951, -26.4803, -16.7192, 0.36 ) }
    dend_6 { pt3dadd( 98.9586, -26.5294, -16.7209, 0.12 ) }
    dend_6 { pt3dadd( 100.039, -26.623, -16.666, 0.12 ) }
    dend_6 { pt3dadd( 101.679, -26.6527, -16.49, 1.32 ) }
    dend_6 { pt3dadd( 102.869, -26.6181, -16.2977, 0.36 ) }
    dend_6 { pt3dadd( 103.823, -26.5421, -16.1517, 0.12 ) }
    dend_6 { pt3dadd( 104.665, -26.4279, -16.0358, 0.12 ) }
    dend_6 { pt3dadd( 105.254, -26.3169, -15.9682, 0.12 ) }
    dend_6 { pt3dadd( 105.957, -26.1308, -15.9134, 0.6 ) }
    dend_6 { pt3dadd( 106.424, -25.9686, -15.9077, 0.12 ) }
    dend_6 { pt3dadd( 107.127, -25.6851, -15.8998, 0.12 ) }
    dend_6 { pt3dadd( 107.584, -25.4987, -15.8915, 0.6 ) }
    dend_6 { pt3dadd( 108.189, -25.2775, -15.8779, 0.6 ) }
    dend_6 { pt3dadd( 108.759, -25.0964, -15.8642, 0.12 ) }
    dend_6 { pt3dadd( 109.634, -24.8398, -15.8393, 0.12 ) }
    dend_6 { pt3dadd( 110.097, -24.7186, -15.8248, 1.08 ) }
    dend_6 { pt3dadd( 110.59, -24.6221, -15.8095, 0.12 ) }
    dend_6 { pt3dadd( 111.439, -24.4984, -15.789, 0.12 ) }
    dend_6 { pt3dadd( 111.969, -24.4535, -15.7811, 0.84 ) }
    dend_6 { pt3dadd( 112.461, -24.4117, -15.8012, 0.84 ) }
    dend_6 { pt3dadd( 112.953, -24.3797, -15.8411, 0.12 ) }
    dend_6 { pt3dadd( 114.152, -24.3584, -15.9726, 0.12 ) }
    dend_6 { pt3dadd( 114.649, -24.3665, -16.037, 0.12 ) }
    dend_6 { pt3dadd( 116.154, -24.4068, -16.4444, 0.12 ) }
    dend_6 { pt3dadd( 117.299, -24.4807, -16.8569, 1.68 ) }
    dend_6 { pt3dadd( 117.943, -24.5383, -17.064, 0.12 ) }
    dend_6 { pt3dadd( 118.997, -24.6654, -17.3691, 0.12 ) }
    dend_6 { pt3dadd( 119.927, -24.7792, -17.6094, 0.12 ) }
    dend_6 { pt3dadd( 122.504, -25.062, -18.1187, 0.12 ) }
    dend_6 { pt3dadd( 123.767, -25.2247, -18.3385, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_6 { pt3dadd( 125.896, -25.5272, -18.5755, 0.6 ) }
    dend_6 { pt3dadd( 126.405, -25.5712, -18.6143, 0.6 ) }
    dend_6 { pt3dadd( 127.176, -25.595, -18.6009, 0.12 ) }
    dend_6 { pt3dadd( 128.137, -25.658, -18.3223, 0.12 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 4/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 35.7902, -21.7497, 4.12915, 0.12 ) }
    dend_3 { pt3dadd( 36.4195, -23.2446, 3.8112, 0.12 ) }
    dend_3 { pt3dadd( 36.8332, -24.097, 3.7877, 0.12 ) }
    dend_3 { pt3dadd( 37.1046, -24.6567, 3.83813, 0.12 ) }
    dend_3 { pt3dadd( 37.4364, -25.3699, 3.93881, 0.6 ) }
    dend_3 { pt3dadd( 37.871, -26.3413, 4.09956, 0.6 ) }
    dend_3 { pt3dadd( 38.1051, -26.8721, 4.19291, 0.6 ) }
    dend_3 { pt3dadd( 38.687, -28.081, 4.54889, 0.12 ) }
    dend_3 { pt3dadd( 39.1285, -28.9839, 4.87578, 0.12 ) }
    dend_3 { pt3dadd( 39.3119, -29.3885, 5.03239, 0.48 ) }
    dend_3 { pt3dadd( 39.392, -29.5939, 5.11495, 0.12 ) }
    dend_3 { pt3dadd( 39.6075, -30.1966, 5.33663, 0.12 ) }
    dend_3 { pt3dadd( 39.7799, -30.671, 5.48325, 0.6 ) }
    dend_3 { pt3dadd( 40.1095, -31.457, 5.6758, 0.12 ) }
    dend_3 { pt3dadd( 40.5263, -32.2965, 5.8882, 0.12 ) }
    dend_3 { pt3dadd( 41.1469, -33.3964, 6.14498, 0.6 ) }
    dend_3 { pt3dadd( 41.7366, -34.3122, 6.32507, 0.36 ) }
    dend_3 { pt3dadd( 42.125, -34.8683, 6.44124, 0.12 ) }
    dend_3 { pt3dadd( 42.45, -35.365, 6.53696, 0.12 ) }
    dend_3 { pt3dadd( 42.7587, -35.8605, 6.617, 0.6 ) }
    dend_3 { pt3dadd( 43.3555, -36.8541, 6.77893, 1.32 ) }
    dend_3 { pt3dadd( 44.1096, -38.1354, 6.97254, 0.12 ) }
    dend_3 { pt3dadd( 44.6021, -38.9767, 7.12517, 0.24 ) }
    dend_3 { pt3dadd( 45.382, -40.3052, 7.38994, 0.24 ) }
    dend_3 { pt3dadd( 45.6404, -40.7545, 7.48447, 0.36 ) }
    dend_3 { pt3dadd( 46.0053, -41.4309, 7.62308, 0.72 ) }
    dend_3 { pt3dadd( 46.3821, -42.1823, 7.73638, 0.72 ) }
    dend_3 { pt3dadd( 46.7788, -43.0467, 7.80522, 0.12 ) }
    dend_3 { pt3dadd( 46.965, -43.4257, 7.8437, 0.12 ) }
    dend_3 { pt3dadd( 47.0427, -43.5706, 7.86923, 0.48 ) }
    dend_3 { pt3dadd( 47.6971, -44.8977, 8.17027, 0.48 ) }
    dend_3 { pt3dadd( 48.0417, -45.6592, 8.37257, 0.12 ) }
    dend_3 { pt3dadd( 48.2088, -46.1019, 8.49746, 0.12 ) }
    dend_3 { pt3dadd( 48.7195, -47.6283, 8.91376, 0.72 ) }
    dend_3 { pt3dadd( 48.8737, -48.0704, 9.03801, 0.72 ) }
    dend_3 { pt3dadd( 49.0566, -48.5013, 9.16433, 0.12 ) }
    dend_3 { pt3dadd( 49.2556, -48.8691, 9.23739, 0.12 ) }
    dend_3 { pt3dadd( 49.4465, -49.178, 9.24563, 0.6 ) }
    dend_3 { pt3dadd( 49.8716, -49.7781, 9.1174, 0.6 ) }
    dend_3 { pt3dadd( 50.3637, -50.4157, 8.84056, 0.6 ) }
    dend_3 { pt3dadd( 50.6991, -50.7869, 8.66567, 0.6 ) }
    dend_3 { pt3dadd( 51.7019, -51.7401, 8.30917, 0.12 ) }
    dend_3 { pt3dadd( 52.2933, -52.1928, 8.18466, 0.12 ) }
    dend_3 { pt3dadd( 52.704, -52.4505, 8.14468, 0.6 ) }
    dend_3 { pt3dadd( 53.0849, -52.6497, 8.12543, 0.12 ) }
    dend_3 { pt3dadd( 54.0986, -53.1412, 8.12004, 0.12 ) }
    dend_3 { pt3dadd( 55.2408, -53.7357, 8.08511, 0.72 ) }
    dend_3 { pt3dadd( 55.768, -54.0346, 8.07161, 0.12 ) }
    dend_3 { pt3dadd( 56.1876, -54.3023, 7.98375, 0.12 ) }
    dend_3 { pt3dadd( 57.1411, -55.0054, 7.61992, 1.08 ) }
    dend_3 { pt3dadd( 57.78, -55.5639, 7.25908, 0.12 ) }
    dend_3 { pt3dadd( 58.5838, -56.395, 6.64583, 0.12 ) }
    dend_3 { pt3dadd( 58.8471, -56.7162, 6.40617, 0.12 ) }
    dend_3 { pt3dadd( 59.7121, -57.929, 5.63216, 0.6 ) }
    dend_3 { pt3dadd( 59.8941, -58.1998, 5.49329, 0.12 ) }
    dend_3 { pt3dadd( 60.2573, -58.7708, 5.30835, 0.12 ) }
    dend_3 { pt3dadd( 60.6853, -59.3935, 5.20151, 0.96 ) }
    dend_3 { pt3dadd( 61.2198, -60.1051, 5.19255, 0.96 ) }
    dend_3 { pt3dadd( 61.7441, -60.7384, 5.22197, 0.12 ) }
    dend_3 { pt3dadd( 62.3912, -61.4281, 5.30799, 0.12 ) }
    dend_3 { pt3dadd( 63.2777, -62.2131, 5.38439, 0.12 ) }
    dend_3 { pt3dadd( 63.9133, -62.6917, 5.41288, 0.72 ) }
    dend_3 { pt3dadd( 64.137, -62.8362, 5.41422, 0.72 ) }
    dend_3 { pt3dadd( 64.7406, -63.1568, 5.39456, 0.12 ) }
    dend_3 { pt3dadd( 65.5276, -63.5222, 5.33576, 0.12 ) }
    dend_3 { pt3dadd( 66.3088, -63.818, 5.27909, 0.6 ) }
    dend_3 { pt3dadd( 66.797, -63.9561, 5.25003, 0.12 ) }
    dend_3 { pt3dadd( 67.7925, -64.1866, 5.37832, 0.12 ) }
    dend_3 { pt3dadd( 68.2402, -64.2852, 5.51896, 0.36 ) }
    dend_3 { pt3dadd( 68.3888, -64.3366, 5.58165, 0.12 ) }
    dend_3 { pt3dadd( 69.085, -64.7051, 5.88569, 0.12 ) }
    dend_3 { pt3dadd( 69.5675, -65.0132, 6.06523, 0.72 ) }
    dend_3 { pt3dadd( 71.651, -66.4109, 6.87171, 0.12 ) }
    dend_3 { pt3dadd( 72.7984, -67.2457, 7.33126, 0.12 ) }
    dend_3 { pt3dadd( 74.7015, -68.7343, 8.08025, 0.12 ) }
    dend_3 { pt3dadd( 76.2776, -70.06, 8.65956, 0.12 ) }
    dend_3 { pt3dadd( 77.1784, -70.9198, 8.93889, 0.36 ) }
    dend_3 { pt3dadd( 84.8785, -77.1384, 9.11247, 0.36 ) }
    // Section: dend_105, id: dend_105, parent: dend_101 (entry count 82/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( -24.2408, -22.1879, -69.268, 0.12 ) }
    dend_105 { pt3dadd( -23.6394, -21.865, -69.3068, 0.12 ) }
    dend_105 { pt3dadd( -22.0068, -20.9884, -69.4121, 0.12 ) }
    dend_105 { pt3dadd( -21.2076, -20.5592, -69.4637, 0.36 ) }
    dend_105 { pt3dadd( -19.4025, -19.59, -69.5802, 0.36 ) }
    // Section: dend_102, id: dend_102, parent: dend_101 (entry count 87/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( -24.2408, -22.1879, -69.268, 0.12 ) }
    dend_102 { pt3dadd( -24.6518, -22.2588, -68.8999, 0.12 ) }
    dend_102 { pt3dadd( -25.9126, -22.2798, -68.0502, 0.12 ) }
    dend_102 { pt3dadd( -26.7599, -22.2939, -67.4793, 0.48 ) }
    dend_102 { pt3dadd( -28.3398, -22.3202, -66.4146, 0.12 ) }
    dend_102 { pt3dadd( -29.1441, -22.3336, -65.8726, 0.12 ) }
    dend_102 { pt3dadd( -29.8477, -22.3453, -65.3984, 0.12 ) }
    dend_102 { pt3dadd( -31.2889, -22.3594, -64.4502, 0.12 ) }
    // Section: dend_100, id: dend_100, parent: dend_96 (entry count 95/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( -48.5988, -72.4956, -108.923, 0.12 ) }
    dend_100 { pt3dadd( -48.472, -72.7201, -108.59, 0.12 ) }
    dend_100 { pt3dadd( -48.099, -73.2676, -107.631, 0.12 ) }
    dend_100 { pt3dadd( -47.9415, -73.5385, -107.123, 0.6 ) }
    dend_100 { pt3dadd( -47.4035, -74.7156, -104.913, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_100 { pt3dadd( -47.235, -75.3877, -103.659, 0.12 ) }
    dend_100 { pt3dadd( -47.1395, -76.3954, -101.861, 0.96 ) }
    dend_100 { pt3dadd( -47.2089, -77.2054, -100.345, 0.48 ) }
    dend_100 { pt3dadd( -47.3639, -77.7304, -99.3494, 0.12 ) }
    dend_100 { pt3dadd( -47.548, -78.0654, -98.7641, 0.12 ) }
    dend_100 { pt3dadd( -48.2597, -78.8744, -97.5544, 0.12 ) }
    dend_100 { pt3dadd( -48.5999, -79.2003, -97.0424, 0.84 ) }
    dend_100 { pt3dadd( -49.2468, -79.7703, -95.9895, 0.12 ) }
    dend_100 { pt3dadd( -49.4934, -79.9492, -95.5605, 0.12 ) }
    dend_100 { pt3dadd( -49.8513, -80.1553, -94.5565, 0.12 ) }
    dend_100 { pt3dadd( -50.2495, -80.3136, -92.9424, 0.84 ) }
    dend_100 { pt3dadd( -50.6979, -80.4493, -90.8904, 0.84 ) }
    dend_100 { pt3dadd( -51.3188, -80.6228, -87.8617, 0.84 ) }
    dend_100 { pt3dadd( -51.5445, -80.6816, -86.6493, 0.84 ) }
    dend_100 { pt3dadd( -52.4774, -80.9293, -81.2433, 0.84 ) }
    dend_100 { pt3dadd( -53.1752, -81.1502, -76.9473, 0.36 ) }
    dend_100 { pt3dadd( -53.4418, -81.2471, -75.3694, 0.36 ) }
    dend_100 { pt3dadd( -53.5774, -81.3119, -74.6553, 0.72 ) }
    dend_100 { pt3dadd( -54.1774, -81.8992, -71.3443, 0.12 ) }
    dend_100 { pt3dadd( -54.2515, -82.051, -70.8361, 0.12 ) }
    dend_100 { pt3dadd( -54.3037, -82.4171, -70.2727, 0.12 ) }
    dend_100 { pt3dadd( -54.2732, -82.8471, -69.8497, 0.12 ) }
    dend_100 { pt3dadd( -54.1318, -83.6367, -69.1108, 0.12 ) }
    dend_100 { pt3dadd( -54.0158, -84.0434, -68.843, 0.48 ) }
    dend_100 { pt3dadd( -53.4698, -85.5856, -68.2851, 0.24 ) }
    dend_100 { pt3dadd( -53.0661, -86.7219, -67.9311, 0.24 ) }
    dend_100 { pt3dadd( -52.967, -87.0387, -67.847, 0.6 ) }
    dend_100 { pt3dadd( -52.8438, -87.5368, -67.7381, 0.12 ) }
    dend_100 { pt3dadd( -52.6812, -88.6015, -67.5025, 0.12 ) }
    dend_100 { pt3dadd( -52.6026, -89.5151, -67.3215, 0.12 ) }
    dend_100 { pt3dadd( -52.5982, -90.6796, -67.1543, 0.12 ) }
    dend_100 { pt3dadd( -52.6678, -91.4422, -67.0239, 0.12 ) }
    dend_100 { pt3dadd( -52.723, -91.7834, -66.9598, 0.48 ) }
    dend_100 { pt3dadd( -53.0139, -92.9431, -66.7236, 0.12 ) }
    dend_100 { pt3dadd( -53.1855, -93.4817, -66.6075, 0.12 ) }
    dend_100 { pt3dadd( -53.6999, -94.9172, -66.2913, 0.12 ) }
    dend_100 { pt3dadd( -54.0762, -95.9904, -66.1424, 0.12 ) }
    dend_100 { pt3dadd( -54.1839, -96.345, -66.1341, 0.48 ) }
    dend_100 { pt3dadd( -54.3231, -96.8273, -66.1835, 0.12 ) }
    dend_100 { pt3dadd( -54.4814, -97.42, -66.3101, 0.12 ) }
    dend_100 { pt3dadd( -54.4814, -97.42, -66.3101, 0.36 ) }
    dend_100 { pt3dadd( -54.7422, -98.7536, -66.588, 0.12 ) }
    dend_100 { pt3dadd( -54.8595, -99.4255, -66.7122, 0.12 ) }
    dend_100 { pt3dadd( -55.0664, -100.494, -66.8823, 0.12 ) }
    dend_100 { pt3dadd( -55.3803, -101.762, -67.1202, 0.12 ) }
    dend_100 { pt3dadd( -55.7438, -102.972, -67.3601, 0.12 ) }
    dend_100 { pt3dadd( -56.0634, -103.962, -67.5466, 0.12 ) }
    dend_100 { pt3dadd( -56.1974, -104.349, -67.6094, 0.48 ) }
    dend_100 { pt3dadd( -56.432, -104.978, -67.7496, 0.12 ) }
    dend_100 { pt3dadd( -56.9878, -106.362, -68.1515, 0.12 ) }
    dend_100 { pt3dadd( -57.1825, -106.766, -68.297, 0.12 ) }
    dend_100 { pt3dadd( -57.6115, -107.532, -68.6135, 0.12 ) }
    dend_100 { pt3dadd( -57.8848, -108.015, -68.8133, 0.6 ) }
    dend_100 { pt3dadd( -58.2858, -108.763, -69.0917, 0.12 ) }
    dend_100 { pt3dadd( -58.5032, -109.187, -69.2184, 0.12 ) }
    dend_100 { pt3dadd( -58.7719, -109.698, -69.3339, 0.6 ) }
    dend_100 { pt3dadd( -58.8835, -109.899, -69.3839, 0.12 ) }
    dend_100 { pt3dadd( -59.2196, -110.502, -69.538, 0.12 ) }
    dend_100 { pt3dadd( -59.4111, -110.871, -69.6231, 0.6 ) }
    dend_100 { pt3dadd( -59.6093, -111.321, -69.7048, 0.96 ) }
    dend_100 { pt3dadd( -59.8753, -111.926, -69.8195, 0.12 ) }
    dend_100 { pt3dadd( -60.1939, -112.668, -69.9663, 0.12 ) }
    dend_100 { pt3dadd( -60.2949, -112.877, -70.0078, 0.12 ) }
    dend_100 { pt3dadd( -60.4587, -113.162, -70.0605, 0.36 ) }
    dend_100 { pt3dadd( -60.5858, -113.38, -70.0928, 0.36 ) }
    dend_100 { pt3dadd( -60.854, -113.902, -70.1401, 0.36 ) }
    dend_100 { pt3dadd( -61.1306, -114.436, -70.0875, 0.6 ) }
    dend_100 { pt3dadd( -61.3041, -114.759, -70.0245, 0.6 ) }
    dend_100 { pt3dadd( -61.6918, -115.477, -69.8568, 0.6 ) }
    dend_100 { pt3dadd( -61.9202, -115.892, -69.7518, 0.12 ) }
    dend_100 { pt3dadd( -62.5092, -117.004, -69.4625, 0.12 ) }
    dend_100 { pt3dadd( -63.123, -118.271, -69.1324, 0.12 ) }
    dend_100 { pt3dadd( -63.5327, -119.169, -68.91, 0.12 ) }
    dend_100 { pt3dadd( -63.941, -120.168, -68.6962, 0.12 ) }
    dend_100 { pt3dadd( -64.172, -120.781, -68.5853, 0.72 ) }
    dend_100 { pt3dadd( -64.3719, -121.331, -68.5137, 0.12 ) }
    dend_100 { pt3dadd( -64.6141, -122.0, -68.4666, 0.12 ) }
    dend_100 { pt3dadd( -64.9279, -122.943, -68.4666, 0.12 ) }
    dend_100 { pt3dadd( -65.2118, -123.857, -68.4666, 0.12 ) }
    dend_100 { pt3dadd( -65.3594, -124.317, -68.4666, 0.12 ) }
    dend_100 { pt3dadd( -65.7532, -125.467, -68.4666, 0.12 ) }
    dend_100 { pt3dadd( -65.9636, -126.006, -68.4512, 0.48 ) }
    dend_100 { pt3dadd( -66.3717, -126.973, -68.3956, 0.48 ) }
    dend_100 { pt3dadd( -66.5095, -127.285, -68.3688, 0.12 ) }
    dend_100 { pt3dadd( -66.9629, -128.291, -68.2612, 0.12 ) }
    dend_100 { pt3dadd( -67.1142, -128.62, -68.2474, 0.24 ) }
    dend_100 { pt3dadd( -67.3893, -129.196, -68.2635, 0.12 ) }
    dend_100 { pt3dadd( -67.6889, -129.842, -68.3242, 0.12 ) }
    dend_100 { pt3dadd( -68.2039, -131.028, -68.5009, 0.12 ) }
    dend_100 { pt3dadd( -68.4215, -131.56, -68.6331, 0.36 ) }
    dend_100 { pt3dadd( -68.8614, -132.803, -68.9782, 0.12 ) }
    dend_100 { pt3dadd( -69.0617, -133.508, -69.1682, 0.12 ) }
    dend_100 { pt3dadd( -69.3262, -134.502, -69.476, 0.12 ) }
    dend_100 { pt3dadd( -69.4211, -134.894, -69.6031, 0.6 ) }
    dend_100 { pt3dadd( -69.6526, -136.159, -70.0027, 0.6 ) }
    dend_100 { pt3dadd( -69.7805, -137.065, -70.2216, 0.12 ) }
    dend_100 { pt3dadd( -69.8688, -138.341, -70.3174, 0.12 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 97/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -48.5988, -72.4956, -108.923, 0.12 ) }
    dend_97 { pt3dadd( -50.1876, -71.4865, -112.989, 0.12 ) }
    dend_97 { pt3dadd( -50.4471, -71.2854, -113.605, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_97 { pt3dadd( -50.6653, -71.0622, -114.169, 0.72 ) }
    dend_97 { pt3dadd( -50.8753, -70.7608, -114.76, 0.12 ) }
    dend_97 { pt3dadd( -51.7988, -69.3571, -117.176, 0.12 ) }
    dend_97 { pt3dadd( -52.0274, -68.9865, -117.744, 0.72 ) }
    dend_97 { pt3dadd( -52.1341, -68.7671, -117.974, 0.72 ) }
    dend_97 { pt3dadd( -52.626, -67.5444, -119.155, 0.12 ) }
    dend_97 { pt3dadd( -52.9871, -66.587, -119.979, 0.12 ) }
    dend_97 { pt3dadd( -53.4832, -65.2381, -121.098, 0.12 ) }
    dend_97 { pt3dadd( -53.969, -63.9799, -122.041, 0.12 ) }
    dend_97 { pt3dadd( -54.2622, -63.2472, -122.598, 0.12 ) }
    dend_97 { pt3dadd( -54.9613, -61.5494, -123.841, 0.12 ) }
    dend_97 { pt3dadd( -55.5074, -60.3462, -124.627, 0.12 ) }
    // Section: dend_93, id: dend_93, parent: dend_91 (entry count 12/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 69.9232, -44.8989, -64.4104, 0.12 ) }
    dend_93 { pt3dadd( 70.0888, -44.3208, -65.176, 0.12 ) }
    dend_93 { pt3dadd( 70.1942, -43.3695, -66.2419, 0.12 ) }
    dend_93 { pt3dadd( 70.1982, -42.9938, -66.6025, 0.84 ) }
    dend_93 { pt3dadd( 70.2275, -42.2815, -67.3813, 0.84 ) }
    dend_93 { pt3dadd( 70.3505, -41.5848, -68.4958, 0.12 ) }
    dend_93 { pt3dadd( 70.4606, -41.1547, -69.3386, 0.12 ) }
    dend_93 { pt3dadd( 70.5835, -40.8035, -70.2831, 0.12 ) }
    dend_93 { pt3dadd( 70.6668, -40.7011, -70.8801, 0.6 ) }
    dend_93 { pt3dadd( 71.1314, -40.6191, -73.7328, 0.12 ) }
    dend_93 { pt3dadd( 71.802, -40.9739, -77.131, 0.12 ) }
    dend_93 { pt3dadd( 72.0314, -41.1464, -77.7902, 0.48 ) }
    dend_93 { pt3dadd( 72.5708, -41.591, -78.8999, 0.48 ) }
    dend_93 { pt3dadd( 73.6323, -42.526, -80.8518, 0.6 ) }
    dend_93 { pt3dadd( 73.7907, -42.6799, -81.1072, 0.6 ) }
    dend_93 { pt3dadd( 74.2337, -43.1549, -81.6148, 0.12 ) }
    dend_93 { pt3dadd( 76.5997, -45.425, -83.2903, 0.12 ) }
    dend_93 { pt3dadd( 76.9586, -45.698, -83.5022, 0.36 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 30/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 69.9232, -44.8989, -64.4104, 0.12 ) }
    dend_92 { pt3dadd( 69.8782, -46.6501, -63.9689, 0.12 ) }
    dend_92 { pt3dadd( 69.823, -48.7987, -63.4272, 0.12 ) }
    dend_92 { pt3dadd( 69.7905, -50.0611, -63.1089, 0.12 ) }
    dend_92 { pt3dadd( 69.7723, -50.7705, -62.9301, 0.12 ) }
    dend_92 { pt3dadd( 69.7635, -51.1112, -62.8441, 0.12 ) }
    dend_92 { pt3dadd( 69.7606, -51.2248, -62.8155, 0.24 ) }
    // Section: dend_89, id: dend_89, parent: dend_87 (entry count 37/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( 158.712, 60.6889, -107.191, 0.12 ) }
    dend_89 { pt3dadd( 159.273, 60.8528, -107.671, 0.12 ) }
    dend_89 { pt3dadd( 160.254, 61.0805, -108.419, 0.12 ) }
    dend_89 { pt3dadd( 160.665, 61.1663, -108.706, 1.2 ) }
    dend_89 { pt3dadd( 162.176, 61.3315, -109.598, 0.12 ) }
    dend_89 { pt3dadd( 163.044, 61.3703, -110.144, 0.12 ) }
    dend_89 { pt3dadd( 163.857, 61.3794, -110.669, 0.12 ) }
    dend_89 { pt3dadd( 163.957, 61.3689, -110.734, 0.6 ) }
    dend_89 { pt3dadd( 164.184, 61.3185, -110.867, 0.12 ) }
    dend_89 { pt3dadd( 165.324, 61.0549, -111.425, 0.12 ) }
    dend_89 { pt3dadd( 166.757, 60.7868, -111.897, 0.12 ) }
    dend_89 { pt3dadd( 166.877, 60.7644, -111.941, 0.36 ) }
    dend_89 { pt3dadd( 167.032, 60.7323, -112.003, 0.12 ) }
    dend_89 { pt3dadd( 167.726, 60.5956, -112.267, 0.12 ) }
    dend_89 { pt3dadd( 168.853, 60.4029, -112.649, 0.12 ) }
    dend_89 { pt3dadd( 169.596, 60.3602, -112.79, 0.72 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 53/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 158.712, 60.6889, -107.191, 0.12 ) }
    dend_88 { pt3dadd( 159.021, 60.0447, -107.108, 0.12 ) }
    dend_88 { pt3dadd( 159.34, 59.379, -107.022, 0.12 ) }
    dend_88 { pt3dadd( 160.002, 58.003, -106.844, 0.12 ) }
    dend_88 { pt3dadd( 160.355, 57.2674, -106.748, 0.36 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 58/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -95.4994, -86.0011, -58.8478, 0.12 ) }
    dend_83 { pt3dadd( -95.6624, -86.6146, -58.8664, 0.12 ) }
    dend_83 { pt3dadd( -96.1815, -88.3217, -59.7297, 0.12 ) }
    dend_83 { pt3dadd( -96.3, -88.7427, -60.0255, 1.08 ) }
    dend_83 { pt3dadd( -96.4318, -89.2109, -60.3811, 0.12 ) }
    dend_83 { pt3dadd( -96.6148, -89.8676, -60.8785, 0.12 ) }
    dend_83 { pt3dadd( -96.8337, -90.6533, -61.4611, 0.84 ) }
    dend_83 { pt3dadd( -97.6389, -93.3502, -63.6841, 0.12 ) }
    dend_83 { pt3dadd( -97.814, -94.0121, -64.3508, 0.12 ) }
    dend_83 { pt3dadd( -97.8622, -94.2934, -64.6583, 0.12 ) }
    dend_83 { pt3dadd( -97.8958, -94.6976, -65.107, 0.72 ) }
    dend_83 { pt3dadd( -97.8868, -94.9533, -65.3857, 0.12 ) }
    dend_83 { pt3dadd( -97.8386, -95.285, -65.7064, 0.12 ) }
    dend_83 { pt3dadd( -97.5923, -96.7301, -66.6182, 0.84 ) }
    dend_83 { pt3dadd( -97.4197, -97.5135, -67.1126, 0.12 ) }
    dend_83 { pt3dadd( -97.2327, -98.2179, -67.5667, 0.12 ) }
    dend_83 { pt3dadd( -97.1853, -98.3555, -67.6482, 0.36 ) }
    dend_83 { pt3dadd( -97.0761, -98.6447, -67.8404, 0.12 ) }
    dend_83 { pt3dadd( -96.7668, -99.4899, -68.3992, 0.12 ) }
    dend_83 { pt3dadd( -96.5979, -99.9759, -68.6873, 0.12 ) }
    dend_83 { pt3dadd( -96.3071, -100.833, -69.1708, 1.08 ) }
    dend_83 { pt3dadd( -95.9182, -101.968, -69.9184, 0.12 ) }
    dend_83 { pt3dadd( -95.3841, -103.627, -70.981, 0.12 ) }
    dend_83 { pt3dadd( -95.2265, -104.118, -71.2899, 0.12 ) }
    dend_83 { pt3dadd( -95.059, -104.632, -71.607, 0.12 ) }
    dend_83 { pt3dadd( -94.786, -105.586, -72.1205, 1.08 ) }
    dend_83 { pt3dadd( -94.4062, -106.998, -72.74, 0.12 ) }
    dend_83 { pt3dadd( -94.0092, -108.625, -73.3048, 0.12 ) }
    dend_83 { pt3dadd( -93.9109, -109.014, -73.4112, 0.36 ) }
    dend_83 { pt3dadd( -93.8716, -109.17, -73.4535, 0.12 ) }
    dend_83 { pt3dadd( -93.5368, -110.49, -73.7759, 0.12 ) }
    dend_83 { pt3dadd( -93.412, -110.962, -73.8702, 0.84 ) }
    dend_83 { pt3dadd( -93.0931, -112.094, -74.0264, 0.96 ) }
    dend_83 { pt3dadd( -92.8055, -113.016, -74.1624, 0.12 ) }
    dend_83 { pt3dadd( -92.4514, -114.139, -74.3201, 0.12 ) }
    dend_83 { pt3dadd( -92.0163, -115.469, -74.4867, 0.12 ) }
    dend_83 { pt3dadd( -91.7298, -116.297, -74.6072, 0.12 ) }
    dend_83 { pt3dadd( -91.578, -116.794, -74.6803, 0.48 ) }
    dend_83 { pt3dadd( -91.5066, -117.044, -74.714, 0.12 ) }
    dend_83 { pt3dadd( -91.302, -117.824, -74.7987, 0.12 ) }
    dend_83 { pt3dadd( -91.0704, -118.895, -74.9413, 1.2 ) }
    dend_83 { pt3dadd( -90.9499, -119.675, -75.0544, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_83 { pt3dadd( -90.7944, -121.17, -75.2644, 0.12 ) }
    dend_83 { pt3dadd( -90.7055, -122.262, -75.4021, 0.12 ) }
    dend_83 { pt3dadd( -90.6879, -122.494, -75.4266, 0.36 ) }
    dend_83 { pt3dadd( -90.6646, -122.823, -75.4536, 0.12 ) }
    dend_83 { pt3dadd( -90.6278, -123.397, -75.4811, 0.12 ) }
    dend_83 { pt3dadd( -90.5089, -124.67, -75.4819, 0.72 ) }
    dend_83 { pt3dadd( -90.4414, -125.194, -75.4818, 0.12 ) }
    dend_83 { pt3dadd( -90.3156, -126.027, -75.4741, 0.12 ) }
    dend_83 { pt3dadd( -90.2407, -126.39, -75.4685, 0.48 ) }
    dend_83 { pt3dadd( -90.1541, -126.741, -75.4618, 0.12 ) }
    dend_83 { pt3dadd( -89.7724, -128.129, -75.4305, 0.12 ) }
    dend_83 { pt3dadd( -89.5329, -129.003, -75.4092, 0.48 ) }
    dend_83 { pt3dadd( -89.4047, -129.529, -75.3982, 0.12 ) }
    dend_83 { pt3dadd( -88.9581, -131.461, -75.3649, 0.12 ) }
    dend_83 { pt3dadd( -88.8572, -131.933, -75.3591, 0.6 ) }
    dend_83 { pt3dadd( -88.7926, -132.288, -75.3563, 0.12 ) }
    dend_83 { pt3dadd( -88.5967, -133.557, -75.3524, 0.12 ) }
    dend_83 { pt3dadd( -88.5112, -134.496, -75.3556, 1.08 ) }
    dend_83 { pt3dadd( -88.4985, -135.015, -75.361, 0.12 ) }
    dend_83 { pt3dadd( -88.5816, -136.412, -75.3754, 0.12 ) }
    dend_83 { pt3dadd( -88.6266, -136.892, -75.3798, 0.48 ) }
    dend_83 { pt3dadd( -88.6423, -137.008, -75.3806, 0.12 ) }
    dend_83 { pt3dadd( -88.9988, -139.118, -75.3914, 0.12 ) }
    dend_83 { pt3dadd( -89.0639, -139.443, -75.3923, 0.84 ) }
    dend_83 { pt3dadd( -89.3332, -140.626, -75.3923, 0.84 ) }
    dend_83 { pt3dadd( -89.4734, -141.195, -75.3923, 0.12 ) }
    dend_83 { pt3dadd( -89.9632, -143.162, -75.3923, 0.12 ) }
    dend_83 { pt3dadd( -90.0503, -143.522, -75.3923, 0.36 ) }
    dend_83 { pt3dadd( -90.1045, -143.77, -75.3923, 0.12 ) }
    dend_83 { pt3dadd( -90.3048, -144.811, -75.3923, 0.12 ) }
    dend_83 { pt3dadd( -90.3048, -144.811, -75.3923, 0.36 ) }
    dend_83 { pt3dadd( -90.3261, -144.975, -75.3923, 0.12 ) }
    dend_83 { pt3dadd( -90.5701, -147.31, -75.3923, 0.12 ) }
    dend_83 { pt3dadd( -90.6339, -147.999, -75.3923, 0.48 ) }
    dend_83 { pt3dadd( -90.6472, -148.164, -75.3923, 0.12 ) }
    dend_83 { pt3dadd( -90.736, -149.439, -75.3923, 0.12 ) }
    dend_83 { pt3dadd( -90.7577, -149.808, -75.3923, 0.48 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 37/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -95.4994, -86.0011, -58.8478, 0.12 ) }
    dend_82 { pt3dadd( -96.2879, -86.2834, -58.8478, 0.12 ) }
    dend_82 { pt3dadd( -97.117, -86.5803, -58.8478, 0.12 ) }
    dend_82 { pt3dadd( -97.3689, -86.6704, -58.8478, 0.48 ) }
    dend_82 { pt3dadd( -97.7251, -86.798, -58.8478, 0.12 ) }
    dend_82 { pt3dadd( -98.5374, -87.0888, -58.8478, 0.12 ) }
    dend_82 { pt3dadd( -98.6501, -87.1291, -58.8478, 0.48 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 44/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 15.4496, 85.7534, -71.8568, 0.12 ) }
    dend_73 { pt3dadd( 15.8887, 86.7822, -72.8748, 0.12 ) }
    dend_73 { pt3dadd( 16.1915, 87.2307, -73.4496, 0.12 ) }
    dend_73 { pt3dadd( 16.3625, 87.4486, -73.7041, 0.48 ) }
    dend_73 { pt3dadd( 16.7604, 87.9797, -74.2073, 0.12 ) }
    dend_73 { pt3dadd( 17.2676, 88.7514, -74.9084, 0.12 ) }
    dend_73 { pt3dadd( 17.5746, 89.2677, -75.3728, 0.6 ) }
    dend_73 { pt3dadd( 18.2393, 90.4063, -76.4164, 0.12 ) }
    dend_73 { pt3dadd( 18.6417, 91.1531, -77.1059, 0.12 ) }
    dend_73 { pt3dadd( 19.0367, 92.0376, -77.8587, 0.12 ) }
    dend_73 { pt3dadd( 19.3972, 93.0637, -78.6485, 0.6 ) }
    dend_73 { pt3dadd( 19.5963, 93.775, -79.109, 0.12 ) }
    dend_73 { pt3dadd( 19.9622, 95.3824, -80.0241, 0.12 ) }
    dend_73 { pt3dadd( 20.1483, 96.4533, -80.5129, 0.12 ) }
    dend_73 { pt3dadd( 20.2776, 97.5054, -80.9977, 0.12 ) }
    dend_73 { pt3dadd( 20.3351, 97.9393, -81.186, 0.12 ) }
    dend_73 { pt3dadd( 20.5052, 98.9665, -81.5629, 0.12 ) }
    dend_73 { pt3dadd( 20.6113, 99.6282, -81.7788, 0.12 ) }
    dend_73 { pt3dadd( 20.7519, 100.548, -82.0422, 0.12 ) }
    dend_73 { pt3dadd( 21.1325, 102.938, -82.8592, 0.12 ) }
    dend_73 { pt3dadd( 21.2696, 103.711, -83.1758, 0.72 ) }
    dend_73 { pt3dadd( 21.3917, 104.377, -83.4885, 1.08 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 66/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 15.4496, 85.7534, -71.8568, 0.36 ) }
    dend_72 { pt3dadd( 16.9356, 86.5947, -73.29, 0.36 ) }
    dend_72 { pt3dadd( 17.38, 86.9443, -73.7286, 0.12 ) }
    dend_72 { pt3dadd( 17.6479, 87.2222, -74.0277, 0.84 ) }
    dend_72 { pt3dadd( 17.9402, 87.5153, -74.3288, 1.08 ) }
    dend_72 { pt3dadd( 18.6419, 88.2229, -75.0752, 0.12 ) }
    dend_72 { pt3dadd( 19.4518, 89.0572, -75.9423, 0.12 ) }
    dend_72 { pt3dadd( 19.7619, 89.4425, -76.2916, 0.72 ) }
    dend_72 { pt3dadd( 20.3271, 90.2783, -77.0255, 0.12 ) }
    dend_72 { pt3dadd( 20.7916, 91.0205, -77.6465, 0.12 ) }
    dend_72 { pt3dadd( 21.2916, 91.8112, -78.2632, 0.6 ) }
    dend_72 { pt3dadd( 21.4718, 92.0785, -78.4343, 0.84 ) }
    dend_72 { pt3dadd( 21.9579, 92.6853, -78.7671, 0.12 ) }
    dend_72 { pt3dadd( 22.5426, 93.3291, -79.1401, 0.12 ) }
    dend_72 { pt3dadd( 23.0151, 93.8256, -79.4758, 0.84 ) }
    dend_72 { pt3dadd( 23.3965, 94.248, -79.7747, 1.32 ) }
    dend_72 { pt3dadd( 24.0886, 95.0131, -80.3222, 0.24 ) }
    dend_72 { pt3dadd( 24.5504, 95.4955, -80.686, 0.24 ) }
    dend_72 { pt3dadd( 25.7572, 96.7005, -81.5996, 0.12 ) }
    dend_72 { pt3dadd( 26.7575, 97.7047, -82.4049, 0.12 ) }
    dend_72 { pt3dadd( 27.324, 98.3405, -82.9397, 0.84 ) }
    dend_72 { pt3dadd( 27.5856, 98.6723, -83.2278, 0.12 ) }
    dend_72 { pt3dadd( 28.0386, 99.309, -83.8132, 0.12 ) }
    dend_72 { pt3dadd( 28.366, 99.8085, -84.2832, 0.48 ) }
    dend_72 { pt3dadd( 28.4944, 100.044, -84.4844, 0.12 ) }
    dend_72 { pt3dadd( 29.0202, 101.16, -85.5134, 0.12 ) }
    dend_72 { pt3dadd( 29.2814, 101.743, -86.1369, 0.72 ) }
    dend_72 { pt3dadd( 29.5923, 102.55, -87.029, 0.84 ) }
    dend_72 { pt3dadd( 29.8099, 103.389, -87.9142, 0.12 ) }
    dend_72 { pt3dadd( 29.9336, 103.953, -88.517, 1.2 ) }
    dend_72 { pt3dadd( 30.1594, 105.038, -89.6289, 0.12 ) }
    dend_72 { pt3dadd( 30.3616, 105.956, -90.5319, 0.12 ) }
    dend_72 { pt3dadd( 30.4816, 106.446, -91.0035, 0.12 ) }
    dend_72 { pt3dadd( 30.7404, 107.321, -91.8839, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_72 { pt3dadd( 31.027, 108.102, -92.6865, 0.48 ) }
    dend_72 { pt3dadd( 31.2035, 108.436, -93.0467, 0.48 ) }
    dend_72 { pt3dadd( 31.7215, 109.134, -93.7989, 0.48 ) }
    dend_72 { pt3dadd( 31.8493, 109.263, -93.9681, 0.6 ) }
    dend_72 { pt3dadd( 32.5982, 109.873, -94.9387, 0.24 ) }
    dend_72 { pt3dadd( 33.0633, 110.224, -95.5243, 0.24 ) }
    dend_72 { pt3dadd( 33.4326, 110.503, -95.9706, 0.36 ) }
    dend_72 { pt3dadd( 33.9267, 110.887, -96.552, 0.36 ) }
    dend_72 { pt3dadd( 35.2166, 112.126, -98.1889, 1.08 ) }
    dend_72 { pt3dadd( 35.6966, 112.666, -98.868, 0.12 ) }
    dend_72 { pt3dadd( 35.9626, 113.04, -99.3146, 0.12 ) }
    dend_72 { pt3dadd( 36.1872, 113.432, -99.7686, 0.12 ) }
    dend_72 { pt3dadd( 36.4182, 113.951, -100.314, 0.12 ) }
    dend_72 { pt3dadd( 36.7773, 114.992, -101.293, 0.84 ) }
    dend_72 { pt3dadd( 37.0074, 115.943, -102.027, 0.12 ) }
    dend_72 { pt3dadd( 37.1773, 117.196, -102.985, 0.12 ) }
    dend_72 { pt3dadd( 37.2086, 117.821, -103.472, 0.24 ) }
    dend_72 { pt3dadd( 37.1813, 118.353, -103.863, 0.24 ) }
    dend_72 { pt3dadd( 37.0787, 119.222, -104.492, 0.24 ) }
    dend_72 { pt3dadd( 36.9756, 120.103, -105.029, 0.72 ) }
    dend_72 { pt3dadd( 36.7548, 121.212, -105.906, 0.12 ) }
    dend_72 { pt3dadd( 36.6708, 121.476, -106.158, 0.12 ) }
    dend_72 { pt3dadd( 36.4611, 122.122, -106.819, 0.12 ) }
    dend_72 { pt3dadd( 36.2876, 122.673, -107.615, 0.12 ) }
    dend_72 { pt3dadd( 36.1086, 123.322, -108.697, 0.6 ) }
    dend_72 { pt3dadd( 35.8056, 125.009, -111.661, 0.12 ) }
    dend_72 { pt3dadd( 35.7713, 125.553, -112.607, 0.12 ) }
    dend_72 { pt3dadd( 35.7962, 126.06, -113.605, 1.44 ) }
    dend_72 { pt3dadd( 36.0584, 127.996, -117.46, 0.12 ) }
    dend_72 { pt3dadd( 36.0901, 128.221, -117.896, 0.12 ) }
    dend_72 { pt3dadd( 36.1416, 128.637, -118.692, 0.36 ) }
    dend_72 { pt3dadd( 36.2564, 129.581, -120.32, 0.36 ) }
    dend_72 { pt3dadd( 36.3913, 131.176, -123.141, 0.12 ) }
    dend_72 { pt3dadd( 36.3837, 131.846, -124.263, 0.12 ) }
    dend_72 { pt3dadd( 36.3492, 132.291, -124.868, 0.84 ) }
    dend_72 { pt3dadd( 36.2814, 132.713, -125.44, 0.84 ) }
    dend_72 { pt3dadd( 36.0104, 133.497, -126.456, 0.12 ) }
    dend_72 { pt3dadd( 35.8408, 133.814, -126.835, 0.12 ) }
    dend_72 { pt3dadd( 35.6645, 134.139, -127.156, 0.48 ) }
    dend_72 { pt3dadd( 35.3264, 134.938, -128.013, 0.12 ) }
    dend_72 { pt3dadd( 35.2064, 135.512, -128.599, 0.12 ) }
    dend_72 { pt3dadd( 35.1955, 136.05, -129.135, 0.6 ) }
    dend_72 { pt3dadd( 35.4586, 137.532, -130.477, 0.12 ) }
    dend_72 { pt3dadd( 35.6251, 138.05, -130.956, 0.12 ) }
    dend_72 { pt3dadd( 35.7791, 138.435, -131.379, 0.12 ) }
    dend_72 { pt3dadd( 35.9795, 138.876, -131.874, 0.12 ) }
    dend_72 { pt3dadd( 36.3298, 139.486, -132.608, 0.12 ) }
    dend_72 { pt3dadd( 36.6604, 139.944, -133.159, 0.12 ) }
    dend_72 { pt3dadd( 37.1727, 140.552, -133.88, 0.6 ) }
    dend_72 { pt3dadd( 38.0847, 141.65, -135.211, 0.12 ) }
    dend_72 { pt3dadd( 38.3456, 142.012, -135.622, 0.12 ) }
    dend_72 { pt3dadd( 38.6238, 142.481, -136.095, 0.12 ) }
    dend_72 { pt3dadd( 38.795, 142.829, -136.392, 0.72 ) }
    dend_72 { pt3dadd( 39.1405, 143.592, -137.034, 0.12 ) }
    dend_72 { pt3dadd( 39.4963, 144.344, -137.547, 0.12 ) }
    dend_72 { pt3dadd( 39.6768, 144.72, -137.746, 0.6 ) }
    dend_72 { pt3dadd( 39.8587, 145.069, -137.964, 0.12 ) }
    dend_72 { pt3dadd( 39.9632, 145.28, -138.103, 0.12 ) }
    dend_72 { pt3dadd( 40.5676, 146.517, -138.875, 0.12 ) }
    dend_72 { pt3dadd( 40.8499, 147.044, -139.172, 0.12 ) }
    dend_72 { pt3dadd( 41.1704, 147.524, -139.441, 0.12 ) }
    dend_72 { pt3dadd( 41.6887, 148.213, -139.89, 0.12 ) }
    dend_72 { pt3dadd( 41.9264, 148.505, -140.088, 0.12 ) }
    dend_72 { pt3dadd( 42.3604, 149.12, -140.454, 0.12 ) }
    dend_72 { pt3dadd( 42.7476, 149.737, -140.742, 0.12 ) }
    dend_72 { pt3dadd( 42.9107, 150.072, -140.948, 0.36 ) }
    dend_72 { pt3dadd( 43.3773, 151.251, -141.731, 0.12 ) }
    dend_72 { pt3dadd( 43.4782, 151.596, -141.958, 0.12 ) }
    dend_72 { pt3dadd( 43.7466, 152.651, -142.688, 0.12 ) }
    dend_72 { pt3dadd( 43.8961, 153.253, -143.11, 1.2 ) }
    dend_72 { pt3dadd( 44.2709, 154.839, -144.137, 0.12 ) }
    dend_72 { pt3dadd( 44.4169, 155.423, -144.459, 0.12 ) }
    dend_72 { pt3dadd( 44.6473, 156.213, -144.821, 0.12 ) }
    dend_72 { pt3dadd( 44.6473, 156.213, -144.821, 0.48 ) }
    dend_72 { pt3dadd( 44.8844, 156.773, -145.09, 0.12 ) }
    dend_72 { pt3dadd( 45.1234, 157.315, -145.316, 0.12 ) }
    dend_72 { pt3dadd( 45.3347, 157.742, -145.441, 0.12 ) }
    dend_72 { pt3dadd( 45.6002, 158.219, -145.65, 0.12 ) }
    dend_72 { pt3dadd( 45.9568, 158.802, -145.952, 0.12 ) }
    dend_72 { pt3dadd( 46.2289, 159.293, -146.216, 0.12 ) }
    dend_72 { pt3dadd( 46.5794, 159.963, -146.595, 0.12 ) }
    dend_72 { pt3dadd( 46.6736, 160.137, -146.725, 0.48 ) }
    dend_72 { pt3dadd( 47.0181, 160.754, -147.207, 0.12 ) }
    dend_72 { pt3dadd( 47.4748, 161.479, -147.727, 0.12 ) }
    dend_72 { pt3dadd( 47.6643, 161.743, -147.915, 0.48 ) }
    dend_72 { pt3dadd( 47.8865, 162.043, -148.122, 0.48 ) }
    dend_72 { pt3dadd( 48.6916, 163.136, -148.907, 0.12 ) }
    dend_72 { pt3dadd( 49.2914, 163.899, -149.446, 0.12 ) }
    dend_72 { pt3dadd( 49.9669, 164.698, -149.963, 0.12 ) }
    dend_72 { pt3dadd( 50.2034, 164.94, -150.147, 0.48 ) }
    // Section: dend_70, id: dend_70, parent: dend_64 (entry count 90/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -12.0, 102.33, -113.067, 0.24 ) }
    dend_70 { pt3dadd( -10.9181, 102.597, -114.208, 0.24 ) }
    dend_70 { pt3dadd( -10.4017, 102.725, -114.753, 0.24 ) }
    dend_70 { pt3dadd( -9.90704, 102.847, -115.275, 0.24 ) }
    dend_70 { pt3dadd( -9.38356, 102.976, -115.828, 0.24 ) }
    dend_70 { pt3dadd( -8.73584, 103.136, -116.511, 0.6 ) }
    dend_70 { pt3dadd( -8.41058, 103.216, -116.855, 0.12 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 97/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -12.0, 102.33, -113.067, 0.12 ) }
    dend_65 { pt3dadd( -12.0296, 102.897, -114.019, 0.12 ) }
    dend_65 { pt3dadd( -11.952, 103.222, -114.604, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_65 { pt3dadd( -11.8197, 103.532, -115.098, 0.12 ) }
    dend_65 { pt3dadd( -11.41, 104.492, -116.627, 0.72 ) }
    dend_65 { pt3dadd( -11.2264, 104.922, -117.312, 0.12 ) }
    dend_65 { pt3dadd( -11.0362, 105.368, -118.022, 0.12 ) }
    dend_65 { pt3dadd( -10.9794, 105.523, -118.316, 0.12 ) }
    dend_65 { pt3dadd( -10.7592, 106.077, -119.646, 0.84 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 6/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -44.1172, -59.4545, 15.0802, 0.12 ) }
    dend_58 { pt3dadd( -44.1771, -58.172, 15.12, 0.12 ) }
    dend_58 { pt3dadd( -44.2269, -57.1044, 15.1531, 0.12 ) }
    dend_58 { pt3dadd( -45.7647, -47.6336, 16.9643, 0.12 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 10/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -44.1172, -59.4545, 15.0802, 0.12 ) }
    dend_57 { pt3dadd( -44.9271, -59.3354, 15.1399, 0.12 ) }
    dend_57 { pt3dadd( -46.2782, -59.1367, 15.2396, 0.12 ) }
    dend_57 { pt3dadd( -48.2999, -58.8394, 15.3887, 0.12 ) }
    dend_57 { pt3dadd( -57.777, -56.827, 17.8227, 0.12 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 15/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -135.229, 11.4029, 70.4932, 0.12 ) }
    dend_55 { pt3dadd( -137.827, 17.6818, 77.6886, 0.12 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 17/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -135.229, 11.4029, 70.4932, 0.12 ) }
    dend_54 { pt3dadd( -144.798, 8.60962, 70.9671, 0.12 ) }
    dend_54 { pt3dadd( -154.486, 6.28018, 70.3134, 0.12 ) }
    dend_54 { pt3dadd( -163.993, 3.3802, 69.4336, 0.12 ) }
    dend_54 { pt3dadd( -173.38, 0.774305, 67.2522, 0.12 ) }
    dend_54 { pt3dadd( -182.742, -1.83698, 64.9821, 0.12 ) }
    dend_54 { pt3dadd( -191.798, -5.56434, 63.1452, 0.12 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 24/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -13.3943, -43.505, -2.06388, 0.12 ) }
    dend_51 { pt3dadd( -14.7639, -42.9199, -2.20608, 0.12 ) }
    dend_51 { pt3dadd( -15.9832, -42.399, -2.33267, 0.12 ) }
    dend_51 { pt3dadd( -16.8654, -42.0222, -2.42426, 0.12 ) }
    dend_51 { pt3dadd( -18.6575, -41.2566, -2.61032, 0.12 ) }
    dend_51 { pt3dadd( -19.1086, -41.0639, -2.65716, 0.12 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 30/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -13.3943, -43.505, -2.06388, 0.6 ) }
    dend_48 { pt3dadd( -13.6725, -44.4753, -1.68817, 0.6 ) }
    dend_48 { pt3dadd( -13.998, -45.7783, -1.15671, 0.6 ) }
    dend_48 { pt3dadd( -14.3552, -47.4124, -0.485954, 0.48 ) }
    dend_48 { pt3dadd( -14.6771, -49.1978, 0.237845, 0.48 ) }
    dend_48 { pt3dadd( -14.9187, -50.6618, 0.814922, 0.48 ) }
    dend_48 { pt3dadd( -15.0666, -51.5362, 1.14646, 0.48 ) }
    dend_48 { pt3dadd( -15.1752, -52.1544, 1.39912, 0.48 ) }
    dend_48 { pt3dadd( -15.2542, -52.4935, 1.53807, 0.12 ) }
    dend_48 { pt3dadd( -15.4048, -52.9518, 1.66276, 0.12 ) }
    dend_48 { pt3dadd( -15.6582, -53.472, 1.62159, 0.48 ) }
    dend_48 { pt3dadd( -15.9784, -54.0345, 1.43445, 0.6 ) }
    dend_48 { pt3dadd( -16.4028, -54.6865, 1.14993, 0.6 ) }
    dend_48 { pt3dadd( -17.1133, -55.7057, 0.654558, 0.6 ) }
    dend_48 { pt3dadd( -17.7675, -56.6772, 0.179119, 0.12 ) }
    dend_48 { pt3dadd( -18.2687, -57.4683, -0.197046, 0.24 ) }
    dend_48 { pt3dadd( -18.8996, -58.5771, -0.619546, 0.48 ) }
    dend_48 { pt3dadd( -19.1774, -59.1238, -0.780819, 0.48 ) }
    dend_48 { pt3dadd( -19.3821, -59.5905, -0.867444, 0.6 ) }
    dend_48 { pt3dadd( -19.7587, -60.5689, -0.970091, 0.6 ) }
    dend_48 { pt3dadd( -20.0051, -61.2687, -0.974562, 0.6 ) }
    dend_48 { pt3dadd( -20.4906, -62.7001, -0.846101, 0.36 ) }
    dend_48 { pt3dadd( -20.5704, -62.9459, -0.800706, 0.48 ) }
    dend_48 { pt3dadd( -20.796, -63.7201, -0.652313, 0.48 ) }
    dend_48 { pt3dadd( -20.9834, -64.4803, -0.459147, 0.36 ) }
    dend_48 { pt3dadd( -21.2001, -65.4423, -0.0866901, 0.36 ) }
    dend_48 { pt3dadd( -21.354, -66.3456, 0.32569, 0.84 ) }
    dend_48 { pt3dadd( -21.4231, -66.8816, 0.585398, 0.96 ) }
    dend_48 { pt3dadd( -21.533, -67.8087, 1.0636, 0.96 ) }
    dend_48 { pt3dadd( -21.6531, -68.8668, 1.625, 0.12 ) }
    dend_48 { pt3dadd( -21.8126, -70.0413, 2.21455, 0.6 ) }
    dend_48 { pt3dadd( -21.9957, -70.9976, 2.61924, 0.24 ) }
    dend_48 { pt3dadd( -22.105, -71.3374, 2.72231, 0.72 ) }
    dend_48 { pt3dadd( -22.4962, -72.1685, 2.91539, 1.08 ) }
    dend_48 { pt3dadd( -22.9326, -72.8593, 3.01915, 1.08 ) }
    dend_48 { pt3dadd( -23.6191, -73.8592, 3.0781, 1.08 ) }
    dend_48 { pt3dadd( -24.1998, -74.6747, 3.09435, 1.08 ) }
    dend_48 { pt3dadd( -25.3196, -76.2068, 3.1364, 0.72 ) }
    dend_48 { pt3dadd( -25.9462, -77.0979, 3.16455, 0.36 ) }
    dend_48 { pt3dadd( -26.5028, -77.9361, 3.23432, 0.36 ) }
    dend_48 { pt3dadd( -27.188, -79.0417, 3.3696, 0.36 ) }
    dend_48 { pt3dadd( -27.827, -80.1876, 3.54499, 0.72 ) }
    dend_48 { pt3dadd( -28.3836, -81.2996, 3.7342, 0.96 ) }
    dend_48 { pt3dadd( -28.8153, -82.2619, 3.93956, 0.96 ) }
    dend_48 { pt3dadd( -29.4348, -83.7039, 4.28117, 0.12 ) }
    dend_48 { pt3dadd( -29.7823, -84.5206, 4.48541, 0.12 ) }
    dend_48 { pt3dadd( -30.0438, -85.1351, 4.64043, 0.84 ) }
    dend_48 { pt3dadd( -30.6072, -86.5893, 4.97947, 0.84 ) }
    dend_48 { pt3dadd( -30.9901, -87.6382, 5.20819, 0.12 ) }
    dend_48 { pt3dadd( -31.3871, -88.7207, 5.40908, 0.12 ) }
    dend_48 { pt3dadd( -31.7275, -89.6092, 5.52636, 0.72 ) }
    dend_48 { pt3dadd( -32.1177, -90.6011, 5.64949, 0.12 ) }
    dend_48 { pt3dadd( -32.558, -91.5861, 5.74718, 0.12 ) }
    dend_48 { pt3dadd( -32.6203, -91.7066, 5.75859, 0.12 ) }
    dend_48 { pt3dadd( -33.0428, -92.3678, 5.80892, 0.12 ) }
    dend_48 { pt3dadd( -33.5005, -92.9069, 5.86562, 0.48 ) }
    dend_48 { pt3dadd( -34.1788, -93.5743, 5.95169, 0.6 ) }
    dend_48 { pt3dadd( -35.4671, -94.6779, 6.11119, 0.6 ) }
    dend_48 { pt3dadd( -36.5037, -95.5161, 6.2386, 0.24 ) }
    dend_48 { pt3dadd( -37.0971, -96.0347, 6.31528, 0.24 ) }
    dend_48 { pt3dadd( -37.8947, -96.785, 6.42808, 0.24 ) }
    dend_48 { pt3dadd( -37.9802, -96.8662, 6.43976, 0.12 ) }
    dend_48 { pt3dadd( -38.6054, -97.4086, 6.5287, 0.12 ) }
    dend_48 { pt3dadd( -38.8626, -97.6218, 6.56294, 1.08 ) }
    dend_48 { pt3dadd( -40.1241, -98.6895, 6.69039, 0.36 ) }
    dend_48 { pt3dadd( -40.2095, -98.771, 6.70078, 0.12 ) }
    dend_48 { pt3dadd( -41.1701, -99.8161, 6.83822, 0.12 ) }
    dend_48 { pt3dadd( -41.836, -100.513, 6.93854, 0.84 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 98/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 6.04969, -53.2822, 14.0493, 0.48 ) }
    dend_42 { pt3dadd( 5.18865, -52.6914, 13.6193, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_42 { pt3dadd( 4.34715, -52.0888, 13.277, 0.48 ) }
    dend_42 { pt3dadd( 3.0916, -51.2897, 12.7283, 0.48 ) }
    dend_42 { pt3dadd( 2.25541, -50.8206, 12.361, 0.72 ) }
    dend_42 { pt3dadd( 1.4135, -50.4222, 11.9364, 0.36 ) }
    dend_42 { pt3dadd( 0.624979, -50.1371, 11.4603, 0.36 ) }
    dend_42 { pt3dadd( -0.280824, -50.0107, 10.8501, 0.36 ) }
    dend_42 { pt3dadd( -1.80751, -50.1474, 9.74256, 0.36 ) }
    dend_42 { pt3dadd( -2.27954, -50.283, 9.39928, 0.36 ) }
    dend_42 { pt3dadd( -3.43936, -50.8845, 8.49644, 0.96 ) }
    dend_42 { pt3dadd( -4.41722, -51.6529, 7.59651, 0.36 ) }
    dend_42 { pt3dadd( -5.06213, -52.3838, 6.92728, 0.36 ) }
    dend_42 { pt3dadd( -5.46694, -52.9843, 6.38694, 0.6 ) }
    dend_42 { pt3dadd( -5.63824, -53.2544, 6.14718, 0.12 ) }
    dend_42 { pt3dadd( -6.04355, -53.8121, 5.64214, 0.12 ) }
    dend_42 { pt3dadd( -6.89824, -54.7754, 4.74801, 0.72 ) }
    dend_42 { pt3dadd( -7.67175, -55.4027, 4.1126, 0.96 ) }
    dend_42 { pt3dadd( -9.59426, -56.4338, 2.95107, 0.48 ) }
    dend_42 { pt3dadd( -10.5241, -56.7953, 2.5198, 0.48 ) }
    dend_42 { pt3dadd( -11.5645, -57.1106, 2.16353, 0.96 ) }
    dend_42 { pt3dadd( -12.3138, -57.3146, 1.99476, 0.12 ) }
    dend_42 { pt3dadd( -14.1672, -57.7502, 1.73728, 0.12 ) }
    dend_42 { pt3dadd( -15.8421, -58.075, 1.5914, 0.12 ) }
    dend_42 { pt3dadd( -17.4934, -58.3852, 1.56118, 0.12 ) }
    dend_42 { pt3dadd( -18.979, -58.6734, 1.54363, 0.12 ) }
    dend_42 { pt3dadd( -21.4967, -59.1844, 1.51494, 0.12 ) }
    dend_42 { pt3dadd( -22.9498, -59.4676, 1.52781, 0.12 ) }
    dend_42 { pt3dadd( -24.3692, -59.6824, 1.6485, 0.24 ) }
    dend_42 { pt3dadd( -25.1522, -59.7212, 1.78613, 0.12 ) }
    dend_42 { pt3dadd( -26.5701, -59.5975, 2.20658, 0.12 ) }
    dend_42 { pt3dadd( -27.0458, -59.458, 2.40966, 0.12 ) }
    dend_42 { pt3dadd( -27.7128, -58.9584, 2.82313, 0.36 ) }
    dend_42 { pt3dadd( -28.8743, -57.5766, 3.71174, 0.12 ) }
    dend_42 { pt3dadd( -29.5971, -56.3921, 4.37192, 0.12 ) }
    dend_42 { pt3dadd( -29.8711, -55.7993, 4.65202, 0.36 ) }
    dend_42 { pt3dadd( -30.0014, -55.3884, 4.82887, 0.12 ) }
    dend_42 { pt3dadd( -30.3943, -53.8561, 5.41379, 0.12 ) }
    dend_42 { pt3dadd( -30.4605, -53.5432, 5.50219, 0.24 ) }
    dend_42 { pt3dadd( -40.0148, -52.2384, 2.87069, 0.24 ) }
    dend_42 { pt3dadd( -49.5279, -49.7743, 1.10599, 0.24 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 39/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 6.04969, -53.2822, 14.0493, 0.6 ) }
    dend_41 { pt3dadd( 5.91894, -54.1586, 14.2573, 0.6 ) }
    dend_41 { pt3dadd( 5.7427, -55.4161, 14.5431, 0.48 ) }
    dend_41 { pt3dadd( 5.48427, -57.0932, 14.9047, 0.48 ) }
    dend_41 { pt3dadd( 5.26124, -58.2483, 15.1098, 0.12 ) }
    dend_41 { pt3dadd( 5.0236, -59.5049, 15.2228, 0.12 ) }
    dend_41 { pt3dadd( 4.95032, -59.9259, 15.241, 0.96 ) }
    dend_41 { pt3dadd( 4.83963, -60.5504, 15.2415, 0.48 ) }
    dend_41 { pt3dadd( 4.7221, -61.3203, 15.2063, 0.24 ) }
    dend_41 { pt3dadd( 4.51753, -63.3903, 14.984, 0.24 ) }
    dend_41 { pt3dadd( 4.47016, -65.0772, 14.732, 0.48 ) }
    dend_41 { pt3dadd( 4.43706, -66.0143, 14.6265, 0.36 ) }
    dend_41 { pt3dadd( 4.44083, -67.2874, 14.5211, 0.36 ) }
    dend_41 { pt3dadd( 4.68721, -69.8295, 14.3939, 0.36 ) }
    dend_41 { pt3dadd( 4.86689, -70.6793, 14.3837, 0.12 ) }
    dend_41 { pt3dadd( 5.52479, -72.6393, 14.4518, 0.12 ) }
    dend_41 { pt3dadd( 6.41559, -74.7999, 14.6174, 0.12 ) }
    dend_41 { pt3dadd( 7.02146, -76.1161, 14.7348, 0.12 ) }
    dend_41 { pt3dadd( 7.88619, -77.7476, 14.9095, 0.12 ) }
    dend_41 { pt3dadd( 8.87508, -79.354, 15.1208, 0.12 ) }
    dend_41 { pt3dadd( 10.3713, -81.757, 15.4617, 0.12 ) }
    dend_41 { pt3dadd( 10.7234, -82.3128, 15.5105, 0.84 ) }
    dend_41 { pt3dadd( 12.8599, -91.7333, 16.9526, 0.84 ) }
    dend_41 { pt3dadd( 13.9931, -101.408, 17.4534, 0.84 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 63/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 4.41647, -33.2096, 14.6829, 0.12 ) }
    dend_39 { pt3dadd( 4.50997, -31.9377, 14.7115, 0.12 ) }
    dend_39 { pt3dadd( 4.60168, -30.6901, 14.7396, 0.12 ) }
    dend_39 { pt3dadd( 4.75495, -28.605, 14.7866, 0.12 ) }
    dend_39 { pt3dadd( 4.81185, -27.8311, 14.8041, 0.12 ) }
    dend_39 { pt3dadd( 4.90895, -26.5102, 14.8338, 0.12 ) }
    dend_39 { pt3dadd( 7.12628, -17.1198, 13.3092, 0.12 ) }
    dend_39 { pt3dadd( 10.139, -7.95526, 11.7054, 0.12 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 71/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 4.41647, -33.2096, 14.6829, 0.12 ) }
    dend_38 { pt3dadd( 5.149, -33.6132, 14.6961, 0.12 ) }
    dend_38 { pt3dadd( 6.0527, -34.111, 14.7124, 0.12 ) }
    dend_38 { pt3dadd( 6.74568, -34.4928, 14.7249, 0.12 ) }
    dend_38 { pt3dadd( 7.87725, -35.1162, 14.7453, 0.12 ) }
    dend_38 { pt3dadd( 9.02633, -35.7493, 14.7661, 0.12 ) }
    dend_38 { pt3dadd( 10.0916, -36.3362, 14.7853, 0.12 ) }
    dend_38 { pt3dadd( 17.7778, -42.376, 16.3821, 0.12 ) }
    dend_38 { pt3dadd( 24.1147, -49.068, 19.9506, 0.12 ) }
    dend_38 { pt3dadd( 29.3035, -55.8655, 24.8973, 0.12 ) }
    dend_38 { pt3dadd( 33.1888, -63.687, 29.4308, 0.12 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 82/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 106.868, -18.5435, 42.2546, 0.12 ) }
    dend_26 { pt3dadd( 116.489, -19.5145, 39.715, 0.12 ) }
    dend_26 { pt3dadd( 125.844, -19.496, 36.1832, 0.12 ) }
    dend_26 { pt3dadd( 134.077, -17.7814, 30.784, 0.12 ) }
    dend_26 { pt3dadd( 142.201, -16.9427, 25.0173, 0.12 ) }
    dend_26 { pt3dadd( 151.026, -14.5287, 21.019, 0.12 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 88/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 106.868, -18.5435, 42.2546, 0.12 ) }
    dend_25 { pt3dadd( 115.237, -17.9669, 47.6957, 0.12 ) }
    dend_25 { pt3dadd( 123.644, -18.469, 53.0874, 0.12 ) }
    dend_25 { pt3dadd( 131.587, -19.6682, 59.036, 0.12 ) }
    dend_25 { pt3dadd( 139.552, -22.559, 64.3054, 0.12 ) }
    dend_25 { pt3dadd( 148.121, -24.8583, 68.8888, 0.12 ) }
    dend_25 { pt3dadd( 156.517, -26.5222, 74.0457, 0.12 ) }
    dend_25 { pt3dadd( 164.266, -28.9401, 79.8619, 0.12 ) }
    dend_25 { pt3dadd( 171.974, -32.0848, 85.3542, 0.12 ) }
    dend_25 { pt3dadd( 179.221, -33.9941, 91.9606, 0.12 ) }
    dend_25 { pt3dadd( 185.366, -36.576, 99.3922, 0.12 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 99/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 81.3107, -36.673, 23.2008, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_23 { pt3dadd( 81.4137, -36.2012, 23.2106, 0.12 ) }
    dend_23 { pt3dadd( 81.6623, -35.0628, 23.2343, 0.12 ) }
    dend_23 { pt3dadd( 82.0337, -33.3618, 23.2697, 0.12 ) }
    dend_23 { pt3dadd( 82.1367, -32.89, 23.2796, 0.24 ) }
    dend_23 { pt3dadd( 83.0921, -23.3014, 24.8188, 0.24 ) }
    dend_23 { pt3dadd( 84.5742, -13.769, 26.3082, 0.24 ) }
    dend_23 { pt3dadd( 87.9957, -4.95753, 28.8807, 0.24 ) }
    dend_23 { pt3dadd( 92.2528, 2.9926, 32.8037, 0.24 ) }
    dend_23 { pt3dadd( 95.7395, 10.5969, 38.0012, 0.24 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 9/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 81.3107, -36.673, 23.2008, 0.48 ) }
    dend_22 { pt3dadd( 81.9588, -37.2198, 23.3803, 0.48 ) }
    dend_22 { pt3dadd( 83.1149, -38.0563, 23.7037, 0.48 ) }
    dend_22 { pt3dadd( 84.3873, -38.8344, 23.9978, 0.48 ) }
    dend_22 { pt3dadd( 86.1503, -39.6758, 24.3144, 0.12 ) }
    dend_22 { pt3dadd( 87.1276, -40.0781, 24.4451, 0.12 ) }
    dend_22 { pt3dadd( 87.8498, -40.3317, 24.4793, 0.48 ) }
    dend_22 { pt3dadd( 89.0144, -40.5608, 24.41, 0.48 ) }
    dend_22 { pt3dadd( 90.1062, -40.5889, 24.3242, 0.48 ) }
    dend_22 { pt3dadd( 90.6964, -40.4328, 24.1156, 0.72 ) }
    dend_22 { pt3dadd( 91.5212, -40.0927, 23.6359, 0.72 ) }
    dend_22 { pt3dadd( 92.3151, -39.7037, 23.0403, 0.12 ) }
    dend_22 { pt3dadd( 92.7978, -39.6069, 22.6223, 0.12 ) }
    dend_22 { pt3dadd( 102.702, -40.86, 22.1196, 0.12 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -7.0564, -142.775, 36.7091, 0.12 ) }
    dend_18 { pt3dadd( -9.34019, -152.267, 36.716, 0.12 ) }
    dend_18 { pt3dadd( -10.2176, -161.966, 37.2388, 0.12 ) }
    dend_18 { pt3dadd( -10.089, -171.465, 39.4905, 0.12 ) }
    dend_18 { pt3dadd( -8.38124, -180.41, 43.0835, 0.12 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 28/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -7.0564, -142.775, 36.7091, 0.12 ) }
    dend_17 { pt3dadd( -10.3864, -151.713, 38.9165, 0.12 ) }
    dend_17 { pt3dadd( -12.4077, -161.042, 41.0045, 0.12 ) }
    dend_17 { pt3dadd( -14.0608, -170.273, 43.7669, 0.12 ) }
    dend_17 { pt3dadd( -15.7951, -179.602, 46.0986, 0.12 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 33/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 67.0347, 76.8713, 125.687, 0.12 ) }
    dend_12 { pt3dadd( 69.9555, 80.5117, 134.492, 0.12 ) }
    dend_12 { pt3dadd( 73.7249, 83.651, 143.177, 0.12 ) }
    dend_12 { pt3dadd( 77.0851, 87.7593, 151.6, 0.12 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 37/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 67.0347, 76.8713, 125.687, 0.12 ) }
    dend_11 { pt3dadd( 69.2908, 81.1094, 134.406, 0.12 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 39/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 84.8785, -77.1384, 9.11247, 0.12 ) }
    dend_5 { pt3dadd( 91.5188, -84.3936, 8.38141, 0.12 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 41/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 84.8785, -77.1384, 9.11247, 0.12 ) }
    dend_4 { pt3dadd( 91.2888, -84.4971, 10.5068, 0.12 ) }
    // Section: dend_104, id: dend_104, parent: dend_102 (entry count 43/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( -31.2889, -22.3594, -64.4502, 0.12 ) }
    dend_104 { pt3dadd( -31.6673, -21.0257, -64.9771, 0.12 ) }
    dend_104 { pt3dadd( -31.6892, -20.8687, -65.0262, 0.12 ) }
    dend_104 { pt3dadd( -31.8296, -20.2233, -65.1666, 0.12 ) }
    dend_104 { pt3dadd( -32.1792, -18.9718, -65.4, 0.12 ) }
    dend_104 { pt3dadd( -32.3896, -18.419, -65.4928, 0.12 ) }
    dend_104 { pt3dadd( -32.6947, -17.7478, -65.5876, 0.12 ) }
    dend_104 { pt3dadd( -32.9379, -17.3276, -65.5876, 0.48 ) }
    dend_104 { pt3dadd( -33.6908, -16.3316, -65.5876, 0.36 ) }
    dend_104 { pt3dadd( -33.8989, -16.1664, -65.5876, 0.12 ) }
    dend_104 { pt3dadd( -34.4825, -16.0306, -65.5876, 0.12 ) }
    dend_104 { pt3dadd( -35.2406, -15.9974, -65.5876, 0.96 ) }
    dend_104 { pt3dadd( -35.7302, -16.0672, -65.5876, 0.36 ) }
    dend_104 { pt3dadd( -36.2725, -16.2761, -65.729, 0.36 ) }
    dend_104 { pt3dadd( -36.7725, -16.5496, -66.1212, 0.12 ) }
    dend_104 { pt3dadd( -37.2153, -16.8228, -66.5848, 0.12 ) }
    dend_104 { pt3dadd( -37.6338, -17.1601, -67.0874, 0.12 ) }
    dend_104 { pt3dadd( -38.0072, -17.5173, -67.5521, 0.96 ) }
    dend_104 { pt3dadd( -39.3977, -18.8095, -69.2427, 0.24 ) }
    dend_104 { pt3dadd( -40.422, -19.7472, -70.4462, 0.12 ) }
    dend_104 { pt3dadd( -40.8594, -20.1473, -70.9266, 0.12 ) }
    dend_104 { pt3dadd( -41.757, -20.9363, -71.7278, 0.12 ) }
    dend_104 { pt3dadd( -42.322, -21.3744, -72.1897, 0.12 ) }
    dend_104 { pt3dadd( -43.0517, -21.8288, -72.6688, 0.12 ) }
    dend_104 { pt3dadd( -43.595, -22.0748, -72.9113, 0.12 ) }
    dend_104 { pt3dadd( -44.2086, -22.3113, -73.1442, 0.12 ) }
    dend_104 { pt3dadd( -45.4713, -22.6686, -73.6082, 0.12 ) }
    dend_104 { pt3dadd( -47.9065, -23.1918, -74.4562, 0.12 ) }
    dend_104 { pt3dadd( -48.5807, -23.3195, -74.6722, 0.12 ) }
    dend_104 { pt3dadd( -49.7458, -23.5348, -75.0013, 0.12 ) }
    dend_104 { pt3dadd( -51.5242, -23.8621, -75.4293, 0.12 ) }
    dend_104 { pt3dadd( -52.8008, -24.1183, -75.6698, 0.12 ) }
    dend_104 { pt3dadd( -53.5333, -24.2958, -75.7496, 0.12 ) }
    dend_104 { pt3dadd( -54.5769, -24.6025, -75.7496, 0.12 ) }
    dend_104 { pt3dadd( -55.6141, -24.9187, -75.7496, 0.12 ) }
    dend_104 { pt3dadd( -56.2228, -25.1015, -75.7496, 0.12 ) }
    dend_104 { pt3dadd( -56.8489, -25.2574, -75.7496, 0.12 ) }
    dend_104 { pt3dadd( -57.6609, -25.4726, -75.7496, 0.12 ) }
    dend_104 { pt3dadd( -58.7104, -25.7474, -75.7496, 0.12 ) }
    dend_104 { pt3dadd( -59.9142, -26.0757, -75.7496, 0.12 ) }
    dend_104 { pt3dadd( -60.8399, -26.3235, -75.7532, 0.12 ) }
    dend_104 { pt3dadd( -61.2598, -26.4366, -75.7547, 0.12 ) }
    dend_104 { pt3dadd( -61.5167, -26.5123, -75.7555, 0.36 ) }
    dend_104 { pt3dadd( -61.8253, -26.65, -75.7566, 0.12 ) }
    dend_104 { pt3dadd( -62.1511, -26.9277, -75.7577, 0.12 ) }
    dend_104 { pt3dadd( -62.6468, -27.5498, -75.7584, 0.12 ) }
    dend_104 { pt3dadd( -63.0078, -28.0099, -75.7582, 0.36 ) }
    dend_104 { pt3dadd( -63.1141, -28.1388, -75.758, 0.12 ) }
    dend_104 { pt3dadd( -63.5877, -28.6574, -75.8643, 0.12 ) }
    dend_104 { pt3dadd( -63.8782, -28.9542, -75.9652, 0.12 ) }
    dend_104 { pt3dadd( -64.38, -29.4374, -76.2457, 0.12 ) }
    dend_104 { pt3dadd( -64.9107, -29.9702, -76.5996, 0.12 ) }
    dend_104 { pt3dadd( -65.9364, -30.9459, -77.3136, 0.12 ) }
    dend_104 { pt3dadd( -67.1503, -32.0689, -78.2, 0.84 ) }
    dend_104 { pt3dadd( -67.5751, -32.4534, -78.5396, 0.84 ) }
    dend_104 { pt3dadd( -68.3921, -33.2307, -79.2801, 0.12 ) }
    dend_104 { pt3dadd( -69.4898, -34.4137, -80.4837, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 0/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( -31.2889, -22.3594, -64.4502, 0.48 ) }
    dend_103 { pt3dadd( -31.5085, -22.6555, -65.1881, 0.48 ) }
    dend_103 { pt3dadd( -31.754, -23.0443, -66.0963, 0.48 ) }
    dend_103 { pt3dadd( -32.7292, -24.4646, -69.1642, 0.12 ) }
    dend_103 { pt3dadd( -32.9117, -24.731, -69.6662, 0.12 ) }
    dend_103 { pt3dadd( -33.0743, -24.959, -70.1852, 0.48 ) }
    dend_103 { pt3dadd( -33.7237, -25.7813, -72.1586, 0.12 ) }
    dend_103 { pt3dadd( -33.8621, -25.9699, -72.5755, 0.12 ) }
    dend_103 { pt3dadd( -34.2221, -26.4377, -73.5394, 0.12 ) }
    dend_103 { pt3dadd( -34.8708, -27.1406, -74.8455, 0.48 ) }
    dend_103 { pt3dadd( -36.873, -29.1391, -78.3753, 0.12 ) }
    dend_103 { pt3dadd( -37.2966, -29.5366, -79.0344, 0.12 ) }
    dend_103 { pt3dadd( -38.1973, -30.3269, -80.3736, 0.12 ) }
    dend_103 { pt3dadd( -38.798, -30.8412, -81.2685, 0.12 ) }
    dend_103 { pt3dadd( -39.2866, -31.2589, -81.9752, 0.12 ) }
    dend_103 { pt3dadd( -39.8032, -31.6499, -82.6003, 0.12 ) }
    dend_103 { pt3dadd( -40.9993, -32.5031, -83.7147, 0.48 ) }
    dend_103 { pt3dadd( -42.9919, -33.8997, -85.6208, 0.12 ) }
    dend_103 { pt3dadd( -43.7298, -34.3701, -86.2892, 0.12 ) }
    dend_103 { pt3dadd( -44.2063, -34.684, -86.6788, 0.12 ) }
    dend_103 { pt3dadd( -44.8358, -35.1151, -87.1074, 0.12 ) }
    dend_103 { pt3dadd( -45.5617, -35.6298, -87.4551, 0.12 ) }
    dend_103 { pt3dadd( -46.3439, -36.244, -87.6084, 0.12 ) }
    dend_103 { pt3dadd( -47.1873, -36.9894, -87.6084, 0.12 ) }
    dend_103 { pt3dadd( -47.9064, -37.702, -87.6084, 0.12 ) }
    dend_103 { pt3dadd( -48.5195, -38.4095, -87.6084, 0.12 ) }
    dend_103 { pt3dadd( -49.0983, -39.1533, -87.6084, 0.12 ) }
    dend_103 { pt3dadd( -49.5453, -39.7599, -87.6675, 0.12 ) }
    dend_103 { pt3dadd( -50.0106, -40.4458, -87.8609, 0.48 ) }
    dend_103 { pt3dadd( -50.2344, -40.855, -88.0218, 0.12 ) }
    dend_103 { pt3dadd( -50.6769, -41.8311, -88.4427, 0.12 ) }
    dend_103 { pt3dadd( -51.023, -42.7065, -88.8384, 0.36 ) }
    dend_103 { pt3dadd( -51.4776, -44.0974, -89.6077, 0.12 ) }
    dend_103 { pt3dadd( -51.8395, -45.7156, -90.5587, 0.12 ) }
    dend_103 { pt3dadd( -51.9921, -47.0125, -91.3197, 0.12 ) }
    dend_103 { pt3dadd( -52.0012, -48.46, -92.1211, 0.12 ) }
    dend_103 { pt3dadd( -51.9471, -49.0409, -92.484, 0.48 ) }
    dend_103 { pt3dadd( -51.6574, -50.8336, -93.6212, 0.12 ) }
    dend_103 { pt3dadd( -51.4339, -52.0397, -94.3474, 0.12 ) }
    dend_103 { pt3dadd( -51.2681, -52.8758, -94.9128, 0.12 ) }
    dend_103 { pt3dadd( -51.068, -53.9326, -95.9994, 0.12 ) }
    dend_103 { pt3dadd( -50.845, -55.4551, -98.5173, 0.12 ) }
    dend_103 { pt3dadd( -50.8152, -55.8531, -99.383, 0.12 ) }
    dend_103 { pt3dadd( -50.8098, -56.1036, -100.034, 0.12 ) }
    dend_103 { pt3dadd( -50.8203, -56.5104, -101.249, 0.48 ) }
    dend_103 { pt3dadd( -50.9635, -57.7195, -105.111, 0.84 ) }
    dend_103 { pt3dadd( -51.2668, -58.9718, -109.355, 0.48 ) }
    dend_103 { pt3dadd( -51.4147, -59.4132, -110.957, 0.48 ) }
    dend_103 { pt3dadd( -51.5687, -59.754, -112.318, 0.12 ) }
    dend_103 { pt3dadd( -51.6293, -59.8743, -112.783, 0.12 ) }
    dend_103 { pt3dadd( -51.7936, -60.1367, -113.666, 0.12 ) }
    dend_103 { pt3dadd( -52.0564, -60.4596, -114.547, 1.2 ) }
    dend_103 { pt3dadd( -53.4743, -61.6698, -117.485, 0.12 ) }
    dend_103 { pt3dadd( -53.7555, -61.8612, -117.977, 0.12 ) }
    dend_103 { pt3dadd( -54.2366, -62.1047, -118.766, 0.12 ) }
    dend_103 { pt3dadd( -54.6515, -62.2792, -119.514, 0.12 ) }
    // Section: dend_99, id: dend_99, parent: dend_97 (entry count 56/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( -55.5074, -60.3462, -124.627, 0.12 ) }
    dend_99 { pt3dadd( -54.5397, -60.3686, -124.364, 0.12 ) }
    dend_99 { pt3dadd( -53.4018, -60.4147, -123.968, 0.12 ) }
    dend_99 { pt3dadd( -51.9017, -60.4428, -123.409, 0.12 ) }
    dend_99 { pt3dadd( -50.1252, -60.4372, -122.693, 0.12 ) }
    dend_99 { pt3dadd( -49.7833, -60.432, -122.58, 0.48 ) }
    dend_99 { pt3dadd( -48.086, -60.3446, -122.392, 0.12 ) }
    dend_99 { pt3dadd( -46.8673, -60.2361, -122.386, 0.12 ) }
    dend_99 { pt3dadd( -46.0996, -60.1271, -122.411, 0.12 ) }
    dend_99 { pt3dadd( -44.7385, -59.8316, -122.53, 0.12 ) }
    dend_99 { pt3dadd( -42.8845, -59.3218, -122.962, 0.12 ) }
    dend_99 { pt3dadd( -39.1986, -58.1122, -124.097, 0.12 ) }
    dend_99 { pt3dadd( -38.3862, -57.8086, -124.406, 0.12 ) }
    dend_99 { pt3dadd( -36.6052, -57.0226, -125.144, 0.72 ) }
    dend_99 { pt3dadd( -35.9996, -56.7188, -125.407, 0.72 ) }
    dend_99 { pt3dadd( -33.9426, -55.5732, -126.363, 0.12 ) }
    dend_99 { pt3dadd( -32.4961, -54.7627, -126.946, 0.12 ) }
    dend_99 { pt3dadd( -32.1264, -54.5864, -127.079, 0.48 ) }
    dend_99 { pt3dadd( -31.3596, -54.3488, -127.409, 0.12 ) }
    dend_99 { pt3dadd( -30.7546, -54.2725, -127.752, 0.12 ) }
    dend_99 { pt3dadd( -29.4957, -54.3597, -128.468, 0.12 ) }
    dend_99 { pt3dadd( -28.5319, -54.6172, -128.982, 0.12 ) }
    dend_99 { pt3dadd( -27.8605, -54.9172, -129.4, 0.12 ) }
    dend_99 { pt3dadd( -27.1697, -55.3262, -129.838, 0.48 ) }
    dend_99 { pt3dadd( -25.57, -56.5505, -130.743, 0.12 ) }
    dend_99 { pt3dadd( -25.22, -56.8474, -130.915, 0.12 ) }
    dend_99 { pt3dadd( -24.8765, -57.1605, -131.069, 0.36 ) }
    dend_99 { pt3dadd( -24.5745, -57.4442, -131.175, 0.12 ) }
    dend_99 { pt3dadd( -23.7752, -58.259, -131.37, 0.12 ) }
    dend_99 { pt3dadd( -22.4505, -59.7479, -131.548, 0.12 ) }
    dend_99 { pt3dadd( -22.0416, -60.231, -131.564, 0.48 ) }
    dend_99 { pt3dadd( -21.1752, -61.2717, -131.562, 0.12 ) }
    dend_99 { pt3dadd( -20.0836, -62.5753, -131.512, 0.12 ) }
    dend_99 { pt3dadd( -18.9986, -63.7952, -131.422, 0.12 ) }
    dend_99 { pt3dadd( -17.6358, -65.2515, -131.262, 0.12 ) }
    dend_99 { pt3dadd( -17.0081, -65.9238, -131.167, 0.12 ) }
    dend_99 { pt3dadd( -16.4262, -66.5419, -131.058, 0.48 ) }
    dend_99 { pt3dadd( -16.0093, -66.9577, -130.954, 0.12 ) }
    dend_99 { pt3dadd( -14.7304, -68.1104, -130.656, 0.12 ) }
    dend_99 { pt3dadd( -14.2681, -68.4615, -130.527, 0.6 ) }
    // Section: dend_98, id: dend_98, parent: dend_97 (entry count 96/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( -55.5074, -60.3462, -124.627, 0.12 ) }
    dend_98 { pt3dadd( -56.7221, -57.8841, -127.893, 0.12 ) }
    dend_98 { pt3dadd( -56.9398, -57.4499, -128.468, 0.12 ) }
    dend_98 { pt3dadd( -57.7512, -55.9117, -130.269, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_98 { pt3dadd( -58.0564, -55.3358, -130.896, 0.12 ) }
    dend_98 { pt3dadd( -58.2053, -55.069, -131.196, 0.12 ) }
    dend_98 { pt3dadd( -58.3802, -54.7636, -131.533, 0.84 ) }
    dend_98 { pt3dadd( -58.8842, -53.938, -132.332, 0.12 ) }
    dend_98 { pt3dadd( -59.6126, -52.8607, -133.434, 0.12 ) }
    dend_98 { pt3dadd( -60.2887, -52.0531, -134.299, 0.48 ) }
    dend_98 { pt3dadd( -61.0628, -51.2041, -135.249, 0.24 ) }
    dend_98 { pt3dadd( -61.4646, -50.775, -135.791, 0.6 ) }
    dend_98 { pt3dadd( -62.0198, -50.2296, -136.53, 0.12 ) }
    dend_98 { pt3dadd( -62.4859, -49.8265, -137.095, 0.12 ) }
    dend_98 { pt3dadd( -63.1614, -49.2939, -137.91, 0.12 ) }
    dend_98 { pt3dadd( -63.5869, -48.9393, -138.378, 0.6 ) }
    dend_98 { pt3dadd( -64.8575, -47.7951, -139.667, 0.12 ) }
    dend_98 { pt3dadd( -65.3174, -47.4054, -140.119, 0.12 ) }
    dend_98 { pt3dadd( -65.6193, -47.1599, -140.471, 0.12 ) }
    dend_98 { pt3dadd( -66.0048, -46.8665, -140.972, 0.12 ) }
    dend_98 { pt3dadd( -67.089, -46.1064, -142.377, 0.12 ) }
    dend_98 { pt3dadd( -67.4876, -45.8729, -142.825, 0.6 ) }
    dend_98 { pt3dadd( -67.9944, -45.5827, -143.325, 0.6 ) }
    dend_98 { pt3dadd( -69.9537, -44.4733, -145.281, 0.12 ) }
    dend_98 { pt3dadd( -70.2717, -44.3035, -145.595, 0.12 ) }
    dend_98 { pt3dadd( -70.7564, -44.0446, -146.057, 0.12 ) }
    dend_98 { pt3dadd( -71.5849, -43.5907, -146.77, 0.12 ) }
    dend_98 { pt3dadd( -72.6538, -42.9397, -147.727, 0.12 ) }
    dend_98 { pt3dadd( -72.9005, -42.7464, -147.937, 0.96 ) }
    dend_98 { pt3dadd( -73.5059, -42.1574, -148.479, 0.12 ) }
    dend_98 { pt3dadd( -73.8779, -41.7363, -148.877, 0.12 ) }
    dend_98 { pt3dadd( -74.0573, -41.5031, -149.12, 0.48 ) }
    dend_98 { pt3dadd( -74.9584, -40.0983, -150.48, 0.12 ) }
    dend_98 { pt3dadd( -75.6669, -38.8205, -151.583, 0.12 ) }
    dend_98 { pt3dadd( -76.395, -37.3328, -152.784, 0.12 ) }
    dend_98 { pt3dadd( -76.627, -36.7495, -153.199, 1.08 ) }
    dend_98 { pt3dadd( -77.1021, -35.2941, -154.141, 0.12 ) }
    dend_98 { pt3dadd( -77.6147, -33.1909, -155.502, 0.12 ) }
    dend_98 { pt3dadd( -77.6838, -32.6187, -155.913, 0.96 ) }
    dend_98 { pt3dadd( -77.673, -32.1637, -156.414, 0.12 ) }
    dend_98 { pt3dadd( -77.5785, -31.1437, -157.61, 0.12 ) }
    dend_98 { pt3dadd( -77.5306, -30.8901, -157.952, 0.6 ) }
    dend_98 { pt3dadd( -77.0764, -29.5373, -160.216, 0.24 ) }
    dend_98 { pt3dadd( -76.4935, -28.4981, -162.695, 0.96 ) }
    dend_98 { pt3dadd( -75.7421, -27.4059, -165.843, 0.36 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 41/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 21.3917, 104.377, -83.4885, 0.12 ) }
    dend_75 { pt3dadd( 21.4198, 105.074, -83.6963, 0.12 ) }
    dend_75 { pt3dadd( 21.5876, 107.002, -84.3659, 0.12 ) }
    dend_75 { pt3dadd( 21.784, 108.597, -85.0481, 0.12 ) }
    dend_75 { pt3dadd( 22.079, 110.718, -86.0188, 0.12 ) }
    dend_75 { pt3dadd( 22.3042, 112.443, -86.8303, 0.12 ) }
    dend_75 { pt3dadd( 22.4232, 113.423, -87.3305, 0.12 ) }
    dend_75 { pt3dadd( 22.633, 115.396, -88.4214, 0.48 ) }
    dend_75 { pt3dadd( 22.7301, 116.685, -89.2712, 0.24 ) }
    dend_75 { pt3dadd( 22.7208, 117.522, -89.9093, 0.24 ) }
    dend_75 { pt3dadd( 22.6313, 118.054, -90.3389, 0.48 ) }
    dend_75 { pt3dadd( 22.232, 119.065, -91.1234, 0.12 ) }
    dend_75 { pt3dadd( 21.707, 120.045, -91.7426, 0.12 ) }
    dend_75 { pt3dadd( 20.5161, 121.993, -92.7284, 0.12 ) }
    dend_75 { pt3dadd( 19.8481, 123.105, -93.1676, 0.12 ) }
    dend_75 { pt3dadd( 19.3061, 124.095, -93.4834, 0.12 ) }
    dend_75 { pt3dadd( 18.3438, 126.065, -93.9786, 0.12 ) }
    dend_75 { pt3dadd( 17.7266, 127.475, -94.2264, 0.72 ) }
    dend_75 { pt3dadd( 17.2074, 128.81, -94.4215, 0.12 ) }
    dend_75 { pt3dadd( 16.3922, 131.127, -94.6632, 0.12 ) }
    dend_75 { pt3dadd( 15.7239, 133.359, -94.9866, 0.12 ) }
    dend_75 { pt3dadd( 15.5239, 134.136, -95.1047, 0.12 ) }
    dend_75 { pt3dadd( 15.0996, 136.104, -95.4201, 0.36 ) }
    dend_75 { pt3dadd( 14.8135, 137.472, -95.6396, 0.96 ) }
    dend_75 { pt3dadd( 14.6933, 138.076, -95.7248, 1.2 ) }
    dend_75 { pt3dadd( 14.3929, 139.815, -96.0811, 0.12 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 67/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 21.3917, 104.377, -83.4885, 0.12 ) }
    dend_74 { pt3dadd( 22.2975, 103.617, -83.9835, 0.12 ) }
    dend_74 { pt3dadd( 22.7129, 103.274, -84.2368, 0.12 ) }
    dend_74 { pt3dadd( 23.2318, 102.847, -84.5533, 0.12 ) }
    dend_74 { pt3dadd( 24.1718, 102.072, -85.1265, 0.12 ) }
    dend_74 { pt3dadd( 25.073, 101.329, -85.6761, 0.12 ) }
    dend_74 { pt3dadd( 25.5539, 100.933, -85.9694, 0.12 ) }
    dend_74 { pt3dadd( 26.3827, 100.199, -86.4559, 0.12 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 75/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -10.7592, 106.077, -119.646, 0.12 ) }
    dend_67 { pt3dadd( -10.2404, 106.083, -119.692, 0.12 ) }
    dend_67 { pt3dadd( -9.57274, 106.21, -119.747, 0.12 ) }
    dend_67 { pt3dadd( -8.95432, 106.533, -119.795, 0.12 ) }
    dend_67 { pt3dadd( -8.54224, 106.904, -120.009, 0.24 ) }
    dend_67 { pt3dadd( -8.37122, 107.066, -120.15, 0.12 ) }
    dend_67 { pt3dadd( -8.26439, 107.165, -120.26, 0.12 ) }
    dend_67 { pt3dadd( -7.7293, 107.642, -120.873, 0.12 ) }
    dend_67 { pt3dadd( -7.3165, 107.925, -121.401, 0.12 ) }
    dend_67 { pt3dadd( -6.34627, 108.32, -122.842, 0.84 ) }
    dend_67 { pt3dadd( -5.87163, 108.409, -123.558, 0.12 ) }
    dend_67 { pt3dadd( -5.40668, 108.422, -124.215, 0.6 ) }
    dend_67 { pt3dadd( -5.04332, 108.383, -124.703, 0.84 ) }
    dend_67 { pt3dadd( -4.11287, 108.129, -125.841, 0.36 ) }
    dend_67 { pt3dadd( -2.79816, 107.551, -127.228, 0.36 ) }
    dend_67 { pt3dadd( -2.37897, 107.318, -127.585, 0.36 ) }
    dend_67 { pt3dadd( -2.03374, 107.072, -128.005, 0.36 ) }
    dend_67 { pt3dadd( -1.91968, 106.966, -128.186, 0.36 ) }
    dend_67 { pt3dadd( -1.6612, 106.684, -128.69, 0.72 ) }
    dend_67 { pt3dadd( -1.247, 106.222, -129.621, 0.72 ) }
    dend_67 { pt3dadd( -0.701017, 105.581, -130.98, 0.12 ) }
    dend_67 { pt3dadd( 1.12728, 103.505, -135.722, 0.12 ) }
    dend_67 { pt3dadd( 1.3724, 103.249, -136.346, 0.12 ) }
    dend_67 { pt3dadd( 1.5705, 103.074, -136.812, 0.36 ) }
    dend_67 { pt3dadd( 1.90077, 102.833, -137.477, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_67 { pt3dadd( 2.03693, 102.773, -137.7, 0.12 ) }
    dend_67 { pt3dadd( 2.32195, 102.691, -138.077, 0.12 ) }
    dend_67 { pt3dadd( 2.75853, 102.68, -138.389, 0.12 ) }
    dend_67 { pt3dadd( 3.15278, 102.709, -138.702, 0.48 ) }
    dend_67 { pt3dadd( 4.10343, 102.824, -139.482, 0.48 ) }
    dend_67 { pt3dadd( 6.25803, 103.118, -141.483, 0.48 ) }
    dend_67 { pt3dadd( 6.5121, 103.161, -141.735, 0.12 ) }
    dend_67 { pt3dadd( 6.79951, 103.22, -142.041, 0.12 ) }
    dend_67 { pt3dadd( 7.51537, 103.409, -142.862, 0.48 ) }
    dend_67 { pt3dadd( 7.96568, 103.555, -143.416, 0.48 ) }
    dend_67 { pt3dadd( 8.91251, 103.95, -144.648, 0.12 ) }
    dend_67 { pt3dadd( 9.38412, 104.072, -145.072, 0.12 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 12/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -10.7592, 106.077, -119.646, 0.12 ) }
    dend_66 { pt3dadd( -11.4378, 107.286, -119.98, 0.12 ) }
    dend_66 { pt3dadd( -11.9164, 107.955, -120.123, 0.12 ) }
    dend_66 { pt3dadd( -12.302, 108.442, -120.211, 0.12 ) }
    dend_66 { pt3dadd( -12.8432, 109.061, -120.308, 0.12 ) }
    dend_66 { pt3dadd( -13.2114, 109.432, -120.361, 0.84 ) }
    dend_66 { pt3dadd( -13.4841, 109.688, -120.394, 0.12 ) }
    dend_66 { pt3dadd( -14.3631, 110.471, -120.374, 0.12 ) }
    dend_66 { pt3dadd( -14.4963, 110.573, -120.371, 0.48 ) }
    dend_66 { pt3dadd( -14.9481, 110.848, -120.362, 0.12 ) }
    dend_66 { pt3dadd( -15.493, 111.092, -120.356, 0.12 ) }
    dend_66 { pt3dadd( -15.6511, 111.153, -120.356, 0.48 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 24/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -45.7647, -47.6336, 16.9643, 0.12 ) }
    dend_60 { pt3dadd( -49.6405, -40.6517, 11.1591, 0.12 ) }
    dend_60 { pt3dadd( -52.6868, -33.0981, 5.61848, 0.12 ) }
    dend_60 { pt3dadd( -56.0231, -26.5125, -0.957716, 0.12 ) }
    dend_60 { pt3dadd( -57.5948, -18.51, -6.4499, 0.12 ) }
    dend_60 { pt3dadd( -59.8753, -10.1273, -11.0193, 0.12 ) }
    dend_60 { pt3dadd( -62.3686, -2.18311, -16.2534, 0.12 ) }
    dend_60 { pt3dadd( -64.9157, 6.61107, -19.7402, 0.12 ) }
    dend_60 { pt3dadd( -68.5874, 15.3946, -22.0558, 0.12 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 33/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -45.7647, -47.6336, 16.9643, 0.12 ) }
    dend_59 { pt3dadd( -46.5425, -38.2876, 19.7047, 0.12 ) }
    dend_59 { pt3dadd( -47.998, -29.3492, 23.4247, 0.12 ) }
    dend_59 { pt3dadd( -48.0548, -20.5209, 27.6684, 0.12 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 37/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -41.836, -100.513, 6.93854, 0.12 ) }
    dend_50 { pt3dadd( -42.9637, -99.482, 8.48956, 0.12 ) }
    dend_50 { pt3dadd( -43.3132, -99.1624, 8.97032, 0.12 ) }
    dend_50 { pt3dadd( -43.9667, -98.5648, 9.86911, 0.12 ) }
    dend_50 { pt3dadd( -49.6629, -94.961, 17.2102, 0.12 ) }
    dend_50 { pt3dadd( -55.0202, -91.5233, 24.8827, 0.12 ) }
    dend_50 { pt3dadd( -60.03, -88.5576, 32.9852, 0.12 ) }
    dend_50 { pt3dadd( -63.3196, -85.1582, 41.7614, 0.12 ) }
    dend_50 { pt3dadd( -68.5119, -80.9369, 49.1299, 0.12 ) }
    dend_50 { pt3dadd( -74.1834, -78.4518, 56.9617, 0.12 ) }
    dend_50 { pt3dadd( -81.0876, -77.3047, 64.0996, 0.12 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 48/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -41.836, -100.513, 6.93854, 0.12 ) }
    dend_49 { pt3dadd( -42.0043, -100.878, 7.33127, 0.12 ) }
    dend_49 { pt3dadd( -42.3375, -101.627, 7.92295, 0.12 ) }
    dend_49 { pt3dadd( -43.5628, -104.033, 9.11405, 0.96 ) }
    dend_49 { pt3dadd( -43.8348, -104.511, 9.35741, 1.2 ) }
    dend_49 { pt3dadd( -44.4569, -105.403, 9.81211, 0.96 ) }
    dend_49 { pt3dadd( -44.8272, -105.828, 10.0253, 0.12 ) }
    dend_49 { pt3dadd( -45.8057, -106.652, 10.3652, 0.12 ) }
    dend_49 { pt3dadd( -47.3099, -107.624, 10.7816, 0.36 ) }
    dend_49 { pt3dadd( -49.0085, -108.474, 11.117, 0.12 ) }
    dend_49 { pt3dadd( -50.3045, -109.036, 11.393, 0.48 ) }
    dend_49 { pt3dadd( -51.6411, -109.521, 11.7052, 1.08 ) }
    dend_49 { pt3dadd( -53.6272, -110.146, 12.2263, 0.24 ) }
    dend_49 { pt3dadd( -55.3218, -110.583, 12.7161, 0.12 ) }
    dend_49 { pt3dadd( -56.7675, -110.93, 13.1818, 0.12 ) }
    dend_49 { pt3dadd( -63.3387, -116.882, 17.6029, 0.12 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 64/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -49.5279, -49.7743, 1.10599, 0.12 ) }
    dend_44 { pt3dadd( -52.4031, -47.0498, -8.05505, 0.12 ) }
    dend_44 { pt3dadd( -56.4777, -42.976, -16.1753, 0.12 ) }
    dend_44 { pt3dadd( -60.412, -38.8618, -24.3433, 0.12 ) }
    dend_44 { pt3dadd( -63.3554, -35.2829, -33.1673, 0.12 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 69/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -49.5279, -49.7743, 1.10599, 0.12 ) }
    dend_43 { pt3dadd( -53.7715, -52.3922, 9.75364, 0.12 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 71/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 151.026, -14.5287, 21.019, 0.12 ) }
    dend_30 { pt3dadd( 159.913, -15.2624, 16.4966, 0.12 ) }
    dend_30 { pt3dadd( 169.038, -14.676, 12.4491, 0.12 ) }
    dend_30 { pt3dadd( 178.193, -13.4324, 8.63384, 0.12 ) }
    dend_30 { pt3dadd( 186.561, -13.43, 3.15802, 0.12 ) }
    dend_30 { pt3dadd( 194.7, -13.9353, -2.62776, 0.12 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 77/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 151.026, -14.5287, 21.019, 0.12 ) }
    dend_27 { pt3dadd( 159.954, -12.8129, 16.8714, 0.12 ) }
    dend_27 { pt3dadd( 169.133, -9.50258, 14.8215, 0.12 ) }
    dend_27 { pt3dadd( 177.697, -4.86174, 12.8185, 0.12 ) }
    dend_27 { pt3dadd( 185.469, 1.26516, 12.4809, 0.12 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 82/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 14.3929, 139.815, -96.0811, 0.12 ) }
    dend_77 { pt3dadd( 14.3944, 139.981, -96.0054, 0.12 ) }
    dend_77 { pt3dadd( 14.3988, 140.459, -95.7869, 0.12 ) }
    dend_77 { pt3dadd( 14.4114, 141.821, -95.1645, 0.6 ) }
    dend_77 { pt3dadd( 14.4155, 142.265, -94.9616, 0.12 ) }
    dend_77 { pt3dadd( 14.4265, 143.451, -94.4196, 0.12 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 88/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 14.3929, 139.815, -96.0811, 0.12 ) }
    dend_76 { pt3dadd( 13.2905, 140.902, -95.4079, 0.12 ) }
    dend_76 { pt3dadd( 12.6355, 141.548, -95.008, 0.12 ) }
    dend_76 { pt3dadd( 12.2858, 141.892, -94.7944, 0.12 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 92/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 9.38412, 104.072, -145.072, 0.12 ) }
    dend_69 { pt3dadd( 9.87027, 104.185, -145.078, 0.12 ) }
    dend_69 { pt3dadd( 10.8203, 104.409, -145.088, 0.12 ) }
    dend_69 { pt3dadd( 11.342, 104.531, -145.094, 0.84 ) }
    dend_69 { pt3dadd( 11.9701, 104.679, -145.1, 0.12 ) }
    dend_69 { pt3dadd( 12.6986, 104.851, -145.108, 0.12 ) }
    dend_69 { pt3dadd( 13.4363, 105.024, -145.116, 0.12 ) }
    dend_69 { pt3dadd( 13.9125, 105.155, -145.116, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 0/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 9.38412, 104.072, -145.072, 0.6 ) }
    dend_68 { pt3dadd( 10.1938, 103.255, -145.94, 0.6 ) }
    dend_68 { pt3dadd( 10.7868, 102.656, -146.575, 0.6 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 3/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -63.3554, -35.2829, -33.1673, 0.12 ) }
    dend_46 { pt3dadd( -57.9562, -28.5001, -37.9059, 0.12 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 5/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -63.3554, -35.2829, -33.1673, 0.12 ) }
    dend_45 { pt3dadd( -71.0387, -35.9354, -39.5327, 0.12 ) }
    dend_45 { pt3dadd( -79.4821, -38.0148, -44.448, 0.12 ) }
    dend_45 { pt3dadd( -88.6552, -39.9524, -47.8984, 0.12 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 9/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 194.7, -13.9353, -2.62776, 0.12 ) }
    dend_32 { pt3dadd( 202.906, -9.93679, -6.60869, 0.12 ) }
    dend_32 { pt3dadd( 210.85, -4.94055, -9.87034, 0.12 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 12/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 194.7, -13.9353, -2.62776, 0.12 ) }
    dend_31 { pt3dadd( 203.283, -15.5618, -7.4817, 0.12 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 14/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 185.469, 1.26516, 12.4809, 0.12 ) }
    dend_29 { pt3dadd( 194.036, 6.23412, 11.6861, 0.12 ) }
    dend_29 { pt3dadd( 202.754, 10.9348, 12.5486, 0.12 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 17/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 185.469, 1.26516, 12.4809, 0.12 ) }
    dend_28 { pt3dadd( 194.145, 3.45475, 8.04491, 0.12 ) }
    dend_28 { pt3dadd( 202.194, 7.0809, 3.42053, 0.12 ) }
    dend_28 { pt3dadd( 210.36, 10.201, -1.38338, 0.12 ) }
    dend_28 { pt3dadd( 217.956, 13.6666, -6.82998, 0.12 ) }
    dend_28 { pt3dadd( 226.26, 17.2292, -11.033, 0.12 ) }
    dend_28 { pt3dadd( 234.419, 20.2406, -15.9239, 0.12 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 24/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 210.85, -4.94055, -9.87034, 0.12 ) }
    dend_34 { pt3dadd( 219.016, -0.300114, -13.1356, 0.12 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 26/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 210.85, -4.94055, -9.87034, 0.12 ) }
    dend_33 { pt3dadd( 218.893, -0.513555, -13.7041, 0.12 ) }
    dend_33 { pt3dadd( 227.435, 2.94097, -17.5082, 0.12 ) }
    dend_33 { pt3dadd( 236.051, 5.55794, -21.8153, 0.12 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_84, dend_62, dend_61, dend_35, dend_14, dend_7, dend_0, dend_95, dend_90, dend_85, dend_79, dend_78, dend_63, dend_52, dend_36, dend_20, dend_15, dend_9, dend_8, dend_2, dend_1, dend_101, dend_96, dend_94, dend_91, dend_87, dend_86, dend_81, dend_80, dend_71, dend_64, dend_56, dend_53, dend_47, dend_40, dend_37, dend_24, dend_21, dend_19, dend_16, dend_13, dend_10, dend_6, dend_3, dend_105, dend_102, dend_100, dend_97, dend_93, dend_92, dend_89, dend_88, dend_83, dend_82, dend_73, dend_72, dend_70, dend_65, dend_58, dend_57, dend_55, dend_54, dend_51, dend_48, dend_42, dend_41, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_12, dend_11, dend_5, dend_4, dend_104, dend_103, dend_99, dend_98, dend_75, dend_74, dend_67, dend_66, dend_60, dend_59, dend_50, dend_49, dend_44, dend_43, dend_30, dend_27, dend_77, dend_76, dend_69, dend_68, dend_46, dend_45, dend_32, dend_31, dend_29, dend_28, dend_34, dend_33]}
    ModelViewParmSubset_2 = new SectionList()
    dend_84 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_68 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_84, dend_62, dend_61, dend_35, dend_14, dend_7, dend_0, dend_95, dend_90, dend_85, dend_79, dend_78, dend_63, dend_52, dend_36, dend_20, dend_15, dend_9, dend_8, dend_2, dend_1, dend_101, dend_96, dend_94, dend_91, dend_87, dend_86, dend_81, dend_80, dend_71, dend_64, dend_56, dend_53, dend_47, dend_40, dend_37, dend_24, dend_21, dend_19, dend_16, dend_13, dend_10, dend_6, dend_3, dend_105, dend_102, dend_100, dend_97, dend_93, dend_92, dend_89, dend_88, dend_83, dend_82, dend_73, dend_72, dend_70, dend_65, dend_58, dend_57, dend_55, dend_54, dend_51, dend_48, dend_42, dend_41, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_12, dend_11, dend_5, dend_4, dend_104, dend_103, dend_99, dend_98, dend_75, dend_74, dend_67, dend_66, dend_60, dend_59, dend_50, dend_49, dend_44, dend_43, dend_30, dend_27, dend_77, dend_76, dend_69, dend_68, dend_46, dend_45, dend_32, dend_31, dend_29, dend_28, dend_34, dend_33]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_84, dend_62, dend_61, dend_35, dend_14, dend_7, dend_0, axon_0, dend_95, dend_90, dend_85, dend_79, dend_78, dend_63, dend_52, dend_36, dend_20, dend_15, dend_9, dend_8, dend_2, dend_1, axon_1, dend_101, dend_96, dend_94, dend_91, dend_87, dend_86, dend_81, dend_80, dend_71, dend_64, dend_56, dend_53, dend_47, dend_40, dend_37, dend_24, dend_21, dend_19, dend_16, dend_13, dend_10, dend_6, dend_3, dend_105, dend_102, dend_100, dend_97, dend_93, dend_92, dend_89, dend_88, dend_83, dend_82, dend_73, dend_72, dend_70, dend_65, dend_58, dend_57, dend_55, dend_54, dend_51, dend_48, dend_42, dend_41, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_12, dend_11, dend_5, dend_4, dend_104, dend_103, dend_99, dend_98, dend_75, dend_74, dend_67, dend_66, dend_60, dend_59, dend_50, dend_49, dend_44, dend_43, dend_30, dend_27, dend_77, dend_76, dend_69, dend_68, dend_46, dend_45, dend_32, dend_31, dend_29, dend_28, dend_34, dend_33]}
    ModelViewParmSubset_5 = new SectionList()
    dend_84 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_95 ModelViewParmSubset_5.append()
    dend_90 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_101 ModelViewParmSubset_5.append()
    dend_96 ModelViewParmSubset_5.append()
    dend_94 ModelViewParmSubset_5.append()
    dend_91 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_105 ModelViewParmSubset_5.append()
    dend_102 ModelViewParmSubset_5.append()
    dend_100 ModelViewParmSubset_5.append()
    dend_97 ModelViewParmSubset_5.append()
    dend_93 ModelViewParmSubset_5.append()
    dend_92 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_104 ModelViewParmSubset_5.append()
    dend_103 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_99 ModelViewParmSubset_5.append()
    dend_98 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_61 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_95 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_78 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_15 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_9 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_8 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_96 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_94 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_91 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_87 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_86 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_81 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_71 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_64 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_56 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_53 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_24 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_21 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_16 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_13 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_6 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_3 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_100 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_83 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_72 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_54 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_48 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_42 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_41 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_38 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_26 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_25 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_23 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_104 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_103 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_99 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_98 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_60 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_50 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_30 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_28 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_35 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_84 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_14 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_62 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_85 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_36 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_7 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_63 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_79 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_52 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_80 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_37 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_47 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_90 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_51 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_40 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_39 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_58 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_57 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_101 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_105 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_102 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_22 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_92 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_4 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_5 OneSecGrp_SectionRef_80.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_59 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_43 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_73 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_74 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_49 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_93 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_44 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_82 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_70 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_65 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_46 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_75 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_55 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_76 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_77 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_66 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_11 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_97 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_45 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_18 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_17 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_12 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_67 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_68 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_69 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_27 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_88 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_89 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_29 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_31 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_32 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_34 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_33 OneSecGrp_SectionRef_109.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_84, dend_84, dend_84, dend_84, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_35, dend_35, dend_35, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_63, dend_63, dend_63, dend_63, dend_63, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_105, dend_105, dend_105, dend_105, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_88, dend_88, dend_88, dend_88, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_11, dend_5, dend_4, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_46, dend_45, dend_45, dend_45, dend_32, dend_32, dend_31, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_34, dend_33, dend_33, dend_33]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_53 all.append()
    dend_53 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_12 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_61 nseg = 5
    dend_95 nseg = 3
    dend_78 nseg = 11
    dend_15 nseg = 3
    dend_9 nseg = 3
    dend_8 nseg = 5
    dend_1 nseg = 5
    dend_96 nseg = 5
    dend_94 nseg = 9
    dend_91 nseg = 3
    dend_87 nseg = 9
    dend_86 nseg = 5
    dend_81 nseg = 7
    dend_71 nseg = 5
    dend_64 nseg = 7
    dend_56 nseg = 3
    dend_53 nseg = 7
    dend_24 nseg = 5
    dend_21 nseg = 3
    dend_19 nseg = 3
    dend_16 nseg = 5
    dend_13 nseg = 9
    dend_10 nseg = 5
    dend_6 nseg = 5
    dend_3 nseg = 3
    dend_100 nseg = 5
    dend_83 nseg = 3
    dend_72 nseg = 7
    dend_54 nseg = 3
    dend_48 nseg = 3
    dend_42 nseg = 3
    dend_41 nseg = 3
    dend_38 nseg = 3
    dend_26 nseg = 3
    dend_25 nseg = 5
    dend_23 nseg = 3
    dend_104 nseg = 3
    dend_103 nseg = 3
    dend_99 nseg = 3
    dend_98 nseg = 3
    dend_60 nseg = 3
    dend_50 nseg = 3
    dend_30 nseg = 3
    dend_28 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_SBC_7b122f5ac9_0_0


