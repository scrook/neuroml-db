// Cell: Cell_472442377
/*
{
  "id" : "Cell_472442377",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "330.819, 458.744, 44.24, 11.7196", "336.679, 458.744, 44.24, 11.7196", "342.539, 458.744, 44.24, 11.7196" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "336.679, 458.744, 44.24, 1.0", "342.52, 472.56, 44.24, 1.0", "348.362, 486.376, 44.24, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999756
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "332.055, 460.469, 42.7846, 0.5742", "331.481, 460.127, 41.741, 0.643", "330.713, 460.024, 41.3311, 0.5848", "330.662, 459.285, 41.0612, 0.6342", "331.54, 458.564, 40.8268, 0.5568", "332.446, 458.515, 40.32, 0.5084" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999756
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "332.413, 455.809, 48.6052, 0.5332", "331.315, 455.512, 48.5041, 0.7076", "330.263, 455.065, 48.4714, 0.8614", "329.2, 454.669, 48.3826, 0.94", "328.175, 454.232, 48.2157, 0.9152", "327.07, 453.937, 48.0805, 0.839" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999756
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "340.409, 455.231, 46.921, 0.5822", "341.318, 454.61, 47.9119, 0.6572", "341.95, 453.723, 48.804, 0.7588", "342.682, 452.866, 49.52, 0.7626", "343.439, 452.064, 49.8859, 0.6616", "344.247, 451.259, 50.0335, 0.5084" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999756
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "340.5, 454.742, 44.2268, 0.4328", "340.895, 453.682, 43.9664, 0.5008", "341.501, 452.743, 43.8281, 0.6752", "342.121, 451.811, 43.6391, 0.7604", "342.229, 450.681, 43.4759, 0.7876", "342.541, 449.592, 43.4361, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999756
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "348.362, 486.376, 44.24, 1.0", "354.203, 500.192, 44.24, 1.0", "360.044, 514.008, 44.24, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "327.07, 453.937, 48.0805, 0.839", "325.756, 454.166, 47.5972, 0.6742", "324.657, 454.482, 47.4592, 0.661", "323.521, 454.582, 47.4096, 0.6378", "322.427, 454.393, 47.28, 0.6356", "321.431, 453.854, 47.1528, 0.6594", "320.339, 453.54, 47.1229, 0.6852", "319.444, 452.865, 47.2144, 0.6368", "318.792, 451.984, 47.2167, 0.5338" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "327.07, 453.937, 48.0805, 0.839", "326.476, 453.391, 48.1334, 0.7416", "325.65, 452.608, 48.1695, 0.7124", "324.76, 451.89, 48.172, 0.637", "323.919, 451.168, 48.0676, 0.5088", "323.251, 450.265, 47.9058, 0.483" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "344.247, 451.259, 50.0335, 0.5084", "344.759, 451.735, 49.84, 0.6352", "345.621, 452.482, 49.6275, 0.661", "346.561, 453.076, 49.4794, 0.594", "347.594, 453.555, 49.3629, 0.5618", "348.667, 453.39, 49.3732, 0.5592", "349.8, 453.255, 49.3926, 0.6298", "350.94, 453.204, 49.3797, 0.6122", "351.962, 452.831, 49.2528, 0.586", "352.994, 452.343, 49.1473, 0.5114", "354.069, 451.956, 49.0672, 0.4592", "355.21, 451.999, 49.0246, 0.4082", "356.172, 452.543, 49.1131, 0.356" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "344.247, 451.259, 50.0335, 0.5084", "344.435, 450.655, 50.0287, 0.375", "344.536, 449.517, 50.0032, 0.356", "344.86, 448.422, 49.982, 0.4032", "345.211, 447.333, 49.9901, 0.4304", "345.447, 446.214, 50.0422, 0.4558", "345.767, 445.117, 50.1231, 0.5052", "345.924, 443.984, 50.2317, 0.6038", "346.31, 442.91, 50.3793, 0.7302", "346.806, 441.907, 50.626, 0.7856", "347.348, 440.927, 50.9435, 0.788", "348.018, 440.053, 51.3296, 0.788", "348.215, 438.933, 51.6757, 0.8134", "348.625, 437.866, 51.9478, 0.7626", "349.23, 436.895, 52.1556, 0.661" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "342.541, 449.592, 43.4361, 0.6864", "342.905, 448.798, 41.4319, 0.6464", "343.687, 448.639, 40.1358, 0.5676", "344.074, 449.471, 39.5718, 0.4612", "344.522, 450.449, 38.9928, 0.4322", "345.483, 450.451, 38.4835, 0.493", "346.368, 449.76, 38.1156, 0.5706", "346.742, 448.71, 37.9022, 0.5638", "347.059, 447.639, 37.8974, 0.5374", "347.371, 446.548, 37.9221, 0.5338", "348.0, 445.612, 37.9142, 0.6024", "348.778, 444.783, 37.9397, 0.6102", "349.513, 444.056, 38.1114, 0.5868", "350.511, 443.533, 38.1945, 0.512", "351.597, 443.244, 38.1458, 0.5332", "352.654, 443.481, 37.9576, 0.5338" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "342.541, 449.592, 43.4361, 0.6864", "343.022, 448.66, 43.4714, 0.6102" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "318.792, 451.984, 47.2167, 0.5338", "318.654, 451.299, 46.0208, 0.6", "318.611, 450.224, 45.1164, 0.4", "318.261, 449.706, 44.6242, 0.3852", "318.128, 449.108, 43.9373, 0.4988", "318.032, 448.033, 43.3468, 0.4016", "318.269, 447.072, 42.8366, 0.2832", "318.389, 446.185, 42.4189, 0.4586", "317.918, 445.775, 42.3517, 0.2288", "318.0, 444.756, 42.4432, 0.2288", "317.918, 443.674, 42.3973, 0.2568", "318.146, 443.193, 41.988, 0.4576", "318.229, 442.073, 41.5811, 0.3702", "318.261, 440.956, 41.1765, 0.3006", "318.146, 440.111, 41.0396, 0.5338", "317.78, 439.525, 40.7772, 0.2896", "317.306, 438.687, 40.6353, 0.3958", "316.936, 437.633, 40.4986, 0.659", "316.341, 436.691, 40.3483, 0.6238", "315.708, 435.858, 40.262, 0.4038", "315.314, 435.017, 40.1758, 0.3534", "315.143, 434.074, 40.0988, 0.575", "314.98, 433.149, 39.9994, 0.6616", "315.196, 432.057, 39.9498, 0.7074", "315.401, 431.072, 39.8138, 0.5168", "314.801, 430.319, 39.7404, 0.5024", "314.213, 429.506, 39.5108, 0.4188", "313.673, 428.541, 39.2613, 0.5984", "313.215, 427.534, 39.0488, 0.5936", "313.01, 426.688, 38.8184, 0.6542", "312.704, 425.847, 38.4115, 0.6198", "312.544, 424.774, 38.0251, 0.5928", "311.901, 423.911, 37.6692, 0.7112", "311.834, 423.394, 37.028, 0.6254", "311.387, 422.597, 36.3703, 0.9356", "311.282, 421.514, 35.9092, 0.6198", "311.282, 420.376, 35.5642, 0.6298", "311.296, 419.285, 35.4228, 0.5328", "311.503, 418.585, 35.2257, 0.2596", "310.731, 418.031, 35.1291, 0.5288", "310.514, 417.538, 34.7651, 0.5004", "309.746, 416.8, 34.4218, 0.5516", "309.277, 416.867, 34.3692, 0.3934", "308.625, 416.498, 34.4123, 0.3452", "307.942, 415.899, 34.3829, 0.2796", "307.913, 415.162, 34.1494, 0.6696", "307.506, 414.566, 34.0127, 0.5312", "307.008, 413.817, 33.983, 0.5904", "306.134, 413.432, 33.784, 0.5196", "305.539, 412.892, 33.4603, 0.5034", "304.874, 412.235, 33.2735, 0.6378", "304.152, 411.433, 33.1187, 0.6864", "304.025, 410.81, 32.8406, 0.305", "303.169, 410.778, 32.4587, 0.58", "302.366, 410.925, 32.018, 0.42", "301.668, 411.03, 31.4356, 0.4068", "300.666, 411.189, 30.8686, 0.356", "299.778, 410.71, 30.6043, 0.5282", "298.763, 410.353, 30.52, 0.3956", "298.125, 409.72, 30.5323, 0.5084", "297.372, 409.121, 30.4906, 0.5182", "296.741, 408.382, 30.3573, 0.6864", "296.54, 407.35, 30.0625, 0.6902", "296.298, 406.329, 29.6405, 0.3814", "296.43, 405.238, 29.3432, 0.4708", "297.199, 404.77, 29.1592, 0.5494", "297.696, 404.173, 28.9047, 0.416", "297.558, 403.429, 28.5152, 0.6166", "297.831, 402.716, 28.303, 0.4388", "298.409, 401.868, 28.1238, 0.5084", "298.891, 401.013, 27.916, 0.5804", "298.599, 400.076, 27.6615, 0.7054", "298.32, 399.032, 27.5447, 0.6228", "298.118, 397.915, 27.5069, 0.5848", "297.91, 396.84, 27.3815, 0.4744", "297.716, 395.954, 27.2849, 0.5228", "297.108, 395.13, 27.1113, 0.5084", "296.754, 394.154, 26.9618, 0.5862", "296.299, 393.271, 26.7543, 0.6492", "296.41, 392.187, 26.5796, 0.2648", "296.365, 391.314, 26.7022, 0.4254", "295.971, 390.395, 26.6907, 0.5756", "295.301, 389.515, 26.6784, 0.4226", "295.258, 388.524, 26.8349, 0.7538", "294.533, 387.778, 26.9198, 0.4348", "294.535, 386.755, 26.9212, 0.4546", "294.164, 385.765, 26.9648, 0.5288", "293.485, 384.901, 26.9511, 0.4396", "293.016, 384.022, 26.8162, 0.6102", "292.5, 383.084, 26.7632, 0.5338", "292.063, 382.429, 26.5454, 0.4034", "292.405, 381.753, 26.5171, 0.5186", "292.79, 381.0, 26.4723, 0.5592", "292.596, 380.198, 26.4093, 0.4576", "291.704, 379.548, 26.3771, 0.5164", "291.262, 378.586, 26.3096, 0.4576", "291.148, 377.851, 26.4412, 0.5338", "290.855, 377.583, 26.3614, 0.4062", "290.909, 376.673, 26.0641, 0.488", "290.694, 375.745, 25.7382, 0.5528", "290.805, 374.694, 25.4481, 0.5736", "290.601, 373.883, 25.3834, 0.4916", "290.7, 373.368, 25.0771, 0.4576", "290.69, 372.336, 24.7817, 0.3814", "289.924, 371.864, 24.7142, 0.3304", "289.926, 370.959, 24.5064, 0.558", "289.939, 369.951, 24.297, 0.5154", "289.958, 368.85, 24.1931, 0.5084", "290.352, 367.791, 24.1111, 0.346", "291.094, 367.155, 24.1508, 0.3764", "291.449, 367.094, 24.052, 0.4546", "291.263, 366.347, 23.7737, 0.2288", "291.6, 365.358, 23.6384, 0.4206", "291.568, 364.707, 23.6712, 0.3814", "291.856, 364.04, 23.553, 0.3814", "291.585, 363.052, 23.4254, 0.305", "291.72, 362.18, 23.4458, 0.311", "291.418, 361.147, 23.4842, 0.3566", "291.125, 360.368, 23.6376, 0.628", "290.927, 359.877, 23.6354, 0.6864", "290.919, 359.445, 24.36, 0.3814" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "318.792, 451.984, 47.2167, 0.5338", "317.589, 451.086, 47.3945, 0.5182", "316.531, 450.914, 47.6927, 0.596", "315.448, 450.627, 47.9584, 0.6756", "314.41, 450.148, 48.1726, 0.7262", "313.388, 449.702, 48.2832, 0.767", "312.359, 449.266, 48.3714, 0.8038", "311.477, 448.607, 48.5215, 0.8618", "310.73, 447.758, 48.6931, 0.9386", "310.253, 446.973, 48.83, 0.8894", "309.585, 446.42, 49.1193, 0.673", "308.65, 446.312, 49.278, 0.6358", "307.681, 446.497, 49.5813, 0.6376", "306.83, 445.846, 49.8641, 0.6864", "306.427, 445.436, 50.2718, 0.6102" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "323.251, 450.265, 47.9058, 0.483", "322.545, 449.266, 47.7638, 0.4122", "322.327, 448.47, 47.703, 0.3746", "322.699, 447.603, 47.7344, 0.6", "322.942, 446.606, 47.7232, 0.4948", "322.693, 445.521, 47.7394, 0.5796", "322.299, 444.494, 47.6627, 0.5292", "322.265, 443.394, 47.6395, 0.483", "322.276, 442.263, 47.5955, 0.396", "322.15, 441.131, 47.5546, 0.3306", "322.254, 440.026, 47.5269, 0.376", "322.919, 439.249, 47.5496, 0.5704", "322.686, 438.408, 47.418, 0.5322", "322.494, 437.546, 47.3228, 0.6254", "322.171, 436.766, 47.3682, 0.4068", "322.379, 435.75, 47.3021, 0.4576", "322.379, 434.752, 47.425, 0.5272", "322.494, 433.767, 47.5616, 0.4576", "322.353, 432.82, 47.705, 0.3696", "322.15, 432.032, 47.6022, 0.7824", "322.15, 430.888, 47.5398, 0.661", "322.036, 429.754, 47.5364, 0.5848", "322.301, 428.78, 47.6946, 0.5984", "322.718, 427.884, 48.0032, 0.5592", "323.115, 426.908, 48.2608, 0.4358", "322.893, 425.994, 48.5929, 0.4772", "322.722, 424.887, 48.8631, 0.356", "322.736, 423.842, 48.9129, 0.7366", "322.303, 422.975, 48.9908, 0.6864" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "323.251, 450.265, 47.9058, 0.483", "321.846, 450.063, 47.0002, 0.4464", "320.812, 449.743, 47.4956, 0.523", "320.042, 448.935, 47.6963, 0.5766", "319.374, 448.037, 47.9469, 0.5672", "318.521, 447.31, 48.1723, 0.5062", "317.562, 446.722, 48.2787, 0.501", "316.669, 446.03, 48.3554, 0.5642", "315.85, 445.254, 48.4708, 0.6224", "315.018, 444.475, 48.5775, 0.6356", "314.121, 443.774, 48.6402, 0.6166", "313.32, 442.996, 48.6366, 0.6296", "312.74, 442.087, 48.7572, 0.6556", "312.342, 441.098, 49.0168, 0.6814", "311.844, 440.089, 49.2626, 0.666", "311.153, 439.181, 49.4542, 0.6404", "310.38, 438.34, 49.5916, 0.615", "309.691, 437.428, 49.6706, 0.5896", "309.055, 436.481, 49.6689, 0.5432", "308.612, 435.456, 49.5684, 0.492", "308.099, 434.459, 49.5499, 0.5042", "307.389, 433.575, 49.5407, 0.5742", "306.625, 432.727, 49.5449, 0.652", "305.86, 431.922, 49.6807, 0.6382", "305.115, 431.058, 49.8467, 0.5898", "304.448, 430.13, 50.0192, 0.5154", "303.84, 429.165, 50.2023, 0.5548", "303.6, 428.094, 50.4762, 0.606", "303.274, 427.003, 50.724, 0.7044", "302.977, 425.897, 50.918, 0.688", "302.604, 424.816, 51.0768, 0.6388", "302.01, 423.842, 51.2193, 0.5154", "301.079, 423.247, 51.4228, 0.4592", "300.357, 422.372, 51.6149, 0.4576", "299.693, 421.442, 51.7353, 0.5568", "298.873, 420.659, 51.758, 0.661" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "356.172, 452.543, 49.1131, 0.356", "356.724, 452.477, 49.28, 0.3304", "357.434, 452.251, 49.6804, 0.9232", "358.155, 451.847, 49.7669, 0.5342", "358.925, 451.329, 49.9696, 0.505", "359.947, 451.107, 50.2788, 0.4694", "360.659, 450.373, 50.5725, 0.335", "361.229, 449.515, 50.7209, 0.5798", "361.983, 448.799, 50.7069, 0.6974", "362.871, 448.314, 50.7203, 0.4596", "363.757, 447.87, 50.8483, 0.6648", "364.703, 447.558, 50.836, 0.582", "365.487, 446.852, 50.8612, 0.5178", "366.276, 446.224, 50.9583, 0.3814", "367.066, 446.16, 50.8365, 0.5894", "367.827, 445.778, 50.5638, 0.4676", "368.332, 444.965, 50.4854, 0.392", "369.054, 444.532, 50.5151, 0.6864", "369.636, 443.807, 50.3933, 0.3616", "370.621, 443.468, 50.2505, 0.6356", "371.604, 443.06, 50.2138, 0.5592", "372.413, 442.663, 50.0676, 0.474", "373.212, 442.078, 49.8515, 0.3044", "374.064, 441.34, 49.6647, 0.4672", "374.774, 440.669, 49.6885, 0.4322" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "356.172, 452.543, 49.1131, 0.356", "357.0, 453.128, 49.2103, 0.4244", "357.805, 453.89, 49.1977, 0.409", "358.614, 454.671, 49.2251, 0.4542", "359.145, 455.628, 49.3242, 0.53", "359.666, 456.644, 49.3422, 0.6102" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "349.23, 436.895, 52.1556, 0.661", "348.147, 437.76, 51.8815, 0.2764", "347.17, 438.126, 52.4656, 0.3814", "346.03, 438.142, 52.6481, 0.4026", "344.906, 438.057, 52.8256, 0.3304", "344.29, 438.69, 53.1829, 0.387", "343.277, 438.876, 53.4649, 0.4322" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "349.23, 436.895, 52.1556, 0.661", "349.485, 436.248, 52.3118, 0.7232", "349.94, 435.201, 52.4496, 0.7314", "350.421, 434.187, 52.6378, 0.6486", "350.831, 433.138, 52.8676, 0.5142", "351.42, 432.178, 53.0813, 0.3902", "352.302, 431.47, 53.2641, 0.3212", "353.124, 430.687, 53.4265, 0.3224", "353.541, 429.677, 53.6239, 0.384", "353.638, 428.558, 53.8306, 0.4972", "353.788, 427.429, 53.9899, 0.625", "354.322, 426.443, 54.096, 0.661", "354.951, 425.488, 54.154, 0.6242", "355.408, 424.445, 54.1699, 0.5358", "355.783, 423.365, 54.1444, 0.5646", "356.084, 422.287, 54.0403, 0.6416", "356.619, 421.303, 53.9148, 0.7758", "357.243, 420.348, 53.8521, 0.8136", "357.833, 419.396, 53.9171, 0.8522", "358.405, 418.42, 54.0523, 0.8644", "359.082, 417.503, 54.1954, 0.9034", "359.687, 416.534, 54.3421, 0.876" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "352.654, 443.481, 37.9576, 0.5338", "353.474, 442.73, 37.676, 0.4512", "354.36, 442.608, 37.4884, 0.4912", "355.317, 442.388, 37.452, 0.3814", "356.269, 442.831, 37.4769, 0.4344", "357.396, 442.976, 37.4839, 0.5784", "358.333, 443.345, 37.4273, 0.7606", "359.035, 443.521, 37.2823, 0.7224", "360.135, 443.565, 37.07, 0.6818", "361.199, 443.239, 36.9256, 0.6456", "362.191, 442.689, 36.9057, 0.589", "363.157, 442.121, 37.03, 0.5122", "364.08, 441.475, 37.2515, 0.4356", "365.064, 440.909, 37.4956, 0.3908", "366.052, 440.338, 37.7314, 0.4136", "366.997, 439.693, 37.9504, 0.4484", "368.002, 439.177, 38.1931, 0.4576", "369.005, 438.885, 38.5644, 0.4046", "370.091, 438.723, 38.9735, 0.3814", "371.151, 438.369, 39.2708, 0.4196", "372.149, 437.867, 39.5721, 0.4708", "373.176, 437.384, 39.8667, 0.4438", "374.284, 437.267, 40.1702, 0.3728", "375.406, 437.383, 40.4776, 0.3356", "376.41, 437.84, 40.6773, 0.3716", "377.469, 438.078, 40.9542, 0.4462", "378.475, 437.801, 41.3448, 0.5478", "379.568, 437.498, 41.6875, 0.6502", "380.437, 436.773, 41.972, 0.6842", "381.033, 435.802, 42.2195, 0.5944", "381.696, 434.871, 42.4497, 0.4226", "382.549, 434.114, 42.6684, 0.337", "383.609, 433.885, 42.9828, 0.355", "384.474, 433.364, 43.458, 0.4858", "385.274, 432.547, 43.8651, 0.5876", "386.039, 431.701, 44.2053, 0.6878", "386.6, 430.735, 44.5477, 0.736", "386.979, 429.665, 44.8311, 0.709", "387.422, 428.618, 44.9756, 0.6564", "388.073, 427.728, 44.9683, 0.5828", "388.414, 426.658, 45.0411, 0.5566", "388.587, 425.551, 45.157, 0.5338", "389.185, 424.582, 45.2407, 0.537", "390.006, 423.786, 45.3149, 0.5624", "390.899, 423.083, 45.4107, 0.5848", "391.909, 422.568, 45.5059, 0.573", "392.861, 422.043, 45.4574, 0.476", "393.735, 421.462, 45.3603, 0.426", "394.108, 420.492, 45.2995, 0.7372", "394.661, 419.677, 45.4398, 0.6864", "395.164, 418.912, 45.7156, 0.7118", "395.481, 418.069, 46.1087, 0.6864", "395.997, 417.42, 46.3674, 0.6378", "396.943, 416.895, 46.4867, 0.7092", "397.908, 416.591, 46.5058, 0.6232", "399.004, 416.463, 46.5816, 0.5142", "400.021, 416.073, 46.7457, 0.4706", "400.836, 415.544, 46.9468, 0.5848", "404.979, 412.589, 48.2518, 0.663", "405.835, 412.356, 48.5366, 0.3924", "406.552, 411.624, 48.8152, 0.5338", "407.648, 411.573, 49.1534, 0.402", "408.435, 411.411, 49.4749, 0.6864", "409.258, 411.611, 49.8515, 0.3638", "410.059, 411.551, 50.405, 0.4778", "410.996, 412.11, 50.9155, 0.4136", "411.644, 412.471, 51.3873, 0.319", "412.629, 412.413, 51.8361, 0.6132", "413.635, 412.747, 52.2799, 0.6184", "414.641, 412.743, 52.7232, 0.3084", "415.584, 412.437, 53.1541, 0.6524", "416.676, 412.539, 53.4691, 0.7064", "417.673, 412.526, 53.9596, 0.4072", "418.403, 412.116, 54.3404, 0.6356", "419.271, 411.59, 54.7285, 0.7798", "420.125, 411.673, 55.1944, 0.6864", "421.185, 412.03, 55.6637, 0.702", "422.223, 412.16, 56.238, 0.742", "423.081, 412.466, 56.7014, 0.6762", "423.609, 412.785, 57.3325, 0.8324", "424.537, 412.755, 57.9533, 0.312", "425.11, 412.889, 58.5735, 0.2288", "425.88, 413.496, 58.9291, 0.7232", "426.761, 414.122, 59.1234, 0.7372", "427.875, 414.242, 59.2124, 0.5132", "428.991, 414.228, 59.1914, 0.5602", "429.322, 414.746, 59.2458, 0.5544", "430.177, 415.094, 59.4051, 0.6516", "430.655, 414.61, 59.7744, 0.511", "431.402, 414.75, 60.2753, 0.559", "432.173, 415.1, 60.7908, 0.4386", "432.93, 415.577, 60.9714, 0.3554", "434.028, 415.73, 60.9526, 0.2288", "434.79, 416.294, 60.8838, 0.25", "435.784, 416.636, 60.7743, 0.4556", "436.518, 417.123, 60.5097, 0.4884", "437.371, 417.36, 60.214, 0.6254", "438.094, 417.903, 60.0869, 0.496", "438.61, 417.331, 60.48, 0.4068" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "352.654, 443.481, 37.9576, 0.5338", "352.879, 443.759, 37.4046, 0.5666", "353.703, 444.386, 36.6635, 0.627", "354.765, 444.315, 36.3398, 0.6102", "355.436, 444.394, 35.9579, 0.6102" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "343.022, 448.66, 43.4714, 0.6102", "342.909, 447.906, 40.9206, 0.4668", "342.857, 446.946, 40.3743, 0.3938", "342.919, 446.015, 40.3124, 0.5958", "343.245, 445.022, 40.1668, 0.4278", "343.871, 445.245, 39.7085, 0.4576", "344.583, 445.093, 39.1227, 0.521", "344.7, 444.038, 38.6918, 0.6864", "344.516, 443.087, 38.4835, 0.4646", "344.664, 442.018, 38.2735, 0.4322", "345.041, 440.983, 38.1284, 0.4442", "345.288, 439.923, 38.0568, 0.2352", "346.057, 439.355, 38.1024, 0.3586", "346.067, 438.218, 38.2127, 0.5112", "346.411, 437.564, 38.6134, 0.529", "347.021, 436.691, 39.0289, 0.5002", "347.465, 435.644, 39.3644, 0.5774", "347.961, 434.616, 39.6211, 0.5848", "348.488, 433.65, 39.8737, 0.561", "349.147, 432.721, 40.01, 0.5592", "349.86, 431.837, 39.9694, 0.5592", "350.622, 431.032, 39.7617, 0.535", "351.349, 430.153, 39.5077, 0.437", "351.572, 429.064, 39.1552, 0.3814" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "343.022, 448.66, 43.4714, 0.6102", "343.547, 447.757, 43.629, 0.5618", "344.18, 446.809, 43.7875, 0.6322", "344.878, 445.903, 43.9023, 0.6598", "345.529, 444.962, 43.9575, 0.6366", "346.139, 443.994, 43.9482, 0.6112", "346.521, 442.918, 43.8816, 0.6592", "346.807, 441.839, 43.703, 0.6858", "347.147, 440.763, 43.4874, 0.7116", "347.537, 439.698, 43.2774, 0.661", "348.107, 438.724, 43.1276, 0.661" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "306.427, 445.436, 50.2718, 0.6102", "305.086, 445.473, 49.8532, 0.405", "304.087, 445.492, 49.9083, 0.731", "303.228, 445.268, 49.8014, 0.6002", "302.117, 445.364, 49.8299, 0.6518", "301.286, 445.586, 50.1133, 0.283", "300.687, 445.337, 50.6254, 0.596", "299.792, 444.902, 51.0619, 0.5842", "298.756, 445.112, 51.4769, 0.614", "297.843, 444.558, 51.7888, 0.5592", "297.056, 443.951, 51.926, 0.4526", "296.245, 443.891, 51.8697, 0.6124", "295.553, 443.591, 51.5976, 0.8136", "294.706, 443.411, 51.4772, 0.5258", "293.843, 443.151, 51.2837, 0.4006", "292.915, 442.817, 51.2086, 0.4356", "292.178, 442.297, 51.1893, 0.6864", "292.044, 441.394, 51.1832, 0.661", "291.845, 440.36, 51.1434, 0.4166", "291.825, 439.351, 51.2462, 0.5592", "291.207, 438.709, 51.6149, 0.5478", "290.74, 438.149, 52.2995, 0.6028", "290.347, 438.038, 52.717, 0.5338" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "306.427, 445.436, 50.2718, 0.6102", "305.882, 444.57, 50.8194, 0.38", "305.165, 443.993, 51.3131, 0.3524", "305.088, 443.146, 51.8692, 0.6144", "305.003, 442.272, 52.4482, 0.6612", "304.738, 441.272, 52.7817, 0.4662", "304.304, 440.307, 52.9645, 0.6324", "303.865, 439.491, 53.0435, 0.4322", "304.228, 438.446, 53.0186, 0.4736", "304.487, 437.356, 52.939, 0.5084", "304.533, 436.222, 52.8881, 0.5068", "304.023, 435.675, 52.6596, 0.3658", "303.372, 434.932, 52.4126, 0.4386", "302.941, 434.38, 52.6302, 0.356", "302.609, 433.97, 53.1882, 0.4916", "301.545, 433.637, 53.6852, 0.5566", "301.017, 432.894, 54.2679, 0.5848", "300.954, 432.012, 54.8761, 0.6206", "300.751, 431.031, 55.4067, 0.4312", "300.235, 430.237, 55.8606, 0.628", "299.753, 429.458, 56.1576, 0.6438", "298.992, 428.938, 56.2083, 0.5214", "298.093, 428.421, 56.282, 0.5592", "297.533, 427.608, 56.3228, 0.7128", "297.098, 427.051, 56.5359, 0.4576", "297.051, 425.925, 56.6639, 0.6102", "296.835, 424.86, 56.863, 0.564", "296.525, 423.948, 57.1861, 0.747", "296.161, 423.151, 57.4207, 0.6924", "295.678, 422.246, 57.5352, 0.4788", "295.27, 421.451, 57.5397, 0.3628", "295.152, 420.566, 57.4165, 0.4204", "295.462, 419.831, 57.4666, 0.5456", "295.407, 418.837, 57.5285, 0.874", "295.699, 417.927, 57.7164, 0.6212", "295.215, 417.146, 57.7156, 0.626", "294.493, 416.746, 57.7016, 0.6362", "294.106, 416.185, 57.785, 0.3304", "293.562, 415.313, 57.8757, 0.7532", "292.906, 414.488, 57.8701, 0.6362", "292.29, 413.546, 57.8301, 0.564", "291.627, 412.764, 57.7856, 0.7372", "291.242, 411.805, 57.8057, 0.6224", "290.634, 411.109, 57.6582, 0.4842", "290.078, 410.349, 57.5792, 0.4684", "290.051, 409.668, 57.584, 0.4576", "289.662, 408.986, 57.3692, 0.3032", "289.201, 408.181, 57.3118, 0.5376", "288.655, 407.329, 57.1732, 0.4792", "288.145, 406.738, 57.0648, 0.413", "287.579, 405.907, 56.9089, 0.293", "287.022, 405.06, 56.7647, 0.4182", "286.276, 404.451, 56.6059, 0.4522", "285.561, 403.855, 56.5874, 0.483", "284.719, 403.13, 56.5975, 0.4506", "283.839, 402.447, 56.607, 0.5084", "283.57, 401.968, 56.7902, 0.2806", "283.213, 400.955, 56.922, 0.3164", "283.09, 399.901, 57.0066, 0.305", "282.189, 399.357, 57.0606, 0.2288", "281.224, 399.568, 57.2152, 0.2288", "280.608, 398.82, 57.4608, 0.2898", "280.28, 397.79, 57.5716, 0.2666", "280.263, 396.727, 57.787, 0.4278", "280.365, 395.634, 57.976, 0.3872", "280.474, 394.562, 58.109, 0.3892", "279.832, 393.79, 58.0796, 0.4042", "279.272, 393.109, 58.0331, 0.4474", "278.468, 392.339, 58.0482, 0.3814", "277.824, 391.741, 57.885, 0.5068", "277.032, 390.944, 57.7637, 0.3616", "276.238, 390.255, 57.603, 0.453", "275.878, 389.216, 57.388, 0.409", "275.25, 388.677, 57.295, 0.2288", "274.648, 387.962, 57.0475, 0.2288", "274.066, 387.112, 56.884, 0.2288", "273.154, 386.461, 56.7857, 0.3038", "272.296, 385.901, 56.6532, 0.2288", "271.756, 385.016, 56.6143, 0.3962", "271.245, 384.042, 56.5852, 0.4438", "270.865, 383.299, 56.4869, 0.2288", "270.109, 382.511, 56.495, 0.305", "269.563, 381.527, 56.5062, 0.3716", "269.071, 380.5, 56.5242, 0.4322", "268.565, 379.541, 56.4931, 0.2476", "268.715, 378.508, 56.5516, 0.2318", "268.285, 377.479, 56.6286, 0.4256", "267.913, 376.489, 56.5746, 0.4576", "267.253, 375.642, 56.5743, 0.3054", "266.848, 374.732, 56.4514, 0.2326", "266.439, 373.76, 56.4455, 0.305", "265.798, 372.825, 56.4967, 0.3478", "265.03, 371.982, 56.544, 0.3304", "264.539, 371.376, 56.6028, 0.2288", "264.002, 370.507, 56.7036, 0.3814", "263.626, 369.436, 56.8005, 0.4068", "263.014, 368.613, 56.8935, 0.3538", "262.58, 367.675, 56.8333, 0.4242", "262.286, 366.682, 56.7798, 0.3444", "261.554, 365.843, 56.6908, 0.378", "261.068, 364.987, 56.6294, 0.4376", "260.718, 363.906, 56.56, 0.5338" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "322.303, 422.975, 48.9908, 0.6864", "323.132, 422.623, 47.7691, 0.4808", "324.001, 422.256, 46.8446, 0.265", "324.921, 421.793, 46.5055, 0.5376", "325.481, 421.27, 46.3596, 0.5046", "325.987, 420.548, 46.0586, 0.2706", "326.612, 419.835, 45.7061, 0.5008", "326.849, 419.082, 45.194, 0.6512", "327.563, 418.267, 44.8216, 0.5142", "328.369, 417.571, 44.4181, 0.5388", "328.905, 416.991, 44.196, 0.6122", "328.972, 415.981, 43.9586, 0.6102", "329.304, 415.041, 43.8136, 0.5482", "329.795, 414.46, 43.4255, 0.6498", "330.482, 414.241, 42.8557, 0.457", "331.265, 414.014, 42.4043, 0.5336", "331.833, 413.292, 42.016, 0.7186", "332.096, 412.31, 41.8474, 0.5624", "332.103, 411.287, 41.8813, 0.4684", "332.417, 410.622, 41.8202, 0.5138", "332.727, 409.563, 41.7897, 0.491", "333.383, 409.118, 41.7519, 0.515", "334.154, 408.488, 41.531, 0.6356", "334.839, 408.163, 41.3042, 0.4106", "335.421, 408.077, 40.6454, 0.4322", "335.985, 407.51, 39.9314, 0.4764", "336.224, 406.555, 39.2969, 0.4944", "336.786, 406.245, 38.4787, 0.4704", "337.199, 405.662, 37.6835, 0.35", "337.257, 404.807, 37.0264, 0.661", "336.679, 404.099, 36.7374, 0.493", "335.98, 403.565, 36.4608, 0.305", "335.471, 402.869, 36.325, 0.359", "334.831, 402.306, 36.395, 0.6556", "334.224, 401.387, 36.4585, 0.552", "333.89, 400.417, 36.4414, 0.5192", "333.34, 399.581, 36.2785, 0.3848", "332.998, 398.678, 36.0046, 0.4288", "332.369, 398.017, 35.8324, 0.5504", "331.885, 397.02, 35.6717, 0.5198", "331.163, 396.272, 35.5544, 0.5742", "330.547, 395.435, 35.4404, 0.356", "330.241, 394.523, 35.2663, 0.356", "330.249, 393.801, 34.8768, 0.6864", "330.361, 392.773, 34.6284, 0.4964", "330.481, 391.984, 34.1354, 0.8162", "330.76, 390.96, 33.6098, 0.5282", "331.073, 389.996, 33.1568, 0.3794", "331.739, 389.269, 32.965, 0.2704", "331.6, 388.494, 32.8502, 0.5542", "331.188, 387.692, 32.7202, 0.5558", "330.73, 387.053, 32.8628, 0.571", "330.281, 386.266, 32.9314, 0.528", "330.041, 385.272, 32.8658, 0.5062", "329.606, 384.607, 32.9958, 0.2452", "329.012, 384.01, 32.965, 0.2354", "328.542, 383.354, 32.6091, 0.36", "328.152, 382.667, 32.3022, 0.3394", "328.096, 381.684, 32.0978, 0.312", "327.154, 381.45, 31.8343, 0.4814", "326.901, 381.266, 31.2676, 0.4136", "326.615, 380.496, 30.8132, 0.2462", "327.184, 379.618, 30.5822, 0.3954", "327.857, 378.857, 30.5617, 0.4744", "328.061, 377.772, 30.588, 0.5848", "327.756, 376.982, 30.3965, 0.536", "326.867, 376.732, 30.1263, 0.4156", "325.894, 376.612, 29.7562, 0.3754", "325.468, 376.159, 29.4311, 0.4754", "324.694, 375.576, 29.0433, 0.3512", "324.485, 374.85, 28.8602, 0.369", "323.751, 374.065, 28.7874, 0.5462", "323.14, 373.171, 28.6334, 0.6624", "322.684, 372.985, 28.2954, 0.2398", "321.727, 373.319, 27.9272, 0.628", "320.677, 373.392, 27.5884, 0.4216", "319.769, 373.052, 27.2093, 0.5274", "319.685, 371.968, 26.8766, 0.7346", "319.723, 370.997, 26.5908, 0.5566", "319.627, 369.931, 26.3236, 0.5068", "319.085, 369.017, 26.2307, 0.532", "318.748, 367.949, 26.2083, 0.6826", "318.166, 367.557, 26.3542, 0.648", "318.49, 366.538, 26.88, 0.5084" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "322.303, 422.975, 48.9908, 0.6864", "321.922, 422.008, 48.8642, 0.6102", "321.584, 421.221, 48.6786, 0.3518", "321.354, 420.647, 48.8519, 1.0652", "321.217, 419.598, 49.0398, 0.6552", "320.814, 419.148, 48.9899, 0.5592", "320.279, 418.273, 49.0697, 0.6794", "319.977, 417.486, 49.3354, 1.1048", "320.202, 416.393, 49.523, 0.6484", "319.857, 415.373, 49.6409, 0.555", "319.223, 414.71, 49.9131, 0.5608", "318.491, 414.032, 50.1536, 0.6578", "318.034, 413.042, 50.2373, 0.8244", "317.689, 412.241, 50.0937, 0.9152", "317.102, 411.536, 49.9528, 0.6298", "316.777, 410.561, 49.7983, 0.5272", "316.545, 409.703, 49.5872, 0.8504", "316.205, 409.17, 49.653, 0.6804", "315.991, 408.291, 49.8509, 0.7082", "315.368, 407.491, 49.9136, 0.6578", "315.272, 406.842, 49.8319, 0.412", "315.094, 405.837, 49.7286, 0.6102", "315.649, 405.063, 49.5765, 0.3576", "315.282, 404.415, 49.5998, 0.6508", "315.296, 403.539, 49.5538, 0.5294", "314.95, 402.809, 49.3528, 0.8136", "314.685, 401.893, 49.0932, 0.4586", "314.371, 400.824, 48.9398, 0.526", "314.46, 399.731, 48.8914, 0.7204", "314.25, 398.794, 48.9633, 0.6488", "314.371, 397.984, 48.9048, 0.81", "314.145, 396.97, 48.8536, 0.7436", "314.244, 396.073, 48.7416, 0.5968", "314.253, 394.966, 48.5652, 0.4796", "313.914, 393.936, 48.452, 0.561", "313.931, 392.853, 48.3358, 0.361", "314.178, 391.853, 48.1886, 0.7196", "314.257, 390.753, 48.0208, 0.5308", "314.184, 389.643, 47.936, 0.6356", "314.041, 388.941, 48.0511, 0.7376", "313.625, 388.324, 47.8724, 0.8462", "313.341, 387.346, 47.6395, 0.7782", "313.014, 386.294, 47.5317, 0.8564", "312.662, 385.243, 47.3592, 0.712", "312.603, 384.117, 47.2038, 0.6356", "312.253, 383.091, 47.0618, 0.5882", "311.328, 382.558, 46.86, 0.7108", "310.513, 382.102, 46.522, 0.6206", "310.013, 381.566, 46.3324, 0.6582", "309.414, 380.896, 46.0018, 0.6388", "308.646, 380.306, 45.7139, 0.5274", "307.857, 379.572, 45.6392, 0.383", "307.053, 379.181, 45.8181, 0.2698", "306.061, 378.695, 45.9522, 0.2796", "305.522, 377.962, 45.9858, 0.5094", "304.873, 377.283, 46.011, 0.4408", "304.17, 376.422, 45.9799, 0.4136", "303.528, 375.608, 46.1121, 0.5338", "302.881, 375.304, 46.0289, 0.3984", "302.812, 374.194, 46.0846, 0.4746", "302.291, 373.422, 46.3688, 0.4322", "302.016, 372.653, 46.5861, 0.5702", "301.85, 371.794, 46.9552, 0.4542", "301.198, 371.07, 47.3116, 0.5042", "301.227, 370.31, 47.7873, 0.6278", "301.419, 369.259, 48.0164, 0.4666", "301.362, 368.146, 48.12, 0.3922", "301.246, 367.097, 48.214, 0.5084", "301.189, 366.096, 48.3218, 0.356", "301.153, 365.066, 48.5643, 0.4268", "301.082, 363.962, 48.8186, 0.5024", "300.805, 363.066, 49.0652, 0.5106", "300.646, 362.135, 49.3623, 0.6864", "300.195, 361.498, 49.4138, 0.6158", "299.608, 360.711, 49.4292, 0.614", "299.187, 359.841, 49.3486, 0.3584", "298.595, 358.923, 49.3072, 0.6222", "298.02, 358.057, 49.2206, 0.503", "297.379, 357.355, 49.142, 0.3886", "297.097, 356.507, 49.042, 0.4246", "296.875, 355.418, 48.9219, 0.4776", "296.639, 354.379, 48.7348, 0.313", "296.056, 353.546, 48.6402, 0.4376", "295.588, 352.559, 48.5243, 0.5266", "295.039, 351.793, 48.4014, 0.5084", "294.42, 350.964, 48.3574, 0.2568", "293.928, 350.096, 48.3297, 0.356", "293.444, 349.155, 48.2952, 0.3394", "293.516, 348.083, 48.3028, 0.4068", "292.968, 347.201, 48.2723, 0.3338", "292.495, 346.224, 48.3294, 0.4168", "291.981, 345.218, 48.3624, 0.3886", "291.481, 344.306, 48.3067, 0.2684", "291.369, 343.247, 48.1639, 0.3402", "291.222, 342.207, 48.1216, 0.4452", "290.853, 341.138, 48.0794, 0.3764", "290.971, 340.093, 47.9752, 0.4622", "290.793, 339.035, 47.8789, 0.4048", "290.382, 338.042, 47.7011, 0.2542", "290.277, 336.937, 47.5454, 0.2654", "290.288, 335.81, 47.3866, 0.2472", "290.584, 334.862, 47.2536, 0.4158", "290.192, 333.983, 47.0624, 0.356", "289.68, 333.032, 46.9596, 0.2692", "289.962, 332.037, 46.8801, 0.2732", "289.868, 331.138, 46.7908, 0.356", "289.566, 330.085, 46.6822, 0.3684", "289.582, 329.018, 46.5256, 0.2796", "289.546, 328.278, 46.3674, 0.2728", "289.206, 327.35, 46.268, 0.4176", "289.234, 326.408, 46.1798, 0.2288", "289.3, 325.557, 46.0065, 0.3478", "288.675, 324.759, 45.8374, 0.4808", "288.305, 324.075, 45.6313, 0.34", "287.672, 323.398, 45.3079, 0.2288", "287.336, 322.502, 45.0976, 0.4116", "287.03, 321.807, 44.52, 0.356" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "298.873, 420.659, 51.758, 0.661", "298.299, 420.332, 50.5019, 0.627", "297.289, 420.547, 50.7279, 0.4326", "296.54, 420.764, 50.8418, 0.4576", "295.591, 420.534, 50.9704, 0.2528", "295.039, 419.798, 51.1829, 0.3938", "294.201, 419.143, 51.3002, 0.4954", "293.443, 418.941, 51.1165, 0.641", "292.635, 419.084, 50.9606, 0.4268", "291.944, 418.802, 50.8382, 0.5148", "290.914, 418.608, 50.668, 0.6102", "290.018, 418.181, 50.6234, 0.5234", "289.064, 417.771, 50.7133, 0.6356", "288.253, 417.13, 50.7534, 0.2796", "287.517, 416.438, 50.736, 0.6414", "286.556, 415.958, 50.7615, 0.5848", "285.628, 415.921, 50.8799, 0.6158", "284.784, 415.483, 51.0017, 0.3714", "284.131, 414.723, 50.9398, 0.6862", "283.715, 413.972, 50.7993, 0.2522", "283.273, 413.245, 50.6948, 0.4522", "282.744, 412.319, 50.5806, 0.5848", "282.417, 411.655, 50.3709, 0.3814", "281.874, 411.429, 50.3101, 0.5678", "281.426, 410.665, 50.0662, 0.6598", "280.86, 409.74, 49.812, 0.305", "280.651, 408.774, 49.7608, 0.5084", "280.124, 408.151, 49.5723, 0.6518", "279.714, 407.41, 49.3643, 0.4576", "278.991, 406.614, 49.1887, 0.5266", "278.002, 406.222, 49.0888, 0.3898", "277.278, 406.738, 48.8194, 0.4474", "276.531, 406.372, 48.5576, 0.4112", "275.908, 405.604, 48.3462, 0.3772", "275.361, 404.72, 48.1765, 0.4972", "274.899, 404.107, 47.9419, 0.4438", "274.172, 403.3, 47.6608, 0.552", "273.66, 402.669, 47.194, 0.4248", "273.254, 401.719, 46.6942, 0.4896", "272.662, 400.979, 46.1507, 0.6816", "271.949, 400.83, 45.6926, 0.3304", "271.138, 400.145, 45.2838, 0.5146", "270.652, 399.297, 44.9417, 0.2838", "270.977, 398.897, 44.431, 0.3922", "270.204, 398.57, 43.8001, 0.2542", "269.45, 398.798, 43.3056, 0.4576", "268.476, 399.215, 42.9103, 0.4328", "267.578, 399.335, 42.539, 0.4068", "266.587, 398.818, 42.2688, 0.356", "265.588, 398.494, 42.0535, 0.5078", "264.499, 398.57, 41.8317, 0.4804", "263.417, 398.497, 41.6332, 0.4184", "262.334, 398.368, 41.5341, 0.3304", "261.638, 398.678, 41.3277, 0.356", "260.536, 398.459, 41.174, 0.3564", "259.435, 398.25, 41.0183, 0.2542", "258.407, 398.422, 40.9282, 0.4034", "257.371, 398.441, 40.9648, 0.4084", "256.722, 397.924, 40.908, 0.4442", "256.228, 397.526, 40.9332, 0.4588", "255.544, 396.705, 40.9825, 0.4576", "254.612, 396.203, 40.9161, 0.4146", "253.531, 395.925, 40.9004, 0.4352", "252.692, 395.319, 40.868, 0.3984", "251.696, 394.981, 40.8114, 0.5158", "250.864, 394.356, 40.7243, 0.5074", "250.099, 394.11, 40.7224, 0.6304", "249.219, 393.551, 40.6907, 0.4884", "248.138, 393.306, 40.6778, 0.3284", "247.174, 393.615, 40.6969, 0.3466", "246.685, 394.241, 40.5849, 0.4576", "246.296, 394.554, 40.6885, 0.4278", "245.696, 393.692, 40.8542, 0.408", "245.073, 393.281, 40.8344, 0.2458", "244.09, 392.964, 40.8954, 0.5104", "243.388, 392.374, 41.0404, 0.5848", "242.907, 391.412, 41.1575, 0.3304", "242.76, 390.676, 41.1961, 0.3928", "241.925, 390.35, 41.3974, 0.3728", "241.111, 390.063, 41.4145, 0.314", "240.073, 389.78, 41.5481, 0.6546", "239.355, 389.189, 41.7052, 0.4322", "238.753, 388.617, 42.56, 0.4576" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "298.873, 420.659, 51.758, 0.661", "298.477, 419.362, 51.9154, 0.5826", "298.047, 418.313, 51.9478, 0.714", "297.601, 417.273, 51.8762, 0.753", "297.012, 416.334, 51.718, 0.7074", "296.161, 415.655, 51.5609, 0.6484", "295.16, 415.181, 51.525, 0.6168", "294.159, 414.706, 51.5648, 0.5852", "293.32, 414.431, 51.3612, 0.4718", "292.497, 413.658, 51.1876, 0.4912", "291.895, 413.212, 51.0409, 0.4576", "291.207, 412.857, 50.7741, 0.7034", "290.576, 412.156, 50.6369, 0.7236", "290.028, 411.378, 50.6372, 0.4678", "289.211, 410.796, 50.7002, 0.5062", "288.425, 410.133, 50.808, 0.3304", "287.772, 409.438, 50.8584, 0.6702", "286.932, 409.094, 51.0734, 0.546", "286.161, 408.532, 51.2985, 0.438", "285.56, 408.224, 51.2996, 0.4538", "285.142, 407.837, 51.4746, 0.4576", "284.62, 407.15, 51.5164, 0.3862", "283.611, 407.088, 51.6765, 0.4698", "283.096, 406.57, 51.6989, 0.4404", "282.34, 406.062, 51.9145, 0.5382", "281.479, 405.58, 52.0503, 0.583", "280.497, 405.205, 52.1959, 0.432", "279.782, 404.875, 52.6131, 0.3546", "278.843, 404.633, 53.0138, 0.4432", "277.752, 404.779, 53.354, 0.3814", "277.06, 403.946, 53.5744, 0.4322", "276.355, 403.25, 53.7186, 0.401", "275.704, 402.574, 53.7295, 0.5086", "274.91, 402.053, 53.8622, 0.394", "274.198, 401.291, 53.9274, 0.4732", "273.605, 400.429, 54.0672, 0.532", "273.167, 399.803, 54.0308, 0.3724", "272.655, 399.116, 53.8798, 0.4948", "272.182, 398.197, 53.8583, 0.4576", "271.619, 397.398, 53.7082, 0.3684", "270.866, 396.789, 53.6413, 0.4032", "270.074, 396.23, 53.636, 0.3304", "269.307, 395.722, 53.8353, 0.2712", "268.29, 396.117, 54.0725, 0.3602", "267.499, 395.373, 54.2567, 0.4576", "266.678, 394.932, 54.5894, 0.356", "265.74, 394.428, 54.8005, 0.3814", "264.957, 393.845, 54.9114, 0.4636", "264.617, 392.868, 54.8948, 0.41", "264.25, 391.809, 54.8036, 0.4244", "263.612, 390.89, 54.7366, 0.4118", "262.911, 390.018, 54.696, 0.4104", "262.327, 389.171, 54.6994, 0.536", "261.651, 388.332, 54.6854, 0.3238", "261.031, 387.387, 54.6389, 0.2552", "260.358, 386.529, 54.6809, 0.5716", "259.78, 385.613, 54.6966, 0.2542", "258.753, 385.25, 54.6986, 0.3416", "257.762, 384.737, 54.665, 0.369", "256.742, 384.265, 54.6874, 0.2918", "256.106, 383.449, 54.6398, 0.4576", "255.848, 382.354, 54.6316, 0.3378", "255.364, 381.379, 54.6563, 0.2288", "254.612, 380.62, 54.7596, 0.2822", "254.331, 379.767, 54.8111, 0.3084", "254.4, 378.694, 54.7523, 0.4158", "253.993, 377.745, 54.8153, 0.544", "253.775, 376.726, 54.8814, 0.435", "253.296, 375.953, 54.8993, 0.4", "252.759, 375.084, 54.7492, 0.4576", "251.744, 374.581, 54.6123, 0.3756", "251.048, 373.834, 54.4984, 0.4368", "250.513, 373.236, 54.3908, 0.3898", "250.112, 372.254, 54.3628, 0.3836", "249.953, 371.42, 54.2934, 0.527", "249.621, 370.397, 54.3357, 0.4864", "249.387, 369.413, 54.2945, 0.312", "248.826, 368.736, 54.383, 0.28", "248.116, 368.088, 54.3516, 0.3314", "247.351, 367.531, 54.3052, 0.3664", "246.387, 367.079, 54.2475, 0.2638", "245.746, 366.759, 54.0658, 0.4468", "245.023, 366.331, 54.1862, 0.2846", "244.279, 365.686, 54.2704, 0.5008", "243.57, 364.828, 54.3183, 0.4304", "242.877, 364.124, 54.4113, 0.4054", "242.018, 363.441, 54.434, 0.3796", "241.025, 363.166, 54.3516, 0.4618", "240.469, 362.419, 53.76, 0.4576" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "374.774, 440.669, 49.6885, 0.4322", "374.67, 440.407, 50.806, 0.6572", "375.749, 440.431, 50.8805, 0.3496", "376.75, 440.149, 50.8455, 0.2288", "377.751, 439.788, 50.9183, 0.3168", "378.535, 439.039, 51.0188, 0.3666", "379.072, 438.266, 51.1106, 0.5214", "380.164, 438.038, 51.1795, 0.3304", "381.293, 438.038, 51.2422, 0.458", "382.188, 437.914, 51.555, 0.6288", "382.97, 437.2, 51.8798, 0.3836", "383.914, 436.624, 52.2122, 0.4368", "384.993, 436.266, 52.4656, 0.4576", "386.073, 435.914, 52.6652, 0.4942", "387.07, 435.668, 52.9379, 0.5338", "388.065, 435.694, 53.0774, 0.3494", "388.753, 434.924, 53.3154, 0.5198", "389.492, 434.07, 53.5875, 0.492", "390.308, 433.397, 53.804, 0.3648", "391.038, 432.79, 54.0434, 0.4106", "391.907, 432.117, 54.2713, 0.3814", "392.906, 431.953, 54.5754, 0.3018", "393.931, 431.622, 54.7761, 0.4576", "394.543, 430.682, 55.0054, 0.4576", "395.465, 430.026, 55.2544, 0.4508", "396.355, 429.341, 55.5212, 0.4322", "397.347, 428.8, 55.7399, 0.401", "398.232, 428.347, 55.9504, 0.266", "398.503, 427.556, 56.4144, 0.6336", "399.012, 426.681, 56.9083, 0.3196", "399.478, 425.786, 57.5604, 0.335", "399.428, 425.154, 58.2212, 0.4196", "398.859, 424.32, 58.987, 0.395", "397.998, 423.852, 59.766, 0.2412", "398.059, 423.404, 60.8597, 0.358", "397.26, 423.16, 62.0808, 0.3814", "396.723, 422.944, 63.4572, 0.4172", "395.942, 422.676, 64.8376, 0.5348", "395.059, 422.105, 66.0811, 0.3852", "394.865, 421.454, 67.394, 0.6102", "394.396, 420.46, 68.3945, 0.679", "393.933, 419.492, 69.235, 0.7426", "393.612, 418.638, 70.0655, 0.5602", "392.966, 418.129, 70.9139, 0.6418", "392.392, 417.366, 71.6495, 0.4868", "391.937, 416.623, 72.1742, 0.5644", "391.32, 415.958, 72.7006, 0.3862", "391.477, 415.656, 73.3894, 0.566", "391.25, 414.614, 73.9357, 0.3566", "391.373, 413.63, 74.31, 0.4888", "392.049, 412.755, 74.76, 0.5338" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "374.774, 440.669, 49.6885, 0.4322", "374.91, 440.204, 49.7017, 0.6028", "375.253, 439.232, 49.8008, 0.6318", "375.783, 438.5, 50.0044, 0.6438", "375.949, 437.755, 49.9408, 0.355", "376.231, 436.76, 49.8599, 0.4132", "376.581, 436.465, 50.0982, 0.6394", "376.834, 435.571, 50.2351, 0.5278", "377.147, 434.916, 50.4778, 0.5596", "377.72, 434.043, 50.6237, 0.4556", "378.321, 433.265, 50.9379, 0.6076", "378.746, 432.504, 51.2372, 0.7064", "379.202, 431.7, 51.401, 0.4856", "379.715, 431.08, 51.7686, 0.5676", "380.534, 430.461, 52.1139, 0.5148", "381.295, 429.674, 52.4084, 0.5338", "381.872, 428.557, 52.7363, 0.5158", "382.539, 427.648, 53.0407, 0.6278", "383.352, 426.942, 53.3534, 0.5022", "383.806, 426.058, 53.4724, 0.5218", "383.521, 425.367, 53.7891, 0.4224", "383.84, 424.464, 54.0277, 0.453", "384.703, 423.78, 54.115, 0.5054", "385.514, 423.074, 54.2248, 0.4068", "386.568, 423.051, 54.3931, 0.4422", "387.026, 422.208, 54.5894, 0.6648", "387.529, 421.194, 54.7014, 0.7954", "388.264, 420.362, 54.8136, 0.6982", "388.868, 419.903, 54.7655, 0.7462", "389.754, 419.284, 54.7613, 0.8912", "390.658, 418.799, 54.8338, 0.3556", "391.518, 418.267, 54.8982, 0.3132", "392.278, 417.765, 54.8022, 0.535", "393.03, 417.237, 54.7803, 0.5988", "393.806, 416.525, 54.619, 0.524", "394.606, 415.747, 54.4774, 0.6626", "395.235, 414.997, 54.2643, 0.5662", "395.914, 414.356, 54.2091, 0.6216", "396.739, 413.678, 54.1646, 0.6906", "397.549, 412.888, 54.1612, 0.5262", "398.288, 412.183, 54.2629, 0.521", "399.323, 412.142, 54.5154, 0.4068", "399.198, 411.478, 54.7722, 0.5578", "399.859, 410.757, 54.9959, 0.5758", "400.812, 410.667, 55.2877, 0.3874", "401.315, 410.147, 55.3134, 0.3712", "401.759, 409.245, 55.1589, 0.53", "402.705, 408.787, 54.9184, 0.471", "403.627, 408.214, 54.5997, 0.6264", "404.407, 407.708, 54.3368, 0.5312", "405.211, 407.0, 54.133, 0.483", "405.597, 405.963, 54.0347, 0.592", "406.438, 405.24, 53.8852, 0.6302", "407.305, 404.653, 53.7639, 0.5062", "407.865, 403.755, 53.6477, 0.316", "408.414, 402.889, 53.6124, 0.3216", "408.951, 401.983, 53.496, 0.3086", "409.661, 401.315, 53.2232, 0.356", "410.294, 400.464, 53.0701, 0.6356", "411.004, 399.652, 52.9472, 0.4896", "411.491, 399.047, 52.6904, 0.4724", "411.726, 398.341, 51.52, 0.661" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "359.666, 456.644, 49.3422, 0.6102", "360.246, 457.257, 50.4, 0.2796", "360.789, 458.32, 50.6167, 0.483", "361.161, 459.239, 50.7763, 0.3814", "360.923, 460.339, 50.8693, 0.4576", "360.288, 460.803, 51.03, 0.4888", "359.825, 461.494, 50.972, 0.536", "359.305, 462.333, 51.0776, 0.5802", "358.559, 462.798, 51.2506, 0.262", "358.117, 463.747, 51.3327, 0.578", "357.505, 464.69, 51.3951, 0.4294", "357.386, 465.81, 51.4259, 0.356", "357.382, 466.943, 51.5127, 0.4808", "357.595, 467.919, 51.6816, 0.4544", "357.434, 469.011, 51.7938, 0.5224", "357.519, 470.028, 52.0626, 0.5558", "357.744, 470.842, 52.4194, 0.4892", "357.344, 471.621, 52.621, 0.4672", "356.961, 472.417, 52.8965, 0.4318", "356.252, 473.134, 53.0225, 0.5716", "355.665, 473.943, 53.2115, 0.3772", "355.556, 475.031, 53.4122, 0.4898", "355.959, 476.009, 53.7306, 0.4604", "356.013, 477.091, 54.1352, 0.3304", "356.094, 478.131, 54.4415, 0.4912", "355.877, 479.018, 54.7635, 0.4684", "355.784, 480.045, 54.9665, 0.3698", "356.039, 480.371, 55.2068, 0.498", "356.661, 480.938, 55.4263, 0.5088", "357.195, 481.347, 55.7855, 0.6038", "358.097, 481.871, 56.1459, 0.4178", "358.479, 482.714, 56.5765, 0.4458", "358.856, 483.572, 56.9167, 0.5986", "359.397, 484.374, 57.2796, 0.5316", "360.109, 484.484, 57.787, 0.311", "361.234, 484.37, 58.2106, 0.4428", "361.972, 484.874, 58.5315, 0.512", "362.592, 485.406, 58.975, 0.5832", "362.997, 486.292, 59.3625, 0.288", "363.354, 486.961, 59.8024, 0.2908", "363.501, 487.687, 60.298, 0.2298", "364.372, 488.274, 60.674, 0.6864", "364.947, 488.625, 61.2142, 0.472", "365.697, 489.449, 61.6636, 0.4258", "366.641, 490.078, 62.0995, 0.7048", "367.231, 490.951, 62.4893, 0.4678", "367.778, 491.348, 63.079, 0.34", "368.638, 491.92, 63.5275, 0.4736", "369.069, 492.732, 64.1194, 0.3844", "369.427, 493.542, 64.7483, 0.2288", "370.23, 493.979, 65.4338, 0.4416", "370.97, 494.539, 65.893, 0.3304", "371.342, 495.59, 66.1758, 0.2542", "371.914, 495.695, 66.92, 0.4576" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "359.666, 456.644, 49.3422, 0.6102", "360.331, 456.599, 49.1767, 0.293", "361.407, 456.616, 48.9191, 0.334", "362.37, 457.108, 48.6203, 0.3708", "363.305, 457.728, 48.3056, 0.3814", "364.286, 458.284, 48.0934, 0.3814", "365.198, 458.943, 47.9906, 0.3814", "366.039, 459.71, 47.9004, 0.397", "366.897, 460.403, 47.7179, 0.4544", "367.821, 461.003, 47.4468, 0.5316", "368.637, 461.763, 47.1464, 0.5758", "369.45, 462.558, 46.8804, 0.5682", "370.352, 463.26, 46.6802, 0.5428", "371.211, 464.012, 46.5508, 0.5504", "372.009, 464.831, 46.4831, 0.5428", "372.724, 465.721, 46.452, 0.5338", "373.404, 466.642, 46.4346, 0.5004", "374.11, 467.541, 46.4187, 0.4996", "374.976, 468.273, 46.3996, 0.4914", "375.901, 468.945, 46.3669, 0.5", "376.66, 469.761, 46.2756, 0.5084", "377.39, 470.613, 46.2336, 0.5084", "378.159, 471.445, 46.2706, 0.4544", "378.869, 472.337, 46.3238, 0.396", "379.648, 473.17, 46.3725, 0.3814", "380.529, 473.899, 46.4148, 0.4366", "381.296, 474.738, 46.4475, 0.4576", "381.859, 475.728, 46.4596, 0.4204", "382.424, 476.722, 46.4556, 0.3308", "383.294, 477.429, 46.4461, 0.2668", "384.323, 477.922, 46.4327, 0.235", "385.383, 478.353, 46.4128, 0.2484", "386.282, 479.04, 46.3854, 0.2738", "387.152, 479.782, 46.3509, 0.319", "388.198, 480.205, 46.3086, 0.3506", "389.314, 480.384, 46.2216, 0.4168", "390.3, 480.884, 46.0849, 0.4944", "391.134, 481.654, 45.9861, 0.592", "391.889, 482.512, 45.9628, 0.6312", "392.558, 483.387, 46.0894, 0.6144", "393.242, 484.293, 46.2636, 0.5246", "393.903, 485.225, 46.4458, 0.4226", "394.672, 486.071, 46.6225, 0.3208", "395.555, 486.706, 46.7382, 0.294", "396.624, 486.932, 46.9636, 0.2796", "397.426, 487.528, 47.2352, 0.3214", "397.848, 488.353, 47.5742, 0.2288", "398.889, 488.603, 47.7232, 0.2288", "399.74, 489.106, 47.9374, 0.2288", "400.414, 489.971, 48.0925, 0.2288", "401.323, 490.547, 48.2252, 0.2288", "401.782, 491.347, 48.3081, 0.2288", "402.736, 491.756, 48.3585, 0.2288", "403.585, 492.438, 48.3983, 0.2288", "403.972, 493.293, 48.4084, 0.2288", "404.518, 493.983, 48.4081, 0.2288", "404.518, 495.127, 48.4002, 0.2288", "405.109, 495.813, 48.3594, 0.2288", "405.694, 496.61, 48.3426, 0.2334", "406.006, 497.702, 48.3347, 0.2796", "405.793, 498.794, 48.3098, 0.2824", "405.706, 499.906, 48.3812, 0.2288", "405.901, 500.867, 48.629, 0.2288", "406.217, 501.962, 48.8611, 0.2886", "406.349, 503.083, 49.0731, 0.281", "406.42, 504.218, 49.2859, 0.2412", "406.936, 505.091, 49.5163, 0.2288", "407.525, 505.915, 49.8047, 0.2288", "407.933, 506.909, 50.0276, 0.2288", "407.558, 507.945, 50.2538, 0.2288", "407.474, 509.058, 50.4448, 0.2288", "407.755, 510.135, 50.645, 0.2288", "408.565, 510.931, 50.864, 0.2288", "409.568, 511.454, 51.0532, 0.2288", "410.651, 511.757, 51.2949, 0.2288", "411.686, 511.887, 51.6524, 0.2288", "412.426, 511.959, 52.3141, 0.483", "412.87, 511.368, 53.0835, 0.419", "413.645, 511.44, 53.9812, 0.3772", "414.35, 511.919, 54.8853, 0.356", "414.767, 512.272, 55.8846, 0.505", "415.82, 512.283, 56.6656, 0.2744", "416.68, 512.634, 57.106, 0.4576", "417.631, 512.8, 57.372, 0.4684", "417.903, 513.527, 57.7606, 0.2288", "418.626, 513.906, 58.1078, 0.2434", "419.252, 514.554, 58.326, 0.341", "419.047, 515.143, 58.7866, 0.6406", "419.162, 515.776, 59.2497, 0.6372", "419.72, 516.455, 59.5577, 0.4948", "420.658, 516.773, 59.724, 0.6356", "421.694, 516.966, 59.8629, 0.7218", "422.326, 517.667, 59.8088, 0.5882", "422.899, 518.582, 59.7481, 0.483", "423.478, 519.323, 59.6047, 0.654", "423.432, 519.948, 59.8172, 0.6924", "424.04, 520.748, 60.1073, 0.5816", "424.86, 521.399, 60.4593, 0.8152", "425.339, 522.27, 60.7065, 0.4768", "425.417, 523.205, 61.035, 0.4576", "425.454, 524.339, 61.3505, 0.4714", "425.777, 525.052, 61.7632, 0.7756", "426.38, 525.761, 62.1533, 0.6374", "426.934, 526.455, 62.4478, 0.3798", "427.77, 527.16, 62.7001, 0.729", "428.247, 528.122, 63.0042, 0.4368", "429.141, 528.632, 63.1274, 0.2796", "429.738, 529.384, 63.191, 0.2796", "429.572, 529.959, 63.553, 0.2288", "430.055, 530.247, 64.0965, 0.235", "430.899, 530.657, 64.4266, 0.5874", "431.829, 531.029, 64.762, 0.5634", "432.397, 531.688, 64.9359, 0.5924", "433.064, 532.398, 65.0686, 0.507", "433.8, 532.685, 65.2862, 0.5846", "434.191, 533.612, 65.4254, 0.5722", "434.588, 534.653, 65.529, 0.5988", "435.197, 535.278, 65.6628, 0.347", "435.71, 535.884, 65.7812, 0.7106", "435.723, 536.772, 65.9649, 0.505", "435.521, 537.794, 66.36, 0.5084" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "343.277, 438.876, 53.4649, 0.4322", "342.366, 438.203, 54.3259, 0.2336", "341.928, 437.678, 56.0568, 0.3152", "341.513, 437.112, 56.8224, 0.4244", "340.899, 436.449, 57.6556, 0.4068" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "343.277, 438.876, 53.4649, 0.4322", "342.285, 438.915, 53.6763, 0.3048", "341.731, 439.763, 53.8219, 0.2802", "341.164, 440.704, 54.0092, 0.2288", "340.721, 441.655, 54.1993, 0.2288", "340.334, 442.564, 54.4043, 0.2288", "339.474, 443.275, 54.6356, 0.2288", "339.005, 443.901, 55.0892, 0.2288", "338.115, 444.546, 55.5279, 0.241", "337.244, 445.158, 55.902, 0.3814", "336.386, 445.754, 56.2078, 0.4248", "335.539, 446.5, 56.5104, 0.3702", "334.599, 447.103, 56.7269, 0.345", "333.752, 447.532, 57.0853, 0.2288", "332.937, 447.979, 57.5414, 0.2288", "332.223, 448.582, 57.9998, 0.2288", "331.289, 449.099, 58.3556, 0.2462", "330.321, 449.659, 58.5962, 0.3572", "329.319, 449.943, 58.7135, 0.4094", "328.248, 450.098, 58.8269, 0.4164", "327.4, 450.728, 58.9428, 0.2796", "326.382, 451.038, 59.1749, 0.2898", "325.276, 451.149, 59.4625, 0.3938", "324.261, 451.552, 59.726, 0.4948", "323.277, 451.994, 60.0382, 0.331", "322.306, 452.256, 60.3884, 0.295", "321.436, 452.902, 60.667, 0.4794", "320.608, 453.242, 60.8558, 0.6102", "319.672, 453.817, 61.0708, 0.3766", "318.898, 454.408, 61.1442, 0.4176", "318.229, 455.009, 61.3088, 0.3454", "317.596, 455.925, 61.423, 0.2288", "316.707, 456.454, 61.4678, 0.2288", "315.947, 457.036, 61.5871, 0.2288", "315.1, 457.6, 61.6795, 0.3654", "313.996, 457.801, 61.6882, 0.2612", "312.875, 457.943, 61.6879, 0.3044", "311.933, 458.175, 61.5278, 0.5294", "310.828, 458.238, 61.3337, 0.5688", "309.696, 458.246, 61.1654, 0.5324", "308.704, 457.884, 61.0498, 0.4772", "307.742, 457.714, 60.9356, 0.733", "306.909, 457.399, 60.6278, 0.5786", "305.875, 457.363, 60.4971, 0.6388", "304.893, 457.371, 60.5623, 0.5556", "304.084, 457.368, 60.3954, 0.231", "303.106, 457.142, 60.2983, 0.4252", "302.026, 457.388, 60.3274, 0.6034", "300.973, 457.474, 60.5167, 0.504", "299.927, 457.379, 60.6407, 0.4522", "298.88, 457.261, 60.8112, 0.5338", "298.319, 457.371, 60.6642, 0.4678", "297.303, 457.591, 60.5391, 0.316", "296.328, 457.712, 60.639, 0.2288", "295.917, 457.829, 60.9977, 0.2288", "295.035, 458.111, 61.271, 0.4576", "294.176, 458.172, 61.3357, 0.539", "293.27, 458.286, 61.4328, 0.5504", "292.329, 458.121, 61.7252, 0.2288", "291.277, 458.445, 61.978, 0.375", "290.332, 458.634, 62.3428, 0.5078", "289.994, 459.496, 62.9093, 0.6558", "289.122, 459.886, 63.5314, 0.334", "288.065, 459.815, 63.9576, 0.653", "287.081, 459.443, 64.3143, 0.5084", "286.204, 459.97, 64.6433, 0.3102", "285.177, 460.117, 64.9888, 0.6036", "284.17, 460.002, 65.1843, 0.4322", "283.467, 459.805, 65.534, 0.5994", "282.583, 459.433, 65.984, 0.5126", "281.996, 458.872, 66.227, 0.397", "281.584, 457.919, 66.423, 0.4322", "280.966, 457.28, 66.5711, 0.5186", "280.079, 456.657, 66.7374, 0.337", "279.543, 456.239, 67.0678, 0.231", "278.639, 456.503, 67.111, 0.483", "277.866, 456.341, 67.1569, 0.3724", "276.997, 456.351, 67.296, 0.4576", "276.322, 456.342, 67.3498, 0.4506", "275.347, 456.349, 67.2736, 0.2946", "274.43, 456.597, 67.4038, 0.305", "273.338, 456.387, 67.5948, 0.3584", "272.667, 455.699, 67.6046, 0.2288", "271.731, 455.249, 67.6553, 0.2288", "271.346, 454.274, 67.7538, 0.2288", "270.302, 453.999, 67.87, 0.4728", "269.298, 453.482, 68.04, 0.5592" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "359.687, 416.534, 54.3421, 0.876", "360.087, 415.481, 54.5272, 0.8046", "360.513, 414.433, 54.6448, 0.7268", "360.858, 413.388, 54.6375, 0.6496", "360.965, 412.295, 54.726, 0.572", "361.157, 411.231, 54.9584, 0.4732", "361.777, 410.3, 55.2012, 0.4576", "362.512, 409.427, 55.4327, 0.501", "363.04, 408.442, 55.7085, 0.596", "363.34, 407.37, 55.8676, 0.6546", "363.879, 406.375, 55.9476, 0.661", "364.532, 405.437, 56.0246, 0.6158", "365.017, 404.404, 56.1369, 0.5644", "365.41, 403.353, 56.3503, 0.5128", "365.856, 402.479, 56.768, 0.4848", "366.451, 401.519, 57.1726, 0.4592", "367.04, 400.549, 57.552, 0.482", "367.066, 399.422, 57.7984, 0.5822", "367.399, 398.415, 57.9698, 0.6226", "368.23, 397.645, 58.1213, 0.5962", "368.872, 396.776, 58.3019, 0.5456", "368.956, 395.69, 58.49, 0.5198", "368.932, 394.556, 58.6401, 0.5376", "369.124, 393.432, 58.7644, 0.5742", "369.369, 392.314, 58.8605, 0.615", "369.398, 391.184, 58.9344, 0.651", "369.533, 390.066, 58.9996, 0.6764", "369.826, 388.96, 59.0741, 0.6552", "370.151, 387.865, 59.1774, 0.62", "370.558, 386.822, 59.3586, 0.5626", "370.905, 385.756, 59.5944, 0.5178", "371.082, 384.633, 59.8217, 0.4422", "371.457, 383.573, 59.99, 0.3728", "372.052, 382.599, 60.1152, 0.3388", "372.753, 381.7, 60.2277, 0.3478", "373.358, 380.777, 60.3971, 0.4088", "373.863, 379.768, 60.5612, 0.4858", "374.253, 378.696, 60.6729, 0.5624", "374.633, 377.64, 60.6855, 0.5848", "375.107, 376.611, 60.655, 0.5478", "375.502, 375.572, 60.7054, 0.4962", "375.714, 374.463, 60.7877, 0.445", "376.017, 373.364, 60.8639, 0.413", "376.463, 372.312, 60.9325, 0.3872", "377.3, 371.576, 60.991, 0.3814", "378.332, 371.09, 61.0282, 0.3814", "379.334, 370.543, 61.0397, 0.3612", "380.283, 369.904, 61.0411, 0.356", "381.112, 369.121, 61.0417, 0.3356", "381.742, 368.172, 61.0422, 0.3508", "382.297, 367.171, 61.0434, 0.3354", "382.796, 366.143, 61.0445, 0.3304", "383.035, 365.031, 61.0464, 0.289", "383.564, 364.032, 61.049, 0.2796", "384.185, 363.071, 61.0526, 0.2796", "384.677, 362.04, 61.0576, 0.3008", "385.182, 361.014, 61.0646, 0.305", "385.646, 359.969, 61.0744, 0.3264", "386.254, 359.003, 61.0882, 0.3522", "386.852, 358.027, 61.1072, 0.3776", "387.366, 357.007, 61.1338, 0.4032", "387.516, 355.882, 61.1719, 0.4286", "387.793, 354.775, 61.2256, 0.4544", "388.237, 353.723, 61.2987, 0.4354", "388.604, 352.639, 61.3942, 0.4322", "388.954, 351.551, 61.5272, 0.4098", "389.341, 350.529, 61.7854, 0.4068", "389.715, 349.457, 62.053, 0.4068", "390.137, 348.408, 62.3431, 0.4768", "390.377, 347.292, 62.578, 0.5546", "390.777, 346.23, 62.8048, 0.5592", "391.349, 345.247, 63.0062, 0.4856", "392.017, 344.318, 63.1394, 0.4086", "392.487, 343.276, 63.2299, 0.4068", "392.836, 342.186, 63.289, 0.4318", "393.044, 341.062, 63.3332, 0.4322", "393.457, 339.995, 63.366, 0.4068", "394.206, 339.131, 63.3987, 0.356", "394.332, 338.925, 63.4418, 0.3506", "394.929, 337.951, 63.5121, 0.32", "395.469, 336.97, 63.6378, 0.2764", "395.609, 335.846, 63.7274, 0.2574", "396.038, 334.789, 63.8495, 0.2904", "396.636, 333.827, 64.036, 0.3712", "397.161, 332.874, 64.3535, 0.4576", "397.744, 331.92, 64.7192, 0.449", "398.242, 330.947, 65.1428, 0.3878", "398.785, 329.953, 65.5108, 0.305", "399.28, 328.939, 65.7314, 0.316", "399.774, 327.908, 65.8983, 0.3728", "400.214, 326.865, 66.0612, 0.4264", "400.4, 325.781, 66.2824, 0.3942", "400.442, 324.687, 66.4969, 0.3428", "400.962, 323.671, 66.696, 0.305", "401.151, 322.593, 66.9189, 0.305", "400.981, 321.496, 67.139, 0.3216", "400.979, 320.375, 67.2868, 0.3924", "401.014, 319.248, 67.4677, 0.486", "401.234, 318.145, 67.6402, 0.5338", "401.794, 317.163, 67.7916, 0.5138", "402.443, 316.241, 67.9546, 0.483", "402.754, 315.203, 68.0691, 0.5048", "402.66, 314.095, 68.089, 0.5338", "402.492, 312.966, 68.1019, 0.5452", "402.629, 311.857, 68.1355, 0.536", "403.062, 310.811, 68.229, 0.5202", "403.492, 309.767, 68.381, 0.5094", "403.716, 308.658, 68.5348, 0.4958", "403.823, 307.538, 68.7285, 0.4946", "404.197, 306.499, 68.9172, 0.483", "404.556, 305.433, 69.0589, 0.483", "404.673, 304.297, 69.1872, 0.5118", "404.861, 303.183, 69.344, 0.563", "405.06, 302.081, 69.5699, 0.6146", "405.203, 300.959, 69.8043, 0.6656", "405.439, 299.842, 70.0073, 0.7166", "405.651, 298.721, 70.1921, 0.7372", "405.946, 297.645, 70.4066, 0.7218", "406.411, 296.62, 70.6314, 0.6804", "406.804, 295.552, 70.8151, 0.645", "406.992, 294.44, 70.9159, 0.5896", "407.309, 293.375, 70.9176, 0.5606", "407.699, 292.305, 70.966, 0.511", "408.206, 291.336, 71.1553, 0.484", "408.719, 290.36, 71.449, 0.4582", "408.977, 289.259, 71.7732, 0.4824", "409.442, 288.215, 72.0563, 0.5078", "409.769, 287.12, 72.2952, 0.5334", "409.972, 285.994, 72.4867, 0.4832", "409.495, 284.958, 72.6608, 0.4316", "409.213, 283.873, 72.8885, 0.382", "409.235, 282.746, 73.0355, 0.4078", "409.356, 281.659, 73.3096, 0.4344", "409.773, 280.632, 73.6604, 0.4844", "410.124, 279.548, 73.9578, 0.5104", "410.275, 278.438, 74.1563, 0.5316", "410.675, 277.397, 74.4402, 0.5084", "411.151, 276.381, 74.7846, 0.5084", "411.665, 275.395, 75.1694, 0.5144", "412.215, 274.404, 75.551, 0.5626", "412.688, 273.408, 75.9466, 0.5964", "412.707, 272.304, 76.3367, 0.6694", "413.23, 271.29, 76.629, 0.7248", "413.893, 270.362, 76.851, 0.7836", "414.404, 269.342, 77.0423, 0.7672", "414.853, 268.313, 77.266, 0.783", "415.41, 267.332, 77.4981, 0.7728", "416.056, 266.39, 77.679, 0.8084", "416.528, 265.363, 77.8257, 0.7824", "416.72, 264.24, 77.9458, 0.757", "417.112, 263.166, 78.0489, 0.726", "417.416, 262.072, 78.1483, 0.6806", "417.448, 260.929, 78.2662, 0.6436", "417.458, 259.79, 78.4361, 0.5906", "417.519, 258.67, 78.703, 0.6286", "417.797, 257.603, 79.0432, 0.6988", "418.411, 256.653, 79.4097, 0.7308", "418.992, 255.701, 79.8154, 0.6862", "419.507, 254.691, 80.1906, 0.6168", "419.834, 253.615, 80.568, 0.6496", "420.088, 252.517, 80.9225, 0.708", "420.316, 251.396, 81.2003, 0.7478", "420.642, 250.306, 81.4332, 0.689", "421.021, 249.25, 81.6732, 0.6124", "421.244, 248.158, 81.9403, 0.5592", "421.598, 247.075, 82.1548, 0.5838", "422.1, 246.048, 82.3278, 0.6524", "422.573, 245.009, 82.4617, 0.6864", "422.93, 243.935, 82.5653, 0.6598", "423.191, 242.857, 82.7484, 0.5816", "423.54, 241.827, 83.048, 0.5242", "423.783, 240.724, 83.372, 0.4986", "423.839, 239.599, 83.7189, 0.493", "423.849, 238.551, 83.9885, 0.483", "423.83, 237.794, 84.3228, 0.2398", "423.811, 236.682, 84.6222, 0.3782", "423.978, 235.581, 84.8652, 0.532", "424.198, 234.719, 85.1175, 0.4936", "424.799, 234.121, 85.2071, 0.6178", "425.014, 233.331, 85.4426, 0.606", "425.035, 232.574, 85.8575, 0.6092", "425.339, 231.52, 86.2826, 0.632", "425.753, 230.55, 86.5827, 0.5262", "425.95, 229.782, 86.975, 0.6462", "426.146, 228.689, 87.3284, 0.4524", "426.571, 227.768, 87.6775, 0.503", "427.108, 227.132, 87.7257, 0.7032", "427.713, 226.668, 87.8444, 0.4464", "428.361, 225.783, 87.9914, 0.4734", "428.763, 224.782, 88.1311, 0.5592", "429.303, 224.117, 88.0362, 0.6356", "429.493, 223.125, 87.9015, 0.6138", "429.959, 222.522, 88.0743, 0.409", "430.459, 221.993, 88.408, 0.4576", "430.724, 221.183, 88.6242, 0.4534", "430.955, 220.307, 88.9148, 0.515", "430.945, 219.269, 89.2718, 0.5338", "431.169, 218.346, 89.6185, 0.5412", "431.163, 217.266, 89.9058, 0.5672", "431.631, 216.249, 90.1706, 0.9422", "431.894, 215.165, 90.4481, 0.8182", "431.969, 214.281, 90.8734, 0.6864", "431.842, 213.457, 91.285, 0.597", "431.978, 212.561, 91.6124, 0.4558", "432.662, 212.094, 91.7748, 0.3476", "432.823, 211.039, 91.8641, 0.5528", "432.89, 209.992, 92.0161, 0.378", "433.013, 209.334, 92.3166, 0.5274", "433.482, 208.406, 92.615, 0.3292", "434.236, 207.731, 92.8396, 0.6694", "434.77, 206.848, 93.0933, 1.0254", "434.854, 206.098, 93.5603, 0.6966", "435.481, 205.294, 93.8538, 0.7008", "435.596, 204.203, 94.0926, 0.5084", "435.656, 203.378, 94.4787, 0.4404", "435.905, 202.55, 94.6624, 0.4482", "435.978, 201.532, 94.8399, 0.4614", "436.375, 200.723, 95.1042, 0.55", "436.34, 199.713, 95.3112, 0.5592", "436.894, 198.858, 95.4937, 0.6102", "436.854, 197.865, 95.5153, 0.6372", "437.003, 196.869, 95.5346, 0.5322", "437.792, 196.363, 95.4209, 0.314", "438.269, 195.685, 95.0905, 0.2288", "438.51, 194.641, 94.7674, 0.26", "438.936, 193.631, 94.5319, 0.4992", "438.57, 192.635, 94.3961, 0.3548", "438.381, 192.152, 94.7428, 0.2288", "438.729, 191.353, 95.3319, 0.4406", "439.067, 190.458, 95.9347, 0.7132", "439.446, 189.732, 96.397, 0.6864", "439.6, 188.682, 96.8775, 0.448", "440.151, 187.696, 97.2896, 0.5444", "440.52, 186.649, 97.58, 0.4106", "440.773, 185.843, 98.0244, 0.4024", "441.129, 185.135, 98.3363, 0.3292", "441.303, 184.134, 98.6852, 0.3938", "441.533, 183.261, 99.148, 0.5004", "441.944, 182.343, 99.5862, 0.2358", "442.474, 181.544, 99.8208, 0.6374", "442.842, 180.519, 99.9048, 0.3634", "442.845, 179.444, 99.9544, 0.4106", "443.297, 178.608, 100.104, 0.698", "443.564, 177.816, 100.446, 0.5638", "443.848, 176.775, 100.783, 0.5084", "444.31, 176.352, 100.879, 0.2722", "444.866, 175.388, 101.026, 0.4468", "445.033, 174.292, 101.142, 0.6922", "445.315, 173.294, 101.386, 0.6864", "445.809, 172.467, 101.778, 0.6124", "446.515, 171.842, 102.211, 0.7454", "446.505, 170.86, 102.68, 0.5682", "446.538, 169.898, 103.006, 0.4368", "447.159, 169.136, 103.403, 0.4206", "447.105, 168.278, 103.609, 0.3378", "447.307, 167.849, 103.932, 0.2288", "447.782, 167.011, 104.04, 0.3304", "447.994, 166.025, 104.207, 0.334", "448.061, 165.315, 104.579, 0.6504", "448.43, 164.452, 104.91, 0.5944", "448.334, 163.868, 104.911, 0.7372", "448.638, 162.973, 105.099, 0.661", "448.791, 162.219, 105.166, 0.2516", "449.023, 161.318, 105.171, 0.275", "449.419, 160.287, 105.302, 0.4856", "449.72, 159.498, 105.729, 0.3468", "450.118, 158.905, 106.359, 0.5662", "450.301, 157.826, 106.945, 0.6246", "450.459, 156.813, 107.519, 0.5556", "450.71, 155.938, 107.833, 0.3168", "450.942, 154.963, 107.963, 0.356", "451.257, 154.053, 108.052, 0.4642", "451.348, 152.987, 108.213, 0.7594", "451.537, 152.287, 108.501, 0.485", "451.537, 151.289, 108.602, 0.5578", "451.537, 150.27, 108.601, 0.6778", "451.537, 149.435, 108.855, 0.6032", "451.654, 148.72, 108.831, 0.2778", "452.121, 148.158, 108.638, 0.2288", "452.696, 147.218, 108.628, 0.2288", "452.681, 146.719, 109.068, 0.5968", "452.717, 145.687, 109.428, 0.6266", "452.91, 144.626, 109.732, 0.3324", "453.138, 144.066, 110.348, 0.4008", "453.064, 142.986, 110.949, 0.4034", "453.342, 141.946, 111.418, 0.6184", "453.453, 140.909, 111.807, 0.3492", "453.024, 140.331, 112.37, 0.2288", "453.599, 139.618, 112.804, 0.2368", "453.486, 138.836, 112.856, 0.5164", "453.646, 137.829, 112.919, 0.5014", "453.8, 136.774, 113.064, 0.5338", "453.781, 135.819, 113.053, 0.5946", "453.951, 134.838, 112.93, 0.6758", "454.648, 134.381, 113.118, 0.3546", "454.651, 133.332, 113.331, 0.5154", "454.375, 132.397, 113.554, 0.4724", "454.168, 131.412, 113.786, 0.5706", "454.051, 130.4, 114.108, 0.2536", "454.157, 129.303, 114.43, 0.2288", "454.168, 128.175, 114.718, 0.2288", "454.168, 127.063, 114.992, 0.2714", "454.372, 126.062, 115.147, 0.288", "454.581, 125.692, 115.572, 0.5636", "454.797, 124.744, 116.047, 0.464", "455.12, 124.061, 116.236, 0.3876", "455.445, 123.097, 116.507, 0.501", "455.624, 122.27, 116.964, 0.2288", "455.5, 121.41, 117.556, 0.2806", "454.862, 120.56, 118.033, 0.4386", "454.511, 120.105, 118.632, 0.251", "454.56, 119.013, 119.185, 0.2288", "454.74, 118.039, 119.442, 0.347", "454.794, 116.92, 119.648, 0.4776", "454.618, 115.948, 119.934, 0.483", "454.39, 114.871, 120.091, 0.5986", "454.226, 113.87, 120.092, 0.7366", "454.339, 113.337, 120.415, 0.6726", "454.054, 112.296, 120.772, 0.503", "453.871, 111.272, 121.069, 0.4526", "454.168, 110.525, 121.174, 0.4542", "454.319, 110.167, 121.417, 0.2288", "454.626, 109.376, 121.706, 0.592", "454.854, 108.337, 121.8, 0.7626" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "359.687, 416.534, 54.3421, 0.876", "360.204, 416.656, 53.3893, 0.689", "361.285, 416.379, 53.4414, 0.4326", "362.286, 416.207, 53.5293, 0.5342", "363.273, 416.489, 53.4752, 0.5882", "364.397, 416.374, 53.5147, 0.395", "365.387, 416.283, 53.508, 0.4232", "366.141, 416.748, 53.557, 0.6864", "367.23, 416.934, 53.4624, 0.891", "368.192, 417.416, 53.3736, 0.7032", "369.034, 418.092, 53.2, 0.6486", "369.398, 418.552, 54.0411, 0.5338" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "355.436, 444.394, 35.9579, 0.6102", "355.902, 443.923, 35.7174, 0.679", "356.47, 443.567, 35.306, 0.3814", "356.401, 442.818, 34.9219, 0.3002", "357.102, 442.269, 34.5498, 0.4458", "357.344, 441.467, 34.0956, 0.4248", "357.07, 440.406, 33.6582, 0.4068", "357.022, 439.378, 33.2489, 0.5684", "357.396, 438.372, 32.8675, 0.6336", "357.728, 437.362, 32.4036, 0.3314", "357.203, 436.659, 31.8688, 0.4904", "356.912, 435.978, 31.1805, 0.6466", "357.373, 435.197, 30.5105, 0.6102", "358.294, 435.023, 30.0401, 0.4576", "359.23, 435.45, 29.6652, 0.4694", "360.215, 435.833, 29.3297, 0.4376", "360.58, 435.178, 29.0326, 0.5368", "360.703, 434.606, 28.6546, 0.4614", "360.919, 433.976, 28.268, 0.3354", "360.925, 432.995, 27.8648, 0.4692", "361.151, 431.938, 27.5276, 0.6454", "361.39, 431.046, 27.1267, 0.6042", "361.519, 431.056, 26.4502, 0.2542", "362.133, 431.829, 25.8507, 0.623", "362.78, 431.766, 25.6094, 0.4576", "363.441, 432.203, 25.587, 0.5084", "364.335, 432.09, 25.3893, 0.4062", "365.251, 432.262, 25.1423, 0.5496", "366.173, 432.53, 24.873, 0.6392", "366.946, 432.482, 24.7932, 0.423", "367.529, 432.703, 24.3813, 0.5422", "368.228, 432.432, 23.7821, 0.3626", "369.216, 432.501, 23.2834, 0.321", "370.313, 432.445, 23.0336, 0.5338", "371.188, 432.123, 22.927, 0.566", "372.105, 432.385, 23.0322, 0.4252", "373.147, 432.616, 23.2574, 0.3238", "373.514, 433.004, 23.5256, 0.3216", "373.795, 433.442, 23.459, 0.5586", "374.509, 434.004, 23.5942, 0.4156", "375.494, 433.932, 23.7502, 0.4756", "376.59, 434.034, 23.891, 0.4576", "377.399, 434.142, 24.213, 0.5254", "378.237, 434.182, 24.5165, 0.6234", "378.792, 434.416, 24.8732, 0.6604", "379.703, 434.728, 24.9732, 0.3338", "380.617, 434.461, 25.093, 0.6102", "381.526, 434.606, 25.2602, 0.6232", "382.234, 435.046, 25.3506, 0.4442", "382.787, 435.878, 25.2742, 0.4852", "383.233, 436.538, 24.9668, 0.6566", "383.942, 437.317, 24.7055, 0.5848", "384.43, 437.702, 24.1528, 0.6334", "385.036, 438.528, 23.5371, 0.2718", "384.274, 439.211, 23.0521, 0.273", "384.318, 439.846, 22.9205, 0.4576", "384.947, 440.655, 22.7212, 0.4352", "385.582, 441.481, 22.6948, 0.465", "386.085, 442.085, 22.5019, 0.2464", "386.945, 442.443, 22.4479, 0.2686", "387.962, 442.614, 22.302, 0.2288", "388.633, 443.207, 22.1144, 0.316", "389.38, 443.971, 22.1295, 0.4476", "390.01, 444.754, 22.1556, 0.4576", "390.395, 445.359, 22.3686, 0.4576", "391.223, 445.728, 22.482, 0.5848", "392.137, 446.337, 22.6055, 0.4576", "392.915, 446.269, 22.6204, 0.2664", "393.855, 446.502, 22.6884, 0.2576", "394.805, 446.207, 22.6318, 0.2288", "395.467, 445.72, 22.6232, 0.3814", "395.938, 446.472, 22.631, 0.2288", "396.563, 447.18, 22.6192, 0.2288", "397.611, 447.565, 22.6016, 0.3484", "398.447, 448.286, 22.5879, 0.3524", "398.884, 449.114, 22.7217, 0.4926", "399.696, 449.656, 22.7346, 0.3918", "400.413, 450.218, 22.7556, 0.4474", "401.438, 450.371, 22.8494, 0.4068", "402.52, 450.291, 22.8609, 0.4066", "403.445, 450.853, 22.9026, 0.489", "403.968, 451.355, 22.822, 0.2628", "404.812, 452.076, 22.7209, 0.305", "405.324, 452.882, 22.7296, 0.3608", "406.191, 453.367, 22.8169, 0.2998", "407.319, 453.241, 22.899, 0.2972", "408.298, 453.307, 23.0, 0.3934", "409.272, 453.683, 23.2, 0.3494", "409.518, 454.756, 23.333, 0.2288", "410.002, 455.655, 23.366, 0.2288", "410.671, 456.551, 23.4366, 0.2998", "411.554, 457.156, 23.3652, 0.2842", "412.653, 457.441, 23.3394, 0.4518", "413.745, 457.707, 23.3201, 0.6372", "414.512, 458.439, 23.3528, 0.7408", "415.502, 458.88, 23.3971, 0.4302", "416.519, 458.871, 23.3125, 0.4576", "417.217, 459.375, 23.354, 0.2676", "418.018, 459.316, 23.24, 0.5592" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "355.436, 444.394, 35.9579, 0.6102", "355.523, 444.672, 34.8488, 0.4894", "356.073, 445.293, 33.7193, 0.305", "356.967, 445.949, 33.2889, 0.3314", "357.332, 446.96, 32.832, 0.4002", "357.638, 448.035, 32.3814, 0.4474", "358.285, 448.846, 31.8774, 0.4576", "358.929, 449.718, 31.4112, 0.4748", "359.128, 450.814, 31.0702, 0.4654", "359.295, 451.943, 30.8109, 0.4576", "359.455, 453.074, 30.6107, 0.4214", "359.227, 454.173, 30.441, 0.4438", "358.511, 455.028, 30.2795, 0.4576", "357.453, 455.328, 30.0793, 0.4968", "356.433, 455.01, 29.743, 0.5084", "355.378, 454.625, 29.3426, 0.5084", "354.359, 454.373, 28.8179, 0.4866", "353.418, 454.92, 28.3458, 0.438", "352.837, 455.841, 27.8418, 0.4322", "352.167, 456.761, 27.41, 0.4556", "351.161, 457.28, 27.0402, 0.4816", "350.079, 457.131, 26.6367, 0.5078", "348.95, 456.987, 26.2878, 0.4588", "347.861, 457.273, 25.9473, 0.5078", "346.746, 457.371, 25.2, 0.5338" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "351.572, 429.064, 39.1552, 0.3814", "351.87, 428.414, 40.0176, 0.2908", "352.484, 427.478, 39.7424, 0.2288", "352.902, 426.437, 39.6267, 0.2288", "353.251, 425.379, 39.5094, 0.2288", "353.894, 424.652, 39.2414, 0.2506", "354.505, 423.708, 39.062, 0.382", "354.993, 423.155, 38.8836, 0.631", "355.108, 422.122, 38.7279, 0.4846", "355.67, 421.284, 38.6126, 0.5336", "355.569, 420.182, 38.6184, 0.6858", "355.59, 419.143, 38.6554, 0.7764", "356.147, 418.577, 38.7881, 0.6354", "356.812, 417.792, 38.8668, 0.4204", "357.042, 416.791, 38.8696, 0.6466", "357.5, 415.972, 38.8427, 0.6386", "357.729, 414.939, 38.8234, 0.4538", "357.928, 414.198, 38.9346, 0.6158", "358.373, 413.166, 39.0494, 0.6864", "358.865, 412.341, 39.1532, 0.695", "359.142, 411.497, 39.202, 0.5592", "359.353, 410.566, 39.2078, 0.521", "359.226, 409.875, 39.0359, 0.5312", "359.092, 408.949, 38.8713, 0.5848", "359.351, 408.028, 38.7946, 0.5838", "359.694, 407.022, 38.7803, 0.422", "360.128, 406.046, 38.7579, 0.316", "360.36, 405.125, 38.803, 0.5854", "360.589, 404.168, 38.9133, 0.305", "360.656, 403.444, 38.7909, 0.3982", "360.831, 402.713, 38.4261, 0.4436", "361.354, 401.801, 38.0929, 0.3814", "361.668, 400.806, 37.9078, 0.6584", "361.847, 399.905, 37.6804, 0.6102", "361.777, 398.898, 37.52, 0.3402", "361.847, 398.059, 37.5477, 0.7372", "361.946, 397.316, 37.7479, 0.6344", "362.343, 396.346, 37.8333, 0.6186", "362.181, 395.398, 37.8428, 0.3814", "362.106, 394.272, 37.9106, 0.5428", "362.534, 393.291, 38.0621, 0.6184", "362.865, 392.709, 38.4521, 0.5118", "362.845, 391.823, 38.5675, 0.438", "363.049, 390.781, 38.6862, 0.661", "363.127, 390.013, 38.922, 0.2728", "363.531, 389.269, 38.962, 0.2988", "363.53, 388.423, 38.785, 0.4882", "363.906, 387.754, 38.8284, 0.4586", "364.2, 386.707, 38.8576, 0.3092", "363.985, 385.869, 38.7758, 0.2288", "363.784, 384.966, 38.8839, 0.5904", "363.677, 383.854, 39.0107, 0.483", "363.728, 382.856, 39.1868, 0.4662", "364.045, 381.94, 39.247, 0.3814", "364.586, 381.062, 39.4626, 0.4322", "365.193, 380.29, 39.4999, 0.2986", "365.364, 379.305, 39.6808, 0.4376", "365.46, 378.347, 39.718, 0.3596", "365.651, 377.338, 39.7432, 0.5758", "366.11, 376.41, 39.8857, 0.6358", "366.594, 375.46, 39.8846, 0.451", "367.169, 374.535, 39.8852, 0.6102", "367.74, 374.036, 40.0523, 0.4382", "368.575, 373.63, 40.1892, 0.5468", "369.38, 372.951, 40.2643, 0.5364", "370.045, 372.196, 40.3595, 0.4576", "370.645, 371.432, 40.4054, 0.2452", "371.322, 370.596, 40.3631, 0.305", "372.097, 369.941, 40.4222, 0.4032", "372.778, 369.056, 40.5073, 0.4042", "373.661, 368.401, 40.5415, 0.3804", "374.38, 367.667, 40.5927, 0.5228", "375.094, 366.835, 40.5552, 0.4242", "375.794, 366.153, 40.5059, 0.4444", "376.62, 365.431, 40.4704, 0.356", "377.221, 364.505, 40.4793, 0.3722", "377.745, 363.591, 40.5076, 0.305", "378.32, 362.717, 40.5216, 0.4228", "379.225, 362.037, 40.5306, 0.381", "380.015, 361.513, 40.6636, 0.4996", "380.703, 360.816, 40.7602, 0.409", "381.319, 360.346, 40.9945, 0.3398", "382.298, 359.965, 41.0581, 0.4576", "383.262, 359.535, 41.125, 0.3464", "384.125, 359.088, 41.2667, 0.4576", "385.014, 358.531, 41.3258, 0.2604", "385.618, 358.161, 41.2784, 0.3052", "386.196, 357.776, 41.3902, 0.2542", "386.511, 357.107, 41.2171, 0.2458", "387.247, 356.369, 41.1194, 0.4576", "387.73, 355.942, 40.9304, 0.5444", "388.415, 355.21, 40.6501, 0.4728", "388.845, 354.321, 40.441, 0.5488", "389.418, 353.839, 39.76, 0.4576" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "351.572, 429.064, 39.1552, 0.3814", "350.831, 428.189, 38.7545, 0.5586", "349.862, 427.584, 38.3939, 0.5338", "348.898, 427.007, 38.0019, 0.531", "347.997, 426.341, 37.5936, 0.4812", "347.394, 425.375, 37.2322, 0.4538", "347.092, 424.274, 36.8939, 0.411", "346.706, 423.235, 36.4924, 0.455", "346.208, 422.372, 35.9374, 0.4442", "345.644, 421.494, 35.3366, 0.5488", "344.838, 420.72, 34.9076, 0.6706", "343.789, 420.355, 34.6094, 0.8496", "342.647, 420.334, 34.3218, 0.9066", "341.569, 420.454, 33.9472, 0.8934", "340.528, 420.376, 33.4642, 0.8214", "339.893, 419.533, 32.9328, 0.763", "339.769, 418.514, 32.4145, 0.7096", "340.085, 417.439, 31.9455, 0.674", "340.428, 416.369, 31.5697, 0.661", "340.677, 415.263, 31.3706, 0.7044", "340.639, 414.155, 31.3482, 0.8076", "340.246, 413.206, 31.3194, 0.988", "339.974, 412.323, 31.4037, 0.9386", "339.432, 411.576, 31.5104, 0.5228", "339.387, 410.459, 31.5132, 0.4846", "339.084, 409.502, 31.339, 0.4466", "339.001, 408.654, 31.3082, 0.6818", "338.288, 408.173, 31.3247, 0.3176", "338.011, 407.255, 31.234, 0.5658", "337.442, 406.488, 31.2194, 0.6232", "336.786, 406.008, 31.33, 0.5758", "336.119, 405.492, 31.4482, 0.6444", "335.25, 405.35, 31.4689, 0.6152", "334.549, 404.65, 31.4107, 0.5592", "333.6, 404.395, 31.3334, 0.4322", "332.722, 404.016, 31.0425, 0.6948", "331.801, 404.133, 30.5116, 0.627", "330.967, 403.865, 29.8399, 0.6018", "329.965, 403.601, 29.2776, 0.5592", "329.361, 402.889, 28.7112, 0.5822", "328.681, 402.193, 28.1814, 0.3772", "327.973, 401.651, 27.8877, 0.3886", "327.661, 400.808, 27.6657, 0.512", "327.023, 400.068, 27.4476, 0.356", "326.787, 399.139, 27.2082, 0.5348", "326.494, 398.238, 26.9668, 0.49", "326.574, 397.491, 27.0105, 0.602", "326.546, 396.418, 27.1866, 0.4748", "326.462, 395.333, 27.3972, 0.3816", "326.219, 394.515, 27.7122, 0.6102", "326.242, 393.492, 27.7866, 0.599", "326.003, 392.377, 27.7782, 0.6356", "325.926, 391.256, 27.7138, 0.5516", "325.512, 390.598, 27.7581, 0.4868", "325.062, 390.071, 27.5022, 0.6272", "324.194, 389.547, 27.1393, 0.356", "323.397, 389.35, 26.9237, 0.5286", "322.864, 389.071, 26.4524, 0.4428", "322.837, 388.041, 25.9361, 0.539", "322.385, 387.587, 25.5388, 0.3564", "322.265, 386.672, 25.2756, 0.4068", "321.551, 386.099, 24.995, 0.384", "321.187, 385.423, 24.6775, 0.551", "320.418, 384.842, 24.4605, 0.5872", "319.288, 384.707, 24.292, 0.5018", "318.246, 384.53, 24.1254, 0.4674", "317.491, 383.835, 23.9002, 0.5802", "317.077, 382.813, 23.7017, 0.517", "316.603, 381.796, 23.5432, 0.5848", "316.171, 380.751, 23.5085, 0.5056", "315.973, 379.642, 23.5679, 0.5024", "315.138, 378.948, 23.6813, 0.5568", "314.09, 378.629, 23.8972, 0.5946", "312.994, 378.472, 24.1212, 0.3566", "312.346, 377.63, 24.3211, 0.5374", "311.867, 376.764, 24.4196, 0.6764", "311.125, 376.163, 24.5255, 0.6248", "310.343, 375.741, 24.5633, 0.4576", "309.413, 375.216, 24.5664, 0.5672", "308.583, 374.604, 24.6834, 0.661", "308.134, 373.852, 24.5672, 0.5848", "307.678, 372.89, 24.3793, 0.6356", "307.347, 371.817, 24.2024, 0.5122", "306.957, 370.888, 24.1408, 0.5592", "306.743, 370.03, 24.0848, 0.5354", "306.584, 369.271, 23.8837, 0.5228", "306.003, 368.527, 23.8104, 0.389", "305.099, 368.147, 23.8459, 0.661", "304.567, 367.311, 23.8078, 0.561", "304.081, 366.47, 23.5978, 0.538", "304.279, 365.407, 23.4184, 0.4408", "303.846, 364.965, 23.1246, 0.3852", "303.663, 364.211, 23.0208, 0.5682", "304.06, 363.227, 22.8679, 0.3044", "304.762, 362.648, 22.96, 0.3814" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "348.107, 438.724, 43.1276, 0.661", "347.712, 438.342, 43.0763, 0.6254", "346.895, 437.55, 43.1332, 0.5516", "346.079, 436.76, 43.2701, 0.4778", "345.263, 435.968, 43.4496, 0.4042", "344.446, 435.178, 43.6374, 0.3304", "343.885, 434.28, 43.8239, 0.5656", "343.516, 433.223, 43.9491, 0.5678", "343.009, 432.407, 43.8892, 0.483" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "348.107, 438.724, 43.1276, 0.661", "348.687, 438.081, 43.6125, 0.6864", "349.251, 437.208, 43.9088, 0.4368", "350.117, 436.467, 44.0146, 0.284", "350.977, 435.739, 44.0594, 0.356", "351.818, 435.559, 44.0843, 0.6524", "352.466, 434.949, 44.133, 0.4322" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "290.347, 438.038, 52.717, 0.5338", "289.902, 437.466, 53.2227, 0.5848", "289.544, 437.351, 53.8258, 0.2542", "288.768, 437.694, 54.4653, 0.2288", "288.043, 437.085, 54.7714, 0.4104", "287.272, 436.341, 54.8654, 0.5532", "286.458, 435.864, 55.0298, 0.6662", "285.924, 435.306, 55.2712, 0.3512", "284.999, 435.487, 55.3305, 0.7052", "284.284, 435.056, 55.2742, 0.7568", "283.719, 434.725, 55.4674, 0.4474", "282.904, 434.651, 55.5985, 0.4576", "281.911, 435.072, 55.6237, 0.4576", "281.127, 434.837, 55.6853, 0.5932", "280.371, 434.022, 55.7256, 0.4074", "279.928, 433.195, 55.8704, 0.633", "279.351, 432.267, 55.9924, 0.449", "278.638, 431.652, 55.9154, 0.4692", "277.553, 431.528, 55.8018, 0.4964", "276.718, 431.289, 55.5405, 0.356", "275.993, 430.496, 55.246, 0.3304", "275.529, 429.915, 55.0438, 0.2288", "274.708, 429.686, 55.0365, 0.305", "273.647, 429.572, 55.1382, 0.5536", "272.869, 428.985, 55.3115, 0.5038", "271.929, 428.433, 55.5047, 0.5412", "270.97, 428.094, 55.7119, 0.4204", "270.078, 427.66, 55.7631, 0.3814", "268.999, 427.398, 55.8715, 0.3304", "268.213, 427.083, 56.0577, 0.3304", "267.38, 427.055, 56.0804, 0.4438", "266.554, 426.515, 56.2663, 0.4576", "265.925, 425.845, 56.5253, 0.5014", "265.106, 425.291, 56.7641, 0.4596", "264.567, 424.359, 56.936, 0.5682", "264.035, 423.423, 57.1822, 0.2358", "263.232, 423.049, 57.4076, 0.2578", "262.53, 422.508, 57.7192, 0.5812", "261.881, 421.803, 58.0857, 0.4668", "261.151, 420.96, 58.3901, 0.521", "260.492, 420.307, 58.606, 0.3304", "260.179, 419.303, 58.8182, 0.5592", "259.794, 418.47, 58.8585, 0.482", "258.903, 417.973, 58.9305, 0.3588", "258.275, 417.139, 59.1158, 0.4328", "257.724, 416.17, 59.2959, 0.5338", "257.078, 415.249, 59.5314, 0.4872", "256.511, 414.298, 59.7537, 0.563", "255.959, 413.315, 59.9665, 0.5422", "255.693, 412.351, 60.3092, 0.6574", "255.28, 411.617, 60.6124, 0.3836", "254.535, 410.918, 60.7869, 0.4674", "253.769, 410.148, 61.0257, 0.5848", "253.125, 409.217, 61.2671, 0.4794", "252.458, 408.559, 61.3497, 0.5022", "251.793, 407.961, 61.6134, 0.5066", "250.933, 407.378, 61.8873, 0.4576", "249.835, 407.16, 62.1645, 0.5206", "248.906, 406.607, 62.4677, 0.4216", "248.486, 405.667, 62.7012, 0.4068", "248.046, 404.63, 62.8914, 0.3144", "247.288, 403.838, 63.1288, 0.2288", "246.638, 403.573, 63.4203, 0.2288", "245.629, 403.451, 63.677, 0.305", "245.145, 402.596, 63.8137, 0.2472", "244.849, 401.519, 63.9243, 0.2288", "244.161, 400.616, 63.9946, 0.2364", "243.62, 399.695, 64.0556, 0.3612", "243.114, 398.748, 64.1166, 0.3064", "242.511, 397.952, 64.2869, 0.356", "241.702, 397.316, 64.4708, 0.2488", "240.937, 396.809, 64.5498, 0.302", "239.949, 396.563, 64.7682, 0.2688", "239.207, 395.962, 65.0418, 0.4008", "238.118, 396.096, 65.2145, 0.305", "237.079, 395.894, 65.413, 0.539", "236.395, 395.592, 65.8372, 0.3734", "235.51, 395.395, 66.1906, 0.3206", "234.685, 395.547, 66.2987, 0.4184", "234.062, 395.366, 66.92, 0.4576" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "290.347, 438.038, 52.717, 0.5338", "289.775, 438.354, 52.4205, 0.4326", "289.973, 438.905, 53.7928, 0.65", "289.417, 439.652, 54.3595, 0.5484", "288.438, 440.097, 54.7856, 0.3946", "287.952, 440.884, 55.1088, 0.37", "286.948, 441.158, 55.2955, 0.6732", "285.93, 441.132, 55.3549, 0.5242", "285.261, 441.576, 55.2681, 0.5492", "284.393, 442.013, 55.3294, 0.2288", "283.474, 442.424, 55.3353, 0.305", "282.709, 442.992, 55.4537, 0.4772", "282.105, 443.136, 55.5929, 0.2384", "281.56, 444.086, 55.7421, 0.4522", "280.988, 445.009, 55.8622, 0.5488", "280.488, 445.927, 56.0171, 0.5764", "279.638, 446.579, 56.1165, 0.2542", "278.704, 447.202, 56.1075, 0.3648", "278.007, 447.418, 56.2142, 0.2288", "277.176, 447.905, 56.259, 0.2288", "276.512, 448.597, 56.2111, 0.4438", "275.878, 449.249, 56.0454, 0.2288", "274.847, 449.613, 55.8916, 0.4132", "274.006, 450.307, 55.8877, 0.4074", "273.05, 450.717, 55.9882, 0.292", "272.311, 451.0, 55.8866, 0.4576", "271.406, 451.423, 56.0204, 0.4576", "270.46, 451.946, 56.2652, 0.4576", "269.461, 452.272, 56.4486, 0.245", "268.331, 452.326, 56.6068, 0.2288", "267.258, 452.302, 56.8464, 0.258", "266.131, 452.253, 57.0055, 0.3612", "265.065, 452.452, 57.12, 0.4322" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "340.899, 436.449, 57.6556, 0.4068", "340.649, 437.571, 58.1778, 0.2626", "340.357, 438.461, 59.2701, 0.3918", "340.441, 439.583, 59.6694, 0.4408", "340.405, 440.582, 60.2669, 0.2542", "340.18, 441.533, 61.0103, 0.3216", "339.855, 442.48, 61.705, 0.3076", "339.768, 443.395, 62.4039, 0.2846", "339.651, 444.404, 62.9028, 0.2762", "339.302, 445.432, 63.3923, 0.2288", "338.949, 446.273, 63.9489, 0.2288", "339.431, 446.913, 64.5896, 0.2288", "339.561, 447.996, 65.1347, 0.3586", "339.372, 449.007, 65.5721, 0.2654", "339.082, 449.925, 65.9274, 0.2808", "338.853, 451.03, 66.1464, 0.2406", "339.104, 452.124, 66.2827, 0.3022", "339.358, 453.065, 66.5062, 0.391", "339.815, 454.0, 66.7848, 0.2436", "340.054, 455.02, 67.004, 0.2288", "340.759, 455.799, 67.23, 0.2288", "340.951, 456.848, 67.41, 0.2288", "341.487, 457.661, 67.6374, 0.311", "341.627, 458.722, 67.706, 0.3528", "342.234, 459.669, 67.7522, 0.2436", "342.573, 460.658, 67.7998, 0.2288", "343.054, 461.582, 67.7908, 0.2288", "343.372, 462.572, 67.8054, 0.2288", "343.515, 463.447, 67.9342, 0.2478", "343.653, 464.295, 68.2452, 0.27", "343.596, 465.394, 68.434, 0.4052", "343.572, 466.516, 68.5457, 0.4516", "343.532, 467.626, 68.7201, 0.4208", "343.414, 468.748, 68.8736, 0.5624", "343.338, 469.862, 68.9514, 0.4436", "343.429, 471.183, 68.9004, 0.2288", "343.543, 472.22, 68.9044, 0.2288", "343.456, 473.219, 69.13, 0.3304", "343.656, 474.31, 69.4025, 0.3746", "343.772, 475.355, 69.834, 0.4698", "343.772, 476.461, 70.2579, 0.4578", "343.886, 477.324, 70.7988, 0.2812", "344.058, 478.438, 71.192, 0.3436", "344.35, 479.536, 71.5226, 0.4882", "344.311, 480.612, 71.9062, 0.403", "344.409, 481.623, 72.2963, 0.2758", "344.828, 482.636, 72.597, 0.338", "345.47, 483.433, 72.8893, 0.3502", "345.916, 484.327, 73.0752, 0.2466", "346.681, 485.117, 73.222, 0.237", "346.975, 486.2, 73.36, 0.3304" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "340.899, 436.449, 57.6556, 0.4068", "340.247, 435.681, 58.434, 0.446", "339.699, 434.718, 59.0682, 0.3728", "338.988, 433.902, 59.6095, 0.305", "338.022, 433.412, 60.0286, 0.4756", "337.145, 433.251, 60.6136, 0.23", "336.174, 432.768, 61.1862, 0.3124", "335.048, 432.772, 61.6781, 0.5116", "333.945, 432.588, 62.1863, 0.6346", "332.85, 432.546, 62.7091, 0.511", "331.785, 432.216, 63.1725, 0.4576" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "369.398, 418.552, 54.0411, 0.5338", "369.854, 419.72, 53.9389, 0.305", "370.569, 420.558, 53.8824, 0.3772", "371.418, 421.28, 53.8474, 0.483", "372.222, 421.993, 53.7435, 0.5338", "373.086, 422.511, 53.7306, 0.589", "373.748, 423.335, 53.662, 0.4214", "374.449, 424.144, 53.6452, 0.3814", "375.357, 424.66, 53.5693, 0.5456", "376.384, 424.882, 53.545, 0.2394", "377.43, 425.17, 53.4632, 0.5462", "378.186, 425.677, 53.1742, 0.447", "379.029, 426.332, 52.9141, 0.6102", "379.948, 426.903, 52.3289, 0.5338" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "369.398, 418.552, 54.0411, 0.5338", "369.792, 418.726, 54.1299, 0.3016", "370.745, 418.666, 53.8485, 0.4068", "371.769, 418.532, 53.755, 0.8932", "372.778, 418.475, 53.52, 0.61", "373.415, 418.05, 53.2692, 0.6702", "374.444, 418.132, 53.235, 0.3304", "375.278, 417.872, 53.1062, 0.756", "376.339, 417.531, 52.9808, 0.5766", "377.451, 417.562, 52.9054, 0.5778", "378.388, 417.773, 52.7775, 0.526", "379.411, 417.511, 52.4588, 0.855", "380.228, 416.938, 52.1475, 0.5958", "381.237, 416.645, 51.8437, 0.5154", "382.323, 416.724, 51.6575, 0.6864", "383.278, 416.612, 51.5242, 0.6964", "384.158, 417.061, 51.4839, 0.661", "385.082, 417.439, 51.3075, 0.5626", "386.207, 417.331, 51.137, 0.4204", "387.015, 416.768, 50.9552, 0.4824", "387.857, 416.302, 50.7766, 0.2288", "388.618, 416.416, 50.5282, 0.5244", "389.665, 416.273, 50.5078, 0.5104", "390.607, 415.852, 50.4283, 0.4986", "391.043, 415.19, 50.2597, 0.4232", "391.865, 414.586, 50.3443, 0.3238", "392.511, 414.247, 50.4347, 0.797", "393.541, 414.034, 50.449, 0.5618", "394.409, 414.311, 50.4904, 0.6886", "395.354, 414.79, 50.3608, 0.54", "396.258, 415.226, 50.2438, 0.5876", "397.327, 415.25, 50.0321, 0.6146", "398.398, 414.976, 49.7218, 0.5708", "399.495, 414.85, 49.3917, 0.5834", "400.303, 414.814, 49.0417, 0.4134", "401.333, 414.59, 48.3213, 0.4042", "402.459, 414.23, 47.4992, 0.4576", "403.26, 414.205, 47.7554, 0.5592", "403.375, 414.666, 48.1443, 0.4862", "404.351, 414.691, 48.6192, 0.5466", "405.158, 414.401, 49.1803, 0.3198", "406.242, 414.471, 49.5457, 0.4094", "407.202, 414.586, 49.5452, 0.6238", "408.199, 414.471, 49.4365, 0.4924", "409.324, 414.581, 49.1831, 0.503", "410.373, 414.367, 48.8242, 0.4614", "411.404, 414.671, 48.3543, 0.4814", "412.212, 414.175, 47.9886, 0.2522", "413.222, 414.317, 47.5944, 0.6106", "414.221, 414.586, 47.1402, 0.905", "414.943, 414.165, 46.5279, 0.49", "415.349, 413.251, 46.034, 0.6356", "415.309, 412.136, 45.5734, 0.6886", "414.972, 411.215, 45.1399, 0.76", "414.186, 410.925, 44.4993, 0.5462", "413.67, 410.436, 43.7385, 0.2444", "414.333, 409.802, 42.905, 0.3992", "414.846, 409.781, 41.7606, 0.6102", "415.718, 409.688, 40.5902, 0.4322", "416.393, 408.905, 39.6906, 0.7834", "416.936, 408.294, 38.6994, 0.7016", "417.573, 408.505, 37.5939, 0.664", "418.132, 407.846, 36.5481, 0.8944", "417.941, 408.099, 35.392, 0.839", "418.038, 407.717, 34.1541, 0.6056", "418.659, 406.992, 33.0949, 0.4576", "419.308, 406.519, 32.3288, 0.597", "420.153, 406.252, 31.9774, 0.6864", "420.945, 405.662, 31.9052, 0.4928", "421.956, 405.537, 31.7895, 0.485", "422.594, 405.018, 31.6193, 0.5338", "422.454, 404.671, 31.1228, 0.4828", "422.575, 403.854, 30.6202, 0.6774", "423.496, 403.362, 30.161, 0.6102", "423.869, 402.863, 29.7657, 0.5364", "424.554, 401.947, 29.4482, 0.4006", "424.22, 401.193, 29.1466, 0.5592", "423.931, 400.478, 28.6535, 0.4698", "424.14, 399.532, 28.2248, 0.5056", "424.882, 398.957, 27.827, 0.5114", "425.281, 398.448, 27.3392, 0.2288", "425.928, 397.769, 26.847, 0.308", "426.842, 397.654, 26.6613, 0.2288", "427.681, 397.373, 26.6647, 0.3804", "428.359, 396.522, 26.588, 0.6688", "428.878, 396.166, 26.2399, 0.6052", "429.011, 395.612, 25.7166, 0.509", "429.53, 394.665, 25.2423, 0.575", "428.985, 393.928, 24.9354, 0.369", "429.04, 393.109, 24.8595, 0.5592", "429.495, 392.511, 24.8956, 0.3394", "430.03, 391.728, 24.7442, 0.7118", "430.716, 390.905, 24.08, 0.5592" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "343.009, 432.407, 43.8892, 0.483", "343.304, 431.107, 45.2066, 0.449", "343.534, 430.094, 45.9239, 0.4222", "343.764, 429.08, 46.2924, 0.3956", "343.658, 428.414, 46.5083, 0.6868", "343.842, 427.303, 46.6312, 0.5232", "343.999, 426.201, 46.6169, 0.4098", "343.886, 425.682, 46.3, 0.2288", "344.122, 424.985, 45.8223, 0.2288", "344.344, 424.009, 45.5815, 0.2288", "344.344, 422.914, 45.5476, 0.4058", "344.686, 422.369, 45.6702, 0.4564", "344.915, 421.308, 45.8724, 0.4086", "345.03, 420.205, 46.0032, 0.5562", "345.02, 419.193, 45.9659, 0.4936", "345.203, 418.201, 45.8634, 0.6584", "345.512, 417.12, 45.7069, 0.715", "345.312, 416.107, 45.4513, 0.5984", "345.221, 415.082, 45.2253, 0.5334", "345.702, 414.284, 45.0285, 0.7372", "345.738, 413.214, 44.8067, 0.6286", "346.166, 412.353, 44.5603, 0.5338", "346.746, 412.145, 44.0832, 0.6354", "347.363, 411.396, 43.7497, 0.4284", "347.624, 410.467, 43.6173, 0.305", "347.668, 409.61, 43.3905, 0.2288", "347.687, 408.675, 43.3026, 0.4576", "347.825, 407.738, 43.22, 0.3158", "347.877, 406.658, 43.0654, 0.4172", "347.96, 405.692, 42.9282, 0.3814", "347.547, 404.991, 42.761, 0.3776", "347.547, 404.491, 42.5306, 0.6664", "347.599, 403.652, 42.348, 0.6058", "347.401, 402.734, 42.1112, 0.5066", "347.197, 401.64, 41.9454, 0.6224", "346.59, 400.893, 42.0146, 0.4576", "346.018, 400.151, 42.0036, 0.5754", "345.712, 399.302, 42.1621, 0.3896", "345.145, 398.385, 42.2988, 0.4512", "344.914, 397.366, 42.3231, 0.5198", "344.35, 396.847, 42.275, 0.6736", "343.681, 396.483, 42.3959, 0.515", "343.314, 395.595, 42.28, 0.5848", "342.762, 394.173, 40.8033, 0.661", "342.661, 393.239, 40.635, 0.5094", "342.529, 392.25, 40.3956, 0.4312", "342.782, 391.343, 40.1083, 0.4036", "343.043, 390.478, 40.0607, 0.4486", "343.435, 389.637, 40.0565, 0.5454", "344.124, 388.961, 40.0674, 0.454", "344.797, 388.274, 39.9711, 0.6864", "345.774, 388.012, 39.8104, 0.4322", "346.178, 387.522, 39.8238, 0.355", "346.863, 387.015, 39.6446, 0.6356", "347.019, 386.426, 39.1866, 0.5564", "347.115, 385.456, 38.6081, 0.661", "347.885, 384.849, 38.0909, 0.5848", "348.623, 384.48, 37.6589, 0.4372", "349.289, 383.642, 37.2901, 0.5848", "349.606, 382.668, 36.9908, 0.6864", "349.44, 382.004, 36.6582, 0.5574", "349.103, 380.969, 36.3208, 0.483", "349.444, 380.052, 36.0685, 0.5116", "350.132, 379.838, 35.8428, 0.6444", "350.988, 379.638, 35.5267, 0.4102", "351.25, 378.774, 35.3643, 0.4576", "350.521, 378.128, 35.3951, 0.4576", "350.048, 377.396, 35.3814, 0.4576", "350.253, 376.716, 35.1369, 0.605", "350.811, 376.032, 34.8639, 0.3174", "351.377, 375.261, 34.7253, 0.2784", "351.489, 374.326, 34.7757, 0.2636", "351.767, 373.683, 34.5559, 0.6084", "351.329, 373.029, 34.4506, 0.4576", "351.05, 372.113, 34.2983, 0.5572", "351.154, 371.188, 34.139, 0.5634", "351.432, 370.208, 33.957, 0.5084", "351.208, 369.131, 33.8271, 0.3304", "350.885, 368.323, 33.7294, 0.424", "350.931, 367.418, 33.845, 0.4694", "350.645, 366.596, 33.7985, 0.4068", "351.4, 366.102, 33.6879, 0.4576", "351.958, 365.495, 33.5409, 0.6864", "352.125, 364.643, 33.556, 0.5512", "352.181, 363.537, 33.5446, 0.606", "352.349, 362.447, 33.5443, 0.4134", "353.092, 361.72, 33.6776, 0.4848", "353.382, 360.724, 33.6913, 0.385", "353.585, 359.661, 33.6745, 0.356", "353.64, 358.607, 33.5454, 0.2966", "353.725, 357.566, 33.4566, 0.3732", "353.752, 356.496, 33.3318, 0.6034", "354.038, 355.519, 33.1288, 0.304", "354.937, 355.098, 32.8997, 0.4308", "355.212, 354.234, 32.7552, 0.355", "355.441, 353.262, 32.5643, 0.3348", "356.036, 352.399, 32.284, 0.409", "356.331, 351.526, 32.0919, 0.4196", "356.548, 350.661, 31.981, 0.4116", "356.807, 349.871, 31.673, 0.3604", "356.694, 348.968, 31.5165, 0.3846", "356.624, 348.324, 31.1587, 0.5972", "356.673, 347.547, 30.928, 0.384", "356.71, 346.959, 30.8109, 0.4576", "356.231, 346.489, 30.5794, 0.4342", "355.726, 345.648, 30.5589, 0.4932", "355.212, 344.804, 30.3596, 0.5214", "354.47, 344.224, 30.1272, 0.4526", "353.877, 343.28, 29.9788, 0.4338", "353.2, 342.531, 29.8609, 0.2952", "352.471, 341.791, 29.9177, 0.4388", "352.338, 341.017, 29.7643, 0.3324", "351.899, 340.018, 29.7424, 0.48", "351.205, 339.387, 29.6246, 0.3454", "350.691, 338.769, 29.6876, 0.305", "350.197, 338.345, 29.4546, 0.235", "350.058, 337.676, 29.3622, 0.286", "349.704, 336.68, 29.3504, 0.384", "349.269, 335.717, 29.3689, 0.4572", "348.676, 334.905, 29.4036, 0.3904", "348.119, 334.62, 28.84, 0.3814" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "343.009, 432.407, 43.8892, 0.483", "342.499, 431.751, 43.8502, 0.3318", "342.256, 430.937, 43.6206, 0.6426", "341.942, 430.151, 43.5697, 0.4824", "341.608, 429.224, 43.435, 0.5262", "341.37, 428.466, 43.5551, 0.4136", "341.293, 427.374, 43.5686, 0.458", "340.998, 426.448, 43.449, 0.5848", "340.675, 425.436, 43.2947, 0.6264", "340.49, 424.424, 43.188, 0.532", "340.323, 423.732, 43.2116, 0.4184", "339.997, 422.714, 43.2561, 0.661", "340.0, 421.745, 43.1463, 0.5412", "339.724, 420.658, 43.0791, 0.5338", "339.62, 419.636, 43.1267, 0.7588", "339.6, 418.654, 43.1939, 0.6346", "339.483, 417.562, 43.1612, 0.5208", "339.196, 416.593, 43.2043, 0.5194", "339.085, 415.566, 43.3348, 0.723", "338.833, 414.576, 43.4196, 0.6038", "338.511, 413.531, 43.447, 0.661", "338.411, 412.414, 43.4095, 0.6116", "338.608, 411.302, 43.3513, 0.4358", "338.24, 410.571, 43.2488, 0.4022", "337.813, 409.718, 43.1852, 0.4972", "337.411, 408.898, 43.0931, 0.6356", "337.461, 407.922, 42.9842, 0.6166", "337.907, 406.962, 42.8641, 0.5084", "337.914, 405.892, 42.7778, 0.337", "338.077, 404.792, 42.721, 0.4926", "338.386, 403.754, 42.7358, 0.6028", "338.655, 402.772, 42.7944, 0.4236", "339.488, 402.1, 42.7862, 0.3994", "339.922, 401.137, 42.7179, 0.4638", "340.698, 400.427, 42.6796, 0.3766", "341.663, 400.184, 42.5824, 0.356", "341.942, 399.701, 42.3811, 0.356", "342.317, 399.484, 42.0476, 0.4228", "342.522, 398.686, 41.7138, 0.6864", "342.828, 398.034, 41.6774, 0.5374", "343.145, 396.96, 41.6522, 0.5136", "343.335, 396.357, 41.7186, 0.6432", "343.352, 395.29, 41.7312, 0.6102", "343.547, 394.8, 41.6886, 0.3744", "343.886, 393.907, 41.7354, 0.356", "344.23, 393.502, 41.8351, 0.4576", "344.53, 392.638, 41.7816, 0.6578", "344.535, 391.886, 41.6469, 0.4916", "344.476, 390.957, 41.7015, 0.2992", "345.101, 390.121, 41.8289, 0.3994", "345.289, 389.026, 41.9345, 0.2658", "345.488, 388.383, 41.6942, 0.2692", "344.752, 388.259, 41.3003, 0.599", "344.724, 387.641, 41.0897, 0.2928", "344.846, 386.714, 40.696, 0.439", "345.472, 385.788, 40.3612, 0.2796", "345.647, 384.838, 40.1632, 0.356", "345.359, 384.227, 39.9286, 0.4328", "345.067, 383.246, 39.8544, 0.5372", "345.134, 382.214, 39.8384, 0.5338", "345.145, 381.256, 39.914, 0.6102", "345.005, 380.685, 40.164, 0.5084", "344.732, 379.716, 40.3161, 0.5592", "345.035, 378.823, 40.511, 0.5682", "345.453, 377.888, 40.6367, 0.618", "345.775, 377.034, 40.6652, 0.3814", "346.156, 376.09, 40.8596, 0.3426", "346.391, 375.155, 41.06, 0.5094", "347.042, 374.615, 41.0547, 0.459", "347.586, 373.694, 41.0388, 0.387", "347.434, 373.574, 41.2944, 0.4296", "347.89, 372.676, 41.5828, 0.5698", "348.474, 371.967, 41.82, 0.4646", "349.296, 371.508, 42.0112, 0.5242", "349.995, 370.878, 42.2685, 0.5614", "350.408, 370.076, 42.3038, 0.5468", "350.761, 369.212, 42.3788, 0.5338", "350.636, 368.153, 42.4284, 0.5408", "351.152, 367.172, 42.4945, 0.5558", "351.55, 366.117, 42.5936, 0.37", "352.238, 365.444, 42.6499, 0.483", "352.359, 364.591, 42.6404, 0.5548", "352.776, 363.654, 42.6227, 0.5054", "352.746, 362.881, 42.7798, 0.3904", "353.153, 362.184, 42.9649, 0.594", "353.267, 361.409, 43.0214, 0.4888", "353.613, 360.613, 43.0584, 0.5234", "353.69, 359.691, 43.2208, 0.4414", "354.093, 359.241, 43.4571, 0.4958", "354.65, 358.477, 43.5308, 0.5316", "355.548, 357.85, 43.6601, 0.538", "356.339, 357.072, 43.7016, 0.5352", "356.594, 356.127, 43.7996, 0.3432", "357.142, 355.191, 43.7665, 0.43", "357.609, 354.253, 43.806, 0.3814", "358.205, 353.678, 43.9513, 0.496", "358.865, 353.021, 44.119, 0.6152", "359.328, 352.222, 44.2344, 0.429", "359.56, 351.262, 44.3926, 0.6026", "359.781, 350.263, 44.6748, 0.4248", "360.281, 349.267, 44.8624, 0.356", "360.665, 348.602, 44.9226, 0.4322", "360.77, 347.792, 45.129, 0.3848", "361.182, 346.788, 45.3065, 0.4522", "361.276, 345.735, 45.4955, 0.3332", "361.546, 344.816, 45.5496, 0.4546", "361.621, 343.915, 45.6529, 0.4576", "361.849, 342.874, 45.7377, 0.3862", "362.028, 341.866, 45.7453, 0.5476", "361.947, 340.827, 45.8198, 0.3032", "362.348, 340.172, 45.9687, 0.3718", "362.602, 339.111, 46.1045, 0.3078", "362.648, 337.989, 46.209, 0.2858", "362.552, 336.929, 46.2902, 0.3632", "362.762, 335.869, 46.356, 0.397", "362.562, 335.087, 46.655, 0.5016", "362.177, 334.173, 46.7701, 0.4318", "362.19, 333.105, 46.8387, 0.2288", "362.282, 331.977, 46.9504, 0.2492", "362.528, 330.877, 47.0823, 0.3062", "362.457, 329.737, 47.2405, 0.3348", "362.707, 328.671, 47.4071, 0.437", "363.064, 327.622, 47.7103, 0.374", "363.328, 326.67, 48.1309, 0.4744", "363.259, 325.811, 48.5335, 0.2802", "363.906, 325.468, 49.84, 0.3814" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "352.466, 434.949, 44.133, 0.4322", "353.398, 434.309, 44.2557, 0.2288", "354.249, 433.812, 44.2151, 0.3514", "355.299, 433.643, 44.2011, 0.4244", "356.207, 433.049, 44.0642, 0.3416", "357.168, 432.451, 43.9029, 0.2288", "358.061, 431.929, 43.6988, 0.3814", "358.629, 431.067, 43.5652, 0.3254", "359.441, 430.49, 43.3611, 0.2288", "360.234, 429.771, 43.1908, 0.2288", "360.932, 429.114, 43.1108, 0.356", "361.927, 428.554, 43.0998, 0.5318", "362.841, 428.085, 43.2849, 0.609", "363.628, 427.532, 43.5372, 0.5822", "363.945, 426.865, 43.7721, 0.4188", "364.934, 426.363, 43.9253, 0.483", "365.996, 426.06, 43.9457, 0.3616", "367.024, 425.609, 43.9426, 0.2796", "367.989, 425.428, 43.7923, 0.415", "369.046, 425.062, 43.7237, 0.4424", "369.972, 424.441, 43.6769, 0.378", "370.505, 423.553, 43.748, 0.5274", "371.317, 423.53, 43.9303, 0.2452", "372.388, 423.63, 43.96, 0.4036", "373.476, 423.651, 43.9286, 0.283", "374.485, 423.163, 43.8973, 0.5602", "375.388, 422.515, 43.9057, 0.6734", "376.219, 421.804, 43.8589, 0.4384", "377.34, 421.619, 43.8015, 0.483", "378.448, 421.403, 43.7284, 0.4576", "379.301, 420.776, 43.7542, 0.5246", "380.362, 420.491, 43.7035, 0.567", "381.471, 420.42, 43.65, 0.5726", "382.443, 420.112, 43.6884, 0.878", "383.238, 419.518, 43.7741, 0.615", "384.242, 419.047, 43.7604, 0.6346", "385.176, 418.781, 43.6948, 0.6206", "386.299, 418.909, 43.664, 0.4642", "387.386, 419.247, 43.6405, 0.439", "388.499, 419.498, 43.6008, 0.6384", "389.316, 419.769, 43.4722, 0.4816", "390.286, 419.632, 43.3317, 0.5158", "390.565, 420.216, 43.4361, 0.4176", "391.159, 420.945, 43.4882, 0.612", "392.192, 420.865, 43.5134, 0.6124", "392.872, 420.649, 43.5915, 0.5906", "393.907, 420.651, 43.5187, 0.531", "394.967, 420.482, 43.4244, 0.6604", "395.846, 420.306, 43.2692, 0.683", "396.913, 420.516, 43.055, 0.5516", "397.805, 419.896, 42.9201, 0.8028", "398.6, 419.451, 42.6196, 0.839", "399.566, 419.251, 42.5065, 0.3902", "400.494, 418.818, 42.3234, 0.469", "401.427, 418.38, 42.208, 0.571", "402.109, 417.817, 41.9933, 0.5304", "402.69, 416.98, 41.727, 0.5568", "403.354, 416.302, 41.4728, 0.4738", "404.401, 416.319, 41.2868, 0.592", "404.955, 415.885, 41.1012, 0.5726", "405.924, 415.677, 40.868, 0.6864", "406.917, 415.41, 40.7515, 0.4986", "407.899, 415.615, 40.5412, 0.4376", "408.916, 415.604, 40.4286, 0.4746", "409.965, 415.501, 40.2506, 0.6864", "410.826, 415.195, 40.1456, 0.5132", "411.839, 414.701, 40.0114, 0.483", "412.867, 414.544, 39.8916, 0.8348", "413.849, 414.195, 39.8065, 0.6864", "414.556, 413.479, 39.5615, 0.5014", "415.43, 412.962, 39.3498, 0.4576", "416.439, 412.608, 39.125, 0.596", "417.147, 411.934, 39.0079, 0.3006", "418.182, 411.926, 38.8945, 0.472", "418.339, 412.748, 38.7206, 0.6864", "418.826, 412.526, 38.5851, 0.4576", "418.964, 412.526, 38.0797, 0.6466", "419.848, 412.744, 37.7003, 0.3836", "420.442, 413.097, 37.5004, 0.6134", "421.074, 413.215, 37.0664, 0.526", "422.158, 413.189, 36.7581, 0.5994", "423.253, 413.431, 36.5011, 0.6018", "424.342, 413.327, 36.4165, 0.81", "425.16, 413.888, 36.2541, 0.7118", "426.0, 414.471, 36.1948, 0.6526", "426.919, 414.915, 36.1418, 0.6356", "427.951, 414.564, 36.038, 0.5148", "428.902, 415.033, 35.9271, 0.6084", "429.835, 415.484, 35.8991, 0.4656", "430.701, 415.801, 35.7006, 1.0354", "431.753, 415.954, 35.3685, 0.744", "432.421, 415.684, 34.9098, 0.5646", "433.123, 415.408, 34.6755, 0.5358", "434.005, 414.987, 34.5573, 0.4776", "434.953, 414.509, 34.3132, 0.6778", "435.93, 414.459, 34.0206, 0.6054", "436.959, 414.112, 33.822, 0.4354", "437.987, 413.81, 33.731, 0.6222", "438.84, 413.988, 33.483, 0.7372", "439.811, 414.042, 33.3808, 0.6578", "440.822, 413.936, 33.1794, 0.3324", "441.859, 413.777, 32.9067, 0.6206", "442.734, 413.145, 32.7866, 0.5492", "443.419, 412.345, 32.7516, 0.4744", "444.031, 411.702, 32.5542, 0.519", "444.953, 411.329, 32.3128, 0.6318", "445.806, 410.655, 32.1871, 0.5592", "446.354, 409.733, 32.0516, 0.5614", "447.232, 409.36, 31.7741, 0.4602", "448.225, 408.961, 31.3992, 0.6102", "449.094, 408.717, 30.9736, 0.4814", "449.666, 408.179, 30.6586, 0.3076", "450.345, 408.307, 30.4052, 0.4566", "451.355, 408.505, 30.2044, 0.5388", "452.422, 408.18, 29.9832, 0.5084", "453.413, 408.005, 29.6876, 0.3648", "454.258, 407.858, 29.283, 0.3102", "454.854, 407.95, 28.56, 0.356" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "352.466, 434.949, 44.133, 0.4322", "351.92, 434.949, 44.24, 0.5338", "352.009, 434.476, 44.2576, 0.4398", "352.231, 433.396, 44.2848, 0.5064", "352.352, 432.349, 44.3895, 0.6342", "352.379, 431.253, 44.4424, 0.5968", "352.36, 430.194, 44.4662, 0.5942", "352.935, 429.221, 44.4867, 0.3826", "353.728, 428.509, 44.4828, 0.3438", "354.068, 427.475, 44.3946, 0.4322" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "331.785, 432.216, 63.1725, 0.4576", "331.432, 431.281, 63.6238, 0.3808", "331.035, 430.513, 64.0998, 0.6388", "331.074, 429.422, 64.4512, 0.305", "331.171, 428.376, 64.8508, 0.305", "331.188, 427.318, 65.105, 0.2542", "330.911, 426.259, 65.3506, 0.3826", "330.506, 425.24, 65.5564, 0.5592", "330.585, 424.123, 65.7625, 0.2334", "330.274, 423.21, 66.0968, 0.3016", "329.587, 422.404, 66.435, 0.2288", "328.843, 421.777, 66.7761, 0.237", "327.997, 421.087, 67.0942, 0.3136", "327.559, 420.128, 67.2742, 0.4294", "326.821, 419.323, 67.3658, 0.3554", "326.65, 418.413, 67.5777, 0.3304", "326.271, 417.517, 67.6211, 0.2628", "325.871, 416.517, 67.6659, 0.2288", "325.389, 415.768, 67.8804, 0.2288", "325.354, 414.629, 68.0691, 0.2288", "324.928, 413.705, 68.2531, 0.2288", "324.491, 412.711, 68.3337, 0.3046", "323.805, 411.806, 68.4275, 0.5468", "322.981, 411.268, 68.5754, 0.5614", "322.041, 411.007, 68.5742, 0.6016", "321.13, 410.674, 68.5152, 0.3944", "320.251, 410.464, 68.7134, 0.429", "319.868, 409.507, 68.9357, 0.2994", "319.092, 408.795, 69.1572, 0.395", "318.585, 407.805, 69.4604, 0.4318", "317.745, 407.264, 69.7841, 0.6266", "317.455, 406.612, 70.2988, 0.2984", "317.088, 405.777, 70.5477, 0.3274", "316.628, 405.601, 71.0027, 0.2288", "315.913, 405.088, 71.4938, 0.2288", "315.075, 404.475, 71.8267, 0.2288", "314.389, 403.675, 71.9186, 0.38", "313.876, 402.813, 71.8094, 0.3938", "313.551, 401.971, 71.5988, 0.48", "313.342, 401.353, 71.6097, 0.3178", "313.656, 400.851, 71.8231, 0.5636", "313.77, 399.793, 72.098, 0.6214", "313.877, 398.723, 72.3652, 0.4846", "313.866, 397.9, 72.746, 0.6594", "314.257, 396.968, 73.08, 0.5338" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "331.785, 432.216, 63.1725, 0.4576", "330.386, 431.955, 63.0, 0.3904", "330.273, 431.619, 64.2653, 0.3304", "329.916, 431.941, 64.617, 0.4068", "328.828, 432.089, 64.9034, 0.368", "327.933, 431.898, 65.3279, 0.2666", "327.398, 431.631, 65.961, 0.45", "326.741, 430.938, 66.6901, 0.299", "325.824, 430.308, 67.3168, 0.2288", "324.921, 429.652, 67.8395, 0.2288", "324.123, 428.873, 68.2147, 0.2846", "323.273, 428.316, 68.4897, 0.401", "322.718, 427.572, 68.8789, 0.4396", "321.755, 427.078, 69.2353, 0.4842", "320.797, 426.57, 69.6931, 0.2866", "320.425, 425.634, 70.142, 0.2288", "320.017, 424.656, 70.6745, 0.2726", "319.086, 424.195, 71.1852, 0.61", "318.146, 424.009, 71.7214, 0.6508", "317.737, 424.176, 72.5914, 0.5064", "317.346, 423.924, 73.6803, 0.2326", "316.57, 423.502, 74.6984, 0.2288", "316.43, 422.757, 75.6843, 0.2288", "316.057, 421.778, 76.4207, 0.2288", "315.512, 421.039, 76.6819, 0.409", "314.956, 420.171, 76.7304, 0.457", "315.067, 419.047, 76.7052, 0.2952", "315.228, 418.078, 76.8317, 0.2728", "315.058, 417.091, 76.82, 0.2346", "314.746, 416.012, 76.8261, 0.2924", "314.61, 414.931, 76.9658, 0.4658", "314.943, 414.395, 77.3469, 0.4122", "315.218, 413.306, 77.6972, 0.5724", "315.286, 412.239, 78.0352, 0.6564", "315.712, 411.325, 78.3479, 0.2592", "316.007, 410.257, 78.5789, 0.303", "316.516, 409.433, 78.7707, 0.4178", "316.316, 408.509, 78.6481, 0.6548", "316.888, 407.95, 77.84, 0.356" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "354.068, 427.475, 44.3946, 0.4322", "353.21, 426.839, 46.0762, 0.2626", "352.216, 426.584, 47.0235, 0.3448", "351.468, 425.957, 47.4508, 0.4116", "351.208, 425.228, 48.0696, 0.3436", "351.597, 424.212, 48.6892, 0.3584", "351.671, 423.28, 49.275, 0.2288", "350.889, 423.187, 49.9257, 0.4462", "350.416, 422.318, 50.3096, 0.483", "350.193, 421.215, 50.5756, 0.5598", "350.26, 420.316, 50.9306, 0.6864", "349.95, 419.354, 51.1182, 0.797", "350.063, 418.336, 51.3808, 0.913", "349.586, 417.862, 51.8216, 0.6998", "349.227, 416.826, 52.243, 0.6242", "349.158, 415.723, 52.5638, 0.4974", "349.263, 414.841, 52.7458, 0.6864", "349.15, 414.879, 53.258, 0.4586", "348.806, 414.918, 54.0103, 0.4216", "348.258, 414.149, 54.5745, 0.6706", "347.998, 413.273, 54.9298, 0.6102", "347.721, 413.207, 55.4865, 0.7596", "347.641, 412.247, 55.7995, 0.5316", "347.857, 411.151, 55.9829, 0.5084", "348.263, 410.246, 56.1022, 0.6864", "348.681, 409.217, 56.2526, 0.6368", "349.263, 408.293, 56.4598, 0.6356", "349.95, 407.653, 56.7977, 0.2342", "350.429, 407.207, 57.4417, 0.4344", "350.754, 406.139, 58.023, 0.2962", "350.979, 405.253, 58.5894, 0.645", "351.095, 404.2, 59.162, 0.387", "351.322, 403.308, 59.6008, 0.4302", "351.65, 402.573, 60.1919, 0.6176", "351.773, 401.599, 60.7382, 0.393", "351.437, 401.177, 61.4121, 0.8536", "351.6, 400.156, 61.9433, 0.5848", "351.894, 399.24, 62.34, 0.4068", "352.409, 398.798, 62.4308, 0.61", "353.075, 398.462, 62.6349, 0.4442", "353.955, 398.11, 62.8471, 0.3288", "354.296, 397.32, 63.1548, 0.4642", "353.839, 396.627, 63.5158, 0.3062", "353.679, 395.573, 63.7767, 0.397", "353.814, 394.627, 63.8067, 0.5848", "353.387, 393.727, 63.7966, 0.5194", "353.57, 393.414, 64.0304, 0.5282", "353.719, 392.603, 64.384, 0.5282", "353.954, 391.529, 64.7035, 0.4978", "353.729, 390.449, 64.9706, 0.356", "353.409, 389.488, 65.1434, 0.2338", "352.824, 388.584, 65.2716, 0.4526", "351.957, 387.921, 65.3727, 0.5726", "351.273, 387.124, 65.3254, 0.8898", "350.76, 386.447, 65.3579, 0.464", "350.283, 385.562, 65.3834, 0.5084", "349.818, 384.704, 65.3864, 0.4484", "348.948, 384.1, 65.366, 0.449", "348.173, 383.37, 65.3526, 0.3254", "347.325, 382.79, 65.4209, 0.5094", "346.459, 382.286, 65.4934, 0.5972", "345.573, 381.683, 65.6096, 0.4482", "344.842, 380.882, 65.7826, 0.6446", "344.344, 380.418, 66.1382, 0.5592", "343.556, 380.266, 66.1976, 0.4576", "343.097, 379.656, 66.2606, 0.4038", "342.915, 378.578, 66.1716, 0.3756", "342.304, 377.806, 65.931, 0.3906", "341.531, 377.022, 65.6712, 0.5592", "340.704, 376.319, 65.3576, 0.5848", "339.869, 375.723, 65.1658, 0.3734", "339.293, 374.797, 65.0026, 0.3712", "338.601, 374.185, 64.7424, 0.4576", "337.696, 373.745, 64.4588, 0.4174", "336.665, 373.724, 64.1029, 0.6208", "336.042, 373.034, 63.8674, 0.4608", "335.349, 372.191, 63.7454, 0.5144", "334.734, 371.457, 63.56, 0.5848" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "354.068, 427.475, 44.3946, 0.4322", "354.109, 426.567, 44.3853, 0.4804", "354.545, 425.569, 44.3783, 0.3876", "354.983, 424.538, 44.3654, 0.4068" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "354.983, 424.538, 44.3654, 0.4068", "355.323, 423.642, 45.0649, 0.3132", "355.014, 422.589, 45.3902, 0.3914", "355.047, 421.534, 45.4241, 0.5666", "355.258, 420.524, 45.5115, 0.6086", "355.549, 419.524, 45.7097, 0.7594", "355.651, 418.453, 46.0037, 0.7922", "355.847, 417.345, 46.2311, 0.5374", "356.445, 416.653, 46.2008, 0.658", "356.48, 415.73, 46.2672, 0.4638", "356.699, 414.976, 46.4887, 0.742", "357.271, 414.422, 46.7886, 0.4678", "357.588, 413.564, 47.1498, 0.6056", "358.218, 412.647, 47.4863, 0.7118", "358.577, 411.741, 47.5952, 0.6182", "359.057, 410.902, 47.5266, 0.661", "359.54, 409.978, 47.4037, 0.3814", "360.12, 409.131, 47.4121, 0.6562", "360.298, 408.117, 47.4306, 0.59", "360.12, 406.993, 47.5126, 0.6356", "359.448, 406.435, 47.7495, 0.8044", "359.004, 405.625, 48.0208, 0.4868", "358.264, 404.824, 48.1043, 0.4138", "357.843, 404.109, 48.1566, 0.5142", "357.511, 403.156, 48.1922, 0.3416", "356.992, 402.615, 48.2734, 0.6102", "356.333, 401.916, 48.1177, 0.5216", "355.708, 401.03, 48.006, 0.5356", "355.317, 400.534, 47.9441, 0.5828", "354.466, 399.836, 47.8394, 0.3814", "353.684, 399.256, 47.6669, 0.5084", "352.893, 398.716, 47.6134, 0.5836", "352.011, 398.161, 47.5322, 0.518", "351.335, 397.769, 47.4037, 0.6104", "350.71, 397.093, 47.2811, 0.3516", "349.896, 396.772, 47.2637, 0.6102", "348.956, 396.382, 47.3231, 0.4576", "348.462, 395.824, 47.32, 0.4576" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "354.983, 424.538, 44.3654, 0.4068", "355.552, 424.572, 44.3176, 0.2736", "356.493, 424.127, 44.249, 0.4158", "357.574, 424.018, 44.2285, 0.5254", "358.558, 423.67, 44.1557, 0.3346", "359.325, 422.993, 43.9995, 0.5476", "359.617, 422.223, 43.825, 0.5", "359.674, 421.744, 43.9849, 0.2796", "359.956, 421.121, 43.843, 0.4424", "360.441, 420.381, 43.6159, 0.7132", "361.411, 419.889, 43.4196, 0.6864", "361.736, 419.934, 42.903, 0.7766", "362.52, 419.255, 42.5118, 0.2612", "363.22, 418.666, 42.2346, 0.4576", "363.531, 418.927, 42.2934, 0.6362", "364.27, 418.19, 42.341, 0.5198", "365.055, 417.68, 42.4418, 0.4624", "365.934, 417.396, 42.5485, 0.3342", "366.515, 417.217, 42.418, 0.6418", "367.446, 416.76, 42.2794, 0.6864", "368.283, 416.724, 42.3853, 0.5692", "369.3, 416.306, 42.5835, 0.5996", "370.186, 415.622, 42.74, 0.2854", "370.548, 414.618, 42.9282, 0.2918", "371.547, 414.137, 43.0987, 0.5904", "372.566, 414.407, 43.2905, 0.6308", "373.619, 414.716, 43.4199, 0.5338", "374.612, 414.676, 43.4403, 0.67", "375.572, 414.242, 43.4344, 0.8002", "376.556, 413.975, 43.3793, 0.6358", "377.372, 413.569, 43.4487, 0.7154", "378.341, 413.108, 43.4958, 0.5412", "379.236, 413.105, 43.3308, 0.579", "380.26, 413.26, 43.2488, 0.503", "381.149, 413.22, 43.2877, 0.2288", "381.858, 412.72, 43.2124, 0.5952", "382.703, 412.258, 43.1544, 0.5802", "383.433, 411.437, 43.0382, 0.6", "384.304, 410.941, 42.9318, 0.661", "385.228, 410.401, 42.8439, 0.4322", "386.209, 410.416, 42.959, 0.3078", "386.901, 409.832, 42.9526, 0.409", "387.683, 409.323, 42.9708, 0.484", "388.161, 408.605, 43.1542, 0.667", "389.007, 408.408, 43.5011, 0.5578", "389.809, 408.243, 43.8029, 0.512", "390.661, 407.901, 43.8474, 0.335", "390.562, 407.553, 43.9625, 0.4026", "391.026, 407.066, 44.1535, 0.2856", "391.893, 406.563, 44.2963, 0.4458", "392.544, 406.041, 44.3845, 0.475", "393.45, 405.391, 44.4455, 0.231", "394.322, 404.716, 44.4926, 0.4338", "395.023, 404.312, 44.7944, 0.4176", "395.366, 404.45, 45.3818, 0.4576", "396.105, 403.624, 45.8604, 0.4284", "396.737, 402.92, 46.2417, 0.538", "397.311, 402.306, 46.6934, 0.674", "398.106, 401.97, 47.1394, 0.3904", "399.138, 402.011, 47.5076, 0.2946", "399.942, 401.902, 47.6118, 0.2834", "400.289, 401.002, 47.7733, 0.507", "400.796, 400.175, 48.062, 0.3814", "401.37, 399.42, 48.2096, 0.4216", "402.325, 399.561, 48.435, 0.4188", "403.271, 399.119, 48.6315, 0.4014", "404.189, 398.879, 48.9012, 0.356", "405.136, 398.439, 49.1666, 0.4322", "405.961, 397.968, 49.5466, 0.3304", "406.776, 397.655, 49.8428, 0.4576", "407.507, 396.981, 50.1528, 0.4576", "408.309, 396.394, 50.4339, 0.4576", "409.105, 395.587, 50.6422, 0.373", "409.453, 394.937, 50.8388, 0.3304", "410.284, 394.566, 51.0328, 0.3354", "411.328, 394.159, 51.1294, 0.2978", "412.184, 393.536, 51.2252, 0.6108", "413.208, 393.156, 51.2145, 0.8204", "413.644, 392.274, 51.0896, 0.5296", "414.419, 391.809, 51.1006, 0.757", "415.091, 391.118, 51.2366, 0.305", "416.099, 390.7, 51.3514, 0.637", "416.49, 390.209, 51.6538, 0.745", "417.393, 389.67, 51.8798, 0.6262", "418.216, 388.981, 52.0828, 0.4968", "418.906, 388.103, 52.2376, 0.6708", "419.48, 387.27, 52.3239, 0.8642", "419.585, 386.721, 52.2628, 0.7722", "419.537, 385.886, 52.365, 0.6426", "420.247, 385.06, 52.4012, 0.7574", "421.102, 384.498, 52.4692, 0.6342", "421.99, 384.187, 52.6607, 0.6754", "422.708, 383.388, 52.8472, 0.6124", "423.509, 382.816, 52.9928, 0.6052", "423.802, 382.046, 53.1745, 0.8136", "424.752, 380.694, 53.4282, 0.6124", "425.353, 380.125, 53.6379, 0.5848", "425.774, 379.139, 53.7796, 0.3738", "426.678, 378.761, 53.8759, 0.4624", "427.563, 378.249, 53.8446, 0.4946", "428.537, 378.331, 53.8521, 0.6664", "429.516, 378.087, 53.9305, 0.6478", "430.221, 377.427, 54.0943, 0.6738", "430.679, 376.574, 54.1484, 0.466", "431.617, 376.575, 54.0092, 0.5768", "431.841, 375.647, 53.7488, 0.5592", "431.847, 374.517, 53.4288, 0.5142", "432.089, 373.974, 52.08, 0.6102" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_90",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_91",
    "groups" : [ ],
    "sections" : [ "dend_39", "dend_24", "apic_0", "dend_0", "dend_32", "dend_25", "apic_11", "apic_1", "dend_16", "dend_1", "dend_38", "dend_33", "dend_29", "dend_26", "apic_15", "apic_12", "apic_4", "apic_2", "dend_20", "dend_17", "dend_13", "dend_2", "dend_35", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "apic_17", "apic_16", "apic_14", "apic_13", "apic_6", "apic_5", "apic_3", "dend_21", "dend_19", "dend_18", "dend_15", "dend_14", "dend_10", "dend_3", "dend_37", "dend_36", "apic_10", "apic_7", "dend_23", "dend_22", "dend_12", "dend_11", "dend_9", "dend_4", "apic_9", "apic_8", "dend_8", "dend_5", "dend_7", "dend_6" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_39", "dend_24", "dend_0", "dend_32", "dend_25", "dend_16", "dend_1", "dend_38", "dend_33", "dend_29", "dend_26", "dend_20", "dend_17", "dend_13", "dend_2", "dend_35", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_21", "dend_19", "dend_18", "dend_15", "dend_14", "dend_10", "dend_3", "dend_37", "dend_36", "dend_23", "dend_22", "dend_12", "dend_11", "dend_9", "dend_4", "dend_8", "dend_5", "dend_7", "dend_6" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_11", "apic_1", "apic_15", "apic_12", "apic_4", "apic_2", "apic_17", "apic_16", "apic_14", "apic_13", "apic_6", "apic_5", "apic_3", "apic_10", "apic_7", "apic_9", "apic_8" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3201",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_6", "apic_6", "apic_6", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "2.3783424"
  }, {
    "group" : "apic",
    "value" : "2.3783424"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "121.99635"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "6.138904E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "1.0897195E-6",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.7884158",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "1.00019495E-8",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.036283378",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.33635685E-5",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.039573517",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.14813024",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.8081312E-4",
    "erev" : "-93.30554"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "5.801147E-4",
    "erev" : "-93.30554"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "3.4322957E-6",
    "erev" : "-93.30554"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "1.2260361E-4",
    "erev" : "-93.30554"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "6.5744965E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.007012347",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_472442377",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_472442377

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: apic_11, id: apic_11, parent: apic_0
create apic_11
public apic_11
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: apic_15, id: apic_15, parent: apic_11
create apic_15
public apic_15
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_4, id: apic_4, parent: apic_1
create apic_4
public apic_4
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: apic_17, id: apic_17, parent: apic_15
create apic_17
public apic_17
// Section: apic_16, id: apic_16, parent: apic_15
create apic_16
public apic_16
// Section: apic_14, id: apic_14, parent: apic_12
create apic_14
public apic_14
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_21, id: dend_21, parent: apic_2
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: apic_10, id: apic_10, parent: apic_6
create apic_10
public apic_10
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_90, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_90
// Group: {name=ModelViewParmSubset_91, groups=[], sections=[dend_39, dend_24, apic_0, dend_0, dend_32, dend_25, apic_11, apic_1, dend_16, dend_1, dend_38, dend_33, dend_29, dend_26, apic_15, apic_12, apic_4, apic_2, dend_20, dend_17, dend_13, dend_2, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, apic_17, apic_16, apic_14, apic_13, apic_6, apic_5, apic_3, dend_21, dend_19, dend_18, dend_15, dend_14, dend_10, dend_3, dend_37, dend_36, apic_10, apic_7, dend_23, dend_22, dend_12, dend_11, dend_9, dend_4, apic_9, apic_8, dend_8, dend_5, dend_7, dend_6]}
objref ModelViewParmSubset_91
// Group: {name=dend, groups=[], sections=[dend_39, dend_24, dend_0, dend_32, dend_25, dend_16, dend_1, dend_38, dend_33, dend_29, dend_26, dend_20, dend_17, dend_13, dend_2, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_21, dend_19, dend_18, dend_15, dend_14, dend_10, dend_3, dend_37, dend_36, dend_23, dend_22, dend_12, dend_11, dend_9, dend_4, dend_8, dend_5, dend_7, dend_6]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_11, apic_1, apic_15, apic_12, apic_4, apic_2, apic_17, apic_16, apic_14, apic_13, apic_6, apic_5, apic_3, apic_10, apic_7, apic_9, apic_8]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_3201, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_3201
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_24, dend_24, dend_24, dend_24, dend_24, apic_0, apic_0, apic_0, apic_0, apic_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_12, apic_12, apic_12, apic_12, apic_12, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_472442377
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.49999999999999756)
    connect dend_39(0), soma_0(0.49999999999999756)
    connect dend_24(0), soma_0(0.49999999999999756)
    connect apic_0(0), soma_0(0.49999999999999756)
    connect dend_0(0), soma_0(0.49999999999999756)
    connect axon_1(0), axon_0(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect apic_11(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect apic_15(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_4(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect apic_17(0), apic_15(1.0)
    connect apic_16(0), apic_15(1.0)
    connect apic_14(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_21(0), apic_2(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect apic_10(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 330.819, 458.744, 44.24, 11.7196 ) }
    soma_0 { pt3dadd( 336.679, 458.744, 44.24, 11.7196 ) }
    soma_0 { pt3dadd( 342.539, 458.744, 44.24, 11.7196 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 336.679, 458.744, 44.24, 1.0 ) }
    axon_0 { pt3dadd( 342.52, 472.56, 44.24, 1.0 ) }
    axon_0 { pt3dadd( 348.362, 486.376, 44.24, 1.0 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 6/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 332.055, 460.469, 42.7846, 0.5742 ) }
    dend_39 { pt3dadd( 331.481, 460.127, 41.741, 0.643 ) }
    dend_39 { pt3dadd( 330.713, 460.024, 41.3311, 0.5848 ) }
    dend_39 { pt3dadd( 330.662, 459.285, 41.0612, 0.6342 ) }
    dend_39 { pt3dadd( 331.54, 458.564, 40.8268, 0.5568 ) }
    dend_39 { pt3dadd( 332.446, 458.515, 40.32, 0.5084 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 12/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 332.413, 455.809, 48.6052, 0.5332 ) }
    dend_24 { pt3dadd( 331.315, 455.512, 48.5041, 0.7076 ) }
    dend_24 { pt3dadd( 330.263, 455.065, 48.4714, 0.8614 ) }
    dend_24 { pt3dadd( 329.2, 454.669, 48.3826, 0.94 ) }
    dend_24 { pt3dadd( 328.175, 454.232, 48.2157, 0.9152 ) }
    dend_24 { pt3dadd( 327.07, 453.937, 48.0805, 0.839 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 18/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 340.409, 455.231, 46.921, 0.5822 ) }
    apic_0 { pt3dadd( 341.318, 454.61, 47.9119, 0.6572 ) }
    apic_0 { pt3dadd( 341.95, 453.723, 48.804, 0.7588 ) }
    apic_0 { pt3dadd( 342.682, 452.866, 49.52, 0.7626 ) }
    apic_0 { pt3dadd( 343.439, 452.064, 49.8859, 0.6616 ) }
    apic_0 { pt3dadd( 344.247, 451.259, 50.0335, 0.5084 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 24/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 340.5, 454.742, 44.2268, 0.4328 ) }
    dend_0 { pt3dadd( 340.895, 453.682, 43.9664, 0.5008 ) }
    dend_0 { pt3dadd( 341.501, 452.743, 43.8281, 0.6752 ) }
    dend_0 { pt3dadd( 342.121, 451.811, 43.6391, 0.7604 ) }
    dend_0 { pt3dadd( 342.229, 450.681, 43.4759, 0.7876 ) }
    dend_0 { pt3dadd( 342.541, 449.592, 43.4361, 0.6864 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 30/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 348.362, 486.376, 44.24, 1.0 ) }
    axon_1 { pt3dadd( 354.203, 500.192, 44.24, 1.0 ) }
    axon_1 { pt3dadd( 360.044, 514.008, 44.24, 1.0 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 33/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 327.07, 453.937, 48.0805, 0.839 ) }
    dend_32 { pt3dadd( 325.756, 454.166, 47.5972, 0.6742 ) }
    dend_32 { pt3dadd( 324.657, 454.482, 47.4592, 0.661 ) }
    dend_32 { pt3dadd( 323.521, 454.582, 47.4096, 0.6378 ) }
    dend_32 { pt3dadd( 322.427, 454.393, 47.28, 0.6356 ) }
    dend_32 { pt3dadd( 321.431, 453.854, 47.1528, 0.6594 ) }
    dend_32 { pt3dadd( 320.339, 453.54, 47.1229, 0.6852 ) }
    dend_32 { pt3dadd( 319.444, 452.865, 47.2144, 0.6368 ) }
    dend_32 { pt3dadd( 318.792, 451.984, 47.2167, 0.5338 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 42/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 327.07, 453.937, 48.0805, 0.839 ) }
    dend_25 { pt3dadd( 326.476, 453.391, 48.1334, 0.7416 ) }
    dend_25 { pt3dadd( 325.65, 452.608, 48.1695, 0.7124 ) }
    dend_25 { pt3dadd( 324.76, 451.89, 48.172, 0.637 ) }
    dend_25 { pt3dadd( 323.919, 451.168, 48.0676, 0.5088 ) }
    dend_25 { pt3dadd( 323.251, 450.265, 47.9058, 0.483 ) }
    // Section: apic_11, id: apic_11, parent: apic_0 (entry count 48/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 344.247, 451.259, 50.0335, 0.5084 ) }
    apic_11 { pt3dadd( 344.759, 451.735, 49.84, 0.6352 ) }
    apic_11 { pt3dadd( 345.621, 452.482, 49.6275, 0.661 ) }
    apic_11 { pt3dadd( 346.561, 453.076, 49.4794, 0.594 ) }
    apic_11 { pt3dadd( 347.594, 453.555, 49.3629, 0.5618 ) }
    apic_11 { pt3dadd( 348.667, 453.39, 49.3732, 0.5592 ) }
    apic_11 { pt3dadd( 349.8, 453.255, 49.3926, 0.6298 ) }
    apic_11 { pt3dadd( 350.94, 453.204, 49.3797, 0.6122 ) }
    apic_11 { pt3dadd( 351.962, 452.831, 49.2528, 0.586 ) }
    apic_11 { pt3dadd( 352.994, 452.343, 49.1473, 0.5114 ) }
    apic_11 { pt3dadd( 354.069, 451.956, 49.0672, 0.4592 ) }
    apic_11 { pt3dadd( 355.21, 451.999, 49.0246, 0.4082 ) }
    apic_11 { pt3dadd( 356.172, 452.543, 49.1131, 0.356 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 61/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 344.247, 451.259, 50.0335, 0.5084 ) }
    apic_1 { pt3dadd( 344.435, 450.655, 50.0287, 0.375 ) }
    apic_1 { pt3dadd( 344.536, 449.517, 50.0032, 0.356 ) }
    apic_1 { pt3dadd( 344.86, 448.422, 49.982, 0.4032 ) }
    apic_1 { pt3dadd( 345.211, 447.333, 49.9901, 0.4304 ) }
    apic_1 { pt3dadd( 345.447, 446.214, 50.0422, 0.4558 ) }
    apic_1 { pt3dadd( 345.767, 445.117, 50.1231, 0.5052 ) }
    apic_1 { pt3dadd( 345.924, 443.984, 50.2317, 0.6038 ) }
    apic_1 { pt3dadd( 346.31, 442.91, 50.3793, 0.7302 ) }
    apic_1 { pt3dadd( 346.806, 441.907, 50.626, 0.7856 ) }
    apic_1 { pt3dadd( 347.348, 440.927, 50.9435, 0.788 ) }
    apic_1 { pt3dadd( 348.018, 440.053, 51.3296, 0.788 ) }
    apic_1 { pt3dadd( 348.215, 438.933, 51.6757, 0.8134 ) }
    apic_1 { pt3dadd( 348.625, 437.866, 51.9478, 0.7626 ) }
    apic_1 { pt3dadd( 349.23, 436.895, 52.1556, 0.661 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 76/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 342.541, 449.592, 43.4361, 0.6864 ) }
    dend_16 { pt3dadd( 342.905, 448.798, 41.4319, 0.6464 ) }
    dend_16 { pt3dadd( 343.687, 448.639, 40.1358, 0.5676 ) }
    dend_16 { pt3dadd( 344.074, 449.471, 39.5718, 0.4612 ) }
    dend_16 { pt3dadd( 344.522, 450.449, 38.9928, 0.4322 ) }
    dend_16 { pt3dadd( 345.483, 450.451, 38.4835, 0.493 ) }
    dend_16 { pt3dadd( 346.368, 449.76, 38.1156, 0.5706 ) }
    dend_16 { pt3dadd( 346.742, 448.71, 37.9022, 0.5638 ) }
    dend_16 { pt3dadd( 347.059, 447.639, 37.8974, 0.5374 ) }
    dend_16 { pt3dadd( 347.371, 446.548, 37.9221, 0.5338 ) }
    dend_16 { pt3dadd( 348.0, 445.612, 37.9142, 0.6024 ) }
    dend_16 { pt3dadd( 348.778, 444.783, 37.9397, 0.6102 ) }
    dend_16 { pt3dadd( 349.513, 444.056, 38.1114, 0.5868 ) }
    dend_16 { pt3dadd( 350.511, 443.533, 38.1945, 0.512 ) }
    dend_16 { pt3dadd( 351.597, 443.244, 38.1458, 0.5332 ) }
    dend_16 { pt3dadd( 352.654, 443.481, 37.9576, 0.5338 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 92/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 342.541, 449.592, 43.4361, 0.6864 ) }
    dend_1 { pt3dadd( 343.022, 448.66, 43.4714, 0.6102 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 318.792, 451.984, 47.2167, 0.5338 ) }
    dend_38 { pt3dadd( 318.654, 451.299, 46.0208, 0.6 ) }
    dend_38 { pt3dadd( 318.611, 450.224, 45.1164, 0.4 ) }
    dend_38 { pt3dadd( 318.261, 449.706, 44.6242, 0.3852 ) }
    dend_38 { pt3dadd( 318.128, 449.108, 43.9373, 0.4988 ) }
    dend_38 { pt3dadd( 318.032, 448.033, 43.3468, 0.4016 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_38 { pt3dadd( 318.269, 447.072, 42.8366, 0.2832 ) }
    dend_38 { pt3dadd( 318.389, 446.185, 42.4189, 0.4586 ) }
    dend_38 { pt3dadd( 317.918, 445.775, 42.3517, 0.2288 ) }
    dend_38 { pt3dadd( 318.0, 444.756, 42.4432, 0.2288 ) }
    dend_38 { pt3dadd( 317.918, 443.674, 42.3973, 0.2568 ) }
    dend_38 { pt3dadd( 318.146, 443.193, 41.988, 0.4576 ) }
    dend_38 { pt3dadd( 318.229, 442.073, 41.5811, 0.3702 ) }
    dend_38 { pt3dadd( 318.261, 440.956, 41.1765, 0.3006 ) }
    dend_38 { pt3dadd( 318.146, 440.111, 41.0396, 0.5338 ) }
    dend_38 { pt3dadd( 317.78, 439.525, 40.7772, 0.2896 ) }
    dend_38 { pt3dadd( 317.306, 438.687, 40.6353, 0.3958 ) }
    dend_38 { pt3dadd( 316.936, 437.633, 40.4986, 0.659 ) }
    dend_38 { pt3dadd( 316.341, 436.691, 40.3483, 0.6238 ) }
    dend_38 { pt3dadd( 315.708, 435.858, 40.262, 0.4038 ) }
    dend_38 { pt3dadd( 315.314, 435.017, 40.1758, 0.3534 ) }
    dend_38 { pt3dadd( 315.143, 434.074, 40.0988, 0.575 ) }
    dend_38 { pt3dadd( 314.98, 433.149, 39.9994, 0.6616 ) }
    dend_38 { pt3dadd( 315.196, 432.057, 39.9498, 0.7074 ) }
    dend_38 { pt3dadd( 315.401, 431.072, 39.8138, 0.5168 ) }
    dend_38 { pt3dadd( 314.801, 430.319, 39.7404, 0.5024 ) }
    dend_38 { pt3dadd( 314.213, 429.506, 39.5108, 0.4188 ) }
    dend_38 { pt3dadd( 313.673, 428.541, 39.2613, 0.5984 ) }
    dend_38 { pt3dadd( 313.215, 427.534, 39.0488, 0.5936 ) }
    dend_38 { pt3dadd( 313.01, 426.688, 38.8184, 0.6542 ) }
    dend_38 { pt3dadd( 312.704, 425.847, 38.4115, 0.6198 ) }
    dend_38 { pt3dadd( 312.544, 424.774, 38.0251, 0.5928 ) }
    dend_38 { pt3dadd( 311.901, 423.911, 37.6692, 0.7112 ) }
    dend_38 { pt3dadd( 311.834, 423.394, 37.028, 0.6254 ) }
    dend_38 { pt3dadd( 311.387, 422.597, 36.3703, 0.9356 ) }
    dend_38 { pt3dadd( 311.282, 421.514, 35.9092, 0.6198 ) }
    dend_38 { pt3dadd( 311.282, 420.376, 35.5642, 0.6298 ) }
    dend_38 { pt3dadd( 311.296, 419.285, 35.4228, 0.5328 ) }
    dend_38 { pt3dadd( 311.503, 418.585, 35.2257, 0.2596 ) }
    dend_38 { pt3dadd( 310.731, 418.031, 35.1291, 0.5288 ) }
    dend_38 { pt3dadd( 310.514, 417.538, 34.7651, 0.5004 ) }
    dend_38 { pt3dadd( 309.746, 416.8, 34.4218, 0.5516 ) }
    dend_38 { pt3dadd( 309.277, 416.867, 34.3692, 0.3934 ) }
    dend_38 { pt3dadd( 308.625, 416.498, 34.4123, 0.3452 ) }
    dend_38 { pt3dadd( 307.942, 415.899, 34.3829, 0.2796 ) }
    dend_38 { pt3dadd( 307.913, 415.162, 34.1494, 0.6696 ) }
    dend_38 { pt3dadd( 307.506, 414.566, 34.0127, 0.5312 ) }
    dend_38 { pt3dadd( 307.008, 413.817, 33.983, 0.5904 ) }
    dend_38 { pt3dadd( 306.134, 413.432, 33.784, 0.5196 ) }
    dend_38 { pt3dadd( 305.539, 412.892, 33.4603, 0.5034 ) }
    dend_38 { pt3dadd( 304.874, 412.235, 33.2735, 0.6378 ) }
    dend_38 { pt3dadd( 304.152, 411.433, 33.1187, 0.6864 ) }
    dend_38 { pt3dadd( 304.025, 410.81, 32.8406, 0.305 ) }
    dend_38 { pt3dadd( 303.169, 410.778, 32.4587, 0.58 ) }
    dend_38 { pt3dadd( 302.366, 410.925, 32.018, 0.42 ) }
    dend_38 { pt3dadd( 301.668, 411.03, 31.4356, 0.4068 ) }
    dend_38 { pt3dadd( 300.666, 411.189, 30.8686, 0.356 ) }
    dend_38 { pt3dadd( 299.778, 410.71, 30.6043, 0.5282 ) }
    dend_38 { pt3dadd( 298.763, 410.353, 30.52, 0.3956 ) }
    dend_38 { pt3dadd( 298.125, 409.72, 30.5323, 0.5084 ) }
    dend_38 { pt3dadd( 297.372, 409.121, 30.4906, 0.5182 ) }
    dend_38 { pt3dadd( 296.741, 408.382, 30.3573, 0.6864 ) }
    dend_38 { pt3dadd( 296.54, 407.35, 30.0625, 0.6902 ) }
    dend_38 { pt3dadd( 296.298, 406.329, 29.6405, 0.3814 ) }
    dend_38 { pt3dadd( 296.43, 405.238, 29.3432, 0.4708 ) }
    dend_38 { pt3dadd( 297.199, 404.77, 29.1592, 0.5494 ) }
    dend_38 { pt3dadd( 297.696, 404.173, 28.9047, 0.416 ) }
    dend_38 { pt3dadd( 297.558, 403.429, 28.5152, 0.6166 ) }
    dend_38 { pt3dadd( 297.831, 402.716, 28.303, 0.4388 ) }
    dend_38 { pt3dadd( 298.409, 401.868, 28.1238, 0.5084 ) }
    dend_38 { pt3dadd( 298.891, 401.013, 27.916, 0.5804 ) }
    dend_38 { pt3dadd( 298.599, 400.076, 27.6615, 0.7054 ) }
    dend_38 { pt3dadd( 298.32, 399.032, 27.5447, 0.6228 ) }
    dend_38 { pt3dadd( 298.118, 397.915, 27.5069, 0.5848 ) }
    dend_38 { pt3dadd( 297.91, 396.84, 27.3815, 0.4744 ) }
    dend_38 { pt3dadd( 297.716, 395.954, 27.2849, 0.5228 ) }
    dend_38 { pt3dadd( 297.108, 395.13, 27.1113, 0.5084 ) }
    dend_38 { pt3dadd( 296.754, 394.154, 26.9618, 0.5862 ) }
    dend_38 { pt3dadd( 296.299, 393.271, 26.7543, 0.6492 ) }
    dend_38 { pt3dadd( 296.41, 392.187, 26.5796, 0.2648 ) }
    dend_38 { pt3dadd( 296.365, 391.314, 26.7022, 0.4254 ) }
    dend_38 { pt3dadd( 295.971, 390.395, 26.6907, 0.5756 ) }
    dend_38 { pt3dadd( 295.301, 389.515, 26.6784, 0.4226 ) }
    dend_38 { pt3dadd( 295.258, 388.524, 26.8349, 0.7538 ) }
    dend_38 { pt3dadd( 294.533, 387.778, 26.9198, 0.4348 ) }
    dend_38 { pt3dadd( 294.535, 386.755, 26.9212, 0.4546 ) }
    dend_38 { pt3dadd( 294.164, 385.765, 26.9648, 0.5288 ) }
    dend_38 { pt3dadd( 293.485, 384.901, 26.9511, 0.4396 ) }
    dend_38 { pt3dadd( 293.016, 384.022, 26.8162, 0.6102 ) }
    dend_38 { pt3dadd( 292.5, 383.084, 26.7632, 0.5338 ) }
    dend_38 { pt3dadd( 292.063, 382.429, 26.5454, 0.4034 ) }
    dend_38 { pt3dadd( 292.405, 381.753, 26.5171, 0.5186 ) }
    dend_38 { pt3dadd( 292.79, 381.0, 26.4723, 0.5592 ) }
    dend_38 { pt3dadd( 292.596, 380.198, 26.4093, 0.4576 ) }
    dend_38 { pt3dadd( 291.704, 379.548, 26.3771, 0.5164 ) }
    dend_38 { pt3dadd( 291.262, 378.586, 26.3096, 0.4576 ) }
    dend_38 { pt3dadd( 291.148, 377.851, 26.4412, 0.5338 ) }
    dend_38 { pt3dadd( 290.855, 377.583, 26.3614, 0.4062 ) }
    dend_38 { pt3dadd( 290.909, 376.673, 26.0641, 0.488 ) }
    dend_38 { pt3dadd( 290.694, 375.745, 25.7382, 0.5528 ) }
    dend_38 { pt3dadd( 290.805, 374.694, 25.4481, 0.5736 ) }
    dend_38 { pt3dadd( 290.601, 373.883, 25.3834, 0.4916 ) }
    dend_38 { pt3dadd( 290.7, 373.368, 25.0771, 0.4576 ) }
    dend_38 { pt3dadd( 290.69, 372.336, 24.7817, 0.3814 ) }
    dend_38 { pt3dadd( 289.924, 371.864, 24.7142, 0.3304 ) }
    dend_38 { pt3dadd( 289.926, 370.959, 24.5064, 0.558 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_38 { pt3dadd( 289.939, 369.951, 24.297, 0.5154 ) }
    dend_38 { pt3dadd( 289.958, 368.85, 24.1931, 0.5084 ) }
    dend_38 { pt3dadd( 290.352, 367.791, 24.1111, 0.346 ) }
    dend_38 { pt3dadd( 291.094, 367.155, 24.1508, 0.3764 ) }
    dend_38 { pt3dadd( 291.449, 367.094, 24.052, 0.4546 ) }
    dend_38 { pt3dadd( 291.263, 366.347, 23.7737, 0.2288 ) }
    dend_38 { pt3dadd( 291.6, 365.358, 23.6384, 0.4206 ) }
    dend_38 { pt3dadd( 291.568, 364.707, 23.6712, 0.3814 ) }
    dend_38 { pt3dadd( 291.856, 364.04, 23.553, 0.3814 ) }
    dend_38 { pt3dadd( 291.585, 363.052, 23.4254, 0.305 ) }
    dend_38 { pt3dadd( 291.72, 362.18, 23.4458, 0.311 ) }
    dend_38 { pt3dadd( 291.418, 361.147, 23.4842, 0.3566 ) }
    dend_38 { pt3dadd( 291.125, 360.368, 23.6376, 0.628 ) }
    dend_38 { pt3dadd( 290.927, 359.877, 23.6354, 0.6864 ) }
    dend_38 { pt3dadd( 290.919, 359.445, 24.36, 0.3814 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 15/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 318.792, 451.984, 47.2167, 0.5338 ) }
    dend_33 { pt3dadd( 317.589, 451.086, 47.3945, 0.5182 ) }
    dend_33 { pt3dadd( 316.531, 450.914, 47.6927, 0.596 ) }
    dend_33 { pt3dadd( 315.448, 450.627, 47.9584, 0.6756 ) }
    dend_33 { pt3dadd( 314.41, 450.148, 48.1726, 0.7262 ) }
    dend_33 { pt3dadd( 313.388, 449.702, 48.2832, 0.767 ) }
    dend_33 { pt3dadd( 312.359, 449.266, 48.3714, 0.8038 ) }
    dend_33 { pt3dadd( 311.477, 448.607, 48.5215, 0.8618 ) }
    dend_33 { pt3dadd( 310.73, 447.758, 48.6931, 0.9386 ) }
    dend_33 { pt3dadd( 310.253, 446.973, 48.83, 0.8894 ) }
    dend_33 { pt3dadd( 309.585, 446.42, 49.1193, 0.673 ) }
    dend_33 { pt3dadd( 308.65, 446.312, 49.278, 0.6358 ) }
    dend_33 { pt3dadd( 307.681, 446.497, 49.5813, 0.6376 ) }
    dend_33 { pt3dadd( 306.83, 445.846, 49.8641, 0.6864 ) }
    dend_33 { pt3dadd( 306.427, 445.436, 50.2718, 0.6102 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 30/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 323.251, 450.265, 47.9058, 0.483 ) }
    dend_29 { pt3dadd( 322.545, 449.266, 47.7638, 0.4122 ) }
    dend_29 { pt3dadd( 322.327, 448.47, 47.703, 0.3746 ) }
    dend_29 { pt3dadd( 322.699, 447.603, 47.7344, 0.6 ) }
    dend_29 { pt3dadd( 322.942, 446.606, 47.7232, 0.4948 ) }
    dend_29 { pt3dadd( 322.693, 445.521, 47.7394, 0.5796 ) }
    dend_29 { pt3dadd( 322.299, 444.494, 47.6627, 0.5292 ) }
    dend_29 { pt3dadd( 322.265, 443.394, 47.6395, 0.483 ) }
    dend_29 { pt3dadd( 322.276, 442.263, 47.5955, 0.396 ) }
    dend_29 { pt3dadd( 322.15, 441.131, 47.5546, 0.3306 ) }
    dend_29 { pt3dadd( 322.254, 440.026, 47.5269, 0.376 ) }
    dend_29 { pt3dadd( 322.919, 439.249, 47.5496, 0.5704 ) }
    dend_29 { pt3dadd( 322.686, 438.408, 47.418, 0.5322 ) }
    dend_29 { pt3dadd( 322.494, 437.546, 47.3228, 0.6254 ) }
    dend_29 { pt3dadd( 322.171, 436.766, 47.3682, 0.4068 ) }
    dend_29 { pt3dadd( 322.379, 435.75, 47.3021, 0.4576 ) }
    dend_29 { pt3dadd( 322.379, 434.752, 47.425, 0.5272 ) }
    dend_29 { pt3dadd( 322.494, 433.767, 47.5616, 0.4576 ) }
    dend_29 { pt3dadd( 322.353, 432.82, 47.705, 0.3696 ) }
    dend_29 { pt3dadd( 322.15, 432.032, 47.6022, 0.7824 ) }
    dend_29 { pt3dadd( 322.15, 430.888, 47.5398, 0.661 ) }
    dend_29 { pt3dadd( 322.036, 429.754, 47.5364, 0.5848 ) }
    dend_29 { pt3dadd( 322.301, 428.78, 47.6946, 0.5984 ) }
    dend_29 { pt3dadd( 322.718, 427.884, 48.0032, 0.5592 ) }
    dend_29 { pt3dadd( 323.115, 426.908, 48.2608, 0.4358 ) }
    dend_29 { pt3dadd( 322.893, 425.994, 48.5929, 0.4772 ) }
    dend_29 { pt3dadd( 322.722, 424.887, 48.8631, 0.356 ) }
    dend_29 { pt3dadd( 322.736, 423.842, 48.9129, 0.7366 ) }
    dend_29 { pt3dadd( 322.303, 422.975, 48.9908, 0.6864 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 59/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 323.251, 450.265, 47.9058, 0.483 ) }
    dend_26 { pt3dadd( 321.846, 450.063, 47.0002, 0.4464 ) }
    dend_26 { pt3dadd( 320.812, 449.743, 47.4956, 0.523 ) }
    dend_26 { pt3dadd( 320.042, 448.935, 47.6963, 0.5766 ) }
    dend_26 { pt3dadd( 319.374, 448.037, 47.9469, 0.5672 ) }
    dend_26 { pt3dadd( 318.521, 447.31, 48.1723, 0.5062 ) }
    dend_26 { pt3dadd( 317.562, 446.722, 48.2787, 0.501 ) }
    dend_26 { pt3dadd( 316.669, 446.03, 48.3554, 0.5642 ) }
    dend_26 { pt3dadd( 315.85, 445.254, 48.4708, 0.6224 ) }
    dend_26 { pt3dadd( 315.018, 444.475, 48.5775, 0.6356 ) }
    dend_26 { pt3dadd( 314.121, 443.774, 48.6402, 0.6166 ) }
    dend_26 { pt3dadd( 313.32, 442.996, 48.6366, 0.6296 ) }
    dend_26 { pt3dadd( 312.74, 442.087, 48.7572, 0.6556 ) }
    dend_26 { pt3dadd( 312.342, 441.098, 49.0168, 0.6814 ) }
    dend_26 { pt3dadd( 311.844, 440.089, 49.2626, 0.666 ) }
    dend_26 { pt3dadd( 311.153, 439.181, 49.4542, 0.6404 ) }
    dend_26 { pt3dadd( 310.38, 438.34, 49.5916, 0.615 ) }
    dend_26 { pt3dadd( 309.691, 437.428, 49.6706, 0.5896 ) }
    dend_26 { pt3dadd( 309.055, 436.481, 49.6689, 0.5432 ) }
    dend_26 { pt3dadd( 308.612, 435.456, 49.5684, 0.492 ) }
    dend_26 { pt3dadd( 308.099, 434.459, 49.5499, 0.5042 ) }
    dend_26 { pt3dadd( 307.389, 433.575, 49.5407, 0.5742 ) }
    dend_26 { pt3dadd( 306.625, 432.727, 49.5449, 0.652 ) }
    dend_26 { pt3dadd( 305.86, 431.922, 49.6807, 0.6382 ) }
    dend_26 { pt3dadd( 305.115, 431.058, 49.8467, 0.5898 ) }
    dend_26 { pt3dadd( 304.448, 430.13, 50.0192, 0.5154 ) }
    dend_26 { pt3dadd( 303.84, 429.165, 50.2023, 0.5548 ) }
    dend_26 { pt3dadd( 303.6, 428.094, 50.4762, 0.606 ) }
    dend_26 { pt3dadd( 303.274, 427.003, 50.724, 0.7044 ) }
    dend_26 { pt3dadd( 302.977, 425.897, 50.918, 0.688 ) }
    dend_26 { pt3dadd( 302.604, 424.816, 51.0768, 0.6388 ) }
    dend_26 { pt3dadd( 302.01, 423.842, 51.2193, 0.5154 ) }
    dend_26 { pt3dadd( 301.079, 423.247, 51.4228, 0.4592 ) }
    dend_26 { pt3dadd( 300.357, 422.372, 51.6149, 0.4576 ) }
    dend_26 { pt3dadd( 299.693, 421.442, 51.7353, 0.5568 ) }
    dend_26 { pt3dadd( 298.873, 420.659, 51.758, 0.661 ) }
    // Section: apic_15, id: apic_15, parent: apic_11 (entry count 95/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 356.172, 452.543, 49.1131, 0.356 ) }
    apic_15 { pt3dadd( 356.724, 452.477, 49.28, 0.3304 ) }
    apic_15 { pt3dadd( 357.434, 452.251, 49.6804, 0.9232 ) }
    apic_15 { pt3dadd( 358.155, 451.847, 49.7669, 0.5342 ) }
    apic_15 { pt3dadd( 358.925, 451.329, 49.9696, 0.505 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_15 { pt3dadd( 359.947, 451.107, 50.2788, 0.4694 ) }
    apic_15 { pt3dadd( 360.659, 450.373, 50.5725, 0.335 ) }
    apic_15 { pt3dadd( 361.229, 449.515, 50.7209, 0.5798 ) }
    apic_15 { pt3dadd( 361.983, 448.799, 50.7069, 0.6974 ) }
    apic_15 { pt3dadd( 362.871, 448.314, 50.7203, 0.4596 ) }
    apic_15 { pt3dadd( 363.757, 447.87, 50.8483, 0.6648 ) }
    apic_15 { pt3dadd( 364.703, 447.558, 50.836, 0.582 ) }
    apic_15 { pt3dadd( 365.487, 446.852, 50.8612, 0.5178 ) }
    apic_15 { pt3dadd( 366.276, 446.224, 50.9583, 0.3814 ) }
    apic_15 { pt3dadd( 367.066, 446.16, 50.8365, 0.5894 ) }
    apic_15 { pt3dadd( 367.827, 445.778, 50.5638, 0.4676 ) }
    apic_15 { pt3dadd( 368.332, 444.965, 50.4854, 0.392 ) }
    apic_15 { pt3dadd( 369.054, 444.532, 50.5151, 0.6864 ) }
    apic_15 { pt3dadd( 369.636, 443.807, 50.3933, 0.3616 ) }
    apic_15 { pt3dadd( 370.621, 443.468, 50.2505, 0.6356 ) }
    apic_15 { pt3dadd( 371.604, 443.06, 50.2138, 0.5592 ) }
    apic_15 { pt3dadd( 372.413, 442.663, 50.0676, 0.474 ) }
    apic_15 { pt3dadd( 373.212, 442.078, 49.8515, 0.3044 ) }
    apic_15 { pt3dadd( 374.064, 441.34, 49.6647, 0.4672 ) }
    apic_15 { pt3dadd( 374.774, 440.669, 49.6885, 0.4322 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 20/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 356.172, 452.543, 49.1131, 0.356 ) }
    apic_12 { pt3dadd( 357.0, 453.128, 49.2103, 0.4244 ) }
    apic_12 { pt3dadd( 357.805, 453.89, 49.1977, 0.409 ) }
    apic_12 { pt3dadd( 358.614, 454.671, 49.2251, 0.4542 ) }
    apic_12 { pt3dadd( 359.145, 455.628, 49.3242, 0.53 ) }
    apic_12 { pt3dadd( 359.666, 456.644, 49.3422, 0.6102 ) }
    // Section: apic_4, id: apic_4, parent: apic_1 (entry count 26/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 349.23, 436.895, 52.1556, 0.661 ) }
    apic_4 { pt3dadd( 348.147, 437.76, 51.8815, 0.2764 ) }
    apic_4 { pt3dadd( 347.17, 438.126, 52.4656, 0.3814 ) }
    apic_4 { pt3dadd( 346.03, 438.142, 52.6481, 0.4026 ) }
    apic_4 { pt3dadd( 344.906, 438.057, 52.8256, 0.3304 ) }
    apic_4 { pt3dadd( 344.29, 438.69, 53.1829, 0.387 ) }
    apic_4 { pt3dadd( 343.277, 438.876, 53.4649, 0.4322 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 33/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 349.23, 436.895, 52.1556, 0.661 ) }
    apic_2 { pt3dadd( 349.485, 436.248, 52.3118, 0.7232 ) }
    apic_2 { pt3dadd( 349.94, 435.201, 52.4496, 0.7314 ) }
    apic_2 { pt3dadd( 350.421, 434.187, 52.6378, 0.6486 ) }
    apic_2 { pt3dadd( 350.831, 433.138, 52.8676, 0.5142 ) }
    apic_2 { pt3dadd( 351.42, 432.178, 53.0813, 0.3902 ) }
    apic_2 { pt3dadd( 352.302, 431.47, 53.2641, 0.3212 ) }
    apic_2 { pt3dadd( 353.124, 430.687, 53.4265, 0.3224 ) }
    apic_2 { pt3dadd( 353.541, 429.677, 53.6239, 0.384 ) }
    apic_2 { pt3dadd( 353.638, 428.558, 53.8306, 0.4972 ) }
    apic_2 { pt3dadd( 353.788, 427.429, 53.9899, 0.625 ) }
    apic_2 { pt3dadd( 354.322, 426.443, 54.096, 0.661 ) }
    apic_2 { pt3dadd( 354.951, 425.488, 54.154, 0.6242 ) }
    apic_2 { pt3dadd( 355.408, 424.445, 54.1699, 0.5358 ) }
    apic_2 { pt3dadd( 355.783, 423.365, 54.1444, 0.5646 ) }
    apic_2 { pt3dadd( 356.084, 422.287, 54.0403, 0.6416 ) }
    apic_2 { pt3dadd( 356.619, 421.303, 53.9148, 0.7758 ) }
    apic_2 { pt3dadd( 357.243, 420.348, 53.8521, 0.8136 ) }
    apic_2 { pt3dadd( 357.833, 419.396, 53.9171, 0.8522 ) }
    apic_2 { pt3dadd( 358.405, 418.42, 54.0523, 0.8644 ) }
    apic_2 { pt3dadd( 359.082, 417.503, 54.1954, 0.9034 ) }
    apic_2 { pt3dadd( 359.687, 416.534, 54.3421, 0.876 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 55/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 352.654, 443.481, 37.9576, 0.5338 ) }
    dend_20 { pt3dadd( 353.474, 442.73, 37.676, 0.4512 ) }
    dend_20 { pt3dadd( 354.36, 442.608, 37.4884, 0.4912 ) }
    dend_20 { pt3dadd( 355.317, 442.388, 37.452, 0.3814 ) }
    dend_20 { pt3dadd( 356.269, 442.831, 37.4769, 0.4344 ) }
    dend_20 { pt3dadd( 357.396, 442.976, 37.4839, 0.5784 ) }
    dend_20 { pt3dadd( 358.333, 443.345, 37.4273, 0.7606 ) }
    dend_20 { pt3dadd( 359.035, 443.521, 37.2823, 0.7224 ) }
    dend_20 { pt3dadd( 360.135, 443.565, 37.07, 0.6818 ) }
    dend_20 { pt3dadd( 361.199, 443.239, 36.9256, 0.6456 ) }
    dend_20 { pt3dadd( 362.191, 442.689, 36.9057, 0.589 ) }
    dend_20 { pt3dadd( 363.157, 442.121, 37.03, 0.5122 ) }
    dend_20 { pt3dadd( 364.08, 441.475, 37.2515, 0.4356 ) }
    dend_20 { pt3dadd( 365.064, 440.909, 37.4956, 0.3908 ) }
    dend_20 { pt3dadd( 366.052, 440.338, 37.7314, 0.4136 ) }
    dend_20 { pt3dadd( 366.997, 439.693, 37.9504, 0.4484 ) }
    dend_20 { pt3dadd( 368.002, 439.177, 38.1931, 0.4576 ) }
    dend_20 { pt3dadd( 369.005, 438.885, 38.5644, 0.4046 ) }
    dend_20 { pt3dadd( 370.091, 438.723, 38.9735, 0.3814 ) }
    dend_20 { pt3dadd( 371.151, 438.369, 39.2708, 0.4196 ) }
    dend_20 { pt3dadd( 372.149, 437.867, 39.5721, 0.4708 ) }
    dend_20 { pt3dadd( 373.176, 437.384, 39.8667, 0.4438 ) }
    dend_20 { pt3dadd( 374.284, 437.267, 40.1702, 0.3728 ) }
    dend_20 { pt3dadd( 375.406, 437.383, 40.4776, 0.3356 ) }
    dend_20 { pt3dadd( 376.41, 437.84, 40.6773, 0.3716 ) }
    dend_20 { pt3dadd( 377.469, 438.078, 40.9542, 0.4462 ) }
    dend_20 { pt3dadd( 378.475, 437.801, 41.3448, 0.5478 ) }
    dend_20 { pt3dadd( 379.568, 437.498, 41.6875, 0.6502 ) }
    dend_20 { pt3dadd( 380.437, 436.773, 41.972, 0.6842 ) }
    dend_20 { pt3dadd( 381.033, 435.802, 42.2195, 0.5944 ) }
    dend_20 { pt3dadd( 381.696, 434.871, 42.4497, 0.4226 ) }
    dend_20 { pt3dadd( 382.549, 434.114, 42.6684, 0.337 ) }
    dend_20 { pt3dadd( 383.609, 433.885, 42.9828, 0.355 ) }
    dend_20 { pt3dadd( 384.474, 433.364, 43.458, 0.4858 ) }
    dend_20 { pt3dadd( 385.274, 432.547, 43.8651, 0.5876 ) }
    dend_20 { pt3dadd( 386.039, 431.701, 44.2053, 0.6878 ) }
    dend_20 { pt3dadd( 386.6, 430.735, 44.5477, 0.736 ) }
    dend_20 { pt3dadd( 386.979, 429.665, 44.8311, 0.709 ) }
    dend_20 { pt3dadd( 387.422, 428.618, 44.9756, 0.6564 ) }
    dend_20 { pt3dadd( 388.073, 427.728, 44.9683, 0.5828 ) }
    dend_20 { pt3dadd( 388.414, 426.658, 45.0411, 0.5566 ) }
    dend_20 { pt3dadd( 388.587, 425.551, 45.157, 0.5338 ) }
    dend_20 { pt3dadd( 389.185, 424.582, 45.2407, 0.537 ) }
    dend_20 { pt3dadd( 390.006, 423.786, 45.3149, 0.5624 ) }
    dend_20 { pt3dadd( 390.899, 423.083, 45.4107, 0.5848 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_20 { pt3dadd( 391.909, 422.568, 45.5059, 0.573 ) }
    dend_20 { pt3dadd( 392.861, 422.043, 45.4574, 0.476 ) }
    dend_20 { pt3dadd( 393.735, 421.462, 45.3603, 0.426 ) }
    dend_20 { pt3dadd( 394.108, 420.492, 45.2995, 0.7372 ) }
    dend_20 { pt3dadd( 394.661, 419.677, 45.4398, 0.6864 ) }
    dend_20 { pt3dadd( 395.164, 418.912, 45.7156, 0.7118 ) }
    dend_20 { pt3dadd( 395.481, 418.069, 46.1087, 0.6864 ) }
    dend_20 { pt3dadd( 395.997, 417.42, 46.3674, 0.6378 ) }
    dend_20 { pt3dadd( 396.943, 416.895, 46.4867, 0.7092 ) }
    dend_20 { pt3dadd( 397.908, 416.591, 46.5058, 0.6232 ) }
    dend_20 { pt3dadd( 399.004, 416.463, 46.5816, 0.5142 ) }
    dend_20 { pt3dadd( 400.021, 416.073, 46.7457, 0.4706 ) }
    dend_20 { pt3dadd( 400.836, 415.544, 46.9468, 0.5848 ) }
    dend_20 { pt3dadd( 404.979, 412.589, 48.2518, 0.663 ) }
    dend_20 { pt3dadd( 405.835, 412.356, 48.5366, 0.3924 ) }
    dend_20 { pt3dadd( 406.552, 411.624, 48.8152, 0.5338 ) }
    dend_20 { pt3dadd( 407.648, 411.573, 49.1534, 0.402 ) }
    dend_20 { pt3dadd( 408.435, 411.411, 49.4749, 0.6864 ) }
    dend_20 { pt3dadd( 409.258, 411.611, 49.8515, 0.3638 ) }
    dend_20 { pt3dadd( 410.059, 411.551, 50.405, 0.4778 ) }
    dend_20 { pt3dadd( 410.996, 412.11, 50.9155, 0.4136 ) }
    dend_20 { pt3dadd( 411.644, 412.471, 51.3873, 0.319 ) }
    dend_20 { pt3dadd( 412.629, 412.413, 51.8361, 0.6132 ) }
    dend_20 { pt3dadd( 413.635, 412.747, 52.2799, 0.6184 ) }
    dend_20 { pt3dadd( 414.641, 412.743, 52.7232, 0.3084 ) }
    dend_20 { pt3dadd( 415.584, 412.437, 53.1541, 0.6524 ) }
    dend_20 { pt3dadd( 416.676, 412.539, 53.4691, 0.7064 ) }
    dend_20 { pt3dadd( 417.673, 412.526, 53.9596, 0.4072 ) }
    dend_20 { pt3dadd( 418.403, 412.116, 54.3404, 0.6356 ) }
    dend_20 { pt3dadd( 419.271, 411.59, 54.7285, 0.7798 ) }
    dend_20 { pt3dadd( 420.125, 411.673, 55.1944, 0.6864 ) }
    dend_20 { pt3dadd( 421.185, 412.03, 55.6637, 0.702 ) }
    dend_20 { pt3dadd( 422.223, 412.16, 56.238, 0.742 ) }
    dend_20 { pt3dadd( 423.081, 412.466, 56.7014, 0.6762 ) }
    dend_20 { pt3dadd( 423.609, 412.785, 57.3325, 0.8324 ) }
    dend_20 { pt3dadd( 424.537, 412.755, 57.9533, 0.312 ) }
    dend_20 { pt3dadd( 425.11, 412.889, 58.5735, 0.2288 ) }
    dend_20 { pt3dadd( 425.88, 413.496, 58.9291, 0.7232 ) }
    dend_20 { pt3dadd( 426.761, 414.122, 59.1234, 0.7372 ) }
    dend_20 { pt3dadd( 427.875, 414.242, 59.2124, 0.5132 ) }
    dend_20 { pt3dadd( 428.991, 414.228, 59.1914, 0.5602 ) }
    dend_20 { pt3dadd( 429.322, 414.746, 59.2458, 0.5544 ) }
    dend_20 { pt3dadd( 430.177, 415.094, 59.4051, 0.6516 ) }
    dend_20 { pt3dadd( 430.655, 414.61, 59.7744, 0.511 ) }
    dend_20 { pt3dadd( 431.402, 414.75, 60.2753, 0.559 ) }
    dend_20 { pt3dadd( 432.173, 415.1, 60.7908, 0.4386 ) }
    dend_20 { pt3dadd( 432.93, 415.577, 60.9714, 0.3554 ) }
    dend_20 { pt3dadd( 434.028, 415.73, 60.9526, 0.2288 ) }
    dend_20 { pt3dadd( 434.79, 416.294, 60.8838, 0.25 ) }
    dend_20 { pt3dadd( 435.784, 416.636, 60.7743, 0.4556 ) }
    dend_20 { pt3dadd( 436.518, 417.123, 60.5097, 0.4884 ) }
    dend_20 { pt3dadd( 437.371, 417.36, 60.214, 0.6254 ) }
    dend_20 { pt3dadd( 438.094, 417.903, 60.0869, 0.496 ) }
    dend_20 { pt3dadd( 438.61, 417.331, 60.48, 0.4068 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 54/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 352.654, 443.481, 37.9576, 0.5338 ) }
    dend_17 { pt3dadd( 352.879, 443.759, 37.4046, 0.5666 ) }
    dend_17 { pt3dadd( 353.703, 444.386, 36.6635, 0.627 ) }
    dend_17 { pt3dadd( 354.765, 444.315, 36.3398, 0.6102 ) }
    dend_17 { pt3dadd( 355.436, 444.394, 35.9579, 0.6102 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 343.022, 448.66, 43.4714, 0.6102 ) }
    dend_13 { pt3dadd( 342.909, 447.906, 40.9206, 0.4668 ) }
    dend_13 { pt3dadd( 342.857, 446.946, 40.3743, 0.3938 ) }
    dend_13 { pt3dadd( 342.919, 446.015, 40.3124, 0.5958 ) }
    dend_13 { pt3dadd( 343.245, 445.022, 40.1668, 0.4278 ) }
    dend_13 { pt3dadd( 343.871, 445.245, 39.7085, 0.4576 ) }
    dend_13 { pt3dadd( 344.583, 445.093, 39.1227, 0.521 ) }
    dend_13 { pt3dadd( 344.7, 444.038, 38.6918, 0.6864 ) }
    dend_13 { pt3dadd( 344.516, 443.087, 38.4835, 0.4646 ) }
    dend_13 { pt3dadd( 344.664, 442.018, 38.2735, 0.4322 ) }
    dend_13 { pt3dadd( 345.041, 440.983, 38.1284, 0.4442 ) }
    dend_13 { pt3dadd( 345.288, 439.923, 38.0568, 0.2352 ) }
    dend_13 { pt3dadd( 346.057, 439.355, 38.1024, 0.3586 ) }
    dend_13 { pt3dadd( 346.067, 438.218, 38.2127, 0.5112 ) }
    dend_13 { pt3dadd( 346.411, 437.564, 38.6134, 0.529 ) }
    dend_13 { pt3dadd( 347.021, 436.691, 39.0289, 0.5002 ) }
    dend_13 { pt3dadd( 347.465, 435.644, 39.3644, 0.5774 ) }
    dend_13 { pt3dadd( 347.961, 434.616, 39.6211, 0.5848 ) }
    dend_13 { pt3dadd( 348.488, 433.65, 39.8737, 0.561 ) }
    dend_13 { pt3dadd( 349.147, 432.721, 40.01, 0.5592 ) }
    dend_13 { pt3dadd( 349.86, 431.837, 39.9694, 0.5592 ) }
    dend_13 { pt3dadd( 350.622, 431.032, 39.7617, 0.535 ) }
    dend_13 { pt3dadd( 351.349, 430.153, 39.5077, 0.437 ) }
    dend_13 { pt3dadd( 351.572, 429.064, 39.1552, 0.3814 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 83/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 343.022, 448.66, 43.4714, 0.6102 ) }
    dend_2 { pt3dadd( 343.547, 447.757, 43.629, 0.5618 ) }
    dend_2 { pt3dadd( 344.18, 446.809, 43.7875, 0.6322 ) }
    dend_2 { pt3dadd( 344.878, 445.903, 43.9023, 0.6598 ) }
    dend_2 { pt3dadd( 345.529, 444.962, 43.9575, 0.6366 ) }
    dend_2 { pt3dadd( 346.139, 443.994, 43.9482, 0.6112 ) }
    dend_2 { pt3dadd( 346.521, 442.918, 43.8816, 0.6592 ) }
    dend_2 { pt3dadd( 346.807, 441.839, 43.703, 0.6858 ) }
    dend_2 { pt3dadd( 347.147, 440.763, 43.4874, 0.7116 ) }
    dend_2 { pt3dadd( 347.537, 439.698, 43.2774, 0.661 ) }
    dend_2 { pt3dadd( 348.107, 438.724, 43.1276, 0.661 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 94/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 306.427, 445.436, 50.2718, 0.6102 ) }
    dend_35 { pt3dadd( 305.086, 445.473, 49.8532, 0.405 ) }
    dend_35 { pt3dadd( 304.087, 445.492, 49.9083, 0.731 ) }
    dend_35 { pt3dadd( 303.228, 445.268, 49.8014, 0.6002 ) }
    dend_35 { pt3dadd( 302.117, 445.364, 49.8299, 0.6518 ) }
    dend_35 { pt3dadd( 301.286, 445.586, 50.1133, 0.283 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_35 { pt3dadd( 300.687, 445.337, 50.6254, 0.596 ) }
    dend_35 { pt3dadd( 299.792, 444.902, 51.0619, 0.5842 ) }
    dend_35 { pt3dadd( 298.756, 445.112, 51.4769, 0.614 ) }
    dend_35 { pt3dadd( 297.843, 444.558, 51.7888, 0.5592 ) }
    dend_35 { pt3dadd( 297.056, 443.951, 51.926, 0.4526 ) }
    dend_35 { pt3dadd( 296.245, 443.891, 51.8697, 0.6124 ) }
    dend_35 { pt3dadd( 295.553, 443.591, 51.5976, 0.8136 ) }
    dend_35 { pt3dadd( 294.706, 443.411, 51.4772, 0.5258 ) }
    dend_35 { pt3dadd( 293.843, 443.151, 51.2837, 0.4006 ) }
    dend_35 { pt3dadd( 292.915, 442.817, 51.2086, 0.4356 ) }
    dend_35 { pt3dadd( 292.178, 442.297, 51.1893, 0.6864 ) }
    dend_35 { pt3dadd( 292.044, 441.394, 51.1832, 0.661 ) }
    dend_35 { pt3dadd( 291.845, 440.36, 51.1434, 0.4166 ) }
    dend_35 { pt3dadd( 291.825, 439.351, 51.2462, 0.5592 ) }
    dend_35 { pt3dadd( 291.207, 438.709, 51.6149, 0.5478 ) }
    dend_35 { pt3dadd( 290.74, 438.149, 52.2995, 0.6028 ) }
    dend_35 { pt3dadd( 290.347, 438.038, 52.717, 0.5338 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 17/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 306.427, 445.436, 50.2718, 0.6102 ) }
    dend_34 { pt3dadd( 305.882, 444.57, 50.8194, 0.38 ) }
    dend_34 { pt3dadd( 305.165, 443.993, 51.3131, 0.3524 ) }
    dend_34 { pt3dadd( 305.088, 443.146, 51.8692, 0.6144 ) }
    dend_34 { pt3dadd( 305.003, 442.272, 52.4482, 0.6612 ) }
    dend_34 { pt3dadd( 304.738, 441.272, 52.7817, 0.4662 ) }
    dend_34 { pt3dadd( 304.304, 440.307, 52.9645, 0.6324 ) }
    dend_34 { pt3dadd( 303.865, 439.491, 53.0435, 0.4322 ) }
    dend_34 { pt3dadd( 304.228, 438.446, 53.0186, 0.4736 ) }
    dend_34 { pt3dadd( 304.487, 437.356, 52.939, 0.5084 ) }
    dend_34 { pt3dadd( 304.533, 436.222, 52.8881, 0.5068 ) }
    dend_34 { pt3dadd( 304.023, 435.675, 52.6596, 0.3658 ) }
    dend_34 { pt3dadd( 303.372, 434.932, 52.4126, 0.4386 ) }
    dend_34 { pt3dadd( 302.941, 434.38, 52.6302, 0.356 ) }
    dend_34 { pt3dadd( 302.609, 433.97, 53.1882, 0.4916 ) }
    dend_34 { pt3dadd( 301.545, 433.637, 53.6852, 0.5566 ) }
    dend_34 { pt3dadd( 301.017, 432.894, 54.2679, 0.5848 ) }
    dend_34 { pt3dadd( 300.954, 432.012, 54.8761, 0.6206 ) }
    dend_34 { pt3dadd( 300.751, 431.031, 55.4067, 0.4312 ) }
    dend_34 { pt3dadd( 300.235, 430.237, 55.8606, 0.628 ) }
    dend_34 { pt3dadd( 299.753, 429.458, 56.1576, 0.6438 ) }
    dend_34 { pt3dadd( 298.992, 428.938, 56.2083, 0.5214 ) }
    dend_34 { pt3dadd( 298.093, 428.421, 56.282, 0.5592 ) }
    dend_34 { pt3dadd( 297.533, 427.608, 56.3228, 0.7128 ) }
    dend_34 { pt3dadd( 297.098, 427.051, 56.5359, 0.4576 ) }
    dend_34 { pt3dadd( 297.051, 425.925, 56.6639, 0.6102 ) }
    dend_34 { pt3dadd( 296.835, 424.86, 56.863, 0.564 ) }
    dend_34 { pt3dadd( 296.525, 423.948, 57.1861, 0.747 ) }
    dend_34 { pt3dadd( 296.161, 423.151, 57.4207, 0.6924 ) }
    dend_34 { pt3dadd( 295.678, 422.246, 57.5352, 0.4788 ) }
    dend_34 { pt3dadd( 295.27, 421.451, 57.5397, 0.3628 ) }
    dend_34 { pt3dadd( 295.152, 420.566, 57.4165, 0.4204 ) }
    dend_34 { pt3dadd( 295.462, 419.831, 57.4666, 0.5456 ) }
    dend_34 { pt3dadd( 295.407, 418.837, 57.5285, 0.874 ) }
    dend_34 { pt3dadd( 295.699, 417.927, 57.7164, 0.6212 ) }
    dend_34 { pt3dadd( 295.215, 417.146, 57.7156, 0.626 ) }
    dend_34 { pt3dadd( 294.493, 416.746, 57.7016, 0.6362 ) }
    dend_34 { pt3dadd( 294.106, 416.185, 57.785, 0.3304 ) }
    dend_34 { pt3dadd( 293.562, 415.313, 57.8757, 0.7532 ) }
    dend_34 { pt3dadd( 292.906, 414.488, 57.8701, 0.6362 ) }
    dend_34 { pt3dadd( 292.29, 413.546, 57.8301, 0.564 ) }
    dend_34 { pt3dadd( 291.627, 412.764, 57.7856, 0.7372 ) }
    dend_34 { pt3dadd( 291.242, 411.805, 57.8057, 0.6224 ) }
    dend_34 { pt3dadd( 290.634, 411.109, 57.6582, 0.4842 ) }
    dend_34 { pt3dadd( 290.078, 410.349, 57.5792, 0.4684 ) }
    dend_34 { pt3dadd( 290.051, 409.668, 57.584, 0.4576 ) }
    dend_34 { pt3dadd( 289.662, 408.986, 57.3692, 0.3032 ) }
    dend_34 { pt3dadd( 289.201, 408.181, 57.3118, 0.5376 ) }
    dend_34 { pt3dadd( 288.655, 407.329, 57.1732, 0.4792 ) }
    dend_34 { pt3dadd( 288.145, 406.738, 57.0648, 0.413 ) }
    dend_34 { pt3dadd( 287.579, 405.907, 56.9089, 0.293 ) }
    dend_34 { pt3dadd( 287.022, 405.06, 56.7647, 0.4182 ) }
    dend_34 { pt3dadd( 286.276, 404.451, 56.6059, 0.4522 ) }
    dend_34 { pt3dadd( 285.561, 403.855, 56.5874, 0.483 ) }
    dend_34 { pt3dadd( 284.719, 403.13, 56.5975, 0.4506 ) }
    dend_34 { pt3dadd( 283.839, 402.447, 56.607, 0.5084 ) }
    dend_34 { pt3dadd( 283.57, 401.968, 56.7902, 0.2806 ) }
    dend_34 { pt3dadd( 283.213, 400.955, 56.922, 0.3164 ) }
    dend_34 { pt3dadd( 283.09, 399.901, 57.0066, 0.305 ) }
    dend_34 { pt3dadd( 282.189, 399.357, 57.0606, 0.2288 ) }
    dend_34 { pt3dadd( 281.224, 399.568, 57.2152, 0.2288 ) }
    dend_34 { pt3dadd( 280.608, 398.82, 57.4608, 0.2898 ) }
    dend_34 { pt3dadd( 280.28, 397.79, 57.5716, 0.2666 ) }
    dend_34 { pt3dadd( 280.263, 396.727, 57.787, 0.4278 ) }
    dend_34 { pt3dadd( 280.365, 395.634, 57.976, 0.3872 ) }
    dend_34 { pt3dadd( 280.474, 394.562, 58.109, 0.3892 ) }
    dend_34 { pt3dadd( 279.832, 393.79, 58.0796, 0.4042 ) }
    dend_34 { pt3dadd( 279.272, 393.109, 58.0331, 0.4474 ) }
    dend_34 { pt3dadd( 278.468, 392.339, 58.0482, 0.3814 ) }
    dend_34 { pt3dadd( 277.824, 391.741, 57.885, 0.5068 ) }
    dend_34 { pt3dadd( 277.032, 390.944, 57.7637, 0.3616 ) }
    dend_34 { pt3dadd( 276.238, 390.255, 57.603, 0.453 ) }
    dend_34 { pt3dadd( 275.878, 389.216, 57.388, 0.409 ) }
    dend_34 { pt3dadd( 275.25, 388.677, 57.295, 0.2288 ) }
    dend_34 { pt3dadd( 274.648, 387.962, 57.0475, 0.2288 ) }
    dend_34 { pt3dadd( 274.066, 387.112, 56.884, 0.2288 ) }
    dend_34 { pt3dadd( 273.154, 386.461, 56.7857, 0.3038 ) }
    dend_34 { pt3dadd( 272.296, 385.901, 56.6532, 0.2288 ) }
    dend_34 { pt3dadd( 271.756, 385.016, 56.6143, 0.3962 ) }
    dend_34 { pt3dadd( 271.245, 384.042, 56.5852, 0.4438 ) }
    dend_34 { pt3dadd( 270.865, 383.299, 56.4869, 0.2288 ) }
    dend_34 { pt3dadd( 270.109, 382.511, 56.495, 0.305 ) }
    dend_34 { pt3dadd( 269.563, 381.527, 56.5062, 0.3716 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_34 { pt3dadd( 269.071, 380.5, 56.5242, 0.4322 ) }
    dend_34 { pt3dadd( 268.565, 379.541, 56.4931, 0.2476 ) }
    dend_34 { pt3dadd( 268.715, 378.508, 56.5516, 0.2318 ) }
    dend_34 { pt3dadd( 268.285, 377.479, 56.6286, 0.4256 ) }
    dend_34 { pt3dadd( 267.913, 376.489, 56.5746, 0.4576 ) }
    dend_34 { pt3dadd( 267.253, 375.642, 56.5743, 0.3054 ) }
    dend_34 { pt3dadd( 266.848, 374.732, 56.4514, 0.2326 ) }
    dend_34 { pt3dadd( 266.439, 373.76, 56.4455, 0.305 ) }
    dend_34 { pt3dadd( 265.798, 372.825, 56.4967, 0.3478 ) }
    dend_34 { pt3dadd( 265.03, 371.982, 56.544, 0.3304 ) }
    dend_34 { pt3dadd( 264.539, 371.376, 56.6028, 0.2288 ) }
    dend_34 { pt3dadd( 264.002, 370.507, 56.7036, 0.3814 ) }
    dend_34 { pt3dadd( 263.626, 369.436, 56.8005, 0.4068 ) }
    dend_34 { pt3dadd( 263.014, 368.613, 56.8935, 0.3538 ) }
    dend_34 { pt3dadd( 262.58, 367.675, 56.8333, 0.4242 ) }
    dend_34 { pt3dadd( 262.286, 366.682, 56.7798, 0.3444 ) }
    dend_34 { pt3dadd( 261.554, 365.843, 56.6908, 0.378 ) }
    dend_34 { pt3dadd( 261.068, 364.987, 56.6294, 0.4376 ) }
    dend_34 { pt3dadd( 260.718, 363.906, 56.56, 0.5338 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 19/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 322.303, 422.975, 48.9908, 0.6864 ) }
    dend_31 { pt3dadd( 323.132, 422.623, 47.7691, 0.4808 ) }
    dend_31 { pt3dadd( 324.001, 422.256, 46.8446, 0.265 ) }
    dend_31 { pt3dadd( 324.921, 421.793, 46.5055, 0.5376 ) }
    dend_31 { pt3dadd( 325.481, 421.27, 46.3596, 0.5046 ) }
    dend_31 { pt3dadd( 325.987, 420.548, 46.0586, 0.2706 ) }
    dend_31 { pt3dadd( 326.612, 419.835, 45.7061, 0.5008 ) }
    dend_31 { pt3dadd( 326.849, 419.082, 45.194, 0.6512 ) }
    dend_31 { pt3dadd( 327.563, 418.267, 44.8216, 0.5142 ) }
    dend_31 { pt3dadd( 328.369, 417.571, 44.4181, 0.5388 ) }
    dend_31 { pt3dadd( 328.905, 416.991, 44.196, 0.6122 ) }
    dend_31 { pt3dadd( 328.972, 415.981, 43.9586, 0.6102 ) }
    dend_31 { pt3dadd( 329.304, 415.041, 43.8136, 0.5482 ) }
    dend_31 { pt3dadd( 329.795, 414.46, 43.4255, 0.6498 ) }
    dend_31 { pt3dadd( 330.482, 414.241, 42.8557, 0.457 ) }
    dend_31 { pt3dadd( 331.265, 414.014, 42.4043, 0.5336 ) }
    dend_31 { pt3dadd( 331.833, 413.292, 42.016, 0.7186 ) }
    dend_31 { pt3dadd( 332.096, 412.31, 41.8474, 0.5624 ) }
    dend_31 { pt3dadd( 332.103, 411.287, 41.8813, 0.4684 ) }
    dend_31 { pt3dadd( 332.417, 410.622, 41.8202, 0.5138 ) }
    dend_31 { pt3dadd( 332.727, 409.563, 41.7897, 0.491 ) }
    dend_31 { pt3dadd( 333.383, 409.118, 41.7519, 0.515 ) }
    dend_31 { pt3dadd( 334.154, 408.488, 41.531, 0.6356 ) }
    dend_31 { pt3dadd( 334.839, 408.163, 41.3042, 0.4106 ) }
    dend_31 { pt3dadd( 335.421, 408.077, 40.6454, 0.4322 ) }
    dend_31 { pt3dadd( 335.985, 407.51, 39.9314, 0.4764 ) }
    dend_31 { pt3dadd( 336.224, 406.555, 39.2969, 0.4944 ) }
    dend_31 { pt3dadd( 336.786, 406.245, 38.4787, 0.4704 ) }
    dend_31 { pt3dadd( 337.199, 405.662, 37.6835, 0.35 ) }
    dend_31 { pt3dadd( 337.257, 404.807, 37.0264, 0.661 ) }
    dend_31 { pt3dadd( 336.679, 404.099, 36.7374, 0.493 ) }
    dend_31 { pt3dadd( 335.98, 403.565, 36.4608, 0.305 ) }
    dend_31 { pt3dadd( 335.471, 402.869, 36.325, 0.359 ) }
    dend_31 { pt3dadd( 334.831, 402.306, 36.395, 0.6556 ) }
    dend_31 { pt3dadd( 334.224, 401.387, 36.4585, 0.552 ) }
    dend_31 { pt3dadd( 333.89, 400.417, 36.4414, 0.5192 ) }
    dend_31 { pt3dadd( 333.34, 399.581, 36.2785, 0.3848 ) }
    dend_31 { pt3dadd( 332.998, 398.678, 36.0046, 0.4288 ) }
    dend_31 { pt3dadd( 332.369, 398.017, 35.8324, 0.5504 ) }
    dend_31 { pt3dadd( 331.885, 397.02, 35.6717, 0.5198 ) }
    dend_31 { pt3dadd( 331.163, 396.272, 35.5544, 0.5742 ) }
    dend_31 { pt3dadd( 330.547, 395.435, 35.4404, 0.356 ) }
    dend_31 { pt3dadd( 330.241, 394.523, 35.2663, 0.356 ) }
    dend_31 { pt3dadd( 330.249, 393.801, 34.8768, 0.6864 ) }
    dend_31 { pt3dadd( 330.361, 392.773, 34.6284, 0.4964 ) }
    dend_31 { pt3dadd( 330.481, 391.984, 34.1354, 0.8162 ) }
    dend_31 { pt3dadd( 330.76, 390.96, 33.6098, 0.5282 ) }
    dend_31 { pt3dadd( 331.073, 389.996, 33.1568, 0.3794 ) }
    dend_31 { pt3dadd( 331.739, 389.269, 32.965, 0.2704 ) }
    dend_31 { pt3dadd( 331.6, 388.494, 32.8502, 0.5542 ) }
    dend_31 { pt3dadd( 331.188, 387.692, 32.7202, 0.5558 ) }
    dend_31 { pt3dadd( 330.73, 387.053, 32.8628, 0.571 ) }
    dend_31 { pt3dadd( 330.281, 386.266, 32.9314, 0.528 ) }
    dend_31 { pt3dadd( 330.041, 385.272, 32.8658, 0.5062 ) }
    dend_31 { pt3dadd( 329.606, 384.607, 32.9958, 0.2452 ) }
    dend_31 { pt3dadd( 329.012, 384.01, 32.965, 0.2354 ) }
    dend_31 { pt3dadd( 328.542, 383.354, 32.6091, 0.36 ) }
    dend_31 { pt3dadd( 328.152, 382.667, 32.3022, 0.3394 ) }
    dend_31 { pt3dadd( 328.096, 381.684, 32.0978, 0.312 ) }
    dend_31 { pt3dadd( 327.154, 381.45, 31.8343, 0.4814 ) }
    dend_31 { pt3dadd( 326.901, 381.266, 31.2676, 0.4136 ) }
    dend_31 { pt3dadd( 326.615, 380.496, 30.8132, 0.2462 ) }
    dend_31 { pt3dadd( 327.184, 379.618, 30.5822, 0.3954 ) }
    dend_31 { pt3dadd( 327.857, 378.857, 30.5617, 0.4744 ) }
    dend_31 { pt3dadd( 328.061, 377.772, 30.588, 0.5848 ) }
    dend_31 { pt3dadd( 327.756, 376.982, 30.3965, 0.536 ) }
    dend_31 { pt3dadd( 326.867, 376.732, 30.1263, 0.4156 ) }
    dend_31 { pt3dadd( 325.894, 376.612, 29.7562, 0.3754 ) }
    dend_31 { pt3dadd( 325.468, 376.159, 29.4311, 0.4754 ) }
    dend_31 { pt3dadd( 324.694, 375.576, 29.0433, 0.3512 ) }
    dend_31 { pt3dadd( 324.485, 374.85, 28.8602, 0.369 ) }
    dend_31 { pt3dadd( 323.751, 374.065, 28.7874, 0.5462 ) }
    dend_31 { pt3dadd( 323.14, 373.171, 28.6334, 0.6624 ) }
    dend_31 { pt3dadd( 322.684, 372.985, 28.2954, 0.2398 ) }
    dend_31 { pt3dadd( 321.727, 373.319, 27.9272, 0.628 ) }
    dend_31 { pt3dadd( 320.677, 373.392, 27.5884, 0.4216 ) }
    dend_31 { pt3dadd( 319.769, 373.052, 27.2093, 0.5274 ) }
    dend_31 { pt3dadd( 319.685, 371.968, 26.8766, 0.7346 ) }
    dend_31 { pt3dadd( 319.723, 370.997, 26.5908, 0.5566 ) }
    dend_31 { pt3dadd( 319.627, 369.931, 26.3236, 0.5068 ) }
    dend_31 { pt3dadd( 319.085, 369.017, 26.2307, 0.532 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_31 { pt3dadd( 318.748, 367.949, 26.2083, 0.6826 ) }
    dend_31 { pt3dadd( 318.166, 367.557, 26.3542, 0.648 ) }
    dend_31 { pt3dadd( 318.49, 366.538, 26.88, 0.5084 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 3/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 322.303, 422.975, 48.9908, 0.6864 ) }
    dend_30 { pt3dadd( 321.922, 422.008, 48.8642, 0.6102 ) }
    dend_30 { pt3dadd( 321.584, 421.221, 48.6786, 0.3518 ) }
    dend_30 { pt3dadd( 321.354, 420.647, 48.8519, 1.0652 ) }
    dend_30 { pt3dadd( 321.217, 419.598, 49.0398, 0.6552 ) }
    dend_30 { pt3dadd( 320.814, 419.148, 48.9899, 0.5592 ) }
    dend_30 { pt3dadd( 320.279, 418.273, 49.0697, 0.6794 ) }
    dend_30 { pt3dadd( 319.977, 417.486, 49.3354, 1.1048 ) }
    dend_30 { pt3dadd( 320.202, 416.393, 49.523, 0.6484 ) }
    dend_30 { pt3dadd( 319.857, 415.373, 49.6409, 0.555 ) }
    dend_30 { pt3dadd( 319.223, 414.71, 49.9131, 0.5608 ) }
    dend_30 { pt3dadd( 318.491, 414.032, 50.1536, 0.6578 ) }
    dend_30 { pt3dadd( 318.034, 413.042, 50.2373, 0.8244 ) }
    dend_30 { pt3dadd( 317.689, 412.241, 50.0937, 0.9152 ) }
    dend_30 { pt3dadd( 317.102, 411.536, 49.9528, 0.6298 ) }
    dend_30 { pt3dadd( 316.777, 410.561, 49.7983, 0.5272 ) }
    dend_30 { pt3dadd( 316.545, 409.703, 49.5872, 0.8504 ) }
    dend_30 { pt3dadd( 316.205, 409.17, 49.653, 0.6804 ) }
    dend_30 { pt3dadd( 315.991, 408.291, 49.8509, 0.7082 ) }
    dend_30 { pt3dadd( 315.368, 407.491, 49.9136, 0.6578 ) }
    dend_30 { pt3dadd( 315.272, 406.842, 49.8319, 0.412 ) }
    dend_30 { pt3dadd( 315.094, 405.837, 49.7286, 0.6102 ) }
    dend_30 { pt3dadd( 315.649, 405.063, 49.5765, 0.3576 ) }
    dend_30 { pt3dadd( 315.282, 404.415, 49.5998, 0.6508 ) }
    dend_30 { pt3dadd( 315.296, 403.539, 49.5538, 0.5294 ) }
    dend_30 { pt3dadd( 314.95, 402.809, 49.3528, 0.8136 ) }
    dend_30 { pt3dadd( 314.685, 401.893, 49.0932, 0.4586 ) }
    dend_30 { pt3dadd( 314.371, 400.824, 48.9398, 0.526 ) }
    dend_30 { pt3dadd( 314.46, 399.731, 48.8914, 0.7204 ) }
    dend_30 { pt3dadd( 314.25, 398.794, 48.9633, 0.6488 ) }
    dend_30 { pt3dadd( 314.371, 397.984, 48.9048, 0.81 ) }
    dend_30 { pt3dadd( 314.145, 396.97, 48.8536, 0.7436 ) }
    dend_30 { pt3dadd( 314.244, 396.073, 48.7416, 0.5968 ) }
    dend_30 { pt3dadd( 314.253, 394.966, 48.5652, 0.4796 ) }
    dend_30 { pt3dadd( 313.914, 393.936, 48.452, 0.561 ) }
    dend_30 { pt3dadd( 313.931, 392.853, 48.3358, 0.361 ) }
    dend_30 { pt3dadd( 314.178, 391.853, 48.1886, 0.7196 ) }
    dend_30 { pt3dadd( 314.257, 390.753, 48.0208, 0.5308 ) }
    dend_30 { pt3dadd( 314.184, 389.643, 47.936, 0.6356 ) }
    dend_30 { pt3dadd( 314.041, 388.941, 48.0511, 0.7376 ) }
    dend_30 { pt3dadd( 313.625, 388.324, 47.8724, 0.8462 ) }
    dend_30 { pt3dadd( 313.341, 387.346, 47.6395, 0.7782 ) }
    dend_30 { pt3dadd( 313.014, 386.294, 47.5317, 0.8564 ) }
    dend_30 { pt3dadd( 312.662, 385.243, 47.3592, 0.712 ) }
    dend_30 { pt3dadd( 312.603, 384.117, 47.2038, 0.6356 ) }
    dend_30 { pt3dadd( 312.253, 383.091, 47.0618, 0.5882 ) }
    dend_30 { pt3dadd( 311.328, 382.558, 46.86, 0.7108 ) }
    dend_30 { pt3dadd( 310.513, 382.102, 46.522, 0.6206 ) }
    dend_30 { pt3dadd( 310.013, 381.566, 46.3324, 0.6582 ) }
    dend_30 { pt3dadd( 309.414, 380.896, 46.0018, 0.6388 ) }
    dend_30 { pt3dadd( 308.646, 380.306, 45.7139, 0.5274 ) }
    dend_30 { pt3dadd( 307.857, 379.572, 45.6392, 0.383 ) }
    dend_30 { pt3dadd( 307.053, 379.181, 45.8181, 0.2698 ) }
    dend_30 { pt3dadd( 306.061, 378.695, 45.9522, 0.2796 ) }
    dend_30 { pt3dadd( 305.522, 377.962, 45.9858, 0.5094 ) }
    dend_30 { pt3dadd( 304.873, 377.283, 46.011, 0.4408 ) }
    dend_30 { pt3dadd( 304.17, 376.422, 45.9799, 0.4136 ) }
    dend_30 { pt3dadd( 303.528, 375.608, 46.1121, 0.5338 ) }
    dend_30 { pt3dadd( 302.881, 375.304, 46.0289, 0.3984 ) }
    dend_30 { pt3dadd( 302.812, 374.194, 46.0846, 0.4746 ) }
    dend_30 { pt3dadd( 302.291, 373.422, 46.3688, 0.4322 ) }
    dend_30 { pt3dadd( 302.016, 372.653, 46.5861, 0.5702 ) }
    dend_30 { pt3dadd( 301.85, 371.794, 46.9552, 0.4542 ) }
    dend_30 { pt3dadd( 301.198, 371.07, 47.3116, 0.5042 ) }
    dend_30 { pt3dadd( 301.227, 370.31, 47.7873, 0.6278 ) }
    dend_30 { pt3dadd( 301.419, 369.259, 48.0164, 0.4666 ) }
    dend_30 { pt3dadd( 301.362, 368.146, 48.12, 0.3922 ) }
    dend_30 { pt3dadd( 301.246, 367.097, 48.214, 0.5084 ) }
    dend_30 { pt3dadd( 301.189, 366.096, 48.3218, 0.356 ) }
    dend_30 { pt3dadd( 301.153, 365.066, 48.5643, 0.4268 ) }
    dend_30 { pt3dadd( 301.082, 363.962, 48.8186, 0.5024 ) }
    dend_30 { pt3dadd( 300.805, 363.066, 49.0652, 0.5106 ) }
    dend_30 { pt3dadd( 300.646, 362.135, 49.3623, 0.6864 ) }
    dend_30 { pt3dadd( 300.195, 361.498, 49.4138, 0.6158 ) }
    dend_30 { pt3dadd( 299.608, 360.711, 49.4292, 0.614 ) }
    dend_30 { pt3dadd( 299.187, 359.841, 49.3486, 0.3584 ) }
    dend_30 { pt3dadd( 298.595, 358.923, 49.3072, 0.6222 ) }
    dend_30 { pt3dadd( 298.02, 358.057, 49.2206, 0.503 ) }
    dend_30 { pt3dadd( 297.379, 357.355, 49.142, 0.3886 ) }
    dend_30 { pt3dadd( 297.097, 356.507, 49.042, 0.4246 ) }
    dend_30 { pt3dadd( 296.875, 355.418, 48.9219, 0.4776 ) }
    dend_30 { pt3dadd( 296.639, 354.379, 48.7348, 0.313 ) }
    dend_30 { pt3dadd( 296.056, 353.546, 48.6402, 0.4376 ) }
    dend_30 { pt3dadd( 295.588, 352.559, 48.5243, 0.5266 ) }
    dend_30 { pt3dadd( 295.039, 351.793, 48.4014, 0.5084 ) }
    dend_30 { pt3dadd( 294.42, 350.964, 48.3574, 0.2568 ) }
    dend_30 { pt3dadd( 293.928, 350.096, 48.3297, 0.356 ) }
    dend_30 { pt3dadd( 293.444, 349.155, 48.2952, 0.3394 ) }
    dend_30 { pt3dadd( 293.516, 348.083, 48.3028, 0.4068 ) }
    dend_30 { pt3dadd( 292.968, 347.201, 48.2723, 0.3338 ) }
    dend_30 { pt3dadd( 292.495, 346.224, 48.3294, 0.4168 ) }
    dend_30 { pt3dadd( 291.981, 345.218, 48.3624, 0.3886 ) }
    dend_30 { pt3dadd( 291.481, 344.306, 48.3067, 0.2684 ) }
    dend_30 { pt3dadd( 291.369, 343.247, 48.1639, 0.3402 ) }
    dend_30 { pt3dadd( 291.222, 342.207, 48.1216, 0.4452 ) }
    dend_30 { pt3dadd( 290.853, 341.138, 48.0794, 0.3764 ) }
    dend_30 { pt3dadd( 290.971, 340.093, 47.9752, 0.4622 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( 290.793, 339.035, 47.8789, 0.4048 ) }
    dend_30 { pt3dadd( 290.382, 338.042, 47.7011, 0.2542 ) }
    dend_30 { pt3dadd( 290.277, 336.937, 47.5454, 0.2654 ) }
    dend_30 { pt3dadd( 290.288, 335.81, 47.3866, 0.2472 ) }
    dend_30 { pt3dadd( 290.584, 334.862, 47.2536, 0.4158 ) }
    dend_30 { pt3dadd( 290.192, 333.983, 47.0624, 0.356 ) }
    dend_30 { pt3dadd( 289.68, 333.032, 46.9596, 0.2692 ) }
    dend_30 { pt3dadd( 289.962, 332.037, 46.8801, 0.2732 ) }
    dend_30 { pt3dadd( 289.868, 331.138, 46.7908, 0.356 ) }
    dend_30 { pt3dadd( 289.566, 330.085, 46.6822, 0.3684 ) }
    dend_30 { pt3dadd( 289.582, 329.018, 46.5256, 0.2796 ) }
    dend_30 { pt3dadd( 289.546, 328.278, 46.3674, 0.2728 ) }
    dend_30 { pt3dadd( 289.206, 327.35, 46.268, 0.4176 ) }
    dend_30 { pt3dadd( 289.234, 326.408, 46.1798, 0.2288 ) }
    dend_30 { pt3dadd( 289.3, 325.557, 46.0065, 0.3478 ) }
    dend_30 { pt3dadd( 288.675, 324.759, 45.8374, 0.4808 ) }
    dend_30 { pt3dadd( 288.305, 324.075, 45.6313, 0.34 ) }
    dend_30 { pt3dadd( 287.672, 323.398, 45.3079, 0.2288 ) }
    dend_30 { pt3dadd( 287.336, 322.502, 45.0976, 0.4116 ) }
    dend_30 { pt3dadd( 287.03, 321.807, 44.52, 0.356 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 20/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 298.873, 420.659, 51.758, 0.661 ) }
    dend_28 { pt3dadd( 298.299, 420.332, 50.5019, 0.627 ) }
    dend_28 { pt3dadd( 297.289, 420.547, 50.7279, 0.4326 ) }
    dend_28 { pt3dadd( 296.54, 420.764, 50.8418, 0.4576 ) }
    dend_28 { pt3dadd( 295.591, 420.534, 50.9704, 0.2528 ) }
    dend_28 { pt3dadd( 295.039, 419.798, 51.1829, 0.3938 ) }
    dend_28 { pt3dadd( 294.201, 419.143, 51.3002, 0.4954 ) }
    dend_28 { pt3dadd( 293.443, 418.941, 51.1165, 0.641 ) }
    dend_28 { pt3dadd( 292.635, 419.084, 50.9606, 0.4268 ) }
    dend_28 { pt3dadd( 291.944, 418.802, 50.8382, 0.5148 ) }
    dend_28 { pt3dadd( 290.914, 418.608, 50.668, 0.6102 ) }
    dend_28 { pt3dadd( 290.018, 418.181, 50.6234, 0.5234 ) }
    dend_28 { pt3dadd( 289.064, 417.771, 50.7133, 0.6356 ) }
    dend_28 { pt3dadd( 288.253, 417.13, 50.7534, 0.2796 ) }
    dend_28 { pt3dadd( 287.517, 416.438, 50.736, 0.6414 ) }
    dend_28 { pt3dadd( 286.556, 415.958, 50.7615, 0.5848 ) }
    dend_28 { pt3dadd( 285.628, 415.921, 50.8799, 0.6158 ) }
    dend_28 { pt3dadd( 284.784, 415.483, 51.0017, 0.3714 ) }
    dend_28 { pt3dadd( 284.131, 414.723, 50.9398, 0.6862 ) }
    dend_28 { pt3dadd( 283.715, 413.972, 50.7993, 0.2522 ) }
    dend_28 { pt3dadd( 283.273, 413.245, 50.6948, 0.4522 ) }
    dend_28 { pt3dadd( 282.744, 412.319, 50.5806, 0.5848 ) }
    dend_28 { pt3dadd( 282.417, 411.655, 50.3709, 0.3814 ) }
    dend_28 { pt3dadd( 281.874, 411.429, 50.3101, 0.5678 ) }
    dend_28 { pt3dadd( 281.426, 410.665, 50.0662, 0.6598 ) }
    dend_28 { pt3dadd( 280.86, 409.74, 49.812, 0.305 ) }
    dend_28 { pt3dadd( 280.651, 408.774, 49.7608, 0.5084 ) }
    dend_28 { pt3dadd( 280.124, 408.151, 49.5723, 0.6518 ) }
    dend_28 { pt3dadd( 279.714, 407.41, 49.3643, 0.4576 ) }
    dend_28 { pt3dadd( 278.991, 406.614, 49.1887, 0.5266 ) }
    dend_28 { pt3dadd( 278.002, 406.222, 49.0888, 0.3898 ) }
    dend_28 { pt3dadd( 277.278, 406.738, 48.8194, 0.4474 ) }
    dend_28 { pt3dadd( 276.531, 406.372, 48.5576, 0.4112 ) }
    dend_28 { pt3dadd( 275.908, 405.604, 48.3462, 0.3772 ) }
    dend_28 { pt3dadd( 275.361, 404.72, 48.1765, 0.4972 ) }
    dend_28 { pt3dadd( 274.899, 404.107, 47.9419, 0.4438 ) }
    dend_28 { pt3dadd( 274.172, 403.3, 47.6608, 0.552 ) }
    dend_28 { pt3dadd( 273.66, 402.669, 47.194, 0.4248 ) }
    dend_28 { pt3dadd( 273.254, 401.719, 46.6942, 0.4896 ) }
    dend_28 { pt3dadd( 272.662, 400.979, 46.1507, 0.6816 ) }
    dend_28 { pt3dadd( 271.949, 400.83, 45.6926, 0.3304 ) }
    dend_28 { pt3dadd( 271.138, 400.145, 45.2838, 0.5146 ) }
    dend_28 { pt3dadd( 270.652, 399.297, 44.9417, 0.2838 ) }
    dend_28 { pt3dadd( 270.977, 398.897, 44.431, 0.3922 ) }
    dend_28 { pt3dadd( 270.204, 398.57, 43.8001, 0.2542 ) }
    dend_28 { pt3dadd( 269.45, 398.798, 43.3056, 0.4576 ) }
    dend_28 { pt3dadd( 268.476, 399.215, 42.9103, 0.4328 ) }
    dend_28 { pt3dadd( 267.578, 399.335, 42.539, 0.4068 ) }
    dend_28 { pt3dadd( 266.587, 398.818, 42.2688, 0.356 ) }
    dend_28 { pt3dadd( 265.588, 398.494, 42.0535, 0.5078 ) }
    dend_28 { pt3dadd( 264.499, 398.57, 41.8317, 0.4804 ) }
    dend_28 { pt3dadd( 263.417, 398.497, 41.6332, 0.4184 ) }
    dend_28 { pt3dadd( 262.334, 398.368, 41.5341, 0.3304 ) }
    dend_28 { pt3dadd( 261.638, 398.678, 41.3277, 0.356 ) }
    dend_28 { pt3dadd( 260.536, 398.459, 41.174, 0.3564 ) }
    dend_28 { pt3dadd( 259.435, 398.25, 41.0183, 0.2542 ) }
    dend_28 { pt3dadd( 258.407, 398.422, 40.9282, 0.4034 ) }
    dend_28 { pt3dadd( 257.371, 398.441, 40.9648, 0.4084 ) }
    dend_28 { pt3dadd( 256.722, 397.924, 40.908, 0.4442 ) }
    dend_28 { pt3dadd( 256.228, 397.526, 40.9332, 0.4588 ) }
    dend_28 { pt3dadd( 255.544, 396.705, 40.9825, 0.4576 ) }
    dend_28 { pt3dadd( 254.612, 396.203, 40.9161, 0.4146 ) }
    dend_28 { pt3dadd( 253.531, 395.925, 40.9004, 0.4352 ) }
    dend_28 { pt3dadd( 252.692, 395.319, 40.868, 0.3984 ) }
    dend_28 { pt3dadd( 251.696, 394.981, 40.8114, 0.5158 ) }
    dend_28 { pt3dadd( 250.864, 394.356, 40.7243, 0.5074 ) }
    dend_28 { pt3dadd( 250.099, 394.11, 40.7224, 0.6304 ) }
    dend_28 { pt3dadd( 249.219, 393.551, 40.6907, 0.4884 ) }
    dend_28 { pt3dadd( 248.138, 393.306, 40.6778, 0.3284 ) }
    dend_28 { pt3dadd( 247.174, 393.615, 40.6969, 0.3466 ) }
    dend_28 { pt3dadd( 246.685, 394.241, 40.5849, 0.4576 ) }
    dend_28 { pt3dadd( 246.296, 394.554, 40.6885, 0.4278 ) }
    dend_28 { pt3dadd( 245.696, 393.692, 40.8542, 0.408 ) }
    dend_28 { pt3dadd( 245.073, 393.281, 40.8344, 0.2458 ) }
    dend_28 { pt3dadd( 244.09, 392.964, 40.8954, 0.5104 ) }
    dend_28 { pt3dadd( 243.388, 392.374, 41.0404, 0.5848 ) }
    dend_28 { pt3dadd( 242.907, 391.412, 41.1575, 0.3304 ) }
    dend_28 { pt3dadd( 242.76, 390.676, 41.1961, 0.3928 ) }
    dend_28 { pt3dadd( 241.925, 390.35, 41.3974, 0.3728 ) }
    dend_28 { pt3dadd( 241.111, 390.063, 41.4145, 0.314 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_28 { pt3dadd( 240.073, 389.78, 41.5481, 0.6546 ) }
    dend_28 { pt3dadd( 239.355, 389.189, 41.7052, 0.4322 ) }
    dend_28 { pt3dadd( 238.753, 388.617, 42.56, 0.4576 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 3/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 298.873, 420.659, 51.758, 0.661 ) }
    dend_27 { pt3dadd( 298.477, 419.362, 51.9154, 0.5826 ) }
    dend_27 { pt3dadd( 298.047, 418.313, 51.9478, 0.714 ) }
    dend_27 { pt3dadd( 297.601, 417.273, 51.8762, 0.753 ) }
    dend_27 { pt3dadd( 297.012, 416.334, 51.718, 0.7074 ) }
    dend_27 { pt3dadd( 296.161, 415.655, 51.5609, 0.6484 ) }
    dend_27 { pt3dadd( 295.16, 415.181, 51.525, 0.6168 ) }
    dend_27 { pt3dadd( 294.159, 414.706, 51.5648, 0.5852 ) }
    dend_27 { pt3dadd( 293.32, 414.431, 51.3612, 0.4718 ) }
    dend_27 { pt3dadd( 292.497, 413.658, 51.1876, 0.4912 ) }
    dend_27 { pt3dadd( 291.895, 413.212, 51.0409, 0.4576 ) }
    dend_27 { pt3dadd( 291.207, 412.857, 50.7741, 0.7034 ) }
    dend_27 { pt3dadd( 290.576, 412.156, 50.6369, 0.7236 ) }
    dend_27 { pt3dadd( 290.028, 411.378, 50.6372, 0.4678 ) }
    dend_27 { pt3dadd( 289.211, 410.796, 50.7002, 0.5062 ) }
    dend_27 { pt3dadd( 288.425, 410.133, 50.808, 0.3304 ) }
    dend_27 { pt3dadd( 287.772, 409.438, 50.8584, 0.6702 ) }
    dend_27 { pt3dadd( 286.932, 409.094, 51.0734, 0.546 ) }
    dend_27 { pt3dadd( 286.161, 408.532, 51.2985, 0.438 ) }
    dend_27 { pt3dadd( 285.56, 408.224, 51.2996, 0.4538 ) }
    dend_27 { pt3dadd( 285.142, 407.837, 51.4746, 0.4576 ) }
    dend_27 { pt3dadd( 284.62, 407.15, 51.5164, 0.3862 ) }
    dend_27 { pt3dadd( 283.611, 407.088, 51.6765, 0.4698 ) }
    dend_27 { pt3dadd( 283.096, 406.57, 51.6989, 0.4404 ) }
    dend_27 { pt3dadd( 282.34, 406.062, 51.9145, 0.5382 ) }
    dend_27 { pt3dadd( 281.479, 405.58, 52.0503, 0.583 ) }
    dend_27 { pt3dadd( 280.497, 405.205, 52.1959, 0.432 ) }
    dend_27 { pt3dadd( 279.782, 404.875, 52.6131, 0.3546 ) }
    dend_27 { pt3dadd( 278.843, 404.633, 53.0138, 0.4432 ) }
    dend_27 { pt3dadd( 277.752, 404.779, 53.354, 0.3814 ) }
    dend_27 { pt3dadd( 277.06, 403.946, 53.5744, 0.4322 ) }
    dend_27 { pt3dadd( 276.355, 403.25, 53.7186, 0.401 ) }
    dend_27 { pt3dadd( 275.704, 402.574, 53.7295, 0.5086 ) }
    dend_27 { pt3dadd( 274.91, 402.053, 53.8622, 0.394 ) }
    dend_27 { pt3dadd( 274.198, 401.291, 53.9274, 0.4732 ) }
    dend_27 { pt3dadd( 273.605, 400.429, 54.0672, 0.532 ) }
    dend_27 { pt3dadd( 273.167, 399.803, 54.0308, 0.3724 ) }
    dend_27 { pt3dadd( 272.655, 399.116, 53.8798, 0.4948 ) }
    dend_27 { pt3dadd( 272.182, 398.197, 53.8583, 0.4576 ) }
    dend_27 { pt3dadd( 271.619, 397.398, 53.7082, 0.3684 ) }
    dend_27 { pt3dadd( 270.866, 396.789, 53.6413, 0.4032 ) }
    dend_27 { pt3dadd( 270.074, 396.23, 53.636, 0.3304 ) }
    dend_27 { pt3dadd( 269.307, 395.722, 53.8353, 0.2712 ) }
    dend_27 { pt3dadd( 268.29, 396.117, 54.0725, 0.3602 ) }
    dend_27 { pt3dadd( 267.499, 395.373, 54.2567, 0.4576 ) }
    dend_27 { pt3dadd( 266.678, 394.932, 54.5894, 0.356 ) }
    dend_27 { pt3dadd( 265.74, 394.428, 54.8005, 0.3814 ) }
    dend_27 { pt3dadd( 264.957, 393.845, 54.9114, 0.4636 ) }
    dend_27 { pt3dadd( 264.617, 392.868, 54.8948, 0.41 ) }
    dend_27 { pt3dadd( 264.25, 391.809, 54.8036, 0.4244 ) }
    dend_27 { pt3dadd( 263.612, 390.89, 54.7366, 0.4118 ) }
    dend_27 { pt3dadd( 262.911, 390.018, 54.696, 0.4104 ) }
    dend_27 { pt3dadd( 262.327, 389.171, 54.6994, 0.536 ) }
    dend_27 { pt3dadd( 261.651, 388.332, 54.6854, 0.3238 ) }
    dend_27 { pt3dadd( 261.031, 387.387, 54.6389, 0.2552 ) }
    dend_27 { pt3dadd( 260.358, 386.529, 54.6809, 0.5716 ) }
    dend_27 { pt3dadd( 259.78, 385.613, 54.6966, 0.2542 ) }
    dend_27 { pt3dadd( 258.753, 385.25, 54.6986, 0.3416 ) }
    dend_27 { pt3dadd( 257.762, 384.737, 54.665, 0.369 ) }
    dend_27 { pt3dadd( 256.742, 384.265, 54.6874, 0.2918 ) }
    dend_27 { pt3dadd( 256.106, 383.449, 54.6398, 0.4576 ) }
    dend_27 { pt3dadd( 255.848, 382.354, 54.6316, 0.3378 ) }
    dend_27 { pt3dadd( 255.364, 381.379, 54.6563, 0.2288 ) }
    dend_27 { pt3dadd( 254.612, 380.62, 54.7596, 0.2822 ) }
    dend_27 { pt3dadd( 254.331, 379.767, 54.8111, 0.3084 ) }
    dend_27 { pt3dadd( 254.4, 378.694, 54.7523, 0.4158 ) }
    dend_27 { pt3dadd( 253.993, 377.745, 54.8153, 0.544 ) }
    dend_27 { pt3dadd( 253.775, 376.726, 54.8814, 0.435 ) }
    dend_27 { pt3dadd( 253.296, 375.953, 54.8993, 0.4 ) }
    dend_27 { pt3dadd( 252.759, 375.084, 54.7492, 0.4576 ) }
    dend_27 { pt3dadd( 251.744, 374.581, 54.6123, 0.3756 ) }
    dend_27 { pt3dadd( 251.048, 373.834, 54.4984, 0.4368 ) }
    dend_27 { pt3dadd( 250.513, 373.236, 54.3908, 0.3898 ) }
    dend_27 { pt3dadd( 250.112, 372.254, 54.3628, 0.3836 ) }
    dend_27 { pt3dadd( 249.953, 371.42, 54.2934, 0.527 ) }
    dend_27 { pt3dadd( 249.621, 370.397, 54.3357, 0.4864 ) }
    dend_27 { pt3dadd( 249.387, 369.413, 54.2945, 0.312 ) }
    dend_27 { pt3dadd( 248.826, 368.736, 54.383, 0.28 ) }
    dend_27 { pt3dadd( 248.116, 368.088, 54.3516, 0.3314 ) }
    dend_27 { pt3dadd( 247.351, 367.531, 54.3052, 0.3664 ) }
    dend_27 { pt3dadd( 246.387, 367.079, 54.2475, 0.2638 ) }
    dend_27 { pt3dadd( 245.746, 366.759, 54.0658, 0.4468 ) }
    dend_27 { pt3dadd( 245.023, 366.331, 54.1862, 0.2846 ) }
    dend_27 { pt3dadd( 244.279, 365.686, 54.2704, 0.5008 ) }
    dend_27 { pt3dadd( 243.57, 364.828, 54.3183, 0.4304 ) }
    dend_27 { pt3dadd( 242.877, 364.124, 54.4113, 0.4054 ) }
    dend_27 { pt3dadd( 242.018, 363.441, 54.434, 0.3796 ) }
    dend_27 { pt3dadd( 241.025, 363.166, 54.3516, 0.4618 ) }
    dend_27 { pt3dadd( 240.469, 362.419, 53.76, 0.4576 ) }
    // Section: apic_17, id: apic_17, parent: apic_15 (entry count 92/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 374.774, 440.669, 49.6885, 0.4322 ) }
    apic_17 { pt3dadd( 374.67, 440.407, 50.806, 0.6572 ) }
    apic_17 { pt3dadd( 375.749, 440.431, 50.8805, 0.3496 ) }
    apic_17 { pt3dadd( 376.75, 440.149, 50.8455, 0.2288 ) }
    apic_17 { pt3dadd( 377.751, 439.788, 50.9183, 0.3168 ) }
    apic_17 { pt3dadd( 378.535, 439.039, 51.0188, 0.3666 ) }
    apic_17 { pt3dadd( 379.072, 438.266, 51.1106, 0.5214 ) }
    apic_17 { pt3dadd( 380.164, 438.038, 51.1795, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    apic_17 { pt3dadd( 381.293, 438.038, 51.2422, 0.458 ) }
    apic_17 { pt3dadd( 382.188, 437.914, 51.555, 0.6288 ) }
    apic_17 { pt3dadd( 382.97, 437.2, 51.8798, 0.3836 ) }
    apic_17 { pt3dadd( 383.914, 436.624, 52.2122, 0.4368 ) }
    apic_17 { pt3dadd( 384.993, 436.266, 52.4656, 0.4576 ) }
    apic_17 { pt3dadd( 386.073, 435.914, 52.6652, 0.4942 ) }
    apic_17 { pt3dadd( 387.07, 435.668, 52.9379, 0.5338 ) }
    apic_17 { pt3dadd( 388.065, 435.694, 53.0774, 0.3494 ) }
    apic_17 { pt3dadd( 388.753, 434.924, 53.3154, 0.5198 ) }
    apic_17 { pt3dadd( 389.492, 434.07, 53.5875, 0.492 ) }
    apic_17 { pt3dadd( 390.308, 433.397, 53.804, 0.3648 ) }
    apic_17 { pt3dadd( 391.038, 432.79, 54.0434, 0.4106 ) }
    apic_17 { pt3dadd( 391.907, 432.117, 54.2713, 0.3814 ) }
    apic_17 { pt3dadd( 392.906, 431.953, 54.5754, 0.3018 ) }
    apic_17 { pt3dadd( 393.931, 431.622, 54.7761, 0.4576 ) }
    apic_17 { pt3dadd( 394.543, 430.682, 55.0054, 0.4576 ) }
    apic_17 { pt3dadd( 395.465, 430.026, 55.2544, 0.4508 ) }
    apic_17 { pt3dadd( 396.355, 429.341, 55.5212, 0.4322 ) }
    apic_17 { pt3dadd( 397.347, 428.8, 55.7399, 0.401 ) }
    apic_17 { pt3dadd( 398.232, 428.347, 55.9504, 0.266 ) }
    apic_17 { pt3dadd( 398.503, 427.556, 56.4144, 0.6336 ) }
    apic_17 { pt3dadd( 399.012, 426.681, 56.9083, 0.3196 ) }
    apic_17 { pt3dadd( 399.478, 425.786, 57.5604, 0.335 ) }
    apic_17 { pt3dadd( 399.428, 425.154, 58.2212, 0.4196 ) }
    apic_17 { pt3dadd( 398.859, 424.32, 58.987, 0.395 ) }
    apic_17 { pt3dadd( 397.998, 423.852, 59.766, 0.2412 ) }
    apic_17 { pt3dadd( 398.059, 423.404, 60.8597, 0.358 ) }
    apic_17 { pt3dadd( 397.26, 423.16, 62.0808, 0.3814 ) }
    apic_17 { pt3dadd( 396.723, 422.944, 63.4572, 0.4172 ) }
    apic_17 { pt3dadd( 395.942, 422.676, 64.8376, 0.5348 ) }
    apic_17 { pt3dadd( 395.059, 422.105, 66.0811, 0.3852 ) }
    apic_17 { pt3dadd( 394.865, 421.454, 67.394, 0.6102 ) }
    apic_17 { pt3dadd( 394.396, 420.46, 68.3945, 0.679 ) }
    apic_17 { pt3dadd( 393.933, 419.492, 69.235, 0.7426 ) }
    apic_17 { pt3dadd( 393.612, 418.638, 70.0655, 0.5602 ) }
    apic_17 { pt3dadd( 392.966, 418.129, 70.9139, 0.6418 ) }
    apic_17 { pt3dadd( 392.392, 417.366, 71.6495, 0.4868 ) }
    apic_17 { pt3dadd( 391.937, 416.623, 72.1742, 0.5644 ) }
    apic_17 { pt3dadd( 391.32, 415.958, 72.7006, 0.3862 ) }
    apic_17 { pt3dadd( 391.477, 415.656, 73.3894, 0.566 ) }
    apic_17 { pt3dadd( 391.25, 414.614, 73.9357, 0.3566 ) }
    apic_17 { pt3dadd( 391.373, 413.63, 74.31, 0.4888 ) }
    apic_17 { pt3dadd( 392.049, 412.755, 74.76, 0.5338 ) }
    // Section: apic_16, id: apic_16, parent: apic_15 (entry count 43/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 374.774, 440.669, 49.6885, 0.4322 ) }
    apic_16 { pt3dadd( 374.91, 440.204, 49.7017, 0.6028 ) }
    apic_16 { pt3dadd( 375.253, 439.232, 49.8008, 0.6318 ) }
    apic_16 { pt3dadd( 375.783, 438.5, 50.0044, 0.6438 ) }
    apic_16 { pt3dadd( 375.949, 437.755, 49.9408, 0.355 ) }
    apic_16 { pt3dadd( 376.231, 436.76, 49.8599, 0.4132 ) }
    apic_16 { pt3dadd( 376.581, 436.465, 50.0982, 0.6394 ) }
    apic_16 { pt3dadd( 376.834, 435.571, 50.2351, 0.5278 ) }
    apic_16 { pt3dadd( 377.147, 434.916, 50.4778, 0.5596 ) }
    apic_16 { pt3dadd( 377.72, 434.043, 50.6237, 0.4556 ) }
    apic_16 { pt3dadd( 378.321, 433.265, 50.9379, 0.6076 ) }
    apic_16 { pt3dadd( 378.746, 432.504, 51.2372, 0.7064 ) }
    apic_16 { pt3dadd( 379.202, 431.7, 51.401, 0.4856 ) }
    apic_16 { pt3dadd( 379.715, 431.08, 51.7686, 0.5676 ) }
    apic_16 { pt3dadd( 380.534, 430.461, 52.1139, 0.5148 ) }
    apic_16 { pt3dadd( 381.295, 429.674, 52.4084, 0.5338 ) }
    apic_16 { pt3dadd( 381.872, 428.557, 52.7363, 0.5158 ) }
    apic_16 { pt3dadd( 382.539, 427.648, 53.0407, 0.6278 ) }
    apic_16 { pt3dadd( 383.352, 426.942, 53.3534, 0.5022 ) }
    apic_16 { pt3dadd( 383.806, 426.058, 53.4724, 0.5218 ) }
    apic_16 { pt3dadd( 383.521, 425.367, 53.7891, 0.4224 ) }
    apic_16 { pt3dadd( 383.84, 424.464, 54.0277, 0.453 ) }
    apic_16 { pt3dadd( 384.703, 423.78, 54.115, 0.5054 ) }
    apic_16 { pt3dadd( 385.514, 423.074, 54.2248, 0.4068 ) }
    apic_16 { pt3dadd( 386.568, 423.051, 54.3931, 0.4422 ) }
    apic_16 { pt3dadd( 387.026, 422.208, 54.5894, 0.6648 ) }
    apic_16 { pt3dadd( 387.529, 421.194, 54.7014, 0.7954 ) }
    apic_16 { pt3dadd( 388.264, 420.362, 54.8136, 0.6982 ) }
    apic_16 { pt3dadd( 388.868, 419.903, 54.7655, 0.7462 ) }
    apic_16 { pt3dadd( 389.754, 419.284, 54.7613, 0.8912 ) }
    apic_16 { pt3dadd( 390.658, 418.799, 54.8338, 0.3556 ) }
    apic_16 { pt3dadd( 391.518, 418.267, 54.8982, 0.3132 ) }
    apic_16 { pt3dadd( 392.278, 417.765, 54.8022, 0.535 ) }
    apic_16 { pt3dadd( 393.03, 417.237, 54.7803, 0.5988 ) }
    apic_16 { pt3dadd( 393.806, 416.525, 54.619, 0.524 ) }
    apic_16 { pt3dadd( 394.606, 415.747, 54.4774, 0.6626 ) }
    apic_16 { pt3dadd( 395.235, 414.997, 54.2643, 0.5662 ) }
    apic_16 { pt3dadd( 395.914, 414.356, 54.2091, 0.6216 ) }
    apic_16 { pt3dadd( 396.739, 413.678, 54.1646, 0.6906 ) }
    apic_16 { pt3dadd( 397.549, 412.888, 54.1612, 0.5262 ) }
    apic_16 { pt3dadd( 398.288, 412.183, 54.2629, 0.521 ) }
    apic_16 { pt3dadd( 399.323, 412.142, 54.5154, 0.4068 ) }
    apic_16 { pt3dadd( 399.198, 411.478, 54.7722, 0.5578 ) }
    apic_16 { pt3dadd( 399.859, 410.757, 54.9959, 0.5758 ) }
    apic_16 { pt3dadd( 400.812, 410.667, 55.2877, 0.3874 ) }
    apic_16 { pt3dadd( 401.315, 410.147, 55.3134, 0.3712 ) }
    apic_16 { pt3dadd( 401.759, 409.245, 55.1589, 0.53 ) }
    apic_16 { pt3dadd( 402.705, 408.787, 54.9184, 0.471 ) }
    apic_16 { pt3dadd( 403.627, 408.214, 54.5997, 0.6264 ) }
    apic_16 { pt3dadd( 404.407, 407.708, 54.3368, 0.5312 ) }
    apic_16 { pt3dadd( 405.211, 407.0, 54.133, 0.483 ) }
    apic_16 { pt3dadd( 405.597, 405.963, 54.0347, 0.592 ) }
    apic_16 { pt3dadd( 406.438, 405.24, 53.8852, 0.6302 ) }
    apic_16 { pt3dadd( 407.305, 404.653, 53.7639, 0.5062 ) }
    apic_16 { pt3dadd( 407.865, 403.755, 53.6477, 0.316 ) }
    apic_16 { pt3dadd( 408.414, 402.889, 53.6124, 0.3216 ) }
    apic_16 { pt3dadd( 408.951, 401.983, 53.496, 0.3086 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    apic_16 { pt3dadd( 409.661, 401.315, 53.2232, 0.356 ) }
    apic_16 { pt3dadd( 410.294, 400.464, 53.0701, 0.6356 ) }
    apic_16 { pt3dadd( 411.004, 399.652, 52.9472, 0.4896 ) }
    apic_16 { pt3dadd( 411.491, 399.047, 52.6904, 0.4724 ) }
    apic_16 { pt3dadd( 411.726, 398.341, 51.52, 0.661 ) }
    // Section: apic_14, id: apic_14, parent: apic_12 (entry count 5/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 359.666, 456.644, 49.3422, 0.6102 ) }
    apic_14 { pt3dadd( 360.246, 457.257, 50.4, 0.2796 ) }
    apic_14 { pt3dadd( 360.789, 458.32, 50.6167, 0.483 ) }
    apic_14 { pt3dadd( 361.161, 459.239, 50.7763, 0.3814 ) }
    apic_14 { pt3dadd( 360.923, 460.339, 50.8693, 0.4576 ) }
    apic_14 { pt3dadd( 360.288, 460.803, 51.03, 0.4888 ) }
    apic_14 { pt3dadd( 359.825, 461.494, 50.972, 0.536 ) }
    apic_14 { pt3dadd( 359.305, 462.333, 51.0776, 0.5802 ) }
    apic_14 { pt3dadd( 358.559, 462.798, 51.2506, 0.262 ) }
    apic_14 { pt3dadd( 358.117, 463.747, 51.3327, 0.578 ) }
    apic_14 { pt3dadd( 357.505, 464.69, 51.3951, 0.4294 ) }
    apic_14 { pt3dadd( 357.386, 465.81, 51.4259, 0.356 ) }
    apic_14 { pt3dadd( 357.382, 466.943, 51.5127, 0.4808 ) }
    apic_14 { pt3dadd( 357.595, 467.919, 51.6816, 0.4544 ) }
    apic_14 { pt3dadd( 357.434, 469.011, 51.7938, 0.5224 ) }
    apic_14 { pt3dadd( 357.519, 470.028, 52.0626, 0.5558 ) }
    apic_14 { pt3dadd( 357.744, 470.842, 52.4194, 0.4892 ) }
    apic_14 { pt3dadd( 357.344, 471.621, 52.621, 0.4672 ) }
    apic_14 { pt3dadd( 356.961, 472.417, 52.8965, 0.4318 ) }
    apic_14 { pt3dadd( 356.252, 473.134, 53.0225, 0.5716 ) }
    apic_14 { pt3dadd( 355.665, 473.943, 53.2115, 0.3772 ) }
    apic_14 { pt3dadd( 355.556, 475.031, 53.4122, 0.4898 ) }
    apic_14 { pt3dadd( 355.959, 476.009, 53.7306, 0.4604 ) }
    apic_14 { pt3dadd( 356.013, 477.091, 54.1352, 0.3304 ) }
    apic_14 { pt3dadd( 356.094, 478.131, 54.4415, 0.4912 ) }
    apic_14 { pt3dadd( 355.877, 479.018, 54.7635, 0.4684 ) }
    apic_14 { pt3dadd( 355.784, 480.045, 54.9665, 0.3698 ) }
    apic_14 { pt3dadd( 356.039, 480.371, 55.2068, 0.498 ) }
    apic_14 { pt3dadd( 356.661, 480.938, 55.4263, 0.5088 ) }
    apic_14 { pt3dadd( 357.195, 481.347, 55.7855, 0.6038 ) }
    apic_14 { pt3dadd( 358.097, 481.871, 56.1459, 0.4178 ) }
    apic_14 { pt3dadd( 358.479, 482.714, 56.5765, 0.4458 ) }
    apic_14 { pt3dadd( 358.856, 483.572, 56.9167, 0.5986 ) }
    apic_14 { pt3dadd( 359.397, 484.374, 57.2796, 0.5316 ) }
    apic_14 { pt3dadd( 360.109, 484.484, 57.787, 0.311 ) }
    apic_14 { pt3dadd( 361.234, 484.37, 58.2106, 0.4428 ) }
    apic_14 { pt3dadd( 361.972, 484.874, 58.5315, 0.512 ) }
    apic_14 { pt3dadd( 362.592, 485.406, 58.975, 0.5832 ) }
    apic_14 { pt3dadd( 362.997, 486.292, 59.3625, 0.288 ) }
    apic_14 { pt3dadd( 363.354, 486.961, 59.8024, 0.2908 ) }
    apic_14 { pt3dadd( 363.501, 487.687, 60.298, 0.2298 ) }
    apic_14 { pt3dadd( 364.372, 488.274, 60.674, 0.6864 ) }
    apic_14 { pt3dadd( 364.947, 488.625, 61.2142, 0.472 ) }
    apic_14 { pt3dadd( 365.697, 489.449, 61.6636, 0.4258 ) }
    apic_14 { pt3dadd( 366.641, 490.078, 62.0995, 0.7048 ) }
    apic_14 { pt3dadd( 367.231, 490.951, 62.4893, 0.4678 ) }
    apic_14 { pt3dadd( 367.778, 491.348, 63.079, 0.34 ) }
    apic_14 { pt3dadd( 368.638, 491.92, 63.5275, 0.4736 ) }
    apic_14 { pt3dadd( 369.069, 492.732, 64.1194, 0.3844 ) }
    apic_14 { pt3dadd( 369.427, 493.542, 64.7483, 0.2288 ) }
    apic_14 { pt3dadd( 370.23, 493.979, 65.4338, 0.4416 ) }
    apic_14 { pt3dadd( 370.97, 494.539, 65.893, 0.3304 ) }
    apic_14 { pt3dadd( 371.342, 495.59, 66.1758, 0.2542 ) }
    apic_14 { pt3dadd( 371.914, 495.695, 66.92, 0.4576 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 59/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 359.666, 456.644, 49.3422, 0.6102 ) }
    apic_13 { pt3dadd( 360.331, 456.599, 49.1767, 0.293 ) }
    apic_13 { pt3dadd( 361.407, 456.616, 48.9191, 0.334 ) }
    apic_13 { pt3dadd( 362.37, 457.108, 48.6203, 0.3708 ) }
    apic_13 { pt3dadd( 363.305, 457.728, 48.3056, 0.3814 ) }
    apic_13 { pt3dadd( 364.286, 458.284, 48.0934, 0.3814 ) }
    apic_13 { pt3dadd( 365.198, 458.943, 47.9906, 0.3814 ) }
    apic_13 { pt3dadd( 366.039, 459.71, 47.9004, 0.397 ) }
    apic_13 { pt3dadd( 366.897, 460.403, 47.7179, 0.4544 ) }
    apic_13 { pt3dadd( 367.821, 461.003, 47.4468, 0.5316 ) }
    apic_13 { pt3dadd( 368.637, 461.763, 47.1464, 0.5758 ) }
    apic_13 { pt3dadd( 369.45, 462.558, 46.8804, 0.5682 ) }
    apic_13 { pt3dadd( 370.352, 463.26, 46.6802, 0.5428 ) }
    apic_13 { pt3dadd( 371.211, 464.012, 46.5508, 0.5504 ) }
    apic_13 { pt3dadd( 372.009, 464.831, 46.4831, 0.5428 ) }
    apic_13 { pt3dadd( 372.724, 465.721, 46.452, 0.5338 ) }
    apic_13 { pt3dadd( 373.404, 466.642, 46.4346, 0.5004 ) }
    apic_13 { pt3dadd( 374.11, 467.541, 46.4187, 0.4996 ) }
    apic_13 { pt3dadd( 374.976, 468.273, 46.3996, 0.4914 ) }
    apic_13 { pt3dadd( 375.901, 468.945, 46.3669, 0.5 ) }
    apic_13 { pt3dadd( 376.66, 469.761, 46.2756, 0.5084 ) }
    apic_13 { pt3dadd( 377.39, 470.613, 46.2336, 0.5084 ) }
    apic_13 { pt3dadd( 378.159, 471.445, 46.2706, 0.4544 ) }
    apic_13 { pt3dadd( 378.869, 472.337, 46.3238, 0.396 ) }
    apic_13 { pt3dadd( 379.648, 473.17, 46.3725, 0.3814 ) }
    apic_13 { pt3dadd( 380.529, 473.899, 46.4148, 0.4366 ) }
    apic_13 { pt3dadd( 381.296, 474.738, 46.4475, 0.4576 ) }
    apic_13 { pt3dadd( 381.859, 475.728, 46.4596, 0.4204 ) }
    apic_13 { pt3dadd( 382.424, 476.722, 46.4556, 0.3308 ) }
    apic_13 { pt3dadd( 383.294, 477.429, 46.4461, 0.2668 ) }
    apic_13 { pt3dadd( 384.323, 477.922, 46.4327, 0.235 ) }
    apic_13 { pt3dadd( 385.383, 478.353, 46.4128, 0.2484 ) }
    apic_13 { pt3dadd( 386.282, 479.04, 46.3854, 0.2738 ) }
    apic_13 { pt3dadd( 387.152, 479.782, 46.3509, 0.319 ) }
    apic_13 { pt3dadd( 388.198, 480.205, 46.3086, 0.3506 ) }
    apic_13 { pt3dadd( 389.314, 480.384, 46.2216, 0.4168 ) }
    apic_13 { pt3dadd( 390.3, 480.884, 46.0849, 0.4944 ) }
    apic_13 { pt3dadd( 391.134, 481.654, 45.9861, 0.592 ) }
    apic_13 { pt3dadd( 391.889, 482.512, 45.9628, 0.6312 ) }
    apic_13 { pt3dadd( 392.558, 483.387, 46.0894, 0.6144 ) }
    apic_13 { pt3dadd( 393.242, 484.293, 46.2636, 0.5246 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_13 { pt3dadd( 393.903, 485.225, 46.4458, 0.4226 ) }
    apic_13 { pt3dadd( 394.672, 486.071, 46.6225, 0.3208 ) }
    apic_13 { pt3dadd( 395.555, 486.706, 46.7382, 0.294 ) }
    apic_13 { pt3dadd( 396.624, 486.932, 46.9636, 0.2796 ) }
    apic_13 { pt3dadd( 397.426, 487.528, 47.2352, 0.3214 ) }
    apic_13 { pt3dadd( 397.848, 488.353, 47.5742, 0.2288 ) }
    apic_13 { pt3dadd( 398.889, 488.603, 47.7232, 0.2288 ) }
    apic_13 { pt3dadd( 399.74, 489.106, 47.9374, 0.2288 ) }
    apic_13 { pt3dadd( 400.414, 489.971, 48.0925, 0.2288 ) }
    apic_13 { pt3dadd( 401.323, 490.547, 48.2252, 0.2288 ) }
    apic_13 { pt3dadd( 401.782, 491.347, 48.3081, 0.2288 ) }
    apic_13 { pt3dadd( 402.736, 491.756, 48.3585, 0.2288 ) }
    apic_13 { pt3dadd( 403.585, 492.438, 48.3983, 0.2288 ) }
    apic_13 { pt3dadd( 403.972, 493.293, 48.4084, 0.2288 ) }
    apic_13 { pt3dadd( 404.518, 493.983, 48.4081, 0.2288 ) }
    apic_13 { pt3dadd( 404.518, 495.127, 48.4002, 0.2288 ) }
    apic_13 { pt3dadd( 405.109, 495.813, 48.3594, 0.2288 ) }
    apic_13 { pt3dadd( 405.694, 496.61, 48.3426, 0.2334 ) }
    apic_13 { pt3dadd( 406.006, 497.702, 48.3347, 0.2796 ) }
    apic_13 { pt3dadd( 405.793, 498.794, 48.3098, 0.2824 ) }
    apic_13 { pt3dadd( 405.706, 499.906, 48.3812, 0.2288 ) }
    apic_13 { pt3dadd( 405.901, 500.867, 48.629, 0.2288 ) }
    apic_13 { pt3dadd( 406.217, 501.962, 48.8611, 0.2886 ) }
    apic_13 { pt3dadd( 406.349, 503.083, 49.0731, 0.281 ) }
    apic_13 { pt3dadd( 406.42, 504.218, 49.2859, 0.2412 ) }
    apic_13 { pt3dadd( 406.936, 505.091, 49.5163, 0.2288 ) }
    apic_13 { pt3dadd( 407.525, 505.915, 49.8047, 0.2288 ) }
    apic_13 { pt3dadd( 407.933, 506.909, 50.0276, 0.2288 ) }
    apic_13 { pt3dadd( 407.558, 507.945, 50.2538, 0.2288 ) }
    apic_13 { pt3dadd( 407.474, 509.058, 50.4448, 0.2288 ) }
    apic_13 { pt3dadd( 407.755, 510.135, 50.645, 0.2288 ) }
    apic_13 { pt3dadd( 408.565, 510.931, 50.864, 0.2288 ) }
    apic_13 { pt3dadd( 409.568, 511.454, 51.0532, 0.2288 ) }
    apic_13 { pt3dadd( 410.651, 511.757, 51.2949, 0.2288 ) }
    apic_13 { pt3dadd( 411.686, 511.887, 51.6524, 0.2288 ) }
    apic_13 { pt3dadd( 412.426, 511.959, 52.3141, 0.483 ) }
    apic_13 { pt3dadd( 412.87, 511.368, 53.0835, 0.419 ) }
    apic_13 { pt3dadd( 413.645, 511.44, 53.9812, 0.3772 ) }
    apic_13 { pt3dadd( 414.35, 511.919, 54.8853, 0.356 ) }
    apic_13 { pt3dadd( 414.767, 512.272, 55.8846, 0.505 ) }
    apic_13 { pt3dadd( 415.82, 512.283, 56.6656, 0.2744 ) }
    apic_13 { pt3dadd( 416.68, 512.634, 57.106, 0.4576 ) }
    apic_13 { pt3dadd( 417.631, 512.8, 57.372, 0.4684 ) }
    apic_13 { pt3dadd( 417.903, 513.527, 57.7606, 0.2288 ) }
    apic_13 { pt3dadd( 418.626, 513.906, 58.1078, 0.2434 ) }
    apic_13 { pt3dadd( 419.252, 514.554, 58.326, 0.341 ) }
    apic_13 { pt3dadd( 419.047, 515.143, 58.7866, 0.6406 ) }
    apic_13 { pt3dadd( 419.162, 515.776, 59.2497, 0.6372 ) }
    apic_13 { pt3dadd( 419.72, 516.455, 59.5577, 0.4948 ) }
    apic_13 { pt3dadd( 420.658, 516.773, 59.724, 0.6356 ) }
    apic_13 { pt3dadd( 421.694, 516.966, 59.8629, 0.7218 ) }
    apic_13 { pt3dadd( 422.326, 517.667, 59.8088, 0.5882 ) }
    apic_13 { pt3dadd( 422.899, 518.582, 59.7481, 0.483 ) }
    apic_13 { pt3dadd( 423.478, 519.323, 59.6047, 0.654 ) }
    apic_13 { pt3dadd( 423.432, 519.948, 59.8172, 0.6924 ) }
    apic_13 { pt3dadd( 424.04, 520.748, 60.1073, 0.5816 ) }
    apic_13 { pt3dadd( 424.86, 521.399, 60.4593, 0.8152 ) }
    apic_13 { pt3dadd( 425.339, 522.27, 60.7065, 0.4768 ) }
    apic_13 { pt3dadd( 425.417, 523.205, 61.035, 0.4576 ) }
    apic_13 { pt3dadd( 425.454, 524.339, 61.3505, 0.4714 ) }
    apic_13 { pt3dadd( 425.777, 525.052, 61.7632, 0.7756 ) }
    apic_13 { pt3dadd( 426.38, 525.761, 62.1533, 0.6374 ) }
    apic_13 { pt3dadd( 426.934, 526.455, 62.4478, 0.3798 ) }
    apic_13 { pt3dadd( 427.77, 527.16, 62.7001, 0.729 ) }
    apic_13 { pt3dadd( 428.247, 528.122, 63.0042, 0.4368 ) }
    apic_13 { pt3dadd( 429.141, 528.632, 63.1274, 0.2796 ) }
    apic_13 { pt3dadd( 429.738, 529.384, 63.191, 0.2796 ) }
    apic_13 { pt3dadd( 429.572, 529.959, 63.553, 0.2288 ) }
    apic_13 { pt3dadd( 430.055, 530.247, 64.0965, 0.235 ) }
    apic_13 { pt3dadd( 430.899, 530.657, 64.4266, 0.5874 ) }
    apic_13 { pt3dadd( 431.829, 531.029, 64.762, 0.5634 ) }
    apic_13 { pt3dadd( 432.397, 531.688, 64.9359, 0.5924 ) }
    apic_13 { pt3dadd( 433.064, 532.398, 65.0686, 0.507 ) }
    apic_13 { pt3dadd( 433.8, 532.685, 65.2862, 0.5846 ) }
    apic_13 { pt3dadd( 434.191, 533.612, 65.4254, 0.5722 ) }
    apic_13 { pt3dadd( 434.588, 534.653, 65.529, 0.5988 ) }
    apic_13 { pt3dadd( 435.197, 535.278, 65.6628, 0.347 ) }
    apic_13 { pt3dadd( 435.71, 535.884, 65.7812, 0.7106 ) }
    apic_13 { pt3dadd( 435.723, 536.772, 65.9649, 0.505 ) }
    apic_13 { pt3dadd( 435.521, 537.794, 66.36, 0.5084 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 80/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 343.277, 438.876, 53.4649, 0.4322 ) }
    apic_6 { pt3dadd( 342.366, 438.203, 54.3259, 0.2336 ) }
    apic_6 { pt3dadd( 341.928, 437.678, 56.0568, 0.3152 ) }
    apic_6 { pt3dadd( 341.513, 437.112, 56.8224, 0.4244 ) }
    apic_6 { pt3dadd( 340.899, 436.449, 57.6556, 0.4068 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 85/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 343.277, 438.876, 53.4649, 0.4322 ) }
    apic_5 { pt3dadd( 342.285, 438.915, 53.6763, 0.3048 ) }
    apic_5 { pt3dadd( 341.731, 439.763, 53.8219, 0.2802 ) }
    apic_5 { pt3dadd( 341.164, 440.704, 54.0092, 0.2288 ) }
    apic_5 { pt3dadd( 340.721, 441.655, 54.1993, 0.2288 ) }
    apic_5 { pt3dadd( 340.334, 442.564, 54.4043, 0.2288 ) }
    apic_5 { pt3dadd( 339.474, 443.275, 54.6356, 0.2288 ) }
    apic_5 { pt3dadd( 339.005, 443.901, 55.0892, 0.2288 ) }
    apic_5 { pt3dadd( 338.115, 444.546, 55.5279, 0.241 ) }
    apic_5 { pt3dadd( 337.244, 445.158, 55.902, 0.3814 ) }
    apic_5 { pt3dadd( 336.386, 445.754, 56.2078, 0.4248 ) }
    apic_5 { pt3dadd( 335.539, 446.5, 56.5104, 0.3702 ) }
    apic_5 { pt3dadd( 334.599, 447.103, 56.7269, 0.345 ) }
    apic_5 { pt3dadd( 333.752, 447.532, 57.0853, 0.2288 ) }
    apic_5 { pt3dadd( 332.937, 447.979, 57.5414, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_5 { pt3dadd( 332.223, 448.582, 57.9998, 0.2288 ) }
    apic_5 { pt3dadd( 331.289, 449.099, 58.3556, 0.2462 ) }
    apic_5 { pt3dadd( 330.321, 449.659, 58.5962, 0.3572 ) }
    apic_5 { pt3dadd( 329.319, 449.943, 58.7135, 0.4094 ) }
    apic_5 { pt3dadd( 328.248, 450.098, 58.8269, 0.4164 ) }
    apic_5 { pt3dadd( 327.4, 450.728, 58.9428, 0.2796 ) }
    apic_5 { pt3dadd( 326.382, 451.038, 59.1749, 0.2898 ) }
    apic_5 { pt3dadd( 325.276, 451.149, 59.4625, 0.3938 ) }
    apic_5 { pt3dadd( 324.261, 451.552, 59.726, 0.4948 ) }
    apic_5 { pt3dadd( 323.277, 451.994, 60.0382, 0.331 ) }
    apic_5 { pt3dadd( 322.306, 452.256, 60.3884, 0.295 ) }
    apic_5 { pt3dadd( 321.436, 452.902, 60.667, 0.4794 ) }
    apic_5 { pt3dadd( 320.608, 453.242, 60.8558, 0.6102 ) }
    apic_5 { pt3dadd( 319.672, 453.817, 61.0708, 0.3766 ) }
    apic_5 { pt3dadd( 318.898, 454.408, 61.1442, 0.4176 ) }
    apic_5 { pt3dadd( 318.229, 455.009, 61.3088, 0.3454 ) }
    apic_5 { pt3dadd( 317.596, 455.925, 61.423, 0.2288 ) }
    apic_5 { pt3dadd( 316.707, 456.454, 61.4678, 0.2288 ) }
    apic_5 { pt3dadd( 315.947, 457.036, 61.5871, 0.2288 ) }
    apic_5 { pt3dadd( 315.1, 457.6, 61.6795, 0.3654 ) }
    apic_5 { pt3dadd( 313.996, 457.801, 61.6882, 0.2612 ) }
    apic_5 { pt3dadd( 312.875, 457.943, 61.6879, 0.3044 ) }
    apic_5 { pt3dadd( 311.933, 458.175, 61.5278, 0.5294 ) }
    apic_5 { pt3dadd( 310.828, 458.238, 61.3337, 0.5688 ) }
    apic_5 { pt3dadd( 309.696, 458.246, 61.1654, 0.5324 ) }
    apic_5 { pt3dadd( 308.704, 457.884, 61.0498, 0.4772 ) }
    apic_5 { pt3dadd( 307.742, 457.714, 60.9356, 0.733 ) }
    apic_5 { pt3dadd( 306.909, 457.399, 60.6278, 0.5786 ) }
    apic_5 { pt3dadd( 305.875, 457.363, 60.4971, 0.6388 ) }
    apic_5 { pt3dadd( 304.893, 457.371, 60.5623, 0.5556 ) }
    apic_5 { pt3dadd( 304.084, 457.368, 60.3954, 0.231 ) }
    apic_5 { pt3dadd( 303.106, 457.142, 60.2983, 0.4252 ) }
    apic_5 { pt3dadd( 302.026, 457.388, 60.3274, 0.6034 ) }
    apic_5 { pt3dadd( 300.973, 457.474, 60.5167, 0.504 ) }
    apic_5 { pt3dadd( 299.927, 457.379, 60.6407, 0.4522 ) }
    apic_5 { pt3dadd( 298.88, 457.261, 60.8112, 0.5338 ) }
    apic_5 { pt3dadd( 298.319, 457.371, 60.6642, 0.4678 ) }
    apic_5 { pt3dadd( 297.303, 457.591, 60.5391, 0.316 ) }
    apic_5 { pt3dadd( 296.328, 457.712, 60.639, 0.2288 ) }
    apic_5 { pt3dadd( 295.917, 457.829, 60.9977, 0.2288 ) }
    apic_5 { pt3dadd( 295.035, 458.111, 61.271, 0.4576 ) }
    apic_5 { pt3dadd( 294.176, 458.172, 61.3357, 0.539 ) }
    apic_5 { pt3dadd( 293.27, 458.286, 61.4328, 0.5504 ) }
    apic_5 { pt3dadd( 292.329, 458.121, 61.7252, 0.2288 ) }
    apic_5 { pt3dadd( 291.277, 458.445, 61.978, 0.375 ) }
    apic_5 { pt3dadd( 290.332, 458.634, 62.3428, 0.5078 ) }
    apic_5 { pt3dadd( 289.994, 459.496, 62.9093, 0.6558 ) }
    apic_5 { pt3dadd( 289.122, 459.886, 63.5314, 0.334 ) }
    apic_5 { pt3dadd( 288.065, 459.815, 63.9576, 0.653 ) }
    apic_5 { pt3dadd( 287.081, 459.443, 64.3143, 0.5084 ) }
    apic_5 { pt3dadd( 286.204, 459.97, 64.6433, 0.3102 ) }
    apic_5 { pt3dadd( 285.177, 460.117, 64.9888, 0.6036 ) }
    apic_5 { pt3dadd( 284.17, 460.002, 65.1843, 0.4322 ) }
    apic_5 { pt3dadd( 283.467, 459.805, 65.534, 0.5994 ) }
    apic_5 { pt3dadd( 282.583, 459.433, 65.984, 0.5126 ) }
    apic_5 { pt3dadd( 281.996, 458.872, 66.227, 0.397 ) }
    apic_5 { pt3dadd( 281.584, 457.919, 66.423, 0.4322 ) }
    apic_5 { pt3dadd( 280.966, 457.28, 66.5711, 0.5186 ) }
    apic_5 { pt3dadd( 280.079, 456.657, 66.7374, 0.337 ) }
    apic_5 { pt3dadd( 279.543, 456.239, 67.0678, 0.231 ) }
    apic_5 { pt3dadd( 278.639, 456.503, 67.111, 0.483 ) }
    apic_5 { pt3dadd( 277.866, 456.341, 67.1569, 0.3724 ) }
    apic_5 { pt3dadd( 276.997, 456.351, 67.296, 0.4576 ) }
    apic_5 { pt3dadd( 276.322, 456.342, 67.3498, 0.4506 ) }
    apic_5 { pt3dadd( 275.347, 456.349, 67.2736, 0.2946 ) }
    apic_5 { pt3dadd( 274.43, 456.597, 67.4038, 0.305 ) }
    apic_5 { pt3dadd( 273.338, 456.387, 67.5948, 0.3584 ) }
    apic_5 { pt3dadd( 272.667, 455.699, 67.6046, 0.2288 ) }
    apic_5 { pt3dadd( 271.731, 455.249, 67.6553, 0.2288 ) }
    apic_5 { pt3dadd( 271.346, 454.274, 67.7538, 0.2288 ) }
    apic_5 { pt3dadd( 270.302, 453.999, 67.87, 0.4728 ) }
    apic_5 { pt3dadd( 269.298, 453.482, 68.04, 0.5592 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 72/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 359.687, 416.534, 54.3421, 0.876 ) }
    apic_3 { pt3dadd( 360.087, 415.481, 54.5272, 0.8046 ) }
    apic_3 { pt3dadd( 360.513, 414.433, 54.6448, 0.7268 ) }
    apic_3 { pt3dadd( 360.858, 413.388, 54.6375, 0.6496 ) }
    apic_3 { pt3dadd( 360.965, 412.295, 54.726, 0.572 ) }
    apic_3 { pt3dadd( 361.157, 411.231, 54.9584, 0.4732 ) }
    apic_3 { pt3dadd( 361.777, 410.3, 55.2012, 0.4576 ) }
    apic_3 { pt3dadd( 362.512, 409.427, 55.4327, 0.501 ) }
    apic_3 { pt3dadd( 363.04, 408.442, 55.7085, 0.596 ) }
    apic_3 { pt3dadd( 363.34, 407.37, 55.8676, 0.6546 ) }
    apic_3 { pt3dadd( 363.879, 406.375, 55.9476, 0.661 ) }
    apic_3 { pt3dadd( 364.532, 405.437, 56.0246, 0.6158 ) }
    apic_3 { pt3dadd( 365.017, 404.404, 56.1369, 0.5644 ) }
    apic_3 { pt3dadd( 365.41, 403.353, 56.3503, 0.5128 ) }
    apic_3 { pt3dadd( 365.856, 402.479, 56.768, 0.4848 ) }
    apic_3 { pt3dadd( 366.451, 401.519, 57.1726, 0.4592 ) }
    apic_3 { pt3dadd( 367.04, 400.549, 57.552, 0.482 ) }
    apic_3 { pt3dadd( 367.066, 399.422, 57.7984, 0.5822 ) }
    apic_3 { pt3dadd( 367.399, 398.415, 57.9698, 0.6226 ) }
    apic_3 { pt3dadd( 368.23, 397.645, 58.1213, 0.5962 ) }
    apic_3 { pt3dadd( 368.872, 396.776, 58.3019, 0.5456 ) }
    apic_3 { pt3dadd( 368.956, 395.69, 58.49, 0.5198 ) }
    apic_3 { pt3dadd( 368.932, 394.556, 58.6401, 0.5376 ) }
    apic_3 { pt3dadd( 369.124, 393.432, 58.7644, 0.5742 ) }
    apic_3 { pt3dadd( 369.369, 392.314, 58.8605, 0.615 ) }
    apic_3 { pt3dadd( 369.398, 391.184, 58.9344, 0.651 ) }
    apic_3 { pt3dadd( 369.533, 390.066, 58.9996, 0.6764 ) }
    apic_3 { pt3dadd( 369.826, 388.96, 59.0741, 0.6552 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_3 { pt3dadd( 370.151, 387.865, 59.1774, 0.62 ) }
    apic_3 { pt3dadd( 370.558, 386.822, 59.3586, 0.5626 ) }
    apic_3 { pt3dadd( 370.905, 385.756, 59.5944, 0.5178 ) }
    apic_3 { pt3dadd( 371.082, 384.633, 59.8217, 0.4422 ) }
    apic_3 { pt3dadd( 371.457, 383.573, 59.99, 0.3728 ) }
    apic_3 { pt3dadd( 372.052, 382.599, 60.1152, 0.3388 ) }
    apic_3 { pt3dadd( 372.753, 381.7, 60.2277, 0.3478 ) }
    apic_3 { pt3dadd( 373.358, 380.777, 60.3971, 0.4088 ) }
    apic_3 { pt3dadd( 373.863, 379.768, 60.5612, 0.4858 ) }
    apic_3 { pt3dadd( 374.253, 378.696, 60.6729, 0.5624 ) }
    apic_3 { pt3dadd( 374.633, 377.64, 60.6855, 0.5848 ) }
    apic_3 { pt3dadd( 375.107, 376.611, 60.655, 0.5478 ) }
    apic_3 { pt3dadd( 375.502, 375.572, 60.7054, 0.4962 ) }
    apic_3 { pt3dadd( 375.714, 374.463, 60.7877, 0.445 ) }
    apic_3 { pt3dadd( 376.017, 373.364, 60.8639, 0.413 ) }
    apic_3 { pt3dadd( 376.463, 372.312, 60.9325, 0.3872 ) }
    apic_3 { pt3dadd( 377.3, 371.576, 60.991, 0.3814 ) }
    apic_3 { pt3dadd( 378.332, 371.09, 61.0282, 0.3814 ) }
    apic_3 { pt3dadd( 379.334, 370.543, 61.0397, 0.3612 ) }
    apic_3 { pt3dadd( 380.283, 369.904, 61.0411, 0.356 ) }
    apic_3 { pt3dadd( 381.112, 369.121, 61.0417, 0.3356 ) }
    apic_3 { pt3dadd( 381.742, 368.172, 61.0422, 0.3508 ) }
    apic_3 { pt3dadd( 382.297, 367.171, 61.0434, 0.3354 ) }
    apic_3 { pt3dadd( 382.796, 366.143, 61.0445, 0.3304 ) }
    apic_3 { pt3dadd( 383.035, 365.031, 61.0464, 0.289 ) }
    apic_3 { pt3dadd( 383.564, 364.032, 61.049, 0.2796 ) }
    apic_3 { pt3dadd( 384.185, 363.071, 61.0526, 0.2796 ) }
    apic_3 { pt3dadd( 384.677, 362.04, 61.0576, 0.3008 ) }
    apic_3 { pt3dadd( 385.182, 361.014, 61.0646, 0.305 ) }
    apic_3 { pt3dadd( 385.646, 359.969, 61.0744, 0.3264 ) }
    apic_3 { pt3dadd( 386.254, 359.003, 61.0882, 0.3522 ) }
    apic_3 { pt3dadd( 386.852, 358.027, 61.1072, 0.3776 ) }
    apic_3 { pt3dadd( 387.366, 357.007, 61.1338, 0.4032 ) }
    apic_3 { pt3dadd( 387.516, 355.882, 61.1719, 0.4286 ) }
    apic_3 { pt3dadd( 387.793, 354.775, 61.2256, 0.4544 ) }
    apic_3 { pt3dadd( 388.237, 353.723, 61.2987, 0.4354 ) }
    apic_3 { pt3dadd( 388.604, 352.639, 61.3942, 0.4322 ) }
    apic_3 { pt3dadd( 388.954, 351.551, 61.5272, 0.4098 ) }
    apic_3 { pt3dadd( 389.341, 350.529, 61.7854, 0.4068 ) }
    apic_3 { pt3dadd( 389.715, 349.457, 62.053, 0.4068 ) }
    apic_3 { pt3dadd( 390.137, 348.408, 62.3431, 0.4768 ) }
    apic_3 { pt3dadd( 390.377, 347.292, 62.578, 0.5546 ) }
    apic_3 { pt3dadd( 390.777, 346.23, 62.8048, 0.5592 ) }
    apic_3 { pt3dadd( 391.349, 345.247, 63.0062, 0.4856 ) }
    apic_3 { pt3dadd( 392.017, 344.318, 63.1394, 0.4086 ) }
    apic_3 { pt3dadd( 392.487, 343.276, 63.2299, 0.4068 ) }
    apic_3 { pt3dadd( 392.836, 342.186, 63.289, 0.4318 ) }
    apic_3 { pt3dadd( 393.044, 341.062, 63.3332, 0.4322 ) }
    apic_3 { pt3dadd( 393.457, 339.995, 63.366, 0.4068 ) }
    apic_3 { pt3dadd( 394.206, 339.131, 63.3987, 0.356 ) }
    apic_3 { pt3dadd( 394.332, 338.925, 63.4418, 0.3506 ) }
    apic_3 { pt3dadd( 394.929, 337.951, 63.5121, 0.32 ) }
    apic_3 { pt3dadd( 395.469, 336.97, 63.6378, 0.2764 ) }
    apic_3 { pt3dadd( 395.609, 335.846, 63.7274, 0.2574 ) }
    apic_3 { pt3dadd( 396.038, 334.789, 63.8495, 0.2904 ) }
    apic_3 { pt3dadd( 396.636, 333.827, 64.036, 0.3712 ) }
    apic_3 { pt3dadd( 397.161, 332.874, 64.3535, 0.4576 ) }
    apic_3 { pt3dadd( 397.744, 331.92, 64.7192, 0.449 ) }
    apic_3 { pt3dadd( 398.242, 330.947, 65.1428, 0.3878 ) }
    apic_3 { pt3dadd( 398.785, 329.953, 65.5108, 0.305 ) }
    apic_3 { pt3dadd( 399.28, 328.939, 65.7314, 0.316 ) }
    apic_3 { pt3dadd( 399.774, 327.908, 65.8983, 0.3728 ) }
    apic_3 { pt3dadd( 400.214, 326.865, 66.0612, 0.4264 ) }
    apic_3 { pt3dadd( 400.4, 325.781, 66.2824, 0.3942 ) }
    apic_3 { pt3dadd( 400.442, 324.687, 66.4969, 0.3428 ) }
    apic_3 { pt3dadd( 400.962, 323.671, 66.696, 0.305 ) }
    apic_3 { pt3dadd( 401.151, 322.593, 66.9189, 0.305 ) }
    apic_3 { pt3dadd( 400.981, 321.496, 67.139, 0.3216 ) }
    apic_3 { pt3dadd( 400.979, 320.375, 67.2868, 0.3924 ) }
    apic_3 { pt3dadd( 401.014, 319.248, 67.4677, 0.486 ) }
    apic_3 { pt3dadd( 401.234, 318.145, 67.6402, 0.5338 ) }
    apic_3 { pt3dadd( 401.794, 317.163, 67.7916, 0.5138 ) }
    apic_3 { pt3dadd( 402.443, 316.241, 67.9546, 0.483 ) }
    apic_3 { pt3dadd( 402.754, 315.203, 68.0691, 0.5048 ) }
    apic_3 { pt3dadd( 402.66, 314.095, 68.089, 0.5338 ) }
    apic_3 { pt3dadd( 402.492, 312.966, 68.1019, 0.5452 ) }
    apic_3 { pt3dadd( 402.629, 311.857, 68.1355, 0.536 ) }
    apic_3 { pt3dadd( 403.062, 310.811, 68.229, 0.5202 ) }
    apic_3 { pt3dadd( 403.492, 309.767, 68.381, 0.5094 ) }
    apic_3 { pt3dadd( 403.716, 308.658, 68.5348, 0.4958 ) }
    apic_3 { pt3dadd( 403.823, 307.538, 68.7285, 0.4946 ) }
    apic_3 { pt3dadd( 404.197, 306.499, 68.9172, 0.483 ) }
    apic_3 { pt3dadd( 404.556, 305.433, 69.0589, 0.483 ) }
    apic_3 { pt3dadd( 404.673, 304.297, 69.1872, 0.5118 ) }
    apic_3 { pt3dadd( 404.861, 303.183, 69.344, 0.563 ) }
    apic_3 { pt3dadd( 405.06, 302.081, 69.5699, 0.6146 ) }
    apic_3 { pt3dadd( 405.203, 300.959, 69.8043, 0.6656 ) }
    apic_3 { pt3dadd( 405.439, 299.842, 70.0073, 0.7166 ) }
    apic_3 { pt3dadd( 405.651, 298.721, 70.1921, 0.7372 ) }
    apic_3 { pt3dadd( 405.946, 297.645, 70.4066, 0.7218 ) }
    apic_3 { pt3dadd( 406.411, 296.62, 70.6314, 0.6804 ) }
    apic_3 { pt3dadd( 406.804, 295.552, 70.8151, 0.645 ) }
    apic_3 { pt3dadd( 406.992, 294.44, 70.9159, 0.5896 ) }
    apic_3 { pt3dadd( 407.309, 293.375, 70.9176, 0.5606 ) }
    apic_3 { pt3dadd( 407.699, 292.305, 70.966, 0.511 ) }
    apic_3 { pt3dadd( 408.206, 291.336, 71.1553, 0.484 ) }
    apic_3 { pt3dadd( 408.719, 290.36, 71.449, 0.4582 ) }
    apic_3 { pt3dadd( 408.977, 289.259, 71.7732, 0.4824 ) }
    apic_3 { pt3dadd( 409.442, 288.215, 72.0563, 0.5078 ) }
    apic_3 { pt3dadd( 409.769, 287.12, 72.2952, 0.5334 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    apic_3 { pt3dadd( 409.972, 285.994, 72.4867, 0.4832 ) }
    apic_3 { pt3dadd( 409.495, 284.958, 72.6608, 0.4316 ) }
    apic_3 { pt3dadd( 409.213, 283.873, 72.8885, 0.382 ) }
    apic_3 { pt3dadd( 409.235, 282.746, 73.0355, 0.4078 ) }
    apic_3 { pt3dadd( 409.356, 281.659, 73.3096, 0.4344 ) }
    apic_3 { pt3dadd( 409.773, 280.632, 73.6604, 0.4844 ) }
    apic_3 { pt3dadd( 410.124, 279.548, 73.9578, 0.5104 ) }
    apic_3 { pt3dadd( 410.275, 278.438, 74.1563, 0.5316 ) }
    apic_3 { pt3dadd( 410.675, 277.397, 74.4402, 0.5084 ) }
    apic_3 { pt3dadd( 411.151, 276.381, 74.7846, 0.5084 ) }
    apic_3 { pt3dadd( 411.665, 275.395, 75.1694, 0.5144 ) }
    apic_3 { pt3dadd( 412.215, 274.404, 75.551, 0.5626 ) }
    apic_3 { pt3dadd( 412.688, 273.408, 75.9466, 0.5964 ) }
    apic_3 { pt3dadd( 412.707, 272.304, 76.3367, 0.6694 ) }
    apic_3 { pt3dadd( 413.23, 271.29, 76.629, 0.7248 ) }
    apic_3 { pt3dadd( 413.893, 270.362, 76.851, 0.7836 ) }
    apic_3 { pt3dadd( 414.404, 269.342, 77.0423, 0.7672 ) }
    apic_3 { pt3dadd( 414.853, 268.313, 77.266, 0.783 ) }
    apic_3 { pt3dadd( 415.41, 267.332, 77.4981, 0.7728 ) }
    apic_3 { pt3dadd( 416.056, 266.39, 77.679, 0.8084 ) }
    apic_3 { pt3dadd( 416.528, 265.363, 77.8257, 0.7824 ) }
    apic_3 { pt3dadd( 416.72, 264.24, 77.9458, 0.757 ) }
    apic_3 { pt3dadd( 417.112, 263.166, 78.0489, 0.726 ) }
    apic_3 { pt3dadd( 417.416, 262.072, 78.1483, 0.6806 ) }
    apic_3 { pt3dadd( 417.448, 260.929, 78.2662, 0.6436 ) }
    apic_3 { pt3dadd( 417.458, 259.79, 78.4361, 0.5906 ) }
    apic_3 { pt3dadd( 417.519, 258.67, 78.703, 0.6286 ) }
    apic_3 { pt3dadd( 417.797, 257.603, 79.0432, 0.6988 ) }
    apic_3 { pt3dadd( 418.411, 256.653, 79.4097, 0.7308 ) }
    apic_3 { pt3dadd( 418.992, 255.701, 79.8154, 0.6862 ) }
    apic_3 { pt3dadd( 419.507, 254.691, 80.1906, 0.6168 ) }
    apic_3 { pt3dadd( 419.834, 253.615, 80.568, 0.6496 ) }
    apic_3 { pt3dadd( 420.088, 252.517, 80.9225, 0.708 ) }
    apic_3 { pt3dadd( 420.316, 251.396, 81.2003, 0.7478 ) }
    apic_3 { pt3dadd( 420.642, 250.306, 81.4332, 0.689 ) }
    apic_3 { pt3dadd( 421.021, 249.25, 81.6732, 0.6124 ) }
    apic_3 { pt3dadd( 421.244, 248.158, 81.9403, 0.5592 ) }
    apic_3 { pt3dadd( 421.598, 247.075, 82.1548, 0.5838 ) }
    apic_3 { pt3dadd( 422.1, 246.048, 82.3278, 0.6524 ) }
    apic_3 { pt3dadd( 422.573, 245.009, 82.4617, 0.6864 ) }
    apic_3 { pt3dadd( 422.93, 243.935, 82.5653, 0.6598 ) }
    apic_3 { pt3dadd( 423.191, 242.857, 82.7484, 0.5816 ) }
    apic_3 { pt3dadd( 423.54, 241.827, 83.048, 0.5242 ) }
    apic_3 { pt3dadd( 423.783, 240.724, 83.372, 0.4986 ) }
    apic_3 { pt3dadd( 423.839, 239.599, 83.7189, 0.493 ) }
    apic_3 { pt3dadd( 423.849, 238.551, 83.9885, 0.483 ) }
    apic_3 { pt3dadd( 423.83, 237.794, 84.3228, 0.2398 ) }
    apic_3 { pt3dadd( 423.811, 236.682, 84.6222, 0.3782 ) }
    apic_3 { pt3dadd( 423.978, 235.581, 84.8652, 0.532 ) }
    apic_3 { pt3dadd( 424.198, 234.719, 85.1175, 0.4936 ) }
    apic_3 { pt3dadd( 424.799, 234.121, 85.2071, 0.6178 ) }
    apic_3 { pt3dadd( 425.014, 233.331, 85.4426, 0.606 ) }
    apic_3 { pt3dadd( 425.035, 232.574, 85.8575, 0.6092 ) }
    apic_3 { pt3dadd( 425.339, 231.52, 86.2826, 0.632 ) }
    apic_3 { pt3dadd( 425.753, 230.55, 86.5827, 0.5262 ) }
    apic_3 { pt3dadd( 425.95, 229.782, 86.975, 0.6462 ) }
    apic_3 { pt3dadd( 426.146, 228.689, 87.3284, 0.4524 ) }
    apic_3 { pt3dadd( 426.571, 227.768, 87.6775, 0.503 ) }
    apic_3 { pt3dadd( 427.108, 227.132, 87.7257, 0.7032 ) }
    apic_3 { pt3dadd( 427.713, 226.668, 87.8444, 0.4464 ) }
    apic_3 { pt3dadd( 428.361, 225.783, 87.9914, 0.4734 ) }
    apic_3 { pt3dadd( 428.763, 224.782, 88.1311, 0.5592 ) }
    apic_3 { pt3dadd( 429.303, 224.117, 88.0362, 0.6356 ) }
    apic_3 { pt3dadd( 429.493, 223.125, 87.9015, 0.6138 ) }
    apic_3 { pt3dadd( 429.959, 222.522, 88.0743, 0.409 ) }
    apic_3 { pt3dadd( 430.459, 221.993, 88.408, 0.4576 ) }
    apic_3 { pt3dadd( 430.724, 221.183, 88.6242, 0.4534 ) }
    apic_3 { pt3dadd( 430.955, 220.307, 88.9148, 0.515 ) }
    apic_3 { pt3dadd( 430.945, 219.269, 89.2718, 0.5338 ) }
    apic_3 { pt3dadd( 431.169, 218.346, 89.6185, 0.5412 ) }
    apic_3 { pt3dadd( 431.163, 217.266, 89.9058, 0.5672 ) }
    apic_3 { pt3dadd( 431.631, 216.249, 90.1706, 0.9422 ) }
    apic_3 { pt3dadd( 431.894, 215.165, 90.4481, 0.8182 ) }
    apic_3 { pt3dadd( 431.969, 214.281, 90.8734, 0.6864 ) }
    apic_3 { pt3dadd( 431.842, 213.457, 91.285, 0.597 ) }
    apic_3 { pt3dadd( 431.978, 212.561, 91.6124, 0.4558 ) }
    apic_3 { pt3dadd( 432.662, 212.094, 91.7748, 0.3476 ) }
    apic_3 { pt3dadd( 432.823, 211.039, 91.8641, 0.5528 ) }
    apic_3 { pt3dadd( 432.89, 209.992, 92.0161, 0.378 ) }
    apic_3 { pt3dadd( 433.013, 209.334, 92.3166, 0.5274 ) }
    apic_3 { pt3dadd( 433.482, 208.406, 92.615, 0.3292 ) }
    apic_3 { pt3dadd( 434.236, 207.731, 92.8396, 0.6694 ) }
    apic_3 { pt3dadd( 434.77, 206.848, 93.0933, 1.0254 ) }
    apic_3 { pt3dadd( 434.854, 206.098, 93.5603, 0.6966 ) }
    apic_3 { pt3dadd( 435.481, 205.294, 93.8538, 0.7008 ) }
    apic_3 { pt3dadd( 435.596, 204.203, 94.0926, 0.5084 ) }
    apic_3 { pt3dadd( 435.656, 203.378, 94.4787, 0.4404 ) }
    apic_3 { pt3dadd( 435.905, 202.55, 94.6624, 0.4482 ) }
    apic_3 { pt3dadd( 435.978, 201.532, 94.8399, 0.4614 ) }
    apic_3 { pt3dadd( 436.375, 200.723, 95.1042, 0.55 ) }
    apic_3 { pt3dadd( 436.34, 199.713, 95.3112, 0.5592 ) }
    apic_3 { pt3dadd( 436.894, 198.858, 95.4937, 0.6102 ) }
    apic_3 { pt3dadd( 436.854, 197.865, 95.5153, 0.6372 ) }
    apic_3 { pt3dadd( 437.003, 196.869, 95.5346, 0.5322 ) }
    apic_3 { pt3dadd( 437.792, 196.363, 95.4209, 0.314 ) }
    apic_3 { pt3dadd( 438.269, 195.685, 95.0905, 0.2288 ) }
    apic_3 { pt3dadd( 438.51, 194.641, 94.7674, 0.26 ) }
    apic_3 { pt3dadd( 438.936, 193.631, 94.5319, 0.4992 ) }
    apic_3 { pt3dadd( 438.57, 192.635, 94.3961, 0.3548 ) }
    apic_3 { pt3dadd( 438.381, 192.152, 94.7428, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_3 { pt3dadd( 438.729, 191.353, 95.3319, 0.4406 ) }
    apic_3 { pt3dadd( 439.067, 190.458, 95.9347, 0.7132 ) }
    apic_3 { pt3dadd( 439.446, 189.732, 96.397, 0.6864 ) }
    apic_3 { pt3dadd( 439.6, 188.682, 96.8775, 0.448 ) }
    apic_3 { pt3dadd( 440.151, 187.696, 97.2896, 0.5444 ) }
    apic_3 { pt3dadd( 440.52, 186.649, 97.58, 0.4106 ) }
    apic_3 { pt3dadd( 440.773, 185.843, 98.0244, 0.4024 ) }
    apic_3 { pt3dadd( 441.129, 185.135, 98.3363, 0.3292 ) }
    apic_3 { pt3dadd( 441.303, 184.134, 98.6852, 0.3938 ) }
    apic_3 { pt3dadd( 441.533, 183.261, 99.148, 0.5004 ) }
    apic_3 { pt3dadd( 441.944, 182.343, 99.5862, 0.2358 ) }
    apic_3 { pt3dadd( 442.474, 181.544, 99.8208, 0.6374 ) }
    apic_3 { pt3dadd( 442.842, 180.519, 99.9048, 0.3634 ) }
    apic_3 { pt3dadd( 442.845, 179.444, 99.9544, 0.4106 ) }
    apic_3 { pt3dadd( 443.297, 178.608, 100.104, 0.698 ) }
    apic_3 { pt3dadd( 443.564, 177.816, 100.446, 0.5638 ) }
    apic_3 { pt3dadd( 443.848, 176.775, 100.783, 0.5084 ) }
    apic_3 { pt3dadd( 444.31, 176.352, 100.879, 0.2722 ) }
    apic_3 { pt3dadd( 444.866, 175.388, 101.026, 0.4468 ) }
    apic_3 { pt3dadd( 445.033, 174.292, 101.142, 0.6922 ) }
    apic_3 { pt3dadd( 445.315, 173.294, 101.386, 0.6864 ) }
    apic_3 { pt3dadd( 445.809, 172.467, 101.778, 0.6124 ) }
    apic_3 { pt3dadd( 446.515, 171.842, 102.211, 0.7454 ) }
    apic_3 { pt3dadd( 446.505, 170.86, 102.68, 0.5682 ) }
    apic_3 { pt3dadd( 446.538, 169.898, 103.006, 0.4368 ) }
    apic_3 { pt3dadd( 447.159, 169.136, 103.403, 0.4206 ) }
    apic_3 { pt3dadd( 447.105, 168.278, 103.609, 0.3378 ) }
    apic_3 { pt3dadd( 447.307, 167.849, 103.932, 0.2288 ) }
    apic_3 { pt3dadd( 447.782, 167.011, 104.04, 0.3304 ) }
    apic_3 { pt3dadd( 447.994, 166.025, 104.207, 0.334 ) }
    apic_3 { pt3dadd( 448.061, 165.315, 104.579, 0.6504 ) }
    apic_3 { pt3dadd( 448.43, 164.452, 104.91, 0.5944 ) }
    apic_3 { pt3dadd( 448.334, 163.868, 104.911, 0.7372 ) }
    apic_3 { pt3dadd( 448.638, 162.973, 105.099, 0.661 ) }
    apic_3 { pt3dadd( 448.791, 162.219, 105.166, 0.2516 ) }
    apic_3 { pt3dadd( 449.023, 161.318, 105.171, 0.275 ) }
    apic_3 { pt3dadd( 449.419, 160.287, 105.302, 0.4856 ) }
    apic_3 { pt3dadd( 449.72, 159.498, 105.729, 0.3468 ) }
    apic_3 { pt3dadd( 450.118, 158.905, 106.359, 0.5662 ) }
    apic_3 { pt3dadd( 450.301, 157.826, 106.945, 0.6246 ) }
    apic_3 { pt3dadd( 450.459, 156.813, 107.519, 0.5556 ) }
    apic_3 { pt3dadd( 450.71, 155.938, 107.833, 0.3168 ) }
    apic_3 { pt3dadd( 450.942, 154.963, 107.963, 0.356 ) }
    apic_3 { pt3dadd( 451.257, 154.053, 108.052, 0.4642 ) }
    apic_3 { pt3dadd( 451.348, 152.987, 108.213, 0.7594 ) }
    apic_3 { pt3dadd( 451.537, 152.287, 108.501, 0.485 ) }
    apic_3 { pt3dadd( 451.537, 151.289, 108.602, 0.5578 ) }
    apic_3 { pt3dadd( 451.537, 150.27, 108.601, 0.6778 ) }
    apic_3 { pt3dadd( 451.537, 149.435, 108.855, 0.6032 ) }
    apic_3 { pt3dadd( 451.654, 148.72, 108.831, 0.2778 ) }
    apic_3 { pt3dadd( 452.121, 148.158, 108.638, 0.2288 ) }
    apic_3 { pt3dadd( 452.696, 147.218, 108.628, 0.2288 ) }
    apic_3 { pt3dadd( 452.681, 146.719, 109.068, 0.5968 ) }
    apic_3 { pt3dadd( 452.717, 145.687, 109.428, 0.6266 ) }
    apic_3 { pt3dadd( 452.91, 144.626, 109.732, 0.3324 ) }
    apic_3 { pt3dadd( 453.138, 144.066, 110.348, 0.4008 ) }
    apic_3 { pt3dadd( 453.064, 142.986, 110.949, 0.4034 ) }
    apic_3 { pt3dadd( 453.342, 141.946, 111.418, 0.6184 ) }
    apic_3 { pt3dadd( 453.453, 140.909, 111.807, 0.3492 ) }
    apic_3 { pt3dadd( 453.024, 140.331, 112.37, 0.2288 ) }
    apic_3 { pt3dadd( 453.599, 139.618, 112.804, 0.2368 ) }
    apic_3 { pt3dadd( 453.486, 138.836, 112.856, 0.5164 ) }
    apic_3 { pt3dadd( 453.646, 137.829, 112.919, 0.5014 ) }
    apic_3 { pt3dadd( 453.8, 136.774, 113.064, 0.5338 ) }
    apic_3 { pt3dadd( 453.781, 135.819, 113.053, 0.5946 ) }
    apic_3 { pt3dadd( 453.951, 134.838, 112.93, 0.6758 ) }
    apic_3 { pt3dadd( 454.648, 134.381, 113.118, 0.3546 ) }
    apic_3 { pt3dadd( 454.651, 133.332, 113.331, 0.5154 ) }
    apic_3 { pt3dadd( 454.375, 132.397, 113.554, 0.4724 ) }
    apic_3 { pt3dadd( 454.168, 131.412, 113.786, 0.5706 ) }
    apic_3 { pt3dadd( 454.051, 130.4, 114.108, 0.2536 ) }
    apic_3 { pt3dadd( 454.157, 129.303, 114.43, 0.2288 ) }
    apic_3 { pt3dadd( 454.168, 128.175, 114.718, 0.2288 ) }
    apic_3 { pt3dadd( 454.168, 127.063, 114.992, 0.2714 ) }
    apic_3 { pt3dadd( 454.372, 126.062, 115.147, 0.288 ) }
    apic_3 { pt3dadd( 454.581, 125.692, 115.572, 0.5636 ) }
    apic_3 { pt3dadd( 454.797, 124.744, 116.047, 0.464 ) }
    apic_3 { pt3dadd( 455.12, 124.061, 116.236, 0.3876 ) }
    apic_3 { pt3dadd( 455.445, 123.097, 116.507, 0.501 ) }
    apic_3 { pt3dadd( 455.624, 122.27, 116.964, 0.2288 ) }
    apic_3 { pt3dadd( 455.5, 121.41, 117.556, 0.2806 ) }
    apic_3 { pt3dadd( 454.862, 120.56, 118.033, 0.4386 ) }
    apic_3 { pt3dadd( 454.511, 120.105, 118.632, 0.251 ) }
    apic_3 { pt3dadd( 454.56, 119.013, 119.185, 0.2288 ) }
    apic_3 { pt3dadd( 454.74, 118.039, 119.442, 0.347 ) }
    apic_3 { pt3dadd( 454.794, 116.92, 119.648, 0.4776 ) }
    apic_3 { pt3dadd( 454.618, 115.948, 119.934, 0.483 ) }
    apic_3 { pt3dadd( 454.39, 114.871, 120.091, 0.5986 ) }
    apic_3 { pt3dadd( 454.226, 113.87, 120.092, 0.7366 ) }
    apic_3 { pt3dadd( 454.339, 113.337, 120.415, 0.6726 ) }
    apic_3 { pt3dadd( 454.054, 112.296, 120.772, 0.503 ) }
    apic_3 { pt3dadd( 453.871, 111.272, 121.069, 0.4526 ) }
    apic_3 { pt3dadd( 454.168, 110.525, 121.174, 0.4542 ) }
    apic_3 { pt3dadd( 454.319, 110.167, 121.417, 0.2288 ) }
    apic_3 { pt3dadd( 454.626, 109.376, 121.706, 0.592 ) }
    apic_3 { pt3dadd( 454.854, 108.337, 121.8, 0.7626 ) }
    // Section: dend_21, id: dend_21, parent: apic_2 (entry count 96/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 359.687, 416.534, 54.3421, 0.876 ) }
    dend_21 { pt3dadd( 360.204, 416.656, 53.3893, 0.689 ) }
    dend_21 { pt3dadd( 361.285, 416.379, 53.4414, 0.4326 ) }
    dend_21 { pt3dadd( 362.286, 416.207, 53.5293, 0.5342 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_21 { pt3dadd( 363.273, 416.489, 53.4752, 0.5882 ) }
    dend_21 { pt3dadd( 364.397, 416.374, 53.5147, 0.395 ) }
    dend_21 { pt3dadd( 365.387, 416.283, 53.508, 0.4232 ) }
    dend_21 { pt3dadd( 366.141, 416.748, 53.557, 0.6864 ) }
    dend_21 { pt3dadd( 367.23, 416.934, 53.4624, 0.891 ) }
    dend_21 { pt3dadd( 368.192, 417.416, 53.3736, 0.7032 ) }
    dend_21 { pt3dadd( 369.034, 418.092, 53.2, 0.6486 ) }
    dend_21 { pt3dadd( 369.398, 418.552, 54.0411, 0.5338 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 8/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 355.436, 444.394, 35.9579, 0.6102 ) }
    dend_19 { pt3dadd( 355.902, 443.923, 35.7174, 0.679 ) }
    dend_19 { pt3dadd( 356.47, 443.567, 35.306, 0.3814 ) }
    dend_19 { pt3dadd( 356.401, 442.818, 34.9219, 0.3002 ) }
    dend_19 { pt3dadd( 357.102, 442.269, 34.5498, 0.4458 ) }
    dend_19 { pt3dadd( 357.344, 441.467, 34.0956, 0.4248 ) }
    dend_19 { pt3dadd( 357.07, 440.406, 33.6582, 0.4068 ) }
    dend_19 { pt3dadd( 357.022, 439.378, 33.2489, 0.5684 ) }
    dend_19 { pt3dadd( 357.396, 438.372, 32.8675, 0.6336 ) }
    dend_19 { pt3dadd( 357.728, 437.362, 32.4036, 0.3314 ) }
    dend_19 { pt3dadd( 357.203, 436.659, 31.8688, 0.4904 ) }
    dend_19 { pt3dadd( 356.912, 435.978, 31.1805, 0.6466 ) }
    dend_19 { pt3dadd( 357.373, 435.197, 30.5105, 0.6102 ) }
    dend_19 { pt3dadd( 358.294, 435.023, 30.0401, 0.4576 ) }
    dend_19 { pt3dadd( 359.23, 435.45, 29.6652, 0.4694 ) }
    dend_19 { pt3dadd( 360.215, 435.833, 29.3297, 0.4376 ) }
    dend_19 { pt3dadd( 360.58, 435.178, 29.0326, 0.5368 ) }
    dend_19 { pt3dadd( 360.703, 434.606, 28.6546, 0.4614 ) }
    dend_19 { pt3dadd( 360.919, 433.976, 28.268, 0.3354 ) }
    dend_19 { pt3dadd( 360.925, 432.995, 27.8648, 0.4692 ) }
    dend_19 { pt3dadd( 361.151, 431.938, 27.5276, 0.6454 ) }
    dend_19 { pt3dadd( 361.39, 431.046, 27.1267, 0.6042 ) }
    dend_19 { pt3dadd( 361.519, 431.056, 26.4502, 0.2542 ) }
    dend_19 { pt3dadd( 362.133, 431.829, 25.8507, 0.623 ) }
    dend_19 { pt3dadd( 362.78, 431.766, 25.6094, 0.4576 ) }
    dend_19 { pt3dadd( 363.441, 432.203, 25.587, 0.5084 ) }
    dend_19 { pt3dadd( 364.335, 432.09, 25.3893, 0.4062 ) }
    dend_19 { pt3dadd( 365.251, 432.262, 25.1423, 0.5496 ) }
    dend_19 { pt3dadd( 366.173, 432.53, 24.873, 0.6392 ) }
    dend_19 { pt3dadd( 366.946, 432.482, 24.7932, 0.423 ) }
    dend_19 { pt3dadd( 367.529, 432.703, 24.3813, 0.5422 ) }
    dend_19 { pt3dadd( 368.228, 432.432, 23.7821, 0.3626 ) }
    dend_19 { pt3dadd( 369.216, 432.501, 23.2834, 0.321 ) }
    dend_19 { pt3dadd( 370.313, 432.445, 23.0336, 0.5338 ) }
    dend_19 { pt3dadd( 371.188, 432.123, 22.927, 0.566 ) }
    dend_19 { pt3dadd( 372.105, 432.385, 23.0322, 0.4252 ) }
    dend_19 { pt3dadd( 373.147, 432.616, 23.2574, 0.3238 ) }
    dend_19 { pt3dadd( 373.514, 433.004, 23.5256, 0.3216 ) }
    dend_19 { pt3dadd( 373.795, 433.442, 23.459, 0.5586 ) }
    dend_19 { pt3dadd( 374.509, 434.004, 23.5942, 0.4156 ) }
    dend_19 { pt3dadd( 375.494, 433.932, 23.7502, 0.4756 ) }
    dend_19 { pt3dadd( 376.59, 434.034, 23.891, 0.4576 ) }
    dend_19 { pt3dadd( 377.399, 434.142, 24.213, 0.5254 ) }
    dend_19 { pt3dadd( 378.237, 434.182, 24.5165, 0.6234 ) }
    dend_19 { pt3dadd( 378.792, 434.416, 24.8732, 0.6604 ) }
    dend_19 { pt3dadd( 379.703, 434.728, 24.9732, 0.3338 ) }
    dend_19 { pt3dadd( 380.617, 434.461, 25.093, 0.6102 ) }
    dend_19 { pt3dadd( 381.526, 434.606, 25.2602, 0.6232 ) }
    dend_19 { pt3dadd( 382.234, 435.046, 25.3506, 0.4442 ) }
    dend_19 { pt3dadd( 382.787, 435.878, 25.2742, 0.4852 ) }
    dend_19 { pt3dadd( 383.233, 436.538, 24.9668, 0.6566 ) }
    dend_19 { pt3dadd( 383.942, 437.317, 24.7055, 0.5848 ) }
    dend_19 { pt3dadd( 384.43, 437.702, 24.1528, 0.6334 ) }
    dend_19 { pt3dadd( 385.036, 438.528, 23.5371, 0.2718 ) }
    dend_19 { pt3dadd( 384.274, 439.211, 23.0521, 0.273 ) }
    dend_19 { pt3dadd( 384.318, 439.846, 22.9205, 0.4576 ) }
    dend_19 { pt3dadd( 384.947, 440.655, 22.7212, 0.4352 ) }
    dend_19 { pt3dadd( 385.582, 441.481, 22.6948, 0.465 ) }
    dend_19 { pt3dadd( 386.085, 442.085, 22.5019, 0.2464 ) }
    dend_19 { pt3dadd( 386.945, 442.443, 22.4479, 0.2686 ) }
    dend_19 { pt3dadd( 387.962, 442.614, 22.302, 0.2288 ) }
    dend_19 { pt3dadd( 388.633, 443.207, 22.1144, 0.316 ) }
    dend_19 { pt3dadd( 389.38, 443.971, 22.1295, 0.4476 ) }
    dend_19 { pt3dadd( 390.01, 444.754, 22.1556, 0.4576 ) }
    dend_19 { pt3dadd( 390.395, 445.359, 22.3686, 0.4576 ) }
    dend_19 { pt3dadd( 391.223, 445.728, 22.482, 0.5848 ) }
    dend_19 { pt3dadd( 392.137, 446.337, 22.6055, 0.4576 ) }
    dend_19 { pt3dadd( 392.915, 446.269, 22.6204, 0.2664 ) }
    dend_19 { pt3dadd( 393.855, 446.502, 22.6884, 0.2576 ) }
    dend_19 { pt3dadd( 394.805, 446.207, 22.6318, 0.2288 ) }
    dend_19 { pt3dadd( 395.467, 445.72, 22.6232, 0.3814 ) }
    dend_19 { pt3dadd( 395.938, 446.472, 22.631, 0.2288 ) }
    dend_19 { pt3dadd( 396.563, 447.18, 22.6192, 0.2288 ) }
    dend_19 { pt3dadd( 397.611, 447.565, 22.6016, 0.3484 ) }
    dend_19 { pt3dadd( 398.447, 448.286, 22.5879, 0.3524 ) }
    dend_19 { pt3dadd( 398.884, 449.114, 22.7217, 0.4926 ) }
    dend_19 { pt3dadd( 399.696, 449.656, 22.7346, 0.3918 ) }
    dend_19 { pt3dadd( 400.413, 450.218, 22.7556, 0.4474 ) }
    dend_19 { pt3dadd( 401.438, 450.371, 22.8494, 0.4068 ) }
    dend_19 { pt3dadd( 402.52, 450.291, 22.8609, 0.4066 ) }
    dend_19 { pt3dadd( 403.445, 450.853, 22.9026, 0.489 ) }
    dend_19 { pt3dadd( 403.968, 451.355, 22.822, 0.2628 ) }
    dend_19 { pt3dadd( 404.812, 452.076, 22.7209, 0.305 ) }
    dend_19 { pt3dadd( 405.324, 452.882, 22.7296, 0.3608 ) }
    dend_19 { pt3dadd( 406.191, 453.367, 22.8169, 0.2998 ) }
    dend_19 { pt3dadd( 407.319, 453.241, 22.899, 0.2972 ) }
    dend_19 { pt3dadd( 408.298, 453.307, 23.0, 0.3934 ) }
    dend_19 { pt3dadd( 409.272, 453.683, 23.2, 0.3494 ) }
    dend_19 { pt3dadd( 409.518, 454.756, 23.333, 0.2288 ) }
    dend_19 { pt3dadd( 410.002, 455.655, 23.366, 0.2288 ) }
    dend_19 { pt3dadd( 410.671, 456.551, 23.4366, 0.2998 ) }
    dend_19 { pt3dadd( 411.554, 457.156, 23.3652, 0.2842 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_19 { pt3dadd( 412.653, 457.441, 23.3394, 0.4518 ) }
    dend_19 { pt3dadd( 413.745, 457.707, 23.3201, 0.6372 ) }
    dend_19 { pt3dadd( 414.512, 458.439, 23.3528, 0.7408 ) }
    dend_19 { pt3dadd( 415.502, 458.88, 23.3971, 0.4302 ) }
    dend_19 { pt3dadd( 416.519, 458.871, 23.3125, 0.4576 ) }
    dend_19 { pt3dadd( 417.217, 459.375, 23.354, 0.2676 ) }
    dend_19 { pt3dadd( 418.018, 459.316, 23.24, 0.5592 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 7/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 355.436, 444.394, 35.9579, 0.6102 ) }
    dend_18 { pt3dadd( 355.523, 444.672, 34.8488, 0.4894 ) }
    dend_18 { pt3dadd( 356.073, 445.293, 33.7193, 0.305 ) }
    dend_18 { pt3dadd( 356.967, 445.949, 33.2889, 0.3314 ) }
    dend_18 { pt3dadd( 357.332, 446.96, 32.832, 0.4002 ) }
    dend_18 { pt3dadd( 357.638, 448.035, 32.3814, 0.4474 ) }
    dend_18 { pt3dadd( 358.285, 448.846, 31.8774, 0.4576 ) }
    dend_18 { pt3dadd( 358.929, 449.718, 31.4112, 0.4748 ) }
    dend_18 { pt3dadd( 359.128, 450.814, 31.0702, 0.4654 ) }
    dend_18 { pt3dadd( 359.295, 451.943, 30.8109, 0.4576 ) }
    dend_18 { pt3dadd( 359.455, 453.074, 30.6107, 0.4214 ) }
    dend_18 { pt3dadd( 359.227, 454.173, 30.441, 0.4438 ) }
    dend_18 { pt3dadd( 358.511, 455.028, 30.2795, 0.4576 ) }
    dend_18 { pt3dadd( 357.453, 455.328, 30.0793, 0.4968 ) }
    dend_18 { pt3dadd( 356.433, 455.01, 29.743, 0.5084 ) }
    dend_18 { pt3dadd( 355.378, 454.625, 29.3426, 0.5084 ) }
    dend_18 { pt3dadd( 354.359, 454.373, 28.8179, 0.4866 ) }
    dend_18 { pt3dadd( 353.418, 454.92, 28.3458, 0.438 ) }
    dend_18 { pt3dadd( 352.837, 455.841, 27.8418, 0.4322 ) }
    dend_18 { pt3dadd( 352.167, 456.761, 27.41, 0.4556 ) }
    dend_18 { pt3dadd( 351.161, 457.28, 27.0402, 0.4816 ) }
    dend_18 { pt3dadd( 350.079, 457.131, 26.6367, 0.5078 ) }
    dend_18 { pt3dadd( 348.95, 456.987, 26.2878, 0.4588 ) }
    dend_18 { pt3dadd( 347.861, 457.273, 25.9473, 0.5078 ) }
    dend_18 { pt3dadd( 346.746, 457.371, 25.2, 0.5338 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 351.572, 429.064, 39.1552, 0.3814 ) }
    dend_15 { pt3dadd( 351.87, 428.414, 40.0176, 0.2908 ) }
    dend_15 { pt3dadd( 352.484, 427.478, 39.7424, 0.2288 ) }
    dend_15 { pt3dadd( 352.902, 426.437, 39.6267, 0.2288 ) }
    dend_15 { pt3dadd( 353.251, 425.379, 39.5094, 0.2288 ) }
    dend_15 { pt3dadd( 353.894, 424.652, 39.2414, 0.2506 ) }
    dend_15 { pt3dadd( 354.505, 423.708, 39.062, 0.382 ) }
    dend_15 { pt3dadd( 354.993, 423.155, 38.8836, 0.631 ) }
    dend_15 { pt3dadd( 355.108, 422.122, 38.7279, 0.4846 ) }
    dend_15 { pt3dadd( 355.67, 421.284, 38.6126, 0.5336 ) }
    dend_15 { pt3dadd( 355.569, 420.182, 38.6184, 0.6858 ) }
    dend_15 { pt3dadd( 355.59, 419.143, 38.6554, 0.7764 ) }
    dend_15 { pt3dadd( 356.147, 418.577, 38.7881, 0.6354 ) }
    dend_15 { pt3dadd( 356.812, 417.792, 38.8668, 0.4204 ) }
    dend_15 { pt3dadd( 357.042, 416.791, 38.8696, 0.6466 ) }
    dend_15 { pt3dadd( 357.5, 415.972, 38.8427, 0.6386 ) }
    dend_15 { pt3dadd( 357.729, 414.939, 38.8234, 0.4538 ) }
    dend_15 { pt3dadd( 357.928, 414.198, 38.9346, 0.6158 ) }
    dend_15 { pt3dadd( 358.373, 413.166, 39.0494, 0.6864 ) }
    dend_15 { pt3dadd( 358.865, 412.341, 39.1532, 0.695 ) }
    dend_15 { pt3dadd( 359.142, 411.497, 39.202, 0.5592 ) }
    dend_15 { pt3dadd( 359.353, 410.566, 39.2078, 0.521 ) }
    dend_15 { pt3dadd( 359.226, 409.875, 39.0359, 0.5312 ) }
    dend_15 { pt3dadd( 359.092, 408.949, 38.8713, 0.5848 ) }
    dend_15 { pt3dadd( 359.351, 408.028, 38.7946, 0.5838 ) }
    dend_15 { pt3dadd( 359.694, 407.022, 38.7803, 0.422 ) }
    dend_15 { pt3dadd( 360.128, 406.046, 38.7579, 0.316 ) }
    dend_15 { pt3dadd( 360.36, 405.125, 38.803, 0.5854 ) }
    dend_15 { pt3dadd( 360.589, 404.168, 38.9133, 0.305 ) }
    dend_15 { pt3dadd( 360.656, 403.444, 38.7909, 0.3982 ) }
    dend_15 { pt3dadd( 360.831, 402.713, 38.4261, 0.4436 ) }
    dend_15 { pt3dadd( 361.354, 401.801, 38.0929, 0.3814 ) }
    dend_15 { pt3dadd( 361.668, 400.806, 37.9078, 0.6584 ) }
    dend_15 { pt3dadd( 361.847, 399.905, 37.6804, 0.6102 ) }
    dend_15 { pt3dadd( 361.777, 398.898, 37.52, 0.3402 ) }
    dend_15 { pt3dadd( 361.847, 398.059, 37.5477, 0.7372 ) }
    dend_15 { pt3dadd( 361.946, 397.316, 37.7479, 0.6344 ) }
    dend_15 { pt3dadd( 362.343, 396.346, 37.8333, 0.6186 ) }
    dend_15 { pt3dadd( 362.181, 395.398, 37.8428, 0.3814 ) }
    dend_15 { pt3dadd( 362.106, 394.272, 37.9106, 0.5428 ) }
    dend_15 { pt3dadd( 362.534, 393.291, 38.0621, 0.6184 ) }
    dend_15 { pt3dadd( 362.865, 392.709, 38.4521, 0.5118 ) }
    dend_15 { pt3dadd( 362.845, 391.823, 38.5675, 0.438 ) }
    dend_15 { pt3dadd( 363.049, 390.781, 38.6862, 0.661 ) }
    dend_15 { pt3dadd( 363.127, 390.013, 38.922, 0.2728 ) }
    dend_15 { pt3dadd( 363.531, 389.269, 38.962, 0.2988 ) }
    dend_15 { pt3dadd( 363.53, 388.423, 38.785, 0.4882 ) }
    dend_15 { pt3dadd( 363.906, 387.754, 38.8284, 0.4586 ) }
    dend_15 { pt3dadd( 364.2, 386.707, 38.8576, 0.3092 ) }
    dend_15 { pt3dadd( 363.985, 385.869, 38.7758, 0.2288 ) }
    dend_15 { pt3dadd( 363.784, 384.966, 38.8839, 0.5904 ) }
    dend_15 { pt3dadd( 363.677, 383.854, 39.0107, 0.483 ) }
    dend_15 { pt3dadd( 363.728, 382.856, 39.1868, 0.4662 ) }
    dend_15 { pt3dadd( 364.045, 381.94, 39.247, 0.3814 ) }
    dend_15 { pt3dadd( 364.586, 381.062, 39.4626, 0.4322 ) }
    dend_15 { pt3dadd( 365.193, 380.29, 39.4999, 0.2986 ) }
    dend_15 { pt3dadd( 365.364, 379.305, 39.6808, 0.4376 ) }
    dend_15 { pt3dadd( 365.46, 378.347, 39.718, 0.3596 ) }
    dend_15 { pt3dadd( 365.651, 377.338, 39.7432, 0.5758 ) }
    dend_15 { pt3dadd( 366.11, 376.41, 39.8857, 0.6358 ) }
    dend_15 { pt3dadd( 366.594, 375.46, 39.8846, 0.451 ) }
    dend_15 { pt3dadd( 367.169, 374.535, 39.8852, 0.6102 ) }
    dend_15 { pt3dadd( 367.74, 374.036, 40.0523, 0.4382 ) }
    dend_15 { pt3dadd( 368.575, 373.63, 40.1892, 0.5468 ) }
    dend_15 { pt3dadd( 369.38, 372.951, 40.2643, 0.5364 ) }
    dend_15 { pt3dadd( 370.045, 372.196, 40.3595, 0.4576 ) }
    dend_15 { pt3dadd( 370.645, 371.432, 40.4054, 0.2452 ) }
    dend_15 { pt3dadd( 371.322, 370.596, 40.3631, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_15 { pt3dadd( 372.097, 369.941, 40.4222, 0.4032 ) }
    dend_15 { pt3dadd( 372.778, 369.056, 40.5073, 0.4042 ) }
    dend_15 { pt3dadd( 373.661, 368.401, 40.5415, 0.3804 ) }
    dend_15 { pt3dadd( 374.38, 367.667, 40.5927, 0.5228 ) }
    dend_15 { pt3dadd( 375.094, 366.835, 40.5552, 0.4242 ) }
    dend_15 { pt3dadd( 375.794, 366.153, 40.5059, 0.4444 ) }
    dend_15 { pt3dadd( 376.62, 365.431, 40.4704, 0.356 ) }
    dend_15 { pt3dadd( 377.221, 364.505, 40.4793, 0.3722 ) }
    dend_15 { pt3dadd( 377.745, 363.591, 40.5076, 0.305 ) }
    dend_15 { pt3dadd( 378.32, 362.717, 40.5216, 0.4228 ) }
    dend_15 { pt3dadd( 379.225, 362.037, 40.5306, 0.381 ) }
    dend_15 { pt3dadd( 380.015, 361.513, 40.6636, 0.4996 ) }
    dend_15 { pt3dadd( 380.703, 360.816, 40.7602, 0.409 ) }
    dend_15 { pt3dadd( 381.319, 360.346, 40.9945, 0.3398 ) }
    dend_15 { pt3dadd( 382.298, 359.965, 41.0581, 0.4576 ) }
    dend_15 { pt3dadd( 383.262, 359.535, 41.125, 0.3464 ) }
    dend_15 { pt3dadd( 384.125, 359.088, 41.2667, 0.4576 ) }
    dend_15 { pt3dadd( 385.014, 358.531, 41.3258, 0.2604 ) }
    dend_15 { pt3dadd( 385.618, 358.161, 41.2784, 0.3052 ) }
    dend_15 { pt3dadd( 386.196, 357.776, 41.3902, 0.2542 ) }
    dend_15 { pt3dadd( 386.511, 357.107, 41.2171, 0.2458 ) }
    dend_15 { pt3dadd( 387.247, 356.369, 41.1194, 0.4576 ) }
    dend_15 { pt3dadd( 387.73, 355.942, 40.9304, 0.5444 ) }
    dend_15 { pt3dadd( 388.415, 355.21, 40.6501, 0.4728 ) }
    dend_15 { pt3dadd( 388.845, 354.321, 40.441, 0.5488 ) }
    dend_15 { pt3dadd( 389.418, 353.839, 39.76, 0.4576 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 26/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 351.572, 429.064, 39.1552, 0.3814 ) }
    dend_14 { pt3dadd( 350.831, 428.189, 38.7545, 0.5586 ) }
    dend_14 { pt3dadd( 349.862, 427.584, 38.3939, 0.5338 ) }
    dend_14 { pt3dadd( 348.898, 427.007, 38.0019, 0.531 ) }
    dend_14 { pt3dadd( 347.997, 426.341, 37.5936, 0.4812 ) }
    dend_14 { pt3dadd( 347.394, 425.375, 37.2322, 0.4538 ) }
    dend_14 { pt3dadd( 347.092, 424.274, 36.8939, 0.411 ) }
    dend_14 { pt3dadd( 346.706, 423.235, 36.4924, 0.455 ) }
    dend_14 { pt3dadd( 346.208, 422.372, 35.9374, 0.4442 ) }
    dend_14 { pt3dadd( 345.644, 421.494, 35.3366, 0.5488 ) }
    dend_14 { pt3dadd( 344.838, 420.72, 34.9076, 0.6706 ) }
    dend_14 { pt3dadd( 343.789, 420.355, 34.6094, 0.8496 ) }
    dend_14 { pt3dadd( 342.647, 420.334, 34.3218, 0.9066 ) }
    dend_14 { pt3dadd( 341.569, 420.454, 33.9472, 0.8934 ) }
    dend_14 { pt3dadd( 340.528, 420.376, 33.4642, 0.8214 ) }
    dend_14 { pt3dadd( 339.893, 419.533, 32.9328, 0.763 ) }
    dend_14 { pt3dadd( 339.769, 418.514, 32.4145, 0.7096 ) }
    dend_14 { pt3dadd( 340.085, 417.439, 31.9455, 0.674 ) }
    dend_14 { pt3dadd( 340.428, 416.369, 31.5697, 0.661 ) }
    dend_14 { pt3dadd( 340.677, 415.263, 31.3706, 0.7044 ) }
    dend_14 { pt3dadd( 340.639, 414.155, 31.3482, 0.8076 ) }
    dend_14 { pt3dadd( 340.246, 413.206, 31.3194, 0.988 ) }
    dend_14 { pt3dadd( 339.974, 412.323, 31.4037, 0.9386 ) }
    dend_14 { pt3dadd( 339.432, 411.576, 31.5104, 0.5228 ) }
    dend_14 { pt3dadd( 339.387, 410.459, 31.5132, 0.4846 ) }
    dend_14 { pt3dadd( 339.084, 409.502, 31.339, 0.4466 ) }
    dend_14 { pt3dadd( 339.001, 408.654, 31.3082, 0.6818 ) }
    dend_14 { pt3dadd( 338.288, 408.173, 31.3247, 0.3176 ) }
    dend_14 { pt3dadd( 338.011, 407.255, 31.234, 0.5658 ) }
    dend_14 { pt3dadd( 337.442, 406.488, 31.2194, 0.6232 ) }
    dend_14 { pt3dadd( 336.786, 406.008, 31.33, 0.5758 ) }
    dend_14 { pt3dadd( 336.119, 405.492, 31.4482, 0.6444 ) }
    dend_14 { pt3dadd( 335.25, 405.35, 31.4689, 0.6152 ) }
    dend_14 { pt3dadd( 334.549, 404.65, 31.4107, 0.5592 ) }
    dend_14 { pt3dadd( 333.6, 404.395, 31.3334, 0.4322 ) }
    dend_14 { pt3dadd( 332.722, 404.016, 31.0425, 0.6948 ) }
    dend_14 { pt3dadd( 331.801, 404.133, 30.5116, 0.627 ) }
    dend_14 { pt3dadd( 330.967, 403.865, 29.8399, 0.6018 ) }
    dend_14 { pt3dadd( 329.965, 403.601, 29.2776, 0.5592 ) }
    dend_14 { pt3dadd( 329.361, 402.889, 28.7112, 0.5822 ) }
    dend_14 { pt3dadd( 328.681, 402.193, 28.1814, 0.3772 ) }
    dend_14 { pt3dadd( 327.973, 401.651, 27.8877, 0.3886 ) }
    dend_14 { pt3dadd( 327.661, 400.808, 27.6657, 0.512 ) }
    dend_14 { pt3dadd( 327.023, 400.068, 27.4476, 0.356 ) }
    dend_14 { pt3dadd( 326.787, 399.139, 27.2082, 0.5348 ) }
    dend_14 { pt3dadd( 326.494, 398.238, 26.9668, 0.49 ) }
    dend_14 { pt3dadd( 326.574, 397.491, 27.0105, 0.602 ) }
    dend_14 { pt3dadd( 326.546, 396.418, 27.1866, 0.4748 ) }
    dend_14 { pt3dadd( 326.462, 395.333, 27.3972, 0.3816 ) }
    dend_14 { pt3dadd( 326.219, 394.515, 27.7122, 0.6102 ) }
    dend_14 { pt3dadd( 326.242, 393.492, 27.7866, 0.599 ) }
    dend_14 { pt3dadd( 326.003, 392.377, 27.7782, 0.6356 ) }
    dend_14 { pt3dadd( 325.926, 391.256, 27.7138, 0.5516 ) }
    dend_14 { pt3dadd( 325.512, 390.598, 27.7581, 0.4868 ) }
    dend_14 { pt3dadd( 325.062, 390.071, 27.5022, 0.6272 ) }
    dend_14 { pt3dadd( 324.194, 389.547, 27.1393, 0.356 ) }
    dend_14 { pt3dadd( 323.397, 389.35, 26.9237, 0.5286 ) }
    dend_14 { pt3dadd( 322.864, 389.071, 26.4524, 0.4428 ) }
    dend_14 { pt3dadd( 322.837, 388.041, 25.9361, 0.539 ) }
    dend_14 { pt3dadd( 322.385, 387.587, 25.5388, 0.3564 ) }
    dend_14 { pt3dadd( 322.265, 386.672, 25.2756, 0.4068 ) }
    dend_14 { pt3dadd( 321.551, 386.099, 24.995, 0.384 ) }
    dend_14 { pt3dadd( 321.187, 385.423, 24.6775, 0.551 ) }
    dend_14 { pt3dadd( 320.418, 384.842, 24.4605, 0.5872 ) }
    dend_14 { pt3dadd( 319.288, 384.707, 24.292, 0.5018 ) }
    dend_14 { pt3dadd( 318.246, 384.53, 24.1254, 0.4674 ) }
    dend_14 { pt3dadd( 317.491, 383.835, 23.9002, 0.5802 ) }
    dend_14 { pt3dadd( 317.077, 382.813, 23.7017, 0.517 ) }
    dend_14 { pt3dadd( 316.603, 381.796, 23.5432, 0.5848 ) }
    dend_14 { pt3dadd( 316.171, 380.751, 23.5085, 0.5056 ) }
    dend_14 { pt3dadd( 315.973, 379.642, 23.5679, 0.5024 ) }
    dend_14 { pt3dadd( 315.138, 378.948, 23.6813, 0.5568 ) }
    dend_14 { pt3dadd( 314.09, 378.629, 23.8972, 0.5946 ) }
    dend_14 { pt3dadd( 312.994, 378.472, 24.1212, 0.3566 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_14 { pt3dadd( 312.346, 377.63, 24.3211, 0.5374 ) }
    dend_14 { pt3dadd( 311.867, 376.764, 24.4196, 0.6764 ) }
    dend_14 { pt3dadd( 311.125, 376.163, 24.5255, 0.6248 ) }
    dend_14 { pt3dadd( 310.343, 375.741, 24.5633, 0.4576 ) }
    dend_14 { pt3dadd( 309.413, 375.216, 24.5664, 0.5672 ) }
    dend_14 { pt3dadd( 308.583, 374.604, 24.6834, 0.661 ) }
    dend_14 { pt3dadd( 308.134, 373.852, 24.5672, 0.5848 ) }
    dend_14 { pt3dadd( 307.678, 372.89, 24.3793, 0.6356 ) }
    dend_14 { pt3dadd( 307.347, 371.817, 24.2024, 0.5122 ) }
    dend_14 { pt3dadd( 306.957, 370.888, 24.1408, 0.5592 ) }
    dend_14 { pt3dadd( 306.743, 370.03, 24.0848, 0.5354 ) }
    dend_14 { pt3dadd( 306.584, 369.271, 23.8837, 0.5228 ) }
    dend_14 { pt3dadd( 306.003, 368.527, 23.8104, 0.389 ) }
    dend_14 { pt3dadd( 305.099, 368.147, 23.8459, 0.661 ) }
    dend_14 { pt3dadd( 304.567, 367.311, 23.8078, 0.561 ) }
    dend_14 { pt3dadd( 304.081, 366.47, 23.5978, 0.538 ) }
    dend_14 { pt3dadd( 304.279, 365.407, 23.4184, 0.4408 ) }
    dend_14 { pt3dadd( 303.846, 364.965, 23.1246, 0.3852 ) }
    dend_14 { pt3dadd( 303.663, 364.211, 23.0208, 0.5682 ) }
    dend_14 { pt3dadd( 304.06, 363.227, 22.8679, 0.3044 ) }
    dend_14 { pt3dadd( 304.762, 362.648, 22.96, 0.3814 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 21/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 348.107, 438.724, 43.1276, 0.661 ) }
    dend_10 { pt3dadd( 347.712, 438.342, 43.0763, 0.6254 ) }
    dend_10 { pt3dadd( 346.895, 437.55, 43.1332, 0.5516 ) }
    dend_10 { pt3dadd( 346.079, 436.76, 43.2701, 0.4778 ) }
    dend_10 { pt3dadd( 345.263, 435.968, 43.4496, 0.4042 ) }
    dend_10 { pt3dadd( 344.446, 435.178, 43.6374, 0.3304 ) }
    dend_10 { pt3dadd( 343.885, 434.28, 43.8239, 0.5656 ) }
    dend_10 { pt3dadd( 343.516, 433.223, 43.9491, 0.5678 ) }
    dend_10 { pt3dadd( 343.009, 432.407, 43.8892, 0.483 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 30/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 348.107, 438.724, 43.1276, 0.661 ) }
    dend_3 { pt3dadd( 348.687, 438.081, 43.6125, 0.6864 ) }
    dend_3 { pt3dadd( 349.251, 437.208, 43.9088, 0.4368 ) }
    dend_3 { pt3dadd( 350.117, 436.467, 44.0146, 0.284 ) }
    dend_3 { pt3dadd( 350.977, 435.739, 44.0594, 0.356 ) }
    dend_3 { pt3dadd( 351.818, 435.559, 44.0843, 0.6524 ) }
    dend_3 { pt3dadd( 352.466, 434.949, 44.133, 0.4322 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 37/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 290.347, 438.038, 52.717, 0.5338 ) }
    dend_37 { pt3dadd( 289.902, 437.466, 53.2227, 0.5848 ) }
    dend_37 { pt3dadd( 289.544, 437.351, 53.8258, 0.2542 ) }
    dend_37 { pt3dadd( 288.768, 437.694, 54.4653, 0.2288 ) }
    dend_37 { pt3dadd( 288.043, 437.085, 54.7714, 0.4104 ) }
    dend_37 { pt3dadd( 287.272, 436.341, 54.8654, 0.5532 ) }
    dend_37 { pt3dadd( 286.458, 435.864, 55.0298, 0.6662 ) }
    dend_37 { pt3dadd( 285.924, 435.306, 55.2712, 0.3512 ) }
    dend_37 { pt3dadd( 284.999, 435.487, 55.3305, 0.7052 ) }
    dend_37 { pt3dadd( 284.284, 435.056, 55.2742, 0.7568 ) }
    dend_37 { pt3dadd( 283.719, 434.725, 55.4674, 0.4474 ) }
    dend_37 { pt3dadd( 282.904, 434.651, 55.5985, 0.4576 ) }
    dend_37 { pt3dadd( 281.911, 435.072, 55.6237, 0.4576 ) }
    dend_37 { pt3dadd( 281.127, 434.837, 55.6853, 0.5932 ) }
    dend_37 { pt3dadd( 280.371, 434.022, 55.7256, 0.4074 ) }
    dend_37 { pt3dadd( 279.928, 433.195, 55.8704, 0.633 ) }
    dend_37 { pt3dadd( 279.351, 432.267, 55.9924, 0.449 ) }
    dend_37 { pt3dadd( 278.638, 431.652, 55.9154, 0.4692 ) }
    dend_37 { pt3dadd( 277.553, 431.528, 55.8018, 0.4964 ) }
    dend_37 { pt3dadd( 276.718, 431.289, 55.5405, 0.356 ) }
    dend_37 { pt3dadd( 275.993, 430.496, 55.246, 0.3304 ) }
    dend_37 { pt3dadd( 275.529, 429.915, 55.0438, 0.2288 ) }
    dend_37 { pt3dadd( 274.708, 429.686, 55.0365, 0.305 ) }
    dend_37 { pt3dadd( 273.647, 429.572, 55.1382, 0.5536 ) }
    dend_37 { pt3dadd( 272.869, 428.985, 55.3115, 0.5038 ) }
    dend_37 { pt3dadd( 271.929, 428.433, 55.5047, 0.5412 ) }
    dend_37 { pt3dadd( 270.97, 428.094, 55.7119, 0.4204 ) }
    dend_37 { pt3dadd( 270.078, 427.66, 55.7631, 0.3814 ) }
    dend_37 { pt3dadd( 268.999, 427.398, 55.8715, 0.3304 ) }
    dend_37 { pt3dadd( 268.213, 427.083, 56.0577, 0.3304 ) }
    dend_37 { pt3dadd( 267.38, 427.055, 56.0804, 0.4438 ) }
    dend_37 { pt3dadd( 266.554, 426.515, 56.2663, 0.4576 ) }
    dend_37 { pt3dadd( 265.925, 425.845, 56.5253, 0.5014 ) }
    dend_37 { pt3dadd( 265.106, 425.291, 56.7641, 0.4596 ) }
    dend_37 { pt3dadd( 264.567, 424.359, 56.936, 0.5682 ) }
    dend_37 { pt3dadd( 264.035, 423.423, 57.1822, 0.2358 ) }
    dend_37 { pt3dadd( 263.232, 423.049, 57.4076, 0.2578 ) }
    dend_37 { pt3dadd( 262.53, 422.508, 57.7192, 0.5812 ) }
    dend_37 { pt3dadd( 261.881, 421.803, 58.0857, 0.4668 ) }
    dend_37 { pt3dadd( 261.151, 420.96, 58.3901, 0.521 ) }
    dend_37 { pt3dadd( 260.492, 420.307, 58.606, 0.3304 ) }
    dend_37 { pt3dadd( 260.179, 419.303, 58.8182, 0.5592 ) }
    dend_37 { pt3dadd( 259.794, 418.47, 58.8585, 0.482 ) }
    dend_37 { pt3dadd( 258.903, 417.973, 58.9305, 0.3588 ) }
    dend_37 { pt3dadd( 258.275, 417.139, 59.1158, 0.4328 ) }
    dend_37 { pt3dadd( 257.724, 416.17, 59.2959, 0.5338 ) }
    dend_37 { pt3dadd( 257.078, 415.249, 59.5314, 0.4872 ) }
    dend_37 { pt3dadd( 256.511, 414.298, 59.7537, 0.563 ) }
    dend_37 { pt3dadd( 255.959, 413.315, 59.9665, 0.5422 ) }
    dend_37 { pt3dadd( 255.693, 412.351, 60.3092, 0.6574 ) }
    dend_37 { pt3dadd( 255.28, 411.617, 60.6124, 0.3836 ) }
    dend_37 { pt3dadd( 254.535, 410.918, 60.7869, 0.4674 ) }
    dend_37 { pt3dadd( 253.769, 410.148, 61.0257, 0.5848 ) }
    dend_37 { pt3dadd( 253.125, 409.217, 61.2671, 0.4794 ) }
    dend_37 { pt3dadd( 252.458, 408.559, 61.3497, 0.5022 ) }
    dend_37 { pt3dadd( 251.793, 407.961, 61.6134, 0.5066 ) }
    dend_37 { pt3dadd( 250.933, 407.378, 61.8873, 0.4576 ) }
    dend_37 { pt3dadd( 249.835, 407.16, 62.1645, 0.5206 ) }
    dend_37 { pt3dadd( 248.906, 406.607, 62.4677, 0.4216 ) }
    dend_37 { pt3dadd( 248.486, 405.667, 62.7012, 0.4068 ) }
    dend_37 { pt3dadd( 248.046, 404.63, 62.8914, 0.3144 ) }
    dend_37 { pt3dadd( 247.288, 403.838, 63.1288, 0.2288 ) }
    dend_37 { pt3dadd( 246.638, 403.573, 63.4203, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_37 { pt3dadd( 245.629, 403.451, 63.677, 0.305 ) }
    dend_37 { pt3dadd( 245.145, 402.596, 63.8137, 0.2472 ) }
    dend_37 { pt3dadd( 244.849, 401.519, 63.9243, 0.2288 ) }
    dend_37 { pt3dadd( 244.161, 400.616, 63.9946, 0.2364 ) }
    dend_37 { pt3dadd( 243.62, 399.695, 64.0556, 0.3612 ) }
    dend_37 { pt3dadd( 243.114, 398.748, 64.1166, 0.3064 ) }
    dend_37 { pt3dadd( 242.511, 397.952, 64.2869, 0.356 ) }
    dend_37 { pt3dadd( 241.702, 397.316, 64.4708, 0.2488 ) }
    dend_37 { pt3dadd( 240.937, 396.809, 64.5498, 0.302 ) }
    dend_37 { pt3dadd( 239.949, 396.563, 64.7682, 0.2688 ) }
    dend_37 { pt3dadd( 239.207, 395.962, 65.0418, 0.4008 ) }
    dend_37 { pt3dadd( 238.118, 396.096, 65.2145, 0.305 ) }
    dend_37 { pt3dadd( 237.079, 395.894, 65.413, 0.539 ) }
    dend_37 { pt3dadd( 236.395, 395.592, 65.8372, 0.3734 ) }
    dend_37 { pt3dadd( 235.51, 395.395, 66.1906, 0.3206 ) }
    dend_37 { pt3dadd( 234.685, 395.547, 66.2987, 0.4184 ) }
    dend_37 { pt3dadd( 234.062, 395.366, 66.92, 0.4576 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 290.347, 438.038, 52.717, 0.5338 ) }
    dend_36 { pt3dadd( 289.775, 438.354, 52.4205, 0.4326 ) }
    dend_36 { pt3dadd( 289.973, 438.905, 53.7928, 0.65 ) }
    dend_36 { pt3dadd( 289.417, 439.652, 54.3595, 0.5484 ) }
    dend_36 { pt3dadd( 288.438, 440.097, 54.7856, 0.3946 ) }
    dend_36 { pt3dadd( 287.952, 440.884, 55.1088, 0.37 ) }
    dend_36 { pt3dadd( 286.948, 441.158, 55.2955, 0.6732 ) }
    dend_36 { pt3dadd( 285.93, 441.132, 55.3549, 0.5242 ) }
    dend_36 { pt3dadd( 285.261, 441.576, 55.2681, 0.5492 ) }
    dend_36 { pt3dadd( 284.393, 442.013, 55.3294, 0.2288 ) }
    dend_36 { pt3dadd( 283.474, 442.424, 55.3353, 0.305 ) }
    dend_36 { pt3dadd( 282.709, 442.992, 55.4537, 0.4772 ) }
    dend_36 { pt3dadd( 282.105, 443.136, 55.5929, 0.2384 ) }
    dend_36 { pt3dadd( 281.56, 444.086, 55.7421, 0.4522 ) }
    dend_36 { pt3dadd( 280.988, 445.009, 55.8622, 0.5488 ) }
    dend_36 { pt3dadd( 280.488, 445.927, 56.0171, 0.5764 ) }
    dend_36 { pt3dadd( 279.638, 446.579, 56.1165, 0.2542 ) }
    dend_36 { pt3dadd( 278.704, 447.202, 56.1075, 0.3648 ) }
    dend_36 { pt3dadd( 278.007, 447.418, 56.2142, 0.2288 ) }
    dend_36 { pt3dadd( 277.176, 447.905, 56.259, 0.2288 ) }
    dend_36 { pt3dadd( 276.512, 448.597, 56.2111, 0.4438 ) }
    dend_36 { pt3dadd( 275.878, 449.249, 56.0454, 0.2288 ) }
    dend_36 { pt3dadd( 274.847, 449.613, 55.8916, 0.4132 ) }
    dend_36 { pt3dadd( 274.006, 450.307, 55.8877, 0.4074 ) }
    dend_36 { pt3dadd( 273.05, 450.717, 55.9882, 0.292 ) }
    dend_36 { pt3dadd( 272.311, 451.0, 55.8866, 0.4576 ) }
    dend_36 { pt3dadd( 271.406, 451.423, 56.0204, 0.4576 ) }
    dend_36 { pt3dadd( 270.46, 451.946, 56.2652, 0.4576 ) }
    dend_36 { pt3dadd( 269.461, 452.272, 56.4486, 0.245 ) }
    dend_36 { pt3dadd( 268.331, 452.326, 56.6068, 0.2288 ) }
    dend_36 { pt3dadd( 267.258, 452.302, 56.8464, 0.258 ) }
    dend_36 { pt3dadd( 266.131, 452.253, 57.0055, 0.3612 ) }
    dend_36 { pt3dadd( 265.065, 452.452, 57.12, 0.4322 ) }
    // Section: apic_10, id: apic_10, parent: apic_6 (entry count 50/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 340.899, 436.449, 57.6556, 0.4068 ) }
    apic_10 { pt3dadd( 340.649, 437.571, 58.1778, 0.2626 ) }
    apic_10 { pt3dadd( 340.357, 438.461, 59.2701, 0.3918 ) }
    apic_10 { pt3dadd( 340.441, 439.583, 59.6694, 0.4408 ) }
    apic_10 { pt3dadd( 340.405, 440.582, 60.2669, 0.2542 ) }
    apic_10 { pt3dadd( 340.18, 441.533, 61.0103, 0.3216 ) }
    apic_10 { pt3dadd( 339.855, 442.48, 61.705, 0.3076 ) }
    apic_10 { pt3dadd( 339.768, 443.395, 62.4039, 0.2846 ) }
    apic_10 { pt3dadd( 339.651, 444.404, 62.9028, 0.2762 ) }
    apic_10 { pt3dadd( 339.302, 445.432, 63.3923, 0.2288 ) }
    apic_10 { pt3dadd( 338.949, 446.273, 63.9489, 0.2288 ) }
    apic_10 { pt3dadd( 339.431, 446.913, 64.5896, 0.2288 ) }
    apic_10 { pt3dadd( 339.561, 447.996, 65.1347, 0.3586 ) }
    apic_10 { pt3dadd( 339.372, 449.007, 65.5721, 0.2654 ) }
    apic_10 { pt3dadd( 339.082, 449.925, 65.9274, 0.2808 ) }
    apic_10 { pt3dadd( 338.853, 451.03, 66.1464, 0.2406 ) }
    apic_10 { pt3dadd( 339.104, 452.124, 66.2827, 0.3022 ) }
    apic_10 { pt3dadd( 339.358, 453.065, 66.5062, 0.391 ) }
    apic_10 { pt3dadd( 339.815, 454.0, 66.7848, 0.2436 ) }
    apic_10 { pt3dadd( 340.054, 455.02, 67.004, 0.2288 ) }
    apic_10 { pt3dadd( 340.759, 455.799, 67.23, 0.2288 ) }
    apic_10 { pt3dadd( 340.951, 456.848, 67.41, 0.2288 ) }
    apic_10 { pt3dadd( 341.487, 457.661, 67.6374, 0.311 ) }
    apic_10 { pt3dadd( 341.627, 458.722, 67.706, 0.3528 ) }
    apic_10 { pt3dadd( 342.234, 459.669, 67.7522, 0.2436 ) }
    apic_10 { pt3dadd( 342.573, 460.658, 67.7998, 0.2288 ) }
    apic_10 { pt3dadd( 343.054, 461.582, 67.7908, 0.2288 ) }
    apic_10 { pt3dadd( 343.372, 462.572, 67.8054, 0.2288 ) }
    apic_10 { pt3dadd( 343.515, 463.447, 67.9342, 0.2478 ) }
    apic_10 { pt3dadd( 343.653, 464.295, 68.2452, 0.27 ) }
    apic_10 { pt3dadd( 343.596, 465.394, 68.434, 0.4052 ) }
    apic_10 { pt3dadd( 343.572, 466.516, 68.5457, 0.4516 ) }
    apic_10 { pt3dadd( 343.532, 467.626, 68.7201, 0.4208 ) }
    apic_10 { pt3dadd( 343.414, 468.748, 68.8736, 0.5624 ) }
    apic_10 { pt3dadd( 343.338, 469.862, 68.9514, 0.4436 ) }
    apic_10 { pt3dadd( 343.429, 471.183, 68.9004, 0.2288 ) }
    apic_10 { pt3dadd( 343.543, 472.22, 68.9044, 0.2288 ) }
    apic_10 { pt3dadd( 343.456, 473.219, 69.13, 0.3304 ) }
    apic_10 { pt3dadd( 343.656, 474.31, 69.4025, 0.3746 ) }
    apic_10 { pt3dadd( 343.772, 475.355, 69.834, 0.4698 ) }
    apic_10 { pt3dadd( 343.772, 476.461, 70.2579, 0.4578 ) }
    apic_10 { pt3dadd( 343.886, 477.324, 70.7988, 0.2812 ) }
    apic_10 { pt3dadd( 344.058, 478.438, 71.192, 0.3436 ) }
    apic_10 { pt3dadd( 344.35, 479.536, 71.5226, 0.4882 ) }
    apic_10 { pt3dadd( 344.311, 480.612, 71.9062, 0.403 ) }
    apic_10 { pt3dadd( 344.409, 481.623, 72.2963, 0.2758 ) }
    apic_10 { pt3dadd( 344.828, 482.636, 72.597, 0.338 ) }
    apic_10 { pt3dadd( 345.47, 483.433, 72.8893, 0.3502 ) }
    apic_10 { pt3dadd( 345.916, 484.327, 73.0752, 0.2466 ) }
    apic_10 { pt3dadd( 346.681, 485.117, 73.222, 0.237 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_10 { pt3dadd( 346.975, 486.2, 73.36, 0.3304 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 1/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 340.899, 436.449, 57.6556, 0.4068 ) }
    apic_7 { pt3dadd( 340.247, 435.681, 58.434, 0.446 ) }
    apic_7 { pt3dadd( 339.699, 434.718, 59.0682, 0.3728 ) }
    apic_7 { pt3dadd( 338.988, 433.902, 59.6095, 0.305 ) }
    apic_7 { pt3dadd( 338.022, 433.412, 60.0286, 0.4756 ) }
    apic_7 { pt3dadd( 337.145, 433.251, 60.6136, 0.23 ) }
    apic_7 { pt3dadd( 336.174, 432.768, 61.1862, 0.3124 ) }
    apic_7 { pt3dadd( 335.048, 432.772, 61.6781, 0.5116 ) }
    apic_7 { pt3dadd( 333.945, 432.588, 62.1863, 0.6346 ) }
    apic_7 { pt3dadd( 332.85, 432.546, 62.7091, 0.511 ) }
    apic_7 { pt3dadd( 331.785, 432.216, 63.1725, 0.4576 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 12/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 369.398, 418.552, 54.0411, 0.5338 ) }
    dend_23 { pt3dadd( 369.854, 419.72, 53.9389, 0.305 ) }
    dend_23 { pt3dadd( 370.569, 420.558, 53.8824, 0.3772 ) }
    dend_23 { pt3dadd( 371.418, 421.28, 53.8474, 0.483 ) }
    dend_23 { pt3dadd( 372.222, 421.993, 53.7435, 0.5338 ) }
    dend_23 { pt3dadd( 373.086, 422.511, 53.7306, 0.589 ) }
    dend_23 { pt3dadd( 373.748, 423.335, 53.662, 0.4214 ) }
    dend_23 { pt3dadd( 374.449, 424.144, 53.6452, 0.3814 ) }
    dend_23 { pt3dadd( 375.357, 424.66, 53.5693, 0.5456 ) }
    dend_23 { pt3dadd( 376.384, 424.882, 53.545, 0.2394 ) }
    dend_23 { pt3dadd( 377.43, 425.17, 53.4632, 0.5462 ) }
    dend_23 { pt3dadd( 378.186, 425.677, 53.1742, 0.447 ) }
    dend_23 { pt3dadd( 379.029, 426.332, 52.9141, 0.6102 ) }
    dend_23 { pt3dadd( 379.948, 426.903, 52.3289, 0.5338 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 26/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 369.398, 418.552, 54.0411, 0.5338 ) }
    dend_22 { pt3dadd( 369.792, 418.726, 54.1299, 0.3016 ) }
    dend_22 { pt3dadd( 370.745, 418.666, 53.8485, 0.4068 ) }
    dend_22 { pt3dadd( 371.769, 418.532, 53.755, 0.8932 ) }
    dend_22 { pt3dadd( 372.778, 418.475, 53.52, 0.61 ) }
    dend_22 { pt3dadd( 373.415, 418.05, 53.2692, 0.6702 ) }
    dend_22 { pt3dadd( 374.444, 418.132, 53.235, 0.3304 ) }
    dend_22 { pt3dadd( 375.278, 417.872, 53.1062, 0.756 ) }
    dend_22 { pt3dadd( 376.339, 417.531, 52.9808, 0.5766 ) }
    dend_22 { pt3dadd( 377.451, 417.562, 52.9054, 0.5778 ) }
    dend_22 { pt3dadd( 378.388, 417.773, 52.7775, 0.526 ) }
    dend_22 { pt3dadd( 379.411, 417.511, 52.4588, 0.855 ) }
    dend_22 { pt3dadd( 380.228, 416.938, 52.1475, 0.5958 ) }
    dend_22 { pt3dadd( 381.237, 416.645, 51.8437, 0.5154 ) }
    dend_22 { pt3dadd( 382.323, 416.724, 51.6575, 0.6864 ) }
    dend_22 { pt3dadd( 383.278, 416.612, 51.5242, 0.6964 ) }
    dend_22 { pt3dadd( 384.158, 417.061, 51.4839, 0.661 ) }
    dend_22 { pt3dadd( 385.082, 417.439, 51.3075, 0.5626 ) }
    dend_22 { pt3dadd( 386.207, 417.331, 51.137, 0.4204 ) }
    dend_22 { pt3dadd( 387.015, 416.768, 50.9552, 0.4824 ) }
    dend_22 { pt3dadd( 387.857, 416.302, 50.7766, 0.2288 ) }
    dend_22 { pt3dadd( 388.618, 416.416, 50.5282, 0.5244 ) }
    dend_22 { pt3dadd( 389.665, 416.273, 50.5078, 0.5104 ) }
    dend_22 { pt3dadd( 390.607, 415.852, 50.4283, 0.4986 ) }
    dend_22 { pt3dadd( 391.043, 415.19, 50.2597, 0.4232 ) }
    dend_22 { pt3dadd( 391.865, 414.586, 50.3443, 0.3238 ) }
    dend_22 { pt3dadd( 392.511, 414.247, 50.4347, 0.797 ) }
    dend_22 { pt3dadd( 393.541, 414.034, 50.449, 0.5618 ) }
    dend_22 { pt3dadd( 394.409, 414.311, 50.4904, 0.6886 ) }
    dend_22 { pt3dadd( 395.354, 414.79, 50.3608, 0.54 ) }
    dend_22 { pt3dadd( 396.258, 415.226, 50.2438, 0.5876 ) }
    dend_22 { pt3dadd( 397.327, 415.25, 50.0321, 0.6146 ) }
    dend_22 { pt3dadd( 398.398, 414.976, 49.7218, 0.5708 ) }
    dend_22 { pt3dadd( 399.495, 414.85, 49.3917, 0.5834 ) }
    dend_22 { pt3dadd( 400.303, 414.814, 49.0417, 0.4134 ) }
    dend_22 { pt3dadd( 401.333, 414.59, 48.3213, 0.4042 ) }
    dend_22 { pt3dadd( 402.459, 414.23, 47.4992, 0.4576 ) }
    dend_22 { pt3dadd( 403.26, 414.205, 47.7554, 0.5592 ) }
    dend_22 { pt3dadd( 403.375, 414.666, 48.1443, 0.4862 ) }
    dend_22 { pt3dadd( 404.351, 414.691, 48.6192, 0.5466 ) }
    dend_22 { pt3dadd( 405.158, 414.401, 49.1803, 0.3198 ) }
    dend_22 { pt3dadd( 406.242, 414.471, 49.5457, 0.4094 ) }
    dend_22 { pt3dadd( 407.202, 414.586, 49.5452, 0.6238 ) }
    dend_22 { pt3dadd( 408.199, 414.471, 49.4365, 0.4924 ) }
    dend_22 { pt3dadd( 409.324, 414.581, 49.1831, 0.503 ) }
    dend_22 { pt3dadd( 410.373, 414.367, 48.8242, 0.4614 ) }
    dend_22 { pt3dadd( 411.404, 414.671, 48.3543, 0.4814 ) }
    dend_22 { pt3dadd( 412.212, 414.175, 47.9886, 0.2522 ) }
    dend_22 { pt3dadd( 413.222, 414.317, 47.5944, 0.6106 ) }
    dend_22 { pt3dadd( 414.221, 414.586, 47.1402, 0.905 ) }
    dend_22 { pt3dadd( 414.943, 414.165, 46.5279, 0.49 ) }
    dend_22 { pt3dadd( 415.349, 413.251, 46.034, 0.6356 ) }
    dend_22 { pt3dadd( 415.309, 412.136, 45.5734, 0.6886 ) }
    dend_22 { pt3dadd( 414.972, 411.215, 45.1399, 0.76 ) }
    dend_22 { pt3dadd( 414.186, 410.925, 44.4993, 0.5462 ) }
    dend_22 { pt3dadd( 413.67, 410.436, 43.7385, 0.2444 ) }
    dend_22 { pt3dadd( 414.333, 409.802, 42.905, 0.3992 ) }
    dend_22 { pt3dadd( 414.846, 409.781, 41.7606, 0.6102 ) }
    dend_22 { pt3dadd( 415.718, 409.688, 40.5902, 0.4322 ) }
    dend_22 { pt3dadd( 416.393, 408.905, 39.6906, 0.7834 ) }
    dend_22 { pt3dadd( 416.936, 408.294, 38.6994, 0.7016 ) }
    dend_22 { pt3dadd( 417.573, 408.505, 37.5939, 0.664 ) }
    dend_22 { pt3dadd( 418.132, 407.846, 36.5481, 0.8944 ) }
    dend_22 { pt3dadd( 417.941, 408.099, 35.392, 0.839 ) }
    dend_22 { pt3dadd( 418.038, 407.717, 34.1541, 0.6056 ) }
    dend_22 { pt3dadd( 418.659, 406.992, 33.0949, 0.4576 ) }
    dend_22 { pt3dadd( 419.308, 406.519, 32.3288, 0.597 ) }
    dend_22 { pt3dadd( 420.153, 406.252, 31.9774, 0.6864 ) }
    dend_22 { pt3dadd( 420.945, 405.662, 31.9052, 0.4928 ) }
    dend_22 { pt3dadd( 421.956, 405.537, 31.7895, 0.485 ) }
    dend_22 { pt3dadd( 422.594, 405.018, 31.6193, 0.5338 ) }
    dend_22 { pt3dadd( 422.454, 404.671, 31.1228, 0.4828 ) }
    dend_22 { pt3dadd( 422.575, 403.854, 30.6202, 0.6774 ) }
    dend_22 { pt3dadd( 423.496, 403.362, 30.161, 0.6102 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_22 { pt3dadd( 423.869, 402.863, 29.7657, 0.5364 ) }
    dend_22 { pt3dadd( 424.554, 401.947, 29.4482, 0.4006 ) }
    dend_22 { pt3dadd( 424.22, 401.193, 29.1466, 0.5592 ) }
    dend_22 { pt3dadd( 423.931, 400.478, 28.6535, 0.4698 ) }
    dend_22 { pt3dadd( 424.14, 399.532, 28.2248, 0.5056 ) }
    dend_22 { pt3dadd( 424.882, 398.957, 27.827, 0.5114 ) }
    dend_22 { pt3dadd( 425.281, 398.448, 27.3392, 0.2288 ) }
    dend_22 { pt3dadd( 425.928, 397.769, 26.847, 0.308 ) }
    dend_22 { pt3dadd( 426.842, 397.654, 26.6613, 0.2288 ) }
    dend_22 { pt3dadd( 427.681, 397.373, 26.6647, 0.3804 ) }
    dend_22 { pt3dadd( 428.359, 396.522, 26.588, 0.6688 ) }
    dend_22 { pt3dadd( 428.878, 396.166, 26.2399, 0.6052 ) }
    dend_22 { pt3dadd( 429.011, 395.612, 25.7166, 0.509 ) }
    dend_22 { pt3dadd( 429.53, 394.665, 25.2423, 0.575 ) }
    dend_22 { pt3dadd( 428.985, 393.928, 24.9354, 0.369 ) }
    dend_22 { pt3dadd( 429.04, 393.109, 24.8595, 0.5592 ) }
    dend_22 { pt3dadd( 429.495, 392.511, 24.8956, 0.3394 ) }
    dend_22 { pt3dadd( 430.03, 391.728, 24.7442, 0.7118 ) }
    dend_22 { pt3dadd( 430.716, 390.905, 24.08, 0.5592 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 19/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 343.009, 432.407, 43.8892, 0.483 ) }
    dend_12 { pt3dadd( 343.304, 431.107, 45.2066, 0.449 ) }
    dend_12 { pt3dadd( 343.534, 430.094, 45.9239, 0.4222 ) }
    dend_12 { pt3dadd( 343.764, 429.08, 46.2924, 0.3956 ) }
    dend_12 { pt3dadd( 343.658, 428.414, 46.5083, 0.6868 ) }
    dend_12 { pt3dadd( 343.842, 427.303, 46.6312, 0.5232 ) }
    dend_12 { pt3dadd( 343.999, 426.201, 46.6169, 0.4098 ) }
    dend_12 { pt3dadd( 343.886, 425.682, 46.3, 0.2288 ) }
    dend_12 { pt3dadd( 344.122, 424.985, 45.8223, 0.2288 ) }
    dend_12 { pt3dadd( 344.344, 424.009, 45.5815, 0.2288 ) }
    dend_12 { pt3dadd( 344.344, 422.914, 45.5476, 0.4058 ) }
    dend_12 { pt3dadd( 344.686, 422.369, 45.6702, 0.4564 ) }
    dend_12 { pt3dadd( 344.915, 421.308, 45.8724, 0.4086 ) }
    dend_12 { pt3dadd( 345.03, 420.205, 46.0032, 0.5562 ) }
    dend_12 { pt3dadd( 345.02, 419.193, 45.9659, 0.4936 ) }
    dend_12 { pt3dadd( 345.203, 418.201, 45.8634, 0.6584 ) }
    dend_12 { pt3dadd( 345.512, 417.12, 45.7069, 0.715 ) }
    dend_12 { pt3dadd( 345.312, 416.107, 45.4513, 0.5984 ) }
    dend_12 { pt3dadd( 345.221, 415.082, 45.2253, 0.5334 ) }
    dend_12 { pt3dadd( 345.702, 414.284, 45.0285, 0.7372 ) }
    dend_12 { pt3dadd( 345.738, 413.214, 44.8067, 0.6286 ) }
    dend_12 { pt3dadd( 346.166, 412.353, 44.5603, 0.5338 ) }
    dend_12 { pt3dadd( 346.746, 412.145, 44.0832, 0.6354 ) }
    dend_12 { pt3dadd( 347.363, 411.396, 43.7497, 0.4284 ) }
    dend_12 { pt3dadd( 347.624, 410.467, 43.6173, 0.305 ) }
    dend_12 { pt3dadd( 347.668, 409.61, 43.3905, 0.2288 ) }
    dend_12 { pt3dadd( 347.687, 408.675, 43.3026, 0.4576 ) }
    dend_12 { pt3dadd( 347.825, 407.738, 43.22, 0.3158 ) }
    dend_12 { pt3dadd( 347.877, 406.658, 43.0654, 0.4172 ) }
    dend_12 { pt3dadd( 347.96, 405.692, 42.9282, 0.3814 ) }
    dend_12 { pt3dadd( 347.547, 404.991, 42.761, 0.3776 ) }
    dend_12 { pt3dadd( 347.547, 404.491, 42.5306, 0.6664 ) }
    dend_12 { pt3dadd( 347.599, 403.652, 42.348, 0.6058 ) }
    dend_12 { pt3dadd( 347.401, 402.734, 42.1112, 0.5066 ) }
    dend_12 { pt3dadd( 347.197, 401.64, 41.9454, 0.6224 ) }
    dend_12 { pt3dadd( 346.59, 400.893, 42.0146, 0.4576 ) }
    dend_12 { pt3dadd( 346.018, 400.151, 42.0036, 0.5754 ) }
    dend_12 { pt3dadd( 345.712, 399.302, 42.1621, 0.3896 ) }
    dend_12 { pt3dadd( 345.145, 398.385, 42.2988, 0.4512 ) }
    dend_12 { pt3dadd( 344.914, 397.366, 42.3231, 0.5198 ) }
    dend_12 { pt3dadd( 344.35, 396.847, 42.275, 0.6736 ) }
    dend_12 { pt3dadd( 343.681, 396.483, 42.3959, 0.515 ) }
    dend_12 { pt3dadd( 343.314, 395.595, 42.28, 0.5848 ) }
    dend_12 { pt3dadd( 342.762, 394.173, 40.8033, 0.661 ) }
    dend_12 { pt3dadd( 342.661, 393.239, 40.635, 0.5094 ) }
    dend_12 { pt3dadd( 342.529, 392.25, 40.3956, 0.4312 ) }
    dend_12 { pt3dadd( 342.782, 391.343, 40.1083, 0.4036 ) }
    dend_12 { pt3dadd( 343.043, 390.478, 40.0607, 0.4486 ) }
    dend_12 { pt3dadd( 343.435, 389.637, 40.0565, 0.5454 ) }
    dend_12 { pt3dadd( 344.124, 388.961, 40.0674, 0.454 ) }
    dend_12 { pt3dadd( 344.797, 388.274, 39.9711, 0.6864 ) }
    dend_12 { pt3dadd( 345.774, 388.012, 39.8104, 0.4322 ) }
    dend_12 { pt3dadd( 346.178, 387.522, 39.8238, 0.355 ) }
    dend_12 { pt3dadd( 346.863, 387.015, 39.6446, 0.6356 ) }
    dend_12 { pt3dadd( 347.019, 386.426, 39.1866, 0.5564 ) }
    dend_12 { pt3dadd( 347.115, 385.456, 38.6081, 0.661 ) }
    dend_12 { pt3dadd( 347.885, 384.849, 38.0909, 0.5848 ) }
    dend_12 { pt3dadd( 348.623, 384.48, 37.6589, 0.4372 ) }
    dend_12 { pt3dadd( 349.289, 383.642, 37.2901, 0.5848 ) }
    dend_12 { pt3dadd( 349.606, 382.668, 36.9908, 0.6864 ) }
    dend_12 { pt3dadd( 349.44, 382.004, 36.6582, 0.5574 ) }
    dend_12 { pt3dadd( 349.103, 380.969, 36.3208, 0.483 ) }
    dend_12 { pt3dadd( 349.444, 380.052, 36.0685, 0.5116 ) }
    dend_12 { pt3dadd( 350.132, 379.838, 35.8428, 0.6444 ) }
    dend_12 { pt3dadd( 350.988, 379.638, 35.5267, 0.4102 ) }
    dend_12 { pt3dadd( 351.25, 378.774, 35.3643, 0.4576 ) }
    dend_12 { pt3dadd( 350.521, 378.128, 35.3951, 0.4576 ) }
    dend_12 { pt3dadd( 350.048, 377.396, 35.3814, 0.4576 ) }
    dend_12 { pt3dadd( 350.253, 376.716, 35.1369, 0.605 ) }
    dend_12 { pt3dadd( 350.811, 376.032, 34.8639, 0.3174 ) }
    dend_12 { pt3dadd( 351.377, 375.261, 34.7253, 0.2784 ) }
    dend_12 { pt3dadd( 351.489, 374.326, 34.7757, 0.2636 ) }
    dend_12 { pt3dadd( 351.767, 373.683, 34.5559, 0.6084 ) }
    dend_12 { pt3dadd( 351.329, 373.029, 34.4506, 0.4576 ) }
    dend_12 { pt3dadd( 351.05, 372.113, 34.2983, 0.5572 ) }
    dend_12 { pt3dadd( 351.154, 371.188, 34.139, 0.5634 ) }
    dend_12 { pt3dadd( 351.432, 370.208, 33.957, 0.5084 ) }
    dend_12 { pt3dadd( 351.208, 369.131, 33.8271, 0.3304 ) }
    dend_12 { pt3dadd( 350.885, 368.323, 33.7294, 0.424 ) }
    dend_12 { pt3dadd( 350.931, 367.418, 33.845, 0.4694 ) }
    dend_12 { pt3dadd( 350.645, 366.596, 33.7985, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_12 { pt3dadd( 351.4, 366.102, 33.6879, 0.4576 ) }
    dend_12 { pt3dadd( 351.958, 365.495, 33.5409, 0.6864 ) }
    dend_12 { pt3dadd( 352.125, 364.643, 33.556, 0.5512 ) }
    dend_12 { pt3dadd( 352.181, 363.537, 33.5446, 0.606 ) }
    dend_12 { pt3dadd( 352.349, 362.447, 33.5443, 0.4134 ) }
    dend_12 { pt3dadd( 353.092, 361.72, 33.6776, 0.4848 ) }
    dend_12 { pt3dadd( 353.382, 360.724, 33.6913, 0.385 ) }
    dend_12 { pt3dadd( 353.585, 359.661, 33.6745, 0.356 ) }
    dend_12 { pt3dadd( 353.64, 358.607, 33.5454, 0.2966 ) }
    dend_12 { pt3dadd( 353.725, 357.566, 33.4566, 0.3732 ) }
    dend_12 { pt3dadd( 353.752, 356.496, 33.3318, 0.6034 ) }
    dend_12 { pt3dadd( 354.038, 355.519, 33.1288, 0.304 ) }
    dend_12 { pt3dadd( 354.937, 355.098, 32.8997, 0.4308 ) }
    dend_12 { pt3dadd( 355.212, 354.234, 32.7552, 0.355 ) }
    dend_12 { pt3dadd( 355.441, 353.262, 32.5643, 0.3348 ) }
    dend_12 { pt3dadd( 356.036, 352.399, 32.284, 0.409 ) }
    dend_12 { pt3dadd( 356.331, 351.526, 32.0919, 0.4196 ) }
    dend_12 { pt3dadd( 356.548, 350.661, 31.981, 0.4116 ) }
    dend_12 { pt3dadd( 356.807, 349.871, 31.673, 0.3604 ) }
    dend_12 { pt3dadd( 356.694, 348.968, 31.5165, 0.3846 ) }
    dend_12 { pt3dadd( 356.624, 348.324, 31.1587, 0.5972 ) }
    dend_12 { pt3dadd( 356.673, 347.547, 30.928, 0.384 ) }
    dend_12 { pt3dadd( 356.71, 346.959, 30.8109, 0.4576 ) }
    dend_12 { pt3dadd( 356.231, 346.489, 30.5794, 0.4342 ) }
    dend_12 { pt3dadd( 355.726, 345.648, 30.5589, 0.4932 ) }
    dend_12 { pt3dadd( 355.212, 344.804, 30.3596, 0.5214 ) }
    dend_12 { pt3dadd( 354.47, 344.224, 30.1272, 0.4526 ) }
    dend_12 { pt3dadd( 353.877, 343.28, 29.9788, 0.4338 ) }
    dend_12 { pt3dadd( 353.2, 342.531, 29.8609, 0.2952 ) }
    dend_12 { pt3dadd( 352.471, 341.791, 29.9177, 0.4388 ) }
    dend_12 { pt3dadd( 352.338, 341.017, 29.7643, 0.3324 ) }
    dend_12 { pt3dadd( 351.899, 340.018, 29.7424, 0.48 ) }
    dend_12 { pt3dadd( 351.205, 339.387, 29.6246, 0.3454 ) }
    dend_12 { pt3dadd( 350.691, 338.769, 29.6876, 0.305 ) }
    dend_12 { pt3dadd( 350.197, 338.345, 29.4546, 0.235 ) }
    dend_12 { pt3dadd( 350.058, 337.676, 29.3622, 0.286 ) }
    dend_12 { pt3dadd( 349.704, 336.68, 29.3504, 0.384 ) }
    dend_12 { pt3dadd( 349.269, 335.717, 29.3689, 0.4572 ) }
    dend_12 { pt3dadd( 348.676, 334.905, 29.4036, 0.3904 ) }
    dend_12 { pt3dadd( 348.119, 334.62, 28.84, 0.3814 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 40/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 343.009, 432.407, 43.8892, 0.483 ) }
    dend_11 { pt3dadd( 342.499, 431.751, 43.8502, 0.3318 ) }
    dend_11 { pt3dadd( 342.256, 430.937, 43.6206, 0.6426 ) }
    dend_11 { pt3dadd( 341.942, 430.151, 43.5697, 0.4824 ) }
    dend_11 { pt3dadd( 341.608, 429.224, 43.435, 0.5262 ) }
    dend_11 { pt3dadd( 341.37, 428.466, 43.5551, 0.4136 ) }
    dend_11 { pt3dadd( 341.293, 427.374, 43.5686, 0.458 ) }
    dend_11 { pt3dadd( 340.998, 426.448, 43.449, 0.5848 ) }
    dend_11 { pt3dadd( 340.675, 425.436, 43.2947, 0.6264 ) }
    dend_11 { pt3dadd( 340.49, 424.424, 43.188, 0.532 ) }
    dend_11 { pt3dadd( 340.323, 423.732, 43.2116, 0.4184 ) }
    dend_11 { pt3dadd( 339.997, 422.714, 43.2561, 0.661 ) }
    dend_11 { pt3dadd( 340.0, 421.745, 43.1463, 0.5412 ) }
    dend_11 { pt3dadd( 339.724, 420.658, 43.0791, 0.5338 ) }
    dend_11 { pt3dadd( 339.62, 419.636, 43.1267, 0.7588 ) }
    dend_11 { pt3dadd( 339.6, 418.654, 43.1939, 0.6346 ) }
    dend_11 { pt3dadd( 339.483, 417.562, 43.1612, 0.5208 ) }
    dend_11 { pt3dadd( 339.196, 416.593, 43.2043, 0.5194 ) }
    dend_11 { pt3dadd( 339.085, 415.566, 43.3348, 0.723 ) }
    dend_11 { pt3dadd( 338.833, 414.576, 43.4196, 0.6038 ) }
    dend_11 { pt3dadd( 338.511, 413.531, 43.447, 0.661 ) }
    dend_11 { pt3dadd( 338.411, 412.414, 43.4095, 0.6116 ) }
    dend_11 { pt3dadd( 338.608, 411.302, 43.3513, 0.4358 ) }
    dend_11 { pt3dadd( 338.24, 410.571, 43.2488, 0.4022 ) }
    dend_11 { pt3dadd( 337.813, 409.718, 43.1852, 0.4972 ) }
    dend_11 { pt3dadd( 337.411, 408.898, 43.0931, 0.6356 ) }
    dend_11 { pt3dadd( 337.461, 407.922, 42.9842, 0.6166 ) }
    dend_11 { pt3dadd( 337.907, 406.962, 42.8641, 0.5084 ) }
    dend_11 { pt3dadd( 337.914, 405.892, 42.7778, 0.337 ) }
    dend_11 { pt3dadd( 338.077, 404.792, 42.721, 0.4926 ) }
    dend_11 { pt3dadd( 338.386, 403.754, 42.7358, 0.6028 ) }
    dend_11 { pt3dadd( 338.655, 402.772, 42.7944, 0.4236 ) }
    dend_11 { pt3dadd( 339.488, 402.1, 42.7862, 0.3994 ) }
    dend_11 { pt3dadd( 339.922, 401.137, 42.7179, 0.4638 ) }
    dend_11 { pt3dadd( 340.698, 400.427, 42.6796, 0.3766 ) }
    dend_11 { pt3dadd( 341.663, 400.184, 42.5824, 0.356 ) }
    dend_11 { pt3dadd( 341.942, 399.701, 42.3811, 0.356 ) }
    dend_11 { pt3dadd( 342.317, 399.484, 42.0476, 0.4228 ) }
    dend_11 { pt3dadd( 342.522, 398.686, 41.7138, 0.6864 ) }
    dend_11 { pt3dadd( 342.828, 398.034, 41.6774, 0.5374 ) }
    dend_11 { pt3dadd( 343.145, 396.96, 41.6522, 0.5136 ) }
    dend_11 { pt3dadd( 343.335, 396.357, 41.7186, 0.6432 ) }
    dend_11 { pt3dadd( 343.352, 395.29, 41.7312, 0.6102 ) }
    dend_11 { pt3dadd( 343.547, 394.8, 41.6886, 0.3744 ) }
    dend_11 { pt3dadd( 343.886, 393.907, 41.7354, 0.356 ) }
    dend_11 { pt3dadd( 344.23, 393.502, 41.8351, 0.4576 ) }
    dend_11 { pt3dadd( 344.53, 392.638, 41.7816, 0.6578 ) }
    dend_11 { pt3dadd( 344.535, 391.886, 41.6469, 0.4916 ) }
    dend_11 { pt3dadd( 344.476, 390.957, 41.7015, 0.2992 ) }
    dend_11 { pt3dadd( 345.101, 390.121, 41.8289, 0.3994 ) }
    dend_11 { pt3dadd( 345.289, 389.026, 41.9345, 0.2658 ) }
    dend_11 { pt3dadd( 345.488, 388.383, 41.6942, 0.2692 ) }
    dend_11 { pt3dadd( 344.752, 388.259, 41.3003, 0.599 ) }
    dend_11 { pt3dadd( 344.724, 387.641, 41.0897, 0.2928 ) }
    dend_11 { pt3dadd( 344.846, 386.714, 40.696, 0.439 ) }
    dend_11 { pt3dadd( 345.472, 385.788, 40.3612, 0.2796 ) }
    dend_11 { pt3dadd( 345.647, 384.838, 40.1632, 0.356 ) }
    dend_11 { pt3dadd( 345.359, 384.227, 39.9286, 0.4328 ) }
    dend_11 { pt3dadd( 345.067, 383.246, 39.8544, 0.5372 ) }
    dend_11 { pt3dadd( 345.134, 382.214, 39.8384, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_11 { pt3dadd( 345.145, 381.256, 39.914, 0.6102 ) }
    dend_11 { pt3dadd( 345.005, 380.685, 40.164, 0.5084 ) }
    dend_11 { pt3dadd( 344.732, 379.716, 40.3161, 0.5592 ) }
    dend_11 { pt3dadd( 345.035, 378.823, 40.511, 0.5682 ) }
    dend_11 { pt3dadd( 345.453, 377.888, 40.6367, 0.618 ) }
    dend_11 { pt3dadd( 345.775, 377.034, 40.6652, 0.3814 ) }
    dend_11 { pt3dadd( 346.156, 376.09, 40.8596, 0.3426 ) }
    dend_11 { pt3dadd( 346.391, 375.155, 41.06, 0.5094 ) }
    dend_11 { pt3dadd( 347.042, 374.615, 41.0547, 0.459 ) }
    dend_11 { pt3dadd( 347.586, 373.694, 41.0388, 0.387 ) }
    dend_11 { pt3dadd( 347.434, 373.574, 41.2944, 0.4296 ) }
    dend_11 { pt3dadd( 347.89, 372.676, 41.5828, 0.5698 ) }
    dend_11 { pt3dadd( 348.474, 371.967, 41.82, 0.4646 ) }
    dend_11 { pt3dadd( 349.296, 371.508, 42.0112, 0.5242 ) }
    dend_11 { pt3dadd( 349.995, 370.878, 42.2685, 0.5614 ) }
    dend_11 { pt3dadd( 350.408, 370.076, 42.3038, 0.5468 ) }
    dend_11 { pt3dadd( 350.761, 369.212, 42.3788, 0.5338 ) }
    dend_11 { pt3dadd( 350.636, 368.153, 42.4284, 0.5408 ) }
    dend_11 { pt3dadd( 351.152, 367.172, 42.4945, 0.5558 ) }
    dend_11 { pt3dadd( 351.55, 366.117, 42.5936, 0.37 ) }
    dend_11 { pt3dadd( 352.238, 365.444, 42.6499, 0.483 ) }
    dend_11 { pt3dadd( 352.359, 364.591, 42.6404, 0.5548 ) }
    dend_11 { pt3dadd( 352.776, 363.654, 42.6227, 0.5054 ) }
    dend_11 { pt3dadd( 352.746, 362.881, 42.7798, 0.3904 ) }
    dend_11 { pt3dadd( 353.153, 362.184, 42.9649, 0.594 ) }
    dend_11 { pt3dadd( 353.267, 361.409, 43.0214, 0.4888 ) }
    dend_11 { pt3dadd( 353.613, 360.613, 43.0584, 0.5234 ) }
    dend_11 { pt3dadd( 353.69, 359.691, 43.2208, 0.4414 ) }
    dend_11 { pt3dadd( 354.093, 359.241, 43.4571, 0.4958 ) }
    dend_11 { pt3dadd( 354.65, 358.477, 43.5308, 0.5316 ) }
    dend_11 { pt3dadd( 355.548, 357.85, 43.6601, 0.538 ) }
    dend_11 { pt3dadd( 356.339, 357.072, 43.7016, 0.5352 ) }
    dend_11 { pt3dadd( 356.594, 356.127, 43.7996, 0.3432 ) }
    dend_11 { pt3dadd( 357.142, 355.191, 43.7665, 0.43 ) }
    dend_11 { pt3dadd( 357.609, 354.253, 43.806, 0.3814 ) }
    dend_11 { pt3dadd( 358.205, 353.678, 43.9513, 0.496 ) }
    dend_11 { pt3dadd( 358.865, 353.021, 44.119, 0.6152 ) }
    dend_11 { pt3dadd( 359.328, 352.222, 44.2344, 0.429 ) }
    dend_11 { pt3dadd( 359.56, 351.262, 44.3926, 0.6026 ) }
    dend_11 { pt3dadd( 359.781, 350.263, 44.6748, 0.4248 ) }
    dend_11 { pt3dadd( 360.281, 349.267, 44.8624, 0.356 ) }
    dend_11 { pt3dadd( 360.665, 348.602, 44.9226, 0.4322 ) }
    dend_11 { pt3dadd( 360.77, 347.792, 45.129, 0.3848 ) }
    dend_11 { pt3dadd( 361.182, 346.788, 45.3065, 0.4522 ) }
    dend_11 { pt3dadd( 361.276, 345.735, 45.4955, 0.3332 ) }
    dend_11 { pt3dadd( 361.546, 344.816, 45.5496, 0.4546 ) }
    dend_11 { pt3dadd( 361.621, 343.915, 45.6529, 0.4576 ) }
    dend_11 { pt3dadd( 361.849, 342.874, 45.7377, 0.3862 ) }
    dend_11 { pt3dadd( 362.028, 341.866, 45.7453, 0.5476 ) }
    dend_11 { pt3dadd( 361.947, 340.827, 45.8198, 0.3032 ) }
    dend_11 { pt3dadd( 362.348, 340.172, 45.9687, 0.3718 ) }
    dend_11 { pt3dadd( 362.602, 339.111, 46.1045, 0.3078 ) }
    dend_11 { pt3dadd( 362.648, 337.989, 46.209, 0.2858 ) }
    dend_11 { pt3dadd( 362.552, 336.929, 46.2902, 0.3632 ) }
    dend_11 { pt3dadd( 362.762, 335.869, 46.356, 0.397 ) }
    dend_11 { pt3dadd( 362.562, 335.087, 46.655, 0.5016 ) }
    dend_11 { pt3dadd( 362.177, 334.173, 46.7701, 0.4318 ) }
    dend_11 { pt3dadd( 362.19, 333.105, 46.8387, 0.2288 ) }
    dend_11 { pt3dadd( 362.282, 331.977, 46.9504, 0.2492 ) }
    dend_11 { pt3dadd( 362.528, 330.877, 47.0823, 0.3062 ) }
    dend_11 { pt3dadd( 362.457, 329.737, 47.2405, 0.3348 ) }
    dend_11 { pt3dadd( 362.707, 328.671, 47.4071, 0.437 ) }
    dend_11 { pt3dadd( 363.064, 327.622, 47.7103, 0.374 ) }
    dend_11 { pt3dadd( 363.328, 326.67, 48.1309, 0.4744 ) }
    dend_11 { pt3dadd( 363.259, 325.811, 48.5335, 0.2802 ) }
    dend_11 { pt3dadd( 363.906, 325.468, 49.84, 0.3814 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 66/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 352.466, 434.949, 44.133, 0.4322 ) }
    dend_9 { pt3dadd( 353.398, 434.309, 44.2557, 0.2288 ) }
    dend_9 { pt3dadd( 354.249, 433.812, 44.2151, 0.3514 ) }
    dend_9 { pt3dadd( 355.299, 433.643, 44.2011, 0.4244 ) }
    dend_9 { pt3dadd( 356.207, 433.049, 44.0642, 0.3416 ) }
    dend_9 { pt3dadd( 357.168, 432.451, 43.9029, 0.2288 ) }
    dend_9 { pt3dadd( 358.061, 431.929, 43.6988, 0.3814 ) }
    dend_9 { pt3dadd( 358.629, 431.067, 43.5652, 0.3254 ) }
    dend_9 { pt3dadd( 359.441, 430.49, 43.3611, 0.2288 ) }
    dend_9 { pt3dadd( 360.234, 429.771, 43.1908, 0.2288 ) }
    dend_9 { pt3dadd( 360.932, 429.114, 43.1108, 0.356 ) }
    dend_9 { pt3dadd( 361.927, 428.554, 43.0998, 0.5318 ) }
    dend_9 { pt3dadd( 362.841, 428.085, 43.2849, 0.609 ) }
    dend_9 { pt3dadd( 363.628, 427.532, 43.5372, 0.5822 ) }
    dend_9 { pt3dadd( 363.945, 426.865, 43.7721, 0.4188 ) }
    dend_9 { pt3dadd( 364.934, 426.363, 43.9253, 0.483 ) }
    dend_9 { pt3dadd( 365.996, 426.06, 43.9457, 0.3616 ) }
    dend_9 { pt3dadd( 367.024, 425.609, 43.9426, 0.2796 ) }
    dend_9 { pt3dadd( 367.989, 425.428, 43.7923, 0.415 ) }
    dend_9 { pt3dadd( 369.046, 425.062, 43.7237, 0.4424 ) }
    dend_9 { pt3dadd( 369.972, 424.441, 43.6769, 0.378 ) }
    dend_9 { pt3dadd( 370.505, 423.553, 43.748, 0.5274 ) }
    dend_9 { pt3dadd( 371.317, 423.53, 43.9303, 0.2452 ) }
    dend_9 { pt3dadd( 372.388, 423.63, 43.96, 0.4036 ) }
    dend_9 { pt3dadd( 373.476, 423.651, 43.9286, 0.283 ) }
    dend_9 { pt3dadd( 374.485, 423.163, 43.8973, 0.5602 ) }
    dend_9 { pt3dadd( 375.388, 422.515, 43.9057, 0.6734 ) }
    dend_9 { pt3dadd( 376.219, 421.804, 43.8589, 0.4384 ) }
    dend_9 { pt3dadd( 377.34, 421.619, 43.8015, 0.483 ) }
    dend_9 { pt3dadd( 378.448, 421.403, 43.7284, 0.4576 ) }
    dend_9 { pt3dadd( 379.301, 420.776, 43.7542, 0.5246 ) }
    dend_9 { pt3dadd( 380.362, 420.491, 43.7035, 0.567 ) }
    dend_9 { pt3dadd( 381.471, 420.42, 43.65, 0.5726 ) }
    dend_9 { pt3dadd( 382.443, 420.112, 43.6884, 0.878 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_9 { pt3dadd( 383.238, 419.518, 43.7741, 0.615 ) }
    dend_9 { pt3dadd( 384.242, 419.047, 43.7604, 0.6346 ) }
    dend_9 { pt3dadd( 385.176, 418.781, 43.6948, 0.6206 ) }
    dend_9 { pt3dadd( 386.299, 418.909, 43.664, 0.4642 ) }
    dend_9 { pt3dadd( 387.386, 419.247, 43.6405, 0.439 ) }
    dend_9 { pt3dadd( 388.499, 419.498, 43.6008, 0.6384 ) }
    dend_9 { pt3dadd( 389.316, 419.769, 43.4722, 0.4816 ) }
    dend_9 { pt3dadd( 390.286, 419.632, 43.3317, 0.5158 ) }
    dend_9 { pt3dadd( 390.565, 420.216, 43.4361, 0.4176 ) }
    dend_9 { pt3dadd( 391.159, 420.945, 43.4882, 0.612 ) }
    dend_9 { pt3dadd( 392.192, 420.865, 43.5134, 0.6124 ) }
    dend_9 { pt3dadd( 392.872, 420.649, 43.5915, 0.5906 ) }
    dend_9 { pt3dadd( 393.907, 420.651, 43.5187, 0.531 ) }
    dend_9 { pt3dadd( 394.967, 420.482, 43.4244, 0.6604 ) }
    dend_9 { pt3dadd( 395.846, 420.306, 43.2692, 0.683 ) }
    dend_9 { pt3dadd( 396.913, 420.516, 43.055, 0.5516 ) }
    dend_9 { pt3dadd( 397.805, 419.896, 42.9201, 0.8028 ) }
    dend_9 { pt3dadd( 398.6, 419.451, 42.6196, 0.839 ) }
    dend_9 { pt3dadd( 399.566, 419.251, 42.5065, 0.3902 ) }
    dend_9 { pt3dadd( 400.494, 418.818, 42.3234, 0.469 ) }
    dend_9 { pt3dadd( 401.427, 418.38, 42.208, 0.571 ) }
    dend_9 { pt3dadd( 402.109, 417.817, 41.9933, 0.5304 ) }
    dend_9 { pt3dadd( 402.69, 416.98, 41.727, 0.5568 ) }
    dend_9 { pt3dadd( 403.354, 416.302, 41.4728, 0.4738 ) }
    dend_9 { pt3dadd( 404.401, 416.319, 41.2868, 0.592 ) }
    dend_9 { pt3dadd( 404.955, 415.885, 41.1012, 0.5726 ) }
    dend_9 { pt3dadd( 405.924, 415.677, 40.868, 0.6864 ) }
    dend_9 { pt3dadd( 406.917, 415.41, 40.7515, 0.4986 ) }
    dend_9 { pt3dadd( 407.899, 415.615, 40.5412, 0.4376 ) }
    dend_9 { pt3dadd( 408.916, 415.604, 40.4286, 0.4746 ) }
    dend_9 { pt3dadd( 409.965, 415.501, 40.2506, 0.6864 ) }
    dend_9 { pt3dadd( 410.826, 415.195, 40.1456, 0.5132 ) }
    dend_9 { pt3dadd( 411.839, 414.701, 40.0114, 0.483 ) }
    dend_9 { pt3dadd( 412.867, 414.544, 39.8916, 0.8348 ) }
    dend_9 { pt3dadd( 413.849, 414.195, 39.8065, 0.6864 ) }
    dend_9 { pt3dadd( 414.556, 413.479, 39.5615, 0.5014 ) }
    dend_9 { pt3dadd( 415.43, 412.962, 39.3498, 0.4576 ) }
    dend_9 { pt3dadd( 416.439, 412.608, 39.125, 0.596 ) }
    dend_9 { pt3dadd( 417.147, 411.934, 39.0079, 0.3006 ) }
    dend_9 { pt3dadd( 418.182, 411.926, 38.8945, 0.472 ) }
    dend_9 { pt3dadd( 418.339, 412.748, 38.7206, 0.6864 ) }
    dend_9 { pt3dadd( 418.826, 412.526, 38.5851, 0.4576 ) }
    dend_9 { pt3dadd( 418.964, 412.526, 38.0797, 0.6466 ) }
    dend_9 { pt3dadd( 419.848, 412.744, 37.7003, 0.3836 ) }
    dend_9 { pt3dadd( 420.442, 413.097, 37.5004, 0.6134 ) }
    dend_9 { pt3dadd( 421.074, 413.215, 37.0664, 0.526 ) }
    dend_9 { pt3dadd( 422.158, 413.189, 36.7581, 0.5994 ) }
    dend_9 { pt3dadd( 423.253, 413.431, 36.5011, 0.6018 ) }
    dend_9 { pt3dadd( 424.342, 413.327, 36.4165, 0.81 ) }
    dend_9 { pt3dadd( 425.16, 413.888, 36.2541, 0.7118 ) }
    dend_9 { pt3dadd( 426.0, 414.471, 36.1948, 0.6526 ) }
    dend_9 { pt3dadd( 426.919, 414.915, 36.1418, 0.6356 ) }
    dend_9 { pt3dadd( 427.951, 414.564, 36.038, 0.5148 ) }
    dend_9 { pt3dadd( 428.902, 415.033, 35.9271, 0.6084 ) }
    dend_9 { pt3dadd( 429.835, 415.484, 35.8991, 0.4656 ) }
    dend_9 { pt3dadd( 430.701, 415.801, 35.7006, 1.0354 ) }
    dend_9 { pt3dadd( 431.753, 415.954, 35.3685, 0.744 ) }
    dend_9 { pt3dadd( 432.421, 415.684, 34.9098, 0.5646 ) }
    dend_9 { pt3dadd( 433.123, 415.408, 34.6755, 0.5358 ) }
    dend_9 { pt3dadd( 434.005, 414.987, 34.5573, 0.4776 ) }
    dend_9 { pt3dadd( 434.953, 414.509, 34.3132, 0.6778 ) }
    dend_9 { pt3dadd( 435.93, 414.459, 34.0206, 0.6054 ) }
    dend_9 { pt3dadd( 436.959, 414.112, 33.822, 0.4354 ) }
    dend_9 { pt3dadd( 437.987, 413.81, 33.731, 0.6222 ) }
    dend_9 { pt3dadd( 438.84, 413.988, 33.483, 0.7372 ) }
    dend_9 { pt3dadd( 439.811, 414.042, 33.3808, 0.6578 ) }
    dend_9 { pt3dadd( 440.822, 413.936, 33.1794, 0.3324 ) }
    dend_9 { pt3dadd( 441.859, 413.777, 32.9067, 0.6206 ) }
    dend_9 { pt3dadd( 442.734, 413.145, 32.7866, 0.5492 ) }
    dend_9 { pt3dadd( 443.419, 412.345, 32.7516, 0.4744 ) }
    dend_9 { pt3dadd( 444.031, 411.702, 32.5542, 0.519 ) }
    dend_9 { pt3dadd( 444.953, 411.329, 32.3128, 0.6318 ) }
    dend_9 { pt3dadd( 445.806, 410.655, 32.1871, 0.5592 ) }
    dend_9 { pt3dadd( 446.354, 409.733, 32.0516, 0.5614 ) }
    dend_9 { pt3dadd( 447.232, 409.36, 31.7741, 0.4602 ) }
    dend_9 { pt3dadd( 448.225, 408.961, 31.3992, 0.6102 ) }
    dend_9 { pt3dadd( 449.094, 408.717, 30.9736, 0.4814 ) }
    dend_9 { pt3dadd( 449.666, 408.179, 30.6586, 0.3076 ) }
    dend_9 { pt3dadd( 450.345, 408.307, 30.4052, 0.4566 ) }
    dend_9 { pt3dadd( 451.355, 408.505, 30.2044, 0.5388 ) }
    dend_9 { pt3dadd( 452.422, 408.18, 29.9832, 0.5084 ) }
    dend_9 { pt3dadd( 453.413, 408.005, 29.6876, 0.3648 ) }
    dend_9 { pt3dadd( 454.258, 407.858, 29.283, 0.3102 ) }
    dend_9 { pt3dadd( 454.854, 407.95, 28.56, 0.356 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 84/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 352.466, 434.949, 44.133, 0.4322 ) }
    dend_4 { pt3dadd( 351.92, 434.949, 44.24, 0.5338 ) }
    dend_4 { pt3dadd( 352.009, 434.476, 44.2576, 0.4398 ) }
    dend_4 { pt3dadd( 352.231, 433.396, 44.2848, 0.5064 ) }
    dend_4 { pt3dadd( 352.352, 432.349, 44.3895, 0.6342 ) }
    dend_4 { pt3dadd( 352.379, 431.253, 44.4424, 0.5968 ) }
    dend_4 { pt3dadd( 352.36, 430.194, 44.4662, 0.5942 ) }
    dend_4 { pt3dadd( 352.935, 429.221, 44.4867, 0.3826 ) }
    dend_4 { pt3dadd( 353.728, 428.509, 44.4828, 0.3438 ) }
    dend_4 { pt3dadd( 354.068, 427.475, 44.3946, 0.4322 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 94/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 331.785, 432.216, 63.1725, 0.4576 ) }
    apic_9 { pt3dadd( 331.432, 431.281, 63.6238, 0.3808 ) }
    apic_9 { pt3dadd( 331.035, 430.513, 64.0998, 0.6388 ) }
    apic_9 { pt3dadd( 331.074, 429.422, 64.4512, 0.305 ) }
    apic_9 { pt3dadd( 331.171, 428.376, 64.8508, 0.305 ) }
    apic_9 { pt3dadd( 331.188, 427.318, 65.105, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_9 { pt3dadd( 330.911, 426.259, 65.3506, 0.3826 ) }
    apic_9 { pt3dadd( 330.506, 425.24, 65.5564, 0.5592 ) }
    apic_9 { pt3dadd( 330.585, 424.123, 65.7625, 0.2334 ) }
    apic_9 { pt3dadd( 330.274, 423.21, 66.0968, 0.3016 ) }
    apic_9 { pt3dadd( 329.587, 422.404, 66.435, 0.2288 ) }
    apic_9 { pt3dadd( 328.843, 421.777, 66.7761, 0.237 ) }
    apic_9 { pt3dadd( 327.997, 421.087, 67.0942, 0.3136 ) }
    apic_9 { pt3dadd( 327.559, 420.128, 67.2742, 0.4294 ) }
    apic_9 { pt3dadd( 326.821, 419.323, 67.3658, 0.3554 ) }
    apic_9 { pt3dadd( 326.65, 418.413, 67.5777, 0.3304 ) }
    apic_9 { pt3dadd( 326.271, 417.517, 67.6211, 0.2628 ) }
    apic_9 { pt3dadd( 325.871, 416.517, 67.6659, 0.2288 ) }
    apic_9 { pt3dadd( 325.389, 415.768, 67.8804, 0.2288 ) }
    apic_9 { pt3dadd( 325.354, 414.629, 68.0691, 0.2288 ) }
    apic_9 { pt3dadd( 324.928, 413.705, 68.2531, 0.2288 ) }
    apic_9 { pt3dadd( 324.491, 412.711, 68.3337, 0.3046 ) }
    apic_9 { pt3dadd( 323.805, 411.806, 68.4275, 0.5468 ) }
    apic_9 { pt3dadd( 322.981, 411.268, 68.5754, 0.5614 ) }
    apic_9 { pt3dadd( 322.041, 411.007, 68.5742, 0.6016 ) }
    apic_9 { pt3dadd( 321.13, 410.674, 68.5152, 0.3944 ) }
    apic_9 { pt3dadd( 320.251, 410.464, 68.7134, 0.429 ) }
    apic_9 { pt3dadd( 319.868, 409.507, 68.9357, 0.2994 ) }
    apic_9 { pt3dadd( 319.092, 408.795, 69.1572, 0.395 ) }
    apic_9 { pt3dadd( 318.585, 407.805, 69.4604, 0.4318 ) }
    apic_9 { pt3dadd( 317.745, 407.264, 69.7841, 0.6266 ) }
    apic_9 { pt3dadd( 317.455, 406.612, 70.2988, 0.2984 ) }
    apic_9 { pt3dadd( 317.088, 405.777, 70.5477, 0.3274 ) }
    apic_9 { pt3dadd( 316.628, 405.601, 71.0027, 0.2288 ) }
    apic_9 { pt3dadd( 315.913, 405.088, 71.4938, 0.2288 ) }
    apic_9 { pt3dadd( 315.075, 404.475, 71.8267, 0.2288 ) }
    apic_9 { pt3dadd( 314.389, 403.675, 71.9186, 0.38 ) }
    apic_9 { pt3dadd( 313.876, 402.813, 71.8094, 0.3938 ) }
    apic_9 { pt3dadd( 313.551, 401.971, 71.5988, 0.48 ) }
    apic_9 { pt3dadd( 313.342, 401.353, 71.6097, 0.3178 ) }
    apic_9 { pt3dadd( 313.656, 400.851, 71.8231, 0.5636 ) }
    apic_9 { pt3dadd( 313.77, 399.793, 72.098, 0.6214 ) }
    apic_9 { pt3dadd( 313.877, 398.723, 72.3652, 0.4846 ) }
    apic_9 { pt3dadd( 313.866, 397.9, 72.746, 0.6594 ) }
    apic_9 { pt3dadd( 314.257, 396.968, 73.08, 0.5338 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 39/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 331.785, 432.216, 63.1725, 0.4576 ) }
    apic_8 { pt3dadd( 330.386, 431.955, 63.0, 0.3904 ) }
    apic_8 { pt3dadd( 330.273, 431.619, 64.2653, 0.3304 ) }
    apic_8 { pt3dadd( 329.916, 431.941, 64.617, 0.4068 ) }
    apic_8 { pt3dadd( 328.828, 432.089, 64.9034, 0.368 ) }
    apic_8 { pt3dadd( 327.933, 431.898, 65.3279, 0.2666 ) }
    apic_8 { pt3dadd( 327.398, 431.631, 65.961, 0.45 ) }
    apic_8 { pt3dadd( 326.741, 430.938, 66.6901, 0.299 ) }
    apic_8 { pt3dadd( 325.824, 430.308, 67.3168, 0.2288 ) }
    apic_8 { pt3dadd( 324.921, 429.652, 67.8395, 0.2288 ) }
    apic_8 { pt3dadd( 324.123, 428.873, 68.2147, 0.2846 ) }
    apic_8 { pt3dadd( 323.273, 428.316, 68.4897, 0.401 ) }
    apic_8 { pt3dadd( 322.718, 427.572, 68.8789, 0.4396 ) }
    apic_8 { pt3dadd( 321.755, 427.078, 69.2353, 0.4842 ) }
    apic_8 { pt3dadd( 320.797, 426.57, 69.6931, 0.2866 ) }
    apic_8 { pt3dadd( 320.425, 425.634, 70.142, 0.2288 ) }
    apic_8 { pt3dadd( 320.017, 424.656, 70.6745, 0.2726 ) }
    apic_8 { pt3dadd( 319.086, 424.195, 71.1852, 0.61 ) }
    apic_8 { pt3dadd( 318.146, 424.009, 71.7214, 0.6508 ) }
    apic_8 { pt3dadd( 317.737, 424.176, 72.5914, 0.5064 ) }
    apic_8 { pt3dadd( 317.346, 423.924, 73.6803, 0.2326 ) }
    apic_8 { pt3dadd( 316.57, 423.502, 74.6984, 0.2288 ) }
    apic_8 { pt3dadd( 316.43, 422.757, 75.6843, 0.2288 ) }
    apic_8 { pt3dadd( 316.057, 421.778, 76.4207, 0.2288 ) }
    apic_8 { pt3dadd( 315.512, 421.039, 76.6819, 0.409 ) }
    apic_8 { pt3dadd( 314.956, 420.171, 76.7304, 0.457 ) }
    apic_8 { pt3dadd( 315.067, 419.047, 76.7052, 0.2952 ) }
    apic_8 { pt3dadd( 315.228, 418.078, 76.8317, 0.2728 ) }
    apic_8 { pt3dadd( 315.058, 417.091, 76.82, 0.2346 ) }
    apic_8 { pt3dadd( 314.746, 416.012, 76.8261, 0.2924 ) }
    apic_8 { pt3dadd( 314.61, 414.931, 76.9658, 0.4658 ) }
    apic_8 { pt3dadd( 314.943, 414.395, 77.3469, 0.4122 ) }
    apic_8 { pt3dadd( 315.218, 413.306, 77.6972, 0.5724 ) }
    apic_8 { pt3dadd( 315.286, 412.239, 78.0352, 0.6564 ) }
    apic_8 { pt3dadd( 315.712, 411.325, 78.3479, 0.2592 ) }
    apic_8 { pt3dadd( 316.007, 410.257, 78.5789, 0.303 ) }
    apic_8 { pt3dadd( 316.516, 409.433, 78.7707, 0.4178 ) }
    apic_8 { pt3dadd( 316.316, 408.509, 78.6481, 0.6548 ) }
    apic_8 { pt3dadd( 316.888, 407.95, 77.84, 0.356 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 78/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 354.068, 427.475, 44.3946, 0.4322 ) }
    dend_8 { pt3dadd( 353.21, 426.839, 46.0762, 0.2626 ) }
    dend_8 { pt3dadd( 352.216, 426.584, 47.0235, 0.3448 ) }
    dend_8 { pt3dadd( 351.468, 425.957, 47.4508, 0.4116 ) }
    dend_8 { pt3dadd( 351.208, 425.228, 48.0696, 0.3436 ) }
    dend_8 { pt3dadd( 351.597, 424.212, 48.6892, 0.3584 ) }
    dend_8 { pt3dadd( 351.671, 423.28, 49.275, 0.2288 ) }
    dend_8 { pt3dadd( 350.889, 423.187, 49.9257, 0.4462 ) }
    dend_8 { pt3dadd( 350.416, 422.318, 50.3096, 0.483 ) }
    dend_8 { pt3dadd( 350.193, 421.215, 50.5756, 0.5598 ) }
    dend_8 { pt3dadd( 350.26, 420.316, 50.9306, 0.6864 ) }
    dend_8 { pt3dadd( 349.95, 419.354, 51.1182, 0.797 ) }
    dend_8 { pt3dadd( 350.063, 418.336, 51.3808, 0.913 ) }
    dend_8 { pt3dadd( 349.586, 417.862, 51.8216, 0.6998 ) }
    dend_8 { pt3dadd( 349.227, 416.826, 52.243, 0.6242 ) }
    dend_8 { pt3dadd( 349.158, 415.723, 52.5638, 0.4974 ) }
    dend_8 { pt3dadd( 349.263, 414.841, 52.7458, 0.6864 ) }
    dend_8 { pt3dadd( 349.15, 414.879, 53.258, 0.4586 ) }
    dend_8 { pt3dadd( 348.806, 414.918, 54.0103, 0.4216 ) }
    dend_8 { pt3dadd( 348.258, 414.149, 54.5745, 0.6706 ) }
    dend_8 { pt3dadd( 347.998, 413.273, 54.9298, 0.6102 ) }
    dend_8 { pt3dadd( 347.721, 413.207, 55.4865, 0.7596 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_8 { pt3dadd( 347.641, 412.247, 55.7995, 0.5316 ) }
    dend_8 { pt3dadd( 347.857, 411.151, 55.9829, 0.5084 ) }
    dend_8 { pt3dadd( 348.263, 410.246, 56.1022, 0.6864 ) }
    dend_8 { pt3dadd( 348.681, 409.217, 56.2526, 0.6368 ) }
    dend_8 { pt3dadd( 349.263, 408.293, 56.4598, 0.6356 ) }
    dend_8 { pt3dadd( 349.95, 407.653, 56.7977, 0.2342 ) }
    dend_8 { pt3dadd( 350.429, 407.207, 57.4417, 0.4344 ) }
    dend_8 { pt3dadd( 350.754, 406.139, 58.023, 0.2962 ) }
    dend_8 { pt3dadd( 350.979, 405.253, 58.5894, 0.645 ) }
    dend_8 { pt3dadd( 351.095, 404.2, 59.162, 0.387 ) }
    dend_8 { pt3dadd( 351.322, 403.308, 59.6008, 0.4302 ) }
    dend_8 { pt3dadd( 351.65, 402.573, 60.1919, 0.6176 ) }
    dend_8 { pt3dadd( 351.773, 401.599, 60.7382, 0.393 ) }
    dend_8 { pt3dadd( 351.437, 401.177, 61.4121, 0.8536 ) }
    dend_8 { pt3dadd( 351.6, 400.156, 61.9433, 0.5848 ) }
    dend_8 { pt3dadd( 351.894, 399.24, 62.34, 0.4068 ) }
    dend_8 { pt3dadd( 352.409, 398.798, 62.4308, 0.61 ) }
    dend_8 { pt3dadd( 353.075, 398.462, 62.6349, 0.4442 ) }
    dend_8 { pt3dadd( 353.955, 398.11, 62.8471, 0.3288 ) }
    dend_8 { pt3dadd( 354.296, 397.32, 63.1548, 0.4642 ) }
    dend_8 { pt3dadd( 353.839, 396.627, 63.5158, 0.3062 ) }
    dend_8 { pt3dadd( 353.679, 395.573, 63.7767, 0.397 ) }
    dend_8 { pt3dadd( 353.814, 394.627, 63.8067, 0.5848 ) }
    dend_8 { pt3dadd( 353.387, 393.727, 63.7966, 0.5194 ) }
    dend_8 { pt3dadd( 353.57, 393.414, 64.0304, 0.5282 ) }
    dend_8 { pt3dadd( 353.719, 392.603, 64.384, 0.5282 ) }
    dend_8 { pt3dadd( 353.954, 391.529, 64.7035, 0.4978 ) }
    dend_8 { pt3dadd( 353.729, 390.449, 64.9706, 0.356 ) }
    dend_8 { pt3dadd( 353.409, 389.488, 65.1434, 0.2338 ) }
    dend_8 { pt3dadd( 352.824, 388.584, 65.2716, 0.4526 ) }
    dend_8 { pt3dadd( 351.957, 387.921, 65.3727, 0.5726 ) }
    dend_8 { pt3dadd( 351.273, 387.124, 65.3254, 0.8898 ) }
    dend_8 { pt3dadd( 350.76, 386.447, 65.3579, 0.464 ) }
    dend_8 { pt3dadd( 350.283, 385.562, 65.3834, 0.5084 ) }
    dend_8 { pt3dadd( 349.818, 384.704, 65.3864, 0.4484 ) }
    dend_8 { pt3dadd( 348.948, 384.1, 65.366, 0.449 ) }
    dend_8 { pt3dadd( 348.173, 383.37, 65.3526, 0.3254 ) }
    dend_8 { pt3dadd( 347.325, 382.79, 65.4209, 0.5094 ) }
    dend_8 { pt3dadd( 346.459, 382.286, 65.4934, 0.5972 ) }
    dend_8 { pt3dadd( 345.573, 381.683, 65.6096, 0.4482 ) }
    dend_8 { pt3dadd( 344.842, 380.882, 65.7826, 0.6446 ) }
    dend_8 { pt3dadd( 344.344, 380.418, 66.1382, 0.5592 ) }
    dend_8 { pt3dadd( 343.556, 380.266, 66.1976, 0.4576 ) }
    dend_8 { pt3dadd( 343.097, 379.656, 66.2606, 0.4038 ) }
    dend_8 { pt3dadd( 342.915, 378.578, 66.1716, 0.3756 ) }
    dend_8 { pt3dadd( 342.304, 377.806, 65.931, 0.3906 ) }
    dend_8 { pt3dadd( 341.531, 377.022, 65.6712, 0.5592 ) }
    dend_8 { pt3dadd( 340.704, 376.319, 65.3576, 0.5848 ) }
    dend_8 { pt3dadd( 339.869, 375.723, 65.1658, 0.3734 ) }
    dend_8 { pt3dadd( 339.293, 374.797, 65.0026, 0.3712 ) }
    dend_8 { pt3dadd( 338.601, 374.185, 64.7424, 0.4576 ) }
    dend_8 { pt3dadd( 337.696, 373.745, 64.4588, 0.4174 ) }
    dend_8 { pt3dadd( 336.665, 373.724, 64.1029, 0.6208 ) }
    dend_8 { pt3dadd( 336.042, 373.034, 63.8674, 0.4608 ) }
    dend_8 { pt3dadd( 335.349, 372.191, 63.7454, 0.5144 ) }
    dend_8 { pt3dadd( 334.734, 371.457, 63.56, 0.5848 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 56/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 354.068, 427.475, 44.3946, 0.4322 ) }
    dend_5 { pt3dadd( 354.109, 426.567, 44.3853, 0.4804 ) }
    dend_5 { pt3dadd( 354.545, 425.569, 44.3783, 0.3876 ) }
    dend_5 { pt3dadd( 354.983, 424.538, 44.3654, 0.4068 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 60/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 354.983, 424.538, 44.3654, 0.4068 ) }
    dend_7 { pt3dadd( 355.323, 423.642, 45.0649, 0.3132 ) }
    dend_7 { pt3dadd( 355.014, 422.589, 45.3902, 0.3914 ) }
    dend_7 { pt3dadd( 355.047, 421.534, 45.4241, 0.5666 ) }
    dend_7 { pt3dadd( 355.258, 420.524, 45.5115, 0.6086 ) }
    dend_7 { pt3dadd( 355.549, 419.524, 45.7097, 0.7594 ) }
    dend_7 { pt3dadd( 355.651, 418.453, 46.0037, 0.7922 ) }
    dend_7 { pt3dadd( 355.847, 417.345, 46.2311, 0.5374 ) }
    dend_7 { pt3dadd( 356.445, 416.653, 46.2008, 0.658 ) }
    dend_7 { pt3dadd( 356.48, 415.73, 46.2672, 0.4638 ) }
    dend_7 { pt3dadd( 356.699, 414.976, 46.4887, 0.742 ) }
    dend_7 { pt3dadd( 357.271, 414.422, 46.7886, 0.4678 ) }
    dend_7 { pt3dadd( 357.588, 413.564, 47.1498, 0.6056 ) }
    dend_7 { pt3dadd( 358.218, 412.647, 47.4863, 0.7118 ) }
    dend_7 { pt3dadd( 358.577, 411.741, 47.5952, 0.6182 ) }
    dend_7 { pt3dadd( 359.057, 410.902, 47.5266, 0.661 ) }
    dend_7 { pt3dadd( 359.54, 409.978, 47.4037, 0.3814 ) }
    dend_7 { pt3dadd( 360.12, 409.131, 47.4121, 0.6562 ) }
    dend_7 { pt3dadd( 360.298, 408.117, 47.4306, 0.59 ) }
    dend_7 { pt3dadd( 360.12, 406.993, 47.5126, 0.6356 ) }
    dend_7 { pt3dadd( 359.448, 406.435, 47.7495, 0.8044 ) }
    dend_7 { pt3dadd( 359.004, 405.625, 48.0208, 0.4868 ) }
    dend_7 { pt3dadd( 358.264, 404.824, 48.1043, 0.4138 ) }
    dend_7 { pt3dadd( 357.843, 404.109, 48.1566, 0.5142 ) }
    dend_7 { pt3dadd( 357.511, 403.156, 48.1922, 0.3416 ) }
    dend_7 { pt3dadd( 356.992, 402.615, 48.2734, 0.6102 ) }
    dend_7 { pt3dadd( 356.333, 401.916, 48.1177, 0.5216 ) }
    dend_7 { pt3dadd( 355.708, 401.03, 48.006, 0.5356 ) }
    dend_7 { pt3dadd( 355.317, 400.534, 47.9441, 0.5828 ) }
    dend_7 { pt3dadd( 354.466, 399.836, 47.8394, 0.3814 ) }
    dend_7 { pt3dadd( 353.684, 399.256, 47.6669, 0.5084 ) }
    dend_7 { pt3dadd( 352.893, 398.716, 47.6134, 0.5836 ) }
    dend_7 { pt3dadd( 352.011, 398.161, 47.5322, 0.518 ) }
    dend_7 { pt3dadd( 351.335, 397.769, 47.4037, 0.6104 ) }
    dend_7 { pt3dadd( 350.71, 397.093, 47.2811, 0.3516 ) }
    dend_7 { pt3dadd( 349.896, 396.772, 47.2637, 0.6102 ) }
    dend_7 { pt3dadd( 348.956, 396.382, 47.3231, 0.4576 ) }
    dend_7 { pt3dadd( 348.462, 395.824, 47.32, 0.4576 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 98/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 354.983, 424.538, 44.3654, 0.4068 ) }
    dend_6 { pt3dadd( 355.552, 424.572, 44.3176, 0.2736 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_6 { pt3dadd( 356.493, 424.127, 44.249, 0.4158 ) }
    dend_6 { pt3dadd( 357.574, 424.018, 44.2285, 0.5254 ) }
    dend_6 { pt3dadd( 358.558, 423.67, 44.1557, 0.3346 ) }
    dend_6 { pt3dadd( 359.325, 422.993, 43.9995, 0.5476 ) }
    dend_6 { pt3dadd( 359.617, 422.223, 43.825, 0.5 ) }
    dend_6 { pt3dadd( 359.674, 421.744, 43.9849, 0.2796 ) }
    dend_6 { pt3dadd( 359.956, 421.121, 43.843, 0.4424 ) }
    dend_6 { pt3dadd( 360.441, 420.381, 43.6159, 0.7132 ) }
    dend_6 { pt3dadd( 361.411, 419.889, 43.4196, 0.6864 ) }
    dend_6 { pt3dadd( 361.736, 419.934, 42.903, 0.7766 ) }
    dend_6 { pt3dadd( 362.52, 419.255, 42.5118, 0.2612 ) }
    dend_6 { pt3dadd( 363.22, 418.666, 42.2346, 0.4576 ) }
    dend_6 { pt3dadd( 363.531, 418.927, 42.2934, 0.6362 ) }
    dend_6 { pt3dadd( 364.27, 418.19, 42.341, 0.5198 ) }
    dend_6 { pt3dadd( 365.055, 417.68, 42.4418, 0.4624 ) }
    dend_6 { pt3dadd( 365.934, 417.396, 42.5485, 0.3342 ) }
    dend_6 { pt3dadd( 366.515, 417.217, 42.418, 0.6418 ) }
    dend_6 { pt3dadd( 367.446, 416.76, 42.2794, 0.6864 ) }
    dend_6 { pt3dadd( 368.283, 416.724, 42.3853, 0.5692 ) }
    dend_6 { pt3dadd( 369.3, 416.306, 42.5835, 0.5996 ) }
    dend_6 { pt3dadd( 370.186, 415.622, 42.74, 0.2854 ) }
    dend_6 { pt3dadd( 370.548, 414.618, 42.9282, 0.2918 ) }
    dend_6 { pt3dadd( 371.547, 414.137, 43.0987, 0.5904 ) }
    dend_6 { pt3dadd( 372.566, 414.407, 43.2905, 0.6308 ) }
    dend_6 { pt3dadd( 373.619, 414.716, 43.4199, 0.5338 ) }
    dend_6 { pt3dadd( 374.612, 414.676, 43.4403, 0.67 ) }
    dend_6 { pt3dadd( 375.572, 414.242, 43.4344, 0.8002 ) }
    dend_6 { pt3dadd( 376.556, 413.975, 43.3793, 0.6358 ) }
    dend_6 { pt3dadd( 377.372, 413.569, 43.4487, 0.7154 ) }
    dend_6 { pt3dadd( 378.341, 413.108, 43.4958, 0.5412 ) }
    dend_6 { pt3dadd( 379.236, 413.105, 43.3308, 0.579 ) }
    dend_6 { pt3dadd( 380.26, 413.26, 43.2488, 0.503 ) }
    dend_6 { pt3dadd( 381.149, 413.22, 43.2877, 0.2288 ) }
    dend_6 { pt3dadd( 381.858, 412.72, 43.2124, 0.5952 ) }
    dend_6 { pt3dadd( 382.703, 412.258, 43.1544, 0.5802 ) }
    dend_6 { pt3dadd( 383.433, 411.437, 43.0382, 0.6 ) }
    dend_6 { pt3dadd( 384.304, 410.941, 42.9318, 0.661 ) }
    dend_6 { pt3dadd( 385.228, 410.401, 42.8439, 0.4322 ) }
    dend_6 { pt3dadd( 386.209, 410.416, 42.959, 0.3078 ) }
    dend_6 { pt3dadd( 386.901, 409.832, 42.9526, 0.409 ) }
    dend_6 { pt3dadd( 387.683, 409.323, 42.9708, 0.484 ) }
    dend_6 { pt3dadd( 388.161, 408.605, 43.1542, 0.667 ) }
    dend_6 { pt3dadd( 389.007, 408.408, 43.5011, 0.5578 ) }
    dend_6 { pt3dadd( 389.809, 408.243, 43.8029, 0.512 ) }
    dend_6 { pt3dadd( 390.661, 407.901, 43.8474, 0.335 ) }
    dend_6 { pt3dadd( 390.562, 407.553, 43.9625, 0.4026 ) }
    dend_6 { pt3dadd( 391.026, 407.066, 44.1535, 0.2856 ) }
    dend_6 { pt3dadd( 391.893, 406.563, 44.2963, 0.4458 ) }
    dend_6 { pt3dadd( 392.544, 406.041, 44.3845, 0.475 ) }
    dend_6 { pt3dadd( 393.45, 405.391, 44.4455, 0.231 ) }
    dend_6 { pt3dadd( 394.322, 404.716, 44.4926, 0.4338 ) }
    dend_6 { pt3dadd( 395.023, 404.312, 44.7944, 0.4176 ) }
    dend_6 { pt3dadd( 395.366, 404.45, 45.3818, 0.4576 ) }
    dend_6 { pt3dadd( 396.105, 403.624, 45.8604, 0.4284 ) }
    dend_6 { pt3dadd( 396.737, 402.92, 46.2417, 0.538 ) }
    dend_6 { pt3dadd( 397.311, 402.306, 46.6934, 0.674 ) }
    dend_6 { pt3dadd( 398.106, 401.97, 47.1394, 0.3904 ) }
    dend_6 { pt3dadd( 399.138, 402.011, 47.5076, 0.2946 ) }
    dend_6 { pt3dadd( 399.942, 401.902, 47.6118, 0.2834 ) }
    dend_6 { pt3dadd( 400.289, 401.002, 47.7733, 0.507 ) }
    dend_6 { pt3dadd( 400.796, 400.175, 48.062, 0.3814 ) }
    dend_6 { pt3dadd( 401.37, 399.42, 48.2096, 0.4216 ) }
    dend_6 { pt3dadd( 402.325, 399.561, 48.435, 0.4188 ) }
    dend_6 { pt3dadd( 403.271, 399.119, 48.6315, 0.4014 ) }
    dend_6 { pt3dadd( 404.189, 398.879, 48.9012, 0.356 ) }
    dend_6 { pt3dadd( 405.136, 398.439, 49.1666, 0.4322 ) }
    dend_6 { pt3dadd( 405.961, 397.968, 49.5466, 0.3304 ) }
    dend_6 { pt3dadd( 406.776, 397.655, 49.8428, 0.4576 ) }
    dend_6 { pt3dadd( 407.507, 396.981, 50.1528, 0.4576 ) }
    dend_6 { pt3dadd( 408.309, 396.394, 50.4339, 0.4576 ) }
    dend_6 { pt3dadd( 409.105, 395.587, 50.6422, 0.373 ) }
    dend_6 { pt3dadd( 409.453, 394.937, 50.8388, 0.3304 ) }
    dend_6 { pt3dadd( 410.284, 394.566, 51.0328, 0.3354 ) }
    dend_6 { pt3dadd( 411.328, 394.159, 51.1294, 0.2978 ) }
    dend_6 { pt3dadd( 412.184, 393.536, 51.2252, 0.6108 ) }
    dend_6 { pt3dadd( 413.208, 393.156, 51.2145, 0.8204 ) }
    dend_6 { pt3dadd( 413.644, 392.274, 51.0896, 0.5296 ) }
    dend_6 { pt3dadd( 414.419, 391.809, 51.1006, 0.757 ) }
    dend_6 { pt3dadd( 415.091, 391.118, 51.2366, 0.305 ) }
    dend_6 { pt3dadd( 416.099, 390.7, 51.3514, 0.637 ) }
    dend_6 { pt3dadd( 416.49, 390.209, 51.6538, 0.745 ) }
    dend_6 { pt3dadd( 417.393, 389.67, 51.8798, 0.6262 ) }
    dend_6 { pt3dadd( 418.216, 388.981, 52.0828, 0.4968 ) }
    dend_6 { pt3dadd( 418.906, 388.103, 52.2376, 0.6708 ) }
    dend_6 { pt3dadd( 419.48, 387.27, 52.3239, 0.8642 ) }
    dend_6 { pt3dadd( 419.585, 386.721, 52.2628, 0.7722 ) }
    dend_6 { pt3dadd( 419.537, 385.886, 52.365, 0.6426 ) }
    dend_6 { pt3dadd( 420.247, 385.06, 52.4012, 0.7574 ) }
    dend_6 { pt3dadd( 421.102, 384.498, 52.4692, 0.6342 ) }
    dend_6 { pt3dadd( 421.99, 384.187, 52.6607, 0.6754 ) }
    dend_6 { pt3dadd( 422.708, 383.388, 52.8472, 0.6124 ) }
    dend_6 { pt3dadd( 423.509, 382.816, 52.9928, 0.6052 ) }
    dend_6 { pt3dadd( 423.802, 382.046, 53.1745, 0.8136 ) }
    dend_6 { pt3dadd( 424.752, 380.694, 53.4282, 0.6124 ) }
    dend_6 { pt3dadd( 425.353, 380.125, 53.6379, 0.5848 ) }
    dend_6 { pt3dadd( 425.774, 379.139, 53.7796, 0.3738 ) }
    dend_6 { pt3dadd( 426.678, 378.761, 53.8759, 0.4624 ) }
    dend_6 { pt3dadd( 427.563, 378.249, 53.8446, 0.4946 ) }
    dend_6 { pt3dadd( 428.537, 378.331, 53.8521, 0.6664 ) }
    dend_6 { pt3dadd( 429.516, 378.087, 53.9305, 0.6478 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_6 { pt3dadd( 430.221, 377.427, 54.0943, 0.6738 ) }
    dend_6 { pt3dadd( 430.679, 376.574, 54.1484, 0.466 ) }
    dend_6 { pt3dadd( 431.617, 376.575, 54.0092, 0.5768 ) }
    dend_6 { pt3dadd( 431.841, 375.647, 53.7488, 0.5592 ) }
    dend_6 { pt3dadd( 431.847, 374.517, 53.4288, 0.5142 ) }
    dend_6 { pt3dadd( 432.089, 373.974, 52.08, 0.6102 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_90, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_90 = new SectionList()
    soma_0 ModelViewParmSubset_90.append()
    axon_0 ModelViewParmSubset_90.append()
    axon_1 ModelViewParmSubset_90.append()

    // Group: {name=ModelViewParmSubset_91, groups=[], sections=[dend_39, dend_24, apic_0, dend_0, dend_32, dend_25, apic_11, apic_1, dend_16, dend_1, dend_38, dend_33, dend_29, dend_26, apic_15, apic_12, apic_4, apic_2, dend_20, dend_17, dend_13, dend_2, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, apic_17, apic_16, apic_14, apic_13, apic_6, apic_5, apic_3, dend_21, dend_19, dend_18, dend_15, dend_14, dend_10, dend_3, dend_37, dend_36, apic_10, apic_7, dend_23, dend_22, dend_12, dend_11, dend_9, dend_4, apic_9, apic_8, dend_8, dend_5, dend_7, dend_6]}
    ModelViewParmSubset_91 = new SectionList()
    dend_39 ModelViewParmSubset_91.append()
    dend_24 ModelViewParmSubset_91.append()
    apic_0 ModelViewParmSubset_91.append()
    dend_0 ModelViewParmSubset_91.append()
    dend_32 ModelViewParmSubset_91.append()
    dend_25 ModelViewParmSubset_91.append()
    apic_11 ModelViewParmSubset_91.append()
    apic_1 ModelViewParmSubset_91.append()
    dend_16 ModelViewParmSubset_91.append()
    dend_1 ModelViewParmSubset_91.append()
    dend_38 ModelViewParmSubset_91.append()
    dend_33 ModelViewParmSubset_91.append()
    dend_29 ModelViewParmSubset_91.append()
    dend_26 ModelViewParmSubset_91.append()
    apic_15 ModelViewParmSubset_91.append()
    apic_12 ModelViewParmSubset_91.append()
    apic_4 ModelViewParmSubset_91.append()
    apic_2 ModelViewParmSubset_91.append()
    dend_20 ModelViewParmSubset_91.append()
    dend_17 ModelViewParmSubset_91.append()
    dend_13 ModelViewParmSubset_91.append()
    dend_2 ModelViewParmSubset_91.append()
    dend_35 ModelViewParmSubset_91.append()
    dend_34 ModelViewParmSubset_91.append()
    dend_31 ModelViewParmSubset_91.append()
    dend_30 ModelViewParmSubset_91.append()
    dend_28 ModelViewParmSubset_91.append()
    dend_27 ModelViewParmSubset_91.append()
    apic_17 ModelViewParmSubset_91.append()
    apic_16 ModelViewParmSubset_91.append()
    apic_14 ModelViewParmSubset_91.append()
    apic_13 ModelViewParmSubset_91.append()
    apic_6 ModelViewParmSubset_91.append()
    apic_5 ModelViewParmSubset_91.append()
    apic_3 ModelViewParmSubset_91.append()
    dend_21 ModelViewParmSubset_91.append()
    dend_19 ModelViewParmSubset_91.append()
    dend_18 ModelViewParmSubset_91.append()
    dend_15 ModelViewParmSubset_91.append()
    dend_14 ModelViewParmSubset_91.append()
    dend_10 ModelViewParmSubset_91.append()
    dend_3 ModelViewParmSubset_91.append()
    dend_37 ModelViewParmSubset_91.append()
    dend_36 ModelViewParmSubset_91.append()
    apic_10 ModelViewParmSubset_91.append()
    apic_7 ModelViewParmSubset_91.append()
    dend_23 ModelViewParmSubset_91.append()
    dend_22 ModelViewParmSubset_91.append()
    dend_12 ModelViewParmSubset_91.append()
    dend_11 ModelViewParmSubset_91.append()
    dend_9 ModelViewParmSubset_91.append()
    dend_4 ModelViewParmSubset_91.append()
    apic_9 ModelViewParmSubset_91.append()
    apic_8 ModelViewParmSubset_91.append()
    dend_8 ModelViewParmSubset_91.append()
    dend_5 ModelViewParmSubset_91.append()
    dend_7 ModelViewParmSubset_91.append()
    dend_6 ModelViewParmSubset_91.append()

    // Group: {name=dend, groups=[], sections=[dend_39, dend_24, dend_0, dend_32, dend_25, dend_16, dend_1, dend_38, dend_33, dend_29, dend_26, dend_20, dend_17, dend_13, dend_2, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_21, dend_19, dend_18, dend_15, dend_14, dend_10, dend_3, dend_37, dend_36, dend_23, dend_22, dend_12, dend_11, dend_9, dend_4, dend_8, dend_5, dend_7, dend_6]}
    dend = new SectionList()
    dend_39 dend.append()
    dend_24 dend.append()
    dend_0 dend.append()
    dend_32 dend.append()
    dend_25 dend.append()
    dend_16 dend.append()
    dend_1 dend.append()
    dend_38 dend.append()
    dend_33 dend.append()
    dend_29 dend.append()
    dend_26 dend.append()
    dend_20 dend.append()
    dend_17 dend.append()
    dend_13 dend.append()
    dend_2 dend.append()
    dend_35 dend.append()
    dend_34 dend.append()
    dend_31 dend.append()
    dend_30 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_21 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_10 dend.append()
    dend_3 dend.append()
    dend_37 dend.append()
    dend_36 dend.append()
    dend_23 dend.append()
    dend_22 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()
    dend_9 dend.append()
    dend_4 dend.append()
    dend_8 dend.append()
    dend_5 dend.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 dend.append()
    dend_6 dend.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_11, apic_1, apic_15, apic_12, apic_4, apic_2, apic_17, apic_16, apic_14, apic_13, apic_6, apic_5, apic_3, apic_10, apic_7, apic_9, apic_8]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_11 apic.append()
    apic_1 apic.append()
    apic_15 apic.append()
    apic_12 apic.append()
    apic_4 apic.append()
    apic_2 apic.append()
    apic_17 apic.append()
    apic_16 apic.append()
    apic_14 apic.append()
    apic_13 apic.append()
    apic_6 apic.append()
    apic_5 apic.append()
    apic_3 apic.append()
    apic_10 apic.append()
    apic_7 apic.append()
    apic_9 apic.append()
    apic_8 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_3201, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_3201 = new SectionList()
    soma_0 OneSecGrp_SectionRef_3201.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_24, dend_24, dend_24, dend_24, dend_24, apic_0, apic_0, apic_0, apic_0, apic_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_12, apic_12, apic_12, apic_12, apic_12, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_26 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 2.3783424  // units: uF/cm2
    forsec apic cm = 2.3783424  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 121.99635  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 6.138904E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 1.0897195E-6  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.7884158  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 1.00019495E-8  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.036283378  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 1.33635685E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.039573517  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.14813024  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.8081312E-4  // units: S cm-2
        e_pas_nml2 = -93.30554  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 5.801147E-4  // units: S cm-2
        e_pas_nml2 = -93.30554  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 3.4322957E-6  // units: S cm-2
        e_pas_nml2 = -93.30554  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 1.2260361E-4  // units: S cm-2
        e_pas_nml2 = -93.30554  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 6.5744965E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.007012347  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_472442377
    forsec soma {
        insert CaDynamics_472442377
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_38 nseg = 5
    dend_26 nseg = 3
    dend_20 nseg = 5
    dend_34 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 5
    dend_28 nseg = 5
    dend_27 nseg = 5
    apic_17 nseg = 3
    apic_16 nseg = 3
    apic_14 nseg = 3
    apic_13 nseg = 7
    apic_5 nseg = 5
    apic_3 nseg = 17
    dend_19 nseg = 5
    dend_15 nseg = 5
    dend_14 nseg = 5
    dend_37 nseg = 3
    apic_10 nseg = 3
    dend_22 nseg = 5
    dend_12 nseg = 5
    dend_11 nseg = 7
    dend_9 nseg = 5
    apic_9 nseg = 3
    apic_8 nseg = 3
    dend_8 nseg = 3
    dend_6 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_472442377


