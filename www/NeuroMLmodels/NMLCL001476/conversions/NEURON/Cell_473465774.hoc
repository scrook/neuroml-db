// Cell: Cell_473465774
/*
{
  "id" : "Cell_473465774",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "412.885, 474.632, 30.9243, 19.7438", "422.757, 474.632, 30.9243, 19.7438", "432.629, 474.632, 30.9243, 19.7438" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "422.757, 474.632, 30.9243, 1.0", "428.598, 488.448, 30.9243, 1.0", "434.44, 502.264, 30.9243, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "427.737, 481.15, 26.7278, 0.4624", "428.417, 482.04, 26.1549, 0.4596", "428.54, 482.72, 25.6341, 0.5458", "427.736, 483.173, 24.6545, 0.9366", "426.855, 483.792, 24.6826, 0.5786", "426.706, 483.431, 22.7287, 0.3414", "426.705, 484.426, 22.12, 0.2288", "426.026, 484.624, 21.402, 0.7186", "426.11, 485.658, 22.1511, 0.3374", "425.838, 486.417, 21.2327, 0.4552", "425.978, 486.107, 18.8608, 0.4258", "425.742, 487.175, 19.1451, 0.7258", "425.86, 488.273, 19.6, 0.4794", "426.141, 489.21, 19.6248, 0.4628", "426.338, 490.149, 20.1515, 0.3884", "426.21, 491.109, 19.0866, 0.396", "426.962, 491.62, 20.1757, 0.4036", "427.284, 492.187, 18.8524, 0.407", "427.17, 492.912, 16.8424, 0.4576", "426.836, 493.911, 15.96, 0.4576", "426.29, 494.615, 15.68, 0.3938", "426.254, 495.691, 15.682, 0.5074", "426.818, 496.072, 14.7312, 0.322", "427.17, 496.621, 16.852, 0.3234", "426.483, 497.068, 17.92, 0.305" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "428.852, 479.788, 35.4976, 0.5724", "429.702, 480.508, 36.1357, 0.5848", "430.554, 481.227, 36.7735, 0.5974", "431.404, 481.947, 37.4116, 0.6098", "432.474, 482.282, 36.9552, 0.661", "433.327, 483.014, 36.4325, 0.6606", "433.873, 484.017, 36.4028, 0.6092", "434.124, 485.134, 36.419, 0.5334", "434.461, 486.226, 36.5229, 0.5096", "434.781, 487.294, 37.0916, 0.5638", "435.591, 488.095, 37.0877, 0.6938", "436.582, 488.601, 36.4708, 0.8152", "437.642, 489.033, 36.423, 0.8354", "438.735, 489.343, 36.5448, 0.7804", "439.623, 490.014, 37.1042, 0.6842", "440.246, 490.808, 38.3603, 0.661", "440.704, 491.846, 38.64, 0.6696", "441.385, 492.763, 38.6403, 0.7402", "442.159, 493.604, 38.6414, 0.7626", "442.848, 494.517, 38.6467, 0.75", "443.462, 495.481, 38.6758, 0.6452", "443.93, 496.518, 38.803, 0.4322" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "418.466, 467.496, 33.9556, 0.6342", "417.884, 466.526, 34.3675, 0.6548", "417.3, 465.555, 34.7794, 0.6754", "416.988, 464.505, 35.0, 0.7534", "416.487, 463.557, 34.4688, 0.8426", "416.378, 462.494, 34.9846, 1.0296", "416.289, 461.388, 35.56, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "419.276, 467.099, 29.8525, 0.576", "418.914, 466.035, 29.8799, 0.6082", "418.725, 464.984, 30.6384, 0.7016", "418.291, 464.053, 31.6226, 0.8142", "417.836, 463.016, 31.3841, 0.8552", "417.279, 462.261, 30.294, 0.7682", "417.102, 461.172, 30.2106, 0.5144", "416.394, 460.458, 29.96, 0.463", "415.583, 459.705, 30.2344, 0.5838", "414.834, 458.868, 30.4595, 0.551", "414.192, 458.516, 28.9699, 0.483", "413.103, 458.63, 28.9352, 0.3468", "411.97, 458.731, 28.8044, 0.483", "410.847, 458.852, 28.84, 0.3452", "410.124, 458.41, 27.3611, 0.5546", "409.116, 458.412, 26.9624, 0.4098", "408.296, 458.941, 27.1553, 0.4968", "408.167, 459.833, 26.2826, 0.452", "407.961, 460.894, 25.7032, 0.4146", "407.838, 461.48, 24.1997, 0.4694", "407.95, 461.581, 22.233, 0.3304", "407.795, 461.215, 20.44, 0.3814", "406.824, 461.588, 20.16, 0.483", "406.242, 462.08, 18.4664, 0.6828", "406.349, 463.162, 18.2, 0.377", "406.12, 464.215, 18.4514, 0.6142", "406.801, 464.836, 17.92, 0.2656", "407.035, 465.858, 17.4309, 0.4394", "406.959, 466.573, 19.04, 0.478", "407.073, 467.341, 18.4291, 0.356", "406.564, 467.098, 16.8289, 0.3814", "406.463, 468.116, 16.2241, 0.4288", "406.747, 469.054, 16.263, 0.4566", "407.097, 470.09, 16.3999, 0.4684", "406.63, 470.642, 17.6089, 0.4518", "406.255, 471.411, 16.938, 0.547", "406.241, 472.292, 17.7222, 0.2402", "406.554, 473.184, 16.312, 0.2916", "406.492, 474.246, 16.6613, 0.3056", "406.289, 474.618, 18.48, 0.3886", "406.047, 475.49, 18.2, 0.4912", "405.381, 475.855, 19.2646, 0.3264", "404.781, 476.619, 19.4667, 0.2904", "404.518, 477.288, 20.1055, 0.615", "404.175, 477.504, 22.3929, 0.3808", "403.832, 478.193, 21.4086, 0.568", "403.489, 478.77, 21.7315, 0.7228", "403.451, 479.069, 24.0831, 0.508", "403.888, 479.002, 26.4165, 0.4576", "403.906, 478.857, 28.5555, 0.3996", "403.607, 478.182, 30.1885, 0.304", "404.108, 478.292, 32.0995, 0.2802", "403.805, 478.992, 33.2209, 0.3322", "403.38, 479.903, 33.6011, 0.255", "402.654, 480.461, 32.4201, 0.4916", "402.221, 481.459, 32.5111, 0.521", "401.904, 482.294, 33.32, 0.5338", "401.226, 482.789, 31.8178, 0.4576", "400.838, 483.71, 32.0289, 0.2288", "400.362, 484.505, 31.08, 0.2814", "399.938, 485.533, 31.1668, 0.305", "399.523, 486.329, 31.7971, 0.3748", "399.158, 487.144, 33.1285, 0.2408", "398.72, 488.113, 33.4132, 0.4966", "398.352, 488.756, 35.2254, 0.2288", "397.66, 489.164, 34.8645, 0.2288", "397.004, 489.812, 34.1314, 0.2288", "396.968, 490.91, 33.6, 0.2288", "396.231, 491.629, 33.7257, 0.2516", "395.289, 492.032, 34.5072, 0.519", "394.736, 492.404, 36.2093, 0.4068", "394.091, 492.742, 37.508, 0.3462", "393.726, 493.591, 37.8367, 0.4376", "393.536, 494.611, 38.5389, 0.529", "393.423, 495.691, 39.2375, 0.4648", "393.054, 496.605, 40.2926, 0.5084", "392.142, 496.981, 39.7592, 0.3962", "391.235, 497.475, 40.04, 0.5078", "390.742, 497.395, 41.9535, 0.4214", "390.351, 497.713, 44.1986, 0.5226", "389.768, 498.09, 42.6964, 0.4948", "388.978, 498.473, 42.2909, 0.3032", "388.483, 499.343, 41.708, 0.2944", "387.763, 499.786, 40.9282, 0.2852", "387.93, 500.614, 41.72, 0.305" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "416.427, 469.898, 30.3276, 0.4516", "415.511, 469.213, 30.2414, 0.447", "414.596, 468.529, 30.1552, 0.4424", "413.68, 467.843, 30.0686, 0.438", "412.764, 467.158, 29.9824, 0.4334", "411.752, 466.704, 30.4394, 0.5262", "410.69, 466.365, 30.8, 0.5914", "409.786, 466.225, 31.1735, 0.5164", "408.86, 466.262, 31.8951, 0.5338", "408.56, 465.608, 30.4951, 0.4576", "407.661, 465.143, 30.24, 0.4964", "406.681, 464.694, 30.0476, 0.4576", "405.825, 464.053, 30.0328, 0.4124", "404.862, 463.892, 29.4, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "420.156, 482.347, 30.569, 0.7308", "420.211, 483.435, 29.9247, 0.6326", "419.974, 484.531, 29.6982, 0.589", "419.688, 485.638, 29.6803, 0.5848", "419.073, 486.589, 29.6817, 0.6702", "418.286, 487.417, 29.6867, 0.7292", "417.478, 488.227, 29.7066, 0.7586", "416.67, 489.036, 29.7912, 0.7412", "415.881, 489.829, 30.3414, 0.7154", "415.183, 490.556, 31.6322, 0.7118", "414.427, 491.372, 31.2474, 0.808", "413.538, 492.016, 30.4707, 0.9106", "412.83, 492.87, 29.8024, 0.9152", "412.095, 493.745, 29.7749, 0.8174", "411.648, 494.79, 30.0376, 0.6868", "411.683, 495.924, 29.6822, 0.661" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "423.306, 482.368, 35.2573, 0.4578", "424.163, 482.755, 36.6988, 0.4576", "425.054, 483.301, 37.8305, 0.5792", "425.679, 483.915, 39.6169, 0.7596", "425.802, 484.936, 40.8304, 1.144" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "434.44, 502.264, 30.9243, 1.0", "440.281, 516.08, 30.9243, 1.0", "446.122, 529.896, 30.9243, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "443.93, 496.518, 38.803, 0.4322", "444.212, 496.784, 38.2595, 0.4374", "445.041, 497.396, 37.2966, 0.4472", "445.613, 498.06, 37.5511, 0.483", "446.543, 498.527, 37.3058, 0.4844", "447.415, 498.326, 38.4031, 0.7052", "448.072, 498.098, 40.1251, 0.449", "449.137, 498.098, 40.0823, 0.3304", "450.166, 498.133, 41.274, 0.4174", "451.152, 498.555, 42.0, 0.5592", "451.933, 499.12, 41.6038, 0.8086", "452.629, 499.024, 40.4124, 0.5344", "453.651, 499.237, 40.04, 0.6646", "454.771, 499.127, 39.8866, 0.483", "455.738, 499.354, 40.899, 0.5592", "456.695, 499.627, 40.6888, 0.4372", "457.551, 499.964, 39.8034, 0.7042", "458.514, 500.143, 40.2892, 0.4828", "459.364, 500.689, 40.3875, 0.5662", "460.263, 501.072, 39.48, 0.602", "461.021, 501.499, 39.2283, 0.5084", "461.833, 501.908, 40.32, 0.6142", "462.743, 502.486, 40.6042, 0.6246", "463.671, 502.882, 39.8532, 0.6772", "464.221, 503.323, 40.388, 0.565", "464.739, 503.815, 41.3143, 0.5636", "465.737, 504.047, 40.3519, 0.28", "466.622, 504.139, 41.7796, 0.556", "467.6, 504.035, 41.1634, 0.63", "468.571, 504.498, 41.172, 0.5848", "469.326, 505.162, 40.7226, 0.2828", "469.844, 505.753, 40.2276, 0.414", "470.467, 506.392, 40.04, 0.5776", "470.954, 507.298, 40.4897, 0.2796", "471.209, 507.643, 38.661, 0.2288", "472.02, 507.536, 39.6959, 0.4002", "472.922, 507.135, 40.6, 0.2892", "474.017, 507.135, 40.0386, 0.3434", "474.895, 507.66, 40.3819, 0.4576", "475.938, 507.508, 40.8498, 0.5002", "476.953, 507.917, 40.5177, 0.471", "477.997, 508.292, 40.6199, 0.3692", "478.75, 508.616, 41.72, 0.3814", "479.572, 509.31, 41.2283, 0.5322", "480.574, 509.565, 41.7712, 0.3814", "481.351, 510.082, 42.1252, 0.5388", "482.075, 510.478, 42.0532, 0.6094", "482.903, 510.883, 41.5713, 0.4426", "483.868, 511.402, 42.2769, 0.382", "484.915, 511.482, 42.6213, 0.3428", "485.999, 511.57, 43.3894, 0.4068", "487.024, 511.359, 43.12, 0.5266", "487.888, 510.699, 43.1354, 0.2542", "488.986, 510.598, 43.5182, 0.3158", "489.74, 511.217, 44.0339, 0.5506", "490.685, 511.593, 44.5589, 0.4994", "491.387, 511.893, 44.8, 0.2288", "492.326, 511.894, 45.3989, 0.3234", "493.431, 511.852, 45.92, 0.4084", "494.496, 512.151, 46.2501, 0.5964", "495.438, 512.054, 46.734, 0.4576", "496.293, 512.003, 47.343, 0.4226", "496.845, 512.711, 48.7043, 0.5526", "497.718, 513.243, 48.8393, 0.5562", "498.314, 514.029, 49.243, 0.2288", "498.421, 515.067, 49.5832, 0.5654", "498.476, 516.124, 49.1344, 0.726", "498.924, 517.054, 48.9054, 0.5082", "499.445, 517.86, 48.3412, 0.4576", "500.341, 517.768, 49.392, 0.5454", "501.406, 517.757, 50.1416, 0.5926", "502.513, 517.774, 50.0531, 0.2288", "503.566, 517.661, 50.6422, 0.2934", "504.687, 517.755, 50.6293, 0.5218", "505.755, 517.837, 51.5542, 0.5822", "506.76, 517.976, 51.6356, 0.6312", "507.66, 518.487, 52.4306, 0.669", "508.27, 518.655, 54.1733, 0.5156", "509.186, 518.904, 53.2753, 0.4428", "510.116, 518.611, 53.7354, 0.579", "511.132, 518.376, 53.3772, 0.4132", "512.239, 518.452, 53.2406, 0.2288", "513.355, 518.33, 53.6466, 0.2288", "514.461, 518.232, 54.04, 0.2288", "515.086, 517.976, 55.5008, 0.2288", "515.86, 517.431, 55.44, 0.248", "516.876, 517.197, 54.5583, 0.7406", "517.786, 517.404, 53.6466, 0.8512", "518.737, 517.716, 54.0764, 0.7916", "519.665, 518.084, 53.9798, 0.7454", "520.59, 518.508, 53.7883, 0.7704", "521.674, 518.827, 54.0781, 0.788", "522.801, 518.992, 54.2858, 0.7154", "523.824, 519.458, 54.4947, 0.5338", "524.892, 519.719, 54.04, 0.838", "525.89, 519.704, 54.6283, 0.989", "526.675, 519.334, 55.16, 0.6594", "527.677, 519.043, 55.0808, 0.3418", "528.735, 519.267, 54.5636, 0.625", "529.833, 519.377, 54.7924, 0.7384", "530.935, 519.49, 54.88, 0.838", "531.917, 519.812, 55.4434, 0.7512", "532.716, 520.402, 56.4332, 0.728", "533.647, 520.867, 56.553, 0.9088", "534.305, 521.464, 57.0609, 0.6864", "535.223, 521.98, 57.0581, 0.5466", "536.28, 522.308, 56.8221, 0.5934", "537.337, 522.509, 56.0655, 0.6798", "538.144, 522.942, 56.3584, 0.6484", "539.126, 523.23, 56.5127, 0.5868", "540.169, 523.317, 56.84, 0.7778", "541.218, 523.609, 56.464, 0.7942", "541.981, 524.165, 56.9184, 0.8244", "542.479, 524.899, 57.013, 0.563", "543.192, 525.565, 57.7539, 0.6532", "543.792, 526.513, 57.4552, 0.5642", "544.717, 527.121, 57.4, 0.4894", "545.261, 527.992, 58.457, 0.4068", "546.147, 528.585, 58.6992, 0.4322", "546.808, 529.336, 59.6106, 0.499", "547.649, 529.787, 58.6639, 0.5708", "548.493, 530.167, 58.6653, 0.6272", "549.083, 531.013, 59.2746, 0.7604", "549.836, 531.183, 60.76, 0.6356", "550.315, 531.88, 59.92, 0.4576", "551.434, 531.993, 59.6887, 0.724", "552.411, 532.357, 59.8265, 0.6966", "553.153, 532.997, 60.2437, 0.3462", "553.891, 533.715, 60.4122, 0.611", "554.851, 533.905, 60.0684, 0.7522", "555.928, 534.134, 60.4918, 0.8182", "556.878, 534.437, 60.9834, 0.7206", "557.778, 534.662, 60.9641, 0.552", "558.625, 535.14, 60.6315, 0.4222", "558.91, 535.697, 62.5909, 0.3518", "559.386, 536.307, 63.6339, 0.3048", "560.031, 536.72, 64.0741, 0.2288", "560.904, 537.011, 63.2654, 0.6146", "561.527, 537.519, 62.16, 0.6356", "562.285, 537.411, 63.8918, 0.4346", "563.214, 537.371, 64.1483, 0.5476", "564.25, 537.56, 63.6798, 0.3304", "564.953, 538.046, 63.483, 0.3902", "565.991, 538.366, 63.2136, 0.3754", "566.998, 538.618, 63.28, 0.6478", "567.883, 538.883, 63.0073, 0.6864", "568.586, 538.938, 64.9824, 0.5322", "569.306, 539.396, 65.5007, 0.2856", "570.007, 539.363, 63.6499, 0.3276", "570.94, 539.042, 64.0573, 0.4472", "571.768, 539.07, 65.4898, 0.492", "572.668, 539.229, 66.8763, 0.3102", "573.337, 539.846, 66.5697, 0.3974", "574.143, 540.197, 65.5805, 0.6096", "574.735, 540.898, 64.8225, 0.5088", "575.59, 541.406, 65.1722, 0.5662", "576.322, 542.129, 64.68, 0.531", "576.971, 542.972, 64.3434, 0.4652", "577.791, 543.684, 64.4655, 0.4012", "578.461, 544.08, 65.8, 0.4204", "579.3, 544.209, 64.2832, 0.4576", "580.176, 544.88, 63.84, 0.4082", "580.587, 545.574, 63.569, 0.4502", "580.923, 546.224, 64.68, 0.3892", "581.369, 546.921, 63.3511, 0.388", "582.21, 547.442, 63.0386, 0.4104", "582.807, 547.965, 64.4932, 0.536", "583.659, 548.469, 64.5702, 0.5592", "584.284, 549.224, 64.7209, 0.3234", "584.648, 549.661, 62.7833, 0.4058", "585.391, 550.18, 63.9548, 0.5286", "586.005, 550.695, 62.7917, 0.4322", "586.818, 551.286, 63.42, 0.483", "587.471, 551.704, 64.6862, 0.389", "588.078, 552.62, 64.4, 0.7056", "588.63, 553.103, 66.0517, 0.4576", "589.197, 553.889, 65.1896, 0.7684", "589.784, 554.504, 65.6958, 0.413", "590.372, 555.325, 65.5511, 0.4734", "590.973, 555.88, 65.2761, 0.356", "591.44, 556.527, 65.4147, 0.672", "592.216, 557.103, 64.9984, 0.6714", "592.854, 557.623, 65.9028, 0.2966", "593.4, 558.428, 66.0304, 0.4084", "593.957, 558.866, 64.2536, 0.4358", "594.316, 559.758, 64.5016, 0.5246", "594.69, 560.463, 65.8694, 0.5598", "594.918, 561.409, 67.2664, 0.6284", "595.325, 562.226, 68.2268, 0.5592", "596.186, 562.682, 69.2706, 0.5974", "596.933, 563.288, 70.2411, 0.3082", "598.025, 563.136, 69.7914, 0.4908", "598.861, 562.846, 70.2131, 0.6864", "599.433, 562.106, 71.2832, 0.3496", "600.312, 562.276, 71.9334, 0.4286", "601.229, 562.035, 71.491, 0.382", "601.912, 561.364, 72.8, 0.4576", "602.777, 560.657, 72.8, 0.5708", "603.587, 560.115, 73.36, 0.5848" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "443.93, 496.518, 38.803, 0.4322", "443.835, 497.355, 39.3072, 0.352", "443.393, 498.371, 39.0121, 0.3516", "443.258, 499.486, 38.7439, 0.4208", "443.207, 500.616, 39.097, 0.4768", "442.951, 501.705, 39.6514, 0.5286", "443.336, 502.751, 39.492, 0.5108", "443.983, 503.389, 37.8851, 0.4838", "444.865, 504.098, 37.5819, 0.483", "445.569, 504.992, 37.8423, 0.5082", "446.464, 505.645, 38.5364, 0.5592" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "416.289, 461.388, 35.56, 0.6864", "415.72, 460.992, 32.0191, 0.4292", "415.096, 460.46, 31.204, 0.3054", "414.176, 460.286, 31.6714, 0.3726", "413.454, 459.531, 32.3991, 0.5338", "413.128, 458.582, 31.3911, 0.5526", "412.091, 458.331, 31.64, 0.512", "411.348, 457.576, 31.6571, 0.2428", "410.377, 456.661, 31.7769, 0.4598", "409.474, 456.01, 31.1366, 0.51", "408.483, 455.45, 30.954, 0.5356", "407.452, 455.013, 31.5078, 0.5636", "406.446, 454.497, 31.8956, 0.6172", "405.524, 453.825, 31.8016, 0.6912", "404.539, 453.28, 31.3597, 0.7372", "403.545, 452.894, 30.3565, 0.7256", "402.524, 452.454, 29.7248, 0.6196", "401.446, 452.076, 29.6649, 0.4952", "400.407, 451.615, 29.5932, 0.4102", "399.575, 450.868, 29.2099, 0.443", "398.989, 450.032, 27.966, 0.5258", "398.376, 449.115, 27.2418, 0.6196", "397.92, 448.106, 26.8564, 0.6662", "397.86, 447.002, 27.3317, 0.6864", "397.754, 446.003, 28.6219, 0.6864", "397.383, 444.978, 29.1066, 0.6798", "396.743, 444.059, 28.6247, 0.6542", "395.92, 443.277, 28.3326, 0.6288", "395.016, 442.598, 27.9242, 0.6174", "394.097, 441.939, 27.8502, 0.6428", "393.268, 441.201, 28.1422, 0.6686", "392.688, 440.236, 27.7212, 0.6698", "392.17, 439.233, 27.44, 0.6186", "391.409, 438.396, 27.44, 0.5674", "390.5, 437.704, 27.44, 0.5514", "389.608, 436.987, 27.44, 0.6112", "388.645, 436.386, 27.4398, 0.6788", "387.619, 435.889, 27.4385, 0.7028", "386.761, 435.16, 27.4319, 0.6494", "386.155, 434.196, 27.3946, 0.5658", "385.703, 433.148, 27.2562, 0.5144", "385.311, 432.082, 27.2651, 0.4728", "384.85, 431.051, 27.6893, 0.4354", "384.39, 430.137, 28.742, 0.4068", "383.882, 429.245, 29.5313, 0.4202", "383.191, 428.532, 28.5984, 0.4322", "383.099, 427.81, 26.7569, 0.4118", "382.73, 426.814, 26.3402, 0.3856", "382.107, 425.856, 26.3364, 0.36", "381.363, 424.99, 26.3988, 0.313", "380.572, 424.187, 26.8468, 0.305", "380.112, 423.156, 27.0417, 0.396", "380.014, 422.052, 26.4505, 0.5216", "379.859, 420.923, 26.4801, 0.5802", "379.333, 419.954, 27.1438, 0.5378", "378.403, 419.31, 27.3235, 0.4838", "377.934, 418.523, 25.6676, 0.483" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "416.289, 461.388, 35.56, 0.6864", "416.198, 460.312, 34.9894, 0.5342", "416.276, 459.179, 34.9247, 0.56", "416.59, 458.29, 33.3556, 0.5864", "416.597, 457.252, 32.202, 0.6102", "416.399, 456.133, 31.9015, 0.6162", "416.315, 455.004, 31.7932, 0.6956", "416.735, 453.962, 31.3079, 0.8014", "417.329, 453.031, 30.5693, 0.918", "417.922, 452.096, 29.8757, 0.9406", "418.509, 451.127, 29.538, 0.9314", "418.893, 450.076, 29.0646, 0.8558", "418.948, 448.98, 28.2688, 0.788" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "404.862, 463.892, 29.4, 0.4576", "404.565, 464.062, 31.92, 0.2664", "403.638, 464.28, 31.8262, 0.3028", "402.979, 463.676, 31.2654, 0.2288", "402.358, 463.155, 30.3055, 0.5142", "401.791, 462.428, 29.4616, 0.5094", "401.267, 461.761, 30.9599, 0.4792", "400.376, 461.261, 31.8926, 0.4726", "399.332, 461.309, 31.36, 0.3244", "398.353, 461.132, 31.5582, 0.4464", "397.617, 460.99, 32.9708, 0.2302", "396.906, 460.92, 31.3888, 0.2288", "395.896, 460.924, 30.415, 0.2938", "395.292, 461.332, 28.9531, 0.2288", "394.222, 461.604, 28.56, 0.305" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "404.862, 463.892, 29.4, 0.4576", "405.264, 463.977, 29.0898, 0.3986", "406.006, 464.223, 29.6489, 0.356" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "411.683, 495.924, 29.6822, 0.661", "411.341, 496.446, 27.7303, 0.4772", "410.544, 496.291, 26.0322, 0.5084", "409.587, 496.044, 24.8813, 0.4736", "408.518, 496.097, 23.9699, 0.3956", "407.47, 496.02, 22.9708, 0.3178", "406.725, 496.056, 21.0298, 0.2928", "405.952, 495.891, 19.5008, 0.3358", "404.974, 495.558, 20.1121, 0.407", "403.894, 495.526, 20.2701, 0.4498", "402.833, 495.843, 19.7124, 0.4576", "402.079, 496.633, 19.2872, 0.4948", "401.377, 497.482, 18.5812, 0.5084", "400.53, 498.196, 17.9154, 0.528", "399.826, 499.059, 17.39, 0.4744", "399.016, 499.83, 16.8557, 0.4368", "398.032, 499.53, 17.0539, 0.3616", "396.978, 499.246, 16.2796, 0.356", "395.912, 499.544, 15.6056, 0.3812", "394.935, 499.566, 14.1523, 0.4066", "393.883, 499.482, 13.0777, 0.4322" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "411.683, 495.924, 29.6822, 0.661", "411.877, 496.521, 29.6876, 0.7088", "412.327, 497.57, 29.727, 0.8058", "412.816, 498.599, 29.9673, 0.839", "413.252, 499.653, 30.0328, 0.839", "413.421, 500.707, 29.2242, 0.7838", "413.439, 501.812, 28.5676, 0.781", "413.424, 502.924, 27.9225, 0.788", "413.336, 503.988, 26.9394, 0.8636", "413.15, 505.086, 26.4034, 0.9282", "413.341, 506.189, 26.3155, 1.0378", "413.586, 507.306, 26.2879, 1.146", "413.851, 508.417, 26.133, 1.2088", "414.022, 509.518, 25.5664, 1.1208", "414.279, 510.615, 25.7365, 0.931", "414.356, 511.715, 25.213, 0.7864", "414.379, 512.8, 24.3317, 0.7834", "414.523, 513.923, 24.1167, 0.8514", "414.486, 515.061, 24.2252, 0.9296", "414.221, 516.137, 24.8583, 0.9846", "414.058, 517.254, 25.2866, 1.0138", "414.436, 518.287, 25.8827, 0.9942", "414.962, 519.289, 26.2827, 0.923", "415.547, 520.271, 26.3239, 0.8924", "415.838, 521.372, 26.3447, 0.8898", "416.281, 522.424, 26.4655, 0.9128", "416.818, 523.402, 27.0591, 0.892", "417.489, 524.312, 27.4578, 0.843", "418.038, 525.31, 27.7157, 0.8152", "418.443, 526.366, 27.3426, 0.7626" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "425.802, 484.936, 40.8304, 1.144", "425.585, 486.104, 41.8589, 0.4692", "425.31, 487.204, 41.9499, 0.4472", "425.019, 488.305, 41.6878, 0.5238", "424.939, 489.325, 40.502, 0.6012", "425.16, 490.37, 39.5371, 0.6558", "425.326, 491.456, 38.7568, 0.661", "425.339, 492.593, 38.516, 0.661", "425.343, 493.701, 37.8496, 0.661", "425.356, 494.826, 37.3428, 0.7076", "425.45, 495.938, 36.7203, 0.7354", "425.57, 497.042, 37.2974, 0.786", "425.415, 498.152, 37.8224, 0.8374", "425.34, 499.28, 37.52, 0.8982", "425.348, 500.424, 37.52, 0.9068", "425.396, 501.567, 37.52, 0.8814", "425.601, 502.683, 37.5211, 0.8584", "426.008, 503.752, 37.5231, 0.8404", "426.569, 504.749, 37.5371, 0.8626", "426.954, 505.823, 37.6261, 0.888", "427.221, 506.911, 38.1769, 0.866", "427.515, 508.015, 38.1674, 0.8154", "427.651, 509.133, 37.6743, 0.7886", "427.806, 510.233, 38.3127, 0.788", "428.161, 511.312, 38.6344, 0.7626", "428.523, 512.398, 38.6109, 0.6356" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "425.802, 484.936, 40.8304, 1.144", "425.825, 485.726, 41.2084, 0.785", "426.038, 486.726, 42.4178, 0.7118", "426.486, 487.717, 43.2432, 0.689", "427.23, 488.517, 44.0317, 0.6398", "428.144, 489.194, 43.9726, 0.5648", "428.828, 489.987, 42.8896, 0.5592", "429.135, 490.908, 41.4282, 0.5834", "429.495, 491.967, 40.9021, 0.609", "429.834, 493.058, 40.8881, 0.6346", "429.921, 494.198, 40.9377, 0.6356", "429.975, 495.333, 41.2675, 0.66", "430.31, 496.221, 42.7988, 0.6108", "430.772, 497.238, 43.395, 0.5848" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "603.587, 560.115, 73.36, 0.5848", "604.032, 559.84, 73.4625, 0.4584", "604.417, 558.925, 73.4392, 0.3642", "604.869, 558.158, 72.8, 0.2288", "605.516, 557.515, 73.36, 0.2288", "605.885, 556.788, 74.6348, 0.327", "606.213, 556.007, 75.5087, 0.3944", "606.985, 555.351, 74.9818, 0.5434", "607.818, 554.663, 75.6, 0.4038", "608.922, 554.631, 75.8405, 0.4054", "609.641, 554.777, 77.644, 0.5904", "610.607, 554.944, 78.1068, 0.2288", "611.657, 554.777, 77.56, 0.483", "612.652, 554.522, 78.1046, 0.394", "613.505, 554.84, 78.2911, 0.4576", "614.125, 555.423, 78.1488, 0.3852", "615.046, 555.795, 78.9516, 0.433", "615.864, 555.87, 79.0454, 0.41", "616.71, 556.098, 79.8, 0.2288", "617.491, 556.385, 78.4311, 0.5472", "618.238, 557.014, 79.4825, 0.5364", "618.926, 557.593, 79.1078, 0.6864", "619.394, 557.881, 77.6376, 0.348", "620.033, 558.384, 75.9385, 0.377", "620.049, 558.958, 77.2643, 0.456", "620.576, 558.883, 79.3962, 0.661", "621.43, 558.934, 80.5414, 0.6172", "622.047, 559.537, 80.3701, 0.6864", "622.408, 559.16, 82.1534, 0.6148", "622.916, 558.397, 83.44, 0.4156", "623.706, 558.048, 82.9923, 0.4294", "624.552, 558.032, 81.76, 0.5848", "624.808, 559.026, 81.7698, 0.5612", "625.193, 559.741, 83.095, 0.568", "625.472, 560.424, 83.4968, 0.6654", "626.349, 560.568, 85.1385, 0.2778", "626.68, 561.555, 85.4011, 0.235", "626.66, 562.419, 84.0888, 0.3386", "627.172, 563.05, 85.1071, 0.468", "628.102, 563.201, 84.28, 0.377", "629.142, 563.252, 85.1138, 0.5338", "629.989, 563.636, 85.96, 0.3804", "630.921, 563.419, 85.12, 0.458", "631.909, 563.526, 85.2496, 0.4614", "632.576, 563.964, 83.4033, 0.4122", "633.341, 564.095, 84.2856, 0.35", "634.195, 564.214, 84.8716, 0.7244", "635.152, 564.279, 85.675, 0.4362", "635.862, 564.564, 85.4165, 0.5116", "636.667, 565.023, 86.2873, 0.5562", "637.101, 565.425, 86.2322, 0.6246", "637.907, 565.612, 87.7372, 0.3806", "638.581, 565.515, 86.998, 0.285", "639.253, 566.064, 86.24, 0.4576", "640.065, 566.208, 84.9304, 0.3006", "640.829, 566.509, 86.4853, 0.4616", "641.704, 566.902, 87.08, 0.4004", "642.482, 567.2, 86.8496, 0.4576", "643.405, 567.306, 87.7092, 0.3824", "644.413, 567.288, 87.026, 0.3744", "645.109, 566.963, 86.2873, 0.274", "645.965, 567.113, 87.0422, 0.4068", "646.998, 567.069, 87.4462, 0.5828", "648.109, 567.171, 87.6515, 0.3624", "648.515, 566.817, 89.2158, 0.2766", "649.435, 566.43, 88.7712, 0.3304", "650.37, 566.449, 89.8302, 0.4694", "651.325, 566.075, 88.9386, 0.554", "652.375, 565.849, 88.4523, 0.5262", "653.307, 565.448, 87.92, 0.4042", "654.09, 564.899, 88.4876, 0.3814", "654.877, 564.423, 87.8391, 0.2984", "655.735, 563.901, 87.5938, 0.5934", "656.356, 563.73, 87.1875, 0.6014", "657.189, 563.557, 86.8288, 0.5366", "658.132, 563.328, 87.579, 0.494", "658.999, 562.777, 87.9281, 0.457", "659.285, 562.236, 89.8929, 0.4724", "660.011, 561.767, 89.6294, 0.4576", "660.908, 561.475, 90.0869, 0.3304", "661.812, 561.041, 90.5915, 0.2762", "662.295, 560.226, 91.007, 0.4518", "663.255, 559.957, 91.3066, 0.265", "663.749, 559.168, 91.1789, 0.3062", "663.887, 558.384, 89.6972, 0.4734", "664.321, 557.718, 88.9473, 0.4572", "664.693, 557.002, 90.44, 0.3798", "665.259, 556.42, 90.9202, 0.356", "665.579, 555.927, 88.8731, 0.4576", "665.654, 554.932, 87.6123, 0.3092", "665.987, 554.216, 88.48, 0.5168", "666.549, 553.369, 89.32, 0.5848", "667.141, 552.681, 88.216, 0.2418", "667.711, 552.494, 89.9251, 0.3304", "667.557, 551.814, 91.306, 0.3172", "668.528, 551.702, 91.7006, 0.2288", "668.209, 550.836, 93.002, 0.356", "668.277, 549.87, 93.9879, 0.2708", "668.655, 549.083, 92.813, 0.6102", "668.002, 548.785, 94.1394, 0.356", "668.17, 548.179, 95.8098, 0.3716", "668.668, 547.518, 95.48, 0.4576" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "603.587, 560.115, 73.36, 0.5848", "603.918, 560.446, 72.8, 0.2542" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "446.464, 505.645, 38.5364, 0.5592", "446.732, 505.641, 38.8394, 0.3108", "447.298, 506.289, 38.08, 0.5762", "447.647, 506.688, 39.9697, 0.6784", "448.149, 507.385, 41.16, 0.5084", "448.156, 508.343, 40.88, 0.4236", "448.703, 509.207, 41.44, 0.5876", "449.033, 510.129, 40.6994, 0.5602", "449.25, 511.143, 40.3754, 0.2776", "449.785, 511.76, 40.9875, 0.7072", "449.821, 512.665, 41.977, 0.8192", "450.078, 513.292, 43.2415, 0.6472", "450.222, 514.251, 44.2229, 0.3814", "450.278, 515.181, 43.1371, 0.9452", "450.568, 516.093, 42.2495, 0.74", "450.579, 516.844, 40.6865, 0.4902", "450.998, 517.274, 42.8585, 0.7028", "451.688, 517.951, 43.3751, 0.8996", "452.223, 518.762, 42.9884, 0.7586", "452.449, 519.29, 41.8435, 0.5166", "453.156, 520.013, 40.7781, 0.245", "453.486, 520.768, 39.4772, 0.2288", "453.253, 521.099, 37.814, 0.6554", "453.601, 521.55, 38.9136, 0.6014", "454.47, 521.59, 40.2226, 0.6302", "454.482, 521.782, 41.9342, 0.2796", "454.096, 522.318, 43.6192, 0.4142", "454.595, 523.006, 45.08, 0.601", "455.379, 523.766, 44.8, 0.5104", "455.702, 524.595, 44.9529, 0.5384", "456.202, 525.576, 44.2484, 0.5592", "456.453, 526.621, 43.3222, 0.5538", "456.539, 527.664, 42.7868, 0.5394", "456.854, 528.584, 44.1815, 0.5528", "457.479, 529.302, 45.7092, 0.5206", "458.198, 530.073, 46.7228, 0.4622", "458.747, 531.034, 46.9336, 0.4068", "459.223, 532.0, 46.0796, 0.4226", "459.79, 532.47, 46.2633, 0.5394", "460.59, 533.168, 46.4834, 0.6526", "461.517, 533.836, 46.4968, 0.6844", "462.441, 534.51, 46.5735, 0.6396", "463.284, 535.23, 47.2396, 0.5156", "463.82, 536.211, 47.7795, 0.4838", "464.339, 537.194, 48.3692, 0.4582", "465.281, 537.548, 47.105, 0.5084", "466.254, 538.12, 47.5042, 0.5154", "467.119, 538.867, 47.6, 0.592", "467.895, 539.708, 47.6003, 0.6706", "468.566, 540.634, 47.6014, 0.7652", "469.238, 541.559, 47.6073, 0.7828", "469.787, 542.559, 47.6426, 0.7202", "470.105, 543.653, 47.8304, 0.5672", "470.272, 544.759, 48.265, 0.4228", "470.527, 545.854, 47.8134, 0.3594", "470.639, 546.989, 47.9534, 0.3894", "470.629, 548.132, 47.917, 0.4406", "470.552, 549.262, 48.0035, 0.4878", "470.332, 550.36, 47.4701, 0.5186", "470.28, 551.484, 47.3407, 0.5536", "470.563, 552.569, 47.8607, 0.5338", "471.002, 553.592, 48.4134, 0.5276", "471.481, 554.617, 48.3907, 0.5288", "471.738, 555.717, 48.3641, 0.5922", "472.033, 556.799, 48.8614, 0.6178", "472.304, 557.905, 48.886, 0.6276", "472.71, 558.97, 48.7108, 0.602", "473.221, 559.989, 48.6707, 0.5684", "473.786, 560.971, 48.44, 0.509", "474.308, 561.958, 48.2322, 0.449", "475.029, 562.834, 48.4932, 0.4322", "475.725, 563.716, 48.1863, 0.4506", "476.32, 564.661, 47.6171, 0.4922", "476.911, 565.625, 47.2279, 0.5272", "477.525, 566.56, 46.7054, 0.5496", "478.265, 567.424, 46.48, 0.5146", "478.973, 568.316, 46.48, 0.4344", "479.692, 569.154, 46.265, 0.2718", "480.159, 570.087, 46.2, 0.4362", "480.943, 570.806, 45.6378, 0.5232", "481.475, 571.65, 45.4171, 0.5296", "482.283, 572.028, 44.9288, 0.4634", "483.082, 572.615, 44.0182, 0.4906", "483.725, 573.511, 43.7464, 0.4756", "484.49, 574.246, 43.6621, 0.3874", "485.018, 575.143, 43.4372, 0.4678", "485.501, 576.038, 43.2457, 0.4664", "486.091, 576.919, 43.1875, 0.5328", "486.929, 577.601, 43.5, 0.4602", "487.964, 577.828, 43.4689, 0.3264", "488.903, 578.166, 43.68, 0.2288", "489.514, 579.029, 44.119, 0.4974", "490.114, 579.927, 43.7592, 0.404", "490.733, 580.793, 42.8932, 0.2288", "491.198, 581.311, 43.96, 0.2578", "491.35, 582.344, 43.3199, 0.3116", "491.783, 583.124, 42.9626, 0.4576", "492.25, 583.851, 43.68, 0.2288", "493.16, 584.489, 43.4694, 0.2288", "493.74, 585.411, 43.3798, 0.4056", "493.862, 586.501, 43.0186, 0.4218", "494.063, 587.612, 43.12, 0.2898", "494.182, 588.712, 42.6782, 0.3656", "494.628, 589.612, 42.1327, 0.5156", "495.089, 590.562, 41.7866, 0.305", "495.466, 591.537, 41.72, 0.2288", "496.059, 592.477, 41.72, 0.2288", "496.541, 593.468, 41.72, 0.2836", "496.919, 594.534, 41.72, 0.4268", "497.449, 595.224, 41.5324, 0.28", "497.925, 596.189, 41.0735, 0.3814", "498.337, 596.937, 40.8282, 0.3368", "498.62, 597.921, 39.8706, 0.3132", "498.998, 598.971, 40.0775, 0.2878", "499.437, 599.959, 40.8386, 0.2326", "499.672, 601.07, 40.6871, 0.2872", "500.099, 602.056, 40.04, 0.5206", "500.616, 602.894, 39.4831, 0.407", "500.951, 603.931, 40.0725, 0.3992", "501.11, 604.954, 39.6158, 0.2612", "501.509, 605.974, 40.021, 0.3538", "502.162, 606.758, 40.04, 0.517", "502.77, 607.481, 41.0192, 0.503", "502.801, 608.387, 42.0398, 0.4096", "502.687, 609.212, 43.2004, 0.3512", "502.605, 610.223, 42.7958, 0.3024", "502.216, 611.095, 43.7296, 0.4074", "502.223, 612.177, 43.4, 0.4466", "502.155, 613.171, 43.4148, 0.3868", "502.41, 614.149, 43.3908, 0.2542", "502.753, 614.83, 44.52, 0.2534", "503.328, 615.802, 44.52, 0.2288", "503.958, 616.745, 44.52, 0.2374", "504.491, 617.734, 44.52, 0.4488", "504.919, 618.589, 45.2318, 0.3928", "505.06, 619.578, 45.64, 0.4724", "505.486, 620.628, 45.6711, 0.665", "506.059, 621.504, 45.4958, 0.6956", "506.646, 622.351, 45.2718, 0.6484", "507.22, 623.28, 44.8, 0.3734", "507.474, 624.25, 45.33, 0.48", "507.882, 625.112, 45.299, 0.5338", "508.548, 625.75, 46.1031, 0.279", "508.516, 626.608, 45.6089, 0.384", "508.756, 627.699, 45.2169, 0.4972", "509.103, 628.77, 44.8333, 0.4092", "509.453, 629.706, 45.8746, 0.411", "509.54, 630.67, 45.6145, 0.5592", "509.785, 631.75, 45.6103, 0.558", "510.555, 632.568, 46.0132, 0.5338" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "446.464, 505.645, 38.5364, 0.5592", "447.268, 506.386, 38.6361, 0.5592", "448.152, 507.111, 38.6414, 0.5848", "449.108, 507.736, 38.6473, 0.5848", "450.188, 508.015, 38.6879, 0.5848", "451.308, 508.19, 38.9785, 0.6184", "452.381, 508.537, 39.4005, 0.6356", "453.479, 508.711, 39.1465, 0.618", "454.547, 508.713, 38.1805, 0.6102", "455.655, 508.691, 37.6082, 0.6102", "456.728, 509.017, 37.5172, 0.6102", "457.767, 509.495, 37.5032, 0.5534", "458.824, 509.931, 37.42, 0.5338", "459.919, 510.118, 36.8883, 0.5918", "461.024, 510.294, 36.3143, 0.6492", "462.087, 510.597, 35.6191, 0.6216", "463.156, 510.971, 35.3181, 0.5306", "464.284, 511.093, 35.28, 0.4878", "465.426, 511.04, 35.2794, 0.5038", "466.57, 511.025, 35.2761, 0.5084", "467.714, 511.026, 35.2542, 0.4876", "468.856, 511.028, 35.1047, 0.4622", "469.966, 511.045, 34.4602, 0.4576", "471.092, 511.183, 34.3487, 0.4366", "472.173, 511.431, 34.9658, 0.4322", "473.302, 511.509, 35.2744, 0.4322", "474.428, 511.69, 35.4413, 0.4972", "475.515, 511.962, 35.9794, 0.5302", "476.608, 512.271, 35.8159, 0.5786", "477.678, 512.601, 36.3054, 0.5396", "478.78, 512.893, 36.4924, 0.5338", "479.768, 513.457, 36.5873, 0.5116", "480.382, 514.403, 36.6019, 0.531", "481.236, 515.152, 36.6405, 0.4874", "482.318, 515.493, 36.7959, 0.4576", "483.417, 515.219, 36.3997, 0.51", "484.539, 515.436, 36.3972, 0.6636", "485.631, 515.776, 36.3815, 0.7626", "486.708, 516.158, 36.2804, 0.761", "487.747, 516.588, 35.7549, 0.7088", "488.758, 517.083, 35.2814, 0.631", "489.786, 517.583, 35.28, 0.5274", "490.866, 517.894, 35.2808, 0.4048", "491.939, 517.51, 35.2853, 0.3836", "493.08, 517.488, 35.3178, 0.4092", "494.187, 517.717, 35.5729, 0.4294", "495.214, 517.886, 36.5515, 0.4108", "496.328, 517.864, 35.9442, 0.4452", "497.412, 517.729, 35.28, 0.483", "498.527, 517.493, 35.28, 0.4682", "499.668, 517.46, 35.28, 0.4322", "500.791, 517.618, 35.28, 0.4474", "501.789, 518.104, 35.1756, 0.487", "502.262, 518.508, 33.0988, 0.305", "502.642, 519.376, 34.0228, 0.2346", "503.542, 519.262, 34.9068, 0.6076", "504.631, 519.249, 34.6114, 0.5464", "505.574, 519.605, 35.5118, 0.3442", "506.646, 519.806, 34.9233, 0.661", "507.759, 519.819, 34.8169, 0.5604", "508.819, 519.875, 34.72, 0.622", "509.829, 520.377, 34.3638, 0.4638", "510.678, 520.894, 34.8533, 0.4576", "511.099, 521.606, 35.3111, 0.4184", "512.105, 522.065, 35.364, 0.4576", "513.078, 522.603, 35.133, 0.5138", "513.984, 523.142, 34.9754, 0.5288", "514.737, 523.673, 34.6408, 0.8358", "515.737, 524.029, 35.24, 0.9624", "516.38, 524.641, 34.3311, 0.9024", "517.11, 525.249, 35.0, 0.8638", "517.889, 526.049, 35.3732, 0.6356", "518.779, 526.702, 35.1338, 0.4632", "519.516, 527.249, 34.277, 0.4576", "520.345, 527.601, 35.4679, 0.7884", "521.423, 527.895, 35.28, 0.6924", "522.414, 528.185, 36.3255, 0.2898", "523.26, 528.553, 35.1862, 0.5466", "524.216, 529.089, 35.0028, 0.8628", "525.257, 529.333, 35.0837, 0.736", "526.129, 529.329, 34.8636, 0.4576", "526.293, 529.46, 36.0805, 0.437", "526.699, 530.094, 36.024, 0.3304", "527.614, 530.473, 35.3228, 0.6142", "528.72, 530.618, 35.3027, 0.7422", "529.802, 530.807, 34.7407, 0.5764", "530.722, 531.046, 35.4645, 0.5084", "531.155, 531.833, 36.3647, 0.2576", "531.941, 532.302, 35.7081, 0.4576", "532.535, 533.04, 34.4848, 0.2462", "533.456, 532.912, 34.3042, 0.6596", "534.401, 533.333, 34.7144, 0.5802", "535.19, 533.682, 33.955, 0.4726", "535.632, 534.414, 35.296, 0.6356", "536.687, 534.565, 35.1263, 0.4322", "537.385, 534.899, 33.6, 0.6366", "538.417, 535.32, 33.1075, 0.5614", "539.497, 535.403, 32.7163, 0.4816", "540.293, 536.168, 32.76, 0.734", "541.084, 536.766, 33.3631, 0.5848", "542.015, 537.282, 33.8072, 0.3476", "542.37, 537.407, 31.6711, 0.5014", "543.152, 537.994, 31.6602, 0.6356", "544.041, 538.593, 31.64, 0.558", "544.812, 539.057, 32.76, 0.6864", "545.394, 539.63, 31.8324, 0.6588", "546.235, 539.838, 33.2993, 0.2942", "547.007, 539.666, 32.6561, 0.4806", "547.888, 540.16, 31.726, 0.6728", "548.963, 540.414, 32.0723, 0.6424", "550.007, 540.858, 31.7822, 0.5218", "550.987, 541.357, 32.2, 0.5408", "551.522, 542.074, 31.4474, 0.5138", "551.317, 542.987, 32.207, 0.3206", "551.768, 543.878, 31.229, 0.5898", "552.503, 544.504, 30.6292, 0.6764", "553.257, 545.092, 30.52, 0.594", "553.871, 545.993, 30.0667, 0.4176", "553.913, 546.657, 31.2746, 0.2288", "553.93, 546.946, 29.1357, 0.2288", "555.029, 547.061, 29.591, 0.2928", "555.674, 547.666, 30.4354, 0.5408", "556.742, 547.896, 30.24, 0.7796", "557.833, 547.902, 30.5808, 0.66", "558.867, 547.87, 31.36, 0.5496", "559.798, 548.297, 31.96, 0.5302", "560.312, 548.128, 33.9735, 0.3304", "560.909, 548.94, 34.2488, 0.405", "561.543, 549.554, 34.1984, 0.2676", "561.502, 549.883, 32.0312, 0.3506", "562.061, 550.837, 31.64, 0.438", "562.632, 551.647, 30.9957, 0.4068", "563.312, 552.451, 30.9056, 0.5016", "564.265, 552.673, 30.8787, 0.4176", "564.762, 553.237, 29.6932, 0.2796", "565.353, 553.911, 28.6367, 0.3214", "565.935, 554.344, 30.4478, 0.4778", "566.531, 555.017, 30.8207, 0.5084", "567.101, 555.693, 31.08, 0.5334", "567.966, 556.325, 31.5266, 0.281", "568.853, 556.622, 30.4511, 0.371", "569.542, 557.235, 30.0227, 0.5058", "570.443, 557.766, 30.7863, 0.5522", "571.092, 558.31, 30.7387, 0.6864", "571.542, 559.249, 30.3965, 0.5512", "572.09, 559.961, 31.0752, 0.6532", "572.761, 560.786, 31.227, 0.4756", "573.477, 561.567, 30.5908, 0.4368", "573.894, 562.39, 31.0248, 0.6294", "574.17, 563.072, 31.85, 0.3548", "574.583, 563.978, 31.4118, 0.5218", "574.878, 564.984, 30.7216, 0.5982", "575.379, 565.859, 29.9902, 0.2296", "575.318, 566.742, 30.3173, 0.2288", "575.758, 567.628, 31.08, 0.405", "576.467, 568.484, 31.4426, 0.4778", "577.096, 569.132, 32.3613, 0.4738", "577.869, 569.471, 30.8445, 0.4286", "578.727, 569.813, 29.2768, 0.3274", "579.651, 570.398, 29.3104, 0.2288", "580.482, 570.797, 30.231, 0.2346", "581.099, 571.428, 31.08, 0.3318", "581.277, 572.515, 31.3214, 0.5308", "581.81, 573.359, 30.9442, 0.4764", "582.41, 574.111, 30.457, 0.4996", "583.161, 574.829, 29.7598, 0.4358", "583.614, 575.659, 29.9774, 0.243", "584.026, 576.338, 29.1186, 0.2288", "584.798, 576.749, 29.1298, 0.2936", "585.423, 577.181, 29.6615, 0.5036", "586.1, 577.949, 29.1799, 0.6864", "586.934, 578.666, 29.7223, 0.5294", "587.617, 579.23, 28.5709, 0.3784", "588.319, 580.039, 28.8932, 0.429", "588.187, 581.003, 29.6562, 0.2348", "588.57, 581.701, 28.56, 0.2288", "589.176, 582.516, 28.2736, 0.3828", "589.633, 583.472, 27.4953, 0.5488", "590.293, 584.181, 26.4115, 0.458", "591.196, 584.657, 26.3702, 0.3678", "592.006, 584.814, 25.5065, 0.5584", "592.631, 585.376, 24.64, 0.292", "593.659, 585.717, 25.2417, 0.2288", "594.65, 586.166, 25.7539, 0.2288", "595.619, 585.992, 24.9539, 0.505", "596.684, 586.186, 25.2, 0.2392", "597.398, 585.728, 24.078, 0.4576", "598.1, 586.254, 24.0934, 0.4034", "599.044, 586.048, 24.345, 0.3576", "599.978, 585.575, 23.8619, 0.644", "601.084, 585.448, 23.5151, 0.485", "602.024, 585.322, 23.0952, 0.2634", "602.844, 585.826, 23.0651, 0.2764", "603.677, 585.971, 23.24, 0.3302", "604.747, 586.293, 23.24, 0.2288", "605.891, 586.311, 23.24, 0.2288", "606.851, 586.867, 23.1492, 0.3036", "607.526, 587.55, 22.8108, 0.6762", "608.428, 588.054, 22.4266, 0.563", "609.325, 588.489, 22.3325, 0.4576", "610.291, 588.88, 21.9188, 0.3168", "611.159, 589.274, 22.8862, 0.4322", "612.056, 589.688, 22.4266, 0.4576", "612.726, 589.961, 23.52, 0.2796" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "377.934, 418.523, 25.6676, 0.483", "376.963, 417.576, 25.4214, 0.3676", "375.96, 417.126, 26.0936, 0.426", "374.985, 416.749, 26.7413, 0.5108", "374.12, 416.17, 25.6814, 0.5766", "373.626, 415.982, 25.6868, 0.5432", "372.99, 415.426, 26.1932, 0.5142", "372.23, 414.627, 25.5083, 0.5482", "371.556, 413.809, 24.4643, 0.6", "370.865, 412.92, 24.2921, 0.6512", "370.114, 412.129, 25.0487, 0.661", "369.256, 411.474, 25.9573, 0.5974", "368.293, 410.881, 26.2657, 0.5204", "367.199, 410.579, 26.1617, 0.4868", "366.212, 410.308, 24.9934, 0.5292", "365.554, 410.015, 23.2448, 0.7586", "364.466, 409.967, 22.8936, 0.6068", "363.66, 409.359, 22.293, 0.436", "362.913, 409.446, 23.3197, 0.237", "362.073, 409.523, 22.5686, 0.4052", "361.287, 409.041, 21.4978, 0.6864", "360.686, 408.749, 20.1541, 0.7724", "360.089, 407.921, 20.4099, 0.593", "359.351, 407.453, 20.1316, 0.2796", "358.385, 407.043, 19.88, 0.549", "357.757, 406.344, 20.2357, 0.5012", "357.363, 405.452, 20.44, 0.3592", "357.026, 404.391, 20.44, 0.426", "356.918, 404.068, 18.0917, 0.498", "356.594, 403.389, 16.2126, 0.3738", "355.94, 403.136, 14.3152, 0.57", "354.974, 402.775, 13.465, 0.5742", "354.378, 402.155, 14.7833, 0.6568", "353.763, 401.223, 14.6926, 0.641", "352.883, 400.543, 14.8364, 0.7392", "352.887, 399.44, 14.7498, 0.473", "352.988, 398.451, 14.8634, 0.669", "353.318, 397.647, 15.68, 0.3814", "352.924, 396.681, 15.189, 0.5466", "352.155, 396.3, 13.7705, 0.6886", "351.56, 395.419, 13.44, 0.648", "350.865, 394.566, 13.16, 0.6102" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "377.934, 418.523, 25.6676, 0.483", "378.172, 418.84, 27.4228, 0.4068", "377.924, 418.103, 29.4297, 0.4052", "377.402, 417.114, 29.9334, 0.3834", "377.185, 416.008, 29.6988, 0.4166", "376.85, 415.025, 28.5732, 0.4902", "376.319, 414.031, 28.1168, 0.5376", "375.706, 413.101, 27.5255, 0.5632", "374.984, 412.214, 27.4451, 0.5968", "374.315, 411.289, 27.463, 0.6732", "373.543, 410.444, 27.5306, 0.7324", "372.85, 409.557, 27.872, 0.688", "372.356, 408.558, 28.4133, 0.6192", "371.952, 407.492, 28.56, 0.5764", "371.449, 406.466, 28.56, 0.5676", "370.897, 405.463, 28.56, 0.5848", "370.444, 404.428, 28.5606, 0.5934", "370.181, 403.316, 28.5631, 0.6102", "369.864, 402.218, 28.5802, 0.6102", "369.602, 401.106, 28.6978, 0.6102", "369.33, 400.0, 28.9514, 0.601", "369.085, 398.896, 28.887, 0.5848", "368.884, 397.785, 28.5718, 0.6048", "368.667, 396.665, 28.6381, 0.666", "368.6, 395.545, 29.0478, 0.7118", "368.618, 394.465, 29.9572, 0.6592", "368.742, 393.383, 30.6762, 0.5418", "368.932, 392.26, 30.9168, 0.461", "368.818, 391.185, 31.4384, 0.4666", "368.365, 390.182, 32.1527, 0.5324", "367.873, 389.159, 32.3548, 0.5964", "367.454, 388.109, 32.0253, 0.6484", "367.306, 387.026, 31.3751, 0.661", "367.528, 385.938, 30.9058, 0.6342", "367.819, 384.836, 30.7885, 0.5824", "367.726, 383.73, 30.7252, 0.5308", "367.346, 382.667, 30.3402, 0.5084", "366.835, 381.668, 29.8572, 0.4788", "366.004, 380.946, 29.7511, 0.4424", "365.029, 380.386, 30.1773, 0.3692", "364.547, 379.469, 30.5794, 0.314", "364.423, 378.499, 29.5277, 0.305", "364.436, 377.583, 28.6518, 0.353", "364.351, 376.607, 28.8781, 0.3818", "364.1, 375.634, 29.1488, 0.3012", "364.109, 374.501, 29.12, 0.2646", "363.805, 374.226, 27.5356, 0.458", "363.935, 373.247, 27.7282, 0.6036", "364.236, 372.222, 28.28, 0.4254", "364.124, 371.416, 27.0121, 0.4576", "364.147, 370.298, 27.1373, 0.5786", "364.135, 369.181, 26.8781, 0.5598", "364.136, 368.095, 27.5308, 0.6102", "364.18, 367.198, 27.1542, 0.6404", "363.866, 366.273, 28.0, 0.2708", "363.487, 365.277, 27.3418, 0.509", "363.723, 364.343, 27.4089, 0.3136", "363.644, 363.315, 26.8153, 0.7684", "363.334, 362.551, 26.6533, 0.6436", "363.332, 361.55, 26.04, 0.5782", "363.111, 360.431, 25.9654, 0.4272", "362.778, 359.437, 26.0089, 0.3814", "362.534, 358.655, 25.359, 0.3398", "362.18, 357.771, 26.1925, 0.356", "361.68, 356.926, 26.3334, 0.2972", "361.39, 355.916, 25.2752, 0.4978", "361.337, 355.009, 25.9502, 0.4388", "361.149, 354.134, 25.15, 0.5692", "361.146, 353.01, 24.9073, 0.5084", "361.046, 351.883, 24.6282, 0.5592", "361.092, 350.943, 23.6132, 0.5234", "361.046, 349.913, 23.6159, 0.407", "361.419, 348.848, 23.52, 0.305", "361.504, 347.789, 22.6981, 0.4532", "361.226, 346.766, 22.8452, 0.5748", "361.046, 345.833, 22.3895, 0.4322", "361.046, 344.869, 22.8028, 0.2474", "361.046, 343.727, 22.68, 0.2288", "361.136, 342.691, 23.1474, 0.2374", "360.844, 341.96, 23.7059, 0.3814", "360.614, 341.191, 24.92, 0.4916", "360.354, 340.1, 24.7633, 0.4482", "360.138, 339.003, 24.64, 0.4424", "359.955, 337.958, 24.4173, 0.44", "359.78, 336.849, 24.36, 0.3304", "359.494, 335.762, 24.5845, 0.4116", "358.905, 334.864, 24.2885, 0.3304", "358.644, 333.9, 23.5301, 0.2288", "358.441, 332.914, 23.8479, 0.3502", "358.183, 331.836, 24.0582, 0.3992", "358.186, 331.1, 23.5789, 0.355", "358.083, 330.387, 25.0445, 0.4206", "358.605, 330.044, 26.127, 0.5574", "359.218, 329.392, 26.88, 0.2288", "359.653, 328.706, 28.0339, 0.2472", "360.217, 327.802, 28.091, 0.305", "360.829, 327.112, 27.7337, 0.2826", "361.709, 326.657, 27.902, 0.3858", "362.425, 326.362, 26.9389, 0.2822", "363.481, 326.196, 26.88, 0.2288", "364.18, 325.341, 26.5322, 0.2288", "364.663, 324.977, 27.3674, 0.4236", "365.483, 324.464, 26.6611, 0.367", "366.35, 324.055, 25.6656, 0.3622", "367.229, 323.561, 25.2, 0.2288", "368.35, 323.412, 24.9288, 0.2288", "369.483, 323.291, 24.92, 0.2288", "370.478, 322.84, 25.2477, 0.3304", "371.501, 322.391, 25.48, 0.3438", "372.476, 322.227, 25.0139, 0.356", "373.518, 321.922, 25.1236, 0.3746", "374.379, 321.922, 23.8824, 0.356", "375.297, 321.693, 24.8926, 0.5114", "376.185, 321.705, 25.9157, 0.4068" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "418.948, 448.98, 28.2688, 0.788", "419.849, 448.633, 27.6069, 0.677", "420.878, 448.237, 26.8522, 0.5506", "421.609, 447.511, 26.7637, 0.7372", "421.825, 446.538, 26.32, 0.7364", "422.365, 445.824, 26.5224, 0.8666", "422.461, 445.121, 24.9652, 0.5786", "422.53, 444.38, 24.64, 0.5846", "422.526, 443.503, 24.08, 0.34", "422.365, 442.739, 25.512, 0.8646", "422.365, 441.621, 26.0073, 0.8494", "422.62, 440.534, 26.5258, 0.7252", "423.361, 439.87, 27.1841, 0.4298", "423.611, 439.131, 27.6269, 0.6102", "424.056, 438.28, 27.16, 0.462", "424.081, 437.467, 28.8719, 0.4164", "424.194, 436.443, 28.7384, 0.4842", "424.117, 435.333, 28.6966, 0.496", "424.652, 434.585, 28.3111, 0.356", "425.11, 433.972, 28.9509, 0.2288", "425.118, 432.949, 27.9227, 0.356", "425.232, 431.945, 27.126, 0.4372", "425.6, 430.921, 26.7586, 0.4996", "425.777, 429.957, 27.3632, 0.6034", "425.671, 429.142, 27.1463, 0.51", "426.026, 428.315, 26.8882, 0.5338", "425.928, 427.377, 26.0765, 0.6312", "426.002, 426.735, 25.7745, 0.2288", "426.026, 425.608, 25.9792, 0.2288", "426.026, 424.465, 26.04, 0.2288", "425.911, 423.433, 25.3017, 0.3754", "426.369, 422.587, 25.7226, 0.3802", "426.309, 421.523, 25.2, 0.8206", "426.527, 420.436, 25.0123, 1.1864", "426.783, 419.459, 24.7552, 0.5952", "426.785, 418.335, 24.64, 0.4024", "426.646, 417.314, 23.777, 0.6356", "426.368, 416.318, 22.7303, 0.6294", "426.369, 415.243, 23.4396, 0.4146", "426.358, 414.114, 23.3502, 0.5062", "425.911, 413.404, 24.36, 0.5848", "425.626, 412.343, 24.592, 0.721", "425.589, 411.484, 25.9878, 0.479", "424.965, 410.595, 26.0524, 0.4728", "424.97, 409.605, 26.5559, 0.4442", "424.909, 408.564, 26.3521, 0.4714", "425.196, 407.955, 24.5751, 0.685", "425.353, 406.997, 23.6988, 0.8298", "425.518, 406.352, 22.0286, 0.5152", "425.155, 405.484, 22.1053, 0.4576", "425.789, 404.644, 22.4043, 0.6332", "425.682, 403.663, 22.1601, 0.6188", "426.139, 402.931, 20.6895, 0.433", "426.369, 402.027, 20.2178, 0.5812", "426.409, 401.181, 21.1956, 0.6864", "426.941, 400.613, 20.16, 0.2288", "427.126, 399.7, 19.8977, 0.4322", "427.276, 399.325, 21.6531, 0.356", "427.398, 398.466, 21.5928, 0.356", "427.398, 397.585, 20.1642, 0.3744", "427.41, 396.451, 20.2497, 0.6864", "427.446, 395.596, 19.5696, 0.3438", "427.216, 394.634, 18.48, 0.2374", "426.774, 393.964, 19.8353, 0.242", "426.493, 393.419, 21.9121, 0.3766", "426.483, 392.426, 22.68, 0.2288", "426.112, 391.725, 21.9357, 0.4624", "426.195, 390.906, 21.84, 0.5592", "425.568, 390.689, 22.6445, 0.6864", "426.441, 390.836, 23.4026, 0.4476", "426.792, 389.8, 24.0033, 0.4646", "426.826, 388.746, 24.8498, 0.6514", "427.165, 387.823, 25.9865, 0.5138", "427.17, 386.753, 26.9103, 0.4336", "427.17, 385.646, 27.4308, 0.4576", "427.23, 384.62, 26.8881, 0.3338", "427.845, 383.915, 27.2685, 0.2608", "428.092, 383.139, 28.56, 0.2304", "428.912, 382.484, 28.0, 0.247", "429.229, 381.5, 28.28, 0.2288", "429.857, 381.174, 26.8487, 0.3474", "430.257, 380.526, 25.4668, 0.356", "430.629, 380.005, 24.36, 0.5478", "431.115, 379.374, 25.0329, 0.499", "431.748, 378.584, 25.8556, 0.2536", "432.39, 378.034, 24.7611, 0.2288", "432.746, 377.415, 23.7022, 0.2366", "432.832, 377.028, 25.9208, 0.3178", "433.292, 376.047, 26.1998, 0.4444", "433.759, 375.17, 26.6259, 0.305", "434.034, 374.109, 27.1272, 0.255", "434.273, 373.106, 26.1231, 0.2288", "434.491, 372.155, 27.197, 0.4844", "434.606, 371.286, 26.9671, 0.456", "434.606, 370.201, 26.6756, 0.3396", "434.606, 369.073, 26.7476, 0.5004", "435.168, 368.79, 24.7553, 0.3546", "435.406, 368.545, 22.5589, 0.5084", "435.332, 368.327, 20.1899, 0.2288", "435.624, 368.254, 17.7008, 0.2288", "435.875, 367.295, 17.2733, 0.376", "436.66, 367.397, 15.9239, 0.2578", "437.093, 366.77, 14.56, 0.3738", "437.694, 366.121, 13.8018, 0.3366", "437.889, 365.589, 13.16, 0.288", "438.36, 365.56, 11.7884, 0.415", "439.063, 365.072, 11.2102, 0.4524", "439.1, 365.206, 13.16, 0.434", "440.029, 364.725, 13.318, 0.4576", "440.747, 363.98, 13.2638, 0.4576", "440.906, 364.135, 11.2455, 0.2288", "441.346, 363.654, 10.9667, 0.356", "441.525, 363.334, 13.1419, 0.2288", "442.27, 362.702, 13.2801, 0.2288", "442.799, 362.101, 14.1844, 0.3518", "443.531, 361.785, 12.3067, 0.5548", "443.986, 361.196, 13.6522, 0.4576", "443.986, 361.733, 14.56, 0.305" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "418.948, 448.98, 28.2688, 0.788", "419.06, 447.315, 27.0032, 0.6398", "418.981, 446.223, 27.2791, 0.6298", "418.861, 445.142, 28.14, 0.563", "418.627, 444.062, 28.7871, 0.518", "418.457, 442.95, 28.7428, 0.5566", "418.259, 441.831, 28.607, 0.6172", "418.037, 440.715, 28.8249, 0.7012", "417.74, 439.632, 28.5768, 0.7734", "417.389, 438.607, 27.6927, 0.7688", "417.147, 437.51, 27.3839, 0.6652", "417.084, 436.372, 27.2523, 0.536", "416.901, 435.299, 27.9509, 0.5084", "416.687, 434.213, 27.586, 0.5722", "416.647, 433.235, 28.5166, 0.5694", "416.645, 432.337, 27.2412, 0.7196", "416.416, 431.831, 25.3122, 0.4284", "416.434, 430.907, 26.5194, 0.3322", "416.647, 429.987, 26.88, 0.5788", "416.559, 428.966, 27.4238, 0.6378", "416.537, 427.976, 26.4593, 0.432", "416.327, 427.17, 27.4399, 0.4574", "416.122, 426.199, 26.5962, 0.761", "416.33, 425.227, 26.2074, 0.4676", "415.972, 424.231, 25.8492, 0.4004", "415.888, 423.206, 25.3224, 0.3304", "415.954, 422.455, 25.4859, 0.306", "415.844, 421.582, 27.124, 0.3892", "415.818, 420.51, 27.9952, 0.6512", "415.458, 419.563, 27.2016, 0.9828", "415.162, 418.594, 27.336, 0.8064", "415.158, 417.471, 27.16, 0.4396", "415.501, 416.529, 27.4797, 0.328", "415.556, 415.401, 27.16, 0.6466", "415.71, 414.272, 27.1147, 0.7118", "415.767, 413.2, 27.0668, 0.852", "416.207, 412.203, 27.1252, 0.5084", "416.783, 411.318, 26.6, 0.8332", "417.32, 410.599, 27.9432, 0.5964", "417.996, 409.83, 29.0909, 0.2902", "418.591, 409.138, 29.7937, 0.5096", "418.901, 408.095, 29.955, 0.5338", "419.064, 407.095, 29.1267, 0.5892", "419.456, 406.039, 28.8148, 0.617", "419.619, 405.168, 27.7311, 0.67", "419.974, 404.282, 28.7339, 0.71", "420.036, 403.339, 27.6591, 0.6268", "419.817, 402.379, 26.9143, 0.289", "419.793, 401.651, 28.4208, 0.6434", "419.948, 400.676, 29.2284, 0.6356", "420.077, 399.569, 29.3084, 0.6928", "420.241, 398.615, 27.8843, 0.788", "420.74, 397.771, 26.6773, 0.7074", "421.256, 396.879, 26.6, 0.8468", "421.809, 396.157, 27.7091, 0.797", "422.351, 395.318, 26.6794, 0.9152", "423.028, 394.568, 25.6755, 0.4846", "423.726, 393.779, 25.5982, 0.5118", "424.003, 392.782, 26.5929, 0.66", "424.755, 392.185, 27.4292, 0.619", "425.148, 391.427, 26.6613, 0.669", "425.994, 390.867, 27.3643, 0.5704", "426.562, 390.676, 25.4451, 0.2828", "426.625, 390.254, 24.5587, 0.4444", "427.026, 389.422, 24.2628, 0.2918", "427.424, 388.508, 24.5791, 0.394", "427.742, 387.981, 26.04, 0.3842", "428.164, 387.284, 24.187, 0.287", "428.872, 386.481, 23.52, 0.2304", "429.62, 385.63, 23.24, 0.2288", "429.924, 384.573, 23.2662, 0.2568", "430.575, 383.874, 23.0182, 0.2288", "430.389, 383.011, 23.8, 0.5964", "430.361, 382.15, 25.5683, 0.5178", "430.111, 381.113, 25.5265, 0.3814", "430.836, 380.445, 24.7329, 0.556", "430.945, 379.422, 24.4162, 0.4672", "431.543, 378.784, 24.2655, 0.2416", "432.312, 378.616, 24.1996, 0.4068", "432.791, 377.717, 23.8, 0.6138", "433.545, 376.973, 23.52, 0.6438", "434.188, 376.217, 23.8, 0.6036", "434.501, 375.301, 23.0674, 0.5404", "434.909, 374.432, 23.3593, 0.3304", "435.162, 373.451, 23.1898, 0.5848", "435.331, 372.408, 22.4674, 0.3564", "435.656, 371.554, 23.29, 0.3342", "435.75, 370.471, 23.7192, 0.6254", "435.605, 369.364, 23.7385, 0.578", "435.593, 368.244, 23.8292, 0.5084", "435.521, 367.28, 23.3077, 0.6548", "435.318, 366.242, 23.414, 0.2796", "435.121, 365.42, 24.8597, 0.4442", "434.936, 364.605, 23.7995, 0.4828", "434.501, 363.89, 25.156, 0.392", "434.484, 363.413, 23.3196, 0.4434", "434.084, 362.383, 23.5504, 0.4066", "433.772, 361.303, 23.6216, 0.6068", "433.328, 360.426, 24.34, 0.6864", "433.311, 359.387, 23.8283, 0.6632", "433.462, 358.42, 24.3289, 0.798", "434.066, 357.617, 23.6386, 0.4186", "434.063, 356.927, 24.8924, 0.5592", "434.632, 355.989, 25.1545, 0.6864", "435.345, 355.372, 24.6166, 0.6164", "435.872, 354.54, 25.2, 0.486", "436.887, 354.555, 24.9855, 0.3504", "437.175, 353.475, 24.9409, 0.5764", "437.733, 352.549, 25.48, 0.8104", "437.895, 351.502, 25.6845, 0.5556", "438.143, 350.507, 25.6147, 0.4", "438.376, 349.434, 26.1576, 0.4642", "439.011, 348.687, 25.5237, 0.4576", "439.644, 348.278, 26.6519, 0.6286", "439.925, 347.251, 27.1448, 0.4198", "439.439, 346.354, 26.9503, 0.3486", "439.388, 345.385, 27.9468, 0.5792", "439.836, 344.37, 28.3525, 0.5996", "440.327, 343.707, 28.9929, 0.6096", "440.872, 342.954, 29.4437, 0.5378", "441.158, 341.868, 29.9121, 0.4908", "441.107, 340.783, 29.7226, 0.6148", "441.093, 339.828, 29.6559, 0.3166", "441.107, 338.756, 29.2586, 0.3048", "441.112, 337.823, 29.3499, 0.346", "441.592, 337.186, 29.8052, 0.5236", "442.062, 336.254, 29.1186, 0.357", "442.107, 335.214, 28.88, 0.4686", "442.385, 334.207, 28.9702, 0.298", "442.861, 333.561, 28.2954, 0.4064", "443.186, 332.613, 28.8341, 0.4576", "443.333, 331.734, 28.9142, 0.466", "443.168, 330.701, 28.4654, 0.479", "443.04, 329.831, 29.1102, 0.7608", "442.384, 329.01, 28.4068, 0.541", "442.024, 328.083, 28.173, 0.6188", "441.579, 327.399, 27.72, 0.7938", "440.869, 326.617, 27.6963, 0.419", "440.101, 325.891, 27.6527, 0.4746", "439.614, 325.468, 29.0332, 0.5698", "438.93, 324.854, 28.7563, 0.3382", "438.724, 324.086, 28.7745, 0.4242", "438.082, 323.463, 28.4225, 0.425", "437.58, 322.69, 28.0854, 0.2542", "437.247, 321.971, 29.675, 0.4576", "436.66, 321.103, 29.6576, 0.6072", "436.133, 320.237, 29.4, 0.356", "435.409, 319.619, 30.0476, 0.4726", "434.887, 318.821, 29.7718, 0.6864", "434.283, 318.016, 29.1928, 0.7494", "433.72, 317.199, 29.68, 0.8096", "433.449, 316.393, 30.3643, 0.4576", "432.454, 315.016, 30.5012, 0.413", "432.388, 314.19, 30.1972, 0.885", "431.904, 313.284, 29.7223, 0.3824", "431.557, 312.239, 30.0051, 0.5192", "431.402, 311.203, 29.8553, 0.5766", "431.612, 310.139, 30.24, 0.7668", "431.226, 309.165, 30.0266, 0.6356", "430.981, 308.324, 31.3152, 0.4576", "431.061, 307.532, 32.2269, 0.3778", "430.446, 307.123, 33.32, 0.3522", "430.596, 306.384, 32.0334, 0.5334", "430.255, 305.536, 31.8721, 0.6356", "430.453, 304.675, 30.5236, 0.7494", "430.025, 304.365, 28.5785, 0.4576", "430.056, 303.436, 28.0616, 0.3088", "430.345, 302.641, 29.7646, 0.3836", "430.245, 301.766, 31.1069, 0.6238", "430.043, 301.093, 32.6259, 0.4576", "429.996, 300.113, 31.6473, 0.5848", "429.542, 299.291, 31.8279, 0.3524", "429.211, 298.581, 30.3201, 0.4736", "428.686, 297.946, 31.3849, 0.351", "428.428, 297.13, 32.7569, 0.4882", "428.334, 296.084, 33.1478, 0.9496", "427.892, 295.218, 34.4781, 0.5022", "427.425, 294.483, 35.4572, 0.4462", "427.195, 294.008, 37.3526, 0.2542", "426.365, 293.338, 37.52, 0.3938", "425.688, 292.755, 36.8264, 0.483", "424.717, 292.414, 37.0208, 0.4564", "424.095, 292.082, 37.4214, 0.3076", "424.346, 291.491, 38.8287, 0.332", "423.461, 291.053, 38.8444, 0.4528", "423.28, 290.996, 36.267, 0.3492", "422.713, 290.36, 35.5197, 0.3814", "421.906, 289.762, 35.5919, 0.2288", "421.241, 289.09, 36.9522, 0.351", "420.633, 288.295, 37.9644, 0.6804", "420.038, 287.452, 38.5174, 0.5708", "419.532, 286.81, 40.3992, 0.2462", "419.167, 285.816, 40.5104, 0.2288", "419.094, 285.133, 38.6142, 0.2918", "418.417, 284.642, 38.0733, 0.4014", "418.353, 283.67, 38.4754, 0.661", "417.79, 283.025, 37.5768, 0.2314", "417.804, 281.887, 37.5231, 0.3122", "417.955, 281.526, 39.7037, 0.809", "417.87, 280.639, 38.6016, 0.694", "417.602, 280.184, 36.7077, 0.2796", "417.903, 279.131, 36.68, 0.23", "417.626, 278.451, 38.3664, 0.6114", "417.87, 277.973, 40.32, 0.4262", "418.361, 277.191, 40.88, 0.4576" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "394.222, 461.604, 28.56, 0.305", "393.748, 461.42, 30.0432, 0.4984", "392.886, 461.329, 30.5743, 0.5956", "391.931, 461.366, 29.68, 0.543", "390.97, 461.59, 30.7026, 0.4064", "389.964, 461.43, 29.832, 0.4598", "388.998, 461.032, 29.0408, 0.5258", "387.937, 460.943, 29.3619, 0.476", "387.007, 460.81, 30.0964, 0.266", "386.033, 460.634, 29.8133, 0.3456", "385.322, 460.346, 30.5757, 0.4576", "384.598, 459.808, 31.4936, 0.4996", "383.803, 459.151, 31.0601, 0.4542", "383.111, 459.02, 30.7, 0.4304", "382.368, 458.243, 30.6208, 0.251", "381.911, 457.486, 30.4097, 0.2362", "381.825, 456.958, 30.4822, 0.2768", "381.159, 456.57, 29.6867, 0.6666", "380.316, 456.227, 30.1557, 0.6174", "379.707, 455.619, 29.1866, 0.4332", "378.902, 455.026, 29.4465, 0.4068", "377.95, 454.43, 29.7354, 0.615", "377.08, 453.934, 30.415, 0.4562", "376.226, 453.596, 29.6906, 0.4244", "375.296, 452.994, 30.2644, 0.65", "374.574, 452.671, 30.042, 0.6826", "373.845, 452.211, 30.2842, 0.681", "372.788, 451.899, 30.1949, 0.5786", "372.012, 451.251, 29.1763, 0.364", "371.636, 450.371, 28.9867, 0.3886", "370.951, 449.935, 30.0462, 0.2852", "370.126, 449.422, 30.2092, 0.466", "369.243, 449.134, 29.0506, 0.4796", "368.664, 448.535, 27.72, 0.5536", "367.751, 448.193, 27.3608, 0.3728", "366.964, 447.589, 27.0426, 0.3678", "365.976, 447.632, 27.203, 0.5084", "365.37, 446.858, 27.336, 0.3902", "364.761, 446.142, 26.838, 0.3674", "364.335, 445.275, 27.5073, 0.3092", "363.577, 444.77, 27.9017, 0.4292", "362.61, 444.364, 28.5289, 0.3814", "361.973, 443.552, 27.8764, 0.4156", "361.551, 442.568, 27.9471, 0.2872", "360.911, 441.813, 27.9599, 0.5502", "360.69, 441.575, 26.0413, 0.2532", "359.995, 440.915, 25.76, 0.2288", "359.701, 439.865, 25.0563, 0.2288", "359.534, 438.787, 24.4688, 0.2288", "359.284, 437.688, 24.2449, 0.2288", "359.216, 436.566, 24.36, 0.2288", "359.084, 435.518, 24.0327, 0.3136", "358.881, 434.77, 23.5299, 0.5506", "359.243, 433.927, 24.8634, 0.5742", "358.899, 433.225, 24.1363, 0.3792", "359.608, 432.727, 23.864, 0.348", "359.507, 431.724, 22.9908, 0.2762", "359.32, 430.608, 22.96, 0.4544", "359.0, 429.686, 23.4798, 0.4256", "358.515, 429.169, 22.68, 0.3394", "357.958, 428.343, 23.2957, 0.304", "357.843, 427.281, 23.0678, 0.3862", "357.635, 426.242, 22.3294, 0.335", "357.34, 425.345, 22.0707, 0.2288", "356.695, 424.6, 22.12, 0.551", "355.687, 424.176, 21.6989, 0.47", "354.989, 423.868, 20.2241, 0.6058", "354.719, 422.887, 19.6081, 0.662", "354.113, 422.041, 20.3855, 0.7162", "353.244, 421.491, 20.5687, 0.268", "352.431, 421.459, 21.552, 0.2984", "351.835, 421.297, 19.3544, 0.3178", "351.229, 420.64, 18.2314, 0.3394", "350.73, 419.814, 19.024, 0.788", "350.178, 418.958, 18.7624, 0.3402", "349.498, 418.366, 18.4934, 0.4564", "348.79, 417.688, 18.1863, 0.5774", "347.823, 417.121, 18.4532, 0.4674", "347.036, 416.33, 18.6124, 0.3432", "346.249, 415.615, 18.2762, 0.4322", "345.2, 415.464, 17.9208, 0.5992", "344.127, 415.31, 17.0954, 0.5716", "343.286, 414.985, 17.6739, 0.2726", "342.609, 414.407, 16.021, 0.242", "342.102, 414.027, 17.4194, 0.3158", "341.824, 413.093, 17.36, 0.4096", "341.816, 411.976, 17.1347, 0.2744", "341.565, 410.883, 16.7929, 0.2288", "341.598, 409.883, 15.9563, 0.2288", "341.325, 409.284, 15.1297, 0.2288", "340.45, 408.888, 15.2751, 0.356", "339.733, 408.724, 15.9786, 0.2952", "339.167, 408.276, 16.8, 0.6474", "338.38, 407.892, 15.68, 0.485", "337.442, 407.886, 16.8, 0.4492", "336.322, 407.95, 17.0758, 0.4576", "335.481, 408.185, 17.4528, 0.4212", "334.873, 408.751, 16.5274, 0.5218", "334.043, 408.959, 17.8534, 0.3382", "333.048, 408.609, 18.2693, 0.6226", "332.117, 408.192, 18.1418, 0.613", "331.299, 407.566, 19.04, 0.5748", "330.467, 407.143, 17.8704, 0.5576", "329.725, 407.035, 18.9204, 0.285", "328.927, 406.372, 18.586, 0.4678", "328.024, 405.982, 19.7206, 0.447", "327.313, 405.567, 18.7354, 0.661", "326.566, 404.981, 18.0748, 0.6256", "325.62, 404.518, 18.0132, 0.3814" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "394.222, 461.604, 28.56, 0.305", "393.368, 462.165, 27.1752, 0.2824", "392.744, 461.947, 25.2179, 0.5848", "392.22, 462.762, 24.7979, 0.348", "392.162, 463.774, 24.0906, 0.331", "392.386, 464.528, 25.482, 0.4962", "392.158, 465.393, 26.6517, 0.3928", "391.469, 465.695, 26.8171, 0.2288", "390.797, 465.494, 28.5438, 0.2662", "390.232, 466.077, 29.6772, 0.4562", "389.832, 466.905, 30.8848, 0.5512", "389.418, 467.526, 30.5295, 0.6852", "388.962, 468.018, 31.1114, 0.5236", "388.454, 468.658, 31.6747, 0.6106", "387.656, 469.15, 32.2, 0.3814", "387.173, 470.088, 32.3705, 0.685", "386.745, 470.964, 31.5316, 0.483", "386.317, 471.214, 31.6912, 0.5828", "385.908, 471.455, 32.8703, 0.442", "385.156, 472.112, 33.3281, 0.5062", "384.598, 473.049, 33.8218, 0.3972", "383.894, 473.919, 34.0528, 0.5068", "382.982, 474.569, 33.88, 0.5288", "382.197, 475.207, 34.1592, 0.4844", "381.657, 475.904, 34.6293, 0.382", "381.296, 476.703, 34.4403, 0.5594", "380.577, 477.436, 33.9503, 0.591", "379.836, 478.126, 34.4999, 0.439", "378.942, 478.538, 35.1795, 0.5592", "378.547, 479.048, 34.3605, 0.9096", "378.1, 479.826, 33.4043, 0.4178", "377.379, 480.438, 33.0464, 0.4576", "376.69, 481.198, 33.3416, 0.2718", "375.941, 482.031, 33.6823, 0.57", "375.455, 482.727, 33.6644, 0.5574", "374.674, 483.176, 33.8033, 0.5046", "373.737, 483.34, 32.83, 0.3718", "372.879, 483.348, 34.0472, 0.2942", "372.52, 484.262, 33.213, 0.5592", "371.689, 484.921, 32.7972, 0.5984", "370.877, 485.535, 33.556, 0.7066", "370.019, 485.862, 32.5282, 0.5454", "369.305, 486.543, 31.9511, 0.483", "368.564, 486.907, 32.48, 0.5002", "367.745, 487.511, 32.2213, 0.3676", "367.224, 488.242, 32.1703, 0.3548", "366.699, 488.967, 32.9834, 0.6356", "365.948, 489.579, 32.48, 0.7912", "365.178, 490.203, 31.64, 0.483", "364.199, 490.543, 31.906, 0.403", "363.651, 491.286, 32.6707, 0.6768", "363.334, 491.937, 31.6411, 0.2298", "363.158, 492.835, 31.92, 0.2288", "362.015, 492.839, 31.9035, 0.3118", "360.955, 493.144, 31.647, 0.4284", "360.458, 493.756, 31.8917, 0.5824", "359.444, 493.766, 31.36, 0.2974", "358.674, 494.216, 32.4248, 0.575", "357.755, 493.968, 32.8815, 0.2466", "357.166, 494.187, 32.2137, 0.24", "356.378, 494.863, 31.64, 0.2288", "355.314, 495.123, 31.64, 0.2288", "354.174, 495.181, 31.64, 0.2288", "353.066, 495.352, 31.5543, 0.2892", "352.155, 495.265, 31.3936, 0.4944", "351.151, 495.296, 31.5431, 0.5484", "350.098, 495.117, 30.9324, 0.3456", "349.013, 494.981, 30.8216, 0.2584", "347.999, 494.849, 31.428, 0.3304", "346.926, 494.707, 30.767, 0.2996", "345.951, 494.983, 30.9378, 0.515", "344.919, 494.996, 31.0464, 0.3834", "343.794, 495.135, 31.0845, 0.305", "342.686, 495.056, 31.4247, 0.273", "341.671, 495.084, 31.2332, 0.2666", "340.75, 495.373, 32.48, 0.4846", "339.703, 495.537, 32.9655, 0.356", "339.112, 495.728, 33.0778, 0.4886", "338.084, 495.917, 32.7886, 0.4892", "337.525, 496.684, 33.0982, 0.249", "337.12, 497.741, 33.32, 0.2288", "336.513, 498.664, 33.32, 0.2288", "335.652, 499.037, 34.211, 0.4162", "335.187, 499.748, 34.9611, 0.2796", "334.391, 500.487, 34.6884, 0.5084", "334.232, 501.267, 34.44, 0.529", "333.474, 502.102, 34.4263, 0.316", "332.864, 503.033, 34.1942, 0.3754", "332.082, 503.842, 33.8736, 0.412", "331.253, 504.499, 33.32, 0.2984", "330.579, 505.33, 33.6, 0.2288", "329.904, 506.046, 33.32, 0.2288", "329.189, 506.872, 33.04, 0.2288", "328.526, 507.731, 32.921, 0.2288", "328.214, 508.757, 32.76, 0.2288", "328.208, 509.901, 32.76, 0.2288", "328.009, 511.019, 32.7858, 0.2288", "327.756, 512.014, 33.32, 0.2498", "327.568, 513.047, 33.5364, 0.242", "327.241, 514.027, 32.76, 0.2288", "327.184, 515.167, 32.76, 0.2288", "327.17, 516.173, 32.2238, 0.2288", "326.296, 516.652, 31.92, 0.2288", "325.541, 517.475, 31.92, 0.2288", "324.589, 517.975, 31.8662, 0.2288", "324.438, 518.997, 31.36, 0.2288", "323.592, 519.376, 31.36, 0.2288", "322.448, 519.376, 31.36, 0.2288", "321.313, 519.49, 31.36, 0.2288", "320.227, 519.675, 31.36, 0.2288", "319.286, 519.719, 32.7958, 0.443", "318.339, 519.811, 34.2986, 0.651", "317.278, 519.834, 35.0868, 0.5346", "316.697, 519.55, 36.3801, 0.5012", "315.898, 519.236, 35.24, 0.621", "314.928, 518.907, 34.5408, 0.6884", "314.267, 518.176, 34.6248, 0.4682", "313.604, 517.295, 34.449, 0.4576", "313.02, 516.312, 34.5139, 0.4576", "312.436, 515.33, 34.5792, 0.4576", "311.851, 514.347, 34.6441, 0.4576", "311.266, 513.363, 34.7091, 0.4576", "310.764, 512.553, 33.8304, 0.4756", "309.839, 512.282, 33.0669, 0.6542", "308.792, 512.061, 33.1089, 0.2424", "308.322, 512.512, 31.9505, 0.2288", "307.588, 511.939, 31.7993, 0.3378", "306.8, 511.368, 32.4576, 0.7372", "305.917, 511.381, 34.0934, 0.639", "305.302, 512.057, 35.5331, 0.3526", "304.53, 512.604, 36.3376, 0.31", "304.161, 512.082, 38.1948, 0.4028", "303.205, 512.423, 38.0162, 0.2702", "302.93, 513.294, 36.6019, 0.3592", "302.575, 513.006, 35.7092, 0.2296", "301.833, 513.012, 34.3899, 0.5084", "300.961, 513.523, 33.3416, 0.3646", "300.12, 513.935, 33.0537, 0.5044", "299.098, 514.223, 33.7616, 0.2888", "298.664, 514.959, 32.1793, 0.2494", "298.126, 515.206, 32.8485, 0.2438", "297.891, 514.565, 34.7309, 0.3038", "297.013, 514.247, 35.7386, 0.2542", "296.719, 514.289, 36.6495, 0.2806", "295.753, 514.084, 35.457, 0.3904", "295.152, 513.573, 34.8264, 0.602", "294.704, 512.886, 35.6633, 0.4758", "294.502, 512.501, 37.016, 0.4164", "294.92, 511.588, 37.5687, 0.4576", "295.158, 510.828, 36.787, 0.4068", "295.152, 509.876, 36.2401, 0.4684", "295.369, 509.108, 35.3671, 0.562", "295.266, 508.458, 37.2086, 0.6018", "295.054, 507.876, 38.4922, 0.6284", "294.808, 506.871, 38.8545, 0.452", "294.531, 505.889, 38.9466, 0.3378", "294.237, 505.548, 36.9916, 0.2544", "293.665, 504.962, 38.36, 0.5848" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "418.443, 526.366, 27.3426, 0.7626", "418.91, 527.441, 27.4872, 0.7384", "418.933, 528.568, 27.8919, 0.7858", "418.932, 529.683, 28.513, 0.7148", "418.921, 530.826, 28.506, 0.565", "418.817, 531.941, 27.9401, 0.4068" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "418.443, 526.366, 27.3426, 0.7626", "418.71, 526.465, 25.0968, 0.483", "419.373, 526.333, 23.5873, 0.279", "420.398, 525.89, 23.0698, 0.2388", "421.271, 525.373, 23.721, 0.2288", "422.304, 525.304, 24.5392, 0.2288", "423.353, 525.093, 25.395, 0.2672", "424.068, 524.487, 26.636, 0.293", "424.679, 523.711, 27.9567, 0.305", "425.662, 523.347, 28.285, 0.32", "426.548, 522.976, 27.1758, 0.3466", "427.09, 522.52, 25.0276, 0.3898", "427.811, 522.055, 23.2973, 0.4068", "428.773, 521.515, 22.8278, 0.4068", "429.677, 520.879, 22.1765, 0.348", "430.741, 520.656, 21.5869, 0.2906", "431.87, 520.64, 21.1544, 0.2392", "432.928, 520.669, 22.0018, 0.2696", "433.828, 520.875, 23.6214, 0.3214", "434.668, 521.473, 23.1188, 0.4556", "435.658, 521.333, 21.777, 0.5848" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "428.523, 512.398, 38.6109, 0.6356", "428.651, 512.899, 39.6637, 0.4284", "429.551, 513.554, 39.9199, 0.4548", "430.651, 513.638, 40.5754, 0.4084", "431.614, 513.058, 40.1993, 0.4068", "432.535, 512.553, 41.0631, 0.41", "432.9, 512.956, 43.4216, 0.4576", "432.751, 513.81, 45.1786, 0.4616", "433.174, 514.591, 46.3492, 0.4882", "434.202, 514.306, 47.0414, 0.501", "435.101, 513.675, 47.6372, 0.4522", "436.166, 513.408, 48.0696, 0.3734", "437.094, 513.701, 49.1898, 0.3998", "437.784, 514.452, 50.4056, 0.5696", "438.516, 515.283, 50.9712, 0.7714", "439.153, 516.225, 51.2372, 0.8644", "439.726, 517.192, 51.7238, 0.8438", "440.225, 518.207, 52.0705, 0.7822", "440.669, 519.259, 52.1273, 0.7584", "440.969, 520.348, 52.4048, 0.8098", "441.324, 521.387, 52.9774, 0.8612", "441.927, 522.328, 53.5816, 0.8212", "442.46, 523.293, 54.2794, 0.655", "443.023, 524.187, 55.2429, 0.4984", "443.922, 524.582, 56.2374, 0.445", "444.912, 524.247, 56.9769, 0.4984", "445.456, 523.727, 58.6625, 0.5914", "445.928, 523.783, 60.9658, 0.6662", "446.759, 524.253, 62.3266, 0.669", "447.398, 524.593, 64.3045, 0.5964", "448.186, 524.912, 65.9784, 0.5286", "449.211, 525.319, 66.4667, 0.5084", "450.123, 525.947, 66.05, 0.476", "451.033, 526.608, 65.9498, 0.4238", "451.999, 527.122, 66.6747, 0.3666", "452.833, 527.449, 65.3212, 0.4214", "453.68, 527.883, 66.3617, 0.4556", "454.311, 528.311, 68.4368, 0.5072", "455.033, 528.394, 70.5944, 0.5084" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "428.523, 512.398, 38.6109, 0.6356", "428.875, 513.735, 38.2553, 0.576", "429.319, 514.763, 37.7124, 0.6446", "429.794, 515.796, 37.5144, 0.7468", "430.369, 516.785, 37.4909, 0.8224", "430.906, 517.787, 37.2851, 0.8148", "431.386, 518.805, 36.787, 0.7452", "431.868, 519.833, 36.437, 0.6016", "432.171, 520.933, 36.4053, 0.5848", "432.206, 522.072, 36.4381, 0.6992", "432.226, 523.214, 36.6344, 0.8722", "432.36, 524.308, 37.3556, 0.959", "432.696, 525.395, 37.5122, 0.9428", "433.019, 526.493, 37.5214, 0.894", "432.965, 527.63, 37.5292, 0.7958", "432.365, 528.591, 37.5687, 0.788", "431.423, 529.226, 37.7555, 0.7638", "430.337, 529.377, 38.5078, 0.787", "429.217, 529.596, 38.6372, 0.7634", "428.093, 529.399, 38.6408, 0.7626", "426.95, 529.443, 38.6456, 0.8128", "425.895, 529.883, 38.6725, 0.8892", "424.97, 530.553, 38.8072, 0.9656", "424.148, 531.264, 39.6754, 0.9386", "423.323, 531.912, 40.7823, 0.8118", "422.651, 532.826, 41.1051, 0.7386", "422.188, 533.8, 41.9801, 0.7742", "422.195, 534.875, 42.7899, 0.9176", "422.42, 535.967, 42.1767, 0.9348", "422.683, 537.077, 42.0011, 0.8806", "422.888, 538.195, 42.0078, 0.8202", "422.734, 539.328, 42.0543, 0.8798", "422.579, 540.452, 42.3142, 0.974", "422.497, 541.555, 42.9752, 1.021", "422.243, 542.667, 43.12, 1.0424", "422.087, 543.8, 43.1211, 1.0424", "421.897, 544.923, 43.127, 1.0378", "421.451, 545.973, 43.1589, 1.0028", "420.844, 546.938, 43.3188, 0.9358", "420.188, 547.851, 43.806, 0.91", "419.573, 548.771, 44.4629, 0.9058", "418.746, 549.519, 45.0587, 0.9718", "417.825, 550.172, 45.4804, 0.9738", "416.843, 550.711, 45.9074, 0.8848", "415.829, 551.076, 46.8479, 0.763", "414.88, 551.543, 47.8467, 0.6994", "414.073, 552.267, 48.6329, 0.7372", "413.27, 553.081, 48.7194, 0.7372", "412.482, 553.91, 48.7172, 0.7098", "411.777, 554.803, 48.7057, 0.6288", "411.313, 555.836, 48.6326, 0.6102", "411.154, 556.93, 48.8499, 0.6548", "411.154, 557.963, 50.055, 0.793", "411.156, 559.006, 51.2019, 0.8874", "411.166, 560.071, 52.2248, 0.9092", "411.239, 561.145, 52.7327, 0.814", "411.402, 562.257, 52.2449, 0.7276", "411.372, 563.375, 52.1699, 0.661", "411.123, 564.471, 52.5473, 0.661", "410.929, 565.565, 53.09, 0.6796", "410.668, 566.674, 53.205, 0.7212", "410.429, 567.784, 53.2297, 0.7466", "410.025, 568.851, 53.3912, 0.753", "409.692, 569.921, 53.8712, 0.7272", "409.455, 571.018, 54.3332, 0.7016", "409.277, 572.143, 54.5168, 0.6864", "409.083, 573.255, 54.5373, 0.6864", "408.737, 574.341, 54.3306, 0.6648", "408.483, 575.451, 54.32, 0.6138", "408.387, 576.59, 54.32, 0.5628", "408.267, 577.723, 54.32, 0.556", "407.926, 578.808, 54.32, 0.5848", "407.533, 579.879, 54.32, 0.5848", "407.355, 581.001, 54.32, 0.5494", "407.552, 582.102, 54.32, 0.5206", "407.843, 583.195, 54.3211, 0.5586", "407.783, 584.322, 54.3273, 0.635", "407.52, 585.435, 54.3726, 0.7118", "407.116, 586.479, 54.7417, 0.724", "406.449, 587.37, 55.258, 0.671", "405.686, 588.214, 55.44, 0.5946", "405.069, 589.167, 55.44, 0.5456", "404.634, 590.222, 55.4403, 0.5338", "404.199, 591.279, 55.442, 0.52", "403.742, 592.327, 55.4562, 0.4944", "403.286, 593.373, 55.585, 0.4546", "402.716, 594.317, 56.1778, 0.4178", "402.194, 595.291, 56.7686, 0.4068", "402.009, 596.392, 56.7042, 0.4376", "401.991, 597.533, 56.5947, 0.5036", "401.909, 598.661, 56.9114, 0.5338", "401.336, 599.473, 57.8038, 0.5172", "400.466, 600.134, 58.5981, 0.44", "399.521, 600.761, 58.8101, 0.3724", "398.546, 601.357, 58.8594, 0.304", "397.53, 601.858, 59.1791, 0.297", "396.603, 602.477, 59.7209, 0.359", "396.127, 603.46, 59.9119, 0.4738", "396.005, 604.591, 59.922, 0.527", "395.742, 605.696, 59.9315, 0.496", "395.191, 606.691, 59.9847, 0.4258", "394.424, 607.525, 60.2182, 0.3876", "393.612, 608.256, 60.9916, 0.362", "392.724, 608.88, 61.8699, 0.3362", "391.783, 609.435, 62.6993, 0.3508", "391.449, 610.326, 63.9834, 0.4396", "391.163, 611.404, 64.3782, 0.5426", "390.802, 612.488, 64.4412, 0.5592", "390.321, 613.523, 64.6145, 0.495", "389.84, 614.523, 65.2644, 0.3966", "389.405, 615.574, 65.3313, 0.3596", "388.569, 616.277, 64.7447, 0.3788", "387.676, 616.925, 65.3649, 0.4978", "387.356, 617.977, 65.9257, 0.6276", "387.255, 619.085, 66.5806, 0.6836", "386.905, 620.169, 66.6655, 0.6624", "386.479, 621.229, 66.8441, 0.5872", "385.52, 621.597, 67.9997, 0.6102", "384.851, 622.005, 69.9667, 0.6128", "384.71, 623.088, 70.6115, 0.661", "385.0, 624.169, 70.0585, 0.661", "385.19, 625.297, 70.0244, 0.6584", "385.353, 626.401, 70.2013, 0.6326", "384.866, 627.373, 71.0214, 0.6062", "384.127, 628.169, 71.8841, 0.5804", "383.345, 628.945, 72.5508, 0.5546", "382.991, 629.901, 73.5008, 0.5338", "383.352, 630.794, 74.9591, 0.5338", "383.871, 631.588, 76.4711, 0.5188", "384.066, 632.598, 77.2226, 0.483", "383.809, 633.679, 76.9241, 0.483", "383.319, 634.684, 77.2198, 0.528", "383.008, 635.658, 78.4028, 0.6292", "382.963, 636.526, 80.1164, 0.6812", "383.358, 637.396, 81.5668, 0.6896", "383.72, 638.39, 82.4505, 0.6722", "383.945, 639.475, 83.078, 0.6864", "384.281, 640.537, 82.9934, 0.6864", "384.654, 641.524, 81.9624, 0.6372", "385.212, 642.442, 81.2787, 0.5468", "385.907, 643.349, 81.3299, 0.4956", "386.361, 644.328, 81.8885, 0.522", "386.498, 645.341, 83.1048, 0.6124", "386.688, 646.312, 84.4785, 0.7012", "386.924, 647.35, 85.4384, 0.71", "387.15, 648.447, 85.9774, 0.6446", "387.076, 649.513, 86.611, 0.5664", "386.418, 650.308, 87.5064, 0.5796", "385.592, 651.015, 88.3509, 0.6258", "384.708, 651.704, 88.5091, 0.6356", "384.06, 652.508, 89.2564, 0.569", "383.643, 653.515, 89.402, 0.4994", "383.159, 654.514, 89.7504, 0.465", "382.834, 655.391, 91.2498, 0.4204", "382.662, 656.404, 91.0742, 0.3662", "382.333, 657.307, 92.2074, 0.2838", "382.213, 657.174, 94.9024, 0.2796", "381.922, 658.088, 95.9146, 0.3558", "382.414, 659.098, 96.4208, 0.486", "382.781, 660.149, 96.8814, 0.6034", "382.952, 661.273, 96.8878, 0.6672", "383.385, 662.328, 96.9262, 0.6732", "383.871, 663.341, 97.1869, 0.6218", "383.949, 664.386, 98.0655, 0.5614", "383.731, 665.406, 98.7325, 0.5084", "383.849, 666.484, 98.0036, 0.4934", "383.579, 667.41, 98.0, 0.2874", "382.92, 668.228, 98.4007, 0.3368", "382.668, 669.272, 99.0223, 0.5338", "382.446, 670.096, 99.7038, 0.4946", "382.487, 671.001, 99.3283, 0.352", "382.337, 671.943, 98.28, 0.424", "382.403, 672.894, 99.1715, 0.6348", "382.32, 673.662, 100.24, 0.7784", "382.096, 674.588, 99.111, 0.5992", "382.144, 675.408, 99.7111, 0.592", "381.847, 676.442, 100.563, 0.4644", "381.75, 677.473, 101.196, 0.2844", "381.459, 678.472, 100.676, 0.5442", "381.263, 679.58, 100.666, 0.3982", "380.919, 680.62, 101.0, 0.2758", "380.625, 681.648, 100.584, 0.2288", "380.491, 682.478, 101.807, 0.2288", "379.822, 683.127, 101.527, 0.2288", "379.808, 684.075, 102.48, 0.4352", "379.465, 684.953, 102.323, 0.503", "378.916, 685.747, 102.873, 0.653", "379.122, 686.553, 104.068, 0.3048", "378.641, 687.404, 104.35, 0.3552", "377.941, 688.058, 103.683, 0.5084", "377.231, 688.863, 104.44, 0.4242", "376.434, 689.452, 105.504, 0.2688", "375.454, 689.489, 105.944, 0.3024", "374.756, 689.832, 105.148, 0.475", "373.742, 689.946, 104.538, 0.4482", "372.773, 690.073, 105.021, 0.3986", "371.856, 690.383, 104.995, 0.4818", "370.991, 691.116, 105.036, 0.4576", "370.145, 691.69, 105.097, 0.4014", "369.086, 692.087, 105.06, 0.3994", "368.005, 692.318, 104.436, 0.3304", "367.052, 692.806, 104.51, 0.4132", "366.2, 693.095, 104.695, 0.348", "365.517, 693.004, 103.88, 0.4524", "364.426, 693.15, 104.078, 0.4946", "363.416, 693.402, 104.702, 0.2398", "362.451, 693.861, 105.27, 0.2714", "361.652, 694.489, 105.198, 0.4472", "361.019, 695.322, 105.56, 0.2862", "360.383, 696.121, 105.173, 0.3342", "360.347, 697.003, 105.752, 0.3208", "360.209, 697.671, 106.709, 0.4286", "360.589, 697.824, 108.427, 0.2554", "360.86, 698.878, 108.406, 0.3176", "360.932, 699.694, 108.08, 0.2288", "360.632, 700.782, 108.282, 0.2288", "360.271, 701.834, 108.859, 0.2288", "359.708, 702.806, 108.943, 0.2288", "359.211, 703.529, 110.462, 0.2288", "358.987, 704.614, 110.88, 0.2288", "359.099, 705.373, 112.362, 0.3854", "358.138, 705.818, 112.754, 0.4048", "357.132, 706.077, 113.4, 0.2288", "356.047, 706.144, 114.089, 0.2288", "354.972, 706.258, 114.866, 0.2686", "354.087, 706.697, 115.64, 0.4004", "353.426, 707.471, 115.637, 0.3506", "353.267, 708.136, 116.951, 0.5778", "353.003, 708.326, 119.279, 0.3312", "352.81, 709.051, 118.44, 0.3304" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "430.772, 497.238, 43.395, 0.5848", "429.945, 497.118, 44.24, 0.4362", "428.93, 496.729, 44.1599, 0.293", "427.903, 496.664, 43.3804, 0.4866", "427.284, 496.916, 42.1868, 0.483" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "430.772, 497.238, 43.395, 0.5848", "431.345, 497.856, 44.0014, 0.5246", "432.223, 498.571, 44.2165, 0.5286", "433.046, 499.362, 44.1918, 0.5338", "433.705, 500.289, 44.0129, 0.5544", "434.118, 501.31, 43.3353, 0.6008", "434.452, 502.391, 42.9817, 0.631", "434.725, 503.477, 42.4248, 0.6146", "434.927, 504.566, 42.9164, 0.5884", "434.975, 505.694, 43.3194, 0.6312", "435.076, 506.64, 41.8664, 0.7296", "435.532, 507.597, 40.8596, 0.7372", "435.952, 508.627, 40.2102, 0.6636", "436.317, 509.671, 39.501, 0.5618", "436.61, 510.699, 40.4684, 0.5844", "437.287, 511.604, 40.8772, 0.6606", "437.959, 512.529, 40.8772, 0.7624", "438.7, 513.4, 40.868, 0.788", "439.512, 514.206, 40.8344, 0.7626" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "510.555, 632.568, 46.0132, 0.5338", "510.699, 632.885, 46.2244, 0.5722", "510.836, 633.526, 47.5796, 0.5092", "510.871, 634.41, 48.72, 0.2542", "510.547, 635.413, 49.1361, 0.3952", "509.995, 636.182, 48.4448, 0.8136", "509.662, 636.761, 50.0791, 0.5848", "509.159, 637.724, 50.3689, 0.484", "509.326, 638.273, 50.7654, 0.4068", "509.495, 639.048, 50.1679, 0.3472", "509.225, 639.974, 50.911, 0.4332", "508.851, 640.869, 51.9428, 0.6864", "508.286, 641.487, 52.3967, 0.3744", "508.198, 642.471, 52.64, 0.4728", "508.75, 643.445, 53.111, 0.6356", "509.253, 644.404, 53.111, 0.6864", "509.711, 644.425, 54.5863, 0.4576", "510.025, 645.501, 54.8682, 0.41", "510.714, 646.139, 54.147, 0.4402", "511.199, 646.969, 53.8006, 0.5292", "511.808, 647.777, 54.4939, 0.3596", "511.826, 648.793, 55.5016, 0.2288", "511.244, 649.547, 56.089, 0.2288", "511.025, 650.367, 54.6011, 0.256", "511.027, 651.467, 54.4286, 0.356", "511.417, 652.451, 54.6535, 0.5702", "511.535, 653.472, 55.3809, 0.3894", "511.699, 654.582, 55.44, 0.4068", "511.482, 655.571, 54.4421, 0.4668", "511.656, 656.379, 55.291, 0.4454", "511.481, 657.276, 55.5248, 0.527", "511.254, 658.119, 56.5015, 0.2408", "510.773, 659.019, 56.59, 0.3274", "510.451, 659.99, 57.4076, 0.6088", "510.341, 661.11, 57.8581, 0.5592", "510.575, 662.156, 58.5463, 0.6084", "510.994, 662.937, 60.0726, 0.3262", "511.025, 664.007, 60.0264, 0.3004", "510.924, 665.12, 59.9281, 0.3304", "511.08, 666.01, 59.822, 0.3162", "511.23, 666.794, 59.9637, 0.5614", "511.715, 667.8, 60.2482, 0.4698", "512.394, 668.58, 60.5153, 0.4576", "513.15, 669.248, 60.4946, 0.4204", "513.62, 670.153, 61.1654, 0.4284", "513.896, 671.171, 60.9594, 0.3298", "514.201, 672.251, 60.48, 0.4498", "514.607, 672.968, 61.6, 0.4806", "514.543, 673.77, 61.9984, 0.4108", "514.898, 674.499, 63.2447, 0.2288", "514.8, 675.324, 61.5362, 0.2288", "515.143, 675.782, 62.8718, 0.426", "514.949, 676.631, 63.56, 0.2712", "514.863, 677.759, 63.3279, 0.2288", "514.902, 678.695, 62.2978, 0.3788", "514.228, 678.751, 62.5601, 0.5192", "514.342, 679.65, 61.32, 0.3814" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "510.555, 632.568, 46.0132, 0.5338", "511.139, 632.746, 46.48, 0.305" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "376.185, 321.705, 25.9157, 0.4068", "376.831, 322.054, 25.5347, 0.3486", "377.82, 322.483, 25.4219, 0.4576", "378.718, 322.722, 25.4287, 0.4576", "379.656, 322.614, 26.04, 0.2288", "380.783, 322.511, 26.04, 0.2288", "381.641, 321.78, 26.2074, 0.2676", "382.384, 321.002, 26.6347, 0.4688", "382.26, 319.945, 26.0698, 0.728", "382.325, 319.062, 26.88, 0.5848" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "376.185, 321.705, 25.9157, 0.4068", "376.376, 321.578, 24.92, 0.305" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "325.62, 404.518, 18.0132, 0.3814", "325.246, 403.95, 18.3584, 0.5724", "324.896, 402.952, 17.9045, 0.3602", "325.068, 402.029, 16.808, 0.4576", "325.006, 400.938, 16.3715, 0.4576", "324.444, 400.286, 15.6443, 0.6102", "323.439, 400.187, 15.6667, 0.447", "322.494, 400.286, 16.52, 0.2796" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "325.62, 404.518, 18.0132, 0.3814", "325.301, 404.454, 17.998, 0.2902", "324.437, 404.806, 18.4769, 0.2288", "323.345, 404.747, 17.9735, 0.2592", "322.263, 404.777, 17.5096, 0.2984", "321.139, 404.862, 17.9137, 0.2548", "320.19, 404.676, 17.2739, 0.526", "319.255, 404.962, 17.5713, 0.7854", "318.186, 404.953, 18.1038, 0.7082", "317.319, 404.499, 18.0728, 0.563", "316.599, 403.832, 18.7289, 0.6728", "315.561, 403.71, 18.611, 0.4576", "314.775, 403.26, 18.6394, 0.5084", "313.925, 403.445, 19.0889, 0.3506", "313.477, 403.036, 17.6095, 0.814", "312.866, 402.673, 16.6204, 0.6278", "312.202, 401.968, 15.7532, 0.5172", "311.194, 401.887, 16.2321, 0.5972", "310.612, 401.662, 14.5689, 0.3632", "310.109, 402.328, 13.1911, 0.3814", "309.167, 402.151, 13.6846, 0.2292", "308.371, 401.76, 12.6232, 0.4824", "307.36, 402.109, 13.16, 0.2346", "306.759, 402.009, 13.907, 0.3988", "307.095, 401.422, 15.816, 0.619", "306.972, 401.321, 18.142, 0.2542", "306.411, 401.844, 19.4878, 0.412", "306.378, 402.273, 21.2599, 0.2806", "306.144, 402.916, 22.4, 0.3512", "305.346, 403.148, 22.1385, 0.4576", "305.064, 403.495, 20.2002, 0.3666", "304.175, 404.03, 20.0747, 0.4068", "303.389, 404.378, 20.2675, 0.3462", "303.221, 405.437, 19.9241, 0.2348", "302.857, 406.211, 18.806, 0.2288", "302.609, 406.884, 17.4457, 0.4458", "302.359, 406.933, 14.8043, 0.4326", "301.773, 407.32, 14.0834, 0.2288", "301.057, 406.999, 13.2257, 0.2412", "300.29, 407.333, 11.9931, 0.371", "299.763, 408.242, 11.48, 0.2288", "298.974, 408.887, 10.6975, 0.4576", "298.352, 408.491, 11.8804, 0.3538", "297.52, 408.481, 13.4163, 0.403", "296.868, 409.094, 14.28, 0.4576" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "418.817, 531.941, 27.9401, 0.4068", "418.481, 532.003, 27.104, 0.429", "417.541, 532.12, 26.3301, 0.5092", "416.458, 532.313, 27.0549, 0.6038", "415.738, 533.027, 26.9744, 0.6356", "414.89, 533.747, 27.1268, 0.5452", "414.337, 534.527, 28.5799, 0.4628", "413.602, 534.989, 30.3638, 0.4586", "413.025, 535.938, 29.7102, 0.5608", "412.688, 537.027, 29.6223, 0.6102", "412.005, 537.937, 29.3958, 0.6082", "411.404, 538.817, 28.4315, 0.5556", "411.147, 539.904, 28.6807, 0.5126", "411.115, 540.933, 29.8463, 0.5294", "410.941, 542.044, 30.0712, 0.5028", "410.534, 543.099, 29.836, 0.46", "410.225, 544.178, 30.3008, 0.3814", "410.174, 545.225, 30.389, 0.3922", "410.126, 546.231, 29.2037, 0.4584", "409.825, 547.306, 28.7115, 0.483", "409.446, 548.379, 28.7946, 0.483", "409.078, 549.404, 29.5736, 0.43", "408.685, 550.396, 30.5844, 0.389", "408.511, 551.49, 30.9588, 0.3628", "408.712, 552.602, 30.8319, 0.4132", "408.764, 553.735, 30.6922, 0.471", "408.629, 554.537, 30.2677, 0.4576", "409.086, 555.072, 28.8879, 0.4392", "409.323, 555.422, 30.7322, 0.4576", "409.603, 556.269, 30.6972, 0.5388", "409.989, 557.249, 30.4212, 0.305", "410.207, 558.325, 30.0656, 0.2638", "410.218, 559.306, 30.52, 0.2288", "409.419, 559.874, 30.9803, 0.366", "409.093, 560.554, 32.445, 0.3568", "408.98, 561.584, 31.507, 0.574", "409.089, 562.456, 30.52, 0.4454", "408.942, 562.746, 32.251, 0.3482", "408.959, 563.661, 33.1178, 0.2818", "409.481, 564.643, 33.5135, 0.2288", "409.529, 565.773, 33.581, 0.2288", "409.348, 566.641, 32.76, 0.29", "409.895, 567.178, 31.5874, 0.292", "409.367, 567.638, 29.8676, 0.2288", "408.868, 568.391, 29.4, 0.2582", "408.983, 569.364, 30.5609, 0.408", "408.67, 570.029, 31.8928, 0.4576", "408.795, 571.121, 32.4565, 0.3146", "409.12, 571.994, 31.292, 0.2288", "408.726, 572.252, 29.314, 0.4922", "408.858, 573.034, 29.7844, 0.4322", "408.724, 573.375, 31.1699, 0.4614", "408.611, 574.375, 31.962, 0.3838", "408.604, 574.917, 33.8464, 0.2288", "408.522, 575.478, 31.705, 0.3528", "408.542, 576.118, 31.8595, 0.4496", "408.31, 576.76, 32.48, 0.3722", "407.714, 577.337, 31.8284, 0.274", "407.394, 577.967, 30.1185, 0.2288", "407.264, 579.063, 29.6836, 0.2288", "407.564, 579.791, 30.2873, 0.4292", "407.332, 580.478, 31.6666, 0.4176", "406.813, 581.046, 30.9526, 0.5264", "406.029, 581.443, 29.7973, 0.339", "405.423, 581.838, 31.5932, 0.2886", "404.825, 582.66, 31.3681, 0.4188", "404.207, 583.379, 31.08, 0.4576", "403.569, 583.878, 32.1348, 0.5242", "403.001, 584.708, 31.8805, 0.2488", "402.503, 585.609, 31.0022, 0.2288", "402.349, 586.627, 31.6, 0.3352", "402.393, 587.418, 32.9664, 0.6334", "401.719, 588.086, 32.9, 0.4514", "401.658, 589.142, 33.2892, 0.229", "401.172, 590.049, 32.9983, 0.3278", "401.025, 591.172, 33.129, 0.249", "400.624, 592.206, 33.6, 0.2288", "400.215, 593.172, 33.2041, 0.2288", "399.614, 594.077, 33.32, 0.2288", "399.099, 594.994, 33.2816, 0.2288", "398.435, 595.864, 32.76, 0.2288", "397.954, 596.864, 32.786, 0.2582", "397.287, 597.77, 32.76, 0.3514", "396.502, 598.409, 32.2, 0.255", "395.923, 599.308, 32.0844, 0.2288", "395.125, 599.927, 31.7114, 0.2288", "394.951, 600.383, 33.8635, 0.3928", "394.363, 600.846, 33.1892, 0.2288", "394.216, 601.809, 34.1093, 0.2288", "393.878, 602.854, 33.6459, 0.2288", "393.536, 603.846, 33.4849, 0.2288", "393.523, 604.872, 32.76, 0.2288", "392.823, 605.726, 32.7583, 0.2292", "392.482, 606.573, 31.4068, 0.3304", "392.132, 607.628, 31.64, 0.452", "391.934, 608.678, 31.9116, 0.4692", "391.466, 609.316, 30.9798, 0.3758", "391.121, 610.26, 30.2434, 0.2824", "391.0, 611.382, 30.5396, 0.2778", "391.019, 612.429, 30.6785, 0.2854", "390.905, 613.407, 30.3551, 0.3344", "390.925, 614.303, 28.9705, 0.3836", "390.676, 615.195, 29.337, 0.3914", "390.091, 615.978, 28.6026, 0.3872", "389.561, 616.843, 29.1441, 0.2992", "389.646, 617.95, 29.4, 0.2482", "389.439, 618.936, 29.4918, 0.356", "388.846, 618.79, 27.72, 0.305" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "418.817, 531.941, 27.9401, 0.4068", "418.875, 532.912, 28.3682, 0.4642", "418.891, 534.029, 28.9293, 0.5428", "418.699, 535.121, 29.4949, 0.6456", "418.264, 536.172, 29.748, 0.7752", "417.751, 537.181, 30.056, 0.9728", "417.182, 538.136, 30.6888, 1.175", "416.559, 539.061, 31.3135, 1.2632", "415.998, 540.025, 31.8662, 1.2096", "415.548, 541.076, 31.92, 1.0048", "415.146, 542.147, 31.92, 0.815", "414.949, 543.25, 31.92, 0.717", "415.278, 544.338, 31.92, 0.7596", "415.846, 545.331, 31.9194, 0.856", "416.457, 546.298, 31.9178, 0.9322", "417.044, 547.279, 31.9082, 0.9406", "417.751, 548.177, 31.8668, 0.8952", "418.306, 549.17, 31.6358, 0.867", "418.682, 550.21, 30.9487, 0.8874", "419.173, 551.237, 30.7922, 0.8206", "419.027, 552.353, 30.6967, 0.669", "418.456, 553.318, 30.198, 0.5376", "417.868, 554.164, 31.3776, 0.5596", "417.314, 555.135, 30.8232, 0.664", "417.182, 556.22, 30.0272, 0.7668", "417.473, 557.318, 29.7254, 0.8712", "417.634, 558.447, 29.9096, 0.9928", "417.918, 559.544, 30.2417, 1.0126", "418.087, 560.653, 29.6979, 0.9058", "418.388, 561.757, 29.68, 0.7062", "418.728, 562.835, 29.68, 0.6088", "419.644, 563.519, 29.68, 0.5896", "420.487, 564.279, 29.68, 0.6628", "420.904, 565.345, 29.68, 0.6864", "421.184, 566.447, 29.68, 0.665", "421.221, 567.59, 29.68, 0.574", "421.221, 568.734, 29.68, 0.5446", "421.219, 569.878, 29.6797, 0.6062", "421.207, 571.022, 29.6783, 0.7026", "421.126, 572.16, 29.6691, 0.7572", "420.911, 573.281, 29.6052, 0.7372", "420.901, 574.396, 29.2592, 0.7372", "421.314, 575.388, 28.4029, 0.75", "421.926, 576.295, 27.6807, 0.7814", "422.353, 577.348, 27.4096, 0.7556", "422.81, 578.385, 27.1833, 0.7154", "423.525, 579.188, 26.603, 0.6448", "424.573, 579.619, 26.2963, 0.5848", "425.665, 579.919, 26.0713, 0.5164", "426.695, 580.292, 25.7495, 0.4924", "427.548, 581.02, 26.1684, 0.529", "428.301, 581.821, 26.9383, 0.5802", "429.047, 582.657, 27.3893, 0.5996", "429.857, 583.465, 27.44, 0.5848", "430.721, 584.212, 27.44, 0.5954", "431.623, 584.915, 27.4399, 0.6316", "432.478, 585.673, 27.4391, 0.6824", "433.272, 586.497, 27.4358, 0.7118", "433.991, 587.381, 27.4201, 0.7118", "434.384, 588.412, 27.3281, 0.6896", "434.344, 589.524, 26.8548, 0.6864" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "455.033, 528.394, 70.5944, 0.5084", "455.076, 528.806, 69.5979, 0.5962", "456.006, 528.995, 69.9591, 0.3384", "456.361, 529.944, 70.2044, 0.356", "457.192, 530.244, 71.3801, 0.3628", "458.062, 530.317, 70.84, 0.357", "458.744, 530.587, 72.1196, 0.4068", "459.18, 531.0, 73.64, 0.2288", "459.43, 532.022, 73.36, 0.2288", "460.111, 532.303, 72.571, 0.2288", "461.176, 532.291, 72.4791, 0.2626", "461.718, 532.533, 74.5951, 0.4576", "461.956, 533.315, 73.64, 0.4576", "462.613, 533.107, 75.4317, 0.2356", "463.351, 533.717, 75.5765, 0.352", "464.058, 534.461, 74.9851, 0.6102", "464.639, 535.088, 74.8104, 0.4734", "465.252, 535.941, 74.6617, 0.306", "465.886, 536.408, 74.9431, 0.5076", "466.655, 536.994, 74.7653, 0.7206", "467.037, 537.519, 76.16, 0.4804", "467.987, 538.038, 75.88, 0.5398", "468.754, 538.711, 76.5615, 0.263", "469.176, 539.498, 77.8467, 0.3032", "470.225, 539.282, 77.8537, 0.626", "470.65, 539.635, 75.88, 0.6822", "471.325, 540.343, 76.4982, 0.4724", "471.851, 541.151, 77.3184, 0.5102", "472.785, 541.341, 78.3261, 0.4576", "473.301, 541.582, 79.24, 0.5936", "474.372, 541.717, 79.2509, 0.299", "475.322, 542.051, 79.6048, 0.4092", "476.398, 542.393, 79.5472, 0.4354", "477.427, 542.294, 80.0615, 0.2846", "478.265, 542.706, 80.4104, 0.315", "479.011, 542.485, 78.7206, 0.5084", "479.952, 542.247, 79.7468, 0.4638", "480.761, 542.027, 79.8479, 0.4352", "481.624, 542.027, 80.3264, 0.2288", "482.211, 542.059, 81.3467, 0.467", "483.026, 542.686, 81.9742, 0.4576", "483.74, 542.619, 83.9549, 0.343", "484.727, 542.996, 84.0888, 0.3532", "485.69, 543.574, 83.9978, 0.4762", "486.636, 543.975, 83.6875, 0.475", "487.559, 544.209, 85.0052, 0.5044", "488.65, 544.209, 85.0287, 0.4154", "489.403, 544.43, 86.52, 0.356" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "455.033, 528.394, 70.5944, 0.5084", "455.099, 528.97, 71.0338, 0.4672", "455.345, 530.018, 71.9342, 0.489", "455.63, 530.587, 71.1276, 0.3616", "456.334, 530.969, 72.4069, 0.4998", "455.884, 531.581, 73.7951, 0.4956", "456.383, 532.092, 75.7756, 0.506", "456.339, 532.964, 76.7329, 0.3704", "455.974, 533.693, 77.982, 0.348", "455.884, 534.449, 76.72, 0.3998", "455.656, 535.448, 76.16, 0.2288", "455.607, 536.494, 75.3637, 0.4426", "455.724, 536.941, 77.159, 0.4514", "456.012, 537.91, 78.0892, 0.3566", "456.456, 538.023, 80.0204, 0.4122", "456.008, 538.547, 81.6539, 0.4728", "455.884, 539.53, 82.88, 0.2288", "455.858, 540.661, 82.9287, 0.2662", "455.935, 541.351, 84.56, 0.5038", "456.113, 542.446, 84.373, 0.432", "455.509, 543.064, 85.7279, 0.6102", "455.867, 543.616, 87.3289, 0.4576", "455.44, 544.201, 86.7742, 0.2796", "454.612, 544.722, 88.1093, 0.4068", "454.168, 545.393, 89.7456, 0.271", "453.632, 546.202, 89.3505, 0.408", "453.482, 547.174, 89.5773, 0.312", "453.555, 548.081, 90.2353, 0.3904", "453.891, 549.138, 90.16, 0.5124", "454.016, 550.151, 89.88, 0.4576", "454.282, 551.231, 90.1295, 0.483", "454.002, 552.219, 91.2027, 0.252", "453.808, 553.262, 91.56, 0.2288", "453.325, 553.945, 92.6033, 0.2824", "453.253, 554.91, 93.7048, 0.2716", "453.503, 555.954, 94.2124, 0.5848", "454.054, 556.803, 94.6526, 0.6052", "454.371, 557.589, 96.0792, 0.5688", "454.939, 557.953, 97.8202, 0.356", "454.854, 558.397, 96.091, 0.268", "455.047, 558.065, 94.0999, 0.3122", "455.953, 558.717, 94.08, 0.2288", "456.573, 559.525, 94.8021, 0.2288", "456.883, 559.759, 97.2866, 0.3904", "457.267, 560.538, 97.8454, 0.6864", "457.863, 561.36, 98.065, 0.5986", "458.183, 562.356, 97.2955, 0.3928", "458.585, 563.365, 97.16, 0.2288", "459.621, 563.674, 97.5481, 0.3838", "460.143, 564.572, 97.72, 0.5848", "460.693, 565.311, 98.138, 0.6278", "461.445, 566.072, 98.8327, 0.3402", "462.027, 566.958, 98.2582, 0.299", "462.81, 567.665, 98.2397, 0.6274", "463.418, 568.557, 98.5863, 0.301", "464.006, 569.011, 98.1218, 0.3284", "464.393, 569.933, 98.7941, 0.5726", "464.922, 570.75, 98.8918, 0.2288", "464.962, 571.87, 99.0086, 0.2288", "465.494, 572.436, 100.52, 0.4576", "465.494, 573.548, 100.904, 0.4228", "465.196, 574.28, 102.83, 0.3304", "465.48, 575.203, 103.87, 0.4576", "465.82, 576.059, 104.189, 0.3512", "466.529, 576.565, 105.737, 0.4562", "467.204, 577.12, 105.0, 0.2506", "467.323, 578.014, 106.256, 0.4068", "467.324, 578.338, 108.882, 0.4098", "467.324, 578.783, 111.413, 0.6324", "467.896, 579.436, 111.72, 0.3304" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "427.284, 496.916, 42.1868, 0.483", "426.712, 497.939, 41.5951, 0.4236", "426.148, 498.385, 43.4921, 0.439", "425.454, 499.141, 44.3425, 0.309", "425.129, 499.374, 46.4038, 0.275", "424.425, 499.986, 46.9888, 0.5176", "423.898, 500.955, 47.7, 0.564", "423.527, 502.016, 47.9368, 0.5954", "423.29, 503.065, 47.1503, 0.6418", "422.781, 503.942, 45.9029, 0.6678", "422.289, 504.909, 45.3555, 0.6936", "422.264, 506.04, 45.2799, 0.7268", "422.479, 507.112, 45.5045, 0.8782", "422.407, 507.587, 47.32, 0.733", "421.614, 508.256, 48.0511, 0.8316", "421.233, 508.992, 49.3721, 0.9642", "421.443, 509.921, 49.7378, 0.7502", "421.228, 510.827, 50.276, 0.6434", "420.804, 511.731, 49.7921, 0.7568", "420.697, 512.859, 50.146, 0.8644", "420.758, 513.925, 50.6724, 0.9222", "421.071, 514.998, 50.4059, 0.8834", "421.106, 516.127, 50.7528, 0.8058", "421.261, 517.206, 51.1501, 1.0148", "421.252, 518.307, 51.5399, 0.589", "420.992, 519.313, 51.9582, 0.6112", "420.556, 520.307, 52.2841, 0.8572", "419.886, 521.079, 51.9557, 0.9914" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "427.284, 496.916, 42.1868, 0.483", "426.967, 497.97, 41.6273, 0.4836", "426.42, 498.935, 42.0308, 0.432", "426.291, 499.901, 41.3367, 0.3946", "426.026, 500.557, 40.6, 0.3814", "426.254, 501.591, 40.04, 0.3834", "425.876, 502.174, 38.64, 0.6274", "425.043, 502.913, 38.8903, 0.4566", "424.321, 503.773, 39.0824, 0.3304", "424.207, 504.591, 40.0627, 0.4486", "424.276, 505.476, 40.5714, 0.5984", "424.478, 506.537, 40.2766, 0.434", "424.263, 507.565, 39.9067, 0.4576", "423.676, 508.391, 40.0568, 0.522", "423.026, 508.884, 40.32, 0.6356", "422.364, 509.766, 40.32, 0.6862", "421.371, 510.148, 39.76, 0.5612", "420.678, 509.771, 40.409, 0.5032", "419.869, 510.115, 41.2213, 0.622", "418.937, 510.453, 41.855, 0.5026", "418.005, 510.964, 42.2565, 0.4894", "416.962, 510.938, 41.7623, 0.5044", "416.037, 511.341, 41.6058, 0.6964", "415.15, 512.035, 41.9594, 0.7492", "414.262, 512.752, 41.9961, 0.7986", "413.349, 513.442, 41.9829, 0.827", "412.454, 514.155, 41.9236, 0.8136", "411.473, 514.68, 41.617, 0.7398", "410.373, 514.857, 41.5901, 0.6222", "409.245, 514.774, 41.879, 0.5306", "408.109, 514.704, 41.8656, 0.4968", "407.012, 514.793, 42.3693, 0.5226", "405.993, 515.136, 43.1992, 0.577", "404.946, 515.285, 43.9566, 0.655", "403.848, 515.148, 44.6569, 0.7018", "402.75, 514.885, 44.9056, 0.7118", "401.687, 514.785, 45.6397, 0.6572", "400.655, 515.046, 46.6068, 0.5778", "399.691, 515.14, 48.0248, 0.4608", "398.597, 515.144, 48.6461, 0.4122", "397.455, 515.152, 48.7206, 0.4068", "396.312, 515.204, 48.7234, 0.447", "395.216, 515.506, 48.7413, 0.417", "394.206, 516.034, 48.8365, 0.366", "393.176, 516.46, 49.3948, 0.356", "392.15, 516.629, 50.5131, 0.4196", "391.116, 517.047, 50.482, 0.497", "390.207, 517.566, 51.4688, 0.5552", "389.769, 518.454, 52.8161, 0.5592", "388.87, 519.119, 52.4448, 0.5334", "387.976, 519.826, 52.687, 0.4576", "387.23, 520.676, 53.048, 0.4606", "386.325, 521.315, 52.8503, 0.5226", "385.339, 521.63, 53.9932, 0.6218", "384.258, 521.942, 54.3298, 0.699", "383.285, 522.541, 54.3749, 0.7584", "382.301, 523.088, 54.6862, 0.715", "381.427, 523.66, 55.3314, 0.491", "380.336, 523.843, 54.8752, 0.2986", "379.413, 524.295, 54.8436, 0.8644", "378.308, 524.447, 54.8489, 0.805", "377.262, 524.556, 55.44, 0.4554", "376.377, 525.249, 55.16, 0.3022", "375.468, 525.711, 56.0, 0.5422", "375.003, 526.305, 57.2692, 0.5838", "374.317, 526.583, 56.7221, 0.364", "374.153, 526.843, 54.3838, 0.4174", "373.507, 527.464, 54.8764, 0.5084", "372.983, 528.019, 56.4956, 0.3256", "372.358, 528.86, 56.8392, 0.3556", "371.763, 529.329, 55.258, 0.5808", "371.201, 529.968, 55.7396, 0.3908", "370.831, 530.557, 56.868, 0.2288", "369.939, 530.831, 56.9237, 0.4856", "369.321, 530.587, 55.0536, 0.5124", "368.737, 530.934, 54.2214, 0.5084", "367.72, 531.05, 53.2641, 0.3308", "366.773, 531.493, 52.8646, 0.2316", "365.966, 531.683, 53.8012, 0.3162", "365.207, 531.731, 53.9988, 0.5", "364.159, 532.039, 53.9692, 0.4638", "363.179, 532.189, 53.9406, 0.456", "362.252, 532.404, 53.9809, 0.356", "361.426, 532.405, 54.7347, 0.6864", "361.343, 532.646, 56.5088, 0.2484", "360.492, 532.763, 56.4368, 0.3882", "359.586, 532.908, 55.5276, 0.5276", "359.026, 533.109, 53.6253, 0.58", "358.415, 533.447, 54.4454, 0.4094", "357.609, 533.436, 55.9698, 0.4322", "356.578, 533.854, 56.28, 0.4342", "355.675, 534.142, 55.8617, 0.6864", "354.842, 534.248, 57.199, 0.533", "354.487, 534.845, 56.8551, 0.635", "353.653, 534.973, 57.7844, 0.5998", "352.933, 535.186, 59.3354, 0.3344", "351.897, 535.513, 59.9382, 0.3666", "350.868, 535.868, 60.4671, 0.3008", "349.906, 536.479, 60.3655, 0.2542", "349.383, 537.441, 60.037, 0.2962", "349.2, 538.411, 59.4787, 0.4808", "348.92, 539.23, 60.4836, 0.4576", "348.779, 540.338, 60.9456, 0.269", "348.29, 541.213, 61.3536, 0.3814", "347.793, 541.994, 62.335, 0.4576", "347.177, 542.781, 63.2668, 0.334", "346.181, 543.085, 62.6965, 0.4576", "345.289, 543.627, 62.6906, 0.281", "344.283, 543.874, 63.2979, 0.4322", "343.615, 543.718, 64.8668, 0.2288", "342.966, 543.988, 65.0255, 0.2902", "342.029, 544.033, 65.8364, 0.2942", "341.079, 544.094, 66.92, 0.2696", "340.041, 544.514, 66.5678, 0.2486", "339.528, 544.201, 67.76, 0.2516", "338.466, 544.201, 68.0691, 0.4204", "337.475, 544.057, 68.0495, 0.309", "336.375, 544.214, 68.1159, 0.3316", "335.432, 544.247, 69.0354, 0.45", "334.622, 544.84, 69.8866, 0.3404", "334.391, 545.518, 71.5358, 0.3512", "334.124, 546.42, 71.8049, 0.3516", "333.934, 547.518, 71.96, 0.305" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "439.512, 514.206, 40.8344, 0.7626", "440.001, 514.457, 41.7222, 0.7978", "440.596, 515.394, 42.2587, 0.723", "440.866, 516.475, 42.3402, 0.6298", "440.902, 517.565, 41.571, 0.607", "440.932, 518.654, 40.915, 0.6698", "441.103, 519.778, 40.8808, 0.7234", "441.402, 520.881, 40.8845, 0.7256", "441.875, 521.897, 40.9038, 0.7", "442.678, 522.694, 41.0032, 0.6626", "443.551, 523.359, 41.6214, 0.6108", "444.031, 524.221, 42.6796, 0.5314", "444.102, 525.323, 43.2606, 0.483", "444.108, 526.421, 43.9214, 0.4968", "444.144, 527.528, 44.3856, 0.5798", "444.346, 528.646, 44.4371, 0.6648", "444.597, 529.726, 44.9901, 0.6864", "444.923, 530.751, 45.9113, 0.6564", "445.32, 531.708, 47.08, 0.6356", "445.62, 532.475, 48.879, 0.5458", "445.81, 533.388, 49.5751, 0.2288", "446.533, 534.111, 49.8305, 0.4342", "447.048, 534.314, 47.899, 0.895", "447.272, 535.4, 48.16, 0.8376", "447.526, 536.466, 48.7147, 0.5814", "447.843, 537.314, 47.4732, 0.679", "448.332, 538.083, 47.896, 0.7372", "448.704, 539.073, 47.6221, 0.5738", "448.791, 540.198, 47.7313, 0.529", "448.723, 541.321, 47.9142, 0.4012", "448.791, 542.401, 48.7816, 0.2802", "448.791, 543.068, 48.0592, 0.2288", "449.11, 543.725, 46.48, 0.2588", "449.568, 544.724, 46.8096, 0.422", "449.83, 545.345, 48.3308, 0.467", "450.578, 545.877, 49.5152, 0.5398", "450.999, 546.57, 50.6324, 0.4576", "451.83, 546.882, 49.56, 0.4322" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "439.512, 514.206, 40.8344, 0.7626", "440.615, 515.24, 40.521, 0.5358", "441.458, 515.625, 38.9491, 0.4614", "442.545, 515.901, 38.5353, 0.3814", "443.496, 516.482, 39.1633, 0.3834", "444.463, 516.909, 40.1828, 0.4372", "445.585, 517.103, 40.0439, 0.551", "446.587, 517.61, 39.5195, 0.7454", "447.562, 518.134, 38.8214, 0.8106", "448.537, 518.654, 38.15, 0.7658", "449.407, 519.164, 37.0328, 0.6026", "450.273, 519.884, 37.5278, 0.568", "451.157, 520.58, 37.9411, 0.6192", "452.16, 521.05, 38.5792, 0.6472", "453.241, 521.411, 38.7912, 0.5568", "454.281, 521.851, 39.1672, 0.3864", "455.017, 522.556, 37.9201, 0.5126", "455.791, 523.188, 36.5672, 0.6656", "456.702, 523.832, 35.9831, 0.7598", "457.633, 524.485, 36.2835, 0.7068", "458.586, 525.114, 36.3992, 0.6708", "459.556, 525.721, 36.3947, 0.614", "460.529, 526.323, 36.3737, 0.6006", "461.393, 527.058, 36.2846, 0.5784", "462.056, 527.97, 35.9582, 0.5912", "462.591, 528.925, 36.3983, 0.6102", "463.107, 529.728, 37.872, 0.6268", "463.716, 530.497, 39.2795, 0.6014", "464.537, 531.231, 39.7348, 0.5672", "465.595, 531.575, 39.7874, 0.5414", "466.73, 531.683, 39.9717, 0.5698", "467.784, 532.066, 39.888, 0.644", "468.626, 532.824, 39.7611, 0.7372", "469.519, 533.538, 39.7653, 0.7358", "470.247, 534.42, 39.7855, 0.6838", "470.943, 535.326, 39.895, 0.6084", "471.747, 536.101, 40.4883, 0.5564", "472.628, 536.808, 40.8682, 0.5084", "473.275, 537.75, 40.8142, 0.5102", "473.836, 538.739, 40.5703, 0.5436", "474.551, 539.577, 39.9669, 0.666", "475.574, 540.058, 40.3351, 0.7118", "476.645, 540.386, 40.8822, 0.7", "477.758, 540.638, 41.0178, 0.604", "478.857, 540.859, 41.4988, 0.5522", "479.939, 540.668, 41.902, 0.5044", "480.84, 540.074, 41.8774, 0.5308", "481.955, 539.914, 42.1893, 0.666", "483.032, 540.1, 42.8644, 0.7708", "484.125, 540.407, 43.1312, 0.7026", "485.207, 540.771, 43.3222, 0.5788", "486.288, 541.055, 43.888, 0.4928", "487.311, 541.46, 43.2886, 0.5282", "488.264, 542.075, 43.0528, 0.5338", "489.142, 542.787, 42.6314, 0.4876", "489.987, 543.521, 42.058, 0.4364", "490.959, 544.118, 42.0006, 0.4322", "491.892, 544.779, 41.9989, 0.4558", "492.547, 545.711, 41.9947, 0.4338", "493.071, 546.727, 41.9698, 0.4084", "493.57, 547.754, 41.8188, 0.383", "493.818, 548.728, 40.5194, 0.3568", "494.396, 549.591, 41.5794, 0.3866", "494.947, 550.575, 41.9622, 0.4414", "495.331, 551.647, 41.7782, 0.5084", "495.838, 552.64, 41.1718, 0.5016", "496.536, 553.508, 40.8719, 0.454", "497.596, 553.933, 40.819, 0.4364", "498.668, 554.294, 40.5171, 0.4714", "499.677, 554.732, 39.8171, 0.5388", "500.748, 555.132, 39.76, 0.549", "501.816, 555.525, 39.76, 0.4826", "502.95, 555.665, 39.7594, 0.3604", "504.082, 555.788, 39.7569, 0.269", "505.165, 556.154, 39.7412, 0.2288", "506.246, 556.495, 39.6365, 0.2288", "507.373, 556.556, 39.2297, 0.2404", "508.489, 556.556, 38.6756, 0.2974", "509.633, 556.562, 38.6403, 0.3738", "510.775, 556.597, 38.6425, 0.4262", "511.88, 556.808, 38.656, 0.3946", "512.784, 557.472, 38.7332, 0.3494", "513.434, 558.397, 39.0902, 0.3508", "514.08, 559.296, 39.7051, 0.4352", "514.766, 560.209, 39.7779, 0.5228", "515.477, 561.1, 39.8446, 0.552", "516.015, 562.091, 40.1668, 0.519", "516.444, 563.119, 40.7277, 0.4906", "517.021, 564.099, 40.7882, 0.5164", "517.56, 565.067, 40.4502, 0.5254", "517.861, 566.138, 40.1932, 0.4766", "518.315, 567.169, 40.6865, 0.3828", "518.982, 567.552, 42.0344, 0.3304", "519.576, 568.168, 42.3153, 0.2288", "519.696, 568.697, 41.2891, 0.524", "520.406, 569.14, 41.5778, 0.2288", "521.343, 569.488, 41.141, 0.4166", "522.261, 569.699, 41.72, 0.6074", "523.219, 570.073, 40.7613, 0.5392", "524.183, 570.398, 40.7411, 0.4282", "524.649, 570.513, 39.3327, 0.577", "525.294, 570.873, 38.64, 0.2532", "526.282, 571.004, 37.4086, 0.3594", "527.299, 571.395, 36.9219, 0.305", "527.802, 572.031, 37.9576, 0.279", "528.335, 571.991, 39.2078, 0.388", "528.995, 572.628, 39.1916, 0.6", "529.64, 573.482, 39.0578, 0.5538", "530.148, 574.145, 39.8863, 0.4142", "530.957, 574.364, 40.1128, 0.2288", "531.903, 574.081, 39.7782, 0.2288", "532.749, 574.614, 39.7681, 0.6676", "533.483, 575.137, 38.92, 0.6864", "534.512, 575.466, 38.5566, 0.4376", "535.292, 576.192, 38.6831, 0.53", "536.208, 576.424, 39.48, 0.641", "536.349, 577.36, 39.9778, 0.4238", "537.376, 577.413, 39.6934, 0.3304", "538.126, 577.571, 39.6113, 0.607", "538.912, 578.034, 38.92, 0.5548", "539.824, 578.406, 39.8857, 0.47", "540.883, 578.6, 39.2372, 0.525", "541.946, 578.655, 38.92, 0.5836", "542.519, 578.407, 38.5221, 0.3848", "543.471, 578.406, 39.2437, 0.2796", "544.345, 577.951, 39.8381, 0.2542", "545.208, 577.436, 38.9648, 0.547", "546.111, 577.125, 38.7738, 0.2834", "547.216, 577.034, 38.36, 0.2604", "548.294, 576.813, 38.8444, 0.4862", "548.653, 576.642, 40.6204, 0.6864", "549.381, 576.446, 40.4804, 0.6102", "550.099, 576.233, 39.7454, 0.2924", "551.067, 575.988, 40.014, 0.2648", "552.05, 575.884, 39.76, 0.3192", "552.584, 575.382, 38.9382, 0.234", "553.431, 575.089, 40.1346, 0.4574", "554.218, 574.719, 41.5192, 0.3814", "554.94, 574.178, 40.6823, 0.4546", "555.648, 573.812, 39.2078, 0.4068", "556.339, 573.501, 40.5986, 0.331", "557.38, 573.238, 41.16, 0.2288", "558.298, 572.689, 40.9732, 0.295", "559.228, 572.356, 41.3921, 0.356", "560.153, 572.342, 42.0274, 0.3814", "561.175, 572.15, 42.7893, 0.3004", "562.239, 572.039, 42.8375, 0.4072", "563.073, 572.229, 42.5975, 0.7906", "563.97, 572.626, 42.205, 0.691", "564.673, 572.686, 43.398, 0.2304", "565.423, 573.199, 42.6692, 0.4816", "566.274, 573.889, 42.7675, 0.5182", "567.262, 574.438, 42.56, 0.4594", "568.176, 574.974, 42.7902, 0.3696", "568.562, 575.821, 43.948, 0.4576", "569.007, 576.609, 42.7269, 0.2854", "569.044, 577.363, 42.2755, 0.516", "569.729, 578.193, 42.9738, 0.405", "570.199, 579.207, 43.4, 0.3156", "570.724, 579.976, 44.2089, 0.3814", "571.405, 580.823, 44.52, 0.4222", "571.517, 581.865, 44.931, 0.5146", "571.636, 582.858, 44.9266, 0.5496", "571.542, 583.877, 44.9302, 0.5084", "570.851, 584.694, 43.9956, 0.356", "570.291, 585.489, 45.047, 0.6542", "570.172, 586.54, 44.7782, 0.3894", "570.449, 587.58, 44.4693, 0.2288", "571.085, 588.389, 44.24, 0.2288", "571.085, 589.533, 44.24, 0.2288", "571.085, 590.669, 44.4822, 0.2288", "571.111, 591.81, 44.52, 0.2288", "571.111, 592.907, 44.6838, 0.4576", "571.557, 593.074, 46.76, 0.2992", "572.359, 593.743, 46.4671, 0.2288", "572.901, 594.53, 45.92, 0.2358", "573.619, 595.242, 46.8107, 0.392", "574.209, 596.172, 47.3763, 0.4422", "574.289, 596.866, 47.003, 0.2776", "574.616, 597.908, 47.3452, 0.2494", "575.191, 598.207, 49.2985, 0.3876", "575.355, 599.226, 49.8859, 0.2288", "576.017, 599.919, 50.9018, 0.3592", "576.779, 600.142, 51.5382, 0.3322", "577.656, 600.664, 51.7667, 0.3162", "577.733, 601.172, 52.9511, 0.4576" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "434.344, 589.524, 26.8548, 0.6864", "435.101, 590.191, 27.1479, 0.419", "435.456, 590.962, 26.6064, 0.5574", "436.115, 591.533, 26.1723, 0.3986", "436.612, 592.263, 26.0184, 0.2288", "437.312, 592.716, 26.0492, 0.3078", "438.185, 593.201, 26.7008, 0.4576", "439.001, 593.488, 27.9332, 0.5254", "439.632, 594.054, 27.0961, 0.4198", "440.171, 594.445, 27.1036, 0.2796", "440.578, 595.434, 27.1733, 0.3268", "441.079, 596.232, 26.6722, 0.2288", "441.841, 596.641, 27.0945, 0.4576", "442.288, 597.03, 25.48, 0.2288", "443.069, 597.177, 24.6893, 0.3304", "443.235, 597.763, 25.3823, 0.2686", "444.171, 598.198, 25.1911, 0.2452", "445.174, 598.436, 25.4711, 0.2978", "446.135, 598.758, 26.2486, 0.5536", "446.873, 599.536, 26.1655, 0.6654", "447.579, 600.018, 26.1362, 0.4258", "448.186, 600.901, 25.767, 0.2288", "448.717, 601.721, 26.1218, 0.3968", "449.534, 602.266, 26.0002, 0.4254", "450.329, 602.697, 25.2314, 0.4324", "451.155, 603.239, 25.441, 0.4612", "451.331, 604.088, 24.8004, 0.3814", "451.422, 605.187, 24.8248, 0.2504", "451.726, 605.724, 23.3146, 0.2898", "452.192, 606.392, 22.4794, 0.4668", "452.929, 607.207, 22.4738, 0.4984", "453.564, 607.894, 23.24, 0.4576", "454.063, 608.895, 22.872, 0.4322", "454.838, 609.689, 23.1853, 0.4396", "455.312, 610.53, 22.4101, 0.4818", "455.82, 611.397, 21.5834, 0.3176", "456.899, 611.697, 21.4948, 0.3304", "457.746, 612.22, 20.729, 0.4058", "458.333, 613.151, 20.4955, 0.3276", "459.176, 613.703, 20.7466, 0.4124", "459.867, 614.019, 21.5338, 0.5982", "460.899, 614.218, 21.2112, 0.455", "461.877, 614.683, 21.6189, 0.3", "462.712, 615.4, 21.8827, 0.2288", "463.406, 616.251, 21.5945, 0.2496", "463.886, 617.028, 21.4758, 0.501", "464.568, 617.44, 20.174, 0.26", "465.391, 618.122, 20.4093, 0.5082", "465.959, 619.054, 20.5099, 0.41", "466.538, 619.529, 20.75, 0.392", "467.005, 620.365, 19.6, 0.6864", "467.684, 620.953, 20.1279, 0.7924", "468.471, 621.542, 19.6, 0.476", "469.153, 621.652, 18.6163, 0.4458", "470.02, 622.025, 18.4601, 0.6428", "470.707, 622.902, 17.9342, 0.5906", "471.47, 623.616, 17.36, 0.4176", "471.819, 624.263, 19.0925, 0.3002", "472.21, 624.999, 19.6412, 0.356", "472.814, 625.576, 18.5848, 0.8532", "473.448, 626.475, 19.045, 0.815", "474.04, 627.414, 19.0433, 0.5858", "474.838, 627.889, 18.6006, 0.5848", "475.698, 628.456, 17.92, 0.6838", "476.512, 629.189, 17.92, 0.6374", "477.589, 629.314, 18.3021, 0.6424", "478.27, 629.711, 19.5692, 0.5854", "478.958, 630.333, 18.8998, 0.5006", "478.993, 630.804, 17.2131, 0.4532", "479.743, 630.976, 15.9704, 0.2626", "480.469, 631.001, 16.9348, 0.4714", "481.257, 631.529, 17.8438, 0.577", "482.121, 632.24, 18.2, 0.657", "482.837, 632.902, 18.5277, 0.6328", "483.276, 633.722, 19.2755, 0.4442", "483.415, 634.271, 17.9298, 0.2292", "483.682, 635.247, 17.1111, 0.305", "484.583, 635.86, 17.5732, 0.6174", "485.181, 636.603, 18.48, 0.5288", "485.716, 637.372, 17.3327, 0.6102", "485.742, 638.369, 16.6197, 0.627", "485.857, 639.439, 17.08, 0.2288", "486.513, 640.07, 16.5441, 0.2288", "486.715, 641.186, 16.7921, 0.4064", "487.223, 641.926, 16.0303, 0.3814", "487.508, 642.835, 16.9112, 0.3304", "487.781, 643.703, 15.5521, 0.6072", "488.366, 644.627, 15.561, 0.5592", "488.285, 645.707, 15.9559, 0.5968", "488.154, 646.757, 15.4282, 0.4524", "488.134, 647.875, 15.12, 0.5532", "488.108, 648.906, 14.8766, 0.4566", "488.186, 649.896, 14.8917, 0.446", "487.989, 650.736, 14.2887, 0.3538", "488.374, 651.019, 15.4255, 0.5248", "488.145, 652.08, 15.68, 0.5084" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "434.344, 589.524, 26.8548, 0.6864", "433.749, 590.966, 27.2578, 0.4476", "433.359, 592.036, 27.5198, 0.4632", "432.808, 592.992, 27.9325, 0.5298", "432.066, 593.791, 28.7773, 0.5812", "431.381, 594.649, 29.4988, 0.6102", "430.759, 595.593, 29.9398, 0.5874", "430.188, 596.56, 30.4214, 0.5246", "429.713, 597.584, 30.7734, 0.4246", "429.344, 598.664, 30.8, 0.3324", "429.253, 599.786, 30.8, 0.305", "429.203, 600.914, 30.8, 0.355", "428.857, 601.999, 30.8006, 0.4324", "428.537, 603.089, 30.8034, 0.4706", "428.276, 604.203, 30.8227, 0.457", "428.103, 605.322, 30.9445, 0.4452", "428.084, 606.44, 31.4524, 0.4708", "428.077, 607.56, 31.9365, 0.5226", "428.037, 608.687, 32.361, 0.5458", "427.807, 609.776, 32.8628, 0.5202", "427.324, 610.802, 33.0397, 0.4806", "426.866, 611.844, 33.0383, 0.4576", "426.666, 612.962, 33.0285, 0.4434", "426.458, 614.08, 32.9655, 0.4034", "426.238, 615.181, 32.5648, 0.3522", "425.97, 616.273, 32.1345, 0.3752", "425.577, 617.332, 32.3165, 0.483", "425.329, 618.419, 32.8457, 0.6578", "425.097, 619.528, 33.1209, 0.7528", "424.919, 620.633, 33.5784, 0.7626", "424.876, 621.718, 34.4327, 0.698", "424.843, 622.829, 34.5268, 0.6446", "424.612, 623.938, 34.3484, 0.6186", "424.082, 624.894, 34.9065, 0.6102", "423.17, 625.503, 35.2545, 0.6464", "422.062, 625.726, 35.3352, 0.6974", "420.967, 626.004, 35.6552, 0.7672", "419.958, 626.211, 36.7744, 0.788", "419.68, 626.923, 38.3813, 0.8092", "419.82, 627.977, 39.3464, 0.7918", "419.829, 629.109, 39.6516, 0.788", "419.935, 629.958, 40.3522, 0.8816", "420.406, 630.812, 40.4939, 0.6066", "421.002, 631.528, 40.8738, 0.651", "421.602, 632.388, 40.6, 0.8136", "421.969, 633.44, 40.3264, 0.7424", "422.587, 634.189, 41.0357, 0.5084", "422.762, 635.148, 40.0582, 0.5638", "422.185, 635.862, 41.2426, 0.5734", "421.848, 636.893, 41.6553, 0.4948", "422.004, 637.939, 41.4896, 0.441", "421.97, 638.955, 42.5102, 0.5688", "421.991, 639.955, 43.4, 0.6056", "422.345, 640.952, 44.0496, 0.5622", "422.365, 641.995, 44.52, 0.2542", "422.25, 642.824, 43.5322, 0.499", "422.075, 643.889, 43.1855, 0.6864", "422.408, 644.836, 44.1924, 0.436", "422.376, 645.785, 44.6205, 0.776", "422.136, 646.774, 45.7106, 0.8898", "422.25, 647.837, 45.876, 0.3484", "422.236, 648.813, 46.03, 0.651", "422.103, 649.906, 46.17, 0.5146", "421.755, 650.885, 46.4878, 0.68", "421.45, 651.816, 46.9694, 0.5828", "421.418, 652.702, 47.8652, 0.358", "421.352, 653.521, 46.5895, 0.4028", "421.333, 654.043, 49.0076, 0.234", "421.643, 654.487, 47.8279, 0.514", "421.236, 655.35, 47.8559, 0.5944", "421.106, 656.275, 49.1655, 0.2604", "421.556, 656.465, 51.3008, 0.4192", "422.245, 656.477, 52.92, 0.4936", "422.366, 657.395, 52.08, 0.6986", "422.274, 658.429, 52.1584, 0.7216", "422.42, 659.375, 53.317, 0.538", "422.507, 660.331, 54.1881, 0.4576", "423.271, 660.892, 54.1223, 0.477", "423.623, 661.55, 55.9219, 0.394", "423.326, 662.079, 57.4764, 0.4882", "422.949, 662.669, 58.52, 0.6864", "422.224, 663.178, 59.5801, 0.5082", "421.336, 663.408, 61.1528, 0.3406", "420.379, 663.702, 61.9192, 0.483", "420.413, 663.063, 63.5502, 0.6022", "420.609, 662.747, 65.9386, 0.4626", "419.613, 662.831, 65.7829, 0.661", "418.861, 662.824, 64.68, 0.2722", "418.341, 662.147, 64.96, 0.4894", "418.018, 661.346, 65.8, 0.3814" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "419.886, 521.079, 51.9557, 0.9914", "419.551, 522.018, 53.7642, 0.4484", "419.249, 523.063, 54.32, 0.3142", "418.755, 524.062, 53.9986, 0.4576", "418.475, 525.121, 53.4932, 0.701", "418.246, 525.964, 53.0236, 0.4576", "417.972, 526.956, 52.9038, 0.5504", "417.724, 527.837, 52.7341, 0.871", "417.331, 528.626, 53.7622, 0.5338", "416.64, 529.217, 54.3127, 0.5106", "416.081, 529.786, 55.1328, 0.3092", "415.745, 530.473, 55.4585, 0.2542", "415.322, 531.231, 54.4858, 0.301", "414.92, 531.579, 52.64, 0.3878", "414.242, 532.303, 53.2, 0.4322" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "419.886, 521.079, 51.9557, 0.9914", "419.976, 521.766, 50.4, 0.661", "420.579, 522.26, 50.68, 0.6864", "420.621, 522.501, 52.605, 0.482", "420.684, 523.182, 54.1041, 0.9482", "421.297, 523.875, 54.88, 0.788" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "451.83, 546.882, 49.56, 0.4322", "452.159, 547.607, 50.029, 0.4534", "453.124, 547.862, 50.9096, 0.2288", "453.606, 548.464, 49.712, 0.2288", "454.287, 548.64, 50.7822, 0.5372", "454.884, 549.032, 51.9361, 0.2796", "455.198, 549.909, 50.9734, 0.4538", "455.591, 550.493, 49.7652, 0.5848", "456.089, 551.159, 50.3978, 0.5848", "455.884, 551.61, 52.5196, 0.4068", "456.156, 552.535, 51.7868, 0.4684", "457.059, 552.781, 51.8616, 0.4326", "457.54, 553.161, 53.5049, 0.4098", "458.408, 553.675, 53.3515, 0.4512", "459.241, 554.131, 54.0089, 0.4322", "460.185, 554.626, 53.1367, 0.3338", "460.963, 555.101, 52.08, 0.2796", "461.815, 554.991, 53.2258, 0.3342", "462.389, 555.096, 54.7064, 0.5558", "463.091, 555.419, 55.8558, 0.3166", "463.653, 556.014, 56.9159, 0.5628", "464.417, 556.437, 57.5641, 0.4418", "465.415, 556.486, 57.5621, 0.2796", "466.49, 556.327, 57.9256, 0.5672", "467.276, 555.881, 58.9868, 0.524", "468.188, 555.763, 58.5141, 0.4506", "468.831, 556.068, 57.12, 0.31", "469.328, 556.327, 58.5337, 0.2834", "469.84, 557.009, 59.6366, 0.459", "470.254, 557.911, 60.0916, 0.2624", "470.406, 558.108, 62.1564, 0.251", "471.211, 558.501, 61.8937, 0.3796", "471.798, 558.215, 62.7964, 0.4122", "472.41, 558.751, 63.7916, 0.4322", "473.033, 559.52, 64.1211, 0.5102", "473.8, 560.078, 64.0441, 0.3926", "474.762, 560.336, 64.4487, 0.5174", "475.493, 560.792, 65.4318, 0.354", "476.589, 560.903, 65.6407, 0.3448", "477.594, 560.845, 65.4284, 0.5338", "478.056, 561.698, 65.4615, 0.4038", "479.16, 561.507, 65.8238, 0.3314", "480.006, 561.386, 67.4478, 0.3902", "480.926, 561.361, 66.3681, 0.3764", "481.897, 561.345, 66.871, 0.284", "482.857, 561.07, 67.2, 0.4366", "483.694, 561.632, 67.205, 0.3398", "484.523, 561.842, 68.32, 0.3526", "485.397, 562.283, 67.8944, 0.2786", "486.203, 562.835, 67.5996, 0.3368", "487.01, 563.34, 69.0124, 0.6864", "487.468, 563.843, 68.3276, 0.4576", "488.372, 564.117, 69.076, 0.3616", "489.371, 563.918, 69.2168, 0.2642", "490.278, 563.42, 69.253, 0.3046", "491.333, 563.18, 69.4369, 0.533", "492.152, 562.962, 70.3189, 0.305", "492.983, 563.254, 70.1996, 0.356", "493.749, 563.377, 71.706, 0.3158", "494.551, 563.649, 72.077, 0.4724", "494.94, 564.038, 74.1684, 0.3936", "495.577, 564.335, 76.3286, 0.3678", "496.401, 564.295, 78.0682, 0.2402", "496.954, 563.457, 78.9222, 0.3892", "497.314, 563.191, 81.2658, 0.266", "498.186, 563.191, 82.32, 0.2478", "499.322, 563.28, 82.32, 0.2288", "500.462, 563.334, 82.32, 0.2288", "501.597, 563.319, 82.5395, 0.2288", "502.592, 563.534, 83.6959, 0.2288", "503.663, 563.534, 84.28, 0.2288", "504.796, 563.534, 84.649, 0.2392", "505.832, 563.649, 85.3958, 0.283", "506.97, 563.724, 85.4, 0.2732", "508.007, 563.961, 85.12, 0.2288", "509.147, 563.992, 85.12, 0.2288", "510.292, 563.992, 85.12, 0.2288", "511.435, 563.992, 85.12, 0.2288", "512.438, 564.138, 85.8925, 0.2288", "513.511, 564.384, 85.4445, 0.2288", "514.593, 564.642, 85.2071, 0.2928", "515.015, 565.25, 84.4208, 0.3814", "515.788, 565.44, 85.4, 0.6864", "515.925, 565.822, 83.4128, 0.292", "516.105, 566.391, 81.6203, 0.2806", "516.638, 566.353, 79.52, 0.4032", "517.705, 566.615, 79.52, 0.235", "518.583, 567.085, 78.4, 0.2996", "518.918, 567.424, 80.5087, 0.293", "519.211, 567.838, 82.04, 0.2288", "519.951, 568.36, 83.2527, 0.2334", "520.799, 568.847, 84.0406, 0.3704", "521.574, 569.647, 84.0683, 0.2288", "521.943, 570.599, 83.16, 0.239", "522.627, 570.948, 84.4351, 0.4054", "523.338, 571.644, 83.9182, 0.465", "524.383, 571.935, 83.44, 0.2992", "525.194, 572.708, 83.72, 0.2288", "526.09, 573.154, 84.2696, 0.2288", "526.541, 573.586, 83.172, 0.35", "527.12, 574.289, 83.0029, 0.6356", "527.732, 574.86, 83.2815, 0.5088", "528.74, 575.234, 84.077, 0.408", "529.787, 575.546, 84.2117, 0.4642", "530.707, 575.657, 83.1141, 0.484", "531.274, 575.685, 84.2167, 0.5448", "531.732, 575.165, 85.6274, 0.2432", "532.533, 575.318, 84.3245, 0.2288", "533.165, 575.577, 83.4884, 0.4576", "533.915, 576.011, 84.0711, 0.2832", "534.952, 575.918, 84.8226, 0.4282", "535.851, 575.346, 84.4343, 0.294", "536.56, 574.921, 83.9339, 0.2288", "537.098, 574.325, 85.6344, 0.4514", "537.653, 573.714, 86.1311, 0.373", "538.434, 573.462, 87.3872, 0.4706", "539.385, 573.435, 88.7569, 0.2288", "540.26, 572.757, 89.2125, 0.2288", "541.165, 572.352, 89.1498, 0.3536", "541.937, 572.229, 87.6823, 0.5766", "542.956, 572.213, 88.48, 0.6864", "543.862, 571.709, 88.2, 0.57", "544.43, 571.771, 86.8, 0.356" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "451.83, 546.882, 49.56, 0.4322", "451.97, 547.209, 48.9247, 0.5596", "452.38, 547.953, 48.0217, 0.3868", "452.681, 548.844, 47.1223, 0.2288", "452.388, 549.835, 47.0691, 0.2966", "452.138, 550.636, 45.4972, 0.2288", "451.998, 551.307, 44.7068, 0.6864", "452.063, 552.231, 43.3504, 0.39", "452.109, 553.222, 42.28, 0.2692", "452.109, 554.366, 42.28, 0.233", "452.109, 555.489, 42.0468, 0.2288", "451.564, 556.273, 41.9499, 0.2288", "451.079, 556.648, 43.4711, 0.2934", "450.792, 557.62, 42.343, 0.2848", "450.731, 558.747, 42.3825, 0.2542", "450.626, 559.877, 42.5219, 0.281", "451.168, 560.818, 42.0048, 0.3676", "451.838, 561.672, 42.525, 0.4658", "452.338, 562.492, 42.3111, 0.7626" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "577.733, 601.172, 52.9511, 0.4576", "577.816, 601.534, 54.0165, 0.3234", "577.542, 601.972, 55.0693, 0.3814", "577.273, 602.401, 56.6832, 0.4374", "576.967, 603.268, 56.0442, 0.6382", "577.148, 604.261, 57.12, 0.305" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "577.733, 601.172, 52.9511, 0.4576", "577.996, 601.226, 53.6273, 0.3798", "578.521, 601.744, 52.92, 0.4322" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "421.297, 523.875, 54.88, 0.788", "421.322, 523.42, 57.1712, 0.596", "421.529, 522.658, 58.5617, 0.5058", "421.982, 521.952, 60.1824, 0.348", "422.586, 521.079, 59.9631, 0.7776", "423.279, 520.753, 59.6338, 0.6118", "423.359, 519.718, 60.7233, 0.5084", "423.645, 518.775, 61.315, 0.913", "424.6, 518.499, 62.1908, 0.7884", "425.659, 518.807, 62.4691, 0.278", "426.338, 518.582, 63.8534, 0.632", "426.895, 518.231, 65.6368, 0.3136", "427.014, 517.663, 67.8306, 0.3304", "426.953, 516.863, 69.0668, 0.464", "427.624, 516.346, 69.82, 0.6544", "427.589, 515.41, 69.4406, 0.6356", "426.884, 515.096, 71.0315, 0.6864", "426.856, 514.466, 72.45, 0.545", "427.17, 513.722, 73.7134, 0.2288", "426.593, 513.272, 73.5529, 0.2516", "425.933, 512.528, 73.9379, 0.5298", "425.298, 512.241, 75.9273, 0.393", "424.834, 511.795, 78.1892, 0.356", "424.533, 511.482, 80.6994, 0.392", "424.31, 510.91, 82.04, 0.5338" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "421.297, 523.875, 54.88, 0.788", "421.678, 524.525, 54.7383, 0.6732", "421.787, 525.563, 54.5112, 0.3488", "421.946, 526.545, 55.3935, 0.5082", "421.579, 527.424, 56.005, 0.6228", "421.745, 528.338, 56.56, 1.0488", "421.234, 529.169, 57.3471, 0.7152", "420.64, 529.921, 56.3828, 0.6364", "419.984, 530.516, 55.617, 0.5276", "419.043, 530.93, 55.8656, 0.6234", "418.286, 531.254, 57.4, 0.6744", "417.774, 531.274, 58.9417, 0.2888", "417.204, 532.001, 59.6268, 0.4686", "416.752, 532.842, 60.317, 0.6816", "416.583, 533.876, 60.5878, 0.4986", "416.816, 534.974, 60.6673, 0.5848", "417.217, 535.953, 60.7922, 0.737", "417.217, 537.039, 60.8216, 0.6144", "417.406, 537.983, 59.3869, 0.661", "416.883, 538.895, 59.3172, 0.7568", "416.668, 539.739, 60.2493, 0.6758", "416.89, 540.317, 62.1527, 0.5562", "416.7, 541.345, 61.929, 0.6356", "416.475, 542.182, 60.9784, 0.6808", "415.871, 543.083, 60.7387, 0.6086", "415.659, 544.108, 60.0877, 0.513", "415.916, 544.773, 61.483, 0.9554", "415.899, 545.554, 61.7092, 0.6944", "415.478, 546.461, 62.4394, 0.6602", "414.769, 547.14, 61.4785, 0.6102", "414.237, 548.061, 61.7848, 0.806", "413.708, 548.891, 62.0668, 1.1694", "413.213, 549.12, 63.84, 0.6864" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "452.338, 562.492, 42.3111, 0.7626", "452.766, 562.825, 42.5174, 0.4968", "453.28, 563.656, 42.5258, 0.3304", "453.669, 564.628, 41.7934, 0.2288", "453.884, 565.699, 42.4612, 0.2964", "454.044, 566.702, 42.7566, 0.2444", "454.518, 567.594, 42.28, 0.282", "455.096, 568.441, 42.7006, 0.521", "455.465, 569.425, 42.1946, 0.3892", "455.545, 570.542, 42.2173, 0.5082", "455.541, 571.573, 41.9171, 0.2864", "455.82, 572.63, 41.3372, 0.2288", "456.122, 573.663, 40.88, 0.2288", "456.647, 574.445, 42.142, 0.3942", "456.878, 575.462, 42.1198, 0.3742", "456.693, 576.503, 41.834, 0.387", "457.012, 577.424, 42.4749, 0.5158", "457.257, 578.031, 40.7207, 0.3852", "457.327, 579.015, 40.4617, 0.5184", "457.414, 580.044, 40.859, 0.4922", "457.6, 581.091, 40.32, 0.6264", "457.395, 582.137, 39.6071, 0.4808", "457.621, 583.086, 38.8889, 0.4126", "457.922, 584.089, 38.0296, 0.4576", "458.665, 584.801, 37.8098, 0.2288", "459.289, 585.701, 37.842, 0.2288", "459.621, 586.441, 37.8792, 0.5992", "459.697, 587.201, 36.7497, 0.28", "460.269, 587.878, 37.3444, 0.2956", "460.698, 588.88, 37.4122, 0.2362", "461.277, 589.763, 37.0468, 0.4322", "461.724, 590.612, 36.5044, 0.3574", "461.985, 591.542, 37.0376, 0.2986", "462.176, 592.599, 36.437, 0.2288", "462.287, 593.711, 36.8203, 0.2288", "462.324, 594.85, 36.96, 0.2362", "462.405, 595.987, 36.96, 0.2954", "462.405, 597.13, 36.9144, 0.3912", "462.605, 598.141, 36.7539, 0.2452", "462.108, 599.066, 36.4, 0.2302", "461.948, 600.099, 37.1426, 0.4314", "461.912, 601.205, 37.3783, 0.3892", "461.651, 602.26, 37.8227, 0.4322", "461.49, 603.304, 37.7174, 0.3408", "461.591, 604.437, 37.6384, 0.3856", "461.707, 605.509, 36.9698, 0.2704", "461.977, 606.597, 36.96, 0.264", "462.571, 607.555, 36.8606, 0.2542", "462.694, 608.57, 37.1955, 0.4322", "462.653, 609.681, 37.1571, 0.3176", "462.748, 610.812, 37.3733, 0.2406", "462.637, 611.936, 37.24, 0.2716", "462.263, 612.643, 36.4935, 0.2542", "461.217, 612.864, 35.8907, 0.356", "460.563, 613.67, 35.7888, 0.356", "460.025, 614.609, 35.7302, 0.2288", "459.085, 615.107, 35.5054, 0.2288", "458.014, 615.358, 35.7182, 0.2288", "457.108, 615.807, 35.793, 0.353", "456.685, 616.387, 35.56, 0.3814" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "452.338, 562.492, 42.3111, 0.7626", "453.253, 563.42, 42.0, 0.3814" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "413.213, 549.12, 63.84, 0.6864", "413.15, 549.702, 63.5001, 0.4922", "412.95, 550.794, 63.1896, 0.4338", "412.506, 551.786, 62.7362, 0.7372", "412.02, 552.647, 63.3416, 0.369", "411.487, 553.043, 65.3786, 0.2552", "410.766, 553.862, 65.0695, 0.377", "410.463, 554.705, 64.6677, 0.51", "410.132, 555.182, 62.5092, 0.4576", "409.971, 556.211, 62.5296, 0.5844", "409.849, 557.219, 63.0, 0.3556", "410.004, 557.856, 64.4722, 0.5186", "409.63, 558.614, 65.6256, 0.4514", "409.266, 559.645, 66.36, 0.3814", "408.86, 560.338, 65.4987, 0.4322", "408.347, 561.187, 65.24, 0.563", "407.916, 562.222, 65.6275, 0.532", "407.465, 563.23, 65.24, 0.346", "407.134, 563.85, 66.8021, 0.412", "406.912, 564.673, 65.5572, 0.535", "406.629, 565.583, 65.24, 0.4344", "406.578, 566.696, 65.7364, 0.438", "406.096, 567.322, 66.9544, 0.348", "405.777, 567.996, 67.5702, 0.3814", "405.452, 568.633, 69.1113, 0.3594", "404.708, 569.357, 68.5409, 0.5816", "404.28, 570.196, 67.8686, 0.356", "403.84, 571.151, 68.549, 0.4188", "403.668, 572.031, 69.44, 0.483", "403.34, 573.075, 69.4434, 0.3842", "402.911, 574.018, 69.6018, 0.6168", "402.459, 574.844, 70.9192, 0.4944", "402.724, 575.612, 70.28, 0.2288", "402.818, 576.685, 70.847, 0.3588", "402.714, 577.627, 71.8122, 0.496", "402.688, 578.606, 71.5092, 0.4894", "402.574, 579.542, 72.7978, 0.483", "402.424, 580.294, 71.4283, 0.6564", "401.925, 581.127, 71.8906, 0.483", "401.665, 581.906, 73.2018, 0.393", "401.292, 582.766, 72.3383, 0.607", "400.697, 583.326, 72.6219, 0.496", "400.262, 584.009, 71.7886, 0.582", "399.671, 584.895, 71.549, 0.3952", "399.026, 585.615, 71.8964, 0.661", "398.526, 586.03, 72.4646, 0.707", "397.818, 586.739, 73.2693, 0.5756", "397.228, 587.445, 74.2, 0.231", "396.759, 588.343, 74.5158, 0.4068", "396.515, 589.231, 75.9139, 0.3326", "396.01, 589.949, 76.4915, 0.3326", "395.608, 590.513, 75.3245, 0.4048", "395.444, 591.408, 76.1592, 0.4832", "394.936, 592.34, 76.72, 0.3438", "394.441, 593.194, 76.0477, 0.4576", "394.078, 594.12, 75.3819, 0.2642", "393.73, 595.193, 75.32, 0.2288", "393.261, 596.221, 75.6, 0.2382", "392.897, 597.034, 74.3571, 0.3242", "392.609, 597.814, 73.9763, 0.253", "392.49, 598.047, 76.5755, 0.3416", "392.299, 598.938, 78.2247, 0.356", "392.185, 599.51, 80.2309, 0.301", "391.877, 600.232, 80.7022, 0.5848", "392.145, 601.224, 81.7113, 0.2808", "391.706, 602.244, 81.4783, 0.305", "391.255, 603.284, 81.2, 0.3084", "391.01, 604.294, 81.4909, 0.2806", "391.134, 605.285, 81.3128, 0.4322", "390.953, 604.718, 79.4783, 0.2358", "390.348, 604.375, 77.5883, 0.2934", "389.959, 605.036, 76.3269, 0.2634", "389.426, 605.866, 75.929, 0.2288", "388.896, 606.668, 77.2758, 0.2288", "388.612, 607.702, 77.84, 0.2288", "387.692, 608.314, 77.84, 0.2288", "387.021, 609.159, 77.84, 0.2288", "387.015, 610.302, 77.8683, 0.2288", "385.983, 610.438, 78.12, 0.2288", "385.056, 610.8, 78.6234, 0.2288", "384.841, 611.828, 78.12, 0.2288", "384.351, 612.71, 78.3835, 0.2872", "383.812, 613.579, 79.3811, 0.2962", "383.289, 614.392, 79.52, 0.2288", "382.474, 615.187, 79.52, 0.2288", "381.651, 615.951, 79.52, 0.2288", "381.638, 617.095, 79.52, 0.2288", "381.116, 617.936, 79.52, 0.3136", "380.338, 618.714, 79.52, 0.6356", "379.922, 619.055, 77.978, 0.476", "379.922, 619.813, 77.2618, 0.5428", "379.579, 620.396, 76.3417, 0.2288", "379.365, 621.384, 76.0718, 0.2992", "379.095, 622.48, 75.9637, 0.2796", "378.898, 623.51, 76.8379, 0.3036", "378.563, 624.543, 77.0479, 0.4576", "378.521, 625.636, 77.406, 0.3482", "378.166, 626.26, 77.56, 0.3304", "378.201, 627.255, 77.6642, 0.5422", "378.115, 628.282, 76.8062, 0.3948", "378.23, 628.857, 78.657, 0.2288", "378.465, 629.516, 80.0576, 0.2288", "377.99, 630.258, 81.1964, 0.2288", "378.159, 631.066, 79.8216, 0.326", "378.277, 631.903, 78.6934, 0.5628", "377.872, 632.553, 79.8596, 0.2806", "377.339, 633.117, 80.9444, 0.2354", "377.345, 633.781, 79.8062, 0.6712", "376.631, 634.416, 80.6268, 0.3372", "376.033, 635.235, 80.666, 0.2288", "375.804, 635.951, 82.32, 0.343", "374.874, 636.183, 81.7068, 0.3904", "374.556, 636.75, 80.4252, 0.3338", "374.889, 637.437, 80.08, 0.4576" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "413.213, 549.12, 63.84, 0.6864", "413.785, 548.891, 63.84, 0.4576" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_60", "dend_51", "dend_42", "dend_41", "dend_34", "dend_25", "dend_0", "dend_57", "dend_52", "dend_46", "dend_43", "dend_36", "dend_35", "dend_33", "dend_26", "dend_20", "dend_1", "dend_59", "dend_58", "dend_54", "dend_53", "dend_50", "dend_47", "dend_45", "dend_44", "dend_38", "dend_37", "dend_28", "dend_27", "dend_22", "dend_21", "dend_11", "dend_2", "dend_56", "dend_55", "dend_49", "dend_48", "dend_40", "dend_39", "dend_32", "dend_29", "dend_24", "dend_23", "dend_13", "dend_12", "dend_6", "dend_3", "dend_31", "dend_30", "dend_19", "dend_14", "dend_10", "dend_7", "dend_5", "dend_4", "dend_18", "dend_15", "dend_9", "dend_8", "dend_17", "dend_16" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19049",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.22"
  }, {
    "group" : "axon",
    "value" : "1.22"
  }, {
    "group" : "dend",
    "value" : "1.22"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "80.33"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "2.2325581E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.027628997",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.13506634E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.05482903",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.8501777",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "5.027294E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.002284526",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.5095995E-4",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.6322225E-6",
    "erev" : "-92.10467"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "9.839851E-4",
    "erev" : "-92.10467"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "2.0048444E-6",
    "erev" : "-92.10467"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "2.297595E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0035041834",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_473465774

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_60, id: dend_60, parent: soma_0
create dend_60
public dend_60
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_57, id: dend_57, parent: dend_51
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_60, dend_51, dend_42, dend_41, dend_34, dend_25, dend_0, dend_57, dend_52, dend_46, dend_43, dend_36, dend_35, dend_33, dend_26, dend_20, dend_1, dend_59, dend_58, dend_54, dend_53, dend_50, dend_47, dend_45, dend_44, dend_38, dend_37, dend_28, dend_27, dend_22, dend_21, dend_11, dend_2, dend_56, dend_55, dend_49, dend_48, dend_40, dend_39, dend_32, dend_29, dend_24, dend_23, dend_13, dend_12, dend_6, dend_3, dend_31, dend_30, dend_19, dend_14, dend_10, dend_7, dend_5, dend_4, dend_18, dend_15, dend_9, dend_8, dend_17, dend_16]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_19049, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_19049
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_60(0), soma_0(0.5)
    connect dend_51(0), soma_0(0.5)
    connect dend_42(0), soma_0(0.5)
    connect dend_41(0), soma_0(0.5)
    connect dend_34(0), soma_0(0.5)
    connect dend_25(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_57(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 412.885, 474.632, 30.9243, 19.7438 ) }
    soma_0 { pt3dadd( 422.757, 474.632, 30.9243, 19.7438 ) }
    soma_0 { pt3dadd( 432.629, 474.632, 30.9243, 19.7438 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 422.757, 474.632, 30.9243, 1.0 ) }
    axon_0 { pt3dadd( 428.598, 488.448, 30.9243, 1.0 ) }
    axon_0 { pt3dadd( 434.44, 502.264, 30.9243, 1.0 ) }
    // Section: dend_60, id: dend_60, parent: soma_0 (entry count 6/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 427.737, 481.15, 26.7278, 0.4624 ) }
    dend_60 { pt3dadd( 428.417, 482.04, 26.1549, 0.4596 ) }
    dend_60 { pt3dadd( 428.54, 482.72, 25.6341, 0.5458 ) }
    dend_60 { pt3dadd( 427.736, 483.173, 24.6545, 0.9366 ) }
    dend_60 { pt3dadd( 426.855, 483.792, 24.6826, 0.5786 ) }
    dend_60 { pt3dadd( 426.706, 483.431, 22.7287, 0.3414 ) }
    dend_60 { pt3dadd( 426.705, 484.426, 22.12, 0.2288 ) }
    dend_60 { pt3dadd( 426.026, 484.624, 21.402, 0.7186 ) }
    dend_60 { pt3dadd( 426.11, 485.658, 22.1511, 0.3374 ) }
    dend_60 { pt3dadd( 425.838, 486.417, 21.2327, 0.4552 ) }
    dend_60 { pt3dadd( 425.978, 486.107, 18.8608, 0.4258 ) }
    dend_60 { pt3dadd( 425.742, 487.175, 19.1451, 0.7258 ) }
    dend_60 { pt3dadd( 425.86, 488.273, 19.6, 0.4794 ) }
    dend_60 { pt3dadd( 426.141, 489.21, 19.6248, 0.4628 ) }
    dend_60 { pt3dadd( 426.338, 490.149, 20.1515, 0.3884 ) }
    dend_60 { pt3dadd( 426.21, 491.109, 19.0866, 0.396 ) }
    dend_60 { pt3dadd( 426.962, 491.62, 20.1757, 0.4036 ) }
    dend_60 { pt3dadd( 427.284, 492.187, 18.8524, 0.407 ) }
    dend_60 { pt3dadd( 427.17, 492.912, 16.8424, 0.4576 ) }
    dend_60 { pt3dadd( 426.836, 493.911, 15.96, 0.4576 ) }
    dend_60 { pt3dadd( 426.29, 494.615, 15.68, 0.3938 ) }
    dend_60 { pt3dadd( 426.254, 495.691, 15.682, 0.5074 ) }
    dend_60 { pt3dadd( 426.818, 496.072, 14.7312, 0.322 ) }
    dend_60 { pt3dadd( 427.17, 496.621, 16.852, 0.3234 ) }
    dend_60 { pt3dadd( 426.483, 497.068, 17.92, 0.305 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 31/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 428.852, 479.788, 35.4976, 0.5724 ) }
    dend_51 { pt3dadd( 429.702, 480.508, 36.1357, 0.5848 ) }
    dend_51 { pt3dadd( 430.554, 481.227, 36.7735, 0.5974 ) }
    dend_51 { pt3dadd( 431.404, 481.947, 37.4116, 0.6098 ) }
    dend_51 { pt3dadd( 432.474, 482.282, 36.9552, 0.661 ) }
    dend_51 { pt3dadd( 433.327, 483.014, 36.4325, 0.6606 ) }
    dend_51 { pt3dadd( 433.873, 484.017, 36.4028, 0.6092 ) }
    dend_51 { pt3dadd( 434.124, 485.134, 36.419, 0.5334 ) }
    dend_51 { pt3dadd( 434.461, 486.226, 36.5229, 0.5096 ) }
    dend_51 { pt3dadd( 434.781, 487.294, 37.0916, 0.5638 ) }
    dend_51 { pt3dadd( 435.591, 488.095, 37.0877, 0.6938 ) }
    dend_51 { pt3dadd( 436.582, 488.601, 36.4708, 0.8152 ) }
    dend_51 { pt3dadd( 437.642, 489.033, 36.423, 0.8354 ) }
    dend_51 { pt3dadd( 438.735, 489.343, 36.5448, 0.7804 ) }
    dend_51 { pt3dadd( 439.623, 490.014, 37.1042, 0.6842 ) }
    dend_51 { pt3dadd( 440.246, 490.808, 38.3603, 0.661 ) }
    dend_51 { pt3dadd( 440.704, 491.846, 38.64, 0.6696 ) }
    dend_51 { pt3dadd( 441.385, 492.763, 38.6403, 0.7402 ) }
    dend_51 { pt3dadd( 442.159, 493.604, 38.6414, 0.7626 ) }
    dend_51 { pt3dadd( 442.848, 494.517, 38.6467, 0.75 ) }
    dend_51 { pt3dadd( 443.462, 495.481, 38.6758, 0.6452 ) }
    dend_51 { pt3dadd( 443.93, 496.518, 38.803, 0.4322 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 53/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 418.466, 467.496, 33.9556, 0.6342 ) }
    dend_42 { pt3dadd( 417.884, 466.526, 34.3675, 0.6548 ) }
    dend_42 { pt3dadd( 417.3, 465.555, 34.7794, 0.6754 ) }
    dend_42 { pt3dadd( 416.988, 464.505, 35.0, 0.7534 ) }
    dend_42 { pt3dadd( 416.487, 463.557, 34.4688, 0.8426 ) }
    dend_42 { pt3dadd( 416.378, 462.494, 34.9846, 1.0296 ) }
    dend_42 { pt3dadd( 416.289, 461.388, 35.56, 0.6864 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 60/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 419.276, 467.099, 29.8525, 0.576 ) }
    dend_41 { pt3dadd( 418.914, 466.035, 29.8799, 0.6082 ) }
    dend_41 { pt3dadd( 418.725, 464.984, 30.6384, 0.7016 ) }
    dend_41 { pt3dadd( 418.291, 464.053, 31.6226, 0.8142 ) }
    dend_41 { pt3dadd( 417.836, 463.016, 31.3841, 0.8552 ) }
    dend_41 { pt3dadd( 417.279, 462.261, 30.294, 0.7682 ) }
    dend_41 { pt3dadd( 417.102, 461.172, 30.2106, 0.5144 ) }
    dend_41 { pt3dadd( 416.394, 460.458, 29.96, 0.463 ) }
    dend_41 { pt3dadd( 415.583, 459.705, 30.2344, 0.5838 ) }
    dend_41 { pt3dadd( 414.834, 458.868, 30.4595, 0.551 ) }
    dend_41 { pt3dadd( 414.192, 458.516, 28.9699, 0.483 ) }
    dend_41 { pt3dadd( 413.103, 458.63, 28.9352, 0.3468 ) }
    dend_41 { pt3dadd( 411.97, 458.731, 28.8044, 0.483 ) }
    dend_41 { pt3dadd( 410.847, 458.852, 28.84, 0.3452 ) }
    dend_41 { pt3dadd( 410.124, 458.41, 27.3611, 0.5546 ) }
    dend_41 { pt3dadd( 409.116, 458.412, 26.9624, 0.4098 ) }
    dend_41 { pt3dadd( 408.296, 458.941, 27.1553, 0.4968 ) }
    dend_41 { pt3dadd( 408.167, 459.833, 26.2826, 0.452 ) }
    dend_41 { pt3dadd( 407.961, 460.894, 25.7032, 0.4146 ) }
    dend_41 { pt3dadd( 407.838, 461.48, 24.1997, 0.4694 ) }
    dend_41 { pt3dadd( 407.95, 461.581, 22.233, 0.3304 ) }
    dend_41 { pt3dadd( 407.795, 461.215, 20.44, 0.3814 ) }
    dend_41 { pt3dadd( 406.824, 461.588, 20.16, 0.483 ) }
    dend_41 { pt3dadd( 406.242, 462.08, 18.4664, 0.6828 ) }
    dend_41 { pt3dadd( 406.349, 463.162, 18.2, 0.377 ) }
    dend_41 { pt3dadd( 406.12, 464.215, 18.4514, 0.6142 ) }
    dend_41 { pt3dadd( 406.801, 464.836, 17.92, 0.2656 ) }
    dend_41 { pt3dadd( 407.035, 465.858, 17.4309, 0.4394 ) }
    dend_41 { pt3dadd( 406.959, 466.573, 19.04, 0.478 ) }
    dend_41 { pt3dadd( 407.073, 467.341, 18.4291, 0.356 ) }
    dend_41 { pt3dadd( 406.564, 467.098, 16.8289, 0.3814 ) }
    dend_41 { pt3dadd( 406.463, 468.116, 16.2241, 0.4288 ) }
    dend_41 { pt3dadd( 406.747, 469.054, 16.263, 0.4566 ) }
    dend_41 { pt3dadd( 407.097, 470.09, 16.3999, 0.4684 ) }
    dend_41 { pt3dadd( 406.63, 470.642, 17.6089, 0.4518 ) }
    dend_41 { pt3dadd( 406.255, 471.411, 16.938, 0.547 ) }
    dend_41 { pt3dadd( 406.241, 472.292, 17.7222, 0.2402 ) }
    dend_41 { pt3dadd( 406.554, 473.184, 16.312, 0.2916 ) }
    dend_41 { pt3dadd( 406.492, 474.246, 16.6613, 0.3056 ) }
    dend_41 { pt3dadd( 406.289, 474.618, 18.48, 0.3886 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_41 { pt3dadd( 406.047, 475.49, 18.2, 0.4912 ) }
    dend_41 { pt3dadd( 405.381, 475.855, 19.2646, 0.3264 ) }
    dend_41 { pt3dadd( 404.781, 476.619, 19.4667, 0.2904 ) }
    dend_41 { pt3dadd( 404.518, 477.288, 20.1055, 0.615 ) }
    dend_41 { pt3dadd( 404.175, 477.504, 22.3929, 0.3808 ) }
    dend_41 { pt3dadd( 403.832, 478.193, 21.4086, 0.568 ) }
    dend_41 { pt3dadd( 403.489, 478.77, 21.7315, 0.7228 ) }
    dend_41 { pt3dadd( 403.451, 479.069, 24.0831, 0.508 ) }
    dend_41 { pt3dadd( 403.888, 479.002, 26.4165, 0.4576 ) }
    dend_41 { pt3dadd( 403.906, 478.857, 28.5555, 0.3996 ) }
    dend_41 { pt3dadd( 403.607, 478.182, 30.1885, 0.304 ) }
    dend_41 { pt3dadd( 404.108, 478.292, 32.0995, 0.2802 ) }
    dend_41 { pt3dadd( 403.805, 478.992, 33.2209, 0.3322 ) }
    dend_41 { pt3dadd( 403.38, 479.903, 33.6011, 0.255 ) }
    dend_41 { pt3dadd( 402.654, 480.461, 32.4201, 0.4916 ) }
    dend_41 { pt3dadd( 402.221, 481.459, 32.5111, 0.521 ) }
    dend_41 { pt3dadd( 401.904, 482.294, 33.32, 0.5338 ) }
    dend_41 { pt3dadd( 401.226, 482.789, 31.8178, 0.4576 ) }
    dend_41 { pt3dadd( 400.838, 483.71, 32.0289, 0.2288 ) }
    dend_41 { pt3dadd( 400.362, 484.505, 31.08, 0.2814 ) }
    dend_41 { pt3dadd( 399.938, 485.533, 31.1668, 0.305 ) }
    dend_41 { pt3dadd( 399.523, 486.329, 31.7971, 0.3748 ) }
    dend_41 { pt3dadd( 399.158, 487.144, 33.1285, 0.2408 ) }
    dend_41 { pt3dadd( 398.72, 488.113, 33.4132, 0.4966 ) }
    dend_41 { pt3dadd( 398.352, 488.756, 35.2254, 0.2288 ) }
    dend_41 { pt3dadd( 397.66, 489.164, 34.8645, 0.2288 ) }
    dend_41 { pt3dadd( 397.004, 489.812, 34.1314, 0.2288 ) }
    dend_41 { pt3dadd( 396.968, 490.91, 33.6, 0.2288 ) }
    dend_41 { pt3dadd( 396.231, 491.629, 33.7257, 0.2516 ) }
    dend_41 { pt3dadd( 395.289, 492.032, 34.5072, 0.519 ) }
    dend_41 { pt3dadd( 394.736, 492.404, 36.2093, 0.4068 ) }
    dend_41 { pt3dadd( 394.091, 492.742, 37.508, 0.3462 ) }
    dend_41 { pt3dadd( 393.726, 493.591, 37.8367, 0.4376 ) }
    dend_41 { pt3dadd( 393.536, 494.611, 38.5389, 0.529 ) }
    dend_41 { pt3dadd( 393.423, 495.691, 39.2375, 0.4648 ) }
    dend_41 { pt3dadd( 393.054, 496.605, 40.2926, 0.5084 ) }
    dend_41 { pt3dadd( 392.142, 496.981, 39.7592, 0.3962 ) }
    dend_41 { pt3dadd( 391.235, 497.475, 40.04, 0.5078 ) }
    dend_41 { pt3dadd( 390.742, 497.395, 41.9535, 0.4214 ) }
    dend_41 { pt3dadd( 390.351, 497.713, 44.1986, 0.5226 ) }
    dend_41 { pt3dadd( 389.768, 498.09, 42.6964, 0.4948 ) }
    dend_41 { pt3dadd( 388.978, 498.473, 42.2909, 0.3032 ) }
    dend_41 { pt3dadd( 388.483, 499.343, 41.708, 0.2944 ) }
    dend_41 { pt3dadd( 387.763, 499.786, 40.9282, 0.2852 ) }
    dend_41 { pt3dadd( 387.93, 500.614, 41.72, 0.305 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 45/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 416.427, 469.898, 30.3276, 0.4516 ) }
    dend_34 { pt3dadd( 415.511, 469.213, 30.2414, 0.447 ) }
    dend_34 { pt3dadd( 414.596, 468.529, 30.1552, 0.4424 ) }
    dend_34 { pt3dadd( 413.68, 467.843, 30.0686, 0.438 ) }
    dend_34 { pt3dadd( 412.764, 467.158, 29.9824, 0.4334 ) }
    dend_34 { pt3dadd( 411.752, 466.704, 30.4394, 0.5262 ) }
    dend_34 { pt3dadd( 410.69, 466.365, 30.8, 0.5914 ) }
    dend_34 { pt3dadd( 409.786, 466.225, 31.1735, 0.5164 ) }
    dend_34 { pt3dadd( 408.86, 466.262, 31.8951, 0.5338 ) }
    dend_34 { pt3dadd( 408.56, 465.608, 30.4951, 0.4576 ) }
    dend_34 { pt3dadd( 407.661, 465.143, 30.24, 0.4964 ) }
    dend_34 { pt3dadd( 406.681, 464.694, 30.0476, 0.4576 ) }
    dend_34 { pt3dadd( 405.825, 464.053, 30.0328, 0.4124 ) }
    dend_34 { pt3dadd( 404.862, 463.892, 29.4, 0.4576 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 59/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 420.156, 482.347, 30.569, 0.7308 ) }
    dend_25 { pt3dadd( 420.211, 483.435, 29.9247, 0.6326 ) }
    dend_25 { pt3dadd( 419.974, 484.531, 29.6982, 0.589 ) }
    dend_25 { pt3dadd( 419.688, 485.638, 29.6803, 0.5848 ) }
    dend_25 { pt3dadd( 419.073, 486.589, 29.6817, 0.6702 ) }
    dend_25 { pt3dadd( 418.286, 487.417, 29.6867, 0.7292 ) }
    dend_25 { pt3dadd( 417.478, 488.227, 29.7066, 0.7586 ) }
    dend_25 { pt3dadd( 416.67, 489.036, 29.7912, 0.7412 ) }
    dend_25 { pt3dadd( 415.881, 489.829, 30.3414, 0.7154 ) }
    dend_25 { pt3dadd( 415.183, 490.556, 31.6322, 0.7118 ) }
    dend_25 { pt3dadd( 414.427, 491.372, 31.2474, 0.808 ) }
    dend_25 { pt3dadd( 413.538, 492.016, 30.4707, 0.9106 ) }
    dend_25 { pt3dadd( 412.83, 492.87, 29.8024, 0.9152 ) }
    dend_25 { pt3dadd( 412.095, 493.745, 29.7749, 0.8174 ) }
    dend_25 { pt3dadd( 411.648, 494.79, 30.0376, 0.6868 ) }
    dend_25 { pt3dadd( 411.683, 495.924, 29.6822, 0.661 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 75/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 423.306, 482.368, 35.2573, 0.4578 ) }
    dend_0 { pt3dadd( 424.163, 482.755, 36.6988, 0.4576 ) }
    dend_0 { pt3dadd( 425.054, 483.301, 37.8305, 0.5792 ) }
    dend_0 { pt3dadd( 425.679, 483.915, 39.6169, 0.7596 ) }
    dend_0 { pt3dadd( 425.802, 484.936, 40.8304, 1.144 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 80/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 434.44, 502.264, 30.9243, 1.0 ) }
    axon_1 { pt3dadd( 440.281, 516.08, 30.9243, 1.0 ) }
    axon_1 { pt3dadd( 446.122, 529.896, 30.9243, 1.0 ) }
    // Section: dend_57, id: dend_57, parent: dend_51 (entry count 83/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 443.93, 496.518, 38.803, 0.4322 ) }
    dend_57 { pt3dadd( 444.212, 496.784, 38.2595, 0.4374 ) }
    dend_57 { pt3dadd( 445.041, 497.396, 37.2966, 0.4472 ) }
    dend_57 { pt3dadd( 445.613, 498.06, 37.5511, 0.483 ) }
    dend_57 { pt3dadd( 446.543, 498.527, 37.3058, 0.4844 ) }
    dend_57 { pt3dadd( 447.415, 498.326, 38.4031, 0.7052 ) }
    dend_57 { pt3dadd( 448.072, 498.098, 40.1251, 0.449 ) }
    dend_57 { pt3dadd( 449.137, 498.098, 40.0823, 0.3304 ) }
    dend_57 { pt3dadd( 450.166, 498.133, 41.274, 0.4174 ) }
    dend_57 { pt3dadd( 451.152, 498.555, 42.0, 0.5592 ) }
    dend_57 { pt3dadd( 451.933, 499.12, 41.6038, 0.8086 ) }
    dend_57 { pt3dadd( 452.629, 499.024, 40.4124, 0.5344 ) }
    dend_57 { pt3dadd( 453.651, 499.237, 40.04, 0.6646 ) }
    dend_57 { pt3dadd( 454.771, 499.127, 39.8866, 0.483 ) }
    dend_57 { pt3dadd( 455.738, 499.354, 40.899, 0.5592 ) }
    dend_57 { pt3dadd( 456.695, 499.627, 40.6888, 0.4372 ) }
    dend_57 { pt3dadd( 457.551, 499.964, 39.8034, 0.7042 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_57 { pt3dadd( 458.514, 500.143, 40.2892, 0.4828 ) }
    dend_57 { pt3dadd( 459.364, 500.689, 40.3875, 0.5662 ) }
    dend_57 { pt3dadd( 460.263, 501.072, 39.48, 0.602 ) }
    dend_57 { pt3dadd( 461.021, 501.499, 39.2283, 0.5084 ) }
    dend_57 { pt3dadd( 461.833, 501.908, 40.32, 0.6142 ) }
    dend_57 { pt3dadd( 462.743, 502.486, 40.6042, 0.6246 ) }
    dend_57 { pt3dadd( 463.671, 502.882, 39.8532, 0.6772 ) }
    dend_57 { pt3dadd( 464.221, 503.323, 40.388, 0.565 ) }
    dend_57 { pt3dadd( 464.739, 503.815, 41.3143, 0.5636 ) }
    dend_57 { pt3dadd( 465.737, 504.047, 40.3519, 0.28 ) }
    dend_57 { pt3dadd( 466.622, 504.139, 41.7796, 0.556 ) }
    dend_57 { pt3dadd( 467.6, 504.035, 41.1634, 0.63 ) }
    dend_57 { pt3dadd( 468.571, 504.498, 41.172, 0.5848 ) }
    dend_57 { pt3dadd( 469.326, 505.162, 40.7226, 0.2828 ) }
    dend_57 { pt3dadd( 469.844, 505.753, 40.2276, 0.414 ) }
    dend_57 { pt3dadd( 470.467, 506.392, 40.04, 0.5776 ) }
    dend_57 { pt3dadd( 470.954, 507.298, 40.4897, 0.2796 ) }
    dend_57 { pt3dadd( 471.209, 507.643, 38.661, 0.2288 ) }
    dend_57 { pt3dadd( 472.02, 507.536, 39.6959, 0.4002 ) }
    dend_57 { pt3dadd( 472.922, 507.135, 40.6, 0.2892 ) }
    dend_57 { pt3dadd( 474.017, 507.135, 40.0386, 0.3434 ) }
    dend_57 { pt3dadd( 474.895, 507.66, 40.3819, 0.4576 ) }
    dend_57 { pt3dadd( 475.938, 507.508, 40.8498, 0.5002 ) }
    dend_57 { pt3dadd( 476.953, 507.917, 40.5177, 0.471 ) }
    dend_57 { pt3dadd( 477.997, 508.292, 40.6199, 0.3692 ) }
    dend_57 { pt3dadd( 478.75, 508.616, 41.72, 0.3814 ) }
    dend_57 { pt3dadd( 479.572, 509.31, 41.2283, 0.5322 ) }
    dend_57 { pt3dadd( 480.574, 509.565, 41.7712, 0.3814 ) }
    dend_57 { pt3dadd( 481.351, 510.082, 42.1252, 0.5388 ) }
    dend_57 { pt3dadd( 482.075, 510.478, 42.0532, 0.6094 ) }
    dend_57 { pt3dadd( 482.903, 510.883, 41.5713, 0.4426 ) }
    dend_57 { pt3dadd( 483.868, 511.402, 42.2769, 0.382 ) }
    dend_57 { pt3dadd( 484.915, 511.482, 42.6213, 0.3428 ) }
    dend_57 { pt3dadd( 485.999, 511.57, 43.3894, 0.4068 ) }
    dend_57 { pt3dadd( 487.024, 511.359, 43.12, 0.5266 ) }
    dend_57 { pt3dadd( 487.888, 510.699, 43.1354, 0.2542 ) }
    dend_57 { pt3dadd( 488.986, 510.598, 43.5182, 0.3158 ) }
    dend_57 { pt3dadd( 489.74, 511.217, 44.0339, 0.5506 ) }
    dend_57 { pt3dadd( 490.685, 511.593, 44.5589, 0.4994 ) }
    dend_57 { pt3dadd( 491.387, 511.893, 44.8, 0.2288 ) }
    dend_57 { pt3dadd( 492.326, 511.894, 45.3989, 0.3234 ) }
    dend_57 { pt3dadd( 493.431, 511.852, 45.92, 0.4084 ) }
    dend_57 { pt3dadd( 494.496, 512.151, 46.2501, 0.5964 ) }
    dend_57 { pt3dadd( 495.438, 512.054, 46.734, 0.4576 ) }
    dend_57 { pt3dadd( 496.293, 512.003, 47.343, 0.4226 ) }
    dend_57 { pt3dadd( 496.845, 512.711, 48.7043, 0.5526 ) }
    dend_57 { pt3dadd( 497.718, 513.243, 48.8393, 0.5562 ) }
    dend_57 { pt3dadd( 498.314, 514.029, 49.243, 0.2288 ) }
    dend_57 { pt3dadd( 498.421, 515.067, 49.5832, 0.5654 ) }
    dend_57 { pt3dadd( 498.476, 516.124, 49.1344, 0.726 ) }
    dend_57 { pt3dadd( 498.924, 517.054, 48.9054, 0.5082 ) }
    dend_57 { pt3dadd( 499.445, 517.86, 48.3412, 0.4576 ) }
    dend_57 { pt3dadd( 500.341, 517.768, 49.392, 0.5454 ) }
    dend_57 { pt3dadd( 501.406, 517.757, 50.1416, 0.5926 ) }
    dend_57 { pt3dadd( 502.513, 517.774, 50.0531, 0.2288 ) }
    dend_57 { pt3dadd( 503.566, 517.661, 50.6422, 0.2934 ) }
    dend_57 { pt3dadd( 504.687, 517.755, 50.6293, 0.5218 ) }
    dend_57 { pt3dadd( 505.755, 517.837, 51.5542, 0.5822 ) }
    dend_57 { pt3dadd( 506.76, 517.976, 51.6356, 0.6312 ) }
    dend_57 { pt3dadd( 507.66, 518.487, 52.4306, 0.669 ) }
    dend_57 { pt3dadd( 508.27, 518.655, 54.1733, 0.5156 ) }
    dend_57 { pt3dadd( 509.186, 518.904, 53.2753, 0.4428 ) }
    dend_57 { pt3dadd( 510.116, 518.611, 53.7354, 0.579 ) }
    dend_57 { pt3dadd( 511.132, 518.376, 53.3772, 0.4132 ) }
    dend_57 { pt3dadd( 512.239, 518.452, 53.2406, 0.2288 ) }
    dend_57 { pt3dadd( 513.355, 518.33, 53.6466, 0.2288 ) }
    dend_57 { pt3dadd( 514.461, 518.232, 54.04, 0.2288 ) }
    dend_57 { pt3dadd( 515.086, 517.976, 55.5008, 0.2288 ) }
    dend_57 { pt3dadd( 515.86, 517.431, 55.44, 0.248 ) }
    dend_57 { pt3dadd( 516.876, 517.197, 54.5583, 0.7406 ) }
    dend_57 { pt3dadd( 517.786, 517.404, 53.6466, 0.8512 ) }
    dend_57 { pt3dadd( 518.737, 517.716, 54.0764, 0.7916 ) }
    dend_57 { pt3dadd( 519.665, 518.084, 53.9798, 0.7454 ) }
    dend_57 { pt3dadd( 520.59, 518.508, 53.7883, 0.7704 ) }
    dend_57 { pt3dadd( 521.674, 518.827, 54.0781, 0.788 ) }
    dend_57 { pt3dadd( 522.801, 518.992, 54.2858, 0.7154 ) }
    dend_57 { pt3dadd( 523.824, 519.458, 54.4947, 0.5338 ) }
    dend_57 { pt3dadd( 524.892, 519.719, 54.04, 0.838 ) }
    dend_57 { pt3dadd( 525.89, 519.704, 54.6283, 0.989 ) }
    dend_57 { pt3dadd( 526.675, 519.334, 55.16, 0.6594 ) }
    dend_57 { pt3dadd( 527.677, 519.043, 55.0808, 0.3418 ) }
    dend_57 { pt3dadd( 528.735, 519.267, 54.5636, 0.625 ) }
    dend_57 { pt3dadd( 529.833, 519.377, 54.7924, 0.7384 ) }
    dend_57 { pt3dadd( 530.935, 519.49, 54.88, 0.838 ) }
    dend_57 { pt3dadd( 531.917, 519.812, 55.4434, 0.7512 ) }
    dend_57 { pt3dadd( 532.716, 520.402, 56.4332, 0.728 ) }
    dend_57 { pt3dadd( 533.647, 520.867, 56.553, 0.9088 ) }
    dend_57 { pt3dadd( 534.305, 521.464, 57.0609, 0.6864 ) }
    dend_57 { pt3dadd( 535.223, 521.98, 57.0581, 0.5466 ) }
    dend_57 { pt3dadd( 536.28, 522.308, 56.8221, 0.5934 ) }
    dend_57 { pt3dadd( 537.337, 522.509, 56.0655, 0.6798 ) }
    dend_57 { pt3dadd( 538.144, 522.942, 56.3584, 0.6484 ) }
    dend_57 { pt3dadd( 539.126, 523.23, 56.5127, 0.5868 ) }
    dend_57 { pt3dadd( 540.169, 523.317, 56.84, 0.7778 ) }
    dend_57 { pt3dadd( 541.218, 523.609, 56.464, 0.7942 ) }
    dend_57 { pt3dadd( 541.981, 524.165, 56.9184, 0.8244 ) }
    dend_57 { pt3dadd( 542.479, 524.899, 57.013, 0.563 ) }
    dend_57 { pt3dadd( 543.192, 525.565, 57.7539, 0.6532 ) }
    dend_57 { pt3dadd( 543.792, 526.513, 57.4552, 0.5642 ) }
    dend_57 { pt3dadd( 544.717, 527.121, 57.4, 0.4894 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_57 { pt3dadd( 545.261, 527.992, 58.457, 0.4068 ) }
    dend_57 { pt3dadd( 546.147, 528.585, 58.6992, 0.4322 ) }
    dend_57 { pt3dadd( 546.808, 529.336, 59.6106, 0.499 ) }
    dend_57 { pt3dadd( 547.649, 529.787, 58.6639, 0.5708 ) }
    dend_57 { pt3dadd( 548.493, 530.167, 58.6653, 0.6272 ) }
    dend_57 { pt3dadd( 549.083, 531.013, 59.2746, 0.7604 ) }
    dend_57 { pt3dadd( 549.836, 531.183, 60.76, 0.6356 ) }
    dend_57 { pt3dadd( 550.315, 531.88, 59.92, 0.4576 ) }
    dend_57 { pt3dadd( 551.434, 531.993, 59.6887, 0.724 ) }
    dend_57 { pt3dadd( 552.411, 532.357, 59.8265, 0.6966 ) }
    dend_57 { pt3dadd( 553.153, 532.997, 60.2437, 0.3462 ) }
    dend_57 { pt3dadd( 553.891, 533.715, 60.4122, 0.611 ) }
    dend_57 { pt3dadd( 554.851, 533.905, 60.0684, 0.7522 ) }
    dend_57 { pt3dadd( 555.928, 534.134, 60.4918, 0.8182 ) }
    dend_57 { pt3dadd( 556.878, 534.437, 60.9834, 0.7206 ) }
    dend_57 { pt3dadd( 557.778, 534.662, 60.9641, 0.552 ) }
    dend_57 { pt3dadd( 558.625, 535.14, 60.6315, 0.4222 ) }
    dend_57 { pt3dadd( 558.91, 535.697, 62.5909, 0.3518 ) }
    dend_57 { pt3dadd( 559.386, 536.307, 63.6339, 0.3048 ) }
    dend_57 { pt3dadd( 560.031, 536.72, 64.0741, 0.2288 ) }
    dend_57 { pt3dadd( 560.904, 537.011, 63.2654, 0.6146 ) }
    dend_57 { pt3dadd( 561.527, 537.519, 62.16, 0.6356 ) }
    dend_57 { pt3dadd( 562.285, 537.411, 63.8918, 0.4346 ) }
    dend_57 { pt3dadd( 563.214, 537.371, 64.1483, 0.5476 ) }
    dend_57 { pt3dadd( 564.25, 537.56, 63.6798, 0.3304 ) }
    dend_57 { pt3dadd( 564.953, 538.046, 63.483, 0.3902 ) }
    dend_57 { pt3dadd( 565.991, 538.366, 63.2136, 0.3754 ) }
    dend_57 { pt3dadd( 566.998, 538.618, 63.28, 0.6478 ) }
    dend_57 { pt3dadd( 567.883, 538.883, 63.0073, 0.6864 ) }
    dend_57 { pt3dadd( 568.586, 538.938, 64.9824, 0.5322 ) }
    dend_57 { pt3dadd( 569.306, 539.396, 65.5007, 0.2856 ) }
    dend_57 { pt3dadd( 570.007, 539.363, 63.6499, 0.3276 ) }
    dend_57 { pt3dadd( 570.94, 539.042, 64.0573, 0.4472 ) }
    dend_57 { pt3dadd( 571.768, 539.07, 65.4898, 0.492 ) }
    dend_57 { pt3dadd( 572.668, 539.229, 66.8763, 0.3102 ) }
    dend_57 { pt3dadd( 573.337, 539.846, 66.5697, 0.3974 ) }
    dend_57 { pt3dadd( 574.143, 540.197, 65.5805, 0.6096 ) }
    dend_57 { pt3dadd( 574.735, 540.898, 64.8225, 0.5088 ) }
    dend_57 { pt3dadd( 575.59, 541.406, 65.1722, 0.5662 ) }
    dend_57 { pt3dadd( 576.322, 542.129, 64.68, 0.531 ) }
    dend_57 { pt3dadd( 576.971, 542.972, 64.3434, 0.4652 ) }
    dend_57 { pt3dadd( 577.791, 543.684, 64.4655, 0.4012 ) }
    dend_57 { pt3dadd( 578.461, 544.08, 65.8, 0.4204 ) }
    dend_57 { pt3dadd( 579.3, 544.209, 64.2832, 0.4576 ) }
    dend_57 { pt3dadd( 580.176, 544.88, 63.84, 0.4082 ) }
    dend_57 { pt3dadd( 580.587, 545.574, 63.569, 0.4502 ) }
    dend_57 { pt3dadd( 580.923, 546.224, 64.68, 0.3892 ) }
    dend_57 { pt3dadd( 581.369, 546.921, 63.3511, 0.388 ) }
    dend_57 { pt3dadd( 582.21, 547.442, 63.0386, 0.4104 ) }
    dend_57 { pt3dadd( 582.807, 547.965, 64.4932, 0.536 ) }
    dend_57 { pt3dadd( 583.659, 548.469, 64.5702, 0.5592 ) }
    dend_57 { pt3dadd( 584.284, 549.224, 64.7209, 0.3234 ) }
    dend_57 { pt3dadd( 584.648, 549.661, 62.7833, 0.4058 ) }
    dend_57 { pt3dadd( 585.391, 550.18, 63.9548, 0.5286 ) }
    dend_57 { pt3dadd( 586.005, 550.695, 62.7917, 0.4322 ) }
    dend_57 { pt3dadd( 586.818, 551.286, 63.42, 0.483 ) }
    dend_57 { pt3dadd( 587.471, 551.704, 64.6862, 0.389 ) }
    dend_57 { pt3dadd( 588.078, 552.62, 64.4, 0.7056 ) }
    dend_57 { pt3dadd( 588.63, 553.103, 66.0517, 0.4576 ) }
    dend_57 { pt3dadd( 589.197, 553.889, 65.1896, 0.7684 ) }
    dend_57 { pt3dadd( 589.784, 554.504, 65.6958, 0.413 ) }
    dend_57 { pt3dadd( 590.372, 555.325, 65.5511, 0.4734 ) }
    dend_57 { pt3dadd( 590.973, 555.88, 65.2761, 0.356 ) }
    dend_57 { pt3dadd( 591.44, 556.527, 65.4147, 0.672 ) }
    dend_57 { pt3dadd( 592.216, 557.103, 64.9984, 0.6714 ) }
    dend_57 { pt3dadd( 592.854, 557.623, 65.9028, 0.2966 ) }
    dend_57 { pt3dadd( 593.4, 558.428, 66.0304, 0.4084 ) }
    dend_57 { pt3dadd( 593.957, 558.866, 64.2536, 0.4358 ) }
    dend_57 { pt3dadd( 594.316, 559.758, 64.5016, 0.5246 ) }
    dend_57 { pt3dadd( 594.69, 560.463, 65.8694, 0.5598 ) }
    dend_57 { pt3dadd( 594.918, 561.409, 67.2664, 0.6284 ) }
    dend_57 { pt3dadd( 595.325, 562.226, 68.2268, 0.5592 ) }
    dend_57 { pt3dadd( 596.186, 562.682, 69.2706, 0.5974 ) }
    dend_57 { pt3dadd( 596.933, 563.288, 70.2411, 0.3082 ) }
    dend_57 { pt3dadd( 598.025, 563.136, 69.7914, 0.4908 ) }
    dend_57 { pt3dadd( 598.861, 562.846, 70.2131, 0.6864 ) }
    dend_57 { pt3dadd( 599.433, 562.106, 71.2832, 0.3496 ) }
    dend_57 { pt3dadd( 600.312, 562.276, 71.9334, 0.4286 ) }
    dend_57 { pt3dadd( 601.229, 562.035, 71.491, 0.382 ) }
    dend_57 { pt3dadd( 601.912, 561.364, 72.8, 0.4576 ) }
    dend_57 { pt3dadd( 602.777, 560.657, 72.8, 0.5708 ) }
    dend_57 { pt3dadd( 603.587, 560.115, 73.36, 0.5848 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 82/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 443.93, 496.518, 38.803, 0.4322 ) }
    dend_52 { pt3dadd( 443.835, 497.355, 39.3072, 0.352 ) }
    dend_52 { pt3dadd( 443.393, 498.371, 39.0121, 0.3516 ) }
    dend_52 { pt3dadd( 443.258, 499.486, 38.7439, 0.4208 ) }
    dend_52 { pt3dadd( 443.207, 500.616, 39.097, 0.4768 ) }
    dend_52 { pt3dadd( 442.951, 501.705, 39.6514, 0.5286 ) }
    dend_52 { pt3dadd( 443.336, 502.751, 39.492, 0.5108 ) }
    dend_52 { pt3dadd( 443.983, 503.389, 37.8851, 0.4838 ) }
    dend_52 { pt3dadd( 444.865, 504.098, 37.5819, 0.483 ) }
    dend_52 { pt3dadd( 445.569, 504.992, 37.8423, 0.5082 ) }
    dend_52 { pt3dadd( 446.464, 505.645, 38.5364, 0.5592 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 93/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 416.289, 461.388, 35.56, 0.6864 ) }
    dend_46 { pt3dadd( 415.72, 460.992, 32.0191, 0.4292 ) }
    dend_46 { pt3dadd( 415.096, 460.46, 31.204, 0.3054 ) }
    dend_46 { pt3dadd( 414.176, 460.286, 31.6714, 0.3726 ) }
    dend_46 { pt3dadd( 413.454, 459.531, 32.3991, 0.5338 ) }
    dend_46 { pt3dadd( 413.128, 458.582, 31.3911, 0.5526 ) }
    dend_46 { pt3dadd( 412.091, 458.331, 31.64, 0.512 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_46 { pt3dadd( 411.348, 457.576, 31.6571, 0.2428 ) }
    dend_46 { pt3dadd( 410.377, 456.661, 31.7769, 0.4598 ) }
    dend_46 { pt3dadd( 409.474, 456.01, 31.1366, 0.51 ) }
    dend_46 { pt3dadd( 408.483, 455.45, 30.954, 0.5356 ) }
    dend_46 { pt3dadd( 407.452, 455.013, 31.5078, 0.5636 ) }
    dend_46 { pt3dadd( 406.446, 454.497, 31.8956, 0.6172 ) }
    dend_46 { pt3dadd( 405.524, 453.825, 31.8016, 0.6912 ) }
    dend_46 { pt3dadd( 404.539, 453.28, 31.3597, 0.7372 ) }
    dend_46 { pt3dadd( 403.545, 452.894, 30.3565, 0.7256 ) }
    dend_46 { pt3dadd( 402.524, 452.454, 29.7248, 0.6196 ) }
    dend_46 { pt3dadd( 401.446, 452.076, 29.6649, 0.4952 ) }
    dend_46 { pt3dadd( 400.407, 451.615, 29.5932, 0.4102 ) }
    dend_46 { pt3dadd( 399.575, 450.868, 29.2099, 0.443 ) }
    dend_46 { pt3dadd( 398.989, 450.032, 27.966, 0.5258 ) }
    dend_46 { pt3dadd( 398.376, 449.115, 27.2418, 0.6196 ) }
    dend_46 { pt3dadd( 397.92, 448.106, 26.8564, 0.6662 ) }
    dend_46 { pt3dadd( 397.86, 447.002, 27.3317, 0.6864 ) }
    dend_46 { pt3dadd( 397.754, 446.003, 28.6219, 0.6864 ) }
    dend_46 { pt3dadd( 397.383, 444.978, 29.1066, 0.6798 ) }
    dend_46 { pt3dadd( 396.743, 444.059, 28.6247, 0.6542 ) }
    dend_46 { pt3dadd( 395.92, 443.277, 28.3326, 0.6288 ) }
    dend_46 { pt3dadd( 395.016, 442.598, 27.9242, 0.6174 ) }
    dend_46 { pt3dadd( 394.097, 441.939, 27.8502, 0.6428 ) }
    dend_46 { pt3dadd( 393.268, 441.201, 28.1422, 0.6686 ) }
    dend_46 { pt3dadd( 392.688, 440.236, 27.7212, 0.6698 ) }
    dend_46 { pt3dadd( 392.17, 439.233, 27.44, 0.6186 ) }
    dend_46 { pt3dadd( 391.409, 438.396, 27.44, 0.5674 ) }
    dend_46 { pt3dadd( 390.5, 437.704, 27.44, 0.5514 ) }
    dend_46 { pt3dadd( 389.608, 436.987, 27.44, 0.6112 ) }
    dend_46 { pt3dadd( 388.645, 436.386, 27.4398, 0.6788 ) }
    dend_46 { pt3dadd( 387.619, 435.889, 27.4385, 0.7028 ) }
    dend_46 { pt3dadd( 386.761, 435.16, 27.4319, 0.6494 ) }
    dend_46 { pt3dadd( 386.155, 434.196, 27.3946, 0.5658 ) }
    dend_46 { pt3dadd( 385.703, 433.148, 27.2562, 0.5144 ) }
    dend_46 { pt3dadd( 385.311, 432.082, 27.2651, 0.4728 ) }
    dend_46 { pt3dadd( 384.85, 431.051, 27.6893, 0.4354 ) }
    dend_46 { pt3dadd( 384.39, 430.137, 28.742, 0.4068 ) }
    dend_46 { pt3dadd( 383.882, 429.245, 29.5313, 0.4202 ) }
    dend_46 { pt3dadd( 383.191, 428.532, 28.5984, 0.4322 ) }
    dend_46 { pt3dadd( 383.099, 427.81, 26.7569, 0.4118 ) }
    dend_46 { pt3dadd( 382.73, 426.814, 26.3402, 0.3856 ) }
    dend_46 { pt3dadd( 382.107, 425.856, 26.3364, 0.36 ) }
    dend_46 { pt3dadd( 381.363, 424.99, 26.3988, 0.313 ) }
    dend_46 { pt3dadd( 380.572, 424.187, 26.8468, 0.305 ) }
    dend_46 { pt3dadd( 380.112, 423.156, 27.0417, 0.396 ) }
    dend_46 { pt3dadd( 380.014, 422.052, 26.4505, 0.5216 ) }
    dend_46 { pt3dadd( 379.859, 420.923, 26.4801, 0.5802 ) }
    dend_46 { pt3dadd( 379.333, 419.954, 27.1438, 0.5378 ) }
    dend_46 { pt3dadd( 378.403, 419.31, 27.3235, 0.4838 ) }
    dend_46 { pt3dadd( 377.934, 418.523, 25.6676, 0.483 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 50/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 416.289, 461.388, 35.56, 0.6864 ) }
    dend_43 { pt3dadd( 416.198, 460.312, 34.9894, 0.5342 ) }
    dend_43 { pt3dadd( 416.276, 459.179, 34.9247, 0.56 ) }
    dend_43 { pt3dadd( 416.59, 458.29, 33.3556, 0.5864 ) }
    dend_43 { pt3dadd( 416.597, 457.252, 32.202, 0.6102 ) }
    dend_43 { pt3dadd( 416.399, 456.133, 31.9015, 0.6162 ) }
    dend_43 { pt3dadd( 416.315, 455.004, 31.7932, 0.6956 ) }
    dend_43 { pt3dadd( 416.735, 453.962, 31.3079, 0.8014 ) }
    dend_43 { pt3dadd( 417.329, 453.031, 30.5693, 0.918 ) }
    dend_43 { pt3dadd( 417.922, 452.096, 29.8757, 0.9406 ) }
    dend_43 { pt3dadd( 418.509, 451.127, 29.538, 0.9314 ) }
    dend_43 { pt3dadd( 418.893, 450.076, 29.0646, 0.8558 ) }
    dend_43 { pt3dadd( 418.948, 448.98, 28.2688, 0.788 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 63/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 404.862, 463.892, 29.4, 0.4576 ) }
    dend_36 { pt3dadd( 404.565, 464.062, 31.92, 0.2664 ) }
    dend_36 { pt3dadd( 403.638, 464.28, 31.8262, 0.3028 ) }
    dend_36 { pt3dadd( 402.979, 463.676, 31.2654, 0.2288 ) }
    dend_36 { pt3dadd( 402.358, 463.155, 30.3055, 0.5142 ) }
    dend_36 { pt3dadd( 401.791, 462.428, 29.4616, 0.5094 ) }
    dend_36 { pt3dadd( 401.267, 461.761, 30.9599, 0.4792 ) }
    dend_36 { pt3dadd( 400.376, 461.261, 31.8926, 0.4726 ) }
    dend_36 { pt3dadd( 399.332, 461.309, 31.36, 0.3244 ) }
    dend_36 { pt3dadd( 398.353, 461.132, 31.5582, 0.4464 ) }
    dend_36 { pt3dadd( 397.617, 460.99, 32.9708, 0.2302 ) }
    dend_36 { pt3dadd( 396.906, 460.92, 31.3888, 0.2288 ) }
    dend_36 { pt3dadd( 395.896, 460.924, 30.415, 0.2938 ) }
    dend_36 { pt3dadd( 395.292, 461.332, 28.9531, 0.2288 ) }
    dend_36 { pt3dadd( 394.222, 461.604, 28.56, 0.305 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 78/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 404.862, 463.892, 29.4, 0.4576 ) }
    dend_35 { pt3dadd( 405.264, 463.977, 29.0898, 0.3986 ) }
    dend_35 { pt3dadd( 406.006, 464.223, 29.6489, 0.356 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 81/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 411.683, 495.924, 29.6822, 0.661 ) }
    dend_33 { pt3dadd( 411.341, 496.446, 27.7303, 0.4772 ) }
    dend_33 { pt3dadd( 410.544, 496.291, 26.0322, 0.5084 ) }
    dend_33 { pt3dadd( 409.587, 496.044, 24.8813, 0.4736 ) }
    dend_33 { pt3dadd( 408.518, 496.097, 23.9699, 0.3956 ) }
    dend_33 { pt3dadd( 407.47, 496.02, 22.9708, 0.3178 ) }
    dend_33 { pt3dadd( 406.725, 496.056, 21.0298, 0.2928 ) }
    dend_33 { pt3dadd( 405.952, 495.891, 19.5008, 0.3358 ) }
    dend_33 { pt3dadd( 404.974, 495.558, 20.1121, 0.407 ) }
    dend_33 { pt3dadd( 403.894, 495.526, 20.2701, 0.4498 ) }
    dend_33 { pt3dadd( 402.833, 495.843, 19.7124, 0.4576 ) }
    dend_33 { pt3dadd( 402.079, 496.633, 19.2872, 0.4948 ) }
    dend_33 { pt3dadd( 401.377, 497.482, 18.5812, 0.5084 ) }
    dend_33 { pt3dadd( 400.53, 498.196, 17.9154, 0.528 ) }
    dend_33 { pt3dadd( 399.826, 499.059, 17.39, 0.4744 ) }
    dend_33 { pt3dadd( 399.016, 499.83, 16.8557, 0.4368 ) }
    dend_33 { pt3dadd( 398.032, 499.53, 17.0539, 0.3616 ) }
    dend_33 { pt3dadd( 396.978, 499.246, 16.2796, 0.356 ) }
    dend_33 { pt3dadd( 395.912, 499.544, 15.6056, 0.3812 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_33 { pt3dadd( 394.935, 499.566, 14.1523, 0.4066 ) }
    dend_33 { pt3dadd( 393.883, 499.482, 13.0777, 0.4322 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 2/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 411.683, 495.924, 29.6822, 0.661 ) }
    dend_26 { pt3dadd( 411.877, 496.521, 29.6876, 0.7088 ) }
    dend_26 { pt3dadd( 412.327, 497.57, 29.727, 0.8058 ) }
    dend_26 { pt3dadd( 412.816, 498.599, 29.9673, 0.839 ) }
    dend_26 { pt3dadd( 413.252, 499.653, 30.0328, 0.839 ) }
    dend_26 { pt3dadd( 413.421, 500.707, 29.2242, 0.7838 ) }
    dend_26 { pt3dadd( 413.439, 501.812, 28.5676, 0.781 ) }
    dend_26 { pt3dadd( 413.424, 502.924, 27.9225, 0.788 ) }
    dend_26 { pt3dadd( 413.336, 503.988, 26.9394, 0.8636 ) }
    dend_26 { pt3dadd( 413.15, 505.086, 26.4034, 0.9282 ) }
    dend_26 { pt3dadd( 413.341, 506.189, 26.3155, 1.0378 ) }
    dend_26 { pt3dadd( 413.586, 507.306, 26.2879, 1.146 ) }
    dend_26 { pt3dadd( 413.851, 508.417, 26.133, 1.2088 ) }
    dend_26 { pt3dadd( 414.022, 509.518, 25.5664, 1.1208 ) }
    dend_26 { pt3dadd( 414.279, 510.615, 25.7365, 0.931 ) }
    dend_26 { pt3dadd( 414.356, 511.715, 25.213, 0.7864 ) }
    dend_26 { pt3dadd( 414.379, 512.8, 24.3317, 0.7834 ) }
    dend_26 { pt3dadd( 414.523, 513.923, 24.1167, 0.8514 ) }
    dend_26 { pt3dadd( 414.486, 515.061, 24.2252, 0.9296 ) }
    dend_26 { pt3dadd( 414.221, 516.137, 24.8583, 0.9846 ) }
    dend_26 { pt3dadd( 414.058, 517.254, 25.2866, 1.0138 ) }
    dend_26 { pt3dadd( 414.436, 518.287, 25.8827, 0.9942 ) }
    dend_26 { pt3dadd( 414.962, 519.289, 26.2827, 0.923 ) }
    dend_26 { pt3dadd( 415.547, 520.271, 26.3239, 0.8924 ) }
    dend_26 { pt3dadd( 415.838, 521.372, 26.3447, 0.8898 ) }
    dend_26 { pt3dadd( 416.281, 522.424, 26.4655, 0.9128 ) }
    dend_26 { pt3dadd( 416.818, 523.402, 27.0591, 0.892 ) }
    dend_26 { pt3dadd( 417.489, 524.312, 27.4578, 0.843 ) }
    dend_26 { pt3dadd( 418.038, 525.31, 27.7157, 0.8152 ) }
    dend_26 { pt3dadd( 418.443, 526.366, 27.3426, 0.7626 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 32/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 425.802, 484.936, 40.8304, 1.144 ) }
    dend_20 { pt3dadd( 425.585, 486.104, 41.8589, 0.4692 ) }
    dend_20 { pt3dadd( 425.31, 487.204, 41.9499, 0.4472 ) }
    dend_20 { pt3dadd( 425.019, 488.305, 41.6878, 0.5238 ) }
    dend_20 { pt3dadd( 424.939, 489.325, 40.502, 0.6012 ) }
    dend_20 { pt3dadd( 425.16, 490.37, 39.5371, 0.6558 ) }
    dend_20 { pt3dadd( 425.326, 491.456, 38.7568, 0.661 ) }
    dend_20 { pt3dadd( 425.339, 492.593, 38.516, 0.661 ) }
    dend_20 { pt3dadd( 425.343, 493.701, 37.8496, 0.661 ) }
    dend_20 { pt3dadd( 425.356, 494.826, 37.3428, 0.7076 ) }
    dend_20 { pt3dadd( 425.45, 495.938, 36.7203, 0.7354 ) }
    dend_20 { pt3dadd( 425.57, 497.042, 37.2974, 0.786 ) }
    dend_20 { pt3dadd( 425.415, 498.152, 37.8224, 0.8374 ) }
    dend_20 { pt3dadd( 425.34, 499.28, 37.52, 0.8982 ) }
    dend_20 { pt3dadd( 425.348, 500.424, 37.52, 0.9068 ) }
    dend_20 { pt3dadd( 425.396, 501.567, 37.52, 0.8814 ) }
    dend_20 { pt3dadd( 425.601, 502.683, 37.5211, 0.8584 ) }
    dend_20 { pt3dadd( 426.008, 503.752, 37.5231, 0.8404 ) }
    dend_20 { pt3dadd( 426.569, 504.749, 37.5371, 0.8626 ) }
    dend_20 { pt3dadd( 426.954, 505.823, 37.6261, 0.888 ) }
    dend_20 { pt3dadd( 427.221, 506.911, 38.1769, 0.866 ) }
    dend_20 { pt3dadd( 427.515, 508.015, 38.1674, 0.8154 ) }
    dend_20 { pt3dadd( 427.651, 509.133, 37.6743, 0.7886 ) }
    dend_20 { pt3dadd( 427.806, 510.233, 38.3127, 0.788 ) }
    dend_20 { pt3dadd( 428.161, 511.312, 38.6344, 0.7626 ) }
    dend_20 { pt3dadd( 428.523, 512.398, 38.6109, 0.6356 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 58/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 425.802, 484.936, 40.8304, 1.144 ) }
    dend_1 { pt3dadd( 425.825, 485.726, 41.2084, 0.785 ) }
    dend_1 { pt3dadd( 426.038, 486.726, 42.4178, 0.7118 ) }
    dend_1 { pt3dadd( 426.486, 487.717, 43.2432, 0.689 ) }
    dend_1 { pt3dadd( 427.23, 488.517, 44.0317, 0.6398 ) }
    dend_1 { pt3dadd( 428.144, 489.194, 43.9726, 0.5648 ) }
    dend_1 { pt3dadd( 428.828, 489.987, 42.8896, 0.5592 ) }
    dend_1 { pt3dadd( 429.135, 490.908, 41.4282, 0.5834 ) }
    dend_1 { pt3dadd( 429.495, 491.967, 40.9021, 0.609 ) }
    dend_1 { pt3dadd( 429.834, 493.058, 40.8881, 0.6346 ) }
    dend_1 { pt3dadd( 429.921, 494.198, 40.9377, 0.6356 ) }
    dend_1 { pt3dadd( 429.975, 495.333, 41.2675, 0.66 ) }
    dend_1 { pt3dadd( 430.31, 496.221, 42.7988, 0.6108 ) }
    dend_1 { pt3dadd( 430.772, 497.238, 43.395, 0.5848 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 72/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 603.587, 560.115, 73.36, 0.5848 ) }
    dend_59 { pt3dadd( 604.032, 559.84, 73.4625, 0.4584 ) }
    dend_59 { pt3dadd( 604.417, 558.925, 73.4392, 0.3642 ) }
    dend_59 { pt3dadd( 604.869, 558.158, 72.8, 0.2288 ) }
    dend_59 { pt3dadd( 605.516, 557.515, 73.36, 0.2288 ) }
    dend_59 { pt3dadd( 605.885, 556.788, 74.6348, 0.327 ) }
    dend_59 { pt3dadd( 606.213, 556.007, 75.5087, 0.3944 ) }
    dend_59 { pt3dadd( 606.985, 555.351, 74.9818, 0.5434 ) }
    dend_59 { pt3dadd( 607.818, 554.663, 75.6, 0.4038 ) }
    dend_59 { pt3dadd( 608.922, 554.631, 75.8405, 0.4054 ) }
    dend_59 { pt3dadd( 609.641, 554.777, 77.644, 0.5904 ) }
    dend_59 { pt3dadd( 610.607, 554.944, 78.1068, 0.2288 ) }
    dend_59 { pt3dadd( 611.657, 554.777, 77.56, 0.483 ) }
    dend_59 { pt3dadd( 612.652, 554.522, 78.1046, 0.394 ) }
    dend_59 { pt3dadd( 613.505, 554.84, 78.2911, 0.4576 ) }
    dend_59 { pt3dadd( 614.125, 555.423, 78.1488, 0.3852 ) }
    dend_59 { pt3dadd( 615.046, 555.795, 78.9516, 0.433 ) }
    dend_59 { pt3dadd( 615.864, 555.87, 79.0454, 0.41 ) }
    dend_59 { pt3dadd( 616.71, 556.098, 79.8, 0.2288 ) }
    dend_59 { pt3dadd( 617.491, 556.385, 78.4311, 0.5472 ) }
    dend_59 { pt3dadd( 618.238, 557.014, 79.4825, 0.5364 ) }
    dend_59 { pt3dadd( 618.926, 557.593, 79.1078, 0.6864 ) }
    dend_59 { pt3dadd( 619.394, 557.881, 77.6376, 0.348 ) }
    dend_59 { pt3dadd( 620.033, 558.384, 75.9385, 0.377 ) }
    dend_59 { pt3dadd( 620.049, 558.958, 77.2643, 0.456 ) }
    dend_59 { pt3dadd( 620.576, 558.883, 79.3962, 0.661 ) }
    dend_59 { pt3dadd( 621.43, 558.934, 80.5414, 0.6172 ) }
    dend_59 { pt3dadd( 622.047, 559.537, 80.3701, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_59 { pt3dadd( 622.408, 559.16, 82.1534, 0.6148 ) }
    dend_59 { pt3dadd( 622.916, 558.397, 83.44, 0.4156 ) }
    dend_59 { pt3dadd( 623.706, 558.048, 82.9923, 0.4294 ) }
    dend_59 { pt3dadd( 624.552, 558.032, 81.76, 0.5848 ) }
    dend_59 { pt3dadd( 624.808, 559.026, 81.7698, 0.5612 ) }
    dend_59 { pt3dadd( 625.193, 559.741, 83.095, 0.568 ) }
    dend_59 { pt3dadd( 625.472, 560.424, 83.4968, 0.6654 ) }
    dend_59 { pt3dadd( 626.349, 560.568, 85.1385, 0.2778 ) }
    dend_59 { pt3dadd( 626.68, 561.555, 85.4011, 0.235 ) }
    dend_59 { pt3dadd( 626.66, 562.419, 84.0888, 0.3386 ) }
    dend_59 { pt3dadd( 627.172, 563.05, 85.1071, 0.468 ) }
    dend_59 { pt3dadd( 628.102, 563.201, 84.28, 0.377 ) }
    dend_59 { pt3dadd( 629.142, 563.252, 85.1138, 0.5338 ) }
    dend_59 { pt3dadd( 629.989, 563.636, 85.96, 0.3804 ) }
    dend_59 { pt3dadd( 630.921, 563.419, 85.12, 0.458 ) }
    dend_59 { pt3dadd( 631.909, 563.526, 85.2496, 0.4614 ) }
    dend_59 { pt3dadd( 632.576, 563.964, 83.4033, 0.4122 ) }
    dend_59 { pt3dadd( 633.341, 564.095, 84.2856, 0.35 ) }
    dend_59 { pt3dadd( 634.195, 564.214, 84.8716, 0.7244 ) }
    dend_59 { pt3dadd( 635.152, 564.279, 85.675, 0.4362 ) }
    dend_59 { pt3dadd( 635.862, 564.564, 85.4165, 0.5116 ) }
    dend_59 { pt3dadd( 636.667, 565.023, 86.2873, 0.5562 ) }
    dend_59 { pt3dadd( 637.101, 565.425, 86.2322, 0.6246 ) }
    dend_59 { pt3dadd( 637.907, 565.612, 87.7372, 0.3806 ) }
    dend_59 { pt3dadd( 638.581, 565.515, 86.998, 0.285 ) }
    dend_59 { pt3dadd( 639.253, 566.064, 86.24, 0.4576 ) }
    dend_59 { pt3dadd( 640.065, 566.208, 84.9304, 0.3006 ) }
    dend_59 { pt3dadd( 640.829, 566.509, 86.4853, 0.4616 ) }
    dend_59 { pt3dadd( 641.704, 566.902, 87.08, 0.4004 ) }
    dend_59 { pt3dadd( 642.482, 567.2, 86.8496, 0.4576 ) }
    dend_59 { pt3dadd( 643.405, 567.306, 87.7092, 0.3824 ) }
    dend_59 { pt3dadd( 644.413, 567.288, 87.026, 0.3744 ) }
    dend_59 { pt3dadd( 645.109, 566.963, 86.2873, 0.274 ) }
    dend_59 { pt3dadd( 645.965, 567.113, 87.0422, 0.4068 ) }
    dend_59 { pt3dadd( 646.998, 567.069, 87.4462, 0.5828 ) }
    dend_59 { pt3dadd( 648.109, 567.171, 87.6515, 0.3624 ) }
    dend_59 { pt3dadd( 648.515, 566.817, 89.2158, 0.2766 ) }
    dend_59 { pt3dadd( 649.435, 566.43, 88.7712, 0.3304 ) }
    dend_59 { pt3dadd( 650.37, 566.449, 89.8302, 0.4694 ) }
    dend_59 { pt3dadd( 651.325, 566.075, 88.9386, 0.554 ) }
    dend_59 { pt3dadd( 652.375, 565.849, 88.4523, 0.5262 ) }
    dend_59 { pt3dadd( 653.307, 565.448, 87.92, 0.4042 ) }
    dend_59 { pt3dadd( 654.09, 564.899, 88.4876, 0.3814 ) }
    dend_59 { pt3dadd( 654.877, 564.423, 87.8391, 0.2984 ) }
    dend_59 { pt3dadd( 655.735, 563.901, 87.5938, 0.5934 ) }
    dend_59 { pt3dadd( 656.356, 563.73, 87.1875, 0.6014 ) }
    dend_59 { pt3dadd( 657.189, 563.557, 86.8288, 0.5366 ) }
    dend_59 { pt3dadd( 658.132, 563.328, 87.579, 0.494 ) }
    dend_59 { pt3dadd( 658.999, 562.777, 87.9281, 0.457 ) }
    dend_59 { pt3dadd( 659.285, 562.236, 89.8929, 0.4724 ) }
    dend_59 { pt3dadd( 660.011, 561.767, 89.6294, 0.4576 ) }
    dend_59 { pt3dadd( 660.908, 561.475, 90.0869, 0.3304 ) }
    dend_59 { pt3dadd( 661.812, 561.041, 90.5915, 0.2762 ) }
    dend_59 { pt3dadd( 662.295, 560.226, 91.007, 0.4518 ) }
    dend_59 { pt3dadd( 663.255, 559.957, 91.3066, 0.265 ) }
    dend_59 { pt3dadd( 663.749, 559.168, 91.1789, 0.3062 ) }
    dend_59 { pt3dadd( 663.887, 558.384, 89.6972, 0.4734 ) }
    dend_59 { pt3dadd( 664.321, 557.718, 88.9473, 0.4572 ) }
    dend_59 { pt3dadd( 664.693, 557.002, 90.44, 0.3798 ) }
    dend_59 { pt3dadd( 665.259, 556.42, 90.9202, 0.356 ) }
    dend_59 { pt3dadd( 665.579, 555.927, 88.8731, 0.4576 ) }
    dend_59 { pt3dadd( 665.654, 554.932, 87.6123, 0.3092 ) }
    dend_59 { pt3dadd( 665.987, 554.216, 88.48, 0.5168 ) }
    dend_59 { pt3dadd( 666.549, 553.369, 89.32, 0.5848 ) }
    dend_59 { pt3dadd( 667.141, 552.681, 88.216, 0.2418 ) }
    dend_59 { pt3dadd( 667.711, 552.494, 89.9251, 0.3304 ) }
    dend_59 { pt3dadd( 667.557, 551.814, 91.306, 0.3172 ) }
    dend_59 { pt3dadd( 668.528, 551.702, 91.7006, 0.2288 ) }
    dend_59 { pt3dadd( 668.209, 550.836, 93.002, 0.356 ) }
    dend_59 { pt3dadd( 668.277, 549.87, 93.9879, 0.2708 ) }
    dend_59 { pt3dadd( 668.655, 549.083, 92.813, 0.6102 ) }
    dend_59 { pt3dadd( 668.002, 548.785, 94.1394, 0.356 ) }
    dend_59 { pt3dadd( 668.17, 548.179, 95.8098, 0.3716 ) }
    dend_59 { pt3dadd( 668.668, 547.518, 95.48, 0.4576 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 74/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 603.587, 560.115, 73.36, 0.5848 ) }
    dend_58 { pt3dadd( 603.918, 560.446, 72.8, 0.2542 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 76/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 446.464, 505.645, 38.5364, 0.5592 ) }
    dend_54 { pt3dadd( 446.732, 505.641, 38.8394, 0.3108 ) }
    dend_54 { pt3dadd( 447.298, 506.289, 38.08, 0.5762 ) }
    dend_54 { pt3dadd( 447.647, 506.688, 39.9697, 0.6784 ) }
    dend_54 { pt3dadd( 448.149, 507.385, 41.16, 0.5084 ) }
    dend_54 { pt3dadd( 448.156, 508.343, 40.88, 0.4236 ) }
    dend_54 { pt3dadd( 448.703, 509.207, 41.44, 0.5876 ) }
    dend_54 { pt3dadd( 449.033, 510.129, 40.6994, 0.5602 ) }
    dend_54 { pt3dadd( 449.25, 511.143, 40.3754, 0.2776 ) }
    dend_54 { pt3dadd( 449.785, 511.76, 40.9875, 0.7072 ) }
    dend_54 { pt3dadd( 449.821, 512.665, 41.977, 0.8192 ) }
    dend_54 { pt3dadd( 450.078, 513.292, 43.2415, 0.6472 ) }
    dend_54 { pt3dadd( 450.222, 514.251, 44.2229, 0.3814 ) }
    dend_54 { pt3dadd( 450.278, 515.181, 43.1371, 0.9452 ) }
    dend_54 { pt3dadd( 450.568, 516.093, 42.2495, 0.74 ) }
    dend_54 { pt3dadd( 450.579, 516.844, 40.6865, 0.4902 ) }
    dend_54 { pt3dadd( 450.998, 517.274, 42.8585, 0.7028 ) }
    dend_54 { pt3dadd( 451.688, 517.951, 43.3751, 0.8996 ) }
    dend_54 { pt3dadd( 452.223, 518.762, 42.9884, 0.7586 ) }
    dend_54 { pt3dadd( 452.449, 519.29, 41.8435, 0.5166 ) }
    dend_54 { pt3dadd( 453.156, 520.013, 40.7781, 0.245 ) }
    dend_54 { pt3dadd( 453.486, 520.768, 39.4772, 0.2288 ) }
    dend_54 { pt3dadd( 453.253, 521.099, 37.814, 0.6554 ) }
    dend_54 { pt3dadd( 453.601, 521.55, 38.9136, 0.6014 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_54 { pt3dadd( 454.47, 521.59, 40.2226, 0.6302 ) }
    dend_54 { pt3dadd( 454.482, 521.782, 41.9342, 0.2796 ) }
    dend_54 { pt3dadd( 454.096, 522.318, 43.6192, 0.4142 ) }
    dend_54 { pt3dadd( 454.595, 523.006, 45.08, 0.601 ) }
    dend_54 { pt3dadd( 455.379, 523.766, 44.8, 0.5104 ) }
    dend_54 { pt3dadd( 455.702, 524.595, 44.9529, 0.5384 ) }
    dend_54 { pt3dadd( 456.202, 525.576, 44.2484, 0.5592 ) }
    dend_54 { pt3dadd( 456.453, 526.621, 43.3222, 0.5538 ) }
    dend_54 { pt3dadd( 456.539, 527.664, 42.7868, 0.5394 ) }
    dend_54 { pt3dadd( 456.854, 528.584, 44.1815, 0.5528 ) }
    dend_54 { pt3dadd( 457.479, 529.302, 45.7092, 0.5206 ) }
    dend_54 { pt3dadd( 458.198, 530.073, 46.7228, 0.4622 ) }
    dend_54 { pt3dadd( 458.747, 531.034, 46.9336, 0.4068 ) }
    dend_54 { pt3dadd( 459.223, 532.0, 46.0796, 0.4226 ) }
    dend_54 { pt3dadd( 459.79, 532.47, 46.2633, 0.5394 ) }
    dend_54 { pt3dadd( 460.59, 533.168, 46.4834, 0.6526 ) }
    dend_54 { pt3dadd( 461.517, 533.836, 46.4968, 0.6844 ) }
    dend_54 { pt3dadd( 462.441, 534.51, 46.5735, 0.6396 ) }
    dend_54 { pt3dadd( 463.284, 535.23, 47.2396, 0.5156 ) }
    dend_54 { pt3dadd( 463.82, 536.211, 47.7795, 0.4838 ) }
    dend_54 { pt3dadd( 464.339, 537.194, 48.3692, 0.4582 ) }
    dend_54 { pt3dadd( 465.281, 537.548, 47.105, 0.5084 ) }
    dend_54 { pt3dadd( 466.254, 538.12, 47.5042, 0.5154 ) }
    dend_54 { pt3dadd( 467.119, 538.867, 47.6, 0.592 ) }
    dend_54 { pt3dadd( 467.895, 539.708, 47.6003, 0.6706 ) }
    dend_54 { pt3dadd( 468.566, 540.634, 47.6014, 0.7652 ) }
    dend_54 { pt3dadd( 469.238, 541.559, 47.6073, 0.7828 ) }
    dend_54 { pt3dadd( 469.787, 542.559, 47.6426, 0.7202 ) }
    dend_54 { pt3dadd( 470.105, 543.653, 47.8304, 0.5672 ) }
    dend_54 { pt3dadd( 470.272, 544.759, 48.265, 0.4228 ) }
    dend_54 { pt3dadd( 470.527, 545.854, 47.8134, 0.3594 ) }
    dend_54 { pt3dadd( 470.639, 546.989, 47.9534, 0.3894 ) }
    dend_54 { pt3dadd( 470.629, 548.132, 47.917, 0.4406 ) }
    dend_54 { pt3dadd( 470.552, 549.262, 48.0035, 0.4878 ) }
    dend_54 { pt3dadd( 470.332, 550.36, 47.4701, 0.5186 ) }
    dend_54 { pt3dadd( 470.28, 551.484, 47.3407, 0.5536 ) }
    dend_54 { pt3dadd( 470.563, 552.569, 47.8607, 0.5338 ) }
    dend_54 { pt3dadd( 471.002, 553.592, 48.4134, 0.5276 ) }
    dend_54 { pt3dadd( 471.481, 554.617, 48.3907, 0.5288 ) }
    dend_54 { pt3dadd( 471.738, 555.717, 48.3641, 0.5922 ) }
    dend_54 { pt3dadd( 472.033, 556.799, 48.8614, 0.6178 ) }
    dend_54 { pt3dadd( 472.304, 557.905, 48.886, 0.6276 ) }
    dend_54 { pt3dadd( 472.71, 558.97, 48.7108, 0.602 ) }
    dend_54 { pt3dadd( 473.221, 559.989, 48.6707, 0.5684 ) }
    dend_54 { pt3dadd( 473.786, 560.971, 48.44, 0.509 ) }
    dend_54 { pt3dadd( 474.308, 561.958, 48.2322, 0.449 ) }
    dend_54 { pt3dadd( 475.029, 562.834, 48.4932, 0.4322 ) }
    dend_54 { pt3dadd( 475.725, 563.716, 48.1863, 0.4506 ) }
    dend_54 { pt3dadd( 476.32, 564.661, 47.6171, 0.4922 ) }
    dend_54 { pt3dadd( 476.911, 565.625, 47.2279, 0.5272 ) }
    dend_54 { pt3dadd( 477.525, 566.56, 46.7054, 0.5496 ) }
    dend_54 { pt3dadd( 478.265, 567.424, 46.48, 0.5146 ) }
    dend_54 { pt3dadd( 478.973, 568.316, 46.48, 0.4344 ) }
    dend_54 { pt3dadd( 479.692, 569.154, 46.265, 0.2718 ) }
    dend_54 { pt3dadd( 480.159, 570.087, 46.2, 0.4362 ) }
    dend_54 { pt3dadd( 480.943, 570.806, 45.6378, 0.5232 ) }
    dend_54 { pt3dadd( 481.475, 571.65, 45.4171, 0.5296 ) }
    dend_54 { pt3dadd( 482.283, 572.028, 44.9288, 0.4634 ) }
    dend_54 { pt3dadd( 483.082, 572.615, 44.0182, 0.4906 ) }
    dend_54 { pt3dadd( 483.725, 573.511, 43.7464, 0.4756 ) }
    dend_54 { pt3dadd( 484.49, 574.246, 43.6621, 0.3874 ) }
    dend_54 { pt3dadd( 485.018, 575.143, 43.4372, 0.4678 ) }
    dend_54 { pt3dadd( 485.501, 576.038, 43.2457, 0.4664 ) }
    dend_54 { pt3dadd( 486.091, 576.919, 43.1875, 0.5328 ) }
    dend_54 { pt3dadd( 486.929, 577.601, 43.5, 0.4602 ) }
    dend_54 { pt3dadd( 487.964, 577.828, 43.4689, 0.3264 ) }
    dend_54 { pt3dadd( 488.903, 578.166, 43.68, 0.2288 ) }
    dend_54 { pt3dadd( 489.514, 579.029, 44.119, 0.4974 ) }
    dend_54 { pt3dadd( 490.114, 579.927, 43.7592, 0.404 ) }
    dend_54 { pt3dadd( 490.733, 580.793, 42.8932, 0.2288 ) }
    dend_54 { pt3dadd( 491.198, 581.311, 43.96, 0.2578 ) }
    dend_54 { pt3dadd( 491.35, 582.344, 43.3199, 0.3116 ) }
    dend_54 { pt3dadd( 491.783, 583.124, 42.9626, 0.4576 ) }
    dend_54 { pt3dadd( 492.25, 583.851, 43.68, 0.2288 ) }
    dend_54 { pt3dadd( 493.16, 584.489, 43.4694, 0.2288 ) }
    dend_54 { pt3dadd( 493.74, 585.411, 43.3798, 0.4056 ) }
    dend_54 { pt3dadd( 493.862, 586.501, 43.0186, 0.4218 ) }
    dend_54 { pt3dadd( 494.063, 587.612, 43.12, 0.2898 ) }
    dend_54 { pt3dadd( 494.182, 588.712, 42.6782, 0.3656 ) }
    dend_54 { pt3dadd( 494.628, 589.612, 42.1327, 0.5156 ) }
    dend_54 { pt3dadd( 495.089, 590.562, 41.7866, 0.305 ) }
    dend_54 { pt3dadd( 495.466, 591.537, 41.72, 0.2288 ) }
    dend_54 { pt3dadd( 496.059, 592.477, 41.72, 0.2288 ) }
    dend_54 { pt3dadd( 496.541, 593.468, 41.72, 0.2836 ) }
    dend_54 { pt3dadd( 496.919, 594.534, 41.72, 0.4268 ) }
    dend_54 { pt3dadd( 497.449, 595.224, 41.5324, 0.28 ) }
    dend_54 { pt3dadd( 497.925, 596.189, 41.0735, 0.3814 ) }
    dend_54 { pt3dadd( 498.337, 596.937, 40.8282, 0.3368 ) }
    dend_54 { pt3dadd( 498.62, 597.921, 39.8706, 0.3132 ) }
    dend_54 { pt3dadd( 498.998, 598.971, 40.0775, 0.2878 ) }
    dend_54 { pt3dadd( 499.437, 599.959, 40.8386, 0.2326 ) }
    dend_54 { pt3dadd( 499.672, 601.07, 40.6871, 0.2872 ) }
    dend_54 { pt3dadd( 500.099, 602.056, 40.04, 0.5206 ) }
    dend_54 { pt3dadd( 500.616, 602.894, 39.4831, 0.407 ) }
    dend_54 { pt3dadd( 500.951, 603.931, 40.0725, 0.3992 ) }
    dend_54 { pt3dadd( 501.11, 604.954, 39.6158, 0.2612 ) }
    dend_54 { pt3dadd( 501.509, 605.974, 40.021, 0.3538 ) }
    dend_54 { pt3dadd( 502.162, 606.758, 40.04, 0.517 ) }
    dend_54 { pt3dadd( 502.77, 607.481, 41.0192, 0.503 ) }
    dend_54 { pt3dadd( 502.801, 608.387, 42.0398, 0.4096 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_54 { pt3dadd( 502.687, 609.212, 43.2004, 0.3512 ) }
    dend_54 { pt3dadd( 502.605, 610.223, 42.7958, 0.3024 ) }
    dend_54 { pt3dadd( 502.216, 611.095, 43.7296, 0.4074 ) }
    dend_54 { pt3dadd( 502.223, 612.177, 43.4, 0.4466 ) }
    dend_54 { pt3dadd( 502.155, 613.171, 43.4148, 0.3868 ) }
    dend_54 { pt3dadd( 502.41, 614.149, 43.3908, 0.2542 ) }
    dend_54 { pt3dadd( 502.753, 614.83, 44.52, 0.2534 ) }
    dend_54 { pt3dadd( 503.328, 615.802, 44.52, 0.2288 ) }
    dend_54 { pt3dadd( 503.958, 616.745, 44.52, 0.2374 ) }
    dend_54 { pt3dadd( 504.491, 617.734, 44.52, 0.4488 ) }
    dend_54 { pt3dadd( 504.919, 618.589, 45.2318, 0.3928 ) }
    dend_54 { pt3dadd( 505.06, 619.578, 45.64, 0.4724 ) }
    dend_54 { pt3dadd( 505.486, 620.628, 45.6711, 0.665 ) }
    dend_54 { pt3dadd( 506.059, 621.504, 45.4958, 0.6956 ) }
    dend_54 { pt3dadd( 506.646, 622.351, 45.2718, 0.6484 ) }
    dend_54 { pt3dadd( 507.22, 623.28, 44.8, 0.3734 ) }
    dend_54 { pt3dadd( 507.474, 624.25, 45.33, 0.48 ) }
    dend_54 { pt3dadd( 507.882, 625.112, 45.299, 0.5338 ) }
    dend_54 { pt3dadd( 508.548, 625.75, 46.1031, 0.279 ) }
    dend_54 { pt3dadd( 508.516, 626.608, 45.6089, 0.384 ) }
    dend_54 { pt3dadd( 508.756, 627.699, 45.2169, 0.4972 ) }
    dend_54 { pt3dadd( 509.103, 628.77, 44.8333, 0.4092 ) }
    dend_54 { pt3dadd( 509.453, 629.706, 45.8746, 0.411 ) }
    dend_54 { pt3dadd( 509.54, 630.67, 45.6145, 0.5592 ) }
    dend_54 { pt3dadd( 509.785, 631.75, 45.6103, 0.558 ) }
    dend_54 { pt3dadd( 510.555, 632.568, 46.0132, 0.5338 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 26/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 446.464, 505.645, 38.5364, 0.5592 ) }
    dend_53 { pt3dadd( 447.268, 506.386, 38.6361, 0.5592 ) }
    dend_53 { pt3dadd( 448.152, 507.111, 38.6414, 0.5848 ) }
    dend_53 { pt3dadd( 449.108, 507.736, 38.6473, 0.5848 ) }
    dend_53 { pt3dadd( 450.188, 508.015, 38.6879, 0.5848 ) }
    dend_53 { pt3dadd( 451.308, 508.19, 38.9785, 0.6184 ) }
    dend_53 { pt3dadd( 452.381, 508.537, 39.4005, 0.6356 ) }
    dend_53 { pt3dadd( 453.479, 508.711, 39.1465, 0.618 ) }
    dend_53 { pt3dadd( 454.547, 508.713, 38.1805, 0.6102 ) }
    dend_53 { pt3dadd( 455.655, 508.691, 37.6082, 0.6102 ) }
    dend_53 { pt3dadd( 456.728, 509.017, 37.5172, 0.6102 ) }
    dend_53 { pt3dadd( 457.767, 509.495, 37.5032, 0.5534 ) }
    dend_53 { pt3dadd( 458.824, 509.931, 37.42, 0.5338 ) }
    dend_53 { pt3dadd( 459.919, 510.118, 36.8883, 0.5918 ) }
    dend_53 { pt3dadd( 461.024, 510.294, 36.3143, 0.6492 ) }
    dend_53 { pt3dadd( 462.087, 510.597, 35.6191, 0.6216 ) }
    dend_53 { pt3dadd( 463.156, 510.971, 35.3181, 0.5306 ) }
    dend_53 { pt3dadd( 464.284, 511.093, 35.28, 0.4878 ) }
    dend_53 { pt3dadd( 465.426, 511.04, 35.2794, 0.5038 ) }
    dend_53 { pt3dadd( 466.57, 511.025, 35.2761, 0.5084 ) }
    dend_53 { pt3dadd( 467.714, 511.026, 35.2542, 0.4876 ) }
    dend_53 { pt3dadd( 468.856, 511.028, 35.1047, 0.4622 ) }
    dend_53 { pt3dadd( 469.966, 511.045, 34.4602, 0.4576 ) }
    dend_53 { pt3dadd( 471.092, 511.183, 34.3487, 0.4366 ) }
    dend_53 { pt3dadd( 472.173, 511.431, 34.9658, 0.4322 ) }
    dend_53 { pt3dadd( 473.302, 511.509, 35.2744, 0.4322 ) }
    dend_53 { pt3dadd( 474.428, 511.69, 35.4413, 0.4972 ) }
    dend_53 { pt3dadd( 475.515, 511.962, 35.9794, 0.5302 ) }
    dend_53 { pt3dadd( 476.608, 512.271, 35.8159, 0.5786 ) }
    dend_53 { pt3dadd( 477.678, 512.601, 36.3054, 0.5396 ) }
    dend_53 { pt3dadd( 478.78, 512.893, 36.4924, 0.5338 ) }
    dend_53 { pt3dadd( 479.768, 513.457, 36.5873, 0.5116 ) }
    dend_53 { pt3dadd( 480.382, 514.403, 36.6019, 0.531 ) }
    dend_53 { pt3dadd( 481.236, 515.152, 36.6405, 0.4874 ) }
    dend_53 { pt3dadd( 482.318, 515.493, 36.7959, 0.4576 ) }
    dend_53 { pt3dadd( 483.417, 515.219, 36.3997, 0.51 ) }
    dend_53 { pt3dadd( 484.539, 515.436, 36.3972, 0.6636 ) }
    dend_53 { pt3dadd( 485.631, 515.776, 36.3815, 0.7626 ) }
    dend_53 { pt3dadd( 486.708, 516.158, 36.2804, 0.761 ) }
    dend_53 { pt3dadd( 487.747, 516.588, 35.7549, 0.7088 ) }
    dend_53 { pt3dadd( 488.758, 517.083, 35.2814, 0.631 ) }
    dend_53 { pt3dadd( 489.786, 517.583, 35.28, 0.5274 ) }
    dend_53 { pt3dadd( 490.866, 517.894, 35.2808, 0.4048 ) }
    dend_53 { pt3dadd( 491.939, 517.51, 35.2853, 0.3836 ) }
    dend_53 { pt3dadd( 493.08, 517.488, 35.3178, 0.4092 ) }
    dend_53 { pt3dadd( 494.187, 517.717, 35.5729, 0.4294 ) }
    dend_53 { pt3dadd( 495.214, 517.886, 36.5515, 0.4108 ) }
    dend_53 { pt3dadd( 496.328, 517.864, 35.9442, 0.4452 ) }
    dend_53 { pt3dadd( 497.412, 517.729, 35.28, 0.483 ) }
    dend_53 { pt3dadd( 498.527, 517.493, 35.28, 0.4682 ) }
    dend_53 { pt3dadd( 499.668, 517.46, 35.28, 0.4322 ) }
    dend_53 { pt3dadd( 500.791, 517.618, 35.28, 0.4474 ) }
    dend_53 { pt3dadd( 501.789, 518.104, 35.1756, 0.487 ) }
    dend_53 { pt3dadd( 502.262, 518.508, 33.0988, 0.305 ) }
    dend_53 { pt3dadd( 502.642, 519.376, 34.0228, 0.2346 ) }
    dend_53 { pt3dadd( 503.542, 519.262, 34.9068, 0.6076 ) }
    dend_53 { pt3dadd( 504.631, 519.249, 34.6114, 0.5464 ) }
    dend_53 { pt3dadd( 505.574, 519.605, 35.5118, 0.3442 ) }
    dend_53 { pt3dadd( 506.646, 519.806, 34.9233, 0.661 ) }
    dend_53 { pt3dadd( 507.759, 519.819, 34.8169, 0.5604 ) }
    dend_53 { pt3dadd( 508.819, 519.875, 34.72, 0.622 ) }
    dend_53 { pt3dadd( 509.829, 520.377, 34.3638, 0.4638 ) }
    dend_53 { pt3dadd( 510.678, 520.894, 34.8533, 0.4576 ) }
    dend_53 { pt3dadd( 511.099, 521.606, 35.3111, 0.4184 ) }
    dend_53 { pt3dadd( 512.105, 522.065, 35.364, 0.4576 ) }
    dend_53 { pt3dadd( 513.078, 522.603, 35.133, 0.5138 ) }
    dend_53 { pt3dadd( 513.984, 523.142, 34.9754, 0.5288 ) }
    dend_53 { pt3dadd( 514.737, 523.673, 34.6408, 0.8358 ) }
    dend_53 { pt3dadd( 515.737, 524.029, 35.24, 0.9624 ) }
    dend_53 { pt3dadd( 516.38, 524.641, 34.3311, 0.9024 ) }
    dend_53 { pt3dadd( 517.11, 525.249, 35.0, 0.8638 ) }
    dend_53 { pt3dadd( 517.889, 526.049, 35.3732, 0.6356 ) }
    dend_53 { pt3dadd( 518.779, 526.702, 35.1338, 0.4632 ) }
    dend_53 { pt3dadd( 519.516, 527.249, 34.277, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_53 { pt3dadd( 520.345, 527.601, 35.4679, 0.7884 ) }
    dend_53 { pt3dadd( 521.423, 527.895, 35.28, 0.6924 ) }
    dend_53 { pt3dadd( 522.414, 528.185, 36.3255, 0.2898 ) }
    dend_53 { pt3dadd( 523.26, 528.553, 35.1862, 0.5466 ) }
    dend_53 { pt3dadd( 524.216, 529.089, 35.0028, 0.8628 ) }
    dend_53 { pt3dadd( 525.257, 529.333, 35.0837, 0.736 ) }
    dend_53 { pt3dadd( 526.129, 529.329, 34.8636, 0.4576 ) }
    dend_53 { pt3dadd( 526.293, 529.46, 36.0805, 0.437 ) }
    dend_53 { pt3dadd( 526.699, 530.094, 36.024, 0.3304 ) }
    dend_53 { pt3dadd( 527.614, 530.473, 35.3228, 0.6142 ) }
    dend_53 { pt3dadd( 528.72, 530.618, 35.3027, 0.7422 ) }
    dend_53 { pt3dadd( 529.802, 530.807, 34.7407, 0.5764 ) }
    dend_53 { pt3dadd( 530.722, 531.046, 35.4645, 0.5084 ) }
    dend_53 { pt3dadd( 531.155, 531.833, 36.3647, 0.2576 ) }
    dend_53 { pt3dadd( 531.941, 532.302, 35.7081, 0.4576 ) }
    dend_53 { pt3dadd( 532.535, 533.04, 34.4848, 0.2462 ) }
    dend_53 { pt3dadd( 533.456, 532.912, 34.3042, 0.6596 ) }
    dend_53 { pt3dadd( 534.401, 533.333, 34.7144, 0.5802 ) }
    dend_53 { pt3dadd( 535.19, 533.682, 33.955, 0.4726 ) }
    dend_53 { pt3dadd( 535.632, 534.414, 35.296, 0.6356 ) }
    dend_53 { pt3dadd( 536.687, 534.565, 35.1263, 0.4322 ) }
    dend_53 { pt3dadd( 537.385, 534.899, 33.6, 0.6366 ) }
    dend_53 { pt3dadd( 538.417, 535.32, 33.1075, 0.5614 ) }
    dend_53 { pt3dadd( 539.497, 535.403, 32.7163, 0.4816 ) }
    dend_53 { pt3dadd( 540.293, 536.168, 32.76, 0.734 ) }
    dend_53 { pt3dadd( 541.084, 536.766, 33.3631, 0.5848 ) }
    dend_53 { pt3dadd( 542.015, 537.282, 33.8072, 0.3476 ) }
    dend_53 { pt3dadd( 542.37, 537.407, 31.6711, 0.5014 ) }
    dend_53 { pt3dadd( 543.152, 537.994, 31.6602, 0.6356 ) }
    dend_53 { pt3dadd( 544.041, 538.593, 31.64, 0.558 ) }
    dend_53 { pt3dadd( 544.812, 539.057, 32.76, 0.6864 ) }
    dend_53 { pt3dadd( 545.394, 539.63, 31.8324, 0.6588 ) }
    dend_53 { pt3dadd( 546.235, 539.838, 33.2993, 0.2942 ) }
    dend_53 { pt3dadd( 547.007, 539.666, 32.6561, 0.4806 ) }
    dend_53 { pt3dadd( 547.888, 540.16, 31.726, 0.6728 ) }
    dend_53 { pt3dadd( 548.963, 540.414, 32.0723, 0.6424 ) }
    dend_53 { pt3dadd( 550.007, 540.858, 31.7822, 0.5218 ) }
    dend_53 { pt3dadd( 550.987, 541.357, 32.2, 0.5408 ) }
    dend_53 { pt3dadd( 551.522, 542.074, 31.4474, 0.5138 ) }
    dend_53 { pt3dadd( 551.317, 542.987, 32.207, 0.3206 ) }
    dend_53 { pt3dadd( 551.768, 543.878, 31.229, 0.5898 ) }
    dend_53 { pt3dadd( 552.503, 544.504, 30.6292, 0.6764 ) }
    dend_53 { pt3dadd( 553.257, 545.092, 30.52, 0.594 ) }
    dend_53 { pt3dadd( 553.871, 545.993, 30.0667, 0.4176 ) }
    dend_53 { pt3dadd( 553.913, 546.657, 31.2746, 0.2288 ) }
    dend_53 { pt3dadd( 553.93, 546.946, 29.1357, 0.2288 ) }
    dend_53 { pt3dadd( 555.029, 547.061, 29.591, 0.2928 ) }
    dend_53 { pt3dadd( 555.674, 547.666, 30.4354, 0.5408 ) }
    dend_53 { pt3dadd( 556.742, 547.896, 30.24, 0.7796 ) }
    dend_53 { pt3dadd( 557.833, 547.902, 30.5808, 0.66 ) }
    dend_53 { pt3dadd( 558.867, 547.87, 31.36, 0.5496 ) }
    dend_53 { pt3dadd( 559.798, 548.297, 31.96, 0.5302 ) }
    dend_53 { pt3dadd( 560.312, 548.128, 33.9735, 0.3304 ) }
    dend_53 { pt3dadd( 560.909, 548.94, 34.2488, 0.405 ) }
    dend_53 { pt3dadd( 561.543, 549.554, 34.1984, 0.2676 ) }
    dend_53 { pt3dadd( 561.502, 549.883, 32.0312, 0.3506 ) }
    dend_53 { pt3dadd( 562.061, 550.837, 31.64, 0.438 ) }
    dend_53 { pt3dadd( 562.632, 551.647, 30.9957, 0.4068 ) }
    dend_53 { pt3dadd( 563.312, 552.451, 30.9056, 0.5016 ) }
    dend_53 { pt3dadd( 564.265, 552.673, 30.8787, 0.4176 ) }
    dend_53 { pt3dadd( 564.762, 553.237, 29.6932, 0.2796 ) }
    dend_53 { pt3dadd( 565.353, 553.911, 28.6367, 0.3214 ) }
    dend_53 { pt3dadd( 565.935, 554.344, 30.4478, 0.4778 ) }
    dend_53 { pt3dadd( 566.531, 555.017, 30.8207, 0.5084 ) }
    dend_53 { pt3dadd( 567.101, 555.693, 31.08, 0.5334 ) }
    dend_53 { pt3dadd( 567.966, 556.325, 31.5266, 0.281 ) }
    dend_53 { pt3dadd( 568.853, 556.622, 30.4511, 0.371 ) }
    dend_53 { pt3dadd( 569.542, 557.235, 30.0227, 0.5058 ) }
    dend_53 { pt3dadd( 570.443, 557.766, 30.7863, 0.5522 ) }
    dend_53 { pt3dadd( 571.092, 558.31, 30.7387, 0.6864 ) }
    dend_53 { pt3dadd( 571.542, 559.249, 30.3965, 0.5512 ) }
    dend_53 { pt3dadd( 572.09, 559.961, 31.0752, 0.6532 ) }
    dend_53 { pt3dadd( 572.761, 560.786, 31.227, 0.4756 ) }
    dend_53 { pt3dadd( 573.477, 561.567, 30.5908, 0.4368 ) }
    dend_53 { pt3dadd( 573.894, 562.39, 31.0248, 0.6294 ) }
    dend_53 { pt3dadd( 574.17, 563.072, 31.85, 0.3548 ) }
    dend_53 { pt3dadd( 574.583, 563.978, 31.4118, 0.5218 ) }
    dend_53 { pt3dadd( 574.878, 564.984, 30.7216, 0.5982 ) }
    dend_53 { pt3dadd( 575.379, 565.859, 29.9902, 0.2296 ) }
    dend_53 { pt3dadd( 575.318, 566.742, 30.3173, 0.2288 ) }
    dend_53 { pt3dadd( 575.758, 567.628, 31.08, 0.405 ) }
    dend_53 { pt3dadd( 576.467, 568.484, 31.4426, 0.4778 ) }
    dend_53 { pt3dadd( 577.096, 569.132, 32.3613, 0.4738 ) }
    dend_53 { pt3dadd( 577.869, 569.471, 30.8445, 0.4286 ) }
    dend_53 { pt3dadd( 578.727, 569.813, 29.2768, 0.3274 ) }
    dend_53 { pt3dadd( 579.651, 570.398, 29.3104, 0.2288 ) }
    dend_53 { pt3dadd( 580.482, 570.797, 30.231, 0.2346 ) }
    dend_53 { pt3dadd( 581.099, 571.428, 31.08, 0.3318 ) }
    dend_53 { pt3dadd( 581.277, 572.515, 31.3214, 0.5308 ) }
    dend_53 { pt3dadd( 581.81, 573.359, 30.9442, 0.4764 ) }
    dend_53 { pt3dadd( 582.41, 574.111, 30.457, 0.4996 ) }
    dend_53 { pt3dadd( 583.161, 574.829, 29.7598, 0.4358 ) }
    dend_53 { pt3dadd( 583.614, 575.659, 29.9774, 0.243 ) }
    dend_53 { pt3dadd( 584.026, 576.338, 29.1186, 0.2288 ) }
    dend_53 { pt3dadd( 584.798, 576.749, 29.1298, 0.2936 ) }
    dend_53 { pt3dadd( 585.423, 577.181, 29.6615, 0.5036 ) }
    dend_53 { pt3dadd( 586.1, 577.949, 29.1799, 0.6864 ) }
    dend_53 { pt3dadd( 586.934, 578.666, 29.7223, 0.5294 ) }
    dend_53 { pt3dadd( 587.617, 579.23, 28.5709, 0.3784 ) }
    dend_53 { pt3dadd( 588.319, 580.039, 28.8932, 0.429 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_53 { pt3dadd( 588.187, 581.003, 29.6562, 0.2348 ) }
    dend_53 { pt3dadd( 588.57, 581.701, 28.56, 0.2288 ) }
    dend_53 { pt3dadd( 589.176, 582.516, 28.2736, 0.3828 ) }
    dend_53 { pt3dadd( 589.633, 583.472, 27.4953, 0.5488 ) }
    dend_53 { pt3dadd( 590.293, 584.181, 26.4115, 0.458 ) }
    dend_53 { pt3dadd( 591.196, 584.657, 26.3702, 0.3678 ) }
    dend_53 { pt3dadd( 592.006, 584.814, 25.5065, 0.5584 ) }
    dend_53 { pt3dadd( 592.631, 585.376, 24.64, 0.292 ) }
    dend_53 { pt3dadd( 593.659, 585.717, 25.2417, 0.2288 ) }
    dend_53 { pt3dadd( 594.65, 586.166, 25.7539, 0.2288 ) }
    dend_53 { pt3dadd( 595.619, 585.992, 24.9539, 0.505 ) }
    dend_53 { pt3dadd( 596.684, 586.186, 25.2, 0.2392 ) }
    dend_53 { pt3dadd( 597.398, 585.728, 24.078, 0.4576 ) }
    dend_53 { pt3dadd( 598.1, 586.254, 24.0934, 0.4034 ) }
    dend_53 { pt3dadd( 599.044, 586.048, 24.345, 0.3576 ) }
    dend_53 { pt3dadd( 599.978, 585.575, 23.8619, 0.644 ) }
    dend_53 { pt3dadd( 601.084, 585.448, 23.5151, 0.485 ) }
    dend_53 { pt3dadd( 602.024, 585.322, 23.0952, 0.2634 ) }
    dend_53 { pt3dadd( 602.844, 585.826, 23.0651, 0.2764 ) }
    dend_53 { pt3dadd( 603.677, 585.971, 23.24, 0.3302 ) }
    dend_53 { pt3dadd( 604.747, 586.293, 23.24, 0.2288 ) }
    dend_53 { pt3dadd( 605.891, 586.311, 23.24, 0.2288 ) }
    dend_53 { pt3dadd( 606.851, 586.867, 23.1492, 0.3036 ) }
    dend_53 { pt3dadd( 607.526, 587.55, 22.8108, 0.6762 ) }
    dend_53 { pt3dadd( 608.428, 588.054, 22.4266, 0.563 ) }
    dend_53 { pt3dadd( 609.325, 588.489, 22.3325, 0.4576 ) }
    dend_53 { pt3dadd( 610.291, 588.88, 21.9188, 0.3168 ) }
    dend_53 { pt3dadd( 611.159, 589.274, 22.8862, 0.4322 ) }
    dend_53 { pt3dadd( 612.056, 589.688, 22.4266, 0.4576 ) }
    dend_53 { pt3dadd( 612.726, 589.961, 23.52, 0.2796 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 30/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 377.934, 418.523, 25.6676, 0.483 ) }
    dend_50 { pt3dadd( 376.963, 417.576, 25.4214, 0.3676 ) }
    dend_50 { pt3dadd( 375.96, 417.126, 26.0936, 0.426 ) }
    dend_50 { pt3dadd( 374.985, 416.749, 26.7413, 0.5108 ) }
    dend_50 { pt3dadd( 374.12, 416.17, 25.6814, 0.5766 ) }
    dend_50 { pt3dadd( 373.626, 415.982, 25.6868, 0.5432 ) }
    dend_50 { pt3dadd( 372.99, 415.426, 26.1932, 0.5142 ) }
    dend_50 { pt3dadd( 372.23, 414.627, 25.5083, 0.5482 ) }
    dend_50 { pt3dadd( 371.556, 413.809, 24.4643, 0.6 ) }
    dend_50 { pt3dadd( 370.865, 412.92, 24.2921, 0.6512 ) }
    dend_50 { pt3dadd( 370.114, 412.129, 25.0487, 0.661 ) }
    dend_50 { pt3dadd( 369.256, 411.474, 25.9573, 0.5974 ) }
    dend_50 { pt3dadd( 368.293, 410.881, 26.2657, 0.5204 ) }
    dend_50 { pt3dadd( 367.199, 410.579, 26.1617, 0.4868 ) }
    dend_50 { pt3dadd( 366.212, 410.308, 24.9934, 0.5292 ) }
    dend_50 { pt3dadd( 365.554, 410.015, 23.2448, 0.7586 ) }
    dend_50 { pt3dadd( 364.466, 409.967, 22.8936, 0.6068 ) }
    dend_50 { pt3dadd( 363.66, 409.359, 22.293, 0.436 ) }
    dend_50 { pt3dadd( 362.913, 409.446, 23.3197, 0.237 ) }
    dend_50 { pt3dadd( 362.073, 409.523, 22.5686, 0.4052 ) }
    dend_50 { pt3dadd( 361.287, 409.041, 21.4978, 0.6864 ) }
    dend_50 { pt3dadd( 360.686, 408.749, 20.1541, 0.7724 ) }
    dend_50 { pt3dadd( 360.089, 407.921, 20.4099, 0.593 ) }
    dend_50 { pt3dadd( 359.351, 407.453, 20.1316, 0.2796 ) }
    dend_50 { pt3dadd( 358.385, 407.043, 19.88, 0.549 ) }
    dend_50 { pt3dadd( 357.757, 406.344, 20.2357, 0.5012 ) }
    dend_50 { pt3dadd( 357.363, 405.452, 20.44, 0.3592 ) }
    dend_50 { pt3dadd( 357.026, 404.391, 20.44, 0.426 ) }
    dend_50 { pt3dadd( 356.918, 404.068, 18.0917, 0.498 ) }
    dend_50 { pt3dadd( 356.594, 403.389, 16.2126, 0.3738 ) }
    dend_50 { pt3dadd( 355.94, 403.136, 14.3152, 0.57 ) }
    dend_50 { pt3dadd( 354.974, 402.775, 13.465, 0.5742 ) }
    dend_50 { pt3dadd( 354.378, 402.155, 14.7833, 0.6568 ) }
    dend_50 { pt3dadd( 353.763, 401.223, 14.6926, 0.641 ) }
    dend_50 { pt3dadd( 352.883, 400.543, 14.8364, 0.7392 ) }
    dend_50 { pt3dadd( 352.887, 399.44, 14.7498, 0.473 ) }
    dend_50 { pt3dadd( 352.988, 398.451, 14.8634, 0.669 ) }
    dend_50 { pt3dadd( 353.318, 397.647, 15.68, 0.3814 ) }
    dend_50 { pt3dadd( 352.924, 396.681, 15.189, 0.5466 ) }
    dend_50 { pt3dadd( 352.155, 396.3, 13.7705, 0.6886 ) }
    dend_50 { pt3dadd( 351.56, 395.419, 13.44, 0.648 ) }
    dend_50 { pt3dadd( 350.865, 394.566, 13.16, 0.6102 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 72/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 377.934, 418.523, 25.6676, 0.483 ) }
    dend_47 { pt3dadd( 378.172, 418.84, 27.4228, 0.4068 ) }
    dend_47 { pt3dadd( 377.924, 418.103, 29.4297, 0.4052 ) }
    dend_47 { pt3dadd( 377.402, 417.114, 29.9334, 0.3834 ) }
    dend_47 { pt3dadd( 377.185, 416.008, 29.6988, 0.4166 ) }
    dend_47 { pt3dadd( 376.85, 415.025, 28.5732, 0.4902 ) }
    dend_47 { pt3dadd( 376.319, 414.031, 28.1168, 0.5376 ) }
    dend_47 { pt3dadd( 375.706, 413.101, 27.5255, 0.5632 ) }
    dend_47 { pt3dadd( 374.984, 412.214, 27.4451, 0.5968 ) }
    dend_47 { pt3dadd( 374.315, 411.289, 27.463, 0.6732 ) }
    dend_47 { pt3dadd( 373.543, 410.444, 27.5306, 0.7324 ) }
    dend_47 { pt3dadd( 372.85, 409.557, 27.872, 0.688 ) }
    dend_47 { pt3dadd( 372.356, 408.558, 28.4133, 0.6192 ) }
    dend_47 { pt3dadd( 371.952, 407.492, 28.56, 0.5764 ) }
    dend_47 { pt3dadd( 371.449, 406.466, 28.56, 0.5676 ) }
    dend_47 { pt3dadd( 370.897, 405.463, 28.56, 0.5848 ) }
    dend_47 { pt3dadd( 370.444, 404.428, 28.5606, 0.5934 ) }
    dend_47 { pt3dadd( 370.181, 403.316, 28.5631, 0.6102 ) }
    dend_47 { pt3dadd( 369.864, 402.218, 28.5802, 0.6102 ) }
    dend_47 { pt3dadd( 369.602, 401.106, 28.6978, 0.6102 ) }
    dend_47 { pt3dadd( 369.33, 400.0, 28.9514, 0.601 ) }
    dend_47 { pt3dadd( 369.085, 398.896, 28.887, 0.5848 ) }
    dend_47 { pt3dadd( 368.884, 397.785, 28.5718, 0.6048 ) }
    dend_47 { pt3dadd( 368.667, 396.665, 28.6381, 0.666 ) }
    dend_47 { pt3dadd( 368.6, 395.545, 29.0478, 0.7118 ) }
    dend_47 { pt3dadd( 368.618, 394.465, 29.9572, 0.6592 ) }
    dend_47 { pt3dadd( 368.742, 393.383, 30.6762, 0.5418 ) }
    dend_47 { pt3dadd( 368.932, 392.26, 30.9168, 0.461 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_47 { pt3dadd( 368.818, 391.185, 31.4384, 0.4666 ) }
    dend_47 { pt3dadd( 368.365, 390.182, 32.1527, 0.5324 ) }
    dend_47 { pt3dadd( 367.873, 389.159, 32.3548, 0.5964 ) }
    dend_47 { pt3dadd( 367.454, 388.109, 32.0253, 0.6484 ) }
    dend_47 { pt3dadd( 367.306, 387.026, 31.3751, 0.661 ) }
    dend_47 { pt3dadd( 367.528, 385.938, 30.9058, 0.6342 ) }
    dend_47 { pt3dadd( 367.819, 384.836, 30.7885, 0.5824 ) }
    dend_47 { pt3dadd( 367.726, 383.73, 30.7252, 0.5308 ) }
    dend_47 { pt3dadd( 367.346, 382.667, 30.3402, 0.5084 ) }
    dend_47 { pt3dadd( 366.835, 381.668, 29.8572, 0.4788 ) }
    dend_47 { pt3dadd( 366.004, 380.946, 29.7511, 0.4424 ) }
    dend_47 { pt3dadd( 365.029, 380.386, 30.1773, 0.3692 ) }
    dend_47 { pt3dadd( 364.547, 379.469, 30.5794, 0.314 ) }
    dend_47 { pt3dadd( 364.423, 378.499, 29.5277, 0.305 ) }
    dend_47 { pt3dadd( 364.436, 377.583, 28.6518, 0.353 ) }
    dend_47 { pt3dadd( 364.351, 376.607, 28.8781, 0.3818 ) }
    dend_47 { pt3dadd( 364.1, 375.634, 29.1488, 0.3012 ) }
    dend_47 { pt3dadd( 364.109, 374.501, 29.12, 0.2646 ) }
    dend_47 { pt3dadd( 363.805, 374.226, 27.5356, 0.458 ) }
    dend_47 { pt3dadd( 363.935, 373.247, 27.7282, 0.6036 ) }
    dend_47 { pt3dadd( 364.236, 372.222, 28.28, 0.4254 ) }
    dend_47 { pt3dadd( 364.124, 371.416, 27.0121, 0.4576 ) }
    dend_47 { pt3dadd( 364.147, 370.298, 27.1373, 0.5786 ) }
    dend_47 { pt3dadd( 364.135, 369.181, 26.8781, 0.5598 ) }
    dend_47 { pt3dadd( 364.136, 368.095, 27.5308, 0.6102 ) }
    dend_47 { pt3dadd( 364.18, 367.198, 27.1542, 0.6404 ) }
    dend_47 { pt3dadd( 363.866, 366.273, 28.0, 0.2708 ) }
    dend_47 { pt3dadd( 363.487, 365.277, 27.3418, 0.509 ) }
    dend_47 { pt3dadd( 363.723, 364.343, 27.4089, 0.3136 ) }
    dend_47 { pt3dadd( 363.644, 363.315, 26.8153, 0.7684 ) }
    dend_47 { pt3dadd( 363.334, 362.551, 26.6533, 0.6436 ) }
    dend_47 { pt3dadd( 363.332, 361.55, 26.04, 0.5782 ) }
    dend_47 { pt3dadd( 363.111, 360.431, 25.9654, 0.4272 ) }
    dend_47 { pt3dadd( 362.778, 359.437, 26.0089, 0.3814 ) }
    dend_47 { pt3dadd( 362.534, 358.655, 25.359, 0.3398 ) }
    dend_47 { pt3dadd( 362.18, 357.771, 26.1925, 0.356 ) }
    dend_47 { pt3dadd( 361.68, 356.926, 26.3334, 0.2972 ) }
    dend_47 { pt3dadd( 361.39, 355.916, 25.2752, 0.4978 ) }
    dend_47 { pt3dadd( 361.337, 355.009, 25.9502, 0.4388 ) }
    dend_47 { pt3dadd( 361.149, 354.134, 25.15, 0.5692 ) }
    dend_47 { pt3dadd( 361.146, 353.01, 24.9073, 0.5084 ) }
    dend_47 { pt3dadd( 361.046, 351.883, 24.6282, 0.5592 ) }
    dend_47 { pt3dadd( 361.092, 350.943, 23.6132, 0.5234 ) }
    dend_47 { pt3dadd( 361.046, 349.913, 23.6159, 0.407 ) }
    dend_47 { pt3dadd( 361.419, 348.848, 23.52, 0.305 ) }
    dend_47 { pt3dadd( 361.504, 347.789, 22.6981, 0.4532 ) }
    dend_47 { pt3dadd( 361.226, 346.766, 22.8452, 0.5748 ) }
    dend_47 { pt3dadd( 361.046, 345.833, 22.3895, 0.4322 ) }
    dend_47 { pt3dadd( 361.046, 344.869, 22.8028, 0.2474 ) }
    dend_47 { pt3dadd( 361.046, 343.727, 22.68, 0.2288 ) }
    dend_47 { pt3dadd( 361.136, 342.691, 23.1474, 0.2374 ) }
    dend_47 { pt3dadd( 360.844, 341.96, 23.7059, 0.3814 ) }
    dend_47 { pt3dadd( 360.614, 341.191, 24.92, 0.4916 ) }
    dend_47 { pt3dadd( 360.354, 340.1, 24.7633, 0.4482 ) }
    dend_47 { pt3dadd( 360.138, 339.003, 24.64, 0.4424 ) }
    dend_47 { pt3dadd( 359.955, 337.958, 24.4173, 0.44 ) }
    dend_47 { pt3dadd( 359.78, 336.849, 24.36, 0.3304 ) }
    dend_47 { pt3dadd( 359.494, 335.762, 24.5845, 0.4116 ) }
    dend_47 { pt3dadd( 358.905, 334.864, 24.2885, 0.3304 ) }
    dend_47 { pt3dadd( 358.644, 333.9, 23.5301, 0.2288 ) }
    dend_47 { pt3dadd( 358.441, 332.914, 23.8479, 0.3502 ) }
    dend_47 { pt3dadd( 358.183, 331.836, 24.0582, 0.3992 ) }
    dend_47 { pt3dadd( 358.186, 331.1, 23.5789, 0.355 ) }
    dend_47 { pt3dadd( 358.083, 330.387, 25.0445, 0.4206 ) }
    dend_47 { pt3dadd( 358.605, 330.044, 26.127, 0.5574 ) }
    dend_47 { pt3dadd( 359.218, 329.392, 26.88, 0.2288 ) }
    dend_47 { pt3dadd( 359.653, 328.706, 28.0339, 0.2472 ) }
    dend_47 { pt3dadd( 360.217, 327.802, 28.091, 0.305 ) }
    dend_47 { pt3dadd( 360.829, 327.112, 27.7337, 0.2826 ) }
    dend_47 { pt3dadd( 361.709, 326.657, 27.902, 0.3858 ) }
    dend_47 { pt3dadd( 362.425, 326.362, 26.9389, 0.2822 ) }
    dend_47 { pt3dadd( 363.481, 326.196, 26.88, 0.2288 ) }
    dend_47 { pt3dadd( 364.18, 325.341, 26.5322, 0.2288 ) }
    dend_47 { pt3dadd( 364.663, 324.977, 27.3674, 0.4236 ) }
    dend_47 { pt3dadd( 365.483, 324.464, 26.6611, 0.367 ) }
    dend_47 { pt3dadd( 366.35, 324.055, 25.6656, 0.3622 ) }
    dend_47 { pt3dadd( 367.229, 323.561, 25.2, 0.2288 ) }
    dend_47 { pt3dadd( 368.35, 323.412, 24.9288, 0.2288 ) }
    dend_47 { pt3dadd( 369.483, 323.291, 24.92, 0.2288 ) }
    dend_47 { pt3dadd( 370.478, 322.84, 25.2477, 0.3304 ) }
    dend_47 { pt3dadd( 371.501, 322.391, 25.48, 0.3438 ) }
    dend_47 { pt3dadd( 372.476, 322.227, 25.0139, 0.356 ) }
    dend_47 { pt3dadd( 373.518, 321.922, 25.1236, 0.3746 ) }
    dend_47 { pt3dadd( 374.379, 321.922, 23.8824, 0.356 ) }
    dend_47 { pt3dadd( 375.297, 321.693, 24.8926, 0.5114 ) }
    dend_47 { pt3dadd( 376.185, 321.705, 25.9157, 0.4068 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 86/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 418.948, 448.98, 28.2688, 0.788 ) }
    dend_45 { pt3dadd( 419.849, 448.633, 27.6069, 0.677 ) }
    dend_45 { pt3dadd( 420.878, 448.237, 26.8522, 0.5506 ) }
    dend_45 { pt3dadd( 421.609, 447.511, 26.7637, 0.7372 ) }
    dend_45 { pt3dadd( 421.825, 446.538, 26.32, 0.7364 ) }
    dend_45 { pt3dadd( 422.365, 445.824, 26.5224, 0.8666 ) }
    dend_45 { pt3dadd( 422.461, 445.121, 24.9652, 0.5786 ) }
    dend_45 { pt3dadd( 422.53, 444.38, 24.64, 0.5846 ) }
    dend_45 { pt3dadd( 422.526, 443.503, 24.08, 0.34 ) }
    dend_45 { pt3dadd( 422.365, 442.739, 25.512, 0.8646 ) }
    dend_45 { pt3dadd( 422.365, 441.621, 26.0073, 0.8494 ) }
    dend_45 { pt3dadd( 422.62, 440.534, 26.5258, 0.7252 ) }
    dend_45 { pt3dadd( 423.361, 439.87, 27.1841, 0.4298 ) }
    dend_45 { pt3dadd( 423.611, 439.131, 27.6269, 0.6102 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_45 { pt3dadd( 424.056, 438.28, 27.16, 0.462 ) }
    dend_45 { pt3dadd( 424.081, 437.467, 28.8719, 0.4164 ) }
    dend_45 { pt3dadd( 424.194, 436.443, 28.7384, 0.4842 ) }
    dend_45 { pt3dadd( 424.117, 435.333, 28.6966, 0.496 ) }
    dend_45 { pt3dadd( 424.652, 434.585, 28.3111, 0.356 ) }
    dend_45 { pt3dadd( 425.11, 433.972, 28.9509, 0.2288 ) }
    dend_45 { pt3dadd( 425.118, 432.949, 27.9227, 0.356 ) }
    dend_45 { pt3dadd( 425.232, 431.945, 27.126, 0.4372 ) }
    dend_45 { pt3dadd( 425.6, 430.921, 26.7586, 0.4996 ) }
    dend_45 { pt3dadd( 425.777, 429.957, 27.3632, 0.6034 ) }
    dend_45 { pt3dadd( 425.671, 429.142, 27.1463, 0.51 ) }
    dend_45 { pt3dadd( 426.026, 428.315, 26.8882, 0.5338 ) }
    dend_45 { pt3dadd( 425.928, 427.377, 26.0765, 0.6312 ) }
    dend_45 { pt3dadd( 426.002, 426.735, 25.7745, 0.2288 ) }
    dend_45 { pt3dadd( 426.026, 425.608, 25.9792, 0.2288 ) }
    dend_45 { pt3dadd( 426.026, 424.465, 26.04, 0.2288 ) }
    dend_45 { pt3dadd( 425.911, 423.433, 25.3017, 0.3754 ) }
    dend_45 { pt3dadd( 426.369, 422.587, 25.7226, 0.3802 ) }
    dend_45 { pt3dadd( 426.309, 421.523, 25.2, 0.8206 ) }
    dend_45 { pt3dadd( 426.527, 420.436, 25.0123, 1.1864 ) }
    dend_45 { pt3dadd( 426.783, 419.459, 24.7552, 0.5952 ) }
    dend_45 { pt3dadd( 426.785, 418.335, 24.64, 0.4024 ) }
    dend_45 { pt3dadd( 426.646, 417.314, 23.777, 0.6356 ) }
    dend_45 { pt3dadd( 426.368, 416.318, 22.7303, 0.6294 ) }
    dend_45 { pt3dadd( 426.369, 415.243, 23.4396, 0.4146 ) }
    dend_45 { pt3dadd( 426.358, 414.114, 23.3502, 0.5062 ) }
    dend_45 { pt3dadd( 425.911, 413.404, 24.36, 0.5848 ) }
    dend_45 { pt3dadd( 425.626, 412.343, 24.592, 0.721 ) }
    dend_45 { pt3dadd( 425.589, 411.484, 25.9878, 0.479 ) }
    dend_45 { pt3dadd( 424.965, 410.595, 26.0524, 0.4728 ) }
    dend_45 { pt3dadd( 424.97, 409.605, 26.5559, 0.4442 ) }
    dend_45 { pt3dadd( 424.909, 408.564, 26.3521, 0.4714 ) }
    dend_45 { pt3dadd( 425.196, 407.955, 24.5751, 0.685 ) }
    dend_45 { pt3dadd( 425.353, 406.997, 23.6988, 0.8298 ) }
    dend_45 { pt3dadd( 425.518, 406.352, 22.0286, 0.5152 ) }
    dend_45 { pt3dadd( 425.155, 405.484, 22.1053, 0.4576 ) }
    dend_45 { pt3dadd( 425.789, 404.644, 22.4043, 0.6332 ) }
    dend_45 { pt3dadd( 425.682, 403.663, 22.1601, 0.6188 ) }
    dend_45 { pt3dadd( 426.139, 402.931, 20.6895, 0.433 ) }
    dend_45 { pt3dadd( 426.369, 402.027, 20.2178, 0.5812 ) }
    dend_45 { pt3dadd( 426.409, 401.181, 21.1956, 0.6864 ) }
    dend_45 { pt3dadd( 426.941, 400.613, 20.16, 0.2288 ) }
    dend_45 { pt3dadd( 427.126, 399.7, 19.8977, 0.4322 ) }
    dend_45 { pt3dadd( 427.276, 399.325, 21.6531, 0.356 ) }
    dend_45 { pt3dadd( 427.398, 398.466, 21.5928, 0.356 ) }
    dend_45 { pt3dadd( 427.398, 397.585, 20.1642, 0.3744 ) }
    dend_45 { pt3dadd( 427.41, 396.451, 20.2497, 0.6864 ) }
    dend_45 { pt3dadd( 427.446, 395.596, 19.5696, 0.3438 ) }
    dend_45 { pt3dadd( 427.216, 394.634, 18.48, 0.2374 ) }
    dend_45 { pt3dadd( 426.774, 393.964, 19.8353, 0.242 ) }
    dend_45 { pt3dadd( 426.493, 393.419, 21.9121, 0.3766 ) }
    dend_45 { pt3dadd( 426.483, 392.426, 22.68, 0.2288 ) }
    dend_45 { pt3dadd( 426.112, 391.725, 21.9357, 0.4624 ) }
    dend_45 { pt3dadd( 426.195, 390.906, 21.84, 0.5592 ) }
    dend_45 { pt3dadd( 425.568, 390.689, 22.6445, 0.6864 ) }
    dend_45 { pt3dadd( 426.441, 390.836, 23.4026, 0.4476 ) }
    dend_45 { pt3dadd( 426.792, 389.8, 24.0033, 0.4646 ) }
    dend_45 { pt3dadd( 426.826, 388.746, 24.8498, 0.6514 ) }
    dend_45 { pt3dadd( 427.165, 387.823, 25.9865, 0.5138 ) }
    dend_45 { pt3dadd( 427.17, 386.753, 26.9103, 0.4336 ) }
    dend_45 { pt3dadd( 427.17, 385.646, 27.4308, 0.4576 ) }
    dend_45 { pt3dadd( 427.23, 384.62, 26.8881, 0.3338 ) }
    dend_45 { pt3dadd( 427.845, 383.915, 27.2685, 0.2608 ) }
    dend_45 { pt3dadd( 428.092, 383.139, 28.56, 0.2304 ) }
    dend_45 { pt3dadd( 428.912, 382.484, 28.0, 0.247 ) }
    dend_45 { pt3dadd( 429.229, 381.5, 28.28, 0.2288 ) }
    dend_45 { pt3dadd( 429.857, 381.174, 26.8487, 0.3474 ) }
    dend_45 { pt3dadd( 430.257, 380.526, 25.4668, 0.356 ) }
    dend_45 { pt3dadd( 430.629, 380.005, 24.36, 0.5478 ) }
    dend_45 { pt3dadd( 431.115, 379.374, 25.0329, 0.499 ) }
    dend_45 { pt3dadd( 431.748, 378.584, 25.8556, 0.2536 ) }
    dend_45 { pt3dadd( 432.39, 378.034, 24.7611, 0.2288 ) }
    dend_45 { pt3dadd( 432.746, 377.415, 23.7022, 0.2366 ) }
    dend_45 { pt3dadd( 432.832, 377.028, 25.9208, 0.3178 ) }
    dend_45 { pt3dadd( 433.292, 376.047, 26.1998, 0.4444 ) }
    dend_45 { pt3dadd( 433.759, 375.17, 26.6259, 0.305 ) }
    dend_45 { pt3dadd( 434.034, 374.109, 27.1272, 0.255 ) }
    dend_45 { pt3dadd( 434.273, 373.106, 26.1231, 0.2288 ) }
    dend_45 { pt3dadd( 434.491, 372.155, 27.197, 0.4844 ) }
    dend_45 { pt3dadd( 434.606, 371.286, 26.9671, 0.456 ) }
    dend_45 { pt3dadd( 434.606, 370.201, 26.6756, 0.3396 ) }
    dend_45 { pt3dadd( 434.606, 369.073, 26.7476, 0.5004 ) }
    dend_45 { pt3dadd( 435.168, 368.79, 24.7553, 0.3546 ) }
    dend_45 { pt3dadd( 435.406, 368.545, 22.5589, 0.5084 ) }
    dend_45 { pt3dadd( 435.332, 368.327, 20.1899, 0.2288 ) }
    dend_45 { pt3dadd( 435.624, 368.254, 17.7008, 0.2288 ) }
    dend_45 { pt3dadd( 435.875, 367.295, 17.2733, 0.376 ) }
    dend_45 { pt3dadd( 436.66, 367.397, 15.9239, 0.2578 ) }
    dend_45 { pt3dadd( 437.093, 366.77, 14.56, 0.3738 ) }
    dend_45 { pt3dadd( 437.694, 366.121, 13.8018, 0.3366 ) }
    dend_45 { pt3dadd( 437.889, 365.589, 13.16, 0.288 ) }
    dend_45 { pt3dadd( 438.36, 365.56, 11.7884, 0.415 ) }
    dend_45 { pt3dadd( 439.063, 365.072, 11.2102, 0.4524 ) }
    dend_45 { pt3dadd( 439.1, 365.206, 13.16, 0.434 ) }
    dend_45 { pt3dadd( 440.029, 364.725, 13.318, 0.4576 ) }
    dend_45 { pt3dadd( 440.747, 363.98, 13.2638, 0.4576 ) }
    dend_45 { pt3dadd( 440.906, 364.135, 11.2455, 0.2288 ) }
    dend_45 { pt3dadd( 441.346, 363.654, 10.9667, 0.356 ) }
    dend_45 { pt3dadd( 441.525, 363.334, 13.1419, 0.2288 ) }
    dend_45 { pt3dadd( 442.27, 362.702, 13.2801, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_45 { pt3dadd( 442.799, 362.101, 14.1844, 0.3518 ) }
    dend_45 { pt3dadd( 443.531, 361.785, 12.3067, 0.5548 ) }
    dend_45 { pt3dadd( 443.986, 361.196, 13.6522, 0.4576 ) }
    dend_45 { pt3dadd( 443.986, 361.733, 14.56, 0.305 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 4/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 418.948, 448.98, 28.2688, 0.788 ) }
    dend_44 { pt3dadd( 419.06, 447.315, 27.0032, 0.6398 ) }
    dend_44 { pt3dadd( 418.981, 446.223, 27.2791, 0.6298 ) }
    dend_44 { pt3dadd( 418.861, 445.142, 28.14, 0.563 ) }
    dend_44 { pt3dadd( 418.627, 444.062, 28.7871, 0.518 ) }
    dend_44 { pt3dadd( 418.457, 442.95, 28.7428, 0.5566 ) }
    dend_44 { pt3dadd( 418.259, 441.831, 28.607, 0.6172 ) }
    dend_44 { pt3dadd( 418.037, 440.715, 28.8249, 0.7012 ) }
    dend_44 { pt3dadd( 417.74, 439.632, 28.5768, 0.7734 ) }
    dend_44 { pt3dadd( 417.389, 438.607, 27.6927, 0.7688 ) }
    dend_44 { pt3dadd( 417.147, 437.51, 27.3839, 0.6652 ) }
    dend_44 { pt3dadd( 417.084, 436.372, 27.2523, 0.536 ) }
    dend_44 { pt3dadd( 416.901, 435.299, 27.9509, 0.5084 ) }
    dend_44 { pt3dadd( 416.687, 434.213, 27.586, 0.5722 ) }
    dend_44 { pt3dadd( 416.647, 433.235, 28.5166, 0.5694 ) }
    dend_44 { pt3dadd( 416.645, 432.337, 27.2412, 0.7196 ) }
    dend_44 { pt3dadd( 416.416, 431.831, 25.3122, 0.4284 ) }
    dend_44 { pt3dadd( 416.434, 430.907, 26.5194, 0.3322 ) }
    dend_44 { pt3dadd( 416.647, 429.987, 26.88, 0.5788 ) }
    dend_44 { pt3dadd( 416.559, 428.966, 27.4238, 0.6378 ) }
    dend_44 { pt3dadd( 416.537, 427.976, 26.4593, 0.432 ) }
    dend_44 { pt3dadd( 416.327, 427.17, 27.4399, 0.4574 ) }
    dend_44 { pt3dadd( 416.122, 426.199, 26.5962, 0.761 ) }
    dend_44 { pt3dadd( 416.33, 425.227, 26.2074, 0.4676 ) }
    dend_44 { pt3dadd( 415.972, 424.231, 25.8492, 0.4004 ) }
    dend_44 { pt3dadd( 415.888, 423.206, 25.3224, 0.3304 ) }
    dend_44 { pt3dadd( 415.954, 422.455, 25.4859, 0.306 ) }
    dend_44 { pt3dadd( 415.844, 421.582, 27.124, 0.3892 ) }
    dend_44 { pt3dadd( 415.818, 420.51, 27.9952, 0.6512 ) }
    dend_44 { pt3dadd( 415.458, 419.563, 27.2016, 0.9828 ) }
    dend_44 { pt3dadd( 415.162, 418.594, 27.336, 0.8064 ) }
    dend_44 { pt3dadd( 415.158, 417.471, 27.16, 0.4396 ) }
    dend_44 { pt3dadd( 415.501, 416.529, 27.4797, 0.328 ) }
    dend_44 { pt3dadd( 415.556, 415.401, 27.16, 0.6466 ) }
    dend_44 { pt3dadd( 415.71, 414.272, 27.1147, 0.7118 ) }
    dend_44 { pt3dadd( 415.767, 413.2, 27.0668, 0.852 ) }
    dend_44 { pt3dadd( 416.207, 412.203, 27.1252, 0.5084 ) }
    dend_44 { pt3dadd( 416.783, 411.318, 26.6, 0.8332 ) }
    dend_44 { pt3dadd( 417.32, 410.599, 27.9432, 0.5964 ) }
    dend_44 { pt3dadd( 417.996, 409.83, 29.0909, 0.2902 ) }
    dend_44 { pt3dadd( 418.591, 409.138, 29.7937, 0.5096 ) }
    dend_44 { pt3dadd( 418.901, 408.095, 29.955, 0.5338 ) }
    dend_44 { pt3dadd( 419.064, 407.095, 29.1267, 0.5892 ) }
    dend_44 { pt3dadd( 419.456, 406.039, 28.8148, 0.617 ) }
    dend_44 { pt3dadd( 419.619, 405.168, 27.7311, 0.67 ) }
    dend_44 { pt3dadd( 419.974, 404.282, 28.7339, 0.71 ) }
    dend_44 { pt3dadd( 420.036, 403.339, 27.6591, 0.6268 ) }
    dend_44 { pt3dadd( 419.817, 402.379, 26.9143, 0.289 ) }
    dend_44 { pt3dadd( 419.793, 401.651, 28.4208, 0.6434 ) }
    dend_44 { pt3dadd( 419.948, 400.676, 29.2284, 0.6356 ) }
    dend_44 { pt3dadd( 420.077, 399.569, 29.3084, 0.6928 ) }
    dend_44 { pt3dadd( 420.241, 398.615, 27.8843, 0.788 ) }
    dend_44 { pt3dadd( 420.74, 397.771, 26.6773, 0.7074 ) }
    dend_44 { pt3dadd( 421.256, 396.879, 26.6, 0.8468 ) }
    dend_44 { pt3dadd( 421.809, 396.157, 27.7091, 0.797 ) }
    dend_44 { pt3dadd( 422.351, 395.318, 26.6794, 0.9152 ) }
    dend_44 { pt3dadd( 423.028, 394.568, 25.6755, 0.4846 ) }
    dend_44 { pt3dadd( 423.726, 393.779, 25.5982, 0.5118 ) }
    dend_44 { pt3dadd( 424.003, 392.782, 26.5929, 0.66 ) }
    dend_44 { pt3dadd( 424.755, 392.185, 27.4292, 0.619 ) }
    dend_44 { pt3dadd( 425.148, 391.427, 26.6613, 0.669 ) }
    dend_44 { pt3dadd( 425.994, 390.867, 27.3643, 0.5704 ) }
    dend_44 { pt3dadd( 426.562, 390.676, 25.4451, 0.2828 ) }
    dend_44 { pt3dadd( 426.625, 390.254, 24.5587, 0.4444 ) }
    dend_44 { pt3dadd( 427.026, 389.422, 24.2628, 0.2918 ) }
    dend_44 { pt3dadd( 427.424, 388.508, 24.5791, 0.394 ) }
    dend_44 { pt3dadd( 427.742, 387.981, 26.04, 0.3842 ) }
    dend_44 { pt3dadd( 428.164, 387.284, 24.187, 0.287 ) }
    dend_44 { pt3dadd( 428.872, 386.481, 23.52, 0.2304 ) }
    dend_44 { pt3dadd( 429.62, 385.63, 23.24, 0.2288 ) }
    dend_44 { pt3dadd( 429.924, 384.573, 23.2662, 0.2568 ) }
    dend_44 { pt3dadd( 430.575, 383.874, 23.0182, 0.2288 ) }
    dend_44 { pt3dadd( 430.389, 383.011, 23.8, 0.5964 ) }
    dend_44 { pt3dadd( 430.361, 382.15, 25.5683, 0.5178 ) }
    dend_44 { pt3dadd( 430.111, 381.113, 25.5265, 0.3814 ) }
    dend_44 { pt3dadd( 430.836, 380.445, 24.7329, 0.556 ) }
    dend_44 { pt3dadd( 430.945, 379.422, 24.4162, 0.4672 ) }
    dend_44 { pt3dadd( 431.543, 378.784, 24.2655, 0.2416 ) }
    dend_44 { pt3dadd( 432.312, 378.616, 24.1996, 0.4068 ) }
    dend_44 { pt3dadd( 432.791, 377.717, 23.8, 0.6138 ) }
    dend_44 { pt3dadd( 433.545, 376.973, 23.52, 0.6438 ) }
    dend_44 { pt3dadd( 434.188, 376.217, 23.8, 0.6036 ) }
    dend_44 { pt3dadd( 434.501, 375.301, 23.0674, 0.5404 ) }
    dend_44 { pt3dadd( 434.909, 374.432, 23.3593, 0.3304 ) }
    dend_44 { pt3dadd( 435.162, 373.451, 23.1898, 0.5848 ) }
    dend_44 { pt3dadd( 435.331, 372.408, 22.4674, 0.3564 ) }
    dend_44 { pt3dadd( 435.656, 371.554, 23.29, 0.3342 ) }
    dend_44 { pt3dadd( 435.75, 370.471, 23.7192, 0.6254 ) }
    dend_44 { pt3dadd( 435.605, 369.364, 23.7385, 0.578 ) }
    dend_44 { pt3dadd( 435.593, 368.244, 23.8292, 0.5084 ) }
    dend_44 { pt3dadd( 435.521, 367.28, 23.3077, 0.6548 ) }
    dend_44 { pt3dadd( 435.318, 366.242, 23.414, 0.2796 ) }
    dend_44 { pt3dadd( 435.121, 365.42, 24.8597, 0.4442 ) }
    dend_44 { pt3dadd( 434.936, 364.605, 23.7995, 0.4828 ) }
    dend_44 { pt3dadd( 434.501, 363.89, 25.156, 0.392 ) }
    dend_44 { pt3dadd( 434.484, 363.413, 23.3196, 0.4434 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_44 { pt3dadd( 434.084, 362.383, 23.5504, 0.4066 ) }
    dend_44 { pt3dadd( 433.772, 361.303, 23.6216, 0.6068 ) }
    dend_44 { pt3dadd( 433.328, 360.426, 24.34, 0.6864 ) }
    dend_44 { pt3dadd( 433.311, 359.387, 23.8283, 0.6632 ) }
    dend_44 { pt3dadd( 433.462, 358.42, 24.3289, 0.798 ) }
    dend_44 { pt3dadd( 434.066, 357.617, 23.6386, 0.4186 ) }
    dend_44 { pt3dadd( 434.063, 356.927, 24.8924, 0.5592 ) }
    dend_44 { pt3dadd( 434.632, 355.989, 25.1545, 0.6864 ) }
    dend_44 { pt3dadd( 435.345, 355.372, 24.6166, 0.6164 ) }
    dend_44 { pt3dadd( 435.872, 354.54, 25.2, 0.486 ) }
    dend_44 { pt3dadd( 436.887, 354.555, 24.9855, 0.3504 ) }
    dend_44 { pt3dadd( 437.175, 353.475, 24.9409, 0.5764 ) }
    dend_44 { pt3dadd( 437.733, 352.549, 25.48, 0.8104 ) }
    dend_44 { pt3dadd( 437.895, 351.502, 25.6845, 0.5556 ) }
    dend_44 { pt3dadd( 438.143, 350.507, 25.6147, 0.4 ) }
    dend_44 { pt3dadd( 438.376, 349.434, 26.1576, 0.4642 ) }
    dend_44 { pt3dadd( 439.011, 348.687, 25.5237, 0.4576 ) }
    dend_44 { pt3dadd( 439.644, 348.278, 26.6519, 0.6286 ) }
    dend_44 { pt3dadd( 439.925, 347.251, 27.1448, 0.4198 ) }
    dend_44 { pt3dadd( 439.439, 346.354, 26.9503, 0.3486 ) }
    dend_44 { pt3dadd( 439.388, 345.385, 27.9468, 0.5792 ) }
    dend_44 { pt3dadd( 439.836, 344.37, 28.3525, 0.5996 ) }
    dend_44 { pt3dadd( 440.327, 343.707, 28.9929, 0.6096 ) }
    dend_44 { pt3dadd( 440.872, 342.954, 29.4437, 0.5378 ) }
    dend_44 { pt3dadd( 441.158, 341.868, 29.9121, 0.4908 ) }
    dend_44 { pt3dadd( 441.107, 340.783, 29.7226, 0.6148 ) }
    dend_44 { pt3dadd( 441.093, 339.828, 29.6559, 0.3166 ) }
    dend_44 { pt3dadd( 441.107, 338.756, 29.2586, 0.3048 ) }
    dend_44 { pt3dadd( 441.112, 337.823, 29.3499, 0.346 ) }
    dend_44 { pt3dadd( 441.592, 337.186, 29.8052, 0.5236 ) }
    dend_44 { pt3dadd( 442.062, 336.254, 29.1186, 0.357 ) }
    dend_44 { pt3dadd( 442.107, 335.214, 28.88, 0.4686 ) }
    dend_44 { pt3dadd( 442.385, 334.207, 28.9702, 0.298 ) }
    dend_44 { pt3dadd( 442.861, 333.561, 28.2954, 0.4064 ) }
    dend_44 { pt3dadd( 443.186, 332.613, 28.8341, 0.4576 ) }
    dend_44 { pt3dadd( 443.333, 331.734, 28.9142, 0.466 ) }
    dend_44 { pt3dadd( 443.168, 330.701, 28.4654, 0.479 ) }
    dend_44 { pt3dadd( 443.04, 329.831, 29.1102, 0.7608 ) }
    dend_44 { pt3dadd( 442.384, 329.01, 28.4068, 0.541 ) }
    dend_44 { pt3dadd( 442.024, 328.083, 28.173, 0.6188 ) }
    dend_44 { pt3dadd( 441.579, 327.399, 27.72, 0.7938 ) }
    dend_44 { pt3dadd( 440.869, 326.617, 27.6963, 0.419 ) }
    dend_44 { pt3dadd( 440.101, 325.891, 27.6527, 0.4746 ) }
    dend_44 { pt3dadd( 439.614, 325.468, 29.0332, 0.5698 ) }
    dend_44 { pt3dadd( 438.93, 324.854, 28.7563, 0.3382 ) }
    dend_44 { pt3dadd( 438.724, 324.086, 28.7745, 0.4242 ) }
    dend_44 { pt3dadd( 438.082, 323.463, 28.4225, 0.425 ) }
    dend_44 { pt3dadd( 437.58, 322.69, 28.0854, 0.2542 ) }
    dend_44 { pt3dadd( 437.247, 321.971, 29.675, 0.4576 ) }
    dend_44 { pt3dadd( 436.66, 321.103, 29.6576, 0.6072 ) }
    dend_44 { pt3dadd( 436.133, 320.237, 29.4, 0.356 ) }
    dend_44 { pt3dadd( 435.409, 319.619, 30.0476, 0.4726 ) }
    dend_44 { pt3dadd( 434.887, 318.821, 29.7718, 0.6864 ) }
    dend_44 { pt3dadd( 434.283, 318.016, 29.1928, 0.7494 ) }
    dend_44 { pt3dadd( 433.72, 317.199, 29.68, 0.8096 ) }
    dend_44 { pt3dadd( 433.449, 316.393, 30.3643, 0.4576 ) }
    dend_44 { pt3dadd( 432.454, 315.016, 30.5012, 0.413 ) }
    dend_44 { pt3dadd( 432.388, 314.19, 30.1972, 0.885 ) }
    dend_44 { pt3dadd( 431.904, 313.284, 29.7223, 0.3824 ) }
    dend_44 { pt3dadd( 431.557, 312.239, 30.0051, 0.5192 ) }
    dend_44 { pt3dadd( 431.402, 311.203, 29.8553, 0.5766 ) }
    dend_44 { pt3dadd( 431.612, 310.139, 30.24, 0.7668 ) }
    dend_44 { pt3dadd( 431.226, 309.165, 30.0266, 0.6356 ) }
    dend_44 { pt3dadd( 430.981, 308.324, 31.3152, 0.4576 ) }
    dend_44 { pt3dadd( 431.061, 307.532, 32.2269, 0.3778 ) }
    dend_44 { pt3dadd( 430.446, 307.123, 33.32, 0.3522 ) }
    dend_44 { pt3dadd( 430.596, 306.384, 32.0334, 0.5334 ) }
    dend_44 { pt3dadd( 430.255, 305.536, 31.8721, 0.6356 ) }
    dend_44 { pt3dadd( 430.453, 304.675, 30.5236, 0.7494 ) }
    dend_44 { pt3dadd( 430.025, 304.365, 28.5785, 0.4576 ) }
    dend_44 { pt3dadd( 430.056, 303.436, 28.0616, 0.3088 ) }
    dend_44 { pt3dadd( 430.345, 302.641, 29.7646, 0.3836 ) }
    dend_44 { pt3dadd( 430.245, 301.766, 31.1069, 0.6238 ) }
    dend_44 { pt3dadd( 430.043, 301.093, 32.6259, 0.4576 ) }
    dend_44 { pt3dadd( 429.996, 300.113, 31.6473, 0.5848 ) }
    dend_44 { pt3dadd( 429.542, 299.291, 31.8279, 0.3524 ) }
    dend_44 { pt3dadd( 429.211, 298.581, 30.3201, 0.4736 ) }
    dend_44 { pt3dadd( 428.686, 297.946, 31.3849, 0.351 ) }
    dend_44 { pt3dadd( 428.428, 297.13, 32.7569, 0.4882 ) }
    dend_44 { pt3dadd( 428.334, 296.084, 33.1478, 0.9496 ) }
    dend_44 { pt3dadd( 427.892, 295.218, 34.4781, 0.5022 ) }
    dend_44 { pt3dadd( 427.425, 294.483, 35.4572, 0.4462 ) }
    dend_44 { pt3dadd( 427.195, 294.008, 37.3526, 0.2542 ) }
    dend_44 { pt3dadd( 426.365, 293.338, 37.52, 0.3938 ) }
    dend_44 { pt3dadd( 425.688, 292.755, 36.8264, 0.483 ) }
    dend_44 { pt3dadd( 424.717, 292.414, 37.0208, 0.4564 ) }
    dend_44 { pt3dadd( 424.095, 292.082, 37.4214, 0.3076 ) }
    dend_44 { pt3dadd( 424.346, 291.491, 38.8287, 0.332 ) }
    dend_44 { pt3dadd( 423.461, 291.053, 38.8444, 0.4528 ) }
    dend_44 { pt3dadd( 423.28, 290.996, 36.267, 0.3492 ) }
    dend_44 { pt3dadd( 422.713, 290.36, 35.5197, 0.3814 ) }
    dend_44 { pt3dadd( 421.906, 289.762, 35.5919, 0.2288 ) }
    dend_44 { pt3dadd( 421.241, 289.09, 36.9522, 0.351 ) }
    dend_44 { pt3dadd( 420.633, 288.295, 37.9644, 0.6804 ) }
    dend_44 { pt3dadd( 420.038, 287.452, 38.5174, 0.5708 ) }
    dend_44 { pt3dadd( 419.532, 286.81, 40.3992, 0.2462 ) }
    dend_44 { pt3dadd( 419.167, 285.816, 40.5104, 0.2288 ) }
    dend_44 { pt3dadd( 419.094, 285.133, 38.6142, 0.2918 ) }
    dend_44 { pt3dadd( 418.417, 284.642, 38.0733, 0.4014 ) }
    dend_44 { pt3dadd( 418.353, 283.67, 38.4754, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_44 { pt3dadd( 417.79, 283.025, 37.5768, 0.2314 ) }
    dend_44 { pt3dadd( 417.804, 281.887, 37.5231, 0.3122 ) }
    dend_44 { pt3dadd( 417.955, 281.526, 39.7037, 0.809 ) }
    dend_44 { pt3dadd( 417.87, 280.639, 38.6016, 0.694 ) }
    dend_44 { pt3dadd( 417.602, 280.184, 36.7077, 0.2796 ) }
    dend_44 { pt3dadd( 417.903, 279.131, 36.68, 0.23 ) }
    dend_44 { pt3dadd( 417.626, 278.451, 38.3664, 0.6114 ) }
    dend_44 { pt3dadd( 417.87, 277.973, 40.32, 0.4262 ) }
    dend_44 { pt3dadd( 418.361, 277.191, 40.88, 0.4576 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 9/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 394.222, 461.604, 28.56, 0.305 ) }
    dend_38 { pt3dadd( 393.748, 461.42, 30.0432, 0.4984 ) }
    dend_38 { pt3dadd( 392.886, 461.329, 30.5743, 0.5956 ) }
    dend_38 { pt3dadd( 391.931, 461.366, 29.68, 0.543 ) }
    dend_38 { pt3dadd( 390.97, 461.59, 30.7026, 0.4064 ) }
    dend_38 { pt3dadd( 389.964, 461.43, 29.832, 0.4598 ) }
    dend_38 { pt3dadd( 388.998, 461.032, 29.0408, 0.5258 ) }
    dend_38 { pt3dadd( 387.937, 460.943, 29.3619, 0.476 ) }
    dend_38 { pt3dadd( 387.007, 460.81, 30.0964, 0.266 ) }
    dend_38 { pt3dadd( 386.033, 460.634, 29.8133, 0.3456 ) }
    dend_38 { pt3dadd( 385.322, 460.346, 30.5757, 0.4576 ) }
    dend_38 { pt3dadd( 384.598, 459.808, 31.4936, 0.4996 ) }
    dend_38 { pt3dadd( 383.803, 459.151, 31.0601, 0.4542 ) }
    dend_38 { pt3dadd( 383.111, 459.02, 30.7, 0.4304 ) }
    dend_38 { pt3dadd( 382.368, 458.243, 30.6208, 0.251 ) }
    dend_38 { pt3dadd( 381.911, 457.486, 30.4097, 0.2362 ) }
    dend_38 { pt3dadd( 381.825, 456.958, 30.4822, 0.2768 ) }
    dend_38 { pt3dadd( 381.159, 456.57, 29.6867, 0.6666 ) }
    dend_38 { pt3dadd( 380.316, 456.227, 30.1557, 0.6174 ) }
    dend_38 { pt3dadd( 379.707, 455.619, 29.1866, 0.4332 ) }
    dend_38 { pt3dadd( 378.902, 455.026, 29.4465, 0.4068 ) }
    dend_38 { pt3dadd( 377.95, 454.43, 29.7354, 0.615 ) }
    dend_38 { pt3dadd( 377.08, 453.934, 30.415, 0.4562 ) }
    dend_38 { pt3dadd( 376.226, 453.596, 29.6906, 0.4244 ) }
    dend_38 { pt3dadd( 375.296, 452.994, 30.2644, 0.65 ) }
    dend_38 { pt3dadd( 374.574, 452.671, 30.042, 0.6826 ) }
    dend_38 { pt3dadd( 373.845, 452.211, 30.2842, 0.681 ) }
    dend_38 { pt3dadd( 372.788, 451.899, 30.1949, 0.5786 ) }
    dend_38 { pt3dadd( 372.012, 451.251, 29.1763, 0.364 ) }
    dend_38 { pt3dadd( 371.636, 450.371, 28.9867, 0.3886 ) }
    dend_38 { pt3dadd( 370.951, 449.935, 30.0462, 0.2852 ) }
    dend_38 { pt3dadd( 370.126, 449.422, 30.2092, 0.466 ) }
    dend_38 { pt3dadd( 369.243, 449.134, 29.0506, 0.4796 ) }
    dend_38 { pt3dadd( 368.664, 448.535, 27.72, 0.5536 ) }
    dend_38 { pt3dadd( 367.751, 448.193, 27.3608, 0.3728 ) }
    dend_38 { pt3dadd( 366.964, 447.589, 27.0426, 0.3678 ) }
    dend_38 { pt3dadd( 365.976, 447.632, 27.203, 0.5084 ) }
    dend_38 { pt3dadd( 365.37, 446.858, 27.336, 0.3902 ) }
    dend_38 { pt3dadd( 364.761, 446.142, 26.838, 0.3674 ) }
    dend_38 { pt3dadd( 364.335, 445.275, 27.5073, 0.3092 ) }
    dend_38 { pt3dadd( 363.577, 444.77, 27.9017, 0.4292 ) }
    dend_38 { pt3dadd( 362.61, 444.364, 28.5289, 0.3814 ) }
    dend_38 { pt3dadd( 361.973, 443.552, 27.8764, 0.4156 ) }
    dend_38 { pt3dadd( 361.551, 442.568, 27.9471, 0.2872 ) }
    dend_38 { pt3dadd( 360.911, 441.813, 27.9599, 0.5502 ) }
    dend_38 { pt3dadd( 360.69, 441.575, 26.0413, 0.2532 ) }
    dend_38 { pt3dadd( 359.995, 440.915, 25.76, 0.2288 ) }
    dend_38 { pt3dadd( 359.701, 439.865, 25.0563, 0.2288 ) }
    dend_38 { pt3dadd( 359.534, 438.787, 24.4688, 0.2288 ) }
    dend_38 { pt3dadd( 359.284, 437.688, 24.2449, 0.2288 ) }
    dend_38 { pt3dadd( 359.216, 436.566, 24.36, 0.2288 ) }
    dend_38 { pt3dadd( 359.084, 435.518, 24.0327, 0.3136 ) }
    dend_38 { pt3dadd( 358.881, 434.77, 23.5299, 0.5506 ) }
    dend_38 { pt3dadd( 359.243, 433.927, 24.8634, 0.5742 ) }
    dend_38 { pt3dadd( 358.899, 433.225, 24.1363, 0.3792 ) }
    dend_38 { pt3dadd( 359.608, 432.727, 23.864, 0.348 ) }
    dend_38 { pt3dadd( 359.507, 431.724, 22.9908, 0.2762 ) }
    dend_38 { pt3dadd( 359.32, 430.608, 22.96, 0.4544 ) }
    dend_38 { pt3dadd( 359.0, 429.686, 23.4798, 0.4256 ) }
    dend_38 { pt3dadd( 358.515, 429.169, 22.68, 0.3394 ) }
    dend_38 { pt3dadd( 357.958, 428.343, 23.2957, 0.304 ) }
    dend_38 { pt3dadd( 357.843, 427.281, 23.0678, 0.3862 ) }
    dend_38 { pt3dadd( 357.635, 426.242, 22.3294, 0.335 ) }
    dend_38 { pt3dadd( 357.34, 425.345, 22.0707, 0.2288 ) }
    dend_38 { pt3dadd( 356.695, 424.6, 22.12, 0.551 ) }
    dend_38 { pt3dadd( 355.687, 424.176, 21.6989, 0.47 ) }
    dend_38 { pt3dadd( 354.989, 423.868, 20.2241, 0.6058 ) }
    dend_38 { pt3dadd( 354.719, 422.887, 19.6081, 0.662 ) }
    dend_38 { pt3dadd( 354.113, 422.041, 20.3855, 0.7162 ) }
    dend_38 { pt3dadd( 353.244, 421.491, 20.5687, 0.268 ) }
    dend_38 { pt3dadd( 352.431, 421.459, 21.552, 0.2984 ) }
    dend_38 { pt3dadd( 351.835, 421.297, 19.3544, 0.3178 ) }
    dend_38 { pt3dadd( 351.229, 420.64, 18.2314, 0.3394 ) }
    dend_38 { pt3dadd( 350.73, 419.814, 19.024, 0.788 ) }
    dend_38 { pt3dadd( 350.178, 418.958, 18.7624, 0.3402 ) }
    dend_38 { pt3dadd( 349.498, 418.366, 18.4934, 0.4564 ) }
    dend_38 { pt3dadd( 348.79, 417.688, 18.1863, 0.5774 ) }
    dend_38 { pt3dadd( 347.823, 417.121, 18.4532, 0.4674 ) }
    dend_38 { pt3dadd( 347.036, 416.33, 18.6124, 0.3432 ) }
    dend_38 { pt3dadd( 346.249, 415.615, 18.2762, 0.4322 ) }
    dend_38 { pt3dadd( 345.2, 415.464, 17.9208, 0.5992 ) }
    dend_38 { pt3dadd( 344.127, 415.31, 17.0954, 0.5716 ) }
    dend_38 { pt3dadd( 343.286, 414.985, 17.6739, 0.2726 ) }
    dend_38 { pt3dadd( 342.609, 414.407, 16.021, 0.242 ) }
    dend_38 { pt3dadd( 342.102, 414.027, 17.4194, 0.3158 ) }
    dend_38 { pt3dadd( 341.824, 413.093, 17.36, 0.4096 ) }
    dend_38 { pt3dadd( 341.816, 411.976, 17.1347, 0.2744 ) }
    dend_38 { pt3dadd( 341.565, 410.883, 16.7929, 0.2288 ) }
    dend_38 { pt3dadd( 341.598, 409.883, 15.9563, 0.2288 ) }
    dend_38 { pt3dadd( 341.325, 409.284, 15.1297, 0.2288 ) }
    dend_38 { pt3dadd( 340.45, 408.888, 15.2751, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_38 { pt3dadd( 339.733, 408.724, 15.9786, 0.2952 ) }
    dend_38 { pt3dadd( 339.167, 408.276, 16.8, 0.6474 ) }
    dend_38 { pt3dadd( 338.38, 407.892, 15.68, 0.485 ) }
    dend_38 { pt3dadd( 337.442, 407.886, 16.8, 0.4492 ) }
    dend_38 { pt3dadd( 336.322, 407.95, 17.0758, 0.4576 ) }
    dend_38 { pt3dadd( 335.481, 408.185, 17.4528, 0.4212 ) }
    dend_38 { pt3dadd( 334.873, 408.751, 16.5274, 0.5218 ) }
    dend_38 { pt3dadd( 334.043, 408.959, 17.8534, 0.3382 ) }
    dend_38 { pt3dadd( 333.048, 408.609, 18.2693, 0.6226 ) }
    dend_38 { pt3dadd( 332.117, 408.192, 18.1418, 0.613 ) }
    dend_38 { pt3dadd( 331.299, 407.566, 19.04, 0.5748 ) }
    dend_38 { pt3dadd( 330.467, 407.143, 17.8704, 0.5576 ) }
    dend_38 { pt3dadd( 329.725, 407.035, 18.9204, 0.285 ) }
    dend_38 { pt3dadd( 328.927, 406.372, 18.586, 0.4678 ) }
    dend_38 { pt3dadd( 328.024, 405.982, 19.7206, 0.447 ) }
    dend_38 { pt3dadd( 327.313, 405.567, 18.7354, 0.661 ) }
    dend_38 { pt3dadd( 326.566, 404.981, 18.0748, 0.6256 ) }
    dend_38 { pt3dadd( 325.62, 404.518, 18.0132, 0.3814 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 18/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 394.222, 461.604, 28.56, 0.305 ) }
    dend_37 { pt3dadd( 393.368, 462.165, 27.1752, 0.2824 ) }
    dend_37 { pt3dadd( 392.744, 461.947, 25.2179, 0.5848 ) }
    dend_37 { pt3dadd( 392.22, 462.762, 24.7979, 0.348 ) }
    dend_37 { pt3dadd( 392.162, 463.774, 24.0906, 0.331 ) }
    dend_37 { pt3dadd( 392.386, 464.528, 25.482, 0.4962 ) }
    dend_37 { pt3dadd( 392.158, 465.393, 26.6517, 0.3928 ) }
    dend_37 { pt3dadd( 391.469, 465.695, 26.8171, 0.2288 ) }
    dend_37 { pt3dadd( 390.797, 465.494, 28.5438, 0.2662 ) }
    dend_37 { pt3dadd( 390.232, 466.077, 29.6772, 0.4562 ) }
    dend_37 { pt3dadd( 389.832, 466.905, 30.8848, 0.5512 ) }
    dend_37 { pt3dadd( 389.418, 467.526, 30.5295, 0.6852 ) }
    dend_37 { pt3dadd( 388.962, 468.018, 31.1114, 0.5236 ) }
    dend_37 { pt3dadd( 388.454, 468.658, 31.6747, 0.6106 ) }
    dend_37 { pt3dadd( 387.656, 469.15, 32.2, 0.3814 ) }
    dend_37 { pt3dadd( 387.173, 470.088, 32.3705, 0.685 ) }
    dend_37 { pt3dadd( 386.745, 470.964, 31.5316, 0.483 ) }
    dend_37 { pt3dadd( 386.317, 471.214, 31.6912, 0.5828 ) }
    dend_37 { pt3dadd( 385.908, 471.455, 32.8703, 0.442 ) }
    dend_37 { pt3dadd( 385.156, 472.112, 33.3281, 0.5062 ) }
    dend_37 { pt3dadd( 384.598, 473.049, 33.8218, 0.3972 ) }
    dend_37 { pt3dadd( 383.894, 473.919, 34.0528, 0.5068 ) }
    dend_37 { pt3dadd( 382.982, 474.569, 33.88, 0.5288 ) }
    dend_37 { pt3dadd( 382.197, 475.207, 34.1592, 0.4844 ) }
    dend_37 { pt3dadd( 381.657, 475.904, 34.6293, 0.382 ) }
    dend_37 { pt3dadd( 381.296, 476.703, 34.4403, 0.5594 ) }
    dend_37 { pt3dadd( 380.577, 477.436, 33.9503, 0.591 ) }
    dend_37 { pt3dadd( 379.836, 478.126, 34.4999, 0.439 ) }
    dend_37 { pt3dadd( 378.942, 478.538, 35.1795, 0.5592 ) }
    dend_37 { pt3dadd( 378.547, 479.048, 34.3605, 0.9096 ) }
    dend_37 { pt3dadd( 378.1, 479.826, 33.4043, 0.4178 ) }
    dend_37 { pt3dadd( 377.379, 480.438, 33.0464, 0.4576 ) }
    dend_37 { pt3dadd( 376.69, 481.198, 33.3416, 0.2718 ) }
    dend_37 { pt3dadd( 375.941, 482.031, 33.6823, 0.57 ) }
    dend_37 { pt3dadd( 375.455, 482.727, 33.6644, 0.5574 ) }
    dend_37 { pt3dadd( 374.674, 483.176, 33.8033, 0.5046 ) }
    dend_37 { pt3dadd( 373.737, 483.34, 32.83, 0.3718 ) }
    dend_37 { pt3dadd( 372.879, 483.348, 34.0472, 0.2942 ) }
    dend_37 { pt3dadd( 372.52, 484.262, 33.213, 0.5592 ) }
    dend_37 { pt3dadd( 371.689, 484.921, 32.7972, 0.5984 ) }
    dend_37 { pt3dadd( 370.877, 485.535, 33.556, 0.7066 ) }
    dend_37 { pt3dadd( 370.019, 485.862, 32.5282, 0.5454 ) }
    dend_37 { pt3dadd( 369.305, 486.543, 31.9511, 0.483 ) }
    dend_37 { pt3dadd( 368.564, 486.907, 32.48, 0.5002 ) }
    dend_37 { pt3dadd( 367.745, 487.511, 32.2213, 0.3676 ) }
    dend_37 { pt3dadd( 367.224, 488.242, 32.1703, 0.3548 ) }
    dend_37 { pt3dadd( 366.699, 488.967, 32.9834, 0.6356 ) }
    dend_37 { pt3dadd( 365.948, 489.579, 32.48, 0.7912 ) }
    dend_37 { pt3dadd( 365.178, 490.203, 31.64, 0.483 ) }
    dend_37 { pt3dadd( 364.199, 490.543, 31.906, 0.403 ) }
    dend_37 { pt3dadd( 363.651, 491.286, 32.6707, 0.6768 ) }
    dend_37 { pt3dadd( 363.334, 491.937, 31.6411, 0.2298 ) }
    dend_37 { pt3dadd( 363.158, 492.835, 31.92, 0.2288 ) }
    dend_37 { pt3dadd( 362.015, 492.839, 31.9035, 0.3118 ) }
    dend_37 { pt3dadd( 360.955, 493.144, 31.647, 0.4284 ) }
    dend_37 { pt3dadd( 360.458, 493.756, 31.8917, 0.5824 ) }
    dend_37 { pt3dadd( 359.444, 493.766, 31.36, 0.2974 ) }
    dend_37 { pt3dadd( 358.674, 494.216, 32.4248, 0.575 ) }
    dend_37 { pt3dadd( 357.755, 493.968, 32.8815, 0.2466 ) }
    dend_37 { pt3dadd( 357.166, 494.187, 32.2137, 0.24 ) }
    dend_37 { pt3dadd( 356.378, 494.863, 31.64, 0.2288 ) }
    dend_37 { pt3dadd( 355.314, 495.123, 31.64, 0.2288 ) }
    dend_37 { pt3dadd( 354.174, 495.181, 31.64, 0.2288 ) }
    dend_37 { pt3dadd( 353.066, 495.352, 31.5543, 0.2892 ) }
    dend_37 { pt3dadd( 352.155, 495.265, 31.3936, 0.4944 ) }
    dend_37 { pt3dadd( 351.151, 495.296, 31.5431, 0.5484 ) }
    dend_37 { pt3dadd( 350.098, 495.117, 30.9324, 0.3456 ) }
    dend_37 { pt3dadd( 349.013, 494.981, 30.8216, 0.2584 ) }
    dend_37 { pt3dadd( 347.999, 494.849, 31.428, 0.3304 ) }
    dend_37 { pt3dadd( 346.926, 494.707, 30.767, 0.2996 ) }
    dend_37 { pt3dadd( 345.951, 494.983, 30.9378, 0.515 ) }
    dend_37 { pt3dadd( 344.919, 494.996, 31.0464, 0.3834 ) }
    dend_37 { pt3dadd( 343.794, 495.135, 31.0845, 0.305 ) }
    dend_37 { pt3dadd( 342.686, 495.056, 31.4247, 0.273 ) }
    dend_37 { pt3dadd( 341.671, 495.084, 31.2332, 0.2666 ) }
    dend_37 { pt3dadd( 340.75, 495.373, 32.48, 0.4846 ) }
    dend_37 { pt3dadd( 339.703, 495.537, 32.9655, 0.356 ) }
    dend_37 { pt3dadd( 339.112, 495.728, 33.0778, 0.4886 ) }
    dend_37 { pt3dadd( 338.084, 495.917, 32.7886, 0.4892 ) }
    dend_37 { pt3dadd( 337.525, 496.684, 33.0982, 0.249 ) }
    dend_37 { pt3dadd( 337.12, 497.741, 33.32, 0.2288 ) }
    dend_37 { pt3dadd( 336.513, 498.664, 33.32, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( 335.652, 499.037, 34.211, 0.4162 ) }
    dend_37 { pt3dadd( 335.187, 499.748, 34.9611, 0.2796 ) }
    dend_37 { pt3dadd( 334.391, 500.487, 34.6884, 0.5084 ) }
    dend_37 { pt3dadd( 334.232, 501.267, 34.44, 0.529 ) }
    dend_37 { pt3dadd( 333.474, 502.102, 34.4263, 0.316 ) }
    dend_37 { pt3dadd( 332.864, 503.033, 34.1942, 0.3754 ) }
    dend_37 { pt3dadd( 332.082, 503.842, 33.8736, 0.412 ) }
    dend_37 { pt3dadd( 331.253, 504.499, 33.32, 0.2984 ) }
    dend_37 { pt3dadd( 330.579, 505.33, 33.6, 0.2288 ) }
    dend_37 { pt3dadd( 329.904, 506.046, 33.32, 0.2288 ) }
    dend_37 { pt3dadd( 329.189, 506.872, 33.04, 0.2288 ) }
    dend_37 { pt3dadd( 328.526, 507.731, 32.921, 0.2288 ) }
    dend_37 { pt3dadd( 328.214, 508.757, 32.76, 0.2288 ) }
    dend_37 { pt3dadd( 328.208, 509.901, 32.76, 0.2288 ) }
    dend_37 { pt3dadd( 328.009, 511.019, 32.7858, 0.2288 ) }
    dend_37 { pt3dadd( 327.756, 512.014, 33.32, 0.2498 ) }
    dend_37 { pt3dadd( 327.568, 513.047, 33.5364, 0.242 ) }
    dend_37 { pt3dadd( 327.241, 514.027, 32.76, 0.2288 ) }
    dend_37 { pt3dadd( 327.184, 515.167, 32.76, 0.2288 ) }
    dend_37 { pt3dadd( 327.17, 516.173, 32.2238, 0.2288 ) }
    dend_37 { pt3dadd( 326.296, 516.652, 31.92, 0.2288 ) }
    dend_37 { pt3dadd( 325.541, 517.475, 31.92, 0.2288 ) }
    dend_37 { pt3dadd( 324.589, 517.975, 31.8662, 0.2288 ) }
    dend_37 { pt3dadd( 324.438, 518.997, 31.36, 0.2288 ) }
    dend_37 { pt3dadd( 323.592, 519.376, 31.36, 0.2288 ) }
    dend_37 { pt3dadd( 322.448, 519.376, 31.36, 0.2288 ) }
    dend_37 { pt3dadd( 321.313, 519.49, 31.36, 0.2288 ) }
    dend_37 { pt3dadd( 320.227, 519.675, 31.36, 0.2288 ) }
    dend_37 { pt3dadd( 319.286, 519.719, 32.7958, 0.443 ) }
    dend_37 { pt3dadd( 318.339, 519.811, 34.2986, 0.651 ) }
    dend_37 { pt3dadd( 317.278, 519.834, 35.0868, 0.5346 ) }
    dend_37 { pt3dadd( 316.697, 519.55, 36.3801, 0.5012 ) }
    dend_37 { pt3dadd( 315.898, 519.236, 35.24, 0.621 ) }
    dend_37 { pt3dadd( 314.928, 518.907, 34.5408, 0.6884 ) }
    dend_37 { pt3dadd( 314.267, 518.176, 34.6248, 0.4682 ) }
    dend_37 { pt3dadd( 313.604, 517.295, 34.449, 0.4576 ) }
    dend_37 { pt3dadd( 313.02, 516.312, 34.5139, 0.4576 ) }
    dend_37 { pt3dadd( 312.436, 515.33, 34.5792, 0.4576 ) }
    dend_37 { pt3dadd( 311.851, 514.347, 34.6441, 0.4576 ) }
    dend_37 { pt3dadd( 311.266, 513.363, 34.7091, 0.4576 ) }
    dend_37 { pt3dadd( 310.764, 512.553, 33.8304, 0.4756 ) }
    dend_37 { pt3dadd( 309.839, 512.282, 33.0669, 0.6542 ) }
    dend_37 { pt3dadd( 308.792, 512.061, 33.1089, 0.2424 ) }
    dend_37 { pt3dadd( 308.322, 512.512, 31.9505, 0.2288 ) }
    dend_37 { pt3dadd( 307.588, 511.939, 31.7993, 0.3378 ) }
    dend_37 { pt3dadd( 306.8, 511.368, 32.4576, 0.7372 ) }
    dend_37 { pt3dadd( 305.917, 511.381, 34.0934, 0.639 ) }
    dend_37 { pt3dadd( 305.302, 512.057, 35.5331, 0.3526 ) }
    dend_37 { pt3dadd( 304.53, 512.604, 36.3376, 0.31 ) }
    dend_37 { pt3dadd( 304.161, 512.082, 38.1948, 0.4028 ) }
    dend_37 { pt3dadd( 303.205, 512.423, 38.0162, 0.2702 ) }
    dend_37 { pt3dadd( 302.93, 513.294, 36.6019, 0.3592 ) }
    dend_37 { pt3dadd( 302.575, 513.006, 35.7092, 0.2296 ) }
    dend_37 { pt3dadd( 301.833, 513.012, 34.3899, 0.5084 ) }
    dend_37 { pt3dadd( 300.961, 513.523, 33.3416, 0.3646 ) }
    dend_37 { pt3dadd( 300.12, 513.935, 33.0537, 0.5044 ) }
    dend_37 { pt3dadd( 299.098, 514.223, 33.7616, 0.2888 ) }
    dend_37 { pt3dadd( 298.664, 514.959, 32.1793, 0.2494 ) }
    dend_37 { pt3dadd( 298.126, 515.206, 32.8485, 0.2438 ) }
    dend_37 { pt3dadd( 297.891, 514.565, 34.7309, 0.3038 ) }
    dend_37 { pt3dadd( 297.013, 514.247, 35.7386, 0.2542 ) }
    dend_37 { pt3dadd( 296.719, 514.289, 36.6495, 0.2806 ) }
    dend_37 { pt3dadd( 295.753, 514.084, 35.457, 0.3904 ) }
    dend_37 { pt3dadd( 295.152, 513.573, 34.8264, 0.602 ) }
    dend_37 { pt3dadd( 294.704, 512.886, 35.6633, 0.4758 ) }
    dend_37 { pt3dadd( 294.502, 512.501, 37.016, 0.4164 ) }
    dend_37 { pt3dadd( 294.92, 511.588, 37.5687, 0.4576 ) }
    dend_37 { pt3dadd( 295.158, 510.828, 36.787, 0.4068 ) }
    dend_37 { pt3dadd( 295.152, 509.876, 36.2401, 0.4684 ) }
    dend_37 { pt3dadd( 295.369, 509.108, 35.3671, 0.562 ) }
    dend_37 { pt3dadd( 295.266, 508.458, 37.2086, 0.6018 ) }
    dend_37 { pt3dadd( 295.054, 507.876, 38.4922, 0.6284 ) }
    dend_37 { pt3dadd( 294.808, 506.871, 38.8545, 0.452 ) }
    dend_37 { pt3dadd( 294.531, 505.889, 38.9466, 0.3378 ) }
    dend_37 { pt3dadd( 294.237, 505.548, 36.9916, 0.2544 ) }
    dend_37 { pt3dadd( 293.665, 504.962, 38.36, 0.5848 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 76/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 418.443, 526.366, 27.3426, 0.7626 ) }
    dend_28 { pt3dadd( 418.91, 527.441, 27.4872, 0.7384 ) }
    dend_28 { pt3dadd( 418.933, 528.568, 27.8919, 0.7858 ) }
    dend_28 { pt3dadd( 418.932, 529.683, 28.513, 0.7148 ) }
    dend_28 { pt3dadd( 418.921, 530.826, 28.506, 0.565 ) }
    dend_28 { pt3dadd( 418.817, 531.941, 27.9401, 0.4068 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 82/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 418.443, 526.366, 27.3426, 0.7626 ) }
    dend_27 { pt3dadd( 418.71, 526.465, 25.0968, 0.483 ) }
    dend_27 { pt3dadd( 419.373, 526.333, 23.5873, 0.279 ) }
    dend_27 { pt3dadd( 420.398, 525.89, 23.0698, 0.2388 ) }
    dend_27 { pt3dadd( 421.271, 525.373, 23.721, 0.2288 ) }
    dend_27 { pt3dadd( 422.304, 525.304, 24.5392, 0.2288 ) }
    dend_27 { pt3dadd( 423.353, 525.093, 25.395, 0.2672 ) }
    dend_27 { pt3dadd( 424.068, 524.487, 26.636, 0.293 ) }
    dend_27 { pt3dadd( 424.679, 523.711, 27.9567, 0.305 ) }
    dend_27 { pt3dadd( 425.662, 523.347, 28.285, 0.32 ) }
    dend_27 { pt3dadd( 426.548, 522.976, 27.1758, 0.3466 ) }
    dend_27 { pt3dadd( 427.09, 522.52, 25.0276, 0.3898 ) }
    dend_27 { pt3dadd( 427.811, 522.055, 23.2973, 0.4068 ) }
    dend_27 { pt3dadd( 428.773, 521.515, 22.8278, 0.4068 ) }
    dend_27 { pt3dadd( 429.677, 520.879, 22.1765, 0.348 ) }
    dend_27 { pt3dadd( 430.741, 520.656, 21.5869, 0.2906 ) }
    dend_27 { pt3dadd( 431.87, 520.64, 21.1544, 0.2392 ) }
    dend_27 { pt3dadd( 432.928, 520.669, 22.0018, 0.2696 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_27 { pt3dadd( 433.828, 520.875, 23.6214, 0.3214 ) }
    dend_27 { pt3dadd( 434.668, 521.473, 23.1188, 0.4556 ) }
    dend_27 { pt3dadd( 435.658, 521.333, 21.777, 0.5848 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 3/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 428.523, 512.398, 38.6109, 0.6356 ) }
    dend_22 { pt3dadd( 428.651, 512.899, 39.6637, 0.4284 ) }
    dend_22 { pt3dadd( 429.551, 513.554, 39.9199, 0.4548 ) }
    dend_22 { pt3dadd( 430.651, 513.638, 40.5754, 0.4084 ) }
    dend_22 { pt3dadd( 431.614, 513.058, 40.1993, 0.4068 ) }
    dend_22 { pt3dadd( 432.535, 512.553, 41.0631, 0.41 ) }
    dend_22 { pt3dadd( 432.9, 512.956, 43.4216, 0.4576 ) }
    dend_22 { pt3dadd( 432.751, 513.81, 45.1786, 0.4616 ) }
    dend_22 { pt3dadd( 433.174, 514.591, 46.3492, 0.4882 ) }
    dend_22 { pt3dadd( 434.202, 514.306, 47.0414, 0.501 ) }
    dend_22 { pt3dadd( 435.101, 513.675, 47.6372, 0.4522 ) }
    dend_22 { pt3dadd( 436.166, 513.408, 48.0696, 0.3734 ) }
    dend_22 { pt3dadd( 437.094, 513.701, 49.1898, 0.3998 ) }
    dend_22 { pt3dadd( 437.784, 514.452, 50.4056, 0.5696 ) }
    dend_22 { pt3dadd( 438.516, 515.283, 50.9712, 0.7714 ) }
    dend_22 { pt3dadd( 439.153, 516.225, 51.2372, 0.8644 ) }
    dend_22 { pt3dadd( 439.726, 517.192, 51.7238, 0.8438 ) }
    dend_22 { pt3dadd( 440.225, 518.207, 52.0705, 0.7822 ) }
    dend_22 { pt3dadd( 440.669, 519.259, 52.1273, 0.7584 ) }
    dend_22 { pt3dadd( 440.969, 520.348, 52.4048, 0.8098 ) }
    dend_22 { pt3dadd( 441.324, 521.387, 52.9774, 0.8612 ) }
    dend_22 { pt3dadd( 441.927, 522.328, 53.5816, 0.8212 ) }
    dend_22 { pt3dadd( 442.46, 523.293, 54.2794, 0.655 ) }
    dend_22 { pt3dadd( 443.023, 524.187, 55.2429, 0.4984 ) }
    dend_22 { pt3dadd( 443.922, 524.582, 56.2374, 0.445 ) }
    dend_22 { pt3dadd( 444.912, 524.247, 56.9769, 0.4984 ) }
    dend_22 { pt3dadd( 445.456, 523.727, 58.6625, 0.5914 ) }
    dend_22 { pt3dadd( 445.928, 523.783, 60.9658, 0.6662 ) }
    dend_22 { pt3dadd( 446.759, 524.253, 62.3266, 0.669 ) }
    dend_22 { pt3dadd( 447.398, 524.593, 64.3045, 0.5964 ) }
    dend_22 { pt3dadd( 448.186, 524.912, 65.9784, 0.5286 ) }
    dend_22 { pt3dadd( 449.211, 525.319, 66.4667, 0.5084 ) }
    dend_22 { pt3dadd( 450.123, 525.947, 66.05, 0.476 ) }
    dend_22 { pt3dadd( 451.033, 526.608, 65.9498, 0.4238 ) }
    dend_22 { pt3dadd( 451.999, 527.122, 66.6747, 0.3666 ) }
    dend_22 { pt3dadd( 452.833, 527.449, 65.3212, 0.4214 ) }
    dend_22 { pt3dadd( 453.68, 527.883, 66.3617, 0.4556 ) }
    dend_22 { pt3dadd( 454.311, 528.311, 68.4368, 0.5072 ) }
    dend_22 { pt3dadd( 455.033, 528.394, 70.5944, 0.5084 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 42/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 428.523, 512.398, 38.6109, 0.6356 ) }
    dend_21 { pt3dadd( 428.875, 513.735, 38.2553, 0.576 ) }
    dend_21 { pt3dadd( 429.319, 514.763, 37.7124, 0.6446 ) }
    dend_21 { pt3dadd( 429.794, 515.796, 37.5144, 0.7468 ) }
    dend_21 { pt3dadd( 430.369, 516.785, 37.4909, 0.8224 ) }
    dend_21 { pt3dadd( 430.906, 517.787, 37.2851, 0.8148 ) }
    dend_21 { pt3dadd( 431.386, 518.805, 36.787, 0.7452 ) }
    dend_21 { pt3dadd( 431.868, 519.833, 36.437, 0.6016 ) }
    dend_21 { pt3dadd( 432.171, 520.933, 36.4053, 0.5848 ) }
    dend_21 { pt3dadd( 432.206, 522.072, 36.4381, 0.6992 ) }
    dend_21 { pt3dadd( 432.226, 523.214, 36.6344, 0.8722 ) }
    dend_21 { pt3dadd( 432.36, 524.308, 37.3556, 0.959 ) }
    dend_21 { pt3dadd( 432.696, 525.395, 37.5122, 0.9428 ) }
    dend_21 { pt3dadd( 433.019, 526.493, 37.5214, 0.894 ) }
    dend_21 { pt3dadd( 432.965, 527.63, 37.5292, 0.7958 ) }
    dend_21 { pt3dadd( 432.365, 528.591, 37.5687, 0.788 ) }
    dend_21 { pt3dadd( 431.423, 529.226, 37.7555, 0.7638 ) }
    dend_21 { pt3dadd( 430.337, 529.377, 38.5078, 0.787 ) }
    dend_21 { pt3dadd( 429.217, 529.596, 38.6372, 0.7634 ) }
    dend_21 { pt3dadd( 428.093, 529.399, 38.6408, 0.7626 ) }
    dend_21 { pt3dadd( 426.95, 529.443, 38.6456, 0.8128 ) }
    dend_21 { pt3dadd( 425.895, 529.883, 38.6725, 0.8892 ) }
    dend_21 { pt3dadd( 424.97, 530.553, 38.8072, 0.9656 ) }
    dend_21 { pt3dadd( 424.148, 531.264, 39.6754, 0.9386 ) }
    dend_21 { pt3dadd( 423.323, 531.912, 40.7823, 0.8118 ) }
    dend_21 { pt3dadd( 422.651, 532.826, 41.1051, 0.7386 ) }
    dend_21 { pt3dadd( 422.188, 533.8, 41.9801, 0.7742 ) }
    dend_21 { pt3dadd( 422.195, 534.875, 42.7899, 0.9176 ) }
    dend_21 { pt3dadd( 422.42, 535.967, 42.1767, 0.9348 ) }
    dend_21 { pt3dadd( 422.683, 537.077, 42.0011, 0.8806 ) }
    dend_21 { pt3dadd( 422.888, 538.195, 42.0078, 0.8202 ) }
    dend_21 { pt3dadd( 422.734, 539.328, 42.0543, 0.8798 ) }
    dend_21 { pt3dadd( 422.579, 540.452, 42.3142, 0.974 ) }
    dend_21 { pt3dadd( 422.497, 541.555, 42.9752, 1.021 ) }
    dend_21 { pt3dadd( 422.243, 542.667, 43.12, 1.0424 ) }
    dend_21 { pt3dadd( 422.087, 543.8, 43.1211, 1.0424 ) }
    dend_21 { pt3dadd( 421.897, 544.923, 43.127, 1.0378 ) }
    dend_21 { pt3dadd( 421.451, 545.973, 43.1589, 1.0028 ) }
    dend_21 { pt3dadd( 420.844, 546.938, 43.3188, 0.9358 ) }
    dend_21 { pt3dadd( 420.188, 547.851, 43.806, 0.91 ) }
    dend_21 { pt3dadd( 419.573, 548.771, 44.4629, 0.9058 ) }
    dend_21 { pt3dadd( 418.746, 549.519, 45.0587, 0.9718 ) }
    dend_21 { pt3dadd( 417.825, 550.172, 45.4804, 0.9738 ) }
    dend_21 { pt3dadd( 416.843, 550.711, 45.9074, 0.8848 ) }
    dend_21 { pt3dadd( 415.829, 551.076, 46.8479, 0.763 ) }
    dend_21 { pt3dadd( 414.88, 551.543, 47.8467, 0.6994 ) }
    dend_21 { pt3dadd( 414.073, 552.267, 48.6329, 0.7372 ) }
    dend_21 { pt3dadd( 413.27, 553.081, 48.7194, 0.7372 ) }
    dend_21 { pt3dadd( 412.482, 553.91, 48.7172, 0.7098 ) }
    dend_21 { pt3dadd( 411.777, 554.803, 48.7057, 0.6288 ) }
    dend_21 { pt3dadd( 411.313, 555.836, 48.6326, 0.6102 ) }
    dend_21 { pt3dadd( 411.154, 556.93, 48.8499, 0.6548 ) }
    dend_21 { pt3dadd( 411.154, 557.963, 50.055, 0.793 ) }
    dend_21 { pt3dadd( 411.156, 559.006, 51.2019, 0.8874 ) }
    dend_21 { pt3dadd( 411.166, 560.071, 52.2248, 0.9092 ) }
    dend_21 { pt3dadd( 411.239, 561.145, 52.7327, 0.814 ) }
    dend_21 { pt3dadd( 411.402, 562.257, 52.2449, 0.7276 ) }
    dend_21 { pt3dadd( 411.372, 563.375, 52.1699, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_21 { pt3dadd( 411.123, 564.471, 52.5473, 0.661 ) }
    dend_21 { pt3dadd( 410.929, 565.565, 53.09, 0.6796 ) }
    dend_21 { pt3dadd( 410.668, 566.674, 53.205, 0.7212 ) }
    dend_21 { pt3dadd( 410.429, 567.784, 53.2297, 0.7466 ) }
    dend_21 { pt3dadd( 410.025, 568.851, 53.3912, 0.753 ) }
    dend_21 { pt3dadd( 409.692, 569.921, 53.8712, 0.7272 ) }
    dend_21 { pt3dadd( 409.455, 571.018, 54.3332, 0.7016 ) }
    dend_21 { pt3dadd( 409.277, 572.143, 54.5168, 0.6864 ) }
    dend_21 { pt3dadd( 409.083, 573.255, 54.5373, 0.6864 ) }
    dend_21 { pt3dadd( 408.737, 574.341, 54.3306, 0.6648 ) }
    dend_21 { pt3dadd( 408.483, 575.451, 54.32, 0.6138 ) }
    dend_21 { pt3dadd( 408.387, 576.59, 54.32, 0.5628 ) }
    dend_21 { pt3dadd( 408.267, 577.723, 54.32, 0.556 ) }
    dend_21 { pt3dadd( 407.926, 578.808, 54.32, 0.5848 ) }
    dend_21 { pt3dadd( 407.533, 579.879, 54.32, 0.5848 ) }
    dend_21 { pt3dadd( 407.355, 581.001, 54.32, 0.5494 ) }
    dend_21 { pt3dadd( 407.552, 582.102, 54.32, 0.5206 ) }
    dend_21 { pt3dadd( 407.843, 583.195, 54.3211, 0.5586 ) }
    dend_21 { pt3dadd( 407.783, 584.322, 54.3273, 0.635 ) }
    dend_21 { pt3dadd( 407.52, 585.435, 54.3726, 0.7118 ) }
    dend_21 { pt3dadd( 407.116, 586.479, 54.7417, 0.724 ) }
    dend_21 { pt3dadd( 406.449, 587.37, 55.258, 0.671 ) }
    dend_21 { pt3dadd( 405.686, 588.214, 55.44, 0.5946 ) }
    dend_21 { pt3dadd( 405.069, 589.167, 55.44, 0.5456 ) }
    dend_21 { pt3dadd( 404.634, 590.222, 55.4403, 0.5338 ) }
    dend_21 { pt3dadd( 404.199, 591.279, 55.442, 0.52 ) }
    dend_21 { pt3dadd( 403.742, 592.327, 55.4562, 0.4944 ) }
    dend_21 { pt3dadd( 403.286, 593.373, 55.585, 0.4546 ) }
    dend_21 { pt3dadd( 402.716, 594.317, 56.1778, 0.4178 ) }
    dend_21 { pt3dadd( 402.194, 595.291, 56.7686, 0.4068 ) }
    dend_21 { pt3dadd( 402.009, 596.392, 56.7042, 0.4376 ) }
    dend_21 { pt3dadd( 401.991, 597.533, 56.5947, 0.5036 ) }
    dend_21 { pt3dadd( 401.909, 598.661, 56.9114, 0.5338 ) }
    dend_21 { pt3dadd( 401.336, 599.473, 57.8038, 0.5172 ) }
    dend_21 { pt3dadd( 400.466, 600.134, 58.5981, 0.44 ) }
    dend_21 { pt3dadd( 399.521, 600.761, 58.8101, 0.3724 ) }
    dend_21 { pt3dadd( 398.546, 601.357, 58.8594, 0.304 ) }
    dend_21 { pt3dadd( 397.53, 601.858, 59.1791, 0.297 ) }
    dend_21 { pt3dadd( 396.603, 602.477, 59.7209, 0.359 ) }
    dend_21 { pt3dadd( 396.127, 603.46, 59.9119, 0.4738 ) }
    dend_21 { pt3dadd( 396.005, 604.591, 59.922, 0.527 ) }
    dend_21 { pt3dadd( 395.742, 605.696, 59.9315, 0.496 ) }
    dend_21 { pt3dadd( 395.191, 606.691, 59.9847, 0.4258 ) }
    dend_21 { pt3dadd( 394.424, 607.525, 60.2182, 0.3876 ) }
    dend_21 { pt3dadd( 393.612, 608.256, 60.9916, 0.362 ) }
    dend_21 { pt3dadd( 392.724, 608.88, 61.8699, 0.3362 ) }
    dend_21 { pt3dadd( 391.783, 609.435, 62.6993, 0.3508 ) }
    dend_21 { pt3dadd( 391.449, 610.326, 63.9834, 0.4396 ) }
    dend_21 { pt3dadd( 391.163, 611.404, 64.3782, 0.5426 ) }
    dend_21 { pt3dadd( 390.802, 612.488, 64.4412, 0.5592 ) }
    dend_21 { pt3dadd( 390.321, 613.523, 64.6145, 0.495 ) }
    dend_21 { pt3dadd( 389.84, 614.523, 65.2644, 0.3966 ) }
    dend_21 { pt3dadd( 389.405, 615.574, 65.3313, 0.3596 ) }
    dend_21 { pt3dadd( 388.569, 616.277, 64.7447, 0.3788 ) }
    dend_21 { pt3dadd( 387.676, 616.925, 65.3649, 0.4978 ) }
    dend_21 { pt3dadd( 387.356, 617.977, 65.9257, 0.6276 ) }
    dend_21 { pt3dadd( 387.255, 619.085, 66.5806, 0.6836 ) }
    dend_21 { pt3dadd( 386.905, 620.169, 66.6655, 0.6624 ) }
    dend_21 { pt3dadd( 386.479, 621.229, 66.8441, 0.5872 ) }
    dend_21 { pt3dadd( 385.52, 621.597, 67.9997, 0.6102 ) }
    dend_21 { pt3dadd( 384.851, 622.005, 69.9667, 0.6128 ) }
    dend_21 { pt3dadd( 384.71, 623.088, 70.6115, 0.661 ) }
    dend_21 { pt3dadd( 385.0, 624.169, 70.0585, 0.661 ) }
    dend_21 { pt3dadd( 385.19, 625.297, 70.0244, 0.6584 ) }
    dend_21 { pt3dadd( 385.353, 626.401, 70.2013, 0.6326 ) }
    dend_21 { pt3dadd( 384.866, 627.373, 71.0214, 0.6062 ) }
    dend_21 { pt3dadd( 384.127, 628.169, 71.8841, 0.5804 ) }
    dend_21 { pt3dadd( 383.345, 628.945, 72.5508, 0.5546 ) }
    dend_21 { pt3dadd( 382.991, 629.901, 73.5008, 0.5338 ) }
    dend_21 { pt3dadd( 383.352, 630.794, 74.9591, 0.5338 ) }
    dend_21 { pt3dadd( 383.871, 631.588, 76.4711, 0.5188 ) }
    dend_21 { pt3dadd( 384.066, 632.598, 77.2226, 0.483 ) }
    dend_21 { pt3dadd( 383.809, 633.679, 76.9241, 0.483 ) }
    dend_21 { pt3dadd( 383.319, 634.684, 77.2198, 0.528 ) }
    dend_21 { pt3dadd( 383.008, 635.658, 78.4028, 0.6292 ) }
    dend_21 { pt3dadd( 382.963, 636.526, 80.1164, 0.6812 ) }
    dend_21 { pt3dadd( 383.358, 637.396, 81.5668, 0.6896 ) }
    dend_21 { pt3dadd( 383.72, 638.39, 82.4505, 0.6722 ) }
    dend_21 { pt3dadd( 383.945, 639.475, 83.078, 0.6864 ) }
    dend_21 { pt3dadd( 384.281, 640.537, 82.9934, 0.6864 ) }
    dend_21 { pt3dadd( 384.654, 641.524, 81.9624, 0.6372 ) }
    dend_21 { pt3dadd( 385.212, 642.442, 81.2787, 0.5468 ) }
    dend_21 { pt3dadd( 385.907, 643.349, 81.3299, 0.4956 ) }
    dend_21 { pt3dadd( 386.361, 644.328, 81.8885, 0.522 ) }
    dend_21 { pt3dadd( 386.498, 645.341, 83.1048, 0.6124 ) }
    dend_21 { pt3dadd( 386.688, 646.312, 84.4785, 0.7012 ) }
    dend_21 { pt3dadd( 386.924, 647.35, 85.4384, 0.71 ) }
    dend_21 { pt3dadd( 387.15, 648.447, 85.9774, 0.6446 ) }
    dend_21 { pt3dadd( 387.076, 649.513, 86.611, 0.5664 ) }
    dend_21 { pt3dadd( 386.418, 650.308, 87.5064, 0.5796 ) }
    dend_21 { pt3dadd( 385.592, 651.015, 88.3509, 0.6258 ) }
    dend_21 { pt3dadd( 384.708, 651.704, 88.5091, 0.6356 ) }
    dend_21 { pt3dadd( 384.06, 652.508, 89.2564, 0.569 ) }
    dend_21 { pt3dadd( 383.643, 653.515, 89.402, 0.4994 ) }
    dend_21 { pt3dadd( 383.159, 654.514, 89.7504, 0.465 ) }
    dend_21 { pt3dadd( 382.834, 655.391, 91.2498, 0.4204 ) }
    dend_21 { pt3dadd( 382.662, 656.404, 91.0742, 0.3662 ) }
    dend_21 { pt3dadd( 382.333, 657.307, 92.2074, 0.2838 ) }
    dend_21 { pt3dadd( 382.213, 657.174, 94.9024, 0.2796 ) }
    dend_21 { pt3dadd( 381.922, 658.088, 95.9146, 0.3558 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_21 { pt3dadd( 382.414, 659.098, 96.4208, 0.486 ) }
    dend_21 { pt3dadd( 382.781, 660.149, 96.8814, 0.6034 ) }
    dend_21 { pt3dadd( 382.952, 661.273, 96.8878, 0.6672 ) }
    dend_21 { pt3dadd( 383.385, 662.328, 96.9262, 0.6732 ) }
    dend_21 { pt3dadd( 383.871, 663.341, 97.1869, 0.6218 ) }
    dend_21 { pt3dadd( 383.949, 664.386, 98.0655, 0.5614 ) }
    dend_21 { pt3dadd( 383.731, 665.406, 98.7325, 0.5084 ) }
    dend_21 { pt3dadd( 383.849, 666.484, 98.0036, 0.4934 ) }
    dend_21 { pt3dadd( 383.579, 667.41, 98.0, 0.2874 ) }
    dend_21 { pt3dadd( 382.92, 668.228, 98.4007, 0.3368 ) }
    dend_21 { pt3dadd( 382.668, 669.272, 99.0223, 0.5338 ) }
    dend_21 { pt3dadd( 382.446, 670.096, 99.7038, 0.4946 ) }
    dend_21 { pt3dadd( 382.487, 671.001, 99.3283, 0.352 ) }
    dend_21 { pt3dadd( 382.337, 671.943, 98.28, 0.424 ) }
    dend_21 { pt3dadd( 382.403, 672.894, 99.1715, 0.6348 ) }
    dend_21 { pt3dadd( 382.32, 673.662, 100.24, 0.7784 ) }
    dend_21 { pt3dadd( 382.096, 674.588, 99.111, 0.5992 ) }
    dend_21 { pt3dadd( 382.144, 675.408, 99.7111, 0.592 ) }
    dend_21 { pt3dadd( 381.847, 676.442, 100.563, 0.4644 ) }
    dend_21 { pt3dadd( 381.75, 677.473, 101.196, 0.2844 ) }
    dend_21 { pt3dadd( 381.459, 678.472, 100.676, 0.5442 ) }
    dend_21 { pt3dadd( 381.263, 679.58, 100.666, 0.3982 ) }
    dend_21 { pt3dadd( 380.919, 680.62, 101.0, 0.2758 ) }
    dend_21 { pt3dadd( 380.625, 681.648, 100.584, 0.2288 ) }
    dend_21 { pt3dadd( 380.491, 682.478, 101.807, 0.2288 ) }
    dend_21 { pt3dadd( 379.822, 683.127, 101.527, 0.2288 ) }
    dend_21 { pt3dadd( 379.808, 684.075, 102.48, 0.4352 ) }
    dend_21 { pt3dadd( 379.465, 684.953, 102.323, 0.503 ) }
    dend_21 { pt3dadd( 378.916, 685.747, 102.873, 0.653 ) }
    dend_21 { pt3dadd( 379.122, 686.553, 104.068, 0.3048 ) }
    dend_21 { pt3dadd( 378.641, 687.404, 104.35, 0.3552 ) }
    dend_21 { pt3dadd( 377.941, 688.058, 103.683, 0.5084 ) }
    dend_21 { pt3dadd( 377.231, 688.863, 104.44, 0.4242 ) }
    dend_21 { pt3dadd( 376.434, 689.452, 105.504, 0.2688 ) }
    dend_21 { pt3dadd( 375.454, 689.489, 105.944, 0.3024 ) }
    dend_21 { pt3dadd( 374.756, 689.832, 105.148, 0.475 ) }
    dend_21 { pt3dadd( 373.742, 689.946, 104.538, 0.4482 ) }
    dend_21 { pt3dadd( 372.773, 690.073, 105.021, 0.3986 ) }
    dend_21 { pt3dadd( 371.856, 690.383, 104.995, 0.4818 ) }
    dend_21 { pt3dadd( 370.991, 691.116, 105.036, 0.4576 ) }
    dend_21 { pt3dadd( 370.145, 691.69, 105.097, 0.4014 ) }
    dend_21 { pt3dadd( 369.086, 692.087, 105.06, 0.3994 ) }
    dend_21 { pt3dadd( 368.005, 692.318, 104.436, 0.3304 ) }
    dend_21 { pt3dadd( 367.052, 692.806, 104.51, 0.4132 ) }
    dend_21 { pt3dadd( 366.2, 693.095, 104.695, 0.348 ) }
    dend_21 { pt3dadd( 365.517, 693.004, 103.88, 0.4524 ) }
    dend_21 { pt3dadd( 364.426, 693.15, 104.078, 0.4946 ) }
    dend_21 { pt3dadd( 363.416, 693.402, 104.702, 0.2398 ) }
    dend_21 { pt3dadd( 362.451, 693.861, 105.27, 0.2714 ) }
    dend_21 { pt3dadd( 361.652, 694.489, 105.198, 0.4472 ) }
    dend_21 { pt3dadd( 361.019, 695.322, 105.56, 0.2862 ) }
    dend_21 { pt3dadd( 360.383, 696.121, 105.173, 0.3342 ) }
    dend_21 { pt3dadd( 360.347, 697.003, 105.752, 0.3208 ) }
    dend_21 { pt3dadd( 360.209, 697.671, 106.709, 0.4286 ) }
    dend_21 { pt3dadd( 360.589, 697.824, 108.427, 0.2554 ) }
    dend_21 { pt3dadd( 360.86, 698.878, 108.406, 0.3176 ) }
    dend_21 { pt3dadd( 360.932, 699.694, 108.08, 0.2288 ) }
    dend_21 { pt3dadd( 360.632, 700.782, 108.282, 0.2288 ) }
    dend_21 { pt3dadd( 360.271, 701.834, 108.859, 0.2288 ) }
    dend_21 { pt3dadd( 359.708, 702.806, 108.943, 0.2288 ) }
    dend_21 { pt3dadd( 359.211, 703.529, 110.462, 0.2288 ) }
    dend_21 { pt3dadd( 358.987, 704.614, 110.88, 0.2288 ) }
    dend_21 { pt3dadd( 359.099, 705.373, 112.362, 0.3854 ) }
    dend_21 { pt3dadd( 358.138, 705.818, 112.754, 0.4048 ) }
    dend_21 { pt3dadd( 357.132, 706.077, 113.4, 0.2288 ) }
    dend_21 { pt3dadd( 356.047, 706.144, 114.089, 0.2288 ) }
    dend_21 { pt3dadd( 354.972, 706.258, 114.866, 0.2686 ) }
    dend_21 { pt3dadd( 354.087, 706.697, 115.64, 0.4004 ) }
    dend_21 { pt3dadd( 353.426, 707.471, 115.637, 0.3506 ) }
    dend_21 { pt3dadd( 353.267, 708.136, 116.951, 0.5778 ) }
    dend_21 { pt3dadd( 353.003, 708.326, 119.279, 0.3312 ) }
    dend_21 { pt3dadd( 352.81, 709.051, 118.44, 0.3304 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 72/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 430.772, 497.238, 43.395, 0.5848 ) }
    dend_11 { pt3dadd( 429.945, 497.118, 44.24, 0.4362 ) }
    dend_11 { pt3dadd( 428.93, 496.729, 44.1599, 0.293 ) }
    dend_11 { pt3dadd( 427.903, 496.664, 43.3804, 0.4866 ) }
    dend_11 { pt3dadd( 427.284, 496.916, 42.1868, 0.483 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 77/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 430.772, 497.238, 43.395, 0.5848 ) }
    dend_2 { pt3dadd( 431.345, 497.856, 44.0014, 0.5246 ) }
    dend_2 { pt3dadd( 432.223, 498.571, 44.2165, 0.5286 ) }
    dend_2 { pt3dadd( 433.046, 499.362, 44.1918, 0.5338 ) }
    dend_2 { pt3dadd( 433.705, 500.289, 44.0129, 0.5544 ) }
    dend_2 { pt3dadd( 434.118, 501.31, 43.3353, 0.6008 ) }
    dend_2 { pt3dadd( 434.452, 502.391, 42.9817, 0.631 ) }
    dend_2 { pt3dadd( 434.725, 503.477, 42.4248, 0.6146 ) }
    dend_2 { pt3dadd( 434.927, 504.566, 42.9164, 0.5884 ) }
    dend_2 { pt3dadd( 434.975, 505.694, 43.3194, 0.6312 ) }
    dend_2 { pt3dadd( 435.076, 506.64, 41.8664, 0.7296 ) }
    dend_2 { pt3dadd( 435.532, 507.597, 40.8596, 0.7372 ) }
    dend_2 { pt3dadd( 435.952, 508.627, 40.2102, 0.6636 ) }
    dend_2 { pt3dadd( 436.317, 509.671, 39.501, 0.5618 ) }
    dend_2 { pt3dadd( 436.61, 510.699, 40.4684, 0.5844 ) }
    dend_2 { pt3dadd( 437.287, 511.604, 40.8772, 0.6606 ) }
    dend_2 { pt3dadd( 437.959, 512.529, 40.8772, 0.7624 ) }
    dend_2 { pt3dadd( 438.7, 513.4, 40.868, 0.788 ) }
    dend_2 { pt3dadd( 439.512, 514.206, 40.8344, 0.7626 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 96/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 510.555, 632.568, 46.0132, 0.5338 ) }
    dend_56 { pt3dadd( 510.699, 632.885, 46.2244, 0.5722 ) }
    dend_56 { pt3dadd( 510.836, 633.526, 47.5796, 0.5092 ) }
    dend_56 { pt3dadd( 510.871, 634.41, 48.72, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_56 { pt3dadd( 510.547, 635.413, 49.1361, 0.3952 ) }
    dend_56 { pt3dadd( 509.995, 636.182, 48.4448, 0.8136 ) }
    dend_56 { pt3dadd( 509.662, 636.761, 50.0791, 0.5848 ) }
    dend_56 { pt3dadd( 509.159, 637.724, 50.3689, 0.484 ) }
    dend_56 { pt3dadd( 509.326, 638.273, 50.7654, 0.4068 ) }
    dend_56 { pt3dadd( 509.495, 639.048, 50.1679, 0.3472 ) }
    dend_56 { pt3dadd( 509.225, 639.974, 50.911, 0.4332 ) }
    dend_56 { pt3dadd( 508.851, 640.869, 51.9428, 0.6864 ) }
    dend_56 { pt3dadd( 508.286, 641.487, 52.3967, 0.3744 ) }
    dend_56 { pt3dadd( 508.198, 642.471, 52.64, 0.4728 ) }
    dend_56 { pt3dadd( 508.75, 643.445, 53.111, 0.6356 ) }
    dend_56 { pt3dadd( 509.253, 644.404, 53.111, 0.6864 ) }
    dend_56 { pt3dadd( 509.711, 644.425, 54.5863, 0.4576 ) }
    dend_56 { pt3dadd( 510.025, 645.501, 54.8682, 0.41 ) }
    dend_56 { pt3dadd( 510.714, 646.139, 54.147, 0.4402 ) }
    dend_56 { pt3dadd( 511.199, 646.969, 53.8006, 0.5292 ) }
    dend_56 { pt3dadd( 511.808, 647.777, 54.4939, 0.3596 ) }
    dend_56 { pt3dadd( 511.826, 648.793, 55.5016, 0.2288 ) }
    dend_56 { pt3dadd( 511.244, 649.547, 56.089, 0.2288 ) }
    dend_56 { pt3dadd( 511.025, 650.367, 54.6011, 0.256 ) }
    dend_56 { pt3dadd( 511.027, 651.467, 54.4286, 0.356 ) }
    dend_56 { pt3dadd( 511.417, 652.451, 54.6535, 0.5702 ) }
    dend_56 { pt3dadd( 511.535, 653.472, 55.3809, 0.3894 ) }
    dend_56 { pt3dadd( 511.699, 654.582, 55.44, 0.4068 ) }
    dend_56 { pt3dadd( 511.482, 655.571, 54.4421, 0.4668 ) }
    dend_56 { pt3dadd( 511.656, 656.379, 55.291, 0.4454 ) }
    dend_56 { pt3dadd( 511.481, 657.276, 55.5248, 0.527 ) }
    dend_56 { pt3dadd( 511.254, 658.119, 56.5015, 0.2408 ) }
    dend_56 { pt3dadd( 510.773, 659.019, 56.59, 0.3274 ) }
    dend_56 { pt3dadd( 510.451, 659.99, 57.4076, 0.6088 ) }
    dend_56 { pt3dadd( 510.341, 661.11, 57.8581, 0.5592 ) }
    dend_56 { pt3dadd( 510.575, 662.156, 58.5463, 0.6084 ) }
    dend_56 { pt3dadd( 510.994, 662.937, 60.0726, 0.3262 ) }
    dend_56 { pt3dadd( 511.025, 664.007, 60.0264, 0.3004 ) }
    dend_56 { pt3dadd( 510.924, 665.12, 59.9281, 0.3304 ) }
    dend_56 { pt3dadd( 511.08, 666.01, 59.822, 0.3162 ) }
    dend_56 { pt3dadd( 511.23, 666.794, 59.9637, 0.5614 ) }
    dend_56 { pt3dadd( 511.715, 667.8, 60.2482, 0.4698 ) }
    dend_56 { pt3dadd( 512.394, 668.58, 60.5153, 0.4576 ) }
    dend_56 { pt3dadd( 513.15, 669.248, 60.4946, 0.4204 ) }
    dend_56 { pt3dadd( 513.62, 670.153, 61.1654, 0.4284 ) }
    dend_56 { pt3dadd( 513.896, 671.171, 60.9594, 0.3298 ) }
    dend_56 { pt3dadd( 514.201, 672.251, 60.48, 0.4498 ) }
    dend_56 { pt3dadd( 514.607, 672.968, 61.6, 0.4806 ) }
    dend_56 { pt3dadd( 514.543, 673.77, 61.9984, 0.4108 ) }
    dend_56 { pt3dadd( 514.898, 674.499, 63.2447, 0.2288 ) }
    dend_56 { pt3dadd( 514.8, 675.324, 61.5362, 0.2288 ) }
    dend_56 { pt3dadd( 515.143, 675.782, 62.8718, 0.426 ) }
    dend_56 { pt3dadd( 514.949, 676.631, 63.56, 0.2712 ) }
    dend_56 { pt3dadd( 514.863, 677.759, 63.3279, 0.2288 ) }
    dend_56 { pt3dadd( 514.902, 678.695, 62.2978, 0.3788 ) }
    dend_56 { pt3dadd( 514.228, 678.751, 62.5601, 0.5192 ) }
    dend_56 { pt3dadd( 514.342, 679.65, 61.32, 0.3814 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 53/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 510.555, 632.568, 46.0132, 0.5338 ) }
    dend_55 { pt3dadd( 511.139, 632.746, 46.48, 0.305 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 55/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 376.185, 321.705, 25.9157, 0.4068 ) }
    dend_49 { pt3dadd( 376.831, 322.054, 25.5347, 0.3486 ) }
    dend_49 { pt3dadd( 377.82, 322.483, 25.4219, 0.4576 ) }
    dend_49 { pt3dadd( 378.718, 322.722, 25.4287, 0.4576 ) }
    dend_49 { pt3dadd( 379.656, 322.614, 26.04, 0.2288 ) }
    dend_49 { pt3dadd( 380.783, 322.511, 26.04, 0.2288 ) }
    dend_49 { pt3dadd( 381.641, 321.78, 26.2074, 0.2676 ) }
    dend_49 { pt3dadd( 382.384, 321.002, 26.6347, 0.4688 ) }
    dend_49 { pt3dadd( 382.26, 319.945, 26.0698, 0.728 ) }
    dend_49 { pt3dadd( 382.325, 319.062, 26.88, 0.5848 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 65/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 376.185, 321.705, 25.9157, 0.4068 ) }
    dend_48 { pt3dadd( 376.376, 321.578, 24.92, 0.305 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 67/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 325.62, 404.518, 18.0132, 0.3814 ) }
    dend_40 { pt3dadd( 325.246, 403.95, 18.3584, 0.5724 ) }
    dend_40 { pt3dadd( 324.896, 402.952, 17.9045, 0.3602 ) }
    dend_40 { pt3dadd( 325.068, 402.029, 16.808, 0.4576 ) }
    dend_40 { pt3dadd( 325.006, 400.938, 16.3715, 0.4576 ) }
    dend_40 { pt3dadd( 324.444, 400.286, 15.6443, 0.6102 ) }
    dend_40 { pt3dadd( 323.439, 400.187, 15.6667, 0.447 ) }
    dend_40 { pt3dadd( 322.494, 400.286, 16.52, 0.2796 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 75/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 325.62, 404.518, 18.0132, 0.3814 ) }
    dend_39 { pt3dadd( 325.301, 404.454, 17.998, 0.2902 ) }
    dend_39 { pt3dadd( 324.437, 404.806, 18.4769, 0.2288 ) }
    dend_39 { pt3dadd( 323.345, 404.747, 17.9735, 0.2592 ) }
    dend_39 { pt3dadd( 322.263, 404.777, 17.5096, 0.2984 ) }
    dend_39 { pt3dadd( 321.139, 404.862, 17.9137, 0.2548 ) }
    dend_39 { pt3dadd( 320.19, 404.676, 17.2739, 0.526 ) }
    dend_39 { pt3dadd( 319.255, 404.962, 17.5713, 0.7854 ) }
    dend_39 { pt3dadd( 318.186, 404.953, 18.1038, 0.7082 ) }
    dend_39 { pt3dadd( 317.319, 404.499, 18.0728, 0.563 ) }
    dend_39 { pt3dadd( 316.599, 403.832, 18.7289, 0.6728 ) }
    dend_39 { pt3dadd( 315.561, 403.71, 18.611, 0.4576 ) }
    dend_39 { pt3dadd( 314.775, 403.26, 18.6394, 0.5084 ) }
    dend_39 { pt3dadd( 313.925, 403.445, 19.0889, 0.3506 ) }
    dend_39 { pt3dadd( 313.477, 403.036, 17.6095, 0.814 ) }
    dend_39 { pt3dadd( 312.866, 402.673, 16.6204, 0.6278 ) }
    dend_39 { pt3dadd( 312.202, 401.968, 15.7532, 0.5172 ) }
    dend_39 { pt3dadd( 311.194, 401.887, 16.2321, 0.5972 ) }
    dend_39 { pt3dadd( 310.612, 401.662, 14.5689, 0.3632 ) }
    dend_39 { pt3dadd( 310.109, 402.328, 13.1911, 0.3814 ) }
    dend_39 { pt3dadd( 309.167, 402.151, 13.6846, 0.2292 ) }
    dend_39 { pt3dadd( 308.371, 401.76, 12.6232, 0.4824 ) }
    dend_39 { pt3dadd( 307.36, 402.109, 13.16, 0.2346 ) }
    dend_39 { pt3dadd( 306.759, 402.009, 13.907, 0.3988 ) }
    dend_39 { pt3dadd( 307.095, 401.422, 15.816, 0.619 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_39 { pt3dadd( 306.972, 401.321, 18.142, 0.2542 ) }
    dend_39 { pt3dadd( 306.411, 401.844, 19.4878, 0.412 ) }
    dend_39 { pt3dadd( 306.378, 402.273, 21.2599, 0.2806 ) }
    dend_39 { pt3dadd( 306.144, 402.916, 22.4, 0.3512 ) }
    dend_39 { pt3dadd( 305.346, 403.148, 22.1385, 0.4576 ) }
    dend_39 { pt3dadd( 305.064, 403.495, 20.2002, 0.3666 ) }
    dend_39 { pt3dadd( 304.175, 404.03, 20.0747, 0.4068 ) }
    dend_39 { pt3dadd( 303.389, 404.378, 20.2675, 0.3462 ) }
    dend_39 { pt3dadd( 303.221, 405.437, 19.9241, 0.2348 ) }
    dend_39 { pt3dadd( 302.857, 406.211, 18.806, 0.2288 ) }
    dend_39 { pt3dadd( 302.609, 406.884, 17.4457, 0.4458 ) }
    dend_39 { pt3dadd( 302.359, 406.933, 14.8043, 0.4326 ) }
    dend_39 { pt3dadd( 301.773, 407.32, 14.0834, 0.2288 ) }
    dend_39 { pt3dadd( 301.057, 406.999, 13.2257, 0.2412 ) }
    dend_39 { pt3dadd( 300.29, 407.333, 11.9931, 0.371 ) }
    dend_39 { pt3dadd( 299.763, 408.242, 11.48, 0.2288 ) }
    dend_39 { pt3dadd( 298.974, 408.887, 10.6975, 0.4576 ) }
    dend_39 { pt3dadd( 298.352, 408.491, 11.8804, 0.3538 ) }
    dend_39 { pt3dadd( 297.52, 408.481, 13.4163, 0.403 ) }
    dend_39 { pt3dadd( 296.868, 409.094, 14.28, 0.4576 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 20/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 418.817, 531.941, 27.9401, 0.4068 ) }
    dend_32 { pt3dadd( 418.481, 532.003, 27.104, 0.429 ) }
    dend_32 { pt3dadd( 417.541, 532.12, 26.3301, 0.5092 ) }
    dend_32 { pt3dadd( 416.458, 532.313, 27.0549, 0.6038 ) }
    dend_32 { pt3dadd( 415.738, 533.027, 26.9744, 0.6356 ) }
    dend_32 { pt3dadd( 414.89, 533.747, 27.1268, 0.5452 ) }
    dend_32 { pt3dadd( 414.337, 534.527, 28.5799, 0.4628 ) }
    dend_32 { pt3dadd( 413.602, 534.989, 30.3638, 0.4586 ) }
    dend_32 { pt3dadd( 413.025, 535.938, 29.7102, 0.5608 ) }
    dend_32 { pt3dadd( 412.688, 537.027, 29.6223, 0.6102 ) }
    dend_32 { pt3dadd( 412.005, 537.937, 29.3958, 0.6082 ) }
    dend_32 { pt3dadd( 411.404, 538.817, 28.4315, 0.5556 ) }
    dend_32 { pt3dadd( 411.147, 539.904, 28.6807, 0.5126 ) }
    dend_32 { pt3dadd( 411.115, 540.933, 29.8463, 0.5294 ) }
    dend_32 { pt3dadd( 410.941, 542.044, 30.0712, 0.5028 ) }
    dend_32 { pt3dadd( 410.534, 543.099, 29.836, 0.46 ) }
    dend_32 { pt3dadd( 410.225, 544.178, 30.3008, 0.3814 ) }
    dend_32 { pt3dadd( 410.174, 545.225, 30.389, 0.3922 ) }
    dend_32 { pt3dadd( 410.126, 546.231, 29.2037, 0.4584 ) }
    dend_32 { pt3dadd( 409.825, 547.306, 28.7115, 0.483 ) }
    dend_32 { pt3dadd( 409.446, 548.379, 28.7946, 0.483 ) }
    dend_32 { pt3dadd( 409.078, 549.404, 29.5736, 0.43 ) }
    dend_32 { pt3dadd( 408.685, 550.396, 30.5844, 0.389 ) }
    dend_32 { pt3dadd( 408.511, 551.49, 30.9588, 0.3628 ) }
    dend_32 { pt3dadd( 408.712, 552.602, 30.8319, 0.4132 ) }
    dend_32 { pt3dadd( 408.764, 553.735, 30.6922, 0.471 ) }
    dend_32 { pt3dadd( 408.629, 554.537, 30.2677, 0.4576 ) }
    dend_32 { pt3dadd( 409.086, 555.072, 28.8879, 0.4392 ) }
    dend_32 { pt3dadd( 409.323, 555.422, 30.7322, 0.4576 ) }
    dend_32 { pt3dadd( 409.603, 556.269, 30.6972, 0.5388 ) }
    dend_32 { pt3dadd( 409.989, 557.249, 30.4212, 0.305 ) }
    dend_32 { pt3dadd( 410.207, 558.325, 30.0656, 0.2638 ) }
    dend_32 { pt3dadd( 410.218, 559.306, 30.52, 0.2288 ) }
    dend_32 { pt3dadd( 409.419, 559.874, 30.9803, 0.366 ) }
    dend_32 { pt3dadd( 409.093, 560.554, 32.445, 0.3568 ) }
    dend_32 { pt3dadd( 408.98, 561.584, 31.507, 0.574 ) }
    dend_32 { pt3dadd( 409.089, 562.456, 30.52, 0.4454 ) }
    dend_32 { pt3dadd( 408.942, 562.746, 32.251, 0.3482 ) }
    dend_32 { pt3dadd( 408.959, 563.661, 33.1178, 0.2818 ) }
    dend_32 { pt3dadd( 409.481, 564.643, 33.5135, 0.2288 ) }
    dend_32 { pt3dadd( 409.529, 565.773, 33.581, 0.2288 ) }
    dend_32 { pt3dadd( 409.348, 566.641, 32.76, 0.29 ) }
    dend_32 { pt3dadd( 409.895, 567.178, 31.5874, 0.292 ) }
    dend_32 { pt3dadd( 409.367, 567.638, 29.8676, 0.2288 ) }
    dend_32 { pt3dadd( 408.868, 568.391, 29.4, 0.2582 ) }
    dend_32 { pt3dadd( 408.983, 569.364, 30.5609, 0.408 ) }
    dend_32 { pt3dadd( 408.67, 570.029, 31.8928, 0.4576 ) }
    dend_32 { pt3dadd( 408.795, 571.121, 32.4565, 0.3146 ) }
    dend_32 { pt3dadd( 409.12, 571.994, 31.292, 0.2288 ) }
    dend_32 { pt3dadd( 408.726, 572.252, 29.314, 0.4922 ) }
    dend_32 { pt3dadd( 408.858, 573.034, 29.7844, 0.4322 ) }
    dend_32 { pt3dadd( 408.724, 573.375, 31.1699, 0.4614 ) }
    dend_32 { pt3dadd( 408.611, 574.375, 31.962, 0.3838 ) }
    dend_32 { pt3dadd( 408.604, 574.917, 33.8464, 0.2288 ) }
    dend_32 { pt3dadd( 408.522, 575.478, 31.705, 0.3528 ) }
    dend_32 { pt3dadd( 408.542, 576.118, 31.8595, 0.4496 ) }
    dend_32 { pt3dadd( 408.31, 576.76, 32.48, 0.3722 ) }
    dend_32 { pt3dadd( 407.714, 577.337, 31.8284, 0.274 ) }
    dend_32 { pt3dadd( 407.394, 577.967, 30.1185, 0.2288 ) }
    dend_32 { pt3dadd( 407.264, 579.063, 29.6836, 0.2288 ) }
    dend_32 { pt3dadd( 407.564, 579.791, 30.2873, 0.4292 ) }
    dend_32 { pt3dadd( 407.332, 580.478, 31.6666, 0.4176 ) }
    dend_32 { pt3dadd( 406.813, 581.046, 30.9526, 0.5264 ) }
    dend_32 { pt3dadd( 406.029, 581.443, 29.7973, 0.339 ) }
    dend_32 { pt3dadd( 405.423, 581.838, 31.5932, 0.2886 ) }
    dend_32 { pt3dadd( 404.825, 582.66, 31.3681, 0.4188 ) }
    dend_32 { pt3dadd( 404.207, 583.379, 31.08, 0.4576 ) }
    dend_32 { pt3dadd( 403.569, 583.878, 32.1348, 0.5242 ) }
    dend_32 { pt3dadd( 403.001, 584.708, 31.8805, 0.2488 ) }
    dend_32 { pt3dadd( 402.503, 585.609, 31.0022, 0.2288 ) }
    dend_32 { pt3dadd( 402.349, 586.627, 31.6, 0.3352 ) }
    dend_32 { pt3dadd( 402.393, 587.418, 32.9664, 0.6334 ) }
    dend_32 { pt3dadd( 401.719, 588.086, 32.9, 0.4514 ) }
    dend_32 { pt3dadd( 401.658, 589.142, 33.2892, 0.229 ) }
    dend_32 { pt3dadd( 401.172, 590.049, 32.9983, 0.3278 ) }
    dend_32 { pt3dadd( 401.025, 591.172, 33.129, 0.249 ) }
    dend_32 { pt3dadd( 400.624, 592.206, 33.6, 0.2288 ) }
    dend_32 { pt3dadd( 400.215, 593.172, 33.2041, 0.2288 ) }
    dend_32 { pt3dadd( 399.614, 594.077, 33.32, 0.2288 ) }
    dend_32 { pt3dadd( 399.099, 594.994, 33.2816, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_32 { pt3dadd( 398.435, 595.864, 32.76, 0.2288 ) }
    dend_32 { pt3dadd( 397.954, 596.864, 32.786, 0.2582 ) }
    dend_32 { pt3dadd( 397.287, 597.77, 32.76, 0.3514 ) }
    dend_32 { pt3dadd( 396.502, 598.409, 32.2, 0.255 ) }
    dend_32 { pt3dadd( 395.923, 599.308, 32.0844, 0.2288 ) }
    dend_32 { pt3dadd( 395.125, 599.927, 31.7114, 0.2288 ) }
    dend_32 { pt3dadd( 394.951, 600.383, 33.8635, 0.3928 ) }
    dend_32 { pt3dadd( 394.363, 600.846, 33.1892, 0.2288 ) }
    dend_32 { pt3dadd( 394.216, 601.809, 34.1093, 0.2288 ) }
    dend_32 { pt3dadd( 393.878, 602.854, 33.6459, 0.2288 ) }
    dend_32 { pt3dadd( 393.536, 603.846, 33.4849, 0.2288 ) }
    dend_32 { pt3dadd( 393.523, 604.872, 32.76, 0.2288 ) }
    dend_32 { pt3dadd( 392.823, 605.726, 32.7583, 0.2292 ) }
    dend_32 { pt3dadd( 392.482, 606.573, 31.4068, 0.3304 ) }
    dend_32 { pt3dadd( 392.132, 607.628, 31.64, 0.452 ) }
    dend_32 { pt3dadd( 391.934, 608.678, 31.9116, 0.4692 ) }
    dend_32 { pt3dadd( 391.466, 609.316, 30.9798, 0.3758 ) }
    dend_32 { pt3dadd( 391.121, 610.26, 30.2434, 0.2824 ) }
    dend_32 { pt3dadd( 391.0, 611.382, 30.5396, 0.2778 ) }
    dend_32 { pt3dadd( 391.019, 612.429, 30.6785, 0.2854 ) }
    dend_32 { pt3dadd( 390.905, 613.407, 30.3551, 0.3344 ) }
    dend_32 { pt3dadd( 390.925, 614.303, 28.9705, 0.3836 ) }
    dend_32 { pt3dadd( 390.676, 615.195, 29.337, 0.3914 ) }
    dend_32 { pt3dadd( 390.091, 615.978, 28.6026, 0.3872 ) }
    dend_32 { pt3dadd( 389.561, 616.843, 29.1441, 0.2992 ) }
    dend_32 { pt3dadd( 389.646, 617.95, 29.4, 0.2482 ) }
    dend_32 { pt3dadd( 389.439, 618.936, 29.4918, 0.356 ) }
    dend_32 { pt3dadd( 388.846, 618.79, 27.72, 0.305 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 28/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 418.817, 531.941, 27.9401, 0.4068 ) }
    dend_29 { pt3dadd( 418.875, 532.912, 28.3682, 0.4642 ) }
    dend_29 { pt3dadd( 418.891, 534.029, 28.9293, 0.5428 ) }
    dend_29 { pt3dadd( 418.699, 535.121, 29.4949, 0.6456 ) }
    dend_29 { pt3dadd( 418.264, 536.172, 29.748, 0.7752 ) }
    dend_29 { pt3dadd( 417.751, 537.181, 30.056, 0.9728 ) }
    dend_29 { pt3dadd( 417.182, 538.136, 30.6888, 1.175 ) }
    dend_29 { pt3dadd( 416.559, 539.061, 31.3135, 1.2632 ) }
    dend_29 { pt3dadd( 415.998, 540.025, 31.8662, 1.2096 ) }
    dend_29 { pt3dadd( 415.548, 541.076, 31.92, 1.0048 ) }
    dend_29 { pt3dadd( 415.146, 542.147, 31.92, 0.815 ) }
    dend_29 { pt3dadd( 414.949, 543.25, 31.92, 0.717 ) }
    dend_29 { pt3dadd( 415.278, 544.338, 31.92, 0.7596 ) }
    dend_29 { pt3dadd( 415.846, 545.331, 31.9194, 0.856 ) }
    dend_29 { pt3dadd( 416.457, 546.298, 31.9178, 0.9322 ) }
    dend_29 { pt3dadd( 417.044, 547.279, 31.9082, 0.9406 ) }
    dend_29 { pt3dadd( 417.751, 548.177, 31.8668, 0.8952 ) }
    dend_29 { pt3dadd( 418.306, 549.17, 31.6358, 0.867 ) }
    dend_29 { pt3dadd( 418.682, 550.21, 30.9487, 0.8874 ) }
    dend_29 { pt3dadd( 419.173, 551.237, 30.7922, 0.8206 ) }
    dend_29 { pt3dadd( 419.027, 552.353, 30.6967, 0.669 ) }
    dend_29 { pt3dadd( 418.456, 553.318, 30.198, 0.5376 ) }
    dend_29 { pt3dadd( 417.868, 554.164, 31.3776, 0.5596 ) }
    dend_29 { pt3dadd( 417.314, 555.135, 30.8232, 0.664 ) }
    dend_29 { pt3dadd( 417.182, 556.22, 30.0272, 0.7668 ) }
    dend_29 { pt3dadd( 417.473, 557.318, 29.7254, 0.8712 ) }
    dend_29 { pt3dadd( 417.634, 558.447, 29.9096, 0.9928 ) }
    dend_29 { pt3dadd( 417.918, 559.544, 30.2417, 1.0126 ) }
    dend_29 { pt3dadd( 418.087, 560.653, 29.6979, 0.9058 ) }
    dend_29 { pt3dadd( 418.388, 561.757, 29.68, 0.7062 ) }
    dend_29 { pt3dadd( 418.728, 562.835, 29.68, 0.6088 ) }
    dend_29 { pt3dadd( 419.644, 563.519, 29.68, 0.5896 ) }
    dend_29 { pt3dadd( 420.487, 564.279, 29.68, 0.6628 ) }
    dend_29 { pt3dadd( 420.904, 565.345, 29.68, 0.6864 ) }
    dend_29 { pt3dadd( 421.184, 566.447, 29.68, 0.665 ) }
    dend_29 { pt3dadd( 421.221, 567.59, 29.68, 0.574 ) }
    dend_29 { pt3dadd( 421.221, 568.734, 29.68, 0.5446 ) }
    dend_29 { pt3dadd( 421.219, 569.878, 29.6797, 0.6062 ) }
    dend_29 { pt3dadd( 421.207, 571.022, 29.6783, 0.7026 ) }
    dend_29 { pt3dadd( 421.126, 572.16, 29.6691, 0.7572 ) }
    dend_29 { pt3dadd( 420.911, 573.281, 29.6052, 0.7372 ) }
    dend_29 { pt3dadd( 420.901, 574.396, 29.2592, 0.7372 ) }
    dend_29 { pt3dadd( 421.314, 575.388, 28.4029, 0.75 ) }
    dend_29 { pt3dadd( 421.926, 576.295, 27.6807, 0.7814 ) }
    dend_29 { pt3dadd( 422.353, 577.348, 27.4096, 0.7556 ) }
    dend_29 { pt3dadd( 422.81, 578.385, 27.1833, 0.7154 ) }
    dend_29 { pt3dadd( 423.525, 579.188, 26.603, 0.6448 ) }
    dend_29 { pt3dadd( 424.573, 579.619, 26.2963, 0.5848 ) }
    dend_29 { pt3dadd( 425.665, 579.919, 26.0713, 0.5164 ) }
    dend_29 { pt3dadd( 426.695, 580.292, 25.7495, 0.4924 ) }
    dend_29 { pt3dadd( 427.548, 581.02, 26.1684, 0.529 ) }
    dend_29 { pt3dadd( 428.301, 581.821, 26.9383, 0.5802 ) }
    dend_29 { pt3dadd( 429.047, 582.657, 27.3893, 0.5996 ) }
    dend_29 { pt3dadd( 429.857, 583.465, 27.44, 0.5848 ) }
    dend_29 { pt3dadd( 430.721, 584.212, 27.44, 0.5954 ) }
    dend_29 { pt3dadd( 431.623, 584.915, 27.4399, 0.6316 ) }
    dend_29 { pt3dadd( 432.478, 585.673, 27.4391, 0.6824 ) }
    dend_29 { pt3dadd( 433.272, 586.497, 27.4358, 0.7118 ) }
    dend_29 { pt3dadd( 433.991, 587.381, 27.4201, 0.7118 ) }
    dend_29 { pt3dadd( 434.384, 588.412, 27.3281, 0.6896 ) }
    dend_29 { pt3dadd( 434.344, 589.524, 26.8548, 0.6864 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 89/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 455.033, 528.394, 70.5944, 0.5084 ) }
    dend_24 { pt3dadd( 455.076, 528.806, 69.5979, 0.5962 ) }
    dend_24 { pt3dadd( 456.006, 528.995, 69.9591, 0.3384 ) }
    dend_24 { pt3dadd( 456.361, 529.944, 70.2044, 0.356 ) }
    dend_24 { pt3dadd( 457.192, 530.244, 71.3801, 0.3628 ) }
    dend_24 { pt3dadd( 458.062, 530.317, 70.84, 0.357 ) }
    dend_24 { pt3dadd( 458.744, 530.587, 72.1196, 0.4068 ) }
    dend_24 { pt3dadd( 459.18, 531.0, 73.64, 0.2288 ) }
    dend_24 { pt3dadd( 459.43, 532.022, 73.36, 0.2288 ) }
    dend_24 { pt3dadd( 460.111, 532.303, 72.571, 0.2288 ) }
    dend_24 { pt3dadd( 461.176, 532.291, 72.4791, 0.2626 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_24 { pt3dadd( 461.718, 532.533, 74.5951, 0.4576 ) }
    dend_24 { pt3dadd( 461.956, 533.315, 73.64, 0.4576 ) }
    dend_24 { pt3dadd( 462.613, 533.107, 75.4317, 0.2356 ) }
    dend_24 { pt3dadd( 463.351, 533.717, 75.5765, 0.352 ) }
    dend_24 { pt3dadd( 464.058, 534.461, 74.9851, 0.6102 ) }
    dend_24 { pt3dadd( 464.639, 535.088, 74.8104, 0.4734 ) }
    dend_24 { pt3dadd( 465.252, 535.941, 74.6617, 0.306 ) }
    dend_24 { pt3dadd( 465.886, 536.408, 74.9431, 0.5076 ) }
    dend_24 { pt3dadd( 466.655, 536.994, 74.7653, 0.7206 ) }
    dend_24 { pt3dadd( 467.037, 537.519, 76.16, 0.4804 ) }
    dend_24 { pt3dadd( 467.987, 538.038, 75.88, 0.5398 ) }
    dend_24 { pt3dadd( 468.754, 538.711, 76.5615, 0.263 ) }
    dend_24 { pt3dadd( 469.176, 539.498, 77.8467, 0.3032 ) }
    dend_24 { pt3dadd( 470.225, 539.282, 77.8537, 0.626 ) }
    dend_24 { pt3dadd( 470.65, 539.635, 75.88, 0.6822 ) }
    dend_24 { pt3dadd( 471.325, 540.343, 76.4982, 0.4724 ) }
    dend_24 { pt3dadd( 471.851, 541.151, 77.3184, 0.5102 ) }
    dend_24 { pt3dadd( 472.785, 541.341, 78.3261, 0.4576 ) }
    dend_24 { pt3dadd( 473.301, 541.582, 79.24, 0.5936 ) }
    dend_24 { pt3dadd( 474.372, 541.717, 79.2509, 0.299 ) }
    dend_24 { pt3dadd( 475.322, 542.051, 79.6048, 0.4092 ) }
    dend_24 { pt3dadd( 476.398, 542.393, 79.5472, 0.4354 ) }
    dend_24 { pt3dadd( 477.427, 542.294, 80.0615, 0.2846 ) }
    dend_24 { pt3dadd( 478.265, 542.706, 80.4104, 0.315 ) }
    dend_24 { pt3dadd( 479.011, 542.485, 78.7206, 0.5084 ) }
    dend_24 { pt3dadd( 479.952, 542.247, 79.7468, 0.4638 ) }
    dend_24 { pt3dadd( 480.761, 542.027, 79.8479, 0.4352 ) }
    dend_24 { pt3dadd( 481.624, 542.027, 80.3264, 0.2288 ) }
    dend_24 { pt3dadd( 482.211, 542.059, 81.3467, 0.467 ) }
    dend_24 { pt3dadd( 483.026, 542.686, 81.9742, 0.4576 ) }
    dend_24 { pt3dadd( 483.74, 542.619, 83.9549, 0.343 ) }
    dend_24 { pt3dadd( 484.727, 542.996, 84.0888, 0.3532 ) }
    dend_24 { pt3dadd( 485.69, 543.574, 83.9978, 0.4762 ) }
    dend_24 { pt3dadd( 486.636, 543.975, 83.6875, 0.475 ) }
    dend_24 { pt3dadd( 487.559, 544.209, 85.0052, 0.5044 ) }
    dend_24 { pt3dadd( 488.65, 544.209, 85.0287, 0.4154 ) }
    dend_24 { pt3dadd( 489.403, 544.43, 86.52, 0.356 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 37/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 455.033, 528.394, 70.5944, 0.5084 ) }
    dend_23 { pt3dadd( 455.099, 528.97, 71.0338, 0.4672 ) }
    dend_23 { pt3dadd( 455.345, 530.018, 71.9342, 0.489 ) }
    dend_23 { pt3dadd( 455.63, 530.587, 71.1276, 0.3616 ) }
    dend_23 { pt3dadd( 456.334, 530.969, 72.4069, 0.4998 ) }
    dend_23 { pt3dadd( 455.884, 531.581, 73.7951, 0.4956 ) }
    dend_23 { pt3dadd( 456.383, 532.092, 75.7756, 0.506 ) }
    dend_23 { pt3dadd( 456.339, 532.964, 76.7329, 0.3704 ) }
    dend_23 { pt3dadd( 455.974, 533.693, 77.982, 0.348 ) }
    dend_23 { pt3dadd( 455.884, 534.449, 76.72, 0.3998 ) }
    dend_23 { pt3dadd( 455.656, 535.448, 76.16, 0.2288 ) }
    dend_23 { pt3dadd( 455.607, 536.494, 75.3637, 0.4426 ) }
    dend_23 { pt3dadd( 455.724, 536.941, 77.159, 0.4514 ) }
    dend_23 { pt3dadd( 456.012, 537.91, 78.0892, 0.3566 ) }
    dend_23 { pt3dadd( 456.456, 538.023, 80.0204, 0.4122 ) }
    dend_23 { pt3dadd( 456.008, 538.547, 81.6539, 0.4728 ) }
    dend_23 { pt3dadd( 455.884, 539.53, 82.88, 0.2288 ) }
    dend_23 { pt3dadd( 455.858, 540.661, 82.9287, 0.2662 ) }
    dend_23 { pt3dadd( 455.935, 541.351, 84.56, 0.5038 ) }
    dend_23 { pt3dadd( 456.113, 542.446, 84.373, 0.432 ) }
    dend_23 { pt3dadd( 455.509, 543.064, 85.7279, 0.6102 ) }
    dend_23 { pt3dadd( 455.867, 543.616, 87.3289, 0.4576 ) }
    dend_23 { pt3dadd( 455.44, 544.201, 86.7742, 0.2796 ) }
    dend_23 { pt3dadd( 454.612, 544.722, 88.1093, 0.4068 ) }
    dend_23 { pt3dadd( 454.168, 545.393, 89.7456, 0.271 ) }
    dend_23 { pt3dadd( 453.632, 546.202, 89.3505, 0.408 ) }
    dend_23 { pt3dadd( 453.482, 547.174, 89.5773, 0.312 ) }
    dend_23 { pt3dadd( 453.555, 548.081, 90.2353, 0.3904 ) }
    dend_23 { pt3dadd( 453.891, 549.138, 90.16, 0.5124 ) }
    dend_23 { pt3dadd( 454.016, 550.151, 89.88, 0.4576 ) }
    dend_23 { pt3dadd( 454.282, 551.231, 90.1295, 0.483 ) }
    dend_23 { pt3dadd( 454.002, 552.219, 91.2027, 0.252 ) }
    dend_23 { pt3dadd( 453.808, 553.262, 91.56, 0.2288 ) }
    dend_23 { pt3dadd( 453.325, 553.945, 92.6033, 0.2824 ) }
    dend_23 { pt3dadd( 453.253, 554.91, 93.7048, 0.2716 ) }
    dend_23 { pt3dadd( 453.503, 555.954, 94.2124, 0.5848 ) }
    dend_23 { pt3dadd( 454.054, 556.803, 94.6526, 0.6052 ) }
    dend_23 { pt3dadd( 454.371, 557.589, 96.0792, 0.5688 ) }
    dend_23 { pt3dadd( 454.939, 557.953, 97.8202, 0.356 ) }
    dend_23 { pt3dadd( 454.854, 558.397, 96.091, 0.268 ) }
    dend_23 { pt3dadd( 455.047, 558.065, 94.0999, 0.3122 ) }
    dend_23 { pt3dadd( 455.953, 558.717, 94.08, 0.2288 ) }
    dend_23 { pt3dadd( 456.573, 559.525, 94.8021, 0.2288 ) }
    dend_23 { pt3dadd( 456.883, 559.759, 97.2866, 0.3904 ) }
    dend_23 { pt3dadd( 457.267, 560.538, 97.8454, 0.6864 ) }
    dend_23 { pt3dadd( 457.863, 561.36, 98.065, 0.5986 ) }
    dend_23 { pt3dadd( 458.183, 562.356, 97.2955, 0.3928 ) }
    dend_23 { pt3dadd( 458.585, 563.365, 97.16, 0.2288 ) }
    dend_23 { pt3dadd( 459.621, 563.674, 97.5481, 0.3838 ) }
    dend_23 { pt3dadd( 460.143, 564.572, 97.72, 0.5848 ) }
    dend_23 { pt3dadd( 460.693, 565.311, 98.138, 0.6278 ) }
    dend_23 { pt3dadd( 461.445, 566.072, 98.8327, 0.3402 ) }
    dend_23 { pt3dadd( 462.027, 566.958, 98.2582, 0.299 ) }
    dend_23 { pt3dadd( 462.81, 567.665, 98.2397, 0.6274 ) }
    dend_23 { pt3dadd( 463.418, 568.557, 98.5863, 0.301 ) }
    dend_23 { pt3dadd( 464.006, 569.011, 98.1218, 0.3284 ) }
    dend_23 { pt3dadd( 464.393, 569.933, 98.7941, 0.5726 ) }
    dend_23 { pt3dadd( 464.922, 570.75, 98.8918, 0.2288 ) }
    dend_23 { pt3dadd( 464.962, 571.87, 99.0086, 0.2288 ) }
    dend_23 { pt3dadd( 465.494, 572.436, 100.52, 0.4576 ) }
    dend_23 { pt3dadd( 465.494, 573.548, 100.904, 0.4228 ) }
    dend_23 { pt3dadd( 465.196, 574.28, 102.83, 0.3304 ) }
    dend_23 { pt3dadd( 465.48, 575.203, 103.87, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_23 { pt3dadd( 465.82, 576.059, 104.189, 0.3512 ) }
    dend_23 { pt3dadd( 466.529, 576.565, 105.737, 0.4562 ) }
    dend_23 { pt3dadd( 467.204, 577.12, 105.0, 0.2506 ) }
    dend_23 { pt3dadd( 467.323, 578.014, 106.256, 0.4068 ) }
    dend_23 { pt3dadd( 467.324, 578.338, 108.882, 0.4098 ) }
    dend_23 { pt3dadd( 467.324, 578.783, 111.413, 0.6324 ) }
    dend_23 { pt3dadd( 467.896, 579.436, 111.72, 0.3304 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 7/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 427.284, 496.916, 42.1868, 0.483 ) }
    dend_13 { pt3dadd( 426.712, 497.939, 41.5951, 0.4236 ) }
    dend_13 { pt3dadd( 426.148, 498.385, 43.4921, 0.439 ) }
    dend_13 { pt3dadd( 425.454, 499.141, 44.3425, 0.309 ) }
    dend_13 { pt3dadd( 425.129, 499.374, 46.4038, 0.275 ) }
    dend_13 { pt3dadd( 424.425, 499.986, 46.9888, 0.5176 ) }
    dend_13 { pt3dadd( 423.898, 500.955, 47.7, 0.564 ) }
    dend_13 { pt3dadd( 423.527, 502.016, 47.9368, 0.5954 ) }
    dend_13 { pt3dadd( 423.29, 503.065, 47.1503, 0.6418 ) }
    dend_13 { pt3dadd( 422.781, 503.942, 45.9029, 0.6678 ) }
    dend_13 { pt3dadd( 422.289, 504.909, 45.3555, 0.6936 ) }
    dend_13 { pt3dadd( 422.264, 506.04, 45.2799, 0.7268 ) }
    dend_13 { pt3dadd( 422.479, 507.112, 45.5045, 0.8782 ) }
    dend_13 { pt3dadd( 422.407, 507.587, 47.32, 0.733 ) }
    dend_13 { pt3dadd( 421.614, 508.256, 48.0511, 0.8316 ) }
    dend_13 { pt3dadd( 421.233, 508.992, 49.3721, 0.9642 ) }
    dend_13 { pt3dadd( 421.443, 509.921, 49.7378, 0.7502 ) }
    dend_13 { pt3dadd( 421.228, 510.827, 50.276, 0.6434 ) }
    dend_13 { pt3dadd( 420.804, 511.731, 49.7921, 0.7568 ) }
    dend_13 { pt3dadd( 420.697, 512.859, 50.146, 0.8644 ) }
    dend_13 { pt3dadd( 420.758, 513.925, 50.6724, 0.9222 ) }
    dend_13 { pt3dadd( 421.071, 514.998, 50.4059, 0.8834 ) }
    dend_13 { pt3dadd( 421.106, 516.127, 50.7528, 0.8058 ) }
    dend_13 { pt3dadd( 421.261, 517.206, 51.1501, 1.0148 ) }
    dend_13 { pt3dadd( 421.252, 518.307, 51.5399, 0.589 ) }
    dend_13 { pt3dadd( 420.992, 519.313, 51.9582, 0.6112 ) }
    dend_13 { pt3dadd( 420.556, 520.307, 52.2841, 0.8572 ) }
    dend_13 { pt3dadd( 419.886, 521.079, 51.9557, 0.9914 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 35/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 427.284, 496.916, 42.1868, 0.483 ) }
    dend_12 { pt3dadd( 426.967, 497.97, 41.6273, 0.4836 ) }
    dend_12 { pt3dadd( 426.42, 498.935, 42.0308, 0.432 ) }
    dend_12 { pt3dadd( 426.291, 499.901, 41.3367, 0.3946 ) }
    dend_12 { pt3dadd( 426.026, 500.557, 40.6, 0.3814 ) }
    dend_12 { pt3dadd( 426.254, 501.591, 40.04, 0.3834 ) }
    dend_12 { pt3dadd( 425.876, 502.174, 38.64, 0.6274 ) }
    dend_12 { pt3dadd( 425.043, 502.913, 38.8903, 0.4566 ) }
    dend_12 { pt3dadd( 424.321, 503.773, 39.0824, 0.3304 ) }
    dend_12 { pt3dadd( 424.207, 504.591, 40.0627, 0.4486 ) }
    dend_12 { pt3dadd( 424.276, 505.476, 40.5714, 0.5984 ) }
    dend_12 { pt3dadd( 424.478, 506.537, 40.2766, 0.434 ) }
    dend_12 { pt3dadd( 424.263, 507.565, 39.9067, 0.4576 ) }
    dend_12 { pt3dadd( 423.676, 508.391, 40.0568, 0.522 ) }
    dend_12 { pt3dadd( 423.026, 508.884, 40.32, 0.6356 ) }
    dend_12 { pt3dadd( 422.364, 509.766, 40.32, 0.6862 ) }
    dend_12 { pt3dadd( 421.371, 510.148, 39.76, 0.5612 ) }
    dend_12 { pt3dadd( 420.678, 509.771, 40.409, 0.5032 ) }
    dend_12 { pt3dadd( 419.869, 510.115, 41.2213, 0.622 ) }
    dend_12 { pt3dadd( 418.937, 510.453, 41.855, 0.5026 ) }
    dend_12 { pt3dadd( 418.005, 510.964, 42.2565, 0.4894 ) }
    dend_12 { pt3dadd( 416.962, 510.938, 41.7623, 0.5044 ) }
    dend_12 { pt3dadd( 416.037, 511.341, 41.6058, 0.6964 ) }
    dend_12 { pt3dadd( 415.15, 512.035, 41.9594, 0.7492 ) }
    dend_12 { pt3dadd( 414.262, 512.752, 41.9961, 0.7986 ) }
    dend_12 { pt3dadd( 413.349, 513.442, 41.9829, 0.827 ) }
    dend_12 { pt3dadd( 412.454, 514.155, 41.9236, 0.8136 ) }
    dend_12 { pt3dadd( 411.473, 514.68, 41.617, 0.7398 ) }
    dend_12 { pt3dadd( 410.373, 514.857, 41.5901, 0.6222 ) }
    dend_12 { pt3dadd( 409.245, 514.774, 41.879, 0.5306 ) }
    dend_12 { pt3dadd( 408.109, 514.704, 41.8656, 0.4968 ) }
    dend_12 { pt3dadd( 407.012, 514.793, 42.3693, 0.5226 ) }
    dend_12 { pt3dadd( 405.993, 515.136, 43.1992, 0.577 ) }
    dend_12 { pt3dadd( 404.946, 515.285, 43.9566, 0.655 ) }
    dend_12 { pt3dadd( 403.848, 515.148, 44.6569, 0.7018 ) }
    dend_12 { pt3dadd( 402.75, 514.885, 44.9056, 0.7118 ) }
    dend_12 { pt3dadd( 401.687, 514.785, 45.6397, 0.6572 ) }
    dend_12 { pt3dadd( 400.655, 515.046, 46.6068, 0.5778 ) }
    dend_12 { pt3dadd( 399.691, 515.14, 48.0248, 0.4608 ) }
    dend_12 { pt3dadd( 398.597, 515.144, 48.6461, 0.4122 ) }
    dend_12 { pt3dadd( 397.455, 515.152, 48.7206, 0.4068 ) }
    dend_12 { pt3dadd( 396.312, 515.204, 48.7234, 0.447 ) }
    dend_12 { pt3dadd( 395.216, 515.506, 48.7413, 0.417 ) }
    dend_12 { pt3dadd( 394.206, 516.034, 48.8365, 0.366 ) }
    dend_12 { pt3dadd( 393.176, 516.46, 49.3948, 0.356 ) }
    dend_12 { pt3dadd( 392.15, 516.629, 50.5131, 0.4196 ) }
    dend_12 { pt3dadd( 391.116, 517.047, 50.482, 0.497 ) }
    dend_12 { pt3dadd( 390.207, 517.566, 51.4688, 0.5552 ) }
    dend_12 { pt3dadd( 389.769, 518.454, 52.8161, 0.5592 ) }
    dend_12 { pt3dadd( 388.87, 519.119, 52.4448, 0.5334 ) }
    dend_12 { pt3dadd( 387.976, 519.826, 52.687, 0.4576 ) }
    dend_12 { pt3dadd( 387.23, 520.676, 53.048, 0.4606 ) }
    dend_12 { pt3dadd( 386.325, 521.315, 52.8503, 0.5226 ) }
    dend_12 { pt3dadd( 385.339, 521.63, 53.9932, 0.6218 ) }
    dend_12 { pt3dadd( 384.258, 521.942, 54.3298, 0.699 ) }
    dend_12 { pt3dadd( 383.285, 522.541, 54.3749, 0.7584 ) }
    dend_12 { pt3dadd( 382.301, 523.088, 54.6862, 0.715 ) }
    dend_12 { pt3dadd( 381.427, 523.66, 55.3314, 0.491 ) }
    dend_12 { pt3dadd( 380.336, 523.843, 54.8752, 0.2986 ) }
    dend_12 { pt3dadd( 379.413, 524.295, 54.8436, 0.8644 ) }
    dend_12 { pt3dadd( 378.308, 524.447, 54.8489, 0.805 ) }
    dend_12 { pt3dadd( 377.262, 524.556, 55.44, 0.4554 ) }
    dend_12 { pt3dadd( 376.377, 525.249, 55.16, 0.3022 ) }
    dend_12 { pt3dadd( 375.468, 525.711, 56.0, 0.5422 ) }
    dend_12 { pt3dadd( 375.003, 526.305, 57.2692, 0.5838 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_12 { pt3dadd( 374.317, 526.583, 56.7221, 0.364 ) }
    dend_12 { pt3dadd( 374.153, 526.843, 54.3838, 0.4174 ) }
    dend_12 { pt3dadd( 373.507, 527.464, 54.8764, 0.5084 ) }
    dend_12 { pt3dadd( 372.983, 528.019, 56.4956, 0.3256 ) }
    dend_12 { pt3dadd( 372.358, 528.86, 56.8392, 0.3556 ) }
    dend_12 { pt3dadd( 371.763, 529.329, 55.258, 0.5808 ) }
    dend_12 { pt3dadd( 371.201, 529.968, 55.7396, 0.3908 ) }
    dend_12 { pt3dadd( 370.831, 530.557, 56.868, 0.2288 ) }
    dend_12 { pt3dadd( 369.939, 530.831, 56.9237, 0.4856 ) }
    dend_12 { pt3dadd( 369.321, 530.587, 55.0536, 0.5124 ) }
    dend_12 { pt3dadd( 368.737, 530.934, 54.2214, 0.5084 ) }
    dend_12 { pt3dadd( 367.72, 531.05, 53.2641, 0.3308 ) }
    dend_12 { pt3dadd( 366.773, 531.493, 52.8646, 0.2316 ) }
    dend_12 { pt3dadd( 365.966, 531.683, 53.8012, 0.3162 ) }
    dend_12 { pt3dadd( 365.207, 531.731, 53.9988, 0.5 ) }
    dend_12 { pt3dadd( 364.159, 532.039, 53.9692, 0.4638 ) }
    dend_12 { pt3dadd( 363.179, 532.189, 53.9406, 0.456 ) }
    dend_12 { pt3dadd( 362.252, 532.404, 53.9809, 0.356 ) }
    dend_12 { pt3dadd( 361.426, 532.405, 54.7347, 0.6864 ) }
    dend_12 { pt3dadd( 361.343, 532.646, 56.5088, 0.2484 ) }
    dend_12 { pt3dadd( 360.492, 532.763, 56.4368, 0.3882 ) }
    dend_12 { pt3dadd( 359.586, 532.908, 55.5276, 0.5276 ) }
    dend_12 { pt3dadd( 359.026, 533.109, 53.6253, 0.58 ) }
    dend_12 { pt3dadd( 358.415, 533.447, 54.4454, 0.4094 ) }
    dend_12 { pt3dadd( 357.609, 533.436, 55.9698, 0.4322 ) }
    dend_12 { pt3dadd( 356.578, 533.854, 56.28, 0.4342 ) }
    dend_12 { pt3dadd( 355.675, 534.142, 55.8617, 0.6864 ) }
    dend_12 { pt3dadd( 354.842, 534.248, 57.199, 0.533 ) }
    dend_12 { pt3dadd( 354.487, 534.845, 56.8551, 0.635 ) }
    dend_12 { pt3dadd( 353.653, 534.973, 57.7844, 0.5998 ) }
    dend_12 { pt3dadd( 352.933, 535.186, 59.3354, 0.3344 ) }
    dend_12 { pt3dadd( 351.897, 535.513, 59.9382, 0.3666 ) }
    dend_12 { pt3dadd( 350.868, 535.868, 60.4671, 0.3008 ) }
    dend_12 { pt3dadd( 349.906, 536.479, 60.3655, 0.2542 ) }
    dend_12 { pt3dadd( 349.383, 537.441, 60.037, 0.2962 ) }
    dend_12 { pt3dadd( 349.2, 538.411, 59.4787, 0.4808 ) }
    dend_12 { pt3dadd( 348.92, 539.23, 60.4836, 0.4576 ) }
    dend_12 { pt3dadd( 348.779, 540.338, 60.9456, 0.269 ) }
    dend_12 { pt3dadd( 348.29, 541.213, 61.3536, 0.3814 ) }
    dend_12 { pt3dadd( 347.793, 541.994, 62.335, 0.4576 ) }
    dend_12 { pt3dadd( 347.177, 542.781, 63.2668, 0.334 ) }
    dend_12 { pt3dadd( 346.181, 543.085, 62.6965, 0.4576 ) }
    dend_12 { pt3dadd( 345.289, 543.627, 62.6906, 0.281 ) }
    dend_12 { pt3dadd( 344.283, 543.874, 63.2979, 0.4322 ) }
    dend_12 { pt3dadd( 343.615, 543.718, 64.8668, 0.2288 ) }
    dend_12 { pt3dadd( 342.966, 543.988, 65.0255, 0.2902 ) }
    dend_12 { pt3dadd( 342.029, 544.033, 65.8364, 0.2942 ) }
    dend_12 { pt3dadd( 341.079, 544.094, 66.92, 0.2696 ) }
    dend_12 { pt3dadd( 340.041, 544.514, 66.5678, 0.2486 ) }
    dend_12 { pt3dadd( 339.528, 544.201, 67.76, 0.2516 ) }
    dend_12 { pt3dadd( 338.466, 544.201, 68.0691, 0.4204 ) }
    dend_12 { pt3dadd( 337.475, 544.057, 68.0495, 0.309 ) }
    dend_12 { pt3dadd( 336.375, 544.214, 68.1159, 0.3316 ) }
    dend_12 { pt3dadd( 335.432, 544.247, 69.0354, 0.45 ) }
    dend_12 { pt3dadd( 334.622, 544.84, 69.8866, 0.3404 ) }
    dend_12 { pt3dadd( 334.391, 545.518, 71.5358, 0.3512 ) }
    dend_12 { pt3dadd( 334.124, 546.42, 71.8049, 0.3516 ) }
    dend_12 { pt3dadd( 333.934, 547.518, 71.96, 0.305 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 58/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 439.512, 514.206, 40.8344, 0.7626 ) }
    dend_6 { pt3dadd( 440.001, 514.457, 41.7222, 0.7978 ) }
    dend_6 { pt3dadd( 440.596, 515.394, 42.2587, 0.723 ) }
    dend_6 { pt3dadd( 440.866, 516.475, 42.3402, 0.6298 ) }
    dend_6 { pt3dadd( 440.902, 517.565, 41.571, 0.607 ) }
    dend_6 { pt3dadd( 440.932, 518.654, 40.915, 0.6698 ) }
    dend_6 { pt3dadd( 441.103, 519.778, 40.8808, 0.7234 ) }
    dend_6 { pt3dadd( 441.402, 520.881, 40.8845, 0.7256 ) }
    dend_6 { pt3dadd( 441.875, 521.897, 40.9038, 0.7 ) }
    dend_6 { pt3dadd( 442.678, 522.694, 41.0032, 0.6626 ) }
    dend_6 { pt3dadd( 443.551, 523.359, 41.6214, 0.6108 ) }
    dend_6 { pt3dadd( 444.031, 524.221, 42.6796, 0.5314 ) }
    dend_6 { pt3dadd( 444.102, 525.323, 43.2606, 0.483 ) }
    dend_6 { pt3dadd( 444.108, 526.421, 43.9214, 0.4968 ) }
    dend_6 { pt3dadd( 444.144, 527.528, 44.3856, 0.5798 ) }
    dend_6 { pt3dadd( 444.346, 528.646, 44.4371, 0.6648 ) }
    dend_6 { pt3dadd( 444.597, 529.726, 44.9901, 0.6864 ) }
    dend_6 { pt3dadd( 444.923, 530.751, 45.9113, 0.6564 ) }
    dend_6 { pt3dadd( 445.32, 531.708, 47.08, 0.6356 ) }
    dend_6 { pt3dadd( 445.62, 532.475, 48.879, 0.5458 ) }
    dend_6 { pt3dadd( 445.81, 533.388, 49.5751, 0.2288 ) }
    dend_6 { pt3dadd( 446.533, 534.111, 49.8305, 0.4342 ) }
    dend_6 { pt3dadd( 447.048, 534.314, 47.899, 0.895 ) }
    dend_6 { pt3dadd( 447.272, 535.4, 48.16, 0.8376 ) }
    dend_6 { pt3dadd( 447.526, 536.466, 48.7147, 0.5814 ) }
    dend_6 { pt3dadd( 447.843, 537.314, 47.4732, 0.679 ) }
    dend_6 { pt3dadd( 448.332, 538.083, 47.896, 0.7372 ) }
    dend_6 { pt3dadd( 448.704, 539.073, 47.6221, 0.5738 ) }
    dend_6 { pt3dadd( 448.791, 540.198, 47.7313, 0.529 ) }
    dend_6 { pt3dadd( 448.723, 541.321, 47.9142, 0.4012 ) }
    dend_6 { pt3dadd( 448.791, 542.401, 48.7816, 0.2802 ) }
    dend_6 { pt3dadd( 448.791, 543.068, 48.0592, 0.2288 ) }
    dend_6 { pt3dadd( 449.11, 543.725, 46.48, 0.2588 ) }
    dend_6 { pt3dadd( 449.568, 544.724, 46.8096, 0.422 ) }
    dend_6 { pt3dadd( 449.83, 545.345, 48.3308, 0.467 ) }
    dend_6 { pt3dadd( 450.578, 545.877, 49.5152, 0.5398 ) }
    dend_6 { pt3dadd( 450.999, 546.57, 50.6324, 0.4576 ) }
    dend_6 { pt3dadd( 451.83, 546.882, 49.56, 0.4322 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 96/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 439.512, 514.206, 40.8344, 0.7626 ) }
    dend_3 { pt3dadd( 440.615, 515.24, 40.521, 0.5358 ) }
    dend_3 { pt3dadd( 441.458, 515.625, 38.9491, 0.4614 ) }
    dend_3 { pt3dadd( 442.545, 515.901, 38.5353, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_3 { pt3dadd( 443.496, 516.482, 39.1633, 0.3834 ) }
    dend_3 { pt3dadd( 444.463, 516.909, 40.1828, 0.4372 ) }
    dend_3 { pt3dadd( 445.585, 517.103, 40.0439, 0.551 ) }
    dend_3 { pt3dadd( 446.587, 517.61, 39.5195, 0.7454 ) }
    dend_3 { pt3dadd( 447.562, 518.134, 38.8214, 0.8106 ) }
    dend_3 { pt3dadd( 448.537, 518.654, 38.15, 0.7658 ) }
    dend_3 { pt3dadd( 449.407, 519.164, 37.0328, 0.6026 ) }
    dend_3 { pt3dadd( 450.273, 519.884, 37.5278, 0.568 ) }
    dend_3 { pt3dadd( 451.157, 520.58, 37.9411, 0.6192 ) }
    dend_3 { pt3dadd( 452.16, 521.05, 38.5792, 0.6472 ) }
    dend_3 { pt3dadd( 453.241, 521.411, 38.7912, 0.5568 ) }
    dend_3 { pt3dadd( 454.281, 521.851, 39.1672, 0.3864 ) }
    dend_3 { pt3dadd( 455.017, 522.556, 37.9201, 0.5126 ) }
    dend_3 { pt3dadd( 455.791, 523.188, 36.5672, 0.6656 ) }
    dend_3 { pt3dadd( 456.702, 523.832, 35.9831, 0.7598 ) }
    dend_3 { pt3dadd( 457.633, 524.485, 36.2835, 0.7068 ) }
    dend_3 { pt3dadd( 458.586, 525.114, 36.3992, 0.6708 ) }
    dend_3 { pt3dadd( 459.556, 525.721, 36.3947, 0.614 ) }
    dend_3 { pt3dadd( 460.529, 526.323, 36.3737, 0.6006 ) }
    dend_3 { pt3dadd( 461.393, 527.058, 36.2846, 0.5784 ) }
    dend_3 { pt3dadd( 462.056, 527.97, 35.9582, 0.5912 ) }
    dend_3 { pt3dadd( 462.591, 528.925, 36.3983, 0.6102 ) }
    dend_3 { pt3dadd( 463.107, 529.728, 37.872, 0.6268 ) }
    dend_3 { pt3dadd( 463.716, 530.497, 39.2795, 0.6014 ) }
    dend_3 { pt3dadd( 464.537, 531.231, 39.7348, 0.5672 ) }
    dend_3 { pt3dadd( 465.595, 531.575, 39.7874, 0.5414 ) }
    dend_3 { pt3dadd( 466.73, 531.683, 39.9717, 0.5698 ) }
    dend_3 { pt3dadd( 467.784, 532.066, 39.888, 0.644 ) }
    dend_3 { pt3dadd( 468.626, 532.824, 39.7611, 0.7372 ) }
    dend_3 { pt3dadd( 469.519, 533.538, 39.7653, 0.7358 ) }
    dend_3 { pt3dadd( 470.247, 534.42, 39.7855, 0.6838 ) }
    dend_3 { pt3dadd( 470.943, 535.326, 39.895, 0.6084 ) }
    dend_3 { pt3dadd( 471.747, 536.101, 40.4883, 0.5564 ) }
    dend_3 { pt3dadd( 472.628, 536.808, 40.8682, 0.5084 ) }
    dend_3 { pt3dadd( 473.275, 537.75, 40.8142, 0.5102 ) }
    dend_3 { pt3dadd( 473.836, 538.739, 40.5703, 0.5436 ) }
    dend_3 { pt3dadd( 474.551, 539.577, 39.9669, 0.666 ) }
    dend_3 { pt3dadd( 475.574, 540.058, 40.3351, 0.7118 ) }
    dend_3 { pt3dadd( 476.645, 540.386, 40.8822, 0.7 ) }
    dend_3 { pt3dadd( 477.758, 540.638, 41.0178, 0.604 ) }
    dend_3 { pt3dadd( 478.857, 540.859, 41.4988, 0.5522 ) }
    dend_3 { pt3dadd( 479.939, 540.668, 41.902, 0.5044 ) }
    dend_3 { pt3dadd( 480.84, 540.074, 41.8774, 0.5308 ) }
    dend_3 { pt3dadd( 481.955, 539.914, 42.1893, 0.666 ) }
    dend_3 { pt3dadd( 483.032, 540.1, 42.8644, 0.7708 ) }
    dend_3 { pt3dadd( 484.125, 540.407, 43.1312, 0.7026 ) }
    dend_3 { pt3dadd( 485.207, 540.771, 43.3222, 0.5788 ) }
    dend_3 { pt3dadd( 486.288, 541.055, 43.888, 0.4928 ) }
    dend_3 { pt3dadd( 487.311, 541.46, 43.2886, 0.5282 ) }
    dend_3 { pt3dadd( 488.264, 542.075, 43.0528, 0.5338 ) }
    dend_3 { pt3dadd( 489.142, 542.787, 42.6314, 0.4876 ) }
    dend_3 { pt3dadd( 489.987, 543.521, 42.058, 0.4364 ) }
    dend_3 { pt3dadd( 490.959, 544.118, 42.0006, 0.4322 ) }
    dend_3 { pt3dadd( 491.892, 544.779, 41.9989, 0.4558 ) }
    dend_3 { pt3dadd( 492.547, 545.711, 41.9947, 0.4338 ) }
    dend_3 { pt3dadd( 493.071, 546.727, 41.9698, 0.4084 ) }
    dend_3 { pt3dadd( 493.57, 547.754, 41.8188, 0.383 ) }
    dend_3 { pt3dadd( 493.818, 548.728, 40.5194, 0.3568 ) }
    dend_3 { pt3dadd( 494.396, 549.591, 41.5794, 0.3866 ) }
    dend_3 { pt3dadd( 494.947, 550.575, 41.9622, 0.4414 ) }
    dend_3 { pt3dadd( 495.331, 551.647, 41.7782, 0.5084 ) }
    dend_3 { pt3dadd( 495.838, 552.64, 41.1718, 0.5016 ) }
    dend_3 { pt3dadd( 496.536, 553.508, 40.8719, 0.454 ) }
    dend_3 { pt3dadd( 497.596, 553.933, 40.819, 0.4364 ) }
    dend_3 { pt3dadd( 498.668, 554.294, 40.5171, 0.4714 ) }
    dend_3 { pt3dadd( 499.677, 554.732, 39.8171, 0.5388 ) }
    dend_3 { pt3dadd( 500.748, 555.132, 39.76, 0.549 ) }
    dend_3 { pt3dadd( 501.816, 555.525, 39.76, 0.4826 ) }
    dend_3 { pt3dadd( 502.95, 555.665, 39.7594, 0.3604 ) }
    dend_3 { pt3dadd( 504.082, 555.788, 39.7569, 0.269 ) }
    dend_3 { pt3dadd( 505.165, 556.154, 39.7412, 0.2288 ) }
    dend_3 { pt3dadd( 506.246, 556.495, 39.6365, 0.2288 ) }
    dend_3 { pt3dadd( 507.373, 556.556, 39.2297, 0.2404 ) }
    dend_3 { pt3dadd( 508.489, 556.556, 38.6756, 0.2974 ) }
    dend_3 { pt3dadd( 509.633, 556.562, 38.6403, 0.3738 ) }
    dend_3 { pt3dadd( 510.775, 556.597, 38.6425, 0.4262 ) }
    dend_3 { pt3dadd( 511.88, 556.808, 38.656, 0.3946 ) }
    dend_3 { pt3dadd( 512.784, 557.472, 38.7332, 0.3494 ) }
    dend_3 { pt3dadd( 513.434, 558.397, 39.0902, 0.3508 ) }
    dend_3 { pt3dadd( 514.08, 559.296, 39.7051, 0.4352 ) }
    dend_3 { pt3dadd( 514.766, 560.209, 39.7779, 0.5228 ) }
    dend_3 { pt3dadd( 515.477, 561.1, 39.8446, 0.552 ) }
    dend_3 { pt3dadd( 516.015, 562.091, 40.1668, 0.519 ) }
    dend_3 { pt3dadd( 516.444, 563.119, 40.7277, 0.4906 ) }
    dend_3 { pt3dadd( 517.021, 564.099, 40.7882, 0.5164 ) }
    dend_3 { pt3dadd( 517.56, 565.067, 40.4502, 0.5254 ) }
    dend_3 { pt3dadd( 517.861, 566.138, 40.1932, 0.4766 ) }
    dend_3 { pt3dadd( 518.315, 567.169, 40.6865, 0.3828 ) }
    dend_3 { pt3dadd( 518.982, 567.552, 42.0344, 0.3304 ) }
    dend_3 { pt3dadd( 519.576, 568.168, 42.3153, 0.2288 ) }
    dend_3 { pt3dadd( 519.696, 568.697, 41.2891, 0.524 ) }
    dend_3 { pt3dadd( 520.406, 569.14, 41.5778, 0.2288 ) }
    dend_3 { pt3dadd( 521.343, 569.488, 41.141, 0.4166 ) }
    dend_3 { pt3dadd( 522.261, 569.699, 41.72, 0.6074 ) }
    dend_3 { pt3dadd( 523.219, 570.073, 40.7613, 0.5392 ) }
    dend_3 { pt3dadd( 524.183, 570.398, 40.7411, 0.4282 ) }
    dend_3 { pt3dadd( 524.649, 570.513, 39.3327, 0.577 ) }
    dend_3 { pt3dadd( 525.294, 570.873, 38.64, 0.2532 ) }
    dend_3 { pt3dadd( 526.282, 571.004, 37.4086, 0.3594 ) }
    dend_3 { pt3dadd( 527.299, 571.395, 36.9219, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_3 { pt3dadd( 527.802, 572.031, 37.9576, 0.279 ) }
    dend_3 { pt3dadd( 528.335, 571.991, 39.2078, 0.388 ) }
    dend_3 { pt3dadd( 528.995, 572.628, 39.1916, 0.6 ) }
    dend_3 { pt3dadd( 529.64, 573.482, 39.0578, 0.5538 ) }
    dend_3 { pt3dadd( 530.148, 574.145, 39.8863, 0.4142 ) }
    dend_3 { pt3dadd( 530.957, 574.364, 40.1128, 0.2288 ) }
    dend_3 { pt3dadd( 531.903, 574.081, 39.7782, 0.2288 ) }
    dend_3 { pt3dadd( 532.749, 574.614, 39.7681, 0.6676 ) }
    dend_3 { pt3dadd( 533.483, 575.137, 38.92, 0.6864 ) }
    dend_3 { pt3dadd( 534.512, 575.466, 38.5566, 0.4376 ) }
    dend_3 { pt3dadd( 535.292, 576.192, 38.6831, 0.53 ) }
    dend_3 { pt3dadd( 536.208, 576.424, 39.48, 0.641 ) }
    dend_3 { pt3dadd( 536.349, 577.36, 39.9778, 0.4238 ) }
    dend_3 { pt3dadd( 537.376, 577.413, 39.6934, 0.3304 ) }
    dend_3 { pt3dadd( 538.126, 577.571, 39.6113, 0.607 ) }
    dend_3 { pt3dadd( 538.912, 578.034, 38.92, 0.5548 ) }
    dend_3 { pt3dadd( 539.824, 578.406, 39.8857, 0.47 ) }
    dend_3 { pt3dadd( 540.883, 578.6, 39.2372, 0.525 ) }
    dend_3 { pt3dadd( 541.946, 578.655, 38.92, 0.5836 ) }
    dend_3 { pt3dadd( 542.519, 578.407, 38.5221, 0.3848 ) }
    dend_3 { pt3dadd( 543.471, 578.406, 39.2437, 0.2796 ) }
    dend_3 { pt3dadd( 544.345, 577.951, 39.8381, 0.2542 ) }
    dend_3 { pt3dadd( 545.208, 577.436, 38.9648, 0.547 ) }
    dend_3 { pt3dadd( 546.111, 577.125, 38.7738, 0.2834 ) }
    dend_3 { pt3dadd( 547.216, 577.034, 38.36, 0.2604 ) }
    dend_3 { pt3dadd( 548.294, 576.813, 38.8444, 0.4862 ) }
    dend_3 { pt3dadd( 548.653, 576.642, 40.6204, 0.6864 ) }
    dend_3 { pt3dadd( 549.381, 576.446, 40.4804, 0.6102 ) }
    dend_3 { pt3dadd( 550.099, 576.233, 39.7454, 0.2924 ) }
    dend_3 { pt3dadd( 551.067, 575.988, 40.014, 0.2648 ) }
    dend_3 { pt3dadd( 552.05, 575.884, 39.76, 0.3192 ) }
    dend_3 { pt3dadd( 552.584, 575.382, 38.9382, 0.234 ) }
    dend_3 { pt3dadd( 553.431, 575.089, 40.1346, 0.4574 ) }
    dend_3 { pt3dadd( 554.218, 574.719, 41.5192, 0.3814 ) }
    dend_3 { pt3dadd( 554.94, 574.178, 40.6823, 0.4546 ) }
    dend_3 { pt3dadd( 555.648, 573.812, 39.2078, 0.4068 ) }
    dend_3 { pt3dadd( 556.339, 573.501, 40.5986, 0.331 ) }
    dend_3 { pt3dadd( 557.38, 573.238, 41.16, 0.2288 ) }
    dend_3 { pt3dadd( 558.298, 572.689, 40.9732, 0.295 ) }
    dend_3 { pt3dadd( 559.228, 572.356, 41.3921, 0.356 ) }
    dend_3 { pt3dadd( 560.153, 572.342, 42.0274, 0.3814 ) }
    dend_3 { pt3dadd( 561.175, 572.15, 42.7893, 0.3004 ) }
    dend_3 { pt3dadd( 562.239, 572.039, 42.8375, 0.4072 ) }
    dend_3 { pt3dadd( 563.073, 572.229, 42.5975, 0.7906 ) }
    dend_3 { pt3dadd( 563.97, 572.626, 42.205, 0.691 ) }
    dend_3 { pt3dadd( 564.673, 572.686, 43.398, 0.2304 ) }
    dend_3 { pt3dadd( 565.423, 573.199, 42.6692, 0.4816 ) }
    dend_3 { pt3dadd( 566.274, 573.889, 42.7675, 0.5182 ) }
    dend_3 { pt3dadd( 567.262, 574.438, 42.56, 0.4594 ) }
    dend_3 { pt3dadd( 568.176, 574.974, 42.7902, 0.3696 ) }
    dend_3 { pt3dadd( 568.562, 575.821, 43.948, 0.4576 ) }
    dend_3 { pt3dadd( 569.007, 576.609, 42.7269, 0.2854 ) }
    dend_3 { pt3dadd( 569.044, 577.363, 42.2755, 0.516 ) }
    dend_3 { pt3dadd( 569.729, 578.193, 42.9738, 0.405 ) }
    dend_3 { pt3dadd( 570.199, 579.207, 43.4, 0.3156 ) }
    dend_3 { pt3dadd( 570.724, 579.976, 44.2089, 0.3814 ) }
    dend_3 { pt3dadd( 571.405, 580.823, 44.52, 0.4222 ) }
    dend_3 { pt3dadd( 571.517, 581.865, 44.931, 0.5146 ) }
    dend_3 { pt3dadd( 571.636, 582.858, 44.9266, 0.5496 ) }
    dend_3 { pt3dadd( 571.542, 583.877, 44.9302, 0.5084 ) }
    dend_3 { pt3dadd( 570.851, 584.694, 43.9956, 0.356 ) }
    dend_3 { pt3dadd( 570.291, 585.489, 45.047, 0.6542 ) }
    dend_3 { pt3dadd( 570.172, 586.54, 44.7782, 0.3894 ) }
    dend_3 { pt3dadd( 570.449, 587.58, 44.4693, 0.2288 ) }
    dend_3 { pt3dadd( 571.085, 588.389, 44.24, 0.2288 ) }
    dend_3 { pt3dadd( 571.085, 589.533, 44.24, 0.2288 ) }
    dend_3 { pt3dadd( 571.085, 590.669, 44.4822, 0.2288 ) }
    dend_3 { pt3dadd( 571.111, 591.81, 44.52, 0.2288 ) }
    dend_3 { pt3dadd( 571.111, 592.907, 44.6838, 0.4576 ) }
    dend_3 { pt3dadd( 571.557, 593.074, 46.76, 0.2992 ) }
    dend_3 { pt3dadd( 572.359, 593.743, 46.4671, 0.2288 ) }
    dend_3 { pt3dadd( 572.901, 594.53, 45.92, 0.2358 ) }
    dend_3 { pt3dadd( 573.619, 595.242, 46.8107, 0.392 ) }
    dend_3 { pt3dadd( 574.209, 596.172, 47.3763, 0.4422 ) }
    dend_3 { pt3dadd( 574.289, 596.866, 47.003, 0.2776 ) }
    dend_3 { pt3dadd( 574.616, 597.908, 47.3452, 0.2494 ) }
    dend_3 { pt3dadd( 575.191, 598.207, 49.2985, 0.3876 ) }
    dend_3 { pt3dadd( 575.355, 599.226, 49.8859, 0.2288 ) }
    dend_3 { pt3dadd( 576.017, 599.919, 50.9018, 0.3592 ) }
    dend_3 { pt3dadd( 576.779, 600.142, 51.5382, 0.3322 ) }
    dend_3 { pt3dadd( 577.656, 600.664, 51.7667, 0.3162 ) }
    dend_3 { pt3dadd( 577.733, 601.172, 52.9511, 0.4576 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 82/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 434.344, 589.524, 26.8548, 0.6864 ) }
    dend_31 { pt3dadd( 435.101, 590.191, 27.1479, 0.419 ) }
    dend_31 { pt3dadd( 435.456, 590.962, 26.6064, 0.5574 ) }
    dend_31 { pt3dadd( 436.115, 591.533, 26.1723, 0.3986 ) }
    dend_31 { pt3dadd( 436.612, 592.263, 26.0184, 0.2288 ) }
    dend_31 { pt3dadd( 437.312, 592.716, 26.0492, 0.3078 ) }
    dend_31 { pt3dadd( 438.185, 593.201, 26.7008, 0.4576 ) }
    dend_31 { pt3dadd( 439.001, 593.488, 27.9332, 0.5254 ) }
    dend_31 { pt3dadd( 439.632, 594.054, 27.0961, 0.4198 ) }
    dend_31 { pt3dadd( 440.171, 594.445, 27.1036, 0.2796 ) }
    dend_31 { pt3dadd( 440.578, 595.434, 27.1733, 0.3268 ) }
    dend_31 { pt3dadd( 441.079, 596.232, 26.6722, 0.2288 ) }
    dend_31 { pt3dadd( 441.841, 596.641, 27.0945, 0.4576 ) }
    dend_31 { pt3dadd( 442.288, 597.03, 25.48, 0.2288 ) }
    dend_31 { pt3dadd( 443.069, 597.177, 24.6893, 0.3304 ) }
    dend_31 { pt3dadd( 443.235, 597.763, 25.3823, 0.2686 ) }
    dend_31 { pt3dadd( 444.171, 598.198, 25.1911, 0.2452 ) }
    dend_31 { pt3dadd( 445.174, 598.436, 25.4711, 0.2978 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_31 { pt3dadd( 446.135, 598.758, 26.2486, 0.5536 ) }
    dend_31 { pt3dadd( 446.873, 599.536, 26.1655, 0.6654 ) }
    dend_31 { pt3dadd( 447.579, 600.018, 26.1362, 0.4258 ) }
    dend_31 { pt3dadd( 448.186, 600.901, 25.767, 0.2288 ) }
    dend_31 { pt3dadd( 448.717, 601.721, 26.1218, 0.3968 ) }
    dend_31 { pt3dadd( 449.534, 602.266, 26.0002, 0.4254 ) }
    dend_31 { pt3dadd( 450.329, 602.697, 25.2314, 0.4324 ) }
    dend_31 { pt3dadd( 451.155, 603.239, 25.441, 0.4612 ) }
    dend_31 { pt3dadd( 451.331, 604.088, 24.8004, 0.3814 ) }
    dend_31 { pt3dadd( 451.422, 605.187, 24.8248, 0.2504 ) }
    dend_31 { pt3dadd( 451.726, 605.724, 23.3146, 0.2898 ) }
    dend_31 { pt3dadd( 452.192, 606.392, 22.4794, 0.4668 ) }
    dend_31 { pt3dadd( 452.929, 607.207, 22.4738, 0.4984 ) }
    dend_31 { pt3dadd( 453.564, 607.894, 23.24, 0.4576 ) }
    dend_31 { pt3dadd( 454.063, 608.895, 22.872, 0.4322 ) }
    dend_31 { pt3dadd( 454.838, 609.689, 23.1853, 0.4396 ) }
    dend_31 { pt3dadd( 455.312, 610.53, 22.4101, 0.4818 ) }
    dend_31 { pt3dadd( 455.82, 611.397, 21.5834, 0.3176 ) }
    dend_31 { pt3dadd( 456.899, 611.697, 21.4948, 0.3304 ) }
    dend_31 { pt3dadd( 457.746, 612.22, 20.729, 0.4058 ) }
    dend_31 { pt3dadd( 458.333, 613.151, 20.4955, 0.3276 ) }
    dend_31 { pt3dadd( 459.176, 613.703, 20.7466, 0.4124 ) }
    dend_31 { pt3dadd( 459.867, 614.019, 21.5338, 0.5982 ) }
    dend_31 { pt3dadd( 460.899, 614.218, 21.2112, 0.455 ) }
    dend_31 { pt3dadd( 461.877, 614.683, 21.6189, 0.3 ) }
    dend_31 { pt3dadd( 462.712, 615.4, 21.8827, 0.2288 ) }
    dend_31 { pt3dadd( 463.406, 616.251, 21.5945, 0.2496 ) }
    dend_31 { pt3dadd( 463.886, 617.028, 21.4758, 0.501 ) }
    dend_31 { pt3dadd( 464.568, 617.44, 20.174, 0.26 ) }
    dend_31 { pt3dadd( 465.391, 618.122, 20.4093, 0.5082 ) }
    dend_31 { pt3dadd( 465.959, 619.054, 20.5099, 0.41 ) }
    dend_31 { pt3dadd( 466.538, 619.529, 20.75, 0.392 ) }
    dend_31 { pt3dadd( 467.005, 620.365, 19.6, 0.6864 ) }
    dend_31 { pt3dadd( 467.684, 620.953, 20.1279, 0.7924 ) }
    dend_31 { pt3dadd( 468.471, 621.542, 19.6, 0.476 ) }
    dend_31 { pt3dadd( 469.153, 621.652, 18.6163, 0.4458 ) }
    dend_31 { pt3dadd( 470.02, 622.025, 18.4601, 0.6428 ) }
    dend_31 { pt3dadd( 470.707, 622.902, 17.9342, 0.5906 ) }
    dend_31 { pt3dadd( 471.47, 623.616, 17.36, 0.4176 ) }
    dend_31 { pt3dadd( 471.819, 624.263, 19.0925, 0.3002 ) }
    dend_31 { pt3dadd( 472.21, 624.999, 19.6412, 0.356 ) }
    dend_31 { pt3dadd( 472.814, 625.576, 18.5848, 0.8532 ) }
    dend_31 { pt3dadd( 473.448, 626.475, 19.045, 0.815 ) }
    dend_31 { pt3dadd( 474.04, 627.414, 19.0433, 0.5858 ) }
    dend_31 { pt3dadd( 474.838, 627.889, 18.6006, 0.5848 ) }
    dend_31 { pt3dadd( 475.698, 628.456, 17.92, 0.6838 ) }
    dend_31 { pt3dadd( 476.512, 629.189, 17.92, 0.6374 ) }
    dend_31 { pt3dadd( 477.589, 629.314, 18.3021, 0.6424 ) }
    dend_31 { pt3dadd( 478.27, 629.711, 19.5692, 0.5854 ) }
    dend_31 { pt3dadd( 478.958, 630.333, 18.8998, 0.5006 ) }
    dend_31 { pt3dadd( 478.993, 630.804, 17.2131, 0.4532 ) }
    dend_31 { pt3dadd( 479.743, 630.976, 15.9704, 0.2626 ) }
    dend_31 { pt3dadd( 480.469, 631.001, 16.9348, 0.4714 ) }
    dend_31 { pt3dadd( 481.257, 631.529, 17.8438, 0.577 ) }
    dend_31 { pt3dadd( 482.121, 632.24, 18.2, 0.657 ) }
    dend_31 { pt3dadd( 482.837, 632.902, 18.5277, 0.6328 ) }
    dend_31 { pt3dadd( 483.276, 633.722, 19.2755, 0.4442 ) }
    dend_31 { pt3dadd( 483.415, 634.271, 17.9298, 0.2292 ) }
    dend_31 { pt3dadd( 483.682, 635.247, 17.1111, 0.305 ) }
    dend_31 { pt3dadd( 484.583, 635.86, 17.5732, 0.6174 ) }
    dend_31 { pt3dadd( 485.181, 636.603, 18.48, 0.5288 ) }
    dend_31 { pt3dadd( 485.716, 637.372, 17.3327, 0.6102 ) }
    dend_31 { pt3dadd( 485.742, 638.369, 16.6197, 0.627 ) }
    dend_31 { pt3dadd( 485.857, 639.439, 17.08, 0.2288 ) }
    dend_31 { pt3dadd( 486.513, 640.07, 16.5441, 0.2288 ) }
    dend_31 { pt3dadd( 486.715, 641.186, 16.7921, 0.4064 ) }
    dend_31 { pt3dadd( 487.223, 641.926, 16.0303, 0.3814 ) }
    dend_31 { pt3dadd( 487.508, 642.835, 16.9112, 0.3304 ) }
    dend_31 { pt3dadd( 487.781, 643.703, 15.5521, 0.6072 ) }
    dend_31 { pt3dadd( 488.366, 644.627, 15.561, 0.5592 ) }
    dend_31 { pt3dadd( 488.285, 645.707, 15.9559, 0.5968 ) }
    dend_31 { pt3dadd( 488.154, 646.757, 15.4282, 0.4524 ) }
    dend_31 { pt3dadd( 488.134, 647.875, 15.12, 0.5532 ) }
    dend_31 { pt3dadd( 488.108, 648.906, 14.8766, 0.4566 ) }
    dend_31 { pt3dadd( 488.186, 649.896, 14.8917, 0.446 ) }
    dend_31 { pt3dadd( 487.989, 650.736, 14.2887, 0.3538 ) }
    dend_31 { pt3dadd( 488.374, 651.019, 15.4255, 0.5248 ) }
    dend_31 { pt3dadd( 488.145, 652.08, 15.68, 0.5084 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 78/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 434.344, 589.524, 26.8548, 0.6864 ) }
    dend_30 { pt3dadd( 433.749, 590.966, 27.2578, 0.4476 ) }
    dend_30 { pt3dadd( 433.359, 592.036, 27.5198, 0.4632 ) }
    dend_30 { pt3dadd( 432.808, 592.992, 27.9325, 0.5298 ) }
    dend_30 { pt3dadd( 432.066, 593.791, 28.7773, 0.5812 ) }
    dend_30 { pt3dadd( 431.381, 594.649, 29.4988, 0.6102 ) }
    dend_30 { pt3dadd( 430.759, 595.593, 29.9398, 0.5874 ) }
    dend_30 { pt3dadd( 430.188, 596.56, 30.4214, 0.5246 ) }
    dend_30 { pt3dadd( 429.713, 597.584, 30.7734, 0.4246 ) }
    dend_30 { pt3dadd( 429.344, 598.664, 30.8, 0.3324 ) }
    dend_30 { pt3dadd( 429.253, 599.786, 30.8, 0.305 ) }
    dend_30 { pt3dadd( 429.203, 600.914, 30.8, 0.355 ) }
    dend_30 { pt3dadd( 428.857, 601.999, 30.8006, 0.4324 ) }
    dend_30 { pt3dadd( 428.537, 603.089, 30.8034, 0.4706 ) }
    dend_30 { pt3dadd( 428.276, 604.203, 30.8227, 0.457 ) }
    dend_30 { pt3dadd( 428.103, 605.322, 30.9445, 0.4452 ) }
    dend_30 { pt3dadd( 428.084, 606.44, 31.4524, 0.4708 ) }
    dend_30 { pt3dadd( 428.077, 607.56, 31.9365, 0.5226 ) }
    dend_30 { pt3dadd( 428.037, 608.687, 32.361, 0.5458 ) }
    dend_30 { pt3dadd( 427.807, 609.776, 32.8628, 0.5202 ) }
    dend_30 { pt3dadd( 427.324, 610.802, 33.0397, 0.4806 ) }
    dend_30 { pt3dadd( 426.866, 611.844, 33.0383, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_30 { pt3dadd( 426.666, 612.962, 33.0285, 0.4434 ) }
    dend_30 { pt3dadd( 426.458, 614.08, 32.9655, 0.4034 ) }
    dend_30 { pt3dadd( 426.238, 615.181, 32.5648, 0.3522 ) }
    dend_30 { pt3dadd( 425.97, 616.273, 32.1345, 0.3752 ) }
    dend_30 { pt3dadd( 425.577, 617.332, 32.3165, 0.483 ) }
    dend_30 { pt3dadd( 425.329, 618.419, 32.8457, 0.6578 ) }
    dend_30 { pt3dadd( 425.097, 619.528, 33.1209, 0.7528 ) }
    dend_30 { pt3dadd( 424.919, 620.633, 33.5784, 0.7626 ) }
    dend_30 { pt3dadd( 424.876, 621.718, 34.4327, 0.698 ) }
    dend_30 { pt3dadd( 424.843, 622.829, 34.5268, 0.6446 ) }
    dend_30 { pt3dadd( 424.612, 623.938, 34.3484, 0.6186 ) }
    dend_30 { pt3dadd( 424.082, 624.894, 34.9065, 0.6102 ) }
    dend_30 { pt3dadd( 423.17, 625.503, 35.2545, 0.6464 ) }
    dend_30 { pt3dadd( 422.062, 625.726, 35.3352, 0.6974 ) }
    dend_30 { pt3dadd( 420.967, 626.004, 35.6552, 0.7672 ) }
    dend_30 { pt3dadd( 419.958, 626.211, 36.7744, 0.788 ) }
    dend_30 { pt3dadd( 419.68, 626.923, 38.3813, 0.8092 ) }
    dend_30 { pt3dadd( 419.82, 627.977, 39.3464, 0.7918 ) }
    dend_30 { pt3dadd( 419.829, 629.109, 39.6516, 0.788 ) }
    dend_30 { pt3dadd( 419.935, 629.958, 40.3522, 0.8816 ) }
    dend_30 { pt3dadd( 420.406, 630.812, 40.4939, 0.6066 ) }
    dend_30 { pt3dadd( 421.002, 631.528, 40.8738, 0.651 ) }
    dend_30 { pt3dadd( 421.602, 632.388, 40.6, 0.8136 ) }
    dend_30 { pt3dadd( 421.969, 633.44, 40.3264, 0.7424 ) }
    dend_30 { pt3dadd( 422.587, 634.189, 41.0357, 0.5084 ) }
    dend_30 { pt3dadd( 422.762, 635.148, 40.0582, 0.5638 ) }
    dend_30 { pt3dadd( 422.185, 635.862, 41.2426, 0.5734 ) }
    dend_30 { pt3dadd( 421.848, 636.893, 41.6553, 0.4948 ) }
    dend_30 { pt3dadd( 422.004, 637.939, 41.4896, 0.441 ) }
    dend_30 { pt3dadd( 421.97, 638.955, 42.5102, 0.5688 ) }
    dend_30 { pt3dadd( 421.991, 639.955, 43.4, 0.6056 ) }
    dend_30 { pt3dadd( 422.345, 640.952, 44.0496, 0.5622 ) }
    dend_30 { pt3dadd( 422.365, 641.995, 44.52, 0.2542 ) }
    dend_30 { pt3dadd( 422.25, 642.824, 43.5322, 0.499 ) }
    dend_30 { pt3dadd( 422.075, 643.889, 43.1855, 0.6864 ) }
    dend_30 { pt3dadd( 422.408, 644.836, 44.1924, 0.436 ) }
    dend_30 { pt3dadd( 422.376, 645.785, 44.6205, 0.776 ) }
    dend_30 { pt3dadd( 422.136, 646.774, 45.7106, 0.8898 ) }
    dend_30 { pt3dadd( 422.25, 647.837, 45.876, 0.3484 ) }
    dend_30 { pt3dadd( 422.236, 648.813, 46.03, 0.651 ) }
    dend_30 { pt3dadd( 422.103, 649.906, 46.17, 0.5146 ) }
    dend_30 { pt3dadd( 421.755, 650.885, 46.4878, 0.68 ) }
    dend_30 { pt3dadd( 421.45, 651.816, 46.9694, 0.5828 ) }
    dend_30 { pt3dadd( 421.418, 652.702, 47.8652, 0.358 ) }
    dend_30 { pt3dadd( 421.352, 653.521, 46.5895, 0.4028 ) }
    dend_30 { pt3dadd( 421.333, 654.043, 49.0076, 0.234 ) }
    dend_30 { pt3dadd( 421.643, 654.487, 47.8279, 0.514 ) }
    dend_30 { pt3dadd( 421.236, 655.35, 47.8559, 0.5944 ) }
    dend_30 { pt3dadd( 421.106, 656.275, 49.1655, 0.2604 ) }
    dend_30 { pt3dadd( 421.556, 656.465, 51.3008, 0.4192 ) }
    dend_30 { pt3dadd( 422.245, 656.477, 52.92, 0.4936 ) }
    dend_30 { pt3dadd( 422.366, 657.395, 52.08, 0.6986 ) }
    dend_30 { pt3dadd( 422.274, 658.429, 52.1584, 0.7216 ) }
    dend_30 { pt3dadd( 422.42, 659.375, 53.317, 0.538 ) }
    dend_30 { pt3dadd( 422.507, 660.331, 54.1881, 0.4576 ) }
    dend_30 { pt3dadd( 423.271, 660.892, 54.1223, 0.477 ) }
    dend_30 { pt3dadd( 423.623, 661.55, 55.9219, 0.394 ) }
    dend_30 { pt3dadd( 423.326, 662.079, 57.4764, 0.4882 ) }
    dend_30 { pt3dadd( 422.949, 662.669, 58.52, 0.6864 ) }
    dend_30 { pt3dadd( 422.224, 663.178, 59.5801, 0.5082 ) }
    dend_30 { pt3dadd( 421.336, 663.408, 61.1528, 0.3406 ) }
    dend_30 { pt3dadd( 420.379, 663.702, 61.9192, 0.483 ) }
    dend_30 { pt3dadd( 420.413, 663.063, 63.5502, 0.6022 ) }
    dend_30 { pt3dadd( 420.609, 662.747, 65.9386, 0.4626 ) }
    dend_30 { pt3dadd( 419.613, 662.831, 65.7829, 0.661 ) }
    dend_30 { pt3dadd( 418.861, 662.824, 64.68, 0.2722 ) }
    dend_30 { pt3dadd( 418.341, 662.147, 64.96, 0.4894 ) }
    dend_30 { pt3dadd( 418.018, 661.346, 65.8, 0.3814 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 68/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 419.886, 521.079, 51.9557, 0.9914 ) }
    dend_19 { pt3dadd( 419.551, 522.018, 53.7642, 0.4484 ) }
    dend_19 { pt3dadd( 419.249, 523.063, 54.32, 0.3142 ) }
    dend_19 { pt3dadd( 418.755, 524.062, 53.9986, 0.4576 ) }
    dend_19 { pt3dadd( 418.475, 525.121, 53.4932, 0.701 ) }
    dend_19 { pt3dadd( 418.246, 525.964, 53.0236, 0.4576 ) }
    dend_19 { pt3dadd( 417.972, 526.956, 52.9038, 0.5504 ) }
    dend_19 { pt3dadd( 417.724, 527.837, 52.7341, 0.871 ) }
    dend_19 { pt3dadd( 417.331, 528.626, 53.7622, 0.5338 ) }
    dend_19 { pt3dadd( 416.64, 529.217, 54.3127, 0.5106 ) }
    dend_19 { pt3dadd( 416.081, 529.786, 55.1328, 0.3092 ) }
    dend_19 { pt3dadd( 415.745, 530.473, 55.4585, 0.2542 ) }
    dend_19 { pt3dadd( 415.322, 531.231, 54.4858, 0.301 ) }
    dend_19 { pt3dadd( 414.92, 531.579, 52.64, 0.3878 ) }
    dend_19 { pt3dadd( 414.242, 532.303, 53.2, 0.4322 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 83/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 419.886, 521.079, 51.9557, 0.9914 ) }
    dend_14 { pt3dadd( 419.976, 521.766, 50.4, 0.661 ) }
    dend_14 { pt3dadd( 420.579, 522.26, 50.68, 0.6864 ) }
    dend_14 { pt3dadd( 420.621, 522.501, 52.605, 0.482 ) }
    dend_14 { pt3dadd( 420.684, 523.182, 54.1041, 0.9482 ) }
    dend_14 { pt3dadd( 421.297, 523.875, 54.88, 0.788 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 451.83, 546.882, 49.56, 0.4322 ) }
    dend_10 { pt3dadd( 452.159, 547.607, 50.029, 0.4534 ) }
    dend_10 { pt3dadd( 453.124, 547.862, 50.9096, 0.2288 ) }
    dend_10 { pt3dadd( 453.606, 548.464, 49.712, 0.2288 ) }
    dend_10 { pt3dadd( 454.287, 548.64, 50.7822, 0.5372 ) }
    dend_10 { pt3dadd( 454.884, 549.032, 51.9361, 0.2796 ) }
    dend_10 { pt3dadd( 455.198, 549.909, 50.9734, 0.4538 ) }
    dend_10 { pt3dadd( 455.591, 550.493, 49.7652, 0.5848 ) }
    dend_10 { pt3dadd( 456.089, 551.159, 50.3978, 0.5848 ) }
    dend_10 { pt3dadd( 455.884, 551.61, 52.5196, 0.4068 ) }
    dend_10 { pt3dadd( 456.156, 552.535, 51.7868, 0.4684 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_10 { pt3dadd( 457.059, 552.781, 51.8616, 0.4326 ) }
    dend_10 { pt3dadd( 457.54, 553.161, 53.5049, 0.4098 ) }
    dend_10 { pt3dadd( 458.408, 553.675, 53.3515, 0.4512 ) }
    dend_10 { pt3dadd( 459.241, 554.131, 54.0089, 0.4322 ) }
    dend_10 { pt3dadd( 460.185, 554.626, 53.1367, 0.3338 ) }
    dend_10 { pt3dadd( 460.963, 555.101, 52.08, 0.2796 ) }
    dend_10 { pt3dadd( 461.815, 554.991, 53.2258, 0.3342 ) }
    dend_10 { pt3dadd( 462.389, 555.096, 54.7064, 0.5558 ) }
    dend_10 { pt3dadd( 463.091, 555.419, 55.8558, 0.3166 ) }
    dend_10 { pt3dadd( 463.653, 556.014, 56.9159, 0.5628 ) }
    dend_10 { pt3dadd( 464.417, 556.437, 57.5641, 0.4418 ) }
    dend_10 { pt3dadd( 465.415, 556.486, 57.5621, 0.2796 ) }
    dend_10 { pt3dadd( 466.49, 556.327, 57.9256, 0.5672 ) }
    dend_10 { pt3dadd( 467.276, 555.881, 58.9868, 0.524 ) }
    dend_10 { pt3dadd( 468.188, 555.763, 58.5141, 0.4506 ) }
    dend_10 { pt3dadd( 468.831, 556.068, 57.12, 0.31 ) }
    dend_10 { pt3dadd( 469.328, 556.327, 58.5337, 0.2834 ) }
    dend_10 { pt3dadd( 469.84, 557.009, 59.6366, 0.459 ) }
    dend_10 { pt3dadd( 470.254, 557.911, 60.0916, 0.2624 ) }
    dend_10 { pt3dadd( 470.406, 558.108, 62.1564, 0.251 ) }
    dend_10 { pt3dadd( 471.211, 558.501, 61.8937, 0.3796 ) }
    dend_10 { pt3dadd( 471.798, 558.215, 62.7964, 0.4122 ) }
    dend_10 { pt3dadd( 472.41, 558.751, 63.7916, 0.4322 ) }
    dend_10 { pt3dadd( 473.033, 559.52, 64.1211, 0.5102 ) }
    dend_10 { pt3dadd( 473.8, 560.078, 64.0441, 0.3926 ) }
    dend_10 { pt3dadd( 474.762, 560.336, 64.4487, 0.5174 ) }
    dend_10 { pt3dadd( 475.493, 560.792, 65.4318, 0.354 ) }
    dend_10 { pt3dadd( 476.589, 560.903, 65.6407, 0.3448 ) }
    dend_10 { pt3dadd( 477.594, 560.845, 65.4284, 0.5338 ) }
    dend_10 { pt3dadd( 478.056, 561.698, 65.4615, 0.4038 ) }
    dend_10 { pt3dadd( 479.16, 561.507, 65.8238, 0.3314 ) }
    dend_10 { pt3dadd( 480.006, 561.386, 67.4478, 0.3902 ) }
    dend_10 { pt3dadd( 480.926, 561.361, 66.3681, 0.3764 ) }
    dend_10 { pt3dadd( 481.897, 561.345, 66.871, 0.284 ) }
    dend_10 { pt3dadd( 482.857, 561.07, 67.2, 0.4366 ) }
    dend_10 { pt3dadd( 483.694, 561.632, 67.205, 0.3398 ) }
    dend_10 { pt3dadd( 484.523, 561.842, 68.32, 0.3526 ) }
    dend_10 { pt3dadd( 485.397, 562.283, 67.8944, 0.2786 ) }
    dend_10 { pt3dadd( 486.203, 562.835, 67.5996, 0.3368 ) }
    dend_10 { pt3dadd( 487.01, 563.34, 69.0124, 0.6864 ) }
    dend_10 { pt3dadd( 487.468, 563.843, 68.3276, 0.4576 ) }
    dend_10 { pt3dadd( 488.372, 564.117, 69.076, 0.3616 ) }
    dend_10 { pt3dadd( 489.371, 563.918, 69.2168, 0.2642 ) }
    dend_10 { pt3dadd( 490.278, 563.42, 69.253, 0.3046 ) }
    dend_10 { pt3dadd( 491.333, 563.18, 69.4369, 0.533 ) }
    dend_10 { pt3dadd( 492.152, 562.962, 70.3189, 0.305 ) }
    dend_10 { pt3dadd( 492.983, 563.254, 70.1996, 0.356 ) }
    dend_10 { pt3dadd( 493.749, 563.377, 71.706, 0.3158 ) }
    dend_10 { pt3dadd( 494.551, 563.649, 72.077, 0.4724 ) }
    dend_10 { pt3dadd( 494.94, 564.038, 74.1684, 0.3936 ) }
    dend_10 { pt3dadd( 495.577, 564.335, 76.3286, 0.3678 ) }
    dend_10 { pt3dadd( 496.401, 564.295, 78.0682, 0.2402 ) }
    dend_10 { pt3dadd( 496.954, 563.457, 78.9222, 0.3892 ) }
    dend_10 { pt3dadd( 497.314, 563.191, 81.2658, 0.266 ) }
    dend_10 { pt3dadd( 498.186, 563.191, 82.32, 0.2478 ) }
    dend_10 { pt3dadd( 499.322, 563.28, 82.32, 0.2288 ) }
    dend_10 { pt3dadd( 500.462, 563.334, 82.32, 0.2288 ) }
    dend_10 { pt3dadd( 501.597, 563.319, 82.5395, 0.2288 ) }
    dend_10 { pt3dadd( 502.592, 563.534, 83.6959, 0.2288 ) }
    dend_10 { pt3dadd( 503.663, 563.534, 84.28, 0.2288 ) }
    dend_10 { pt3dadd( 504.796, 563.534, 84.649, 0.2392 ) }
    dend_10 { pt3dadd( 505.832, 563.649, 85.3958, 0.283 ) }
    dend_10 { pt3dadd( 506.97, 563.724, 85.4, 0.2732 ) }
    dend_10 { pt3dadd( 508.007, 563.961, 85.12, 0.2288 ) }
    dend_10 { pt3dadd( 509.147, 563.992, 85.12, 0.2288 ) }
    dend_10 { pt3dadd( 510.292, 563.992, 85.12, 0.2288 ) }
    dend_10 { pt3dadd( 511.435, 563.992, 85.12, 0.2288 ) }
    dend_10 { pt3dadd( 512.438, 564.138, 85.8925, 0.2288 ) }
    dend_10 { pt3dadd( 513.511, 564.384, 85.4445, 0.2288 ) }
    dend_10 { pt3dadd( 514.593, 564.642, 85.2071, 0.2928 ) }
    dend_10 { pt3dadd( 515.015, 565.25, 84.4208, 0.3814 ) }
    dend_10 { pt3dadd( 515.788, 565.44, 85.4, 0.6864 ) }
    dend_10 { pt3dadd( 515.925, 565.822, 83.4128, 0.292 ) }
    dend_10 { pt3dadd( 516.105, 566.391, 81.6203, 0.2806 ) }
    dend_10 { pt3dadd( 516.638, 566.353, 79.52, 0.4032 ) }
    dend_10 { pt3dadd( 517.705, 566.615, 79.52, 0.235 ) }
    dend_10 { pt3dadd( 518.583, 567.085, 78.4, 0.2996 ) }
    dend_10 { pt3dadd( 518.918, 567.424, 80.5087, 0.293 ) }
    dend_10 { pt3dadd( 519.211, 567.838, 82.04, 0.2288 ) }
    dend_10 { pt3dadd( 519.951, 568.36, 83.2527, 0.2334 ) }
    dend_10 { pt3dadd( 520.799, 568.847, 84.0406, 0.3704 ) }
    dend_10 { pt3dadd( 521.574, 569.647, 84.0683, 0.2288 ) }
    dend_10 { pt3dadd( 521.943, 570.599, 83.16, 0.239 ) }
    dend_10 { pt3dadd( 522.627, 570.948, 84.4351, 0.4054 ) }
    dend_10 { pt3dadd( 523.338, 571.644, 83.9182, 0.465 ) }
    dend_10 { pt3dadd( 524.383, 571.935, 83.44, 0.2992 ) }
    dend_10 { pt3dadd( 525.194, 572.708, 83.72, 0.2288 ) }
    dend_10 { pt3dadd( 526.09, 573.154, 84.2696, 0.2288 ) }
    dend_10 { pt3dadd( 526.541, 573.586, 83.172, 0.35 ) }
    dend_10 { pt3dadd( 527.12, 574.289, 83.0029, 0.6356 ) }
    dend_10 { pt3dadd( 527.732, 574.86, 83.2815, 0.5088 ) }
    dend_10 { pt3dadd( 528.74, 575.234, 84.077, 0.408 ) }
    dend_10 { pt3dadd( 529.787, 575.546, 84.2117, 0.4642 ) }
    dend_10 { pt3dadd( 530.707, 575.657, 83.1141, 0.484 ) }
    dend_10 { pt3dadd( 531.274, 575.685, 84.2167, 0.5448 ) }
    dend_10 { pt3dadd( 531.732, 575.165, 85.6274, 0.2432 ) }
    dend_10 { pt3dadd( 532.533, 575.318, 84.3245, 0.2288 ) }
    dend_10 { pt3dadd( 533.165, 575.577, 83.4884, 0.4576 ) }
    dend_10 { pt3dadd( 533.915, 576.011, 84.0711, 0.2832 ) }
    dend_10 { pt3dadd( 534.952, 575.918, 84.8226, 0.4282 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_10 { pt3dadd( 535.851, 575.346, 84.4343, 0.294 ) }
    dend_10 { pt3dadd( 536.56, 574.921, 83.9339, 0.2288 ) }
    dend_10 { pt3dadd( 537.098, 574.325, 85.6344, 0.4514 ) }
    dend_10 { pt3dadd( 537.653, 573.714, 86.1311, 0.373 ) }
    dend_10 { pt3dadd( 538.434, 573.462, 87.3872, 0.4706 ) }
    dend_10 { pt3dadd( 539.385, 573.435, 88.7569, 0.2288 ) }
    dend_10 { pt3dadd( 540.26, 572.757, 89.2125, 0.2288 ) }
    dend_10 { pt3dadd( 541.165, 572.352, 89.1498, 0.3536 ) }
    dend_10 { pt3dadd( 541.937, 572.229, 87.6823, 0.5766 ) }
    dend_10 { pt3dadd( 542.956, 572.213, 88.48, 0.6864 ) }
    dend_10 { pt3dadd( 543.862, 571.709, 88.2, 0.57 ) }
    dend_10 { pt3dadd( 544.43, 571.771, 86.8, 0.356 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 12/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 451.83, 546.882, 49.56, 0.4322 ) }
    dend_7 { pt3dadd( 451.97, 547.209, 48.9247, 0.5596 ) }
    dend_7 { pt3dadd( 452.38, 547.953, 48.0217, 0.3868 ) }
    dend_7 { pt3dadd( 452.681, 548.844, 47.1223, 0.2288 ) }
    dend_7 { pt3dadd( 452.388, 549.835, 47.0691, 0.2966 ) }
    dend_7 { pt3dadd( 452.138, 550.636, 45.4972, 0.2288 ) }
    dend_7 { pt3dadd( 451.998, 551.307, 44.7068, 0.6864 ) }
    dend_7 { pt3dadd( 452.063, 552.231, 43.3504, 0.39 ) }
    dend_7 { pt3dadd( 452.109, 553.222, 42.28, 0.2692 ) }
    dend_7 { pt3dadd( 452.109, 554.366, 42.28, 0.233 ) }
    dend_7 { pt3dadd( 452.109, 555.489, 42.0468, 0.2288 ) }
    dend_7 { pt3dadd( 451.564, 556.273, 41.9499, 0.2288 ) }
    dend_7 { pt3dadd( 451.079, 556.648, 43.4711, 0.2934 ) }
    dend_7 { pt3dadd( 450.792, 557.62, 42.343, 0.2848 ) }
    dend_7 { pt3dadd( 450.731, 558.747, 42.3825, 0.2542 ) }
    dend_7 { pt3dadd( 450.626, 559.877, 42.5219, 0.281 ) }
    dend_7 { pt3dadd( 451.168, 560.818, 42.0048, 0.3676 ) }
    dend_7 { pt3dadd( 451.838, 561.672, 42.525, 0.4658 ) }
    dend_7 { pt3dadd( 452.338, 562.492, 42.3111, 0.7626 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 31/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 577.733, 601.172, 52.9511, 0.4576 ) }
    dend_5 { pt3dadd( 577.816, 601.534, 54.0165, 0.3234 ) }
    dend_5 { pt3dadd( 577.542, 601.972, 55.0693, 0.3814 ) }
    dend_5 { pt3dadd( 577.273, 602.401, 56.6832, 0.4374 ) }
    dend_5 { pt3dadd( 576.967, 603.268, 56.0442, 0.6382 ) }
    dend_5 { pt3dadd( 577.148, 604.261, 57.12, 0.305 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 37/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 577.733, 601.172, 52.9511, 0.4576 ) }
    dend_4 { pt3dadd( 577.996, 601.226, 53.6273, 0.3798 ) }
    dend_4 { pt3dadd( 578.521, 601.744, 52.92, 0.4322 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 40/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 421.297, 523.875, 54.88, 0.788 ) }
    dend_18 { pt3dadd( 421.322, 523.42, 57.1712, 0.596 ) }
    dend_18 { pt3dadd( 421.529, 522.658, 58.5617, 0.5058 ) }
    dend_18 { pt3dadd( 421.982, 521.952, 60.1824, 0.348 ) }
    dend_18 { pt3dadd( 422.586, 521.079, 59.9631, 0.7776 ) }
    dend_18 { pt3dadd( 423.279, 520.753, 59.6338, 0.6118 ) }
    dend_18 { pt3dadd( 423.359, 519.718, 60.7233, 0.5084 ) }
    dend_18 { pt3dadd( 423.645, 518.775, 61.315, 0.913 ) }
    dend_18 { pt3dadd( 424.6, 518.499, 62.1908, 0.7884 ) }
    dend_18 { pt3dadd( 425.659, 518.807, 62.4691, 0.278 ) }
    dend_18 { pt3dadd( 426.338, 518.582, 63.8534, 0.632 ) }
    dend_18 { pt3dadd( 426.895, 518.231, 65.6368, 0.3136 ) }
    dend_18 { pt3dadd( 427.014, 517.663, 67.8306, 0.3304 ) }
    dend_18 { pt3dadd( 426.953, 516.863, 69.0668, 0.464 ) }
    dend_18 { pt3dadd( 427.624, 516.346, 69.82, 0.6544 ) }
    dend_18 { pt3dadd( 427.589, 515.41, 69.4406, 0.6356 ) }
    dend_18 { pt3dadd( 426.884, 515.096, 71.0315, 0.6864 ) }
    dend_18 { pt3dadd( 426.856, 514.466, 72.45, 0.545 ) }
    dend_18 { pt3dadd( 427.17, 513.722, 73.7134, 0.2288 ) }
    dend_18 { pt3dadd( 426.593, 513.272, 73.5529, 0.2516 ) }
    dend_18 { pt3dadd( 425.933, 512.528, 73.9379, 0.5298 ) }
    dend_18 { pt3dadd( 425.298, 512.241, 75.9273, 0.393 ) }
    dend_18 { pt3dadd( 424.834, 511.795, 78.1892, 0.356 ) }
    dend_18 { pt3dadd( 424.533, 511.482, 80.6994, 0.392 ) }
    dend_18 { pt3dadd( 424.31, 510.91, 82.04, 0.5338 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 65/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 421.297, 523.875, 54.88, 0.788 ) }
    dend_15 { pt3dadd( 421.678, 524.525, 54.7383, 0.6732 ) }
    dend_15 { pt3dadd( 421.787, 525.563, 54.5112, 0.3488 ) }
    dend_15 { pt3dadd( 421.946, 526.545, 55.3935, 0.5082 ) }
    dend_15 { pt3dadd( 421.579, 527.424, 56.005, 0.6228 ) }
    dend_15 { pt3dadd( 421.745, 528.338, 56.56, 1.0488 ) }
    dend_15 { pt3dadd( 421.234, 529.169, 57.3471, 0.7152 ) }
    dend_15 { pt3dadd( 420.64, 529.921, 56.3828, 0.6364 ) }
    dend_15 { pt3dadd( 419.984, 530.516, 55.617, 0.5276 ) }
    dend_15 { pt3dadd( 419.043, 530.93, 55.8656, 0.6234 ) }
    dend_15 { pt3dadd( 418.286, 531.254, 57.4, 0.6744 ) }
    dend_15 { pt3dadd( 417.774, 531.274, 58.9417, 0.2888 ) }
    dend_15 { pt3dadd( 417.204, 532.001, 59.6268, 0.4686 ) }
    dend_15 { pt3dadd( 416.752, 532.842, 60.317, 0.6816 ) }
    dend_15 { pt3dadd( 416.583, 533.876, 60.5878, 0.4986 ) }
    dend_15 { pt3dadd( 416.816, 534.974, 60.6673, 0.5848 ) }
    dend_15 { pt3dadd( 417.217, 535.953, 60.7922, 0.737 ) }
    dend_15 { pt3dadd( 417.217, 537.039, 60.8216, 0.6144 ) }
    dend_15 { pt3dadd( 417.406, 537.983, 59.3869, 0.661 ) }
    dend_15 { pt3dadd( 416.883, 538.895, 59.3172, 0.7568 ) }
    dend_15 { pt3dadd( 416.668, 539.739, 60.2493, 0.6758 ) }
    dend_15 { pt3dadd( 416.89, 540.317, 62.1527, 0.5562 ) }
    dend_15 { pt3dadd( 416.7, 541.345, 61.929, 0.6356 ) }
    dend_15 { pt3dadd( 416.475, 542.182, 60.9784, 0.6808 ) }
    dend_15 { pt3dadd( 415.871, 543.083, 60.7387, 0.6086 ) }
    dend_15 { pt3dadd( 415.659, 544.108, 60.0877, 0.513 ) }
    dend_15 { pt3dadd( 415.916, 544.773, 61.483, 0.9554 ) }
    dend_15 { pt3dadd( 415.899, 545.554, 61.7092, 0.6944 ) }
    dend_15 { pt3dadd( 415.478, 546.461, 62.4394, 0.6602 ) }
    dend_15 { pt3dadd( 414.769, 547.14, 61.4785, 0.6102 ) }
    dend_15 { pt3dadd( 414.237, 548.061, 61.7848, 0.806 ) }
    dend_15 { pt3dadd( 413.708, 548.891, 62.0668, 1.1694 ) }
    dend_15 { pt3dadd( 413.213, 549.12, 63.84, 0.6864 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 98/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 452.338, 562.492, 42.3111, 0.7626 ) }
    dend_9 { pt3dadd( 452.766, 562.825, 42.5174, 0.4968 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_9 { pt3dadd( 453.28, 563.656, 42.5258, 0.3304 ) }
    dend_9 { pt3dadd( 453.669, 564.628, 41.7934, 0.2288 ) }
    dend_9 { pt3dadd( 453.884, 565.699, 42.4612, 0.2964 ) }
    dend_9 { pt3dadd( 454.044, 566.702, 42.7566, 0.2444 ) }
    dend_9 { pt3dadd( 454.518, 567.594, 42.28, 0.282 ) }
    dend_9 { pt3dadd( 455.096, 568.441, 42.7006, 0.521 ) }
    dend_9 { pt3dadd( 455.465, 569.425, 42.1946, 0.3892 ) }
    dend_9 { pt3dadd( 455.545, 570.542, 42.2173, 0.5082 ) }
    dend_9 { pt3dadd( 455.541, 571.573, 41.9171, 0.2864 ) }
    dend_9 { pt3dadd( 455.82, 572.63, 41.3372, 0.2288 ) }
    dend_9 { pt3dadd( 456.122, 573.663, 40.88, 0.2288 ) }
    dend_9 { pt3dadd( 456.647, 574.445, 42.142, 0.3942 ) }
    dend_9 { pt3dadd( 456.878, 575.462, 42.1198, 0.3742 ) }
    dend_9 { pt3dadd( 456.693, 576.503, 41.834, 0.387 ) }
    dend_9 { pt3dadd( 457.012, 577.424, 42.4749, 0.5158 ) }
    dend_9 { pt3dadd( 457.257, 578.031, 40.7207, 0.3852 ) }
    dend_9 { pt3dadd( 457.327, 579.015, 40.4617, 0.5184 ) }
    dend_9 { pt3dadd( 457.414, 580.044, 40.859, 0.4922 ) }
    dend_9 { pt3dadd( 457.6, 581.091, 40.32, 0.6264 ) }
    dend_9 { pt3dadd( 457.395, 582.137, 39.6071, 0.4808 ) }
    dend_9 { pt3dadd( 457.621, 583.086, 38.8889, 0.4126 ) }
    dend_9 { pt3dadd( 457.922, 584.089, 38.0296, 0.4576 ) }
    dend_9 { pt3dadd( 458.665, 584.801, 37.8098, 0.2288 ) }
    dend_9 { pt3dadd( 459.289, 585.701, 37.842, 0.2288 ) }
    dend_9 { pt3dadd( 459.621, 586.441, 37.8792, 0.5992 ) }
    dend_9 { pt3dadd( 459.697, 587.201, 36.7497, 0.28 ) }
    dend_9 { pt3dadd( 460.269, 587.878, 37.3444, 0.2956 ) }
    dend_9 { pt3dadd( 460.698, 588.88, 37.4122, 0.2362 ) }
    dend_9 { pt3dadd( 461.277, 589.763, 37.0468, 0.4322 ) }
    dend_9 { pt3dadd( 461.724, 590.612, 36.5044, 0.3574 ) }
    dend_9 { pt3dadd( 461.985, 591.542, 37.0376, 0.2986 ) }
    dend_9 { pt3dadd( 462.176, 592.599, 36.437, 0.2288 ) }
    dend_9 { pt3dadd( 462.287, 593.711, 36.8203, 0.2288 ) }
    dend_9 { pt3dadd( 462.324, 594.85, 36.96, 0.2362 ) }
    dend_9 { pt3dadd( 462.405, 595.987, 36.96, 0.2954 ) }
    dend_9 { pt3dadd( 462.405, 597.13, 36.9144, 0.3912 ) }
    dend_9 { pt3dadd( 462.605, 598.141, 36.7539, 0.2452 ) }
    dend_9 { pt3dadd( 462.108, 599.066, 36.4, 0.2302 ) }
    dend_9 { pt3dadd( 461.948, 600.099, 37.1426, 0.4314 ) }
    dend_9 { pt3dadd( 461.912, 601.205, 37.3783, 0.3892 ) }
    dend_9 { pt3dadd( 461.651, 602.26, 37.8227, 0.4322 ) }
    dend_9 { pt3dadd( 461.49, 603.304, 37.7174, 0.3408 ) }
    dend_9 { pt3dadd( 461.591, 604.437, 37.6384, 0.3856 ) }
    dend_9 { pt3dadd( 461.707, 605.509, 36.9698, 0.2704 ) }
    dend_9 { pt3dadd( 461.977, 606.597, 36.96, 0.264 ) }
    dend_9 { pt3dadd( 462.571, 607.555, 36.8606, 0.2542 ) }
    dend_9 { pt3dadd( 462.694, 608.57, 37.1955, 0.4322 ) }
    dend_9 { pt3dadd( 462.653, 609.681, 37.1571, 0.3176 ) }
    dend_9 { pt3dadd( 462.748, 610.812, 37.3733, 0.2406 ) }
    dend_9 { pt3dadd( 462.637, 611.936, 37.24, 0.2716 ) }
    dend_9 { pt3dadd( 462.263, 612.643, 36.4935, 0.2542 ) }
    dend_9 { pt3dadd( 461.217, 612.864, 35.8907, 0.356 ) }
    dend_9 { pt3dadd( 460.563, 613.67, 35.7888, 0.356 ) }
    dend_9 { pt3dadd( 460.025, 614.609, 35.7302, 0.2288 ) }
    dend_9 { pt3dadd( 459.085, 615.107, 35.5054, 0.2288 ) }
    dend_9 { pt3dadd( 458.014, 615.358, 35.7182, 0.2288 ) }
    dend_9 { pt3dadd( 457.108, 615.807, 35.793, 0.353 ) }
    dend_9 { pt3dadd( 456.685, 616.387, 35.56, 0.3814 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 452.338, 562.492, 42.3111, 0.7626 ) }
    dend_8 { pt3dadd( 453.253, 563.42, 42.0, 0.3814 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 60/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 413.213, 549.12, 63.84, 0.6864 ) }
    dend_17 { pt3dadd( 413.15, 549.702, 63.5001, 0.4922 ) }
    dend_17 { pt3dadd( 412.95, 550.794, 63.1896, 0.4338 ) }
    dend_17 { pt3dadd( 412.506, 551.786, 62.7362, 0.7372 ) }
    dend_17 { pt3dadd( 412.02, 552.647, 63.3416, 0.369 ) }
    dend_17 { pt3dadd( 411.487, 553.043, 65.3786, 0.2552 ) }
    dend_17 { pt3dadd( 410.766, 553.862, 65.0695, 0.377 ) }
    dend_17 { pt3dadd( 410.463, 554.705, 64.6677, 0.51 ) }
    dend_17 { pt3dadd( 410.132, 555.182, 62.5092, 0.4576 ) }
    dend_17 { pt3dadd( 409.971, 556.211, 62.5296, 0.5844 ) }
    dend_17 { pt3dadd( 409.849, 557.219, 63.0, 0.3556 ) }
    dend_17 { pt3dadd( 410.004, 557.856, 64.4722, 0.5186 ) }
    dend_17 { pt3dadd( 409.63, 558.614, 65.6256, 0.4514 ) }
    dend_17 { pt3dadd( 409.266, 559.645, 66.36, 0.3814 ) }
    dend_17 { pt3dadd( 408.86, 560.338, 65.4987, 0.4322 ) }
    dend_17 { pt3dadd( 408.347, 561.187, 65.24, 0.563 ) }
    dend_17 { pt3dadd( 407.916, 562.222, 65.6275, 0.532 ) }
    dend_17 { pt3dadd( 407.465, 563.23, 65.24, 0.346 ) }
    dend_17 { pt3dadd( 407.134, 563.85, 66.8021, 0.412 ) }
    dend_17 { pt3dadd( 406.912, 564.673, 65.5572, 0.535 ) }
    dend_17 { pt3dadd( 406.629, 565.583, 65.24, 0.4344 ) }
    dend_17 { pt3dadd( 406.578, 566.696, 65.7364, 0.438 ) }
    dend_17 { pt3dadd( 406.096, 567.322, 66.9544, 0.348 ) }
    dend_17 { pt3dadd( 405.777, 567.996, 67.5702, 0.3814 ) }
    dend_17 { pt3dadd( 405.452, 568.633, 69.1113, 0.3594 ) }
    dend_17 { pt3dadd( 404.708, 569.357, 68.5409, 0.5816 ) }
    dend_17 { pt3dadd( 404.28, 570.196, 67.8686, 0.356 ) }
    dend_17 { pt3dadd( 403.84, 571.151, 68.549, 0.4188 ) }
    dend_17 { pt3dadd( 403.668, 572.031, 69.44, 0.483 ) }
    dend_17 { pt3dadd( 403.34, 573.075, 69.4434, 0.3842 ) }
    dend_17 { pt3dadd( 402.911, 574.018, 69.6018, 0.6168 ) }
    dend_17 { pt3dadd( 402.459, 574.844, 70.9192, 0.4944 ) }
    dend_17 { pt3dadd( 402.724, 575.612, 70.28, 0.2288 ) }
    dend_17 { pt3dadd( 402.818, 576.685, 70.847, 0.3588 ) }
    dend_17 { pt3dadd( 402.714, 577.627, 71.8122, 0.496 ) }
    dend_17 { pt3dadd( 402.688, 578.606, 71.5092, 0.4894 ) }
    dend_17 { pt3dadd( 402.574, 579.542, 72.7978, 0.483 ) }
    dend_17 { pt3dadd( 402.424, 580.294, 71.4283, 0.6564 ) }
    dend_17 { pt3dadd( 401.925, 581.127, 71.8906, 0.483 ) }
    dend_17 { pt3dadd( 401.665, 581.906, 73.2018, 0.393 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_17 { pt3dadd( 401.292, 582.766, 72.3383, 0.607 ) }
    dend_17 { pt3dadd( 400.697, 583.326, 72.6219, 0.496 ) }
    dend_17 { pt3dadd( 400.262, 584.009, 71.7886, 0.582 ) }
    dend_17 { pt3dadd( 399.671, 584.895, 71.549, 0.3952 ) }
    dend_17 { pt3dadd( 399.026, 585.615, 71.8964, 0.661 ) }
    dend_17 { pt3dadd( 398.526, 586.03, 72.4646, 0.707 ) }
    dend_17 { pt3dadd( 397.818, 586.739, 73.2693, 0.5756 ) }
    dend_17 { pt3dadd( 397.228, 587.445, 74.2, 0.231 ) }
    dend_17 { pt3dadd( 396.759, 588.343, 74.5158, 0.4068 ) }
    dend_17 { pt3dadd( 396.515, 589.231, 75.9139, 0.3326 ) }
    dend_17 { pt3dadd( 396.01, 589.949, 76.4915, 0.3326 ) }
    dend_17 { pt3dadd( 395.608, 590.513, 75.3245, 0.4048 ) }
    dend_17 { pt3dadd( 395.444, 591.408, 76.1592, 0.4832 ) }
    dend_17 { pt3dadd( 394.936, 592.34, 76.72, 0.3438 ) }
    dend_17 { pt3dadd( 394.441, 593.194, 76.0477, 0.4576 ) }
    dend_17 { pt3dadd( 394.078, 594.12, 75.3819, 0.2642 ) }
    dend_17 { pt3dadd( 393.73, 595.193, 75.32, 0.2288 ) }
    dend_17 { pt3dadd( 393.261, 596.221, 75.6, 0.2382 ) }
    dend_17 { pt3dadd( 392.897, 597.034, 74.3571, 0.3242 ) }
    dend_17 { pt3dadd( 392.609, 597.814, 73.9763, 0.253 ) }
    dend_17 { pt3dadd( 392.49, 598.047, 76.5755, 0.3416 ) }
    dend_17 { pt3dadd( 392.299, 598.938, 78.2247, 0.356 ) }
    dend_17 { pt3dadd( 392.185, 599.51, 80.2309, 0.301 ) }
    dend_17 { pt3dadd( 391.877, 600.232, 80.7022, 0.5848 ) }
    dend_17 { pt3dadd( 392.145, 601.224, 81.7113, 0.2808 ) }
    dend_17 { pt3dadd( 391.706, 602.244, 81.4783, 0.305 ) }
    dend_17 { pt3dadd( 391.255, 603.284, 81.2, 0.3084 ) }
    dend_17 { pt3dadd( 391.01, 604.294, 81.4909, 0.2806 ) }
    dend_17 { pt3dadd( 391.134, 605.285, 81.3128, 0.4322 ) }
    dend_17 { pt3dadd( 390.953, 604.718, 79.4783, 0.2358 ) }
    dend_17 { pt3dadd( 390.348, 604.375, 77.5883, 0.2934 ) }
    dend_17 { pt3dadd( 389.959, 605.036, 76.3269, 0.2634 ) }
    dend_17 { pt3dadd( 389.426, 605.866, 75.929, 0.2288 ) }
    dend_17 { pt3dadd( 388.896, 606.668, 77.2758, 0.2288 ) }
    dend_17 { pt3dadd( 388.612, 607.702, 77.84, 0.2288 ) }
    dend_17 { pt3dadd( 387.692, 608.314, 77.84, 0.2288 ) }
    dend_17 { pt3dadd( 387.021, 609.159, 77.84, 0.2288 ) }
    dend_17 { pt3dadd( 387.015, 610.302, 77.8683, 0.2288 ) }
    dend_17 { pt3dadd( 385.983, 610.438, 78.12, 0.2288 ) }
    dend_17 { pt3dadd( 385.056, 610.8, 78.6234, 0.2288 ) }
    dend_17 { pt3dadd( 384.841, 611.828, 78.12, 0.2288 ) }
    dend_17 { pt3dadd( 384.351, 612.71, 78.3835, 0.2872 ) }
    dend_17 { pt3dadd( 383.812, 613.579, 79.3811, 0.2962 ) }
    dend_17 { pt3dadd( 383.289, 614.392, 79.52, 0.2288 ) }
    dend_17 { pt3dadd( 382.474, 615.187, 79.52, 0.2288 ) }
    dend_17 { pt3dadd( 381.651, 615.951, 79.52, 0.2288 ) }
    dend_17 { pt3dadd( 381.638, 617.095, 79.52, 0.2288 ) }
    dend_17 { pt3dadd( 381.116, 617.936, 79.52, 0.3136 ) }
    dend_17 { pt3dadd( 380.338, 618.714, 79.52, 0.6356 ) }
    dend_17 { pt3dadd( 379.922, 619.055, 77.978, 0.476 ) }
    dend_17 { pt3dadd( 379.922, 619.813, 77.2618, 0.5428 ) }
    dend_17 { pt3dadd( 379.579, 620.396, 76.3417, 0.2288 ) }
    dend_17 { pt3dadd( 379.365, 621.384, 76.0718, 0.2992 ) }
    dend_17 { pt3dadd( 379.095, 622.48, 75.9637, 0.2796 ) }
    dend_17 { pt3dadd( 378.898, 623.51, 76.8379, 0.3036 ) }
    dend_17 { pt3dadd( 378.563, 624.543, 77.0479, 0.4576 ) }
    dend_17 { pt3dadd( 378.521, 625.636, 77.406, 0.3482 ) }
    dend_17 { pt3dadd( 378.166, 626.26, 77.56, 0.3304 ) }
    dend_17 { pt3dadd( 378.201, 627.255, 77.6642, 0.5422 ) }
    dend_17 { pt3dadd( 378.115, 628.282, 76.8062, 0.3948 ) }
    dend_17 { pt3dadd( 378.23, 628.857, 78.657, 0.2288 ) }
    dend_17 { pt3dadd( 378.465, 629.516, 80.0576, 0.2288 ) }
    dend_17 { pt3dadd( 377.99, 630.258, 81.1964, 0.2288 ) }
    dend_17 { pt3dadd( 378.159, 631.066, 79.8216, 0.326 ) }
    dend_17 { pt3dadd( 378.277, 631.903, 78.6934, 0.5628 ) }
    dend_17 { pt3dadd( 377.872, 632.553, 79.8596, 0.2806 ) }
    dend_17 { pt3dadd( 377.339, 633.117, 80.9444, 0.2354 ) }
    dend_17 { pt3dadd( 377.345, 633.781, 79.8062, 0.6712 ) }
    dend_17 { pt3dadd( 376.631, 634.416, 80.6268, 0.3372 ) }
    dend_17 { pt3dadd( 376.033, 635.235, 80.666, 0.2288 ) }
    dend_17 { pt3dadd( 375.804, 635.951, 82.32, 0.343 ) }
    dend_17 { pt3dadd( 374.874, 636.183, 81.7068, 0.3904 ) }
    dend_17 { pt3dadd( 374.556, 636.75, 80.4252, 0.3338 ) }
    dend_17 { pt3dadd( 374.889, 637.437, 80.08, 0.4576 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 74/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 413.213, 549.12, 63.84, 0.6864 ) }
    dend_16 { pt3dadd( 413.785, 548.891, 63.84, 0.4576 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_60, dend_51, dend_42, dend_41, dend_34, dend_25, dend_0, dend_57, dend_52, dend_46, dend_43, dend_36, dend_35, dend_33, dend_26, dend_20, dend_1, dend_59, dend_58, dend_54, dend_53, dend_50, dend_47, dend_45, dend_44, dend_38, dend_37, dend_28, dend_27, dend_22, dend_21, dend_11, dend_2, dend_56, dend_55, dend_49, dend_48, dend_40, dend_39, dend_32, dend_29, dend_24, dend_23, dend_13, dend_12, dend_6, dend_3, dend_31, dend_30, dend_19, dend_14, dend_10, dend_7, dend_5, dend_4, dend_18, dend_15, dend_9, dend_8, dend_17, dend_16]}
    dend = new SectionList()
    dend_60 dend.append()
    dend_51 dend.append()
    dend_42 dend.append()
    dend_41 dend.append()
    dend_34 dend.append()
    dend_25 dend.append()
    dend_0 dend.append()
    dend_57 dend.append()
    dend_52 dend.append()
    dend_46 dend.append()
    dend_43 dend.append()
    dend_36 dend.append()
    dend_35 dend.append()
    dend_33 dend.append()
    dend_26 dend.append()
    dend_20 dend.append()
    dend_1 dend.append()
    dend_59 dend.append()
    dend_58 dend.append()
    dend_54 dend.append()
    dend_53 dend.append()
    dend_50 dend.append()
    dend_47 dend.append()
    dend_45 dend.append()
    dend_44 dend.append()
    dend_38 dend.append()
    dend_37 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_11 dend.append()
    dend_2 dend.append()
    dend_56 dend.append()
    dend_55 dend.append()
    dend_49 dend.append()
    dend_48 dend.append()
    dend_40 dend.append()
    dend_39 dend.append()
    dend_32 dend.append()
    dend_29 dend.append()
    dend_24 dend.append()
    dend_23 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_6 dend.append()
    dend_3 dend.append()
    dend_31 dend.append()
    dend_30 dend.append()
    dend_19 dend.append()
    dend_14 dend.append()
    dend_10 dend.append()
    dend_7 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()
    dend_18 dend.append()
    dend_15 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()
    dend_17 dend.append()
    dend_16 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_19049, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_19049 = new SectionList()
    soma_0 OneSecGrp_SectionRef_19049.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.22  // units: uF/cm2
    forsec axon cm = 1.22  // units: uF/cm2
    forsec dend cm = 1.22  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 80.33  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 2.2325581E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.027628997  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 1.13506634E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.05482903  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.8501777  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 5.027294E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.002284526  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 3.5095995E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.6322225E-6  // units: S cm-2
        e_pas_nml2 = -92.10467  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 9.839851E-4  // units: S cm-2
        e_pas_nml2 = -92.10467  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 2.0048444E-6  // units: S cm-2
        e_pas_nml2 = -92.10467  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 2.297595E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0035041834  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_41 nseg = 5
    dend_57 nseg = 11
    dend_46 nseg = 3
    dend_59 nseg = 7
    dend_54 nseg = 9
    dend_53 nseg = 13
    dend_50 nseg = 3
    dend_47 nseg = 7
    dend_45 nseg = 7
    dend_44 nseg = 13
    dend_38 nseg = 7
    dend_37 nseg = 9
    dend_22 nseg = 3
    dend_21 nseg = 15
    dend_56 nseg = 3
    dend_39 nseg = 3
    dend_32 nseg = 7
    dend_29 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 5
    dend_12 nseg = 7
    dend_6 nseg = 3
    dend_3 nseg = 11
    dend_31 nseg = 5
    dend_30 nseg = 5
    dend_10 nseg = 7
    dend_15 nseg = 3
    dend_9 nseg = 3
    dend_17 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_473465774


