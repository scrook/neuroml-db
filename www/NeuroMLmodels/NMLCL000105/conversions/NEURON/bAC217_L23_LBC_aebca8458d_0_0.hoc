// Cell: bAC217_L23_LBC_aebca8458d_0_0
/*
{
  "id" : "bAC217_L23_LBC_aebca8458d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.5447, -11.4608, -0.121548, 4.55716", "1.45806, -10.4101, -0.101251, 5.33345", "1.37142, -9.3594, -0.0809547, 6.71804", "1.28478, -8.3087, -0.0606581, 7.7053", "1.19814, -7.258, -0.0403614, 8.69256", "1.1115, -6.2073, -0.0200648, 9.66358", "1.02486, -5.1566, 2.31834E-4, 10.3117", "0.93822, -4.10591, 0.0205285, 10.9822", "0.85158, -3.05521, 0.0408251, 11.6587", "0.764941, -2.00451, 0.0611217, 12.3352", "0.678301, -0.953811, 0.0814183, 12.6937", "0.591661, 0.0968873, 0.101715, 12.5787", "0.505021, 1.14759, 0.122012, 12.461", "0.418381, 2.19828, 0.142308, 12.4202", "0.331741, 3.24898, 0.162605, 12.5676", "0.245101, 4.29968, 0.182901, 12.4989", "0.158462, 5.35038, 0.203198, 12.2559", "0.0718217, 6.40108, 0.223495, 11.901", "-0.0148181, 7.45177, 0.243791, 11.546", "-0.101458, 8.50247, 0.264088, 11.1811", "-0.188098, 9.55317, 0.284385, 6.13668" ]
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-6.12787, 6.73142, -4.87765, 0.83", "-7.04004, 6.41509, -4.59782, 0.83", "-10.7497, 4.9541, -3.157, 0.83", "-12.6119, 4.22071, -2.43374, 0.83", "-14.7667, 3.37206, -1.59681, 1.11", "-19.0571, 1.68236, 0.0695615, 0.83", "-20.1614, 1.24745, 0.498462, 0.83", "-26.2362, -1.24123, 2.86541, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000016484319205
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-4.70787, 7.69667, -5.72765, 1.66", "-5.29164, 10.397, -2.62569, 1.38", "-5.88112, 13.1237, 0.506607, 1.38", "-6.24978, 14.8289, 2.46549, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000016484319205
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "4.50213, 7.55042, -7.92765, 0.83", "5.64167, 8.15747, -8.91389, 0.83", "6.37564, 8.502, -9.496, 0.83", "8.36737, 9.38889, -11.1904, 0.83", "10.4639, 10.2863, -12.9173, 0.83", "12.8768, 11.2351, -14.7898, 0.28", "13.7867, 11.5642, -15.506, 0.28", "15.5321, 12.0744, -16.889, 0.55", "18.1204, 12.7615, -18.9241, 0.28", "19.0767, 13.0127, -19.654, 0.83", "20.5431, 13.4405, -20.66, 0.83", "22.7624, 14.2475, -22.089, 0.28", "23.3216, 14.4815, -22.4127, 0.55", "24.2415, 14.9694, -22.8614, 0.28", "24.8954, 15.3882, -23.0625, 0.55", "27.6451, 17.4831, -23.6684, 0.28", "28.4708, 18.2144, -23.7599, 0.83", "30.1026, 19.7531, -23.7233, 0.28", "31.0335, 20.6413, -23.8779, 0.83", "32.9829, 22.4278, -24.4558, 0.28", "34.1847, 23.4963, -25.0898, 0.83", "35.348, 24.4623, -25.9431, 0.28", "36.2271, 25.1499, -26.8198, 1.11", "40.6105, 28.5319, -31.8074, 0.28", "41.3726, 29.1132, -32.7324, 0.83", "43.1837, 30.4977, -35.1285, 0.28", "43.7315, 30.956, -35.9749, 0.83", "45.2365, 32.4047, -38.8355, 0.28", "46.1136, 33.5164, -40.8993, 1.11", "46.424, 34.0414, -41.7198, 0.28", "46.6374, 34.5297, -42.4718, 0.55", "47.9268, 38.021, -47.8227, 0.28", "48.3685, 39.3184, -49.9861, 1.11", "48.8061, 40.5326, -52.2117, 0.28", "48.9353, 40.8399, -52.8295, 0.83", "49.5059, 41.9984, -55.2306, 0.28", "49.702, 42.3257, -55.9006, 0.83", "50.4957, 43.4211, -57.856, 0.28", "50.8369, 43.8329, -58.5754, 0.83", "52.0961, 45.1323, -61.0782, 0.28", "52.3859, 45.4146, -61.651, 0.83", "53.3253, 46.1617, -63.2725, 0.28", "53.6341, 46.444, -63.8459, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000016484319205,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "4.85213, 7.05317, -2.71765, 0.83", "6.46765, 8.45132, -2.71765, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000016484319205
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "4.24213, -4.13983, -15.1376, 1.66", "5.67719, -5.82322, -15.1376, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000016484319205
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.86213, -3.68158, 17.7524, 1.38", "2.97174, -4.24075, 18.9243, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000016484319205
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.507866, -13.0416, -5.60765, 3.05", "-1.09297, -14.5628, -5.60765, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000016484319205
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.188098, 9.55317, 0.284385, 0.625457", "-1.4208, 24.5024, 0.284385, 0.625457", "-2.65351, 39.4517, 0.284385, 0.625457" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-26.2362, -1.24123, 2.86541, 0.55", "-27.6666, -2.59465, 2.98775, 0.55", "-29.681, -4.31514, 2.92482, 0.55", "-33.4813, -7.55509, 3.0273, 0.28", "-34.8116, -8.65524, 3.10063, 1.11", "-36.785, -10.2986, 3.38728, 0.28", "-37.9394, -11.2721, 3.70998, 0.55", "-40.2724, -13.1714, 4.60572, 0.28", "-43.0775, -15.4618, 6.00717, 0.83", "-44.3095, -16.4745, 6.73316, 0.28", "-46.778, -18.5512, 8.23566, 0.83", "-50.2687, -21.6049, 10.3916, 0.28", "-51.441, -22.6591, 11.135, 1.11", "-55.2479, -26.1577, 13.3393, 0.28", "-56.0475, -26.8742, 13.7173, 0.83", "-57.8838, -28.55, 14.5172, 0.28", "-58.6275, -29.2096, 14.7297, 0.83", "-60.5501, -30.9416, 14.9948, 0.28", "-63.6328, -33.852, 15.3604, 0.83", "-69.1506, -39.9681, 18.0408, 0.83", "-73.1499, -47.1667, 20.6197, 0.83", "-76.3941, -54.6887, 23.3047, 0.83", "-80.2237, -62.2431, 24.8124, 0.83", "-83.3247, -70.1019, 26.3818, 0.83", "-84.7563, -78.4386, 27.785, 0.83", "-87.3875, -86.4528, 29.4002, 0.83", "-89.877, -94.3513, 31.731, 0.83", "-93.6053, -101.795, 33.9547, 0.83", "-98.275, -108.649, 36.3689, 0.83" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-26.2362, -1.24123, 2.86541, 0.28", "-27.9307, -4.51653, 3.01786, 0.28", "-28.4197, -5.65773, 3.04488, 0.83", "-29.4719, -8.64692, 2.77747, 0.28", "-31.5638, -16.8206, 0.805894, 0.28", "-33.9143, -28.1663, -2.48984, 0.28", "-34.0708, -29.0071, -2.7864, 0.55", "-34.4548, -32.5527, -4.25185, 0.28", "-34.6951, -35.8443, -5.72049, 0.83", "-34.8356, -41.6866, -8.65549, 0.28", "-34.8176, -42.2649, -9.01291, 0.83", "-34.6465, -44.3633, -10.9558, 0.28", "-34.5928, -45.251, -11.7818, 0.55" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-6.24978, 14.8289, 2.46549, 1.11", "-7.02577, 17.0677, 4.69946, 1.11", "-7.8149, 19.3445, 6.97125, 0.83", "-7.99655, 19.8686, 7.4942, 0.83", "-8.61749, 21.6601, 9.28179, 0.83", "-9.39183, 23.8941, 11.511, 1.11" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-6.24978, 14.8289, 2.46549, 0.83", "-8.9413, 16.7399, 0.421318, 0.83", "-12.7592, 19.5884, -1.94338, 0.83", "-13.9313, 20.5947, -2.65734, 0.83", "-16.6886, 23.9399, -6.09986, 0.55", "-17.9277, 25.8285, -8.19896, 0.55", "-18.5448, 26.9029, -9.4923, 0.83", "-19.7167, 29.5555, -12.966, 0.55", "-20.6398, 31.9404, -16.468, 0.83", "-23.0254, 38.7622, -27.3312, 0.28", "-23.2817, 39.5552, -28.6838, 0.83", "-23.9933, 41.6397, -32.3287, 0.28", "-24.5165, 42.9472, -34.699, 1.11", "-25.673, 45.218, -38.8184, 0.28", "-25.9675, 45.666, -39.5681, 1.11", "-28.451, 48.7891, -43.9711, 0.28", "-29.2712, 49.748, -45.2341, 1.38", "-31.8647, 52.6154, -48.6172, 0.28", "-33.6528, 54.307, -50.5608, 1.66", "-39.5674, 59.2446, -55.9293, 0.28", "-41.8289, 61.0052, -57.6929, 0.83", "-44.1097, 62.6626, -59.3229, 0.28", "-45.2991, 63.5355, -60.1991, 1.38", "-51.9816, 68.4624, -65.1334, 0.28", "-53.139, 69.3811, -66.0822, 1.38", "-56.0837, 71.8883, -68.6025, 0.28", "-58.8355, 74.5057, -71.3354, 1.38", "-64.0002, 79.9067, -76.9134, 0.28", "-64.6107, 80.597, -77.591, 1.38", "-67.191, 83.8206, -80.5197, 0.28", "-67.7247, 84.4506, -81.0841, 0.55", "-69.6436, 86.5755, -82.9993, 0.28", "-70.4499, 87.4202, -83.6115, 0.83", "-72.0761, 88.9789, -84.6061, 0.28", "-72.2754, 89.1858, -84.7491, 0.83", "-74.7586, 91.9236, -86.9364, 0.28", "-76.969, 94.7951, -89.4731, 1.11", "-79.1647, 98.1589, -92.5895, 0.55", "-79.5272, 98.8305, -93.2224, 1.11", "-81.834, 104.218, -98.6102, 0.28", "-82.631, 106.751, -101.347, 0.83", "-83.07, 109.364, -104.368, 0.28", "-83.1134, 109.827, -104.911, 0.83", "-83.093, 110.608, -105.953, 0.28", "-82.9142, 112.363, -108.317, 0.83", "-82.287, 114.727, -111.555, 0.28", "-82.1049, 115.255, -112.253, 1.11" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "6.46765, 8.45132, -2.71765, 0.83", "7.35618, 9.57739, -2.901, 0.83", "9.31798, 12.2392, -3.34506, 0.83", "12.1238, 16.2256, -3.79648, 0.83", "13.9036, 18.8506, -4.01872, 0.83", "17.4234, 24.0367, -4.46466, 0.83", "18.4631, 25.5829, -4.56108, 0.28", "18.9552, 26.3847, -4.53479, 0.55", "20.26, 28.7078, -4.22784, 0.28", "20.4761, 29.1047, -4.09381, 0.83", "21.6524, 31.1438, -3.25846, 0.28", "22.4616, 32.4488, -2.66337, 0.55", "24.6895, 35.3866, -1.28394, 0.28", "25.4336, 36.2371, -0.914286, 0.28", "26.9408, 37.7576, -0.434538, 0.83", "29.1397, 39.7663, 0.0601991, 0.28", "29.9519, 40.4351, 0.205923, 0.83", "33.1934, 42.7752, 0.510804, 0.28", "34.2546, 43.4932, 0.496661, 0.55", "36.5617, 45.1199, 0.422671, 0.28", "37.3463, 45.7435, 0.382053, 0.83", "39.1481, 47.6415, 0.241754, 0.28", "40.3544, 49.1637, 0.119307, 1.11", "42.348, 52.0789, -0.156614, 0.28", "43.8286, 54.5099, -0.357928, 0.28", "44.7256, 56.2271, -0.463861, 1.11", "46.5525, 60.3113, -0.858451, 0.28", "46.9653, 61.4899, -1.02924, 0.83" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "6.46765, 8.45132, -2.71765, 0.55", "7.7769, 9.99859, -2.3821, 0.55", "8.00488, 10.2681, -2.32367, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "5.67719, -5.82322, -15.1376, 1.38", "5.34606, -6.97017, -16.6681, 1.38", "4.13783, -11.1553, -22.2528, 1.38" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "5.67719, -5.82322, -15.1376, 0.83", "8.00704, -5.02551, -17.5438, 0.83", "10.1917, -4.18355, -19.6496, 0.83", "11.8118, -3.47228, -21.174, 0.83", "14.0778, -2.40708, -23.2521, 0.28", "14.6577, -2.1216, -23.7887, 1.11", "17.6523, -0.61219, -26.5565, 0.28", "18.9416, 0.0625831, -27.7036, 1.66", "21.7129, 1.58901, -30.0974, 0.28", "22.3048, 1.90217, -30.6054, 1.11", "25.097, 3.29359, -32.7944, 0.28", "25.3922, 3.41027, -33.0511, 0.83", "27.7618, 4.16501, -34.9319, 0.28", "29.1244, 4.56994, -35.9583, 1.11", "32.5825, 5.71838, -38.5181, 0.28", "34.1839, 6.2835, -39.6911, 1.11", "42.4732, 9.42329, -45.2783, 0.28", "48.6212, 11.9081, -49.1926, 0.28", "50.3064, 12.6273, -50.2859, 1.66", "60.1077, 17.0499, -56.7925, 0.28", "60.4647, 17.2236, -57.0325, 1.11", "64.0767, 19.1297, -59.3916, 0.28", "65.028, 19.704, -59.9528, 0.83", "69.4257, 22.4618, -63.0516, 0.28", "70.1785, 22.8647, -63.6165, 0.55", "72.4378, 23.758, -65.5409, 0.28", "74.5126, 24.477, -67.5141, 1.11", "77.5494, 25.3973, -70.5798, 0.28", "77.7516, 25.4536, -70.7794, 0.55", "80.0721, 26.0589, -73.0247, 0.28", "81.2094, 26.3569, -74.0387, 0.83", "83.9754, 27.0715, -76.332, 0.28", "84.9262, 27.3386, -77.0866, 0.55", "87.4261, 28.1421, -78.7526, 0.28", "89.0475, 28.6996, -79.7452, 0.55", "94.24, 30.6716, -82.3004, 0.28", "94.8076, 30.891, -82.5086, 0.55", "96.3178, 31.4858, -82.8164, 0.28", "96.878, 31.7178, -82.8614, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "2.97174, -4.24075, 18.9243, 0.83", "3.87387, -4.35788, 18.4203, 0.83", "4.75483, -4.47226, 17.9282, 0.83", "6.66293, -4.72001, 16.8621, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "2.97174, -4.24075, 18.9243, 0.55", "3.50333, -6.22879, 19.2373, 0.55", "4.06685, -8.33623, 19.569, 0.55", "5.2262, -12.6719, 20.2516, 0.55", "6.23244, -16.435, 20.8439, 0.55", "9.36117, -25.1871, 22.5718, 0.55", "11.5061, -34.1018, 24.8165, 0.55", "12.34, -43.0576, 27.646, 0.55", "13.5393, -51.5821, 31.5457, 0.55", "13.4616, -59.6215, 36.5383, 0.55", "14.6292, -68.0802, 40.5942, 0.55", "17.084, -75.9759, 45.24, 0.55", "19.0246, -83.3395, 50.9235, 0.55", "20.838, -89.8598, 57.6353, 0.55", "23.7438, -95.8099, 64.5232, 0.55", "27.4087, -101.36, 71.4034, 0.55", "31.5343, -105.736, 78.885, 0.55", "35.0322, -109.899, 86.7986, 0.55", "37.3464, -112.726, 95.7003, 0.55", "40.0636, -115.744, 104.421, 0.55", "43.7287, -119.083, 112.661, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-1.09297, -14.5628, -5.60765, 2.49", "1.19931, -18.2835, -3.29875, 2.49" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.09297, -14.5628, -5.60765, 1.11", "-5.39556, -18.446, -11.3251, 1.11", "-8.70172, -21.4299, -15.7185, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.65351, 39.4517, 0.284385, 0.28", "-3.88622, 54.401, 0.284385, 0.28", "-5.11892, 69.3502, 0.284385, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-9.39183, 23.8941, 11.511, 0.55", "-7.77988, 25.1452, 12.3512, 0.55", "-7.23456, 25.5373, 12.6379, 0.55", "-4.30962, 27.6541, 14.1903, 0.55", "-2.55371, 28.971, 15.1085, 0.55", "-0.98726, 30.2558, 15.9722, 0.55", "0.618253, 31.619, 16.9712, 0.55", "1.5961, 32.4543, 17.5937, 0.83", "3.58304, 34.1959, 18.9464, 0.28", "4.23295, 34.8273, 19.4512, 0.55", "6.9598, 37.4281, 21.534, 0.28", "8.42188, 38.9025, 22.6908, 0.55", "14.0246, 43.4644, 26.9277, 0.55" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-9.39183, 23.8941, 11.511, 0.55", "-10.9357, 24.6282, 13.0938, 0.55", "-15.13, 26.6227, 17.3939, 0.83", "-18.644, 28.2936, 20.9965, 0.28", "-19.4877, 28.6948, 21.8615, 0.83", "-22.9205, 30.3271, 25.3808, 0.28", "-25.1066, 31.3666, 27.622, 0.55" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "8.00488, 10.2681, -2.32367, 0.55", "8.29658, 12.893, -1.496, 0.55", "8.69709, 15.8597, -0.500521, 0.83", "8.92507, 17.11, 0.0268516, 0.83", "9.34474, 19.5663, 1.02862, 0.28", "10.1184, 24.2398, 2.82302, 0.55", "10.5761, 27.0771, 3.87385, 0.28", "11.0071, 29.2892, 4.69642, 0.83", "11.7286, 33.037, 5.98614, 0.28", "12.2166, 35.2617, 6.71367, 1.11", "12.885, 38.0551, 7.64856, 0.55", "13.0458, 38.8171, 7.87571, 1.11", "13.8183, 42.4893, 9.04354, 0.28", "14.1073, 44.3729, 9.4667, 1.11", "14.6343, 48.2818, 10.1133, 0.28", "14.8163, 49.3613, 10.3097, 0.83", "15.0736, 50.7703, 10.5315, 0.28", "15.4648, 52.6113, 10.7327, 0.83", "16.466, 56.8606, 11.041, 0.28", "16.9098, 58.3602, 11.196, 0.83", "18.0018, 61.8736, 11.4841, 0.28", "18.4741, 63.1525, 11.5672, 0.83", "19.4697, 65.364, 11.667, 0.28", "19.9755, 66.2646, 11.6996, 1.11", "21.0727, 67.6422, 11.9338, 1.11", "23.1912, 77.03, 13.3753, 1.11", "26.178, 86.1469, 15.0316, 1.11", "30.0388, 95.0663, 15.8037, 1.11", "33.7554, 104.077, 16.0991, 1.11", "35.476, 113.646, 15.3309, 1.11", "37.161, 123.242, 15.3351, 1.11", "40.0477, 132.447, 16.6573, 1.11", "43.4747, 141.57, 16.9155, 1.11", "45.6848, 150.753, 19.2457, 1.11", "48.2408, 159.982, 20.9876, 1.11", "51.607, 168.874, 23.093, 1.11", "53.6285, 177.671, 26.7341, 1.11" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "8.00488, 10.2681, -2.32367, 0.55", "9.35524, 11.1194, -1.13838, 0.55", "11.0924, 11.8692, 0.611075, 0.55", "13.8398, 13.055, 3.37787, 0.55", "15.6742, 13.8468, 5.22534, 0.55", "17.1026, 14.4633, 6.66381, 0.55", "20.9744, 16.1344, 10.563, 0.55", "24.4448, 17.4135, 14.5089, 0.28", "30.7067, 20.0915, 18.957, 0.28", "37.2109, 21.8759, 23.5385, 0.28" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "4.13783, -11.1553, -22.2528, 1.11", "4.67336, -12.4635, -23.4054, 1.11", "5.14905, -13.4266, -24.2326, 0.83", "5.73227, -14.6074, -25.2469, 0.83", "7.12865, -17.4344, -27.6751, 0.55", "8.04314, -19.2858, -29.2654, 1.11", "9.45687, -22.148, -31.7239, 0.28", "9.90828, -22.8701, -32.4301, 1.38" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "4.13783, -11.1553, -22.2528, 0.83", "7.28595, -9.64889, -30.0184, 0.83", "8.31036, -9.2704, -32.613, 0.83", "9.79477, -8.83875, -36.2347, 0.28", "10.6967, -8.68213, -38.3132, 1.11", "13.5103, -8.42536, -44.4082, 0.28", "14.5693, -8.32873, -46.7021, 1.38", "16.4824, -8.31822, -50.5787, 0.55", "16.9732, -8.36667, -51.61, 1.38", "18.5654, -8.55739, -54.7053, 0.55", "19.1353, -8.71668, -55.7841, 1.38" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "6.66293, -4.72001, 16.8621, 0.28", "7.29991, -5.0815, 18.7087, 0.28", "7.75834, -5.32327, 19.8704, 0.83", "10.9067, -6.98372, 27.849, 0.28", "11.5807, -7.33921, 29.5571, 0.83", "13.1072, -8.14428, 33.4256, 0.28", "14.1196, -8.6782, 35.9911, 0.83", "15.7421, -9.4127, 40.4189, 0.83", "19.6743, -11.6636, 52.2904, 0.83", "21.8808, -12.9986, 64.7384, 0.83", "24.2683, -14.2394, 77.1631, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "6.66293, -4.72001, 16.8621, 0.55", "10.73, -3.16244, 12.8495, 0.55", "12.9633, -2.26513, 10.7621, 0.55", "15.364, -1.23288, 8.75074, 0.55", "17.2119, -0.424822, 7.36015, 0.28", "18.3033, 0.0439831, 6.55548, 0.83", "20.4968, 0.965783, 4.98997, 0.55", "20.9967, 1.17381, 4.71065, 0.55", "24.0389, 2.37777, 3.27492, 0.28", "25.5161, 2.92018, 2.66195, 0.83", "28.4395, 3.91568, 1.5728, 0.28", "29.4097, 4.24321, 1.18746, 0.83", "35.8693, 6.44239, -1.38023, 0.28", "38.4454, 7.28348, -2.52661, 1.11", "42.1051, 8.41887, -4.07934, 0.28", "43.0937, 8.73499, -4.47139, 1.38", "46.9985, 10.026, -5.86315, 0.28", "48.1895, 10.4317, -6.29758, 0.83", "51.5102, 11.6269, -7.5063, 0.28", "54.8062, 12.9127, -8.68189, 1.66", "61.2136, 15.6935, -10.5965, 0.28", "62.0654, 16.1139, -10.7161, 0.83", "64.9667, 17.6645, -10.7016, 0.28", "66.1291, 18.3112, -10.6492, 0.83", "70.1262, 20.6266, -10.3186, 0.28", "71.4469, 21.4133, -10.1993, 1.11", "81.8722, 27.765, -8.59156, 0.28", "84.8172, 29.5603, -8.06893, 1.11", "89.3527, 32.3259, -7.0868, 0.28", "90.2606, 32.8665, -6.88151, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "1.19931, -18.2835, -3.29875, 2.22", "0.43401, -20.9077, -4.80731, 2.22" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "1.19931, -18.2835, -3.29875, 0.83", "4.36022, -21.8152, -12.9414, 0.83", "5.32411, -22.8921, -15.8818, 0.83", "6.45427, -24.1549, -19.3295, 0.83", "6.93416, -24.6911, -20.7935, 1.38" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.70172, -21.4299, -15.7185, 1.11", "-9.71272, -22.9594, -16.2142, 1.11", "-10.9386, -24.7844, -16.8756, 1.11", "-13.6575, -28.8321, -18.3424, 1.11", "-15.3443, -31.3433, -19.2524, 0.55", "-16.4509, -32.9907, -19.8494, 0.55", "-18.6694, -36.2934, -21.0462, 0.28", "-21.2039, -39.7209, -22.2645, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-8.70172, -21.4299, -15.7185, 0.55", "-10.2933, -20.4541, -17.2395, 0.55", "-12.0622, -19.1788, -19.3499, 0.55", "-13.2546, -18.267, -20.8913, 0.83", "-15.462, -16.6353, -24.0512, 0.83", "-16.9856, -15.5874, -26.2708, 0.28", "-18.0764, -14.8761, -27.9776, 0.83", "-19.8816, -13.7266, -30.9696, 0.28", "-20.9348, -13.0808, -32.9041, 1.11", "-22.5966, -12.208, -36.0192, 0.28", "-23.7392, -11.6841, -38.2501, 1.38", "-25.5401, -10.8827, -41.7219, 0.28", "-26.7115, -10.2992, -43.9456, 0.55", "-28.1169, -9.51449, -46.2361, 0.28", "-29.3181, -8.68353, -48.0649, 0.83", "-31.1123, -7.18342, -50.5508, 0.28", "-31.9736, -6.3489, -51.6647, 1.11", "-34.8105, -3.37821, -54.9193, 0.28", "-36.7608, -1.1689, -57.3218, 0.83", "-38.7962, 1.19044, -59.8345, 0.28", "-39.5997, 2.13607, -60.8411, 0.55", "-41.2005, 4.04192, -62.8399, 0.28", "-42.5479, 5.66714, -64.5654, 1.38", "-47.3895, 11.5669, -70.9988, 0.28", "-48.513, 13.0071, -72.6166, 1.38", "-50.4099, 15.4831, -75.3623, 0.28", "-51.2338, 16.5748, -76.5348, 0.83", "-53.9821, 20.3124, -80.374, 0.28", "-54.8878, 21.5909, -81.5868, 1.38", "-56.8667, 24.491, -84.0332, 0.28", "-57.3492, 25.1647, -84.6157, 0.83", "-59.6285, 28.275, -87.4275, 0.28", "-60.3175, 29.2463, -88.2126, 1.11", "-62.5222, 32.5015, -90.5805, 0.28", "-63.0843, 33.321, -91.1602, 1.11", "-67.295, 39.4616, -95.4102, 0.28", "-68.2169, 40.8341, -96.3277, 1.11", "-71.8786, 46.4086, -99.8481, 0.28", "-72.3312, 47.1237, -100.27, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "14.0246, 43.4644, 26.9277, 0.28", "20.8776, 49.0431, 32.7353, 0.28", "27.5835, 55.1391, 38.1532, 0.28" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "14.0246, 43.4644, 26.9277, 0.28", "19.4066, 47.7791, 32.5711, 0.28", "25.4592, 52.6535, 36.8759, 0.28", "31.0845, 56.5635, 42.5902, 0.28", "36.2805, 61.149, 48.1848, 0.28", "39.7423, 66.8879, 54.0251, 0.28" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-25.1066, 31.3666, 27.622, 0.28", "-26.284, 32.0067, 28.214, 0.28", "-27.3044, 32.5614, 28.7271, 0.55", "-29.6224, 33.8215, 29.8925, 0.28", "-31.3703, 34.7717, 30.7714, 0.55", "-36.0022, 38.0321, 33.9243, 0.55", "-40.4191, 41.1851, 37.4737, 0.55", "-44.6555, 44.2003, 41.3522, 0.55", "-49.4283, 46.505, 45.1176, 0.55", "-54.5017, 49.7625, 47.5042, 0.55", "-58.9171, 53.1726, 50.7976, 0.55", "-62.9665, 56.3129, 54.77, 0.55", "-67.4617, 58.6968, 58.8141, 0.55", "-72.5088, 61.6682, 61.6107, 0.55", "-77.8286, 65.0947, 63.0147, 0.55", "-83.4829, 68.2553, 63.4, 0.55", "-88.6267, 72.0944, 64.2245, 0.55", "-93.317, 76.5216, 63.9954, 0.55", "-98.4613, 80.2077, 62.6157, 0.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-25.1066, 31.3666, 27.622, 0.55", "-26.2177, 32.1185, 30.5016, 0.55", "-28.2698, 33.5071, 35.8195, 0.55", "-29.7105, 34.4819, 39.5531, 0.28", "-30.7916, 35.2135, 42.3547, 0.55", "-32.3795, 36.2879, 46.4697, 0.28", "-34.3994, 37.6547, 51.7042, 0.83", "-37.7187, 40.0796, 63.0852, 0.83", "-39.9971, 44.4142, 74.1258, 0.83", "-40.2697, 48.1663, 85.6125, 0.83", "-39.001, 52.2095, 96.9281, 0.83" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "37.2109, 21.8759, 23.5385, 0.28", "42.4279, 24.0633, 28.3148, 0.28", "47.1657, 27.1487, 33.0637, 0.28", "51.9664, 31.4263, 36.6149, 0.28", "56.0049, 36.3062, 40.3016, 0.28", "61.3111, 40.5943, 43.013, 0.28", "66.2027, 45.1587, 46.018, 0.28", "70.1447, 50.269, 49.4731, 0.28", "74.4953, 55.2956, 52.5386, 0.28", "79.0048, 59.775, 56.2101, 0.28", "83.8259, 64.5207, 59.0267, 0.28", "87.7223, 68.8635, 63.4964, 0.28", "91.4829, 72.3629, 68.7922, 0.28", "94.8712, 76.8717, 73.5018, 0.28", "99.0375, 80.5995, 78.3015, 0.28" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "37.2109, 21.8759, 23.5385, 0.28", "45.2264, 26.494, 32.0839, 0.28", "52.2947, 32.0275, 40.8909, 0.28", "60.4007, 35.5138, 49.912, 0.28", "67.6245, 36.7277, 60.2353, 0.28", "73.2231, 36.3817, 71.598, 0.28" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "9.90828, -22.8701, -32.4301, 0.28", "11.4812, -28.2022, -34.6656, 0.28", "12.0475, -30.4702, -35.6059, 1.38", "13.6948, -37.8043, -38.3842, 0.28", "13.9274, -39.1455, -38.9218, 1.38", "14.8077, -45.3519, -41.3777, 0.28", "14.9762, -46.9827, -42.0545, 1.94", "15.164, -51.696, -44.1293, 0.28", "15.1389, -53.5628, -44.9429, 1.38", "14.7969, -59.3379, -47.343, 0.55", "14.5483, -62.0495, -48.2791, 1.66", "13.7952, -68.3144, -49.8914, 0.28", "13.6304, -69.412, -50.032, 1.38", "13.2424, -71.851, -49.9906, 0.55", "13.0664, -72.8869, -49.8393, 0.55", "12.0999, -78.5452, -47.9184, 0.28", "11.8968, -79.8019, -47.3031, 1.66", "11.2055, -84.8086, -44.2258, 0.28", "11.1224, -85.409, -43.8578, 0.55", "10.9797, -87.0343, -42.8771, 0.28", "10.9551, -88.9134, -41.7948, 1.38", "11.2969, -94.2981, -39.1623, 0.28", "11.366, -95.0633, -38.8945, 0.83", "11.6666, -97.5695, -38.402, 0.28", "12.0084, -100.392, -38.1124, 1.11", "12.5732, -104.927, -37.9938, 0.28", "12.8355, -106.983, -38.1462, 1.38", "13.5127, -112.257, -38.9434, 0.28", "13.6896, -113.667, -39.1304, 0.55", "14.3622, -118.874, -39.7894, 0.28", "14.4412, -119.571, -39.8698, 1.66", "15.3682, -126.805, -40.5883, 0.28", "15.7661, -129.624, -40.7, 1.11", "16.3395, -133.432, -40.6557, 0.28", "16.4724, -134.204, -40.6211, 1.11", "17.1265, -137.383, -40.3477, 0.28", "17.4329, -138.626, -40.1457, 0.83", "17.998, -140.613, -39.6595, 0.28", "18.2043, -141.26, -39.456, 0.83", "19.7198, -145.609, -37.9072, 0.28", "20.3293, -147.335, -37.3695, 0.83", "22.3115, -152.676, -35.8673, 0.28", "22.8998, -154.361, -35.5773, 1.11", "24.1585, -158.152, -35.2454, 0.28", "24.2698, -158.495, -35.2369, 0.55", "26.3757, -165.257, -35.5405, 0.28", "26.8109, -166.689, -35.7206, 0.83", "28.6318, -172.771, -36.7842, 0.28", "29.046, -174.098, -37.0427, 1.11", "30.7511, -179.441, -38.0408, 0.28", "31.1347, -180.49, -38.1632, 0.83", "33.8453, -186.618, -38.4449, 0.28", "34.9038, -188.6, -38.4625, 1.11", "37.4995, -192.745, -38.3255, 0.28", "39.0093, -194.956, -38.2096, 0.83", "44.4113, -202.4, -37.7197, 0.28", "45.9676, -204.465, -37.4472, 1.66", "49.5248, -208.975, -36.5388, 0.28", "50.4484, -210.253, -36.288, 0.83", "52.37, -213.057, -35.6871, 0.28", "52.6236, -213.477, -35.6295, 0.83", "55.1698, -218.488, -35.0027, 0.28", "55.8894, -220.092, -34.8146, 0.83", "58.5274, -226.76, -34.1282, 0.28", "59.0371, -228.102, -34.0328, 0.83", "61.239, -234.294, -33.9446, 0.28", "61.792, -235.852, -33.9902, 1.11" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "9.90828, -22.8701, -32.4301, 0.28", "10.5304, -23.2887, -33.8957, 0.28", "11.2782, -23.7775, -35.6684, 0.83", "13.086, -24.9463, -40.0649, 0.28", "14.0291, -25.5272, -42.303, 0.28", "14.9481, -26.0376, -44.4287, 1.66", "17.2487, -27.1995, -49.5915, 0.28", "18.2903, -27.6587, -51.8553, 1.11", "19.6078, -28.0663, -54.4195, 0.28", "20.0342, -28.1254, -55.1823, 1.38", "21.7215, -28.0993, -58.1992, 0.55", "22.0325, -28.0465, -58.7776, 1.38", "23.4394, -27.6027, -61.602, 0.55", "24.2636, -27.3111, -63.3928, 1.38", "26.3981, -26.5242, -68.1881, 0.28", "27.2044, -26.22, -70.0624, 1.11", "29.9808, -25.1276, -76.9387, 0.28", "31.0443, -24.6903, -79.7168, 1.11", "33.7148, -23.551, -86.9942, 0.28", "34.0417, -23.4073, -87.8717, 1.38", "35.6727, -22.6144, -91.9887, 0.55", "36.6487, -22.1435, -94.3447, 0.83", "37.8966, -21.5023, -97.2098, 0.28", "38.2509, -21.3169, -97.9689, 0.55", "40.3466, -19.9695, -102.246, 0.28", "41.1282, -19.4217, -103.872, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "19.1353, -8.71668, -55.7841, 0.28", "20.9589, -9.67681, -57.6963, 0.28", "23.5715, -11.1565, -60.3504, 1.38", "28.4337, -14.0686, -65.2117, 0.28", "30.2074, -15.2274, -66.8864, 1.11", "34.937, -18.5525, -71.0245, 0.28", "35.712, -19.1706, -71.6712, 0.83", "38.523, -21.7741, -73.7791, 0.28", "39.0337, -22.3132, -74.1032, 0.83", "42.961, -27.2051, -76.2374, 0.28", "44.7703, -29.706, -77.2015, 0.83", "48.6788, -36.0058, -78.9281, 0.28", "50.1958, -38.5721, -79.5863, 0.55", "51.3325, -40.6739, -80.03, 0.28", "51.6252, -41.2424, -80.1533, 0.55", "53.1171, -44.8815, -80.988, 0.28", "54.7768, -48.6875, -82.5823, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "19.1353, -8.71668, -55.7841, 0.28", "19.6063, -8.08167, -57.945, 0.28", "20.749, -6.541, -63.1878, 1.66", "21.2538, -5.86038, -65.5038, 1.66", "23.2077, -3.22594, -74.4686, 0.28", "24.3024, -1.74988, -79.4914, 0.28", "24.6674, -1.25779, -81.166, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "24.2683, -14.2394, 77.1631, 0.28", "23.5275, -21.8006, 82.9682, 0.28", "23.512, -30.1932, 87.4582, 0.28", "21.8448, -38.6651, 91.4996, 0.28", "19.6829, -47.6678, 93.6736, 0.28", "18.9471, -56.9519, 95.429, 0.28" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "24.2683, -14.2394, 77.1631, 0.28", "30.7735, -11.3135, 82.7396, 0.28", "36.7792, -8.88635, 89.0825, 0.28", "43.2174, -5.79795, 94.6436, 0.28", "50.465, -3.06266, 99.3313, 0.28" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.43401, -20.9077, -4.80731, 1.38", "1.73666, -22.9086, -2.8632, 1.38", "3.44007, -25.525, -0.320976, 1.66", "6.80245, -30.6895, 4.69714, 1.66" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "0.43401, -20.9077, -4.80731, 0.83", "-2.41358, -23.5279, -4.86532, 0.83", "-7.47194, -28.1821, -4.96837, 0.83", "-12.348, -32.6687, -5.0677, 0.83", "-16.5716, -36.5549, -5.15374, 0.83", "-18.2347, -38.0852, -5.18762, 0.83", "-19.707, -39.4398, -5.21761, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.93416, -24.6911, -20.7935, 0.28", "8.1246, -25.8678, -22.9746, 0.28", "8.79582, -26.5304, -24.1395, 1.66", "12.3226, -30.2553, -30.011, 0.28", "13.3568, -31.3877, -31.6952, 1.66", "14.2941, -32.4629, -33.1936, 0.28", "15.6956, -34.1461, -35.5289, 0.28", "16.1831, -34.9293, -36.544, 1.11", "17.3642, -37.2579, -39.3978, 0.28", "17.4231, -37.4057, -39.5457, 0.83", "17.8204, -38.5285, -40.5863, 0.28", "18.4753, -40.8002, -42.8133, 1.38", "19.8045, -45.9627, -47.9902, 0.28", "20.1366, -47.2819, -49.4317, 1.38", "20.8789, -50.0693, -52.6247, 0.28", "21.0992, -50.6595, -53.3445, 1.11", "23.7323, -56.2217, -60.4703, 0.28", "23.8874, -56.4871, -60.8348, 0.83", "26.2197, -59.5954, -65.6589, 0.28", "26.6008, -60.041, -66.4644, 1.11", "29.2142, -62.5819, -72.0468, 0.28", "29.4672, -62.7984, -72.5565, 0.83", "31.3768, -63.9931, -75.7487, 0.28", "31.8396, -64.2692, -76.5366, 1.11", "34.3537, -65.6096, -80.9021, 0.28", "34.4883, -65.691, -81.2092, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "6.93416, -24.6911, -20.7935, 0.28", "4.8629, -25.4941, -25.7373, 0.28", "3.32963, -26.1972, -29.1938, 1.11", "2.64333, -26.5415, -30.6784, 0.28", "1.31894, -27.2242, -33.3634, 1.11", "-5.15931, -30.6188, -45.6944, 0.28", "-5.52102, -30.8072, -46.3818, 1.11", "-7.95503, -32.1004, -50.7134, 0.28", "-8.39406, -32.3393, -51.4972, 0.83", "-11.4025, -33.9735, -56.7587, 0.28", "-12.4252, -34.5146, -58.3312, 1.11", "-18.4471, -37.5537, -66.0208, 0.28", "-20.8773, -38.7864, -69.6261, 1.38", "-25.1432, -40.9855, -76.843, 0.28", "-25.9038, -41.4196, -78.2762, 0.55", "-27.0942, -42.2352, -81.1797, 0.28", "-27.4352, -42.5166, -82.0912, 1.11", "-30.5796, -46.3533, -92.4741, 0.28", "-30.8519, -46.9081, -93.852, 0.55", "-31.0489, -47.7704, -95.6414, 0.28", "-31.5034, -51.1273, -102.813, 0.83", "-31.5964, -53.7151, -108.467, 0.28", "-31.5911, -56.0, -113.085, 0.83", "-31.1465, -60.3986, -119.466, 0.28", "-31.0463, -61.3512, -120.855, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-21.2039, -39.7209, -22.2645, 0.28", "-22.5246, -43.819, -21.8735, 0.28", "-23.0246, -45.4595, -21.7955, 0.55", "-23.3604, -46.9736, -22.2846, 0.28", "-23.4666, -47.519, -22.5169, 0.55", "-23.7446, -49.0159, -23.267, 0.28", "-24.3301, -52.4001, -25.2272, 1.11", "-24.8124, -55.5458, -27.4808, 0.28", "-25.5411, -60.2074, -30.8554, 0.83", "-26.0784, -63.2039, -32.8745, 0.28", "-26.3464, -64.636, -33.9416, 1.38", "-26.937, -67.5398, -36.1751, 0.28", "-27.092, -68.2103, -36.6937, 0.28", "-27.5742, -70.1454, -38.2797, 0.28", "-28.1322, -72.0504, -39.7299, 1.11", "-30.3937, -79.1271, -45.3375, 0.55", "-30.6918, -79.9893, -45.9925, 1.11", "-32.4594, -84.7061, -49.4986, 0.28", "-32.754, -85.4695, -50.0526, 1.38", "-33.7062, -87.8978, -51.742, 0.55", "-33.9824, -88.6414, -52.3084, 0.83", "-34.5226, -90.0684, -53.2745, 0.28", "-34.7182, -90.6696, -53.7053, 0.55", "-35.141, -92.2155, -54.8259, 0.28", "-35.2988, -92.83, -55.3959, 0.83", "-36.7517, -98.8448, -62.1346, 0.28", "-36.8642, -99.2346, -62.5926, 0.55", "-37.5419, -101.314, -65.1021, 0.28", "-37.7644, -101.949, -65.8227, 0.83", "-39.9734, -107.595, -71.9868, 0.28", "-40.5356, -108.929, -73.1736, 0.55", "-41.8467, -111.812, -74.9909, 0.28", "-42.1627, -112.674, -75.6149, 0.55", "-42.9321, -115.242, -77.5128, 0.28", "-42.9889, -115.466, -77.6599, 0.55", "-43.7579, -119.694, -79.5516, 0.28", "-43.8485, -120.404, -79.8879, 0.55", "-43.919, -128.645, -85.243, 0.28", "-43.8652, -129.908, -86.3128, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-21.2039, -39.7209, -22.2645, 0.28", "-28.1918, -37.8715, -20.3416, 0.28", "-30.0903, -37.1909, -20.331, 0.55", "-31.5623, -36.6194, -20.4607, 0.28", "-34.095, -35.5688, -20.7653, 0.83", "-36.9516, -34.3461, -21.1282, 0.28", "-39.2618, -33.3539, -21.4092, 1.38", "-43.1012, -31.6367, -22.1995, 0.28", "-44.5179, -31.0444, -22.4928, 0.55", "-49.5523, -29.1623, -23.467, 0.28", "-50.4236, -28.8858, -23.6146, 1.11", "-54.7494, -27.7512, -24.3721, 0.28", "-56.1511, -27.4619, -24.6178, 1.11", "-61.2868, -26.7167, -25.287, 0.28", "-62.4757, -26.5925, -25.511, 0.83", "-64.735, -26.4548, -26.0418, 0.28", "-66.4435, -26.3638, -26.4697, 0.55", "-67.456, -26.3083, -26.7391, 0.28", "-68.2226, -26.2435, -26.9318, 1.38", "-74.3281, -25.4341, -28.4381, 0.55", "-76.6949, -24.8772, -29.0335, 1.11", "-78.361, -24.3707, -29.4532, 0.28", "-79.0941, -24.0689, -29.6143, 0.83", "-80.6633, -23.311, -29.9592, 0.28", "-82.5607, -22.1909, -30.3389, 1.11", "-87.9889, -18.5643, -31.233, 0.28", "-88.51, -18.1957, -31.323, 1.38", "-93.5725, -14.4929, -32.191, 0.55", "-95.2877, -13.2459, -32.4489, 1.38", "-100.165, -9.68741, -33.063, 0.55", "-101.14, -9.00073, -33.1475, 1.11", "-103.384, -7.49093, -33.2403, 0.55", "-104.639, -6.77244, -33.1618, 0.83", "-107.915, -5.22137, -32.6246, 0.55", "-109.237, -4.64384, -32.426, 1.11", "-112.358, -3.44649, -32.041, 0.28", "-114.198, -2.74344, -31.8013, 1.11", "-120.416, -0.436211, -30.9475, 0.28", "-121.594, -0.0118884, -30.7869, 0.83", "-127.284, 1.97452, -30.0839, 0.28", "-128.161, 2.26967, -29.9968, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "6.80245, -30.6895, 4.69714, 1.11", "7.72009, -31.9756, 3.03543, 1.11", "8.90937, -33.6424, 0.881845, 1.11", "9.29529, -34.1833, 0.182995, 1.11" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.80245, -30.6895, 4.69714, 0.83", "6.51956, -31.5758, 9.10528, 0.83", "5.53694, -34.6544, 24.4172, 0.55", "4.49239, -37.9271, 40.6943, 0.28", "4.33628, -38.4161, 43.1268, 0.55", "3.51476, -40.99, 55.9283, 0.28", "1.32508, -42.7742, 69.3852, 0.28", "-1.26185, -43.514, 82.8722, 0.28", "-4.43054, -45.8776, 96.0388, 0.28", "-7.14264, -47.0412, 109.471, 0.28", "-11.2333, -46.1177, 122.563, 0.28", "-17.3186, -44.8296, 134.82, 0.28", "-22.143, -41.871, 147.327, 0.28", "-27.4542, -38.7432, 159.59, 0.28", "-33.9878, -34.0713, 170.685, 0.28", "-40.5199, -31.6262, 182.516, 0.28", "-46.0683, -29.5317, 194.907, 0.28", "-49.0032, -25.6116, 207.717, 0.28", "-53.9465, -20.83, 219.562, 0.28", "-56.2847, -14.8665, 231.641, 0.28", "-57.0149, -8.08101, 243.467, 0.28", "-55.7375, 0.0128917, 254.345, 0.28", "-53.5838, 7.39452, 265.613, 0.28" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-19.707, -39.4398, -5.21761, 0.55", "-20.1605, -41.7109, -3.29287, 0.55", "-20.635, -43.0573, -1.83649, 0.83", "-21.2946, -44.626, -0.263395, 0.55", "-23.2056, -48.7285, 3.37927, 0.83", "-23.895, -50.1313, 4.50665, 0.28", "-24.7897, -51.9483, 5.93203, 0.83", "-27.2225, -56.3856, 9.39075, 0.28", "-29.1832, -59.9161, 11.7811, 1.11", "-30.8936, -63.1303, 13.5241, 0.55", "-31.494, -64.3595, 13.9494, 0.83", "-33.1939, -68.3327, 15.116, 0.28", "-33.537, -69.4255, 15.3721, 0.83", "-34.3749, -73.2205, 16.0949, 0.28", "-34.5578, -74.3785, 16.3582, 1.11", "-34.8043, -76.761, 16.7348, 0.28", "-34.9067, -78.6634, 16.9179, 1.38", "-34.9904, -83.566, 17.1632, 0.28", "-34.9783, -85.2598, 17.3077, 0.83", "-34.8218, -88.0723, 17.8089, 0.28", "-34.7175, -90.1418, 18.1813, 1.38", "-34.5882, -93.4827, 18.8305, 0.28", "-34.5465, -94.549, 19.0701, 0.83", "-34.4526, -96.9406, 19.7652, 0.28", "-34.294, -100.606, 21.0211, 1.11", "-33.9039, -107.152, 23.6775, 0.28", "-33.7103, -108.956, 24.3327, 1.11", "-32.8289, -115.099, 26.6279, 0.28", "-32.5085, -117.085, 27.3026, 0.83", "-32.2627, -118.429, 27.718, 0.28", "-31.8931, -120.297, 28.2543, 1.11", "-29.885, -128.104, 30.8831, 0.28", "-28.7337, -132.303, 32.1365, 1.11", "-27.5303, -136.725, 33.1762, 0.28", "-27.3746, -137.327, 33.2897, 0.83", "-28.42, -146.504, 37.8536, 0.83", "-31.7312, -155.145, 42.4461, 0.83", "-37.7984, -162.701, 46.1544, 0.83", "-43.358, -170.195, 50.6996, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-19.707, -39.4398, -5.21761, 0.28", "-24.4871, -42.1911, -9.1905, 0.28", "-25.6614, -42.867, -10.1664, 1.38" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-128.161, 2.26967, -29.9968, 0.28", "-135.314, -2.68592, -32.2966, 0.28", "-136.149, -3.2887, -32.5798, 0.83", "-140.234, -6.16387, -33.9435, 0.28", "-140.999, -6.64167, -34.2143, 0.83", "-146.804, -10.0707, -36.2973, 0.28", "-148.018, -10.7488, -36.8117, 1.11", "-154.665, -14.2676, -39.8294, 0.28", "-155.695, -14.7965, -40.2219, 1.11", "-161.639, -17.7619, -41.8183, 0.28", "-162.344, -18.1003, -41.9896, 1.11", "-168.305, -20.7107, -43.0603, 0.28", "-175.792, -23.7061, -44.2053, 0.55", "-178.201, -24.5492, -44.3047, 0.28", "-180.853, -25.6777, -43.9322, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "9.29529, -34.1833, 0.182995, 0.83", "8.83512, -37.5304, 5.92932, 0.83", "8.73124, -38.2861, 7.22664, 0.83", "8.44713, -40.3525, 10.7744, 0.83", "8.24322, -41.8357, 13.3207, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "9.29529, -34.1833, 0.182995, 0.28", "9.47194, -35.7297, -0.275405, 0.28", "9.75755, -38.3005, -1.03496, 0.28", "10.3552, -43.6803, -2.62449, 0.83", "10.7855, -47.5526, -3.76861, 0.28", "10.873, -48.3403, -4.00134, 0.55", "10.9632, -49.1527, -4.24137, 0.28", "11.0799, -49.9329, -4.48439, 1.94" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-25.6614, -42.867, -10.1664, 0.28", "-26.6083, -48.7421, -13.4375, 0.28", "-26.8321, -50.048, -14.3109, 0.55", "-27.0364, -51.1808, -15.0828, 0.28", "-27.2276, -52.2644, -15.7304, 0.83", "-27.4947, -53.8327, -16.7364, 0.28", "-27.8452, -55.732, -17.9081, 1.11", "-28.9488, -61.0787, -20.7854, 0.28", "-29.0772, -61.6811, -21.0948, 1.11", "-29.9214, -65.3513, -22.8558, 0.55", "-30.6965, -68.3384, -24.4396, 1.66", "-31.4261, -71.0655, -25.9208, 0.28", "-31.6522, -71.9002, -26.3931, 0.83", "-32.6523, -75.2113, -28.2314, 0.28", "-33.1235, -76.6561, -29.1184, 1.11", "-35.4292, -83.2473, -33.4318, 0.28", "-35.7127, -84.0433, -33.9434, 1.66", "-37.7689, -89.6638, -37.7545, 0.28", "-38.0456, -90.4185, -38.3107, 1.38", "-39.4026, -94.147, -41.2518, 0.28", "-39.5914, -94.7079, -41.7216, 0.83", "-40.0747, -96.1756, -42.9403, 0.28", "-40.3337, -96.9935, -43.6438, 0.55", "-41.589, -101.562, -47.6461, 0.28", "-41.7195, -102.001, -48.0677, 0.83", "-43.1911, -106.902, -52.9156, 0.28", "-43.3647, -107.407, -53.4164, 0.83", "-44.6078, -110.59, -56.5425, 0.28", "-44.8178, -111.088, -56.9975, 0.83", "-47.6949, -117.21, -62.0639, 0.28", "-48.0732, -118.124, -62.8824, 0.55", "-48.7266, -119.935, -64.4856, 0.28", "-48.9771, -120.764, -65.2045, 0.83", "-49.7861, -124.024, -67.9116, 0.28", "-49.8645, -124.41, -68.2262, 0.55", "-50.5593, -132.443, -74.3546, 0.28", "-50.6088, -133.783, -75.449, 0.55", "-50.5148, -135.85, -77.2479, 0.28", "-50.4357, -136.665, -77.9867, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-25.6614, -42.867, -10.1664, 0.28", "-28.644, -47.0592, -14.5199, 0.28", "-29.3512, -48.0531, -15.5521, 0.83", "-30.5257, -49.7039, -17.2663, 0.28", "-31.4155, -50.9546, -18.5652, 2.77" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "8.24322, -41.8357, 13.3207, 0.55", "8.09023, -44.0658, 13.2489, 0.55", "8.0946, -45.1856, 13.3134, 0.83", "8.21622, -47.0777, 13.4602, 0.28", "8.36303, -48.4052, 13.5616, 1.11", "8.62663, -50.6331, 13.7174, 1.11", "8.92697, -53.099, 13.8773, 0.28", "9.33747, -55.817, 14.3716, 0.83", "10.3456, -61.461, 15.8727, 0.28", "10.6585, -63.1669, 16.4255, 1.11", "11.2531, -66.109, 17.4898, 0.28", "11.4992, -67.2185, 18.0371, 1.11", "12.9303, -73.8016, 21.5633, 0.55", "13.1497, -75.1241, 22.36, 1.38", "13.6058, -78.0469, 24.2517, 0.28", "13.812, -79.46, 25.151, 1.66", "15.0142, -87.7799, 30.3049, 0.28", "15.3614, -90.3877, 31.8023, 1.94", "17.0054, -104.766, 39.1796, 0.28", "17.1121, -105.784, 39.6613, 0.83", "17.3106, -107.78, 40.516, 0.28", "17.3707, -108.66, 40.8442, 0.83", "17.4621, -111.071, 41.5472, 0.28", "17.4953, -112.161, 41.8575, 0.83", "17.6629, -121.125, 43.5484, 0.28", "17.6774, -122.98, 43.9243, 0.83", "17.7088, -131.974, 45.9105, 0.28", "17.7118, -133.613, 46.3014, 0.83", "18.1174, -144.738, 47.9177, 0.83", "17.4087, -155.518, 51.1248, 0.83", "15.7038, -166.087, 54.6788, 0.83", "16.2564, -176.538, 58.9023, 0.83", "18.0399, -186.344, 64.2605, 0.83", "19.3301, -194.962, 71.5571, 0.83", "22.7741, -204.182, 77.191, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.24322, -41.8357, 13.3207, 0.55", "9.45382, -41.6698, 15.8866, 0.55", "9.63134, -41.6454, 16.2628, 0.83", "11.4209, -41.4002, 20.0557, 0.83", "11.9002, -41.3345, 21.0717, 1.11", "15.4657, -40.8458, 28.6288, 0.28", "15.8631, -40.7914, 29.4712, 0.83", "19.0024, -39.4078, 34.886, 0.83", "22.2626, -39.0701, 40.4034, 0.83", "26.4466, -37.8192, 45.0973, 0.83", "30.5182, -36.9595, 49.9791, 0.83", "35.3228, -35.9017, 54.0927, 0.83", "40.269, -34.089, 57.7333, 0.83", "45.5281, -32.0001, 60.7201, 0.83", "51.2028, -30.8026, 63.4525, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "11.0799, -49.9329, -4.48439, 0.28", "11.1907, -54.7827, -3.95226, 0.28", "11.2833, -56.2126, -4.04055, 1.66", "11.6221, -61.0506, -4.69612, 0.28", "11.6714, -61.6137, -4.7878, 1.11", "11.9717, -65.0497, -5.38177, 0.28", "12.0434, -65.8877, -5.42605, 1.38", "12.608, -70.8457, -5.21126, 0.28", "12.6907, -71.6402, -5.20439, 0.83", "12.9211, -74.212, -5.26283, 0.28", "13.016, -75.4715, -5.27559, 1.94", "13.6425, -85.4764, -5.12103, 0.28", "13.7157, -86.5423, -4.95958, 1.38", "13.9425, -90.4134, -4.04513, 0.28", "13.9874, -91.28, -3.84509, 0.55", "14.1129, -94.3143, -3.15113, 0.28", "14.1398, -94.9557, -3.03185, 1.66", "14.6202, -109.02, -0.872344, 0.28", "14.6617, -110.608, -0.63787, 1.94", "14.8505, -119.343, 0.705339, 0.55", "14.8547, -119.971, 0.796876, 1.66", "14.7779, -128.552, 1.91365, 0.28", "14.7544, -129.57, 2.0072, 1.11", "14.6668, -131.469, 1.99722, 0.28", "14.618, -132.366, 2.06154, 0.83", "14.2387, -136.195, 2.79964, 0.28", "14.1623, -136.56, 2.92824, 0.83", "13.6218, -138.305, 3.78432, 0.28", "13.1344, -139.655, 4.34061, 0.83", "11.3453, -144.224, 6.09394, 0.28", "10.7834, -145.578, 6.55487, 1.11", "7.38297, -153.523, 8.88582, 0.28", "6.89919, -154.663, 9.19061, 0.83", "4.93411, -159.38, 10.3221, 0.28", "4.2328, -161.366, 10.6019, 0.55", "3.36669, -164.437, 10.6442, 0.28", "3.21036, -165.323, 10.6231, 0.55", "3.15774, -168.217, 10.3699, 0.28", "3.18806, -169.021, 10.3334, 1.11", "3.69018, -173.987, 10.3749, 0.28", "3.81621, -175.057, 10.318, 1.38", "4.31052, -178.04, 10.0807, 0.28", "4.41574, -178.659, 10.0252, 0.55", "4.41574, -178.659, 10.0252, 0.55", "2.1199, -188.62, 9.63364, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "11.0799, -49.9329, -4.48439, 0.28", "13.2265, -54.1089, -10.7516, 0.28", "13.7841, -55.0703, -12.0135, 1.38", "16.4646, -59.4287, -17.4728, 0.28", "16.901, -60.2423, -18.8836, 1.38", "17.9599, -62.292, -22.9519, 0.28", "18.1861, -62.7247, -23.8559, 0.83", "19.1102, -64.5642, -27.8467, 0.28", "19.4419, -65.2284, -29.4, 1.11", "22.2367, -70.7923, -43.8589, 0.28", "22.3765, -71.0094, -44.5147, 0.83", "22.8109, -71.5466, -46.476, 0.28", "23.0188, -71.8006, -47.5592, 0.83", "23.3548, -72.2182, -49.9573, 0.28", "23.4375, -72.2903, -50.3806, 0.83", "29.3902, -73.0266, -50.82, 0.28", "29.8318, -73.0663, -50.8535, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-31.4155, -50.9546, -18.5652, 0.28", "-32.4575, -51.9337, -19.4885, 0.28", "-33.0434, -52.4842, -20.0076, 0.55", "-36.1538, -55.4067, -22.7634, 0.55", "-37.4356, -56.6111, -23.8991, 1.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-31.4155, -50.9546, -18.5652, 0.28", "-30.9122, -54.1764, -17.8483, 0.28", "-30.8695, -54.4497, -17.7874, 1.11", "-30.3644, -57.6829, -17.068, 0.28", "-30.1968, -58.7558, -16.8292, 1.38", "-29.5301, -63.0235, -15.8796, 0.28", "-29.3157, -64.3956, -15.5743, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-37.4356, -56.6111, -23.8991, 0.28", "-39.7235, -60.2574, -24.5906, 0.28", "-40.2372, -61.0275, -24.7827, 0.83", "-41.5126, -62.899, -25.2549, 0.28", "-42.2181, -63.8436, -25.5576, 1.11", "-46.775, -69.7458, -27.4701, 0.28", "-47.7701, -71.0322, -27.8773, 1.11", "-50.3191, -74.2865, -28.9879, 0.28", "-51.7309, -76.0096, -29.5825, 1.38", "-55.5553, -80.5779, -31.1643, 0.28", "-56.496, -81.6695, -31.5619, 0.55", "-58.1102, -83.5142, -32.2394, 0.28", "-58.7587, -84.3072, -32.5517, 1.11", "-61.7483, -88.4698, -34.1864, 0.28", "-62.3716, -89.5442, -34.6502, 1.38", "-63.7918, -92.6696, -36.0088, 0.28", "-64.1901, -93.5269, -36.4812, 0.55", "-65.5933, -96.5675, -38.3766, 0.28", "-66.242, -97.9495, -39.295, 1.38", "-69.0821, -104.126, -43.4947, 0.28", "-69.5939, -105.15, -44.2123, 1.11", "-72.2908, -110.269, -47.9122, 0.28", "-72.2908, -110.269, -47.9122, 0.83", "-74.998, -114.143, -50.7808, 0.28", "-75.7152, -115.08, -51.454, 1.11", "-78.3772, -118.436, -53.6048, 0.28", "-79.3823, -119.802, -54.3718, 1.11", "-83.3635, -125.95, -57.2642, 0.28", "-83.8167, -126.69, -57.611, 0.83", "-86.3475, -131.074, -59.6045, 0.28", "-87.4535, -133.118, -60.4829, 1.11", "-89.609, -137.523, -62.1361, 0.28", "-90.0765, -138.536, -62.4999, 1.11", "-91.6552, -142.516, -63.9444, 0.28", "-91.9753, -143.249, -64.2215, 0.83", "-93.3729, -146.211, -65.3637, 0.28", "-93.9533, -147.23, -65.7912, 0.83", "-96.7817, -151.49, -67.4102, 0.28", "-97.5368, -152.426, -67.7218, 0.83", "-100.521, -155.74, -68.6689, 0.28", "-101.173, -156.398, -68.8609, 0.83", "-103.48, -158.565, -69.4702, 0.28", "-104.271, -159.294, -69.6968, 0.83", "-109.547, -163.986, -71.3392, 0.28", "-110.145, -164.596, -71.6007, 0.55", "-114.332, -169.638, -74.0041, 0.28", "-114.764, -170.29, -74.3524, 0.83", "-116.493, -173.611, -76.2259, 0.28", "-117.247, -175.762, -77.4773, 1.11", "-118.436, -182.047, -81.1973, 0.55", "-118.548, -182.882, -81.6928, 1.11", "-118.682, -188.18, -84.816, 0.28", "-118.668, -188.97, -85.2657, 0.83", "-118.188, -194.0, -87.7975, 0.28", "-118.097, -194.592, -88.0615, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-37.4356, -56.6111, -23.8991, 0.28", "-39.3549, -60.7915, -24.4621, 0.28", "-40.2817, -62.7927, -24.6908, 0.83", "-41.6775, -65.8182, -24.9865, 0.28", "-42.2398, -66.9701, -25.1307, 0.83", "-43.2878, -69.0254, -25.4076, 0.28", "-43.6089, -69.6253, -25.5172, 0.83", "-44.3184, -70.9408, -25.7739, 0.28", "-45.0431, -72.2634, -25.9834, 0.83", "-46.1614, -74.4183, -26.2256, 0.28", "-46.6693, -75.3836, -26.3696, 0.83", "-48.0607, -77.8526, -26.7403, 0.28", "-49.4688, -80.0959, -27.1185, 0.83", "-50.5712, -81.6883, -27.3659, 0.28", "-51.6338, -83.044, -27.4897, 0.83", "-53.1983, -84.9007, -27.5644, 0.28", "-54.4594, -86.2722, -27.6061, 0.83", "-59.0042, -91.1717, -27.5217, 0.28", "-60.0602, -92.272, -27.4665, 1.11", "-67.518, -99.9297, -26.7414, 0.28", "-69.0568, -101.451, -26.5558, 1.11", "-73.9278, -106.281, -25.6413, 0.28", "-76.3143, -108.691, -25.0405, 0.83", "-79.7771, -112.195, -23.868, 0.28", "-80.7124, -113.131, -23.5006, 0.83", "-84.3997, -116.696, -21.7401, 0.28", "-87.2688, -119.407, -20.3105, 0.83", "-89.3731, -121.345, -19.1539, 0.28", "-90.0381, -121.903, -18.8233, 1.11", "-93.8993, -125.101, -16.8667, 0.28", "-95.1315, -126.076, -16.322, 0.83", "-97.7902, -128.135, -15.2728, 0.28", "-99.2743, -129.24, -14.8508, 0.83", "-101.849, -131.137, -14.2305, 0.28", "-102.721, -131.78, -14.0071, 0.83", "-107.953, -135.616, -12.628, 0.28", "-108.512, -136.027, -12.4202, 0.83", "-110.16, -137.246, -11.6649, 0.28", "-111.335, -138.113, -11.0994, 0.83", "-115.87, -141.589, -8.53434, 0.28", "-116.782, -142.27, -7.93478, 0.83", "-120.875, -145.212, -4.44709, 0.28", "-121.494, -145.635, -3.89565, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-29.3157, -64.3956, -15.5743, 0.28", "-30.068, -67.3039, -12.0074, 0.28", "-30.3283, -68.0413, -11.2669, 0.83", "-31.3031, -70.4844, -8.95022, 0.28", "-31.5348, -71.0126, -8.49753, 0.55", "-33.9747, -76.2077, -4.32225, 0.28", "-35.537, -79.3996, -1.86692, 0.55", "-39.1489, -86.4599, 3.77459, 0.28", "-39.6585, -87.3532, 4.46434, 0.83", "-41.0974, -89.5945, 6.10119, 0.28", "-41.765, -90.5687, 6.72247, 0.83", "-42.8684, -92.0325, 7.36347, 0.28", "-44.5886, -94.1161, 8.07785, 1.11", "-46.3623, -95.9387, 8.87041, 0.28", "-47.3189, -96.9406, 9.40122, 0.83", "-49.8709, -104.94, 16.0795, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-29.3157, -64.3956, -15.5743, 0.28", "-29.642, -68.3031, -13.5444, 0.28", "-29.802, -69.2725, -13.154, 0.55", "-30.222, -71.7279, -12.2415, 0.28", "-30.3228, -72.2248, -12.0926, 1.11", "-31.3356, -76.9574, -10.6803, 0.28", "-31.7185, -78.6974, -10.169, 1.11", "-33.6369, -86.7899, -8.1109, 0.28", "-33.7941, -87.5396, -7.9331, 0.83", "-34.4803, -91.3016, -7.1085, 0.28", "-34.842, -93.8873, -6.56522, 1.38", "-35.7872, -102.886, -4.74925, 0.28", "-35.928, -104.427, -4.41259, 1.11", "-36.1834, -108.365, -3.53857, 0.28", "-36.2375, -109.425, -3.31391, 0.83", "-36.3277, -113.909, -2.40061, 0.28", "-36.317, -115.625, -2.12722, 1.11", "-36.1504, -119.793, -1.53576, 0.28", "-36.0434, -121.483, -1.31391, 0.83", "-35.6527, -125.967, -0.80018, 0.28", "-35.5201, -126.913, -0.7402, 0.83", "-34.4535, -131.504, -0.816392, 0.28", "-34.314, -131.849, -0.843624, 1.11", "-32.6152, -134.54, -1.21517, 0.55", "-31.9498, -135.414, -1.35184, 1.11", "-30.9247, -136.451, -1.55509, 0.28", "-29.7988, -137.426, -1.82483, 0.83", "-26.0729, -139.637, -2.97247, 0.28", "-25.5876, -139.885, -3.12178, 0.83", "-23.8052, -149.217, -2.76552, 0.83", "-21.7403, -158.47, -1.98476, 0.83", "-19.1394, -167.277, 0.603922, 0.83", "-16.0086, -176.156, 2.08388, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_65", "dend_56", "dend_55", "dend_48", "dend_39", "dend_32", "dend_0", "dend_67", "dend_66", "dend_58", "dend_57", "dend_54", "dend_49", "dend_41", "dend_40", "dend_34", "dend_33", "dend_7", "dend_1", "dend_62", "dend_59", "dend_53", "dend_50", "dend_45", "dend_42", "dend_36", "dend_35", "dend_11", "dend_8", "dend_3", "dend_2", "dend_64", "dend_63", "dend_61", "dend_60", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_38", "dend_37", "dend_23", "dend_12", "dend_10", "dend_9", "dend_6", "dend_4", "dend_25", "dend_24", "dend_22", "dend_13", "dend_5", "dend_29", "dend_26", "dend_21", "dend_14", "dend_31", "dend_30", "dend_28", "dend_27", "dend_18", "dend_15", "dend_20", "dend_19", "dend_17", "dend_16" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_65", "dend_56", "dend_55", "dend_48", "dend_39", "dend_32", "dend_0", "dend_67", "dend_66", "dend_58", "dend_57", "dend_54", "dend_49", "dend_41", "dend_40", "dend_34", "dend_33", "dend_7", "dend_1", "dend_62", "dend_59", "dend_53", "dend_50", "dend_45", "dend_42", "dend_36", "dend_35", "dend_11", "dend_8", "dend_3", "dend_2", "dend_64", "dend_63", "dend_61", "dend_60", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_38", "dend_37", "dend_23", "dend_12", "dend_10", "dend_9", "dend_6", "dend_4", "dend_25", "dend_24", "dend_22", "dend_13", "dend_5", "dend_29", "dend_26", "dend_21", "dend_14", "dend_31", "dend_30", "dend_28", "dend_27", "dend_18", "dend_15", "dend_20", "dend_19", "dend_17", "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_39", "dend_32", "dend_0", "axon_0", "axon_0", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_7", "dend_1", "dend_1", "axon_1", "axon_1", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_LBC_aebca8458d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_65, id: dend_65, parent: soma_0
create dend_65
public dend_65
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_48
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_7, id: dend_7, parent: dend_0
create dend_7
public dend_7
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_11
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_3
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_13
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_65, dend_56, dend_55, dend_48, dend_39, dend_32, dend_0, dend_67, dend_66, dend_58, dend_57, dend_54, dend_49, dend_41, dend_40, dend_34, dend_33, dend_7, dend_1, dend_62, dend_59, dend_53, dend_50, dend_45, dend_42, dend_36, dend_35, dend_11, dend_8, dend_3, dend_2, dend_64, dend_63, dend_61, dend_60, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_38, dend_37, dend_23, dend_12, dend_10, dend_9, dend_6, dend_4, dend_25, dend_24, dend_22, dend_13, dend_5, dend_29, dend_26, dend_21, dend_14, dend_31, dend_30, dend_28, dend_27, dend_18, dend_15, dend_20, dend_19, dend_17, dend_16]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_65, dend_56, dend_55, dend_48, dend_39, dend_32, dend_0, dend_67, dend_66, dend_58, dend_57, dend_54, dend_49, dend_41, dend_40, dend_34, dend_33, dend_7, dend_1, dend_62, dend_59, dend_53, dend_50, dend_45, dend_42, dend_36, dend_35, dend_11, dend_8, dend_3, dend_2, dend_64, dend_63, dend_61, dend_60, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_38, dend_37, dend_23, dend_12, dend_10, dend_9, dend_6, dend_4, dend_25, dend_24, dend_22, dend_13, dend_5, dend_29, dend_26, dend_21, dend_14, dend_31, dend_30, dend_28, dend_27, dend_18, dend_15, dend_20, dend_19, dend_17, dend_16]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_39, dend_32, dend_0, axon_0, axon_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_7, dend_1, dend_1, axon_1, axon_1, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_11, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_65(0), soma_0(0.45000016484319205)
    connect dend_56(0), soma_0(0.45000016484319205)
    connect dend_55(0), soma_0(0.45000016484319205)
    connect dend_48(0), soma_0(0.45000016484319205)
    connect dend_39(0), soma_0(0.45000016484319205)
    connect dend_32(0), soma_0(0.45000016484319205)
    connect dend_0(0), soma_0(0.45000016484319205)
    connect axon_0(0), soma_0(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_54(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_7(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.5447, -11.4608, -0.121548, 4.55716 ) }
    soma_0 { pt3dadd( 1.45806, -10.4101, -0.101251, 5.33345 ) }
    soma_0 { pt3dadd( 1.37142, -9.3594, -0.0809547, 6.71804 ) }
    soma_0 { pt3dadd( 1.28478, -8.3087, -0.0606581, 7.7053 ) }
    soma_0 { pt3dadd( 1.19814, -7.258, -0.0403614, 8.69256 ) }
    soma_0 { pt3dadd( 1.1115, -6.2073, -0.0200648, 9.66358 ) }
    soma_0 { pt3dadd( 1.02486, -5.1566, 2.31834E-4, 10.3117 ) }
    soma_0 { pt3dadd( 0.93822, -4.10591, 0.0205285, 10.9822 ) }
    soma_0 { pt3dadd( 0.85158, -3.05521, 0.0408251, 11.6587 ) }
    soma_0 { pt3dadd( 0.764941, -2.00451, 0.0611217, 12.3352 ) }
    soma_0 { pt3dadd( 0.678301, -0.953811, 0.0814183, 12.6937 ) }
    soma_0 { pt3dadd( 0.591661, 0.0968873, 0.101715, 12.5787 ) }
    soma_0 { pt3dadd( 0.505021, 1.14759, 0.122012, 12.461 ) }
    soma_0 { pt3dadd( 0.418381, 2.19828, 0.142308, 12.4202 ) }
    soma_0 { pt3dadd( 0.331741, 3.24898, 0.162605, 12.5676 ) }
    soma_0 { pt3dadd( 0.245101, 4.29968, 0.182901, 12.4989 ) }
    soma_0 { pt3dadd( 0.158462, 5.35038, 0.203198, 12.2559 ) }
    soma_0 { pt3dadd( 0.0718217, 6.40108, 0.223495, 11.901 ) }
    soma_0 { pt3dadd( -0.0148181, 7.45177, 0.243791, 11.546 ) }
    soma_0 { pt3dadd( -0.101458, 8.50247, 0.264088, 11.1811 ) }
    soma_0 { pt3dadd( -0.188098, 9.55317, 0.284385, 6.13668 ) }
    // Section: dend_65, id: dend_65, parent: soma_0 (entry count 21/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -6.12787, 6.73142, -4.87765, 0.83 ) }
    dend_65 { pt3dadd( -7.04004, 6.41509, -4.59782, 0.83 ) }
    dend_65 { pt3dadd( -10.7497, 4.9541, -3.157, 0.83 ) }
    dend_65 { pt3dadd( -12.6119, 4.22071, -2.43374, 0.83 ) }
    dend_65 { pt3dadd( -14.7667, 3.37206, -1.59681, 1.11 ) }
    dend_65 { pt3dadd( -19.0571, 1.68236, 0.0695615, 0.83 ) }
    dend_65 { pt3dadd( -20.1614, 1.24745, 0.498462, 0.83 ) }
    dend_65 { pt3dadd( -26.2362, -1.24123, 2.86541, 0.83 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 29/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -4.70787, 7.69667, -5.72765, 1.66 ) }
    dend_56 { pt3dadd( -5.29164, 10.397, -2.62569, 1.38 ) }
    dend_56 { pt3dadd( -5.88112, 13.1237, 0.506607, 1.38 ) }
    dend_56 { pt3dadd( -6.24978, 14.8289, 2.46549, 1.94 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 33/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 4.50213, 7.55042, -7.92765, 0.83 ) }
    dend_55 { pt3dadd( 5.64167, 8.15747, -8.91389, 0.83 ) }
    dend_55 { pt3dadd( 6.37564, 8.502, -9.496, 0.83 ) }
    dend_55 { pt3dadd( 8.36737, 9.38889, -11.1904, 0.83 ) }
    dend_55 { pt3dadd( 10.4639, 10.2863, -12.9173, 0.83 ) }
    dend_55 { pt3dadd( 12.8768, 11.2351, -14.7898, 0.28 ) }
    dend_55 { pt3dadd( 13.7867, 11.5642, -15.506, 0.28 ) }
    dend_55 { pt3dadd( 15.5321, 12.0744, -16.889, 0.55 ) }
    dend_55 { pt3dadd( 18.1204, 12.7615, -18.9241, 0.28 ) }
    dend_55 { pt3dadd( 19.0767, 13.0127, -19.654, 0.83 ) }
    dend_55 { pt3dadd( 20.5431, 13.4405, -20.66, 0.83 ) }
    dend_55 { pt3dadd( 22.7624, 14.2475, -22.089, 0.28 ) }
    dend_55 { pt3dadd( 23.3216, 14.4815, -22.4127, 0.55 ) }
    dend_55 { pt3dadd( 24.2415, 14.9694, -22.8614, 0.28 ) }
    dend_55 { pt3dadd( 24.8954, 15.3882, -23.0625, 0.55 ) }
    dend_55 { pt3dadd( 27.6451, 17.4831, -23.6684, 0.28 ) }
    dend_55 { pt3dadd( 28.4708, 18.2144, -23.7599, 0.83 ) }
    dend_55 { pt3dadd( 30.1026, 19.7531, -23.7233, 0.28 ) }
    dend_55 { pt3dadd( 31.0335, 20.6413, -23.8779, 0.83 ) }
    dend_55 { pt3dadd( 32.9829, 22.4278, -24.4558, 0.28 ) }
    dend_55 { pt3dadd( 34.1847, 23.4963, -25.0898, 0.83 ) }
    dend_55 { pt3dadd( 35.348, 24.4623, -25.9431, 0.28 ) }
    dend_55 { pt3dadd( 36.2271, 25.1499, -26.8198, 1.11 ) }
    dend_55 { pt3dadd( 40.6105, 28.5319, -31.8074, 0.28 ) }
    dend_55 { pt3dadd( 41.3726, 29.1132, -32.7324, 0.83 ) }
    dend_55 { pt3dadd( 43.1837, 30.4977, -35.1285, 0.28 ) }
    dend_55 { pt3dadd( 43.7315, 30.956, -35.9749, 0.83 ) }
    dend_55 { pt3dadd( 45.2365, 32.4047, -38.8355, 0.28 ) }
    dend_55 { pt3dadd( 46.1136, 33.5164, -40.8993, 1.11 ) }
    dend_55 { pt3dadd( 46.424, 34.0414, -41.7198, 0.28 ) }
    dend_55 { pt3dadd( 46.6374, 34.5297, -42.4718, 0.55 ) }
    dend_55 { pt3dadd( 47.9268, 38.021, -47.8227, 0.28 ) }
    dend_55 { pt3dadd( 48.3685, 39.3184, -49.9861, 1.11 ) }
    dend_55 { pt3dadd( 48.8061, 40.5326, -52.2117, 0.28 ) }
    dend_55 { pt3dadd( 48.9353, 40.8399, -52.8295, 0.83 ) }
    dend_55 { pt3dadd( 49.5059, 41.9984, -55.2306, 0.28 ) }
    dend_55 { pt3dadd( 49.702, 42.3257, -55.9006, 0.83 ) }
    dend_55 { pt3dadd( 50.4957, 43.4211, -57.856, 0.28 ) }
    dend_55 { pt3dadd( 50.8369, 43.8329, -58.5754, 0.83 ) }
    dend_55 { pt3dadd( 52.0961, 45.1323, -61.0782, 0.28 ) }
    dend_55 { pt3dadd( 52.3859, 45.4146, -61.651, 0.83 ) }
    dend_55 { pt3dadd( 53.3253, 46.1617, -63.2725, 0.28 ) }
    dend_55 { pt3dadd( 53.6341, 46.444, -63.8459, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 76/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 4.85213, 7.05317, -2.71765, 0.83 ) }
    dend_48 { pt3dadd( 6.46765, 8.45132, -2.71765, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 4.24213, -4.13983, -15.1376, 1.66 ) }
    dend_39 { pt3dadd( 5.67719, -5.82322, -15.1376, 1.66 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 80/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.86213, -3.68158, 17.7524, 1.38 ) }
    dend_32 { pt3dadd( 2.97174, -4.24075, 18.9243, 1.38 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 82/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.507866, -13.0416, -5.60765, 3.05 ) }
    dend_0 { pt3dadd( -1.09297, -14.5628, -5.60765, 3.05 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 84/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.188098, 9.55317, 0.284385, 0.625457 ) }
    axon_0 { pt3dadd( -1.4208, 24.5024, 0.284385, 0.625457 ) }
    axon_0 { pt3dadd( -2.65351, 39.4517, 0.284385, 0.625457 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 87/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -26.2362, -1.24123, 2.86541, 0.55 ) }
    dend_67 { pt3dadd( -27.6666, -2.59465, 2.98775, 0.55 ) }
    dend_67 { pt3dadd( -29.681, -4.31514, 2.92482, 0.55 ) }
    dend_67 { pt3dadd( -33.4813, -7.55509, 3.0273, 0.28 ) }
    dend_67 { pt3dadd( -34.8116, -8.65524, 3.10063, 1.11 ) }
    dend_67 { pt3dadd( -36.785, -10.2986, 3.38728, 0.28 ) }
    dend_67 { pt3dadd( -37.9394, -11.2721, 3.70998, 0.55 ) }
    dend_67 { pt3dadd( -40.2724, -13.1714, 4.60572, 0.28 ) }
    dend_67 { pt3dadd( -43.0775, -15.4618, 6.00717, 0.83 ) }
    dend_67 { pt3dadd( -44.3095, -16.4745, 6.73316, 0.28 ) }
    dend_67 { pt3dadd( -46.778, -18.5512, 8.23566, 0.83 ) }
    dend_67 { pt3dadd( -50.2687, -21.6049, 10.3916, 0.28 ) }
    dend_67 { pt3dadd( -51.441, -22.6591, 11.135, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_67 { pt3dadd( -55.2479, -26.1577, 13.3393, 0.28 ) }
    dend_67 { pt3dadd( -56.0475, -26.8742, 13.7173, 0.83 ) }
    dend_67 { pt3dadd( -57.8838, -28.55, 14.5172, 0.28 ) }
    dend_67 { pt3dadd( -58.6275, -29.2096, 14.7297, 0.83 ) }
    dend_67 { pt3dadd( -60.5501, -30.9416, 14.9948, 0.28 ) }
    dend_67 { pt3dadd( -63.6328, -33.852, 15.3604, 0.83 ) }
    dend_67 { pt3dadd( -69.1506, -39.9681, 18.0408, 0.83 ) }
    dend_67 { pt3dadd( -73.1499, -47.1667, 20.6197, 0.83 ) }
    dend_67 { pt3dadd( -76.3941, -54.6887, 23.3047, 0.83 ) }
    dend_67 { pt3dadd( -80.2237, -62.2431, 24.8124, 0.83 ) }
    dend_67 { pt3dadd( -83.3247, -70.1019, 26.3818, 0.83 ) }
    dend_67 { pt3dadd( -84.7563, -78.4386, 27.785, 0.83 ) }
    dend_67 { pt3dadd( -87.3875, -86.4528, 29.4002, 0.83 ) }
    dend_67 { pt3dadd( -89.877, -94.3513, 31.731, 0.83 ) }
    dend_67 { pt3dadd( -93.6053, -101.795, 33.9547, 0.83 ) }
    dend_67 { pt3dadd( -98.275, -108.649, 36.3689, 0.83 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 16/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -26.2362, -1.24123, 2.86541, 0.28 ) }
    dend_66 { pt3dadd( -27.9307, -4.51653, 3.01786, 0.28 ) }
    dend_66 { pt3dadd( -28.4197, -5.65773, 3.04488, 0.83 ) }
    dend_66 { pt3dadd( -29.4719, -8.64692, 2.77747, 0.28 ) }
    dend_66 { pt3dadd( -31.5638, -16.8206, 0.805894, 0.28 ) }
    dend_66 { pt3dadd( -33.9143, -28.1663, -2.48984, 0.28 ) }
    dend_66 { pt3dadd( -34.0708, -29.0071, -2.7864, 0.55 ) }
    dend_66 { pt3dadd( -34.4548, -32.5527, -4.25185, 0.28 ) }
    dend_66 { pt3dadd( -34.6951, -35.8443, -5.72049, 0.83 ) }
    dend_66 { pt3dadd( -34.8356, -41.6866, -8.65549, 0.28 ) }
    dend_66 { pt3dadd( -34.8176, -42.2649, -9.01291, 0.83 ) }
    dend_66 { pt3dadd( -34.6465, -44.3633, -10.9558, 0.28 ) }
    dend_66 { pt3dadd( -34.5928, -45.251, -11.7818, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 29/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -6.24978, 14.8289, 2.46549, 1.11 ) }
    dend_58 { pt3dadd( -7.02577, 17.0677, 4.69946, 1.11 ) }
    dend_58 { pt3dadd( -7.8149, 19.3445, 6.97125, 0.83 ) }
    dend_58 { pt3dadd( -7.99655, 19.8686, 7.4942, 0.83 ) }
    dend_58 { pt3dadd( -8.61749, 21.6601, 9.28179, 0.83 ) }
    dend_58 { pt3dadd( -9.39183, 23.8941, 11.511, 1.11 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -6.24978, 14.8289, 2.46549, 0.83 ) }
    dend_57 { pt3dadd( -8.9413, 16.7399, 0.421318, 0.83 ) }
    dend_57 { pt3dadd( -12.7592, 19.5884, -1.94338, 0.83 ) }
    dend_57 { pt3dadd( -13.9313, 20.5947, -2.65734, 0.83 ) }
    dend_57 { pt3dadd( -16.6886, 23.9399, -6.09986, 0.55 ) }
    dend_57 { pt3dadd( -17.9277, 25.8285, -8.19896, 0.55 ) }
    dend_57 { pt3dadd( -18.5448, 26.9029, -9.4923, 0.83 ) }
    dend_57 { pt3dadd( -19.7167, 29.5555, -12.966, 0.55 ) }
    dend_57 { pt3dadd( -20.6398, 31.9404, -16.468, 0.83 ) }
    dend_57 { pt3dadd( -23.0254, 38.7622, -27.3312, 0.28 ) }
    dend_57 { pt3dadd( -23.2817, 39.5552, -28.6838, 0.83 ) }
    dend_57 { pt3dadd( -23.9933, 41.6397, -32.3287, 0.28 ) }
    dend_57 { pt3dadd( -24.5165, 42.9472, -34.699, 1.11 ) }
    dend_57 { pt3dadd( -25.673, 45.218, -38.8184, 0.28 ) }
    dend_57 { pt3dadd( -25.9675, 45.666, -39.5681, 1.11 ) }
    dend_57 { pt3dadd( -28.451, 48.7891, -43.9711, 0.28 ) }
    dend_57 { pt3dadd( -29.2712, 49.748, -45.2341, 1.38 ) }
    dend_57 { pt3dadd( -31.8647, 52.6154, -48.6172, 0.28 ) }
    dend_57 { pt3dadd( -33.6528, 54.307, -50.5608, 1.66 ) }
    dend_57 { pt3dadd( -39.5674, 59.2446, -55.9293, 0.28 ) }
    dend_57 { pt3dadd( -41.8289, 61.0052, -57.6929, 0.83 ) }
    dend_57 { pt3dadd( -44.1097, 62.6626, -59.3229, 0.28 ) }
    dend_57 { pt3dadd( -45.2991, 63.5355, -60.1991, 1.38 ) }
    dend_57 { pt3dadd( -51.9816, 68.4624, -65.1334, 0.28 ) }
    dend_57 { pt3dadd( -53.139, 69.3811, -66.0822, 1.38 ) }
    dend_57 { pt3dadd( -56.0837, 71.8883, -68.6025, 0.28 ) }
    dend_57 { pt3dadd( -58.8355, 74.5057, -71.3354, 1.38 ) }
    dend_57 { pt3dadd( -64.0002, 79.9067, -76.9134, 0.28 ) }
    dend_57 { pt3dadd( -64.6107, 80.597, -77.591, 1.38 ) }
    dend_57 { pt3dadd( -67.191, 83.8206, -80.5197, 0.28 ) }
    dend_57 { pt3dadd( -67.7247, 84.4506, -81.0841, 0.55 ) }
    dend_57 { pt3dadd( -69.6436, 86.5755, -82.9993, 0.28 ) }
    dend_57 { pt3dadd( -70.4499, 87.4202, -83.6115, 0.83 ) }
    dend_57 { pt3dadd( -72.0761, 88.9789, -84.6061, 0.28 ) }
    dend_57 { pt3dadd( -72.2754, 89.1858, -84.7491, 0.83 ) }
    dend_57 { pt3dadd( -74.7586, 91.9236, -86.9364, 0.28 ) }
    dend_57 { pt3dadd( -76.969, 94.7951, -89.4731, 1.11 ) }
    dend_57 { pt3dadd( -79.1647, 98.1589, -92.5895, 0.55 ) }
    dend_57 { pt3dadd( -79.5272, 98.8305, -93.2224, 1.11 ) }
    dend_57 { pt3dadd( -81.834, 104.218, -98.6102, 0.28 ) }
    dend_57 { pt3dadd( -82.631, 106.751, -101.347, 0.83 ) }
    dend_57 { pt3dadd( -83.07, 109.364, -104.368, 0.28 ) }
    dend_57 { pt3dadd( -83.1134, 109.827, -104.911, 0.83 ) }
    dend_57 { pt3dadd( -83.093, 110.608, -105.953, 0.28 ) }
    dend_57 { pt3dadd( -82.9142, 112.363, -108.317, 0.83 ) }
    dend_57 { pt3dadd( -82.287, 114.727, -111.555, 0.28 ) }
    dend_57 { pt3dadd( -82.1049, 115.255, -112.253, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_48 (entry count 82/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 6.46765, 8.45132, -2.71765, 0.83 ) }
    dend_54 { pt3dadd( 7.35618, 9.57739, -2.901, 0.83 ) }
    dend_54 { pt3dadd( 9.31798, 12.2392, -3.34506, 0.83 ) }
    dend_54 { pt3dadd( 12.1238, 16.2256, -3.79648, 0.83 ) }
    dend_54 { pt3dadd( 13.9036, 18.8506, -4.01872, 0.83 ) }
    dend_54 { pt3dadd( 17.4234, 24.0367, -4.46466, 0.83 ) }
    dend_54 { pt3dadd( 18.4631, 25.5829, -4.56108, 0.28 ) }
    dend_54 { pt3dadd( 18.9552, 26.3847, -4.53479, 0.55 ) }
    dend_54 { pt3dadd( 20.26, 28.7078, -4.22784, 0.28 ) }
    dend_54 { pt3dadd( 20.4761, 29.1047, -4.09381, 0.83 ) }
    dend_54 { pt3dadd( 21.6524, 31.1438, -3.25846, 0.28 ) }
    dend_54 { pt3dadd( 22.4616, 32.4488, -2.66337, 0.55 ) }
    dend_54 { pt3dadd( 24.6895, 35.3866, -1.28394, 0.28 ) }
    dend_54 { pt3dadd( 25.4336, 36.2371, -0.914286, 0.28 ) }
    dend_54 { pt3dadd( 26.9408, 37.7576, -0.434538, 0.83 ) }
    dend_54 { pt3dadd( 29.1397, 39.7663, 0.0601991, 0.28 ) }
    dend_54 { pt3dadd( 29.9519, 40.4351, 0.205923, 0.83 ) }
    dend_54 { pt3dadd( 33.1934, 42.7752, 0.510804, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_54 { pt3dadd( 34.2546, 43.4932, 0.496661, 0.55 ) }
    dend_54 { pt3dadd( 36.5617, 45.1199, 0.422671, 0.28 ) }
    dend_54 { pt3dadd( 37.3463, 45.7435, 0.382053, 0.83 ) }
    dend_54 { pt3dadd( 39.1481, 47.6415, 0.241754, 0.28 ) }
    dend_54 { pt3dadd( 40.3544, 49.1637, 0.119307, 1.11 ) }
    dend_54 { pt3dadd( 42.348, 52.0789, -0.156614, 0.28 ) }
    dend_54 { pt3dadd( 43.8286, 54.5099, -0.357928, 0.28 ) }
    dend_54 { pt3dadd( 44.7256, 56.2271, -0.463861, 1.11 ) }
    dend_54 { pt3dadd( 46.5525, 60.3113, -0.858451, 0.28 ) }
    dend_54 { pt3dadd( 46.9653, 61.4899, -1.02924, 0.83 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 10/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 6.46765, 8.45132, -2.71765, 0.55 ) }
    dend_49 { pt3dadd( 7.7769, 9.99859, -2.3821, 0.55 ) }
    dend_49 { pt3dadd( 8.00488, 10.2681, -2.32367, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 13/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 5.67719, -5.82322, -15.1376, 1.38 ) }
    dend_41 { pt3dadd( 5.34606, -6.97017, -16.6681, 1.38 ) }
    dend_41 { pt3dadd( 4.13783, -11.1553, -22.2528, 1.38 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 16/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 5.67719, -5.82322, -15.1376, 0.83 ) }
    dend_40 { pt3dadd( 8.00704, -5.02551, -17.5438, 0.83 ) }
    dend_40 { pt3dadd( 10.1917, -4.18355, -19.6496, 0.83 ) }
    dend_40 { pt3dadd( 11.8118, -3.47228, -21.174, 0.83 ) }
    dend_40 { pt3dadd( 14.0778, -2.40708, -23.2521, 0.28 ) }
    dend_40 { pt3dadd( 14.6577, -2.1216, -23.7887, 1.11 ) }
    dend_40 { pt3dadd( 17.6523, -0.61219, -26.5565, 0.28 ) }
    dend_40 { pt3dadd( 18.9416, 0.0625831, -27.7036, 1.66 ) }
    dend_40 { pt3dadd( 21.7129, 1.58901, -30.0974, 0.28 ) }
    dend_40 { pt3dadd( 22.3048, 1.90217, -30.6054, 1.11 ) }
    dend_40 { pt3dadd( 25.097, 3.29359, -32.7944, 0.28 ) }
    dend_40 { pt3dadd( 25.3922, 3.41027, -33.0511, 0.83 ) }
    dend_40 { pt3dadd( 27.7618, 4.16501, -34.9319, 0.28 ) }
    dend_40 { pt3dadd( 29.1244, 4.56994, -35.9583, 1.11 ) }
    dend_40 { pt3dadd( 32.5825, 5.71838, -38.5181, 0.28 ) }
    dend_40 { pt3dadd( 34.1839, 6.2835, -39.6911, 1.11 ) }
    dend_40 { pt3dadd( 42.4732, 9.42329, -45.2783, 0.28 ) }
    dend_40 { pt3dadd( 48.6212, 11.9081, -49.1926, 0.28 ) }
    dend_40 { pt3dadd( 50.3064, 12.6273, -50.2859, 1.66 ) }
    dend_40 { pt3dadd( 60.1077, 17.0499, -56.7925, 0.28 ) }
    dend_40 { pt3dadd( 60.4647, 17.2236, -57.0325, 1.11 ) }
    dend_40 { pt3dadd( 64.0767, 19.1297, -59.3916, 0.28 ) }
    dend_40 { pt3dadd( 65.028, 19.704, -59.9528, 0.83 ) }
    dend_40 { pt3dadd( 69.4257, 22.4618, -63.0516, 0.28 ) }
    dend_40 { pt3dadd( 70.1785, 22.8647, -63.6165, 0.55 ) }
    dend_40 { pt3dadd( 72.4378, 23.758, -65.5409, 0.28 ) }
    dend_40 { pt3dadd( 74.5126, 24.477, -67.5141, 1.11 ) }
    dend_40 { pt3dadd( 77.5494, 25.3973, -70.5798, 0.28 ) }
    dend_40 { pt3dadd( 77.7516, 25.4536, -70.7794, 0.55 ) }
    dend_40 { pt3dadd( 80.0721, 26.0589, -73.0247, 0.28 ) }
    dend_40 { pt3dadd( 81.2094, 26.3569, -74.0387, 0.83 ) }
    dend_40 { pt3dadd( 83.9754, 27.0715, -76.332, 0.28 ) }
    dend_40 { pt3dadd( 84.9262, 27.3386, -77.0866, 0.55 ) }
    dend_40 { pt3dadd( 87.4261, 28.1421, -78.7526, 0.28 ) }
    dend_40 { pt3dadd( 89.0475, 28.6996, -79.7452, 0.55 ) }
    dend_40 { pt3dadd( 94.24, 30.6716, -82.3004, 0.28 ) }
    dend_40 { pt3dadd( 94.8076, 30.891, -82.5086, 0.55 ) }
    dend_40 { pt3dadd( 96.3178, 31.4858, -82.8164, 0.28 ) }
    dend_40 { pt3dadd( 96.878, 31.7178, -82.8614, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 55/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 2.97174, -4.24075, 18.9243, 0.83 ) }
    dend_34 { pt3dadd( 3.87387, -4.35788, 18.4203, 0.83 ) }
    dend_34 { pt3dadd( 4.75483, -4.47226, 17.9282, 0.83 ) }
    dend_34 { pt3dadd( 6.66293, -4.72001, 16.8621, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 59/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 2.97174, -4.24075, 18.9243, 0.55 ) }
    dend_33 { pt3dadd( 3.50333, -6.22879, 19.2373, 0.55 ) }
    dend_33 { pt3dadd( 4.06685, -8.33623, 19.569, 0.55 ) }
    dend_33 { pt3dadd( 5.2262, -12.6719, 20.2516, 0.55 ) }
    dend_33 { pt3dadd( 6.23244, -16.435, 20.8439, 0.55 ) }
    dend_33 { pt3dadd( 9.36117, -25.1871, 22.5718, 0.55 ) }
    dend_33 { pt3dadd( 11.5061, -34.1018, 24.8165, 0.55 ) }
    dend_33 { pt3dadd( 12.34, -43.0576, 27.646, 0.55 ) }
    dend_33 { pt3dadd( 13.5393, -51.5821, 31.5457, 0.55 ) }
    dend_33 { pt3dadd( 13.4616, -59.6215, 36.5383, 0.55 ) }
    dend_33 { pt3dadd( 14.6292, -68.0802, 40.5942, 0.55 ) }
    dend_33 { pt3dadd( 17.084, -75.9759, 45.24, 0.55 ) }
    dend_33 { pt3dadd( 19.0246, -83.3395, 50.9235, 0.55 ) }
    dend_33 { pt3dadd( 20.838, -89.8598, 57.6353, 0.55 ) }
    dend_33 { pt3dadd( 23.7438, -95.8099, 64.5232, 0.55 ) }
    dend_33 { pt3dadd( 27.4087, -101.36, 71.4034, 0.55 ) }
    dend_33 { pt3dadd( 31.5343, -105.736, 78.885, 0.55 ) }
    dend_33 { pt3dadd( 35.0322, -109.899, 86.7986, 0.55 ) }
    dend_33 { pt3dadd( 37.3464, -112.726, 95.7003, 0.55 ) }
    dend_33 { pt3dadd( 40.0636, -115.744, 104.421, 0.55 ) }
    dend_33 { pt3dadd( 43.7287, -119.083, 112.661, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_0 (entry count 80/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -1.09297, -14.5628, -5.60765, 2.49 ) }
    dend_7 { pt3dadd( 1.19931, -18.2835, -3.29875, 2.49 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 82/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.09297, -14.5628, -5.60765, 1.11 ) }
    dend_1 { pt3dadd( -5.39556, -18.446, -11.3251, 1.11 ) }
    dend_1 { pt3dadd( -8.70172, -21.4299, -15.7185, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 85/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.65351, 39.4517, 0.284385, 0.28 ) }
    axon_1 { pt3dadd( -3.88622, 54.401, 0.284385, 0.28 ) }
    axon_1 { pt3dadd( -5.11892, 69.3502, 0.284385, 0.28 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 88/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -9.39183, 23.8941, 11.511, 0.55 ) }
    dend_62 { pt3dadd( -7.77988, 25.1452, 12.3512, 0.55 ) }
    dend_62 { pt3dadd( -7.23456, 25.5373, 12.6379, 0.55 ) }
    dend_62 { pt3dadd( -4.30962, 27.6541, 14.1903, 0.55 ) }
    dend_62 { pt3dadd( -2.55371, 28.971, 15.1085, 0.55 ) }
    dend_62 { pt3dadd( -0.98726, 30.2558, 15.9722, 0.55 ) }
    dend_62 { pt3dadd( 0.618253, 31.619, 16.9712, 0.55 ) }
    dend_62 { pt3dadd( 1.5961, 32.4543, 17.5937, 0.83 ) }
    dend_62 { pt3dadd( 3.58304, 34.1959, 18.9464, 0.28 ) }
    dend_62 { pt3dadd( 4.23295, 34.8273, 19.4512, 0.55 ) }
    dend_62 { pt3dadd( 6.9598, 37.4281, 21.534, 0.28 ) }
    dend_62 { pt3dadd( 8.42188, 38.9025, 22.6908, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_62 { pt3dadd( 14.0246, 43.4644, 26.9277, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 1/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -9.39183, 23.8941, 11.511, 0.55 ) }
    dend_59 { pt3dadd( -10.9357, 24.6282, 13.0938, 0.55 ) }
    dend_59 { pt3dadd( -15.13, 26.6227, 17.3939, 0.83 ) }
    dend_59 { pt3dadd( -18.644, 28.2936, 20.9965, 0.28 ) }
    dend_59 { pt3dadd( -19.4877, 28.6948, 21.8615, 0.83 ) }
    dend_59 { pt3dadd( -22.9205, 30.3271, 25.3808, 0.28 ) }
    dend_59 { pt3dadd( -25.1066, 31.3666, 27.622, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 8/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 8.00488, 10.2681, -2.32367, 0.55 ) }
    dend_53 { pt3dadd( 8.29658, 12.893, -1.496, 0.55 ) }
    dend_53 { pt3dadd( 8.69709, 15.8597, -0.500521, 0.83 ) }
    dend_53 { pt3dadd( 8.92507, 17.11, 0.0268516, 0.83 ) }
    dend_53 { pt3dadd( 9.34474, 19.5663, 1.02862, 0.28 ) }
    dend_53 { pt3dadd( 10.1184, 24.2398, 2.82302, 0.55 ) }
    dend_53 { pt3dadd( 10.5761, 27.0771, 3.87385, 0.28 ) }
    dend_53 { pt3dadd( 11.0071, 29.2892, 4.69642, 0.83 ) }
    dend_53 { pt3dadd( 11.7286, 33.037, 5.98614, 0.28 ) }
    dend_53 { pt3dadd( 12.2166, 35.2617, 6.71367, 1.11 ) }
    dend_53 { pt3dadd( 12.885, 38.0551, 7.64856, 0.55 ) }
    dend_53 { pt3dadd( 13.0458, 38.8171, 7.87571, 1.11 ) }
    dend_53 { pt3dadd( 13.8183, 42.4893, 9.04354, 0.28 ) }
    dend_53 { pt3dadd( 14.1073, 44.3729, 9.4667, 1.11 ) }
    dend_53 { pt3dadd( 14.6343, 48.2818, 10.1133, 0.28 ) }
    dend_53 { pt3dadd( 14.8163, 49.3613, 10.3097, 0.83 ) }
    dend_53 { pt3dadd( 15.0736, 50.7703, 10.5315, 0.28 ) }
    dend_53 { pt3dadd( 15.4648, 52.6113, 10.7327, 0.83 ) }
    dend_53 { pt3dadd( 16.466, 56.8606, 11.041, 0.28 ) }
    dend_53 { pt3dadd( 16.9098, 58.3602, 11.196, 0.83 ) }
    dend_53 { pt3dadd( 18.0018, 61.8736, 11.4841, 0.28 ) }
    dend_53 { pt3dadd( 18.4741, 63.1525, 11.5672, 0.83 ) }
    dend_53 { pt3dadd( 19.4697, 65.364, 11.667, 0.28 ) }
    dend_53 { pt3dadd( 19.9755, 66.2646, 11.6996, 1.11 ) }
    dend_53 { pt3dadd( 21.0727, 67.6422, 11.9338, 1.11 ) }
    dend_53 { pt3dadd( 23.1912, 77.03, 13.3753, 1.11 ) }
    dend_53 { pt3dadd( 26.178, 86.1469, 15.0316, 1.11 ) }
    dend_53 { pt3dadd( 30.0388, 95.0663, 15.8037, 1.11 ) }
    dend_53 { pt3dadd( 33.7554, 104.077, 16.0991, 1.11 ) }
    dend_53 { pt3dadd( 35.476, 113.646, 15.3309, 1.11 ) }
    dend_53 { pt3dadd( 37.161, 123.242, 15.3351, 1.11 ) }
    dend_53 { pt3dadd( 40.0477, 132.447, 16.6573, 1.11 ) }
    dend_53 { pt3dadd( 43.4747, 141.57, 16.9155, 1.11 ) }
    dend_53 { pt3dadd( 45.6848, 150.753, 19.2457, 1.11 ) }
    dend_53 { pt3dadd( 48.2408, 159.982, 20.9876, 1.11 ) }
    dend_53 { pt3dadd( 51.607, 168.874, 23.093, 1.11 ) }
    dend_53 { pt3dadd( 53.6285, 177.671, 26.7341, 1.11 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 45/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 8.00488, 10.2681, -2.32367, 0.55 ) }
    dend_50 { pt3dadd( 9.35524, 11.1194, -1.13838, 0.55 ) }
    dend_50 { pt3dadd( 11.0924, 11.8692, 0.611075, 0.55 ) }
    dend_50 { pt3dadd( 13.8398, 13.055, 3.37787, 0.55 ) }
    dend_50 { pt3dadd( 15.6742, 13.8468, 5.22534, 0.55 ) }
    dend_50 { pt3dadd( 17.1026, 14.4633, 6.66381, 0.55 ) }
    dend_50 { pt3dadd( 20.9744, 16.1344, 10.563, 0.55 ) }
    dend_50 { pt3dadd( 24.4448, 17.4135, 14.5089, 0.28 ) }
    dend_50 { pt3dadd( 30.7067, 20.0915, 18.957, 0.28 ) }
    dend_50 { pt3dadd( 37.2109, 21.8759, 23.5385, 0.28 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 55/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 4.13783, -11.1553, -22.2528, 1.11 ) }
    dend_45 { pt3dadd( 4.67336, -12.4635, -23.4054, 1.11 ) }
    dend_45 { pt3dadd( 5.14905, -13.4266, -24.2326, 0.83 ) }
    dend_45 { pt3dadd( 5.73227, -14.6074, -25.2469, 0.83 ) }
    dend_45 { pt3dadd( 7.12865, -17.4344, -27.6751, 0.55 ) }
    dend_45 { pt3dadd( 8.04314, -19.2858, -29.2654, 1.11 ) }
    dend_45 { pt3dadd( 9.45687, -22.148, -31.7239, 0.28 ) }
    dend_45 { pt3dadd( 9.90828, -22.8701, -32.4301, 1.38 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 63/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 4.13783, -11.1553, -22.2528, 0.83 ) }
    dend_42 { pt3dadd( 7.28595, -9.64889, -30.0184, 0.83 ) }
    dend_42 { pt3dadd( 8.31036, -9.2704, -32.613, 0.83 ) }
    dend_42 { pt3dadd( 9.79477, -8.83875, -36.2347, 0.28 ) }
    dend_42 { pt3dadd( 10.6967, -8.68213, -38.3132, 1.11 ) }
    dend_42 { pt3dadd( 13.5103, -8.42536, -44.4082, 0.28 ) }
    dend_42 { pt3dadd( 14.5693, -8.32873, -46.7021, 1.38 ) }
    dend_42 { pt3dadd( 16.4824, -8.31822, -50.5787, 0.55 ) }
    dend_42 { pt3dadd( 16.9732, -8.36667, -51.61, 1.38 ) }
    dend_42 { pt3dadd( 18.5654, -8.55739, -54.7053, 0.55 ) }
    dend_42 { pt3dadd( 19.1353, -8.71668, -55.7841, 1.38 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 74/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 6.66293, -4.72001, 16.8621, 0.28 ) }
    dend_36 { pt3dadd( 7.29991, -5.0815, 18.7087, 0.28 ) }
    dend_36 { pt3dadd( 7.75834, -5.32327, 19.8704, 0.83 ) }
    dend_36 { pt3dadd( 10.9067, -6.98372, 27.849, 0.28 ) }
    dend_36 { pt3dadd( 11.5807, -7.33921, 29.5571, 0.83 ) }
    dend_36 { pt3dadd( 13.1072, -8.14428, 33.4256, 0.28 ) }
    dend_36 { pt3dadd( 14.1196, -8.6782, 35.9911, 0.83 ) }
    dend_36 { pt3dadd( 15.7421, -9.4127, 40.4189, 0.83 ) }
    dend_36 { pt3dadd( 19.6743, -11.6636, 52.2904, 0.83 ) }
    dend_36 { pt3dadd( 21.8808, -12.9986, 64.7384, 0.83 ) }
    dend_36 { pt3dadd( 24.2683, -14.2394, 77.1631, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 85/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 6.66293, -4.72001, 16.8621, 0.55 ) }
    dend_35 { pt3dadd( 10.73, -3.16244, 12.8495, 0.55 ) }
    dend_35 { pt3dadd( 12.9633, -2.26513, 10.7621, 0.55 ) }
    dend_35 { pt3dadd( 15.364, -1.23288, 8.75074, 0.55 ) }
    dend_35 { pt3dadd( 17.2119, -0.424822, 7.36015, 0.28 ) }
    dend_35 { pt3dadd( 18.3033, 0.0439831, 6.55548, 0.83 ) }
    dend_35 { pt3dadd( 20.4968, 0.965783, 4.98997, 0.55 ) }
    dend_35 { pt3dadd( 20.9967, 1.17381, 4.71065, 0.55 ) }
    dend_35 { pt3dadd( 24.0389, 2.37777, 3.27492, 0.28 ) }
    dend_35 { pt3dadd( 25.5161, 2.92018, 2.66195, 0.83 ) }
    dend_35 { pt3dadd( 28.4395, 3.91568, 1.5728, 0.28 ) }
    dend_35 { pt3dadd( 29.4097, 4.24321, 1.18746, 0.83 ) }
    dend_35 { pt3dadd( 35.8693, 6.44239, -1.38023, 0.28 ) }
    dend_35 { pt3dadd( 38.4454, 7.28348, -2.52661, 1.11 ) }
    dend_35 { pt3dadd( 42.1051, 8.41887, -4.07934, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 43.0937, 8.73499, -4.47139, 1.38 ) }
    dend_35 { pt3dadd( 46.9985, 10.026, -5.86315, 0.28 ) }
    dend_35 { pt3dadd( 48.1895, 10.4317, -6.29758, 0.83 ) }
    dend_35 { pt3dadd( 51.5102, 11.6269, -7.5063, 0.28 ) }
    dend_35 { pt3dadd( 54.8062, 12.9127, -8.68189, 1.66 ) }
    dend_35 { pt3dadd( 61.2136, 15.6935, -10.5965, 0.28 ) }
    dend_35 { pt3dadd( 62.0654, 16.1139, -10.7161, 0.83 ) }
    dend_35 { pt3dadd( 64.9667, 17.6645, -10.7016, 0.28 ) }
    dend_35 { pt3dadd( 66.1291, 18.3112, -10.6492, 0.83 ) }
    dend_35 { pt3dadd( 70.1262, 20.6266, -10.3186, 0.28 ) }
    dend_35 { pt3dadd( 71.4469, 21.4133, -10.1993, 1.11 ) }
    dend_35 { pt3dadd( 81.8722, 27.765, -8.59156, 0.28 ) }
    dend_35 { pt3dadd( 84.8172, 29.5603, -8.06893, 1.11 ) }
    dend_35 { pt3dadd( 89.3527, 32.3259, -7.0868, 0.28 ) }
    dend_35 { pt3dadd( 90.2606, 32.8665, -6.88151, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 1.19931, -18.2835, -3.29875, 2.22 ) }
    dend_11 { pt3dadd( 0.43401, -20.9077, -4.80731, 2.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 17/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 1.19931, -18.2835, -3.29875, 0.83 ) }
    dend_8 { pt3dadd( 4.36022, -21.8152, -12.9414, 0.83 ) }
    dend_8 { pt3dadd( 5.32411, -22.8921, -15.8818, 0.83 ) }
    dend_8 { pt3dadd( 6.45427, -24.1549, -19.3295, 0.83 ) }
    dend_8 { pt3dadd( 6.93416, -24.6911, -20.7935, 1.38 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 22/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.70172, -21.4299, -15.7185, 1.11 ) }
    dend_3 { pt3dadd( -9.71272, -22.9594, -16.2142, 1.11 ) }
    dend_3 { pt3dadd( -10.9386, -24.7844, -16.8756, 1.11 ) }
    dend_3 { pt3dadd( -13.6575, -28.8321, -18.3424, 1.11 ) }
    dend_3 { pt3dadd( -15.3443, -31.3433, -19.2524, 0.55 ) }
    dend_3 { pt3dadd( -16.4509, -32.9907, -19.8494, 0.55 ) }
    dend_3 { pt3dadd( -18.6694, -36.2934, -21.0462, 0.28 ) }
    dend_3 { pt3dadd( -21.2039, -39.7209, -22.2645, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 30/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -8.70172, -21.4299, -15.7185, 0.55 ) }
    dend_2 { pt3dadd( -10.2933, -20.4541, -17.2395, 0.55 ) }
    dend_2 { pt3dadd( -12.0622, -19.1788, -19.3499, 0.55 ) }
    dend_2 { pt3dadd( -13.2546, -18.267, -20.8913, 0.83 ) }
    dend_2 { pt3dadd( -15.462, -16.6353, -24.0512, 0.83 ) }
    dend_2 { pt3dadd( -16.9856, -15.5874, -26.2708, 0.28 ) }
    dend_2 { pt3dadd( -18.0764, -14.8761, -27.9776, 0.83 ) }
    dend_2 { pt3dadd( -19.8816, -13.7266, -30.9696, 0.28 ) }
    dend_2 { pt3dadd( -20.9348, -13.0808, -32.9041, 1.11 ) }
    dend_2 { pt3dadd( -22.5966, -12.208, -36.0192, 0.28 ) }
    dend_2 { pt3dadd( -23.7392, -11.6841, -38.2501, 1.38 ) }
    dend_2 { pt3dadd( -25.5401, -10.8827, -41.7219, 0.28 ) }
    dend_2 { pt3dadd( -26.7115, -10.2992, -43.9456, 0.55 ) }
    dend_2 { pt3dadd( -28.1169, -9.51449, -46.2361, 0.28 ) }
    dend_2 { pt3dadd( -29.3181, -8.68353, -48.0649, 0.83 ) }
    dend_2 { pt3dadd( -31.1123, -7.18342, -50.5508, 0.28 ) }
    dend_2 { pt3dadd( -31.9736, -6.3489, -51.6647, 1.11 ) }
    dend_2 { pt3dadd( -34.8105, -3.37821, -54.9193, 0.28 ) }
    dend_2 { pt3dadd( -36.7608, -1.1689, -57.3218, 0.83 ) }
    dend_2 { pt3dadd( -38.7962, 1.19044, -59.8345, 0.28 ) }
    dend_2 { pt3dadd( -39.5997, 2.13607, -60.8411, 0.55 ) }
    dend_2 { pt3dadd( -41.2005, 4.04192, -62.8399, 0.28 ) }
    dend_2 { pt3dadd( -42.5479, 5.66714, -64.5654, 1.38 ) }
    dend_2 { pt3dadd( -47.3895, 11.5669, -70.9988, 0.28 ) }
    dend_2 { pt3dadd( -48.513, 13.0071, -72.6166, 1.38 ) }
    dend_2 { pt3dadd( -50.4099, 15.4831, -75.3623, 0.28 ) }
    dend_2 { pt3dadd( -51.2338, 16.5748, -76.5348, 0.83 ) }
    dend_2 { pt3dadd( -53.9821, 20.3124, -80.374, 0.28 ) }
    dend_2 { pt3dadd( -54.8878, 21.5909, -81.5868, 1.38 ) }
    dend_2 { pt3dadd( -56.8667, 24.491, -84.0332, 0.28 ) }
    dend_2 { pt3dadd( -57.3492, 25.1647, -84.6157, 0.83 ) }
    dend_2 { pt3dadd( -59.6285, 28.275, -87.4275, 0.28 ) }
    dend_2 { pt3dadd( -60.3175, 29.2463, -88.2126, 1.11 ) }
    dend_2 { pt3dadd( -62.5222, 32.5015, -90.5805, 0.28 ) }
    dend_2 { pt3dadd( -63.0843, 33.321, -91.1602, 1.11 ) }
    dend_2 { pt3dadd( -67.295, 39.4616, -95.4102, 0.28 ) }
    dend_2 { pt3dadd( -68.2169, 40.8341, -96.3277, 1.11 ) }
    dend_2 { pt3dadd( -71.8786, 46.4086, -99.8481, 0.28 ) }
    dend_2 { pt3dadd( -72.3312, 47.1237, -100.27, 0.83 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 69/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 14.0246, 43.4644, 26.9277, 0.28 ) }
    dend_64 { pt3dadd( 20.8776, 49.0431, 32.7353, 0.28 ) }
    dend_64 { pt3dadd( 27.5835, 55.1391, 38.1532, 0.28 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 72/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 14.0246, 43.4644, 26.9277, 0.28 ) }
    dend_63 { pt3dadd( 19.4066, 47.7791, 32.5711, 0.28 ) }
    dend_63 { pt3dadd( 25.4592, 52.6535, 36.8759, 0.28 ) }
    dend_63 { pt3dadd( 31.0845, 56.5635, 42.5902, 0.28 ) }
    dend_63 { pt3dadd( 36.2805, 61.149, 48.1848, 0.28 ) }
    dend_63 { pt3dadd( 39.7423, 66.8879, 54.0251, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 78/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -25.1066, 31.3666, 27.622, 0.28 ) }
    dend_61 { pt3dadd( -26.284, 32.0067, 28.214, 0.28 ) }
    dend_61 { pt3dadd( -27.3044, 32.5614, 28.7271, 0.55 ) }
    dend_61 { pt3dadd( -29.6224, 33.8215, 29.8925, 0.28 ) }
    dend_61 { pt3dadd( -31.3703, 34.7717, 30.7714, 0.55 ) }
    dend_61 { pt3dadd( -36.0022, 38.0321, 33.9243, 0.55 ) }
    dend_61 { pt3dadd( -40.4191, 41.1851, 37.4737, 0.55 ) }
    dend_61 { pt3dadd( -44.6555, 44.2003, 41.3522, 0.55 ) }
    dend_61 { pt3dadd( -49.4283, 46.505, 45.1176, 0.55 ) }
    dend_61 { pt3dadd( -54.5017, 49.7625, 47.5042, 0.55 ) }
    dend_61 { pt3dadd( -58.9171, 53.1726, 50.7976, 0.55 ) }
    dend_61 { pt3dadd( -62.9665, 56.3129, 54.77, 0.55 ) }
    dend_61 { pt3dadd( -67.4617, 58.6968, 58.8141, 0.55 ) }
    dend_61 { pt3dadd( -72.5088, 61.6682, 61.6107, 0.55 ) }
    dend_61 { pt3dadd( -77.8286, 65.0947, 63.0147, 0.55 ) }
    dend_61 { pt3dadd( -83.4829, 68.2553, 63.4, 0.55 ) }
    dend_61 { pt3dadd( -88.6267, 72.0944, 64.2245, 0.55 ) }
    dend_61 { pt3dadd( -93.317, 76.5216, 63.9954, 0.55 ) }
    dend_61 { pt3dadd( -98.4613, 80.2077, 62.6157, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 97/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -25.1066, 31.3666, 27.622, 0.55 ) }
    dend_60 { pt3dadd( -26.2177, 32.1185, 30.5016, 0.55 ) }
    dend_60 { pt3dadd( -28.2698, 33.5071, 35.8195, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_60 { pt3dadd( -29.7105, 34.4819, 39.5531, 0.28 ) }
    dend_60 { pt3dadd( -30.7916, 35.2135, 42.3547, 0.55 ) }
    dend_60 { pt3dadd( -32.3795, 36.2879, 46.4697, 0.28 ) }
    dend_60 { pt3dadd( -34.3994, 37.6547, 51.7042, 0.83 ) }
    dend_60 { pt3dadd( -37.7187, 40.0796, 63.0852, 0.83 ) }
    dend_60 { pt3dadd( -39.9971, 44.4142, 74.1258, 0.83 ) }
    dend_60 { pt3dadd( -40.2697, 48.1663, 85.6125, 0.83 ) }
    dend_60 { pt3dadd( -39.001, 52.2095, 96.9281, 0.83 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 8/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 37.2109, 21.8759, 23.5385, 0.28 ) }
    dend_52 { pt3dadd( 42.4279, 24.0633, 28.3148, 0.28 ) }
    dend_52 { pt3dadd( 47.1657, 27.1487, 33.0637, 0.28 ) }
    dend_52 { pt3dadd( 51.9664, 31.4263, 36.6149, 0.28 ) }
    dend_52 { pt3dadd( 56.0049, 36.3062, 40.3016, 0.28 ) }
    dend_52 { pt3dadd( 61.3111, 40.5943, 43.013, 0.28 ) }
    dend_52 { pt3dadd( 66.2027, 45.1587, 46.018, 0.28 ) }
    dend_52 { pt3dadd( 70.1447, 50.269, 49.4731, 0.28 ) }
    dend_52 { pt3dadd( 74.4953, 55.2956, 52.5386, 0.28 ) }
    dend_52 { pt3dadd( 79.0048, 59.775, 56.2101, 0.28 ) }
    dend_52 { pt3dadd( 83.8259, 64.5207, 59.0267, 0.28 ) }
    dend_52 { pt3dadd( 87.7223, 68.8635, 63.4964, 0.28 ) }
    dend_52 { pt3dadd( 91.4829, 72.3629, 68.7922, 0.28 ) }
    dend_52 { pt3dadd( 94.8712, 76.8717, 73.5018, 0.28 ) }
    dend_52 { pt3dadd( 99.0375, 80.5995, 78.3015, 0.28 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 23/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 37.2109, 21.8759, 23.5385, 0.28 ) }
    dend_51 { pt3dadd( 45.2264, 26.494, 32.0839, 0.28 ) }
    dend_51 { pt3dadd( 52.2947, 32.0275, 40.8909, 0.28 ) }
    dend_51 { pt3dadd( 60.4007, 35.5138, 49.912, 0.28 ) }
    dend_51 { pt3dadd( 67.6245, 36.7277, 60.2353, 0.28 ) }
    dend_51 { pt3dadd( 73.2231, 36.3817, 71.598, 0.28 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 29/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 9.90828, -22.8701, -32.4301, 0.28 ) }
    dend_47 { pt3dadd( 11.4812, -28.2022, -34.6656, 0.28 ) }
    dend_47 { pt3dadd( 12.0475, -30.4702, -35.6059, 1.38 ) }
    dend_47 { pt3dadd( 13.6948, -37.8043, -38.3842, 0.28 ) }
    dend_47 { pt3dadd( 13.9274, -39.1455, -38.9218, 1.38 ) }
    dend_47 { pt3dadd( 14.8077, -45.3519, -41.3777, 0.28 ) }
    dend_47 { pt3dadd( 14.9762, -46.9827, -42.0545, 1.94 ) }
    dend_47 { pt3dadd( 15.164, -51.696, -44.1293, 0.28 ) }
    dend_47 { pt3dadd( 15.1389, -53.5628, -44.9429, 1.38 ) }
    dend_47 { pt3dadd( 14.7969, -59.3379, -47.343, 0.55 ) }
    dend_47 { pt3dadd( 14.5483, -62.0495, -48.2791, 1.66 ) }
    dend_47 { pt3dadd( 13.7952, -68.3144, -49.8914, 0.28 ) }
    dend_47 { pt3dadd( 13.6304, -69.412, -50.032, 1.38 ) }
    dend_47 { pt3dadd( 13.2424, -71.851, -49.9906, 0.55 ) }
    dend_47 { pt3dadd( 13.0664, -72.8869, -49.8393, 0.55 ) }
    dend_47 { pt3dadd( 12.0999, -78.5452, -47.9184, 0.28 ) }
    dend_47 { pt3dadd( 11.8968, -79.8019, -47.3031, 1.66 ) }
    dend_47 { pt3dadd( 11.2055, -84.8086, -44.2258, 0.28 ) }
    dend_47 { pt3dadd( 11.1224, -85.409, -43.8578, 0.55 ) }
    dend_47 { pt3dadd( 10.9797, -87.0343, -42.8771, 0.28 ) }
    dend_47 { pt3dadd( 10.9551, -88.9134, -41.7948, 1.38 ) }
    dend_47 { pt3dadd( 11.2969, -94.2981, -39.1623, 0.28 ) }
    dend_47 { pt3dadd( 11.366, -95.0633, -38.8945, 0.83 ) }
    dend_47 { pt3dadd( 11.6666, -97.5695, -38.402, 0.28 ) }
    dend_47 { pt3dadd( 12.0084, -100.392, -38.1124, 1.11 ) }
    dend_47 { pt3dadd( 12.5732, -104.927, -37.9938, 0.28 ) }
    dend_47 { pt3dadd( 12.8355, -106.983, -38.1462, 1.38 ) }
    dend_47 { pt3dadd( 13.5127, -112.257, -38.9434, 0.28 ) }
    dend_47 { pt3dadd( 13.6896, -113.667, -39.1304, 0.55 ) }
    dend_47 { pt3dadd( 14.3622, -118.874, -39.7894, 0.28 ) }
    dend_47 { pt3dadd( 14.4412, -119.571, -39.8698, 1.66 ) }
    dend_47 { pt3dadd( 15.3682, -126.805, -40.5883, 0.28 ) }
    dend_47 { pt3dadd( 15.7661, -129.624, -40.7, 1.11 ) }
    dend_47 { pt3dadd( 16.3395, -133.432, -40.6557, 0.28 ) }
    dend_47 { pt3dadd( 16.4724, -134.204, -40.6211, 1.11 ) }
    dend_47 { pt3dadd( 17.1265, -137.383, -40.3477, 0.28 ) }
    dend_47 { pt3dadd( 17.4329, -138.626, -40.1457, 0.83 ) }
    dend_47 { pt3dadd( 17.998, -140.613, -39.6595, 0.28 ) }
    dend_47 { pt3dadd( 18.2043, -141.26, -39.456, 0.83 ) }
    dend_47 { pt3dadd( 19.7198, -145.609, -37.9072, 0.28 ) }
    dend_47 { pt3dadd( 20.3293, -147.335, -37.3695, 0.83 ) }
    dend_47 { pt3dadd( 22.3115, -152.676, -35.8673, 0.28 ) }
    dend_47 { pt3dadd( 22.8998, -154.361, -35.5773, 1.11 ) }
    dend_47 { pt3dadd( 24.1585, -158.152, -35.2454, 0.28 ) }
    dend_47 { pt3dadd( 24.2698, -158.495, -35.2369, 0.55 ) }
    dend_47 { pt3dadd( 26.3757, -165.257, -35.5405, 0.28 ) }
    dend_47 { pt3dadd( 26.8109, -166.689, -35.7206, 0.83 ) }
    dend_47 { pt3dadd( 28.6318, -172.771, -36.7842, 0.28 ) }
    dend_47 { pt3dadd( 29.046, -174.098, -37.0427, 1.11 ) }
    dend_47 { pt3dadd( 30.7511, -179.441, -38.0408, 0.28 ) }
    dend_47 { pt3dadd( 31.1347, -180.49, -38.1632, 0.83 ) }
    dend_47 { pt3dadd( 33.8453, -186.618, -38.4449, 0.28 ) }
    dend_47 { pt3dadd( 34.9038, -188.6, -38.4625, 1.11 ) }
    dend_47 { pt3dadd( 37.4995, -192.745, -38.3255, 0.28 ) }
    dend_47 { pt3dadd( 39.0093, -194.956, -38.2096, 0.83 ) }
    dend_47 { pt3dadd( 44.4113, -202.4, -37.7197, 0.28 ) }
    dend_47 { pt3dadd( 45.9676, -204.465, -37.4472, 1.66 ) }
    dend_47 { pt3dadd( 49.5248, -208.975, -36.5388, 0.28 ) }
    dend_47 { pt3dadd( 50.4484, -210.253, -36.288, 0.83 ) }
    dend_47 { pt3dadd( 52.37, -213.057, -35.6871, 0.28 ) }
    dend_47 { pt3dadd( 52.6236, -213.477, -35.6295, 0.83 ) }
    dend_47 { pt3dadd( 55.1698, -218.488, -35.0027, 0.28 ) }
    dend_47 { pt3dadd( 55.8894, -220.092, -34.8146, 0.83 ) }
    dend_47 { pt3dadd( 58.5274, -226.76, -34.1282, 0.28 ) }
    dend_47 { pt3dadd( 59.0371, -228.102, -34.0328, 0.83 ) }
    dend_47 { pt3dadd( 61.239, -234.294, -33.9446, 0.28 ) }
    dend_47 { pt3dadd( 61.792, -235.852, -33.9902, 1.11 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 96/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 9.90828, -22.8701, -32.4301, 0.28 ) }
    dend_46 { pt3dadd( 10.5304, -23.2887, -33.8957, 0.28 ) }
    dend_46 { pt3dadd( 11.2782, -23.7775, -35.6684, 0.83 ) }
    dend_46 { pt3dadd( 13.086, -24.9463, -40.0649, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( 14.0291, -25.5272, -42.303, 0.28 ) }
    dend_46 { pt3dadd( 14.9481, -26.0376, -44.4287, 1.66 ) }
    dend_46 { pt3dadd( 17.2487, -27.1995, -49.5915, 0.28 ) }
    dend_46 { pt3dadd( 18.2903, -27.6587, -51.8553, 1.11 ) }
    dend_46 { pt3dadd( 19.6078, -28.0663, -54.4195, 0.28 ) }
    dend_46 { pt3dadd( 20.0342, -28.1254, -55.1823, 1.38 ) }
    dend_46 { pt3dadd( 21.7215, -28.0993, -58.1992, 0.55 ) }
    dend_46 { pt3dadd( 22.0325, -28.0465, -58.7776, 1.38 ) }
    dend_46 { pt3dadd( 23.4394, -27.6027, -61.602, 0.55 ) }
    dend_46 { pt3dadd( 24.2636, -27.3111, -63.3928, 1.38 ) }
    dend_46 { pt3dadd( 26.3981, -26.5242, -68.1881, 0.28 ) }
    dend_46 { pt3dadd( 27.2044, -26.22, -70.0624, 1.11 ) }
    dend_46 { pt3dadd( 29.9808, -25.1276, -76.9387, 0.28 ) }
    dend_46 { pt3dadd( 31.0443, -24.6903, -79.7168, 1.11 ) }
    dend_46 { pt3dadd( 33.7148, -23.551, -86.9942, 0.28 ) }
    dend_46 { pt3dadd( 34.0417, -23.4073, -87.8717, 1.38 ) }
    dend_46 { pt3dadd( 35.6727, -22.6144, -91.9887, 0.55 ) }
    dend_46 { pt3dadd( 36.6487, -22.1435, -94.3447, 0.83 ) }
    dend_46 { pt3dadd( 37.8966, -21.5023, -97.2098, 0.28 ) }
    dend_46 { pt3dadd( 38.2509, -21.3169, -97.9689, 0.55 ) }
    dend_46 { pt3dadd( 40.3466, -19.9695, -102.246, 0.28 ) }
    dend_46 { pt3dadd( 41.1282, -19.4217, -103.872, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 22/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 19.1353, -8.71668, -55.7841, 0.28 ) }
    dend_44 { pt3dadd( 20.9589, -9.67681, -57.6963, 0.28 ) }
    dend_44 { pt3dadd( 23.5715, -11.1565, -60.3504, 1.38 ) }
    dend_44 { pt3dadd( 28.4337, -14.0686, -65.2117, 0.28 ) }
    dend_44 { pt3dadd( 30.2074, -15.2274, -66.8864, 1.11 ) }
    dend_44 { pt3dadd( 34.937, -18.5525, -71.0245, 0.28 ) }
    dend_44 { pt3dadd( 35.712, -19.1706, -71.6712, 0.83 ) }
    dend_44 { pt3dadd( 38.523, -21.7741, -73.7791, 0.28 ) }
    dend_44 { pt3dadd( 39.0337, -22.3132, -74.1032, 0.83 ) }
    dend_44 { pt3dadd( 42.961, -27.2051, -76.2374, 0.28 ) }
    dend_44 { pt3dadd( 44.7703, -29.706, -77.2015, 0.83 ) }
    dend_44 { pt3dadd( 48.6788, -36.0058, -78.9281, 0.28 ) }
    dend_44 { pt3dadd( 50.1958, -38.5721, -79.5863, 0.55 ) }
    dend_44 { pt3dadd( 51.3325, -40.6739, -80.03, 0.28 ) }
    dend_44 { pt3dadd( 51.6252, -41.2424, -80.1533, 0.55 ) }
    dend_44 { pt3dadd( 53.1171, -44.8815, -80.988, 0.28 ) }
    dend_44 { pt3dadd( 54.7768, -48.6875, -82.5823, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 39/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 19.1353, -8.71668, -55.7841, 0.28 ) }
    dend_43 { pt3dadd( 19.6063, -8.08167, -57.945, 0.28 ) }
    dend_43 { pt3dadd( 20.749, -6.541, -63.1878, 1.66 ) }
    dend_43 { pt3dadd( 21.2538, -5.86038, -65.5038, 1.66 ) }
    dend_43 { pt3dadd( 23.2077, -3.22594, -74.4686, 0.28 ) }
    dend_43 { pt3dadd( 24.3024, -1.74988, -79.4914, 0.28 ) }
    dend_43 { pt3dadd( 24.6674, -1.25779, -81.166, 1.11 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 46/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 24.2683, -14.2394, 77.1631, 0.28 ) }
    dend_38 { pt3dadd( 23.5275, -21.8006, 82.9682, 0.28 ) }
    dend_38 { pt3dadd( 23.512, -30.1932, 87.4582, 0.28 ) }
    dend_38 { pt3dadd( 21.8448, -38.6651, 91.4996, 0.28 ) }
    dend_38 { pt3dadd( 19.6829, -47.6678, 93.6736, 0.28 ) }
    dend_38 { pt3dadd( 18.9471, -56.9519, 95.429, 0.28 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 52/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 24.2683, -14.2394, 77.1631, 0.28 ) }
    dend_37 { pt3dadd( 30.7735, -11.3135, 82.7396, 0.28 ) }
    dend_37 { pt3dadd( 36.7792, -8.88635, 89.0825, 0.28 ) }
    dend_37 { pt3dadd( 43.2174, -5.79795, 94.6436, 0.28 ) }
    dend_37 { pt3dadd( 50.465, -3.06266, 99.3313, 0.28 ) }
    // Section: dend_23, id: dend_23, parent: dend_11 (entry count 57/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.43401, -20.9077, -4.80731, 1.38 ) }
    dend_23 { pt3dadd( 1.73666, -22.9086, -2.8632, 1.38 ) }
    dend_23 { pt3dadd( 3.44007, -25.525, -0.320976, 1.66 ) }
    dend_23 { pt3dadd( 6.80245, -30.6895, 4.69714, 1.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 61/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 0.43401, -20.9077, -4.80731, 0.83 ) }
    dend_12 { pt3dadd( -2.41358, -23.5279, -4.86532, 0.83 ) }
    dend_12 { pt3dadd( -7.47194, -28.1821, -4.96837, 0.83 ) }
    dend_12 { pt3dadd( -12.348, -32.6687, -5.0677, 0.83 ) }
    dend_12 { pt3dadd( -16.5716, -36.5549, -5.15374, 0.83 ) }
    dend_12 { pt3dadd( -18.2347, -38.0852, -5.18762, 0.83 ) }
    dend_12 { pt3dadd( -19.707, -39.4398, -5.21761, 1.11 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 68/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.93416, -24.6911, -20.7935, 0.28 ) }
    dend_10 { pt3dadd( 8.1246, -25.8678, -22.9746, 0.28 ) }
    dend_10 { pt3dadd( 8.79582, -26.5304, -24.1395, 1.66 ) }
    dend_10 { pt3dadd( 12.3226, -30.2553, -30.011, 0.28 ) }
    dend_10 { pt3dadd( 13.3568, -31.3877, -31.6952, 1.66 ) }
    dend_10 { pt3dadd( 14.2941, -32.4629, -33.1936, 0.28 ) }
    dend_10 { pt3dadd( 15.6956, -34.1461, -35.5289, 0.28 ) }
    dend_10 { pt3dadd( 16.1831, -34.9293, -36.544, 1.11 ) }
    dend_10 { pt3dadd( 17.3642, -37.2579, -39.3978, 0.28 ) }
    dend_10 { pt3dadd( 17.4231, -37.4057, -39.5457, 0.83 ) }
    dend_10 { pt3dadd( 17.8204, -38.5285, -40.5863, 0.28 ) }
    dend_10 { pt3dadd( 18.4753, -40.8002, -42.8133, 1.38 ) }
    dend_10 { pt3dadd( 19.8045, -45.9627, -47.9902, 0.28 ) }
    dend_10 { pt3dadd( 20.1366, -47.2819, -49.4317, 1.38 ) }
    dend_10 { pt3dadd( 20.8789, -50.0693, -52.6247, 0.28 ) }
    dend_10 { pt3dadd( 21.0992, -50.6595, -53.3445, 1.11 ) }
    dend_10 { pt3dadd( 23.7323, -56.2217, -60.4703, 0.28 ) }
    dend_10 { pt3dadd( 23.8874, -56.4871, -60.8348, 0.83 ) }
    dend_10 { pt3dadd( 26.2197, -59.5954, -65.6589, 0.28 ) }
    dend_10 { pt3dadd( 26.6008, -60.041, -66.4644, 1.11 ) }
    dend_10 { pt3dadd( 29.2142, -62.5819, -72.0468, 0.28 ) }
    dend_10 { pt3dadd( 29.4672, -62.7984, -72.5565, 0.83 ) }
    dend_10 { pt3dadd( 31.3768, -63.9931, -75.7487, 0.28 ) }
    dend_10 { pt3dadd( 31.8396, -64.2692, -76.5366, 1.11 ) }
    dend_10 { pt3dadd( 34.3537, -65.6096, -80.9021, 0.28 ) }
    dend_10 { pt3dadd( 34.4883, -65.691, -81.2092, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 94/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 6.93416, -24.6911, -20.7935, 0.28 ) }
    dend_9 { pt3dadd( 4.8629, -25.4941, -25.7373, 0.28 ) }
    dend_9 { pt3dadd( 3.32963, -26.1972, -29.1938, 1.11 ) }
    dend_9 { pt3dadd( 2.64333, -26.5415, -30.6784, 0.28 ) }
    dend_9 { pt3dadd( 1.31894, -27.2242, -33.3634, 1.11 ) }
    dend_9 { pt3dadd( -5.15931, -30.6188, -45.6944, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_9 { pt3dadd( -5.52102, -30.8072, -46.3818, 1.11 ) }
    dend_9 { pt3dadd( -7.95503, -32.1004, -50.7134, 0.28 ) }
    dend_9 { pt3dadd( -8.39406, -32.3393, -51.4972, 0.83 ) }
    dend_9 { pt3dadd( -11.4025, -33.9735, -56.7587, 0.28 ) }
    dend_9 { pt3dadd( -12.4252, -34.5146, -58.3312, 1.11 ) }
    dend_9 { pt3dadd( -18.4471, -37.5537, -66.0208, 0.28 ) }
    dend_9 { pt3dadd( -20.8773, -38.7864, -69.6261, 1.38 ) }
    dend_9 { pt3dadd( -25.1432, -40.9855, -76.843, 0.28 ) }
    dend_9 { pt3dadd( -25.9038, -41.4196, -78.2762, 0.55 ) }
    dend_9 { pt3dadd( -27.0942, -42.2352, -81.1797, 0.28 ) }
    dend_9 { pt3dadd( -27.4352, -42.5166, -82.0912, 1.11 ) }
    dend_9 { pt3dadd( -30.5796, -46.3533, -92.4741, 0.28 ) }
    dend_9 { pt3dadd( -30.8519, -46.9081, -93.852, 0.55 ) }
    dend_9 { pt3dadd( -31.0489, -47.7704, -95.6414, 0.28 ) }
    dend_9 { pt3dadd( -31.5034, -51.1273, -102.813, 0.83 ) }
    dend_9 { pt3dadd( -31.5964, -53.7151, -108.467, 0.28 ) }
    dend_9 { pt3dadd( -31.5911, -56.0, -113.085, 0.83 ) }
    dend_9 { pt3dadd( -31.1465, -60.3986, -119.466, 0.28 ) }
    dend_9 { pt3dadd( -31.0463, -61.3512, -120.855, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_3 (entry count 19/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -21.2039, -39.7209, -22.2645, 0.28 ) }
    dend_6 { pt3dadd( -22.5246, -43.819, -21.8735, 0.28 ) }
    dend_6 { pt3dadd( -23.0246, -45.4595, -21.7955, 0.55 ) }
    dend_6 { pt3dadd( -23.3604, -46.9736, -22.2846, 0.28 ) }
    dend_6 { pt3dadd( -23.4666, -47.519, -22.5169, 0.55 ) }
    dend_6 { pt3dadd( -23.7446, -49.0159, -23.267, 0.28 ) }
    dend_6 { pt3dadd( -24.3301, -52.4001, -25.2272, 1.11 ) }
    dend_6 { pt3dadd( -24.8124, -55.5458, -27.4808, 0.28 ) }
    dend_6 { pt3dadd( -25.5411, -60.2074, -30.8554, 0.83 ) }
    dend_6 { pt3dadd( -26.0784, -63.2039, -32.8745, 0.28 ) }
    dend_6 { pt3dadd( -26.3464, -64.636, -33.9416, 1.38 ) }
    dend_6 { pt3dadd( -26.937, -67.5398, -36.1751, 0.28 ) }
    dend_6 { pt3dadd( -27.092, -68.2103, -36.6937, 0.28 ) }
    dend_6 { pt3dadd( -27.5742, -70.1454, -38.2797, 0.28 ) }
    dend_6 { pt3dadd( -28.1322, -72.0504, -39.7299, 1.11 ) }
    dend_6 { pt3dadd( -30.3937, -79.1271, -45.3375, 0.55 ) }
    dend_6 { pt3dadd( -30.6918, -79.9893, -45.9925, 1.11 ) }
    dend_6 { pt3dadd( -32.4594, -84.7061, -49.4986, 0.28 ) }
    dend_6 { pt3dadd( -32.754, -85.4695, -50.0526, 1.38 ) }
    dend_6 { pt3dadd( -33.7062, -87.8978, -51.742, 0.55 ) }
    dend_6 { pt3dadd( -33.9824, -88.6414, -52.3084, 0.83 ) }
    dend_6 { pt3dadd( -34.5226, -90.0684, -53.2745, 0.28 ) }
    dend_6 { pt3dadd( -34.7182, -90.6696, -53.7053, 0.55 ) }
    dend_6 { pt3dadd( -35.141, -92.2155, -54.8259, 0.28 ) }
    dend_6 { pt3dadd( -35.2988, -92.83, -55.3959, 0.83 ) }
    dend_6 { pt3dadd( -36.7517, -98.8448, -62.1346, 0.28 ) }
    dend_6 { pt3dadd( -36.8642, -99.2346, -62.5926, 0.55 ) }
    dend_6 { pt3dadd( -37.5419, -101.314, -65.1021, 0.28 ) }
    dend_6 { pt3dadd( -37.7644, -101.949, -65.8227, 0.83 ) }
    dend_6 { pt3dadd( -39.9734, -107.595, -71.9868, 0.28 ) }
    dend_6 { pt3dadd( -40.5356, -108.929, -73.1736, 0.55 ) }
    dend_6 { pt3dadd( -41.8467, -111.812, -74.9909, 0.28 ) }
    dend_6 { pt3dadd( -42.1627, -112.674, -75.6149, 0.55 ) }
    dend_6 { pt3dadd( -42.9321, -115.242, -77.5128, 0.28 ) }
    dend_6 { pt3dadd( -42.9889, -115.466, -77.6599, 0.55 ) }
    dend_6 { pt3dadd( -43.7579, -119.694, -79.5516, 0.28 ) }
    dend_6 { pt3dadd( -43.8485, -120.404, -79.8879, 0.55 ) }
    dend_6 { pt3dadd( -43.919, -128.645, -85.243, 0.28 ) }
    dend_6 { pt3dadd( -43.8652, -129.908, -86.3128, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 58/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -21.2039, -39.7209, -22.2645, 0.28 ) }
    dend_4 { pt3dadd( -28.1918, -37.8715, -20.3416, 0.28 ) }
    dend_4 { pt3dadd( -30.0903, -37.1909, -20.331, 0.55 ) }
    dend_4 { pt3dadd( -31.5623, -36.6194, -20.4607, 0.28 ) }
    dend_4 { pt3dadd( -34.095, -35.5688, -20.7653, 0.83 ) }
    dend_4 { pt3dadd( -36.9516, -34.3461, -21.1282, 0.28 ) }
    dend_4 { pt3dadd( -39.2618, -33.3539, -21.4092, 1.38 ) }
    dend_4 { pt3dadd( -43.1012, -31.6367, -22.1995, 0.28 ) }
    dend_4 { pt3dadd( -44.5179, -31.0444, -22.4928, 0.55 ) }
    dend_4 { pt3dadd( -49.5523, -29.1623, -23.467, 0.28 ) }
    dend_4 { pt3dadd( -50.4236, -28.8858, -23.6146, 1.11 ) }
    dend_4 { pt3dadd( -54.7494, -27.7512, -24.3721, 0.28 ) }
    dend_4 { pt3dadd( -56.1511, -27.4619, -24.6178, 1.11 ) }
    dend_4 { pt3dadd( -61.2868, -26.7167, -25.287, 0.28 ) }
    dend_4 { pt3dadd( -62.4757, -26.5925, -25.511, 0.83 ) }
    dend_4 { pt3dadd( -64.735, -26.4548, -26.0418, 0.28 ) }
    dend_4 { pt3dadd( -66.4435, -26.3638, -26.4697, 0.55 ) }
    dend_4 { pt3dadd( -67.456, -26.3083, -26.7391, 0.28 ) }
    dend_4 { pt3dadd( -68.2226, -26.2435, -26.9318, 1.38 ) }
    dend_4 { pt3dadd( -74.3281, -25.4341, -28.4381, 0.55 ) }
    dend_4 { pt3dadd( -76.6949, -24.8772, -29.0335, 1.11 ) }
    dend_4 { pt3dadd( -78.361, -24.3707, -29.4532, 0.28 ) }
    dend_4 { pt3dadd( -79.0941, -24.0689, -29.6143, 0.83 ) }
    dend_4 { pt3dadd( -80.6633, -23.311, -29.9592, 0.28 ) }
    dend_4 { pt3dadd( -82.5607, -22.1909, -30.3389, 1.11 ) }
    dend_4 { pt3dadd( -87.9889, -18.5643, -31.233, 0.28 ) }
    dend_4 { pt3dadd( -88.51, -18.1957, -31.323, 1.38 ) }
    dend_4 { pt3dadd( -93.5725, -14.4929, -32.191, 0.55 ) }
    dend_4 { pt3dadd( -95.2877, -13.2459, -32.4489, 1.38 ) }
    dend_4 { pt3dadd( -100.165, -9.68741, -33.063, 0.55 ) }
    dend_4 { pt3dadd( -101.14, -9.00073, -33.1475, 1.11 ) }
    dend_4 { pt3dadd( -103.384, -7.49093, -33.2403, 0.55 ) }
    dend_4 { pt3dadd( -104.639, -6.77244, -33.1618, 0.83 ) }
    dend_4 { pt3dadd( -107.915, -5.22137, -32.6246, 0.55 ) }
    dend_4 { pt3dadd( -109.237, -4.64384, -32.426, 1.11 ) }
    dend_4 { pt3dadd( -112.358, -3.44649, -32.041, 0.28 ) }
    dend_4 { pt3dadd( -114.198, -2.74344, -31.8013, 1.11 ) }
    dend_4 { pt3dadd( -120.416, -0.436211, -30.9475, 0.28 ) }
    dend_4 { pt3dadd( -121.594, -0.0118884, -30.7869, 0.83 ) }
    dend_4 { pt3dadd( -127.284, 1.97452, -30.0839, 0.28 ) }
    dend_4 { pt3dadd( -128.161, 2.26967, -29.9968, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 6.80245, -30.6895, 4.69714, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_25 { pt3dadd( 7.72009, -31.9756, 3.03543, 1.11 ) }
    dend_25 { pt3dadd( 8.90937, -33.6424, 0.881845, 1.11 ) }
    dend_25 { pt3dadd( 9.29529, -34.1833, 0.182995, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 3/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.80245, -30.6895, 4.69714, 0.83 ) }
    dend_24 { pt3dadd( 6.51956, -31.5758, 9.10528, 0.83 ) }
    dend_24 { pt3dadd( 5.53694, -34.6544, 24.4172, 0.55 ) }
    dend_24 { pt3dadd( 4.49239, -37.9271, 40.6943, 0.28 ) }
    dend_24 { pt3dadd( 4.33628, -38.4161, 43.1268, 0.55 ) }
    dend_24 { pt3dadd( 3.51476, -40.99, 55.9283, 0.28 ) }
    dend_24 { pt3dadd( 1.32508, -42.7742, 69.3852, 0.28 ) }
    dend_24 { pt3dadd( -1.26185, -43.514, 82.8722, 0.28 ) }
    dend_24 { pt3dadd( -4.43054, -45.8776, 96.0388, 0.28 ) }
    dend_24 { pt3dadd( -7.14264, -47.0412, 109.471, 0.28 ) }
    dend_24 { pt3dadd( -11.2333, -46.1177, 122.563, 0.28 ) }
    dend_24 { pt3dadd( -17.3186, -44.8296, 134.82, 0.28 ) }
    dend_24 { pt3dadd( -22.143, -41.871, 147.327, 0.28 ) }
    dend_24 { pt3dadd( -27.4542, -38.7432, 159.59, 0.28 ) }
    dend_24 { pt3dadd( -33.9878, -34.0713, 170.685, 0.28 ) }
    dend_24 { pt3dadd( -40.5199, -31.6262, 182.516, 0.28 ) }
    dend_24 { pt3dadd( -46.0683, -29.5317, 194.907, 0.28 ) }
    dend_24 { pt3dadd( -49.0032, -25.6116, 207.717, 0.28 ) }
    dend_24 { pt3dadd( -53.9465, -20.83, 219.562, 0.28 ) }
    dend_24 { pt3dadd( -56.2847, -14.8665, 231.641, 0.28 ) }
    dend_24 { pt3dadd( -57.0149, -8.08101, 243.467, 0.28 ) }
    dend_24 { pt3dadd( -55.7375, 0.0128917, 254.345, 0.28 ) }
    dend_24 { pt3dadd( -53.5838, 7.39452, 265.613, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 26/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -19.707, -39.4398, -5.21761, 0.55 ) }
    dend_22 { pt3dadd( -20.1605, -41.7109, -3.29287, 0.55 ) }
    dend_22 { pt3dadd( -20.635, -43.0573, -1.83649, 0.83 ) }
    dend_22 { pt3dadd( -21.2946, -44.626, -0.263395, 0.55 ) }
    dend_22 { pt3dadd( -23.2056, -48.7285, 3.37927, 0.83 ) }
    dend_22 { pt3dadd( -23.895, -50.1313, 4.50665, 0.28 ) }
    dend_22 { pt3dadd( -24.7897, -51.9483, 5.93203, 0.83 ) }
    dend_22 { pt3dadd( -27.2225, -56.3856, 9.39075, 0.28 ) }
    dend_22 { pt3dadd( -29.1832, -59.9161, 11.7811, 1.11 ) }
    dend_22 { pt3dadd( -30.8936, -63.1303, 13.5241, 0.55 ) }
    dend_22 { pt3dadd( -31.494, -64.3595, 13.9494, 0.83 ) }
    dend_22 { pt3dadd( -33.1939, -68.3327, 15.116, 0.28 ) }
    dend_22 { pt3dadd( -33.537, -69.4255, 15.3721, 0.83 ) }
    dend_22 { pt3dadd( -34.3749, -73.2205, 16.0949, 0.28 ) }
    dend_22 { pt3dadd( -34.5578, -74.3785, 16.3582, 1.11 ) }
    dend_22 { pt3dadd( -34.8043, -76.761, 16.7348, 0.28 ) }
    dend_22 { pt3dadd( -34.9067, -78.6634, 16.9179, 1.38 ) }
    dend_22 { pt3dadd( -34.9904, -83.566, 17.1632, 0.28 ) }
    dend_22 { pt3dadd( -34.9783, -85.2598, 17.3077, 0.83 ) }
    dend_22 { pt3dadd( -34.8218, -88.0723, 17.8089, 0.28 ) }
    dend_22 { pt3dadd( -34.7175, -90.1418, 18.1813, 1.38 ) }
    dend_22 { pt3dadd( -34.5882, -93.4827, 18.8305, 0.28 ) }
    dend_22 { pt3dadd( -34.5465, -94.549, 19.0701, 0.83 ) }
    dend_22 { pt3dadd( -34.4526, -96.9406, 19.7652, 0.28 ) }
    dend_22 { pt3dadd( -34.294, -100.606, 21.0211, 1.11 ) }
    dend_22 { pt3dadd( -33.9039, -107.152, 23.6775, 0.28 ) }
    dend_22 { pt3dadd( -33.7103, -108.956, 24.3327, 1.11 ) }
    dend_22 { pt3dadd( -32.8289, -115.099, 26.6279, 0.28 ) }
    dend_22 { pt3dadd( -32.5085, -117.085, 27.3026, 0.83 ) }
    dend_22 { pt3dadd( -32.2627, -118.429, 27.718, 0.28 ) }
    dend_22 { pt3dadd( -31.8931, -120.297, 28.2543, 1.11 ) }
    dend_22 { pt3dadd( -29.885, -128.104, 30.8831, 0.28 ) }
    dend_22 { pt3dadd( -28.7337, -132.303, 32.1365, 1.11 ) }
    dend_22 { pt3dadd( -27.5303, -136.725, 33.1762, 0.28 ) }
    dend_22 { pt3dadd( -27.3746, -137.327, 33.2897, 0.83 ) }
    dend_22 { pt3dadd( -28.42, -146.504, 37.8536, 0.83 ) }
    dend_22 { pt3dadd( -31.7312, -155.145, 42.4461, 0.83 ) }
    dend_22 { pt3dadd( -37.7984, -162.701, 46.1544, 0.83 ) }
    dend_22 { pt3dadd( -43.358, -170.195, 50.6996, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 65/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -19.707, -39.4398, -5.21761, 0.28 ) }
    dend_13 { pt3dadd( -24.4871, -42.1911, -9.1905, 0.28 ) }
    dend_13 { pt3dadd( -25.6614, -42.867, -10.1664, 1.38 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 68/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -128.161, 2.26967, -29.9968, 0.28 ) }
    dend_5 { pt3dadd( -135.314, -2.68592, -32.2966, 0.28 ) }
    dend_5 { pt3dadd( -136.149, -3.2887, -32.5798, 0.83 ) }
    dend_5 { pt3dadd( -140.234, -6.16387, -33.9435, 0.28 ) }
    dend_5 { pt3dadd( -140.999, -6.64167, -34.2143, 0.83 ) }
    dend_5 { pt3dadd( -146.804, -10.0707, -36.2973, 0.28 ) }
    dend_5 { pt3dadd( -148.018, -10.7488, -36.8117, 1.11 ) }
    dend_5 { pt3dadd( -154.665, -14.2676, -39.8294, 0.28 ) }
    dend_5 { pt3dadd( -155.695, -14.7965, -40.2219, 1.11 ) }
    dend_5 { pt3dadd( -161.639, -17.7619, -41.8183, 0.28 ) }
    dend_5 { pt3dadd( -162.344, -18.1003, -41.9896, 1.11 ) }
    dend_5 { pt3dadd( -168.305, -20.7107, -43.0603, 0.28 ) }
    dend_5 { pt3dadd( -175.792, -23.7061, -44.2053, 0.55 ) }
    dend_5 { pt3dadd( -178.201, -24.5492, -44.3047, 0.28 ) }
    dend_5 { pt3dadd( -180.853, -25.6777, -43.9322, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 83/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 9.29529, -34.1833, 0.182995, 0.83 ) }
    dend_29 { pt3dadd( 8.83512, -37.5304, 5.92932, 0.83 ) }
    dend_29 { pt3dadd( 8.73124, -38.2861, 7.22664, 0.83 ) }
    dend_29 { pt3dadd( 8.44713, -40.3525, 10.7744, 0.83 ) }
    dend_29 { pt3dadd( 8.24322, -41.8357, 13.3207, 1.11 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 88/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 9.29529, -34.1833, 0.182995, 0.28 ) }
    dend_26 { pt3dadd( 9.47194, -35.7297, -0.275405, 0.28 ) }
    dend_26 { pt3dadd( 9.75755, -38.3005, -1.03496, 0.28 ) }
    dend_26 { pt3dadd( 10.3552, -43.6803, -2.62449, 0.83 ) }
    dend_26 { pt3dadd( 10.7855, -47.5526, -3.76861, 0.28 ) }
    dend_26 { pt3dadd( 10.873, -48.3403, -4.00134, 0.55 ) }
    dend_26 { pt3dadd( 10.9632, -49.1527, -4.24137, 0.28 ) }
    dend_26 { pt3dadd( 11.0799, -49.9329, -4.48439, 1.94 ) }
    // Section: dend_21, id: dend_21, parent: dend_13 (entry count 96/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -25.6614, -42.867, -10.1664, 0.28 ) }
    dend_21 { pt3dadd( -26.6083, -48.7421, -13.4375, 0.28 ) }
    dend_21 { pt3dadd( -26.8321, -50.048, -14.3109, 0.55 ) }
    dend_21 { pt3dadd( -27.0364, -51.1808, -15.0828, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( -27.2276, -52.2644, -15.7304, 0.83 ) }
    dend_21 { pt3dadd( -27.4947, -53.8327, -16.7364, 0.28 ) }
    dend_21 { pt3dadd( -27.8452, -55.732, -17.9081, 1.11 ) }
    dend_21 { pt3dadd( -28.9488, -61.0787, -20.7854, 0.28 ) }
    dend_21 { pt3dadd( -29.0772, -61.6811, -21.0948, 1.11 ) }
    dend_21 { pt3dadd( -29.9214, -65.3513, -22.8558, 0.55 ) }
    dend_21 { pt3dadd( -30.6965, -68.3384, -24.4396, 1.66 ) }
    dend_21 { pt3dadd( -31.4261, -71.0655, -25.9208, 0.28 ) }
    dend_21 { pt3dadd( -31.6522, -71.9002, -26.3931, 0.83 ) }
    dend_21 { pt3dadd( -32.6523, -75.2113, -28.2314, 0.28 ) }
    dend_21 { pt3dadd( -33.1235, -76.6561, -29.1184, 1.11 ) }
    dend_21 { pt3dadd( -35.4292, -83.2473, -33.4318, 0.28 ) }
    dend_21 { pt3dadd( -35.7127, -84.0433, -33.9434, 1.66 ) }
    dend_21 { pt3dadd( -37.7689, -89.6638, -37.7545, 0.28 ) }
    dend_21 { pt3dadd( -38.0456, -90.4185, -38.3107, 1.38 ) }
    dend_21 { pt3dadd( -39.4026, -94.147, -41.2518, 0.28 ) }
    dend_21 { pt3dadd( -39.5914, -94.7079, -41.7216, 0.83 ) }
    dend_21 { pt3dadd( -40.0747, -96.1756, -42.9403, 0.28 ) }
    dend_21 { pt3dadd( -40.3337, -96.9935, -43.6438, 0.55 ) }
    dend_21 { pt3dadd( -41.589, -101.562, -47.6461, 0.28 ) }
    dend_21 { pt3dadd( -41.7195, -102.001, -48.0677, 0.83 ) }
    dend_21 { pt3dadd( -43.1911, -106.902, -52.9156, 0.28 ) }
    dend_21 { pt3dadd( -43.3647, -107.407, -53.4164, 0.83 ) }
    dend_21 { pt3dadd( -44.6078, -110.59, -56.5425, 0.28 ) }
    dend_21 { pt3dadd( -44.8178, -111.088, -56.9975, 0.83 ) }
    dend_21 { pt3dadd( -47.6949, -117.21, -62.0639, 0.28 ) }
    dend_21 { pt3dadd( -48.0732, -118.124, -62.8824, 0.55 ) }
    dend_21 { pt3dadd( -48.7266, -119.935, -64.4856, 0.28 ) }
    dend_21 { pt3dadd( -48.9771, -120.764, -65.2045, 0.83 ) }
    dend_21 { pt3dadd( -49.7861, -124.024, -67.9116, 0.28 ) }
    dend_21 { pt3dadd( -49.8645, -124.41, -68.2262, 0.55 ) }
    dend_21 { pt3dadd( -50.5593, -132.443, -74.3546, 0.28 ) }
    dend_21 { pt3dadd( -50.6088, -133.783, -75.449, 0.55 ) }
    dend_21 { pt3dadd( -50.5148, -135.85, -77.2479, 0.28 ) }
    dend_21 { pt3dadd( -50.4357, -136.665, -77.9867, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 35/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -25.6614, -42.867, -10.1664, 0.28 ) }
    dend_14 { pt3dadd( -28.644, -47.0592, -14.5199, 0.28 ) }
    dend_14 { pt3dadd( -29.3512, -48.0531, -15.5521, 0.83 ) }
    dend_14 { pt3dadd( -30.5257, -49.7039, -17.2663, 0.28 ) }
    dend_14 { pt3dadd( -31.4155, -50.9546, -18.5652, 2.77 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 40/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 8.24322, -41.8357, 13.3207, 0.55 ) }
    dend_31 { pt3dadd( 8.09023, -44.0658, 13.2489, 0.55 ) }
    dend_31 { pt3dadd( 8.0946, -45.1856, 13.3134, 0.83 ) }
    dend_31 { pt3dadd( 8.21622, -47.0777, 13.4602, 0.28 ) }
    dend_31 { pt3dadd( 8.36303, -48.4052, 13.5616, 1.11 ) }
    dend_31 { pt3dadd( 8.62663, -50.6331, 13.7174, 1.11 ) }
    dend_31 { pt3dadd( 8.92697, -53.099, 13.8773, 0.28 ) }
    dend_31 { pt3dadd( 9.33747, -55.817, 14.3716, 0.83 ) }
    dend_31 { pt3dadd( 10.3456, -61.461, 15.8727, 0.28 ) }
    dend_31 { pt3dadd( 10.6585, -63.1669, 16.4255, 1.11 ) }
    dend_31 { pt3dadd( 11.2531, -66.109, 17.4898, 0.28 ) }
    dend_31 { pt3dadd( 11.4992, -67.2185, 18.0371, 1.11 ) }
    dend_31 { pt3dadd( 12.9303, -73.8016, 21.5633, 0.55 ) }
    dend_31 { pt3dadd( 13.1497, -75.1241, 22.36, 1.38 ) }
    dend_31 { pt3dadd( 13.6058, -78.0469, 24.2517, 0.28 ) }
    dend_31 { pt3dadd( 13.812, -79.46, 25.151, 1.66 ) }
    dend_31 { pt3dadd( 15.0142, -87.7799, 30.3049, 0.28 ) }
    dend_31 { pt3dadd( 15.3614, -90.3877, 31.8023, 1.94 ) }
    dend_31 { pt3dadd( 17.0054, -104.766, 39.1796, 0.28 ) }
    dend_31 { pt3dadd( 17.1121, -105.784, 39.6613, 0.83 ) }
    dend_31 { pt3dadd( 17.3106, -107.78, 40.516, 0.28 ) }
    dend_31 { pt3dadd( 17.3707, -108.66, 40.8442, 0.83 ) }
    dend_31 { pt3dadd( 17.4621, -111.071, 41.5472, 0.28 ) }
    dend_31 { pt3dadd( 17.4953, -112.161, 41.8575, 0.83 ) }
    dend_31 { pt3dadd( 17.6629, -121.125, 43.5484, 0.28 ) }
    dend_31 { pt3dadd( 17.6774, -122.98, 43.9243, 0.83 ) }
    dend_31 { pt3dadd( 17.7088, -131.974, 45.9105, 0.28 ) }
    dend_31 { pt3dadd( 17.7118, -133.613, 46.3014, 0.83 ) }
    dend_31 { pt3dadd( 18.1174, -144.738, 47.9177, 0.83 ) }
    dend_31 { pt3dadd( 17.4087, -155.518, 51.1248, 0.83 ) }
    dend_31 { pt3dadd( 15.7038, -166.087, 54.6788, 0.83 ) }
    dend_31 { pt3dadd( 16.2564, -176.538, 58.9023, 0.83 ) }
    dend_31 { pt3dadd( 18.0399, -186.344, 64.2605, 0.83 ) }
    dend_31 { pt3dadd( 19.3301, -194.962, 71.5571, 0.83 ) }
    dend_31 { pt3dadd( 22.7741, -204.182, 77.191, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 75/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.24322, -41.8357, 13.3207, 0.55 ) }
    dend_30 { pt3dadd( 9.45382, -41.6698, 15.8866, 0.55 ) }
    dend_30 { pt3dadd( 9.63134, -41.6454, 16.2628, 0.83 ) }
    dend_30 { pt3dadd( 11.4209, -41.4002, 20.0557, 0.83 ) }
    dend_30 { pt3dadd( 11.9002, -41.3345, 21.0717, 1.11 ) }
    dend_30 { pt3dadd( 15.4657, -40.8458, 28.6288, 0.28 ) }
    dend_30 { pt3dadd( 15.8631, -40.7914, 29.4712, 0.83 ) }
    dend_30 { pt3dadd( 19.0024, -39.4078, 34.886, 0.83 ) }
    dend_30 { pt3dadd( 22.2626, -39.0701, 40.4034, 0.83 ) }
    dend_30 { pt3dadd( 26.4466, -37.8192, 45.0973, 0.83 ) }
    dend_30 { pt3dadd( 30.5182, -36.9595, 49.9791, 0.83 ) }
    dend_30 { pt3dadd( 35.3228, -35.9017, 54.0927, 0.83 ) }
    dend_30 { pt3dadd( 40.269, -34.089, 57.7333, 0.83 ) }
    dend_30 { pt3dadd( 45.5281, -32.0001, 60.7201, 0.83 ) }
    dend_30 { pt3dadd( 51.2028, -30.8026, 63.4525, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 90/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 11.0799, -49.9329, -4.48439, 0.28 ) }
    dend_28 { pt3dadd( 11.1907, -54.7827, -3.95226, 0.28 ) }
    dend_28 { pt3dadd( 11.2833, -56.2126, -4.04055, 1.66 ) }
    dend_28 { pt3dadd( 11.6221, -61.0506, -4.69612, 0.28 ) }
    dend_28 { pt3dadd( 11.6714, -61.6137, -4.7878, 1.11 ) }
    dend_28 { pt3dadd( 11.9717, -65.0497, -5.38177, 0.28 ) }
    dend_28 { pt3dadd( 12.0434, -65.8877, -5.42605, 1.38 ) }
    dend_28 { pt3dadd( 12.608, -70.8457, -5.21126, 0.28 ) }
    dend_28 { pt3dadd( 12.6907, -71.6402, -5.20439, 0.83 ) }
    dend_28 { pt3dadd( 12.9211, -74.212, -5.26283, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( 13.016, -75.4715, -5.27559, 1.94 ) }
    dend_28 { pt3dadd( 13.6425, -85.4764, -5.12103, 0.28 ) }
    dend_28 { pt3dadd( 13.7157, -86.5423, -4.95958, 1.38 ) }
    dend_28 { pt3dadd( 13.9425, -90.4134, -4.04513, 0.28 ) }
    dend_28 { pt3dadd( 13.9874, -91.28, -3.84509, 0.55 ) }
    dend_28 { pt3dadd( 14.1129, -94.3143, -3.15113, 0.28 ) }
    dend_28 { pt3dadd( 14.1398, -94.9557, -3.03185, 1.66 ) }
    dend_28 { pt3dadd( 14.6202, -109.02, -0.872344, 0.28 ) }
    dend_28 { pt3dadd( 14.6617, -110.608, -0.63787, 1.94 ) }
    dend_28 { pt3dadd( 14.8505, -119.343, 0.705339, 0.55 ) }
    dend_28 { pt3dadd( 14.8547, -119.971, 0.796876, 1.66 ) }
    dend_28 { pt3dadd( 14.7779, -128.552, 1.91365, 0.28 ) }
    dend_28 { pt3dadd( 14.7544, -129.57, 2.0072, 1.11 ) }
    dend_28 { pt3dadd( 14.6668, -131.469, 1.99722, 0.28 ) }
    dend_28 { pt3dadd( 14.618, -132.366, 2.06154, 0.83 ) }
    dend_28 { pt3dadd( 14.2387, -136.195, 2.79964, 0.28 ) }
    dend_28 { pt3dadd( 14.1623, -136.56, 2.92824, 0.83 ) }
    dend_28 { pt3dadd( 13.6218, -138.305, 3.78432, 0.28 ) }
    dend_28 { pt3dadd( 13.1344, -139.655, 4.34061, 0.83 ) }
    dend_28 { pt3dadd( 11.3453, -144.224, 6.09394, 0.28 ) }
    dend_28 { pt3dadd( 10.7834, -145.578, 6.55487, 1.11 ) }
    dend_28 { pt3dadd( 7.38297, -153.523, 8.88582, 0.28 ) }
    dend_28 { pt3dadd( 6.89919, -154.663, 9.19061, 0.83 ) }
    dend_28 { pt3dadd( 4.93411, -159.38, 10.3221, 0.28 ) }
    dend_28 { pt3dadd( 4.2328, -161.366, 10.6019, 0.55 ) }
    dend_28 { pt3dadd( 3.36669, -164.437, 10.6442, 0.28 ) }
    dend_28 { pt3dadd( 3.21036, -165.323, 10.6231, 0.55 ) }
    dend_28 { pt3dadd( 3.15774, -168.217, 10.3699, 0.28 ) }
    dend_28 { pt3dadd( 3.18806, -169.021, 10.3334, 1.11 ) }
    dend_28 { pt3dadd( 3.69018, -173.987, 10.3749, 0.28 ) }
    dend_28 { pt3dadd( 3.81621, -175.057, 10.318, 1.38 ) }
    dend_28 { pt3dadd( 4.31052, -178.04, 10.0807, 0.28 ) }
    dend_28 { pt3dadd( 4.41574, -178.659, 10.0252, 0.55 ) }
    dend_28 { pt3dadd( 4.41574, -178.659, 10.0252, 0.55 ) }
    dend_28 { pt3dadd( 2.1199, -188.62, 9.63364, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 35/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 11.0799, -49.9329, -4.48439, 0.28 ) }
    dend_27 { pt3dadd( 13.2265, -54.1089, -10.7516, 0.28 ) }
    dend_27 { pt3dadd( 13.7841, -55.0703, -12.0135, 1.38 ) }
    dend_27 { pt3dadd( 16.4646, -59.4287, -17.4728, 0.28 ) }
    dend_27 { pt3dadd( 16.901, -60.2423, -18.8836, 1.38 ) }
    dend_27 { pt3dadd( 17.9599, -62.292, -22.9519, 0.28 ) }
    dend_27 { pt3dadd( 18.1861, -62.7247, -23.8559, 0.83 ) }
    dend_27 { pt3dadd( 19.1102, -64.5642, -27.8467, 0.28 ) }
    dend_27 { pt3dadd( 19.4419, -65.2284, -29.4, 1.11 ) }
    dend_27 { pt3dadd( 22.2367, -70.7923, -43.8589, 0.28 ) }
    dend_27 { pt3dadd( 22.3765, -71.0094, -44.5147, 0.83 ) }
    dend_27 { pt3dadd( 22.8109, -71.5466, -46.476, 0.28 ) }
    dend_27 { pt3dadd( 23.0188, -71.8006, -47.5592, 0.83 ) }
    dend_27 { pt3dadd( 23.3548, -72.2182, -49.9573, 0.28 ) }
    dend_27 { pt3dadd( 23.4375, -72.2903, -50.3806, 0.83 ) }
    dend_27 { pt3dadd( 29.3902, -73.0266, -50.82, 0.28 ) }
    dend_27 { pt3dadd( 29.8318, -73.0663, -50.8535, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 52/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -31.4155, -50.9546, -18.5652, 0.28 ) }
    dend_18 { pt3dadd( -32.4575, -51.9337, -19.4885, 0.28 ) }
    dend_18 { pt3dadd( -33.0434, -52.4842, -20.0076, 0.55 ) }
    dend_18 { pt3dadd( -36.1538, -55.4067, -22.7634, 0.55 ) }
    dend_18 { pt3dadd( -37.4356, -56.6111, -23.8991, 1.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 57/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -31.4155, -50.9546, -18.5652, 0.28 ) }
    dend_15 { pt3dadd( -30.9122, -54.1764, -17.8483, 0.28 ) }
    dend_15 { pt3dadd( -30.8695, -54.4497, -17.7874, 1.11 ) }
    dend_15 { pt3dadd( -30.3644, -57.6829, -17.068, 0.28 ) }
    dend_15 { pt3dadd( -30.1968, -58.7558, -16.8292, 1.38 ) }
    dend_15 { pt3dadd( -29.5301, -63.0235, -15.8796, 0.28 ) }
    dend_15 { pt3dadd( -29.3157, -64.3956, -15.5743, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 64/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -37.4356, -56.6111, -23.8991, 0.28 ) }
    dend_20 { pt3dadd( -39.7235, -60.2574, -24.5906, 0.28 ) }
    dend_20 { pt3dadd( -40.2372, -61.0275, -24.7827, 0.83 ) }
    dend_20 { pt3dadd( -41.5126, -62.899, -25.2549, 0.28 ) }
    dend_20 { pt3dadd( -42.2181, -63.8436, -25.5576, 1.11 ) }
    dend_20 { pt3dadd( -46.775, -69.7458, -27.4701, 0.28 ) }
    dend_20 { pt3dadd( -47.7701, -71.0322, -27.8773, 1.11 ) }
    dend_20 { pt3dadd( -50.3191, -74.2865, -28.9879, 0.28 ) }
    dend_20 { pt3dadd( -51.7309, -76.0096, -29.5825, 1.38 ) }
    dend_20 { pt3dadd( -55.5553, -80.5779, -31.1643, 0.28 ) }
    dend_20 { pt3dadd( -56.496, -81.6695, -31.5619, 0.55 ) }
    dend_20 { pt3dadd( -58.1102, -83.5142, -32.2394, 0.28 ) }
    dend_20 { pt3dadd( -58.7587, -84.3072, -32.5517, 1.11 ) }
    dend_20 { pt3dadd( -61.7483, -88.4698, -34.1864, 0.28 ) }
    dend_20 { pt3dadd( -62.3716, -89.5442, -34.6502, 1.38 ) }
    dend_20 { pt3dadd( -63.7918, -92.6696, -36.0088, 0.28 ) }
    dend_20 { pt3dadd( -64.1901, -93.5269, -36.4812, 0.55 ) }
    dend_20 { pt3dadd( -65.5933, -96.5675, -38.3766, 0.28 ) }
    dend_20 { pt3dadd( -66.242, -97.9495, -39.295, 1.38 ) }
    dend_20 { pt3dadd( -69.0821, -104.126, -43.4947, 0.28 ) }
    dend_20 { pt3dadd( -69.5939, -105.15, -44.2123, 1.11 ) }
    dend_20 { pt3dadd( -72.2908, -110.269, -47.9122, 0.28 ) }
    dend_20 { pt3dadd( -72.2908, -110.269, -47.9122, 0.83 ) }
    dend_20 { pt3dadd( -74.998, -114.143, -50.7808, 0.28 ) }
    dend_20 { pt3dadd( -75.7152, -115.08, -51.454, 1.11 ) }
    dend_20 { pt3dadd( -78.3772, -118.436, -53.6048, 0.28 ) }
    dend_20 { pt3dadd( -79.3823, -119.802, -54.3718, 1.11 ) }
    dend_20 { pt3dadd( -83.3635, -125.95, -57.2642, 0.28 ) }
    dend_20 { pt3dadd( -83.8167, -126.69, -57.611, 0.83 ) }
    dend_20 { pt3dadd( -86.3475, -131.074, -59.6045, 0.28 ) }
    dend_20 { pt3dadd( -87.4535, -133.118, -60.4829, 1.11 ) }
    dend_20 { pt3dadd( -89.609, -137.523, -62.1361, 0.28 ) }
    dend_20 { pt3dadd( -90.0765, -138.536, -62.4999, 1.11 ) }
    dend_20 { pt3dadd( -91.6552, -142.516, -63.9444, 0.28 ) }
    dend_20 { pt3dadd( -91.9753, -143.249, -64.2215, 0.83 ) }
    dend_20 { pt3dadd( -93.3729, -146.211, -65.3637, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_20 { pt3dadd( -93.9533, -147.23, -65.7912, 0.83 ) }
    dend_20 { pt3dadd( -96.7817, -151.49, -67.4102, 0.28 ) }
    dend_20 { pt3dadd( -97.5368, -152.426, -67.7218, 0.83 ) }
    dend_20 { pt3dadd( -100.521, -155.74, -68.6689, 0.28 ) }
    dend_20 { pt3dadd( -101.173, -156.398, -68.8609, 0.83 ) }
    dend_20 { pt3dadd( -103.48, -158.565, -69.4702, 0.28 ) }
    dend_20 { pt3dadd( -104.271, -159.294, -69.6968, 0.83 ) }
    dend_20 { pt3dadd( -109.547, -163.986, -71.3392, 0.28 ) }
    dend_20 { pt3dadd( -110.145, -164.596, -71.6007, 0.55 ) }
    dend_20 { pt3dadd( -114.332, -169.638, -74.0041, 0.28 ) }
    dend_20 { pt3dadd( -114.764, -170.29, -74.3524, 0.83 ) }
    dend_20 { pt3dadd( -116.493, -173.611, -76.2259, 0.28 ) }
    dend_20 { pt3dadd( -117.247, -175.762, -77.4773, 1.11 ) }
    dend_20 { pt3dadd( -118.436, -182.047, -81.1973, 0.55 ) }
    dend_20 { pt3dadd( -118.548, -182.882, -81.6928, 1.11 ) }
    dend_20 { pt3dadd( -118.682, -188.18, -84.816, 0.28 ) }
    dend_20 { pt3dadd( -118.668, -188.97, -85.2657, 0.83 ) }
    dend_20 { pt3dadd( -118.188, -194.0, -87.7975, 0.28 ) }
    dend_20 { pt3dadd( -118.097, -194.592, -88.0615, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 19/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -37.4356, -56.6111, -23.8991, 0.28 ) }
    dend_19 { pt3dadd( -39.3549, -60.7915, -24.4621, 0.28 ) }
    dend_19 { pt3dadd( -40.2817, -62.7927, -24.6908, 0.83 ) }
    dend_19 { pt3dadd( -41.6775, -65.8182, -24.9865, 0.28 ) }
    dend_19 { pt3dadd( -42.2398, -66.9701, -25.1307, 0.83 ) }
    dend_19 { pt3dadd( -43.2878, -69.0254, -25.4076, 0.28 ) }
    dend_19 { pt3dadd( -43.6089, -69.6253, -25.5172, 0.83 ) }
    dend_19 { pt3dadd( -44.3184, -70.9408, -25.7739, 0.28 ) }
    dend_19 { pt3dadd( -45.0431, -72.2634, -25.9834, 0.83 ) }
    dend_19 { pt3dadd( -46.1614, -74.4183, -26.2256, 0.28 ) }
    dend_19 { pt3dadd( -46.6693, -75.3836, -26.3696, 0.83 ) }
    dend_19 { pt3dadd( -48.0607, -77.8526, -26.7403, 0.28 ) }
    dend_19 { pt3dadd( -49.4688, -80.0959, -27.1185, 0.83 ) }
    dend_19 { pt3dadd( -50.5712, -81.6883, -27.3659, 0.28 ) }
    dend_19 { pt3dadd( -51.6338, -83.044, -27.4897, 0.83 ) }
    dend_19 { pt3dadd( -53.1983, -84.9007, -27.5644, 0.28 ) }
    dend_19 { pt3dadd( -54.4594, -86.2722, -27.6061, 0.83 ) }
    dend_19 { pt3dadd( -59.0042, -91.1717, -27.5217, 0.28 ) }
    dend_19 { pt3dadd( -60.0602, -92.272, -27.4665, 1.11 ) }
    dend_19 { pt3dadd( -67.518, -99.9297, -26.7414, 0.28 ) }
    dend_19 { pt3dadd( -69.0568, -101.451, -26.5558, 1.11 ) }
    dend_19 { pt3dadd( -73.9278, -106.281, -25.6413, 0.28 ) }
    dend_19 { pt3dadd( -76.3143, -108.691, -25.0405, 0.83 ) }
    dend_19 { pt3dadd( -79.7771, -112.195, -23.868, 0.28 ) }
    dend_19 { pt3dadd( -80.7124, -113.131, -23.5006, 0.83 ) }
    dend_19 { pt3dadd( -84.3997, -116.696, -21.7401, 0.28 ) }
    dend_19 { pt3dadd( -87.2688, -119.407, -20.3105, 0.83 ) }
    dend_19 { pt3dadd( -89.3731, -121.345, -19.1539, 0.28 ) }
    dend_19 { pt3dadd( -90.0381, -121.903, -18.8233, 1.11 ) }
    dend_19 { pt3dadd( -93.8993, -125.101, -16.8667, 0.28 ) }
    dend_19 { pt3dadd( -95.1315, -126.076, -16.322, 0.83 ) }
    dend_19 { pt3dadd( -97.7902, -128.135, -15.2728, 0.28 ) }
    dend_19 { pt3dadd( -99.2743, -129.24, -14.8508, 0.83 ) }
    dend_19 { pt3dadd( -101.849, -131.137, -14.2305, 0.28 ) }
    dend_19 { pt3dadd( -102.721, -131.78, -14.0071, 0.83 ) }
    dend_19 { pt3dadd( -107.953, -135.616, -12.628, 0.28 ) }
    dend_19 { pt3dadd( -108.512, -136.027, -12.4202, 0.83 ) }
    dend_19 { pt3dadd( -110.16, -137.246, -11.6649, 0.28 ) }
    dend_19 { pt3dadd( -111.335, -138.113, -11.0994, 0.83 ) }
    dend_19 { pt3dadd( -115.87, -141.589, -8.53434, 0.28 ) }
    dend_19 { pt3dadd( -116.782, -142.27, -7.93478, 0.83 ) }
    dend_19 { pt3dadd( -120.875, -145.212, -4.44709, 0.28 ) }
    dend_19 { pt3dadd( -121.494, -145.635, -3.89565, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 62/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -29.3157, -64.3956, -15.5743, 0.28 ) }
    dend_17 { pt3dadd( -30.068, -67.3039, -12.0074, 0.28 ) }
    dend_17 { pt3dadd( -30.3283, -68.0413, -11.2669, 0.83 ) }
    dend_17 { pt3dadd( -31.3031, -70.4844, -8.95022, 0.28 ) }
    dend_17 { pt3dadd( -31.5348, -71.0126, -8.49753, 0.55 ) }
    dend_17 { pt3dadd( -33.9747, -76.2077, -4.32225, 0.28 ) }
    dend_17 { pt3dadd( -35.537, -79.3996, -1.86692, 0.55 ) }
    dend_17 { pt3dadd( -39.1489, -86.4599, 3.77459, 0.28 ) }
    dend_17 { pt3dadd( -39.6585, -87.3532, 4.46434, 0.83 ) }
    dend_17 { pt3dadd( -41.0974, -89.5945, 6.10119, 0.28 ) }
    dend_17 { pt3dadd( -41.765, -90.5687, 6.72247, 0.83 ) }
    dend_17 { pt3dadd( -42.8684, -92.0325, 7.36347, 0.28 ) }
    dend_17 { pt3dadd( -44.5886, -94.1161, 8.07785, 1.11 ) }
    dend_17 { pt3dadd( -46.3623, -95.9387, 8.87041, 0.28 ) }
    dend_17 { pt3dadd( -47.3189, -96.9406, 9.40122, 0.83 ) }
    dend_17 { pt3dadd( -49.8709, -104.94, 16.0795, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 78/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -29.3157, -64.3956, -15.5743, 0.28 ) }
    dend_16 { pt3dadd( -29.642, -68.3031, -13.5444, 0.28 ) }
    dend_16 { pt3dadd( -29.802, -69.2725, -13.154, 0.55 ) }
    dend_16 { pt3dadd( -30.222, -71.7279, -12.2415, 0.28 ) }
    dend_16 { pt3dadd( -30.3228, -72.2248, -12.0926, 1.11 ) }
    dend_16 { pt3dadd( -31.3356, -76.9574, -10.6803, 0.28 ) }
    dend_16 { pt3dadd( -31.7185, -78.6974, -10.169, 1.11 ) }
    dend_16 { pt3dadd( -33.6369, -86.7899, -8.1109, 0.28 ) }
    dend_16 { pt3dadd( -33.7941, -87.5396, -7.9331, 0.83 ) }
    dend_16 { pt3dadd( -34.4803, -91.3016, -7.1085, 0.28 ) }
    dend_16 { pt3dadd( -34.842, -93.8873, -6.56522, 1.38 ) }
    dend_16 { pt3dadd( -35.7872, -102.886, -4.74925, 0.28 ) }
    dend_16 { pt3dadd( -35.928, -104.427, -4.41259, 1.11 ) }
    dend_16 { pt3dadd( -36.1834, -108.365, -3.53857, 0.28 ) }
    dend_16 { pt3dadd( -36.2375, -109.425, -3.31391, 0.83 ) }
    dend_16 { pt3dadd( -36.3277, -113.909, -2.40061, 0.28 ) }
    dend_16 { pt3dadd( -36.317, -115.625, -2.12722, 1.11 ) }
    dend_16 { pt3dadd( -36.1504, -119.793, -1.53576, 0.28 ) }
    dend_16 { pt3dadd( -36.0434, -121.483, -1.31391, 0.83 ) }
    dend_16 { pt3dadd( -35.6527, -125.967, -0.80018, 0.28 ) }
    dend_16 { pt3dadd( -35.5201, -126.913, -0.7402, 0.83 ) }
    dend_16 { pt3dadd( -34.4535, -131.504, -0.816392, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_16 { pt3dadd( -34.314, -131.849, -0.843624, 1.11 ) }
    dend_16 { pt3dadd( -32.6152, -134.54, -1.21517, 0.55 ) }
    dend_16 { pt3dadd( -31.9498, -135.414, -1.35184, 1.11 ) }
    dend_16 { pt3dadd( -30.9247, -136.451, -1.55509, 0.28 ) }
    dend_16 { pt3dadd( -29.7988, -137.426, -1.82483, 0.83 ) }
    dend_16 { pt3dadd( -26.0729, -139.637, -2.97247, 0.28 ) }
    dend_16 { pt3dadd( -25.5876, -139.885, -3.12178, 0.83 ) }
    dend_16 { pt3dadd( -23.8052, -149.217, -2.76552, 0.83 ) }
    dend_16 { pt3dadd( -21.7403, -158.47, -1.98476, 0.83 ) }
    dend_16 { pt3dadd( -19.1394, -167.277, 0.603922, 0.83 ) }
    dend_16 { pt3dadd( -16.0086, -176.156, 2.08388, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_65, dend_56, dend_55, dend_48, dend_39, dend_32, dend_0, dend_67, dend_66, dend_58, dend_57, dend_54, dend_49, dend_41, dend_40, dend_34, dend_33, dend_7, dend_1, dend_62, dend_59, dend_53, dend_50, dend_45, dend_42, dend_36, dend_35, dend_11, dend_8, dend_3, dend_2, dend_64, dend_63, dend_61, dend_60, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_38, dend_37, dend_23, dend_12, dend_10, dend_9, dend_6, dend_4, dend_25, dend_24, dend_22, dend_13, dend_5, dend_29, dend_26, dend_21, dend_14, dend_31, dend_30, dend_28, dend_27, dend_18, dend_15, dend_20, dend_19, dend_17, dend_16]}
    ModelViewParmSubset_2 = new SectionList()
    dend_65 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_65, dend_56, dend_55, dend_48, dend_39, dend_32, dend_0, dend_67, dend_66, dend_58, dend_57, dend_54, dend_49, dend_41, dend_40, dend_34, dend_33, dend_7, dend_1, dend_62, dend_59, dend_53, dend_50, dend_45, dend_42, dend_36, dend_35, dend_11, dend_8, dend_3, dend_2, dend_64, dend_63, dend_61, dend_60, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_38, dend_37, dend_23, dend_12, dend_10, dend_9, dend_6, dend_4, dend_25, dend_24, dend_22, dend_13, dend_5, dend_29, dend_26, dend_21, dend_14, dend_31, dend_30, dend_28, dend_27, dend_18, dend_15, dend_20, dend_19, dend_17, dend_16]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_35 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_55 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_67 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_66 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_57 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_54 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_40 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_33 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_53 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_36 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_35 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_2 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_63 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_61 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_60 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_52 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_51 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_47 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_46 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_44 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_38 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_9 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_6 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_4 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_24 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_22 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_21 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_31 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_30 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_28 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_27 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_20 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_19 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_17 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_16 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_32 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_48 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_39 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_49 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_34 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_7 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_56 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_41 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_65 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_58 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_23 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_45 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_25 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_12 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_13 OneSecGrp_SectionRef_56.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_29 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_26 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_59 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_42 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_62 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_14 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_18 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_15 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_64 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_37 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_39, dend_32, dend_0, axon_0, axon_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_7, dend_1, dend_1, axon_1, axon_1, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_11, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_32 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_7 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_55 nseg = 5
    dend_67 nseg = 7
    dend_66 nseg = 3
    dend_57 nseg = 9
    dend_54 nseg = 3
    dend_40 nseg = 7
    dend_33 nseg = 9
    dend_53 nseg = 9
    dend_50 nseg = 3
    dend_36 nseg = 3
    dend_35 nseg = 5
    dend_2 nseg = 7
    dend_63 nseg = 3
    dend_61 nseg = 5
    dend_60 nseg = 3
    dend_52 nseg = 5
    dend_51 nseg = 3
    dend_47 nseg = 11
    dend_46 nseg = 3
    dend_44 nseg = 3
    dend_38 nseg = 3
    dend_10 nseg = 3
    dend_9 nseg = 5
    dend_6 nseg = 5
    dend_4 nseg = 5
    dend_24 nseg = 15
    dend_22 nseg = 7
    dend_5 nseg = 3
    dend_21 nseg = 5
    dend_31 nseg = 9
    dend_30 nseg = 3
    dend_28 nseg = 7
    dend_27 nseg = 3
    dend_20 nseg = 9
    dend_19 nseg = 7
    dend_17 nseg = 3
    dend_16 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_LBC_aebca8458d_0_0


