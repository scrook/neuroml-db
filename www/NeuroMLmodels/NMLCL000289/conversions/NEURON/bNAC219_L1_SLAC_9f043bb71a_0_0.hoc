// Cell: bNAC219_L1_SLAC_9f043bb71a_0_0
/*
{
  "id" : "bNAC219_L1_SLAC_9f043bb71a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.29606, 0.50401, 0.0, 3.86383", "-7.40488, 0.318884, 0.0, 7.08485", "-6.51371, 0.133758, 0.0, 9.19243", "-5.62253, -0.0513684, 0.0, 10.6164", "-4.73135, -0.236494, 0.0, 12.0715", "-3.84018, -0.42162, 0.0, 13.3757", "-2.949, -0.606746, 0.0, 13.7086", "-2.05782, -0.791872, 0.0, 13.8732", "-1.16665, -0.976998, 0.0, 13.9573", "-0.275473, -1.16212, 0.0, 14.0078", "0.615704, -1.34725, 0.0, 13.4912", "1.50688, -1.53238, 0.0, 12.6275", "2.39806, -1.7175, 0.0, 11.7159", "3.28923, -1.90263, 0.0, 10.5589", "4.18041, -2.08775, 0.0, 9.29434", "5.07158, -2.27288, 0.0, 8.21169", "5.96276, -2.45801, 0.0, 6.80861", "6.85394, -2.64313, 0.0, 5.40518", "7.74511, -2.82826, 0.0, 3.94532", "8.63629, -3.01338, 0.0, 2.52721", "9.52747, -3.19851, 0.0, 1.51152" ]
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "6.44316, -2.42247, 2.73, 3.93", "11.3511, -2.94115, 3.43862, 3.93", "15.8216, -3.4136, 4.08407, 3.93" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999462115129
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "10.0032, -3.31497, -9.46, 1.23", "13.0279, -3.64268, -10.7864, 1.23", "14.4893, -3.74102, -11.5581, 1.23", "17.7006, -3.86354, -13.2398, 1.23", "19.7924, -3.92258, -14.3039, 0.98", "22.3547, -3.9824, -15.5928, 0.98", "26.7235, -4.02378, -17.6801, 0.61", "29.8875, -3.97501, -19.2896, 0.61", "31.939, -3.93686, -20.3035, 0.61", "34.793, -3.86664, -21.6277, 0.61", "34.9087, -3.86662, -21.6763, 0.61", "37.5471, -3.90696, -22.5757, 0.61", "38.9072, -3.88406, -22.8696, 0.61", "41.9244, -3.99768, -23.5138, 0.61", "41.9545, -3.99972, -23.521, 0.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999462115129
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.18684, -2.36997, -5.13, 2.21", "-8.89756, -3.21046, -7.435, 1.97", "-10.6691, -3.85165, -9.85776, 1.72", "-12.3391, -4.28581, -12.1333, 1.72", "-14.6583, -4.7316, -15.2178, 1.84", "-15.9797, -4.95295, -16.889, 1.35", "-17.0072, -5.13911, -18.142, 1.35", "-17.7896, -5.2399, -19.1193, 1.35", "-18.5906, -5.2655, -20.025, 1.35", "-19.6106, -5.23485, -21.0055, 1.35", "-21.0667, -5.21843, -22.3071, 1.35", "-22.818, -5.34828, -23.9418, 1.35", "-24.1746, -5.53908, -25.2599, 1.35", "-25.9216, -5.86662, -27.0774, 1.35", "-27.3142, -6.15359, -28.6211, 1.35", "-28.5789, -6.42197, -30.1254, 1.23", "-29.919, -6.72764, -31.7927, 1.23", "-30.761, -6.96391, -32.8581, 1.23", "-32.5221, -7.64198, -35.0182, 1.23", "-32.5221, -7.64198, -35.0182, 1.23", "-34.1559, -8.38884, -36.3525, 1.23", "-35.49, -8.94547, -37.1939, 0.98", "-37.0124, -9.52833, -37.9489, 0.61", "-38.5726, -10.1376, -38.5505, 0.61", "-40.8331, -11.0525, -39.1327, 0.61", "-42.5337, -11.7539, -39.4531, 0.61", "-43.3285, -12.0807, -39.5471, 0.61", "-43.4144, -12.1144, -39.5565, 0.61", "-44.4922, -12.5369, -39.6739, 0.61", "-46.2616, -13.2207, -39.9506, 0.61", "-47.4882, -13.7073, -40.1786, 0.61", "-49.717, -14.5624, -41.0094, 0.61", "-51.8173, -15.3659, -42.0128, 0.61", "-53.4412, -15.9713, -42.8395, 0.61", "-54.8112, -16.4568, -43.6102, 0.61", "-56.4262, -17.0161, -44.6469, 0.61", "-61.2841, -18.7491, -48.2192, 0.61", "-63.1161, -19.4343, -49.8331, 0.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999462115129,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.23684, 5.00103, 2.57, 2.09", "-7.51522, 6.34121, 2.77308, 2.09", "-8.62848, 7.44883, 2.93504, 2.09", "-10.0742, 8.88722, 3.14536, 1.84", "-11.0862, 9.89423, 3.29261, 1.84", "-12.1288, 10.9315, 3.44429, 1.84", "-13.1703, 11.9676, 3.5958, 1.84", "-13.8531, 12.5546, 3.69571, 1.35" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999462115129
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "9.52747, -3.19851, 0.0, 0.61", "24.2139, -6.24936, 0.0, 0.61", "38.9004, -9.30021, 0.0, 0.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "15.8216, -3.4136, 4.08407, 1.6", "19.4302, -4.26545, 4.28671, 1.6", "24.4814, -5.45785, 4.57036, 1.35", "27.5629, -6.18528, 4.7434, 1.35", "30.0298, -6.76762, 4.88192, 1.23", "33.1546, -7.50527, 5.05739, 1.23", "36.3597, -8.26187, 5.23737, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "15.8216, -3.4136, 4.08407, 1.6", "15.634, -1.10528, 7.5962, 1.6", "15.181, 1.85104, 12.1904, 1.6", "14.7118, 3.64986, 15.7506, 0.86", "14.3161, 5.16646, 18.7521, 0.86", "14.1021, 5.98682, 20.3757, 0.86", "13.9503, 6.5687, 21.5274, 0.86", "13.4022, 7.76622, 24.3434, 0.86", "11.6313, 10.1705, 30.9241, 0.86" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "15.8216, -3.4136, 4.08407, 1.72", "15.3759, -9.03438, 6.85878, 1.72", "15.068, -12.0883, 8.29495, 1.6", "15.0085, -12.595, 8.53652, 1.6", "14.695, -15.518, 9.97068, 1.48", "14.4871, -18.2514, 11.3519, 1.35", "14.3118, -21.5365, 13.013, 1.35", "14.1519, -24.1769, 14.4081, 1.23", "14.0309, -26.4083, 15.573, 1.23", "13.9076, -28.9137, 16.8605, 1.23", "13.7884, -31.6448, 18.3118, 0.98", "13.7268, -33.4527, 19.3001, 0.98", "13.6516, -35.5654, 20.429, 0.98", "13.5961, -36.9784, 21.1544, 0.98", "13.556, -38.1393, 21.6762, 0.98", "13.506, -39.8901, 22.3957, 0.98", "13.4889, -42.0445, 23.2782, 0.98", "13.5231, -43.4268, 23.8498, 0.98", "13.6413, -45.177, 24.5577, 0.98", "13.8415, -47.2775, 25.4636, 0.98", "14.1711, -50.0189, 26.6528, 0.98", "14.4326, -51.9259, 27.4715, 0.98", "14.594, -53.1911, 28.0715, 0.98", "14.6058, -53.3143, 28.1356, 0.98", "14.7055, -55.4071, 29.3584, 0.98" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "15.8216, -3.4136, 4.08407, 2.7", "21.8068, -4.23528, 2.37557, 2.7", "29.1925, -5.24924, 0.267292, 2.21", "36.0612, -6.19221, -1.6934, 1.72", "40.8332, -6.84735, -3.05561, 1.6", "44.8881, -7.40403, -4.21309, 1.6", "48.6282, -7.91749, -5.28071, 1.6" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "41.9545, -3.99972, -23.521, 0.49", "43.5509, -5.08047, -25.0387, 0.49", "46.2256, -6.8434, -27.6402, 0.49", "47.5036, -7.71513, -28.8458, 0.49", "50.116, -9.49697, -31.3101, 0.49", "51.8438, -10.6755, -32.94, 0.49", "53.556, -11.8434, -34.5552, 0.49", "55.8606, -13.2907, -36.6615, 0.49", "57.3681, -14.3082, -37.9296, 0.49" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "41.9545, -3.99972, -23.521, 0.61", "43.9173, -2.15706, -23.8041, 0.61", "45.9919, 0.0501269, -24.1351, 0.61", "47.7202, 1.99661, -24.4182, 0.61", "49.4412, 3.95372, -24.7559, 0.61", "50.673, 5.29499, -24.9835, 0.61", "53.0902, 7.61952, -25.3501, 0.61", "54.1005, 8.48095, -25.4887, 0.61", "54.1785, 8.53246, -25.4995, 0.61", "56.6331, 9.57002, -25.7987, 0.61", "60.6506, 10.4951, -26.3729, 0.61", "65.0147, 10.9484, -26.9995, 0.61", "67.5732, 10.9625, -27.4417, 0.61", "70.8067, 10.8154, -28.0727, 0.61", "74.5515, 10.4966, -28.9796, 0.61", "77.4811, 10.0597, -29.8034, 0.49", "80.1214, 9.54179, -30.6739, 0.49", "83.8819, 8.76668, -32.0602, 0.49", "86.0628, 8.36157, -32.9182, 0.49", "88.9918, 7.86797, -34.0781, 0.49", "91.09, 7.51898, -35.016, 0.49", "92.6979, 7.22261, -35.8501, 0.49", "92.8257, 7.19586, -35.9201, 0.49", "95.248, 6.66303, -37.2429, 0.49", "96.7963, 6.30111, -38.1386, 0.49", "100.03, 5.54833, -39.9961, 0.49", "106.62, 4.07752, -44.2555, 0.49" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-13.8531, 12.5546, 3.69571, 1.23", "-20.6659, 15.8142, -2.18429, 1.23", "-21.6792, 16.4127, -2.89266, 1.23", "-23.028, 17.2718, -3.73288, 0.98", "-24.6879, 18.4543, -4.64067, 0.98", "-26.027, 19.4775, -5.29139, 0.98", "-27.8354, 20.9099, -6.10302, 0.98", "-29.5901, 22.7309, -6.36656, 0.98", "-29.6958, 22.8461, -6.38253, 0.98", "-31.2498, 24.5444, -6.5955, 0.98", "-32.1155, 25.4528, -6.69121, 0.98", "-32.2221, 25.5679, -6.69872, 0.98", "-34.0322, 27.5558, -6.72003, 0.98", "-34.1339, 27.6723, -6.72147, 0.98", "-35.5498, 29.2359, -6.73859, 0.98", "-35.6485, 29.3372, -6.72978, 0.98", "-37.0772, 30.8722, -6.52793, 0.98", "-37.1722, 30.9795, -6.50748, 0.98", "-39.2144, 33.4219, -5.98339, 0.98", "-39.4028, 33.6486, -5.93206, 0.98", "-42.2277, 37.0639, -5.09334, 0.98", "-44.3043, 39.6091, -4.43919, 0.98", "-46.1835, 41.9563, -3.78755, 0.98", "-47.7594, 44.0018, -3.20371, 0.98" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-13.8531, 12.5546, 3.69571, 1.35", "-15.1005, 13.78, 4.7338, 1.35", "-16.1836, 15.1933, 6.28113, 1.35", "-17.2044, 16.7509, 8.33618, 1.35", "-17.981, 17.9607, 10.0487, 1.35", "-18.776, 19.1779, 11.8229, 1.35", "-21.4084, 23.0237, 17.5867, 1.35", "-22.5519, 24.7454, 20.2917, 1.35", "-23.8198, 26.5886, 23.3805, 1.35", "-24.4981, 27.4988, 25.0489, 1.35", "-25.1357, 28.3189, 26.643, 1.35", "-26.3334, 29.7001, 29.3918, 1.35", "-27.6012, 30.8539, 31.4328, 1.35", "-29.1279, 32.0128, 33.5277, 1.35", "-30.8622, 33.2643, 35.6376, 1.35" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "38.9004, -9.30021, 0.0, 0.61", "53.5869, -12.3511, 0.0, 0.61", "68.2733, -15.4019, 0.0, 0.61" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "11.6313, 10.1705, 30.9241, 0.61", "10.1949, 9.41951, 32.4322, 0.61", "9.02314, 8.8069, 33.6624, 0.49", "7.76382, 8.14848, 34.9846, 0.49", "6.90289, 7.69835, 35.8885, 0.49", "4.79658, 6.5971, 38.0999, 0.49", "0.792997, 4.50388, 42.3033, 0.49" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "11.6313, 10.1705, 30.9241, 0.86", "9.97684, 9.77555, 32.104, 0.86", "7.8743, 9.2409, 33.6696, 0.61", "6.63787, 8.95571, 34.6962, 0.61", "5.24116, 8.72065, 35.8917, 0.61", "3.50973, 8.55924, 37.3152, 0.61", "3.44995, 8.55367, 37.3644, 0.61", "2.30554, 8.46674, 38.36, 0.61", "0.136172, 8.41269, 40.1729, 0.61", "-1.50745, 8.41327, 41.6676, 0.61", "-2.81047, 8.5296, 42.8485, 0.61" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "14.7055, -55.4071, 29.3584, 0.74", "15.7239, -58.0195, 27.6783, 0.74", "16.7166, -60.2145, 26.0837, 0.74", "17.2918, -61.4677, 25.1883, 0.74", "18.4094, -63.6482, 23.5942, 0.74", "19.6287, -65.8927, 22.0454, 0.98", "20.6165, -67.711, 20.7907, 0.98", "22.1972, -70.3649, 18.7808, 0.98", "23.4534, -72.3303, 17.3298, 0.98", "25.4031, -75.1922, 15.1853, 1.23", "26.5663, -76.9219, 13.9858, 1.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "14.7055, -55.4071, 29.3584, 0.86", "13.9989, -57.1552, 30.3404, 0.86", "13.6367, -58.2117, 31.0067, 0.86", "13.3352, -59.4145, 31.7984, 0.86", "13.0165, -60.7917, 32.6963, 0.86", "12.708, -61.9904, 33.5377, 0.86", "12.4792, -62.8399, 34.1579, 0.86", "12.0143, -64.4896, 35.4524, 0.74", "11.4747, -65.9833, 36.8335, 0.74", "11.1685, -66.5548, 37.4533, 0.74", "10.443, -67.5474, 38.6536, 0.86", "10.3979, -67.5905, 38.7144, 0.86", "9.35201, -68.1902, 39.8308, 0.86", "8.28878, -68.3904, 40.6199, 0.86", "7.52195, -68.3527, 41.0686, 0.86" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "48.6282, -7.91749, -5.28071, 1.23", "50.4589, -6.25216, -7.3384, 1.23", "51.33, -5.26565, -8.28465, 1.23", "52.284, -4.14526, -9.2698, 1.11", "53.825, -2.37732, -10.9175, 1.11", "53.825, -2.37732, -10.9175, 1.11", "54.6891, -1.47223, -11.8016, 1.11", "55.8138, -0.200129, -12.9912, 1.11", "56.7837, 0.90284, -14.0277, 1.11", "58.2304, 2.39137, -15.4434, 1.11", "59.8602, 3.82319, -16.858, 0.98", "61.1453, 4.8782, -17.9809, 0.98", "61.4451, 5.09034, -18.2464, 0.98" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "48.6282, -7.91749, -5.28071, 1.11", "50.9303, -9.23222, -5.23154, 1.11", "52.9783, -10.4019, -5.18781, 1.11", "54.8897, -11.4934, -5.14699, 1.11", "56.625, -12.4845, -5.10993, 1.11", "59.1399, -13.9207, -5.05622, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-47.7594, 44.0018, -3.20371, 1.35", "-48.3123, 45.8456, -6.36297, 1.35", "-48.666, 46.73, -8.09453, 0.98", "-49.1929, 47.6458, -10.0112, 0.86", "-49.724, 48.5211, -11.8669, 0.86", "-51.0888, 50.6082, -16.5265, 0.86", "-51.9477, 51.8636, -19.4503, 0.86", "-52.9849, 53.3597, -23.0788, 0.74", "-53.7591, 54.4459, -25.9581, 0.61", "-54.366, 55.3415, -28.4962, 0.61", "-54.7643, 55.9557, -30.6967, 0.61", "-55.0387, 56.6047, -33.1569, 0.61", "-55.2145, 57.0309, -35.1327, 0.61", "-55.3189, 57.3827, -37.8029, 0.61", "-55.3527, 57.5529, -39.7468, 0.61", "-55.5722, 57.88, -45.1746, 0.61", "-55.6724, 57.9613, -46.6292, 0.61", "-56.275, 58.2027, -52.3264, 0.61", "-57.0799, 58.406, -57.6462, 0.61", "-57.6224, 58.4989, -60.2471, 0.61", "-58.1128, 58.5791, -62.188, 0.61", "-59.3104, 58.8413, -66.1628, 0.61", "-60.3598, 59.0761, -69.2608, 0.61", "-60.7338, 59.2152, -70.2522, 0.61", "-62.5593, 60.2779, -74.625, 0.61", "-62.5815, 60.2967, -74.6815, 0.61", "-62.9305, 60.7658, -75.7383, 0.61", "-63.4313, 61.6922, -77.3016, 0.61", "-65.1132, 65.1588, -82.2866, 0.61", "-65.6847, 66.2691, -83.86, 0.61", "-66.4622, 68.0298, -86.1079, 0.61", "-67.3517, 69.976, -88.6411, 0.61", "-68.0434, 71.3957, -90.5542, 0.61", "-68.6591, 72.4395, -91.9642, 0.61", "-69.9429, 74.1311, -93.7436, 0.61" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-47.7594, 44.0018, -3.20371, 0.86", "-50.0639, 46.6308, -1.21183, 0.86", "-52.3067, 49.0775, 0.718743, 0.86", "-53.2455, 50.0539, 1.50932, 0.86", "-55.604, 52.4977, 3.47406, 0.86", "-56.67, 53.6053, 4.31975, 0.86", "-58.5997, 55.6214, 5.82122, 0.61", "-60.3766, 57.4315, 7.09449, 0.61", "-62.1806, 59.2146, 8.36516, 0.61", "-63.8137, 60.8278, 9.56992, 0.61", "-65.1895, 62.216, 10.6194, 0.61", "-66.5103, 63.5895, 11.6152, 0.61", "-67.8408, 64.884, 12.4494, 0.61" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-30.8622, 33.2643, 35.6376, 0.61", "-30.7402, 32.6081, 38.2088, 0.61", "-30.6355, 32.2937, 40.6353, 0.61", "-30.5386, 32.2196, 42.1144, 0.61", "-30.4856, 32.1426, 44.0147, 0.61", "-30.5708, 32.0275, 46.6292, 0.61", "-30.9379, 31.7871, 50.1856, 0.61", "-31.1081, 31.6945, 52.5685, 0.61", "-31.2682, 31.7358, 54.3341, 0.61", "-31.5036, 31.8189, 56.1793, 0.61", "-32.0232, 31.8798, 58.5445, 0.61", "-33.1155, 31.7918, 61.8019, 0.61" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-30.8622, 33.2643, 35.6376, 1.35", "-31.7039, 35.3102, 36.345, 1.35", "-32.931, 38.2926, 37.3762, 1.23", "-34.0383, 40.984, 38.3068, 0.86", "-34.7825, 42.7927, 38.9322, 0.86" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "26.5663, -76.9219, 13.9858, 0.49", "29.728, -77.0066, 14.3239, 0.49", "32.5662, -77.0262, 14.6819, 0.49", "35.3982, -77.0997, 14.9873, 0.49", "37.2372, -77.217, 15.1986, 0.49", "41.963, -77.6641, 15.7162, 0.49", "44.3244, -77.9993, 15.9914, 0.49", "45.5629, -78.2504, 16.1462, 0.49", "49.2882, -79.3508, 16.6725, 0.49", "52.6499, -80.5791, 17.199, 0.49", "54.1446, -81.2672, 17.45, 0.49", "57.1161, -82.9166, 18.0127, 0.49", "59.951, -84.5858, 18.6159, 0.49", "62.6103, -86.1863, 19.2646, 0.49", "64.3432, -87.2492, 19.7674, 0.49", "65.8423, -88.1793, 20.2286, 0.49", "67.6336, -89.2712, 20.8317, 0.49", "69.8581, -90.5473, 21.5654, 0.49", "70.8247, -91.0839, 21.8906, 0.49", "71.1061, -91.246, 21.9774, 0.49", "72.6832, -92.2039, 22.3715, 0.49", "72.8864, -92.3146, 22.4059, 0.49", "74.4916, -93.078, 22.5513, 0.49", "74.599, -93.1169, 22.5477, 0.49", "76.6104, -93.7821, 22.44, 0.49", "78.6016, -94.3751, 22.3042, 0.49", "81.6303, -95.1431, 22.0381, 0.49", "84.2645, -95.7703, 21.7881, 0.49", "87.841, -96.5154, 21.4178, 0.49" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "26.5663, -76.9219, 13.9858, 1.11", "26.9318, -79.4924, 12.1482, 1.11", "27.1499, -81.872, 10.6879, 1.11", "27.2532, -84.6566, 9.18475, 0.98", "27.2819, -87.8133, 7.6446, 0.98", "27.2505, -90.1877, 6.56635, 0.86", "27.1564, -93.4606, 5.12597, 0.74", "26.935, -96.5349, 3.86027, 0.74", "26.5545, -100.824, 2.25944, 0.61", "26.399, -102.774, 1.54749, 0.61", "26.1984, -106.211, 0.172365, 0.61", "26.1138, -108.574, -0.878442, 0.61", "26.0744, -110.719, -1.90059, 0.61", "26.0767, -114.115, -3.63808, 0.61", "26.1741, -118.022, -5.66313, 0.61", "26.3307, -122.552, -7.96972, 0.61", "26.4469, -125.072, -9.2508, 0.61", "26.588, -127.748, -10.5841, 0.61", "26.7028, -129.901, -11.6287, 0.61", "26.8028, -133.089, -13.1708, 0.61", "26.7917, -134.772, -13.8169, 0.61" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "7.52195, -68.3527, 41.0686, 0.86", "4.79984, -65.3992, 45.2037, 0.86", "3.17989, -63.6416, 47.6645, 0.86", "1.48055, -61.7978, 50.2459, 0.74", "-0.00195056, -60.1893, 52.498, 0.74" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "7.52195, -68.3527, 41.0686, 0.86", "6.85109, -70.4504, 42.1197, 0.86", "6.80671, -70.5546, 42.1657, 0.86", "6.03794, -71.6887, 42.6537, 0.74", "5.47208, -72.4053, 42.9577, 0.74", "4.84296, -73.0706, 43.2346, 0.74", "4.75732, -73.1492, 43.2657, 0.74", "3.7682, -73.9518, 43.4855, 0.74", "2.07969, -75.2723, 43.8426, 0.74", "2.05685, -75.2896, 43.8472, 0.74", "0.998091, -76.1551, 44.061, 0.74", "-0.137172, -77.1471, 44.2885, 0.74", "-0.955353, -77.841, 44.4384, 0.61", "-2.00517, -78.7421, 44.6183, 0.61", "-3.30953, -79.8103, 44.8074, 0.61", "-4.14053, -80.4009, 44.9131, 0.61", "-5.35879, -81.1233, 45.0419, 0.61", "-7.55775, -82.0146, 45.2044, 0.61", "-7.67033, -82.0494, 45.211, 0.61", "-8.58507, -82.2409, 45.2492, 0.61", "-9.90774, -82.3986, 45.2846, 0.61", "-11.4078, -82.4966, 45.3101, 0.61", "-13.9929, -82.6327, 45.3437, 0.61" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "61.4451, 5.09034, -18.2464, 0.49", "61.9082, 5.49387, -20.3764, 0.49", "62.509, 5.66319, -22.8459, 0.49", "63.0009, 5.59689, -24.8788, 0.49", "63.3269, 5.49344, -26.1932, 0.49", "63.7252, 5.33792, -27.8105, 0.49", "65.111, 4.75253, -33.0804, 0.49", "65.6891, 4.39025, -35.2181, 0.49", "66.4705, 3.80116, -37.6862, 0.49", "67.7394, 2.67832, -41.4116, 0.49", "68.5685, 1.91111, -43.6798, 0.49", "69.6251, 0.92391, -46.2933, 0.49", "70.64, 0.00962618, -48.4303, 0.49", "72.4929, -1.58421, -51.8984, 0.49", "73.5327, -2.45002, -53.5585, 0.49", "74.247, -3.08813, -54.5572, 0.49", "74.5189, -3.33672, -54.8933, 0.49", "76.1323, -4.82788, -56.6829, 0.49", "76.3905, -5.03533, -56.9174, 0.49", "76.8529, -5.39981, -57.2896, 0.49" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "61.4451, 5.09034, -18.2464, 0.98", "62.1173, 5.81302, -18.7464, 0.98", "62.6776, 6.42997, -19.1669, 0.86", "63.3386, 7.17444, -19.6952, 0.86", "64.0935, 8.0038, -20.3492, 0.61", "64.1257, 8.03829, -20.3798, 0.61", "65.0917, 9.00884, -21.315, 0.61", "66.0844, 9.99863, -22.3198, 0.61", "66.6345, 10.5166, -22.8869, 0.61", "67.7279, 11.469, -23.9437, 0.61", "68.5162, 12.0865, -24.6534, 0.61", "69.3093, 12.6673, -25.3145, 0.61", "70.1159, 13.2133, -25.9089, 0.61", "70.9954, 13.7707, -26.4792, 0.61", "71.771, 14.2981, -26.9122, 0.61", "72.3834, 14.7649, -27.206, 0.61", "73.2205, 15.4624, -27.591, 0.61", "74.0478, 16.204, -27.978, 0.61", "74.9973, 17.1188, -28.4672, 0.61", "76.0095, 18.2163, -29.0474, 0.61", "76.8873, 19.2327, -29.597, 0.61", "77.2535, 19.676, -29.8317, 0.61", "77.7242, 20.2627, -30.1274, 0.61", "78.3264, 21.0403, -30.4693, 0.61", "78.3991, 21.1408, -30.5056, 0.61", "78.8537, 21.7486, -30.6723, 0.61", "79.4674, 22.6276, -30.829, 0.61", "80.0706, 23.5383, -30.9397, 0.61", "80.7542, 24.592, -31.0161, 0.61", "81.3804, 25.541, -31.0291, 0.61", "82.0217, 26.5221, -31.0279, 0.61", "82.5665, 27.3907, -31.0184, 0.61", "82.9772, 28.0494, -31.0057, 0.61", "83.5712, 28.9589, -30.9791, 0.61", "84.0099, 29.6072, -30.9847, 0.61", "84.3554, 30.0754, -30.9522, 0.61" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "59.1399, -13.9207, -5.05622, 0.61", "59.9697, -12.3701, -6.30614, 0.61", "60.5406, -11.3033, -7.16607, 0.61", "61.262, -9.95526, -8.25261, 0.61", "62.0722, -8.44132, -9.47295, 0.61" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "59.1399, -13.9207, -5.05622, 1.11", "60.4022, -15.7298, -6.05398, 1.11", "61.5741, -16.9657, -6.84634, 1.11", "62.7139, -17.9887, -7.63965, 1.11", "63.7985, -18.8983, -8.4062, 1.11", "65.5891, -20.4061, -9.77206, 1.11", "66.9665, -21.566, -10.8228, 1.11", "68.9035, -22.9797, -12.3376, 1.11", "70.6571, -24.0818, -13.653, 1.11", "70.7082, -24.1093, -13.6896, 1.11", "72.6185, -25.0461, -15.0676, 1.11" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-67.8408, 64.884, 12.4494, 0.61", "-68.2258, 66.3378, 13.3682, 0.61", "-68.7992, 68.5034, 14.7369, 0.61", "-69.1231, 69.7264, 15.5099, 0.49", "-69.4877, 71.1034, 16.3802, 0.49", "-69.7821, 72.215, 17.0828, 0.49", "-70.3149, 74.2272, 18.3545, 0.49" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-67.8408, 64.884, 12.4494, 0.61", "-69.555, 65.6983, 13.2932, 0.61", "-69.6098, 65.7239, 13.3173, 0.61", "-72.0749, 66.8545, 14.3446, 0.61", "-73.4158, 67.3829, 14.873, 0.61", "-74.5182, 67.7332, 15.2905, 0.61", "-75.9082, 67.983, 15.791, 0.61", "-77.1997, 68.0858, 16.2288, 0.61", "-77.3089, 68.0823, 16.2616, 0.61", "-79.1819, 67.7555, 16.7541, 0.61", "-81.096, 67.2671, 17.2062, 0.61", "-83.7929, 66.5121, 17.7391, 0.61", "-85.847, 65.9719, 18.1007, 0.61", "-87.3256, 65.6464, 18.3605, 0.61", "-89.7444, 65.2831, 18.7644, 0.61", "-91.621, 65.0578, 19.038, 0.61", "-93.6608, 64.9139, 19.2876, 0.61", "-95.5547, 64.9756, 19.4871, 0.61", "-96.7008, 65.0595, 19.5887, 0.61", "-98.0325, 65.3645, 19.7424, 0.61" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-34.7825, 42.7927, 38.9322, 0.61", "-36.7482, 42.4409, 40.5256, 0.61", "-39.6869, 41.9406, 42.8817, 0.61", "-44.7978, 41.1012, 46.8034, 0.61", "-48.1201, 40.5347, 49.2022, 0.61", "-50.7215, 40.081, 51.0133, 0.61", "-51.6297, 39.9252, 51.6798, 0.61", "-54.0118, 39.5035, 53.4025, 0.61", "-55.1287, 39.3227, 54.2623, 0.61", "-56.4964, 39.1365, 55.0996, 0.61", "-56.5641, 39.1261, 55.1444, 0.61", "-60.6155, 38.3727, 58.0315, 0.61" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-34.7825, 42.7927, 38.9322, 0.74", "-34.3601, 44.7878, 39.3116, 0.74", "-34.1602, 46.6027, 39.6211, 0.74", "-34.0718, 47.6356, 39.7908, 0.74", "-33.9639, 48.7028, 40.0209, 0.74", "-33.932, 49.0016, 40.092, 0.74", "-33.7473, 50.96, 40.5702, 0.74", "-33.6246, 52.6797, 41.0007, 0.74", "-33.5277, 54.5423, 41.4916, 0.61", "-33.4093, 57.5311, 42.2835, 0.61", "-33.4085, 57.6057, 42.3066, 0.61", "-33.4282, 59.6431, 42.9749, 0.61", "-33.4934, 61.859, 43.7202, 0.61", "-33.6485, 64.4346, 44.5936, 0.61", "-33.8184, 66.676, 45.5204, 0.61", "-33.9773, 70.5214, 47.3856, 0.61", "-34.0463, 72.3196, 48.29, 0.61", "-34.1147, 74.3671, 49.386, 0.61", "-34.2604, 79.0973, 52.079, 0.61", "-34.3243, 84.3716, 55.2673, 0.61", "-34.2583, 88.8924, 58.2063, 0.61" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-13.9929, -82.6327, 45.3437, 0.37", "-16.1612, -85.5053, 46.9966, 0.37", "-16.643, -86.1729, 47.3643, 0.37", "-17.2291, -87.0418, 47.8166, 0.37", "-18.2609, -88.7506, 48.7093, 0.37", "-18.8914, -89.8747, 49.296, 0.37", "-19.2812, -90.6095, 49.6679, 0.37", "-19.3279, -90.7185, 49.7115, 0.37", "-19.5874, -91.316, 49.9588, 0.37", "-20.1707, -93.06, 50.6104, 0.37", "-20.206, -93.1674, 50.6469, 0.37", "-20.741, -94.5957, 51.0899, 0.37", "-21.2054, -95.6013, 51.3921, 0.37", "-21.8287, -96.6977, 51.763, 0.37", "-23.2132, -98.665, 52.4949, 0.37", "-24.4702, -100.324, 53.0917, 0.37", "-24.8559, -100.809, 53.276, 0.37", "-26.0549, -102.199, 53.8597, 0.37", "-27.853, -104.079, 54.7435, 0.37", "-28.7278, -104.918, 55.1878, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-13.9929, -82.6327, 45.3437, 0.61", "-16.1625, -83.3704, 45.9245, 0.61", "-18.7027, -84.2211, 46.6264, 0.61", "-20.7248, -84.8272, 47.2084, 0.37", "-22.8366, -85.4566, 47.8682, 0.37", "-24.9434, -86.1056, 48.5584, 0.37", "-27.5071, -86.9617, 49.427, 0.37", "-30.1247, -87.9541, 50.3467, 0.37", "-32.5999, -89.0085, 51.3229, 0.37", "-34.9428, -90.183, 52.4116, 0.37", "-36.33, -90.9748, 53.1788, 0.37", "-37.813, -91.8766, 54.15, 0.37", "-39.5068, -92.9336, 55.4325, 0.37", "-40.9004, -93.8096, 56.6226, 0.37", "-41.9457, -94.521, 57.6167, 0.37", "-42.792, -95.0515, 58.4921, 0.37", "-44.0923, -95.7165, 59.937, 0.37", "-45.9186, -96.2699, 62.0305, 0.37", "-46.5965, -96.3095, 62.7706, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "84.3554, 30.0754, -30.9522, 0.49", "86.9265, 34.6692, -27.8294, 0.49", "87.6643, 36.0133, -26.9687, 0.49", "89.03, 38.5576, -25.4007, 0.49", "89.5635, 39.5954, -24.8126, 0.49", "90.8272, 42.1158, -23.5499, 0.49", "91.9514, 44.5094, -22.4928, 0.25", "92.8813, 46.7554, -21.8176, 0.25", "93.5927, 48.5937, -21.3577, 0.25", "94.2046, 50.3472, -21.0353, 0.25", "94.9692, 52.722, -20.6678, 0.25", "95.9355, 55.9151, -20.3785, 0.25", "96.8653, 59.1322, -20.2508, 0.25", "96.9508, 59.4505, -20.2489, 0.25", "97.6458, 62.14, -20.2916, 0.25" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "84.3554, 30.0754, -30.9522, 0.49", "87.3465, 30.006, -30.875, 0.49", "89.3529, 29.9247, -30.8713, 0.49", "90.8966, 29.8705, -30.8999, 0.49", "91.302, 29.8584, -30.9121, 0.49", "93.6946, 29.7673, -31.0689, 0.49", "95.682, 29.6605, -31.2407, 0.49", "95.7788, 29.6507, -31.2575, 0.49", "96.9067, 29.4973, -31.4673, 0.49", "97.0484, 29.4723, -31.494, 0.49", "98.8798, 29.1552, -31.8242, 0.49", "100.345, 28.8957, -32.0382, 0.49", "100.829, 28.8258, -32.1101, 0.49", "101.575, 28.7298, -32.213, 0.49", "101.666, 28.7228, -32.2245, 0.49", "104.02, 28.692, -32.4861, 0.49", "104.415, 28.7304, -32.523, 0.49", "105.106, 28.8796, -32.6394, 0.49", "105.247, 28.9213, -32.6698, 0.49", "106.992, 29.5066, -33.0976, 0.49", "107.092, 29.5414, -33.1239, 0.49", "108.184, 29.9868, -33.4397, 0.49", "110.195, 30.9086, -34.0267, 0.49", "110.669, 31.1436, -34.1642, 0.49", "111.979, 31.7396, -34.5068, 0.49", "112.072, 31.7735, -34.5271, 0.49", "114.258, 32.4006, -34.9178, 0.49", "115.968, 32.7815, -35.1636, 0.49", "117.211, 32.985, -35.3263, 0.49", "119.663, 33.3283, -35.6694, 0.49", "122.209, 33.6906, -36.0564, 0.49", "123.972, 33.9428, -36.339, 0.49", "125.114, 34.0856, -36.5278, 0.49", "126.68, 34.3322, -36.8121, 0.49", "128.242, 34.6781, -37.1331, 0.49", "129.28, 35.0779, -37.4226, 0.49", "130.696, 35.9495, -37.9439, 0.49", "130.794, 36.0365, -37.9885, 0.49", "131.555, 36.9877, -38.4449, 0.49", "131.621, 37.1007, -38.4947, 0.49", "132.356, 38.7229, -39.1979, 0.49", "132.955, 40.2602, -39.8474, 0.49", "133.551, 41.9083, -40.5053, 0.49", "134.335, 44.1685, -41.3991, 0.49", "134.88, 45.8454, -42.0513, 0.49", "135.255, 47.0336, -42.4971, 0.49", "135.678, 48.4416, -42.9821, 0.49", "136.088, 49.7661, -43.4392, 0.49" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "72.6185, -25.0461, -15.0676, 0.86", "73.5109, -29.789, -17.6576, 0.86", "73.9572, -32.0051, -18.9327, 0.74", "74.2907, -33.6165, -19.9148, 0.74", "74.6138, -35.2001, -20.9125, 0.74", "75.0337, -37.4814, -22.3882, 0.61", "75.3249, -39.3225, -23.6242, 0.61", "75.5471, -41.0319, -24.9032, 0.61", "75.6793, -42.5148, -26.1914, 0.61", "75.8135, -44.2629, -27.7798, 0.61", "75.9506, -46.1124, -29.5056, 0.61", "76.0419, -47.7964, -31.0768, 0.61", "76.1231, -51.6172, -34.7041, 0.61", "76.1414, -54.1899, -37.2098, 0.61", "76.1417, -55.4024, -38.4189, 0.61" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "72.6185, -25.0461, -15.0676, 0.86", "76.1271, -25.7562, -17.3756, 0.86", "77.2873, -26.0961, -18.0807, 0.86", "79.1688, -26.7195, -19.1957, 0.86", "80.5341, -27.2981, -20.0338, 0.74", "80.6117, -27.3401, -20.0827, 0.74", "81.5047, -27.9305, -20.6466, 0.74", "83.5203, -29.7512, -21.5828, 0.74", "83.6447, -29.8931, -21.6314, 0.74", "85.1126, -31.8891, -22.0945, 0.74", "86.1726, -33.4906, -22.3721, 0.74", "87.0377, -34.8848, -22.525, 0.74", "88.2168, -36.9843, -22.5835, 0.61", "89.1251, -38.7754, -22.4461, 0.61", "89.6735, -39.9009, -22.3036, 0.61", "89.7165, -39.9923, -22.2854, 0.61", "90.2354, -41.1171, -22.0346, 0.61", "90.9178, -42.6777, -21.7017, 0.61", "91.888, -44.8423, -21.2471, 0.61", "91.9281, -44.9255, -21.2278, 0.61", "92.7521, -46.5321, -20.8311, 0.61", "92.7981, -46.6116, -20.8108, 0.61", "93.8635, -48.2571, -20.3711, 0.61", "95.5369, -50.5966, -19.7337, 0.61", "95.5727, -50.6413, -19.7219, 0.61", "96.541, -51.7224, -19.5375, 0.61", "97.9237, -53.0999, -19.3992, 0.61", "98.7097, -53.8339, -19.3805, 0.61", "100.02, -54.9664, -19.4245, 0.61", "101.868, -56.4645, -19.5539, 0.61", "105.272, -59.1084, -19.8233, 0.61", "107.436, -60.6386, -20.0125, 0.61", "109.65, -62.1089, -20.2063, 0.61", "110.861, -62.8538, -20.3051, 0.61", "113.082, -64.0924, -20.4596, 0.61", "113.18, -64.1409, -20.4633, 0.61", "115.862, -65.2863, -20.4291, 0.61", "117.559, -65.9176, -20.3908, 0.61", "119.268, -66.4806, -20.3215, 0.61", "120.709, -66.9288, -20.2329, 0.61", "122.384, -67.4564, -20.1027, 0.61", "123.718, -67.8781, -19.9331, 0.61", "123.813, -67.9082, -19.9173, 0.61", "125.827, -68.5222, -19.5506, 0.61", "129.208, -69.5845, -18.8776, 0.61", "132.028, -70.4007, -18.2766, 0.61", "134.981, -71.1568, -17.6599, 0.61", "135.068, -71.1742, -17.6396, 0.61", "137.089, -71.4765, -17.1433, 0.61", "137.186, -71.4848, -17.1182, 0.61", "139.628, -71.4718, -16.5378, 0.61", "142.063, -71.2344, -15.9592, 0.61", "144.073, -70.9342, -15.5006, 0.61", "145.509, -70.6728, -15.1724, 0.61", "145.597, -70.6553, -15.1499, 0.61", "148.32, -70.1237, -14.4218, 0.61", "151.444, -69.5134, -13.433, 0.61", "153.467, -69.0964, -12.5839, 0.61", "154.844, -68.7675, -11.9191, 0.61", "157.413, -68.0437, -10.5101, 0.61", "157.46, -68.0291, -10.4825, 0.61", "160.456, -67.0452, -8.64731, 0.61", "163.78, -65.8967, -6.59595, 0.37", "168.381, -64.2128, -3.83584, 0.37", "170.92, -63.2089, -2.31854, 0.37", "173.479, -62.1082, -0.878351, 0.37", "174.99, -61.4345, -0.0833721, 0.37", "176.942, -60.4841, 0.868586, 0.37", "178.765, -59.5231, 1.66982, 0.37", "180.306, -58.6725, 2.38964, 0.37", "181.563, -57.9301, 3.04342, 0.37", "181.639, -57.8805, 3.08709, 0.37", "184.662, -55.8318, 4.60415, 0.37", "185.713, -55.0971, 5.07319, 0.37", "187.566, -53.7699, 5.66163, 0.37", "190.237, -51.6168, 5.97801, 0.37", "191.0, -50.9137, 5.93162, 0.37", "193.446, -48.4751, 5.35, 0.37", "193.514, -48.4029, 5.31914, 0.37", "195.558, -45.9796, 4.14821, 0.37", "197.172, -43.8292, 3.08992, 0.37", "198.414, -42.1244, 2.34029, 0.37", "198.8, -41.611, 2.20312, 0.37", "199.732, -40.4864, 2.08625, 0.37", "200.992, -39.1333, 2.12306, 0.37", "203.197, -37.0683, 2.53515, 0.37", "204.936, -35.6421, 3.12639, 0.37", "206.97, -34.1458, 3.97693, 0.37", "208.679, -32.9653, 4.7681, 0.37", "210.527, -31.7199, 5.69681, 0.37", "212.261, -30.531, 6.59529, 0.37", "215.512, -28.1238, 8.25139, 0.37", "216.92, -26.943, 8.92118, 0.37", "218.246, -25.7358, 9.47679, 0.37", "219.891, -24.144, 10.0764, 0.37", "221.456, -22.7103, 10.4661, 0.37", "222.986, -21.4448, 10.691, 0.37", "224.089, -20.7028, 10.6833, 0.37", "226.05, -19.7996, 10.616, 0.37", "227.355, -19.5268, 10.54, 0.37", "229.216, -19.4913, 10.426, 0.37", "230.571, -19.6269, 10.3568, 0.37", "232.734, -19.9892, 10.2485, 0.37", "234.905, -20.4105, 10.1062, 0.37", "236.697, -20.7872, 9.95596, 0.37", "238.566, -21.1493, 9.79482, 0.37", "240.124, -21.4226, 9.66315, 0.37", "242.068, -21.6854, 9.50513, 0.37", "244.413, -21.9287, 9.34697, 0.37", "244.547, -21.9353, 9.33323, 0.37", "245.54, -21.9709, 9.21025, 0.37", "246.923, -22.0093, 9.02151, 0.37", "247.856, -22.0505, 8.89577, 0.37", "249.455, -22.1326, 8.69071, 0.37", "251.218, -22.2525, 8.48927, 0.37", "252.509, -22.3769, 8.35869, 0.37", "253.995, -22.5596, 8.22367, 0.37", "255.98, -22.8408, 8.06931, 0.37", "257.317, -23.0289, 7.98494, 0.37", "258.226, -23.1645, 7.9446, 0.37", "260.195, -23.4723, 7.90086, 0.37", "260.302, -23.4896, 7.89604, 0.37", "262.266, -23.8514, 7.77359, 0.37", "264.755, -24.3281, 7.58067, 0.37", "265.84, -24.585, 7.49853, 0.37", "266.618, -24.7859, 7.41349, 0.37", "268.169, -25.1927, 7.20898, 0.37", "269.439, -25.5027, 7.02716, 0.37", "270.62, -25.7234, 6.83905, 0.37", "272.737, -26.0466, 6.36277, 0.37", "275.024, -26.2563, 5.70574, 0.37", "276.811, -26.3999, 5.06204, 0.37", "278.222, -26.4723, 4.48188, 0.37", "280.039, -26.5329, 3.53445, 0.37", "282.393, -26.6133, 2.13243, 0.37", "284.382, -26.6297, 0.773217, 0.37", "286.037, -26.6549, -0.453445, 0.37", "286.922, -26.6972, -1.16601, 0.37", "289.051, -26.8461, -2.9532, 0.37", "290.196, -26.9417, -3.92151, 0.37", "291.648, -27.0182, -5.09141, 0.37", "293.187, -27.0468, -6.30027, 0.37", "295.239, -26.9589, -7.75714, 0.37", "297.661, -26.8677, -9.22616, 0.37", "297.711, -26.8652, -9.25165, 0.37", "299.545, -26.7184, -9.96241, 0.37", "300.649, -26.5885, -10.1719, 0.37", "304.054, -26.02, -10.4176, 0.37", "306.424, -25.4642, -10.1692, 0.37", "306.47, -25.452, -10.1594, 0.37", "309.972, -24.4815, -9.22273, 0.37", "312.953, -23.5964, -8.23383, 0.37", "316.742, -22.4289, -6.78182, 0.37", "320.748, -21.1154, -5.02743, 0.37", "321.191, -20.9628, -4.84406, 0.37", "321.547, -20.857, -4.69879, 0.37", "322.07, -20.7314, -4.48356, 0.37", "323.668, -20.426, -3.93763, 0.37", "324.329, -20.3236, -3.70891, 0.37", "325.787, -20.1218, -3.46165, 0.37", "326.832, -19.922, -3.28639, 0.37", "328.553, -19.5433, -3.00003, 0.37", "329.497, -19.2872, -2.80094, 0.37", "329.687, -19.2197, -2.74455, 0.37", "331.489, -18.3617, -2.07911, 0.37", "331.93, -18.1233, -1.87277, 0.37", "332.082, -18.0286, -1.78171, 0.37", "334.2, -16.7024, -0.33975, 0.37", "335.88, -15.6285, 1.01, 0.37", "337.623, -14.481, 2.51593, 0.37", "338.998, -13.5098, 3.77714, 0.37", "340.756, -12.2416, 5.45127, 0.37", "341.305, -11.8307, 5.97646, 0.37", "343.014, -10.4386, 7.72713, 0.37", "343.611, -9.94616, 8.36037, 0.37", "344.26, -9.41356, 9.07582, 0.37", "345.791, -8.07352, 10.641, 0.37", "346.423, -7.52508, 11.2077, 0.37", "348.084, -5.88465, 12.7253, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_15", "dend_12", "dend_11", "dend_0", "dend_39", "dend_36", "dend_27", "dend_16", "dend_14", "dend_13", "dend_6", "dend_1", "dend_38", "dend_37", "dend_33", "dend_28", "dend_22", "dend_17", "dend_10", "dend_7", "dend_5", "dend_2", "dend_35", "dend_34", "dend_32", "dend_29", "dend_26", "dend_23", "dend_21", "dend_18", "dend_9", "dend_8", "dend_4", "dend_3", "dend_31", "dend_30", "dend_25", "dend_24", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_15", "dend_12", "dend_11", "dend_0", "dend_39", "dend_36", "dend_27", "dend_16", "dend_14", "dend_13", "dend_6", "dend_1", "dend_38", "dend_37", "dend_33", "dend_28", "dend_22", "dend_17", "dend_10", "dend_7", "dend_5", "dend_2", "dend_35", "dend_34", "dend_32", "dend_29", "dend_26", "dend_23", "dend_21", "dend_18", "dend_9", "dend_8", "dend_4", "dend_3", "dend_31", "dend_30", "dend_25", "dend_24", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L1_SLAC_9f043bb71a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_15
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_15
create dend_36
public dend_36
// Section: dend_27, id: dend_27, parent: dend_15
create dend_27
public dend_27
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_15, dend_12, dend_11, dend_0, dend_39, dend_36, dend_27, dend_16, dend_14, dend_13, dend_6, dend_1, dend_38, dend_37, dend_33, dend_28, dend_22, dend_17, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_32, dend_29, dend_26, dend_23, dend_21, dend_18, dend_9, dend_8, dend_4, dend_3, dend_31, dend_30, dend_25, dend_24, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_15, dend_12, dend_11, dend_0, dend_39, dend_36, dend_27, dend_16, dend_14, dend_13, dend_6, dend_1, dend_38, dend_37, dend_33, dend_28, dend_22, dend_17, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_32, dend_29, dend_26, dend_23, dend_21, dend_18, dend_9, dend_8, dend_4, dend_3, dend_31, dend_30, dend_25, dend_24, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_38
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_15(0), soma_0(0.4999999462115129)
    connect dend_12(0), soma_0(0.4999999462115129)
    connect dend_11(0), soma_0(0.4999999462115129)
    connect dend_0(0), soma_0(0.4999999462115129)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_15(1.0)
    connect dend_36(0), dend_15(1.0)
    connect dend_27(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.29606, 0.50401, 0.0, 3.86383 ) }
    soma_0 { pt3dadd( -7.40488, 0.318884, 0.0, 7.08485 ) }
    soma_0 { pt3dadd( -6.51371, 0.133758, 0.0, 9.19243 ) }
    soma_0 { pt3dadd( -5.62253, -0.0513684, 0.0, 10.6164 ) }
    soma_0 { pt3dadd( -4.73135, -0.236494, 0.0, 12.0715 ) }
    soma_0 { pt3dadd( -3.84018, -0.42162, 0.0, 13.3757 ) }
    soma_0 { pt3dadd( -2.949, -0.606746, 0.0, 13.7086 ) }
    soma_0 { pt3dadd( -2.05782, -0.791872, 0.0, 13.8732 ) }
    soma_0 { pt3dadd( -1.16665, -0.976998, 0.0, 13.9573 ) }
    soma_0 { pt3dadd( -0.275473, -1.16212, 0.0, 14.0078 ) }
    soma_0 { pt3dadd( 0.615704, -1.34725, 0.0, 13.4912 ) }
    soma_0 { pt3dadd( 1.50688, -1.53238, 0.0, 12.6275 ) }
    soma_0 { pt3dadd( 2.39806, -1.7175, 0.0, 11.7159 ) }
    soma_0 { pt3dadd( 3.28923, -1.90263, 0.0, 10.5589 ) }
    soma_0 { pt3dadd( 4.18041, -2.08775, 0.0, 9.29434 ) }
    soma_0 { pt3dadd( 5.07158, -2.27288, 0.0, 8.21169 ) }
    soma_0 { pt3dadd( 5.96276, -2.45801, 0.0, 6.80861 ) }
    soma_0 { pt3dadd( 6.85394, -2.64313, 0.0, 5.40518 ) }
    soma_0 { pt3dadd( 7.74511, -2.82826, 0.0, 3.94532 ) }
    soma_0 { pt3dadd( 8.63629, -3.01338, 0.0, 2.52721 ) }
    soma_0 { pt3dadd( 9.52747, -3.19851, 0.0, 1.51152 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 21/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 6.44316, -2.42247, 2.73, 3.93 ) }
    dend_15 { pt3dadd( 11.3511, -2.94115, 3.43862, 3.93 ) }
    dend_15 { pt3dadd( 15.8216, -3.4136, 4.08407, 3.93 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 24/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 10.0032, -3.31497, -9.46, 1.23 ) }
    dend_12 { pt3dadd( 13.0279, -3.64268, -10.7864, 1.23 ) }
    dend_12 { pt3dadd( 14.4893, -3.74102, -11.5581, 1.23 ) }
    dend_12 { pt3dadd( 17.7006, -3.86354, -13.2398, 1.23 ) }
    dend_12 { pt3dadd( 19.7924, -3.92258, -14.3039, 0.98 ) }
    dend_12 { pt3dadd( 22.3547, -3.9824, -15.5928, 0.98 ) }
    dend_12 { pt3dadd( 26.7235, -4.02378, -17.6801, 0.61 ) }
    dend_12 { pt3dadd( 29.8875, -3.97501, -19.2896, 0.61 ) }
    dend_12 { pt3dadd( 31.939, -3.93686, -20.3035, 0.61 ) }
    dend_12 { pt3dadd( 34.793, -3.86664, -21.6277, 0.61 ) }
    dend_12 { pt3dadd( 34.9087, -3.86662, -21.6763, 0.61 ) }
    dend_12 { pt3dadd( 37.5471, -3.90696, -22.5757, 0.61 ) }
    dend_12 { pt3dadd( 38.9072, -3.88406, -22.8696, 0.61 ) }
    dend_12 { pt3dadd( 41.9244, -3.99768, -23.5138, 0.61 ) }
    dend_12 { pt3dadd( 41.9545, -3.99972, -23.521, 0.61 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 39/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.18684, -2.36997, -5.13, 2.21 ) }
    dend_11 { pt3dadd( -8.89756, -3.21046, -7.435, 1.97 ) }
    dend_11 { pt3dadd( -10.6691, -3.85165, -9.85776, 1.72 ) }
    dend_11 { pt3dadd( -12.3391, -4.28581, -12.1333, 1.72 ) }
    dend_11 { pt3dadd( -14.6583, -4.7316, -15.2178, 1.84 ) }
    dend_11 { pt3dadd( -15.9797, -4.95295, -16.889, 1.35 ) }
    dend_11 { pt3dadd( -17.0072, -5.13911, -18.142, 1.35 ) }
    dend_11 { pt3dadd( -17.7896, -5.2399, -19.1193, 1.35 ) }
    dend_11 { pt3dadd( -18.5906, -5.2655, -20.025, 1.35 ) }
    dend_11 { pt3dadd( -19.6106, -5.23485, -21.0055, 1.35 ) }
    dend_11 { pt3dadd( -21.0667, -5.21843, -22.3071, 1.35 ) }
    dend_11 { pt3dadd( -22.818, -5.34828, -23.9418, 1.35 ) }
    dend_11 { pt3dadd( -24.1746, -5.53908, -25.2599, 1.35 ) }
    dend_11 { pt3dadd( -25.9216, -5.86662, -27.0774, 1.35 ) }
    dend_11 { pt3dadd( -27.3142, -6.15359, -28.6211, 1.35 ) }
    dend_11 { pt3dadd( -28.5789, -6.42197, -30.1254, 1.23 ) }
    dend_11 { pt3dadd( -29.919, -6.72764, -31.7927, 1.23 ) }
    dend_11 { pt3dadd( -30.761, -6.96391, -32.8581, 1.23 ) }
    dend_11 { pt3dadd( -32.5221, -7.64198, -35.0182, 1.23 ) }
    dend_11 { pt3dadd( -32.5221, -7.64198, -35.0182, 1.23 ) }
    dend_11 { pt3dadd( -34.1559, -8.38884, -36.3525, 1.23 ) }
    dend_11 { pt3dadd( -35.49, -8.94547, -37.1939, 0.98 ) }
    dend_11 { pt3dadd( -37.0124, -9.52833, -37.9489, 0.61 ) }
    dend_11 { pt3dadd( -38.5726, -10.1376, -38.5505, 0.61 ) }
    dend_11 { pt3dadd( -40.8331, -11.0525, -39.1327, 0.61 ) }
    dend_11 { pt3dadd( -42.5337, -11.7539, -39.4531, 0.61 ) }
    dend_11 { pt3dadd( -43.3285, -12.0807, -39.5471, 0.61 ) }
    dend_11 { pt3dadd( -43.4144, -12.1144, -39.5565, 0.61 ) }
    dend_11 { pt3dadd( -44.4922, -12.5369, -39.6739, 0.61 ) }
    dend_11 { pt3dadd( -46.2616, -13.2207, -39.9506, 0.61 ) }
    dend_11 { pt3dadd( -47.4882, -13.7073, -40.1786, 0.61 ) }
    dend_11 { pt3dadd( -49.717, -14.5624, -41.0094, 0.61 ) }
    dend_11 { pt3dadd( -51.8173, -15.3659, -42.0128, 0.61 ) }
    dend_11 { pt3dadd( -53.4412, -15.9713, -42.8395, 0.61 ) }
    dend_11 { pt3dadd( -54.8112, -16.4568, -43.6102, 0.61 ) }
    dend_11 { pt3dadd( -56.4262, -17.0161, -44.6469, 0.61 ) }
    dend_11 { pt3dadd( -61.2841, -18.7491, -48.2192, 0.61 ) }
    dend_11 { pt3dadd( -63.1161, -19.4343, -49.8331, 0.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.23684, 5.00103, 2.57, 2.09 ) }
    dend_0 { pt3dadd( -7.51522, 6.34121, 2.77308, 2.09 ) }
    dend_0 { pt3dadd( -8.62848, 7.44883, 2.93504, 2.09 ) }
    dend_0 { pt3dadd( -10.0742, 8.88722, 3.14536, 1.84 ) }
    dend_0 { pt3dadd( -11.0862, 9.89423, 3.29261, 1.84 ) }
    dend_0 { pt3dadd( -12.1288, 10.9315, 3.44429, 1.84 ) }
    dend_0 { pt3dadd( -13.1703, 11.9676, 3.5958, 1.84 ) }
    dend_0 { pt3dadd( -13.8531, 12.5546, 3.69571, 1.35 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 85/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 9.52747, -3.19851, 0.0, 0.61 ) }
    axon_0 { pt3dadd( 24.2139, -6.24936, 0.0, 0.61 ) }
    axon_0 { pt3dadd( 38.9004, -9.30021, 0.0, 0.61 ) }
    // Section: dend_39, id: dend_39, parent: dend_15 (entry count 88/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 15.8216, -3.4136, 4.08407, 1.6 ) }
    dend_39 { pt3dadd( 19.4302, -4.26545, 4.28671, 1.6 ) }
    dend_39 { pt3dadd( 24.4814, -5.45785, 4.57036, 1.35 ) }
    dend_39 { pt3dadd( 27.5629, -6.18528, 4.7434, 1.35 ) }
    dend_39 { pt3dadd( 30.0298, -6.76762, 4.88192, 1.23 ) }
    dend_39 { pt3dadd( 33.1546, -7.50527, 5.05739, 1.23 ) }
    dend_39 { pt3dadd( 36.3597, -8.26187, 5.23737, 1.11 ) }
    // Section: dend_36, id: dend_36, parent: dend_15 (entry count 95/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 15.8216, -3.4136, 4.08407, 1.6 ) }
    dend_36 { pt3dadd( 15.634, -1.10528, 7.5962, 1.6 ) }
    dend_36 { pt3dadd( 15.181, 1.85104, 12.1904, 1.6 ) }
    dend_36 { pt3dadd( 14.7118, 3.64986, 15.7506, 0.86 ) }
    dend_36 { pt3dadd( 14.3161, 5.16646, 18.7521, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_36 { pt3dadd( 14.1021, 5.98682, 20.3757, 0.86 ) }
    dend_36 { pt3dadd( 13.9503, 6.5687, 21.5274, 0.86 ) }
    dend_36 { pt3dadd( 13.4022, 7.76622, 24.3434, 0.86 ) }
    dend_36 { pt3dadd( 11.6313, 10.1705, 30.9241, 0.86 ) }
    // Section: dend_27, id: dend_27, parent: dend_15 (entry count 4/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 15.8216, -3.4136, 4.08407, 1.72 ) }
    dend_27 { pt3dadd( 15.3759, -9.03438, 6.85878, 1.72 ) }
    dend_27 { pt3dadd( 15.068, -12.0883, 8.29495, 1.6 ) }
    dend_27 { pt3dadd( 15.0085, -12.595, 8.53652, 1.6 ) }
    dend_27 { pt3dadd( 14.695, -15.518, 9.97068, 1.48 ) }
    dend_27 { pt3dadd( 14.4871, -18.2514, 11.3519, 1.35 ) }
    dend_27 { pt3dadd( 14.3118, -21.5365, 13.013, 1.35 ) }
    dend_27 { pt3dadd( 14.1519, -24.1769, 14.4081, 1.23 ) }
    dend_27 { pt3dadd( 14.0309, -26.4083, 15.573, 1.23 ) }
    dend_27 { pt3dadd( 13.9076, -28.9137, 16.8605, 1.23 ) }
    dend_27 { pt3dadd( 13.7884, -31.6448, 18.3118, 0.98 ) }
    dend_27 { pt3dadd( 13.7268, -33.4527, 19.3001, 0.98 ) }
    dend_27 { pt3dadd( 13.6516, -35.5654, 20.429, 0.98 ) }
    dend_27 { pt3dadd( 13.5961, -36.9784, 21.1544, 0.98 ) }
    dend_27 { pt3dadd( 13.556, -38.1393, 21.6762, 0.98 ) }
    dend_27 { pt3dadd( 13.506, -39.8901, 22.3957, 0.98 ) }
    dend_27 { pt3dadd( 13.4889, -42.0445, 23.2782, 0.98 ) }
    dend_27 { pt3dadd( 13.5231, -43.4268, 23.8498, 0.98 ) }
    dend_27 { pt3dadd( 13.6413, -45.177, 24.5577, 0.98 ) }
    dend_27 { pt3dadd( 13.8415, -47.2775, 25.4636, 0.98 ) }
    dend_27 { pt3dadd( 14.1711, -50.0189, 26.6528, 0.98 ) }
    dend_27 { pt3dadd( 14.4326, -51.9259, 27.4715, 0.98 ) }
    dend_27 { pt3dadd( 14.594, -53.1911, 28.0715, 0.98 ) }
    dend_27 { pt3dadd( 14.6058, -53.3143, 28.1356, 0.98 ) }
    dend_27 { pt3dadd( 14.7055, -55.4071, 29.3584, 0.98 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 29/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 15.8216, -3.4136, 4.08407, 2.7 ) }
    dend_16 { pt3dadd( 21.8068, -4.23528, 2.37557, 2.7 ) }
    dend_16 { pt3dadd( 29.1925, -5.24924, 0.267292, 2.21 ) }
    dend_16 { pt3dadd( 36.0612, -6.19221, -1.6934, 1.72 ) }
    dend_16 { pt3dadd( 40.8332, -6.84735, -3.05561, 1.6 ) }
    dend_16 { pt3dadd( 44.8881, -7.40403, -4.21309, 1.6 ) }
    dend_16 { pt3dadd( 48.6282, -7.91749, -5.28071, 1.6 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 36/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 41.9545, -3.99972, -23.521, 0.49 ) }
    dend_14 { pt3dadd( 43.5509, -5.08047, -25.0387, 0.49 ) }
    dend_14 { pt3dadd( 46.2256, -6.8434, -27.6402, 0.49 ) }
    dend_14 { pt3dadd( 47.5036, -7.71513, -28.8458, 0.49 ) }
    dend_14 { pt3dadd( 50.116, -9.49697, -31.3101, 0.49 ) }
    dend_14 { pt3dadd( 51.8438, -10.6755, -32.94, 0.49 ) }
    dend_14 { pt3dadd( 53.556, -11.8434, -34.5552, 0.49 ) }
    dend_14 { pt3dadd( 55.8606, -13.2907, -36.6615, 0.49 ) }
    dend_14 { pt3dadd( 57.3681, -14.3082, -37.9296, 0.49 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 45/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 41.9545, -3.99972, -23.521, 0.61 ) }
    dend_13 { pt3dadd( 43.9173, -2.15706, -23.8041, 0.61 ) }
    dend_13 { pt3dadd( 45.9919, 0.0501269, -24.1351, 0.61 ) }
    dend_13 { pt3dadd( 47.7202, 1.99661, -24.4182, 0.61 ) }
    dend_13 { pt3dadd( 49.4412, 3.95372, -24.7559, 0.61 ) }
    dend_13 { pt3dadd( 50.673, 5.29499, -24.9835, 0.61 ) }
    dend_13 { pt3dadd( 53.0902, 7.61952, -25.3501, 0.61 ) }
    dend_13 { pt3dadd( 54.1005, 8.48095, -25.4887, 0.61 ) }
    dend_13 { pt3dadd( 54.1785, 8.53246, -25.4995, 0.61 ) }
    dend_13 { pt3dadd( 56.6331, 9.57002, -25.7987, 0.61 ) }
    dend_13 { pt3dadd( 60.6506, 10.4951, -26.3729, 0.61 ) }
    dend_13 { pt3dadd( 65.0147, 10.9484, -26.9995, 0.61 ) }
    dend_13 { pt3dadd( 67.5732, 10.9625, -27.4417, 0.61 ) }
    dend_13 { pt3dadd( 70.8067, 10.8154, -28.0727, 0.61 ) }
    dend_13 { pt3dadd( 74.5515, 10.4966, -28.9796, 0.61 ) }
    dend_13 { pt3dadd( 77.4811, 10.0597, -29.8034, 0.49 ) }
    dend_13 { pt3dadd( 80.1214, 9.54179, -30.6739, 0.49 ) }
    dend_13 { pt3dadd( 83.8819, 8.76668, -32.0602, 0.49 ) }
    dend_13 { pt3dadd( 86.0628, 8.36157, -32.9182, 0.49 ) }
    dend_13 { pt3dadd( 88.9918, 7.86797, -34.0781, 0.49 ) }
    dend_13 { pt3dadd( 91.09, 7.51898, -35.016, 0.49 ) }
    dend_13 { pt3dadd( 92.6979, 7.22261, -35.8501, 0.49 ) }
    dend_13 { pt3dadd( 92.8257, 7.19586, -35.9201, 0.49 ) }
    dend_13 { pt3dadd( 95.248, 6.66303, -37.2429, 0.49 ) }
    dend_13 { pt3dadd( 96.7963, 6.30111, -38.1386, 0.49 ) }
    dend_13 { pt3dadd( 100.03, 5.54833, -39.9961, 0.49 ) }
    dend_13 { pt3dadd( 106.62, 4.07752, -44.2555, 0.49 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 72/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -13.8531, 12.5546, 3.69571, 1.23 ) }
    dend_6 { pt3dadd( -20.6659, 15.8142, -2.18429, 1.23 ) }
    dend_6 { pt3dadd( -21.6792, 16.4127, -2.89266, 1.23 ) }
    dend_6 { pt3dadd( -23.028, 17.2718, -3.73288, 0.98 ) }
    dend_6 { pt3dadd( -24.6879, 18.4543, -4.64067, 0.98 ) }
    dend_6 { pt3dadd( -26.027, 19.4775, -5.29139, 0.98 ) }
    dend_6 { pt3dadd( -27.8354, 20.9099, -6.10302, 0.98 ) }
    dend_6 { pt3dadd( -29.5901, 22.7309, -6.36656, 0.98 ) }
    dend_6 { pt3dadd( -29.6958, 22.8461, -6.38253, 0.98 ) }
    dend_6 { pt3dadd( -31.2498, 24.5444, -6.5955, 0.98 ) }
    dend_6 { pt3dadd( -32.1155, 25.4528, -6.69121, 0.98 ) }
    dend_6 { pt3dadd( -32.2221, 25.5679, -6.69872, 0.98 ) }
    dend_6 { pt3dadd( -34.0322, 27.5558, -6.72003, 0.98 ) }
    dend_6 { pt3dadd( -34.1339, 27.6723, -6.72147, 0.98 ) }
    dend_6 { pt3dadd( -35.5498, 29.2359, -6.73859, 0.98 ) }
    dend_6 { pt3dadd( -35.6485, 29.3372, -6.72978, 0.98 ) }
    dend_6 { pt3dadd( -37.0772, 30.8722, -6.52793, 0.98 ) }
    dend_6 { pt3dadd( -37.1722, 30.9795, -6.50748, 0.98 ) }
    dend_6 { pt3dadd( -39.2144, 33.4219, -5.98339, 0.98 ) }
    dend_6 { pt3dadd( -39.4028, 33.6486, -5.93206, 0.98 ) }
    dend_6 { pt3dadd( -42.2277, 37.0639, -5.09334, 0.98 ) }
    dend_6 { pt3dadd( -44.3043, 39.6091, -4.43919, 0.98 ) }
    dend_6 { pt3dadd( -46.1835, 41.9563, -3.78755, 0.98 ) }
    dend_6 { pt3dadd( -47.7594, 44.0018, -3.20371, 0.98 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 96/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -13.8531, 12.5546, 3.69571, 1.35 ) }
    dend_1 { pt3dadd( -15.1005, 13.78, 4.7338, 1.35 ) }
    dend_1 { pt3dadd( -16.1836, 15.1933, 6.28113, 1.35 ) }
    dend_1 { pt3dadd( -17.2044, 16.7509, 8.33618, 1.35 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( -17.981, 17.9607, 10.0487, 1.35 ) }
    dend_1 { pt3dadd( -18.776, 19.1779, 11.8229, 1.35 ) }
    dend_1 { pt3dadd( -21.4084, 23.0237, 17.5867, 1.35 ) }
    dend_1 { pt3dadd( -22.5519, 24.7454, 20.2917, 1.35 ) }
    dend_1 { pt3dadd( -23.8198, 26.5886, 23.3805, 1.35 ) }
    dend_1 { pt3dadd( -24.4981, 27.4988, 25.0489, 1.35 ) }
    dend_1 { pt3dadd( -25.1357, 28.3189, 26.643, 1.35 ) }
    dend_1 { pt3dadd( -26.3334, 29.7001, 29.3918, 1.35 ) }
    dend_1 { pt3dadd( -27.6012, 30.8539, 31.4328, 1.35 ) }
    dend_1 { pt3dadd( -29.1279, 32.0128, 33.5277, 1.35 ) }
    dend_1 { pt3dadd( -30.8622, 33.2643, 35.6376, 1.35 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 38.9004, -9.30021, 0.0, 0.61 ) }
    axon_1 { pt3dadd( 53.5869, -12.3511, 0.0, 0.61 ) }
    axon_1 { pt3dadd( 68.2733, -15.4019, 0.0, 0.61 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 14/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 11.6313, 10.1705, 30.9241, 0.61 ) }
    dend_38 { pt3dadd( 10.1949, 9.41951, 32.4322, 0.61 ) }
    dend_38 { pt3dadd( 9.02314, 8.8069, 33.6624, 0.49 ) }
    dend_38 { pt3dadd( 7.76382, 8.14848, 34.9846, 0.49 ) }
    dend_38 { pt3dadd( 6.90289, 7.69835, 35.8885, 0.49 ) }
    dend_38 { pt3dadd( 4.79658, 6.5971, 38.0999, 0.49 ) }
    dend_38 { pt3dadd( 0.792997, 4.50388, 42.3033, 0.49 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 21/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 11.6313, 10.1705, 30.9241, 0.86 ) }
    dend_37 { pt3dadd( 9.97684, 9.77555, 32.104, 0.86 ) }
    dend_37 { pt3dadd( 7.8743, 9.2409, 33.6696, 0.61 ) }
    dend_37 { pt3dadd( 6.63787, 8.95571, 34.6962, 0.61 ) }
    dend_37 { pt3dadd( 5.24116, 8.72065, 35.8917, 0.61 ) }
    dend_37 { pt3dadd( 3.50973, 8.55924, 37.3152, 0.61 ) }
    dend_37 { pt3dadd( 3.44995, 8.55367, 37.3644, 0.61 ) }
    dend_37 { pt3dadd( 2.30554, 8.46674, 38.36, 0.61 ) }
    dend_37 { pt3dadd( 0.136172, 8.41269, 40.1729, 0.61 ) }
    dend_37 { pt3dadd( -1.50745, 8.41327, 41.6676, 0.61 ) }
    dend_37 { pt3dadd( -2.81047, 8.5296, 42.8485, 0.61 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 14.7055, -55.4071, 29.3584, 0.74 ) }
    dend_33 { pt3dadd( 15.7239, -58.0195, 27.6783, 0.74 ) }
    dend_33 { pt3dadd( 16.7166, -60.2145, 26.0837, 0.74 ) }
    dend_33 { pt3dadd( 17.2918, -61.4677, 25.1883, 0.74 ) }
    dend_33 { pt3dadd( 18.4094, -63.6482, 23.5942, 0.74 ) }
    dend_33 { pt3dadd( 19.6287, -65.8927, 22.0454, 0.98 ) }
    dend_33 { pt3dadd( 20.6165, -67.711, 20.7907, 0.98 ) }
    dend_33 { pt3dadd( 22.1972, -70.3649, 18.7808, 0.98 ) }
    dend_33 { pt3dadd( 23.4534, -72.3303, 17.3298, 0.98 ) }
    dend_33 { pt3dadd( 25.4031, -75.1922, 15.1853, 1.23 ) }
    dend_33 { pt3dadd( 26.5663, -76.9219, 13.9858, 1.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 43/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 14.7055, -55.4071, 29.3584, 0.86 ) }
    dend_28 { pt3dadd( 13.9989, -57.1552, 30.3404, 0.86 ) }
    dend_28 { pt3dadd( 13.6367, -58.2117, 31.0067, 0.86 ) }
    dend_28 { pt3dadd( 13.3352, -59.4145, 31.7984, 0.86 ) }
    dend_28 { pt3dadd( 13.0165, -60.7917, 32.6963, 0.86 ) }
    dend_28 { pt3dadd( 12.708, -61.9904, 33.5377, 0.86 ) }
    dend_28 { pt3dadd( 12.4792, -62.8399, 34.1579, 0.86 ) }
    dend_28 { pt3dadd( 12.0143, -64.4896, 35.4524, 0.74 ) }
    dend_28 { pt3dadd( 11.4747, -65.9833, 36.8335, 0.74 ) }
    dend_28 { pt3dadd( 11.1685, -66.5548, 37.4533, 0.74 ) }
    dend_28 { pt3dadd( 10.443, -67.5474, 38.6536, 0.86 ) }
    dend_28 { pt3dadd( 10.3979, -67.5905, 38.7144, 0.86 ) }
    dend_28 { pt3dadd( 9.35201, -68.1902, 39.8308, 0.86 ) }
    dend_28 { pt3dadd( 8.28878, -68.3904, 40.6199, 0.86 ) }
    dend_28 { pt3dadd( 7.52195, -68.3527, 41.0686, 0.86 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 58/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 48.6282, -7.91749, -5.28071, 1.23 ) }
    dend_22 { pt3dadd( 50.4589, -6.25216, -7.3384, 1.23 ) }
    dend_22 { pt3dadd( 51.33, -5.26565, -8.28465, 1.23 ) }
    dend_22 { pt3dadd( 52.284, -4.14526, -9.2698, 1.11 ) }
    dend_22 { pt3dadd( 53.825, -2.37732, -10.9175, 1.11 ) }
    dend_22 { pt3dadd( 53.825, -2.37732, -10.9175, 1.11 ) }
    dend_22 { pt3dadd( 54.6891, -1.47223, -11.8016, 1.11 ) }
    dend_22 { pt3dadd( 55.8138, -0.200129, -12.9912, 1.11 ) }
    dend_22 { pt3dadd( 56.7837, 0.90284, -14.0277, 1.11 ) }
    dend_22 { pt3dadd( 58.2304, 2.39137, -15.4434, 1.11 ) }
    dend_22 { pt3dadd( 59.8602, 3.82319, -16.858, 0.98 ) }
    dend_22 { pt3dadd( 61.1453, 4.8782, -17.9809, 0.98 ) }
    dend_22 { pt3dadd( 61.4451, 5.09034, -18.2464, 0.98 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 71/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 48.6282, -7.91749, -5.28071, 1.11 ) }
    dend_17 { pt3dadd( 50.9303, -9.23222, -5.23154, 1.11 ) }
    dend_17 { pt3dadd( 52.9783, -10.4019, -5.18781, 1.11 ) }
    dend_17 { pt3dadd( 54.8897, -11.4934, -5.14699, 1.11 ) }
    dend_17 { pt3dadd( 56.625, -12.4845, -5.10993, 1.11 ) }
    dend_17 { pt3dadd( 59.1399, -13.9207, -5.05622, 1.11 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 77/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -47.7594, 44.0018, -3.20371, 1.35 ) }
    dend_10 { pt3dadd( -48.3123, 45.8456, -6.36297, 1.35 ) }
    dend_10 { pt3dadd( -48.666, 46.73, -8.09453, 0.98 ) }
    dend_10 { pt3dadd( -49.1929, 47.6458, -10.0112, 0.86 ) }
    dend_10 { pt3dadd( -49.724, 48.5211, -11.8669, 0.86 ) }
    dend_10 { pt3dadd( -51.0888, 50.6082, -16.5265, 0.86 ) }
    dend_10 { pt3dadd( -51.9477, 51.8636, -19.4503, 0.86 ) }
    dend_10 { pt3dadd( -52.9849, 53.3597, -23.0788, 0.74 ) }
    dend_10 { pt3dadd( -53.7591, 54.4459, -25.9581, 0.61 ) }
    dend_10 { pt3dadd( -54.366, 55.3415, -28.4962, 0.61 ) }
    dend_10 { pt3dadd( -54.7643, 55.9557, -30.6967, 0.61 ) }
    dend_10 { pt3dadd( -55.0387, 56.6047, -33.1569, 0.61 ) }
    dend_10 { pt3dadd( -55.2145, 57.0309, -35.1327, 0.61 ) }
    dend_10 { pt3dadd( -55.3189, 57.3827, -37.8029, 0.61 ) }
    dend_10 { pt3dadd( -55.3527, 57.5529, -39.7468, 0.61 ) }
    dend_10 { pt3dadd( -55.5722, 57.88, -45.1746, 0.61 ) }
    dend_10 { pt3dadd( -55.6724, 57.9613, -46.6292, 0.61 ) }
    dend_10 { pt3dadd( -56.275, 58.2027, -52.3264, 0.61 ) }
    dend_10 { pt3dadd( -57.0799, 58.406, -57.6462, 0.61 ) }
    dend_10 { pt3dadd( -57.6224, 58.4989, -60.2471, 0.61 ) }
    dend_10 { pt3dadd( -58.1128, 58.5791, -62.188, 0.61 ) }
    dend_10 { pt3dadd( -59.3104, 58.8413, -66.1628, 0.61 ) }
    dend_10 { pt3dadd( -60.3598, 59.0761, -69.2608, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_10 { pt3dadd( -60.7338, 59.2152, -70.2522, 0.61 ) }
    dend_10 { pt3dadd( -62.5593, 60.2779, -74.625, 0.61 ) }
    dend_10 { pt3dadd( -62.5815, 60.2967, -74.6815, 0.61 ) }
    dend_10 { pt3dadd( -62.9305, 60.7658, -75.7383, 0.61 ) }
    dend_10 { pt3dadd( -63.4313, 61.6922, -77.3016, 0.61 ) }
    dend_10 { pt3dadd( -65.1132, 65.1588, -82.2866, 0.61 ) }
    dend_10 { pt3dadd( -65.6847, 66.2691, -83.86, 0.61 ) }
    dend_10 { pt3dadd( -66.4622, 68.0298, -86.1079, 0.61 ) }
    dend_10 { pt3dadd( -67.3517, 69.976, -88.6411, 0.61 ) }
    dend_10 { pt3dadd( -68.0434, 71.3957, -90.5542, 0.61 ) }
    dend_10 { pt3dadd( -68.6591, 72.4395, -91.9642, 0.61 ) }
    dend_10 { pt3dadd( -69.9429, 74.1311, -93.7436, 0.61 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 12/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -47.7594, 44.0018, -3.20371, 0.86 ) }
    dend_7 { pt3dadd( -50.0639, 46.6308, -1.21183, 0.86 ) }
    dend_7 { pt3dadd( -52.3067, 49.0775, 0.718743, 0.86 ) }
    dend_7 { pt3dadd( -53.2455, 50.0539, 1.50932, 0.86 ) }
    dend_7 { pt3dadd( -55.604, 52.4977, 3.47406, 0.86 ) }
    dend_7 { pt3dadd( -56.67, 53.6053, 4.31975, 0.86 ) }
    dend_7 { pt3dadd( -58.5997, 55.6214, 5.82122, 0.61 ) }
    dend_7 { pt3dadd( -60.3766, 57.4315, 7.09449, 0.61 ) }
    dend_7 { pt3dadd( -62.1806, 59.2146, 8.36516, 0.61 ) }
    dend_7 { pt3dadd( -63.8137, 60.8278, 9.56992, 0.61 ) }
    dend_7 { pt3dadd( -65.1895, 62.216, 10.6194, 0.61 ) }
    dend_7 { pt3dadd( -66.5103, 63.5895, 11.6152, 0.61 ) }
    dend_7 { pt3dadd( -67.8408, 64.884, 12.4494, 0.61 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 25/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -30.8622, 33.2643, 35.6376, 0.61 ) }
    dend_5 { pt3dadd( -30.7402, 32.6081, 38.2088, 0.61 ) }
    dend_5 { pt3dadd( -30.6355, 32.2937, 40.6353, 0.61 ) }
    dend_5 { pt3dadd( -30.5386, 32.2196, 42.1144, 0.61 ) }
    dend_5 { pt3dadd( -30.4856, 32.1426, 44.0147, 0.61 ) }
    dend_5 { pt3dadd( -30.5708, 32.0275, 46.6292, 0.61 ) }
    dend_5 { pt3dadd( -30.9379, 31.7871, 50.1856, 0.61 ) }
    dend_5 { pt3dadd( -31.1081, 31.6945, 52.5685, 0.61 ) }
    dend_5 { pt3dadd( -31.2682, 31.7358, 54.3341, 0.61 ) }
    dend_5 { pt3dadd( -31.5036, 31.8189, 56.1793, 0.61 ) }
    dend_5 { pt3dadd( -32.0232, 31.8798, 58.5445, 0.61 ) }
    dend_5 { pt3dadd( -33.1155, 31.7918, 61.8019, 0.61 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 37/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -30.8622, 33.2643, 35.6376, 1.35 ) }
    dend_2 { pt3dadd( -31.7039, 35.3102, 36.345, 1.35 ) }
    dend_2 { pt3dadd( -32.931, 38.2926, 37.3762, 1.23 ) }
    dend_2 { pt3dadd( -34.0383, 40.984, 38.3068, 0.86 ) }
    dend_2 { pt3dadd( -34.7825, 42.7927, 38.9322, 0.86 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 42/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 26.5663, -76.9219, 13.9858, 0.49 ) }
    dend_35 { pt3dadd( 29.728, -77.0066, 14.3239, 0.49 ) }
    dend_35 { pt3dadd( 32.5662, -77.0262, 14.6819, 0.49 ) }
    dend_35 { pt3dadd( 35.3982, -77.0997, 14.9873, 0.49 ) }
    dend_35 { pt3dadd( 37.2372, -77.217, 15.1986, 0.49 ) }
    dend_35 { pt3dadd( 41.963, -77.6641, 15.7162, 0.49 ) }
    dend_35 { pt3dadd( 44.3244, -77.9993, 15.9914, 0.49 ) }
    dend_35 { pt3dadd( 45.5629, -78.2504, 16.1462, 0.49 ) }
    dend_35 { pt3dadd( 49.2882, -79.3508, 16.6725, 0.49 ) }
    dend_35 { pt3dadd( 52.6499, -80.5791, 17.199, 0.49 ) }
    dend_35 { pt3dadd( 54.1446, -81.2672, 17.45, 0.49 ) }
    dend_35 { pt3dadd( 57.1161, -82.9166, 18.0127, 0.49 ) }
    dend_35 { pt3dadd( 59.951, -84.5858, 18.6159, 0.49 ) }
    dend_35 { pt3dadd( 62.6103, -86.1863, 19.2646, 0.49 ) }
    dend_35 { pt3dadd( 64.3432, -87.2492, 19.7674, 0.49 ) }
    dend_35 { pt3dadd( 65.8423, -88.1793, 20.2286, 0.49 ) }
    dend_35 { pt3dadd( 67.6336, -89.2712, 20.8317, 0.49 ) }
    dend_35 { pt3dadd( 69.8581, -90.5473, 21.5654, 0.49 ) }
    dend_35 { pt3dadd( 70.8247, -91.0839, 21.8906, 0.49 ) }
    dend_35 { pt3dadd( 71.1061, -91.246, 21.9774, 0.49 ) }
    dend_35 { pt3dadd( 72.6832, -92.2039, 22.3715, 0.49 ) }
    dend_35 { pt3dadd( 72.8864, -92.3146, 22.4059, 0.49 ) }
    dend_35 { pt3dadd( 74.4916, -93.078, 22.5513, 0.49 ) }
    dend_35 { pt3dadd( 74.599, -93.1169, 22.5477, 0.49 ) }
    dend_35 { pt3dadd( 76.6104, -93.7821, 22.44, 0.49 ) }
    dend_35 { pt3dadd( 78.6016, -94.3751, 22.3042, 0.49 ) }
    dend_35 { pt3dadd( 81.6303, -95.1431, 22.0381, 0.49 ) }
    dend_35 { pt3dadd( 84.2645, -95.7703, 21.7881, 0.49 ) }
    dend_35 { pt3dadd( 87.841, -96.5154, 21.4178, 0.49 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 71/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 26.5663, -76.9219, 13.9858, 1.11 ) }
    dend_34 { pt3dadd( 26.9318, -79.4924, 12.1482, 1.11 ) }
    dend_34 { pt3dadd( 27.1499, -81.872, 10.6879, 1.11 ) }
    dend_34 { pt3dadd( 27.2532, -84.6566, 9.18475, 0.98 ) }
    dend_34 { pt3dadd( 27.2819, -87.8133, 7.6446, 0.98 ) }
    dend_34 { pt3dadd( 27.2505, -90.1877, 6.56635, 0.86 ) }
    dend_34 { pt3dadd( 27.1564, -93.4606, 5.12597, 0.74 ) }
    dend_34 { pt3dadd( 26.935, -96.5349, 3.86027, 0.74 ) }
    dend_34 { pt3dadd( 26.5545, -100.824, 2.25944, 0.61 ) }
    dend_34 { pt3dadd( 26.399, -102.774, 1.54749, 0.61 ) }
    dend_34 { pt3dadd( 26.1984, -106.211, 0.172365, 0.61 ) }
    dend_34 { pt3dadd( 26.1138, -108.574, -0.878442, 0.61 ) }
    dend_34 { pt3dadd( 26.0744, -110.719, -1.90059, 0.61 ) }
    dend_34 { pt3dadd( 26.0767, -114.115, -3.63808, 0.61 ) }
    dend_34 { pt3dadd( 26.1741, -118.022, -5.66313, 0.61 ) }
    dend_34 { pt3dadd( 26.3307, -122.552, -7.96972, 0.61 ) }
    dend_34 { pt3dadd( 26.4469, -125.072, -9.2508, 0.61 ) }
    dend_34 { pt3dadd( 26.588, -127.748, -10.5841, 0.61 ) }
    dend_34 { pt3dadd( 26.7028, -129.901, -11.6287, 0.61 ) }
    dend_34 { pt3dadd( 26.8028, -133.089, -13.1708, 0.61 ) }
    dend_34 { pt3dadd( 26.7917, -134.772, -13.8169, 0.61 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 92/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 7.52195, -68.3527, 41.0686, 0.86 ) }
    dend_32 { pt3dadd( 4.79984, -65.3992, 45.2037, 0.86 ) }
    dend_32 { pt3dadd( 3.17989, -63.6416, 47.6645, 0.86 ) }
    dend_32 { pt3dadd( 1.48055, -61.7978, 50.2459, 0.74 ) }
    dend_32 { pt3dadd( -0.00195056, -60.1893, 52.498, 0.74 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 97/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 7.52195, -68.3527, 41.0686, 0.86 ) }
    dend_29 { pt3dadd( 6.85109, -70.4504, 42.1197, 0.86 ) }
    dend_29 { pt3dadd( 6.80671, -70.5546, 42.1657, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_29 { pt3dadd( 6.03794, -71.6887, 42.6537, 0.74 ) }
    dend_29 { pt3dadd( 5.47208, -72.4053, 42.9577, 0.74 ) }
    dend_29 { pt3dadd( 4.84296, -73.0706, 43.2346, 0.74 ) }
    dend_29 { pt3dadd( 4.75732, -73.1492, 43.2657, 0.74 ) }
    dend_29 { pt3dadd( 3.7682, -73.9518, 43.4855, 0.74 ) }
    dend_29 { pt3dadd( 2.07969, -75.2723, 43.8426, 0.74 ) }
    dend_29 { pt3dadd( 2.05685, -75.2896, 43.8472, 0.74 ) }
    dend_29 { pt3dadd( 0.998091, -76.1551, 44.061, 0.74 ) }
    dend_29 { pt3dadd( -0.137172, -77.1471, 44.2885, 0.74 ) }
    dend_29 { pt3dadd( -0.955353, -77.841, 44.4384, 0.61 ) }
    dend_29 { pt3dadd( -2.00517, -78.7421, 44.6183, 0.61 ) }
    dend_29 { pt3dadd( -3.30953, -79.8103, 44.8074, 0.61 ) }
    dend_29 { pt3dadd( -4.14053, -80.4009, 44.9131, 0.61 ) }
    dend_29 { pt3dadd( -5.35879, -81.1233, 45.0419, 0.61 ) }
    dend_29 { pt3dadd( -7.55775, -82.0146, 45.2044, 0.61 ) }
    dend_29 { pt3dadd( -7.67033, -82.0494, 45.211, 0.61 ) }
    dend_29 { pt3dadd( -8.58507, -82.2409, 45.2492, 0.61 ) }
    dend_29 { pt3dadd( -9.90774, -82.3986, 45.2846, 0.61 ) }
    dend_29 { pt3dadd( -11.4078, -82.4966, 45.3101, 0.61 ) }
    dend_29 { pt3dadd( -13.9929, -82.6327, 45.3437, 0.61 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 20/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 61.4451, 5.09034, -18.2464, 0.49 ) }
    dend_26 { pt3dadd( 61.9082, 5.49387, -20.3764, 0.49 ) }
    dend_26 { pt3dadd( 62.509, 5.66319, -22.8459, 0.49 ) }
    dend_26 { pt3dadd( 63.0009, 5.59689, -24.8788, 0.49 ) }
    dend_26 { pt3dadd( 63.3269, 5.49344, -26.1932, 0.49 ) }
    dend_26 { pt3dadd( 63.7252, 5.33792, -27.8105, 0.49 ) }
    dend_26 { pt3dadd( 65.111, 4.75253, -33.0804, 0.49 ) }
    dend_26 { pt3dadd( 65.6891, 4.39025, -35.2181, 0.49 ) }
    dend_26 { pt3dadd( 66.4705, 3.80116, -37.6862, 0.49 ) }
    dend_26 { pt3dadd( 67.7394, 2.67832, -41.4116, 0.49 ) }
    dend_26 { pt3dadd( 68.5685, 1.91111, -43.6798, 0.49 ) }
    dend_26 { pt3dadd( 69.6251, 0.92391, -46.2933, 0.49 ) }
    dend_26 { pt3dadd( 70.64, 0.00962618, -48.4303, 0.49 ) }
    dend_26 { pt3dadd( 72.4929, -1.58421, -51.8984, 0.49 ) }
    dend_26 { pt3dadd( 73.5327, -2.45002, -53.5585, 0.49 ) }
    dend_26 { pt3dadd( 74.247, -3.08813, -54.5572, 0.49 ) }
    dend_26 { pt3dadd( 74.5189, -3.33672, -54.8933, 0.49 ) }
    dend_26 { pt3dadd( 76.1323, -4.82788, -56.6829, 0.49 ) }
    dend_26 { pt3dadd( 76.3905, -5.03533, -56.9174, 0.49 ) }
    dend_26 { pt3dadd( 76.8529, -5.39981, -57.2896, 0.49 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 40/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 61.4451, 5.09034, -18.2464, 0.98 ) }
    dend_23 { pt3dadd( 62.1173, 5.81302, -18.7464, 0.98 ) }
    dend_23 { pt3dadd( 62.6776, 6.42997, -19.1669, 0.86 ) }
    dend_23 { pt3dadd( 63.3386, 7.17444, -19.6952, 0.86 ) }
    dend_23 { pt3dadd( 64.0935, 8.0038, -20.3492, 0.61 ) }
    dend_23 { pt3dadd( 64.1257, 8.03829, -20.3798, 0.61 ) }
    dend_23 { pt3dadd( 65.0917, 9.00884, -21.315, 0.61 ) }
    dend_23 { pt3dadd( 66.0844, 9.99863, -22.3198, 0.61 ) }
    dend_23 { pt3dadd( 66.6345, 10.5166, -22.8869, 0.61 ) }
    dend_23 { pt3dadd( 67.7279, 11.469, -23.9437, 0.61 ) }
    dend_23 { pt3dadd( 68.5162, 12.0865, -24.6534, 0.61 ) }
    dend_23 { pt3dadd( 69.3093, 12.6673, -25.3145, 0.61 ) }
    dend_23 { pt3dadd( 70.1159, 13.2133, -25.9089, 0.61 ) }
    dend_23 { pt3dadd( 70.9954, 13.7707, -26.4792, 0.61 ) }
    dend_23 { pt3dadd( 71.771, 14.2981, -26.9122, 0.61 ) }
    dend_23 { pt3dadd( 72.3834, 14.7649, -27.206, 0.61 ) }
    dend_23 { pt3dadd( 73.2205, 15.4624, -27.591, 0.61 ) }
    dend_23 { pt3dadd( 74.0478, 16.204, -27.978, 0.61 ) }
    dend_23 { pt3dadd( 74.9973, 17.1188, -28.4672, 0.61 ) }
    dend_23 { pt3dadd( 76.0095, 18.2163, -29.0474, 0.61 ) }
    dend_23 { pt3dadd( 76.8873, 19.2327, -29.597, 0.61 ) }
    dend_23 { pt3dadd( 77.2535, 19.676, -29.8317, 0.61 ) }
    dend_23 { pt3dadd( 77.7242, 20.2627, -30.1274, 0.61 ) }
    dend_23 { pt3dadd( 78.3264, 21.0403, -30.4693, 0.61 ) }
    dend_23 { pt3dadd( 78.3991, 21.1408, -30.5056, 0.61 ) }
    dend_23 { pt3dadd( 78.8537, 21.7486, -30.6723, 0.61 ) }
    dend_23 { pt3dadd( 79.4674, 22.6276, -30.829, 0.61 ) }
    dend_23 { pt3dadd( 80.0706, 23.5383, -30.9397, 0.61 ) }
    dend_23 { pt3dadd( 80.7542, 24.592, -31.0161, 0.61 ) }
    dend_23 { pt3dadd( 81.3804, 25.541, -31.0291, 0.61 ) }
    dend_23 { pt3dadd( 82.0217, 26.5221, -31.0279, 0.61 ) }
    dend_23 { pt3dadd( 82.5665, 27.3907, -31.0184, 0.61 ) }
    dend_23 { pt3dadd( 82.9772, 28.0494, -31.0057, 0.61 ) }
    dend_23 { pt3dadd( 83.5712, 28.9589, -30.9791, 0.61 ) }
    dend_23 { pt3dadd( 84.0099, 29.6072, -30.9847, 0.61 ) }
    dend_23 { pt3dadd( 84.3554, 30.0754, -30.9522, 0.61 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 76/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 59.1399, -13.9207, -5.05622, 0.61 ) }
    dend_21 { pt3dadd( 59.9697, -12.3701, -6.30614, 0.61 ) }
    dend_21 { pt3dadd( 60.5406, -11.3033, -7.16607, 0.61 ) }
    dend_21 { pt3dadd( 61.262, -9.95526, -8.25261, 0.61 ) }
    dend_21 { pt3dadd( 62.0722, -8.44132, -9.47295, 0.61 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 81/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 59.1399, -13.9207, -5.05622, 1.11 ) }
    dend_18 { pt3dadd( 60.4022, -15.7298, -6.05398, 1.11 ) }
    dend_18 { pt3dadd( 61.5741, -16.9657, -6.84634, 1.11 ) }
    dend_18 { pt3dadd( 62.7139, -17.9887, -7.63965, 1.11 ) }
    dend_18 { pt3dadd( 63.7985, -18.8983, -8.4062, 1.11 ) }
    dend_18 { pt3dadd( 65.5891, -20.4061, -9.77206, 1.11 ) }
    dend_18 { pt3dadd( 66.9665, -21.566, -10.8228, 1.11 ) }
    dend_18 { pt3dadd( 68.9035, -22.9797, -12.3376, 1.11 ) }
    dend_18 { pt3dadd( 70.6571, -24.0818, -13.653, 1.11 ) }
    dend_18 { pt3dadd( 70.7082, -24.1093, -13.6896, 1.11 ) }
    dend_18 { pt3dadd( 72.6185, -25.0461, -15.0676, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 92/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -67.8408, 64.884, 12.4494, 0.61 ) }
    dend_9 { pt3dadd( -68.2258, 66.3378, 13.3682, 0.61 ) }
    dend_9 { pt3dadd( -68.7992, 68.5034, 14.7369, 0.61 ) }
    dend_9 { pt3dadd( -69.1231, 69.7264, 15.5099, 0.49 ) }
    dend_9 { pt3dadd( -69.4877, 71.1034, 16.3802, 0.49 ) }
    dend_9 { pt3dadd( -69.7821, 72.215, 17.0828, 0.49 ) }
    dend_9 { pt3dadd( -70.3149, 74.2272, 18.3545, 0.49 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 99/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -67.8408, 64.884, 12.4494, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_8 { pt3dadd( -69.555, 65.6983, 13.2932, 0.61 ) }
    dend_8 { pt3dadd( -69.6098, 65.7239, 13.3173, 0.61 ) }
    dend_8 { pt3dadd( -72.0749, 66.8545, 14.3446, 0.61 ) }
    dend_8 { pt3dadd( -73.4158, 67.3829, 14.873, 0.61 ) }
    dend_8 { pt3dadd( -74.5182, 67.7332, 15.2905, 0.61 ) }
    dend_8 { pt3dadd( -75.9082, 67.983, 15.791, 0.61 ) }
    dend_8 { pt3dadd( -77.1997, 68.0858, 16.2288, 0.61 ) }
    dend_8 { pt3dadd( -77.3089, 68.0823, 16.2616, 0.61 ) }
    dend_8 { pt3dadd( -79.1819, 67.7555, 16.7541, 0.61 ) }
    dend_8 { pt3dadd( -81.096, 67.2671, 17.2062, 0.61 ) }
    dend_8 { pt3dadd( -83.7929, 66.5121, 17.7391, 0.61 ) }
    dend_8 { pt3dadd( -85.847, 65.9719, 18.1007, 0.61 ) }
    dend_8 { pt3dadd( -87.3256, 65.6464, 18.3605, 0.61 ) }
    dend_8 { pt3dadd( -89.7444, 65.2831, 18.7644, 0.61 ) }
    dend_8 { pt3dadd( -91.621, 65.0578, 19.038, 0.61 ) }
    dend_8 { pt3dadd( -93.6608, 64.9139, 19.2876, 0.61 ) }
    dend_8 { pt3dadd( -95.5547, 64.9756, 19.4871, 0.61 ) }
    dend_8 { pt3dadd( -96.7008, 65.0595, 19.5887, 0.61 ) }
    dend_8 { pt3dadd( -98.0325, 65.3645, 19.7424, 0.61 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 19/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -34.7825, 42.7927, 38.9322, 0.61 ) }
    dend_4 { pt3dadd( -36.7482, 42.4409, 40.5256, 0.61 ) }
    dend_4 { pt3dadd( -39.6869, 41.9406, 42.8817, 0.61 ) }
    dend_4 { pt3dadd( -44.7978, 41.1012, 46.8034, 0.61 ) }
    dend_4 { pt3dadd( -48.1201, 40.5347, 49.2022, 0.61 ) }
    dend_4 { pt3dadd( -50.7215, 40.081, 51.0133, 0.61 ) }
    dend_4 { pt3dadd( -51.6297, 39.9252, 51.6798, 0.61 ) }
    dend_4 { pt3dadd( -54.0118, 39.5035, 53.4025, 0.61 ) }
    dend_4 { pt3dadd( -55.1287, 39.3227, 54.2623, 0.61 ) }
    dend_4 { pt3dadd( -56.4964, 39.1365, 55.0996, 0.61 ) }
    dend_4 { pt3dadd( -56.5641, 39.1261, 55.1444, 0.61 ) }
    dend_4 { pt3dadd( -60.6155, 38.3727, 58.0315, 0.61 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -34.7825, 42.7927, 38.9322, 0.74 ) }
    dend_3 { pt3dadd( -34.3601, 44.7878, 39.3116, 0.74 ) }
    dend_3 { pt3dadd( -34.1602, 46.6027, 39.6211, 0.74 ) }
    dend_3 { pt3dadd( -34.0718, 47.6356, 39.7908, 0.74 ) }
    dend_3 { pt3dadd( -33.9639, 48.7028, 40.0209, 0.74 ) }
    dend_3 { pt3dadd( -33.932, 49.0016, 40.092, 0.74 ) }
    dend_3 { pt3dadd( -33.7473, 50.96, 40.5702, 0.74 ) }
    dend_3 { pt3dadd( -33.6246, 52.6797, 41.0007, 0.74 ) }
    dend_3 { pt3dadd( -33.5277, 54.5423, 41.4916, 0.61 ) }
    dend_3 { pt3dadd( -33.4093, 57.5311, 42.2835, 0.61 ) }
    dend_3 { pt3dadd( -33.4085, 57.6057, 42.3066, 0.61 ) }
    dend_3 { pt3dadd( -33.4282, 59.6431, 42.9749, 0.61 ) }
    dend_3 { pt3dadd( -33.4934, 61.859, 43.7202, 0.61 ) }
    dend_3 { pt3dadd( -33.6485, 64.4346, 44.5936, 0.61 ) }
    dend_3 { pt3dadd( -33.8184, 66.676, 45.5204, 0.61 ) }
    dend_3 { pt3dadd( -33.9773, 70.5214, 47.3856, 0.61 ) }
    dend_3 { pt3dadd( -34.0463, 72.3196, 48.29, 0.61 ) }
    dend_3 { pt3dadd( -34.1147, 74.3671, 49.386, 0.61 ) }
    dend_3 { pt3dadd( -34.2604, 79.0973, 52.079, 0.61 ) }
    dend_3 { pt3dadd( -34.3243, 84.3716, 55.2673, 0.61 ) }
    dend_3 { pt3dadd( -34.2583, 88.8924, 58.2063, 0.61 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 52/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -13.9929, -82.6327, 45.3437, 0.37 ) }
    dend_31 { pt3dadd( -16.1612, -85.5053, 46.9966, 0.37 ) }
    dend_31 { pt3dadd( -16.643, -86.1729, 47.3643, 0.37 ) }
    dend_31 { pt3dadd( -17.2291, -87.0418, 47.8166, 0.37 ) }
    dend_31 { pt3dadd( -18.2609, -88.7506, 48.7093, 0.37 ) }
    dend_31 { pt3dadd( -18.8914, -89.8747, 49.296, 0.37 ) }
    dend_31 { pt3dadd( -19.2812, -90.6095, 49.6679, 0.37 ) }
    dend_31 { pt3dadd( -19.3279, -90.7185, 49.7115, 0.37 ) }
    dend_31 { pt3dadd( -19.5874, -91.316, 49.9588, 0.37 ) }
    dend_31 { pt3dadd( -20.1707, -93.06, 50.6104, 0.37 ) }
    dend_31 { pt3dadd( -20.206, -93.1674, 50.6469, 0.37 ) }
    dend_31 { pt3dadd( -20.741, -94.5957, 51.0899, 0.37 ) }
    dend_31 { pt3dadd( -21.2054, -95.6013, 51.3921, 0.37 ) }
    dend_31 { pt3dadd( -21.8287, -96.6977, 51.763, 0.37 ) }
    dend_31 { pt3dadd( -23.2132, -98.665, 52.4949, 0.37 ) }
    dend_31 { pt3dadd( -24.4702, -100.324, 53.0917, 0.37 ) }
    dend_31 { pt3dadd( -24.8559, -100.809, 53.276, 0.37 ) }
    dend_31 { pt3dadd( -26.0549, -102.199, 53.8597, 0.37 ) }
    dend_31 { pt3dadd( -27.853, -104.079, 54.7435, 0.37 ) }
    dend_31 { pt3dadd( -28.7278, -104.918, 55.1878, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 72/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -13.9929, -82.6327, 45.3437, 0.61 ) }
    dend_30 { pt3dadd( -16.1625, -83.3704, 45.9245, 0.61 ) }
    dend_30 { pt3dadd( -18.7027, -84.2211, 46.6264, 0.61 ) }
    dend_30 { pt3dadd( -20.7248, -84.8272, 47.2084, 0.37 ) }
    dend_30 { pt3dadd( -22.8366, -85.4566, 47.8682, 0.37 ) }
    dend_30 { pt3dadd( -24.9434, -86.1056, 48.5584, 0.37 ) }
    dend_30 { pt3dadd( -27.5071, -86.9617, 49.427, 0.37 ) }
    dend_30 { pt3dadd( -30.1247, -87.9541, 50.3467, 0.37 ) }
    dend_30 { pt3dadd( -32.5999, -89.0085, 51.3229, 0.37 ) }
    dend_30 { pt3dadd( -34.9428, -90.183, 52.4116, 0.37 ) }
    dend_30 { pt3dadd( -36.33, -90.9748, 53.1788, 0.37 ) }
    dend_30 { pt3dadd( -37.813, -91.8766, 54.15, 0.37 ) }
    dend_30 { pt3dadd( -39.5068, -92.9336, 55.4325, 0.37 ) }
    dend_30 { pt3dadd( -40.9004, -93.8096, 56.6226, 0.37 ) }
    dend_30 { pt3dadd( -41.9457, -94.521, 57.6167, 0.37 ) }
    dend_30 { pt3dadd( -42.792, -95.0515, 58.4921, 0.37 ) }
    dend_30 { pt3dadd( -44.0923, -95.7165, 59.937, 0.37 ) }
    dend_30 { pt3dadd( -45.9186, -96.2699, 62.0305, 0.37 ) }
    dend_30 { pt3dadd( -46.5965, -96.3095, 62.7706, 0.37 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 91/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 84.3554, 30.0754, -30.9522, 0.49 ) }
    dend_25 { pt3dadd( 86.9265, 34.6692, -27.8294, 0.49 ) }
    dend_25 { pt3dadd( 87.6643, 36.0133, -26.9687, 0.49 ) }
    dend_25 { pt3dadd( 89.03, 38.5576, -25.4007, 0.49 ) }
    dend_25 { pt3dadd( 89.5635, 39.5954, -24.8126, 0.49 ) }
    dend_25 { pt3dadd( 90.8272, 42.1158, -23.5499, 0.49 ) }
    dend_25 { pt3dadd( 91.9514, 44.5094, -22.4928, 0.25 ) }
    dend_25 { pt3dadd( 92.8813, 46.7554, -21.8176, 0.25 ) }
    dend_25 { pt3dadd( 93.5927, 48.5937, -21.3577, 0.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_25 { pt3dadd( 94.2046, 50.3472, -21.0353, 0.25 ) }
    dend_25 { pt3dadd( 94.9692, 52.722, -20.6678, 0.25 ) }
    dend_25 { pt3dadd( 95.9355, 55.9151, -20.3785, 0.25 ) }
    dend_25 { pt3dadd( 96.8653, 59.1322, -20.2508, 0.25 ) }
    dend_25 { pt3dadd( 96.9508, 59.4505, -20.2489, 0.25 ) }
    dend_25 { pt3dadd( 97.6458, 62.14, -20.2916, 0.25 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 84.3554, 30.0754, -30.9522, 0.49 ) }
    dend_24 { pt3dadd( 87.3465, 30.006, -30.875, 0.49 ) }
    dend_24 { pt3dadd( 89.3529, 29.9247, -30.8713, 0.49 ) }
    dend_24 { pt3dadd( 90.8966, 29.8705, -30.8999, 0.49 ) }
    dend_24 { pt3dadd( 91.302, 29.8584, -30.9121, 0.49 ) }
    dend_24 { pt3dadd( 93.6946, 29.7673, -31.0689, 0.49 ) }
    dend_24 { pt3dadd( 95.682, 29.6605, -31.2407, 0.49 ) }
    dend_24 { pt3dadd( 95.7788, 29.6507, -31.2575, 0.49 ) }
    dend_24 { pt3dadd( 96.9067, 29.4973, -31.4673, 0.49 ) }
    dend_24 { pt3dadd( 97.0484, 29.4723, -31.494, 0.49 ) }
    dend_24 { pt3dadd( 98.8798, 29.1552, -31.8242, 0.49 ) }
    dend_24 { pt3dadd( 100.345, 28.8957, -32.0382, 0.49 ) }
    dend_24 { pt3dadd( 100.829, 28.8258, -32.1101, 0.49 ) }
    dend_24 { pt3dadd( 101.575, 28.7298, -32.213, 0.49 ) }
    dend_24 { pt3dadd( 101.666, 28.7228, -32.2245, 0.49 ) }
    dend_24 { pt3dadd( 104.02, 28.692, -32.4861, 0.49 ) }
    dend_24 { pt3dadd( 104.415, 28.7304, -32.523, 0.49 ) }
    dend_24 { pt3dadd( 105.106, 28.8796, -32.6394, 0.49 ) }
    dend_24 { pt3dadd( 105.247, 28.9213, -32.6698, 0.49 ) }
    dend_24 { pt3dadd( 106.992, 29.5066, -33.0976, 0.49 ) }
    dend_24 { pt3dadd( 107.092, 29.5414, -33.1239, 0.49 ) }
    dend_24 { pt3dadd( 108.184, 29.9868, -33.4397, 0.49 ) }
    dend_24 { pt3dadd( 110.195, 30.9086, -34.0267, 0.49 ) }
    dend_24 { pt3dadd( 110.669, 31.1436, -34.1642, 0.49 ) }
    dend_24 { pt3dadd( 111.979, 31.7396, -34.5068, 0.49 ) }
    dend_24 { pt3dadd( 112.072, 31.7735, -34.5271, 0.49 ) }
    dend_24 { pt3dadd( 114.258, 32.4006, -34.9178, 0.49 ) }
    dend_24 { pt3dadd( 115.968, 32.7815, -35.1636, 0.49 ) }
    dend_24 { pt3dadd( 117.211, 32.985, -35.3263, 0.49 ) }
    dend_24 { pt3dadd( 119.663, 33.3283, -35.6694, 0.49 ) }
    dend_24 { pt3dadd( 122.209, 33.6906, -36.0564, 0.49 ) }
    dend_24 { pt3dadd( 123.972, 33.9428, -36.339, 0.49 ) }
    dend_24 { pt3dadd( 125.114, 34.0856, -36.5278, 0.49 ) }
    dend_24 { pt3dadd( 126.68, 34.3322, -36.8121, 0.49 ) }
    dend_24 { pt3dadd( 128.242, 34.6781, -37.1331, 0.49 ) }
    dend_24 { pt3dadd( 129.28, 35.0779, -37.4226, 0.49 ) }
    dend_24 { pt3dadd( 130.696, 35.9495, -37.9439, 0.49 ) }
    dend_24 { pt3dadd( 130.794, 36.0365, -37.9885, 0.49 ) }
    dend_24 { pt3dadd( 131.555, 36.9877, -38.4449, 0.49 ) }
    dend_24 { pt3dadd( 131.621, 37.1007, -38.4947, 0.49 ) }
    dend_24 { pt3dadd( 132.356, 38.7229, -39.1979, 0.49 ) }
    dend_24 { pt3dadd( 132.955, 40.2602, -39.8474, 0.49 ) }
    dend_24 { pt3dadd( 133.551, 41.9083, -40.5053, 0.49 ) }
    dend_24 { pt3dadd( 134.335, 44.1685, -41.3991, 0.49 ) }
    dend_24 { pt3dadd( 134.88, 45.8454, -42.0513, 0.49 ) }
    dend_24 { pt3dadd( 135.255, 47.0336, -42.4971, 0.49 ) }
    dend_24 { pt3dadd( 135.678, 48.4416, -42.9821, 0.49 ) }
    dend_24 { pt3dadd( 136.088, 49.7661, -43.4392, 0.49 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 54/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 72.6185, -25.0461, -15.0676, 0.86 ) }
    dend_20 { pt3dadd( 73.5109, -29.789, -17.6576, 0.86 ) }
    dend_20 { pt3dadd( 73.9572, -32.0051, -18.9327, 0.74 ) }
    dend_20 { pt3dadd( 74.2907, -33.6165, -19.9148, 0.74 ) }
    dend_20 { pt3dadd( 74.6138, -35.2001, -20.9125, 0.74 ) }
    dend_20 { pt3dadd( 75.0337, -37.4814, -22.3882, 0.61 ) }
    dend_20 { pt3dadd( 75.3249, -39.3225, -23.6242, 0.61 ) }
    dend_20 { pt3dadd( 75.5471, -41.0319, -24.9032, 0.61 ) }
    dend_20 { pt3dadd( 75.6793, -42.5148, -26.1914, 0.61 ) }
    dend_20 { pt3dadd( 75.8135, -44.2629, -27.7798, 0.61 ) }
    dend_20 { pt3dadd( 75.9506, -46.1124, -29.5056, 0.61 ) }
    dend_20 { pt3dadd( 76.0419, -47.7964, -31.0768, 0.61 ) }
    dend_20 { pt3dadd( 76.1231, -51.6172, -34.7041, 0.61 ) }
    dend_20 { pt3dadd( 76.1414, -54.1899, -37.2098, 0.61 ) }
    dend_20 { pt3dadd( 76.1417, -55.4024, -38.4189, 0.61 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 69/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 72.6185, -25.0461, -15.0676, 0.86 ) }
    dend_19 { pt3dadd( 76.1271, -25.7562, -17.3756, 0.86 ) }
    dend_19 { pt3dadd( 77.2873, -26.0961, -18.0807, 0.86 ) }
    dend_19 { pt3dadd( 79.1688, -26.7195, -19.1957, 0.86 ) }
    dend_19 { pt3dadd( 80.5341, -27.2981, -20.0338, 0.74 ) }
    dend_19 { pt3dadd( 80.6117, -27.3401, -20.0827, 0.74 ) }
    dend_19 { pt3dadd( 81.5047, -27.9305, -20.6466, 0.74 ) }
    dend_19 { pt3dadd( 83.5203, -29.7512, -21.5828, 0.74 ) }
    dend_19 { pt3dadd( 83.6447, -29.8931, -21.6314, 0.74 ) }
    dend_19 { pt3dadd( 85.1126, -31.8891, -22.0945, 0.74 ) }
    dend_19 { pt3dadd( 86.1726, -33.4906, -22.3721, 0.74 ) }
    dend_19 { pt3dadd( 87.0377, -34.8848, -22.525, 0.74 ) }
    dend_19 { pt3dadd( 88.2168, -36.9843, -22.5835, 0.61 ) }
    dend_19 { pt3dadd( 89.1251, -38.7754, -22.4461, 0.61 ) }
    dend_19 { pt3dadd( 89.6735, -39.9009, -22.3036, 0.61 ) }
    dend_19 { pt3dadd( 89.7165, -39.9923, -22.2854, 0.61 ) }
    dend_19 { pt3dadd( 90.2354, -41.1171, -22.0346, 0.61 ) }
    dend_19 { pt3dadd( 90.9178, -42.6777, -21.7017, 0.61 ) }
    dend_19 { pt3dadd( 91.888, -44.8423, -21.2471, 0.61 ) }
    dend_19 { pt3dadd( 91.9281, -44.9255, -21.2278, 0.61 ) }
    dend_19 { pt3dadd( 92.7521, -46.5321, -20.8311, 0.61 ) }
    dend_19 { pt3dadd( 92.7981, -46.6116, -20.8108, 0.61 ) }
    dend_19 { pt3dadd( 93.8635, -48.2571, -20.3711, 0.61 ) }
    dend_19 { pt3dadd( 95.5369, -50.5966, -19.7337, 0.61 ) }
    dend_19 { pt3dadd( 95.5727, -50.6413, -19.7219, 0.61 ) }
    dend_19 { pt3dadd( 96.541, -51.7224, -19.5375, 0.61 ) }
    dend_19 { pt3dadd( 97.9237, -53.0999, -19.3992, 0.61 ) }
    dend_19 { pt3dadd( 98.7097, -53.8339, -19.3805, 0.61 ) }
    dend_19 { pt3dadd( 100.02, -54.9664, -19.4245, 0.61 ) }
    dend_19 { pt3dadd( 101.868, -56.4645, -19.5539, 0.61 ) }
    dend_19 { pt3dadd( 105.272, -59.1084, -19.8233, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_19 { pt3dadd( 107.436, -60.6386, -20.0125, 0.61 ) }
    dend_19 { pt3dadd( 109.65, -62.1089, -20.2063, 0.61 ) }
    dend_19 { pt3dadd( 110.861, -62.8538, -20.3051, 0.61 ) }
    dend_19 { pt3dadd( 113.082, -64.0924, -20.4596, 0.61 ) }
    dend_19 { pt3dadd( 113.18, -64.1409, -20.4633, 0.61 ) }
    dend_19 { pt3dadd( 115.862, -65.2863, -20.4291, 0.61 ) }
    dend_19 { pt3dadd( 117.559, -65.9176, -20.3908, 0.61 ) }
    dend_19 { pt3dadd( 119.268, -66.4806, -20.3215, 0.61 ) }
    dend_19 { pt3dadd( 120.709, -66.9288, -20.2329, 0.61 ) }
    dend_19 { pt3dadd( 122.384, -67.4564, -20.1027, 0.61 ) }
    dend_19 { pt3dadd( 123.718, -67.8781, -19.9331, 0.61 ) }
    dend_19 { pt3dadd( 123.813, -67.9082, -19.9173, 0.61 ) }
    dend_19 { pt3dadd( 125.827, -68.5222, -19.5506, 0.61 ) }
    dend_19 { pt3dadd( 129.208, -69.5845, -18.8776, 0.61 ) }
    dend_19 { pt3dadd( 132.028, -70.4007, -18.2766, 0.61 ) }
    dend_19 { pt3dadd( 134.981, -71.1568, -17.6599, 0.61 ) }
    dend_19 { pt3dadd( 135.068, -71.1742, -17.6396, 0.61 ) }
    dend_19 { pt3dadd( 137.089, -71.4765, -17.1433, 0.61 ) }
    dend_19 { pt3dadd( 137.186, -71.4848, -17.1182, 0.61 ) }
    dend_19 { pt3dadd( 139.628, -71.4718, -16.5378, 0.61 ) }
    dend_19 { pt3dadd( 142.063, -71.2344, -15.9592, 0.61 ) }
    dend_19 { pt3dadd( 144.073, -70.9342, -15.5006, 0.61 ) }
    dend_19 { pt3dadd( 145.509, -70.6728, -15.1724, 0.61 ) }
    dend_19 { pt3dadd( 145.597, -70.6553, -15.1499, 0.61 ) }
    dend_19 { pt3dadd( 148.32, -70.1237, -14.4218, 0.61 ) }
    dend_19 { pt3dadd( 151.444, -69.5134, -13.433, 0.61 ) }
    dend_19 { pt3dadd( 153.467, -69.0964, -12.5839, 0.61 ) }
    dend_19 { pt3dadd( 154.844, -68.7675, -11.9191, 0.61 ) }
    dend_19 { pt3dadd( 157.413, -68.0437, -10.5101, 0.61 ) }
    dend_19 { pt3dadd( 157.46, -68.0291, -10.4825, 0.61 ) }
    dend_19 { pt3dadd( 160.456, -67.0452, -8.64731, 0.61 ) }
    dend_19 { pt3dadd( 163.78, -65.8967, -6.59595, 0.37 ) }
    dend_19 { pt3dadd( 168.381, -64.2128, -3.83584, 0.37 ) }
    dend_19 { pt3dadd( 170.92, -63.2089, -2.31854, 0.37 ) }
    dend_19 { pt3dadd( 173.479, -62.1082, -0.878351, 0.37 ) }
    dend_19 { pt3dadd( 174.99, -61.4345, -0.0833721, 0.37 ) }
    dend_19 { pt3dadd( 176.942, -60.4841, 0.868586, 0.37 ) }
    dend_19 { pt3dadd( 178.765, -59.5231, 1.66982, 0.37 ) }
    dend_19 { pt3dadd( 180.306, -58.6725, 2.38964, 0.37 ) }
    dend_19 { pt3dadd( 181.563, -57.9301, 3.04342, 0.37 ) }
    dend_19 { pt3dadd( 181.639, -57.8805, 3.08709, 0.37 ) }
    dend_19 { pt3dadd( 184.662, -55.8318, 4.60415, 0.37 ) }
    dend_19 { pt3dadd( 185.713, -55.0971, 5.07319, 0.37 ) }
    dend_19 { pt3dadd( 187.566, -53.7699, 5.66163, 0.37 ) }
    dend_19 { pt3dadd( 190.237, -51.6168, 5.97801, 0.37 ) }
    dend_19 { pt3dadd( 191.0, -50.9137, 5.93162, 0.37 ) }
    dend_19 { pt3dadd( 193.446, -48.4751, 5.35, 0.37 ) }
    dend_19 { pt3dadd( 193.514, -48.4029, 5.31914, 0.37 ) }
    dend_19 { pt3dadd( 195.558, -45.9796, 4.14821, 0.37 ) }
    dend_19 { pt3dadd( 197.172, -43.8292, 3.08992, 0.37 ) }
    dend_19 { pt3dadd( 198.414, -42.1244, 2.34029, 0.37 ) }
    dend_19 { pt3dadd( 198.8, -41.611, 2.20312, 0.37 ) }
    dend_19 { pt3dadd( 199.732, -40.4864, 2.08625, 0.37 ) }
    dend_19 { pt3dadd( 200.992, -39.1333, 2.12306, 0.37 ) }
    dend_19 { pt3dadd( 203.197, -37.0683, 2.53515, 0.37 ) }
    dend_19 { pt3dadd( 204.936, -35.6421, 3.12639, 0.37 ) }
    dend_19 { pt3dadd( 206.97, -34.1458, 3.97693, 0.37 ) }
    dend_19 { pt3dadd( 208.679, -32.9653, 4.7681, 0.37 ) }
    dend_19 { pt3dadd( 210.527, -31.7199, 5.69681, 0.37 ) }
    dend_19 { pt3dadd( 212.261, -30.531, 6.59529, 0.37 ) }
    dend_19 { pt3dadd( 215.512, -28.1238, 8.25139, 0.37 ) }
    dend_19 { pt3dadd( 216.92, -26.943, 8.92118, 0.37 ) }
    dend_19 { pt3dadd( 218.246, -25.7358, 9.47679, 0.37 ) }
    dend_19 { pt3dadd( 219.891, -24.144, 10.0764, 0.37 ) }
    dend_19 { pt3dadd( 221.456, -22.7103, 10.4661, 0.37 ) }
    dend_19 { pt3dadd( 222.986, -21.4448, 10.691, 0.37 ) }
    dend_19 { pt3dadd( 224.089, -20.7028, 10.6833, 0.37 ) }
    dend_19 { pt3dadd( 226.05, -19.7996, 10.616, 0.37 ) }
    dend_19 { pt3dadd( 227.355, -19.5268, 10.54, 0.37 ) }
    dend_19 { pt3dadd( 229.216, -19.4913, 10.426, 0.37 ) }
    dend_19 { pt3dadd( 230.571, -19.6269, 10.3568, 0.37 ) }
    dend_19 { pt3dadd( 232.734, -19.9892, 10.2485, 0.37 ) }
    dend_19 { pt3dadd( 234.905, -20.4105, 10.1062, 0.37 ) }
    dend_19 { pt3dadd( 236.697, -20.7872, 9.95596, 0.37 ) }
    dend_19 { pt3dadd( 238.566, -21.1493, 9.79482, 0.37 ) }
    dend_19 { pt3dadd( 240.124, -21.4226, 9.66315, 0.37 ) }
    dend_19 { pt3dadd( 242.068, -21.6854, 9.50513, 0.37 ) }
    dend_19 { pt3dadd( 244.413, -21.9287, 9.34697, 0.37 ) }
    dend_19 { pt3dadd( 244.547, -21.9353, 9.33323, 0.37 ) }
    dend_19 { pt3dadd( 245.54, -21.9709, 9.21025, 0.37 ) }
    dend_19 { pt3dadd( 246.923, -22.0093, 9.02151, 0.37 ) }
    dend_19 { pt3dadd( 247.856, -22.0505, 8.89577, 0.37 ) }
    dend_19 { pt3dadd( 249.455, -22.1326, 8.69071, 0.37 ) }
    dend_19 { pt3dadd( 251.218, -22.2525, 8.48927, 0.37 ) }
    dend_19 { pt3dadd( 252.509, -22.3769, 8.35869, 0.37 ) }
    dend_19 { pt3dadd( 253.995, -22.5596, 8.22367, 0.37 ) }
    dend_19 { pt3dadd( 255.98, -22.8408, 8.06931, 0.37 ) }
    dend_19 { pt3dadd( 257.317, -23.0289, 7.98494, 0.37 ) }
    dend_19 { pt3dadd( 258.226, -23.1645, 7.9446, 0.37 ) }
    dend_19 { pt3dadd( 260.195, -23.4723, 7.90086, 0.37 ) }
    dend_19 { pt3dadd( 260.302, -23.4896, 7.89604, 0.37 ) }
    dend_19 { pt3dadd( 262.266, -23.8514, 7.77359, 0.37 ) }
    dend_19 { pt3dadd( 264.755, -24.3281, 7.58067, 0.37 ) }
    dend_19 { pt3dadd( 265.84, -24.585, 7.49853, 0.37 ) }
    dend_19 { pt3dadd( 266.618, -24.7859, 7.41349, 0.37 ) }
    dend_19 { pt3dadd( 268.169, -25.1927, 7.20898, 0.37 ) }
    dend_19 { pt3dadd( 269.439, -25.5027, 7.02716, 0.37 ) }
    dend_19 { pt3dadd( 270.62, -25.7234, 6.83905, 0.37 ) }
    dend_19 { pt3dadd( 272.737, -26.0466, 6.36277, 0.37 ) }
    dend_19 { pt3dadd( 275.024, -26.2563, 5.70574, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_19 { pt3dadd( 276.811, -26.3999, 5.06204, 0.37 ) }
    dend_19 { pt3dadd( 278.222, -26.4723, 4.48188, 0.37 ) }
    dend_19 { pt3dadd( 280.039, -26.5329, 3.53445, 0.37 ) }
    dend_19 { pt3dadd( 282.393, -26.6133, 2.13243, 0.37 ) }
    dend_19 { pt3dadd( 284.382, -26.6297, 0.773217, 0.37 ) }
    dend_19 { pt3dadd( 286.037, -26.6549, -0.453445, 0.37 ) }
    dend_19 { pt3dadd( 286.922, -26.6972, -1.16601, 0.37 ) }
    dend_19 { pt3dadd( 289.051, -26.8461, -2.9532, 0.37 ) }
    dend_19 { pt3dadd( 290.196, -26.9417, -3.92151, 0.37 ) }
    dend_19 { pt3dadd( 291.648, -27.0182, -5.09141, 0.37 ) }
    dend_19 { pt3dadd( 293.187, -27.0468, -6.30027, 0.37 ) }
    dend_19 { pt3dadd( 295.239, -26.9589, -7.75714, 0.37 ) }
    dend_19 { pt3dadd( 297.661, -26.8677, -9.22616, 0.37 ) }
    dend_19 { pt3dadd( 297.711, -26.8652, -9.25165, 0.37 ) }
    dend_19 { pt3dadd( 299.545, -26.7184, -9.96241, 0.37 ) }
    dend_19 { pt3dadd( 300.649, -26.5885, -10.1719, 0.37 ) }
    dend_19 { pt3dadd( 304.054, -26.02, -10.4176, 0.37 ) }
    dend_19 { pt3dadd( 306.424, -25.4642, -10.1692, 0.37 ) }
    dend_19 { pt3dadd( 306.47, -25.452, -10.1594, 0.37 ) }
    dend_19 { pt3dadd( 309.972, -24.4815, -9.22273, 0.37 ) }
    dend_19 { pt3dadd( 312.953, -23.5964, -8.23383, 0.37 ) }
    dend_19 { pt3dadd( 316.742, -22.4289, -6.78182, 0.37 ) }
    dend_19 { pt3dadd( 320.748, -21.1154, -5.02743, 0.37 ) }
    dend_19 { pt3dadd( 321.191, -20.9628, -4.84406, 0.37 ) }
    dend_19 { pt3dadd( 321.547, -20.857, -4.69879, 0.37 ) }
    dend_19 { pt3dadd( 322.07, -20.7314, -4.48356, 0.37 ) }
    dend_19 { pt3dadd( 323.668, -20.426, -3.93763, 0.37 ) }
    dend_19 { pt3dadd( 324.329, -20.3236, -3.70891, 0.37 ) }
    dend_19 { pt3dadd( 325.787, -20.1218, -3.46165, 0.37 ) }
    dend_19 { pt3dadd( 326.832, -19.922, -3.28639, 0.37 ) }
    dend_19 { pt3dadd( 328.553, -19.5433, -3.00003, 0.37 ) }
    dend_19 { pt3dadd( 329.497, -19.2872, -2.80094, 0.37 ) }
    dend_19 { pt3dadd( 329.687, -19.2197, -2.74455, 0.37 ) }
    dend_19 { pt3dadd( 331.489, -18.3617, -2.07911, 0.37 ) }
    dend_19 { pt3dadd( 331.93, -18.1233, -1.87277, 0.37 ) }
    dend_19 { pt3dadd( 332.082, -18.0286, -1.78171, 0.37 ) }
    dend_19 { pt3dadd( 334.2, -16.7024, -0.33975, 0.37 ) }
    dend_19 { pt3dadd( 335.88, -15.6285, 1.01, 0.37 ) }
    dend_19 { pt3dadd( 337.623, -14.481, 2.51593, 0.37 ) }
    dend_19 { pt3dadd( 338.998, -13.5098, 3.77714, 0.37 ) }
    dend_19 { pt3dadd( 340.756, -12.2416, 5.45127, 0.37 ) }
    dend_19 { pt3dadd( 341.305, -11.8307, 5.97646, 0.37 ) }
    dend_19 { pt3dadd( 343.014, -10.4386, 7.72713, 0.37 ) }
    dend_19 { pt3dadd( 343.611, -9.94616, 8.36037, 0.37 ) }
    dend_19 { pt3dadd( 344.26, -9.41356, 9.07582, 0.37 ) }
    dend_19 { pt3dadd( 345.791, -8.07352, 10.641, 0.37 ) }
    dend_19 { pt3dadd( 346.423, -7.52508, 11.2077, 0.37 ) }
    dend_19 { pt3dadd( 348.084, -5.88465, 12.7253, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_15, dend_12, dend_11, dend_0, dend_39, dend_36, dend_27, dend_16, dend_14, dend_13, dend_6, dend_1, dend_38, dend_37, dend_33, dend_28, dend_22, dend_17, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_32, dend_29, dend_26, dend_23, dend_21, dend_18, dend_9, dend_8, dend_4, dend_3, dend_31, dend_30, dend_25, dend_24, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_15, dend_12, dend_11, dend_0, dend_39, dend_36, dend_27, dend_16, dend_14, dend_13, dend_6, dend_1, dend_38, dend_37, dend_33, dend_28, dend_22, dend_17, dend_10, dend_7, dend_5, dend_2, dend_35, dend_34, dend_32, dend_29, dend_26, dend_23, dend_21, dend_18, dend_9, dend_8, dend_4, dend_3, dend_31, dend_30, dend_25, dend_24, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_11 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_27 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_13 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_6 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_10 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_35 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_26 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_3 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_30 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_24 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_19 OneSecGrp_SectionRef_43.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_15 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_39 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_12 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_36 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_16 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_17 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_38 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_14 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_37 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_21 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_22 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_5 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_28 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_4 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_33 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_9 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_20 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_29 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_8 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_25 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_31 OneSecGrp_SectionRef_38.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_11 nseg = 3
    dend_27 nseg = 3
    dend_13 nseg = 3
    dend_6 nseg = 3
    dend_1 nseg = 3
    dend_10 nseg = 5
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_26 nseg = 3
    dend_3 nseg = 3
    dend_30 nseg = 3
    dend_24 nseg = 3
    dend_19 nseg = 17
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L1_SLAC_9f043bb71a_0_0


