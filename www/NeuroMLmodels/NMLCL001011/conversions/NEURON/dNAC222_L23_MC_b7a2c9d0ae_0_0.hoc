// Cell: dNAC222_L23_MC_b7a2c9d0ae_0_0
/*
{
  "id" : "dNAC222_L23_MC_b7a2c9d0ae_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.07469, 8.7884, -3.60465, 2.46822", "-1.80097, 7.80768, -3.18165, 4.18763", "-1.52725, 6.82696, -2.75864, 5.82788", "-1.25354, 5.84624, -2.33563, 6.65447", "-0.979817, 4.86552, -1.91263, 7.16537", "-0.706098, 3.8848, -1.48962, 7.65932", "-0.432379, 2.90408, -1.06661, 8.15198", "-0.15866, 1.92336, -0.643608, 8.65797", "0.115059, 0.942645, -0.220602, 9.39908", "0.388778, -0.0380738, 0.202405, 9.84096", "0.662497, -1.01879, 0.625411, 10.262", "0.936216, -1.99951, 1.04842, 10.5747", "1.20993, -2.98023, 1.47142, 10.6871", "1.48365, -3.96095, 1.89443, 10.7925", "1.75737, -4.94167, 2.31744, 10.4834", "2.03109, -5.92239, 2.74044, 9.64708", "2.30481, -6.90311, 3.16345, 8.796", "2.57853, -7.88383, 3.58645, 7.50578", "2.85225, -8.86454, 4.00946, 6.02015", "3.12597, -9.84526, 4.43247, 4.01105", "3.39969, -10.826, 4.85547, 2.41119" ]
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "2.49197, -10.3285, 2.1787, 1.94", "2.58196, -11.4285, 2.1787, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995802555049
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "3.75196, -3.40843, 15.8187, 1.39", "4.44287, -3.62532, 20.0336, 1.39", "6.6042, -4.30378, 33.2188, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995802555049
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.968043, 9.03157, -2.9013, 1.94", "-0.876671, 12.4292, -3.46309, 1.94", "-0.676369, 15.7519, -3.27714, 1.94", "-0.535391, 18.0905, -3.14627, 1.94", "-0.384331, 20.5964, -3.00603, 1.94", "-0.223243, 23.2686, -2.85649, 1.94", "0.0177036, 27.2655, -2.63281, 1.94", "0.409999, 33.7028, -1.7087, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995802555049
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.05804, 5.73157, -2.1713, 1.94", "-6.92492, 7.78877, -1.39913, 1.11", "-9.66264, 9.75328, -0.661755, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995802555049
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.39969, -10.826, 4.85547, 0.854353", "7.43208, -25.2738, 4.85547, 0.854353", "11.4645, -39.7217, 4.85547, 0.854353" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "2.58196, -11.4285, 2.1787, 0.83", "1.60872, -15.7041, -2.21899, 0.83", "1.14541, -18.0928, -4.40331, 0.83", "0.873763, -19.6989, -5.68533, 0.56", "0.757662, -20.6234, -6.39535, 0.83", "0.597929, -22.6708, -7.84601, 0.56", "0.591202, -23.4545, -8.24267, 0.83", "0.699075, -25.5028, -8.88125, 0.28", "0.840989, -27.1136, -9.35781, 1.11", "1.228, -30.6751, -10.4606, 0.28", "1.49197, -32.5561, -11.151, 1.11", "2.83318, -40.64, -14.6653, 0.28", "3.02888, -41.6541, -15.1535, 1.11", "3.84041, -45.6214, -17.3708, 0.28", "4.06922, -46.7567, -18.075, 0.83", "4.6045, -49.6958, -20.1561, 1.11", "4.91022, -51.6307, -21.7503, 0.28", "5.08021, -52.8329, -22.9115, 0.83", "5.66412, -57.6505, -27.4848, 0.28", "5.73862, -58.6834, -28.3969, 1.11", "5.86059, -62.395, -31.5372, 0.28", "5.85836, -63.3037, -32.2295, 0.83", "5.81741, -66.4524, -34.5796, 1.11", "5.7985, -69.1641, -36.6613, 0.28", "5.81078, -70.6447, -37.7803, 1.11", "5.84144, -74.8845, -41.0207, 0.28", "5.85321, -77.8314, -43.0903, 1.11" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "2.58196, -11.4285, 2.1787, 1.11", "3.34716, -13.4315, 1.88753, 1.11", "4.49868, -16.4459, 1.44935, 1.11", "5.88782, -20.0822, 0.920757, 1.11", "7.67499, -24.7605, 0.2407, 1.11" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "6.6042, -4.30378, 33.2188, 0.83", "9.31514, -6.81803, 33.2665, 0.83", "9.71213, -7.1862, 33.2735, 0.83", "15.4734, -12.5295, 33.3749, 0.83", "17.1608, -14.0945, 33.4046, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "6.6042, -4.30378, 33.2188, 1.11", "10.5184, -2.98087, 34.0247, 1.11", "15.439, -1.31786, 35.0378, 0.83", "17.1692, -0.73309, 35.394, 0.83", "18.4847, -0.288475, 35.6648, 0.83", "26.9391, 2.56887, 37.4055, 0.83", "29.9148, 3.57459, 38.0182, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "0.409999, 33.7028, -1.7087, 1.11", "0.490001, 37.8828, -17.2387, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "0.409999, 33.7028, -1.7087, 1.39", "0.32869, 36.6106, 3.8714, 1.39", "0.254665, 39.2579, 8.95158, 1.67" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-9.66264, 9.75328, -0.661755, 0.83", "-17.7219, 6.50411, -2.19324, 0.83", "-19.7432, 5.63973, -2.61382, 0.83", "-24.2059, 3.56823, -3.85013, 0.83", "-26.6269, 2.37183, -4.79573, 0.83", "-28.9692, 1.06161, -5.84864, 0.83", "-31.0223, -0.178195, -6.87332, 0.56", "-33.0202, -1.60874, -8.15266, 0.56", "-34.6253, -2.88529, -9.70182, 0.56", "-36.6014, -4.51311, -12.3405, 0.83", "-38.0266, -5.68659, -14.6828, 0.56", "-39.3522, -6.71182, -17.5331, 0.56", "-41.9898, -8.70774, -24.1458, 0.28", "-42.4814, -9.11952, -25.4192, 0.56", "-44.0614, -10.484, -29.5071, 0.56", "-45.1509, -11.5039, -32.4634, 0.56", "-48.2656, -14.5355, -40.9348, 0.28", "-48.4714, -14.7728, -41.4764, 0.28", "-50.4747, -17.4684, -45.6301, 0.28", "-50.9843, -18.3048, -46.4955, 0.83", "-52.8945, -21.7729, -47.9896, 0.28", "-54.3573, -24.2454, -48.1289, 0.83", "-55.5764, -26.2179, -48.0729, 0.83", "-56.5128, -27.5327, -48.29, 0.28", "-58.2498, -29.3707, -49.3355, 0.56", "-59.7161, -30.673, -50.2711, 0.28", "-60.517, -31.4202, -50.8789, 0.83", "-63.8867, -34.5963, -53.8714, 0.28", "-65.2009, -35.8882, -55.2885, 0.56", "-68.4555, -39.2105, -59.4465, 0.28", "-69.9551, -40.8196, -61.6661, 0.83", "-72.4805, -43.9607, -66.5634, 0.28", "-73.061, -44.7969, -67.9293, 0.83", "-74.2263, -47.0378, -71.8313, 0.56", "-74.9976, -49.0382, -75.6076, 0.28", "-75.4624, -50.4388, -78.6919, 1.67", "-76.4646, -53.2853, -85.6606, 0.28", "-76.5824, -53.5765, -86.4397, 0.83", "-77.6143, -56.1318, -92.9506, 0.28", "-78.328, -57.888, -96.9294, 1.39", "-79.9092, -62.0442, -105.447, 0.28", "-80.1603, -62.6886, -106.649, 0.56", "-80.9951, -64.6547, -109.88, 0.28", "-81.4484, -65.7938, -111.62, 1.11", "-82.8901, -69.6981, -116.67, 0.28", "-83.045, -70.2227, -117.335, 0.56", "-83.5885, -72.6243, -120.045, 0.28", "-83.7035, -73.1542, -120.674, 0.56", "-84.117, -74.9675, -122.931, 0.28", "-84.2844, -75.7127, -124.036, 0.83", "-85.3805, -79.7431, -131.845, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-9.66264, 9.75328, -0.661755, 0.83", "-13.8995, 13.072, 0.882887, 0.83", "-17.7943, 16.4368, 2.16308, 0.83", "-20.4613, 18.9502, 2.79135, 0.83", "-22.0866, 20.668, 2.96391, 0.83", "-24.5034, 23.3473, 2.97682, 0.83", "-26.2196, 25.2498, 2.98598, 0.83", "-29.539, 29.0794, 2.46169, 0.83", "-31.7441, 31.9208, 1.86029, 0.83", "-34.4127, 35.7498, 0.709859, 0.83", "-35.4245, 37.3227, 0.152267, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "11.4645, -39.7217, 4.85547, 0.28", "15.4969, -54.1695, 4.85547, 0.28", "19.5292, -68.6173, 4.85547, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "5.85321, -77.8314, -43.0903, 0.28", "4.37959, -80.9944, -41.8901, 0.28", "3.91838, -81.9844, -41.5145, 0.83", "2.18758, -85.6995, -40.1048, 0.28", "1.56891, -87.0274, -39.6009, 0.83" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "5.85321, -77.8314, -43.0903, 0.28", "7.35204, -80.5168, -49.0168, 0.28", "7.59806, -80.923, -49.9064, 0.83", "8.94608, -83.0812, -54.5677, 0.28", "9.14936, -83.4544, -55.3301, 0.56", "10.2791, -85.6676, -59.6759, 0.28", "11.1134, -87.5386, -63.4212, 1.67", "12.3224, -90.8312, -70.1159, 0.28", "12.3719, -91.0071, -70.4594, 0.83", "12.8838, -93.9915, -75.836, 0.28", "12.9064, -94.3075, -76.3703, 0.83", "12.4179, -98.1924, -82.5097, 0.28", "12.0013, -99.81, -84.9204, 1.11", "10.9166, -102.705, -89.0955, 0.28", "9.86662, -105.328, -92.8318, 0.28", "9.45214, -106.227, -94.05, 1.39", "5.68839, -113.746, -103.727, 0.28", "5.07436, -114.877, -104.956, 1.94", "1.30492, -121.256, -111.139, 0.28", "0.961688, -121.802, -111.661, 0.56", "-0.916354, -124.749, -114.312, 0.28", "-1.26417, -125.298, -114.752, 0.56", "-4.97421, -130.88, -116.674, 0.28", "-5.64737, -131.831, -116.818, 0.56" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "7.67499, -24.7605, 0.2407, 0.83", "7.45101, -27.0224, -2.54936, 0.83", "7.28882, -30.5011, -6.75334, 0.83", "7.32603, -32.9677, -9.85917, 0.83", "7.44729, -35.3227, -12.9772, 0.83", "7.57135, -37.4926, -15.7108, 0.83", "7.67833, -39.8159, -18.46, 0.83", "7.84111, -42.0307, -21.0744, 0.83", "8.00449, -45.5598, -24.8439, 1.11", "8.07834, -50.8515, -30.1929, 0.56", "8.04851, -52.6889, -31.8898, 0.83", "7.85518, -56.3639, -35.1007, 0.28", "7.63831, -58.3172, -36.6473, 1.11", "6.25002, -65.6539, -41.1454, 0.28", "6.03135, -66.4445, -41.4527, 0.83", "5.23531, -68.5834, -41.8196, 0.28", "4.87727, -69.3332, -41.8077, 0.83", "1.99425, -73.8267, -40.3915, 0.28", "0.4768, -75.6631, -39.3155, 0.83", "-2.34506, -78.3982, -37.1254, 0.28", "-3.29588, -79.197, -36.5232, 0.83", "-5.76055, -81.1426, -35.0334, 0.28", "-8.34362, -83.0809, -33.5331, 1.11", "-12.5735, -85.8263, -31.3669, 0.28", "-14.9629, -87.2501, -30.2625, 0.56", "-18.608, -89.3058, -29.0447, 0.28" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "7.67499, -24.7605, 0.2407, 0.83", "8.73667, -25.923, 0.181258, 0.83", "9.82355, -27.1131, 0.120406, 1.11" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "17.1608, -14.0945, 33.4046, 0.56", "17.7524, -15.3562, 33.4046, 0.56", "18.6687, -17.6694, 33.4046, 0.56", "19.4927, -20.7255, 33.5209, 0.56", "20.4564, -24.9528, 33.7601, 0.56", "20.6716, -26.3525, 33.8675, 0.56", "20.8638, -28.1053, 34.0168, 0.56", "20.8384, -29.21, 34.1556, 0.56", "20.2633, -33.2337, 35.0457, 0.56", "19.8359, -34.8893, 35.5256, 0.56", "18.9, -37.8618, 36.5337, 0.56", "18.3941, -39.6307, 37.1649, 0.56", "17.4589, -43.5187, 38.5841, 0.56", "16.746, -46.6475, 39.806, 0.56", "16.2562, -48.5408, 40.6055, 0.56", "15.7902, -50.2681, 41.4427, 0.56", "15.4722, -51.6687, 42.1753, 0.56", "15.2519, -52.7429, 42.7519, 0.83", "14.8293, -55.9851, 44.4026, 0.56", "14.7072, -56.7306, 44.7534, 0.83", "14.1177, -59.8905, 46.5751, 0.56", "13.8263, -61.0143, 47.3475, 0.56", "13.6428, -70.859, 49.0937, 0.56", "14.7401, -80.7772, 49.7451, 0.56", "16.7764, -90.2329, 52.2837, 0.56", "19.8624, -99.5727, 54.0845, 0.56", "24.4106, -108.41, 55.1901, 0.56", "30.4569, -116.344, 54.4922, 0.56", "37.8602, -122.825, 52.7053, 0.56", "45.589, -128.152, 49.2579, 0.56", "52.9327, -134.314, 46.412, 0.56", "58.3701, -141.513, 42.0972, 0.56", "64.3414, -148.41, 38.0018, 0.56", "69.3945, -155.872, 33.6682, 0.56" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "17.1608, -14.0945, 33.4046, 0.56", "19.4764, -15.6194, 35.5673, 0.56", "20.5683, -16.3137, 36.4654, 0.56", "22.0633, -17.2175, 37.5935, 0.56", "24.1084, -18.3039, 38.9442, 0.56", "26.726, -19.5757, 40.6217, 0.56", "28.9067, -20.5537, 41.9773, 0.56", "30.5413, -21.2518, 42.9126, 0.56", "33.3352, -22.3438, 44.4014, 0.56", "35.9846, -23.3233, 45.6243, 0.56", "37.4518, -23.8428, 46.2103, 0.56", "39.402, -24.5651, 46.9384, 0.56", "42.5272, -25.8079, 48.0002, 0.56", "45.477, -26.818, 48.8896, 0.28", "48.2503, -27.6421, 49.6469, 0.56", "50.3243, -28.2036, 50.2276, 0.56", "51.5438, -28.4988, 50.5518, 0.28", "52.6372, -28.6902, 50.8567, 0.28", "57.2983, -28.9688, 52.4684, 0.56", "59.2168, -28.9485, 53.3612, 0.56", "60.6499, -28.9297, 54.1891, 0.56", "61.9696, -28.9399, 55.0431, 0.56", "63.4756, -28.9388, 56.0581, 0.56", "66.6436, -28.9689, 58.3365, 0.56", "68.2624, -29.1118, 59.6433, 0.56", "70.3676, -29.3348, 61.3053, 0.56", "73.7995, -29.642, 63.9946, 0.56", "82.6121, -32.5208, 67.743, 0.56", "91.1465, -35.3574, 72.1154, 0.56", "99.0151, -38.8307, 77.2164, 0.56", "107.158, -41.4083, 82.4183, 0.56", "115.493, -43.0465, 87.6954, 0.56", "123.6, -44.9741, 93.2235, 0.56", "130.226, -47.8977, 100.119, 0.56" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "29.9148, 3.57459, 38.0182, 0.56", "34.5113, 2.52407, 35.3928, 0.56", "37.193, 1.97169, 34.1548, 0.56", "41.7216, 1.10635, 32.3472, 0.56", "43.9127, 0.6712, 31.5523, 0.56", "48.3533, -0.19208, 30.0143, 0.56", "51.8165, -0.89314, 28.8623, 0.56", "55.6304, -1.68868, 28.0076, 0.56", "57.5101, -2.10463, 27.6737, 0.28", "58.8276, -2.48187, 27.4951, 1.39", "61.201, -3.24876, 27.1093, 0.56", "62.4922, -3.73142, 26.9425, 0.83", "64.9477, -4.97405, 26.7842, 0.28", "65.6652, -5.41606, 26.7636, 0.56", "67.7386, -7.0199, 27.3344, 0.28", "68.8166, -7.87305, 27.7424, 0.56", "72.1875, -10.4597, 29.12, 0.28", "72.8631, -10.9355, 29.4096, 1.11", "74.5104, -12.0423, 30.1334, 1.11", "83.09, -17.6045, 33.9714, 0.28", "86.6285, -19.8272, 35.5924, 0.56", "89.1776, -21.377, 36.6514, 0.28", "92.0599, -22.9871, 37.6867, 0.83", "92.7282, -23.349, 37.9165, 0.83", "94.6675, -24.4064, 38.7508, 0.28", "95.6449, -24.9323, 39.1665, 0.83", "99.262, -27.1275, 40.829, 0.28", "100.172, -27.7392, 41.2714, 0.56", "102.491, -29.3567, 42.4283, 0.56", "113.568, -37.1854, 48.2447, 0.28", "115.452, -38.5493, 49.3042, 1.11", "118.481, -40.7576, 51.1046, 0.28", "120.161, -42.006, 52.1849, 0.56", "127.963, -48.2601, 52.0542, 0.56", "134.961, -55.1878, 50.3121, 0.56", "142.714, -61.0015, 47.8453, 0.56", "150.507, -66.1978, 44.3424, 0.56" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "29.9148, 3.57459, 38.0182, 0.83", "29.7648, 5.50459, 41.9882, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "0.490001, 37.8828, -17.2387, 0.83", "-0.761868, 40.0259, -18.5976, 0.83", "-1.70678, 41.7622, -19.6356, 0.83", "-3.59208, 45.2894, -21.6208, 0.83", "-5.26142, 48.4006, -23.3214, 0.83", "-6.63535, 50.8356, -24.5875, 0.83", "-7.86369, 53.0035, -25.7319, 0.83", "-8.88068, 54.7147, -26.7025, 0.83", "-9.72129, 56.09, -27.4861, 0.83", "-11.7211, 59.253, -29.1902, 1.11", "-13.1022, 61.4049, -30.2449, 0.83", "-15.1738, 64.1259, -31.6445, 0.83", "-17.6186, 66.7455, -33.0906, 0.56", "-18.453, 67.4983, -33.476, 0.28", "-19.1934, 68.114, -33.7501, 0.28", "-20.7262, 69.2895, -34.2674, 0.83", "-24.2262, 71.9172, -35.548, 0.28", "-26.5035, 73.7001, -36.3392, 1.11", "-31.05, 77.5412, -37.9901, 0.28", "-32.0526, 78.4496, -38.3807, 0.28", "-34.5353, 80.7968, -39.4779, 1.11", "-37.0583, 83.3709, -40.6786, 0.83", "-39.695, 86.2004, -41.9465, 0.28", "-40.2727, 86.7806, -42.2752, 0.56", "-41.3961, 87.7263, -42.977, 0.56", "-44.3956, 89.8353, -44.8529, 0.28", "-45.8632, 90.6767, -45.756, 0.28", "-47.8524, 91.5187, -47.0236, 0.83", "-51.876, 92.7694, -49.6847, 0.28", "-54.517, 93.4666, -51.4635, 0.83", "-57.0463, 94.0695, -53.2384, 0.28", "-58.6853, 94.4068, -54.4239, 0.56", "-61.2088, 94.836, -56.3659, 0.83", "-62.7318, 95.0671, -57.5698, 0.56", "-64.5619, 95.2292, -58.7883, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "0.490001, 37.8828, -17.2387, 0.83", "2.01, 39.6728, -17.3087, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.254665, 39.2579, 8.95158, 0.83", "-1.64271, 43.4893, 8.43468, 0.83", "-2.46225, 45.3171, 8.21141, 0.83", "-4.16137, 49.1064, 7.74852, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "0.254665, 39.2579, 8.95158, 1.11", "2.10482, 41.3333, 10.3224, 1.11", "4.39051, 43.8972, 12.0159, 1.11", "5.80573, 45.4848, 13.0644, 0.83", "8.48159, 48.4864, 15.047, 1.11", "12.2156, 52.675, 17.8135, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-35.4245, 37.3227, 0.152267, 0.56", "-37.9328, 38.3149, -1.89007, 0.56", "-41.186, 39.604, -4.59936, 0.56", "-43.6546, 40.5009, -6.507, 0.83", "-47.1417, 41.6893, -9.13955, 0.56", "-53.9927, 43.8672, -13.9504, 0.56", "-55.8561, 44.4596, -15.2589, 0.56", "-58.8065, 45.4806, -17.7259, 0.83", "-60.9241, 46.2641, -19.8324, 0.56", "-62.8196, 46.9284, -21.7843, 0.56", "-64.4354, 47.3555, -23.0624, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-35.4245, 37.3227, 0.152267, 0.56", "-37.055, 41.3992, -2.77198, 0.56", "-37.5568, 43.6659, -4.35272, 0.83", "-38.1972, 46.5587, -6.37004, 0.56", "-38.5521, 48.162, -7.4881, 0.56", "-39.4417, 52.1805, -10.2904, 0.56", "-39.8983, 54.2429, -11.7287, 1.11", "-40.3931, 58.8571, -15.6703, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-18.608, -89.3058, -29.0447, 0.28", "-21.2962, -86.8962, -27.33, 0.28", "-24.3542, -84.1552, -25.3795, 1.11" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-18.608, -89.3058, -29.0447, 0.56", "-17.2972, -90.7928, -29.4459, 0.56", "-16.1474, -92.1105, -29.8037, 0.28", "-15.6042, -92.7737, -29.9678, 0.83", "-14.6495, -93.8871, -30.2261, 0.28", "-12.5695, -96.3535, -30.7532, 1.11", "-11.8282, -97.2323, -30.9932, 0.28", "-11.2849, -97.9058, -31.1292, 0.83", "-10.2208, -99.278, -31.3611, 0.28", "-9.15311, -100.586, -31.4899, 0.28", "-8.44679, -101.398, -31.7631, 0.83", "-6.42471, -103.817, -32.8019, 0.28", "-3.98115, -106.705, -34.4331, 1.11", "-1.09343, -110.013, -36.5251, 0.28", "0.792802, -112.093, -38.0117, 1.39", "7.14927, -118.96, -43.2438, 0.28", "8.33827, -120.168, -44.2472, 0.83", "10.994, -122.725, -46.4557, 0.28", "12.7445, -124.288, -47.9258, 1.39", "15.6519, -126.827, -50.2465, 0.28", "16.5699, -127.623, -50.9142, 1.11", "20.2173, -130.59, -52.7526, 0.28", "21.9108, -131.907, -53.5554, 0.83", "25.3373, -134.596, -54.9925, 0.28", "25.9926, -135.116, -55.2672, 0.56", "28.5591, -137.187, -56.1693, 0.28", "30.2841, -138.621, -56.7633, 1.11" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "9.82355, -27.1131, 0.120406, 0.56", "12.5118, -31.1156, -8.09724, 0.56", "13.2592, -32.3337, -10.4378, 0.83", "15.0649, -35.5573, -17.4829, 0.83", "15.6506, -36.5074, -19.9741, 0.83", "16.1358, -37.2249, -21.9754, 0.83", "16.7778, -38.0842, -24.5149, 1.11", "17.283, -38.709, -26.4588, 1.11", "19.2517, -40.9993, -34.663, 1.11", "21.0524, -42.9318, -42.6121, 0.28", "21.2633, -43.1693, -43.747, 1.39", "21.8778, -43.7891, -47.3062, 0.83" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "9.82355, -27.1131, 0.120406, 0.83", "13.1149, -28.01, -1.0818, 0.83", "16.965, -28.7687, -2.45819, 0.83", "18.4277, -29.0551, -2.94554, 0.28", "20.1781, -29.4179, -3.48045, 0.28", "23.0231, -30.067, -4.06599, 0.83", "28.4431, -31.3742, -4.86567, 0.56", "32.4869, -32.3586, -4.92973, 0.56", "34.8042, -32.9299, -4.79161, 0.56", "38.0351, -33.7861, -4.37637, 1.11", "42.678, -35.1453, -3.45248, 0.28", "43.2591, -35.317, -3.28823, 1.11", "46.8177, -36.2422, -2.15216, 0.28", "48.5118, -36.6274, -1.74239, 1.67", "50.4407, -36.9081, -1.50203, 0.56", "52.6692, -37.0344, -1.55146, 0.28", "54.0647, -37.0125, -1.58676, 1.11", "59.0442, -36.7587, -1.49515, 0.28", "60.2904, -36.6581, -1.44044, 1.94", "61.9544, -36.495, -1.29462, 2.22", "66.0735, -36.1248, -0.810479, 0.56", "73.4388, -35.6061, 0.506598, 0.28", "73.9569, -35.581, 0.617354, 1.39", "75.6107, -35.5858, 0.992897, 1.39", "77.8246, -35.6683, 1.37523, 0.28", "79.3727, -35.7524, 1.531, 0.83", "82.3611, -35.9517, 1.53361, 0.28", "84.6139, -36.1527, 1.25575, 0.83", "90.6138, -36.6791, 0.445255, 0.28", "92.031, -36.7974, 0.246263, 0.83", "93.6692, -36.921, 0.0185152, 0.28", "94.5431, -36.959, -0.104195, 0.56" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "29.7648, 5.50459, 41.9882, 0.83", "31.5952, 5.29809, 43.8758, 0.83", "33.8512, 5.3433, 46.1849, 0.83", "36.7902, 5.79179, 49.1141, 0.83", "38.6716, 6.13145, 50.8114, 0.83", "39.4267, 6.30272, 51.4557, 0.83", "41.3622, 6.87335, 53.0322, 0.83", "43.5043, 7.51388, 54.6026, 0.83", "45.0662, 8.10017, 55.6397, 0.83", "47.1995, 9.18094, 57.0459, 0.83", "49.9145, 10.775, 58.8952, 0.83", "53.2099, 12.6746, 61.243, 0.83" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "29.7648, 5.50459, 41.9882, 0.83", "29.8426, 9.40234, 39.6286, 0.83", "29.9921, 14.3822, 36.861, 0.83", "30.1401, 17.543, 35.1732, 0.83", "30.2302, 19.3746, 34.229, 0.83", "30.3211, 20.9649, 33.4283, 0.83", "30.4503, 22.9757, 32.4577, 0.56", "30.5792, 23.9977, 31.9558, 0.83", "30.8526, 25.7641, 31.4098, 0.56", "30.9734, 26.3589, 31.2877, 0.83", "31.5471, 28.5638, 30.9142, 0.56", "31.9501, 29.9013, 30.7118, 0.83", "32.6328, 32.1538, 30.3449, 0.83", "33.2326, 34.071, 30.0536, 0.83", "33.7265, 35.5911, 29.8606, 0.28", "34.2826, 37.2632, 29.6246, 0.56", "34.6795, 38.5882, 29.4473, 0.28", "35.3869, 41.3418, 29.1898, 0.83", "35.8752, 43.654, 29.0414, 0.28", "36.3384, 46.0897, 28.9539, 0.83", "36.565, 47.6211, 28.9387, 0.28", "37.1829, 52.9212, 29.0117, 0.83", "37.5282, 55.98, 29.1437, 0.56", "37.6548, 57.3582, 29.3181, 0.83", "37.8682, 60.0351, 29.7886, 0.83", "38.0467, 63.0681, 30.4158, 0.28", "38.1159, 64.7104, 30.8328, 0.83", "38.2448, 67.2347, 31.5901, 0.83", "38.5282, 70.86, 32.9652, 0.56", "38.6823, 72.1398, 33.7434, 0.56", "39.515, 76.3832, 37.217, 0.56", "40.1637, 78.2692, 39.6003, 0.56", "40.6825, 79.2042, 41.3024, 0.83", "41.8486, 80.9464, 45.0791, 0.83", "43.8666, 83.2107, 51.1375, 0.56", "44.6381, 83.8482, 53.4214, 0.56", "47.2269, 85.0663, 60.7502, 0.56", "48.7734, 85.5478, 64.9438, 0.56", "50.6734, 94.8291, 68.1451, 0.56", "52.975, 104.266, 70.5209, 0.56", "54.3053, 113.525, 74.0574, 0.56", "56.6433, 122.75, 77.1295, 0.56", "58.4432, 132.01, 80.4461, 0.56" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-4.16137, 49.1064, 7.74852, 0.83", "-4.94605, 49.9548, 9.74708, 0.83", "-6.32539, 51.4462, 13.2602, 0.83", "-7.41505, 52.6244, 16.0355, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-4.16137, 49.1064, 7.74852, 0.83", "-4.58003, 52.1334, 6.6669, 0.83", "-5.53554, 56.1401, 5.75476, 0.83", "-6.64898, 61.0862, 4.78252, 0.83", "-7.02506, 63.012, 4.43519, 0.83", "-7.50231, 65.4813, 3.96083, 0.83", "-8.375, 69.793, 3.14079, 0.83", "-9.44213, 75.5831, 1.96667, 0.83", "-10.1223, 79.4936, 0.922327, 0.83", "-10.4093, 80.9804, 0.515068, 0.83", "-10.9837, 83.7394, -0.445557, 0.56", "-11.6585, 86.902, -1.83024, 0.83", "-12.4823, 90.3836, -3.68211, 0.83", "-13.2002, 93.4485, -5.62038, 0.83", "-13.5873, 94.9456, -6.66268, 0.83", "-14.1311, 97.1392, -8.12777, 0.83", "-14.6727, 99.4805, -9.57162, 0.56", "-14.9586, 100.838, -10.3452, 0.56", "-15.623, 104.409, -11.9991, 0.83", "-15.9644, 106.809, -13.009, 0.83", "-16.4766, 111.456, -14.7973, 0.83", "-16.6841, 113.572, -15.5058, 0.83", "-16.8283, 115.401, -16.0384, 0.56", "-16.9836, 117.946, -16.679, 1.11", "-17.2129, 120.617, -17.056, 0.28", "-17.3444, 121.95, -17.1557, 0.83", "-17.5247, 124.182, -17.2459, 0.28", "-17.6377, 126.216, -17.3429, 0.83", "-17.7365, 128.246, -17.4898, 0.83", "-17.797, 132.074, -18.032, 0.28", "-17.7559, 133.615, -18.3152, 0.28", "-17.7296, 133.995, -18.4282, 0.83", "-17.4149, 137.225, -19.6635, 0.28", "-17.2497, 139.999, -20.9665, 0.83", "-17.1339, 142.309, -22.3547, 0.28", "-17.1194, 143.49, -23.0955, 0.83", "-17.1724, 145.458, -24.2623, 0.28", "-17.2029, 146.972, -24.9791, 0.83", "-17.3571, 152.182, -26.9844, 0.28", "-17.3689, 155.25, -28.1157, 0.56", "-17.3415, 161.067, -30.2592, 0.28", "-17.3071, 162.144, -30.6494, 0.56", "-16.9755, 170.021, -33.3598, 0.56", "-16.9046, 171.564, -33.845, 0.83", "-16.6596, 176.041, -35.3465, 0.83", "-16.4476, 180.086, -36.7838, 0.56", "-16.223, 183.67, -38.2078, 0.56", "-16.1272, 185.762, -39.0859, 0.28", "-16.0621, 189.195, -40.7203, 1.11", "-15.9738, 194.807, -43.2755, 0.28", "-15.9909, 195.62, -43.5947, 0.56", "-15.9992, 198.139, -44.5505, 0.28", "-16.0436, 199.177, -44.9693, 0.56", "-16.1253, 202.115, -46.0731, 0.28", "-16.1516, 202.461, -46.2553, 0.56", "-16.3655, 203.753, -46.8202, 0.28", "-16.5153, 204.501, -47.1461, 0.83", "-17.5797, 209.443, -49.2719, 0.28", "-17.9316, 210.978, -49.8942, 1.11", "-19.6683, 220.144, -52.7947, 0.28", "-20.968, 227.878, -55.1225, 0.28", "-21.2428, 229.746, -55.6785, 0.83", "-21.4772, 231.599, -56.2043, 0.28", "-21.6044, 232.787, -56.5161, 0.56", "-22.5306, 243.147, -59.1086, 0.28", "-22.7454, 247.233, -59.9119, 0.83", "-22.8028, 252.668, -61.2914, 0.28", "-22.814, 254.035, -61.6696, 0.83", "-22.8251, 255.071, -61.9872, 0.28", "-22.8506, 256.681, -62.5619, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "12.2156, 52.675, 17.8135, 0.83", "15.1987, 55.3128, 21.9088, 0.83", "16.1696, 56.2377, 23.1939, 0.56", "18.3204, 57.9251, 25.8693, 0.56", "20.3069, 59.2589, 28.2454, 0.56", "22.0715, 60.2175, 30.2806, 0.56", "24.1783, 61.1928, 32.6567, 0.56", "26.0661, 61.8218, 34.5934, 0.56", "30.6403, 62.8775, 39.1894, 0.56", "33.5991, 63.1622, 41.94, 0.56", "35.932, 63.1593, 43.8988, 0.56", "37.5353, 63.0745, 45.1109, 0.56", "40.2324, 62.8505, 46.8367, 0.56", "42.6824, 62.6107, 48.2141, 0.56", "45.6453, 62.4977, 49.5727, 0.56", "49.488, 62.55, 51.1737, 0.56", "51.6293, 62.6985, 52.0788, 0.56", "53.3091, 62.7609, 52.849, 0.56", "57.0165, 62.7, 54.8227, 0.56", "59.6109, 62.4513, 56.4911, 0.56", "61.0488, 62.1286, 57.6337, 0.56", "62.9299, 61.3739, 59.4554, 0.56", "65.9576, 59.7347, 62.6718, 0.56", "68.4157, 58.1284, 65.4986, 0.56", "70.4645, 56.4796, 68.0809, 0.56", "72.3925, 54.6716, 70.6193, 0.56", "74.1444, 52.919, 72.9923, 0.28", "74.344, 52.7104, 73.2693, 0.83", "82.328, 54.1941, 79.1049, 0.83", "89.7131, 57.1557, 85.162, 0.83", "98.0062, 59.936, 90.0091, 0.83", "106.766, 63.5704, 93.1826, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "12.2156, 52.675, 17.8135, 0.83", "16.1495, 55.3596, 17.0069, 0.83", "19.4492, 57.7367, 16.1682, 0.83", "22.9719, 60.2584, 15.1489, 0.83", "25.7544, 62.2503, 14.3439, 0.83", "29.2768, 64.7718, 13.3247, 0.83", "31.7039, 66.5092, 12.6225, 0.83", "33.1399, 67.3805, 12.0686, 0.83", "34.0584, 67.9761, 11.6071, 1.11" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-64.4354, 47.3555, -23.0624, 0.56", "-66.0612, 45.2187, -24.6134, 0.56", "-67.3322, 43.6035, -25.7814, 0.56", "-69.2356, 41.2408, -27.349, 0.83", "-71.6595, 38.3743, -29.1473, 0.83", "-74.6529, 35.064, -31.0856, 0.56", "-76.6427, 32.8635, -32.3741, 0.56", "-78.8672, 30.439, -33.6589, 0.28", "-81.0365, 28.1683, -34.8099, 1.11", "-83.4026, 25.7082, -35.8143, 0.28", "-85.8775, 23.3737, -36.6267, 0.56" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-64.4354, 47.3555, -23.0624, 0.56", "-70.947, 48.5452, -19.2207, 0.56", "-75.4675, 49.5258, -16.7162, 0.56", "-81.3806, 50.9571, -13.6711, 0.56", "-83.1285, 51.4168, -12.8384, 0.56", "-84.3493, 51.7394, -12.2584, 0.28", "-86.7772, 52.3534, -11.1323, 0.56", "-87.3716, 52.4936, -11.0088, 0.28", "-88.7774, 52.9862, -11.0085, 0.56", "-89.6822, 53.4783, -11.2586, 0.28", "-91.6313, 54.4496, -12.5009, 0.56", "-92.9027, 55.0183, -13.464, 0.83", "-96.0724, 56.3574, -16.0904, 0.28", "-99.3502, 57.7976, -18.6718, 0.56", "-101.395, 58.7626, -20.2309, 0.83", "-106.214, 61.2285, -23.9093, 0.28", "-108.133, 62.3198, -25.3597, 0.28", "-108.585, 62.5909, -25.6764, 0.56", "-111.585, 64.179, -27.4221, 0.28", "-112.716, 64.737, -28.0205, 0.56", "-114.855, 65.759, -29.0601, 0.28", "-116.242, 66.3874, -29.7058, 0.83", "-118.035, 67.1076, -30.787, 0.83", "-121.869, 68.5191, -33.4178, 0.56", "-123.269, 68.9828, -34.4246, 0.56", "-124.877, 69.5138, -35.3498, 0.28", "-125.933, 69.845, -35.9064, 0.83", "-128.595, 70.6753, -37.2584, 0.56", "-131.957, 71.873, -38.6941, 1.11", "-133.812, 72.6904, -39.3248, 0.56", "-138.02, 74.5963, -40.6003, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "21.8778, -43.7891, -47.3062, 0.28", "26.2128, -44.8374, -50.3377, 0.28", "27.5944, -45.2251, -51.2212, 1.67", "36.0861, -47.7999, -56.174, 0.28", "38.921, -48.7045, -57.617, 1.67", "43.8685, -50.3419, -60.0285, 0.28", "50.499, -52.5327, -63.1084, 0.28", "51.8394, -53.0039, -63.7761, 2.22", "55.8045, -54.4327, -65.5542, 0.28", "58.4439, -55.3678, -66.4108, 1.11", "62.6843, -56.7629, -67.7756, 0.28", "64.5182, -57.2873, -68.0703, 1.11", "67.9633, -58.1237, -68.3625, 0.28", "68.8233, -58.3037, -68.3932, 0.83", "73.3842, -59.1563, -68.1156, 0.28", "74.1808, -59.3188, -67.9158, 0.83", "79.811, -60.6364, -65.4544, 0.28", "82.1007, -61.2541, -64.3396, 0.83", "84.1046, -61.8556, -63.1976, 0.28", "85.7325, -62.3241, -62.1351, 1.11", "92.7597, -64.1875, -57.1279, 0.28", "93.2142, -64.2881, -56.8349, 1.11", "95.6918, -64.7053, -55.3384, 0.28", "97.8196, -64.8857, -53.9239, 0.83", "103.21, -64.8756, -50.2644, 0.28", "103.844, -64.8321, -49.8032, 0.83", "107.307, -64.2985, -47.126, 0.28", "109.665, -63.942, -45.2593, 0.56", "113.243, -63.4029, -42.5096, 0.28", "113.474, -63.3729, -42.3541, 0.56", "118.968, -62.9122, -38.734, 0.28", "121.457, -62.7918, -36.9495, 0.28", "122.167, -62.7914, -36.372, 0.56", "124.341, -62.8812, -34.907, 0.28", "125.118, -62.9503, -34.48, 0.83" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "21.8778, -43.7891, -47.3062, 0.28", "25.1208, -43.9256, -51.8959, 0.28", "25.8545, -43.9626, -53.0759, 0.83", "28.2407, -44.1064, -57.105, 0.28", "29.4891, -44.2533, -59.3437, 1.39", "34.8845, -45.1638, -69.2509, 0.28", "35.4017, -45.2783, -70.2657, 1.11", "39.5427, -46.4303, -78.8828, 0.28", "40.1882, -46.7098, -80.5943, 0.56", "41.6179, -47.5163, -84.8657, 0.28", "41.9877, -47.7577, -86.0659, 1.11", "45.2486, -50.3611, -97.4214, 0.28", "46.0019, -51.0044, -100.168, 1.11", "51.2817, -55.7916, -120.116, 0.28", "51.7115, -56.178, -121.792, 0.83" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "53.2099, 12.6746, 61.243, 0.56", "53.2437, 14.4183, 61.3997, 0.56", "53.9489, 16.3925, 61.939, 0.56", "54.7131, 18.0942, 62.4563, 0.28", "55.5967, 20.0618, 63.0544, 0.56", "56.2257, 21.4626, 63.4803, 0.56", "56.8883, 22.938, 63.9288, 1.11", "60.3987, 29.4926, 66.2014, 0.28", "61.0026, 30.4278, 66.563, 0.56" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "53.2099, 12.6746, 61.243, 0.83", "53.9099, 14.3946, 60.393, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-7.41505, 52.6244, 16.0355, 0.83", "-8.26944, 52.535, 17.7165, 0.83", "-10.6525, 52.1636, 22.2632, 0.83", "-11.9258, 51.9359, 24.7742, 0.56", "-12.5898, 51.749, 26.1028, 0.56", "-14.1619, 51.2529, 29.1345, 0.56", "-16.654, 50.3165, 33.787, 0.56", "-17.3923, 49.9508, 35.1827, 0.56", "-19.2019, 48.6574, 38.5857, 0.56", "-20.5161, 47.6102, 41.1282, 0.56", "-21.1123, 47.0808, 42.3072, 0.56", "-22.1438, 46.1082, 44.1955, 0.56", "-23.8094, 44.2006, 47.0595, 0.56", "-25.0618, 42.6133, 49.3776, 0.56" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.41505, 52.6244, 16.0355, 0.83", "-6.74656, 54.4361, 18.3649, 0.83", "-6.40857, 55.7136, 19.7932, 0.83", "-5.60612, 58.9099, 23.3757, 0.83", "-4.90482, 61.7033, 26.5068, 0.83", "-4.31376, 64.0575, 29.1456, 0.83", "-3.77588, 66.1999, 31.5469, 0.83", "-3.06712, 69.43, 35.2024, 0.83", "-1.70893, 75.5717, 42.5271, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "34.0584, 67.9761, 11.6071, 0.83", "35.8162, 70.7395, 3.37281, 0.83", "36.3726, 71.6902, 1.1647, 0.83", "37.9799, 74.5134, -4.68189, 0.83", "39.5815, 77.4208, -10.195, 0.83", "40.3754, 78.9471, -12.8404, 0.83", "42.3367, 82.9348, -19.2464, 0.83", "44.0849, 87.0166, -24.371, 0.28", "44.3847, 87.7116, -25.0356, 0.56", "45.0607, 89.1611, -26.085, 1.11", "45.968, 90.9087, -27.1664, 0.83", "47.1975, 93.0101, -28.3931, 0.83", "50.0778, 97.507, -30.8003, 0.83", "54.5183, 103.945, -34.4694, 0.56", "56.7137, 107.227, -36.8553, 0.56", "58.5286, 110.071, -39.3422, 1.11", "59.0038, 110.831, -40.1638, 0.83", "59.511, 111.651, -41.1484, 0.28", "60.4145, 113.254, -43.4843, 1.11", "62.1579, 118.12, -52.243, 0.28", "62.4293, 119.634, -54.9719, 1.39", "62.5636, 121.575, -58.5181, 0.56" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "34.0584, 67.9761, 11.6071, 0.83", "36.613, 70.1602, 11.2263, 0.83", "38.999, 72.0358, 10.9159, 0.56", "41.4649, 73.8826, 10.5355, 0.56", "46.0101, 77.3199, 9.57147, 0.56", "47.396, 78.3544, 9.26207, 0.56", "49.475, 79.909, 8.7886, 0.56", "50.1499, 80.4382, 8.59846, 0.56", "51.5169, 81.3823, 8.09928, 0.56", "54.7857, 83.2692, 6.32185, 0.56", "57.3181, 84.4827, 4.45954, 0.56", "58.9113, 85.23, 3.16154, 0.56", "60.8388, 86.1373, 1.56178, 0.56", "64.47, 87.7651, -1.3292, 0.83", "68.1802, 89.3543, -4.21682, 0.56", "71.0527, 90.5437, -6.31656, 0.56", "72.9951, 91.3877, -7.61674, 0.56", "75.4781, 92.5643, -9.061, 0.83", "77.5021, 93.6562, -9.99041, 1.11", "79.6016, 94.9664, -10.7815, 0.28", "83.0531, 97.356, -11.873, 0.28", "85.2179, 98.924, -12.4919, 1.11", "88.5909, 101.534, -13.5278, 0.28", "90.9902, 103.479, -14.2157, 0.83", "92.5191, 104.757, -14.6475, 0.28", "93.6252, 105.715, -14.9268, 0.28", "94.7352, 106.774, -15.2504, 1.67", "95.7453, 107.843, -15.5273, 1.67", "97.2103, 109.612, -15.5837, 1.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-85.8775, 23.3737, -36.6267, 0.28", "-87.6699, 21.9896, -39.7647, 0.28", "-88.1715, 21.5646, -40.82, 0.56", "-88.5119, 21.1962, -41.6961, 0.56", "-92.1439, 16.7411, -51.7381, 0.28", "-92.9395, 15.7652, -53.9379, 0.56", "-95.6864, 12.3958, -61.5328, 0.28", "-96.9114, 10.6765, -65.5999, 1.39", "-98.2115, 8.59052, -70.4496, 0.28", "-98.4671, 8.10998, -71.5674, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-85.8775, 23.3737, -36.6267, 0.28", "-87.223, 19.1367, -45.7907, 0.28", "-87.4584, 18.4983, -47.0145, 1.11", "-87.9384, 17.1966, -49.5101, 0.28", "-88.4246, 15.8778, -52.0384, 0.83", "-89.0468, 14.1905, -55.273, 0.28", "-89.2831, 13.5494, -56.502, 0.56", "-89.8482, 12.6044, -56.9478, 0.56" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "61.0026, 30.4278, 66.563, 0.28", "63.4742, 32.0217, 67.1364, 0.28", "64.1238, 32.4407, 67.2871, 0.56", "67.8118, 34.8191, 68.1426, 0.28", "69.9598, 36.2044, 68.6409, 0.56", "77.4899, 41.8789, 71.9721, 0.56", "85.2093, 47.3967, 75.1289, 0.56", "92.0705, 53.9051, 78.3793, 0.56" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "61.0026, 30.4278, 66.563, 0.28", "61.5911, 34.8327, 66.5323, 0.28", "62.0821, 37.3474, 66.5167, 0.83", "62.6575, 39.7649, 66.6203, 0.28", "62.9462, 40.9779, 66.6723, 0.56", "63.2095, 42.0844, 66.7197, 0.28", "63.3538, 42.6908, 66.7457, 0.56", "64.0465, 44.6871, 66.9188, 0.28", "64.5908, 46.2345, 67.1376, 0.83", "67.3626, 55.7276, 65.6547, 0.83", "71.0538, 65.0156, 65.3279, 0.83", "75.2957, 74.0285, 64.4476, 0.83", "78.431, 83.5068, 65.0226, 0.83" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "53.9099, 14.3946, 60.393, 0.56", "57.9871, 15.1953, 62.9482, 0.56", "59.851, 15.5613, 64.1163, 0.56", "62.7323, 16.1271, 65.922, 0.56", "64.6987, 16.5133, 67.1543, 0.56", "67.0177, 16.9687, 68.6076, 0.56", "74.6598, 19.848, 74.3788, 0.56" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "53.9099, 14.3946, 60.393, 0.83", "53.5478, 17.3185, 61.7604, 0.83", "53.2194, 20.0717, 63.0534, 0.83", "53.0479, 21.3424, 63.6366, 1.11", "52.6625, 23.6862, 64.3651, 0.56", "52.2815, 25.8444, 64.7312, 0.56", "52.1039, 26.6043, 64.8483, 1.11", "51.7623, 27.7942, 64.9108, 0.56", "51.4941, 28.7542, 64.9268, 0.83", "50.3655, 33.2635, 64.8797, 0.83", "49.9076, 35.1743, 64.8655, 0.56", "49.1304, 38.8915, 64.6679, 0.56", "48.5576, 41.594, 64.4445, 0.56", "47.9605, 44.1401, 64.2104, 0.56", "47.3071, 47.1131, 63.8541, 0.56", "46.645, 50.1666, 63.4689, 0.56", "45.6763, 54.5986, 62.6581, 0.56", "45.1731, 57.3503, 62.0408, 0.56", "44.9449, 58.5519, 61.822, 0.56", "43.9402, 63.7986, 61.0029, 0.56", "43.6921, 65.2674, 60.8922, 0.56", "43.1695, 68.8399, 60.7413, 0.56", "42.6637, 72.9399, 60.9464, 0.56", "42.3307, 76.5904, 61.3522, 0.56", "42.1129, 79.694, 61.8593, 0.56", "41.7919, 83.6945, 63.0653, 0.56" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-25.0618, 42.6133, 49.3776, 0.56", "-25.994, 40.0563, 51.3368, 0.56", "-27.3158, 36.4303, 54.1151, 0.56", "-27.8648, 34.9243, 55.2689, 0.56", "-28.5349, 33.0863, 56.6772, 0.56", "-29.3362, 30.8882, 58.3614, 0.56", "-32.2012, 23.6542, 64.6433, 0.56", "-34.6078, 17.4714, 72.1253, 0.56", "-35.4734, 11.7552, 80.2847, 0.56", "-36.7466, 7.29832, 89.1455, 0.56" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-25.0618, 42.6133, 49.3776, 0.56", "-26.2251, 41.9196, 46.6488, 0.56", "-27.5251, 41.1443, 43.5991, 0.56", "-28.7407, 40.4195, 40.7476, 0.56", "-30.6203, 39.2985, 36.3382, 0.83", "-35.0481, 35.4078, 28.26, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-1.70893, 75.5717, 42.5271, 0.56", "-3.06452, 78.7496, 47.3668, 0.56", "-3.42355, 79.5913, 48.6486, 0.56", "-4.35997, 81.7865, 51.9918, 0.83", "-6.91169, 86.1775, 60.6062, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.70893, 75.5717, 42.5271, 0.56", "0.695062, 77.7129, 48.5319, 0.56", "1.08149, 78.0571, 49.4972, 0.56", "2.15498, 79.0133, 52.1786, 0.56", "3.13978, 79.8904, 54.6385, 0.56", "4.46323, 81.0692, 57.9443, 0.56", "9.45323, 82.7873, 66.4383, 0.56", "15.0265, 85.2784, 74.3587, 0.56", "20.6229, 87.4569, 82.3546, 0.56", "24.697, 91.2508, 90.6617, 0.56" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "97.2103, 109.612, -15.5837, 0.28", "100.227, 112.867, -16.1129, 0.28", "100.988, 113.672, -16.2212, 0.56", "106.96, 119.749, -16.9315, 0.28", "109.525, 122.377, -17.3387, 0.83", "111.255, 124.178, -17.6491, 0.83", "112.348, 125.296, -17.9004, 0.28", "113.071, 125.967, -18.0609, 0.56", "113.889, 126.701, -18.24, 0.56", "116.271, 128.885, -18.7385, 0.28", "117.512, 130.049, -19.2572, 0.83", "119.314, 131.957, -20.1846, 0.28", "120.979, 133.691, -21.1048, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "97.2103, 109.612, -15.5837, 0.28", "100.694, 109.756, -16.6354, 0.28", "102.592, 109.822, -17.3101, 0.28", "103.518, 109.846, -17.6703, 1.11", "106.306, 109.888, -18.7831, 0.28", "108.122, 109.916, -19.5075, 0.83", "112.522, 109.983, -21.2631, 0.28", "114.031, 109.948, -21.9987, 1.11", "115.975, 109.839, -23.0388, 0.28", "116.502, 109.802, -23.3353, 0.28" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-98.4671, 8.10998, -71.5674, 0.28", "-100.248, 7.41014, -75.1198, 0.28", "-100.364, 7.36987, -75.3604, 0.83", "-103.694, 6.35401, -82.0318, 0.28", "-104.284, 6.11351, -83.2832, 0.83", "-107.468, 4.6334, -89.9144, 0.56", "-108.523, 4.1341, -92.1731, 0.28", "-108.755, 4.03468, -92.6812, 0.28", "-109.244, 3.7851, -93.9473, 0.56", "-110.839, 2.76669, -99.0038, 0.28", "-111.251, 2.45621, -100.401, 1.11", "-112.75, 1.1327, -105.513, 0.28", "-113.227, 0.680593, -107.216, 0.56", "-114.985, -1.07583, -113.994, 0.28", "-115.05, -1.14386, -114.292, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-98.4671, 8.10998, -71.5674, 0.28", "-103.828, 4.25842, -78.5736, 0.28", "-104.261, 3.94721, -79.1397, 0.83", "-105.82, 2.82723, -81.177, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "92.0705, 53.9051, 78.3793, 0.28", "99.3134, 60.0721, 81.4628, 0.28", "106.296, 66.1983, 85.1672, 0.28", "113.267, 71.6862, 89.7809, 0.28" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "92.0705, 53.9051, 78.3793, 0.28", "100.165, 59.1406, 81.0404, 0.28", "107.116, 65.0779, 85.0928, 0.28", "115.174, 70.6542, 87.0887, 0.28", "122.822, 76.9943, 88.2315, 0.28", "130.6, 83.1356, 89.5672, 0.28" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "41.7919, 83.6945, 63.0653, 0.56", "40.4301, 84.4081, 60.1522, 0.56", "39.6247, 84.8302, 58.4292, 0.56", "36.3393, 86.92, 49.2184, 0.56" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "41.7919, 83.6945, 63.0653, 0.56", "40.9299, 86.3115, 63.9361, 0.56", "40.1598, 88.6498, 64.714, 0.56", "39.576, 90.422, 65.3037, 0.56", "38.8865, 92.5154, 66.0002, 0.56", "37.1862, 97.6777, 67.7178, 0.56", "33.0783, 105.877, 71.7038, 0.56", "28.9872, 114.372, 75.0365, 0.56", "25.6908, 122.781, 79.3279, 0.56", "22.9202, 130.785, 84.6449, 0.56", "19.0864, 137.348, 91.1426, 0.56", "13.9935, 143.44, 97.2217, 0.56" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-35.0481, 35.4078, 28.26, 0.56", "-38.9804, 32.7657, 19.4534, 0.56", "-44.5279, 30.0457, 11.5904, 0.56", "-48.9549, 28.6446, 2.73379, 0.56", "-53.5744, 28.2854, -6.12796, 0.56", "-58.5433, 28.2828, -14.8061, 0.56", "-63.7803, 29.1033, -23.2855, 0.56", "-69.0897, 30.6168, -31.6233, 0.56", "-74.9162, 31.9372, -39.6426, 0.56" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-35.0481, 35.4078, 28.26, 0.56", "-39.2875, 32.1435, 19.8118, 0.56", "-43.384, 27.6525, 11.8715, 0.56", "-47.6792, 23.4955, 3.85448, 0.56", "-52.802, 18.7788, -3.32252, 0.56", "-58.3778, 12.5852, -8.84966, 0.56" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "24.697, 91.2508, 90.6617, 0.28", "30.1891, 94.3211, 98.4341, 0.28", "36.0685, 95.71, 106.403, 0.28", "41.6581, 98.3394, 114.267, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "24.697, 91.2508, 90.6617, 0.28", "28.7972, 93.7948, 99.4205, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "120.979, 133.691, -21.1048, 0.28", "123.939, 131.288, -25.2199, 0.28", "124.1, 131.157, -25.4439, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "120.979, 133.691, -21.1048, 0.28", "122.241, 134.202, -22.5254, 0.28", "122.95, 134.488, -23.3221, 0.56", "129.817, 137.263, -31.0496, 0.28", "130.379, 137.49, -31.6817, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-74.9162, 31.9372, -39.6426, 0.28", "-79.5564, 32.0761, -48.4998, 0.28", "-83.3889, 30.7013, -57.6333, 0.28", "-85.4258, 29.1547, -67.3008, 0.28", "-87.4869, 25.9763, -76.5555, 0.28", "-89.0638, 24.2216, -86.2732, 0.28", "-90.5892, 22.5274, -96.0099, 0.28", "-92.9183, 21.5328, -105.684, 0.28", "-94.5853, 21.1988, -115.538, 0.28", "-97.5795, 21.3163, -125.079, 0.28", "-99.9163, 20.6926, -134.782, 0.28", "-100.631, 20.7983, -144.756, 0.28" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-74.9162, 31.9372, -39.6426, 0.28", "-80.3873, 30.8838, -47.9467, 0.28", "-84.772, 30.2202, -56.9096, 0.28" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-84.772, 30.2202, -56.9096, 0.28", "-85.062, 32.8383, -66.5565, 0.28", "-85.9345, 35.7296, -76.0895, 0.28", "-86.8345, 38.8156, -85.5588, 0.28", "-86.6708, 41.7365, -95.1212, 0.28", "-84.9936, 45.6698, -104.161, 0.28", "-82.1326, 51.3464, -111.88, 0.28", "-77.772, 58.4273, -117.434, 0.28", "-72.7622, 66.1175, -121.404, 0.28", "-66.9119, 73.5454, -124.66, 0.28", "-59.2316, 79.3211, -127.427, 0.28", "-50.7182, 84.1484, -129.481, 0.28", "-42.3871, 88.6289, -132.724, 0.28", "-35.2475, 93.9504, -137.275, 0.28", "-27.3194, 99.4441, -139.914, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-84.772, 30.2202, -56.9096, 0.56", "-91.0135, 28.139, -64.4403, 0.28", "-97.8824, 25.2065, -71.0901, 0.28", "-103.964, 23.4208, -78.8241, 0.28", "-109.051, 19.8808, -86.6727, 0.28", "-112.576, 13.989, -93.9428, 0.28", "-117.374, 6.64227, -98.7395, 0.28", "-122.469, -0.72398, -103.187, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_61", "dend_42", "dend_11", "dend_0", "dend_71", "dend_62", "dend_58", "dend_43", "dend_39", "dend_12", "dend_10", "dend_1", "dend_73", "dend_72", "dend_68", "dend_63", "dend_60", "dend_59", "dend_57", "dend_44", "dend_41", "dend_40", "dend_22", "dend_13", "dend_3", "dend_2", "dend_70", "dend_69", "dend_65", "dend_64", "dend_46", "dend_45", "dend_24", "dend_23", "dend_21", "dend_14", "dend_5", "dend_4", "dend_67", "dend_66", "dend_52", "dend_47", "dend_30", "dend_25", "dend_20", "dend_15", "dend_7", "dend_6", "dend_54", "dend_53", "dend_51", "dend_48", "dend_38", "dend_31", "dend_29", "dend_26", "dend_17", "dend_16", "dend_9", "dend_8", "dend_56", "dend_55", "dend_50", "dend_49", "dend_33", "dend_32", "dend_28", "dend_27", "dend_19", "dend_18", "dend_37", "dend_34", "dend_36", "dend_35" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_61", "dend_42", "dend_11", "dend_0", "dend_71", "dend_62", "dend_58", "dend_43", "dend_39", "dend_12", "dend_10", "dend_1", "dend_73", "dend_72", "dend_68", "dend_63", "dend_60", "dend_59", "dend_57", "dend_44", "dend_41", "dend_40", "dend_22", "dend_13", "dend_3", "dend_2", "dend_70", "dend_69", "dend_65", "dend_64", "dend_46", "dend_45", "dend_24", "dend_23", "dend_21", "dend_14", "dend_5", "dend_4", "dend_67", "dend_66", "dend_52", "dend_47", "dend_30", "dend_25", "dend_20", "dend_15", "dend_7", "dend_6", "dend_54", "dend_53", "dend_51", "dend_48", "dend_38", "dend_31", "dend_29", "dend_26", "dend_17", "dend_16", "dend_9", "dend_8", "dend_56", "dend_55", "dend_50", "dend_49", "dend_33", "dend_32", "dend_28", "dend_27", "dend_19", "dend_18", "dend_37", "dend_34", "dend_36", "dend_35" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_61", "dend_42", "dend_42", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "axon_0", "axon_0", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_62", "dend_62", "dend_62", "dend_62", "dend_58", "dend_58", "dend_58", "dend_58", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_63", "dend_63", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_27", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_MC_b7a2c9d0ae_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_61, id: dend_61, parent: soma_0
create dend_61
public dend_61
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_71, id: dend_71, parent: dend_61
create dend_71
public dend_71
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_42
create dend_58
public dend_58
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_11
create dend_39
public dend_39
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_68, id: dend_68, parent: dend_62
create dend_68
public dend_68
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_43
create dend_57
public dend_57
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_13
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_30, id: dend_30, parent: dend_24
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_38, id: dend_38, parent: dend_30
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_61, dend_42, dend_11, dend_0, dend_71, dend_62, dend_58, dend_43, dend_39, dend_12, dend_10, dend_1, dend_73, dend_72, dend_68, dend_63, dend_60, dend_59, dend_57, dend_44, dend_41, dend_40, dend_22, dend_13, dend_3, dend_2, dend_70, dend_69, dend_65, dend_64, dend_46, dend_45, dend_24, dend_23, dend_21, dend_14, dend_5, dend_4, dend_67, dend_66, dend_52, dend_47, dend_30, dend_25, dend_20, dend_15, dend_7, dend_6, dend_54, dend_53, dend_51, dend_48, dend_38, dend_31, dend_29, dend_26, dend_17, dend_16, dend_9, dend_8, dend_56, dend_55, dend_50, dend_49, dend_33, dend_32, dend_28, dend_27, dend_19, dend_18, dend_37, dend_34, dend_36, dend_35]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_61, dend_42, dend_11, dend_0, dend_71, dend_62, dend_58, dend_43, dend_39, dend_12, dend_10, dend_1, dend_73, dend_72, dend_68, dend_63, dend_60, dend_59, dend_57, dend_44, dend_41, dend_40, dend_22, dend_13, dend_3, dend_2, dend_70, dend_69, dend_65, dend_64, dend_46, dend_45, dend_24, dend_23, dend_21, dend_14, dend_5, dend_4, dend_67, dend_66, dend_52, dend_47, dend_30, dend_25, dend_20, dend_15, dend_7, dend_6, dend_54, dend_53, dend_51, dend_48, dend_38, dend_31, dend_29, dend_26, dend_17, dend_16, dend_9, dend_8, dend_56, dend_55, dend_50, dend_49, dend_33, dend_32, dend_28, dend_27, dend_19, dend_18, dend_37, dend_34, dend_36, dend_35]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_75
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_61, dend_42, dend_42, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, axon_0, axon_0, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_27, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_61(0), soma_0(0.4999995802555049)
    connect dend_42(0), soma_0(0.4999995802555049)
    connect dend_11(0), soma_0(0.4999995802555049)
    connect dend_0(0), soma_0(0.4999995802555049)
    connect axon_0(0), soma_0(1.0)
    connect dend_71(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_68(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_30(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_38(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.07469, 8.7884, -3.60465, 2.46822 ) }
    soma_0 { pt3dadd( -1.80097, 7.80768, -3.18165, 4.18763 ) }
    soma_0 { pt3dadd( -1.52725, 6.82696, -2.75864, 5.82788 ) }
    soma_0 { pt3dadd( -1.25354, 5.84624, -2.33563, 6.65447 ) }
    soma_0 { pt3dadd( -0.979817, 4.86552, -1.91263, 7.16537 ) }
    soma_0 { pt3dadd( -0.706098, 3.8848, -1.48962, 7.65932 ) }
    soma_0 { pt3dadd( -0.432379, 2.90408, -1.06661, 8.15198 ) }
    soma_0 { pt3dadd( -0.15866, 1.92336, -0.643608, 8.65797 ) }
    soma_0 { pt3dadd( 0.115059, 0.942645, -0.220602, 9.39908 ) }
    soma_0 { pt3dadd( 0.388778, -0.0380738, 0.202405, 9.84096 ) }
    soma_0 { pt3dadd( 0.662497, -1.01879, 0.625411, 10.262 ) }
    soma_0 { pt3dadd( 0.936216, -1.99951, 1.04842, 10.5747 ) }
    soma_0 { pt3dadd( 1.20993, -2.98023, 1.47142, 10.6871 ) }
    soma_0 { pt3dadd( 1.48365, -3.96095, 1.89443, 10.7925 ) }
    soma_0 { pt3dadd( 1.75737, -4.94167, 2.31744, 10.4834 ) }
    soma_0 { pt3dadd( 2.03109, -5.92239, 2.74044, 9.64708 ) }
    soma_0 { pt3dadd( 2.30481, -6.90311, 3.16345, 8.796 ) }
    soma_0 { pt3dadd( 2.57853, -7.88383, 3.58645, 7.50578 ) }
    soma_0 { pt3dadd( 2.85225, -8.86454, 4.00946, 6.02015 ) }
    soma_0 { pt3dadd( 3.12597, -9.84526, 4.43247, 4.01105 ) }
    soma_0 { pt3dadd( 3.39969, -10.826, 4.85547, 2.41119 ) }
    // Section: dend_61, id: dend_61, parent: soma_0 (entry count 21/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 2.49197, -10.3285, 2.1787, 1.94 ) }
    dend_61 { pt3dadd( 2.58196, -11.4285, 2.1787, 1.94 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 23/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 3.75196, -3.40843, 15.8187, 1.39 ) }
    dend_42 { pt3dadd( 4.44287, -3.62532, 20.0336, 1.39 ) }
    dend_42 { pt3dadd( 6.6042, -4.30378, 33.2188, 1.39 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 26/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.968043, 9.03157, -2.9013, 1.94 ) }
    dend_11 { pt3dadd( -0.876671, 12.4292, -3.46309, 1.94 ) }
    dend_11 { pt3dadd( -0.676369, 15.7519, -3.27714, 1.94 ) }
    dend_11 { pt3dadd( -0.535391, 18.0905, -3.14627, 1.94 ) }
    dend_11 { pt3dadd( -0.384331, 20.5964, -3.00603, 1.94 ) }
    dend_11 { pt3dadd( -0.223243, 23.2686, -2.85649, 1.94 ) }
    dend_11 { pt3dadd( 0.0177036, 27.2655, -2.63281, 1.94 ) }
    dend_11 { pt3dadd( 0.409999, 33.7028, -1.7087, 1.94 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 34/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.05804, 5.73157, -2.1713, 1.94 ) }
    dend_0 { pt3dadd( -6.92492, 7.78877, -1.39913, 1.11 ) }
    dend_0 { pt3dadd( -9.66264, 9.75328, -0.661755, 1.39 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 37/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.39969, -10.826, 4.85547, 0.854353 ) }
    axon_0 { pt3dadd( 7.43208, -25.2738, 4.85547, 0.854353 ) }
    axon_0 { pt3dadd( 11.4645, -39.7217, 4.85547, 0.854353 ) }
    // Section: dend_71, id: dend_71, parent: dend_61 (entry count 40/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 2.58196, -11.4285, 2.1787, 0.83 ) }
    dend_71 { pt3dadd( 1.60872, -15.7041, -2.21899, 0.83 ) }
    dend_71 { pt3dadd( 1.14541, -18.0928, -4.40331, 0.83 ) }
    dend_71 { pt3dadd( 0.873763, -19.6989, -5.68533, 0.56 ) }
    dend_71 { pt3dadd( 0.757662, -20.6234, -6.39535, 0.83 ) }
    dend_71 { pt3dadd( 0.597929, -22.6708, -7.84601, 0.56 ) }
    dend_71 { pt3dadd( 0.591202, -23.4545, -8.24267, 0.83 ) }
    dend_71 { pt3dadd( 0.699075, -25.5028, -8.88125, 0.28 ) }
    dend_71 { pt3dadd( 0.840989, -27.1136, -9.35781, 1.11 ) }
    dend_71 { pt3dadd( 1.228, -30.6751, -10.4606, 0.28 ) }
    dend_71 { pt3dadd( 1.49197, -32.5561, -11.151, 1.11 ) }
    dend_71 { pt3dadd( 2.83318, -40.64, -14.6653, 0.28 ) }
    dend_71 { pt3dadd( 3.02888, -41.6541, -15.1535, 1.11 ) }
    dend_71 { pt3dadd( 3.84041, -45.6214, -17.3708, 0.28 ) }
    dend_71 { pt3dadd( 4.06922, -46.7567, -18.075, 0.83 ) }
    dend_71 { pt3dadd( 4.6045, -49.6958, -20.1561, 1.11 ) }
    dend_71 { pt3dadd( 4.91022, -51.6307, -21.7503, 0.28 ) }
    dend_71 { pt3dadd( 5.08021, -52.8329, -22.9115, 0.83 ) }
    dend_71 { pt3dadd( 5.66412, -57.6505, -27.4848, 0.28 ) }
    dend_71 { pt3dadd( 5.73862, -58.6834, -28.3969, 1.11 ) }
    dend_71 { pt3dadd( 5.86059, -62.395, -31.5372, 0.28 ) }
    dend_71 { pt3dadd( 5.85836, -63.3037, -32.2295, 0.83 ) }
    dend_71 { pt3dadd( 5.81741, -66.4524, -34.5796, 1.11 ) }
    dend_71 { pt3dadd( 5.7985, -69.1641, -36.6613, 0.28 ) }
    dend_71 { pt3dadd( 5.81078, -70.6447, -37.7803, 1.11 ) }
    dend_71 { pt3dadd( 5.84144, -74.8845, -41.0207, 0.28 ) }
    dend_71 { pt3dadd( 5.85321, -77.8314, -43.0903, 1.11 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 67/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 2.58196, -11.4285, 2.1787, 1.11 ) }
    dend_62 { pt3dadd( 3.34716, -13.4315, 1.88753, 1.11 ) }
    dend_62 { pt3dadd( 4.49868, -16.4459, 1.44935, 1.11 ) }
    dend_62 { pt3dadd( 5.88782, -20.0822, 0.920757, 1.11 ) }
    dend_62 { pt3dadd( 7.67499, -24.7605, 0.2407, 1.11 ) }
    // Section: dend_58, id: dend_58, parent: dend_42 (entry count 72/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 6.6042, -4.30378, 33.2188, 0.83 ) }
    dend_58 { pt3dadd( 9.31514, -6.81803, 33.2665, 0.83 ) }
    dend_58 { pt3dadd( 9.71213, -7.1862, 33.2735, 0.83 ) }
    dend_58 { pt3dadd( 15.4734, -12.5295, 33.3749, 0.83 ) }
    dend_58 { pt3dadd( 17.1608, -14.0945, 33.4046, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 77/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 6.6042, -4.30378, 33.2188, 1.11 ) }
    dend_43 { pt3dadd( 10.5184, -2.98087, 34.0247, 1.11 ) }
    dend_43 { pt3dadd( 15.439, -1.31786, 35.0378, 0.83 ) }
    dend_43 { pt3dadd( 17.1692, -0.73309, 35.394, 0.83 ) }
    dend_43 { pt3dadd( 18.4847, -0.288475, 35.6648, 0.83 ) }
    dend_43 { pt3dadd( 26.9391, 2.56887, 37.4055, 0.83 ) }
    dend_43 { pt3dadd( 29.9148, 3.57459, 38.0182, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_11 (entry count 84/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 0.409999, 33.7028, -1.7087, 1.11 ) }
    dend_39 { pt3dadd( 0.490001, 37.8828, -17.2387, 1.11 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 86/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 0.409999, 33.7028, -1.7087, 1.39 ) }
    dend_12 { pt3dadd( 0.32869, 36.6106, 3.8714, 1.39 ) }
    dend_12 { pt3dadd( 0.254665, 39.2579, 8.95158, 1.67 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -9.66264, 9.75328, -0.661755, 0.83 ) }
    dend_10 { pt3dadd( -17.7219, 6.50411, -2.19324, 0.83 ) }
    dend_10 { pt3dadd( -19.7432, 5.63973, -2.61382, 0.83 ) }
    dend_10 { pt3dadd( -24.2059, 3.56823, -3.85013, 0.83 ) }
    dend_10 { pt3dadd( -26.6269, 2.37183, -4.79573, 0.83 ) }
    dend_10 { pt3dadd( -28.9692, 1.06161, -5.84864, 0.83 ) }
    dend_10 { pt3dadd( -31.0223, -0.178195, -6.87332, 0.56 ) }
    dend_10 { pt3dadd( -33.0202, -1.60874, -8.15266, 0.56 ) }
    dend_10 { pt3dadd( -34.6253, -2.88529, -9.70182, 0.56 ) }
    dend_10 { pt3dadd( -36.6014, -4.51311, -12.3405, 0.83 ) }
    dend_10 { pt3dadd( -38.0266, -5.68659, -14.6828, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_10 { pt3dadd( -39.3522, -6.71182, -17.5331, 0.56 ) }
    dend_10 { pt3dadd( -41.9898, -8.70774, -24.1458, 0.28 ) }
    dend_10 { pt3dadd( -42.4814, -9.11952, -25.4192, 0.56 ) }
    dend_10 { pt3dadd( -44.0614, -10.484, -29.5071, 0.56 ) }
    dend_10 { pt3dadd( -45.1509, -11.5039, -32.4634, 0.56 ) }
    dend_10 { pt3dadd( -48.2656, -14.5355, -40.9348, 0.28 ) }
    dend_10 { pt3dadd( -48.4714, -14.7728, -41.4764, 0.28 ) }
    dend_10 { pt3dadd( -50.4747, -17.4684, -45.6301, 0.28 ) }
    dend_10 { pt3dadd( -50.9843, -18.3048, -46.4955, 0.83 ) }
    dend_10 { pt3dadd( -52.8945, -21.7729, -47.9896, 0.28 ) }
    dend_10 { pt3dadd( -54.3573, -24.2454, -48.1289, 0.83 ) }
    dend_10 { pt3dadd( -55.5764, -26.2179, -48.0729, 0.83 ) }
    dend_10 { pt3dadd( -56.5128, -27.5327, -48.29, 0.28 ) }
    dend_10 { pt3dadd( -58.2498, -29.3707, -49.3355, 0.56 ) }
    dend_10 { pt3dadd( -59.7161, -30.673, -50.2711, 0.28 ) }
    dend_10 { pt3dadd( -60.517, -31.4202, -50.8789, 0.83 ) }
    dend_10 { pt3dadd( -63.8867, -34.5963, -53.8714, 0.28 ) }
    dend_10 { pt3dadd( -65.2009, -35.8882, -55.2885, 0.56 ) }
    dend_10 { pt3dadd( -68.4555, -39.2105, -59.4465, 0.28 ) }
    dend_10 { pt3dadd( -69.9551, -40.8196, -61.6661, 0.83 ) }
    dend_10 { pt3dadd( -72.4805, -43.9607, -66.5634, 0.28 ) }
    dend_10 { pt3dadd( -73.061, -44.7969, -67.9293, 0.83 ) }
    dend_10 { pt3dadd( -74.2263, -47.0378, -71.8313, 0.56 ) }
    dend_10 { pt3dadd( -74.9976, -49.0382, -75.6076, 0.28 ) }
    dend_10 { pt3dadd( -75.4624, -50.4388, -78.6919, 1.67 ) }
    dend_10 { pt3dadd( -76.4646, -53.2853, -85.6606, 0.28 ) }
    dend_10 { pt3dadd( -76.5824, -53.5765, -86.4397, 0.83 ) }
    dend_10 { pt3dadd( -77.6143, -56.1318, -92.9506, 0.28 ) }
    dend_10 { pt3dadd( -78.328, -57.888, -96.9294, 1.39 ) }
    dend_10 { pt3dadd( -79.9092, -62.0442, -105.447, 0.28 ) }
    dend_10 { pt3dadd( -80.1603, -62.6886, -106.649, 0.56 ) }
    dend_10 { pt3dadd( -80.9951, -64.6547, -109.88, 0.28 ) }
    dend_10 { pt3dadd( -81.4484, -65.7938, -111.62, 1.11 ) }
    dend_10 { pt3dadd( -82.8901, -69.6981, -116.67, 0.28 ) }
    dend_10 { pt3dadd( -83.045, -70.2227, -117.335, 0.56 ) }
    dend_10 { pt3dadd( -83.5885, -72.6243, -120.045, 0.28 ) }
    dend_10 { pt3dadd( -83.7035, -73.1542, -120.674, 0.56 ) }
    dend_10 { pt3dadd( -84.117, -74.9675, -122.931, 0.28 ) }
    dend_10 { pt3dadd( -84.2844, -75.7127, -124.036, 0.83 ) }
    dend_10 { pt3dadd( -85.3805, -79.7431, -131.845, 0.28 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -9.66264, 9.75328, -0.661755, 0.83 ) }
    dend_1 { pt3dadd( -13.8995, 13.072, 0.882887, 0.83 ) }
    dend_1 { pt3dadd( -17.7943, 16.4368, 2.16308, 0.83 ) }
    dend_1 { pt3dadd( -20.4613, 18.9502, 2.79135, 0.83 ) }
    dend_1 { pt3dadd( -22.0866, 20.668, 2.96391, 0.83 ) }
    dend_1 { pt3dadd( -24.5034, 23.3473, 2.97682, 0.83 ) }
    dend_1 { pt3dadd( -26.2196, 25.2498, 2.98598, 0.83 ) }
    dend_1 { pt3dadd( -29.539, 29.0794, 2.46169, 0.83 ) }
    dend_1 { pt3dadd( -31.7441, 31.9208, 1.86029, 0.83 ) }
    dend_1 { pt3dadd( -34.4127, 35.7498, 0.709859, 0.83 ) }
    dend_1 { pt3dadd( -35.4245, 37.3227, 0.152267, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 51/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 11.4645, -39.7217, 4.85547, 0.28 ) }
    axon_1 { pt3dadd( 15.4969, -54.1695, 4.85547, 0.28 ) }
    axon_1 { pt3dadd( 19.5292, -68.6173, 4.85547, 0.28 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 54/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 5.85321, -77.8314, -43.0903, 0.28 ) }
    dend_73 { pt3dadd( 4.37959, -80.9944, -41.8901, 0.28 ) }
    dend_73 { pt3dadd( 3.91838, -81.9844, -41.5145, 0.83 ) }
    dend_73 { pt3dadd( 2.18758, -85.6995, -40.1048, 0.28 ) }
    dend_73 { pt3dadd( 1.56891, -87.0274, -39.6009, 0.83 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 59/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 5.85321, -77.8314, -43.0903, 0.28 ) }
    dend_72 { pt3dadd( 7.35204, -80.5168, -49.0168, 0.28 ) }
    dend_72 { pt3dadd( 7.59806, -80.923, -49.9064, 0.83 ) }
    dend_72 { pt3dadd( 8.94608, -83.0812, -54.5677, 0.28 ) }
    dend_72 { pt3dadd( 9.14936, -83.4544, -55.3301, 0.56 ) }
    dend_72 { pt3dadd( 10.2791, -85.6676, -59.6759, 0.28 ) }
    dend_72 { pt3dadd( 11.1134, -87.5386, -63.4212, 1.67 ) }
    dend_72 { pt3dadd( 12.3224, -90.8312, -70.1159, 0.28 ) }
    dend_72 { pt3dadd( 12.3719, -91.0071, -70.4594, 0.83 ) }
    dend_72 { pt3dadd( 12.8838, -93.9915, -75.836, 0.28 ) }
    dend_72 { pt3dadd( 12.9064, -94.3075, -76.3703, 0.83 ) }
    dend_72 { pt3dadd( 12.4179, -98.1924, -82.5097, 0.28 ) }
    dend_72 { pt3dadd( 12.0013, -99.81, -84.9204, 1.11 ) }
    dend_72 { pt3dadd( 10.9166, -102.705, -89.0955, 0.28 ) }
    dend_72 { pt3dadd( 9.86662, -105.328, -92.8318, 0.28 ) }
    dend_72 { pt3dadd( 9.45214, -106.227, -94.05, 1.39 ) }
    dend_72 { pt3dadd( 5.68839, -113.746, -103.727, 0.28 ) }
    dend_72 { pt3dadd( 5.07436, -114.877, -104.956, 1.94 ) }
    dend_72 { pt3dadd( 1.30492, -121.256, -111.139, 0.28 ) }
    dend_72 { pt3dadd( 0.961688, -121.802, -111.661, 0.56 ) }
    dend_72 { pt3dadd( -0.916354, -124.749, -114.312, 0.28 ) }
    dend_72 { pt3dadd( -1.26417, -125.298, -114.752, 0.56 ) }
    dend_72 { pt3dadd( -4.97421, -130.88, -116.674, 0.28 ) }
    dend_72 { pt3dadd( -5.64737, -131.831, -116.818, 0.56 ) }
    // Section: dend_68, id: dend_68, parent: dend_62 (entry count 83/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 7.67499, -24.7605, 0.2407, 0.83 ) }
    dend_68 { pt3dadd( 7.45101, -27.0224, -2.54936, 0.83 ) }
    dend_68 { pt3dadd( 7.28882, -30.5011, -6.75334, 0.83 ) }
    dend_68 { pt3dadd( 7.32603, -32.9677, -9.85917, 0.83 ) }
    dend_68 { pt3dadd( 7.44729, -35.3227, -12.9772, 0.83 ) }
    dend_68 { pt3dadd( 7.57135, -37.4926, -15.7108, 0.83 ) }
    dend_68 { pt3dadd( 7.67833, -39.8159, -18.46, 0.83 ) }
    dend_68 { pt3dadd( 7.84111, -42.0307, -21.0744, 0.83 ) }
    dend_68 { pt3dadd( 8.00449, -45.5598, -24.8439, 1.11 ) }
    dend_68 { pt3dadd( 8.07834, -50.8515, -30.1929, 0.56 ) }
    dend_68 { pt3dadd( 8.04851, -52.6889, -31.8898, 0.83 ) }
    dend_68 { pt3dadd( 7.85518, -56.3639, -35.1007, 0.28 ) }
    dend_68 { pt3dadd( 7.63831, -58.3172, -36.6473, 1.11 ) }
    dend_68 { pt3dadd( 6.25002, -65.6539, -41.1454, 0.28 ) }
    dend_68 { pt3dadd( 6.03135, -66.4445, -41.4527, 0.83 ) }
    dend_68 { pt3dadd( 5.23531, -68.5834, -41.8196, 0.28 ) }
    dend_68 { pt3dadd( 4.87727, -69.3332, -41.8077, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_68 { pt3dadd( 1.99425, -73.8267, -40.3915, 0.28 ) }
    dend_68 { pt3dadd( 0.4768, -75.6631, -39.3155, 0.83 ) }
    dend_68 { pt3dadd( -2.34506, -78.3982, -37.1254, 0.28 ) }
    dend_68 { pt3dadd( -3.29588, -79.197, -36.5232, 0.83 ) }
    dend_68 { pt3dadd( -5.76055, -81.1426, -35.0334, 0.28 ) }
    dend_68 { pt3dadd( -8.34362, -83.0809, -33.5331, 1.11 ) }
    dend_68 { pt3dadd( -12.5735, -85.8263, -31.3669, 0.28 ) }
    dend_68 { pt3dadd( -14.9629, -87.2501, -30.2625, 0.56 ) }
    dend_68 { pt3dadd( -18.608, -89.3058, -29.0447, 0.28 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 9/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 7.67499, -24.7605, 0.2407, 0.83 ) }
    dend_63 { pt3dadd( 8.73667, -25.923, 0.181258, 0.83 ) }
    dend_63 { pt3dadd( 9.82355, -27.1131, 0.120406, 1.11 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 12/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 17.1608, -14.0945, 33.4046, 0.56 ) }
    dend_60 { pt3dadd( 17.7524, -15.3562, 33.4046, 0.56 ) }
    dend_60 { pt3dadd( 18.6687, -17.6694, 33.4046, 0.56 ) }
    dend_60 { pt3dadd( 19.4927, -20.7255, 33.5209, 0.56 ) }
    dend_60 { pt3dadd( 20.4564, -24.9528, 33.7601, 0.56 ) }
    dend_60 { pt3dadd( 20.6716, -26.3525, 33.8675, 0.56 ) }
    dend_60 { pt3dadd( 20.8638, -28.1053, 34.0168, 0.56 ) }
    dend_60 { pt3dadd( 20.8384, -29.21, 34.1556, 0.56 ) }
    dend_60 { pt3dadd( 20.2633, -33.2337, 35.0457, 0.56 ) }
    dend_60 { pt3dadd( 19.8359, -34.8893, 35.5256, 0.56 ) }
    dend_60 { pt3dadd( 18.9, -37.8618, 36.5337, 0.56 ) }
    dend_60 { pt3dadd( 18.3941, -39.6307, 37.1649, 0.56 ) }
    dend_60 { pt3dadd( 17.4589, -43.5187, 38.5841, 0.56 ) }
    dend_60 { pt3dadd( 16.746, -46.6475, 39.806, 0.56 ) }
    dend_60 { pt3dadd( 16.2562, -48.5408, 40.6055, 0.56 ) }
    dend_60 { pt3dadd( 15.7902, -50.2681, 41.4427, 0.56 ) }
    dend_60 { pt3dadd( 15.4722, -51.6687, 42.1753, 0.56 ) }
    dend_60 { pt3dadd( 15.2519, -52.7429, 42.7519, 0.83 ) }
    dend_60 { pt3dadd( 14.8293, -55.9851, 44.4026, 0.56 ) }
    dend_60 { pt3dadd( 14.7072, -56.7306, 44.7534, 0.83 ) }
    dend_60 { pt3dadd( 14.1177, -59.8905, 46.5751, 0.56 ) }
    dend_60 { pt3dadd( 13.8263, -61.0143, 47.3475, 0.56 ) }
    dend_60 { pt3dadd( 13.6428, -70.859, 49.0937, 0.56 ) }
    dend_60 { pt3dadd( 14.7401, -80.7772, 49.7451, 0.56 ) }
    dend_60 { pt3dadd( 16.7764, -90.2329, 52.2837, 0.56 ) }
    dend_60 { pt3dadd( 19.8624, -99.5727, 54.0845, 0.56 ) }
    dend_60 { pt3dadd( 24.4106, -108.41, 55.1901, 0.56 ) }
    dend_60 { pt3dadd( 30.4569, -116.344, 54.4922, 0.56 ) }
    dend_60 { pt3dadd( 37.8602, -122.825, 52.7053, 0.56 ) }
    dend_60 { pt3dadd( 45.589, -128.152, 49.2579, 0.56 ) }
    dend_60 { pt3dadd( 52.9327, -134.314, 46.412, 0.56 ) }
    dend_60 { pt3dadd( 58.3701, -141.513, 42.0972, 0.56 ) }
    dend_60 { pt3dadd( 64.3414, -148.41, 38.0018, 0.56 ) }
    dend_60 { pt3dadd( 69.3945, -155.872, 33.6682, 0.56 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 46/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 17.1608, -14.0945, 33.4046, 0.56 ) }
    dend_59 { pt3dadd( 19.4764, -15.6194, 35.5673, 0.56 ) }
    dend_59 { pt3dadd( 20.5683, -16.3137, 36.4654, 0.56 ) }
    dend_59 { pt3dadd( 22.0633, -17.2175, 37.5935, 0.56 ) }
    dend_59 { pt3dadd( 24.1084, -18.3039, 38.9442, 0.56 ) }
    dend_59 { pt3dadd( 26.726, -19.5757, 40.6217, 0.56 ) }
    dend_59 { pt3dadd( 28.9067, -20.5537, 41.9773, 0.56 ) }
    dend_59 { pt3dadd( 30.5413, -21.2518, 42.9126, 0.56 ) }
    dend_59 { pt3dadd( 33.3352, -22.3438, 44.4014, 0.56 ) }
    dend_59 { pt3dadd( 35.9846, -23.3233, 45.6243, 0.56 ) }
    dend_59 { pt3dadd( 37.4518, -23.8428, 46.2103, 0.56 ) }
    dend_59 { pt3dadd( 39.402, -24.5651, 46.9384, 0.56 ) }
    dend_59 { pt3dadd( 42.5272, -25.8079, 48.0002, 0.56 ) }
    dend_59 { pt3dadd( 45.477, -26.818, 48.8896, 0.28 ) }
    dend_59 { pt3dadd( 48.2503, -27.6421, 49.6469, 0.56 ) }
    dend_59 { pt3dadd( 50.3243, -28.2036, 50.2276, 0.56 ) }
    dend_59 { pt3dadd( 51.5438, -28.4988, 50.5518, 0.28 ) }
    dend_59 { pt3dadd( 52.6372, -28.6902, 50.8567, 0.28 ) }
    dend_59 { pt3dadd( 57.2983, -28.9688, 52.4684, 0.56 ) }
    dend_59 { pt3dadd( 59.2168, -28.9485, 53.3612, 0.56 ) }
    dend_59 { pt3dadd( 60.6499, -28.9297, 54.1891, 0.56 ) }
    dend_59 { pt3dadd( 61.9696, -28.9399, 55.0431, 0.56 ) }
    dend_59 { pt3dadd( 63.4756, -28.9388, 56.0581, 0.56 ) }
    dend_59 { pt3dadd( 66.6436, -28.9689, 58.3365, 0.56 ) }
    dend_59 { pt3dadd( 68.2624, -29.1118, 59.6433, 0.56 ) }
    dend_59 { pt3dadd( 70.3676, -29.3348, 61.3053, 0.56 ) }
    dend_59 { pt3dadd( 73.7995, -29.642, 63.9946, 0.56 ) }
    dend_59 { pt3dadd( 82.6121, -32.5208, 67.743, 0.56 ) }
    dend_59 { pt3dadd( 91.1465, -35.3574, 72.1154, 0.56 ) }
    dend_59 { pt3dadd( 99.0151, -38.8307, 77.2164, 0.56 ) }
    dend_59 { pt3dadd( 107.158, -41.4083, 82.4183, 0.56 ) }
    dend_59 { pt3dadd( 115.493, -43.0465, 87.6954, 0.56 ) }
    dend_59 { pt3dadd( 123.6, -44.9741, 93.2235, 0.56 ) }
    dend_59 { pt3dadd( 130.226, -47.8977, 100.119, 0.56 ) }
    // Section: dend_57, id: dend_57, parent: dend_43 (entry count 80/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 29.9148, 3.57459, 38.0182, 0.56 ) }
    dend_57 { pt3dadd( 34.5113, 2.52407, 35.3928, 0.56 ) }
    dend_57 { pt3dadd( 37.193, 1.97169, 34.1548, 0.56 ) }
    dend_57 { pt3dadd( 41.7216, 1.10635, 32.3472, 0.56 ) }
    dend_57 { pt3dadd( 43.9127, 0.6712, 31.5523, 0.56 ) }
    dend_57 { pt3dadd( 48.3533, -0.19208, 30.0143, 0.56 ) }
    dend_57 { pt3dadd( 51.8165, -0.89314, 28.8623, 0.56 ) }
    dend_57 { pt3dadd( 55.6304, -1.68868, 28.0076, 0.56 ) }
    dend_57 { pt3dadd( 57.5101, -2.10463, 27.6737, 0.28 ) }
    dend_57 { pt3dadd( 58.8276, -2.48187, 27.4951, 1.39 ) }
    dend_57 { pt3dadd( 61.201, -3.24876, 27.1093, 0.56 ) }
    dend_57 { pt3dadd( 62.4922, -3.73142, 26.9425, 0.83 ) }
    dend_57 { pt3dadd( 64.9477, -4.97405, 26.7842, 0.28 ) }
    dend_57 { pt3dadd( 65.6652, -5.41606, 26.7636, 0.56 ) }
    dend_57 { pt3dadd( 67.7386, -7.0199, 27.3344, 0.28 ) }
    dend_57 { pt3dadd( 68.8166, -7.87305, 27.7424, 0.56 ) }
    dend_57 { pt3dadd( 72.1875, -10.4597, 29.12, 0.28 ) }
    dend_57 { pt3dadd( 72.8631, -10.9355, 29.4096, 1.11 ) }
    dend_57 { pt3dadd( 74.5104, -12.0423, 30.1334, 1.11 ) }
    dend_57 { pt3dadd( 83.09, -17.6045, 33.9714, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_57 { pt3dadd( 86.6285, -19.8272, 35.5924, 0.56 ) }
    dend_57 { pt3dadd( 89.1776, -21.377, 36.6514, 0.28 ) }
    dend_57 { pt3dadd( 92.0599, -22.9871, 37.6867, 0.83 ) }
    dend_57 { pt3dadd( 92.7282, -23.349, 37.9165, 0.83 ) }
    dend_57 { pt3dadd( 94.6675, -24.4064, 38.7508, 0.28 ) }
    dend_57 { pt3dadd( 95.6449, -24.9323, 39.1665, 0.83 ) }
    dend_57 { pt3dadd( 99.262, -27.1275, 40.829, 0.28 ) }
    dend_57 { pt3dadd( 100.172, -27.7392, 41.2714, 0.56 ) }
    dend_57 { pt3dadd( 102.491, -29.3567, 42.4283, 0.56 ) }
    dend_57 { pt3dadd( 113.568, -37.1854, 48.2447, 0.28 ) }
    dend_57 { pt3dadd( 115.452, -38.5493, 49.3042, 1.11 ) }
    dend_57 { pt3dadd( 118.481, -40.7576, 51.1046, 0.28 ) }
    dend_57 { pt3dadd( 120.161, -42.006, 52.1849, 0.56 ) }
    dend_57 { pt3dadd( 127.963, -48.2601, 52.0542, 0.56 ) }
    dend_57 { pt3dadd( 134.961, -55.1878, 50.3121, 0.56 ) }
    dend_57 { pt3dadd( 142.714, -61.0015, 47.8453, 0.56 ) }
    dend_57 { pt3dadd( 150.507, -66.1978, 44.3424, 0.56 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 17/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 29.9148, 3.57459, 38.0182, 0.83 ) }
    dend_44 { pt3dadd( 29.7648, 5.50459, 41.9882, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 19/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 0.490001, 37.8828, -17.2387, 0.83 ) }
    dend_41 { pt3dadd( -0.761868, 40.0259, -18.5976, 0.83 ) }
    dend_41 { pt3dadd( -1.70678, 41.7622, -19.6356, 0.83 ) }
    dend_41 { pt3dadd( -3.59208, 45.2894, -21.6208, 0.83 ) }
    dend_41 { pt3dadd( -5.26142, 48.4006, -23.3214, 0.83 ) }
    dend_41 { pt3dadd( -6.63535, 50.8356, -24.5875, 0.83 ) }
    dend_41 { pt3dadd( -7.86369, 53.0035, -25.7319, 0.83 ) }
    dend_41 { pt3dadd( -8.88068, 54.7147, -26.7025, 0.83 ) }
    dend_41 { pt3dadd( -9.72129, 56.09, -27.4861, 0.83 ) }
    dend_41 { pt3dadd( -11.7211, 59.253, -29.1902, 1.11 ) }
    dend_41 { pt3dadd( -13.1022, 61.4049, -30.2449, 0.83 ) }
    dend_41 { pt3dadd( -15.1738, 64.1259, -31.6445, 0.83 ) }
    dend_41 { pt3dadd( -17.6186, 66.7455, -33.0906, 0.56 ) }
    dend_41 { pt3dadd( -18.453, 67.4983, -33.476, 0.28 ) }
    dend_41 { pt3dadd( -19.1934, 68.114, -33.7501, 0.28 ) }
    dend_41 { pt3dadd( -20.7262, 69.2895, -34.2674, 0.83 ) }
    dend_41 { pt3dadd( -24.2262, 71.9172, -35.548, 0.28 ) }
    dend_41 { pt3dadd( -26.5035, 73.7001, -36.3392, 1.11 ) }
    dend_41 { pt3dadd( -31.05, 77.5412, -37.9901, 0.28 ) }
    dend_41 { pt3dadd( -32.0526, 78.4496, -38.3807, 0.28 ) }
    dend_41 { pt3dadd( -34.5353, 80.7968, -39.4779, 1.11 ) }
    dend_41 { pt3dadd( -37.0583, 83.3709, -40.6786, 0.83 ) }
    dend_41 { pt3dadd( -39.695, 86.2004, -41.9465, 0.28 ) }
    dend_41 { pt3dadd( -40.2727, 86.7806, -42.2752, 0.56 ) }
    dend_41 { pt3dadd( -41.3961, 87.7263, -42.977, 0.56 ) }
    dend_41 { pt3dadd( -44.3956, 89.8353, -44.8529, 0.28 ) }
    dend_41 { pt3dadd( -45.8632, 90.6767, -45.756, 0.28 ) }
    dend_41 { pt3dadd( -47.8524, 91.5187, -47.0236, 0.83 ) }
    dend_41 { pt3dadd( -51.876, 92.7694, -49.6847, 0.28 ) }
    dend_41 { pt3dadd( -54.517, 93.4666, -51.4635, 0.83 ) }
    dend_41 { pt3dadd( -57.0463, 94.0695, -53.2384, 0.28 ) }
    dend_41 { pt3dadd( -58.6853, 94.4068, -54.4239, 0.56 ) }
    dend_41 { pt3dadd( -61.2088, 94.836, -56.3659, 0.83 ) }
    dend_41 { pt3dadd( -62.7318, 95.0671, -57.5698, 0.56 ) }
    dend_41 { pt3dadd( -64.5619, 95.2292, -58.7883, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 54/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 0.490001, 37.8828, -17.2387, 0.83 ) }
    dend_40 { pt3dadd( 2.01, 39.6728, -17.3087, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 56/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.254665, 39.2579, 8.95158, 0.83 ) }
    dend_22 { pt3dadd( -1.64271, 43.4893, 8.43468, 0.83 ) }
    dend_22 { pt3dadd( -2.46225, 45.3171, 8.21141, 0.83 ) }
    dend_22 { pt3dadd( -4.16137, 49.1064, 7.74852, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 60/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 0.254665, 39.2579, 8.95158, 1.11 ) }
    dend_13 { pt3dadd( 2.10482, 41.3333, 10.3224, 1.11 ) }
    dend_13 { pt3dadd( 4.39051, 43.8972, 12.0159, 1.11 ) }
    dend_13 { pt3dadd( 5.80573, 45.4848, 13.0644, 0.83 ) }
    dend_13 { pt3dadd( 8.48159, 48.4864, 15.047, 1.11 ) }
    dend_13 { pt3dadd( 12.2156, 52.675, 17.8135, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 66/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -35.4245, 37.3227, 0.152267, 0.56 ) }
    dend_3 { pt3dadd( -37.9328, 38.3149, -1.89007, 0.56 ) }
    dend_3 { pt3dadd( -41.186, 39.604, -4.59936, 0.56 ) }
    dend_3 { pt3dadd( -43.6546, 40.5009, -6.507, 0.83 ) }
    dend_3 { pt3dadd( -47.1417, 41.6893, -9.13955, 0.56 ) }
    dend_3 { pt3dadd( -53.9927, 43.8672, -13.9504, 0.56 ) }
    dend_3 { pt3dadd( -55.8561, 44.4596, -15.2589, 0.56 ) }
    dend_3 { pt3dadd( -58.8065, 45.4806, -17.7259, 0.83 ) }
    dend_3 { pt3dadd( -60.9241, 46.2641, -19.8324, 0.56 ) }
    dend_3 { pt3dadd( -62.8196, 46.9284, -21.7843, 0.56 ) }
    dend_3 { pt3dadd( -64.4354, 47.3555, -23.0624, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 77/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -35.4245, 37.3227, 0.152267, 0.56 ) }
    dend_2 { pt3dadd( -37.055, 41.3992, -2.77198, 0.56 ) }
    dend_2 { pt3dadd( -37.5568, 43.6659, -4.35272, 0.83 ) }
    dend_2 { pt3dadd( -38.1972, 46.5587, -6.37004, 0.56 ) }
    dend_2 { pt3dadd( -38.5521, 48.162, -7.4881, 0.56 ) }
    dend_2 { pt3dadd( -39.4417, 52.1805, -10.2904, 0.56 ) }
    dend_2 { pt3dadd( -39.8983, 54.2429, -11.7287, 1.11 ) }
    dend_2 { pt3dadd( -40.3931, 58.8571, -15.6703, 0.56 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 85/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -18.608, -89.3058, -29.0447, 0.28 ) }
    dend_70 { pt3dadd( -21.2962, -86.8962, -27.33, 0.28 ) }
    dend_70 { pt3dadd( -24.3542, -84.1552, -25.3795, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 88/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -18.608, -89.3058, -29.0447, 0.56 ) }
    dend_69 { pt3dadd( -17.2972, -90.7928, -29.4459, 0.56 ) }
    dend_69 { pt3dadd( -16.1474, -92.1105, -29.8037, 0.28 ) }
    dend_69 { pt3dadd( -15.6042, -92.7737, -29.9678, 0.83 ) }
    dend_69 { pt3dadd( -14.6495, -93.8871, -30.2261, 0.28 ) }
    dend_69 { pt3dadd( -12.5695, -96.3535, -30.7532, 1.11 ) }
    dend_69 { pt3dadd( -11.8282, -97.2323, -30.9932, 0.28 ) }
    dend_69 { pt3dadd( -11.2849, -97.9058, -31.1292, 0.83 ) }
    dend_69 { pt3dadd( -10.2208, -99.278, -31.3611, 0.28 ) }
    dend_69 { pt3dadd( -9.15311, -100.586, -31.4899, 0.28 ) }
    dend_69 { pt3dadd( -8.44679, -101.398, -31.7631, 0.83 ) }
    dend_69 { pt3dadd( -6.42471, -103.817, -32.8019, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_69 { pt3dadd( -3.98115, -106.705, -34.4331, 1.11 ) }
    dend_69 { pt3dadd( -1.09343, -110.013, -36.5251, 0.28 ) }
    dend_69 { pt3dadd( 0.792802, -112.093, -38.0117, 1.39 ) }
    dend_69 { pt3dadd( 7.14927, -118.96, -43.2438, 0.28 ) }
    dend_69 { pt3dadd( 8.33827, -120.168, -44.2472, 0.83 ) }
    dend_69 { pt3dadd( 10.994, -122.725, -46.4557, 0.28 ) }
    dend_69 { pt3dadd( 12.7445, -124.288, -47.9258, 1.39 ) }
    dend_69 { pt3dadd( 15.6519, -126.827, -50.2465, 0.28 ) }
    dend_69 { pt3dadd( 16.5699, -127.623, -50.9142, 1.11 ) }
    dend_69 { pt3dadd( 20.2173, -130.59, -52.7526, 0.28 ) }
    dend_69 { pt3dadd( 21.9108, -131.907, -53.5554, 0.83 ) }
    dend_69 { pt3dadd( 25.3373, -134.596, -54.9925, 0.28 ) }
    dend_69 { pt3dadd( 25.9926, -135.116, -55.2672, 0.56 ) }
    dend_69 { pt3dadd( 28.5591, -137.187, -56.1693, 0.28 ) }
    dend_69 { pt3dadd( 30.2841, -138.621, -56.7633, 1.11 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 15/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 9.82355, -27.1131, 0.120406, 0.56 ) }
    dend_65 { pt3dadd( 12.5118, -31.1156, -8.09724, 0.56 ) }
    dend_65 { pt3dadd( 13.2592, -32.3337, -10.4378, 0.83 ) }
    dend_65 { pt3dadd( 15.0649, -35.5573, -17.4829, 0.83 ) }
    dend_65 { pt3dadd( 15.6506, -36.5074, -19.9741, 0.83 ) }
    dend_65 { pt3dadd( 16.1358, -37.2249, -21.9754, 0.83 ) }
    dend_65 { pt3dadd( 16.7778, -38.0842, -24.5149, 1.11 ) }
    dend_65 { pt3dadd( 17.283, -38.709, -26.4588, 1.11 ) }
    dend_65 { pt3dadd( 19.2517, -40.9993, -34.663, 1.11 ) }
    dend_65 { pt3dadd( 21.0524, -42.9318, -42.6121, 0.28 ) }
    dend_65 { pt3dadd( 21.2633, -43.1693, -43.747, 1.39 ) }
    dend_65 { pt3dadd( 21.8778, -43.7891, -47.3062, 0.83 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 27/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 9.82355, -27.1131, 0.120406, 0.83 ) }
    dend_64 { pt3dadd( 13.1149, -28.01, -1.0818, 0.83 ) }
    dend_64 { pt3dadd( 16.965, -28.7687, -2.45819, 0.83 ) }
    dend_64 { pt3dadd( 18.4277, -29.0551, -2.94554, 0.28 ) }
    dend_64 { pt3dadd( 20.1781, -29.4179, -3.48045, 0.28 ) }
    dend_64 { pt3dadd( 23.0231, -30.067, -4.06599, 0.83 ) }
    dend_64 { pt3dadd( 28.4431, -31.3742, -4.86567, 0.56 ) }
    dend_64 { pt3dadd( 32.4869, -32.3586, -4.92973, 0.56 ) }
    dend_64 { pt3dadd( 34.8042, -32.9299, -4.79161, 0.56 ) }
    dend_64 { pt3dadd( 38.0351, -33.7861, -4.37637, 1.11 ) }
    dend_64 { pt3dadd( 42.678, -35.1453, -3.45248, 0.28 ) }
    dend_64 { pt3dadd( 43.2591, -35.317, -3.28823, 1.11 ) }
    dend_64 { pt3dadd( 46.8177, -36.2422, -2.15216, 0.28 ) }
    dend_64 { pt3dadd( 48.5118, -36.6274, -1.74239, 1.67 ) }
    dend_64 { pt3dadd( 50.4407, -36.9081, -1.50203, 0.56 ) }
    dend_64 { pt3dadd( 52.6692, -37.0344, -1.55146, 0.28 ) }
    dend_64 { pt3dadd( 54.0647, -37.0125, -1.58676, 1.11 ) }
    dend_64 { pt3dadd( 59.0442, -36.7587, -1.49515, 0.28 ) }
    dend_64 { pt3dadd( 60.2904, -36.6581, -1.44044, 1.94 ) }
    dend_64 { pt3dadd( 61.9544, -36.495, -1.29462, 2.22 ) }
    dend_64 { pt3dadd( 66.0735, -36.1248, -0.810479, 0.56 ) }
    dend_64 { pt3dadd( 73.4388, -35.6061, 0.506598, 0.28 ) }
    dend_64 { pt3dadd( 73.9569, -35.581, 0.617354, 1.39 ) }
    dend_64 { pt3dadd( 75.6107, -35.5858, 0.992897, 1.39 ) }
    dend_64 { pt3dadd( 77.8246, -35.6683, 1.37523, 0.28 ) }
    dend_64 { pt3dadd( 79.3727, -35.7524, 1.531, 0.83 ) }
    dend_64 { pt3dadd( 82.3611, -35.9517, 1.53361, 0.28 ) }
    dend_64 { pt3dadd( 84.6139, -36.1527, 1.25575, 0.83 ) }
    dend_64 { pt3dadd( 90.6138, -36.6791, 0.445255, 0.28 ) }
    dend_64 { pt3dadd( 92.031, -36.7974, 0.246263, 0.83 ) }
    dend_64 { pt3dadd( 93.6692, -36.921, 0.0185152, 0.28 ) }
    dend_64 { pt3dadd( 94.5431, -36.959, -0.104195, 0.56 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 59/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 29.7648, 5.50459, 41.9882, 0.83 ) }
    dend_46 { pt3dadd( 31.5952, 5.29809, 43.8758, 0.83 ) }
    dend_46 { pt3dadd( 33.8512, 5.3433, 46.1849, 0.83 ) }
    dend_46 { pt3dadd( 36.7902, 5.79179, 49.1141, 0.83 ) }
    dend_46 { pt3dadd( 38.6716, 6.13145, 50.8114, 0.83 ) }
    dend_46 { pt3dadd( 39.4267, 6.30272, 51.4557, 0.83 ) }
    dend_46 { pt3dadd( 41.3622, 6.87335, 53.0322, 0.83 ) }
    dend_46 { pt3dadd( 43.5043, 7.51388, 54.6026, 0.83 ) }
    dend_46 { pt3dadd( 45.0662, 8.10017, 55.6397, 0.83 ) }
    dend_46 { pt3dadd( 47.1995, 9.18094, 57.0459, 0.83 ) }
    dend_46 { pt3dadd( 49.9145, 10.775, 58.8952, 0.83 ) }
    dend_46 { pt3dadd( 53.2099, 12.6746, 61.243, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 71/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 29.7648, 5.50459, 41.9882, 0.83 ) }
    dend_45 { pt3dadd( 29.8426, 9.40234, 39.6286, 0.83 ) }
    dend_45 { pt3dadd( 29.9921, 14.3822, 36.861, 0.83 ) }
    dend_45 { pt3dadd( 30.1401, 17.543, 35.1732, 0.83 ) }
    dend_45 { pt3dadd( 30.2302, 19.3746, 34.229, 0.83 ) }
    dend_45 { pt3dadd( 30.3211, 20.9649, 33.4283, 0.83 ) }
    dend_45 { pt3dadd( 30.4503, 22.9757, 32.4577, 0.56 ) }
    dend_45 { pt3dadd( 30.5792, 23.9977, 31.9558, 0.83 ) }
    dend_45 { pt3dadd( 30.8526, 25.7641, 31.4098, 0.56 ) }
    dend_45 { pt3dadd( 30.9734, 26.3589, 31.2877, 0.83 ) }
    dend_45 { pt3dadd( 31.5471, 28.5638, 30.9142, 0.56 ) }
    dend_45 { pt3dadd( 31.9501, 29.9013, 30.7118, 0.83 ) }
    dend_45 { pt3dadd( 32.6328, 32.1538, 30.3449, 0.83 ) }
    dend_45 { pt3dadd( 33.2326, 34.071, 30.0536, 0.83 ) }
    dend_45 { pt3dadd( 33.7265, 35.5911, 29.8606, 0.28 ) }
    dend_45 { pt3dadd( 34.2826, 37.2632, 29.6246, 0.56 ) }
    dend_45 { pt3dadd( 34.6795, 38.5882, 29.4473, 0.28 ) }
    dend_45 { pt3dadd( 35.3869, 41.3418, 29.1898, 0.83 ) }
    dend_45 { pt3dadd( 35.8752, 43.654, 29.0414, 0.28 ) }
    dend_45 { pt3dadd( 36.3384, 46.0897, 28.9539, 0.83 ) }
    dend_45 { pt3dadd( 36.565, 47.6211, 28.9387, 0.28 ) }
    dend_45 { pt3dadd( 37.1829, 52.9212, 29.0117, 0.83 ) }
    dend_45 { pt3dadd( 37.5282, 55.98, 29.1437, 0.56 ) }
    dend_45 { pt3dadd( 37.6548, 57.3582, 29.3181, 0.83 ) }
    dend_45 { pt3dadd( 37.8682, 60.0351, 29.7886, 0.83 ) }
    dend_45 { pt3dadd( 38.0467, 63.0681, 30.4158, 0.28 ) }
    dend_45 { pt3dadd( 38.1159, 64.7104, 30.8328, 0.83 ) }
    dend_45 { pt3dadd( 38.2448, 67.2347, 31.5901, 0.83 ) }
    dend_45 { pt3dadd( 38.5282, 70.86, 32.9652, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_45 { pt3dadd( 38.6823, 72.1398, 33.7434, 0.56 ) }
    dend_45 { pt3dadd( 39.515, 76.3832, 37.217, 0.56 ) }
    dend_45 { pt3dadd( 40.1637, 78.2692, 39.6003, 0.56 ) }
    dend_45 { pt3dadd( 40.6825, 79.2042, 41.3024, 0.83 ) }
    dend_45 { pt3dadd( 41.8486, 80.9464, 45.0791, 0.83 ) }
    dend_45 { pt3dadd( 43.8666, 83.2107, 51.1375, 0.56 ) }
    dend_45 { pt3dadd( 44.6381, 83.8482, 53.4214, 0.56 ) }
    dend_45 { pt3dadd( 47.2269, 85.0663, 60.7502, 0.56 ) }
    dend_45 { pt3dadd( 48.7734, 85.5478, 64.9438, 0.56 ) }
    dend_45 { pt3dadd( 50.6734, 94.8291, 68.1451, 0.56 ) }
    dend_45 { pt3dadd( 52.975, 104.266, 70.5209, 0.56 ) }
    dend_45 { pt3dadd( 54.3053, 113.525, 74.0574, 0.56 ) }
    dend_45 { pt3dadd( 56.6433, 122.75, 77.1295, 0.56 ) }
    dend_45 { pt3dadd( 58.4432, 132.01, 80.4461, 0.56 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 14/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -4.16137, 49.1064, 7.74852, 0.83 ) }
    dend_24 { pt3dadd( -4.94605, 49.9548, 9.74708, 0.83 ) }
    dend_24 { pt3dadd( -6.32539, 51.4462, 13.2602, 0.83 ) }
    dend_24 { pt3dadd( -7.41505, 52.6244, 16.0355, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 18/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -4.16137, 49.1064, 7.74852, 0.83 ) }
    dend_23 { pt3dadd( -4.58003, 52.1334, 6.6669, 0.83 ) }
    dend_23 { pt3dadd( -5.53554, 56.1401, 5.75476, 0.83 ) }
    dend_23 { pt3dadd( -6.64898, 61.0862, 4.78252, 0.83 ) }
    dend_23 { pt3dadd( -7.02506, 63.012, 4.43519, 0.83 ) }
    dend_23 { pt3dadd( -7.50231, 65.4813, 3.96083, 0.83 ) }
    dend_23 { pt3dadd( -8.375, 69.793, 3.14079, 0.83 ) }
    dend_23 { pt3dadd( -9.44213, 75.5831, 1.96667, 0.83 ) }
    dend_23 { pt3dadd( -10.1223, 79.4936, 0.922327, 0.83 ) }
    dend_23 { pt3dadd( -10.4093, 80.9804, 0.515068, 0.83 ) }
    dend_23 { pt3dadd( -10.9837, 83.7394, -0.445557, 0.56 ) }
    dend_23 { pt3dadd( -11.6585, 86.902, -1.83024, 0.83 ) }
    dend_23 { pt3dadd( -12.4823, 90.3836, -3.68211, 0.83 ) }
    dend_23 { pt3dadd( -13.2002, 93.4485, -5.62038, 0.83 ) }
    dend_23 { pt3dadd( -13.5873, 94.9456, -6.66268, 0.83 ) }
    dend_23 { pt3dadd( -14.1311, 97.1392, -8.12777, 0.83 ) }
    dend_23 { pt3dadd( -14.6727, 99.4805, -9.57162, 0.56 ) }
    dend_23 { pt3dadd( -14.9586, 100.838, -10.3452, 0.56 ) }
    dend_23 { pt3dadd( -15.623, 104.409, -11.9991, 0.83 ) }
    dend_23 { pt3dadd( -15.9644, 106.809, -13.009, 0.83 ) }
    dend_23 { pt3dadd( -16.4766, 111.456, -14.7973, 0.83 ) }
    dend_23 { pt3dadd( -16.6841, 113.572, -15.5058, 0.83 ) }
    dend_23 { pt3dadd( -16.8283, 115.401, -16.0384, 0.56 ) }
    dend_23 { pt3dadd( -16.9836, 117.946, -16.679, 1.11 ) }
    dend_23 { pt3dadd( -17.2129, 120.617, -17.056, 0.28 ) }
    dend_23 { pt3dadd( -17.3444, 121.95, -17.1557, 0.83 ) }
    dend_23 { pt3dadd( -17.5247, 124.182, -17.2459, 0.28 ) }
    dend_23 { pt3dadd( -17.6377, 126.216, -17.3429, 0.83 ) }
    dend_23 { pt3dadd( -17.7365, 128.246, -17.4898, 0.83 ) }
    dend_23 { pt3dadd( -17.797, 132.074, -18.032, 0.28 ) }
    dend_23 { pt3dadd( -17.7559, 133.615, -18.3152, 0.28 ) }
    dend_23 { pt3dadd( -17.7296, 133.995, -18.4282, 0.83 ) }
    dend_23 { pt3dadd( -17.4149, 137.225, -19.6635, 0.28 ) }
    dend_23 { pt3dadd( -17.2497, 139.999, -20.9665, 0.83 ) }
    dend_23 { pt3dadd( -17.1339, 142.309, -22.3547, 0.28 ) }
    dend_23 { pt3dadd( -17.1194, 143.49, -23.0955, 0.83 ) }
    dend_23 { pt3dadd( -17.1724, 145.458, -24.2623, 0.28 ) }
    dend_23 { pt3dadd( -17.2029, 146.972, -24.9791, 0.83 ) }
    dend_23 { pt3dadd( -17.3571, 152.182, -26.9844, 0.28 ) }
    dend_23 { pt3dadd( -17.3689, 155.25, -28.1157, 0.56 ) }
    dend_23 { pt3dadd( -17.3415, 161.067, -30.2592, 0.28 ) }
    dend_23 { pt3dadd( -17.3071, 162.144, -30.6494, 0.56 ) }
    dend_23 { pt3dadd( -16.9755, 170.021, -33.3598, 0.56 ) }
    dend_23 { pt3dadd( -16.9046, 171.564, -33.845, 0.83 ) }
    dend_23 { pt3dadd( -16.6596, 176.041, -35.3465, 0.83 ) }
    dend_23 { pt3dadd( -16.4476, 180.086, -36.7838, 0.56 ) }
    dend_23 { pt3dadd( -16.223, 183.67, -38.2078, 0.56 ) }
    dend_23 { pt3dadd( -16.1272, 185.762, -39.0859, 0.28 ) }
    dend_23 { pt3dadd( -16.0621, 189.195, -40.7203, 1.11 ) }
    dend_23 { pt3dadd( -15.9738, 194.807, -43.2755, 0.28 ) }
    dend_23 { pt3dadd( -15.9909, 195.62, -43.5947, 0.56 ) }
    dend_23 { pt3dadd( -15.9992, 198.139, -44.5505, 0.28 ) }
    dend_23 { pt3dadd( -16.0436, 199.177, -44.9693, 0.56 ) }
    dend_23 { pt3dadd( -16.1253, 202.115, -46.0731, 0.28 ) }
    dend_23 { pt3dadd( -16.1516, 202.461, -46.2553, 0.56 ) }
    dend_23 { pt3dadd( -16.3655, 203.753, -46.8202, 0.28 ) }
    dend_23 { pt3dadd( -16.5153, 204.501, -47.1461, 0.83 ) }
    dend_23 { pt3dadd( -17.5797, 209.443, -49.2719, 0.28 ) }
    dend_23 { pt3dadd( -17.9316, 210.978, -49.8942, 1.11 ) }
    dend_23 { pt3dadd( -19.6683, 220.144, -52.7947, 0.28 ) }
    dend_23 { pt3dadd( -20.968, 227.878, -55.1225, 0.28 ) }
    dend_23 { pt3dadd( -21.2428, 229.746, -55.6785, 0.83 ) }
    dend_23 { pt3dadd( -21.4772, 231.599, -56.2043, 0.28 ) }
    dend_23 { pt3dadd( -21.6044, 232.787, -56.5161, 0.56 ) }
    dend_23 { pt3dadd( -22.5306, 243.147, -59.1086, 0.28 ) }
    dend_23 { pt3dadd( -22.7454, 247.233, -59.9119, 0.83 ) }
    dend_23 { pt3dadd( -22.8028, 252.668, -61.2914, 0.28 ) }
    dend_23 { pt3dadd( -22.814, 254.035, -61.6696, 0.83 ) }
    dend_23 { pt3dadd( -22.8251, 255.071, -61.9872, 0.28 ) }
    dend_23 { pt3dadd( -22.8506, 256.681, -62.5619, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_13 (entry count 88/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 12.2156, 52.675, 17.8135, 0.83 ) }
    dend_21 { pt3dadd( 15.1987, 55.3128, 21.9088, 0.83 ) }
    dend_21 { pt3dadd( 16.1696, 56.2377, 23.1939, 0.56 ) }
    dend_21 { pt3dadd( 18.3204, 57.9251, 25.8693, 0.56 ) }
    dend_21 { pt3dadd( 20.3069, 59.2589, 28.2454, 0.56 ) }
    dend_21 { pt3dadd( 22.0715, 60.2175, 30.2806, 0.56 ) }
    dend_21 { pt3dadd( 24.1783, 61.1928, 32.6567, 0.56 ) }
    dend_21 { pt3dadd( 26.0661, 61.8218, 34.5934, 0.56 ) }
    dend_21 { pt3dadd( 30.6403, 62.8775, 39.1894, 0.56 ) }
    dend_21 { pt3dadd( 33.5991, 63.1622, 41.94, 0.56 ) }
    dend_21 { pt3dadd( 35.932, 63.1593, 43.8988, 0.56 ) }
    dend_21 { pt3dadd( 37.5353, 63.0745, 45.1109, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( 40.2324, 62.8505, 46.8367, 0.56 ) }
    dend_21 { pt3dadd( 42.6824, 62.6107, 48.2141, 0.56 ) }
    dend_21 { pt3dadd( 45.6453, 62.4977, 49.5727, 0.56 ) }
    dend_21 { pt3dadd( 49.488, 62.55, 51.1737, 0.56 ) }
    dend_21 { pt3dadd( 51.6293, 62.6985, 52.0788, 0.56 ) }
    dend_21 { pt3dadd( 53.3091, 62.7609, 52.849, 0.56 ) }
    dend_21 { pt3dadd( 57.0165, 62.7, 54.8227, 0.56 ) }
    dend_21 { pt3dadd( 59.6109, 62.4513, 56.4911, 0.56 ) }
    dend_21 { pt3dadd( 61.0488, 62.1286, 57.6337, 0.56 ) }
    dend_21 { pt3dadd( 62.9299, 61.3739, 59.4554, 0.56 ) }
    dend_21 { pt3dadd( 65.9576, 59.7347, 62.6718, 0.56 ) }
    dend_21 { pt3dadd( 68.4157, 58.1284, 65.4986, 0.56 ) }
    dend_21 { pt3dadd( 70.4645, 56.4796, 68.0809, 0.56 ) }
    dend_21 { pt3dadd( 72.3925, 54.6716, 70.6193, 0.56 ) }
    dend_21 { pt3dadd( 74.1444, 52.919, 72.9923, 0.28 ) }
    dend_21 { pt3dadd( 74.344, 52.7104, 73.2693, 0.83 ) }
    dend_21 { pt3dadd( 82.328, 54.1941, 79.1049, 0.83 ) }
    dend_21 { pt3dadd( 89.7131, 57.1557, 85.162, 0.83 ) }
    dend_21 { pt3dadd( 98.0062, 59.936, 90.0091, 0.83 ) }
    dend_21 { pt3dadd( 106.766, 63.5704, 93.1826, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 12.2156, 52.675, 17.8135, 0.83 ) }
    dend_14 { pt3dadd( 16.1495, 55.3596, 17.0069, 0.83 ) }
    dend_14 { pt3dadd( 19.4492, 57.7367, 16.1682, 0.83 ) }
    dend_14 { pt3dadd( 22.9719, 60.2584, 15.1489, 0.83 ) }
    dend_14 { pt3dadd( 25.7544, 62.2503, 14.3439, 0.83 ) }
    dend_14 { pt3dadd( 29.2768, 64.7718, 13.3247, 0.83 ) }
    dend_14 { pt3dadd( 31.7039, 66.5092, 12.6225, 0.83 ) }
    dend_14 { pt3dadd( 33.1399, 67.3805, 12.0686, 0.83 ) }
    dend_14 { pt3dadd( 34.0584, 67.9761, 11.6071, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 29/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -64.4354, 47.3555, -23.0624, 0.56 ) }
    dend_5 { pt3dadd( -66.0612, 45.2187, -24.6134, 0.56 ) }
    dend_5 { pt3dadd( -67.3322, 43.6035, -25.7814, 0.56 ) }
    dend_5 { pt3dadd( -69.2356, 41.2408, -27.349, 0.83 ) }
    dend_5 { pt3dadd( -71.6595, 38.3743, -29.1473, 0.83 ) }
    dend_5 { pt3dadd( -74.6529, 35.064, -31.0856, 0.56 ) }
    dend_5 { pt3dadd( -76.6427, 32.8635, -32.3741, 0.56 ) }
    dend_5 { pt3dadd( -78.8672, 30.439, -33.6589, 0.28 ) }
    dend_5 { pt3dadd( -81.0365, 28.1683, -34.8099, 1.11 ) }
    dend_5 { pt3dadd( -83.4026, 25.7082, -35.8143, 0.28 ) }
    dend_5 { pt3dadd( -85.8775, 23.3737, -36.6267, 0.56 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 40/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -64.4354, 47.3555, -23.0624, 0.56 ) }
    dend_4 { pt3dadd( -70.947, 48.5452, -19.2207, 0.56 ) }
    dend_4 { pt3dadd( -75.4675, 49.5258, -16.7162, 0.56 ) }
    dend_4 { pt3dadd( -81.3806, 50.9571, -13.6711, 0.56 ) }
    dend_4 { pt3dadd( -83.1285, 51.4168, -12.8384, 0.56 ) }
    dend_4 { pt3dadd( -84.3493, 51.7394, -12.2584, 0.28 ) }
    dend_4 { pt3dadd( -86.7772, 52.3534, -11.1323, 0.56 ) }
    dend_4 { pt3dadd( -87.3716, 52.4936, -11.0088, 0.28 ) }
    dend_4 { pt3dadd( -88.7774, 52.9862, -11.0085, 0.56 ) }
    dend_4 { pt3dadd( -89.6822, 53.4783, -11.2586, 0.28 ) }
    dend_4 { pt3dadd( -91.6313, 54.4496, -12.5009, 0.56 ) }
    dend_4 { pt3dadd( -92.9027, 55.0183, -13.464, 0.83 ) }
    dend_4 { pt3dadd( -96.0724, 56.3574, -16.0904, 0.28 ) }
    dend_4 { pt3dadd( -99.3502, 57.7976, -18.6718, 0.56 ) }
    dend_4 { pt3dadd( -101.395, 58.7626, -20.2309, 0.83 ) }
    dend_4 { pt3dadd( -106.214, 61.2285, -23.9093, 0.28 ) }
    dend_4 { pt3dadd( -108.133, 62.3198, -25.3597, 0.28 ) }
    dend_4 { pt3dadd( -108.585, 62.5909, -25.6764, 0.56 ) }
    dend_4 { pt3dadd( -111.585, 64.179, -27.4221, 0.28 ) }
    dend_4 { pt3dadd( -112.716, 64.737, -28.0205, 0.56 ) }
    dend_4 { pt3dadd( -114.855, 65.759, -29.0601, 0.28 ) }
    dend_4 { pt3dadd( -116.242, 66.3874, -29.7058, 0.83 ) }
    dend_4 { pt3dadd( -118.035, 67.1076, -30.787, 0.83 ) }
    dend_4 { pt3dadd( -121.869, 68.5191, -33.4178, 0.56 ) }
    dend_4 { pt3dadd( -123.269, 68.9828, -34.4246, 0.56 ) }
    dend_4 { pt3dadd( -124.877, 69.5138, -35.3498, 0.28 ) }
    dend_4 { pt3dadd( -125.933, 69.845, -35.9064, 0.83 ) }
    dend_4 { pt3dadd( -128.595, 70.6753, -37.2584, 0.56 ) }
    dend_4 { pt3dadd( -131.957, 71.873, -38.6941, 1.11 ) }
    dend_4 { pt3dadd( -133.812, 72.6904, -39.3248, 0.56 ) }
    dend_4 { pt3dadd( -138.02, 74.5963, -40.6003, 0.83 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 71/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 21.8778, -43.7891, -47.3062, 0.28 ) }
    dend_67 { pt3dadd( 26.2128, -44.8374, -50.3377, 0.28 ) }
    dend_67 { pt3dadd( 27.5944, -45.2251, -51.2212, 1.67 ) }
    dend_67 { pt3dadd( 36.0861, -47.7999, -56.174, 0.28 ) }
    dend_67 { pt3dadd( 38.921, -48.7045, -57.617, 1.67 ) }
    dend_67 { pt3dadd( 43.8685, -50.3419, -60.0285, 0.28 ) }
    dend_67 { pt3dadd( 50.499, -52.5327, -63.1084, 0.28 ) }
    dend_67 { pt3dadd( 51.8394, -53.0039, -63.7761, 2.22 ) }
    dend_67 { pt3dadd( 55.8045, -54.4327, -65.5542, 0.28 ) }
    dend_67 { pt3dadd( 58.4439, -55.3678, -66.4108, 1.11 ) }
    dend_67 { pt3dadd( 62.6843, -56.7629, -67.7756, 0.28 ) }
    dend_67 { pt3dadd( 64.5182, -57.2873, -68.0703, 1.11 ) }
    dend_67 { pt3dadd( 67.9633, -58.1237, -68.3625, 0.28 ) }
    dend_67 { pt3dadd( 68.8233, -58.3037, -68.3932, 0.83 ) }
    dend_67 { pt3dadd( 73.3842, -59.1563, -68.1156, 0.28 ) }
    dend_67 { pt3dadd( 74.1808, -59.3188, -67.9158, 0.83 ) }
    dend_67 { pt3dadd( 79.811, -60.6364, -65.4544, 0.28 ) }
    dend_67 { pt3dadd( 82.1007, -61.2541, -64.3396, 0.83 ) }
    dend_67 { pt3dadd( 84.1046, -61.8556, -63.1976, 0.28 ) }
    dend_67 { pt3dadd( 85.7325, -62.3241, -62.1351, 1.11 ) }
    dend_67 { pt3dadd( 92.7597, -64.1875, -57.1279, 0.28 ) }
    dend_67 { pt3dadd( 93.2142, -64.2881, -56.8349, 1.11 ) }
    dend_67 { pt3dadd( 95.6918, -64.7053, -55.3384, 0.28 ) }
    dend_67 { pt3dadd( 97.8196, -64.8857, -53.9239, 0.83 ) }
    dend_67 { pt3dadd( 103.21, -64.8756, -50.2644, 0.28 ) }
    dend_67 { pt3dadd( 103.844, -64.8321, -49.8032, 0.83 ) }
    dend_67 { pt3dadd( 107.307, -64.2985, -47.126, 0.28 ) }
    dend_67 { pt3dadd( 109.665, -63.942, -45.2593, 0.56 ) }
    dend_67 { pt3dadd( 113.243, -63.4029, -42.5096, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_67 { pt3dadd( 113.474, -63.3729, -42.3541, 0.56 ) }
    dend_67 { pt3dadd( 118.968, -62.9122, -38.734, 0.28 ) }
    dend_67 { pt3dadd( 121.457, -62.7918, -36.9495, 0.28 ) }
    dend_67 { pt3dadd( 122.167, -62.7914, -36.372, 0.56 ) }
    dend_67 { pt3dadd( 124.341, -62.8812, -34.907, 0.28 ) }
    dend_67 { pt3dadd( 125.118, -62.9503, -34.48, 0.83 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 6/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 21.8778, -43.7891, -47.3062, 0.28 ) }
    dend_66 { pt3dadd( 25.1208, -43.9256, -51.8959, 0.28 ) }
    dend_66 { pt3dadd( 25.8545, -43.9626, -53.0759, 0.83 ) }
    dend_66 { pt3dadd( 28.2407, -44.1064, -57.105, 0.28 ) }
    dend_66 { pt3dadd( 29.4891, -44.2533, -59.3437, 1.39 ) }
    dend_66 { pt3dadd( 34.8845, -45.1638, -69.2509, 0.28 ) }
    dend_66 { pt3dadd( 35.4017, -45.2783, -70.2657, 1.11 ) }
    dend_66 { pt3dadd( 39.5427, -46.4303, -78.8828, 0.28 ) }
    dend_66 { pt3dadd( 40.1882, -46.7098, -80.5943, 0.56 ) }
    dend_66 { pt3dadd( 41.6179, -47.5163, -84.8657, 0.28 ) }
    dend_66 { pt3dadd( 41.9877, -47.7577, -86.0659, 1.11 ) }
    dend_66 { pt3dadd( 45.2486, -50.3611, -97.4214, 0.28 ) }
    dend_66 { pt3dadd( 46.0019, -51.0044, -100.168, 1.11 ) }
    dend_66 { pt3dadd( 51.2817, -55.7916, -120.116, 0.28 ) }
    dend_66 { pt3dadd( 51.7115, -56.178, -121.792, 0.83 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 21/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 53.2099, 12.6746, 61.243, 0.56 ) }
    dend_52 { pt3dadd( 53.2437, 14.4183, 61.3997, 0.56 ) }
    dend_52 { pt3dadd( 53.9489, 16.3925, 61.939, 0.56 ) }
    dend_52 { pt3dadd( 54.7131, 18.0942, 62.4563, 0.28 ) }
    dend_52 { pt3dadd( 55.5967, 20.0618, 63.0544, 0.56 ) }
    dend_52 { pt3dadd( 56.2257, 21.4626, 63.4803, 0.56 ) }
    dend_52 { pt3dadd( 56.8883, 22.938, 63.9288, 1.11 ) }
    dend_52 { pt3dadd( 60.3987, 29.4926, 66.2014, 0.28 ) }
    dend_52 { pt3dadd( 61.0026, 30.4278, 66.563, 0.56 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 30/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 53.2099, 12.6746, 61.243, 0.83 ) }
    dend_47 { pt3dadd( 53.9099, 14.3946, 60.393, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_24 (entry count 32/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -7.41505, 52.6244, 16.0355, 0.83 ) }
    dend_30 { pt3dadd( -8.26944, 52.535, 17.7165, 0.83 ) }
    dend_30 { pt3dadd( -10.6525, 52.1636, 22.2632, 0.83 ) }
    dend_30 { pt3dadd( -11.9258, 51.9359, 24.7742, 0.56 ) }
    dend_30 { pt3dadd( -12.5898, 51.749, 26.1028, 0.56 ) }
    dend_30 { pt3dadd( -14.1619, 51.2529, 29.1345, 0.56 ) }
    dend_30 { pt3dadd( -16.654, 50.3165, 33.787, 0.56 ) }
    dend_30 { pt3dadd( -17.3923, 49.9508, 35.1827, 0.56 ) }
    dend_30 { pt3dadd( -19.2019, 48.6574, 38.5857, 0.56 ) }
    dend_30 { pt3dadd( -20.5161, 47.6102, 41.1282, 0.56 ) }
    dend_30 { pt3dadd( -21.1123, 47.0808, 42.3072, 0.56 ) }
    dend_30 { pt3dadd( -22.1438, 46.1082, 44.1955, 0.56 ) }
    dend_30 { pt3dadd( -23.8094, 44.2006, 47.0595, 0.56 ) }
    dend_30 { pt3dadd( -25.0618, 42.6133, 49.3776, 0.56 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 46/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.41505, 52.6244, 16.0355, 0.83 ) }
    dend_25 { pt3dadd( -6.74656, 54.4361, 18.3649, 0.83 ) }
    dend_25 { pt3dadd( -6.40857, 55.7136, 19.7932, 0.83 ) }
    dend_25 { pt3dadd( -5.60612, 58.9099, 23.3757, 0.83 ) }
    dend_25 { pt3dadd( -4.90482, 61.7033, 26.5068, 0.83 ) }
    dend_25 { pt3dadd( -4.31376, 64.0575, 29.1456, 0.83 ) }
    dend_25 { pt3dadd( -3.77588, 66.1999, 31.5469, 0.83 ) }
    dend_25 { pt3dadd( -3.06712, 69.43, 35.2024, 0.83 ) }
    dend_25 { pt3dadd( -1.70893, 75.5717, 42.5271, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 55/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 34.0584, 67.9761, 11.6071, 0.83 ) }
    dend_20 { pt3dadd( 35.8162, 70.7395, 3.37281, 0.83 ) }
    dend_20 { pt3dadd( 36.3726, 71.6902, 1.1647, 0.83 ) }
    dend_20 { pt3dadd( 37.9799, 74.5134, -4.68189, 0.83 ) }
    dend_20 { pt3dadd( 39.5815, 77.4208, -10.195, 0.83 ) }
    dend_20 { pt3dadd( 40.3754, 78.9471, -12.8404, 0.83 ) }
    dend_20 { pt3dadd( 42.3367, 82.9348, -19.2464, 0.83 ) }
    dend_20 { pt3dadd( 44.0849, 87.0166, -24.371, 0.28 ) }
    dend_20 { pt3dadd( 44.3847, 87.7116, -25.0356, 0.56 ) }
    dend_20 { pt3dadd( 45.0607, 89.1611, -26.085, 1.11 ) }
    dend_20 { pt3dadd( 45.968, 90.9087, -27.1664, 0.83 ) }
    dend_20 { pt3dadd( 47.1975, 93.0101, -28.3931, 0.83 ) }
    dend_20 { pt3dadd( 50.0778, 97.507, -30.8003, 0.83 ) }
    dend_20 { pt3dadd( 54.5183, 103.945, -34.4694, 0.56 ) }
    dend_20 { pt3dadd( 56.7137, 107.227, -36.8553, 0.56 ) }
    dend_20 { pt3dadd( 58.5286, 110.071, -39.3422, 1.11 ) }
    dend_20 { pt3dadd( 59.0038, 110.831, -40.1638, 0.83 ) }
    dend_20 { pt3dadd( 59.511, 111.651, -41.1484, 0.28 ) }
    dend_20 { pt3dadd( 60.4145, 113.254, -43.4843, 1.11 ) }
    dend_20 { pt3dadd( 62.1579, 118.12, -52.243, 0.28 ) }
    dend_20 { pt3dadd( 62.4293, 119.634, -54.9719, 1.39 ) }
    dend_20 { pt3dadd( 62.5636, 121.575, -58.5181, 0.56 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 34.0584, 67.9761, 11.6071, 0.83 ) }
    dend_15 { pt3dadd( 36.613, 70.1602, 11.2263, 0.83 ) }
    dend_15 { pt3dadd( 38.999, 72.0358, 10.9159, 0.56 ) }
    dend_15 { pt3dadd( 41.4649, 73.8826, 10.5355, 0.56 ) }
    dend_15 { pt3dadd( 46.0101, 77.3199, 9.57147, 0.56 ) }
    dend_15 { pt3dadd( 47.396, 78.3544, 9.26207, 0.56 ) }
    dend_15 { pt3dadd( 49.475, 79.909, 8.7886, 0.56 ) }
    dend_15 { pt3dadd( 50.1499, 80.4382, 8.59846, 0.56 ) }
    dend_15 { pt3dadd( 51.5169, 81.3823, 8.09928, 0.56 ) }
    dend_15 { pt3dadd( 54.7857, 83.2692, 6.32185, 0.56 ) }
    dend_15 { pt3dadd( 57.3181, 84.4827, 4.45954, 0.56 ) }
    dend_15 { pt3dadd( 58.9113, 85.23, 3.16154, 0.56 ) }
    dend_15 { pt3dadd( 60.8388, 86.1373, 1.56178, 0.56 ) }
    dend_15 { pt3dadd( 64.47, 87.7651, -1.3292, 0.83 ) }
    dend_15 { pt3dadd( 68.1802, 89.3543, -4.21682, 0.56 ) }
    dend_15 { pt3dadd( 71.0527, 90.5437, -6.31656, 0.56 ) }
    dend_15 { pt3dadd( 72.9951, 91.3877, -7.61674, 0.56 ) }
    dend_15 { pt3dadd( 75.4781, 92.5643, -9.061, 0.83 ) }
    dend_15 { pt3dadd( 77.5021, 93.6562, -9.99041, 1.11 ) }
    dend_15 { pt3dadd( 79.6016, 94.9664, -10.7815, 0.28 ) }
    dend_15 { pt3dadd( 83.0531, 97.356, -11.873, 0.28 ) }
    dend_15 { pt3dadd( 85.2179, 98.924, -12.4919, 1.11 ) }
    dend_15 { pt3dadd( 88.5909, 101.534, -13.5278, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_15 { pt3dadd( 90.9902, 103.479, -14.2157, 0.83 ) }
    dend_15 { pt3dadd( 92.5191, 104.757, -14.6475, 0.28 ) }
    dend_15 { pt3dadd( 93.6252, 105.715, -14.9268, 0.28 ) }
    dend_15 { pt3dadd( 94.7352, 106.774, -15.2504, 1.67 ) }
    dend_15 { pt3dadd( 95.7453, 107.843, -15.5273, 1.67 ) }
    dend_15 { pt3dadd( 97.2103, 109.612, -15.5837, 1.67 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 6/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -85.8775, 23.3737, -36.6267, 0.28 ) }
    dend_7 { pt3dadd( -87.6699, 21.9896, -39.7647, 0.28 ) }
    dend_7 { pt3dadd( -88.1715, 21.5646, -40.82, 0.56 ) }
    dend_7 { pt3dadd( -88.5119, 21.1962, -41.6961, 0.56 ) }
    dend_7 { pt3dadd( -92.1439, 16.7411, -51.7381, 0.28 ) }
    dend_7 { pt3dadd( -92.9395, 15.7652, -53.9379, 0.56 ) }
    dend_7 { pt3dadd( -95.6864, 12.3958, -61.5328, 0.28 ) }
    dend_7 { pt3dadd( -96.9114, 10.6765, -65.5999, 1.39 ) }
    dend_7 { pt3dadd( -98.2115, 8.59052, -70.4496, 0.28 ) }
    dend_7 { pt3dadd( -98.4671, 8.10998, -71.5674, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 16/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -85.8775, 23.3737, -36.6267, 0.28 ) }
    dend_6 { pt3dadd( -87.223, 19.1367, -45.7907, 0.28 ) }
    dend_6 { pt3dadd( -87.4584, 18.4983, -47.0145, 1.11 ) }
    dend_6 { pt3dadd( -87.9384, 17.1966, -49.5101, 0.28 ) }
    dend_6 { pt3dadd( -88.4246, 15.8778, -52.0384, 0.83 ) }
    dend_6 { pt3dadd( -89.0468, 14.1905, -55.273, 0.28 ) }
    dend_6 { pt3dadd( -89.2831, 13.5494, -56.502, 0.56 ) }
    dend_6 { pt3dadd( -89.8482, 12.6044, -56.9478, 0.56 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 24/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 61.0026, 30.4278, 66.563, 0.28 ) }
    dend_54 { pt3dadd( 63.4742, 32.0217, 67.1364, 0.28 ) }
    dend_54 { pt3dadd( 64.1238, 32.4407, 67.2871, 0.56 ) }
    dend_54 { pt3dadd( 67.8118, 34.8191, 68.1426, 0.28 ) }
    dend_54 { pt3dadd( 69.9598, 36.2044, 68.6409, 0.56 ) }
    dend_54 { pt3dadd( 77.4899, 41.8789, 71.9721, 0.56 ) }
    dend_54 { pt3dadd( 85.2093, 47.3967, 75.1289, 0.56 ) }
    dend_54 { pt3dadd( 92.0705, 53.9051, 78.3793, 0.56 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 32/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 61.0026, 30.4278, 66.563, 0.28 ) }
    dend_53 { pt3dadd( 61.5911, 34.8327, 66.5323, 0.28 ) }
    dend_53 { pt3dadd( 62.0821, 37.3474, 66.5167, 0.83 ) }
    dend_53 { pt3dadd( 62.6575, 39.7649, 66.6203, 0.28 ) }
    dend_53 { pt3dadd( 62.9462, 40.9779, 66.6723, 0.56 ) }
    dend_53 { pt3dadd( 63.2095, 42.0844, 66.7197, 0.28 ) }
    dend_53 { pt3dadd( 63.3538, 42.6908, 66.7457, 0.56 ) }
    dend_53 { pt3dadd( 64.0465, 44.6871, 66.9188, 0.28 ) }
    dend_53 { pt3dadd( 64.5908, 46.2345, 67.1376, 0.83 ) }
    dend_53 { pt3dadd( 67.3626, 55.7276, 65.6547, 0.83 ) }
    dend_53 { pt3dadd( 71.0538, 65.0156, 65.3279, 0.83 ) }
    dend_53 { pt3dadd( 75.2957, 74.0285, 64.4476, 0.83 ) }
    dend_53 { pt3dadd( 78.431, 83.5068, 65.0226, 0.83 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 45/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 53.9099, 14.3946, 60.393, 0.56 ) }
    dend_51 { pt3dadd( 57.9871, 15.1953, 62.9482, 0.56 ) }
    dend_51 { pt3dadd( 59.851, 15.5613, 64.1163, 0.56 ) }
    dend_51 { pt3dadd( 62.7323, 16.1271, 65.922, 0.56 ) }
    dend_51 { pt3dadd( 64.6987, 16.5133, 67.1543, 0.56 ) }
    dend_51 { pt3dadd( 67.0177, 16.9687, 68.6076, 0.56 ) }
    dend_51 { pt3dadd( 74.6598, 19.848, 74.3788, 0.56 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 52/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 53.9099, 14.3946, 60.393, 0.83 ) }
    dend_48 { pt3dadd( 53.5478, 17.3185, 61.7604, 0.83 ) }
    dend_48 { pt3dadd( 53.2194, 20.0717, 63.0534, 0.83 ) }
    dend_48 { pt3dadd( 53.0479, 21.3424, 63.6366, 1.11 ) }
    dend_48 { pt3dadd( 52.6625, 23.6862, 64.3651, 0.56 ) }
    dend_48 { pt3dadd( 52.2815, 25.8444, 64.7312, 0.56 ) }
    dend_48 { pt3dadd( 52.1039, 26.6043, 64.8483, 1.11 ) }
    dend_48 { pt3dadd( 51.7623, 27.7942, 64.9108, 0.56 ) }
    dend_48 { pt3dadd( 51.4941, 28.7542, 64.9268, 0.83 ) }
    dend_48 { pt3dadd( 50.3655, 33.2635, 64.8797, 0.83 ) }
    dend_48 { pt3dadd( 49.9076, 35.1743, 64.8655, 0.56 ) }
    dend_48 { pt3dadd( 49.1304, 38.8915, 64.6679, 0.56 ) }
    dend_48 { pt3dadd( 48.5576, 41.594, 64.4445, 0.56 ) }
    dend_48 { pt3dadd( 47.9605, 44.1401, 64.2104, 0.56 ) }
    dend_48 { pt3dadd( 47.3071, 47.1131, 63.8541, 0.56 ) }
    dend_48 { pt3dadd( 46.645, 50.1666, 63.4689, 0.56 ) }
    dend_48 { pt3dadd( 45.6763, 54.5986, 62.6581, 0.56 ) }
    dend_48 { pt3dadd( 45.1731, 57.3503, 62.0408, 0.56 ) }
    dend_48 { pt3dadd( 44.9449, 58.5519, 61.822, 0.56 ) }
    dend_48 { pt3dadd( 43.9402, 63.7986, 61.0029, 0.56 ) }
    dend_48 { pt3dadd( 43.6921, 65.2674, 60.8922, 0.56 ) }
    dend_48 { pt3dadd( 43.1695, 68.8399, 60.7413, 0.56 ) }
    dend_48 { pt3dadd( 42.6637, 72.9399, 60.9464, 0.56 ) }
    dend_48 { pt3dadd( 42.3307, 76.5904, 61.3522, 0.56 ) }
    dend_48 { pt3dadd( 42.1129, 79.694, 61.8593, 0.56 ) }
    dend_48 { pt3dadd( 41.7919, 83.6945, 63.0653, 0.56 ) }
    // Section: dend_38, id: dend_38, parent: dend_30 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -25.0618, 42.6133, 49.3776, 0.56 ) }
    dend_38 { pt3dadd( -25.994, 40.0563, 51.3368, 0.56 ) }
    dend_38 { pt3dadd( -27.3158, 36.4303, 54.1151, 0.56 ) }
    dend_38 { pt3dadd( -27.8648, 34.9243, 55.2689, 0.56 ) }
    dend_38 { pt3dadd( -28.5349, 33.0863, 56.6772, 0.56 ) }
    dend_38 { pt3dadd( -29.3362, 30.8882, 58.3614, 0.56 ) }
    dend_38 { pt3dadd( -32.2012, 23.6542, 64.6433, 0.56 ) }
    dend_38 { pt3dadd( -34.6078, 17.4714, 72.1253, 0.56 ) }
    dend_38 { pt3dadd( -35.4734, 11.7552, 80.2847, 0.56 ) }
    dend_38 { pt3dadd( -36.7466, 7.29832, 89.1455, 0.56 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 88/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -25.0618, 42.6133, 49.3776, 0.56 ) }
    dend_31 { pt3dadd( -26.2251, 41.9196, 46.6488, 0.56 ) }
    dend_31 { pt3dadd( -27.5251, 41.1443, 43.5991, 0.56 ) }
    dend_31 { pt3dadd( -28.7407, 40.4195, 40.7476, 0.56 ) }
    dend_31 { pt3dadd( -30.6203, 39.2985, 36.3382, 0.83 ) }
    dend_31 { pt3dadd( -35.0481, 35.4078, 28.26, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 94/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -1.70893, 75.5717, 42.5271, 0.56 ) }
    dend_29 { pt3dadd( -3.06452, 78.7496, 47.3668, 0.56 ) }
    dend_29 { pt3dadd( -3.42355, 79.5913, 48.6486, 0.56 ) }
    dend_29 { pt3dadd( -4.35997, 81.7865, 51.9918, 0.83 ) }
    dend_29 { pt3dadd( -6.91169, 86.1775, 60.6062, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 99/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.70893, 75.5717, 42.5271, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_26 { pt3dadd( 0.695062, 77.7129, 48.5319, 0.56 ) }
    dend_26 { pt3dadd( 1.08149, 78.0571, 49.4972, 0.56 ) }
    dend_26 { pt3dadd( 2.15498, 79.0133, 52.1786, 0.56 ) }
    dend_26 { pt3dadd( 3.13978, 79.8904, 54.6385, 0.56 ) }
    dend_26 { pt3dadd( 4.46323, 81.0692, 57.9443, 0.56 ) }
    dend_26 { pt3dadd( 9.45323, 82.7873, 66.4383, 0.56 ) }
    dend_26 { pt3dadd( 15.0265, 85.2784, 74.3587, 0.56 ) }
    dend_26 { pt3dadd( 20.6229, 87.4569, 82.3546, 0.56 ) }
    dend_26 { pt3dadd( 24.697, 91.2508, 90.6617, 0.56 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 9/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 97.2103, 109.612, -15.5837, 0.28 ) }
    dend_17 { pt3dadd( 100.227, 112.867, -16.1129, 0.28 ) }
    dend_17 { pt3dadd( 100.988, 113.672, -16.2212, 0.56 ) }
    dend_17 { pt3dadd( 106.96, 119.749, -16.9315, 0.28 ) }
    dend_17 { pt3dadd( 109.525, 122.377, -17.3387, 0.83 ) }
    dend_17 { pt3dadd( 111.255, 124.178, -17.6491, 0.83 ) }
    dend_17 { pt3dadd( 112.348, 125.296, -17.9004, 0.28 ) }
    dend_17 { pt3dadd( 113.071, 125.967, -18.0609, 0.56 ) }
    dend_17 { pt3dadd( 113.889, 126.701, -18.24, 0.56 ) }
    dend_17 { pt3dadd( 116.271, 128.885, -18.7385, 0.28 ) }
    dend_17 { pt3dadd( 117.512, 130.049, -19.2572, 0.83 ) }
    dend_17 { pt3dadd( 119.314, 131.957, -20.1846, 0.28 ) }
    dend_17 { pt3dadd( 120.979, 133.691, -21.1048, 0.56 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 22/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 97.2103, 109.612, -15.5837, 0.28 ) }
    dend_16 { pt3dadd( 100.694, 109.756, -16.6354, 0.28 ) }
    dend_16 { pt3dadd( 102.592, 109.822, -17.3101, 0.28 ) }
    dend_16 { pt3dadd( 103.518, 109.846, -17.6703, 1.11 ) }
    dend_16 { pt3dadd( 106.306, 109.888, -18.7831, 0.28 ) }
    dend_16 { pt3dadd( 108.122, 109.916, -19.5075, 0.83 ) }
    dend_16 { pt3dadd( 112.522, 109.983, -21.2631, 0.28 ) }
    dend_16 { pt3dadd( 114.031, 109.948, -21.9987, 1.11 ) }
    dend_16 { pt3dadd( 115.975, 109.839, -23.0388, 0.28 ) }
    dend_16 { pt3dadd( 116.502, 109.802, -23.3353, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 32/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -98.4671, 8.10998, -71.5674, 0.28 ) }
    dend_9 { pt3dadd( -100.248, 7.41014, -75.1198, 0.28 ) }
    dend_9 { pt3dadd( -100.364, 7.36987, -75.3604, 0.83 ) }
    dend_9 { pt3dadd( -103.694, 6.35401, -82.0318, 0.28 ) }
    dend_9 { pt3dadd( -104.284, 6.11351, -83.2832, 0.83 ) }
    dend_9 { pt3dadd( -107.468, 4.6334, -89.9144, 0.56 ) }
    dend_9 { pt3dadd( -108.523, 4.1341, -92.1731, 0.28 ) }
    dend_9 { pt3dadd( -108.755, 4.03468, -92.6812, 0.28 ) }
    dend_9 { pt3dadd( -109.244, 3.7851, -93.9473, 0.56 ) }
    dend_9 { pt3dadd( -110.839, 2.76669, -99.0038, 0.28 ) }
    dend_9 { pt3dadd( -111.251, 2.45621, -100.401, 1.11 ) }
    dend_9 { pt3dadd( -112.75, 1.1327, -105.513, 0.28 ) }
    dend_9 { pt3dadd( -113.227, 0.680593, -107.216, 0.56 ) }
    dend_9 { pt3dadd( -114.985, -1.07583, -113.994, 0.28 ) }
    dend_9 { pt3dadd( -115.05, -1.14386, -114.292, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 47/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -98.4671, 8.10998, -71.5674, 0.28 ) }
    dend_8 { pt3dadd( -103.828, 4.25842, -78.5736, 0.28 ) }
    dend_8 { pt3dadd( -104.261, 3.94721, -79.1397, 0.83 ) }
    dend_8 { pt3dadd( -105.82, 2.82723, -81.177, 0.28 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 51/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 92.0705, 53.9051, 78.3793, 0.28 ) }
    dend_56 { pt3dadd( 99.3134, 60.0721, 81.4628, 0.28 ) }
    dend_56 { pt3dadd( 106.296, 66.1983, 85.1672, 0.28 ) }
    dend_56 { pt3dadd( 113.267, 71.6862, 89.7809, 0.28 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 55/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 92.0705, 53.9051, 78.3793, 0.28 ) }
    dend_55 { pt3dadd( 100.165, 59.1406, 81.0404, 0.28 ) }
    dend_55 { pt3dadd( 107.116, 65.0779, 85.0928, 0.28 ) }
    dend_55 { pt3dadd( 115.174, 70.6542, 87.0887, 0.28 ) }
    dend_55 { pt3dadd( 122.822, 76.9943, 88.2315, 0.28 ) }
    dend_55 { pt3dadd( 130.6, 83.1356, 89.5672, 0.28 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 61/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 41.7919, 83.6945, 63.0653, 0.56 ) }
    dend_50 { pt3dadd( 40.4301, 84.4081, 60.1522, 0.56 ) }
    dend_50 { pt3dadd( 39.6247, 84.8302, 58.4292, 0.56 ) }
    dend_50 { pt3dadd( 36.3393, 86.92, 49.2184, 0.56 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 65/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 41.7919, 83.6945, 63.0653, 0.56 ) }
    dend_49 { pt3dadd( 40.9299, 86.3115, 63.9361, 0.56 ) }
    dend_49 { pt3dadd( 40.1598, 88.6498, 64.714, 0.56 ) }
    dend_49 { pt3dadd( 39.576, 90.422, 65.3037, 0.56 ) }
    dend_49 { pt3dadd( 38.8865, 92.5154, 66.0002, 0.56 ) }
    dend_49 { pt3dadd( 37.1862, 97.6777, 67.7178, 0.56 ) }
    dend_49 { pt3dadd( 33.0783, 105.877, 71.7038, 0.56 ) }
    dend_49 { pt3dadd( 28.9872, 114.372, 75.0365, 0.56 ) }
    dend_49 { pt3dadd( 25.6908, 122.781, 79.3279, 0.56 ) }
    dend_49 { pt3dadd( 22.9202, 130.785, 84.6449, 0.56 ) }
    dend_49 { pt3dadd( 19.0864, 137.348, 91.1426, 0.56 ) }
    dend_49 { pt3dadd( 13.9935, 143.44, 97.2217, 0.56 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 77/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -35.0481, 35.4078, 28.26, 0.56 ) }
    dend_33 { pt3dadd( -38.9804, 32.7657, 19.4534, 0.56 ) }
    dend_33 { pt3dadd( -44.5279, 30.0457, 11.5904, 0.56 ) }
    dend_33 { pt3dadd( -48.9549, 28.6446, 2.73379, 0.56 ) }
    dend_33 { pt3dadd( -53.5744, 28.2854, -6.12796, 0.56 ) }
    dend_33 { pt3dadd( -58.5433, 28.2828, -14.8061, 0.56 ) }
    dend_33 { pt3dadd( -63.7803, 29.1033, -23.2855, 0.56 ) }
    dend_33 { pt3dadd( -69.0897, 30.6168, -31.6233, 0.56 ) }
    dend_33 { pt3dadd( -74.9162, 31.9372, -39.6426, 0.56 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 86/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -35.0481, 35.4078, 28.26, 0.56 ) }
    dend_32 { pt3dadd( -39.2875, 32.1435, 19.8118, 0.56 ) }
    dend_32 { pt3dadd( -43.384, 27.6525, 11.8715, 0.56 ) }
    dend_32 { pt3dadd( -47.6792, 23.4955, 3.85448, 0.56 ) }
    dend_32 { pt3dadd( -52.802, 18.7788, -3.32252, 0.56 ) }
    dend_32 { pt3dadd( -58.3778, 12.5852, -8.84966, 0.56 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 92/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 24.697, 91.2508, 90.6617, 0.28 ) }
    dend_28 { pt3dadd( 30.1891, 94.3211, 98.4341, 0.28 ) }
    dend_28 { pt3dadd( 36.0685, 95.71, 106.403, 0.28 ) }
    dend_28 { pt3dadd( 41.6581, 98.3394, 114.267, 0.28 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 96/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 24.697, 91.2508, 90.6617, 0.28 ) }
    dend_27 { pt3dadd( 28.7972, 93.7948, 99.4205, 0.28 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 98/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 120.979, 133.691, -21.1048, 0.28 ) }
    dend_19 { pt3dadd( 123.939, 131.288, -25.2199, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_19 { pt3dadd( 124.1, 131.157, -25.4439, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 1/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 120.979, 133.691, -21.1048, 0.28 ) }
    dend_18 { pt3dadd( 122.241, 134.202, -22.5254, 0.28 ) }
    dend_18 { pt3dadd( 122.95, 134.488, -23.3221, 0.56 ) }
    dend_18 { pt3dadd( 129.817, 137.263, -31.0496, 0.28 ) }
    dend_18 { pt3dadd( 130.379, 137.49, -31.6817, 0.56 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 6/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -74.9162, 31.9372, -39.6426, 0.28 ) }
    dend_37 { pt3dadd( -79.5564, 32.0761, -48.4998, 0.28 ) }
    dend_37 { pt3dadd( -83.3889, 30.7013, -57.6333, 0.28 ) }
    dend_37 { pt3dadd( -85.4258, 29.1547, -67.3008, 0.28 ) }
    dend_37 { pt3dadd( -87.4869, 25.9763, -76.5555, 0.28 ) }
    dend_37 { pt3dadd( -89.0638, 24.2216, -86.2732, 0.28 ) }
    dend_37 { pt3dadd( -90.5892, 22.5274, -96.0099, 0.28 ) }
    dend_37 { pt3dadd( -92.9183, 21.5328, -105.684, 0.28 ) }
    dend_37 { pt3dadd( -94.5853, 21.1988, -115.538, 0.28 ) }
    dend_37 { pt3dadd( -97.5795, 21.3163, -125.079, 0.28 ) }
    dend_37 { pt3dadd( -99.9163, 20.6926, -134.782, 0.28 ) }
    dend_37 { pt3dadd( -100.631, 20.7983, -144.756, 0.28 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 18/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -74.9162, 31.9372, -39.6426, 0.28 ) }
    dend_34 { pt3dadd( -80.3873, 30.8838, -47.9467, 0.28 ) }
    dend_34 { pt3dadd( -84.772, 30.2202, -56.9096, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 21/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -84.772, 30.2202, -56.9096, 0.28 ) }
    dend_36 { pt3dadd( -85.062, 32.8383, -66.5565, 0.28 ) }
    dend_36 { pt3dadd( -85.9345, 35.7296, -76.0895, 0.28 ) }
    dend_36 { pt3dadd( -86.8345, 38.8156, -85.5588, 0.28 ) }
    dend_36 { pt3dadd( -86.6708, 41.7365, -95.1212, 0.28 ) }
    dend_36 { pt3dadd( -84.9936, 45.6698, -104.161, 0.28 ) }
    dend_36 { pt3dadd( -82.1326, 51.3464, -111.88, 0.28 ) }
    dend_36 { pt3dadd( -77.772, 58.4273, -117.434, 0.28 ) }
    dend_36 { pt3dadd( -72.7622, 66.1175, -121.404, 0.28 ) }
    dend_36 { pt3dadd( -66.9119, 73.5454, -124.66, 0.28 ) }
    dend_36 { pt3dadd( -59.2316, 79.3211, -127.427, 0.28 ) }
    dend_36 { pt3dadd( -50.7182, 84.1484, -129.481, 0.28 ) }
    dend_36 { pt3dadd( -42.3871, 88.6289, -132.724, 0.28 ) }
    dend_36 { pt3dadd( -35.2475, 93.9504, -137.275, 0.28 ) }
    dend_36 { pt3dadd( -27.3194, 99.4441, -139.914, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 36/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -84.772, 30.2202, -56.9096, 0.56 ) }
    dend_35 { pt3dadd( -91.0135, 28.139, -64.4403, 0.28 ) }
    dend_35 { pt3dadd( -97.8824, 25.2065, -71.0901, 0.28 ) }
    dend_35 { pt3dadd( -103.964, 23.4208, -78.8241, 0.28 ) }
    dend_35 { pt3dadd( -109.051, 19.8808, -86.6727, 0.28 ) }
    dend_35 { pt3dadd( -112.576, 13.989, -93.9428, 0.28 ) }
    dend_35 { pt3dadd( -117.374, 6.64227, -98.7395, 0.28 ) }
    dend_35 { pt3dadd( -122.469, -0.72398, -103.187, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_61, dend_42, dend_11, dend_0, dend_71, dend_62, dend_58, dend_43, dend_39, dend_12, dend_10, dend_1, dend_73, dend_72, dend_68, dend_63, dend_60, dend_59, dend_57, dend_44, dend_41, dend_40, dend_22, dend_13, dend_3, dend_2, dend_70, dend_69, dend_65, dend_64, dend_46, dend_45, dend_24, dend_23, dend_21, dend_14, dend_5, dend_4, dend_67, dend_66, dend_52, dend_47, dend_30, dend_25, dend_20, dend_15, dend_7, dend_6, dend_54, dend_53, dend_51, dend_48, dend_38, dend_31, dend_29, dend_26, dend_17, dend_16, dend_9, dend_8, dend_56, dend_55, dend_50, dend_49, dend_33, dend_32, dend_28, dend_27, dend_19, dend_18, dend_37, dend_34, dend_36, dend_35]}
    ModelViewParmSubset_2 = new SectionList()
    dend_61 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_61, dend_42, dend_11, dend_0, dend_71, dend_62, dend_58, dend_43, dend_39, dend_12, dend_10, dend_1, dend_73, dend_72, dend_68, dend_63, dend_60, dend_59, dend_57, dend_44, dend_41, dend_40, dend_22, dend_13, dend_3, dend_2, dend_70, dend_69, dend_65, dend_64, dend_46, dend_45, dend_24, dend_23, dend_21, dend_14, dend_5, dend_4, dend_67, dend_66, dend_52, dend_47, dend_30, dend_25, dend_20, dend_15, dend_7, dend_6, dend_54, dend_53, dend_51, dend_48, dend_38, dend_31, dend_29, dend_26, dend_17, dend_16, dend_9, dend_8, dend_56, dend_55, dend_50, dend_49, dend_33, dend_32, dend_28, dend_27, dend_19, dend_18, dend_37, dend_34, dend_36, dend_35]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_71 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_73 ModelViewParmSubset_3.append()
    dend_72 ModelViewParmSubset_3.append()
    dend_68 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_22 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_70 ModelViewParmSubset_3.append()
    dend_69 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_67 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_71 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_10 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_72 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_68 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_60 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_59 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_57 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_69 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_65 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_64 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_45 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_23 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_4 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_67 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_66 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_20 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_15 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_7 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_54 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_53 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_48 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_38 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_26 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_9 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_55 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_49 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_33 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_32 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_37 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_36 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_35 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_61 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_62 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_63 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_11 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_58 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_12 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_39 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_43 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_40 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_44 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_22 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_24 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_46 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_47 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_3 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_14 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_25 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_73 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_30 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_52 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_51 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_29 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_5 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_70 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_31 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_6 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_27 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_50 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_56 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_8 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_28 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_16 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_17 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_19 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_18 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_34 OneSecGrp_SectionRef_75.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_61, dend_42, dend_42, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, axon_0, axon_0, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_27, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_61 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_57 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_55 all.append()
    dend_55 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_71 nseg = 5
    dend_10 nseg = 9
    dend_72 nseg = 5
    dend_68 nseg = 5
    dend_60 nseg = 9
    dend_59 nseg = 7
    dend_57 nseg = 7
    dend_41 nseg = 5
    dend_69 nseg = 3
    dend_65 nseg = 3
    dend_64 nseg = 5
    dend_45 nseg = 7
    dend_23 nseg = 11
    dend_21 nseg = 7
    dend_4 nseg = 5
    dend_67 nseg = 7
    dend_66 nseg = 5
    dend_20 nseg = 5
    dend_15 nseg = 5
    dend_7 nseg = 3
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_48 nseg = 3
    dend_38 nseg = 3
    dend_26 nseg = 3
    dend_9 nseg = 3
    dend_55 nseg = 3
    dend_49 nseg = 3
    dend_33 nseg = 3
    dend_32 nseg = 3
    dend_37 nseg = 5
    dend_36 nseg = 7
    dend_35 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_MC_b7a2c9d0ae_0_0


