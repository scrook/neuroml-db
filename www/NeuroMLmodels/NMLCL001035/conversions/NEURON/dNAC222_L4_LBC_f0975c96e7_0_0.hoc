// Cell: dNAC222_L4_LBC_f0975c96e7_0_0
/*
{
  "id" : "dNAC222_L4_LBC_f0975c96e7_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.4489, -11.1277, 1.96857, 2.53905", "-2.21373, -9.99102, 1.77288, 4.60052", "-1.97857, -8.85434, 1.57719, 5.7745", "-1.74341, -7.71767, 1.3815, 6.94848", "-1.50825, -6.581, 1.18581, 8.08333", "-1.27308, -5.44432, 0.990126, 9.17802", "-1.03792, -4.30765, 0.794438, 10.2727", "-0.802757, -3.17097, 0.59875, 11.3674", "-0.567594, -2.0343, 0.403062, 12.0266", "-0.332431, -0.897626, 0.207374, 12.2828", "-0.0972679, 0.239047, 0.0116859, 12.3212", "0.137895, 1.37572, -0.184002, 11.9564", "0.373058, 2.5124, -0.37969, 10.9173", "0.608221, 3.64907, -0.575378, 9.90283", "0.843384, 4.78574, -0.771067, 9.18979", "1.07855, 5.92242, -0.966755, 8.44172", "1.31371, 7.05909, -1.16244, 7.69366", "1.54887, 8.19576, -1.35813, 6.80206", "1.78404, 9.33244, -1.55382, 5.87376", "2.0192, 10.4691, -1.74951, 4.94547", "2.25436, 11.6058, -1.9452, 2.87974" ]
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "6.41062, 0.883026, -2.60158, 1.33", "6.96245, 3.76195, -1.40025, 1.33", "7.87504, 8.52299, 0.586445, 0.67", "9.10351, 14.9319, 3.26078, 0.67", "9.78596, 18.4923, 4.74646, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988841484605
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-3.05938, -9.94699, 1.30842, 3.33", "-3.49938, -10.859, 1.30842, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988841484605
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-2.75938, 9.72753, -11.0115, 1.33", "-5.86061, 9.79751, -13.2215, 1.33", "-10.2898, 9.89747, -16.3777, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988841484605
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-2.30938, 10.8295, -10.0116, 1.33", "-3.02244, 16.6986, -7.87356, 1.33", "-3.5322, 22.7521, -5.88886, 2.0", "-3.99932, 27.9348, -4.39677, 1.33", "-4.37025, 31.4885, -3.552, 1.33", "-4.75004, 35.896, -2.52805, 2.0", "-4.99114, 39.5341, -1.80662, 1.33", "-5.05469, 41.4172, -1.54045, 1.33", "-5.10526, 45.0363, -1.39818, 1.33", "-5.33929, 49.7577, -1.4157, 1.33", "-5.6474, 54.8616, -1.67435, 1.33", "-5.99953, 58.7214, -1.92859, 1.33", "-6.32144, 61.2487, -2.12194, 0.67", "-6.92135, 65.3683, -2.37511, 0.67", "-7.36098, 68.311, -2.58887, 0.67", "-7.83471, 71.1381, -2.78947, 0.67", "-8.20844, 73.1311, -2.93594, 0.67", "-8.76025, 75.998, -3.05076, 0.67", "-9.52747, 80.3188, -3.16693, 0.67", "-10.5369, 86.3741, -3.18617, 0.67", "-11.2039, 91.3927, -3.22126, 0.67", "-11.4206, 92.9645, -3.2382, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988841484605,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.750619, 11.77, 0.238424, 2.67", "0.99062, 13.974, 4.48842, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988841484605
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.25436, 11.6058, -1.9452, 0.959956", "5.29331, 26.2947, -1.9452, 0.959956", "8.33225, 40.9837, -1.9452, 0.959956" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "9.78596, 18.4923, 4.74646, 0.67", "17.1786, 22.0665, 6.66442, 0.67", "23.7105, 24.6631, 8.71239, 0.67", "28.7352, 26.0702, 10.2789, 0.67", "32.3204, 26.9344, 11.3239, 0.33", "36.4401, 27.7993, 12.5323, 0.67", "38.9209, 28.2737, 13.252, 0.67", "41.841, 28.4556, 14.0739, 0.67", "48.294, 28.5555, 15.8738, 0.67", "52.4737, 28.5513, 16.7422, 0.67", "54.6715, 28.6228, 17.0052, 0.67", "56.0378, 28.7199, 17.0973, 0.67", "59.6438, 29.21, 16.9806, 0.67", "65.2, 30.2509, 16.2924, 0.67", "67.6587, 30.7778, 15.9136, 0.33", "70.2219, 31.3273, 15.3838, 0.67", "71.882, 31.6876, 15.0167, 0.33", "79.8393, 33.5224, 13.2884, 0.67", "82.4714, 34.1121, 12.7417, 0.67", "86.8358, 34.9403, 11.9341, 0.67", "91.4417, 35.7769, 11.0619, 0.67", "97.3468, 36.7941, 9.96297, 0.67", "100.106, 37.1946, 9.49759, 0.67", "103.536, 37.5314, 9.04021, 0.67", "106.09, 37.7231, 8.7458, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "9.78596, 18.4923, 4.74646, 0.67", "10.4384, 21.0228, 4.57371, 0.67", "14.3223, 34.1766, 3.67374, 0.67", "15.5796, 38.1543, 3.37348, 0.67", "17.7718, 44.6643, 2.85246, 0.67", "21.427, 54.5258, 2.03543, 0.67", "22.5975, 57.4398, 1.85266, 0.67", "24.2301, 60.745, 1.73458, 0.67", "25.0732, 62.0473, 1.75917, 0.67", "26.7102, 64.0714, 1.91243, 0.67", "28.8686, 66.1503, 2.1092, 0.67", "33.3377, 69.5108, 2.84541, 0.67", "35.8667, 71.2893, 3.23093, 0.67", "42.6968, 75.7687, 4.23419, 0.67", "46.8886, 78.4136, 4.80097, 0.67", "49.1742, 79.742, 5.04691, 0.67", "51.1896, 80.8519, 5.18209, 0.67", "54.1873, 82.4396, 5.2065, 0.67", "56.6296, 83.8145, 5.18303, 0.67", "59.2069, 85.522, 5.13755, 0.67", "61.6672, 87.6808, 5.07619, 0.67", "63.2283, 89.364, 5.05216, 0.67", "65.5606, 92.4637, 5.04628, 0.67", "67.419, 95.6178, 5.11656, 0.67", "69.5114, 100.316, 5.20998, 0.67", "70.2894, 102.425, 5.26309, 0.67", "71.1548, 105.173, 5.33967, 0.67", "71.6611, 106.903, 5.413, 0.67", "73.4468, 112.84, 5.73039, 0.67", "73.9713, 114.693, 5.84291, 0.67", "74.6967, 117.063, 6.00132, 0.33", "75.7298, 120.94, 6.0765, 0.67", "76.1707, 122.696, 6.03895, 0.67", "77.1219, 126.406, 5.8122, 0.67", "77.4578, 127.981, 5.63757, 0.67", "78.012, 130.769, 5.19966, 0.67", "78.8871, 135.639, 4.23279, 0.67", "79.0978, 136.904, 3.9756, 0.67", "79.4309, 138.977, 3.57017, 0.33", "79.7693, 141.235, 3.21529, 0.33", "80.278, 144.576, 2.87851, 0.67", "80.4985, 146.148, 2.82113, 0.67", "80.9048, 149.262, 2.95601, 0.67", "80.9928, 150.959, 2.94643, 0.33", "80.9577, 153.498, 2.83078, 0.67", "80.867, 156.19, 2.62447, 0.33", "80.8268, 156.639, 2.57968, 0.67", "80.6564, 158.519, 2.19258, 0.33", "80.6167, 162.282, 0.880589, 0.67", "80.7669, 164.701, -0.145675, 0.67", "80.9833, 166.171, -0.801706, 0.67", "81.3609, 168.03, -1.57119, 0.67", "82.1359, 171.163, -2.7141, 0.67", "83.0929, 174.225, -3.65008, 0.67", "83.8627, 176.304, -4.08983, 0.33", "84.9675, 179.229, -4.46611, 0.67", "85.7265, 181.216, -4.52562, 0.33", "86.1252, 182.289, -4.44731, 0.67", "86.5455, 183.799, -4.15329, 0.33", "86.7461, 185.016, -3.86994, 0.67", "87.0469, 187.358, -3.40612, 0.67", "87.2078, 189.564, -3.04933, 0.33", "87.2613, 190.266, -2.95975, 0.67", "87.3094, 191.84, -2.76223, 0.33", "87.2918, 193.017, -2.62508, 0.67", "87.2134, 195.614, -2.38715, 0.33", "87.1673, 196.571, -2.36011, 0.67", "87.1257, 199.176, -2.23308, 0.33" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-3.49938, -10.859, 1.30842, 0.67", "-2.38913, -13.1874, 1.06692, 0.67", "-0.512589, -18.5551, 0.230231, 1.33", "0.205054, -21.3588, -0.107391, 1.33", "0.711383, -24.2236, -0.387607, 1.33", "1.67416, -28.9969, -0.479159, 1.33", "2.04866, -31.327, -0.571821, 0.67", "2.45276, -34.9165, -0.771906, 1.33", "2.67154, -37.7588, -0.942654, 1.33", "2.81525, -39.3396, -0.961172, 0.67", "4.55671, -53.088, -0.319736, 0.67", "5.27431, -58.4545, 0.351397, 0.67", "5.38274, -59.4414, 0.502836, 0.67", "5.64561, -61.721, 0.92042, 0.67", "6.35267, -66.9306, 1.96218, 0.67", "6.62953, -68.8836, 2.4351, 0.67", "7.0007, -74.0956, 3.9608, 1.33", "7.3576, -78.4935, 5.20818, 0.67", "7.6123, -81.5941, 5.888, 0.67", "7.84908, -85.0723, 6.5248, 0.67", "8.17422, -89.7415, 7.11245, 0.67", "8.57465, -94.8143, 7.64474, 0.67", "9.24698, -99.9236, 7.92535, 0.67", "9.71802, -102.665, 7.99463, 0.67" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-3.49938, -10.859, 1.30842, 1.33", "-3.36556, -14.7587, -0.6228, 1.33", "-3.14537, -21.1759, -3.8007, 1.33", "-3.02667, -24.6349, -5.51365, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-10.2898, 9.89747, -16.3777, 1.33", "-14.1777, 7.28792, -16.0859, 1.33", "-18.0948, 4.20621, -15.6856, 1.33", "-20.2048, 2.54779, -15.4776, 0.67", "-23.3358, 0.37081, -15.1671, 0.67", "-26.9931, -1.83635, -14.6876, 0.67", "-32.2843, -5.02672, -13.7184, 0.67", "-33.7046, -5.89218, -13.5248, 0.67", "-37.2442, -8.00715, -13.4425, 0.67", "-40.5016, -9.67879, -13.7483, 0.67", "-45.2704, -11.7718, -14.702, 0.67", "-50.6588, -14.2225, -16.2264, 0.67", "-57.6015, -17.311, -18.5105, 0.67", "-60.923, -18.855, -19.7641, 0.67", "-64.8814, -20.8328, -21.467, 0.67", "-70.7919, -24.0027, -24.2816, 0.67", "-74.9718, -26.2827, -26.3947, 0.67", "-80.1142, -29.0516, -28.8051, 0.67", "-82.0629, -30.1334, -29.3983, 0.67", "-83.456, -30.9706, -29.7336, 0.33", "-83.8458, -31.2067, -29.8105, 0.67", "-85.5315, -32.1198, -30.01, 0.33", "-87.2779, -32.9218, -30.1033, 1.33", "-91.2603, -34.7758, -30.293, 0.33", "-92.8141, -35.3369, -30.4499, 0.33", "-94.0623, -35.7108, -30.6717, 1.33", "-97.6518, -36.6292, -31.8291, 0.33", "-98.8797, -36.8916, -32.3783, 0.67", "-102.493, -37.4721, -34.3597, 0.33", "-107.048, -37.9793, -37.3748, 0.67", "-109.144, -38.0679, -38.8472, 0.67", "-113.61, -38.0306, -42.3667, 0.33", "-114.386, -37.9641, -43.0356, 0.67", "-115.751, -37.7831, -44.2581, 0.33", "-116.794, -37.6231, -45.1646, 0.67", "-119.212, -37.309, -47.0157, 0.33", "-121.087, -37.1908, -48.131, 1.33", "-125.552, -37.153, -50.1967, 0.33", "-126.65, -37.2455, -50.6865, 1.33", "-129.869, -37.7807, -51.9825, 0.33", "-134.158, -38.8517, -53.4545, 0.33", "-136.105, -39.4966, -54.0089, 0.33", "-136.785, -39.7615, -54.1389, 1.33", "-139.861, -41.2932, -54.6012, 0.33", "-141.714, -42.2442, -54.8465, 0.67", "-143.32, -43.1364, -55.1846, 0.33", "-143.93, -43.4928, -55.3621, 0.67", "-145.738, -44.4013, -55.8828, 0.33", "-147.679, -45.2095, -56.3482, 1.33", "-152.496, -47.0112, -57.3485, 0.33", "-155.072, -47.8653, -57.7822, 0.67", "-156.472, -48.2963, -57.9708, 0.33", "-158.634, -48.9208, -58.201, 0.67", "-164.913, -50.6356, -58.9828, 0.33", "-166.276, -50.9848, -59.1103, 1.33", "-173.631, -52.8283, -59.6619, 0.33", "-174.153, -52.9529, -59.6843, 0.67", "-176.127, -53.4222, -59.8035, 0.33", "-179.891, -54.3337, -60.1766, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-10.2898, 9.89747, -16.3777, 0.67", "-12.4371, 13.9874, -17.114, 0.67", "-15.5929, 18.0755, -18.5144, 0.67", "-17.237, 20.0691, -19.4196, 0.67", "-18.4185, 21.5019, -20.0701, 1.33", "-19.8788, 23.2727, -20.8741, 0.67", "-21.2583, 24.9455, -21.6336, 1.33", "-24.3772, 27.715, -23.1256, 0.67", "-25.8861, 28.6505, -23.9176, 1.33" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-11.4206, 92.9645, -3.2382, 0.67", "-6.13371, 96.7599, -5.04128, 0.67", "-4.58926, 98.0078, -5.61791, 0.67", "0.473662, 102.216, -7.58603, 0.33", "1.89015, 103.347, -8.17607, 0.67", "4.87311, 105.811, -9.46045, 0.33", "7.38421, 107.954, -10.5903, 0.67", "10.0979, 110.511, -11.7774, 0.67", "11.2536, 111.802, -12.4003, 0.33", "13.0926, 114.043, -13.7937, 0.67", "14.5151, 116.228, -15.0838, 0.67", "15.5341, 118.303, -16.3155, 0.33", "16.1915, 119.919, -17.4265, 0.67", "16.8659, 121.57, -18.8298, 0.67", "18.1815, 125.249, -22.1098, 0.33", "19.2057, 128.471, -24.9462, 0.67", "20.1913, 131.457, -27.4707, 0.67", "21.1695, 134.492, -29.7118, 0.67", "22.1485, 137.597, -31.581, 0.67", "22.8427, 139.923, -32.7329, 0.67", "23.3632, 141.806, -33.4212, 0.33", "24.6415, 146.017, -34.6542, 0.67", "25.2904, 148.618, -35.0838, 0.33", "26.05, 152.35, -35.377, 0.67", "26.6275, 156.378, -35.6888, 0.33", "26.746, 157.365, -35.8316, 0.67", "26.8757, 158.577, -36.2125, 0.33", "26.9701, 160.514, -37.0788, 0.67", "27.0017, 161.928, -37.8354, 0.67", "26.9103, 166.407, -40.3735, 0.67", "26.8776, 168.33, -41.461, 1.33", "26.8792, 173.066, -44.3297, 0.33", "26.9095, 174.8, -45.4388, 0.67", "26.9943, 175.9, -46.1706, 0.67", "27.2179, 177.706, -47.3423, 0.33", "27.9768, 181.804, -49.6743, 0.67", "28.4753, 184.084, -50.7653, 0.33", "28.574, 184.496, -50.936, 0.67", "29.7499, 188.595, -52.7068, 0.33", "30.0606, 189.611, -53.1569, 0.67", "31.2528, 193.006, -54.6467, 0.33", "31.6642, 194.185, -55.0649, 1.33" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-11.4206, 92.9645, -3.2382, 0.67", "-10.5581, 96.6942, -4.24302, 0.67", "-8.9963, 101.84, -5.75898, 0.67", "-8.42847, 104.178, -6.38024, 0.67", "-8.0405, 106.526, -6.96556, 0.67", "-7.65047, 109.621, -7.64269, 0.67", "-7.48421, 111.429, -7.98957, 0.67", "-7.16317, 114.171, -8.26183, 0.67", "-6.82749, 117.413, -8.29885, 0.67", "-6.63824, 120.515, -8.43685, 0.67", "-6.56718, 124.006, -8.61702, 0.67", "-6.61091, 126.612, -8.72445, 0.67", "-6.68986, 133.098, -8.87114, 0.67", "-6.59168, 136.641, -8.83069, 0.67", "-6.24899, 140.168, -8.81738, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "0.99062, 13.974, 4.48842, 0.67", "1.9748, 16.096, 5.99161, 0.67", "2.67668, 18.55, 7.62539, 0.67", "3.65577, 23.5224, 10.1543, 0.67", "3.78785, 24.5661, 10.6382, 1.33", "3.98437, 26.7317, 11.594, 0.67", "4.07496, 28.8003, 12.4826, 0.67", "4.22503, 34.6017, 14.858, 0.67", "4.14585, 41.5024, 17.5253, 0.67", "4.04851, 43.3254, 18.1595, 0.67", "3.71251, 47.2313, 19.5958, 0.67", "3.50989, 49.4692, 20.3308, 0.67", "3.42541, 50.723, 20.7006, 0.67", "3.53466, 54.1496, 21.5004, 0.67", "3.94721, 59.0445, 22.4851, 0.67", "4.19888, 60.712, 22.7535, 0.67", "5.23327, 65.8283, 23.2922, 0.67", "5.5753, 67.3749, 23.4058, 0.67", "6.46514, 71.1037, 23.6887, 0.67", "6.8345, 72.6757, 23.7911, 0.67", "7.42135, 74.9112, 23.9322, 0.67", "8.47806, 78.9337, 24.3637, 0.67", "8.87962, 80.7154, 24.6785, 0.67", "9.72682, 84.8983, 25.5401, 0.67", "10.0848, 87.1267, 26.0791, 0.67", "10.4409, 89.3296, 26.6181, 0.67", "11.0403, 93.317, 27.647, 0.67", "11.2936, 95.0411, 28.1149, 0.67", "11.8377, 98.4631, 28.995, 0.67", "11.9501, 99.6178, 29.242, 0.67", "12.3088, 103.273, 30.1025, 0.67", "11.5579, 112.612, 31.7768, 0.67", "12.4668, 121.784, 34.2191, 0.67", "11.8943, 131.106, 36.0553, 0.67", "12.8877, 140.143, 38.9776, 0.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.99062, 13.974, 4.48842, 1.33", "-1.80114, 18.6288, 6.43911, 1.33", "-4.07889, 21.9617, 7.61885, 1.33", "-6.75697, 25.8988, 8.82208, 1.33", "-11.7564, 33.4051, 10.8815, 1.33", "-13.3179, 35.8733, 11.5047, 1.33", "-14.5268, 37.8985, 11.9885, 0.67", "-17.7661, 43.2603, 13.2961, 0.67", "-19.173, 45.7185, 13.851, 0.67", "-20.402, 47.84, 14.1437, 0.67", "-21.311, 49.469, 14.2148, 0.67", "-22.6264, 51.8619, 14.4088, 0.67", "-24.3893, 54.9667, 14.7424, 0.67", "-26.0741, 57.7411, 15.1337, 0.67", "-27.9123, 60.3455, 15.527, 0.67", "-29.4677, 62.306, 15.8267, 0.67", "-31.3542, 64.4004, 16.1526, 0.67", "-33.4961, 66.5667, 16.467, 0.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "8.33225, 40.9837, -1.9452, 0.33", "11.3712, 55.6726, -1.9452, 0.33", "14.4101, 70.3615, -1.9452, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "106.09, 37.7231, 8.7458, 1.33", "106.911, 38.4427, 11.9774, 1.33", "107.27, 38.7578, 13.3923, 0.67", "108.863, 40.1548, 19.6661, 0.67", "110.034, 41.4503, 29.5032, 0.67", "113.225, 41.1534, 38.9755, 0.67", "115.897, 41.7368, 48.5922, 0.67" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "106.09, 37.7231, 8.7458, 0.33", "108.026, 38.3128, 8.7458, 0.33", "109.201, 38.5396, 8.74062, 0.67", "111.421, 38.7901, 8.72743, 0.33", "114.085, 38.7409, 8.71053, 0.33", "115.74, 38.5396, 8.7, 0.67", "117.726, 38.1713, 8.68761, 0.33", "120.447, 37.3662, 8.66971, 0.67", "122.309, 36.6065, 8.65749, 0.67", "125.421, 34.9971, 8.63809, 0.67", "127.018, 34.0457, 8.65831, 0.33", "127.896, 33.4962, 8.68541, 0.67", "129.08, 32.7623, 8.74169, 0.33", "130.262, 32.1021, 8.81474, 0.67", "132.162, 31.2443, 8.94224, 0.33", "133.442, 30.8719, 9.11136, 0.67", "136.334, 30.1376, 9.52118, 0.33", "137.654, 29.8347, 9.72065, 0.67", "139.621, 29.4482, 10.0379, 0.33", "142.221, 28.9964, 10.4882, 0.67", "148.038, 28.168, 11.5602, 0.67", "157.569, 25.7162, 13.1428, 0.67", "167.197, 23.2542, 13.908, 0.67", "176.953, 21.2442, 13.3126, 0.67" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "9.71802, -102.665, 7.99463, 0.67", "10.4387, -103.899, 7.37162, 0.67", "11.3935, -105.825, 6.64873, 0.67", "12.476, -108.263, 5.9595, 0.67", "14.0513, -111.801, 4.97067, 0.67", "15.9512, -116.075, 3.81287, 0.67", "16.8721, -118.26, 3.26378, 0.67", "18.6971, -122.976, 2.3145, 0.67", "19.358, -125.04, 2.02346, 0.67", "20.1288, -127.569, 1.67667, 0.33", "20.5566, -128.911, 1.52532, 0.67", "21.0485, -130.506, 1.309, 0.67", "22.8539, -136.275, 0.371764, 0.67", "24.2104, -141.156, -0.410722, 0.67", "25.331, -145.119, -0.978825, 0.33", "25.7966, -146.91, -1.15773, 1.33", "26.0819, -148.013, -1.25005, 0.33", "26.6024, -149.789, -1.3328, 0.33", "27.3832, -152.665, -1.4668, 0.67", "28.1525, -155.502, -1.55597, 0.67", "28.8341, -158.274, -1.57525, 0.67", "29.8082, -161.867, -1.7044, 0.67", "30.5563, -164.615, -1.88904, 0.67", "31.8921, -169.005, -2.3179, 0.67", "32.3512, -170.268, -2.49872, 0.33", "32.858, -171.461, -2.72207, 0.33", "33.6513, -172.856, -3.04001, 0.67", "36.8318, -177.563, -4.23898, 0.67", "38.0918, -179.144, -4.69242, 0.67", "40.2833, -181.49, -5.29263, 0.67", "42.0531, -183.211, -5.73645, 0.67", "43.6465, -184.804, -6.16313, 0.67", "44.5456, -185.761, -6.41674, 0.33", "47.0316, -188.352, -7.05229, 0.67", "48.5142, -190.112, -7.45501, 0.67", "49.9687, -192.089, -7.8406, 0.33", "52.596, -195.803, -8.2226, 0.67", "53.9207, -197.734, -8.31473, 0.33", "54.6427, -198.674, -8.26698, 0.67", "56.5258, -200.814, -7.92902, 0.33", "57.7072, -201.887, -7.58843, 1.33", "60.2834, -203.905, -6.81629, 0.33", "61.9984, -204.968, -6.23691, 0.33", "65.1006, -206.728, -5.18969, 0.33", "67.0542, -207.819, -4.51038, 0.67", "70.1179, -209.462, -3.26145, 0.33", "72.2678, -210.538, -2.43344, 0.67", "75.3447, -211.938, -1.51064, 0.33" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "9.71802, -102.665, 7.99463, 0.67", "9.0569, -105.438, 8.11813, 0.67", "8.58778, -107.828, 8.53806, 0.67", "7.9415, -112.75, 9.70046, 0.67", "7.66956, -115.941, 10.2871, 0.67", "7.42667, -118.408, 10.5097, 0.67", "7.33032, -120.386, 10.5875, 0.67", "7.41997, -123.655, 10.5811, 0.67", "7.80679, -126.64, 10.4687, 0.67", "8.3254, -129.594, 10.4232, 0.67", "8.68717, -133.128, 10.2483, 0.67", "8.88202, -136.397, 10.1311, 0.67", "8.89706, -139.253, 10.0806, 0.67", "8.78716, -141.723, 10.0858, 0.67", "8.5121, -145.72, 10.3128, 0.67", "8.26933, -149.386, 10.6791, 0.67", "7.95527, -154.15, 11.2214, 0.67", "7.68341, -157.111, 11.5141, 0.33", "7.54163, -160.627, 11.9339, 0.67", "7.54623, -161.33, 12.0345, 0.33", "7.72462, -163.196, 12.3624, 0.67", "7.96009, -164.77, 12.6904, 0.33", "8.54283, -168.146, 13.5366, 0.67", "9.12213, -171.228, 14.4117, 0.67", "9.98321, -177.015, 16.2617, 0.67", "10.2652, -179.344, 17.0485, 0.33", "10.5599, -182.499, 18.2311, 0.67" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.02667, -24.6349, -5.51365, 0.67", "-6.18975, -25.6576, -4.11258, 0.67", "-9.25181, -26.6439, -3.0813, 0.67", "-10.8888, -27.2038, -2.62793, 0.67", "-15.4616, -28.8093, -1.56918, 0.67", "-22.447, -31.0319, -0.350945, 0.67", "-25.0862, -31.8937, 0.0689895, 0.67", "-27.6688, -32.7346, 0.403983, 0.67", "-29.6704, -33.3852, 0.638214, 0.67", "-32.079, -34.1046, 0.848375, 0.67", "-36.6238, -35.3694, 1.05386, 0.67", "-39.667, -36.1129, 1.47748, 0.67", "-42.6613, -36.7404, 1.94788, 0.67", "-44.4476, -37.103, 2.31475, 0.33", "-46.0438, -37.3849, 2.67711, 0.33", "-47.9731, -37.7304, 3.17479, 0.33", "-51.9563, -38.5575, 4.32812, 0.67", "-54.9642, -38.9269, 4.85818, 0.33", "-64.7571, -40.8086, 5.27679, 0.33", "-74.4167, -43.2619, 5.1259, 0.33" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-3.02667, -24.6349, -5.51365, 1.33", "-3.25518, -28.3342, -4.73772, 1.33", "-3.28244, -31.3173, -4.41947, 1.33", "-3.26152, -36.0199, -4.15582, 1.33", "-3.24274, -40.2409, -3.91917, 1.33", "-3.22002, -45.3463, -3.63294, 1.33", "-3.20033, -49.7725, -3.38479, 1.33", "-3.35343, -56.1757, -3.35077, 1.33", "-3.35353, -59.3694, -3.45794, 1.33" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-25.8861, 28.6505, -23.9176, 0.67", "-27.2908, 28.4945, -25.6245, 0.67", "-29.6657, 28.1852, -28.7311, 0.67", "-30.7026, 28.0657, -30.0681, 0.67", "-32.8758, 27.8544, -32.7114, 0.67", "-34.345, 27.7304, -34.5355, 0.67", "-37.8705, 27.4327, -38.9127, 0.67", "-40.108, 27.2905, -41.696, 0.33", "-40.8052, 27.2744, -42.4889, 0.67", "-41.8603, 27.2603, -43.7816, 0.33", "-43.7425, 27.2637, -46.1412, 0.67" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-25.8861, 28.6505, -23.9176, 0.67", "-27.0978, 30.2474, -24.1485, 0.67", "-28.6779, 32.2912, -24.452, 0.67", "-30.0857, 34.1111, -24.7944, 0.67", "-31.6364, 36.2198, -25.3286, 0.67", "-33.7724, 39.1245, -26.0644, 0.67", "-35.6425, 41.6676, -26.7087, 0.67", "-37.1826, 43.7434, -27.3361, 0.67", "-38.5103, 45.6802, -27.9985, 0.67", "-40.0858, 48.0998, -28.9364, 2.0" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "31.6642, 194.185, -55.0649, 0.33", "30.6892, 195.02, -56.0163, 0.33", "30.4074, 195.261, -56.2914, 0.67" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "31.6642, 194.185, -55.0649, 0.33", "32.7608, 195.029, -57.7931, 0.33", "33.3249, 195.462, -59.1965, 0.67" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-6.24899, 140.168, -8.81738, 0.67", "-7.06428, 144.021, -11.8658, 0.67", "-8.77149, 148.934, -15.8726, 0.67", "-9.4483, 150.881, -17.4611, 0.67", "-10.978, 155.283, -21.0513, 0.67", "-11.5447, 156.914, -22.3813, 0.33", "-12.4892, 159.632, -24.5981, 0.33", "-13.3639, 161.41, -26.4206, 0.33" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-6.24899, 140.168, -8.81738, 0.67", "-7.11024, 141.661, -10.9327, 0.67", "-7.62555, 142.554, -12.1984, 0.67", "-9.12508, 145.153, -15.8815, 1.33" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "12.8877, 140.143, 38.9776, 0.67", "12.6689, 149.461, 40.9131, 0.67", "11.0373, 158.254, 44.3292, 0.67" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "12.8877, 140.143, 38.9776, 0.67", "14.8165, 149.008, 42.0102, 0.67", "17.6415, 157.358, 45.8519, 0.67" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-33.4961, 66.5667, 16.467, 0.67", "-35.3605, 72.3161, 16.0803, 0.67", "-36.2246, 74.6407, 16.115, 0.67", "-37.5977, 78.2634, 16.2813, 0.67", "-39.0021, 81.8852, 16.4999, 0.67", "-40.2653, 85.2172, 16.6389, 0.67", "-42.2409, 90.5394, 16.7932, 0.67", "-44.3962, 96.0262, 17.0135, 0.67", "-45.0864, 97.8326, 17.0667, 0.67", "-45.9314, 99.9729, 17.1065, 0.67", "-47.6468, 104.922, 16.9932, 0.67", "-48.8684, 108.863, 16.7433, 0.67", "-49.5648, 111.918, 16.4215, 0.67", "-50.1889, 115.005, 16.0615, 0.67", "-50.5367, 116.995, 15.8336, 0.67", "-51.191, 121.725, 15.334, 0.67", "-51.336, 123.557, 15.1481, 0.67", "-51.3072, 127.665, 14.6616, 0.67", "-50.9512, 131.354, 14.2184, 0.67", "-50.6572, 133.975, 14.069, 0.67", "-50.4914, 135.58, 14.0964, 0.67", "-50.2344, 138.604, 14.5655, 0.67", "-50.0782, 140.837, 15.0601, 0.67", "-49.9316, 143.963, 15.9354, 0.67", "-49.8683, 148.186, 17.2171, 0.67", "-49.9017, 150.568, 17.9164, 0.67", "-49.8991, 154.375, 18.8043, 0.67", "-49.9953, 156.86, 19.2175, 0.67", "-50.091, 158.786, 19.2972, 0.67", "-50.1392, 160.808, 19.1274, 0.67", "-50.0875, 164.904, 18.4804, 0.67", "-49.9748, 168.837, 17.6871, 0.67", "-49.9291, 173.52, 16.4339, 0.67", "-49.8694, 177.216, 15.3587, 0.67", "-49.8567, 179.951, 14.527, 0.67", "-52.2198, 189.02, 12.7124, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-33.4961, 66.5667, 16.467, 0.67", "-34.1265, 69.3055, 16.036, 0.67", "-34.8421, 72.2096, 15.7981, 0.67", "-35.5088, 74.1368, 15.8497, 0.67", "-37.0886, 78.0467, 16.3708, 1.33", "-38.0638, 80.3147, 16.8479, 0.67", "-39.0165, 82.2952, 17.4117, 1.33", "-41.5493, 87.1158, 19.3155, 0.67", "-43.5614, 90.6126, 21.288, 0.67", "-44.6917, 92.2698, 22.5925, 0.67", "-46.0687, 93.9295, 24.3332, 0.67", "-47.4413, 95.4743, 26.2254, 0.67", "-48.58, 96.6829, 27.9127, 0.67", "-50.257, 98.3512, 30.4991, 0.67", "-51.5288, 99.9442, 32.683, 0.67", "-52.0203, 100.536, 33.4531, 0.67", "-57.7444, 108.0, 35.7967, 0.67", "-62.2704, 115.582, 39.7742, 0.67", "-66.7331, 123.392, 43.3091, 0.67", "-73.4435, 129.978, 45.9387, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "10.5599, -182.499, 18.2311, 0.67", "12.7768, -181.764, 19.6713, 0.67", "14.2143, -181.288, 20.6052, 0.67", "22.5905, -180.152, 25.9352, 0.67", "30.113, -180.281, 32.5227, 0.67", "37.7034, -180.86, 39.0045, 0.67", "45.0299, -179.518, 45.6624, 0.67", "51.9749, -177.038, 52.367, 0.67", "59.1829, -174.56, 58.789, 0.67", "66.7661, -173.247, 65.1597, 0.67", "74.4269, -170.909, 71.0971, 0.67", "83.0212, -169.594, 76.0187, 0.67", "91.2858, -170.044, 81.6285, 0.67", "99.9412, -172.151, 86.119, 0.67", "109.307, -174.682, 88.3928, 0.67", "118.274, -178.743, 89.5441, 0.67", "127.76, -180.727, 91.9216, 0.67" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "10.5599, -182.499, 18.2311, 0.33", "10.3373, -185.119, 17.2407, 0.33", "10.1052, -187.83, 16.2788, 0.67", "9.88025, -189.947, 15.6081, 0.33", "9.14169, -194.658, 14.2675, 0.67", "8.93113, -195.926, 13.9473, 0.67", "8.57654, -197.876, 13.5082, 0.67", "8.27047, -199.171, 13.286, 0.33", "7.53556, -201.677, 12.9537, 0.67", "6.81454, -203.804, 12.8717, 0.33", "6.20374, -205.561, 12.9672, 0.67", "5.61868, -207.169, 13.0689, 0.33", "5.38088, -207.845, 13.12, 0.67", "4.73813, -209.42, 13.2651, 0.33", "4.23099, -210.742, 13.4366, 0.67", "2.39664, -220.071, 12.9822, 0.67", "0.950082, -229.452, 12.3482, 0.67" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-74.4167, -43.2619, 5.1259, 0.67", "-83.9972, -45.7353, 6.32418, 0.67", "-92.8099, -49.3154, 9.17629, 0.67", "-101.09, -53.8115, 12.1852, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-74.4167, -43.2619, 5.1259, 0.67", "-83.8994, -45.7752, 6.88074, 0.67", "-93.7554, -47.1787, 7.70372, 0.67", "-103.636, -48.6447, 7.74026, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-3.35353, -59.3694, -3.45794, 0.67", "-2.39107, -67.5907, -1.57332, 0.67", "-1.78354, -72.1072, -1.05904, 0.67", "-1.5735, -73.9961, -0.978069, 0.67", "-1.17937, -76.6886, -0.982816, 0.67", "-0.124308, -82.6337, -1.13685, 0.67", "0.693096, -86.1573, -1.24283, 0.67", "2.64787, -91.1341, -1.69078, 0.67", "3.74754, -93.2886, -1.90133, 0.67", "5.41786, -96.695, -2.58202, 0.67", "6.06504, -98.0989, -3.00847, 0.67", "7.08684, -100.475, -3.83048, 0.67", "8.03875, -103.097, -4.60276, 0.67", "9.96879, -108.497, -5.8292, 0.67", "11.4762, -112.907, -6.90624, 0.67", "12.3822, -116.285, -7.78881, 0.67", "12.9594, -119.071, -8.53571, 0.67", "13.1181, -120.437, -8.90262, 0.67", "13.1865, -122.674, -9.40204, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-3.35353, -59.3694, -3.45794, 0.67", "-5.36386, -62.9902, -4.69293, 0.67", "-8.24364, -68.9401, -6.66246, 0.67", "-12.1073, -76.8394, -9.16389, 0.67", "-13.9411, -80.4602, -10.2672, 0.67", "-14.3616, -81.2974, -10.5052, 0.67", "-15.7804, -84.2847, -11.2929, 0.67", "-17.0487, -87.6817, -12.0896, 0.67", "-18.2234, -91.1748, -12.5899, 0.67", "-18.7277, -92.6859, -12.5862, 0.67", "-19.7419, -95.6948, -12.4785, 0.67", "-20.5615, -98.1218, -12.3376, 0.67", "-22.6599, -104.161, -11.8391, 0.67", "-24.0823, -108.032, -11.3989, 0.67", "-25.5358, -111.422, -10.9189, 0.67", "-25.9771, -112.26, -10.7872, 0.67", "-27.8153, -115.108, -10.3946, 0.67", "-28.5395, -116.217, -10.2431, 0.67", "-30.8366, -120.026, -9.80778, 0.67", "-34.0106, -125.489, -9.35931, 0.67", "-35.8382, -128.645, -9.10624, 0.67", "-37.4356, -131.375, -8.86785, 0.67", "-40.2846, -136.194, -8.43102, 0.67", "-43.6468, -142.314, -7.89378, 0.67", "-45.3518, -145.968, -7.60133, 0.67", "-45.9711, -147.438, -7.50394, 0.67", "-47.063, -149.857, -7.2818, 0.67", "-47.8525, -151.379, -7.07406, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-40.0858, 48.0998, -28.9364, 0.33", "-42.2889, 51.0386, -29.1153, 0.33", "-43.6513, 52.8435, -29.5887, 0.67", "-44.4896, 53.9778, -29.9578, 0.67", "-45.4161, 55.2544, -30.3854, 0.33", "-46.2106, 56.4084, -30.7326, 0.67", "-47.7274, 58.5803, -31.4265, 0.33", "-49.4531, 61.1891, -32.3713, 0.67", "-50.9664, 63.3987, -33.1239, 0.33", "-51.5776, 64.3281, -33.4597, 0.67", "-52.6626, 66.025, -34.104, 0.33", "-54.2139, 68.5782, -35.0717, 0.33", "-55.0137, 69.9329, -35.5591, 0.33", "-55.6945, 71.0753, -35.8633, 1.33", "-57.1784, 73.5277, -36.7351, 0.33" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-40.0858, 48.0998, -28.9364, 0.33", "-39.8003, 52.6685, -27.376, 0.33", "-39.7485, 53.779, -27.0769, 0.33", "-39.5329, 57.1581, -26.4227, 0.67", "-39.214, 61.5464, -25.7496, 0.33", "-39.1245, 62.5361, -25.6235, 0.67", "-38.802, 65.5618, -25.3206, 0.33", "-38.6098, 67.7864, -25.3189, 0.67", "-38.2641, 71.3195, -25.5274, 0.33", "-38.1793, 72.2681, -25.6538, 0.67", "-38.143, 73.6599, -25.8879, 0.33", "-38.1597, 74.8295, -26.074, 0.67", "-38.4451, 79.5608, -26.7266, 0.33", "-38.6494, 81.4921, -26.9693, 0.33", "-38.9189, 83.3092, -27.1666, 0.67", "-40.0257, 88.9801, -27.5476, 0.67", "-40.5428, 91.1067, -27.7202, 0.33", "-40.973, 92.7699, -27.8125, 0.67", "-41.6409, 95.2897, -27.8964, 0.33", "-41.8171, 95.9728, -27.9273, 0.67", "-42.5118, 99.0114, -28.0309, 0.33", "-43.2141, 102.608, -28.0405, 0.67", "-43.5923, 106.452, -27.917, 0.67", "-43.6602, 108.437, -27.7317, 0.33", "-43.5873, 110.22, -27.5068, 0.33", "-43.2068, 113.879, -26.9956, 0.67", "-42.8383, 116.432, -26.5528, 0.33", "-42.3715, 119.285, -25.9, 0.67", "-41.7555, 123.045, -25.2827, 0.67", "-41.3099, 125.755, -24.9421, 0.33", "-40.9766, 127.729, -24.7808, 0.67", "-40.7456, 129.914, -24.8093, 0.33", "-40.6762, 131.615, -24.96, 0.33", "-40.7184, 135.609, -25.537, 0.33", "-40.7282, 136.535, -25.7384, 0.67", "-40.8772, 138.091, -26.0234, 0.33", "-41.3195, 141.268, -26.5358, 0.67", "-41.8371, 144.047, -26.9428, 0.33", "-42.4936, 146.834, -27.2138, 0.33", "-42.8862, 148.311, -27.2617, 0.67", "-44.3615, 153.354, -27.365, 0.33", "-44.4996, 153.787, -27.3674, 0.67", "-45.0361, 155.51, -27.3368, 0.33", "-45.4862, 157.067, -27.3778, 0.67", "-46.0618, 159.304, -27.4813, 0.33", "-46.3312, 160.689, -27.5605, 0.33", "-46.3695, 161.009, -27.5911, 0.67", "-46.5993, 163.287, -27.8847, 0.33", "-46.9592, 166.997, -28.5896, 0.67", "-47.1555, 168.954, -28.9848, 0.33", "-47.2679, 170.225, -29.2822, 0.67", "-47.5842, 173.135, -30.0062, 0.33", "-47.7707, 174.496, -30.3558, 0.67", "-48.1465, 177.09, -31.0234, 0.33", "-48.516, 179.129, -31.4999, 0.67", "-49.0026, 181.484, -31.9932, 0.33", "-49.3188, 183.148, -32.3008, 0.33", "-49.4447, 183.832, -32.3997, 0.67", "-49.8625, 186.101, -32.5971, 0.33", "-50.0844, 187.423, -32.6028, 0.33", "-50.2552, 188.041, -32.5627, 0.67", "-51.2643, 190.758, -32.1589, 0.33", "-51.6953, 191.808, -31.9847, 0.33", "-52.1332, 192.702, -31.7965, 0.67", "-54.4029, 196.805, -30.7928, 0.33", "-56.4686, 200.413, -29.8821, 0.33", "-57.9006, 202.922, -29.2477, 0.67", "-59.574, 205.789, -28.7902, 0.33", "-60.6585, 207.617, -28.6791, 0.33", "-60.9862, 208.165, -28.6741, 0.67", "-62.2406, 210.293, -28.9047, 0.33", "-63.1916, 212.3, -29.3554, 0.33", "-65.5394, 217.416, -31.0321, 0.33", "-66.1876, 218.78, -31.6727, 0.67" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-9.12508, 145.153, -15.8815, 0.67", "-7.8048, 148.415, -14.8481, 0.67", "-6.67127, 151.216, -13.9609, 0.67", "-5.10954, 155.074, -12.7385, 0.67", "-3.95191, 157.935, -11.8324, 0.67" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-9.12508, 145.153, -15.8815, 0.67", "-11.1613, 149.159, -18.6962, 0.67", "-11.7625, 150.206, -19.498, 0.67", "-13.0277, 152.213, -21.1046, 0.67", "-14.295, 153.98, -22.6167, 0.67", "-16.7483, 157.433, -25.4997, 0.67", "-18.1174, 159.367, -26.9631, 0.67", "-18.6651, 160.08, -27.4424, 0.33", "-19.003, 160.576, -27.7015, 0.67", "-20.2265, 162.641, -28.5601, 0.67", "-21.4602, 164.779, -29.3333, 0.67", "-23.4299, 168.022, -30.5244, 0.67", "-25.568, 171.611, -31.819, 0.67", "-26.3605, 172.96, -32.34, 0.67", "-28.5852, 176.666, -33.8373, 0.67", "-29.6772, 178.404, -34.5757, 0.67", "-31.6567, 181.158, -35.9885, 0.67", "-32.5432, 182.313, -36.6983, 0.33", "-32.995, 182.825, -37.0353, 0.67", "-34.0968, 183.848, -37.661, 0.33", "-34.3447, 184.045, -37.7386, 0.67", "-35.7645, 185.15, -37.7964, 0.33", "-36.5551, 185.807, -37.5976, 0.67", "-38.3186, 187.215, -36.8547, 0.33", "-39.5936, 188.275, -36.282, 0.33", "-40.691, 189.268, -35.7653, 0.67", "-42.9471, 191.352, -34.7504, 0.33", "-44.1202, 192.454, -34.2299, 0.33", "-45.6996, 194.109, -33.5388, 0.33", "-47.2691, 196.124, -32.9035, 0.67", "-48.186, 197.415, -32.5918, 0.33", "-49.3532, 198.978, -32.4106, 0.67", "-49.9053, 199.712, -32.3334, 0.67", "-51.3411, 201.64, -31.9691, 0.67", "-52.0551, 202.725, -31.7006, 0.33", "-52.9495, 203.996, -31.1588, 0.33", "-53.7773, 205.104, -30.7946, 0.67", "-56.1708, 208.184, -30.3397, 0.67", "-57.0169, 209.212, -30.2357, 0.67", "-57.9341, 210.211, -30.24, 0.33", "-60.0461, 212.434, -30.3711, 0.33", "-63.938, 216.698, -31.1146, 0.67", "-65.5983, 218.281, -31.9479, 0.67" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-73.4435, 129.978, 45.9387, 0.67", "-78.8008, 137.383, 49.1867, 0.67", "-84.6047, 144.18, 53.0756, 0.67", "-88.4937, 151.357, 58.3472, 0.67", "-90.4938, 159.199, 63.6263, 0.67", "-93.1918, 166.572, 69.3252, 0.67", "-95.4258, 173.416, 75.8917, 0.67", "-98.6069, 180.73, 81.4232, 0.67", "-103.106, 186.685, 87.7856, 0.67", "-106.627, 192.105, 95.2051, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-73.4435, 129.978, 45.9387, 0.67", "-77.2993, 137.883, 49.9263, 0.67", "-82.592, 143.972, 55.4856, 0.67", "-86.4974, 148.962, 63.0456, 0.67", "-91.9143, 155.164, 68.3404, 0.67", "-96.1361, 162.566, 72.9737, 0.67", "-99.9526, 169.947, 77.9814, 0.67", "-103.532, 177.568, 82.7594, 0.67", "-108.112, 184.415, 87.9633, 0.67", "-110.635, 191.296, 94.3795, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-101.09, -53.8115, 12.1852, 0.67", "-106.38, -54.0871, 20.6664, 0.67", "-110.713, -55.0723, 29.619, 0.67", "-116.221, -56.8358, 37.756, 0.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-101.09, -53.8115, 12.1852, 0.67", "-109.902, -58.1777, 11.0851, 0.67", "-118.347, -63.0793, 9.64506, 0.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-103.636, -48.6447, 7.74026, 0.67", "-113.354, -50.5121, 9.04328, 0.67", "-123.126, -51.7598, 10.7081, 0.67" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-103.636, -48.6447, 7.74026, 0.67", "-113.453, -50.3869, 8.2447, 0.67", "-123.333, -51.3322, 9.42687, 0.67" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "13.1865, -122.674, -9.40204, 0.67", "15.2021, -125.978, -10.0478, 0.67", "16.2418, -127.485, -10.4446, 0.67", "17.8983, -130.001, -11.1423, 0.33", "18.7714, -131.283, -11.5943, 0.67", "19.865, -132.785, -12.1785, 0.33", "21.2076, -134.481, -12.9441, 0.67", "22.3467, -135.926, -13.7911, 0.33", "23.1668, -136.832, -14.349, 0.67", "25.2899, -138.692, -15.2649, 0.33", "26.0237, -139.294, -15.4866, 0.67", "27.3856, -140.548, -15.663, 0.33", "28.0311, -141.277, -15.577, 0.67", "29.427, -142.835, -14.9954, 0.33", "31.3803, -145.086, -13.8727, 0.67", "32.7557, -146.587, -13.0676, 0.33", "34.7329, -148.643, -12.2741, 0.67", "36.8175, -150.841, -11.3826, 0.33", "38.8485, -152.956, -10.576, 0.67", "40.2905, -154.354, -10.1175, 0.33", "43.4595, -157.249, -9.61759, 0.33", "47.7117, -160.492, -9.45117, 0.33" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "13.1865, -122.674, -9.40204, 0.67", "12.9938, -125.992, -9.73175, 0.67", "12.9272, -129.91, -10.0624, 0.67", "12.9342, -132.514, -10.2544, 0.33", "12.9728, -133.455, -10.3527, 0.67", "13.2093, -137.268, -10.3749, 0.33", "13.3536, -138.849, -10.2809, 0.67", "13.7349, -140.499, -10.0169, 0.33", "13.9636, -141.061, -9.81056, 0.67", "15.1967, -143.379, -8.54203, 0.33", "17.9906, -147.854, -5.81311, 0.33", "18.5352, -148.576, -5.32123, 0.67", "20.1773, -150.721, -3.84201, 0.33", "21.6442, -152.549, -2.51204, 0.67", "22.9892, -154.155, -1.31606, 0.33", "24.329, -155.698, -0.157555, 0.67", "25.2453, -156.753, 0.236076, 0.33", "25.5085, -157.107, 0.371433, 0.67", "26.5071, -159.111, 1.11828, 0.33", "29.9203, -167.564, 4.1465, 0.33", "35.2314, -175.235, 6.7143, 0.33", "41.1508, -182.364, 9.65457, 0.33", "47.2655, -188.717, 13.8838, 0.33", "53.7731, -194.368, 18.6029, 0.33", "61.386, -199.715, 21.8231, 0.33", "68.6345, -205.068, 25.7856, 0.33", "75.8873, -210.288, 29.9337, 0.33", "83.3719, -215.649, 33.4175, 0.33" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-47.8525, -151.379, -7.07406, 0.67", "-49.2012, -154.276, -8.35457, 0.67", "-49.7652, -155.487, -8.89009, 0.67", "-52.288, -160.904, -11.2853, 0.67", "-53.8655, -164.292, -12.7831, 0.67", "-54.4938, -165.641, -13.3796, 0.67", "-55.6435, -168.11, -14.4712, 0.67" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-47.8525, -151.379, -7.07406, 0.67", "-47.6398, -153.482, -6.89541, 0.67", "-47.3531, -155.354, -6.70625, 0.67", "-46.9436, -158.906, -6.16921, 0.67", "-46.4469, -164.261, -5.07094, 0.67", "-46.2322, -168.195, -4.07521, 0.67", "-46.1314, -170.041, -3.60791, 0.67", "-46.0422, -172.744, -2.82837, 0.67", "-45.9869, -175.925, -1.75409, 0.67", "-46.0623, -177.667, -1.00532, 0.67", "-46.0382, -179.721, 0.195553, 0.67" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-57.1784, 73.5277, -36.7351, 0.67", "-56.0329, 72.9113, -38.1158, 0.67", "-51.5402, 70.6063, -42.6733, 0.67", "-48.708, 69.0932, -45.3119, 0.67", "-46.7667, 67.8968, -47.2251, 0.33", "-45.0325, 66.792, -48.8677, 0.67", "-43.2279, 65.6974, -50.5103, 0.33", "-41.7153, 64.7652, -51.8323, 0.33", "-38.6806, 62.9124, -54.1587, 0.67", "-35.3471, 60.9009, -56.7175, 0.33", "-33.7177, 60.025, -58.2001, 0.67", "-31.6117, 58.9784, -60.4978, 0.33", "-29.534, 57.9412, -62.8963, 0.33", "-28.6422, 57.5422, -63.9756, 0.67", "-26.4573, 56.7566, -66.624, 0.67", "-21.7945, 55.4438, -72.4038, 0.33", "-19.4792, 54.773, -75.7718, 0.67" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-57.1784, 73.5277, -36.7351, 0.67", "-58.789, 75.5684, -36.8339, 0.67", "-59.9811, 77.0974, -36.8018, 0.67", "-60.8072, 78.1585, -36.8064, 0.67", "-62.0955, 79.9394, -36.837, 0.67", "-63.2357, 81.6455, -36.874, 0.33", "-63.6198, 82.2532, -36.8882, 0.67", "-65.2867, 85.067, -36.9245, 0.33", "-65.9231, 86.2303, -36.9808, 1.33", "-67.45, 88.9843, -37.1178, 0.33", "-68.756, 91.5201, -37.3546, 0.33", "-69.0385, 92.0878, -37.4144, 0.67", "-69.6561, 93.3716, -37.5661, 0.33", "-70.6171, 95.4112, -37.8614, 0.67", "-72.3071, 98.9027, -38.2705, 0.33", "-73.5606, 101.138, -38.6322, 1.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-3.95191, 157.935, -11.8324, 0.67", "-4.26701, 162.856, -13.3219, 0.67", "-4.65788, 168.229, -15.0979, 0.67", "-5.26177, 175.768, -17.6538, 0.67", "-5.55171, 179.8, -18.9794, 0.67", "-5.74784, 182.588, -19.8615, 0.67", "-6.00298, 185.697, -20.7664, 0.67", "-6.3962, 189.5, -21.7189, 0.33", "-6.42986, 190.21, -21.8819, 0.67", "-6.60132, 192.556, -22.1695, 0.33", "-6.71788, 194.249, -22.2042, 0.67", "-6.62296, 196.788, -22.0859, 0.33", "-6.47035, 197.764, -21.9546, 0.67", "-5.76421, 199.899, -21.4916, 0.33", "-5.16947, 201.175, -21.2227, 0.67", "-4.12223, 202.945, -20.7457, 0.33", "-2.28555, 205.571, -19.9613, 0.33", "-0.914368, 207.38, -19.4382, 0.67", "0.791747, 209.663, -18.9239, 0.33", "0.791747, 209.663, -18.9239, 0.67", "3.35723, 213.714, -18.4045, 0.33", "4.77287, 216.193, -18.1908, 0.33", "6.16564, 219.014, -18.1738, 0.67", "7.80724, 222.957, -18.4487, 0.33", "8.73002, 225.408, -18.7007, 0.33", "9.72157, 228.094, -19.1068, 0.33", "10.1817, 229.398, -19.4449, 0.67", "11.4489, 233.512, -20.6664, 0.33", "11.6601, 234.328, -20.944, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-3.95191, 157.935, -11.8324, 0.67", "-7.00427, 162.902, -10.8291, 0.67", "-10.3193, 168.296, -9.73939, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-55.6435, -168.11, -14.4712, 0.33", "-59.9526, -171.759, -12.4403, 0.33", "-61.5386, -173.452, -11.9875, 0.67", "-62.6196, -174.811, -11.852, 0.33", "-63.3714, -175.902, -11.818, 0.67", "-64.8127, -178.048, -11.6175, 0.67", "-66.3048, -180.524, -11.3154, 0.67", "-67.6183, -183.141, -11.1424, 0.67", "-68.5538, -185.523, -10.8293, 0.67", "-69.1796, -187.3, -10.4993, 0.67", "-70.3155, -190.278, -9.77847, 0.33", "-71.1567, -192.325, -9.11649, 0.67", "-72.2137, -194.553, -8.16296, 0.33", "-72.8116, -195.606, -7.61615, 0.67", "-73.8496, -197.488, -6.74406, 0.67", "-74.7564, -199.081, -6.13494, 0.67", "-75.592, -200.487, -5.71197, 0.67", "-76.6941, -202.336, -5.19399, 0.67", "-78.1306, -204.75, -4.49569, 0.67", "-80.0917, -208.28, -3.43422, 0.67", "-80.85, -209.627, -3.00864, 0.67", "-81.9828, -211.623, -2.42291, 0.67", "-83.1685, -213.384, -2.0273, 0.67", "-85.0583, -216.039, -1.57385, 0.67", "-86.8046, -218.347, -1.27959, 0.67", "-88.5107, -220.624, -1.12304, 0.67", "-90.8207, -223.977, -1.00215, 0.67", "-94.4292, -229.302, -0.984671, 0.67", "-96.2358, -231.982, -1.0478, 0.67", "-97.89, -234.535, -1.19349, 0.33", "-100.4, -238.548, -1.43922, 0.67", "-101.672, -240.699, -1.5787, 0.33", "-103.066, -243.21, -1.70496, 0.33", "-103.457, -244.078, -1.66644, 0.67", "-104.279, -246.165, -1.47268, 0.33", "-105.011, -248.281, -1.18449, 0.33", "-105.889, -250.648, -0.696513, 0.33", "-106.482, -252.554, -0.308362, 0.33", "-107.142, -256.627, 0.666714, 0.33", "-107.368, -259.162, 1.38149, 0.33", "-110.888, -268.02, 2.21226, 0.33" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-55.6435, -168.11, -14.4712, 0.67", "-57.2224, -169.43, -14.8819, 0.67", "-59.1753, -171.114, -15.2637, 0.67", "-61.7401, -173.748, -15.8197, 0.67", "-62.8599, -175.087, -16.1554, 0.33", "-64.351, -176.987, -16.6505, 0.67", "-65.889, -179.024, -17.1767, 0.33", "-66.2401, -179.542, -17.3214, 0.33", "-67.9221, -182.5, -18.1481, 0.67", "-69.1269, -184.652, -18.7272, 0.33", "-70.2009, -186.571, -19.3062, 0.33", "-70.8573, -187.785, -19.697, 0.67", "-71.9706, -189.976, -20.4039, 0.33", "-72.6739, -191.359, -20.8187, 0.33", "-73.6803, -193.384, -21.3019, 0.33", "-73.8085, -193.67, -21.3552, 0.67", "-74.5981, -195.766, -21.6855, 0.33", "-74.9725, -196.977, -21.8399, 0.67", "-75.4073, -198.746, -22.0021, 0.33", "-75.955, -200.919, -22.187, 0.33", "-76.2857, -202.47, -22.3033, 0.67", "-77.0444, -205.93, -22.5365, 0.33", "-77.7201, -208.789, -22.7017, 0.67", "-78.4182, -211.58, -22.7573, 0.67", "-79.1272, -214.488, -22.7016, 0.33", "-79.7761, -217.337, -22.5984, 0.33", "-79.9263, -218.031, -22.5603, 0.33", "-80.4734, -220.383, -22.3686, 0.33", "-81.0292, -222.296, -22.0852, 0.67", "-81.4128, -223.569, -21.8374, 0.33", "-81.5096, -223.866, -21.7876, 0.67", "-82.1621, -225.445, -21.5769, 0.33", "-82.5445, -226.052, -21.5226, 0.67", "-85.3742, -229.41, -21.3576, 0.33", "-86.3669, -230.311, -21.3535, 0.67", "-88.576, -232.004, -21.3647, 0.33", "-89.45, -232.563, -21.4198, 1.33", "-94.7306, -235.502, -21.9762, 0.33", "-95.1294, -235.725, -22.0513, 0.67", "-97.2719, -236.896, -22.6071, 0.33", "-97.2719, -236.896, -22.6071, 0.67", "-100.613, -239.243, -23.5646, 0.33", "-101.334, -239.849, -23.8213, 0.67", "-104.067, -242.692, -25.0381, 0.33", "-105.74, -244.803, -25.7661, 0.33", "-105.974, -245.169, -25.8961, 0.67", "-106.917, -246.773, -26.4104, 0.33", "-107.111, -247.175, -26.5111, 0.67", "-108.075, -249.164, -26.9838, 0.33", "-109.396, -252.105, -27.5026, 0.33", "-110.19, -254.803, -28.1131, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-46.0382, -179.721, 0.195553, 0.33", "-46.4289, -182.277, 2.20436, 0.33", "-46.9484, -184.269, 3.72185, 0.67", "-47.374, -185.419, 4.61641, 0.33", "-48.2478, -187.387, 6.65311, 0.67", "-49.6127, -189.859, 9.64634, 0.33", "-50.3039, -190.707, 11.0396, 0.67", "-51.1691, -191.224, 12.6593, 0.33", "-51.8912, -191.523, 13.9599, 0.67", "-55.1428, -192.401, 19.7054, 0.33", "-56.1349, -192.514, 21.4023, 0.67", "-58.7454, -192.546, 26.0864, 0.67", "-60.2515, -192.477, 29.1789, 1.33", "-62.7906, -196.261, 37.9929, 1.33", "-63.7131, -201.325, 46.4031, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-46.0382, -179.721, 0.195553, 0.67", "-47.4968, -181.196, 0.901528, 0.67", "-49.1438, -182.862, 1.69872, 0.67", "-50.7085, -184.444, 2.45607, 0.33", "-51.9228, -185.672, 3.04377, 0.67", "-54.8166, -188.598, 4.44445, 0.33", "-56.5075, -190.308, 5.26286, 0.33", "-63.5958, -196.405, 8.19029, 0.33", "-71.001, -201.02, 12.8331, 0.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-10.3193, 168.296, -9.73939, 0.67", "-11.0442, 170.795, -10.058, 0.67", "-11.742, 173.231, -10.4491, 0.67", "-13.1835, 178.38, -11.3325, 0.67", "-13.5263, 179.68, -11.5524, 0.67", "-14.5234, 183.791, -12.2903, 0.67", "-14.9546, 185.425, -12.5866, 0.67", "-15.5692, 187.783, -13.0651, 0.67", "-15.8769, 189.038, -13.2781, 0.67", "-16.4305, 191.202, -13.5633, 0.33", "-17.2747, 194.488, -13.7619, 0.67", "-17.8656, 196.828, -13.6971, 0.67", "-18.1212, 197.751, -13.659, 1.33", "-19.1999, 201.928, -13.4076, 0.33", "-19.6997, 203.752, -13.2428, 1.33", "-20.1623, 205.307, -13.1009, 0.33", "-20.4815, 206.262, -13.0516, 0.67", "-21.5049, 209.016, -13.1346, 0.67", "-22.3757, 211.088, -13.355, 0.67", "-23.2646, 212.767, -13.7971, 0.33", "-24.3147, 214.404, -14.4742, 0.67", "-26.1222, 216.59, -15.837, 0.33", "-27.6421, 217.843, -17.2034, 0.67", "-28.8294, 218.171, -18.8153, 0.67", "-30.727, 218.137, -21.7555, 0.67", "-31.8894, 217.944, -23.7001, 0.67", "-33.0741, 217.528, -25.7839, 0.67", "-34.2794, 216.854, -28.0634, 0.33", "-37.6005, 214.524, -34.6917, 0.33", "-37.9153, 214.286, -35.3253, 0.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-10.3193, 168.296, -9.73939, 0.67", "-12.7936, 170.052, -8.44134, 0.67", "-13.8639, 170.888, -7.88729, 0.67", "-14.7914, 171.695, -7.43123, 0.67", "-18.252, 175.267, -5.48731, 0.67", "-20.2148, 177.334, -4.40047, 0.67", "-22.3365, 179.656, -3.2589, 0.33", "-22.7941, 180.244, -3.095, 2.0", "-24.1916, 182.1, -2.93873, 0.67", "-27.1179, 185.894, -3.33954, 0.33", "-28.6861, 187.879, -3.98103, 0.67", "-29.9988, 189.465, -4.67308, 0.67", "-35.5382, 195.043, -7.59398, 0.33", "-37.2188, 196.6, -8.21066, 0.33", "-38.445, 197.627, -8.54557, 1.33", "-40.2962, 199.087, -8.86328, 0.67", "-41.386, 199.943, -8.9126, 0.67", "-44.1211, 201.939, -8.45928, 0.33", "-49.1716, 205.508, -6.22761, 1.33", "-50.1633, 206.283, -5.69649, 0.67", "-51.5147, 207.454, -4.83226, 0.33" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_56", "dend_31", "dend_22", "dend_9", "dend_0", "dend_58", "dend_57", "dend_51", "dend_32", "dend_30", "dend_23", "dend_19", "dend_10", "dend_6", "dend_1", "dend_60", "dend_59", "dend_55", "dend_52", "dend_44", "dend_33", "dend_29", "dend_24", "dend_21", "dend_20", "dend_18", "dend_11", "dend_8", "dend_7", "dend_5", "dend_2", "dend_54", "dend_53", "dend_48", "dend_45", "dend_41", "dend_34", "dend_26", "dend_25", "dend_13", "dend_12", "dend_4", "dend_3", "dend_50", "dend_49", "dend_47", "dend_46", "dend_43", "dend_42", "dend_38", "dend_35", "dend_28", "dend_27", "dend_17", "dend_14", "dend_40", "dend_39", "dend_37", "dend_36", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_56", "dend_31", "dend_22", "dend_9", "dend_0", "dend_58", "dend_57", "dend_51", "dend_32", "dend_30", "dend_23", "dend_19", "dend_10", "dend_6", "dend_1", "dend_60", "dend_59", "dend_55", "dend_52", "dend_44", "dend_33", "dend_29", "dend_24", "dend_21", "dend_20", "dend_18", "dend_11", "dend_8", "dend_7", "dend_5", "dend_2", "dend_54", "dend_53", "dend_48", "dend_45", "dend_41", "dend_34", "dend_26", "dend_25", "dend_13", "dend_12", "dend_4", "dend_3", "dend_50", "dend_49", "dend_47", "dend_46", "dend_43", "dend_42", "dend_38", "dend_35", "dend_28", "dend_27", "dend_17", "dend_14", "dend_40", "dend_39", "dend_37", "dend_36", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_31", "dend_22", "dend_22", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "axon_0", "axon_0", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_LBC_f0975c96e7_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_31
create dend_51
public dend_51
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_9
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_44, id: dend_44, parent: dend_32
create dend_44
public dend_44
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_56, dend_31, dend_22, dend_9, dend_0, dend_58, dend_57, dend_51, dend_32, dend_30, dend_23, dend_19, dend_10, dend_6, dend_1, dend_60, dend_59, dend_55, dend_52, dend_44, dend_33, dend_29, dend_24, dend_21, dend_20, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, dend_54, dend_53, dend_48, dend_45, dend_41, dend_34, dend_26, dend_25, dend_13, dend_12, dend_4, dend_3, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_38, dend_35, dend_28, dend_27, dend_17, dend_14, dend_40, dend_39, dend_37, dend_36, dend_16, dend_15]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_56, dend_31, dend_22, dend_9, dend_0, dend_58, dend_57, dend_51, dend_32, dend_30, dend_23, dend_19, dend_10, dend_6, dend_1, dend_60, dend_59, dend_55, dend_52, dend_44, dend_33, dend_29, dend_24, dend_21, dend_20, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, dend_54, dend_53, dend_48, dend_45, dend_41, dend_34, dend_26, dend_25, dend_13, dend_12, dend_4, dend_3, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_38, dend_35, dend_28, dend_27, dend_17, dend_14, dend_40, dend_39, dend_37, dend_36, dend_16, dend_15]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_62
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_56, dend_56, dend_56, dend_56, dend_31, dend_22, dend_22, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, axon_0, axon_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_8, dend_8, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_50, dend_50, dend_50, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_56(0), soma_0(0.49999988841484605)
    connect dend_31(0), soma_0(0.49999988841484605)
    connect dend_22(0), soma_0(0.49999988841484605)
    connect dend_9(0), soma_0(0.49999988841484605)
    connect dend_0(0), soma_0(0.49999988841484605)
    connect axon_0(0), soma_0(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_44(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.4489, -11.1277, 1.96857, 2.53905 ) }
    soma_0 { pt3dadd( -2.21373, -9.99102, 1.77288, 4.60052 ) }
    soma_0 { pt3dadd( -1.97857, -8.85434, 1.57719, 5.7745 ) }
    soma_0 { pt3dadd( -1.74341, -7.71767, 1.3815, 6.94848 ) }
    soma_0 { pt3dadd( -1.50825, -6.581, 1.18581, 8.08333 ) }
    soma_0 { pt3dadd( -1.27308, -5.44432, 0.990126, 9.17802 ) }
    soma_0 { pt3dadd( -1.03792, -4.30765, 0.794438, 10.2727 ) }
    soma_0 { pt3dadd( -0.802757, -3.17097, 0.59875, 11.3674 ) }
    soma_0 { pt3dadd( -0.567594, -2.0343, 0.403062, 12.0266 ) }
    soma_0 { pt3dadd( -0.332431, -0.897626, 0.207374, 12.2828 ) }
    soma_0 { pt3dadd( -0.0972679, 0.239047, 0.0116859, 12.3212 ) }
    soma_0 { pt3dadd( 0.137895, 1.37572, -0.184002, 11.9564 ) }
    soma_0 { pt3dadd( 0.373058, 2.5124, -0.37969, 10.9173 ) }
    soma_0 { pt3dadd( 0.608221, 3.64907, -0.575378, 9.90283 ) }
    soma_0 { pt3dadd( 0.843384, 4.78574, -0.771067, 9.18979 ) }
    soma_0 { pt3dadd( 1.07855, 5.92242, -0.966755, 8.44172 ) }
    soma_0 { pt3dadd( 1.31371, 7.05909, -1.16244, 7.69366 ) }
    soma_0 { pt3dadd( 1.54887, 8.19576, -1.35813, 6.80206 ) }
    soma_0 { pt3dadd( 1.78404, 9.33244, -1.55382, 5.87376 ) }
    soma_0 { pt3dadd( 2.0192, 10.4691, -1.74951, 4.94547 ) }
    soma_0 { pt3dadd( 2.25436, 11.6058, -1.9452, 2.87974 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 21/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 6.41062, 0.883026, -2.60158, 1.33 ) }
    dend_56 { pt3dadd( 6.96245, 3.76195, -1.40025, 1.33 ) }
    dend_56 { pt3dadd( 7.87504, 8.52299, 0.586445, 0.67 ) }
    dend_56 { pt3dadd( 9.10351, 14.9319, 3.26078, 0.67 ) }
    dend_56 { pt3dadd( 9.78596, 18.4923, 4.74646, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 26/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -3.05938, -9.94699, 1.30842, 3.33 ) }
    dend_31 { pt3dadd( -3.49938, -10.859, 1.30842, 3.33 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 28/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -2.75938, 9.72753, -11.0115, 1.33 ) }
    dend_22 { pt3dadd( -5.86061, 9.79751, -13.2215, 1.33 ) }
    dend_22 { pt3dadd( -10.2898, 9.89747, -16.3777, 2.0 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 31/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -2.30938, 10.8295, -10.0116, 1.33 ) }
    dend_9 { pt3dadd( -3.02244, 16.6986, -7.87356, 1.33 ) }
    dend_9 { pt3dadd( -3.5322, 22.7521, -5.88886, 2.0 ) }
    dend_9 { pt3dadd( -3.99932, 27.9348, -4.39677, 1.33 ) }
    dend_9 { pt3dadd( -4.37025, 31.4885, -3.552, 1.33 ) }
    dend_9 { pt3dadd( -4.75004, 35.896, -2.52805, 2.0 ) }
    dend_9 { pt3dadd( -4.99114, 39.5341, -1.80662, 1.33 ) }
    dend_9 { pt3dadd( -5.05469, 41.4172, -1.54045, 1.33 ) }
    dend_9 { pt3dadd( -5.10526, 45.0363, -1.39818, 1.33 ) }
    dend_9 { pt3dadd( -5.33929, 49.7577, -1.4157, 1.33 ) }
    dend_9 { pt3dadd( -5.6474, 54.8616, -1.67435, 1.33 ) }
    dend_9 { pt3dadd( -5.99953, 58.7214, -1.92859, 1.33 ) }
    dend_9 { pt3dadd( -6.32144, 61.2487, -2.12194, 0.67 ) }
    dend_9 { pt3dadd( -6.92135, 65.3683, -2.37511, 0.67 ) }
    dend_9 { pt3dadd( -7.36098, 68.311, -2.58887, 0.67 ) }
    dend_9 { pt3dadd( -7.83471, 71.1381, -2.78947, 0.67 ) }
    dend_9 { pt3dadd( -8.20844, 73.1311, -2.93594, 0.67 ) }
    dend_9 { pt3dadd( -8.76025, 75.998, -3.05076, 0.67 ) }
    dend_9 { pt3dadd( -9.52747, 80.3188, -3.16693, 0.67 ) }
    dend_9 { pt3dadd( -10.5369, 86.3741, -3.18617, 0.67 ) }
    dend_9 { pt3dadd( -11.2039, 91.3927, -3.22126, 0.67 ) }
    dend_9 { pt3dadd( -11.4206, 92.9645, -3.2382, 0.67 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 53/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.750619, 11.77, 0.238424, 2.67 ) }
    dend_0 { pt3dadd( 0.99062, 13.974, 4.48842, 2.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 55/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.25436, 11.6058, -1.9452, 0.959956 ) }
    axon_0 { pt3dadd( 5.29331, 26.2947, -1.9452, 0.959956 ) }
    axon_0 { pt3dadd( 8.33225, 40.9837, -1.9452, 0.959956 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 58/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 9.78596, 18.4923, 4.74646, 0.67 ) }
    dend_58 { pt3dadd( 17.1786, 22.0665, 6.66442, 0.67 ) }
    dend_58 { pt3dadd( 23.7105, 24.6631, 8.71239, 0.67 ) }
    dend_58 { pt3dadd( 28.7352, 26.0702, 10.2789, 0.67 ) }
    dend_58 { pt3dadd( 32.3204, 26.9344, 11.3239, 0.33 ) }
    dend_58 { pt3dadd( 36.4401, 27.7993, 12.5323, 0.67 ) }
    dend_58 { pt3dadd( 38.9209, 28.2737, 13.252, 0.67 ) }
    dend_58 { pt3dadd( 41.841, 28.4556, 14.0739, 0.67 ) }
    dend_58 { pt3dadd( 48.294, 28.5555, 15.8738, 0.67 ) }
    dend_58 { pt3dadd( 52.4737, 28.5513, 16.7422, 0.67 ) }
    dend_58 { pt3dadd( 54.6715, 28.6228, 17.0052, 0.67 ) }
    dend_58 { pt3dadd( 56.0378, 28.7199, 17.0973, 0.67 ) }
    dend_58 { pt3dadd( 59.6438, 29.21, 16.9806, 0.67 ) }
    dend_58 { pt3dadd( 65.2, 30.2509, 16.2924, 0.67 ) }
    dend_58 { pt3dadd( 67.6587, 30.7778, 15.9136, 0.33 ) }
    dend_58 { pt3dadd( 70.2219, 31.3273, 15.3838, 0.67 ) }
    dend_58 { pt3dadd( 71.882, 31.6876, 15.0167, 0.33 ) }
    dend_58 { pt3dadd( 79.8393, 33.5224, 13.2884, 0.67 ) }
    dend_58 { pt3dadd( 82.4714, 34.1121, 12.7417, 0.67 ) }
    dend_58 { pt3dadd( 86.8358, 34.9403, 11.9341, 0.67 ) }
    dend_58 { pt3dadd( 91.4417, 35.7769, 11.0619, 0.67 ) }
    dend_58 { pt3dadd( 97.3468, 36.7941, 9.96297, 0.67 ) }
    dend_58 { pt3dadd( 100.106, 37.1946, 9.49759, 0.67 ) }
    dend_58 { pt3dadd( 103.536, 37.5314, 9.04021, 0.67 ) }
    dend_58 { pt3dadd( 106.09, 37.7231, 8.7458, 0.67 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 83/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 9.78596, 18.4923, 4.74646, 0.67 ) }
    dend_57 { pt3dadd( 10.4384, 21.0228, 4.57371, 0.67 ) }
    dend_57 { pt3dadd( 14.3223, 34.1766, 3.67374, 0.67 ) }
    dend_57 { pt3dadd( 15.5796, 38.1543, 3.37348, 0.67 ) }
    dend_57 { pt3dadd( 17.7718, 44.6643, 2.85246, 0.67 ) }
    dend_57 { pt3dadd( 21.427, 54.5258, 2.03543, 0.67 ) }
    dend_57 { pt3dadd( 22.5975, 57.4398, 1.85266, 0.67 ) }
    dend_57 { pt3dadd( 24.2301, 60.745, 1.73458, 0.67 ) }
    dend_57 { pt3dadd( 25.0732, 62.0473, 1.75917, 0.67 ) }
    dend_57 { pt3dadd( 26.7102, 64.0714, 1.91243, 0.67 ) }
    dend_57 { pt3dadd( 28.8686, 66.1503, 2.1092, 0.67 ) }
    dend_57 { pt3dadd( 33.3377, 69.5108, 2.84541, 0.67 ) }
    dend_57 { pt3dadd( 35.8667, 71.2893, 3.23093, 0.67 ) }
    dend_57 { pt3dadd( 42.6968, 75.7687, 4.23419, 0.67 ) }
    dend_57 { pt3dadd( 46.8886, 78.4136, 4.80097, 0.67 ) }
    dend_57 { pt3dadd( 49.1742, 79.742, 5.04691, 0.67 ) }
    dend_57 { pt3dadd( 51.1896, 80.8519, 5.18209, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_57 { pt3dadd( 54.1873, 82.4396, 5.2065, 0.67 ) }
    dend_57 { pt3dadd( 56.6296, 83.8145, 5.18303, 0.67 ) }
    dend_57 { pt3dadd( 59.2069, 85.522, 5.13755, 0.67 ) }
    dend_57 { pt3dadd( 61.6672, 87.6808, 5.07619, 0.67 ) }
    dend_57 { pt3dadd( 63.2283, 89.364, 5.05216, 0.67 ) }
    dend_57 { pt3dadd( 65.5606, 92.4637, 5.04628, 0.67 ) }
    dend_57 { pt3dadd( 67.419, 95.6178, 5.11656, 0.67 ) }
    dend_57 { pt3dadd( 69.5114, 100.316, 5.20998, 0.67 ) }
    dend_57 { pt3dadd( 70.2894, 102.425, 5.26309, 0.67 ) }
    dend_57 { pt3dadd( 71.1548, 105.173, 5.33967, 0.67 ) }
    dend_57 { pt3dadd( 71.6611, 106.903, 5.413, 0.67 ) }
    dend_57 { pt3dadd( 73.4468, 112.84, 5.73039, 0.67 ) }
    dend_57 { pt3dadd( 73.9713, 114.693, 5.84291, 0.67 ) }
    dend_57 { pt3dadd( 74.6967, 117.063, 6.00132, 0.33 ) }
    dend_57 { pt3dadd( 75.7298, 120.94, 6.0765, 0.67 ) }
    dend_57 { pt3dadd( 76.1707, 122.696, 6.03895, 0.67 ) }
    dend_57 { pt3dadd( 77.1219, 126.406, 5.8122, 0.67 ) }
    dend_57 { pt3dadd( 77.4578, 127.981, 5.63757, 0.67 ) }
    dend_57 { pt3dadd( 78.012, 130.769, 5.19966, 0.67 ) }
    dend_57 { pt3dadd( 78.8871, 135.639, 4.23279, 0.67 ) }
    dend_57 { pt3dadd( 79.0978, 136.904, 3.9756, 0.67 ) }
    dend_57 { pt3dadd( 79.4309, 138.977, 3.57017, 0.33 ) }
    dend_57 { pt3dadd( 79.7693, 141.235, 3.21529, 0.33 ) }
    dend_57 { pt3dadd( 80.278, 144.576, 2.87851, 0.67 ) }
    dend_57 { pt3dadd( 80.4985, 146.148, 2.82113, 0.67 ) }
    dend_57 { pt3dadd( 80.9048, 149.262, 2.95601, 0.67 ) }
    dend_57 { pt3dadd( 80.9928, 150.959, 2.94643, 0.33 ) }
    dend_57 { pt3dadd( 80.9577, 153.498, 2.83078, 0.67 ) }
    dend_57 { pt3dadd( 80.867, 156.19, 2.62447, 0.33 ) }
    dend_57 { pt3dadd( 80.8268, 156.639, 2.57968, 0.67 ) }
    dend_57 { pt3dadd( 80.6564, 158.519, 2.19258, 0.33 ) }
    dend_57 { pt3dadd( 80.6167, 162.282, 0.880589, 0.67 ) }
    dend_57 { pt3dadd( 80.7669, 164.701, -0.145675, 0.67 ) }
    dend_57 { pt3dadd( 80.9833, 166.171, -0.801706, 0.67 ) }
    dend_57 { pt3dadd( 81.3609, 168.03, -1.57119, 0.67 ) }
    dend_57 { pt3dadd( 82.1359, 171.163, -2.7141, 0.67 ) }
    dend_57 { pt3dadd( 83.0929, 174.225, -3.65008, 0.67 ) }
    dend_57 { pt3dadd( 83.8627, 176.304, -4.08983, 0.33 ) }
    dend_57 { pt3dadd( 84.9675, 179.229, -4.46611, 0.67 ) }
    dend_57 { pt3dadd( 85.7265, 181.216, -4.52562, 0.33 ) }
    dend_57 { pt3dadd( 86.1252, 182.289, -4.44731, 0.67 ) }
    dend_57 { pt3dadd( 86.5455, 183.799, -4.15329, 0.33 ) }
    dend_57 { pt3dadd( 86.7461, 185.016, -3.86994, 0.67 ) }
    dend_57 { pt3dadd( 87.0469, 187.358, -3.40612, 0.67 ) }
    dend_57 { pt3dadd( 87.2078, 189.564, -3.04933, 0.33 ) }
    dend_57 { pt3dadd( 87.2613, 190.266, -2.95975, 0.67 ) }
    dend_57 { pt3dadd( 87.3094, 191.84, -2.76223, 0.33 ) }
    dend_57 { pt3dadd( 87.2918, 193.017, -2.62508, 0.67 ) }
    dend_57 { pt3dadd( 87.2134, 195.614, -2.38715, 0.33 ) }
    dend_57 { pt3dadd( 87.1673, 196.571, -2.36011, 0.67 ) }
    dend_57 { pt3dadd( 87.1257, 199.176, -2.23308, 0.33 ) }
    // Section: dend_51, id: dend_51, parent: dend_31 (entry count 51/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -3.49938, -10.859, 1.30842, 0.67 ) }
    dend_51 { pt3dadd( -2.38913, -13.1874, 1.06692, 0.67 ) }
    dend_51 { pt3dadd( -0.512589, -18.5551, 0.230231, 1.33 ) }
    dend_51 { pt3dadd( 0.205054, -21.3588, -0.107391, 1.33 ) }
    dend_51 { pt3dadd( 0.711383, -24.2236, -0.387607, 1.33 ) }
    dend_51 { pt3dadd( 1.67416, -28.9969, -0.479159, 1.33 ) }
    dend_51 { pt3dadd( 2.04866, -31.327, -0.571821, 0.67 ) }
    dend_51 { pt3dadd( 2.45276, -34.9165, -0.771906, 1.33 ) }
    dend_51 { pt3dadd( 2.67154, -37.7588, -0.942654, 1.33 ) }
    dend_51 { pt3dadd( 2.81525, -39.3396, -0.961172, 0.67 ) }
    dend_51 { pt3dadd( 4.55671, -53.088, -0.319736, 0.67 ) }
    dend_51 { pt3dadd( 5.27431, -58.4545, 0.351397, 0.67 ) }
    dend_51 { pt3dadd( 5.38274, -59.4414, 0.502836, 0.67 ) }
    dend_51 { pt3dadd( 5.64561, -61.721, 0.92042, 0.67 ) }
    dend_51 { pt3dadd( 6.35267, -66.9306, 1.96218, 0.67 ) }
    dend_51 { pt3dadd( 6.62953, -68.8836, 2.4351, 0.67 ) }
    dend_51 { pt3dadd( 7.0007, -74.0956, 3.9608, 1.33 ) }
    dend_51 { pt3dadd( 7.3576, -78.4935, 5.20818, 0.67 ) }
    dend_51 { pt3dadd( 7.6123, -81.5941, 5.888, 0.67 ) }
    dend_51 { pt3dadd( 7.84908, -85.0723, 6.5248, 0.67 ) }
    dend_51 { pt3dadd( 8.17422, -89.7415, 7.11245, 0.67 ) }
    dend_51 { pt3dadd( 8.57465, -94.8143, 7.64474, 0.67 ) }
    dend_51 { pt3dadd( 9.24698, -99.9236, 7.92535, 0.67 ) }
    dend_51 { pt3dadd( 9.71802, -102.665, 7.99463, 0.67 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 75/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -3.49938, -10.859, 1.30842, 1.33 ) }
    dend_32 { pt3dadd( -3.36556, -14.7587, -0.6228, 1.33 ) }
    dend_32 { pt3dadd( -3.14537, -21.1759, -3.8007, 1.33 ) }
    dend_32 { pt3dadd( -3.02667, -24.6349, -5.51365, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 79/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -10.2898, 9.89747, -16.3777, 1.33 ) }
    dend_30 { pt3dadd( -14.1777, 7.28792, -16.0859, 1.33 ) }
    dend_30 { pt3dadd( -18.0948, 4.20621, -15.6856, 1.33 ) }
    dend_30 { pt3dadd( -20.2048, 2.54779, -15.4776, 0.67 ) }
    dend_30 { pt3dadd( -23.3358, 0.37081, -15.1671, 0.67 ) }
    dend_30 { pt3dadd( -26.9931, -1.83635, -14.6876, 0.67 ) }
    dend_30 { pt3dadd( -32.2843, -5.02672, -13.7184, 0.67 ) }
    dend_30 { pt3dadd( -33.7046, -5.89218, -13.5248, 0.67 ) }
    dend_30 { pt3dadd( -37.2442, -8.00715, -13.4425, 0.67 ) }
    dend_30 { pt3dadd( -40.5016, -9.67879, -13.7483, 0.67 ) }
    dend_30 { pt3dadd( -45.2704, -11.7718, -14.702, 0.67 ) }
    dend_30 { pt3dadd( -50.6588, -14.2225, -16.2264, 0.67 ) }
    dend_30 { pt3dadd( -57.6015, -17.311, -18.5105, 0.67 ) }
    dend_30 { pt3dadd( -60.923, -18.855, -19.7641, 0.67 ) }
    dend_30 { pt3dadd( -64.8814, -20.8328, -21.467, 0.67 ) }
    dend_30 { pt3dadd( -70.7919, -24.0027, -24.2816, 0.67 ) }
    dend_30 { pt3dadd( -74.9718, -26.2827, -26.3947, 0.67 ) }
    dend_30 { pt3dadd( -80.1142, -29.0516, -28.8051, 0.67 ) }
    dend_30 { pt3dadd( -82.0629, -30.1334, -29.3983, 0.67 ) }
    dend_30 { pt3dadd( -83.456, -30.9706, -29.7336, 0.33 ) }
    dend_30 { pt3dadd( -83.8458, -31.2067, -29.8105, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( -85.5315, -32.1198, -30.01, 0.33 ) }
    dend_30 { pt3dadd( -87.2779, -32.9218, -30.1033, 1.33 ) }
    dend_30 { pt3dadd( -91.2603, -34.7758, -30.293, 0.33 ) }
    dend_30 { pt3dadd( -92.8141, -35.3369, -30.4499, 0.33 ) }
    dend_30 { pt3dadd( -94.0623, -35.7108, -30.6717, 1.33 ) }
    dend_30 { pt3dadd( -97.6518, -36.6292, -31.8291, 0.33 ) }
    dend_30 { pt3dadd( -98.8797, -36.8916, -32.3783, 0.67 ) }
    dend_30 { pt3dadd( -102.493, -37.4721, -34.3597, 0.33 ) }
    dend_30 { pt3dadd( -107.048, -37.9793, -37.3748, 0.67 ) }
    dend_30 { pt3dadd( -109.144, -38.0679, -38.8472, 0.67 ) }
    dend_30 { pt3dadd( -113.61, -38.0306, -42.3667, 0.33 ) }
    dend_30 { pt3dadd( -114.386, -37.9641, -43.0356, 0.67 ) }
    dend_30 { pt3dadd( -115.751, -37.7831, -44.2581, 0.33 ) }
    dend_30 { pt3dadd( -116.794, -37.6231, -45.1646, 0.67 ) }
    dend_30 { pt3dadd( -119.212, -37.309, -47.0157, 0.33 ) }
    dend_30 { pt3dadd( -121.087, -37.1908, -48.131, 1.33 ) }
    dend_30 { pt3dadd( -125.552, -37.153, -50.1967, 0.33 ) }
    dend_30 { pt3dadd( -126.65, -37.2455, -50.6865, 1.33 ) }
    dend_30 { pt3dadd( -129.869, -37.7807, -51.9825, 0.33 ) }
    dend_30 { pt3dadd( -134.158, -38.8517, -53.4545, 0.33 ) }
    dend_30 { pt3dadd( -136.105, -39.4966, -54.0089, 0.33 ) }
    dend_30 { pt3dadd( -136.785, -39.7615, -54.1389, 1.33 ) }
    dend_30 { pt3dadd( -139.861, -41.2932, -54.6012, 0.33 ) }
    dend_30 { pt3dadd( -141.714, -42.2442, -54.8465, 0.67 ) }
    dend_30 { pt3dadd( -143.32, -43.1364, -55.1846, 0.33 ) }
    dend_30 { pt3dadd( -143.93, -43.4928, -55.3621, 0.67 ) }
    dend_30 { pt3dadd( -145.738, -44.4013, -55.8828, 0.33 ) }
    dend_30 { pt3dadd( -147.679, -45.2095, -56.3482, 1.33 ) }
    dend_30 { pt3dadd( -152.496, -47.0112, -57.3485, 0.33 ) }
    dend_30 { pt3dadd( -155.072, -47.8653, -57.7822, 0.67 ) }
    dend_30 { pt3dadd( -156.472, -48.2963, -57.9708, 0.33 ) }
    dend_30 { pt3dadd( -158.634, -48.9208, -58.201, 0.67 ) }
    dend_30 { pt3dadd( -164.913, -50.6356, -58.9828, 0.33 ) }
    dend_30 { pt3dadd( -166.276, -50.9848, -59.1103, 1.33 ) }
    dend_30 { pt3dadd( -173.631, -52.8283, -59.6619, 0.33 ) }
    dend_30 { pt3dadd( -174.153, -52.9529, -59.6843, 0.67 ) }
    dend_30 { pt3dadd( -176.127, -53.4222, -59.8035, 0.33 ) }
    dend_30 { pt3dadd( -179.891, -54.3337, -60.1766, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 38/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -10.2898, 9.89747, -16.3777, 0.67 ) }
    dend_23 { pt3dadd( -12.4371, 13.9874, -17.114, 0.67 ) }
    dend_23 { pt3dadd( -15.5929, 18.0755, -18.5144, 0.67 ) }
    dend_23 { pt3dadd( -17.237, 20.0691, -19.4196, 0.67 ) }
    dend_23 { pt3dadd( -18.4185, 21.5019, -20.0701, 1.33 ) }
    dend_23 { pt3dadd( -19.8788, 23.2727, -20.8741, 0.67 ) }
    dend_23 { pt3dadd( -21.2583, 24.9455, -21.6336, 1.33 ) }
    dend_23 { pt3dadd( -24.3772, 27.715, -23.1256, 0.67 ) }
    dend_23 { pt3dadd( -25.8861, 28.6505, -23.9176, 1.33 ) }
    // Section: dend_19, id: dend_19, parent: dend_9 (entry count 47/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -11.4206, 92.9645, -3.2382, 0.67 ) }
    dend_19 { pt3dadd( -6.13371, 96.7599, -5.04128, 0.67 ) }
    dend_19 { pt3dadd( -4.58926, 98.0078, -5.61791, 0.67 ) }
    dend_19 { pt3dadd( 0.473662, 102.216, -7.58603, 0.33 ) }
    dend_19 { pt3dadd( 1.89015, 103.347, -8.17607, 0.67 ) }
    dend_19 { pt3dadd( 4.87311, 105.811, -9.46045, 0.33 ) }
    dend_19 { pt3dadd( 7.38421, 107.954, -10.5903, 0.67 ) }
    dend_19 { pt3dadd( 10.0979, 110.511, -11.7774, 0.67 ) }
    dend_19 { pt3dadd( 11.2536, 111.802, -12.4003, 0.33 ) }
    dend_19 { pt3dadd( 13.0926, 114.043, -13.7937, 0.67 ) }
    dend_19 { pt3dadd( 14.5151, 116.228, -15.0838, 0.67 ) }
    dend_19 { pt3dadd( 15.5341, 118.303, -16.3155, 0.33 ) }
    dend_19 { pt3dadd( 16.1915, 119.919, -17.4265, 0.67 ) }
    dend_19 { pt3dadd( 16.8659, 121.57, -18.8298, 0.67 ) }
    dend_19 { pt3dadd( 18.1815, 125.249, -22.1098, 0.33 ) }
    dend_19 { pt3dadd( 19.2057, 128.471, -24.9462, 0.67 ) }
    dend_19 { pt3dadd( 20.1913, 131.457, -27.4707, 0.67 ) }
    dend_19 { pt3dadd( 21.1695, 134.492, -29.7118, 0.67 ) }
    dend_19 { pt3dadd( 22.1485, 137.597, -31.581, 0.67 ) }
    dend_19 { pt3dadd( 22.8427, 139.923, -32.7329, 0.67 ) }
    dend_19 { pt3dadd( 23.3632, 141.806, -33.4212, 0.33 ) }
    dend_19 { pt3dadd( 24.6415, 146.017, -34.6542, 0.67 ) }
    dend_19 { pt3dadd( 25.2904, 148.618, -35.0838, 0.33 ) }
    dend_19 { pt3dadd( 26.05, 152.35, -35.377, 0.67 ) }
    dend_19 { pt3dadd( 26.6275, 156.378, -35.6888, 0.33 ) }
    dend_19 { pt3dadd( 26.746, 157.365, -35.8316, 0.67 ) }
    dend_19 { pt3dadd( 26.8757, 158.577, -36.2125, 0.33 ) }
    dend_19 { pt3dadd( 26.9701, 160.514, -37.0788, 0.67 ) }
    dend_19 { pt3dadd( 27.0017, 161.928, -37.8354, 0.67 ) }
    dend_19 { pt3dadd( 26.9103, 166.407, -40.3735, 0.67 ) }
    dend_19 { pt3dadd( 26.8776, 168.33, -41.461, 1.33 ) }
    dend_19 { pt3dadd( 26.8792, 173.066, -44.3297, 0.33 ) }
    dend_19 { pt3dadd( 26.9095, 174.8, -45.4388, 0.67 ) }
    dend_19 { pt3dadd( 26.9943, 175.9, -46.1706, 0.67 ) }
    dend_19 { pt3dadd( 27.2179, 177.706, -47.3423, 0.33 ) }
    dend_19 { pt3dadd( 27.9768, 181.804, -49.6743, 0.67 ) }
    dend_19 { pt3dadd( 28.4753, 184.084, -50.7653, 0.33 ) }
    dend_19 { pt3dadd( 28.574, 184.496, -50.936, 0.67 ) }
    dend_19 { pt3dadd( 29.7499, 188.595, -52.7068, 0.33 ) }
    dend_19 { pt3dadd( 30.0606, 189.611, -53.1569, 0.67 ) }
    dend_19 { pt3dadd( 31.2528, 193.006, -54.6467, 0.33 ) }
    dend_19 { pt3dadd( 31.6642, 194.185, -55.0649, 1.33 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -11.4206, 92.9645, -3.2382, 0.67 ) }
    dend_10 { pt3dadd( -10.5581, 96.6942, -4.24302, 0.67 ) }
    dend_10 { pt3dadd( -8.9963, 101.84, -5.75898, 0.67 ) }
    dend_10 { pt3dadd( -8.42847, 104.178, -6.38024, 0.67 ) }
    dend_10 { pt3dadd( -8.0405, 106.526, -6.96556, 0.67 ) }
    dend_10 { pt3dadd( -7.65047, 109.621, -7.64269, 0.67 ) }
    dend_10 { pt3dadd( -7.48421, 111.429, -7.98957, 0.67 ) }
    dend_10 { pt3dadd( -7.16317, 114.171, -8.26183, 0.67 ) }
    dend_10 { pt3dadd( -6.82749, 117.413, -8.29885, 0.67 ) }
    dend_10 { pt3dadd( -6.63824, 120.515, -8.43685, 0.67 ) }
    dend_10 { pt3dadd( -6.56718, 124.006, -8.61702, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_10 { pt3dadd( -6.61091, 126.612, -8.72445, 0.67 ) }
    dend_10 { pt3dadd( -6.68986, 133.098, -8.87114, 0.67 ) }
    dend_10 { pt3dadd( -6.59168, 136.641, -8.83069, 0.67 ) }
    dend_10 { pt3dadd( -6.24899, 140.168, -8.81738, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 4/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 0.99062, 13.974, 4.48842, 0.67 ) }
    dend_6 { pt3dadd( 1.9748, 16.096, 5.99161, 0.67 ) }
    dend_6 { pt3dadd( 2.67668, 18.55, 7.62539, 0.67 ) }
    dend_6 { pt3dadd( 3.65577, 23.5224, 10.1543, 0.67 ) }
    dend_6 { pt3dadd( 3.78785, 24.5661, 10.6382, 1.33 ) }
    dend_6 { pt3dadd( 3.98437, 26.7317, 11.594, 0.67 ) }
    dend_6 { pt3dadd( 4.07496, 28.8003, 12.4826, 0.67 ) }
    dend_6 { pt3dadd( 4.22503, 34.6017, 14.858, 0.67 ) }
    dend_6 { pt3dadd( 4.14585, 41.5024, 17.5253, 0.67 ) }
    dend_6 { pt3dadd( 4.04851, 43.3254, 18.1595, 0.67 ) }
    dend_6 { pt3dadd( 3.71251, 47.2313, 19.5958, 0.67 ) }
    dend_6 { pt3dadd( 3.50989, 49.4692, 20.3308, 0.67 ) }
    dend_6 { pt3dadd( 3.42541, 50.723, 20.7006, 0.67 ) }
    dend_6 { pt3dadd( 3.53466, 54.1496, 21.5004, 0.67 ) }
    dend_6 { pt3dadd( 3.94721, 59.0445, 22.4851, 0.67 ) }
    dend_6 { pt3dadd( 4.19888, 60.712, 22.7535, 0.67 ) }
    dend_6 { pt3dadd( 5.23327, 65.8283, 23.2922, 0.67 ) }
    dend_6 { pt3dadd( 5.5753, 67.3749, 23.4058, 0.67 ) }
    dend_6 { pt3dadd( 6.46514, 71.1037, 23.6887, 0.67 ) }
    dend_6 { pt3dadd( 6.8345, 72.6757, 23.7911, 0.67 ) }
    dend_6 { pt3dadd( 7.42135, 74.9112, 23.9322, 0.67 ) }
    dend_6 { pt3dadd( 8.47806, 78.9337, 24.3637, 0.67 ) }
    dend_6 { pt3dadd( 8.87962, 80.7154, 24.6785, 0.67 ) }
    dend_6 { pt3dadd( 9.72682, 84.8983, 25.5401, 0.67 ) }
    dend_6 { pt3dadd( 10.0848, 87.1267, 26.0791, 0.67 ) }
    dend_6 { pt3dadd( 10.4409, 89.3296, 26.6181, 0.67 ) }
    dend_6 { pt3dadd( 11.0403, 93.317, 27.647, 0.67 ) }
    dend_6 { pt3dadd( 11.2936, 95.0411, 28.1149, 0.67 ) }
    dend_6 { pt3dadd( 11.8377, 98.4631, 28.995, 0.67 ) }
    dend_6 { pt3dadd( 11.9501, 99.6178, 29.242, 0.67 ) }
    dend_6 { pt3dadd( 12.3088, 103.273, 30.1025, 0.67 ) }
    dend_6 { pt3dadd( 11.5579, 112.612, 31.7768, 0.67 ) }
    dend_6 { pt3dadd( 12.4668, 121.784, 34.2191, 0.67 ) }
    dend_6 { pt3dadd( 11.8943, 131.106, 36.0553, 0.67 ) }
    dend_6 { pt3dadd( 12.8877, 140.143, 38.9776, 0.67 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 39/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.99062, 13.974, 4.48842, 1.33 ) }
    dend_1 { pt3dadd( -1.80114, 18.6288, 6.43911, 1.33 ) }
    dend_1 { pt3dadd( -4.07889, 21.9617, 7.61885, 1.33 ) }
    dend_1 { pt3dadd( -6.75697, 25.8988, 8.82208, 1.33 ) }
    dend_1 { pt3dadd( -11.7564, 33.4051, 10.8815, 1.33 ) }
    dend_1 { pt3dadd( -13.3179, 35.8733, 11.5047, 1.33 ) }
    dend_1 { pt3dadd( -14.5268, 37.8985, 11.9885, 0.67 ) }
    dend_1 { pt3dadd( -17.7661, 43.2603, 13.2961, 0.67 ) }
    dend_1 { pt3dadd( -19.173, 45.7185, 13.851, 0.67 ) }
    dend_1 { pt3dadd( -20.402, 47.84, 14.1437, 0.67 ) }
    dend_1 { pt3dadd( -21.311, 49.469, 14.2148, 0.67 ) }
    dend_1 { pt3dadd( -22.6264, 51.8619, 14.4088, 0.67 ) }
    dend_1 { pt3dadd( -24.3893, 54.9667, 14.7424, 0.67 ) }
    dend_1 { pt3dadd( -26.0741, 57.7411, 15.1337, 0.67 ) }
    dend_1 { pt3dadd( -27.9123, 60.3455, 15.527, 0.67 ) }
    dend_1 { pt3dadd( -29.4677, 62.306, 15.8267, 0.67 ) }
    dend_1 { pt3dadd( -31.3542, 64.4004, 16.1526, 0.67 ) }
    dend_1 { pt3dadd( -33.4961, 66.5667, 16.467, 0.67 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 57/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 8.33225, 40.9837, -1.9452, 0.33 ) }
    axon_1 { pt3dadd( 11.3712, 55.6726, -1.9452, 0.33 ) }
    axon_1 { pt3dadd( 14.4101, 70.3615, -1.9452, 0.33 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 106.09, 37.7231, 8.7458, 1.33 ) }
    dend_60 { pt3dadd( 106.911, 38.4427, 11.9774, 1.33 ) }
    dend_60 { pt3dadd( 107.27, 38.7578, 13.3923, 0.67 ) }
    dend_60 { pt3dadd( 108.863, 40.1548, 19.6661, 0.67 ) }
    dend_60 { pt3dadd( 110.034, 41.4503, 29.5032, 0.67 ) }
    dend_60 { pt3dadd( 113.225, 41.1534, 38.9755, 0.67 ) }
    dend_60 { pt3dadd( 115.897, 41.7368, 48.5922, 0.67 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 67/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 106.09, 37.7231, 8.7458, 0.33 ) }
    dend_59 { pt3dadd( 108.026, 38.3128, 8.7458, 0.33 ) }
    dend_59 { pt3dadd( 109.201, 38.5396, 8.74062, 0.67 ) }
    dend_59 { pt3dadd( 111.421, 38.7901, 8.72743, 0.33 ) }
    dend_59 { pt3dadd( 114.085, 38.7409, 8.71053, 0.33 ) }
    dend_59 { pt3dadd( 115.74, 38.5396, 8.7, 0.67 ) }
    dend_59 { pt3dadd( 117.726, 38.1713, 8.68761, 0.33 ) }
    dend_59 { pt3dadd( 120.447, 37.3662, 8.66971, 0.67 ) }
    dend_59 { pt3dadd( 122.309, 36.6065, 8.65749, 0.67 ) }
    dend_59 { pt3dadd( 125.421, 34.9971, 8.63809, 0.67 ) }
    dend_59 { pt3dadd( 127.018, 34.0457, 8.65831, 0.33 ) }
    dend_59 { pt3dadd( 127.896, 33.4962, 8.68541, 0.67 ) }
    dend_59 { pt3dadd( 129.08, 32.7623, 8.74169, 0.33 ) }
    dend_59 { pt3dadd( 130.262, 32.1021, 8.81474, 0.67 ) }
    dend_59 { pt3dadd( 132.162, 31.2443, 8.94224, 0.33 ) }
    dend_59 { pt3dadd( 133.442, 30.8719, 9.11136, 0.67 ) }
    dend_59 { pt3dadd( 136.334, 30.1376, 9.52118, 0.33 ) }
    dend_59 { pt3dadd( 137.654, 29.8347, 9.72065, 0.67 ) }
    dend_59 { pt3dadd( 139.621, 29.4482, 10.0379, 0.33 ) }
    dend_59 { pt3dadd( 142.221, 28.9964, 10.4882, 0.67 ) }
    dend_59 { pt3dadd( 148.038, 28.168, 11.5602, 0.67 ) }
    dend_59 { pt3dadd( 157.569, 25.7162, 13.1428, 0.67 ) }
    dend_59 { pt3dadd( 167.197, 23.2542, 13.908, 0.67 ) }
    dend_59 { pt3dadd( 176.953, 21.2442, 13.3126, 0.67 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 91/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 9.71802, -102.665, 7.99463, 0.67 ) }
    dend_55 { pt3dadd( 10.4387, -103.899, 7.37162, 0.67 ) }
    dend_55 { pt3dadd( 11.3935, -105.825, 6.64873, 0.67 ) }
    dend_55 { pt3dadd( 12.476, -108.263, 5.9595, 0.67 ) }
    dend_55 { pt3dadd( 14.0513, -111.801, 4.97067, 0.67 ) }
    dend_55 { pt3dadd( 15.9512, -116.075, 3.81287, 0.67 ) }
    dend_55 { pt3dadd( 16.8721, -118.26, 3.26378, 0.67 ) }
    dend_55 { pt3dadd( 18.6971, -122.976, 2.3145, 0.67 ) }
    dend_55 { pt3dadd( 19.358, -125.04, 2.02346, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_55 { pt3dadd( 20.1288, -127.569, 1.67667, 0.33 ) }
    dend_55 { pt3dadd( 20.5566, -128.911, 1.52532, 0.67 ) }
    dend_55 { pt3dadd( 21.0485, -130.506, 1.309, 0.67 ) }
    dend_55 { pt3dadd( 22.8539, -136.275, 0.371764, 0.67 ) }
    dend_55 { pt3dadd( 24.2104, -141.156, -0.410722, 0.67 ) }
    dend_55 { pt3dadd( 25.331, -145.119, -0.978825, 0.33 ) }
    dend_55 { pt3dadd( 25.7966, -146.91, -1.15773, 1.33 ) }
    dend_55 { pt3dadd( 26.0819, -148.013, -1.25005, 0.33 ) }
    dend_55 { pt3dadd( 26.6024, -149.789, -1.3328, 0.33 ) }
    dend_55 { pt3dadd( 27.3832, -152.665, -1.4668, 0.67 ) }
    dend_55 { pt3dadd( 28.1525, -155.502, -1.55597, 0.67 ) }
    dend_55 { pt3dadd( 28.8341, -158.274, -1.57525, 0.67 ) }
    dend_55 { pt3dadd( 29.8082, -161.867, -1.7044, 0.67 ) }
    dend_55 { pt3dadd( 30.5563, -164.615, -1.88904, 0.67 ) }
    dend_55 { pt3dadd( 31.8921, -169.005, -2.3179, 0.67 ) }
    dend_55 { pt3dadd( 32.3512, -170.268, -2.49872, 0.33 ) }
    dend_55 { pt3dadd( 32.858, -171.461, -2.72207, 0.33 ) }
    dend_55 { pt3dadd( 33.6513, -172.856, -3.04001, 0.67 ) }
    dend_55 { pt3dadd( 36.8318, -177.563, -4.23898, 0.67 ) }
    dend_55 { pt3dadd( 38.0918, -179.144, -4.69242, 0.67 ) }
    dend_55 { pt3dadd( 40.2833, -181.49, -5.29263, 0.67 ) }
    dend_55 { pt3dadd( 42.0531, -183.211, -5.73645, 0.67 ) }
    dend_55 { pt3dadd( 43.6465, -184.804, -6.16313, 0.67 ) }
    dend_55 { pt3dadd( 44.5456, -185.761, -6.41674, 0.33 ) }
    dend_55 { pt3dadd( 47.0316, -188.352, -7.05229, 0.67 ) }
    dend_55 { pt3dadd( 48.5142, -190.112, -7.45501, 0.67 ) }
    dend_55 { pt3dadd( 49.9687, -192.089, -7.8406, 0.33 ) }
    dend_55 { pt3dadd( 52.596, -195.803, -8.2226, 0.67 ) }
    dend_55 { pt3dadd( 53.9207, -197.734, -8.31473, 0.33 ) }
    dend_55 { pt3dadd( 54.6427, -198.674, -8.26698, 0.67 ) }
    dend_55 { pt3dadd( 56.5258, -200.814, -7.92902, 0.33 ) }
    dend_55 { pt3dadd( 57.7072, -201.887, -7.58843, 1.33 ) }
    dend_55 { pt3dadd( 60.2834, -203.905, -6.81629, 0.33 ) }
    dend_55 { pt3dadd( 61.9984, -204.968, -6.23691, 0.33 ) }
    dend_55 { pt3dadd( 65.1006, -206.728, -5.18969, 0.33 ) }
    dend_55 { pt3dadd( 67.0542, -207.819, -4.51038, 0.67 ) }
    dend_55 { pt3dadd( 70.1179, -209.462, -3.26145, 0.33 ) }
    dend_55 { pt3dadd( 72.2678, -210.538, -2.43344, 0.67 ) }
    dend_55 { pt3dadd( 75.3447, -211.938, -1.51064, 0.33 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 39/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 9.71802, -102.665, 7.99463, 0.67 ) }
    dend_52 { pt3dadd( 9.0569, -105.438, 8.11813, 0.67 ) }
    dend_52 { pt3dadd( 8.58778, -107.828, 8.53806, 0.67 ) }
    dend_52 { pt3dadd( 7.9415, -112.75, 9.70046, 0.67 ) }
    dend_52 { pt3dadd( 7.66956, -115.941, 10.2871, 0.67 ) }
    dend_52 { pt3dadd( 7.42667, -118.408, 10.5097, 0.67 ) }
    dend_52 { pt3dadd( 7.33032, -120.386, 10.5875, 0.67 ) }
    dend_52 { pt3dadd( 7.41997, -123.655, 10.5811, 0.67 ) }
    dend_52 { pt3dadd( 7.80679, -126.64, 10.4687, 0.67 ) }
    dend_52 { pt3dadd( 8.3254, -129.594, 10.4232, 0.67 ) }
    dend_52 { pt3dadd( 8.68717, -133.128, 10.2483, 0.67 ) }
    dend_52 { pt3dadd( 8.88202, -136.397, 10.1311, 0.67 ) }
    dend_52 { pt3dadd( 8.89706, -139.253, 10.0806, 0.67 ) }
    dend_52 { pt3dadd( 8.78716, -141.723, 10.0858, 0.67 ) }
    dend_52 { pt3dadd( 8.5121, -145.72, 10.3128, 0.67 ) }
    dend_52 { pt3dadd( 8.26933, -149.386, 10.6791, 0.67 ) }
    dend_52 { pt3dadd( 7.95527, -154.15, 11.2214, 0.67 ) }
    dend_52 { pt3dadd( 7.68341, -157.111, 11.5141, 0.33 ) }
    dend_52 { pt3dadd( 7.54163, -160.627, 11.9339, 0.67 ) }
    dend_52 { pt3dadd( 7.54623, -161.33, 12.0345, 0.33 ) }
    dend_52 { pt3dadd( 7.72462, -163.196, 12.3624, 0.67 ) }
    dend_52 { pt3dadd( 7.96009, -164.77, 12.6904, 0.33 ) }
    dend_52 { pt3dadd( 8.54283, -168.146, 13.5366, 0.67 ) }
    dend_52 { pt3dadd( 9.12213, -171.228, 14.4117, 0.67 ) }
    dend_52 { pt3dadd( 9.98321, -177.015, 16.2617, 0.67 ) }
    dend_52 { pt3dadd( 10.2652, -179.344, 17.0485, 0.33 ) }
    dend_52 { pt3dadd( 10.5599, -182.499, 18.2311, 0.67 ) }
    // Section: dend_44, id: dend_44, parent: dend_32 (entry count 66/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.02667, -24.6349, -5.51365, 0.67 ) }
    dend_44 { pt3dadd( -6.18975, -25.6576, -4.11258, 0.67 ) }
    dend_44 { pt3dadd( -9.25181, -26.6439, -3.0813, 0.67 ) }
    dend_44 { pt3dadd( -10.8888, -27.2038, -2.62793, 0.67 ) }
    dend_44 { pt3dadd( -15.4616, -28.8093, -1.56918, 0.67 ) }
    dend_44 { pt3dadd( -22.447, -31.0319, -0.350945, 0.67 ) }
    dend_44 { pt3dadd( -25.0862, -31.8937, 0.0689895, 0.67 ) }
    dend_44 { pt3dadd( -27.6688, -32.7346, 0.403983, 0.67 ) }
    dend_44 { pt3dadd( -29.6704, -33.3852, 0.638214, 0.67 ) }
    dend_44 { pt3dadd( -32.079, -34.1046, 0.848375, 0.67 ) }
    dend_44 { pt3dadd( -36.6238, -35.3694, 1.05386, 0.67 ) }
    dend_44 { pt3dadd( -39.667, -36.1129, 1.47748, 0.67 ) }
    dend_44 { pt3dadd( -42.6613, -36.7404, 1.94788, 0.67 ) }
    dend_44 { pt3dadd( -44.4476, -37.103, 2.31475, 0.33 ) }
    dend_44 { pt3dadd( -46.0438, -37.3849, 2.67711, 0.33 ) }
    dend_44 { pt3dadd( -47.9731, -37.7304, 3.17479, 0.33 ) }
    dend_44 { pt3dadd( -51.9563, -38.5575, 4.32812, 0.67 ) }
    dend_44 { pt3dadd( -54.9642, -38.9269, 4.85818, 0.33 ) }
    dend_44 { pt3dadd( -64.7571, -40.8086, 5.27679, 0.33 ) }
    dend_44 { pt3dadd( -74.4167, -43.2619, 5.1259, 0.33 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 86/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -3.02667, -24.6349, -5.51365, 1.33 ) }
    dend_33 { pt3dadd( -3.25518, -28.3342, -4.73772, 1.33 ) }
    dend_33 { pt3dadd( -3.28244, -31.3173, -4.41947, 1.33 ) }
    dend_33 { pt3dadd( -3.26152, -36.0199, -4.15582, 1.33 ) }
    dend_33 { pt3dadd( -3.24274, -40.2409, -3.91917, 1.33 ) }
    dend_33 { pt3dadd( -3.22002, -45.3463, -3.63294, 1.33 ) }
    dend_33 { pt3dadd( -3.20033, -49.7725, -3.38479, 1.33 ) }
    dend_33 { pt3dadd( -3.35343, -56.1757, -3.35077, 1.33 ) }
    dend_33 { pt3dadd( -3.35353, -59.3694, -3.45794, 1.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 95/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -25.8861, 28.6505, -23.9176, 0.67 ) }
    dend_29 { pt3dadd( -27.2908, 28.4945, -25.6245, 0.67 ) }
    dend_29 { pt3dadd( -29.6657, 28.1852, -28.7311, 0.67 ) }
    dend_29 { pt3dadd( -30.7026, 28.0657, -30.0681, 0.67 ) }
    dend_29 { pt3dadd( -32.8758, 27.8544, -32.7114, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_29 { pt3dadd( -34.345, 27.7304, -34.5355, 0.67 ) }
    dend_29 { pt3dadd( -37.8705, 27.4327, -38.9127, 0.67 ) }
    dend_29 { pt3dadd( -40.108, 27.2905, -41.696, 0.33 ) }
    dend_29 { pt3dadd( -40.8052, 27.2744, -42.4889, 0.67 ) }
    dend_29 { pt3dadd( -41.8603, 27.2603, -43.7816, 0.33 ) }
    dend_29 { pt3dadd( -43.7425, 27.2637, -46.1412, 0.67 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -25.8861, 28.6505, -23.9176, 0.67 ) }
    dend_24 { pt3dadd( -27.0978, 30.2474, -24.1485, 0.67 ) }
    dend_24 { pt3dadd( -28.6779, 32.2912, -24.452, 0.67 ) }
    dend_24 { pt3dadd( -30.0857, 34.1111, -24.7944, 0.67 ) }
    dend_24 { pt3dadd( -31.6364, 36.2198, -25.3286, 0.67 ) }
    dend_24 { pt3dadd( -33.7724, 39.1245, -26.0644, 0.67 ) }
    dend_24 { pt3dadd( -35.6425, 41.6676, -26.7087, 0.67 ) }
    dend_24 { pt3dadd( -37.1826, 43.7434, -27.3361, 0.67 ) }
    dend_24 { pt3dadd( -38.5103, 45.6802, -27.9985, 0.67 ) }
    dend_24 { pt3dadd( -40.0858, 48.0998, -28.9364, 2.0 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 16/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 31.6642, 194.185, -55.0649, 0.33 ) }
    dend_21 { pt3dadd( 30.6892, 195.02, -56.0163, 0.33 ) }
    dend_21 { pt3dadd( 30.4074, 195.261, -56.2914, 0.67 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 19/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 31.6642, 194.185, -55.0649, 0.33 ) }
    dend_20 { pt3dadd( 32.7608, 195.029, -57.7931, 0.33 ) }
    dend_20 { pt3dadd( 33.3249, 195.462, -59.1965, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -6.24899, 140.168, -8.81738, 0.67 ) }
    dend_18 { pt3dadd( -7.06428, 144.021, -11.8658, 0.67 ) }
    dend_18 { pt3dadd( -8.77149, 148.934, -15.8726, 0.67 ) }
    dend_18 { pt3dadd( -9.4483, 150.881, -17.4611, 0.67 ) }
    dend_18 { pt3dadd( -10.978, 155.283, -21.0513, 0.67 ) }
    dend_18 { pt3dadd( -11.5447, 156.914, -22.3813, 0.33 ) }
    dend_18 { pt3dadd( -12.4892, 159.632, -24.5981, 0.33 ) }
    dend_18 { pt3dadd( -13.3639, 161.41, -26.4206, 0.33 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 30/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -6.24899, 140.168, -8.81738, 0.67 ) }
    dend_11 { pt3dadd( -7.11024, 141.661, -10.9327, 0.67 ) }
    dend_11 { pt3dadd( -7.62555, 142.554, -12.1984, 0.67 ) }
    dend_11 { pt3dadd( -9.12508, 145.153, -15.8815, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 34/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 12.8877, 140.143, 38.9776, 0.67 ) }
    dend_8 { pt3dadd( 12.6689, 149.461, 40.9131, 0.67 ) }
    dend_8 { pt3dadd( 11.0373, 158.254, 44.3292, 0.67 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 37/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 12.8877, 140.143, 38.9776, 0.67 ) }
    dend_7 { pt3dadd( 14.8165, 149.008, 42.0102, 0.67 ) }
    dend_7 { pt3dadd( 17.6415, 157.358, 45.8519, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 40/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -33.4961, 66.5667, 16.467, 0.67 ) }
    dend_5 { pt3dadd( -35.3605, 72.3161, 16.0803, 0.67 ) }
    dend_5 { pt3dadd( -36.2246, 74.6407, 16.115, 0.67 ) }
    dend_5 { pt3dadd( -37.5977, 78.2634, 16.2813, 0.67 ) }
    dend_5 { pt3dadd( -39.0021, 81.8852, 16.4999, 0.67 ) }
    dend_5 { pt3dadd( -40.2653, 85.2172, 16.6389, 0.67 ) }
    dend_5 { pt3dadd( -42.2409, 90.5394, 16.7932, 0.67 ) }
    dend_5 { pt3dadd( -44.3962, 96.0262, 17.0135, 0.67 ) }
    dend_5 { pt3dadd( -45.0864, 97.8326, 17.0667, 0.67 ) }
    dend_5 { pt3dadd( -45.9314, 99.9729, 17.1065, 0.67 ) }
    dend_5 { pt3dadd( -47.6468, 104.922, 16.9932, 0.67 ) }
    dend_5 { pt3dadd( -48.8684, 108.863, 16.7433, 0.67 ) }
    dend_5 { pt3dadd( -49.5648, 111.918, 16.4215, 0.67 ) }
    dend_5 { pt3dadd( -50.1889, 115.005, 16.0615, 0.67 ) }
    dend_5 { pt3dadd( -50.5367, 116.995, 15.8336, 0.67 ) }
    dend_5 { pt3dadd( -51.191, 121.725, 15.334, 0.67 ) }
    dend_5 { pt3dadd( -51.336, 123.557, 15.1481, 0.67 ) }
    dend_5 { pt3dadd( -51.3072, 127.665, 14.6616, 0.67 ) }
    dend_5 { pt3dadd( -50.9512, 131.354, 14.2184, 0.67 ) }
    dend_5 { pt3dadd( -50.6572, 133.975, 14.069, 0.67 ) }
    dend_5 { pt3dadd( -50.4914, 135.58, 14.0964, 0.67 ) }
    dend_5 { pt3dadd( -50.2344, 138.604, 14.5655, 0.67 ) }
    dend_5 { pt3dadd( -50.0782, 140.837, 15.0601, 0.67 ) }
    dend_5 { pt3dadd( -49.9316, 143.963, 15.9354, 0.67 ) }
    dend_5 { pt3dadd( -49.8683, 148.186, 17.2171, 0.67 ) }
    dend_5 { pt3dadd( -49.9017, 150.568, 17.9164, 0.67 ) }
    dend_5 { pt3dadd( -49.8991, 154.375, 18.8043, 0.67 ) }
    dend_5 { pt3dadd( -49.9953, 156.86, 19.2175, 0.67 ) }
    dend_5 { pt3dadd( -50.091, 158.786, 19.2972, 0.67 ) }
    dend_5 { pt3dadd( -50.1392, 160.808, 19.1274, 0.67 ) }
    dend_5 { pt3dadd( -50.0875, 164.904, 18.4804, 0.67 ) }
    dend_5 { pt3dadd( -49.9748, 168.837, 17.6871, 0.67 ) }
    dend_5 { pt3dadd( -49.9291, 173.52, 16.4339, 0.67 ) }
    dend_5 { pt3dadd( -49.8694, 177.216, 15.3587, 0.67 ) }
    dend_5 { pt3dadd( -49.8567, 179.951, 14.527, 0.67 ) }
    dend_5 { pt3dadd( -52.2198, 189.02, 12.7124, 0.67 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 76/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -33.4961, 66.5667, 16.467, 0.67 ) }
    dend_2 { pt3dadd( -34.1265, 69.3055, 16.036, 0.67 ) }
    dend_2 { pt3dadd( -34.8421, 72.2096, 15.7981, 0.67 ) }
    dend_2 { pt3dadd( -35.5088, 74.1368, 15.8497, 0.67 ) }
    dend_2 { pt3dadd( -37.0886, 78.0467, 16.3708, 1.33 ) }
    dend_2 { pt3dadd( -38.0638, 80.3147, 16.8479, 0.67 ) }
    dend_2 { pt3dadd( -39.0165, 82.2952, 17.4117, 1.33 ) }
    dend_2 { pt3dadd( -41.5493, 87.1158, 19.3155, 0.67 ) }
    dend_2 { pt3dadd( -43.5614, 90.6126, 21.288, 0.67 ) }
    dend_2 { pt3dadd( -44.6917, 92.2698, 22.5925, 0.67 ) }
    dend_2 { pt3dadd( -46.0687, 93.9295, 24.3332, 0.67 ) }
    dend_2 { pt3dadd( -47.4413, 95.4743, 26.2254, 0.67 ) }
    dend_2 { pt3dadd( -48.58, 96.6829, 27.9127, 0.67 ) }
    dend_2 { pt3dadd( -50.257, 98.3512, 30.4991, 0.67 ) }
    dend_2 { pt3dadd( -51.5288, 99.9442, 32.683, 0.67 ) }
    dend_2 { pt3dadd( -52.0203, 100.536, 33.4531, 0.67 ) }
    dend_2 { pt3dadd( -57.7444, 108.0, 35.7967, 0.67 ) }
    dend_2 { pt3dadd( -62.2704, 115.582, 39.7742, 0.67 ) }
    dend_2 { pt3dadd( -66.7331, 123.392, 43.3091, 0.67 ) }
    dend_2 { pt3dadd( -73.4435, 129.978, 45.9387, 0.67 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 96/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 10.5599, -182.499, 18.2311, 0.67 ) }
    dend_54 { pt3dadd( 12.7768, -181.764, 19.6713, 0.67 ) }
    dend_54 { pt3dadd( 14.2143, -181.288, 20.6052, 0.67 ) }
    dend_54 { pt3dadd( 22.5905, -180.152, 25.9352, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_54 { pt3dadd( 30.113, -180.281, 32.5227, 0.67 ) }
    dend_54 { pt3dadd( 37.7034, -180.86, 39.0045, 0.67 ) }
    dend_54 { pt3dadd( 45.0299, -179.518, 45.6624, 0.67 ) }
    dend_54 { pt3dadd( 51.9749, -177.038, 52.367, 0.67 ) }
    dend_54 { pt3dadd( 59.1829, -174.56, 58.789, 0.67 ) }
    dend_54 { pt3dadd( 66.7661, -173.247, 65.1597, 0.67 ) }
    dend_54 { pt3dadd( 74.4269, -170.909, 71.0971, 0.67 ) }
    dend_54 { pt3dadd( 83.0212, -169.594, 76.0187, 0.67 ) }
    dend_54 { pt3dadd( 91.2858, -170.044, 81.6285, 0.67 ) }
    dend_54 { pt3dadd( 99.9412, -172.151, 86.119, 0.67 ) }
    dend_54 { pt3dadd( 109.307, -174.682, 88.3928, 0.67 ) }
    dend_54 { pt3dadd( 118.274, -178.743, 89.5441, 0.67 ) }
    dend_54 { pt3dadd( 127.76, -180.727, 91.9216, 0.67 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 13/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 10.5599, -182.499, 18.2311, 0.33 ) }
    dend_53 { pt3dadd( 10.3373, -185.119, 17.2407, 0.33 ) }
    dend_53 { pt3dadd( 10.1052, -187.83, 16.2788, 0.67 ) }
    dend_53 { pt3dadd( 9.88025, -189.947, 15.6081, 0.33 ) }
    dend_53 { pt3dadd( 9.14169, -194.658, 14.2675, 0.67 ) }
    dend_53 { pt3dadd( 8.93113, -195.926, 13.9473, 0.67 ) }
    dend_53 { pt3dadd( 8.57654, -197.876, 13.5082, 0.67 ) }
    dend_53 { pt3dadd( 8.27047, -199.171, 13.286, 0.33 ) }
    dend_53 { pt3dadd( 7.53556, -201.677, 12.9537, 0.67 ) }
    dend_53 { pt3dadd( 6.81454, -203.804, 12.8717, 0.33 ) }
    dend_53 { pt3dadd( 6.20374, -205.561, 12.9672, 0.67 ) }
    dend_53 { pt3dadd( 5.61868, -207.169, 13.0689, 0.33 ) }
    dend_53 { pt3dadd( 5.38088, -207.845, 13.12, 0.67 ) }
    dend_53 { pt3dadd( 4.73813, -209.42, 13.2651, 0.33 ) }
    dend_53 { pt3dadd( 4.23099, -210.742, 13.4366, 0.67 ) }
    dend_53 { pt3dadd( 2.39664, -220.071, 12.9822, 0.67 ) }
    dend_53 { pt3dadd( 0.950082, -229.452, 12.3482, 0.67 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 30/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -74.4167, -43.2619, 5.1259, 0.67 ) }
    dend_48 { pt3dadd( -83.9972, -45.7353, 6.32418, 0.67 ) }
    dend_48 { pt3dadd( -92.8099, -49.3154, 9.17629, 0.67 ) }
    dend_48 { pt3dadd( -101.09, -53.8115, 12.1852, 0.67 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 34/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -74.4167, -43.2619, 5.1259, 0.67 ) }
    dend_45 { pt3dadd( -83.8994, -45.7752, 6.88074, 0.67 ) }
    dend_45 { pt3dadd( -93.7554, -47.1787, 7.70372, 0.67 ) }
    dend_45 { pt3dadd( -103.636, -48.6447, 7.74026, 0.67 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 38/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -3.35353, -59.3694, -3.45794, 0.67 ) }
    dend_41 { pt3dadd( -2.39107, -67.5907, -1.57332, 0.67 ) }
    dend_41 { pt3dadd( -1.78354, -72.1072, -1.05904, 0.67 ) }
    dend_41 { pt3dadd( -1.5735, -73.9961, -0.978069, 0.67 ) }
    dend_41 { pt3dadd( -1.17937, -76.6886, -0.982816, 0.67 ) }
    dend_41 { pt3dadd( -0.124308, -82.6337, -1.13685, 0.67 ) }
    dend_41 { pt3dadd( 0.693096, -86.1573, -1.24283, 0.67 ) }
    dend_41 { pt3dadd( 2.64787, -91.1341, -1.69078, 0.67 ) }
    dend_41 { pt3dadd( 3.74754, -93.2886, -1.90133, 0.67 ) }
    dend_41 { pt3dadd( 5.41786, -96.695, -2.58202, 0.67 ) }
    dend_41 { pt3dadd( 6.06504, -98.0989, -3.00847, 0.67 ) }
    dend_41 { pt3dadd( 7.08684, -100.475, -3.83048, 0.67 ) }
    dend_41 { pt3dadd( 8.03875, -103.097, -4.60276, 0.67 ) }
    dend_41 { pt3dadd( 9.96879, -108.497, -5.8292, 0.67 ) }
    dend_41 { pt3dadd( 11.4762, -112.907, -6.90624, 0.67 ) }
    dend_41 { pt3dadd( 12.3822, -116.285, -7.78881, 0.67 ) }
    dend_41 { pt3dadd( 12.9594, -119.071, -8.53571, 0.67 ) }
    dend_41 { pt3dadd( 13.1181, -120.437, -8.90262, 0.67 ) }
    dend_41 { pt3dadd( 13.1865, -122.674, -9.40204, 0.67 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 57/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -3.35353, -59.3694, -3.45794, 0.67 ) }
    dend_34 { pt3dadd( -5.36386, -62.9902, -4.69293, 0.67 ) }
    dend_34 { pt3dadd( -8.24364, -68.9401, -6.66246, 0.67 ) }
    dend_34 { pt3dadd( -12.1073, -76.8394, -9.16389, 0.67 ) }
    dend_34 { pt3dadd( -13.9411, -80.4602, -10.2672, 0.67 ) }
    dend_34 { pt3dadd( -14.3616, -81.2974, -10.5052, 0.67 ) }
    dend_34 { pt3dadd( -15.7804, -84.2847, -11.2929, 0.67 ) }
    dend_34 { pt3dadd( -17.0487, -87.6817, -12.0896, 0.67 ) }
    dend_34 { pt3dadd( -18.2234, -91.1748, -12.5899, 0.67 ) }
    dend_34 { pt3dadd( -18.7277, -92.6859, -12.5862, 0.67 ) }
    dend_34 { pt3dadd( -19.7419, -95.6948, -12.4785, 0.67 ) }
    dend_34 { pt3dadd( -20.5615, -98.1218, -12.3376, 0.67 ) }
    dend_34 { pt3dadd( -22.6599, -104.161, -11.8391, 0.67 ) }
    dend_34 { pt3dadd( -24.0823, -108.032, -11.3989, 0.67 ) }
    dend_34 { pt3dadd( -25.5358, -111.422, -10.9189, 0.67 ) }
    dend_34 { pt3dadd( -25.9771, -112.26, -10.7872, 0.67 ) }
    dend_34 { pt3dadd( -27.8153, -115.108, -10.3946, 0.67 ) }
    dend_34 { pt3dadd( -28.5395, -116.217, -10.2431, 0.67 ) }
    dend_34 { pt3dadd( -30.8366, -120.026, -9.80778, 0.67 ) }
    dend_34 { pt3dadd( -34.0106, -125.489, -9.35931, 0.67 ) }
    dend_34 { pt3dadd( -35.8382, -128.645, -9.10624, 0.67 ) }
    dend_34 { pt3dadd( -37.4356, -131.375, -8.86785, 0.67 ) }
    dend_34 { pt3dadd( -40.2846, -136.194, -8.43102, 0.67 ) }
    dend_34 { pt3dadd( -43.6468, -142.314, -7.89378, 0.67 ) }
    dend_34 { pt3dadd( -45.3518, -145.968, -7.60133, 0.67 ) }
    dend_34 { pt3dadd( -45.9711, -147.438, -7.50394, 0.67 ) }
    dend_34 { pt3dadd( -47.063, -149.857, -7.2818, 0.67 ) }
    dend_34 { pt3dadd( -47.8525, -151.379, -7.07406, 0.67 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -40.0858, 48.0998, -28.9364, 0.33 ) }
    dend_26 { pt3dadd( -42.2889, 51.0386, -29.1153, 0.33 ) }
    dend_26 { pt3dadd( -43.6513, 52.8435, -29.5887, 0.67 ) }
    dend_26 { pt3dadd( -44.4896, 53.9778, -29.9578, 0.67 ) }
    dend_26 { pt3dadd( -45.4161, 55.2544, -30.3854, 0.33 ) }
    dend_26 { pt3dadd( -46.2106, 56.4084, -30.7326, 0.67 ) }
    dend_26 { pt3dadd( -47.7274, 58.5803, -31.4265, 0.33 ) }
    dend_26 { pt3dadd( -49.4531, 61.1891, -32.3713, 0.67 ) }
    dend_26 { pt3dadd( -50.9664, 63.3987, -33.1239, 0.33 ) }
    dend_26 { pt3dadd( -51.5776, 64.3281, -33.4597, 0.67 ) }
    dend_26 { pt3dadd( -52.6626, 66.025, -34.104, 0.33 ) }
    dend_26 { pt3dadd( -54.2139, 68.5782, -35.0717, 0.33 ) }
    dend_26 { pt3dadd( -55.0137, 69.9329, -35.5591, 0.33 ) }
    dend_26 { pt3dadd( -55.6945, 71.0753, -35.8633, 1.33 ) }
    dend_26 { pt3dadd( -57.1784, 73.5277, -36.7351, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 0/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -40.0858, 48.0998, -28.9364, 0.33 ) }
    dend_25 { pt3dadd( -39.8003, 52.6685, -27.376, 0.33 ) }
    dend_25 { pt3dadd( -39.7485, 53.779, -27.0769, 0.33 ) }
    dend_25 { pt3dadd( -39.5329, 57.1581, -26.4227, 0.67 ) }
    dend_25 { pt3dadd( -39.214, 61.5464, -25.7496, 0.33 ) }
    dend_25 { pt3dadd( -39.1245, 62.5361, -25.6235, 0.67 ) }
    dend_25 { pt3dadd( -38.802, 65.5618, -25.3206, 0.33 ) }
    dend_25 { pt3dadd( -38.6098, 67.7864, -25.3189, 0.67 ) }
    dend_25 { pt3dadd( -38.2641, 71.3195, -25.5274, 0.33 ) }
    dend_25 { pt3dadd( -38.1793, 72.2681, -25.6538, 0.67 ) }
    dend_25 { pt3dadd( -38.143, 73.6599, -25.8879, 0.33 ) }
    dend_25 { pt3dadd( -38.1597, 74.8295, -26.074, 0.67 ) }
    dend_25 { pt3dadd( -38.4451, 79.5608, -26.7266, 0.33 ) }
    dend_25 { pt3dadd( -38.6494, 81.4921, -26.9693, 0.33 ) }
    dend_25 { pt3dadd( -38.9189, 83.3092, -27.1666, 0.67 ) }
    dend_25 { pt3dadd( -40.0257, 88.9801, -27.5476, 0.67 ) }
    dend_25 { pt3dadd( -40.5428, 91.1067, -27.7202, 0.33 ) }
    dend_25 { pt3dadd( -40.973, 92.7699, -27.8125, 0.67 ) }
    dend_25 { pt3dadd( -41.6409, 95.2897, -27.8964, 0.33 ) }
    dend_25 { pt3dadd( -41.8171, 95.9728, -27.9273, 0.67 ) }
    dend_25 { pt3dadd( -42.5118, 99.0114, -28.0309, 0.33 ) }
    dend_25 { pt3dadd( -43.2141, 102.608, -28.0405, 0.67 ) }
    dend_25 { pt3dadd( -43.5923, 106.452, -27.917, 0.67 ) }
    dend_25 { pt3dadd( -43.6602, 108.437, -27.7317, 0.33 ) }
    dend_25 { pt3dadd( -43.5873, 110.22, -27.5068, 0.33 ) }
    dend_25 { pt3dadd( -43.2068, 113.879, -26.9956, 0.67 ) }
    dend_25 { pt3dadd( -42.8383, 116.432, -26.5528, 0.33 ) }
    dend_25 { pt3dadd( -42.3715, 119.285, -25.9, 0.67 ) }
    dend_25 { pt3dadd( -41.7555, 123.045, -25.2827, 0.67 ) }
    dend_25 { pt3dadd( -41.3099, 125.755, -24.9421, 0.33 ) }
    dend_25 { pt3dadd( -40.9766, 127.729, -24.7808, 0.67 ) }
    dend_25 { pt3dadd( -40.7456, 129.914, -24.8093, 0.33 ) }
    dend_25 { pt3dadd( -40.6762, 131.615, -24.96, 0.33 ) }
    dend_25 { pt3dadd( -40.7184, 135.609, -25.537, 0.33 ) }
    dend_25 { pt3dadd( -40.7282, 136.535, -25.7384, 0.67 ) }
    dend_25 { pt3dadd( -40.8772, 138.091, -26.0234, 0.33 ) }
    dend_25 { pt3dadd( -41.3195, 141.268, -26.5358, 0.67 ) }
    dend_25 { pt3dadd( -41.8371, 144.047, -26.9428, 0.33 ) }
    dend_25 { pt3dadd( -42.4936, 146.834, -27.2138, 0.33 ) }
    dend_25 { pt3dadd( -42.8862, 148.311, -27.2617, 0.67 ) }
    dend_25 { pt3dadd( -44.3615, 153.354, -27.365, 0.33 ) }
    dend_25 { pt3dadd( -44.4996, 153.787, -27.3674, 0.67 ) }
    dend_25 { pt3dadd( -45.0361, 155.51, -27.3368, 0.33 ) }
    dend_25 { pt3dadd( -45.4862, 157.067, -27.3778, 0.67 ) }
    dend_25 { pt3dadd( -46.0618, 159.304, -27.4813, 0.33 ) }
    dend_25 { pt3dadd( -46.3312, 160.689, -27.5605, 0.33 ) }
    dend_25 { pt3dadd( -46.3695, 161.009, -27.5911, 0.67 ) }
    dend_25 { pt3dadd( -46.5993, 163.287, -27.8847, 0.33 ) }
    dend_25 { pt3dadd( -46.9592, 166.997, -28.5896, 0.67 ) }
    dend_25 { pt3dadd( -47.1555, 168.954, -28.9848, 0.33 ) }
    dend_25 { pt3dadd( -47.2679, 170.225, -29.2822, 0.67 ) }
    dend_25 { pt3dadd( -47.5842, 173.135, -30.0062, 0.33 ) }
    dend_25 { pt3dadd( -47.7707, 174.496, -30.3558, 0.67 ) }
    dend_25 { pt3dadd( -48.1465, 177.09, -31.0234, 0.33 ) }
    dend_25 { pt3dadd( -48.516, 179.129, -31.4999, 0.67 ) }
    dend_25 { pt3dadd( -49.0026, 181.484, -31.9932, 0.33 ) }
    dend_25 { pt3dadd( -49.3188, 183.148, -32.3008, 0.33 ) }
    dend_25 { pt3dadd( -49.4447, 183.832, -32.3997, 0.67 ) }
    dend_25 { pt3dadd( -49.8625, 186.101, -32.5971, 0.33 ) }
    dend_25 { pt3dadd( -50.0844, 187.423, -32.6028, 0.33 ) }
    dend_25 { pt3dadd( -50.2552, 188.041, -32.5627, 0.67 ) }
    dend_25 { pt3dadd( -51.2643, 190.758, -32.1589, 0.33 ) }
    dend_25 { pt3dadd( -51.6953, 191.808, -31.9847, 0.33 ) }
    dend_25 { pt3dadd( -52.1332, 192.702, -31.7965, 0.67 ) }
    dend_25 { pt3dadd( -54.4029, 196.805, -30.7928, 0.33 ) }
    dend_25 { pt3dadd( -56.4686, 200.413, -29.8821, 0.33 ) }
    dend_25 { pt3dadd( -57.9006, 202.922, -29.2477, 0.67 ) }
    dend_25 { pt3dadd( -59.574, 205.789, -28.7902, 0.33 ) }
    dend_25 { pt3dadd( -60.6585, 207.617, -28.6791, 0.33 ) }
    dend_25 { pt3dadd( -60.9862, 208.165, -28.6741, 0.67 ) }
    dend_25 { pt3dadd( -62.2406, 210.293, -28.9047, 0.33 ) }
    dend_25 { pt3dadd( -63.1916, 212.3, -29.3554, 0.33 ) }
    dend_25 { pt3dadd( -65.5394, 217.416, -31.0321, 0.33 ) }
    dend_25 { pt3dadd( -66.1876, 218.78, -31.6727, 0.67 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -9.12508, 145.153, -15.8815, 0.67 ) }
    dend_13 { pt3dadd( -7.8048, 148.415, -14.8481, 0.67 ) }
    dend_13 { pt3dadd( -6.67127, 151.216, -13.9609, 0.67 ) }
    dend_13 { pt3dadd( -5.10954, 155.074, -12.7385, 0.67 ) }
    dend_13 { pt3dadd( -3.95191, 157.935, -11.8324, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -9.12508, 145.153, -15.8815, 0.67 ) }
    dend_12 { pt3dadd( -11.1613, 149.159, -18.6962, 0.67 ) }
    dend_12 { pt3dadd( -11.7625, 150.206, -19.498, 0.67 ) }
    dend_12 { pt3dadd( -13.0277, 152.213, -21.1046, 0.67 ) }
    dend_12 { pt3dadd( -14.295, 153.98, -22.6167, 0.67 ) }
    dend_12 { pt3dadd( -16.7483, 157.433, -25.4997, 0.67 ) }
    dend_12 { pt3dadd( -18.1174, 159.367, -26.9631, 0.67 ) }
    dend_12 { pt3dadd( -18.6651, 160.08, -27.4424, 0.33 ) }
    dend_12 { pt3dadd( -19.003, 160.576, -27.7015, 0.67 ) }
    dend_12 { pt3dadd( -20.2265, 162.641, -28.5601, 0.67 ) }
    dend_12 { pt3dadd( -21.4602, 164.779, -29.3333, 0.67 ) }
    dend_12 { pt3dadd( -23.4299, 168.022, -30.5244, 0.67 ) }
    dend_12 { pt3dadd( -25.568, 171.611, -31.819, 0.67 ) }
    dend_12 { pt3dadd( -26.3605, 172.96, -32.34, 0.67 ) }
    dend_12 { pt3dadd( -28.5852, 176.666, -33.8373, 0.67 ) }
    dend_12 { pt3dadd( -29.6772, 178.404, -34.5757, 0.67 ) }
    dend_12 { pt3dadd( -31.6567, 181.158, -35.9885, 0.67 ) }
    dend_12 { pt3dadd( -32.5432, 182.313, -36.6983, 0.33 ) }
    dend_12 { pt3dadd( -32.995, 182.825, -37.0353, 0.67 ) }
    dend_12 { pt3dadd( -34.0968, 183.848, -37.661, 0.33 ) }
    dend_12 { pt3dadd( -34.3447, 184.045, -37.7386, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -35.7645, 185.15, -37.7964, 0.33 ) }
    dend_12 { pt3dadd( -36.5551, 185.807, -37.5976, 0.67 ) }
    dend_12 { pt3dadd( -38.3186, 187.215, -36.8547, 0.33 ) }
    dend_12 { pt3dadd( -39.5936, 188.275, -36.282, 0.33 ) }
    dend_12 { pt3dadd( -40.691, 189.268, -35.7653, 0.67 ) }
    dend_12 { pt3dadd( -42.9471, 191.352, -34.7504, 0.33 ) }
    dend_12 { pt3dadd( -44.1202, 192.454, -34.2299, 0.33 ) }
    dend_12 { pt3dadd( -45.6996, 194.109, -33.5388, 0.33 ) }
    dend_12 { pt3dadd( -47.2691, 196.124, -32.9035, 0.67 ) }
    dend_12 { pt3dadd( -48.186, 197.415, -32.5918, 0.33 ) }
    dend_12 { pt3dadd( -49.3532, 198.978, -32.4106, 0.67 ) }
    dend_12 { pt3dadd( -49.9053, 199.712, -32.3334, 0.67 ) }
    dend_12 { pt3dadd( -51.3411, 201.64, -31.9691, 0.67 ) }
    dend_12 { pt3dadd( -52.0551, 202.725, -31.7006, 0.33 ) }
    dend_12 { pt3dadd( -52.9495, 203.996, -31.1588, 0.33 ) }
    dend_12 { pt3dadd( -53.7773, 205.104, -30.7946, 0.67 ) }
    dend_12 { pt3dadd( -56.1708, 208.184, -30.3397, 0.67 ) }
    dend_12 { pt3dadd( -57.0169, 209.212, -30.2357, 0.67 ) }
    dend_12 { pt3dadd( -57.9341, 210.211, -30.24, 0.33 ) }
    dend_12 { pt3dadd( -60.0461, 212.434, -30.3711, 0.33 ) }
    dend_12 { pt3dadd( -63.938, 216.698, -31.1146, 0.67 ) }
    dend_12 { pt3dadd( -65.5983, 218.281, -31.9479, 0.67 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 22/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -73.4435, 129.978, 45.9387, 0.67 ) }
    dend_4 { pt3dadd( -78.8008, 137.383, 49.1867, 0.67 ) }
    dend_4 { pt3dadd( -84.6047, 144.18, 53.0756, 0.67 ) }
    dend_4 { pt3dadd( -88.4937, 151.357, 58.3472, 0.67 ) }
    dend_4 { pt3dadd( -90.4938, 159.199, 63.6263, 0.67 ) }
    dend_4 { pt3dadd( -93.1918, 166.572, 69.3252, 0.67 ) }
    dend_4 { pt3dadd( -95.4258, 173.416, 75.8917, 0.67 ) }
    dend_4 { pt3dadd( -98.6069, 180.73, 81.4232, 0.67 ) }
    dend_4 { pt3dadd( -103.106, 186.685, 87.7856, 0.67 ) }
    dend_4 { pt3dadd( -106.627, 192.105, 95.2051, 0.67 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 32/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -73.4435, 129.978, 45.9387, 0.67 ) }
    dend_3 { pt3dadd( -77.2993, 137.883, 49.9263, 0.67 ) }
    dend_3 { pt3dadd( -82.592, 143.972, 55.4856, 0.67 ) }
    dend_3 { pt3dadd( -86.4974, 148.962, 63.0456, 0.67 ) }
    dend_3 { pt3dadd( -91.9143, 155.164, 68.3404, 0.67 ) }
    dend_3 { pt3dadd( -96.1361, 162.566, 72.9737, 0.67 ) }
    dend_3 { pt3dadd( -99.9526, 169.947, 77.9814, 0.67 ) }
    dend_3 { pt3dadd( -103.532, 177.568, 82.7594, 0.67 ) }
    dend_3 { pt3dadd( -108.112, 184.415, 87.9633, 0.67 ) }
    dend_3 { pt3dadd( -110.635, 191.296, 94.3795, 0.67 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 42/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -101.09, -53.8115, 12.1852, 0.67 ) }
    dend_50 { pt3dadd( -106.38, -54.0871, 20.6664, 0.67 ) }
    dend_50 { pt3dadd( -110.713, -55.0723, 29.619, 0.67 ) }
    dend_50 { pt3dadd( -116.221, -56.8358, 37.756, 0.67 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 46/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -101.09, -53.8115, 12.1852, 0.67 ) }
    dend_49 { pt3dadd( -109.902, -58.1777, 11.0851, 0.67 ) }
    dend_49 { pt3dadd( -118.347, -63.0793, 9.64506, 0.67 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 49/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -103.636, -48.6447, 7.74026, 0.67 ) }
    dend_47 { pt3dadd( -113.354, -50.5121, 9.04328, 0.67 ) }
    dend_47 { pt3dadd( -123.126, -51.7598, 10.7081, 0.67 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 52/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -103.636, -48.6447, 7.74026, 0.67 ) }
    dend_46 { pt3dadd( -113.453, -50.3869, 8.2447, 0.67 ) }
    dend_46 { pt3dadd( -123.333, -51.3322, 9.42687, 0.67 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 55/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 13.1865, -122.674, -9.40204, 0.67 ) }
    dend_43 { pt3dadd( 15.2021, -125.978, -10.0478, 0.67 ) }
    dend_43 { pt3dadd( 16.2418, -127.485, -10.4446, 0.67 ) }
    dend_43 { pt3dadd( 17.8983, -130.001, -11.1423, 0.33 ) }
    dend_43 { pt3dadd( 18.7714, -131.283, -11.5943, 0.67 ) }
    dend_43 { pt3dadd( 19.865, -132.785, -12.1785, 0.33 ) }
    dend_43 { pt3dadd( 21.2076, -134.481, -12.9441, 0.67 ) }
    dend_43 { pt3dadd( 22.3467, -135.926, -13.7911, 0.33 ) }
    dend_43 { pt3dadd( 23.1668, -136.832, -14.349, 0.67 ) }
    dend_43 { pt3dadd( 25.2899, -138.692, -15.2649, 0.33 ) }
    dend_43 { pt3dadd( 26.0237, -139.294, -15.4866, 0.67 ) }
    dend_43 { pt3dadd( 27.3856, -140.548, -15.663, 0.33 ) }
    dend_43 { pt3dadd( 28.0311, -141.277, -15.577, 0.67 ) }
    dend_43 { pt3dadd( 29.427, -142.835, -14.9954, 0.33 ) }
    dend_43 { pt3dadd( 31.3803, -145.086, -13.8727, 0.67 ) }
    dend_43 { pt3dadd( 32.7557, -146.587, -13.0676, 0.33 ) }
    dend_43 { pt3dadd( 34.7329, -148.643, -12.2741, 0.67 ) }
    dend_43 { pt3dadd( 36.8175, -150.841, -11.3826, 0.33 ) }
    dend_43 { pt3dadd( 38.8485, -152.956, -10.576, 0.67 ) }
    dend_43 { pt3dadd( 40.2905, -154.354, -10.1175, 0.33 ) }
    dend_43 { pt3dadd( 43.4595, -157.249, -9.61759, 0.33 ) }
    dend_43 { pt3dadd( 47.7117, -160.492, -9.45117, 0.33 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 77/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 13.1865, -122.674, -9.40204, 0.67 ) }
    dend_42 { pt3dadd( 12.9938, -125.992, -9.73175, 0.67 ) }
    dend_42 { pt3dadd( 12.9272, -129.91, -10.0624, 0.67 ) }
    dend_42 { pt3dadd( 12.9342, -132.514, -10.2544, 0.33 ) }
    dend_42 { pt3dadd( 12.9728, -133.455, -10.3527, 0.67 ) }
    dend_42 { pt3dadd( 13.2093, -137.268, -10.3749, 0.33 ) }
    dend_42 { pt3dadd( 13.3536, -138.849, -10.2809, 0.67 ) }
    dend_42 { pt3dadd( 13.7349, -140.499, -10.0169, 0.33 ) }
    dend_42 { pt3dadd( 13.9636, -141.061, -9.81056, 0.67 ) }
    dend_42 { pt3dadd( 15.1967, -143.379, -8.54203, 0.33 ) }
    dend_42 { pt3dadd( 17.9906, -147.854, -5.81311, 0.33 ) }
    dend_42 { pt3dadd( 18.5352, -148.576, -5.32123, 0.67 ) }
    dend_42 { pt3dadd( 20.1773, -150.721, -3.84201, 0.33 ) }
    dend_42 { pt3dadd( 21.6442, -152.549, -2.51204, 0.67 ) }
    dend_42 { pt3dadd( 22.9892, -154.155, -1.31606, 0.33 ) }
    dend_42 { pt3dadd( 24.329, -155.698, -0.157555, 0.67 ) }
    dend_42 { pt3dadd( 25.2453, -156.753, 0.236076, 0.33 ) }
    dend_42 { pt3dadd( 25.5085, -157.107, 0.371433, 0.67 ) }
    dend_42 { pt3dadd( 26.5071, -159.111, 1.11828, 0.33 ) }
    dend_42 { pt3dadd( 29.9203, -167.564, 4.1465, 0.33 ) }
    dend_42 { pt3dadd( 35.2314, -175.235, 6.7143, 0.33 ) }
    dend_42 { pt3dadd( 41.1508, -182.364, 9.65457, 0.33 ) }
    dend_42 { pt3dadd( 47.2655, -188.717, 13.8838, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_42 { pt3dadd( 53.7731, -194.368, 18.6029, 0.33 ) }
    dend_42 { pt3dadd( 61.386, -199.715, 21.8231, 0.33 ) }
    dend_42 { pt3dadd( 68.6345, -205.068, 25.7856, 0.33 ) }
    dend_42 { pt3dadd( 75.8873, -210.288, 29.9337, 0.33 ) }
    dend_42 { pt3dadd( 83.3719, -215.649, 33.4175, 0.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 5/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -47.8525, -151.379, -7.07406, 0.67 ) }
    dend_38 { pt3dadd( -49.2012, -154.276, -8.35457, 0.67 ) }
    dend_38 { pt3dadd( -49.7652, -155.487, -8.89009, 0.67 ) }
    dend_38 { pt3dadd( -52.288, -160.904, -11.2853, 0.67 ) }
    dend_38 { pt3dadd( -53.8655, -164.292, -12.7831, 0.67 ) }
    dend_38 { pt3dadd( -54.4938, -165.641, -13.3796, 0.67 ) }
    dend_38 { pt3dadd( -55.6435, -168.11, -14.4712, 0.67 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 12/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -47.8525, -151.379, -7.07406, 0.67 ) }
    dend_35 { pt3dadd( -47.6398, -153.482, -6.89541, 0.67 ) }
    dend_35 { pt3dadd( -47.3531, -155.354, -6.70625, 0.67 ) }
    dend_35 { pt3dadd( -46.9436, -158.906, -6.16921, 0.67 ) }
    dend_35 { pt3dadd( -46.4469, -164.261, -5.07094, 0.67 ) }
    dend_35 { pt3dadd( -46.2322, -168.195, -4.07521, 0.67 ) }
    dend_35 { pt3dadd( -46.1314, -170.041, -3.60791, 0.67 ) }
    dend_35 { pt3dadd( -46.0422, -172.744, -2.82837, 0.67 ) }
    dend_35 { pt3dadd( -45.9869, -175.925, -1.75409, 0.67 ) }
    dend_35 { pt3dadd( -46.0623, -177.667, -1.00532, 0.67 ) }
    dend_35 { pt3dadd( -46.0382, -179.721, 0.195553, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 23/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -57.1784, 73.5277, -36.7351, 0.67 ) }
    dend_28 { pt3dadd( -56.0329, 72.9113, -38.1158, 0.67 ) }
    dend_28 { pt3dadd( -51.5402, 70.6063, -42.6733, 0.67 ) }
    dend_28 { pt3dadd( -48.708, 69.0932, -45.3119, 0.67 ) }
    dend_28 { pt3dadd( -46.7667, 67.8968, -47.2251, 0.33 ) }
    dend_28 { pt3dadd( -45.0325, 66.792, -48.8677, 0.67 ) }
    dend_28 { pt3dadd( -43.2279, 65.6974, -50.5103, 0.33 ) }
    dend_28 { pt3dadd( -41.7153, 64.7652, -51.8323, 0.33 ) }
    dend_28 { pt3dadd( -38.6806, 62.9124, -54.1587, 0.67 ) }
    dend_28 { pt3dadd( -35.3471, 60.9009, -56.7175, 0.33 ) }
    dend_28 { pt3dadd( -33.7177, 60.025, -58.2001, 0.67 ) }
    dend_28 { pt3dadd( -31.6117, 58.9784, -60.4978, 0.33 ) }
    dend_28 { pt3dadd( -29.534, 57.9412, -62.8963, 0.33 ) }
    dend_28 { pt3dadd( -28.6422, 57.5422, -63.9756, 0.67 ) }
    dend_28 { pt3dadd( -26.4573, 56.7566, -66.624, 0.67 ) }
    dend_28 { pt3dadd( -21.7945, 55.4438, -72.4038, 0.33 ) }
    dend_28 { pt3dadd( -19.4792, 54.773, -75.7718, 0.67 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -57.1784, 73.5277, -36.7351, 0.67 ) }
    dend_27 { pt3dadd( -58.789, 75.5684, -36.8339, 0.67 ) }
    dend_27 { pt3dadd( -59.9811, 77.0974, -36.8018, 0.67 ) }
    dend_27 { pt3dadd( -60.8072, 78.1585, -36.8064, 0.67 ) }
    dend_27 { pt3dadd( -62.0955, 79.9394, -36.837, 0.67 ) }
    dend_27 { pt3dadd( -63.2357, 81.6455, -36.874, 0.33 ) }
    dend_27 { pt3dadd( -63.6198, 82.2532, -36.8882, 0.67 ) }
    dend_27 { pt3dadd( -65.2867, 85.067, -36.9245, 0.33 ) }
    dend_27 { pt3dadd( -65.9231, 86.2303, -36.9808, 1.33 ) }
    dend_27 { pt3dadd( -67.45, 88.9843, -37.1178, 0.33 ) }
    dend_27 { pt3dadd( -68.756, 91.5201, -37.3546, 0.33 ) }
    dend_27 { pt3dadd( -69.0385, 92.0878, -37.4144, 0.67 ) }
    dend_27 { pt3dadd( -69.6561, 93.3716, -37.5661, 0.33 ) }
    dend_27 { pt3dadd( -70.6171, 95.4112, -37.8614, 0.67 ) }
    dend_27 { pt3dadd( -72.3071, 98.9027, -38.2705, 0.33 ) }
    dend_27 { pt3dadd( -73.5606, 101.138, -38.6322, 1.33 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 56/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -3.95191, 157.935, -11.8324, 0.67 ) }
    dend_17 { pt3dadd( -4.26701, 162.856, -13.3219, 0.67 ) }
    dend_17 { pt3dadd( -4.65788, 168.229, -15.0979, 0.67 ) }
    dend_17 { pt3dadd( -5.26177, 175.768, -17.6538, 0.67 ) }
    dend_17 { pt3dadd( -5.55171, 179.8, -18.9794, 0.67 ) }
    dend_17 { pt3dadd( -5.74784, 182.588, -19.8615, 0.67 ) }
    dend_17 { pt3dadd( -6.00298, 185.697, -20.7664, 0.67 ) }
    dend_17 { pt3dadd( -6.3962, 189.5, -21.7189, 0.33 ) }
    dend_17 { pt3dadd( -6.42986, 190.21, -21.8819, 0.67 ) }
    dend_17 { pt3dadd( -6.60132, 192.556, -22.1695, 0.33 ) }
    dend_17 { pt3dadd( -6.71788, 194.249, -22.2042, 0.67 ) }
    dend_17 { pt3dadd( -6.62296, 196.788, -22.0859, 0.33 ) }
    dend_17 { pt3dadd( -6.47035, 197.764, -21.9546, 0.67 ) }
    dend_17 { pt3dadd( -5.76421, 199.899, -21.4916, 0.33 ) }
    dend_17 { pt3dadd( -5.16947, 201.175, -21.2227, 0.67 ) }
    dend_17 { pt3dadd( -4.12223, 202.945, -20.7457, 0.33 ) }
    dend_17 { pt3dadd( -2.28555, 205.571, -19.9613, 0.33 ) }
    dend_17 { pt3dadd( -0.914368, 207.38, -19.4382, 0.67 ) }
    dend_17 { pt3dadd( 0.791747, 209.663, -18.9239, 0.33 ) }
    dend_17 { pt3dadd( 0.791747, 209.663, -18.9239, 0.67 ) }
    dend_17 { pt3dadd( 3.35723, 213.714, -18.4045, 0.33 ) }
    dend_17 { pt3dadd( 4.77287, 216.193, -18.1908, 0.33 ) }
    dend_17 { pt3dadd( 6.16564, 219.014, -18.1738, 0.67 ) }
    dend_17 { pt3dadd( 7.80724, 222.957, -18.4487, 0.33 ) }
    dend_17 { pt3dadd( 8.73002, 225.408, -18.7007, 0.33 ) }
    dend_17 { pt3dadd( 9.72157, 228.094, -19.1068, 0.33 ) }
    dend_17 { pt3dadd( 10.1817, 229.398, -19.4449, 0.67 ) }
    dend_17 { pt3dadd( 11.4489, 233.512, -20.6664, 0.33 ) }
    dend_17 { pt3dadd( 11.6601, 234.328, -20.944, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -3.95191, 157.935, -11.8324, 0.67 ) }
    dend_14 { pt3dadd( -7.00427, 162.902, -10.8291, 0.67 ) }
    dend_14 { pt3dadd( -10.3193, 168.296, -9.73939, 0.67 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 88/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -55.6435, -168.11, -14.4712, 0.33 ) }
    dend_40 { pt3dadd( -59.9526, -171.759, -12.4403, 0.33 ) }
    dend_40 { pt3dadd( -61.5386, -173.452, -11.9875, 0.67 ) }
    dend_40 { pt3dadd( -62.6196, -174.811, -11.852, 0.33 ) }
    dend_40 { pt3dadd( -63.3714, -175.902, -11.818, 0.67 ) }
    dend_40 { pt3dadd( -64.8127, -178.048, -11.6175, 0.67 ) }
    dend_40 { pt3dadd( -66.3048, -180.524, -11.3154, 0.67 ) }
    dend_40 { pt3dadd( -67.6183, -183.141, -11.1424, 0.67 ) }
    dend_40 { pt3dadd( -68.5538, -185.523, -10.8293, 0.67 ) }
    dend_40 { pt3dadd( -69.1796, -187.3, -10.4993, 0.67 ) }
    dend_40 { pt3dadd( -70.3155, -190.278, -9.77847, 0.33 ) }
    dend_40 { pt3dadd( -71.1567, -192.325, -9.11649, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_40 { pt3dadd( -72.2137, -194.553, -8.16296, 0.33 ) }
    dend_40 { pt3dadd( -72.8116, -195.606, -7.61615, 0.67 ) }
    dend_40 { pt3dadd( -73.8496, -197.488, -6.74406, 0.67 ) }
    dend_40 { pt3dadd( -74.7564, -199.081, -6.13494, 0.67 ) }
    dend_40 { pt3dadd( -75.592, -200.487, -5.71197, 0.67 ) }
    dend_40 { pt3dadd( -76.6941, -202.336, -5.19399, 0.67 ) }
    dend_40 { pt3dadd( -78.1306, -204.75, -4.49569, 0.67 ) }
    dend_40 { pt3dadd( -80.0917, -208.28, -3.43422, 0.67 ) }
    dend_40 { pt3dadd( -80.85, -209.627, -3.00864, 0.67 ) }
    dend_40 { pt3dadd( -81.9828, -211.623, -2.42291, 0.67 ) }
    dend_40 { pt3dadd( -83.1685, -213.384, -2.0273, 0.67 ) }
    dend_40 { pt3dadd( -85.0583, -216.039, -1.57385, 0.67 ) }
    dend_40 { pt3dadd( -86.8046, -218.347, -1.27959, 0.67 ) }
    dend_40 { pt3dadd( -88.5107, -220.624, -1.12304, 0.67 ) }
    dend_40 { pt3dadd( -90.8207, -223.977, -1.00215, 0.67 ) }
    dend_40 { pt3dadd( -94.4292, -229.302, -0.984671, 0.67 ) }
    dend_40 { pt3dadd( -96.2358, -231.982, -1.0478, 0.67 ) }
    dend_40 { pt3dadd( -97.89, -234.535, -1.19349, 0.33 ) }
    dend_40 { pt3dadd( -100.4, -238.548, -1.43922, 0.67 ) }
    dend_40 { pt3dadd( -101.672, -240.699, -1.5787, 0.33 ) }
    dend_40 { pt3dadd( -103.066, -243.21, -1.70496, 0.33 ) }
    dend_40 { pt3dadd( -103.457, -244.078, -1.66644, 0.67 ) }
    dend_40 { pt3dadd( -104.279, -246.165, -1.47268, 0.33 ) }
    dend_40 { pt3dadd( -105.011, -248.281, -1.18449, 0.33 ) }
    dend_40 { pt3dadd( -105.889, -250.648, -0.696513, 0.33 ) }
    dend_40 { pt3dadd( -106.482, -252.554, -0.308362, 0.33 ) }
    dend_40 { pt3dadd( -107.142, -256.627, 0.666714, 0.33 ) }
    dend_40 { pt3dadd( -107.368, -259.162, 1.38149, 0.33 ) }
    dend_40 { pt3dadd( -110.888, -268.02, 2.21226, 0.33 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 29/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -55.6435, -168.11, -14.4712, 0.67 ) }
    dend_39 { pt3dadd( -57.2224, -169.43, -14.8819, 0.67 ) }
    dend_39 { pt3dadd( -59.1753, -171.114, -15.2637, 0.67 ) }
    dend_39 { pt3dadd( -61.7401, -173.748, -15.8197, 0.67 ) }
    dend_39 { pt3dadd( -62.8599, -175.087, -16.1554, 0.33 ) }
    dend_39 { pt3dadd( -64.351, -176.987, -16.6505, 0.67 ) }
    dend_39 { pt3dadd( -65.889, -179.024, -17.1767, 0.33 ) }
    dend_39 { pt3dadd( -66.2401, -179.542, -17.3214, 0.33 ) }
    dend_39 { pt3dadd( -67.9221, -182.5, -18.1481, 0.67 ) }
    dend_39 { pt3dadd( -69.1269, -184.652, -18.7272, 0.33 ) }
    dend_39 { pt3dadd( -70.2009, -186.571, -19.3062, 0.33 ) }
    dend_39 { pt3dadd( -70.8573, -187.785, -19.697, 0.67 ) }
    dend_39 { pt3dadd( -71.9706, -189.976, -20.4039, 0.33 ) }
    dend_39 { pt3dadd( -72.6739, -191.359, -20.8187, 0.33 ) }
    dend_39 { pt3dadd( -73.6803, -193.384, -21.3019, 0.33 ) }
    dend_39 { pt3dadd( -73.8085, -193.67, -21.3552, 0.67 ) }
    dend_39 { pt3dadd( -74.5981, -195.766, -21.6855, 0.33 ) }
    dend_39 { pt3dadd( -74.9725, -196.977, -21.8399, 0.67 ) }
    dend_39 { pt3dadd( -75.4073, -198.746, -22.0021, 0.33 ) }
    dend_39 { pt3dadd( -75.955, -200.919, -22.187, 0.33 ) }
    dend_39 { pt3dadd( -76.2857, -202.47, -22.3033, 0.67 ) }
    dend_39 { pt3dadd( -77.0444, -205.93, -22.5365, 0.33 ) }
    dend_39 { pt3dadd( -77.7201, -208.789, -22.7017, 0.67 ) }
    dend_39 { pt3dadd( -78.4182, -211.58, -22.7573, 0.67 ) }
    dend_39 { pt3dadd( -79.1272, -214.488, -22.7016, 0.33 ) }
    dend_39 { pt3dadd( -79.7761, -217.337, -22.5984, 0.33 ) }
    dend_39 { pt3dadd( -79.9263, -218.031, -22.5603, 0.33 ) }
    dend_39 { pt3dadd( -80.4734, -220.383, -22.3686, 0.33 ) }
    dend_39 { pt3dadd( -81.0292, -222.296, -22.0852, 0.67 ) }
    dend_39 { pt3dadd( -81.4128, -223.569, -21.8374, 0.33 ) }
    dend_39 { pt3dadd( -81.5096, -223.866, -21.7876, 0.67 ) }
    dend_39 { pt3dadd( -82.1621, -225.445, -21.5769, 0.33 ) }
    dend_39 { pt3dadd( -82.5445, -226.052, -21.5226, 0.67 ) }
    dend_39 { pt3dadd( -85.3742, -229.41, -21.3576, 0.33 ) }
    dend_39 { pt3dadd( -86.3669, -230.311, -21.3535, 0.67 ) }
    dend_39 { pt3dadd( -88.576, -232.004, -21.3647, 0.33 ) }
    dend_39 { pt3dadd( -89.45, -232.563, -21.4198, 1.33 ) }
    dend_39 { pt3dadd( -94.7306, -235.502, -21.9762, 0.33 ) }
    dend_39 { pt3dadd( -95.1294, -235.725, -22.0513, 0.67 ) }
    dend_39 { pt3dadd( -97.2719, -236.896, -22.6071, 0.33 ) }
    dend_39 { pt3dadd( -97.2719, -236.896, -22.6071, 0.67 ) }
    dend_39 { pt3dadd( -100.613, -239.243, -23.5646, 0.33 ) }
    dend_39 { pt3dadd( -101.334, -239.849, -23.8213, 0.67 ) }
    dend_39 { pt3dadd( -104.067, -242.692, -25.0381, 0.33 ) }
    dend_39 { pt3dadd( -105.74, -244.803, -25.7661, 0.33 ) }
    dend_39 { pt3dadd( -105.974, -245.169, -25.8961, 0.67 ) }
    dend_39 { pt3dadd( -106.917, -246.773, -26.4104, 0.33 ) }
    dend_39 { pt3dadd( -107.111, -247.175, -26.5111, 0.67 ) }
    dend_39 { pt3dadd( -108.075, -249.164, -26.9838, 0.33 ) }
    dend_39 { pt3dadd( -109.396, -252.105, -27.5026, 0.33 ) }
    dend_39 { pt3dadd( -110.19, -254.803, -28.1131, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 80/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -46.0382, -179.721, 0.195553, 0.33 ) }
    dend_37 { pt3dadd( -46.4289, -182.277, 2.20436, 0.33 ) }
    dend_37 { pt3dadd( -46.9484, -184.269, 3.72185, 0.67 ) }
    dend_37 { pt3dadd( -47.374, -185.419, 4.61641, 0.33 ) }
    dend_37 { pt3dadd( -48.2478, -187.387, 6.65311, 0.67 ) }
    dend_37 { pt3dadd( -49.6127, -189.859, 9.64634, 0.33 ) }
    dend_37 { pt3dadd( -50.3039, -190.707, 11.0396, 0.67 ) }
    dend_37 { pt3dadd( -51.1691, -191.224, 12.6593, 0.33 ) }
    dend_37 { pt3dadd( -51.8912, -191.523, 13.9599, 0.67 ) }
    dend_37 { pt3dadd( -55.1428, -192.401, 19.7054, 0.33 ) }
    dend_37 { pt3dadd( -56.1349, -192.514, 21.4023, 0.67 ) }
    dend_37 { pt3dadd( -58.7454, -192.546, 26.0864, 0.67 ) }
    dend_37 { pt3dadd( -60.2515, -192.477, 29.1789, 1.33 ) }
    dend_37 { pt3dadd( -62.7906, -196.261, 37.9929, 1.33 ) }
    dend_37 { pt3dadd( -63.7131, -201.325, 46.4031, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 95/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -46.0382, -179.721, 0.195553, 0.67 ) }
    dend_36 { pt3dadd( -47.4968, -181.196, 0.901528, 0.67 ) }
    dend_36 { pt3dadd( -49.1438, -182.862, 1.69872, 0.67 ) }
    dend_36 { pt3dadd( -50.7085, -184.444, 2.45607, 0.33 ) }
    dend_36 { pt3dadd( -51.9228, -185.672, 3.04377, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_36 { pt3dadd( -54.8166, -188.598, 4.44445, 0.33 ) }
    dend_36 { pt3dadd( -56.5075, -190.308, 5.26286, 0.33 ) }
    dend_36 { pt3dadd( -63.5958, -196.405, 8.19029, 0.33 ) }
    dend_36 { pt3dadd( -71.001, -201.02, 12.8331, 0.33 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 4/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -10.3193, 168.296, -9.73939, 0.67 ) }
    dend_16 { pt3dadd( -11.0442, 170.795, -10.058, 0.67 ) }
    dend_16 { pt3dadd( -11.742, 173.231, -10.4491, 0.67 ) }
    dend_16 { pt3dadd( -13.1835, 178.38, -11.3325, 0.67 ) }
    dend_16 { pt3dadd( -13.5263, 179.68, -11.5524, 0.67 ) }
    dend_16 { pt3dadd( -14.5234, 183.791, -12.2903, 0.67 ) }
    dend_16 { pt3dadd( -14.9546, 185.425, -12.5866, 0.67 ) }
    dend_16 { pt3dadd( -15.5692, 187.783, -13.0651, 0.67 ) }
    dend_16 { pt3dadd( -15.8769, 189.038, -13.2781, 0.67 ) }
    dend_16 { pt3dadd( -16.4305, 191.202, -13.5633, 0.33 ) }
    dend_16 { pt3dadd( -17.2747, 194.488, -13.7619, 0.67 ) }
    dend_16 { pt3dadd( -17.8656, 196.828, -13.6971, 0.67 ) }
    dend_16 { pt3dadd( -18.1212, 197.751, -13.659, 1.33 ) }
    dend_16 { pt3dadd( -19.1999, 201.928, -13.4076, 0.33 ) }
    dend_16 { pt3dadd( -19.6997, 203.752, -13.2428, 1.33 ) }
    dend_16 { pt3dadd( -20.1623, 205.307, -13.1009, 0.33 ) }
    dend_16 { pt3dadd( -20.4815, 206.262, -13.0516, 0.67 ) }
    dend_16 { pt3dadd( -21.5049, 209.016, -13.1346, 0.67 ) }
    dend_16 { pt3dadd( -22.3757, 211.088, -13.355, 0.67 ) }
    dend_16 { pt3dadd( -23.2646, 212.767, -13.7971, 0.33 ) }
    dend_16 { pt3dadd( -24.3147, 214.404, -14.4742, 0.67 ) }
    dend_16 { pt3dadd( -26.1222, 216.59, -15.837, 0.33 ) }
    dend_16 { pt3dadd( -27.6421, 217.843, -17.2034, 0.67 ) }
    dend_16 { pt3dadd( -28.8294, 218.171, -18.8153, 0.67 ) }
    dend_16 { pt3dadd( -30.727, 218.137, -21.7555, 0.67 ) }
    dend_16 { pt3dadd( -31.8894, 217.944, -23.7001, 0.67 ) }
    dend_16 { pt3dadd( -33.0741, 217.528, -25.7839, 0.67 ) }
    dend_16 { pt3dadd( -34.2794, 216.854, -28.0634, 0.33 ) }
    dend_16 { pt3dadd( -37.6005, 214.524, -34.6917, 0.33 ) }
    dend_16 { pt3dadd( -37.9153, 214.286, -35.3253, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 34/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -10.3193, 168.296, -9.73939, 0.67 ) }
    dend_15 { pt3dadd( -12.7936, 170.052, -8.44134, 0.67 ) }
    dend_15 { pt3dadd( -13.8639, 170.888, -7.88729, 0.67 ) }
    dend_15 { pt3dadd( -14.7914, 171.695, -7.43123, 0.67 ) }
    dend_15 { pt3dadd( -18.252, 175.267, -5.48731, 0.67 ) }
    dend_15 { pt3dadd( -20.2148, 177.334, -4.40047, 0.67 ) }
    dend_15 { pt3dadd( -22.3365, 179.656, -3.2589, 0.33 ) }
    dend_15 { pt3dadd( -22.7941, 180.244, -3.095, 2.0 ) }
    dend_15 { pt3dadd( -24.1916, 182.1, -2.93873, 0.67 ) }
    dend_15 { pt3dadd( -27.1179, 185.894, -3.33954, 0.33 ) }
    dend_15 { pt3dadd( -28.6861, 187.879, -3.98103, 0.67 ) }
    dend_15 { pt3dadd( -29.9988, 189.465, -4.67308, 0.67 ) }
    dend_15 { pt3dadd( -35.5382, 195.043, -7.59398, 0.33 ) }
    dend_15 { pt3dadd( -37.2188, 196.6, -8.21066, 0.33 ) }
    dend_15 { pt3dadd( -38.445, 197.627, -8.54557, 1.33 ) }
    dend_15 { pt3dadd( -40.2962, 199.087, -8.86328, 0.67 ) }
    dend_15 { pt3dadd( -41.386, 199.943, -8.9126, 0.67 ) }
    dend_15 { pt3dadd( -44.1211, 201.939, -8.45928, 0.33 ) }
    dend_15 { pt3dadd( -49.1716, 205.508, -6.22761, 1.33 ) }
    dend_15 { pt3dadd( -50.1633, 206.283, -5.69649, 0.67 ) }
    dend_15 { pt3dadd( -51.5147, 207.454, -4.83226, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_56, dend_31, dend_22, dend_9, dend_0, dend_58, dend_57, dend_51, dend_32, dend_30, dend_23, dend_19, dend_10, dend_6, dend_1, dend_60, dend_59, dend_55, dend_52, dend_44, dend_33, dend_29, dend_24, dend_21, dend_20, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, dend_54, dend_53, dend_48, dend_45, dend_41, dend_34, dend_26, dend_25, dend_13, dend_12, dend_4, dend_3, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_38, dend_35, dend_28, dend_27, dend_17, dend_14, dend_40, dend_39, dend_37, dend_36, dend_16, dend_15]}
    ModelViewParmSubset_2 = new SectionList()
    dend_56 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_56, dend_31, dend_22, dend_9, dend_0, dend_58, dend_57, dend_51, dend_32, dend_30, dend_23, dend_19, dend_10, dend_6, dend_1, dend_60, dend_59, dend_55, dend_52, dend_44, dend_33, dend_29, dend_24, dend_21, dend_20, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, dend_54, dend_53, dend_48, dend_45, dend_41, dend_34, dend_26, dend_25, dend_13, dend_12, dend_4, dend_3, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_38, dend_35, dend_28, dend_27, dend_17, dend_14, dend_40, dend_39, dend_37, dend_36, dend_16, dend_15]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_41 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_58 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_57 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_51 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_30 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_19 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_6 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_60 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_59 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_55 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_52 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_44 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_5 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_2 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_54 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_53 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_41 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_25 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_4 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_3 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_43 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_42 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_28 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_40 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_39 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_37 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_16 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_15 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_31 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_22 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_32 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_56 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_23 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_33 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_24 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_26 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_48 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_45 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_27 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_49 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_11 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_50 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_13 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_7 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_38 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_35 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_21 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_20 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_36 OneSecGrp_SectionRef_62.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_56, dend_56, dend_56, dend_56, dend_31, dend_22, dend_22, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, axon_0, axon_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_8, dend_8, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_50, dend_50, dend_50, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_9 nseg = 5
    dend_58 nseg = 5
    dend_57 nseg = 11
    dend_51 nseg = 5
    dend_30 nseg = 9
    dend_19 nseg = 7
    dend_10 nseg = 3
    dend_6 nseg = 7
    dend_1 nseg = 3
    dend_60 nseg = 3
    dend_59 nseg = 3
    dend_55 nseg = 7
    dend_52 nseg = 5
    dend_44 nseg = 3
    dend_5 nseg = 7
    dend_2 nseg = 5
    dend_54 nseg = 7
    dend_53 nseg = 3
    dend_41 nseg = 3
    dend_34 nseg = 5
    dend_25 nseg = 9
    dend_12 nseg = 5
    dend_4 nseg = 5
    dend_3 nseg = 5
    dend_43 nseg = 3
    dend_42 nseg = 7
    dend_28 nseg = 3
    dend_17 nseg = 5
    dend_40 nseg = 5
    dend_39 nseg = 5
    dend_37 nseg = 3
    dend_16 nseg = 3
    dend_15 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_LBC_f0975c96e7_0_0


