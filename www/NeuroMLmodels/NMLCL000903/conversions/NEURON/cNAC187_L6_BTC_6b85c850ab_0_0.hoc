// Cell: cNAC187_L6_BTC_6b85c850ab_0_0
/*
{
  "id" : "cNAC187_L6_BTC_6b85c850ab_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.16881, -12.804, 0.0, 3.44428", "1.99522, -11.5105, 0.0, 5.75363", "1.82164, -10.2169, 0.0, 7.75663", "1.64805, -8.92341, 0.0, 8.89598", "1.47447, -7.62987, 0.0, 9.91596", "1.30088, -6.33633, 0.0, 10.9547", "1.1273, -5.04279, 0.0, 11.8384", "0.953711, -3.74926, 0.0, 12.6846", "0.780126, -2.45572, 0.0, 13.1367", "0.606541, -1.16218, 0.0, 13.4162", "0.432956, 0.13136, 0.0, 13.3909", "0.25937, 1.4249, 0.0, 13.2383", "0.085785, 2.71844, 0.0, 12.8868", "-0.0878002, 4.01197, 0.0, 12.8103", "-0.261385, 5.30551, 0.0, 12.9125", "-0.434971, 6.59905, 0.0, 12.4763", "-0.608556, 7.89259, 0.0, 11.6777", "-0.782141, 9.18613, 0.0, 10.5994", "-0.955726, 10.4797, 0.0, 9.19908", "-1.12931, 11.7732, 0.0, 7.03753", "-1.3029, 13.0667, 0.0, 4.1381" ]
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.21969, -11.987, -4.59, 1.84", "3.21969, -11.987, -4.59, 1.84", "3.50688, -12.8912, -4.64345, 1.84", "4.11949, -14.8201, -4.75747, 2.14", "4.51163, -16.0547, -4.83046, 1.92", "5.01025, -17.6246, -4.92326, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.219697, -12.424, -1.64, 2.43", "0.219697, -12.424, -1.64, 2.43", "-0.481312, -14.0102, -1.8504, 1.92", "-1.06465, -15.3301, -2.02548, 2.14", "-1.42578, -16.1472, -2.13387, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.5397, 11.896, 0.0, 3.02", "1.5397, 11.896, 0.0, 3.02", "1.83063, 12.9319, -0.0660259, 2.36", "2.21896, 14.2134, -0.138424, 2.36", "2.86408, 16.272, -0.242187, 2.29", "3.36063, 17.798, -0.328732, 2.21", "3.8697, 19.3074, -0.418377, 2.29", "4.31655, 20.6076, -0.498384, 2.43", "4.82871, 22.0458, -0.592863, 2.36", "5.25895, 23.1703, -0.659012, 2.51", "5.72063, 24.2674, -0.724195, 3.17", "6.02046, 24.9425, -0.7538, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.3029, 13.0667, 0.0, 0.475067", "-3.29794, 27.9334, 0.0, 0.475067", "-5.29297, 42.8002, 0.0, 0.475067" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "5.01025, -17.6246, -4.92326, 0.88", "4.01086, -17.5799, -5.62243, 0.88", "3.03981, -17.6263, -6.28817, 0.81", "2.07311, -17.7563, -6.96809, 0.81", "0.956653, -17.991, -7.77824, 0.96", "-0.100938, -18.2916, -8.57965, 1.4", "-1.11632, -18.6737, -9.41394, 1.77", "-2.01076, -19.0742, -10.1927, 0.44", "-2.78218, -19.5261, -10.8964, 0.44", "-3.21257, -19.8678, -11.2867, 0.44", "-3.55109, -20.2769, -11.6395, 0.66", "-3.94091, -21.0713, -12.2329, 1.03", "-11.6915, -22.3624, -20.1466, 1.03", "-18.1832, -23.1587, -29.1828, 1.03", "-22.6175, -22.5183, -39.3938, 1.03" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "5.01025, -17.6246, -4.92326, 1.11", "5.67711, -18.8946, -4.59697, 1.11", "6.2287, -20.0811, -4.25854, 1.25", "6.42655, -20.5634, -4.107, 1.7", "6.7586, -21.4452, -3.82747, 1.77", "7.32371, -22.9546, -3.35112, 1.33", "7.76366, -24.129, -2.99328, 1.03", "8.07091, -25.0493, -2.69074, 1.03", "8.38002, -25.998, -2.40892, 1.03", "8.65725, -26.8311, -2.2084, 1.33", "9.09016, -28.0992, -1.99856, 1.33", "9.52991, -29.3234, -1.91561, 0.74", "10.0081, -30.6017, -1.95182, 0.74", "10.5327, -31.9081, -2.03571, 0.88", "10.937, -32.886, -2.1156, 1.33", "11.2421, -33.6336, -2.14114, 2.06", "11.8553, -35.197, -2.12645, 0.96", "12.3507, -36.4601, -2.03071, 0.74", "12.7147, -37.3841, -1.90683, 1.18", "12.9464, -38.0068, -1.7699, 1.55", "13.5336, -39.6078, -1.37148, 0.88", "13.8945, -40.5665, -1.16367, 0.81", "14.419, -41.8872, -0.969983, 0.88", "14.7284, -42.6367, -0.929505, 1.4", "15.0114, -43.3132, -0.969394, 1.4", "15.4529, -44.3666, -1.1327, 0.81", "15.8949, -45.3979, -1.38832, 0.88", "16.2615, -46.2181, -1.62442, 0.52", "16.4841, -46.6875, -1.76897, 0.96", "16.8793, -47.4712, -1.96811, 1.92", "17.3964, -48.4715, -2.14618, 0.74", "17.8966, -49.4168, -2.25769, 0.74", "18.3978, -50.3253, -2.30547, 0.96", "18.9049, -51.1625, -2.32059, 1.55", "19.8412, -52.5449, -2.33023, 0.81", "20.6585, -53.6396, -2.32087, 0.81", "21.4532, -54.6319, -2.30244, 1.25", "22.2419, -55.5889, -2.27697, 1.4", "23.3806, -57.0142, -2.19725, 0.81", "24.322, -58.287, -2.09306, 0.81", "24.8456, -59.0212, -2.01958, 1.18", "25.4426, -59.8295, -1.90555, 1.55", "26.0643, -60.6933, -1.75153, 1.55", "26.7905, -61.8056, -1.54238, 0.59", "27.4314, -62.9771, -1.27271, 0.81", "27.8037, -63.7941, -1.0467, 1.33", "28.3305, -65.068, -0.674975, 0.37", "28.5857, -65.8029, -0.441723, 0.22", "32.9757, -73.6361, 0.400921, 0.22", "39.0678, -80.4018, 0.695997, 0.22", "44.8592, -87.1432, 2.76868, 0.22", "49.4154, -94.3069, 6.04281, 0.22", "54.4006, -100.685, 10.3364, 0.22", "59.077, -107.948, 13.1625, 0.22", "64.0914, -115.386, 14.4402, 0.22", "69.4723, -122.678, 14.624, 0.22", "74.4921, -130.055, 16.2495, 0.22", "79.1501, -137.733, 17.2503, 0.22", "83.6743, -145.527, 17.1567, 0.22", "88.363, -153.056, 15.5332, 0.22", "94.3772, -159.723, 14.0679, 0.22", "99.6041, -166.38, 10.7991, 0.22", "104.622, -173.726, 9.21251, 0.22", "108.168, -181.895, 8.23936, 0.22", "111.984, -189.996, 9.02052, 0.22" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.42578, -16.1472, -2.13387, 0.96", "-2.66089, -16.8293, -2.28442, 0.96", "-3.3355, -17.2238, -2.37522, 0.96", "-4.02488, -17.6515, -2.47668, 1.25", "-4.38827, -17.8937, -2.53462, 1.25", "-5.05594, -18.3608, -2.65528, 0.96", "-5.6878, -18.8129, -2.7845, 0.96", "-6.24448, -19.2254, -2.91135, 1.47", "-6.94605, -19.7018, -3.07833, 1.62", "-7.81399, -20.207, -3.27748, 0.96", "-8.52524, -20.5637, -3.44268, 0.96", "-9.53162, -20.984, -3.67044, 1.11", "-10.2552, -21.2211, -3.82711, 1.4", "-11.5226, -21.5362, -4.09474, 1.33", "-12.5681, -21.7364, -4.32643, 0.96", "-13.6383, -21.9179, -4.57516, 1.18", "-14.1757, -22.0067, -4.70343, 1.18", "-15.5444, -22.2579, -5.04852, 0.88", "-16.3264, -22.4533, -5.26262, 0.88", "-16.857, -22.6432, -5.43321, 1.03", "-17.8332, -23.1224, -5.76724, 1.25", "-18.4566, -23.5002, -5.9791, 0.88", "-19.0564, -23.9293, -6.18005, 0.88", "-19.5926, -24.3574, -6.35419, 1.11", "-20.1983, -24.8286, -6.55335, 1.25", "-20.9831, -25.4109, -6.86261, 0.88", "-21.5709, -25.8547, -7.17873, 1.03", "-21.9828, -26.1931, -7.48192, 1.4", "-22.4747, -26.6282, -7.96656, 1.18", "-23.0599, -27.152, -8.7289, 1.25", "-23.4223, -27.584, -9.59615, 1.4", "-22.7889, -27.6787, -10.4336, 1.4", "-22.0257, -27.569, -10.7973, 1.47", "-20.4741, -27.2388, -11.268, 0.52", "-19.637, -27.0387, -11.3848, 0.52", "-18.7584, -26.8179, -11.4031, 0.59", "-17.2812, -26.465, -11.2654, 0.59", "-16.3846, -26.2705, -11.0957, 0.66", "-15.4296, -26.114, -10.8288, 0.74", "-14.1561, -25.9567, -10.4068, 0.59", "-13.2019, -25.8895, -10.0563, 0.88", "-11.9222, -25.8595, -9.53421, 0.37", "-11.2473, -25.8939, -9.23909, 0.37", "-10.5922, -25.9857, -8.91141, 0.37", "-16.6829, -30.9292, -11.9574, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.42578, -16.1472, -2.13387, 1.4", "-1.28836, -17.4275, -1.94496, 1.4", "-1.1356, -18.7443, -1.77319, 1.03", "-0.980786, -20.0245, -1.60724, 1.33", "-0.80455, -21.5034, -1.40708, 1.25", "-0.636912, -22.8471, -1.20643, 1.25", "-0.477318, -24.1281, -0.993233, 1.11", "-0.342552, -25.3602, -0.79941, 1.84", "-0.250796, -26.1563, -0.687095, 1.62", "-0.061647, -27.676, -0.452359, 1.18", "0.129203, -29.2876, -0.181206, 1.11", "0.312151, -30.9089, 0.102794, 1.25", "0.422705, -31.9809, 0.282563, 1.55", "0.533728, -33.1472, 0.487468, 2.06" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.02046, 24.9425, -0.7538, 2.88", "6.11788, 25.8051, -0.675055, 2.88", "6.24085, 26.8939, -0.575657, 2.58", "6.37982, 28.1243, -0.463323, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.02046, 24.9425, -0.7538, 1.62", "7.05744, 24.5492, -1.37678, 1.62", "8.28162, 23.9483, -2.05301, 0.96", "9.0965, 23.4839, -2.4751, 0.96", "9.99527, 22.8999, -2.92314, 1.11", "10.4779, 22.5586, -3.15487, 1.25", "11.3925, 21.845, -3.59394, 0.96", "12.4816, 20.8229, -4.09059, 0.81", "13.0868, 20.2209, -4.35849, 0.81", "13.6141, 19.7129, -4.5971, 0.81", "14.1052, 19.2639, -4.85535, 0.88", "14.9213, 18.5887, -5.32834, 0.74", "15.7932, 17.9643, -5.86671, 0.59", "16.5651, 17.483, -6.34507, 0.74", "17.1121, 17.167, -6.67198, 0.66", "17.6962, 16.835, -6.98139, 0.66", "18.5442, 16.3468, -7.37726, 0.96", "19.4316, 15.8448, -7.73184, 1.11", "20.5362, 15.1706, -8.12316, 0.81", "21.4239, 14.5676, -8.41581, 0.81", "22.2784, 13.9422, -8.70149, 0.52", "22.8256, 13.502, -8.91575, 0.52", "23.2193, 13.139, -9.13978, 0.52", "23.6849, 12.6293, -9.56217, 0.74", "24.1764, 12.0003, -10.2226, 0.96", "24.4658, 11.5726, -10.7206, 1.03", "24.8123, 11.0171, -11.4104, 0.81", "25.2598, 10.345, -12.2451, 0.52", "25.6281, 9.74972, -12.976, 0.88", "25.8132, 9.45298, -13.3477, 1.11", "26.2134, 8.86152, -14.0965, 0.81", "26.6641, 8.31979, -14.7587, 0.22", "27.3458, 7.7146, -15.4356, 0.15", "33.1648, 2.72932, -19.1254, 0.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-5.29297, 42.8002, 0.0, 0.15", "-7.28801, 57.6669, 0.0, 0.15", "-9.28305, 72.5336, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-22.6175, -22.5183, -39.3938, 0.15", "-31.0069, -23.438, -47.9081, 0.15", "-39.9868, -23.6109, -55.8544, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-22.6175, -22.5183, -39.3938, 0.59", "-25.944, -23.2286, -46.9909, 0.15", "-29.305, -23.1643, -54.6064, 0.15", "-34.3468, -22.0385, -61.1178, 0.15", "-40.386, -21.7597, -66.8376, 0.15", "-45.4966, -22.1256, -73.3993, 0.15", "-50.5478, -24.0027, -79.7241, 0.15", "-55.9564, -25.2247, -85.9268, 0.15", "-61.0946, -27.0627, -92.1938, 0.15", "-66.4687, -28.9582, -98.2406, 0.15", "-72.8012, -29.538, -103.613, 0.15", "-78.5845, -30.0222, -109.582, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "111.984, -189.996, 9.02052, 0.15", "117.469, -197.091, 9.16984, 0.15", "121.726, -204.894, 9.73617, 0.15", "124.995, -213.006, 11.32, 0.15", "127.945, -221.139, 13.3642, 0.15", "131.808, -229.053, 14.695, 0.15", "136.199, -236.553, 16.854, 0.15", "141.553, -242.79, 20.6815, 0.15", "146.883, -249.848, 22.2861, 0.15", "151.463, -257.272, 24.341, 0.15", "156.698, -264.516, 24.9983, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "111.984, -189.996, 9.02052, 0.59", "115.954, -199.197, 9.91288, 0.15", "120.571, -208.038, 8.87676, 0.15", "124.982, -216.436, 5.73144, 0.15", "127.585, -225.319, 2.13171, 0.15", "131.868, -233.845, -0.827888, 0.15", "135.65, -242.694, -3.43934, 0.15", "140.875, -251.2, -4.61103, 0.15", "146.604, -259.355, -6.06599, 0.15", "150.421, -268.589, -6.64199, 0.15", "153.819, -277.808, -8.33837, 0.15", "158.01, -286.82, -9.50744, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-16.6829, -30.9292, -11.9574, 0.15", "-21.4115, -34.0644, -12.7442, 0.15", "-25.6313, -37.8001, -13.5182, 0.15", "-29.2603, -42.106, -13.1503, 0.15", "-32.8312, -46.4303, -13.7823, 0.15", "-36.3938, -50.6176, -15.1114, 0.15", "-38.98, -55.5283, -15.8008, 0.15", "-41.7017, -60.3259, -16.7906, 0.15", "-44.2728, -65.2854, -16.859, 0.15", "-47.2957, -69.9851, -16.3697, 0.15", "-50.1933, -74.6143, -15.0678, 0.15", "-52.4629, -79.621, -14.1071, 0.15", "-55.0266, -84.5825, -14.2571, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-16.6829, -30.9292, -11.9574, 0.59", "-19.2637, -36.6004, -17.3641, 0.15", "-21.0511, -42.631, -22.6737, 0.15", "-23.4042, -48.1316, -28.3765, 0.15", "-24.3676, -53.9464, -34.1598, 0.15", "-24.5536, -59.9256, -39.8447, 0.15", "-25.6246, -66.18, -45.072, 0.15", "-25.6168, -72.8805, -49.7872, 0.15", "-25.7923, -79.9149, -53.9155, 0.15", "-24.5058, -86.6538, -58.4085, 0.15", "-23.9342, -93.3496, -63.1058, 0.15", "-22.8186, -99.5556, -68.4189, 0.15", "-21.289, -106.244, -72.9228, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "0.533728, -33.1472, 0.487468, 0.44", "-0.045235, -34.5921, 1.59085, 0.44", "-0.306872, -35.1959, 2.12113, 0.44", "-0.613014, -36.0063, 2.98224, 0.44", "-0.805647, -36.7083, 3.80234, 0.66", "-0.916197, -37.3581, 4.50062, 0.66", "-0.952426, -37.8221, 4.92971, 0.44", "-0.929188, -38.4452, 5.49057, 0.52", "-0.785984, -39.3532, 6.12983, 0.66", "-0.538969, -40.3498, 6.59066, 0.66", "-0.203278, -41.5072, 6.98478, 0.88", "0.137463, -42.6966, 7.30381, 1.11", "0.421833, -43.8209, 7.54395, 0.74", "0.574468, -44.6578, 7.64147, 0.29", "0.649679, -45.5161, 7.6586, 0.22", "0.654097, -46.0263, 7.63984, 0.22", "0.600007, -46.6973, 7.61189, 0.22", "0.514166, -47.3299, 7.57585, 0.22", "0.322936, -48.6888, 7.48844, 0.29", "0.215471, -49.7412, 7.41752, 0.52", "0.183823, -50.485, 7.36223, 0.52", "0.227659, -51.5059, 7.27788, 0.44", "0.41648, -53.0179, 7.159, 0.29", "0.552729, -53.756, 7.11405, 0.66", "0.680274, -54.2733, 7.12115, 1.77", "0.942016, -55.2101, 7.19346, 1.18", "1.25245, -56.405, 7.37419, 0.52", "1.51631, -57.5178, 7.61043, 0.52", "1.67904, -58.2379, 7.79848, 0.81", "1.95091, -59.3143, 8.0846, 0.96", "2.22561, -60.253, 8.34995, 0.52", "2.64202, -61.5227, 8.76375, 0.22", "2.86228, -62.1177, 8.98515, 0.29", "3.18795, -62.8973, 9.31338, 0.29", "3.65266, -64.0072, 9.79855, 0.22", "3.96462, -64.7337, 10.131, 0.37", "4.27889, -65.4838, 10.4859, 0.74", "4.54251, -66.2042, 10.8347, 1.03", "4.74447, -67.02, 11.2226, 1.25", "4.95913, -68.6185, 11.9684, 0.37", "5.02508, -69.5491, 12.4058, 1.18", "5.07547, -70.4086, 12.7827, 2.65", "5.18209, -71.8112, 13.335, 2.21", "5.33277, -73.1693, 13.8247, 0.96", "5.50794, -74.2903, 14.1903, 0.29", "5.66661, -75.0845, 14.4419, 0.29", "5.8111, -75.8256, 14.675, 0.66", "5.98018, -76.7115, 14.998, 0.44", "6.13106, -77.4993, 15.313, 0.22", "6.21272, -77.8947, 15.4829, 0.22", "6.2948, -78.3757, 15.6794, 0.22", "6.39299, -79.357, 16.051, 0.29", "6.44817, -80.0987, 16.3121, 0.29", "6.49575, -80.6075, 16.4672, 0.22", "6.55633, -81.1943, 16.611, 0.22", "6.64373, -81.709, 16.7158, 0.81", "6.7678, -82.1948, 16.7897, 1.55", "7.12369, -83.2436, 16.9283, 1.84", "7.72588, -84.814, 17.111, 0.15", "7.91108, -85.3077, 17.1823, 0.15", "8.06547, -85.72, 17.2465, 0.15", "8.23804, -86.219, 17.3304, 0.15", "8.47411, -86.9588, 17.4568, 0.88", "8.66094, -87.5736, 17.5563, 1.92", "9.04173, -88.7935, 17.7069, 1.99", "9.14481, -89.1057, 17.7367, 1.99", "9.58248, -90.548, 17.8395, 0.15", "9.68852, -90.9474, 17.8563, 0.15", "9.77935, -91.3589, 17.8575, 0.37", "9.84803, -91.7776, 17.8501, 0.37", "9.98554, -92.7707, 17.8334, 0.15", "10.0521, -93.3878, 17.8421, 0.15", "10.1324, -94.1142, 17.8684, 0.22", "10.1728, -94.5379, 17.9033, 0.22", "10.2111, -95.3041, 17.9993, 0.15", "10.2173, -95.8902, 18.092, 0.15", "10.2145, -96.3541, 18.1766, 0.59", "10.2387, -96.8463, 18.2689, 1.03", "10.3217, -97.607, 18.3868, 0.22", "10.4521, -98.4068, 18.502, 0.07", "10.5611, -98.9193, 18.5794, 0.07", "10.6463, -99.242, 18.6342, 0.66", "10.9216, -100.082, 18.816, 0.96", "11.5166, -101.598, 19.1783, 0.22", "11.9087, -102.418, 19.3965, 0.22", "12.2101, -102.947, 19.5687, 0.44", "12.5787, -103.544, 19.785, 1.25", "12.9268, -104.064, 19.9772, 1.92", "13.4347, -104.716, 20.2246, 1.11", "13.9873, -105.336, 20.4784, 0.22", "14.4201, -105.822, 20.6601, 0.22", "14.8906, -106.397, 20.8521, 0.52", "15.4449, -107.197, 21.1048, 0.22", "15.951, -108.067, 21.403, 0.22", "16.305, -108.77, 21.671, 0.22", "16.4601, -109.129, 21.8143, 0.81", "16.7961, -109.982, 22.1791, 1.77", "17.3915, -111.603, 22.9372, 0.37", "17.6976, -112.452, 23.3494, 0.15", "17.8336, -112.843, 23.5314, 0.15", "18.0068, -113.329, 23.7442, 0.37", "18.2288, -113.922, 24.0003, 1.18", "18.5068, -114.621, 24.2915, 1.55", "18.9355, -115.695, 24.6834, 0.81", "19.201, -116.449, 24.9173, 0.15", "19.3473, -116.936, 25.064, 0.22", "19.5531, -117.67, 25.2742, 0.15", "19.7229, -118.346, 25.4596, 0.96", "19.9117, -119.094, 25.6618, 1.18", "20.2114, -120.246, 25.9576, 0.22", "20.3744, -120.788, 26.087, 0.22", "20.6109, -121.467, 26.2427, 0.37", "20.6847, -121.656, 26.2805, 0.37", "20.9777, -122.34, 26.4114, 0.22", "21.1324, -122.656, 26.4766, 0.22", "21.4487, -123.196, 26.5602, 0.81" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.533728, -33.1472, 0.487468, 1.84", "0.348828, -34.2315, 0.0259413, 1.84", "0.191169, -35.5319, -0.481881, 1.55", "0.0803365, -36.935, -0.979164, 1.55", "-0.0207355, -38.4017, -1.44365, 1.55", "-0.12457, -39.8582, -1.84456, 1.47", "-0.22372, -41.1342, -2.16252, 0.96", "-0.306669, -42.1521, -2.36665, 1.55", "-0.483678, -43.9787, -2.62467, 1.25", "-0.689021, -45.8663, -2.82939, 1.47", "-0.928812, -47.8124, -2.98912, 1.03", "-1.12774, -49.1278, -3.07609, 1.18", "-1.46064, -50.9842, -3.16234, 1.99", "-1.80759, -52.5605, -3.20986, 1.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "6.37982, 28.1243, -0.463323, 2.14", "7.66599, 29.714, -0.097398, 2.14" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.37982, 28.1243, -0.463323, 1.47", "5.99657, 29.4424, 0.734822, 1.47", "5.67703, 30.2336, 1.47124, 1.18", "5.25793, 30.9602, 2.1938, 1.18", "4.6654, 31.7085, 3.01851, 1.47", "4.05716, 32.2545, 3.70515, 1.47", "3.69352, 32.4599, 4.03206, 1.47", "2.75573, 32.5929, 4.57975, 1.47", "1.4921, 32.4204, 5.04429, 1.03", "0.732423, 32.1757, 5.21901, 1.62", "0.0370072, 31.8585, 5.32417, 1.77", "-0.848958, 31.3413, 5.42806, 1.77" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "33.1648, 2.72932, -19.1254, 0.15", "39.7938, -2.51041, -23.0496, 0.15", "46.8265, -7.14532, -27.113, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "33.1648, 2.72932, -19.1254, 0.59", "39.3819, -2.62033, -24.4528, 0.15", "44.3971, -9.0136, -29.7596, 0.15", "47.6249, -16.2358, -35.2495, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-39.9868, -23.6109, -55.8544, 0.15", "-50.3614, -19.7157, -60.8736, 0.15", "-58.6465, -14.553, -68.03, 0.15", "-65.1257, -7.63864, -75.3951, 0.15", "-73.1948, -1.52665, -81.956, 0.15", "-81.9887, 3.49696, -88.6051, 0.15", "-90.3782, 8.11308, -96.0429, 0.15", "-97.4562, 13.7517, -104.031, 0.15", "-104.547, 20.3503, -111.159, 0.15", "-110.623, 25.585, -120.189, 0.15", "-118.403, 29.8635, -128.454, 0.15", "-127.595, 35.3081, -134.146, 0.15", "-136.86, 40.1762, -140.269, 0.15", "-145.362, 46.7127, -145.767, 0.15", "-155.015, 52.5486, -150.139, 0.15", "-165.562, 58.1176, -152.318, 0.15", "-175.373, 65.1401, -152.546, 0.15", "-185.268, 71.874, -154.138, 0.15", "-195.748, 77.9293, -153.541, 0.15", "-206.083, 84.2114, -152.963, 0.15", "-215.978, 90.8735, -154.841, 0.15", "-225.216, 98.3445, -156.728, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-39.9868, -23.6109, -55.8544, 0.59", "-43.5937, -26.7383, -63.2359, 0.15", "-48.1275, -29.1209, -70.4114, 0.15", "-51.8985, -32.2126, -77.7275, 0.15", "-55.3624, -35.2548, -85.2158, 0.15", "-58.4122, -37.6019, -93.1465, 0.15", "-61.8045, -40.705, -100.64, 0.15", "-64.3013, -43.637, -108.548, 0.15", "-67.5243, -46.3361, -116.285, 0.15", "-69.1261, -50.7226, -123.66, 0.15", "-69.6314, -55.3755, -131.009, 0.15", "-70.0118, -60.1761, -138.259, 0.15", "-71.4877, -65.2105, -145.19, 0.15", "-71.5139, -70.9351, -151.664, 0.15", "-72.5271, -77.6042, -156.954, 0.15", "-74.9075, -84.0452, -162.124, 0.15", "-77.2441, -90.094, -167.812, 0.15", "-78.5776, -95.2758, -174.65, 0.15", "-79.9216, -100.46, -181.485, 0.15", "-79.617, -107.032, -186.985, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-78.5845, -30.0222, -109.582, 0.15", "-83.8707, -31.0974, -115.129, 0.15", "-89.703, -32.2509, -120.083, 0.15", "-96.1544, -33.1676, -124.259, 0.15", "-101.857, -32.928, -129.477, 0.15", "-107.846, -31.8792, -134.225, 0.15", "-114.411, -32.4836, -138.276, 0.15", "-121.064, -33.6664, -142.048, 0.15", "-127.016, -35.6783, -146.556, 0.15", "-132.585, -39.0253, -150.693, 0.15", "-137.993, -42.5442, -154.889, 0.15", "-142.734, -47.5112, -158.221, 0.15", "-147.094, -52.2985, -162.255, 0.15", "-151.228, -57.1172, -166.472, 0.15", "-155.093, -62.801, -169.659, 0.15", "-158.391, -69.2408, -171.736, 0.15", "-162.036, -75.3077, -174.375, 0.15", "-164.346, -82.0896, -176.51, 0.15", "-165.907, -88.54, -179.925, 0.15", "-166.127, -95.535, -182.315, 0.15", "-167.877, -102.421, -184.561, 0.15", "-170.101, -109.458, -185.703, 0.15", "-171.783, -116.378, -187.879, 0.15", "-174.65, -122.88, -190.3, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-78.5845, -30.0222, -109.582, 0.59", "-82.5852, -29.9103, -115.996, 0.15", "-86.229, -29.9067, -122.62, 0.15", "-90.321, -30.7118, -128.921, 0.15", "-93.6155, -32.2672, -135.52, 0.15", "-96.6732, -32.9542, -142.391, 0.15", "-98.2753, -33.9441, -149.684, 0.15", "-101.036, -33.9523, -156.72, 0.15", "-104.269, -33.8948, -163.553, 0.15", "-107.519, -34.2367, -170.366, 0.15", "-109.416, -35.0569, -177.617, 0.15", "-111.159, -37.3693, -184.529, 0.15", "-112.758, -38.7048, -191.758, 0.15", "-113.916, -39.4797, -199.162, 0.15", "-115.133, -40.1792, -206.565, 0.15", "-115.85, -40.1603, -214.078, 0.15", "-117.768, -39.8712, -221.382, 0.15", "-120.587, -39.4344, -228.383, 0.15", "-121.952, -39.5788, -235.805, 0.15", "-123.908, -40.7369, -242.987, 0.15", "-126.701, -42.4618, -249.762, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-55.0266, -84.5825, -14.2571, 0.15", "-60.6006, -92.9541, -14.6133, 0.15", "-64.9698, -101.967, -14.4146, 0.15", "-68.6245, -111.237, -14.9297, 0.15", "-72.4088, -120.42, -13.5713, 0.15", "-75.8148, -129.702, -11.9354, 0.15", "-77.4744, -139.479, -11.0103, 0.15", "-79.429, -149.137, -12.1975, 0.15", "-82.2674, -158.235, -15.0423, 0.15", "-85.9904, -166.491, -19.2784, 0.15", "-89.3045, -173.638, -25.5343, 0.15", "-93.3143, -179.767, -32.5324, 0.15", "-97.6154, -185.741, -39.5102, 0.15", "-103.06, -190.877, -46.444, 0.15", "-108.192, -194.069, -54.7842, 0.15", "-113.249, -197.154, -63.2149, 0.15", "-116.402, -200.989, -72.1908, 0.15", "-118.324, -205.68, -81.0481, 0.15", "-120.216, -210.212, -90.0051, 0.15", "-123.696, -214.57, -98.5825, 0.15", "-127.785, -218.115, -107.319, 0.15", "-133.433, -221.357, -115.3, 0.15", "-139.374, -224.448, -123.138, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-55.0266, -84.5825, -14.2571, 0.59", "-61.217, -93.7823, -14.546, 0.15", "-67.2675, -102.998, -15.663, 0.15", "-74.6191, -111.345, -14.5353, 0.15", "-81.6268, -119.941, -13.2756, 0.15", "-89.3448, -127.888, -11.5143, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-21.289, -106.244, -72.9228, 0.15", "-21.0354, -115.932, -79.6661, 0.15", "-22.7048, -125.956, -85.591, 0.15", "-23.1497, -135.471, -92.5899, 0.15", "-25.3985, -145.808, -97.6462, 0.15", "-28.8337, -156.468, -100.934, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-21.289, -106.244, -72.9228, 0.59", "-22.4228, -111.764, -78.7047, 0.15", "-23.4855, -117.389, -84.3872, 0.15", "-24.8098, -124.161, -88.3593, 0.15", "-26.1636, -131.532, -90.8252, 0.15", "-26.4126, -139.28, -92.0474, 0.15", "-26.1954, -147.094, -92.6032, 0.15", "-25.0187, -154.851, -92.8148, 0.15", "-25.3359, -162.643, -92.2717, 0.15", "-24.1322, -170.391, -92.0752, 0.15", "-23.7814, -178.16, -93.1466, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "21.4487, -123.196, 26.5602, 0.22", "21.1904, -123.714, 26.5784, 0.22", "20.8449, -124.407, 26.6029, 0.22", "20.5449, -125.009, 26.6241, 0.22", "20.0098, -126.083, 26.662, 0.22", "19.7683, -126.567, 26.6791, 0.15", "19.5275, -127.05, 26.6961, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "21.4487, -123.196, 26.5602, 1.18", "21.803, -124.06, 26.9203, 1.18", "22.1854, -125.06, 27.3006, 0.29", "22.5144, -125.979, 27.647, 0.15", "22.6883, -126.504, 27.8411, 0.15", "22.8465, -127.02, 28.0273, 0.29", "23.0411, -127.755, 28.298, 0.66", "23.1981, -128.518, 28.5842, 1.4", "23.3182, -129.65, 29.0078, 0.22", "23.3488, -130.438, 29.2994, 0.22", "23.3483, -130.782, 29.424, 0.22", "23.3303, -131.517, 29.6664, 0.22", "23.3002, -132.151, 29.86, 0.66", "23.2354, -132.943, 30.085, 0.15", "23.1427, -133.614, 30.2714, 0.15", "23.0016, -134.433, 30.5018, 0.52", "22.8217, -135.446, 30.7974, 0.29", "22.7519, -135.849, 30.9172, 0.15", "22.6823, -136.257, 31.0477, 0.15", "22.5423, -137.005, 31.2813, 0.15", "22.4343, -137.509, 31.4349, 0.29", "22.293, -138.201, 31.654, 1.11", "22.1718, -138.903, 31.883, 1.77", "22.0579, -139.88, 32.1956, 1.77", "21.9887, -140.9, 32.522, 1.33", "21.9336, -142.319, 32.9662, 0.15", "21.9157, -143.264, 33.2713, 0.22", "21.9098, -143.943, 33.4977, 0.66", "21.9099, -144.598, 33.7224, 0.81", "21.9395, -145.814, 34.149, 0.15", "22.0067, -146.528, 34.4008, 0.22", "22.1207, -147.13, 34.6101, 0.22", "22.2985, -147.901, 34.8635, 0.22", "22.413, -148.353, 35.0034, 0.66", "22.6875, -149.237, 35.2614, 1.4", "23.1815, -150.478, 35.6297, 0.88", "23.5148, -151.252, 35.864, 0.15", "23.8426, -151.995, 36.0827, 0.15", "24.088, -152.533, 36.2367, 0.22", "24.4672, -153.377, 36.4861, 0.29", "24.7341, -154.038, 36.6805, 0.15", "25.0013, -154.95, 36.9383, 0.15", "25.0598, -155.268, 37.0296, 0.15", "25.1393, -155.936, 37.2424, 0.22", "25.1916, -156.908, 37.5724, 0.22", "25.1948, -157.329, 37.7198, 0.22", "25.199, -158.215, 38.0233, 0.37", "25.2313, -159.119, 38.3396, 0.22", "25.2672, -159.726, 38.543, 0.88", "25.3974, -161.081, 38.9664, 2.06", "25.6055, -162.662, 39.365, 0.59", "25.7899, -163.732, 39.5579, 0.22", "25.9409, -164.438, 39.6252, 0.22", "26.0829, -165.062, 39.6561, 0.22", "26.2796, -165.921, 39.6568, 0.59", "26.5773, -167.136, 39.5654, 0.07", "26.7699, -167.871, 39.4143, 0.15", "26.9969, -168.74, 39.1483, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.80759, -52.5605, -3.20986, 0.74", "-1.87823, -54.4386, -3.59019, 0.74", "-1.94144, -56.111, -3.9585, 0.74", "-2.004, -57.0568, -4.17471, 0.81", "-2.16828, -58.6168, -4.55814, 0.88", "-2.29663, -59.6191, -4.8118, 0.81", "-2.4968, -60.9133, -5.15385, 1.18", "-2.67606, -61.8753, -5.43832, 1.18", "-2.97438, -63.0536, -5.80664, 1.03", "-3.34576, -64.3038, -6.22605, 1.11", "-3.68846, -65.2812, -6.56823, 0.74", "-4.14252, -66.3804, -6.95208, 1.11", "-4.56114, -67.3156, -7.26669, 0.81", "-5.06194, -68.4185, -7.61399, 0.81", "-5.21777, -68.821, -7.72337, 0.81", "-5.47012, -69.6706, -7.91041, 0.88", "-5.67307, -70.6116, -8.0537, 0.88", "-5.90578, -72.1661, -8.19118, 1.11", "-5.99421, -72.9077, -8.20672, 1.33", "-6.21222, -74.7013, -8.09787, 0.74", "-6.31978, -75.7653, -8.00619, 0.74", "-6.41552, -77.3301, -7.82772, 0.88", "-6.44604, -78.2509, -7.68537, 1.25", "-6.48843, -79.2007, -7.49651, 1.03", "-6.64005, -80.4695, -7.16948, 0.74", "-6.80757, -90.5505, -7.44198, 0.74", "-8.05745, -100.526, -6.47742, 0.74", "-9.02483, -110.473, -4.99947, 0.74", "-9.98117, -119.977, -1.56958, 0.74", "-9.96747, -129.541, 1.80837, 0.74", "-10.7633, -138.806, 5.93617, 0.74", "-13.1012, -148.348, 8.47149, 0.74", "-13.2966, -158.204, 10.7234, 0.74", "-12.9885, -167.98, 13.3225, 0.74", "-12.7272, -177.809, 15.691, 0.74", "-12.3484, -187.662, 17.9339, 0.74", "-12.7401, -197.221, 21.3039, 0.74", "-15.317, -206.164, 25.4927, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-1.80759, -52.5605, -3.20986, 1.03", "-1.49327, -53.6206, -2.72188, 1.03", "-1.08048, -55.1892, -2.07066, 1.03", "-0.827211, -56.4002, -1.6686, 1.03", "-0.482067, -58.189, -1.19678, 1.03", "-0.186821, -59.6968, -0.899763, 0.96", "0.0490475, -60.7631, -0.734935, 0.96", "0.266333, -61.6569, -0.660555, 0.96", "0.961256, -64.0812, -0.640267, 0.88", "1.47892, -65.5103, -0.727912, 0.88", "2.3632, -67.3561, -0.944469, 0.88", "3.48176, -69.1699, -1.23865, 0.81", "4.41655, -70.3885, -1.47217, 0.81", "5.18485, -71.2099, -1.63758, 0.81", "6.36706, -72.2586, -1.86453, 0.88", "7.61674, -73.3394, -2.05257, 1.03", "8.46108, -74.1439, -2.12998, 1.03", "9.51878, -75.386, -2.16414, 0.81", "10.2734, -76.555, -2.13192, 1.4", "10.6395, -77.2892, -2.08867, 1.92", "11.3654, -79.2544, -1.99043, 1.4", "12.0318, -81.5733, -1.97595, 0.88", "12.4222, -83.2027, -2.0351, 0.88", "12.7778, -84.9011, -2.17082, 1.03", "12.9737, -85.8462, -2.2888, 1.03", "13.3054, -87.3833, -2.54826, 0.81", "13.6197, -88.7977, -2.87979, 1.18", "13.7004, -89.225, -2.99131, 1.18", "13.7939, -90.0641, -3.17456, 0.74", "13.7727, -91.1627, -3.28035, 0.44", "13.6823, -91.8202, -3.26253, 0.44", "13.462, -92.7908, -3.13661, 0.66", "13.1098, -94.082, -2.91643, 0.81", "12.7836, -95.2508, -2.71398, 0.96", "12.2819, -97.0788, -2.40751, 1.33", "11.9645, -98.2864, -2.21775, 0.88", "11.6897, -99.4716, -2.03674, 1.11", "11.4247, -100.86, -1.81081, 1.18", "11.21, -102.177, -1.57762, 1.18", "10.9352, -104.017, -1.22181, 0.52", "10.7026, -105.925, -0.811642, 0.52", "10.5467, -107.349, -0.488542, 0.74", "10.4187, -108.674, -0.178827, 0.96", "10.3078, -109.913, 0.0919747, 1.62", "10.2017, -111.149, 0.32854, 1.62", "10.0765, -112.693, 0.562822, 1.33", "9.98378, -113.959, 0.686364, 0.44", "9.89664, -114.711, 0.730925, 0.59", "9.64865, -116.12, 0.825808, 0.59", "9.29333, -117.635, 0.98127, 0.88", "8.94375, -118.804, 1.15111, 1.25", "8.69185, -119.517, 1.29282, 2.21", "8.06989, -121.182, 1.71302, 1.84", "7.35664, -123.064, 2.26791, 1.33", "6.73263, -124.786, 2.8565, 0.66", "6.44113, -125.691, 3.16851, 0.44", "6.16467, -126.664, 3.49316, 0.44", "5.91336, -127.703, 3.81664, 0.81", "5.68474, -129.022, 4.15357, 1.11", "5.51265, -130.491, 4.42912, 0.74", "5.37108, -132.078, 4.66557, 0.37", "5.25828, -133.301, 4.81364, 0.37", "5.17365, -134.074, 4.90555, 0.74", "5.01832, -135.245, 5.06296, 0.88", "4.7622, -136.958, 5.34643, 0.44", "4.62095, -137.754, 5.53412, 0.44", "4.46763, -138.519, 5.81463, 0.59", "4.26067, -139.364, 6.244, 0.96", "4.06995, -140.052, 6.68278, 1.25", "3.8722, -140.771, 7.22526, 1.25", "3.67572, -141.63, 7.91954, 0.81", "3.59783, -142.312, 8.41358, 1.11", "3.60559, -143.488, 9.01667, 0.22", "3.64093, -144.027, 9.17002, 0.22", "3.71563, -144.879, 9.3216, 0.22", "3.76355, -145.649, 9.41576, 0.74", "3.78856, -146.424, 9.4982, 1.18", "3.79133, -148.191, 9.71375, 0.66", "3.74298, -149.72, 9.9671, 0.37", "3.57824, -151.065, 10.3112, 0.66", "3.38591, -152.191, 10.7019, 0.66", "3.23571, -153.05, 11.0661, 1.25", "3.11692, -153.862, 11.473, 2.06", "3.00987, -155.056, 12.1486, 2.21", "2.93659, -157.288, 13.444, 1.03", "2.94507, -158.565, 14.1509, 0.59", "2.98558, -159.893, 14.7883, 0.37", "3.04262, -160.878, 15.2045, 0.66", "3.15113, -162.07, 15.6453, 0.37", "3.3374, -163.359, 16.0695, 0.29", "3.49743, -164.198, 16.3004, 0.52", "3.75229, -165.655, 16.6965, 0.22", "3.9303, -166.397, 16.9604, 0.22", "4.22124, -167.205, 17.3439, 0.29", "4.61089, -167.942, 17.8213, 0.96", "5.05708, -168.652, 18.3723, 1.77", "5.49724, -169.353, 18.9153, 1.77", "6.42843, -170.985, 20.0254, 0.29", "6.7614, -171.702, 20.3806, 0.29", "6.97686, -172.335, 20.5902, 0.29", "7.20178, -173.307, 20.7682, 0.29", "7.35967, -174.59, 20.8758, 0.29", "7.37294, -176.097, 20.9045, 0.29", "7.30208, -176.843, 20.9039, 0.29", "7.10697, -177.949, 20.9423, 0.29", "6.79788, -179.247, 21.0761, 0.29", "6.43663, -180.6, 21.3293, 0.29", "6.19841, -181.448, 21.5383, 1.03", "5.90894, -182.436, 21.8298, 1.92", "5.42985, -184.1, 22.3559, 3.02", "4.92254, -185.965, 22.98, 2.36", "4.37802, -188.111, 23.7311, 0.22", "4.20575, -188.906, 24.0162, 0.22", "4.02552, -189.98, 24.4014, 0.22", "3.96772, -190.458, 24.5676, 0.52", "3.92027, -191.241, 24.8399, 0.96", "3.87992, -192.393, 25.2299, 0.44", "3.83265, -193.831, 25.6951, 0.22", "3.80127, -194.755, 25.9772, 0.37", "3.76354, -195.841, 26.2858, 0.81", "3.70989, -196.79, 26.5524, 0.96", "3.58197, -198.081, 26.8971, 1.25", "3.42215, -199.315, 27.1886, 0.66", "3.34459, -199.894, 27.2969, 0.22", "3.19837, -201.16, 27.482, 0.22", "3.15717, -201.76, 27.5543, 0.44", "3.11249, -203.294, 27.7282, 0.22", "3.14868, -204.359, 27.8597, 0.22", "3.25116, -205.639, 28.0502, 0.29", "3.34006, -206.694, 28.2288, 0.52", "3.43221, -207.788, 28.4179, 0.52", "3.50321, -208.947, 28.634, 0.52", "3.52915, -210.043, 28.8584, 1.18", "3.49934, -211.058, 29.0823, 2.43", "3.3736, -212.798, 29.4941, 1.33", "3.22821, -214.208, 29.8215, 0.59", "3.09032, -215.358, 30.0751, 0.81", "2.96745, -216.353, 30.2851, 0.15", "2.88052, -217.014, 30.4203, 0.15", "2.84932, -217.347, 30.4855, 0.15", "2.82087, -217.763, 30.5797, 0.22", "2.74225, -218.564, 30.7939, 0.37", "2.5783, -219.496, 31.0418, 0.37", "2.29103, -220.493, 31.2869, 0.22", "1.85129, -221.566, 31.5387, 0.22", "1.51963, -222.183, 31.6742, 0.22", "1.14042, -222.757, 31.8053, 0.74", "0.515874, -223.585, 31.9941, 1.77", "-0.239933, -224.522, 32.2008, 2.21", "-0.790962, -225.197, 32.3811, 2.21", "-1.97331, -226.649, 32.8374, 0.37", "-2.68881, -227.614, 33.1696, 0.37", "-3.20935, -228.443, 33.4741, 0.22", "-3.6032, -229.221, 33.7976, 0.22", "-4.01586, -230.182, 34.2467, 0.22", "-4.225, -230.744, 34.5455, 0.81", "-4.48495, -231.595, 35.106, 1.25", "-4.75332, -232.562, 35.8697, 0.88", "-5.06549, -233.589, 36.7925, 0.22", "-5.22843, -234.111, 37.2697, 0.22", "-5.40895, -234.743, 37.7758, 0.22", "-5.56008, -235.52, 38.3104, 0.22", "-5.63058, -236.54, 38.8092, 0.44", "-5.63057, -237.51, 39.1261, 1.47", "-5.63596, -238.568, 39.3623, 1.47", "-5.68916, -239.899, 39.5903, 0.44", "-5.76999, -241.141, 39.7535, 0.96", "-5.96706, -242.952, 39.9499, 0.22", "-6.0981, -243.911, 40.0556, 0.22", "-6.35509, -245.37, 40.2528, 0.22", "-6.61525, -246.457, 40.4158, 0.22", "-6.85415, -247.254, 40.5438, 0.22", "-7.19556, -248.204, 40.7053, 0.22", "-7.6847, -249.471, 40.9544, 0.22", "-7.96767, -250.265, 41.1118, 0.81", "-8.35858, -251.492, 41.3546, 1.77", "-8.69842, -252.686, 41.6127, 1.18", "-9.2739, -254.984, 42.1384, 0.22", "-9.42393, -255.751, 42.3305, 0.22", "-9.61472, -257.069, 42.7073, 0.88", "-9.74976, -258.708, 43.2472, 0.15", "-9.74634, -259.666, 43.6302, 0.15", "-9.63965, -260.603, 44.0293, 0.29", "-9.41265, -261.55, 44.4438, 0.74", "-9.19703, -262.273, 44.7608, 1.4", "-8.81745, -263.354, 45.2677, 0.59", "-8.29754, -264.789, 45.9425, 0.15", "-7.91843, -265.884, 46.4341, 0.15", "-7.579, -266.874, 46.8573, 0.15", "-7.25679, -267.783, 47.1869, 0.29", "-6.81852, -268.922, 47.5653, 0.96", "-6.32036, -270.173, 47.9671, 0.44", "-5.91475, -271.185, 48.2966, 0.22", "-5.40547, -272.403, 48.7424, 0.22", "-4.87701, -273.57, 49.177, 0.15", "-4.40575, -274.565, 49.5218, 0.15", "-4.09628, -275.236, 49.7397, 0.15", "-3.83361, -275.906, 49.9412, 0.29", "-3.5021, -277.101, 50.2604, 0.44", "-3.30525, -278.279, 50.5381, 0.44", "-3.16263, -279.911, 50.9044, 0.44", "-3.1305, -281.262, 51.1486, 0.44", "-3.17044, -282.924, 51.4062, 0.88", "-3.28694, -284.219, 51.5922, 1.03", "-3.49315, -285.463, 51.7787, 0.37", "-3.7612, -286.503, 51.9734, 0.15", "-4.12186, -287.512, 52.2311, 0.15", "-4.50986, -288.373, 52.5079, 0.37", "-5.09179, -289.446, 52.9308, 0.22", "-5.58196, -290.209, 53.2845, 0.81", "-6.47816, -291.39, 53.9162, 1.25", "-7.5976, -292.619, 54.6776, 0.88", "-8.36808, -293.342, 55.1792, 0.22", "-9.16524, -294.009, 55.6438, 0.22", "-9.98247, -294.658, 56.0613, 0.74", "-11.1427, -295.601, 56.5524, 1.47", "-12.0956, -296.426, 56.8617, 0.37", "-13.5391, -297.785, 57.1486, 0.22", "-14.5351, -298.841, 57.2018, 0.29", "-15.3565, -299.871, 57.1124, 0.29", "-15.9617, -300.848, 56.8988, 0.29", "-16.4483, -301.923, 56.5626, 0.37", "-16.8949, -303.345, 56.0845, 0.22", "-17.2028, -304.94, 55.5504, 0.22", "-17.2919, -305.719, 55.308, 0.22", "-17.3445, -306.91, 55.0202, 0.37", "-17.3501, -307.81, 54.8847, 0.59", "-17.3713, -309.963, 54.736, 0.66", "-17.407, -311.451, 54.7507, 0.88", "-17.4292, -312.453, 54.8632, 0.88", "-17.497, -314.255, 55.1736, 0.52", "-17.5868, -316.21, 55.5943, 0.22", "-17.6263, -318.173, 56.0984, 0.22", "-17.6239, -318.977, 56.3407, 0.81", "-17.6103, -321.112, 57.0443, 1.25", "-17.5734, -322.338, 57.4405, 1.03", "-17.5317, -323.128, 57.6813, 1.03", "-17.3487, -325.069, 58.2724, 0.22", "-17.1743, -326.502, 58.6936, 0.22", "-17.0882, -327.467, 58.96, 0.22", "-17.0406, -329.038, 59.3537, 0.22", "-17.0811, -329.936, 59.5979, 0.22", "-17.313, -331.593, 60.0655, 0.22", "-17.6301, -332.7, 60.3971, 0.74", "-18.0516, -333.762, 60.7151, 1.11", "-18.4515, -334.551, 60.9178, 1.11", "-19.4019, -336.048, 61.2306, 0.74", "-20.1911, -337.125, 61.3509, 1.4", "-21.5169, -338.767, 61.3526, 0.66", "-22.4584, -339.911, 61.2539, 0.07", "-23.6262, -341.365, 61.052, 0.07", "-24.4002, -342.352, 60.8866, 0.22", "-25.2454, -343.521, 60.67, 0.22", "-25.8012, -344.35, 60.5353, 0.44", "-26.4462, -345.441, 60.4033, 0.44", "-27.2144, -346.915, 60.4313, 0.44", "-27.6446, -347.88, 60.6122, 0.22", "-28.1759, -349.236, 61.0333, 0.15", "-28.475, -349.995, 61.3922, 0.37", "-28.6848, -350.467, 61.707, 0.37", "-29.2098, -351.578, 62.6301, 0.15", "-29.6963, -352.534, 63.5652, 0.15", "-29.8604, -352.817, 63.8758, 0.52", "-30.3622, -353.471, 64.7053, 1.03", "-31.0984, -354.276, 65.7729, 0.15", "-31.6896, -354.824, 66.4926, 0.15", "-32.317, -355.34, 67.1033, 0.15", "-32.7482, -355.701, 67.4522, 0.59", "-33.7091, -356.57, 68.1416, 0.15", "-34.0337, -356.878, 68.3459, 0.15", "-34.5471, -357.427, 68.6363, 0.66", "-34.9816, -357.95, 68.8765, 0.81", "-36.1603, -359.563, 69.5205, 0.15", "-37.0724, -360.959, 70.0147, 0.15", "-37.8462, -362.277, 70.4299, 0.29", "-38.9033, -364.17, 70.9915, 0.22", "-39.8062, -365.879, 71.47, 0.15", "-40.1721, -366.58, 71.6638, 0.66", "-40.7787, -367.659, 71.9551, 0.81", "-41.5752, -368.898, 72.2993, 0.44", "-42.0728, -369.632, 72.5058, 1.03", "-42.6272, -370.338, 72.7269, 1.25", "-44.1776, -372.099, 73.3137, 0.52", "-45.4092, -373.349, 73.761, 0.22", "-46.2174, -374.053, 74.0351, 0.07" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "7.66599, 29.714, -0.097398, 0.96", "9.5031, 30.9503, 0.0336317, 0.96", "10.396, 31.549, 0.10061, 1.03", "11.4664, 32.3291, 0.324641, 1.03", "12.4149, 33.0204, 0.523168, 1.62", "13.334, 33.6903, 0.715546, 1.33", "14.6245, 34.6309, 0.985659, 1.03", "15.5837, 35.3526, 1.21807, 0.96", "17.3751, 36.7389, 1.74006, 1.62" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "7.66599, 29.714, -0.097398, 0.88", "8.34061, 31.132, -0.231936, 0.88", "9.16182, 32.5467, -0.367846, 0.81", "9.56254, 33.206, -0.465064, 0.66", "9.96102, 33.8893, -0.596046, 1.11", "10.4462, 34.813, -0.797815, 0.74", "10.7705, 35.4994, -0.966153, 0.52", "11.1876, 36.4579, -1.3097, 0.22", "11.3428, 37.2239, -1.60564, 0.29", "11.2563, 37.765, -1.85715, 0.29", "10.9761, 38.3336, -2.18618, 0.66", "10.7599, 38.6201, -2.38754, 0.66", "10.1365, 39.2964, -2.88011, 0.81", "9.33328, 40.1471, -3.50571, 1.18", "8.73767, 40.8603, -4.01023, 1.03", "8.16637, 41.7016, -4.59377, 0.81", "7.70414, 42.5948, -5.19586, 1.11", "7.24149, 43.8179, -5.99616, 0.88", "6.97793, 44.8388, -6.6571, 0.66", "6.82318, 45.7813, -7.23982, 0.66", "6.70701, 46.578, -7.67367, 0.66", "6.58773, 47.3065, -8.0217, 0.66", "6.42521, 48.1771, -8.4234, 0.81", "6.2791, 48.8413, -8.75124, 1.18", "6.08853, 49.5732, -9.10643, 1.18", "5.65725, 51.1975, -9.83785, 0.52", "5.39413, 52.0555, -10.2196, 0.52", "5.19553, 52.7349, -10.5133, 0.52", "5.08855, 53.2246, -10.7067, 1.03", "5.00813, 54.1098, -11.0394, 1.03", "5.13789, 55.1848, -11.4486, 0.66", "5.16463, 63.6855, -15.8958, 0.66", "4.765, 72.5587, -19.431, 0.66", "2.2581, 81.1114, -22.9742, 0.66", "-0.963056, 89.4832, -26.4185, 0.66", "-4.26215, 97.442, -30.7522, 0.66", "-9.34718, 104.839, -34.4136, 0.66", "-13.8861, 111.902, -39.3102, 0.66", "-17.5424, 119.241, -44.4831, 0.66", "-21.8011, 126.997, -48.3682, 0.66", "-26.2295, 133.967, -53.5067, 0.66", "-28.7598, 141.071, -59.6266, 0.66", "-31.8227, 148.308, -65.3169, 0.66", "-35.0433, 155.393, -71.1307, 0.66", "-38.1285, 162.107, -77.4811, 0.66", "-42.0138, 167.841, -84.4289, 0.66" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-0.848958, 31.3413, 5.42806, 0.96", "-1.55518, 31.7831, 5.38282, 0.96", "-2.23785, 32.0559, 5.38643, 0.66", "-3.20824, 32.1466, 5.46983, 0.52", "-3.60392, 31.962, 5.56578, 0.52", "-4.13682, 31.3299, 5.78954, 0.52", "-4.40428, 30.9817, 5.91876, 0.88", "-4.96505, 30.1543, 6.23755, 1.11", "-5.48218, 29.3994, 6.53978, 1.25", "-5.92649, 28.8258, 6.76826, 1.25", "-6.86821, 27.7988, 7.15445, 0.66", "-7.41908, 27.2869, 7.33119, 0.96", "-8.03389, 26.8092, 7.50102, 1.33", "-8.84398, 26.2851, 7.70202, 1.33", "-10.084, 25.6023, 8.00018, 1.33", "-11.4514, 24.9121, 8.35106, 0.88", "-12.2764, 24.5294, 8.55353, 0.88", "-13.2137, 24.0885, 8.77854, 1.4", "-13.8209, 23.7906, 8.93315, 1.55", "-14.7612, 23.3007, 9.20283, 2.06", "-15.4871, 22.8698, 9.49529, 2.06" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.848958, 31.3413, 5.42806, 0.74", "-1.02263, 30.7088, 5.24048, 0.74", "-1.28037, 29.9072, 5.02209, 0.52", "-1.52474, 29.2094, 4.8517, 0.88", "-1.81173, 28.47, 4.71612, 0.44", "-2.01316, 27.9963, 4.65183, 0.44", "-2.17387, 27.6411, 4.61383, 0.37", "-2.48807, 27.0095, 4.5876, 0.88", "-2.8086, 26.3481, 4.6153, 0.44", "-3.14169, 25.6178, 4.67662, 0.44", "-3.34734, 25.091, 4.73091, 0.74", "-3.48926, 24.6745, 4.7825, 1.11", "-3.76598, 23.7641, 4.92206, 0.96", "-3.99562, 22.9164, 5.09385, 1.18", "-4.18267, 22.1916, 5.28006, 1.18", "-4.39882, 21.3673, 5.52493, 0.88", "-4.58554, 20.6865, 5.75821, 0.66", "-4.75151, 20.1345, 5.97868, 0.66", "-4.93541, 19.5481, 6.23211, 0.66", "-5.15292, 18.8788, 6.53355, 0.66", "-5.39159, 18.1133, 6.87061, 0.66", "-5.70598, 17.0309, 7.27023, 0.52", "-5.85215, 16.4435, 7.43903, 0.52", "-6.05546, 15.4219, 7.65292, 0.52", "-6.16135, 14.7133, 7.74312, 0.52", "-6.23673, 13.9856, 7.79233, 0.52", "-6.31254, 13.0416, 7.82687, 0.96", "-6.36001, 12.5622, 7.82854, 1.11", "-6.42249, 12.0713, 7.81878, 1.11", "-6.62212, 10.8628, 7.78691, 0.44", "-6.73491, 10.2916, 7.76064, 0.44", "-6.99557, 9.27435, 7.70749, 0.66", "-7.20517, 8.58385, 7.66226, 0.52", "-7.32563, 8.22763, 7.6236, 0.88", "-7.43774, 7.91559, 7.57841, 1.33", "-7.6751, 7.21946, 7.45517, 0.96", "-7.97368, 6.21819, 7.26746, 0.59", "-8.1458, 5.50119, 7.12638, 0.59", "-8.23255, 5.03476, 7.04457, 0.96", "-8.33256, 4.37971, 6.9461, 0.52", "-8.44263, 3.49098, 6.84405, 0.22", "-8.50591, 2.92023, 6.80159, 0.29", "-8.57618, 2.41173, 6.76918, 0.29", "-8.65324, 2.02365, 6.74643, 1.03", "-8.80198, 1.43904, 6.70583, 1.84", "-9.08661, 0.586734, 6.63268, 0.74", "-9.46059, -0.288656, 6.54333, 0.29", "-9.90622, -1.0824, 6.44223, 0.29", "-10.1889, -1.50278, 6.38144, 0.29", "-10.3918, -1.78033, 6.33831, 0.88", "-10.6701, -2.14683, 6.28105, 1.47", "-10.9666, -2.55333, 6.21621, 0.88", "-11.6303, -3.5901, 6.06462, 0.22", "-11.8388, -3.9919, 6.01402, 0.15", "-12.0611, -4.50101, 5.96623, 0.37", "-12.2546, -4.95879, 5.93248, 0.22", "-12.5618, -5.64264, 5.88833, 0.22", "-12.8514, -6.20743, 5.84973, 0.52", "-13.0425, -6.52055, 5.82747, 0.96", "-13.4943, -7.08787, 5.77285, 1.62", "-14.1248, -7.72406, 5.69023, 0.96", "-14.8424, -8.35685, 5.60054, 0.59", "-15.4116, -8.81718, 5.53724, 0.88", "-15.9552, -9.25314, 5.47678, 1.55", "-16.429, -9.64003, 5.42189, 1.55", "-17.1289, -10.2623, 5.33231, 0.37", "-17.7053, -10.8404, 5.27448, 0.22", "-18.0327, -11.2025, 5.24973, 0.44", "-18.4895, -11.7548, 5.22291, 1.11", "-18.6991, -12.0469, 5.21143, 1.11", "-19.1276, -12.7255, 5.19446, 0.44", "-19.4673, -13.3367, 5.16841, 0.22", "-19.7388, -13.9064, 5.12767, 0.29", "-19.8919, -14.2564, 5.08603, 0.15", "-20.1386, -14.8498, 4.99505, 0.29", "-20.2343, -15.0872, 4.95308, 0.96", "-20.4575, -15.6442, 4.84088, 1.62", "-20.8171, -16.5888, 4.64059, 2.06", "-21.1606, -17.5135, 4.45895, 1.4", "-21.3266, -17.9601, 4.37971, 0.59", "-21.5917, -18.6589, 4.27231, 0.22", "-21.757, -19.128, 4.21455, 0.22", "-21.9119, -19.6014, 4.17394, 0.66", "-22.0688, -20.1242, 4.1411, 0.74", "-22.2277, -20.6856, 4.12002, 0.22", "-22.4178, -21.3135, 4.10683, 0.15", "-22.5862, -21.8289, 4.11229, 0.22", "-22.7019, -22.1897, 4.12719, 0.66", "-22.8524, -22.6406, 4.15659, 1.25", "-23.0765, -23.2605, 4.20405, 1.47", "-23.3765, -24.0019, 4.2593, 0.88", "-23.6629, -24.6299, 4.29687, 0.22", "-23.8834, -25.0612, 4.31265, 0.22", "-24.1135, -25.4752, 4.31676, 0.22", "-24.508, -26.1232, 4.29994, 0.37", "-24.869, -26.6778, 4.25904, 0.37", "-25.2607, -27.261, 4.19796, 0.52", "-25.497, -27.6115, 4.15842, 0.22", "-25.7188, -27.9529, 4.1257, 0.37", "-25.9143, -28.3012, 4.10389, 0.74", "-26.1861, -28.9259, 4.09482, 0.22", "-26.4065, -29.603, 4.10832, 0.22", "-26.5496, -30.1499, 4.12195, 0.29", "-26.6545, -30.557, 4.12667, 0.52", "-26.8053, -31.1433, 4.12614, 1.11", "-26.9378, -31.6612, 4.11882, 1.7", "-27.1262, -32.3775, 4.09424, 1.33", "-27.3333, -33.1909, 4.05027, 0.22", "-27.4786, -33.8369, 4.02131, 0.22", "-27.5258, -34.0606, 4.0124, 0.22", "-27.5787, -34.3215, 4.00353, 0.29", "-27.6588, -34.7252, 3.99255, 0.52", "-27.7567, -35.2459, 3.98483, 0.22", "-27.8549, -35.679, 3.97855, 0.22", "-27.9674, -36.0382, 3.96318, 0.22", "-28.144, -36.4056, 3.92699, 0.81", "-28.347, -36.7015, 3.87754, 1.47", "-28.5328, -36.9188, 3.82891, 1.47", "-29.0185, -37.4242, 3.69764, 0.22", "-29.2883, -37.6985, 3.62412, 0.22", "-29.6091, -38.0485, 3.53764, 0.37", "-30.0045, -38.5212, 3.43266, 0.44", "-30.2646, -38.8552, 3.3649, 0.22", "-30.3667, -39.0019, 3.33577, 0.22", "-30.4882, -39.1944, 3.29797, 0.22", "-30.7158, -39.5748, 3.22412, 0.22", "-30.8988, -39.8813, 3.16373, 0.74", "-31.1229, -40.2597, 3.08999, 1.47", "-31.473, -40.7942, 2.98458, 1.99", "-31.8335, -41.2767, 2.8951, 1.77", "-32.4607, -42.0135, 2.76074, 0.66", "-32.8332, -42.4022, 2.69023, 0.15", "-33.2304, -42.7886, 2.61848, 0.15", "-33.657, -43.1986, 2.54184, 0.22", "-34.0304, -43.5411, 2.47338, 0.22", "-34.411, -43.8926, 2.38251, 0.29", "-34.7249, -44.1994, 2.28618, 0.81", "-35.1312, -44.6482, 2.12854, 1.47", "-35.5607, -45.2065, 1.91128, 0.52", "-35.8956, -45.7868, 1.68163, 0.22", "-36.0985, -46.2605, 1.5008, 0.22", "-36.2226, -46.6558, 1.37214, 0.22", "-36.2684, -46.8608, 1.31326, 0.22", "-36.3218, -47.2, 1.22757, 0.29", "-36.3864, -47.717, 1.1044, 0.74", "-36.4332, -48.1081, 1.00893, 1.03", "-36.5751, -48.9322, 0.800617, 0.37", "-36.7026, -49.4901, 0.651361, 0.88", "-36.8438, -50.023, 0.506022, 1.18", "-36.9814, -50.5056, 0.374068, 1.18", "-37.2483, -51.3934, 0.149238, 0.29", "-37.5071, -52.1548, -0.0332274, 0.29", "-37.708, -52.6741, -0.14526, 0.37", "-37.869, -53.0345, -0.20901, 0.88", "-38.044, -53.4001, -0.257223, 0.66", "-38.2722, -53.9007, -0.290057, 0.22", "-38.4419, -54.3096, -0.288129, 0.22", "-38.6003, -54.7643, -0.270336, 0.37", "-38.6985, -55.0892, -0.248419, 0.66", "-38.8459, -55.6026, -0.203478, 1.11", "-39.0245, -56.2131, -0.14636, 0.66", "-39.1485, -56.5974, -0.113466, 0.29", "-39.3318, -57.1291, -0.0637255, 0.22", "-39.4604, -57.4904, -0.0390749, 0.29", "-39.6772, -58.1259, -0.0264258, 0.96", "-39.8263, -58.5798, -0.0424309, 1.03", "-40.061, -59.3636, -0.106685, 0.81", "-40.2229, -59.9964, -0.183284, 0.29", "-40.3535, -60.5209, -0.268491, 0.22", "-40.4887, -61.0707, -0.375091, 0.29", "-40.6041, -61.5504, -0.481725, 0.74", "-40.7038, -61.9725, -0.577583, 0.52", "-40.9432, -62.8952, -0.789011, 0.29", "-41.2177, -63.7478, -0.973771, 0.29", "-41.5357, -64.5169, -1.11072, 0.29", "-41.7369, -64.9299, -1.17491, 0.29", "-41.9514, -65.3283, -1.23541, 1.03", "-42.17, -65.7126, -1.29651, 1.7", "-42.5564, -66.3841, -1.40017, 1.4", "-43.1406, -67.3915, -1.5461, 0.44", "-43.4893, -67.9619, -1.6195, 0.15", "-43.6461, -68.2118, -1.65014, 0.37", "-43.8964, -68.6106, -1.70487, 0.59", "-44.1309, -69.0042, -1.76684, 0.59", "-44.5525, -69.7465, -1.90706, 0.22", "-44.8699, -70.2988, -2.03398, 0.22", "-45.1103, -70.7063, -2.13124, 0.22", "-45.2987, -71.0338, -2.21056, 0.88", "-45.4838, -71.3649, -2.27418, 1.47", "-45.7468, -71.8557, -2.35497, 1.84", "-46.491, -73.3037, -2.55428, 0.22", "-46.6011, -73.5298, -2.58477, 0.22", "-46.7469, -73.8321, -2.62072, 0.22", "-47.0841, -74.5019, -2.70901, 0.22", "-47.3157, -74.9218, -2.77522, 0.22", "-47.5081, -75.2432, -2.84127, 0.74", "-47.8542, -75.8121, -2.99246, 1.33", "-48.2953, -76.4926, -3.20364, 0.22", "-48.5581, -76.8759, -3.33916, 0.22", "-48.8515, -77.3062, -3.48481, 0.22", "-49.0731, -77.6562, -3.55911, 0.15", "-49.2377, -77.9407, -3.58224, 0.15", "-49.4811, -78.3515, -3.56327, 0.37", "-49.6014, -78.5544, -3.5343, 0.96", "-50.0614, -79.314, -3.37568, 2.14", "-50.6216, -80.194, -3.15658, 0.66", "-51.0488, -80.7962, -2.9844, 0.15", "-51.4607, -81.3012, -2.82052, 0.15", "-51.7276, -81.5925, -2.71519, 0.44", "-51.9891, -81.8577, -2.61468, 1.03", "-52.4272, -82.2874, -2.45425, 1.55", "-52.973, -82.8177, -2.24486, 0.44", "-53.3246, -83.1941, -2.12152, 0.22", "-53.5677, -83.4968, -2.04219, 0.22", "-53.9172, -83.9742, -1.94552, 0.22", "-54.2314, -84.4319, -1.88174, 0.29", "-54.5741, -84.9621, -1.84795, 0.29", "-54.9865, -85.6326, -1.85422, 0.15", "-55.289, -86.1298, -1.88804, 0.22", "-55.5986, -86.6432, -1.96855, 0.88", "-56.0265, -87.3637, -2.14791, 0.74", "-56.3025, -87.8273, -2.3062, 0.88", "-56.5755, -88.3054, -2.50723, 1.77", "-56.865, -88.8477, -2.77278, 2.29", "-57.2588, -89.6839, -3.23442, 0.07", "-57.4611, -90.1975, -3.55073, 0.15", "-57.5603, -90.5236, -3.77424, 0.15", "-57.6019, -90.7056, -3.90311, 0.15", "-57.6453, -91.0618, -4.13995, 0.15", "-57.6459, -91.3456, -4.29521, 0.15", "-57.6345, -91.8539, -4.49811, 0.15", "-57.6314, -92.0429, -4.5589, 0.15", "-57.6276, -92.5786, -4.70688, 0.66", "-57.6514, -93.5513, -4.95493, 0.29", "-57.6946, -94.1827, -5.10031, 0.22", "-57.7524, -94.7597, -5.21741, 0.22", "-57.8324, -95.2582, -5.30846, 0.22", "-57.9017, -95.51, -5.35613, 0.59", "-58.0103, -95.7468, -5.4072, 0.74", "-58.1782, -95.9733, -5.45475, 0.37", "-58.4415, -96.2371, -5.50397, 0.15", "-59.0028, -96.7229, -5.58185, 0.15", "-59.3256, -96.9748, -5.6192, 0.22", "-59.656, -97.2305, -5.65606, 0.29", "-59.9989, -97.5042, -5.68314, 0.22", "-60.438, -97.8856, -5.70466, 0.22", "-60.9208, -98.3557, -5.71385, 0.29", "-61.2531, -98.7159, -5.70645, 0.29", "-61.6721, -99.1643, -5.70089, 0.22", "-62.0226, -99.515, -5.7095, 0.37", "-62.3643, -99.8452, -5.73466, 0.74", "-62.61, -100.082, -5.75714, 1.03", "-63.0988, -100.561, -5.80248, 0.22", "-63.5357, -101.012, -5.84462, 0.22", "-63.9104, -101.409, -5.89082, 0.15", "-64.19, -101.725, -5.93587, 0.15", "-64.3856, -101.967, -5.96867, 0.15", "-64.6823, -102.397, -6.0302, 0.22", "-65.0742, -103.058, -6.12888, 0.29", "-65.3701, -103.65, -6.20655, 0.74", "-65.6651, -104.326, -6.27022, 0.74", "-65.8816, -104.859, -6.30917, 0.37", "-66.0989, -105.43, -6.34166, 0.37", "-66.2633, -105.869, -6.35179, 1.4", "-66.509, -106.498, -6.35413, 2.95", "-66.8924, -107.375, -6.34565, 1.18", "-67.2378, -108.053, -6.33814, 0.22", "-67.6782, -108.833, -6.31621, 0.29", "-68.0171, -109.41, -6.29065, 0.74", "-68.2735, -109.838, -6.2734, 1.33", "-68.6987, -110.48, -6.26843, 0.81", "-69.0619, -111.007, -6.30968, 1.18", "-69.6346, -111.881, -6.42414, 0.66", "-69.9687, -112.459, -6.51675, 0.29", "-70.0874, -112.686, -6.5579, 0.44", "-70.5346, -113.64, -6.72923, 0.29", "-70.8418, -114.356, -6.86948, 0.81", "-71.271, -115.387, -7.11627, 0.22", "-71.4845, -115.855, -7.2779, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "46.8265, -7.14532, -27.113, 0.15", "52.9833, -11.458, -30.2807, 0.15", "58.9011, -16.2267, -33.1633, 0.15", "64.5373, -20.698, -37.0139, 0.15", "70.7655, -25.0262, -40.0073, 0.15", "76.8009, -28.4052, -44.4418, 0.15", "82.6597, -31.8597, -49.0505, 0.15", "88.463, -36.1711, -52.8498, 0.15", "93.2036, -41.6777, -56.4294, 0.15", "99.2101, -46.2991, -59.3941, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "46.8265, -7.14532, -27.113, 0.59", "55.9455, -12.9041, -30.6086, 0.15", "64.7943, -18.8885, -34.3752, 0.15", "74.1194, -24.7384, -37.0419, 0.15", "83.6542, -30.4799, -39.1555, 0.15", "92.9274, -35.89, -42.8603, 0.15", "101.752, -41.785, -46.8377, 0.15", "109.94, -48.6811, -50.3646, 0.15", "117.339, -55.9199, -54.7895, 0.15", "123.898, -63.9544, -59.0225, 0.15", "129.826, -72.9915, -61.5968, 0.15", "136.748, -81.2187, -64.6443, 0.15", "143.339, -89.1705, -69.0008, 0.15", "149.257, -97.2789, -73.9814, 0.15", "156.626, -103.881, -79.4533, 0.15", "166.307, -108.2, -83.6781, 0.15", "176.087, -112.679, -87.46, 0.15", "186.312, -115.436, -91.8563, 0.15", "196.424, -118.937, -95.9064, 0.15", "206.538, -120.457, -101.158, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "47.6249, -16.2358, -35.2495, 0.15", "52.0169, -22.9006, -42.6925, 0.15", "55.9423, -30.4766, -49.3977, 0.15", "60.0914, -37.1591, -56.9557, 0.15", "62.5422, -45.8822, -62.7503, 0.15", "64.8743, -55.4503, -66.9505, 0.15", "66.9758, -64.6592, -72.0209, 0.15", "70.0772, -72.4619, -78.8504, 0.15", "74.8512, -80.403, -84.4936, 0.15", "78.2492, -89.2926, -89.5251, 0.15", "83.0781, -97.9254, -93.8969, 0.15", "87.1584, -106.809, -98.4453, 0.15", "90.5285, -115.206, -104.328, 0.15", "91.6496, -123.911, -110.51, 0.15", "93.6195, -132.997, -115.857, 0.15", "97.85, -141.945, -120.136, 0.15", "101.148, -150.141, -126.353, 0.15", "106.06, -157.986, -132.028, 0.15", "110.619, -166.562, -136.774, 0.15", "114.58, -174.488, -143.005, 0.15", "118.759, -182.877, -148.392, 0.15", "121.813, -190.788, -155.105, 0.15", "124.472, -199.485, -160.857, 0.15", "127.048, -208.871, -165.351, 0.15", "129.083, -217.578, -171.317, 0.15", "131.758, -226.25, -177.102, 0.15", "133.206, -235.667, -181.966, 0.15", "135.497, -245.563, -185.306, 0.15", "139.775, -255.311, -186.892, 0.15", "145.341, -264.614, -187.034, 0.15", "152.029, -273.229, -186.65, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "47.6249, -16.2358, -35.2495, 0.59", "53.1148, -22.0657, -38.6368, 0.15", "59.7463, -26.6951, -42.0452, 0.15", "66.6186, -31.1821, -45.1844, 0.15", "71.8634, -36.6054, -49.5415, 0.15", "76.2872, -42.3595, -54.3024, 0.15", "81.3386, -47.4536, -59.2724, 0.15", "87.0949, -51.7204, -64.3459, 0.15", "93.6251, -55.2541, -69.1087, 0.15", "100.573, -59.2393, -72.7749, 0.15", "107.17, -64.1597, -75.7855, 0.15", "114.3, -69.0591, -77.2778, 0.15", "120.563, -75.0933, -77.8203, 0.15", "125.828, -81.9374, -77.1297, 0.15", "129.836, -89.1632, -74.5828, 0.15", "133.966, -96.4962, -72.6677, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-89.3448, -127.888, -11.5143, 0.15", "-94.4272, -133.679, -11.4424, 0.15", "-99.2072, -139.561, -12.8246, 0.15", "-104.292, -145.331, -13.3532, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-89.3448, -127.888, -11.5143, 0.59", "-95.8792, -135.561, -11.1528, 0.15", "-100.848, -144.1, -9.60611, 0.15", "-106.484, -152.155, -7.57628, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-28.8337, -156.468, -100.934, 0.15", "-31.8045, -169.48, -107.725, 0.15", "-35.9752, -182.919, -112.643, 0.15", "-38.5664, -196.305, -118.745, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-28.8337, -156.468, -100.934, 0.59", "-29.594, -165.928, -106.571, 0.15", "-28.2401, -175.776, -111.289, 0.15", "-28.3711, -185.476, -116.51, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "26.9969, -168.74, 39.1483, 0.15", "27.7767, -169.304, 39.0641, 0.15", "28.1361, -169.564, 39.0253, 0.37", "28.7386, -170.0, 38.9602, 1.18", "29.1772, -170.317, 38.9128, 0.88", "29.9476, -170.874, 38.8296, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "26.9969, -168.74, 39.1483, 0.22", "27.17, -170.028, 38.7772, 0.22", "27.2812, -170.985, 38.4598, 0.81", "27.3585, -171.915, 38.1554, 1.18", "27.3917, -173.331, 37.7286, 0.22", "27.3087, -174.538, 37.4103, 0.22", "27.1409, -175.738, 37.1305, 0.29", "26.8959, -176.873, 36.9039, 0.66", "26.5448, -178.022, 36.7326, 0.81", "26.0708, -179.269, 36.6132, 0.22", "25.3519, -180.893, 36.5592, 0.22", "24.9896, -181.691, 36.5799, 0.29", "24.6419, -182.494, 36.6284, 0.96", "24.333, -183.281, 36.7038, 1.7", "23.7696, -185.009, 36.9201, 0.52", "23.3965, -186.557, 37.1642, 0.22", "23.2713, -187.37, 37.3207, 0.15", "23.1431, -188.665, 37.6209, 0.22", "23.0659, -189.8, 37.8727, 0.15", "23.0115, -190.764, 38.0831, 0.15", "22.977, -191.419, 38.219, 0.15", "22.9473, -192.152, 38.3498, 0.37", "22.8957, -193.1, 38.4587, 0.59", "22.7563, -194.85, 38.5238, 0.07", "22.6399, -195.844, 38.4898, 0.07", "22.4966, -196.925, 38.4076, 0.15", "22.4037, -197.668, 38.3342, 0.66", "22.2986, -198.583, 38.2383, 0.74", "22.152, -200.122, 38.1015, 0.15", "22.0776, -201.109, 38.0583, 0.22", "22.0232, -201.915, 38.033, 0.15", "21.9554, -202.615, 38.0238, 0.81", "21.8529, -203.355, 38.031, 0.66", "21.6207, -204.605, 38.0437, 0.15", "21.3937, -205.604, 38.035, 0.22", "21.0718, -206.848, 38.0044, 0.52", "20.7409, -207.85, 37.9939, 0.59", "20.2798, -209.164, 38.0438, 0.07", "19.9128, -210.204, 38.1225, 0.22", "19.7771, -210.579, 38.1551, 0.22", "19.4665, -211.436, 38.2413, 0.96", "18.8699, -213.06, 38.4408, 0.07", "18.3933, -214.479, 38.6893, 0.07", "18.193, -215.129, 38.8681, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-15.317, -206.164, 25.4927, 0.15", "-15.3046, -214.018, 26.9758, 0.15", "-16.1731, -221.851, 28.3081, 0.15", "-17.0164, -229.655, 29.8328, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-15.317, -206.164, 25.4927, 0.59", "-16.4771, -217.111, 27.4926, 0.15", "-18.2159, -228.141, 26.963, 0.15", "-21.3291, -238.766, 28.8077, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "17.3751, 36.7389, 1.74006, 0.52", "18.2881, 37.3598, 1.66896, 0.52", "19.2981, 37.6255, 1.61901, 0.37", "20.0184, 37.7106, 1.61578, 0.37", "20.3911, 37.7457, 1.61176, 0.52", "21.0954, 37.837, 1.58052, 0.52", "22.2028, 38.0307, 1.48772, 0.44", "22.7559, 38.1145, 1.41103, 0.44", "23.3746, 38.2501, 1.31173, 0.66", "23.8815, 38.446, 1.23779, 0.66", "24.4732, 38.8077, 1.16828, 0.88", "24.8143, 39.1226, 1.15036, 1.03", "25.4322, 39.8894, 1.19176, 0.52", "25.8648, 40.4984, 1.26477, 0.52", "26.2195, 41.0281, 1.35507, 0.52", "26.5309, 41.4923, 1.46409, 0.52", "27.056, 42.232, 1.65503, 0.22", "27.5528, 42.9192, 1.85204, 0.44", "28.0417, 43.6011, 2.0537, 0.74", "28.5696, 44.36, 2.24147, 1.18", "28.9612, 44.9234, 2.34824, 0.88", "29.6159, 45.8166, 2.48717, 0.29", "34.9049, 51.9458, 3.74265, 0.29", "40.538, 57.8213, 4.79943, 0.29", "45.1042, 64.4038, 6.36855, 0.29", "48.9512, 71.1109, 9.01418, 0.29", "52.477, 78.0237, 11.5189, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "17.3751, 36.7389, 1.74006, 0.88", "18.4454, 37.9478, 3.03335, 0.88", "19.219, 38.7295, 3.86202, 0.81", "20.2132, 39.6393, 4.73093, 0.96", "21.3393, 40.5839, 5.53826, 1.33", "22.7159, 41.7222, 6.39367, 1.33", "23.5247, 42.3977, 6.87002, 1.33", "24.4456, 43.1976, 7.34923, 1.33", "25.6316, 44.2213, 7.89169, 1.18", "26.7809, 45.1962, 8.37002, 1.03", "27.8005, 46.0385, 8.80545, 0.88", "29.0466, 47.0919, 9.3686, 1.4", "30.5282, 48.4242, 10.095, 0.74", "31.717, 49.5349, 10.7167, 1.25", "32.9938, 50.7174, 11.4049, 1.77", "34.6916, 52.2676, 12.2604, 0.96", "36.1483, 53.5716, 12.8908, 0.59", "37.2549, 54.5639, 13.2769, 0.74", "38.0986, 55.335, 13.5137, 0.96", "39.5674, 56.7497, 13.8829, 1.11", "40.5987, 57.8104, 14.1534, 1.4", "41.497, 58.7938, 14.425, 1.4", "42.9577, 60.3938, 14.9641, 0.96", "43.5536, 61.0635, 15.2587, 0.96", "44.7173, 62.4238, 16.048, 1.18", "45.6172, 63.5008, 16.8602, 1.18", "46.541, 64.5495, 17.795, 1.03", "47.2073, 65.2247, 18.4472, 0.96", "48.1715, 66.0905, 19.2806, 0.81", "49.3088, 67.0121, 20.1028, 0.74", "50.6122, 67.9848, 20.865, 0.96", "52.0107, 69.0136, 21.5597, 1.25", "53.5885, 70.1852, 22.2481, 1.55", "54.9587, 71.2556, 22.7799, 0.88", "56.5072, 72.561, 23.2645, 0.59", "57.4259, 73.4372, 23.5116, 0.81", "58.3743, 74.4915, 23.7394, 0.96", "59.347, 75.678, 23.9918, 1.33", "60.739, 77.5919, 24.3917, 1.55", "61.8863, 79.3318, 24.7147, 1.7", "62.9444, 81.0706, 24.9599, 1.62", "64.0918, 83.0636, 25.1533, 1.62" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-42.0138, 167.841, -84.4289, 0.15", "-45.3287, 178.645, -91.5373, 0.15", "-46.9087, 190.204, -97.9148, 0.15", "-51.1786, 201.423, -103.651, 0.15", "-55.268, 212.956, -108.801, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-42.0138, 167.841, -84.4289, 0.59", "-46.4912, 176.683, -88.6742, 0.15", "-51.6756, 184.984, -93.3006, 0.15", "-55.5132, 194.705, -95.6054, 0.15", "-57.8473, 204.758, -98.3612, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-15.4871, 22.8698, 9.49529, 0.81", "-13.8817, 23.809, 10.1387, 0.81", "-12.984, 24.4108, 10.4201, 0.44", "-11.7014, 25.4546, 10.8357, 0.59", "-10.6723, 26.399, 11.2194, 0.59", "-9.82486, 27.2242, 11.5673, 0.88", "-9.18297, 27.8708, 11.8504, 1.11", "-8.38075, 28.6696, 12.0753, 1.11", "-7.65275, 29.6229, 12.2688, 0.29", "-7.53554, 30.2121, 12.4145, 0.29", "-7.80234, 30.6804, 12.624, 0.29", "-8.01709, 30.924, 12.7621, 0.29", "-8.23716, 31.2081, 12.9736, 0.29", "-8.51073, 31.7112, 13.4623, 0.59", "-8.61244, 32.1918, 14.0052, 1.11", "-8.63807, 32.954, 14.9496, 1.84", "-8.58719, 33.5677, 15.7989, 1.84", "-8.46657, 34.3308, 16.9302, 0.96", "-8.35382, 34.835, 17.7449, 0.74", "-8.2049, 35.3889, 18.6258, 0.74", "-8.0752, 36.0426, 19.6098, 0.74", "-8.02975, 36.581, 20.3557, 1.11", "-8.00899, 37.2742, 21.1534, 1.47", "-7.98851, 38.0125, 21.8873, 1.47", "-7.94227, 39.0142, 22.7823, 0.74", "-7.8654, 40.3489, 23.8941, 0.52", "-7.80948, 41.0769, 24.4838, 0.52", "-7.73031, 42.0795, 25.3328, 0.37", "-7.61653, 42.8458, 26.1146, 0.37", "-7.5287, 43.0528, 26.505, 0.37", "-7.39356, 43.1453, 27.0513, 0.37", "-7.2888, 43.1684, 27.4694, 0.37", "-7.14672, 43.2667, 28.531, 0.37", "-7.18478, 43.4372, 29.3628, 0.37", "-7.35071, 43.8886, 30.4934, 0.37", "-7.51324, 44.3048, 31.244, 0.37", "-7.74017, 44.8045, 31.9906, 0.59", "-8.02199, 45.3902, 32.7335, 0.88", "-8.57384, 46.5226, 33.8988, 0.88", "-9.07933, 47.4902, 34.7626, 0.59", "-9.73541, 48.7123, 35.7096, 0.59", "-10.1071, 49.4829, 36.2363, 0.29", "-10.4411, 50.3203, 36.7343, 0.29", "-10.7481, 51.3002, 37.2393, 0.29", "-10.9206, 52.032, 37.568, 0.96", "-11.034, 52.7535, 37.8927, 1.84", "-11.1509, 53.8659, 38.3768, 0.37", "-11.2516, 54.7261, 38.7749, 0.81", "-11.4431, 55.7437, 39.3107, 1.55", "-11.7153, 56.7616, 39.9477, 0.22", "-11.9604, 57.5261, 40.4602, 0.22", "-12.1527, 58.067, 40.8602, 0.22", "-12.3385, 58.7526, 41.3627, 0.29", "-12.4346, 59.4184, 41.8073, 0.29", "-12.4608, 60.1962, 42.2878, 0.59", "-12.401, 61.3452, 42.9901, 1.77", "-12.3172, 62.1624, 43.4829, 2.14", "-12.0609, 63.686, 44.3869, 0.29", "-11.8978, 64.4099, 44.8007, 0.29", "-11.7349, 65.1128, 45.1901, 0.29", "-11.6313, 65.5108, 45.4128, 0.29", "-11.4813, 66.0637, 45.7589, 0.88", "-11.2871, 66.7469, 46.2375, 1.62", "-11.1071, 67.3037, 46.6853, 1.62", "-10.8303, 68.0265, 47.2558, 2.21", "-10.0366, 69.7446, 48.5671, 0.22", "-9.67527, 70.441, 49.0796, 0.22", "-9.41347, 70.9062, 49.4211, 0.22", "-9.13217, 71.3754, 49.7557, 0.22", "-8.57602, 72.2456, 50.3443, 0.44", "-7.88513, 73.2033, 50.9511, 0.66", "-7.77495, 73.3601, 51.0376, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-15.4871, 22.8698, 9.49529, 0.96", "-15.2456, 21.8238, 10.1754, 0.96", "-14.9671, 20.7311, 10.8717, 0.37", "-14.9268, 20.3275, 11.0656, 0.29", "-14.9331, 19.5797, 11.3232, 0.22", "-14.9994, 19.0795, 11.4653, 0.22", "-15.1669, 18.3023, 11.6607, 0.52", "-15.4493, 17.3642, 11.8663, 0.74", "-16.0081, 16.0815, 12.0571, 0.52", "-16.4579, 15.1542, 12.1634, 1.11", "-17.1595, 13.7381, 12.3188, 1.62", "-17.7704, 12.48, 12.4471, 1.33", "-18.5893, 10.7005, 12.6335, 1.11", "-19.6635, 8.26077, 12.8994, 0.44", "-20.2058, 6.96952, 13.0376, 0.44", "-20.762, 5.63123, 13.1626, 0.44", "-21.201, 4.56358, 13.2305, 0.96", "-21.8398, 3.02343, 13.3118, 1.47", "-22.6194, 1.24765, 13.3731, 1.7", "-23.5708, -0.712372, 13.4349, 1.7", "-24.5721, -2.42884, 13.4807, 1.7", "-25.6452, -4.00665, 13.5112, 0.59", "-26.7448, -5.45008, 13.5569, 0.44", "-27.8051, -6.72494, 13.6296, 0.44", "-28.4573, -7.46216, 13.7225, 0.44", "-29.4641, -8.56695, 13.9967, 0.44", "-29.801, -8.95752, 14.1588, 0.44", "-30.1235, -9.475, 14.4276, 0.44", "-30.4587, -10.3048, 14.8591, 0.44", "-30.653, -10.8583, 15.1275, 0.88", "-31.147, -12.1636, 15.6657, 1.4", "-31.5573, -13.0531, 15.981, 1.4", "-32.3805, -14.4596, 16.401, 0.66", "-33.0827, -15.4821, 16.6494, 0.22", "-33.8288, -16.4737, 16.8795, 0.22", "-34.2678, -17.0418, 17.021, 1.03", "-35.0168, -18.0184, 17.2848, 2.36", "-35.8479, -19.1666, 17.6403, 2.65", "-37.2244, -21.2362, 18.4123, 0.81", "-37.8016, -22.418, 18.8936, 0.22", "-38.0031, -23.0053, 19.1513, 0.22", "-38.1465, -23.5726, 19.4186, 0.66", "-38.2686, -24.2793, 19.7777, 0.66", "-38.3183, -24.7232, 20.0275, 0.66", "-38.3953, -25.9559, 20.8123, 0.22", "-38.4868, -26.5809, 21.1938, 0.22", "-38.5739, -26.865, 21.367, 0.22", "-38.8069, -27.3307, 21.6477, 0.22", "-39.2128, -27.953, 21.9909, 0.22", "-39.4209, -28.2108, 22.1121, 0.22", "-39.9917, -28.8083, 22.3333, 0.22", "-40.328, -29.1564, 22.4118, 0.29", "-41.1763, -30.055, 22.5225, 0.29", "-41.5805, -30.5316, 22.5587, 0.59", "-42.2527, -31.4252, 22.6079, 0.88", "-42.8435, -32.3272, 22.6758, 0.66", "-43.4547, -33.5184, 22.8164, 0.22", "-43.6745, -34.0996, 22.9262, 0.22", "-44.1117, -35.5529, 23.3078, 0.59", "-44.4184, -36.7849, 23.7016, 1.03", "-44.6949, -38.0108, 24.1287, 1.62", "-45.0849, -39.6587, 24.7449, 0.59", "-45.5385, -41.3398, 25.3526, 0.22", "-45.929, -42.4992, 25.754, 0.52", "-46.2304, -43.1768, 25.9828, 1.25", "-46.8558, -44.2723, 26.355, 2.14", "-47.5549, -45.2493, 26.6718, 1.33", "-48.6489, -46.5056, 27.1062, 0.52", "-49.2934, -47.2063, 27.3764, 0.22", "-49.9914, -48.0003, 27.7306, 0.44", "-50.5266, -48.6435, 28.0719, 0.44", "-50.9991, -49.324, 28.4547, 0.22", "-51.374, -49.9992, 28.7619, 0.22", "-51.7913, -50.8468, 29.0858, 0.22", "-52.0609, -51.4475, 29.2511, 0.52", "-52.4299, -52.2918, 29.4091, 0.74", "-53.1305, -53.6379, 29.6117, 0.81", "-53.9501, -54.7729, 29.8331, 0.22", "-54.648, -55.4109, 30.0111, 0.22", "-55.0193, -55.6614, 30.1239, 0.22", "-55.604, -56.0375, 30.3433, 0.66", "-56.6146, -56.683, 30.8147, 1.33", "-57.4505, -57.2617, 31.28, 1.55", "-58.2763, -57.9613, 31.7984, 0.88", "-59.2468, -58.9275, 32.3487, 0.15", "-60.2068, -59.9381, 32.8345, 0.29", "-60.7103, -60.5008, 33.0667, 0.88", "-61.2155, -61.0849, 33.2405, 1.25", "-61.7565, -61.7115, 33.3926, 1.33", "-63.1998, -63.35, 33.7636, 0.22", "-63.8363, -64.0763, 33.9245, 0.74", "-64.4415, -64.7712, 34.0822, 1.25", "-65.4041, -65.9878, 34.3559, 0.44", "-65.9606, -66.9342, 34.6063, 0.22", "-66.1893, -67.5169, 34.7701, 0.22", "-66.3726, -68.3543, 34.9893, 0.96", "-66.4531, -68.8941, 35.1303, 1.55", "-66.5785, -69.9933, 35.4227, 1.33", "-66.8459, -72.5048, 36.137, 0.15", "-66.9313, -73.1073, 36.2999, 0.37", "-67.1561, -74.2238, 36.6035, 0.15", "-67.4333, -75.1575, 36.8826, 0.15", "-67.7667, -76.0013, 37.1613, 0.52", "-68.2081, -76.8952, 37.4778, 1.18", "-68.8474, -77.9619, 37.8818, 2.06", "-69.7054, -79.3174, 38.4267, 0.96", "-70.6205, -80.7076, 39.0094, 0.22", "-71.2941, -81.6908, 39.4143, 0.22", "-72.1126, -82.8467, 39.9011, 0.22", "-72.6444, -83.5889, 40.2183, 0.22", "-73.4501, -84.6927, 40.7275, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "133.966, -96.4962, -72.6677, 0.15", "140.545, -103.319, -76.8241, 0.15", "146.111, -110.918, -80.9608, 0.15", "152.01, -118.054, -85.4923, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "133.966, -96.4962, -72.6677, 0.59", "139.8, -102.128, -75.235, 0.15", "145.498, -108.227, -76.8715, 0.15", "149.529, -115.204, -79.2507, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "52.477, 78.0237, 11.5189, 0.15", "59.9604, 84.1382, 11.6279, 0.15", "66.5608, 90.8471, 9.78162, 0.15", "72.2399, 97.487, 5.89234, 0.15", "76.8509, 104.349, 1.14426, 0.15", "81.0188, 110.408, -4.99426, 0.15", "86.2796, 116.381, -10.3513, 0.15", "91.6133, 122.702, -15.1762, 0.15", "96.9175, 128.959, -20.1215, 0.15", "101.524, 136.294, -24.0426, 0.15", "103.83, 144.491, -28.1149, 0.15", "105.855, 153.535, -29.7434, 0.15", "108.238, 162.651, -30.1118, 0.15", "108.578, 172.063, -30.2445, 0.15", "109.074, 181.454, -29.382, 0.15", "110.646, 190.713, -28.2981, 0.15", "111.597, 200.029, -29.1928, 0.15", "113.065, 209.156, -30.9186, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "52.477, 78.0237, 11.5189, 0.59", "54.6132, 84.9696, 15.8598, 0.15", "55.9714, 92.233, 19.9351, 0.15", "56.433, 98.8235, 25.2993, 0.15", "55.711, 105.965, 29.7802, 0.15", "54.7883, 112.427, 35.263, 0.15", "53.7035, 119.256, 40.1937, 0.15", "52.1052, 126.349, 44.5338, 0.15", "52.3296, 133.042, 49.7711, 0.15", "52.3601, 139.714, 55.0461, 0.15", "52.3631, 146.92, 59.4645, 0.15", "52.0908, 154.625, 62.7901, 0.15", "51.9002, 161.531, 67.7144, 0.15", "51.5454, 167.072, 74.2685, 0.15", "51.7031, 172.065, 81.2915, 0.15", "52.3183, 177.226, 88.1547, 0.15", "54.2793, 183.142, 94.0143, 0.15", "57.5464, 188.301, 100.064, 0.15", "60.3954, 194.108, 105.664, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "64.0918, 83.0636, 25.1533, 0.66", "65.0561, 84.8792, 25.2537, 0.66", "65.614, 85.8138, 25.3049, 0.66", "66.3033, 86.9342, 25.3644, 0.44", "66.7965, 87.7498, 25.425, 0.37", "67.4241, 88.8368, 25.5359, 0.37", "67.9532, 89.8114, 25.678, 0.37", "68.2112, 90.2779, 25.7736, 0.59", "68.6423, 91.1442, 25.9631, 1.11", "69.2188, 92.5633, 26.2573, 0.37", "69.5488, 93.7122, 26.5458, 0.59", "69.822, 95.1345, 26.9548, 0.37", "70.0338, 96.5443, 27.418, 0.44", "70.1526, 97.3141, 27.6979, 0.22", "70.289, 98.0013, 27.98, 0.22", "70.764, 99.7934, 28.7899, 0.22", "71.1175, 100.73, 29.2463, 0.22", "71.3712, 101.203, 29.4942, 0.44", "71.872, 101.891, 29.8762, 0.66", "72.7485, 102.833, 30.4027, 0.22", "73.1671, 103.207, 30.606, 0.22", "73.7413, 103.655, 30.8424, 0.66", "74.2273, 104.023, 31.0557, 1.03", "75.3303, 104.87, 31.5547, 0.22", "76.2638, 105.627, 31.9831, 0.66", "76.8245, 106.113, 32.2539, 0.81", "78.0795, 107.232, 32.8806, 1.03", "79.0309, 108.091, 33.3698, 0.74", "79.963, 108.933, 33.8689, 0.37", "80.6455, 109.515, 34.2428, 0.37", "81.2249, 109.997, 34.5598, 0.29", "81.8322, 110.494, 34.8872, 0.29", "82.3433, 110.906, 35.1498, 0.66", "83.0896, 111.501, 35.5499, 1.25", "84.4227, 112.539, 36.2676, 0.29", "84.8319, 112.856, 36.4814, 0.29", "85.6935, 113.554, 36.9094, 0.88", "86.5199, 114.276, 37.3076, 0.52", "87.1956, 114.903, 37.6206, 1.11", "88.1311, 115.815, 38.0342, 0.66", "89.0058, 116.705, 38.4336, 0.29", "89.6399, 117.327, 38.7282, 0.59", "90.7859, 118.366, 39.2645, 0.22", "91.3252, 118.809, 39.5204, 0.59", "92.0804, 119.38, 39.8761, 1.18", "93.0202, 120.032, 40.3363, 0.22", "93.6503, 120.443, 40.6509, 0.22", "94.1805, 120.784, 40.915, 0.22", "94.7462, 121.178, 41.2148, 0.22", "95.1212, 121.499, 41.4164, 0.22", "95.5441, 121.964, 41.6394, 0.37", "96.156, 122.817, 41.9631, 0.37", "96.544, 123.455, 42.182, 0.22", "96.9676, 124.242, 42.4463, 0.52", "97.5084, 125.328, 42.8375, 0.52", "97.8684, 126.036, 43.1246, 0.96", "98.2375, 126.697, 43.4356, 1.77", "98.6621, 127.38, 43.7998, 1.77", "99.2792, 128.311, 44.3182, 0.22", "99.7333, 128.96, 44.6808, 0.22", "100.179, 129.541, 45.035, 0.22", "100.643, 130.111, 45.3845, 0.22", "101.091, 130.627, 45.6818, 0.22", "101.635, 131.269, 46.0025, 0.22", "102.227, 131.978, 46.2924, 0.22", "102.533, 132.366, 46.4302, 0.66", "102.984, 132.958, 46.633, 0.81", "103.638, 133.84, 46.9519, 0.22", "104.149, 134.516, 47.2309, 0.22", "104.569, 135.112, 47.4821, 0.74", "105.053, 135.899, 47.7884, 0.88", "105.318, 136.401, 47.9704, 1.11", "105.873, 137.657, 48.4161, 1.11", "106.3, 138.842, 48.8144, 0.37", "106.72, 140.183, 49.2741, 0.22", "106.949, 141.028, 49.5773, 0.29", "107.138, 141.8, 49.8781, 0.29", "107.33, 142.575, 50.2214, 0.37", "107.559, 143.266, 50.6181, 0.37", "107.789, 143.705, 50.983, 0.22", "108.12, 144.107, 51.4472, 0.22", "108.641, 144.603, 52.1302, 0.22", "109.175, 145.033, 52.7772, 0.29", "109.984, 145.641, 53.7224, 0.22", "110.471, 146.021, 54.279, 1.4", "110.981, 146.478, 54.8663, 2.21", "111.318, 146.873, 55.2918, 1.7", "111.704, 147.491, 55.8856, 0.96", "112.083, 148.265, 56.633, 0.96", "112.277, 148.713, 57.0947, 1.47", "112.481, 149.167, 57.6017, 1.47", "112.896, 150.022, 58.6197, 0.22", "113.18, 150.549, 59.2523, 0.22", "113.499, 151.116, 59.8909, 0.22", "113.849, 151.684, 60.472, 0.22", "114.176, 152.164, 60.9341, 0.22", "114.453, 152.536, 61.238, 0.88", "114.912, 153.111, 61.6406, 1.99", "115.607, 153.953, 62.1441, 1.55", "116.459, 155.004, 62.6715, 0.22", "117.09, 155.788, 63.0385, 0.22", "117.947, 156.798, 63.5153, 0.29", "118.487, 157.401, 63.8035, 0.59", "119.372, 158.267, 64.2132, 0.96", "120.447, 159.183, 64.648, 0.15", "121.37, 159.893, 65.004, 1.18", "122.566, 160.761, 65.4575, 1.18", "123.586, 161.467, 65.8479, 1.4", "125.063, 162.446, 66.4146, 0.22", "125.736, 162.893, 66.6693, 0.37", "126.439, 163.387, 66.9471, 1.03", "126.751, 163.634, 67.0798, 0.88", "127.167, 164.007, 67.2926, 0.74", "127.726, 164.546, 67.6325, 0.96", "128.441, 165.395, 68.1697, 0.22", "129.082, 166.201, 68.6464, 0.96", "129.435, 166.62, 68.883, 0.74", "130.055, 167.311, 69.3037, 0.22", "130.674, 167.974, 69.7262, 0.29", "131.598, 168.934, 70.3504, 0.29", "132.253, 169.568, 70.7652, 0.29", "133.305, 170.541, 71.3655, 0.22", "133.839, 171.027, 71.6483, 0.66", "134.282, 171.455, 71.8743, 1.55", "134.568, 171.721, 72.0113, 1.55", "135.655, 172.672, 72.4888, 0.15", "136.51, 173.456, 72.8492, 0.15", "137.242, 174.17, 73.1358, 0.15", "137.879, 174.803, 73.3361, 0.15", "138.465, 175.411, 73.5037, 0.15", "138.913, 175.928, 73.6401, 0.88", "139.457, 176.617, 73.8123, 1.18", "140.096, 177.507, 74.0207, 1.18", "141.011, 178.8, 74.3234, 0.22", "141.983, 180.136, 74.6563, 0.22", "142.579, 181.001, 74.864, 1.18", "142.862, 181.42, 74.9683, 1.92", "143.318, 182.123, 75.1544, 1.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "64.0918, 83.0636, 25.1533, 0.44", "65.0343, 83.4408, 25.6649, 0.44", "66.0316, 83.8525, 26.2218, 0.44", "66.5232, 84.0279, 26.5154, 0.96", "67.6112, 84.3484, 27.2076, 1.7", "68.5732, 84.6067, 27.8316, 1.99", "70.026, 84.9624, 28.7623, 1.11", "71.0225, 85.1697, 29.3639, 0.37", "71.9738, 85.3401, 29.8677, 0.37", "73.1747, 85.5374, 30.4292, 0.37", "73.962, 85.6669, 30.7228, 0.37", "74.7373, 85.7966, 30.9538, 0.44", "75.8999, 85.9809, 31.2245, 0.96", "77.4002, 86.2111, 31.4945, 1.62", "78.8917, 86.4705, 31.769, 1.18", "80.8442, 86.8526, 32.1878, 0.29", "81.8276, 87.049, 32.4602, 0.44", "82.5366, 87.1948, 32.7146, 0.59", "83.6067, 87.4093, 33.1821, 0.29", "85.0037, 87.7123, 33.8973, 0.29", "86.5615, 88.1086, 34.785, 0.59", "87.6094, 88.4636, 35.419, 1.03", "88.8544, 89.0029, 36.1791, 1.7", "90.0268, 89.5993, 36.894, 1.7", "91.4333, 90.3452, 37.7543, 0.96", "92.292, 90.7752, 38.2521, 1.33", "93.9127, 91.5639, 39.1783, 1.62", "95.2222, 92.1923, 39.8832, 0.52", "96.2425, 92.6772, 40.4132, 0.22", "97.3442, 93.1987, 40.9651, 0.22", "98.7616, 93.8354, 41.6195, 0.22", "99.8622, 94.3492, 42.0758, 0.74", "100.877, 94.8781, 42.4454, 1.33", "101.785, 95.4566, 42.7215, 1.77", "103.143, 96.4983, 43.0644, 0.44", "104.397, 97.634, 43.3356, 0.22", "105.384, 98.6084, 43.5381, 0.66", "106.16, 99.3564, 43.7021, 0.29", "106.836, 99.9694, 43.8627, 0.29", "107.264, 100.303, 43.9819, 0.22", "107.838, 100.689, 44.1821, 0.22", "108.671, 101.174, 44.5298, 0.52", "109.681, 101.651, 44.9794, 0.88", "110.583, 102.0, 45.365, 0.88", "111.632, 102.381, 45.795, 0.22", "112.563, 102.752, 46.1829, 0.22", "113.024, 102.953, 46.3737, 0.52", "113.843, 103.333, 46.7141, 1.4", "114.956, 103.826, 47.1548, 1.18", "116.689, 104.542, 47.8087, 0.22", "117.974, 105.05, 48.2351, 0.59", "118.93, 105.417, 48.541, 0.22", "120.025, 105.867, 48.8685, 0.88", "121.43, 106.525, 49.2597, 1.55", "121.969, 106.814, 49.3888, 1.55", "123.82, 107.928, 49.7203, 0.88", "124.708, 108.505, 49.8375, 0.44", "125.521, 109.07, 49.9321, 0.22", "126.343, 109.628, 50.0293, 0.22", "127.205, 110.202, 50.1378, 0.37", "128.145, 110.791, 50.2716, 1.11", "129.35, 111.499, 50.4757, 1.18", "130.463, 112.141, 50.6841, 0.29", "131.986, 113.002, 50.9997, 0.22", "132.81, 113.467, 51.1987, 0.22", "133.633, 113.958, 51.4359, 1.11", "134.202, 114.338, 51.6366, 1.18", "135.305, 115.2, 52.1149, 0.29", "136.288, 116.011, 52.6356, 0.29", "136.888, 116.501, 53.0017, 1.03", "137.681, 117.075, 53.5346, 1.92", "138.25, 117.428, 53.8973, 1.92", "140.137, 118.413, 54.9931, 0.15", "141.151, 118.847, 55.5396, 0.15", "141.755, 119.089, 55.8591, 0.37", "142.618, 119.437, 56.3019, 1.11", "144.071, 120.03, 57.0477, 1.47", "145.486, 120.574, 57.7706, 0.44", "146.98, 121.108, 58.5339, 0.22", "148.164, 121.513, 59.1452, 0.74", "149.1, 121.785, 59.6568, 0.88", "150.699, 122.042, 60.5729, 0.22", "151.433, 122.038, 61.0289, 0.22", "152.157, 121.893, 61.4788, 0.44", "152.871, 121.649, 61.9154, 0.81", "153.743, 121.286, 62.4436, 1.03", "155.162, 120.703, 63.2964, 0.81", "156.307, 120.272, 64.0038, 0.22", "157.125, 120.044, 64.5066, 0.22", "157.816, 119.957, 64.9103, 0.22", "159.17, 120.004, 65.6613, 0.37", "160.679, 120.274, 66.4505, 0.22", "161.242, 120.448, 66.715, 0.96", "162.292, 120.866, 67.1326, 1.84", "164.352, 121.812, 67.794, 0.22", "165.343, 122.33, 68.0302, 0.22", "165.763, 122.597, 68.0932, 0.22", "166.532, 123.205, 68.1572, 0.22", "167.246, 123.864, 68.1938, 0.44", "168.2, 124.819, 68.2623, 1.18", "169.002, 125.626, 68.3655, 1.62", "169.793, 126.376, 68.5263, 1.7", "171.0, 127.554, 68.8672, 1.25", "172.519, 129.01, 69.4086, 0.29", "173.462, 129.813, 69.7995, 1.03", "174.306, 130.428, 70.1602, 1.47", "175.924, 131.433, 70.877, 0.22", "177.241, 132.135, 71.4571, 0.88", "178.245, 132.61, 71.8972, 0.44", "179.743, 133.309, 72.5336, 0.22", "180.818, 133.858, 72.9829, 0.22", "181.652, 134.333, 73.3293, 1.03", "182.629, 134.963, 73.7482, 1.47", "183.462, 135.594, 74.1, 1.25", "184.713, 136.719, 74.5909, 0.52", "186.078, 138.099, 75.0775, 0.37", "186.804, 138.833, 75.3045, 1.03", "187.242, 139.245, 75.4075, 1.4", "188.643, 140.459, 75.6559, 0.96", "189.634, 141.19, 75.7797, 0.81", "191.166, 142.169, 75.9229, 0.22", "192.128, 142.691, 75.9973, 0.22", "192.94, 143.086, 76.0884, 0.74", "193.541, 143.371, 76.1825, 0.81", "194.661, 143.953, 76.4153, 0.22", "195.198, 144.286, 76.5426, 0.22", "195.991, 144.842, 76.7109, 0.88", "197.199, 145.799, 76.9565, 1.33", "198.186, 146.669, 77.1159, 1.7", "199.427, 147.875, 77.2688, 1.47", "200.769, 149.306, 77.3818, 0.22", "201.57, 150.21, 77.427, 0.22", "202.479, 151.345, 77.4269, 0.29", "203.069, 152.232, 77.3761, 0.15", "203.436, 152.921, 77.3091, 0.15", "203.864, 153.964, 77.1771, 0.59", "204.212, 154.981, 77.0367, 0.37", "204.684, 156.349, 76.8162, 0.22", "205.234, 157.795, 76.5387, 0.22", "205.54, 158.501, 76.3977, 1.11", "206.226, 159.931, 76.0717, 0.22", "206.77, 160.985, 75.7932, 0.07", "207.271, 161.99, 75.5181, 0.07", "207.556, 162.609, 75.3718, 0.88", "207.748, 163.129, 75.2764, 1.11", "207.981, 164.24, 75.1369, 0.81", "208.034, 165.444, 75.0812, 0.37", "207.927, 167.165, 75.1352, 0.15", "207.737, 168.605, 75.2904, 0.15", "207.496, 169.853, 75.5098, 0.15", "207.252, 171.02, 75.7824, 0.59", "206.852, 172.695, 76.2622, 0.29", "206.6, 173.59, 76.5661, 0.66", "206.291, 174.622, 76.9747, 1.47", "205.789, 176.23, 77.6629, 0.22", "205.442, 177.384, 78.1705, 0.15", "205.121, 178.621, 78.7411, 0.15", "204.919, 179.49, 79.1506, 0.44", "204.773, 180.295, 79.5135, 0.44", "204.605, 181.521, 80.0608, 0.22", "204.545, 182.067, 80.2846, 0.15", "204.341, 183.208, 80.6814, 0.15", "204.244, 183.653, 80.8047, 0.15", "204.031, 184.319, 80.9257, 0.44", "203.824, 184.83, 80.9925, 0.44", "203.174, 186.319, 81.2047, 0.15", "202.733, 187.373, 81.4052, 0.22", "202.445, 188.088, 81.5613, 0.29", "202.111, 189.265, 81.8887, 0.29", "201.989, 190.19, 82.1827, 0.74", "202.022, 191.3, 82.5772, 0.66", "202.195, 192.284, 82.9491, 1.55", "202.344, 192.818, 83.1425, 1.55", "202.976, 194.471, 83.6975, 0.15", "203.529, 195.647, 84.0762, 0.22", "204.106, 196.763, 84.4133, 0.22", "204.499, 197.463, 84.6111, 0.22", "205.075, 198.396, 84.8711, 0.37", "206.267, 200.189, 85.3726, 0.22", "207.312, 201.773, 85.8199, 0.15", "207.77, 202.514, 86.0452, 1.18", "208.282, 203.436, 86.3331, 2.21", "208.454, 203.782, 86.4419, 2.21", "209.257, 205.784, 87.0463, 0.22", "209.681, 207.33, 87.4572, 0.22", "210.004, 209.037, 87.8217, 0.22", "210.084, 209.613, 87.9248, 0.66", "210.13, 210.037, 87.9807, 1.25", "210.277, 211.464, 88.1012, 1.62", "210.441, 213.202, 88.1454, 0.22", "210.676, 214.965, 88.0731, 0.22", "210.781, 215.647, 88.0072, 0.37", "210.966, 216.664, 87.8892, 0.88", "211.11, 217.448, 87.786, 0.88", "211.299, 218.573, 87.583, 0.22", "211.442, 219.859, 87.2988, 0.15", "211.479, 220.872, 87.0721, 0.15", "211.501, 221.362, 86.8844, 0.52", "211.558, 222.401, 86.397, 0.88", "211.634, 223.596, 85.7787, 0.22", "211.716, 224.425, 85.3063, 0.22", "211.896, 226.43, 84.1385, 0.15", "212.273, 229.86, 82.2444, 0.22", "212.42, 230.932, 81.6917, 0.44", "212.619, 232.069, 81.1761, 0.22", "212.87, 233.287, 80.7216, 0.29", "213.088, 234.272, 80.4356, 0.22", "213.449, 235.971, 80.1127, 0.15", "213.57, 236.745, 80.1111, 0.15", "213.794, 238.115, 80.1272, 0.15", "213.927, 238.852, 80.1612, 0.29", "214.065, 239.581, 80.2423, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-7.77495, 73.3601, 51.0376, 0.07", "-8.05274, 74.1476, 51.0045, 0.07", "-8.2828, 74.887, 51.0145, 0.07", "-8.62748, 76.3151, 51.128, 0.07", "-8.85603, 77.5202, 51.2284, 0.29", "-8.98933, 78.4705, 51.3144, 0.07", "-9.12056, 80.0138, 51.4507, 0.07", "-9.12964, 80.7812, 51.5335, 0.52", "-9.07381, 82.7152, 51.7705, 1.03", "-8.96788, 84.8187, 52.0804, 0.15", "-8.9308, 85.6736, 52.2116, 0.15", "-8.91251, 86.74, 52.3628, 0.15", "-8.92306, 87.7073, 52.4594, 0.15", "-8.99121, 88.5751, 52.5476, 0.07", "-9.09411, 89.2539, 52.6288, 0.07", "-9.23311, 90.129, 52.7525, 0.44", "-9.309, 90.6317, 52.8378, 0.74", "-9.3595, 91.1931, 52.957, 0.74", "-9.3711, 93.0346, 53.4104, 0.15", "-9.30611, 94.1533, 53.7031, 0.15", "-9.17468, 95.5242, 54.0618, 0.37", "-9.02168, 96.8038, 54.3985, 1.7", "-8.85202, 98.2124, 54.741, 1.03", "-8.60098, 100.104, 55.1762, 0.15", "-8.34273, 101.758, 55.561, 0.15", "-8.23493, 102.434, 55.7121, 0.66", "-8.08858, 103.29, 55.912, 1.03", "-7.79473, 104.727, 56.2235, 0.15", "-7.38857, 106.449, 56.5857, 0.15", "-7.05633, 107.615, 56.8668, 0.15", "-6.75255, 108.55, 57.0987, 0.29", "-6.42326, 109.536, 57.3319, 0.29", "-6.16224, 110.461, 57.5182, 0.74", "-5.93875, 111.561, 57.7231, 0.81", "-5.8479, 112.317, 57.8459, 0.81", "-5.76728, 114.41, 58.1376, 0.15", "-5.83638, 115.483, 58.3191, 0.74", "-6.25381, 117.817, 58.7646, 0.15", "-6.63003, 118.953, 59.027, 0.15", "-7.19532, 119.951, 59.2889, 0.15", "-7.74306, 120.65, 59.4873, 0.29", "-8.85552, 121.722, 59.8543, 0.15", "-9.23693, 122.024, 59.9667, 0.52", "-10.5638, 122.88, 60.3754, 1.4", "-13.035, 124.294, 61.1551, 0.15", "-13.7114, 124.62, 61.3753, 0.15", "-14.047, 124.754, 61.5042, 0.15", "-15.5138, 125.207, 62.1615, 0.81", "-17.1057, 125.538, 62.9759, 0.15", "-17.6596, 125.584, 63.2975, 0.15", "-18.4632, 125.581, 63.7817, 1.18", "-20.7512, 125.499, 65.1484, 0.07", "-22.2511, 125.402, 66.0095, 0.07", "-22.9498, 125.349, 66.3807, 0.59", "-23.6753, 125.318, 66.7169, 1.77", "-26.1201, 125.258, 67.743, 0.07", "-27.2382, 125.243, 68.1828, 0.07", "-27.973, 125.221, 68.435, 0.37", "-28.709, 125.202, 68.6528, 0.52", "-30.3898, 125.14, 69.1527, 0.07", "-31.9867, 125.078, 69.5928, 0.07", "-32.6406, 125.033, 69.7538, 0.07", "-33.178, 124.981, 69.8866, 0.29", "-34.4018, 124.805, 70.2137, 0.66", "-35.8266, 124.492, 70.6444, 0.07", "-36.8747, 124.2, 70.9754, 0.29", "-37.8122, 123.926, 71.2801, 0.88", "-39.793, 123.39, 71.9818, 0.15", "-40.8063, 123.133, 72.3782, 0.52", "-42.9309, 122.61, 73.248, 0.07", "-43.6184, 122.451, 73.5276, 0.59", "-44.5568, 122.238, 73.9193, 1.47", "-46.7739, 121.77, 74.8576, 0.07", "-47.611, 121.6, 75.2213, 0.07", "-48.8829, 121.345, 75.7819, 0.07", "-49.2738, 121.267, 75.949, 0.37", "-50.0986, 121.106, 76.2714, 0.81", "-51.6493, 120.822, 76.8238, 0.07", "-52.8804, 120.61, 77.1947, 0.07", "-53.5121, 120.549, 77.3526, 0.44", "-54.1726, 120.53, 77.5017, 0.88", "-56.0001, 120.583, 77.8414, 0.15", "-56.9789, 120.667, 77.9783, 0.37", "-57.5203, 120.732, 78.0263, 0.37", "-59.747, 120.983, 78.137, 0.15", "-60.4768, 121.054, 78.1646, 0.15", "-61.5778, 121.169, 78.1855, 0.37", "-63.5572, 121.351, 78.1789, 0.07", "-64.8284, 121.477, 78.1604, 0.29", "-65.9805, 121.605, 78.1467, 0.07", "-67.1227, 121.75, 78.1311, 0.07", "-69.568, 122.084, 78.0874, 0.07", "-72.8126, 122.549, 78.03, 0.07", "-73.8578, 122.715, 78.0097, 0.07", "-75.3574, 122.979, 77.9944, 0.07", "-76.2569, 123.158, 77.9986, 0.59", "-77.613, 123.422, 78.0105, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-7.77495, 73.3601, 51.0376, 0.37", "-8.07789, 72.3708, 52.2591, 0.37", "-8.19082, 71.7102, 53.0539, 0.37", "-8.2176, 71.2598, 53.6005, 0.59", "-8.17962, 70.4543, 54.4852, 0.22", "-8.1252, 69.8367, 55.0945, 0.22", "-8.09983, 69.3609, 55.5025, 0.15", "-8.09446, 68.8944, 55.908, 0.15", "-8.09126, 68.2277, 56.4147, 0.15", "-8.12334, 67.5739, 56.8489, 0.59", "-8.19857, 67.0725, 57.1168, 0.88", "-8.51833, 65.7743, 57.6971, 0.15", "-8.8531, 64.8466, 58.1047, 0.15", "-9.07664, 64.3328, 58.3086, 0.44", "-9.3216, 63.8465, 58.4823, 0.81", "-9.72117, 63.1274, 58.723, 0.07", "-10.2184, 62.2466, 58.9825, 0.22", "-10.7361, 61.3187, 59.2167, 0.22", "-11.4439, 60.0071, 59.5015, 0.07", "-12.032, 58.9253, 59.7078, 0.07", "-12.5786, 57.8948, 59.8937, 0.07", "-12.8668, 57.3085, 59.9859, 0.29", "-13.5478, 55.8774, 60.1965, 0.07", "-13.8527, 55.2021, 60.2805, 0.88", "-14.2355, 54.3515, 60.3923, 1.25", "-14.4716, 53.7925, 60.4675, 1.25", "-15.2009, 51.9705, 60.713, 0.07", "-15.6745, 50.7624, 60.8673, 0.07", "-15.9323, 50.0792, 60.9461, 0.07", "-16.0833, 49.6777, 60.9899, 0.52", "-16.4889, 48.6034, 61.0915, 0.66", "-16.7099, 48.0514, 61.1267, 0.22", "-17.0054, 47.3277, 61.1495, 0.52", "-17.2598, 46.7247, 61.1428, 0.29", "-17.769, 45.605, 61.1118, 0.07", "-18.2395, 44.6477, 61.0677, 0.07", "-18.6071, 43.9562, 61.033, 0.22", "-18.8767, 43.483, 61.0066, 0.22", "-19.6409, 42.1765, 60.9307, 0.07", "-19.8476, 41.8378, 60.9092, 0.37", "-20.0947, 41.4474, 60.8848, 0.59", "-20.6892, 40.5442, 60.8308, 0.07", "-21.1829, 39.8167, 60.7931, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-73.4501, -84.6927, 40.7275, 0.15", "-74.9867, -84.6962, 40.5976, 0.15", "-76.4829, -84.6772, 40.4453, 0.15", "-77.8441, -84.6441, 40.275, 0.15", "-79.2369, -84.603, 40.0867, 0.37", "-80.7703, -84.5464, 39.8669, 0.15", "-82.3086, -84.4758, 39.6385, 0.07", "-83.0856, -84.44, 39.5268, 0.22", "-85.389, -84.3151, 39.094, 0.15", "-85.5495, -84.3009, 39.0599, 0.59", "-86.5664, -84.1951, 38.8462, 1.11", "-87.0264, -84.1482, 38.7494, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-73.4501, -84.6927, 40.7275, 0.59", "-73.8843, -85.6599, 41.0134, 0.59", "-74.2184, -86.3612, 41.2224, 0.96", "-74.676, -87.4525, 41.5839, 1.47", "-74.9279, -88.1836, 41.8421, 1.47", "-75.3024, -89.495, 42.3382, 0.22", "-75.4613, -89.9849, 42.524, 0.15", "-75.6652, -90.4451, 42.6978, 0.15", "-76.0666, -91.2213, 43.0037, 0.15", "-76.4332, -91.8771, 43.2666, 0.37", "-76.8601, -92.5319, 43.5654, 0.37", "-77.7355, -93.6697, 44.1833, 0.22", "-78.285, -94.3082, 44.589, 0.22", "-78.6207, -94.6828, 44.844, 0.96", "-79.4836, -95.608, 45.5262, 2.06", "-80.3231, -96.4881, 46.2327, 1.11", "-81.4351, -97.6521, 47.2229, 0.22", "-82.255, -98.5468, 48.0269, 0.22", "-82.6216, -98.9457, 48.3751, 0.22", "-82.9215, -99.2644, 48.6407, 0.22", "-83.1947, -99.5382, 48.8602, 0.22", "-83.6149, -99.9488, 49.1164, 0.22", "-84.114, -100.405, 49.3101, 0.22", "-84.9118, -101.111, 49.5399, 0.22", "-85.5848, -101.739, 49.7207, 0.22", "-86.0025, -102.167, 49.8345, 0.66", "-86.8005, -103.07, 50.0866, 1.11", "-87.9341, -104.426, 50.491, 0.29", "-88.9124, -105.608, 50.8361, 0.22", "-89.7334, -106.595, 51.1257, 0.22", "-90.1183, -107.048, 51.2374, 0.29", "-91.0784, -108.178, 51.4836, 0.22", "-91.5121, -108.689, 51.59, 0.96", "-92.2536, -109.555, 51.7562, 1.84", "-93.5041, -110.978, 52.0087, 0.29", "-94.5583, -112.075, 52.208, 0.22", "-95.2717, -112.78, 52.3513, 0.22", "-95.7225, -113.223, 52.4512, 0.22", "-96.1333, -113.666, 52.573, 0.37", "-96.7534, -114.451, 52.8282, 0.52", "-97.355, -115.422, 53.1366, 0.29", "-97.8081, -116.299, 53.4313, 0.29", "-98.0425, -116.826, 53.5876, 0.29", "-98.4629, -117.874, 53.8892, 0.44", "-98.9006, -119.11, 54.2621, 0.52", "-99.4382, -120.852, 54.7933, 0.15", "-99.6837, -121.727, 55.0654, 0.59", "-100.12, -123.151, 55.5206, 1.7", "-100.741, -124.877, 56.0959, 0.15", "-101.087, -125.675, 56.389, 0.44", "-101.338, -126.214, 56.6096, 0.44", "-101.727, -126.97, 56.9556, 0.07", "-102.088, -127.621, 57.2566, 0.07", "-102.407, -128.106, 57.4732, 0.07", "-102.895, -128.761, 57.731, 0.29", "-103.75, -129.84, 58.1023, 0.52", "-104.374, -130.607, 58.3638, 0.22", "-104.908, -131.25, 58.5834, 0.22", "-105.511, -131.955, 58.8312, 0.37", "-106.125, -132.618, 59.0903, 0.74", "-107.084, -133.542, 59.4716, 1.33", "-108.132, -134.423, 59.8404, 0.22", "-108.923, -135.041, 60.088, 0.15", "-109.54, -135.499, 60.2702, 0.29", "-110.396, -136.117, 60.5276, 0.15", "-111.084, -136.598, 60.7138, 0.59", "-111.823, -137.068, 60.9027, 0.74", "-112.912, -137.707, 61.125, 0.07", "-113.935, -138.285, 61.3215, 0.15", "-114.664, -138.69, 61.4567, 0.15", "-115.259, -139.024, 61.5612, 0.15", "-115.929, -139.404, 61.6551, 0.15", "-116.862, -139.941, 61.7524, 0.29", "-117.614, -140.363, 61.7922, 0.74", "-118.721, -140.994, 61.8, 1.03", "-119.802, -141.634, 61.7781, 0.29", "-121.321, -142.547, 61.7617, 0.22", "-122.253, -143.137, 61.7393, 0.88", "-123.305, -143.786, 61.7137, 1.33", "-124.229, -144.337, 61.6778, 1.47", "-125.995, -145.341, 61.5962, 0.22", "-126.917, -145.834, 61.5432, 0.22", "-127.998, -146.392, 61.4944, 1.03", "-129.153, -146.972, 61.4351, 1.55", "-130.817, -147.814, 61.358, 0.74", "-132.465, -148.691, 61.3454, 0.22", "-133.309, -149.195, 61.3649, 0.22", "-134.07, -149.686, 61.3849, 0.22", "-134.951, -150.299, 61.4375, 0.15", "-135.753, -150.956, 61.5234, 0.37", "-136.744, -151.913, 61.7126, 0.15", "-137.408, -152.685, 61.8984, 0.15", "-138.238, -153.759, 62.2136, 0.22", "-138.598, -154.261, 62.3679, 0.15", "-139.128, -155.044, 62.6324, 0.15", "-139.435, -155.537, 62.8272, 0.74", "-139.773, -156.141, 63.1029, 0.88", "-140.403, -157.408, 63.8089, 0.15", "-140.639, -157.893, 64.0948, 0.22", "-141.014, -158.445, 64.408, 0.22", "-141.777, -159.308, 64.8755, 0.22", "-142.02, -159.542, 64.999, 0.22", "-142.616, -160.055, 65.2524, 0.88", "-143.63, -160.839, 65.5639, 1.84", "-145.225, -161.95, 65.896, 0.15", "-146.158, -162.598, 66.0122, 0.15", "-146.83, -163.08, 66.0285, 0.29", "-147.805, -163.818, 66.0685, 0.74", "-148.653, -164.504, 66.1356, 1.11", "-149.446, -165.197, 66.2496, 0.52", "-150.541, -166.192, 66.4566, 0.22", "-152.318, -167.668, 66.7934, 0.29", "-153.776, -168.777, 67.1018, 0.15", "-154.605, -169.362, 67.3023, 0.37", "-155.708, -170.067, 67.5979, 1.18", "-157.259, -170.982, 68.0935, 0.44", "-158.667, -171.693, 68.601, 0.29", "-159.688, -172.163, 69.0058, 0.15", "-160.51, -172.52, 69.3065, 0.88", "-161.725, -173.037, 69.7554, 1.03", "-163.435, -173.727, 70.4354, 0.22", "-165.068, -174.359, 71.2024, 0.22", "-165.853, -174.651, 71.6049, 0.59", "-166.773, -174.972, 72.0805, 0.96", "-168.06, -175.35, 72.7274, 0.37", "-169.786, -175.737, 73.5696, 0.15", "-171.183, -175.932, 74.2088, 0.59", "-172.032, -176.001, 74.5855, 1.77", "-174.182, -176.096, 75.5257, 0.22", "-175.539, -176.133, 76.1316, 0.22", "-176.527, -176.151, 76.5447, 0.37", "-177.499, -176.19, 76.9041, 0.37", "-178.262, -176.252, 77.1713, 0.37", "-179.291, -176.356, 77.5561, 0.81", "-180.176, -176.497, 77.9536, 0.81", "-181.548, -176.897, 78.719, 0.29", "-182.337, -177.222, 79.2838, 0.29", "-182.84, -177.503, 79.8262, 0.29", "-183.041, -177.641, 80.1544, 0.29", "-183.692, -178.114, 81.5637, 0.29", "-183.917, -178.302, 82.1647, 0.44", "-184.312, -178.651, 83.2879, 0.44", "-184.934, -179.139, 84.8133, 0.81", "-185.595, -179.547, 86.0911, 0.81", "-186.213, -179.871, 87.0445, 0.81", "-186.645, -180.053, 87.5643, 0.22", "-187.762, -180.469, 88.7108, 0.22", "-189.139, -180.94, 89.896, 0.22", "-190.447, -181.387, 90.8704, 0.81", "-191.703, -181.847, 91.7133, 0.52", "-193.601, -182.629, 92.8346, 0.22", "-194.421, -183.008, 93.2492, 0.22", "-195.033, -183.336, 93.476, 0.52", "-196.082, -183.984, 93.6673, 0.15", "-196.552, -184.312, 93.6487, 0.59", "-197.72, -185.224, 93.3862, 0.15", "-198.482, -185.921, 93.0163, 0.37", "-199.286, -186.706, 92.5074, 0.15", "-199.978, -187.362, 91.9604, 0.37", "-200.391, -187.704, 91.5135, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "143.318, 182.123, 75.1544, 0.96", "144.313, 183.198, 75.4551, 0.96", "144.989, 184.007, 75.6711, 1.25", "145.588, 184.81, 75.8753, 0.66", "145.948, 185.334, 76.0043, 0.22", "146.378, 185.979, 76.1612, 0.15", "146.656, 186.385, 76.2609, 0.37", "147.215, 187.249, 76.4679, 0.15", "147.623, 187.846, 76.6139, 0.37", "147.943, 188.265, 76.721, 0.88", "148.345, 188.721, 76.8175, 0.88", "149.315, 189.661, 76.9131, 0.22", "149.994, 190.267, 76.9598, 0.22", "150.699, 190.814, 76.9814, 0.22", "151.194, 191.16, 76.9786, 0.22", "152.265, 191.855, 76.9233, 1.25", "153.4, 192.546, 76.7772, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "143.318, 182.123, 75.1544, 0.29", "143.282, 183.517, 75.6101, 0.29", "143.397, 184.204, 75.8263, 0.22", "143.552, 184.773, 75.9919, 0.66", "143.824, 185.617, 76.2153, 0.22", "144.12, 186.439, 76.4211, 0.15", "144.396, 187.207, 76.5994, 0.15", "144.792, 188.181, 76.782, 0.15", "145.243, 189.21, 76.9335, 0.22", "145.682, 190.144, 77.0406, 0.29", "146.072, 190.919, 77.1125, 0.22", "146.519, 191.702, 77.1759, 0.29", "147.245, 192.74, 77.2745, 0.22", "147.955, 193.625, 77.3721, 0.66", "148.389, 194.129, 77.4366, 1.11", "148.933, 194.746, 77.5154, 1.18", "149.692, 195.609, 77.6117, 0.37", "150.521, 196.561, 77.7139, 0.37", "151.165, 197.405, 77.7974, 0.22", "151.691, 198.33, 77.8819, 0.22", "151.999, 199.03, 77.924, 0.22", "152.203, 199.62, 77.9542, 0.59", "152.32, 200.051, 77.9856, 1.03", "152.538, 201.017, 78.0811, 1.18", "152.94, 202.839, 78.3638, 0.44", "153.123, 203.618, 78.5111, 0.88", "153.323, 204.495, 78.7101, 1.7", "153.548, 205.509, 78.9737, 2.29", "153.748, 206.417, 79.2324, 2.29", "153.895, 207.085, 79.4563, 1.99" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "153.895, 207.085, 79.4563, 0.22", "155.062, 209.173, 79.8417, 0.22", "155.609, 210.153, 80.0227, 0.22", "156.188, 211.19, 80.2141, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "153.895, 207.085, 79.4563, 0.29", "154.768, 207.757, 79.8681, 0.29", "155.348, 208.203, 80.1416, 0.29", "155.932, 208.652, 80.4172, 0.29", "156.426, 209.032, 80.6503, 0.52", "156.929, 209.42, 80.8879, 0.52", "157.762, 210.061, 81.2809, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_35", "dend_35", "dend_35", "dend_35", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_BTC_6b85c850ab_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_47, id: dend_47, parent: dend_35
create dend_47
public dend_47
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_10
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_72
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_58(0), soma_0(0.45000018730548563)
    connect dend_35(0), soma_0(0.45000018730548563)
    connect dend_0(0), soma_0(0.45000018730548563)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_47(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_20(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.16881, -12.804, 0.0, 3.44428 ) }
    soma_0 { pt3dadd( 1.99522, -11.5105, 0.0, 5.75363 ) }
    soma_0 { pt3dadd( 1.82164, -10.2169, 0.0, 7.75663 ) }
    soma_0 { pt3dadd( 1.64805, -8.92341, 0.0, 8.89598 ) }
    soma_0 { pt3dadd( 1.47447, -7.62987, 0.0, 9.91596 ) }
    soma_0 { pt3dadd( 1.30088, -6.33633, 0.0, 10.9547 ) }
    soma_0 { pt3dadd( 1.1273, -5.04279, 0.0, 11.8384 ) }
    soma_0 { pt3dadd( 0.953711, -3.74926, 0.0, 12.6846 ) }
    soma_0 { pt3dadd( 0.780126, -2.45572, 0.0, 13.1367 ) }
    soma_0 { pt3dadd( 0.606541, -1.16218, 0.0, 13.4162 ) }
    soma_0 { pt3dadd( 0.432956, 0.13136, 0.0, 13.3909 ) }
    soma_0 { pt3dadd( 0.25937, 1.4249, 0.0, 13.2383 ) }
    soma_0 { pt3dadd( 0.085785, 2.71844, 0.0, 12.8868 ) }
    soma_0 { pt3dadd( -0.0878002, 4.01197, 0.0, 12.8103 ) }
    soma_0 { pt3dadd( -0.261385, 5.30551, 0.0, 12.9125 ) }
    soma_0 { pt3dadd( -0.434971, 6.59905, 0.0, 12.4763 ) }
    soma_0 { pt3dadd( -0.608556, 7.89259, 0.0, 11.6777 ) }
    soma_0 { pt3dadd( -0.782141, 9.18613, 0.0, 10.5994 ) }
    soma_0 { pt3dadd( -0.955726, 10.4797, 0.0, 9.19908 ) }
    soma_0 { pt3dadd( -1.12931, 11.7732, 0.0, 7.03753 ) }
    soma_0 { pt3dadd( -1.3029, 13.0667, 0.0, 4.1381 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 21/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.21969, -11.987, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.21969, -11.987, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.50688, -12.8912, -4.64345, 1.84 ) }
    dend_58 { pt3dadd( 4.11949, -14.8201, -4.75747, 2.14 ) }
    dend_58 { pt3dadd( 4.51163, -16.0547, -4.83046, 1.92 ) }
    dend_58 { pt3dadd( 5.01025, -17.6246, -4.92326, 2.06 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 27/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.219697, -12.424, -1.64, 2.43 ) }
    dend_35 { pt3dadd( 0.219697, -12.424, -1.64, 2.43 ) }
    dend_35 { pt3dadd( -0.481312, -14.0102, -1.8504, 1.92 ) }
    dend_35 { pt3dadd( -1.06465, -15.3301, -2.02548, 2.14 ) }
    dend_35 { pt3dadd( -1.42578, -16.1472, -2.13387, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.5397, 11.896, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.5397, 11.896, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.83063, 12.9319, -0.0660259, 2.36 ) }
    dend_0 { pt3dadd( 2.21896, 14.2134, -0.138424, 2.36 ) }
    dend_0 { pt3dadd( 2.86408, 16.272, -0.242187, 2.29 ) }
    dend_0 { pt3dadd( 3.36063, 17.798, -0.328732, 2.21 ) }
    dend_0 { pt3dadd( 3.8697, 19.3074, -0.418377, 2.29 ) }
    dend_0 { pt3dadd( 4.31655, 20.6076, -0.498384, 2.43 ) }
    dend_0 { pt3dadd( 4.82871, 22.0458, -0.592863, 2.36 ) }
    dend_0 { pt3dadd( 5.25895, 23.1703, -0.659012, 2.51 ) }
    dend_0 { pt3dadd( 5.72063, 24.2674, -0.724195, 3.17 ) }
    dend_0 { pt3dadd( 6.02046, 24.9425, -0.7538, 3.17 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 44/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.3029, 13.0667, 0.0, 0.475067 ) }
    axon_0 { pt3dadd( -3.29794, 27.9334, 0.0, 0.475067 ) }
    axon_0 { pt3dadd( -5.29297, 42.8002, 0.0, 0.475067 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 47/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 5.01025, -17.6246, -4.92326, 0.88 ) }
    dend_62 { pt3dadd( 4.01086, -17.5799, -5.62243, 0.88 ) }
    dend_62 { pt3dadd( 3.03981, -17.6263, -6.28817, 0.81 ) }
    dend_62 { pt3dadd( 2.07311, -17.7563, -6.96809, 0.81 ) }
    dend_62 { pt3dadd( 0.956653, -17.991, -7.77824, 0.96 ) }
    dend_62 { pt3dadd( -0.100938, -18.2916, -8.57965, 1.4 ) }
    dend_62 { pt3dadd( -1.11632, -18.6737, -9.41394, 1.77 ) }
    dend_62 { pt3dadd( -2.01076, -19.0742, -10.1927, 0.44 ) }
    dend_62 { pt3dadd( -2.78218, -19.5261, -10.8964, 0.44 ) }
    dend_62 { pt3dadd( -3.21257, -19.8678, -11.2867, 0.44 ) }
    dend_62 { pt3dadd( -3.55109, -20.2769, -11.6395, 0.66 ) }
    dend_62 { pt3dadd( -3.94091, -21.0713, -12.2329, 1.03 ) }
    dend_62 { pt3dadd( -11.6915, -22.3624, -20.1466, 1.03 ) }
    dend_62 { pt3dadd( -18.1832, -23.1587, -29.1828, 1.03 ) }
    dend_62 { pt3dadd( -22.6175, -22.5183, -39.3938, 1.03 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 62/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 5.01025, -17.6246, -4.92326, 1.11 ) }
    dend_59 { pt3dadd( 5.67711, -18.8946, -4.59697, 1.11 ) }
    dend_59 { pt3dadd( 6.2287, -20.0811, -4.25854, 1.25 ) }
    dend_59 { pt3dadd( 6.42655, -20.5634, -4.107, 1.7 ) }
    dend_59 { pt3dadd( 6.7586, -21.4452, -3.82747, 1.77 ) }
    dend_59 { pt3dadd( 7.32371, -22.9546, -3.35112, 1.33 ) }
    dend_59 { pt3dadd( 7.76366, -24.129, -2.99328, 1.03 ) }
    dend_59 { pt3dadd( 8.07091, -25.0493, -2.69074, 1.03 ) }
    dend_59 { pt3dadd( 8.38002, -25.998, -2.40892, 1.03 ) }
    dend_59 { pt3dadd( 8.65725, -26.8311, -2.2084, 1.33 ) }
    dend_59 { pt3dadd( 9.09016, -28.0992, -1.99856, 1.33 ) }
    dend_59 { pt3dadd( 9.52991, -29.3234, -1.91561, 0.74 ) }
    dend_59 { pt3dadd( 10.0081, -30.6017, -1.95182, 0.74 ) }
    dend_59 { pt3dadd( 10.5327, -31.9081, -2.03571, 0.88 ) }
    dend_59 { pt3dadd( 10.937, -32.886, -2.1156, 1.33 ) }
    dend_59 { pt3dadd( 11.2421, -33.6336, -2.14114, 2.06 ) }
    dend_59 { pt3dadd( 11.8553, -35.197, -2.12645, 0.96 ) }
    dend_59 { pt3dadd( 12.3507, -36.4601, -2.03071, 0.74 ) }
    dend_59 { pt3dadd( 12.7147, -37.3841, -1.90683, 1.18 ) }
    dend_59 { pt3dadd( 12.9464, -38.0068, -1.7699, 1.55 ) }
    dend_59 { pt3dadd( 13.5336, -39.6078, -1.37148, 0.88 ) }
    dend_59 { pt3dadd( 13.8945, -40.5665, -1.16367, 0.81 ) }
    dend_59 { pt3dadd( 14.419, -41.8872, -0.969983, 0.88 ) }
    dend_59 { pt3dadd( 14.7284, -42.6367, -0.929505, 1.4 ) }
    dend_59 { pt3dadd( 15.0114, -43.3132, -0.969394, 1.4 ) }
    dend_59 { pt3dadd( 15.4529, -44.3666, -1.1327, 0.81 ) }
    dend_59 { pt3dadd( 15.8949, -45.3979, -1.38832, 0.88 ) }
    dend_59 { pt3dadd( 16.2615, -46.2181, -1.62442, 0.52 ) }
    dend_59 { pt3dadd( 16.4841, -46.6875, -1.76897, 0.96 ) }
    dend_59 { pt3dadd( 16.8793, -47.4712, -1.96811, 1.92 ) }
    dend_59 { pt3dadd( 17.3964, -48.4715, -2.14618, 0.74 ) }
    dend_59 { pt3dadd( 17.8966, -49.4168, -2.25769, 0.74 ) }
    dend_59 { pt3dadd( 18.3978, -50.3253, -2.30547, 0.96 ) }
    dend_59 { pt3dadd( 18.9049, -51.1625, -2.32059, 1.55 ) }
    dend_59 { pt3dadd( 19.8412, -52.5449, -2.33023, 0.81 ) }
    dend_59 { pt3dadd( 20.6585, -53.6396, -2.32087, 0.81 ) }
    dend_59 { pt3dadd( 21.4532, -54.6319, -2.30244, 1.25 ) }
    dend_59 { pt3dadd( 22.2419, -55.5889, -2.27697, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_59 { pt3dadd( 23.3806, -57.0142, -2.19725, 0.81 ) }
    dend_59 { pt3dadd( 24.322, -58.287, -2.09306, 0.81 ) }
    dend_59 { pt3dadd( 24.8456, -59.0212, -2.01958, 1.18 ) }
    dend_59 { pt3dadd( 25.4426, -59.8295, -1.90555, 1.55 ) }
    dend_59 { pt3dadd( 26.0643, -60.6933, -1.75153, 1.55 ) }
    dend_59 { pt3dadd( 26.7905, -61.8056, -1.54238, 0.59 ) }
    dend_59 { pt3dadd( 27.4314, -62.9771, -1.27271, 0.81 ) }
    dend_59 { pt3dadd( 27.8037, -63.7941, -1.0467, 1.33 ) }
    dend_59 { pt3dadd( 28.3305, -65.068, -0.674975, 0.37 ) }
    dend_59 { pt3dadd( 28.5857, -65.8029, -0.441723, 0.22 ) }
    dend_59 { pt3dadd( 32.9757, -73.6361, 0.400921, 0.22 ) }
    dend_59 { pt3dadd( 39.0678, -80.4018, 0.695997, 0.22 ) }
    dend_59 { pt3dadd( 44.8592, -87.1432, 2.76868, 0.22 ) }
    dend_59 { pt3dadd( 49.4154, -94.3069, 6.04281, 0.22 ) }
    dend_59 { pt3dadd( 54.4006, -100.685, 10.3364, 0.22 ) }
    dend_59 { pt3dadd( 59.077, -107.948, 13.1625, 0.22 ) }
    dend_59 { pt3dadd( 64.0914, -115.386, 14.4402, 0.22 ) }
    dend_59 { pt3dadd( 69.4723, -122.678, 14.624, 0.22 ) }
    dend_59 { pt3dadd( 74.4921, -130.055, 16.2495, 0.22 ) }
    dend_59 { pt3dadd( 79.1501, -137.733, 17.2503, 0.22 ) }
    dend_59 { pt3dadd( 83.6743, -145.527, 17.1567, 0.22 ) }
    dend_59 { pt3dadd( 88.363, -153.056, 15.5332, 0.22 ) }
    dend_59 { pt3dadd( 94.3772, -159.723, 14.0679, 0.22 ) }
    dend_59 { pt3dadd( 99.6041, -166.38, 10.7991, 0.22 ) }
    dend_59 { pt3dadd( 104.622, -173.726, 9.21251, 0.22 ) }
    dend_59 { pt3dadd( 108.168, -181.895, 8.23936, 0.22 ) }
    dend_59 { pt3dadd( 111.984, -189.996, 9.02052, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_35 (entry count 27/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.42578, -16.1472, -2.13387, 0.96 ) }
    dend_47 { pt3dadd( -2.66089, -16.8293, -2.28442, 0.96 ) }
    dend_47 { pt3dadd( -3.3355, -17.2238, -2.37522, 0.96 ) }
    dend_47 { pt3dadd( -4.02488, -17.6515, -2.47668, 1.25 ) }
    dend_47 { pt3dadd( -4.38827, -17.8937, -2.53462, 1.25 ) }
    dend_47 { pt3dadd( -5.05594, -18.3608, -2.65528, 0.96 ) }
    dend_47 { pt3dadd( -5.6878, -18.8129, -2.7845, 0.96 ) }
    dend_47 { pt3dadd( -6.24448, -19.2254, -2.91135, 1.47 ) }
    dend_47 { pt3dadd( -6.94605, -19.7018, -3.07833, 1.62 ) }
    dend_47 { pt3dadd( -7.81399, -20.207, -3.27748, 0.96 ) }
    dend_47 { pt3dadd( -8.52524, -20.5637, -3.44268, 0.96 ) }
    dend_47 { pt3dadd( -9.53162, -20.984, -3.67044, 1.11 ) }
    dend_47 { pt3dadd( -10.2552, -21.2211, -3.82711, 1.4 ) }
    dend_47 { pt3dadd( -11.5226, -21.5362, -4.09474, 1.33 ) }
    dend_47 { pt3dadd( -12.5681, -21.7364, -4.32643, 0.96 ) }
    dend_47 { pt3dadd( -13.6383, -21.9179, -4.57516, 1.18 ) }
    dend_47 { pt3dadd( -14.1757, -22.0067, -4.70343, 1.18 ) }
    dend_47 { pt3dadd( -15.5444, -22.2579, -5.04852, 0.88 ) }
    dend_47 { pt3dadd( -16.3264, -22.4533, -5.26262, 0.88 ) }
    dend_47 { pt3dadd( -16.857, -22.6432, -5.43321, 1.03 ) }
    dend_47 { pt3dadd( -17.8332, -23.1224, -5.76724, 1.25 ) }
    dend_47 { pt3dadd( -18.4566, -23.5002, -5.9791, 0.88 ) }
    dend_47 { pt3dadd( -19.0564, -23.9293, -6.18005, 0.88 ) }
    dend_47 { pt3dadd( -19.5926, -24.3574, -6.35419, 1.11 ) }
    dend_47 { pt3dadd( -20.1983, -24.8286, -6.55335, 1.25 ) }
    dend_47 { pt3dadd( -20.9831, -25.4109, -6.86261, 0.88 ) }
    dend_47 { pt3dadd( -21.5709, -25.8547, -7.17873, 1.03 ) }
    dend_47 { pt3dadd( -21.9828, -26.1931, -7.48192, 1.4 ) }
    dend_47 { pt3dadd( -22.4747, -26.6282, -7.96656, 1.18 ) }
    dend_47 { pt3dadd( -23.0599, -27.152, -8.7289, 1.25 ) }
    dend_47 { pt3dadd( -23.4223, -27.584, -9.59615, 1.4 ) }
    dend_47 { pt3dadd( -22.7889, -27.6787, -10.4336, 1.4 ) }
    dend_47 { pt3dadd( -22.0257, -27.569, -10.7973, 1.47 ) }
    dend_47 { pt3dadd( -20.4741, -27.2388, -11.268, 0.52 ) }
    dend_47 { pt3dadd( -19.637, -27.0387, -11.3848, 0.52 ) }
    dend_47 { pt3dadd( -18.7584, -26.8179, -11.4031, 0.59 ) }
    dend_47 { pt3dadd( -17.2812, -26.465, -11.2654, 0.59 ) }
    dend_47 { pt3dadd( -16.3846, -26.2705, -11.0957, 0.66 ) }
    dend_47 { pt3dadd( -15.4296, -26.114, -10.8288, 0.74 ) }
    dend_47 { pt3dadd( -14.1561, -25.9567, -10.4068, 0.59 ) }
    dend_47 { pt3dadd( -13.2019, -25.8895, -10.0563, 0.88 ) }
    dend_47 { pt3dadd( -11.9222, -25.8595, -9.53421, 0.37 ) }
    dend_47 { pt3dadd( -11.2473, -25.8939, -9.23909, 0.37 ) }
    dend_47 { pt3dadd( -10.5922, -25.9857, -8.91141, 0.37 ) }
    dend_47 { pt3dadd( -16.6829, -30.9292, -11.9574, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 72/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.42578, -16.1472, -2.13387, 1.4 ) }
    dend_36 { pt3dadd( -1.28836, -17.4275, -1.94496, 1.4 ) }
    dend_36 { pt3dadd( -1.1356, -18.7443, -1.77319, 1.03 ) }
    dend_36 { pt3dadd( -0.980786, -20.0245, -1.60724, 1.33 ) }
    dend_36 { pt3dadd( -0.80455, -21.5034, -1.40708, 1.25 ) }
    dend_36 { pt3dadd( -0.636912, -22.8471, -1.20643, 1.25 ) }
    dend_36 { pt3dadd( -0.477318, -24.1281, -0.993233, 1.11 ) }
    dend_36 { pt3dadd( -0.342552, -25.3602, -0.79941, 1.84 ) }
    dend_36 { pt3dadd( -0.250796, -26.1563, -0.687095, 1.62 ) }
    dend_36 { pt3dadd( -0.061647, -27.676, -0.452359, 1.18 ) }
    dend_36 { pt3dadd( 0.129203, -29.2876, -0.181206, 1.11 ) }
    dend_36 { pt3dadd( 0.312151, -30.9089, 0.102794, 1.25 ) }
    dend_36 { pt3dadd( 0.422705, -31.9809, 0.282563, 1.55 ) }
    dend_36 { pt3dadd( 0.533728, -33.1472, 0.487468, 2.06 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 86/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.02046, 24.9425, -0.7538, 2.88 ) }
    dend_10 { pt3dadd( 6.11788, 25.8051, -0.675055, 2.88 ) }
    dend_10 { pt3dadd( 6.24085, 26.8939, -0.575657, 2.58 ) }
    dend_10 { pt3dadd( 6.37982, 28.1243, -0.463323, 2.36 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 90/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.02046, 24.9425, -0.7538, 1.62 ) }
    dend_1 { pt3dadd( 7.05744, 24.5492, -1.37678, 1.62 ) }
    dend_1 { pt3dadd( 8.28162, 23.9483, -2.05301, 0.96 ) }
    dend_1 { pt3dadd( 9.0965, 23.4839, -2.4751, 0.96 ) }
    dend_1 { pt3dadd( 9.99527, 22.8999, -2.92314, 1.11 ) }
    dend_1 { pt3dadd( 10.4779, 22.5586, -3.15487, 1.25 ) }
    dend_1 { pt3dadd( 11.3925, 21.845, -3.59394, 0.96 ) }
    dend_1 { pt3dadd( 12.4816, 20.8229, -4.09059, 0.81 ) }
    dend_1 { pt3dadd( 13.0868, 20.2209, -4.35849, 0.81 ) }
    dend_1 { pt3dadd( 13.6141, 19.7129, -4.5971, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( 14.1052, 19.2639, -4.85535, 0.88 ) }
    dend_1 { pt3dadd( 14.9213, 18.5887, -5.32834, 0.74 ) }
    dend_1 { pt3dadd( 15.7932, 17.9643, -5.86671, 0.59 ) }
    dend_1 { pt3dadd( 16.5651, 17.483, -6.34507, 0.74 ) }
    dend_1 { pt3dadd( 17.1121, 17.167, -6.67198, 0.66 ) }
    dend_1 { pt3dadd( 17.6962, 16.835, -6.98139, 0.66 ) }
    dend_1 { pt3dadd( 18.5442, 16.3468, -7.37726, 0.96 ) }
    dend_1 { pt3dadd( 19.4316, 15.8448, -7.73184, 1.11 ) }
    dend_1 { pt3dadd( 20.5362, 15.1706, -8.12316, 0.81 ) }
    dend_1 { pt3dadd( 21.4239, 14.5676, -8.41581, 0.81 ) }
    dend_1 { pt3dadd( 22.2784, 13.9422, -8.70149, 0.52 ) }
    dend_1 { pt3dadd( 22.8256, 13.502, -8.91575, 0.52 ) }
    dend_1 { pt3dadd( 23.2193, 13.139, -9.13978, 0.52 ) }
    dend_1 { pt3dadd( 23.6849, 12.6293, -9.56217, 0.74 ) }
    dend_1 { pt3dadd( 24.1764, 12.0003, -10.2226, 0.96 ) }
    dend_1 { pt3dadd( 24.4658, 11.5726, -10.7206, 1.03 ) }
    dend_1 { pt3dadd( 24.8123, 11.0171, -11.4104, 0.81 ) }
    dend_1 { pt3dadd( 25.2598, 10.345, -12.2451, 0.52 ) }
    dend_1 { pt3dadd( 25.6281, 9.74972, -12.976, 0.88 ) }
    dend_1 { pt3dadd( 25.8132, 9.45298, -13.3477, 1.11 ) }
    dend_1 { pt3dadd( 26.2134, 8.86152, -14.0965, 0.81 ) }
    dend_1 { pt3dadd( 26.6641, 8.31979, -14.7587, 0.22 ) }
    dend_1 { pt3dadd( 27.3458, 7.7146, -15.4356, 0.15 ) }
    dend_1 { pt3dadd( 33.1648, 2.72932, -19.1254, 0.15 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 24/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -5.29297, 42.8002, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -7.28801, 57.6669, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -9.28305, 72.5336, 0.0, 0.15 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -22.6175, -22.5183, -39.3938, 0.15 ) }
    dend_66 { pt3dadd( -31.0069, -23.438, -47.9081, 0.15 ) }
    dend_66 { pt3dadd( -39.9868, -23.6109, -55.8544, 0.15 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 30/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -22.6175, -22.5183, -39.3938, 0.59 ) }
    dend_63 { pt3dadd( -25.944, -23.2286, -46.9909, 0.15 ) }
    dend_63 { pt3dadd( -29.305, -23.1643, -54.6064, 0.15 ) }
    dend_63 { pt3dadd( -34.3468, -22.0385, -61.1178, 0.15 ) }
    dend_63 { pt3dadd( -40.386, -21.7597, -66.8376, 0.15 ) }
    dend_63 { pt3dadd( -45.4966, -22.1256, -73.3993, 0.15 ) }
    dend_63 { pt3dadd( -50.5478, -24.0027, -79.7241, 0.15 ) }
    dend_63 { pt3dadd( -55.9564, -25.2247, -85.9268, 0.15 ) }
    dend_63 { pt3dadd( -61.0946, -27.0627, -92.1938, 0.15 ) }
    dend_63 { pt3dadd( -66.4687, -28.9582, -98.2406, 0.15 ) }
    dend_63 { pt3dadd( -72.8012, -29.538, -103.613, 0.15 ) }
    dend_63 { pt3dadd( -78.5845, -30.0222, -109.582, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 42/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 111.984, -189.996, 9.02052, 0.15 ) }
    dend_61 { pt3dadd( 117.469, -197.091, 9.16984, 0.15 ) }
    dend_61 { pt3dadd( 121.726, -204.894, 9.73617, 0.15 ) }
    dend_61 { pt3dadd( 124.995, -213.006, 11.32, 0.15 ) }
    dend_61 { pt3dadd( 127.945, -221.139, 13.3642, 0.15 ) }
    dend_61 { pt3dadd( 131.808, -229.053, 14.695, 0.15 ) }
    dend_61 { pt3dadd( 136.199, -236.553, 16.854, 0.15 ) }
    dend_61 { pt3dadd( 141.553, -242.79, 20.6815, 0.15 ) }
    dend_61 { pt3dadd( 146.883, -249.848, 22.2861, 0.15 ) }
    dend_61 { pt3dadd( 151.463, -257.272, 24.341, 0.15 ) }
    dend_61 { pt3dadd( 156.698, -264.516, 24.9983, 0.15 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 53/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 111.984, -189.996, 9.02052, 0.59 ) }
    dend_60 { pt3dadd( 115.954, -199.197, 9.91288, 0.15 ) }
    dend_60 { pt3dadd( 120.571, -208.038, 8.87676, 0.15 ) }
    dend_60 { pt3dadd( 124.982, -216.436, 5.73144, 0.15 ) }
    dend_60 { pt3dadd( 127.585, -225.319, 2.13171, 0.15 ) }
    dend_60 { pt3dadd( 131.868, -233.845, -0.827888, 0.15 ) }
    dend_60 { pt3dadd( 135.65, -242.694, -3.43934, 0.15 ) }
    dend_60 { pt3dadd( 140.875, -251.2, -4.61103, 0.15 ) }
    dend_60 { pt3dadd( 146.604, -259.355, -6.06599, 0.15 ) }
    dend_60 { pt3dadd( 150.421, -268.589, -6.64199, 0.15 ) }
    dend_60 { pt3dadd( 153.819, -277.808, -8.33837, 0.15 ) }
    dend_60 { pt3dadd( 158.01, -286.82, -9.50744, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 65/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -16.6829, -30.9292, -11.9574, 0.15 ) }
    dend_53 { pt3dadd( -21.4115, -34.0644, -12.7442, 0.15 ) }
    dend_53 { pt3dadd( -25.6313, -37.8001, -13.5182, 0.15 ) }
    dend_53 { pt3dadd( -29.2603, -42.106, -13.1503, 0.15 ) }
    dend_53 { pt3dadd( -32.8312, -46.4303, -13.7823, 0.15 ) }
    dend_53 { pt3dadd( -36.3938, -50.6176, -15.1114, 0.15 ) }
    dend_53 { pt3dadd( -38.98, -55.5283, -15.8008, 0.15 ) }
    dend_53 { pt3dadd( -41.7017, -60.3259, -16.7906, 0.15 ) }
    dend_53 { pt3dadd( -44.2728, -65.2854, -16.859, 0.15 ) }
    dend_53 { pt3dadd( -47.2957, -69.9851, -16.3697, 0.15 ) }
    dend_53 { pt3dadd( -50.1933, -74.6143, -15.0678, 0.15 ) }
    dend_53 { pt3dadd( -52.4629, -79.621, -14.1071, 0.15 ) }
    dend_53 { pt3dadd( -55.0266, -84.5825, -14.2571, 0.15 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 78/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -16.6829, -30.9292, -11.9574, 0.59 ) }
    dend_48 { pt3dadd( -19.2637, -36.6004, -17.3641, 0.15 ) }
    dend_48 { pt3dadd( -21.0511, -42.631, -22.6737, 0.15 ) }
    dend_48 { pt3dadd( -23.4042, -48.1316, -28.3765, 0.15 ) }
    dend_48 { pt3dadd( -24.3676, -53.9464, -34.1598, 0.15 ) }
    dend_48 { pt3dadd( -24.5536, -59.9256, -39.8447, 0.15 ) }
    dend_48 { pt3dadd( -25.6246, -66.18, -45.072, 0.15 ) }
    dend_48 { pt3dadd( -25.6168, -72.8805, -49.7872, 0.15 ) }
    dend_48 { pt3dadd( -25.7923, -79.9149, -53.9155, 0.15 ) }
    dend_48 { pt3dadd( -24.5058, -86.6538, -58.4085, 0.15 ) }
    dend_48 { pt3dadd( -23.9342, -93.3496, -63.1058, 0.15 ) }
    dend_48 { pt3dadd( -22.8186, -99.5556, -68.4189, 0.15 ) }
    dend_48 { pt3dadd( -21.289, -106.244, -72.9228, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 91/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 0.533728, -33.1472, 0.487468, 0.44 ) }
    dend_42 { pt3dadd( -0.045235, -34.5921, 1.59085, 0.44 ) }
    dend_42 { pt3dadd( -0.306872, -35.1959, 2.12113, 0.44 ) }
    dend_42 { pt3dadd( -0.613014, -36.0063, 2.98224, 0.44 ) }
    dend_42 { pt3dadd( -0.805647, -36.7083, 3.80234, 0.66 ) }
    dend_42 { pt3dadd( -0.916197, -37.3581, 4.50062, 0.66 ) }
    dend_42 { pt3dadd( -0.952426, -37.8221, 4.92971, 0.44 ) }
    dend_42 { pt3dadd( -0.929188, -38.4452, 5.49057, 0.52 ) }
    dend_42 { pt3dadd( -0.785984, -39.3532, 6.12983, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( -0.538969, -40.3498, 6.59066, 0.66 ) }
    dend_42 { pt3dadd( -0.203278, -41.5072, 6.98478, 0.88 ) }
    dend_42 { pt3dadd( 0.137463, -42.6966, 7.30381, 1.11 ) }
    dend_42 { pt3dadd( 0.421833, -43.8209, 7.54395, 0.74 ) }
    dend_42 { pt3dadd( 0.574468, -44.6578, 7.64147, 0.29 ) }
    dend_42 { pt3dadd( 0.649679, -45.5161, 7.6586, 0.22 ) }
    dend_42 { pt3dadd( 0.654097, -46.0263, 7.63984, 0.22 ) }
    dend_42 { pt3dadd( 0.600007, -46.6973, 7.61189, 0.22 ) }
    dend_42 { pt3dadd( 0.514166, -47.3299, 7.57585, 0.22 ) }
    dend_42 { pt3dadd( 0.322936, -48.6888, 7.48844, 0.29 ) }
    dend_42 { pt3dadd( 0.215471, -49.7412, 7.41752, 0.52 ) }
    dend_42 { pt3dadd( 0.183823, -50.485, 7.36223, 0.52 ) }
    dend_42 { pt3dadd( 0.227659, -51.5059, 7.27788, 0.44 ) }
    dend_42 { pt3dadd( 0.41648, -53.0179, 7.159, 0.29 ) }
    dend_42 { pt3dadd( 0.552729, -53.756, 7.11405, 0.66 ) }
    dend_42 { pt3dadd( 0.680274, -54.2733, 7.12115, 1.77 ) }
    dend_42 { pt3dadd( 0.942016, -55.2101, 7.19346, 1.18 ) }
    dend_42 { pt3dadd( 1.25245, -56.405, 7.37419, 0.52 ) }
    dend_42 { pt3dadd( 1.51631, -57.5178, 7.61043, 0.52 ) }
    dend_42 { pt3dadd( 1.67904, -58.2379, 7.79848, 0.81 ) }
    dend_42 { pt3dadd( 1.95091, -59.3143, 8.0846, 0.96 ) }
    dend_42 { pt3dadd( 2.22561, -60.253, 8.34995, 0.52 ) }
    dend_42 { pt3dadd( 2.64202, -61.5227, 8.76375, 0.22 ) }
    dend_42 { pt3dadd( 2.86228, -62.1177, 8.98515, 0.29 ) }
    dend_42 { pt3dadd( 3.18795, -62.8973, 9.31338, 0.29 ) }
    dend_42 { pt3dadd( 3.65266, -64.0072, 9.79855, 0.22 ) }
    dend_42 { pt3dadd( 3.96462, -64.7337, 10.131, 0.37 ) }
    dend_42 { pt3dadd( 4.27889, -65.4838, 10.4859, 0.74 ) }
    dend_42 { pt3dadd( 4.54251, -66.2042, 10.8347, 1.03 ) }
    dend_42 { pt3dadd( 4.74447, -67.02, 11.2226, 1.25 ) }
    dend_42 { pt3dadd( 4.95913, -68.6185, 11.9684, 0.37 ) }
    dend_42 { pt3dadd( 5.02508, -69.5491, 12.4058, 1.18 ) }
    dend_42 { pt3dadd( 5.07547, -70.4086, 12.7827, 2.65 ) }
    dend_42 { pt3dadd( 5.18209, -71.8112, 13.335, 2.21 ) }
    dend_42 { pt3dadd( 5.33277, -73.1693, 13.8247, 0.96 ) }
    dend_42 { pt3dadd( 5.50794, -74.2903, 14.1903, 0.29 ) }
    dend_42 { pt3dadd( 5.66661, -75.0845, 14.4419, 0.29 ) }
    dend_42 { pt3dadd( 5.8111, -75.8256, 14.675, 0.66 ) }
    dend_42 { pt3dadd( 5.98018, -76.7115, 14.998, 0.44 ) }
    dend_42 { pt3dadd( 6.13106, -77.4993, 15.313, 0.22 ) }
    dend_42 { pt3dadd( 6.21272, -77.8947, 15.4829, 0.22 ) }
    dend_42 { pt3dadd( 6.2948, -78.3757, 15.6794, 0.22 ) }
    dend_42 { pt3dadd( 6.39299, -79.357, 16.051, 0.29 ) }
    dend_42 { pt3dadd( 6.44817, -80.0987, 16.3121, 0.29 ) }
    dend_42 { pt3dadd( 6.49575, -80.6075, 16.4672, 0.22 ) }
    dend_42 { pt3dadd( 6.55633, -81.1943, 16.611, 0.22 ) }
    dend_42 { pt3dadd( 6.64373, -81.709, 16.7158, 0.81 ) }
    dend_42 { pt3dadd( 6.7678, -82.1948, 16.7897, 1.55 ) }
    dend_42 { pt3dadd( 7.12369, -83.2436, 16.9283, 1.84 ) }
    dend_42 { pt3dadd( 7.72588, -84.814, 17.111, 0.15 ) }
    dend_42 { pt3dadd( 7.91108, -85.3077, 17.1823, 0.15 ) }
    dend_42 { pt3dadd( 8.06547, -85.72, 17.2465, 0.15 ) }
    dend_42 { pt3dadd( 8.23804, -86.219, 17.3304, 0.15 ) }
    dend_42 { pt3dadd( 8.47411, -86.9588, 17.4568, 0.88 ) }
    dend_42 { pt3dadd( 8.66094, -87.5736, 17.5563, 1.92 ) }
    dend_42 { pt3dadd( 9.04173, -88.7935, 17.7069, 1.99 ) }
    dend_42 { pt3dadd( 9.14481, -89.1057, 17.7367, 1.99 ) }
    dend_42 { pt3dadd( 9.58248, -90.548, 17.8395, 0.15 ) }
    dend_42 { pt3dadd( 9.68852, -90.9474, 17.8563, 0.15 ) }
    dend_42 { pt3dadd( 9.77935, -91.3589, 17.8575, 0.37 ) }
    dend_42 { pt3dadd( 9.84803, -91.7776, 17.8501, 0.37 ) }
    dend_42 { pt3dadd( 9.98554, -92.7707, 17.8334, 0.15 ) }
    dend_42 { pt3dadd( 10.0521, -93.3878, 17.8421, 0.15 ) }
    dend_42 { pt3dadd( 10.1324, -94.1142, 17.8684, 0.22 ) }
    dend_42 { pt3dadd( 10.1728, -94.5379, 17.9033, 0.22 ) }
    dend_42 { pt3dadd( 10.2111, -95.3041, 17.9993, 0.15 ) }
    dend_42 { pt3dadd( 10.2173, -95.8902, 18.092, 0.15 ) }
    dend_42 { pt3dadd( 10.2145, -96.3541, 18.1766, 0.59 ) }
    dend_42 { pt3dadd( 10.2387, -96.8463, 18.2689, 1.03 ) }
    dend_42 { pt3dadd( 10.3217, -97.607, 18.3868, 0.22 ) }
    dend_42 { pt3dadd( 10.4521, -98.4068, 18.502, 0.07 ) }
    dend_42 { pt3dadd( 10.5611, -98.9193, 18.5794, 0.07 ) }
    dend_42 { pt3dadd( 10.6463, -99.242, 18.6342, 0.66 ) }
    dend_42 { pt3dadd( 10.9216, -100.082, 18.816, 0.96 ) }
    dend_42 { pt3dadd( 11.5166, -101.598, 19.1783, 0.22 ) }
    dend_42 { pt3dadd( 11.9087, -102.418, 19.3965, 0.22 ) }
    dend_42 { pt3dadd( 12.2101, -102.947, 19.5687, 0.44 ) }
    dend_42 { pt3dadd( 12.5787, -103.544, 19.785, 1.25 ) }
    dend_42 { pt3dadd( 12.9268, -104.064, 19.9772, 1.92 ) }
    dend_42 { pt3dadd( 13.4347, -104.716, 20.2246, 1.11 ) }
    dend_42 { pt3dadd( 13.9873, -105.336, 20.4784, 0.22 ) }
    dend_42 { pt3dadd( 14.4201, -105.822, 20.6601, 0.22 ) }
    dend_42 { pt3dadd( 14.8906, -106.397, 20.8521, 0.52 ) }
    dend_42 { pt3dadd( 15.4449, -107.197, 21.1048, 0.22 ) }
    dend_42 { pt3dadd( 15.951, -108.067, 21.403, 0.22 ) }
    dend_42 { pt3dadd( 16.305, -108.77, 21.671, 0.22 ) }
    dend_42 { pt3dadd( 16.4601, -109.129, 21.8143, 0.81 ) }
    dend_42 { pt3dadd( 16.7961, -109.982, 22.1791, 1.77 ) }
    dend_42 { pt3dadd( 17.3915, -111.603, 22.9372, 0.37 ) }
    dend_42 { pt3dadd( 17.6976, -112.452, 23.3494, 0.15 ) }
    dend_42 { pt3dadd( 17.8336, -112.843, 23.5314, 0.15 ) }
    dend_42 { pt3dadd( 18.0068, -113.329, 23.7442, 0.37 ) }
    dend_42 { pt3dadd( 18.2288, -113.922, 24.0003, 1.18 ) }
    dend_42 { pt3dadd( 18.5068, -114.621, 24.2915, 1.55 ) }
    dend_42 { pt3dadd( 18.9355, -115.695, 24.6834, 0.81 ) }
    dend_42 { pt3dadd( 19.201, -116.449, 24.9173, 0.15 ) }
    dend_42 { pt3dadd( 19.3473, -116.936, 25.064, 0.22 ) }
    dend_42 { pt3dadd( 19.5531, -117.67, 25.2742, 0.15 ) }
    dend_42 { pt3dadd( 19.7229, -118.346, 25.4596, 0.96 ) }
    dend_42 { pt3dadd( 19.9117, -119.094, 25.6618, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_42 { pt3dadd( 20.2114, -120.246, 25.9576, 0.22 ) }
    dend_42 { pt3dadd( 20.3744, -120.788, 26.087, 0.22 ) }
    dend_42 { pt3dadd( 20.6109, -121.467, 26.2427, 0.37 ) }
    dend_42 { pt3dadd( 20.6847, -121.656, 26.2805, 0.37 ) }
    dend_42 { pt3dadd( 20.9777, -122.34, 26.4114, 0.22 ) }
    dend_42 { pt3dadd( 21.1324, -122.656, 26.4766, 0.22 ) }
    dend_42 { pt3dadd( 21.4487, -123.196, 26.5602, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 7/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.533728, -33.1472, 0.487468, 1.84 ) }
    dend_37 { pt3dadd( 0.348828, -34.2315, 0.0259413, 1.84 ) }
    dend_37 { pt3dadd( 0.191169, -35.5319, -0.481881, 1.55 ) }
    dend_37 { pt3dadd( 0.0803365, -36.935, -0.979164, 1.55 ) }
    dend_37 { pt3dadd( -0.0207355, -38.4017, -1.44365, 1.55 ) }
    dend_37 { pt3dadd( -0.12457, -39.8582, -1.84456, 1.47 ) }
    dend_37 { pt3dadd( -0.22372, -41.1342, -2.16252, 0.96 ) }
    dend_37 { pt3dadd( -0.306669, -42.1521, -2.36665, 1.55 ) }
    dend_37 { pt3dadd( -0.483678, -43.9787, -2.62467, 1.25 ) }
    dend_37 { pt3dadd( -0.689021, -45.8663, -2.82939, 1.47 ) }
    dend_37 { pt3dadd( -0.928812, -47.8124, -2.98912, 1.03 ) }
    dend_37 { pt3dadd( -1.12774, -49.1278, -3.07609, 1.18 ) }
    dend_37 { pt3dadd( -1.46064, -50.9842, -3.16234, 1.99 ) }
    dend_37 { pt3dadd( -1.80759, -52.5605, -3.20986, 1.92 ) }
    // Section: dend_20, id: dend_20, parent: dend_10 (entry count 21/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 6.37982, 28.1243, -0.463323, 2.14 ) }
    dend_20 { pt3dadd( 7.66599, 29.714, -0.097398, 2.14 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.37982, 28.1243, -0.463323, 1.47 ) }
    dend_11 { pt3dadd( 5.99657, 29.4424, 0.734822, 1.47 ) }
    dend_11 { pt3dadd( 5.67703, 30.2336, 1.47124, 1.18 ) }
    dend_11 { pt3dadd( 5.25793, 30.9602, 2.1938, 1.18 ) }
    dend_11 { pt3dadd( 4.6654, 31.7085, 3.01851, 1.47 ) }
    dend_11 { pt3dadd( 4.05716, 32.2545, 3.70515, 1.47 ) }
    dend_11 { pt3dadd( 3.69352, 32.4599, 4.03206, 1.47 ) }
    dend_11 { pt3dadd( 2.75573, 32.5929, 4.57975, 1.47 ) }
    dend_11 { pt3dadd( 1.4921, 32.4204, 5.04429, 1.03 ) }
    dend_11 { pt3dadd( 0.732423, 32.1757, 5.21901, 1.62 ) }
    dend_11 { pt3dadd( 0.0370072, 31.8585, 5.32417, 1.77 ) }
    dend_11 { pt3dadd( -0.848958, 31.3413, 5.42806, 1.77 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 33.1648, 2.72932, -19.1254, 0.15 ) }
    dend_7 { pt3dadd( 39.7938, -2.51041, -23.0496, 0.15 ) }
    dend_7 { pt3dadd( 46.8265, -7.14532, -27.113, 0.15 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 33.1648, 2.72932, -19.1254, 0.59 ) }
    dend_2 { pt3dadd( 39.3819, -2.62033, -24.4528, 0.15 ) }
    dend_2 { pt3dadd( 44.3971, -9.0136, -29.7596, 0.15 ) }
    dend_2 { pt3dadd( 47.6249, -16.2358, -35.2495, 0.15 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 42/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -39.9868, -23.6109, -55.8544, 0.15 ) }
    dend_68 { pt3dadd( -50.3614, -19.7157, -60.8736, 0.15 ) }
    dend_68 { pt3dadd( -58.6465, -14.553, -68.03, 0.15 ) }
    dend_68 { pt3dadd( -65.1257, -7.63864, -75.3951, 0.15 ) }
    dend_68 { pt3dadd( -73.1948, -1.52665, -81.956, 0.15 ) }
    dend_68 { pt3dadd( -81.9887, 3.49696, -88.6051, 0.15 ) }
    dend_68 { pt3dadd( -90.3782, 8.11308, -96.0429, 0.15 ) }
    dend_68 { pt3dadd( -97.4562, 13.7517, -104.031, 0.15 ) }
    dend_68 { pt3dadd( -104.547, 20.3503, -111.159, 0.15 ) }
    dend_68 { pt3dadd( -110.623, 25.585, -120.189, 0.15 ) }
    dend_68 { pt3dadd( -118.403, 29.8635, -128.454, 0.15 ) }
    dend_68 { pt3dadd( -127.595, 35.3081, -134.146, 0.15 ) }
    dend_68 { pt3dadd( -136.86, 40.1762, -140.269, 0.15 ) }
    dend_68 { pt3dadd( -145.362, 46.7127, -145.767, 0.15 ) }
    dend_68 { pt3dadd( -155.015, 52.5486, -150.139, 0.15 ) }
    dend_68 { pt3dadd( -165.562, 58.1176, -152.318, 0.15 ) }
    dend_68 { pt3dadd( -175.373, 65.1401, -152.546, 0.15 ) }
    dend_68 { pt3dadd( -185.268, 71.874, -154.138, 0.15 ) }
    dend_68 { pt3dadd( -195.748, 77.9293, -153.541, 0.15 ) }
    dend_68 { pt3dadd( -206.083, 84.2114, -152.963, 0.15 ) }
    dend_68 { pt3dadd( -215.978, 90.8735, -154.841, 0.15 ) }
    dend_68 { pt3dadd( -225.216, 98.3445, -156.728, 0.15 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 64/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -39.9868, -23.6109, -55.8544, 0.59 ) }
    dend_67 { pt3dadd( -43.5937, -26.7383, -63.2359, 0.15 ) }
    dend_67 { pt3dadd( -48.1275, -29.1209, -70.4114, 0.15 ) }
    dend_67 { pt3dadd( -51.8985, -32.2126, -77.7275, 0.15 ) }
    dend_67 { pt3dadd( -55.3624, -35.2548, -85.2158, 0.15 ) }
    dend_67 { pt3dadd( -58.4122, -37.6019, -93.1465, 0.15 ) }
    dend_67 { pt3dadd( -61.8045, -40.705, -100.64, 0.15 ) }
    dend_67 { pt3dadd( -64.3013, -43.637, -108.548, 0.15 ) }
    dend_67 { pt3dadd( -67.5243, -46.3361, -116.285, 0.15 ) }
    dend_67 { pt3dadd( -69.1261, -50.7226, -123.66, 0.15 ) }
    dend_67 { pt3dadd( -69.6314, -55.3755, -131.009, 0.15 ) }
    dend_67 { pt3dadd( -70.0118, -60.1761, -138.259, 0.15 ) }
    dend_67 { pt3dadd( -71.4877, -65.2105, -145.19, 0.15 ) }
    dend_67 { pt3dadd( -71.5139, -70.9351, -151.664, 0.15 ) }
    dend_67 { pt3dadd( -72.5271, -77.6042, -156.954, 0.15 ) }
    dend_67 { pt3dadd( -74.9075, -84.0452, -162.124, 0.15 ) }
    dend_67 { pt3dadd( -77.2441, -90.094, -167.812, 0.15 ) }
    dend_67 { pt3dadd( -78.5776, -95.2758, -174.65, 0.15 ) }
    dend_67 { pt3dadd( -79.9216, -100.46, -181.485, 0.15 ) }
    dend_67 { pt3dadd( -79.617, -107.032, -186.985, 0.15 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 84/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -78.5845, -30.0222, -109.582, 0.15 ) }
    dend_65 { pt3dadd( -83.8707, -31.0974, -115.129, 0.15 ) }
    dend_65 { pt3dadd( -89.703, -32.2509, -120.083, 0.15 ) }
    dend_65 { pt3dadd( -96.1544, -33.1676, -124.259, 0.15 ) }
    dend_65 { pt3dadd( -101.857, -32.928, -129.477, 0.15 ) }
    dend_65 { pt3dadd( -107.846, -31.8792, -134.225, 0.15 ) }
    dend_65 { pt3dadd( -114.411, -32.4836, -138.276, 0.15 ) }
    dend_65 { pt3dadd( -121.064, -33.6664, -142.048, 0.15 ) }
    dend_65 { pt3dadd( -127.016, -35.6783, -146.556, 0.15 ) }
    dend_65 { pt3dadd( -132.585, -39.0253, -150.693, 0.15 ) }
    dend_65 { pt3dadd( -137.993, -42.5442, -154.889, 0.15 ) }
    dend_65 { pt3dadd( -142.734, -47.5112, -158.221, 0.15 ) }
    dend_65 { pt3dadd( -147.094, -52.2985, -162.255, 0.15 ) }
    dend_65 { pt3dadd( -151.228, -57.1172, -166.472, 0.15 ) }
    dend_65 { pt3dadd( -155.093, -62.801, -169.659, 0.15 ) }
    dend_65 { pt3dadd( -158.391, -69.2408, -171.736, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_65 { pt3dadd( -162.036, -75.3077, -174.375, 0.15 ) }
    dend_65 { pt3dadd( -164.346, -82.0896, -176.51, 0.15 ) }
    dend_65 { pt3dadd( -165.907, -88.54, -179.925, 0.15 ) }
    dend_65 { pt3dadd( -166.127, -95.535, -182.315, 0.15 ) }
    dend_65 { pt3dadd( -167.877, -102.421, -184.561, 0.15 ) }
    dend_65 { pt3dadd( -170.101, -109.458, -185.703, 0.15 ) }
    dend_65 { pt3dadd( -171.783, -116.378, -187.879, 0.15 ) }
    dend_65 { pt3dadd( -174.65, -122.88, -190.3, 0.15 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 8/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -78.5845, -30.0222, -109.582, 0.59 ) }
    dend_64 { pt3dadd( -82.5852, -29.9103, -115.996, 0.15 ) }
    dend_64 { pt3dadd( -86.229, -29.9067, -122.62, 0.15 ) }
    dend_64 { pt3dadd( -90.321, -30.7118, -128.921, 0.15 ) }
    dend_64 { pt3dadd( -93.6155, -32.2672, -135.52, 0.15 ) }
    dend_64 { pt3dadd( -96.6732, -32.9542, -142.391, 0.15 ) }
    dend_64 { pt3dadd( -98.2753, -33.9441, -149.684, 0.15 ) }
    dend_64 { pt3dadd( -101.036, -33.9523, -156.72, 0.15 ) }
    dend_64 { pt3dadd( -104.269, -33.8948, -163.553, 0.15 ) }
    dend_64 { pt3dadd( -107.519, -34.2367, -170.366, 0.15 ) }
    dend_64 { pt3dadd( -109.416, -35.0569, -177.617, 0.15 ) }
    dend_64 { pt3dadd( -111.159, -37.3693, -184.529, 0.15 ) }
    dend_64 { pt3dadd( -112.758, -38.7048, -191.758, 0.15 ) }
    dend_64 { pt3dadd( -113.916, -39.4797, -199.162, 0.15 ) }
    dend_64 { pt3dadd( -115.133, -40.1792, -206.565, 0.15 ) }
    dend_64 { pt3dadd( -115.85, -40.1603, -214.078, 0.15 ) }
    dend_64 { pt3dadd( -117.768, -39.8712, -221.382, 0.15 ) }
    dend_64 { pt3dadd( -120.587, -39.4344, -228.383, 0.15 ) }
    dend_64 { pt3dadd( -121.952, -39.5788, -235.805, 0.15 ) }
    dend_64 { pt3dadd( -123.908, -40.7369, -242.987, 0.15 ) }
    dend_64 { pt3dadd( -126.701, -42.4618, -249.762, 0.15 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 29/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -55.0266, -84.5825, -14.2571, 0.15 ) }
    dend_57 { pt3dadd( -60.6006, -92.9541, -14.6133, 0.15 ) }
    dend_57 { pt3dadd( -64.9698, -101.967, -14.4146, 0.15 ) }
    dend_57 { pt3dadd( -68.6245, -111.237, -14.9297, 0.15 ) }
    dend_57 { pt3dadd( -72.4088, -120.42, -13.5713, 0.15 ) }
    dend_57 { pt3dadd( -75.8148, -129.702, -11.9354, 0.15 ) }
    dend_57 { pt3dadd( -77.4744, -139.479, -11.0103, 0.15 ) }
    dend_57 { pt3dadd( -79.429, -149.137, -12.1975, 0.15 ) }
    dend_57 { pt3dadd( -82.2674, -158.235, -15.0423, 0.15 ) }
    dend_57 { pt3dadd( -85.9904, -166.491, -19.2784, 0.15 ) }
    dend_57 { pt3dadd( -89.3045, -173.638, -25.5343, 0.15 ) }
    dend_57 { pt3dadd( -93.3143, -179.767, -32.5324, 0.15 ) }
    dend_57 { pt3dadd( -97.6154, -185.741, -39.5102, 0.15 ) }
    dend_57 { pt3dadd( -103.06, -190.877, -46.444, 0.15 ) }
    dend_57 { pt3dadd( -108.192, -194.069, -54.7842, 0.15 ) }
    dend_57 { pt3dadd( -113.249, -197.154, -63.2149, 0.15 ) }
    dend_57 { pt3dadd( -116.402, -200.989, -72.1908, 0.15 ) }
    dend_57 { pt3dadd( -118.324, -205.68, -81.0481, 0.15 ) }
    dend_57 { pt3dadd( -120.216, -210.212, -90.0051, 0.15 ) }
    dend_57 { pt3dadd( -123.696, -214.57, -98.5825, 0.15 ) }
    dend_57 { pt3dadd( -127.785, -218.115, -107.319, 0.15 ) }
    dend_57 { pt3dadd( -133.433, -221.357, -115.3, 0.15 ) }
    dend_57 { pt3dadd( -139.374, -224.448, -123.138, 0.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -55.0266, -84.5825, -14.2571, 0.59 ) }
    dend_54 { pt3dadd( -61.217, -93.7823, -14.546, 0.15 ) }
    dend_54 { pt3dadd( -67.2675, -102.998, -15.663, 0.15 ) }
    dend_54 { pt3dadd( -74.6191, -111.345, -14.5353, 0.15 ) }
    dend_54 { pt3dadd( -81.6268, -119.941, -13.2756, 0.15 ) }
    dend_54 { pt3dadd( -89.3448, -127.888, -11.5143, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -21.289, -106.244, -72.9228, 0.15 ) }
    dend_50 { pt3dadd( -21.0354, -115.932, -79.6661, 0.15 ) }
    dend_50 { pt3dadd( -22.7048, -125.956, -85.591, 0.15 ) }
    dend_50 { pt3dadd( -23.1497, -135.471, -92.5899, 0.15 ) }
    dend_50 { pt3dadd( -25.3985, -145.808, -97.6462, 0.15 ) }
    dend_50 { pt3dadd( -28.8337, -156.468, -100.934, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 64/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -21.289, -106.244, -72.9228, 0.59 ) }
    dend_49 { pt3dadd( -22.4228, -111.764, -78.7047, 0.15 ) }
    dend_49 { pt3dadd( -23.4855, -117.389, -84.3872, 0.15 ) }
    dend_49 { pt3dadd( -24.8098, -124.161, -88.3593, 0.15 ) }
    dend_49 { pt3dadd( -26.1636, -131.532, -90.8252, 0.15 ) }
    dend_49 { pt3dadd( -26.4126, -139.28, -92.0474, 0.15 ) }
    dend_49 { pt3dadd( -26.1954, -147.094, -92.6032, 0.15 ) }
    dend_49 { pt3dadd( -25.0187, -154.851, -92.8148, 0.15 ) }
    dend_49 { pt3dadd( -25.3359, -162.643, -92.2717, 0.15 ) }
    dend_49 { pt3dadd( -24.1322, -170.391, -92.0752, 0.15 ) }
    dend_49 { pt3dadd( -23.7814, -178.16, -93.1466, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 75/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 21.4487, -123.196, 26.5602, 0.22 ) }
    dend_46 { pt3dadd( 21.1904, -123.714, 26.5784, 0.22 ) }
    dend_46 { pt3dadd( 20.8449, -124.407, 26.6029, 0.22 ) }
    dend_46 { pt3dadd( 20.5449, -125.009, 26.6241, 0.22 ) }
    dend_46 { pt3dadd( 20.0098, -126.083, 26.662, 0.22 ) }
    dend_46 { pt3dadd( 19.7683, -126.567, 26.6791, 0.15 ) }
    dend_46 { pt3dadd( 19.5275, -127.05, 26.6961, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 82/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 21.4487, -123.196, 26.5602, 1.18 ) }
    dend_43 { pt3dadd( 21.803, -124.06, 26.9203, 1.18 ) }
    dend_43 { pt3dadd( 22.1854, -125.06, 27.3006, 0.29 ) }
    dend_43 { pt3dadd( 22.5144, -125.979, 27.647, 0.15 ) }
    dend_43 { pt3dadd( 22.6883, -126.504, 27.8411, 0.15 ) }
    dend_43 { pt3dadd( 22.8465, -127.02, 28.0273, 0.29 ) }
    dend_43 { pt3dadd( 23.0411, -127.755, 28.298, 0.66 ) }
    dend_43 { pt3dadd( 23.1981, -128.518, 28.5842, 1.4 ) }
    dend_43 { pt3dadd( 23.3182, -129.65, 29.0078, 0.22 ) }
    dend_43 { pt3dadd( 23.3488, -130.438, 29.2994, 0.22 ) }
    dend_43 { pt3dadd( 23.3483, -130.782, 29.424, 0.22 ) }
    dend_43 { pt3dadd( 23.3303, -131.517, 29.6664, 0.22 ) }
    dend_43 { pt3dadd( 23.3002, -132.151, 29.86, 0.66 ) }
    dend_43 { pt3dadd( 23.2354, -132.943, 30.085, 0.15 ) }
    dend_43 { pt3dadd( 23.1427, -133.614, 30.2714, 0.15 ) }
    dend_43 { pt3dadd( 23.0016, -134.433, 30.5018, 0.52 ) }
    dend_43 { pt3dadd( 22.8217, -135.446, 30.7974, 0.29 ) }
    dend_43 { pt3dadd( 22.7519, -135.849, 30.9172, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( 22.6823, -136.257, 31.0477, 0.15 ) }
    dend_43 { pt3dadd( 22.5423, -137.005, 31.2813, 0.15 ) }
    dend_43 { pt3dadd( 22.4343, -137.509, 31.4349, 0.29 ) }
    dend_43 { pt3dadd( 22.293, -138.201, 31.654, 1.11 ) }
    dend_43 { pt3dadd( 22.1718, -138.903, 31.883, 1.77 ) }
    dend_43 { pt3dadd( 22.0579, -139.88, 32.1956, 1.77 ) }
    dend_43 { pt3dadd( 21.9887, -140.9, 32.522, 1.33 ) }
    dend_43 { pt3dadd( 21.9336, -142.319, 32.9662, 0.15 ) }
    dend_43 { pt3dadd( 21.9157, -143.264, 33.2713, 0.22 ) }
    dend_43 { pt3dadd( 21.9098, -143.943, 33.4977, 0.66 ) }
    dend_43 { pt3dadd( 21.9099, -144.598, 33.7224, 0.81 ) }
    dend_43 { pt3dadd( 21.9395, -145.814, 34.149, 0.15 ) }
    dend_43 { pt3dadd( 22.0067, -146.528, 34.4008, 0.22 ) }
    dend_43 { pt3dadd( 22.1207, -147.13, 34.6101, 0.22 ) }
    dend_43 { pt3dadd( 22.2985, -147.901, 34.8635, 0.22 ) }
    dend_43 { pt3dadd( 22.413, -148.353, 35.0034, 0.66 ) }
    dend_43 { pt3dadd( 22.6875, -149.237, 35.2614, 1.4 ) }
    dend_43 { pt3dadd( 23.1815, -150.478, 35.6297, 0.88 ) }
    dend_43 { pt3dadd( 23.5148, -151.252, 35.864, 0.15 ) }
    dend_43 { pt3dadd( 23.8426, -151.995, 36.0827, 0.15 ) }
    dend_43 { pt3dadd( 24.088, -152.533, 36.2367, 0.22 ) }
    dend_43 { pt3dadd( 24.4672, -153.377, 36.4861, 0.29 ) }
    dend_43 { pt3dadd( 24.7341, -154.038, 36.6805, 0.15 ) }
    dend_43 { pt3dadd( 25.0013, -154.95, 36.9383, 0.15 ) }
    dend_43 { pt3dadd( 25.0598, -155.268, 37.0296, 0.15 ) }
    dend_43 { pt3dadd( 25.1393, -155.936, 37.2424, 0.22 ) }
    dend_43 { pt3dadd( 25.1916, -156.908, 37.5724, 0.22 ) }
    dend_43 { pt3dadd( 25.1948, -157.329, 37.7198, 0.22 ) }
    dend_43 { pt3dadd( 25.199, -158.215, 38.0233, 0.37 ) }
    dend_43 { pt3dadd( 25.2313, -159.119, 38.3396, 0.22 ) }
    dend_43 { pt3dadd( 25.2672, -159.726, 38.543, 0.88 ) }
    dend_43 { pt3dadd( 25.3974, -161.081, 38.9664, 2.06 ) }
    dend_43 { pt3dadd( 25.6055, -162.662, 39.365, 0.59 ) }
    dend_43 { pt3dadd( 25.7899, -163.732, 39.5579, 0.22 ) }
    dend_43 { pt3dadd( 25.9409, -164.438, 39.6252, 0.22 ) }
    dend_43 { pt3dadd( 26.0829, -165.062, 39.6561, 0.22 ) }
    dend_43 { pt3dadd( 26.2796, -165.921, 39.6568, 0.59 ) }
    dend_43 { pt3dadd( 26.5773, -167.136, 39.5654, 0.07 ) }
    dend_43 { pt3dadd( 26.7699, -167.871, 39.4143, 0.15 ) }
    dend_43 { pt3dadd( 26.9969, -168.74, 39.1483, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 40/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.80759, -52.5605, -3.20986, 0.74 ) }
    dend_39 { pt3dadd( -1.87823, -54.4386, -3.59019, 0.74 ) }
    dend_39 { pt3dadd( -1.94144, -56.111, -3.9585, 0.74 ) }
    dend_39 { pt3dadd( -2.004, -57.0568, -4.17471, 0.81 ) }
    dend_39 { pt3dadd( -2.16828, -58.6168, -4.55814, 0.88 ) }
    dend_39 { pt3dadd( -2.29663, -59.6191, -4.8118, 0.81 ) }
    dend_39 { pt3dadd( -2.4968, -60.9133, -5.15385, 1.18 ) }
    dend_39 { pt3dadd( -2.67606, -61.8753, -5.43832, 1.18 ) }
    dend_39 { pt3dadd( -2.97438, -63.0536, -5.80664, 1.03 ) }
    dend_39 { pt3dadd( -3.34576, -64.3038, -6.22605, 1.11 ) }
    dend_39 { pt3dadd( -3.68846, -65.2812, -6.56823, 0.74 ) }
    dend_39 { pt3dadd( -4.14252, -66.3804, -6.95208, 1.11 ) }
    dend_39 { pt3dadd( -4.56114, -67.3156, -7.26669, 0.81 ) }
    dend_39 { pt3dadd( -5.06194, -68.4185, -7.61399, 0.81 ) }
    dend_39 { pt3dadd( -5.21777, -68.821, -7.72337, 0.81 ) }
    dend_39 { pt3dadd( -5.47012, -69.6706, -7.91041, 0.88 ) }
    dend_39 { pt3dadd( -5.67307, -70.6116, -8.0537, 0.88 ) }
    dend_39 { pt3dadd( -5.90578, -72.1661, -8.19118, 1.11 ) }
    dend_39 { pt3dadd( -5.99421, -72.9077, -8.20672, 1.33 ) }
    dend_39 { pt3dadd( -6.21222, -74.7013, -8.09787, 0.74 ) }
    dend_39 { pt3dadd( -6.31978, -75.7653, -8.00619, 0.74 ) }
    dend_39 { pt3dadd( -6.41552, -77.3301, -7.82772, 0.88 ) }
    dend_39 { pt3dadd( -6.44604, -78.2509, -7.68537, 1.25 ) }
    dend_39 { pt3dadd( -6.48843, -79.2007, -7.49651, 1.03 ) }
    dend_39 { pt3dadd( -6.64005, -80.4695, -7.16948, 0.74 ) }
    dend_39 { pt3dadd( -6.80757, -90.5505, -7.44198, 0.74 ) }
    dend_39 { pt3dadd( -8.05745, -100.526, -6.47742, 0.74 ) }
    dend_39 { pt3dadd( -9.02483, -110.473, -4.99947, 0.74 ) }
    dend_39 { pt3dadd( -9.98117, -119.977, -1.56958, 0.74 ) }
    dend_39 { pt3dadd( -9.96747, -129.541, 1.80837, 0.74 ) }
    dend_39 { pt3dadd( -10.7633, -138.806, 5.93617, 0.74 ) }
    dend_39 { pt3dadd( -13.1012, -148.348, 8.47149, 0.74 ) }
    dend_39 { pt3dadd( -13.2966, -158.204, 10.7234, 0.74 ) }
    dend_39 { pt3dadd( -12.9885, -167.98, 13.3225, 0.74 ) }
    dend_39 { pt3dadd( -12.7272, -177.809, 15.691, 0.74 ) }
    dend_39 { pt3dadd( -12.3484, -187.662, 17.9339, 0.74 ) }
    dend_39 { pt3dadd( -12.7401, -197.221, 21.3039, 0.74 ) }
    dend_39 { pt3dadd( -15.317, -206.164, 25.4927, 0.74 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -1.80759, -52.5605, -3.20986, 1.03 ) }
    dend_38 { pt3dadd( -1.49327, -53.6206, -2.72188, 1.03 ) }
    dend_38 { pt3dadd( -1.08048, -55.1892, -2.07066, 1.03 ) }
    dend_38 { pt3dadd( -0.827211, -56.4002, -1.6686, 1.03 ) }
    dend_38 { pt3dadd( -0.482067, -58.189, -1.19678, 1.03 ) }
    dend_38 { pt3dadd( -0.186821, -59.6968, -0.899763, 0.96 ) }
    dend_38 { pt3dadd( 0.0490475, -60.7631, -0.734935, 0.96 ) }
    dend_38 { pt3dadd( 0.266333, -61.6569, -0.660555, 0.96 ) }
    dend_38 { pt3dadd( 0.961256, -64.0812, -0.640267, 0.88 ) }
    dend_38 { pt3dadd( 1.47892, -65.5103, -0.727912, 0.88 ) }
    dend_38 { pt3dadd( 2.3632, -67.3561, -0.944469, 0.88 ) }
    dend_38 { pt3dadd( 3.48176, -69.1699, -1.23865, 0.81 ) }
    dend_38 { pt3dadd( 4.41655, -70.3885, -1.47217, 0.81 ) }
    dend_38 { pt3dadd( 5.18485, -71.2099, -1.63758, 0.81 ) }
    dend_38 { pt3dadd( 6.36706, -72.2586, -1.86453, 0.88 ) }
    dend_38 { pt3dadd( 7.61674, -73.3394, -2.05257, 1.03 ) }
    dend_38 { pt3dadd( 8.46108, -74.1439, -2.12998, 1.03 ) }
    dend_38 { pt3dadd( 9.51878, -75.386, -2.16414, 0.81 ) }
    dend_38 { pt3dadd( 10.2734, -76.555, -2.13192, 1.4 ) }
    dend_38 { pt3dadd( 10.6395, -77.2892, -2.08867, 1.92 ) }
    dend_38 { pt3dadd( 11.3654, -79.2544, -1.99043, 1.4 ) }
    dend_38 { pt3dadd( 12.0318, -81.5733, -1.97595, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_38 { pt3dadd( 12.4222, -83.2027, -2.0351, 0.88 ) }
    dend_38 { pt3dadd( 12.7778, -84.9011, -2.17082, 1.03 ) }
    dend_38 { pt3dadd( 12.9737, -85.8462, -2.2888, 1.03 ) }
    dend_38 { pt3dadd( 13.3054, -87.3833, -2.54826, 0.81 ) }
    dend_38 { pt3dadd( 13.6197, -88.7977, -2.87979, 1.18 ) }
    dend_38 { pt3dadd( 13.7004, -89.225, -2.99131, 1.18 ) }
    dend_38 { pt3dadd( 13.7939, -90.0641, -3.17456, 0.74 ) }
    dend_38 { pt3dadd( 13.7727, -91.1627, -3.28035, 0.44 ) }
    dend_38 { pt3dadd( 13.6823, -91.8202, -3.26253, 0.44 ) }
    dend_38 { pt3dadd( 13.462, -92.7908, -3.13661, 0.66 ) }
    dend_38 { pt3dadd( 13.1098, -94.082, -2.91643, 0.81 ) }
    dend_38 { pt3dadd( 12.7836, -95.2508, -2.71398, 0.96 ) }
    dend_38 { pt3dadd( 12.2819, -97.0788, -2.40751, 1.33 ) }
    dend_38 { pt3dadd( 11.9645, -98.2864, -2.21775, 0.88 ) }
    dend_38 { pt3dadd( 11.6897, -99.4716, -2.03674, 1.11 ) }
    dend_38 { pt3dadd( 11.4247, -100.86, -1.81081, 1.18 ) }
    dend_38 { pt3dadd( 11.21, -102.177, -1.57762, 1.18 ) }
    dend_38 { pt3dadd( 10.9352, -104.017, -1.22181, 0.52 ) }
    dend_38 { pt3dadd( 10.7026, -105.925, -0.811642, 0.52 ) }
    dend_38 { pt3dadd( 10.5467, -107.349, -0.488542, 0.74 ) }
    dend_38 { pt3dadd( 10.4187, -108.674, -0.178827, 0.96 ) }
    dend_38 { pt3dadd( 10.3078, -109.913, 0.0919747, 1.62 ) }
    dend_38 { pt3dadd( 10.2017, -111.149, 0.32854, 1.62 ) }
    dend_38 { pt3dadd( 10.0765, -112.693, 0.562822, 1.33 ) }
    dend_38 { pt3dadd( 9.98378, -113.959, 0.686364, 0.44 ) }
    dend_38 { pt3dadd( 9.89664, -114.711, 0.730925, 0.59 ) }
    dend_38 { pt3dadd( 9.64865, -116.12, 0.825808, 0.59 ) }
    dend_38 { pt3dadd( 9.29333, -117.635, 0.98127, 0.88 ) }
    dend_38 { pt3dadd( 8.94375, -118.804, 1.15111, 1.25 ) }
    dend_38 { pt3dadd( 8.69185, -119.517, 1.29282, 2.21 ) }
    dend_38 { pt3dadd( 8.06989, -121.182, 1.71302, 1.84 ) }
    dend_38 { pt3dadd( 7.35664, -123.064, 2.26791, 1.33 ) }
    dend_38 { pt3dadd( 6.73263, -124.786, 2.8565, 0.66 ) }
    dend_38 { pt3dadd( 6.44113, -125.691, 3.16851, 0.44 ) }
    dend_38 { pt3dadd( 6.16467, -126.664, 3.49316, 0.44 ) }
    dend_38 { pt3dadd( 5.91336, -127.703, 3.81664, 0.81 ) }
    dend_38 { pt3dadd( 5.68474, -129.022, 4.15357, 1.11 ) }
    dend_38 { pt3dadd( 5.51265, -130.491, 4.42912, 0.74 ) }
    dend_38 { pt3dadd( 5.37108, -132.078, 4.66557, 0.37 ) }
    dend_38 { pt3dadd( 5.25828, -133.301, 4.81364, 0.37 ) }
    dend_38 { pt3dadd( 5.17365, -134.074, 4.90555, 0.74 ) }
    dend_38 { pt3dadd( 5.01832, -135.245, 5.06296, 0.88 ) }
    dend_38 { pt3dadd( 4.7622, -136.958, 5.34643, 0.44 ) }
    dend_38 { pt3dadd( 4.62095, -137.754, 5.53412, 0.44 ) }
    dend_38 { pt3dadd( 4.46763, -138.519, 5.81463, 0.59 ) }
    dend_38 { pt3dadd( 4.26067, -139.364, 6.244, 0.96 ) }
    dend_38 { pt3dadd( 4.06995, -140.052, 6.68278, 1.25 ) }
    dend_38 { pt3dadd( 3.8722, -140.771, 7.22526, 1.25 ) }
    dend_38 { pt3dadd( 3.67572, -141.63, 7.91954, 0.81 ) }
    dend_38 { pt3dadd( 3.59783, -142.312, 8.41358, 1.11 ) }
    dend_38 { pt3dadd( 3.60559, -143.488, 9.01667, 0.22 ) }
    dend_38 { pt3dadd( 3.64093, -144.027, 9.17002, 0.22 ) }
    dend_38 { pt3dadd( 3.71563, -144.879, 9.3216, 0.22 ) }
    dend_38 { pt3dadd( 3.76355, -145.649, 9.41576, 0.74 ) }
    dend_38 { pt3dadd( 3.78856, -146.424, 9.4982, 1.18 ) }
    dend_38 { pt3dadd( 3.79133, -148.191, 9.71375, 0.66 ) }
    dend_38 { pt3dadd( 3.74298, -149.72, 9.9671, 0.37 ) }
    dend_38 { pt3dadd( 3.57824, -151.065, 10.3112, 0.66 ) }
    dend_38 { pt3dadd( 3.38591, -152.191, 10.7019, 0.66 ) }
    dend_38 { pt3dadd( 3.23571, -153.05, 11.0661, 1.25 ) }
    dend_38 { pt3dadd( 3.11692, -153.862, 11.473, 2.06 ) }
    dend_38 { pt3dadd( 3.00987, -155.056, 12.1486, 2.21 ) }
    dend_38 { pt3dadd( 2.93659, -157.288, 13.444, 1.03 ) }
    dend_38 { pt3dadd( 2.94507, -158.565, 14.1509, 0.59 ) }
    dend_38 { pt3dadd( 2.98558, -159.893, 14.7883, 0.37 ) }
    dend_38 { pt3dadd( 3.04262, -160.878, 15.2045, 0.66 ) }
    dend_38 { pt3dadd( 3.15113, -162.07, 15.6453, 0.37 ) }
    dend_38 { pt3dadd( 3.3374, -163.359, 16.0695, 0.29 ) }
    dend_38 { pt3dadd( 3.49743, -164.198, 16.3004, 0.52 ) }
    dend_38 { pt3dadd( 3.75229, -165.655, 16.6965, 0.22 ) }
    dend_38 { pt3dadd( 3.9303, -166.397, 16.9604, 0.22 ) }
    dend_38 { pt3dadd( 4.22124, -167.205, 17.3439, 0.29 ) }
    dend_38 { pt3dadd( 4.61089, -167.942, 17.8213, 0.96 ) }
    dend_38 { pt3dadd( 5.05708, -168.652, 18.3723, 1.77 ) }
    dend_38 { pt3dadd( 5.49724, -169.353, 18.9153, 1.77 ) }
    dend_38 { pt3dadd( 6.42843, -170.985, 20.0254, 0.29 ) }
    dend_38 { pt3dadd( 6.7614, -171.702, 20.3806, 0.29 ) }
    dend_38 { pt3dadd( 6.97686, -172.335, 20.5902, 0.29 ) }
    dend_38 { pt3dadd( 7.20178, -173.307, 20.7682, 0.29 ) }
    dend_38 { pt3dadd( 7.35967, -174.59, 20.8758, 0.29 ) }
    dend_38 { pt3dadd( 7.37294, -176.097, 20.9045, 0.29 ) }
    dend_38 { pt3dadd( 7.30208, -176.843, 20.9039, 0.29 ) }
    dend_38 { pt3dadd( 7.10697, -177.949, 20.9423, 0.29 ) }
    dend_38 { pt3dadd( 6.79788, -179.247, 21.0761, 0.29 ) }
    dend_38 { pt3dadd( 6.43663, -180.6, 21.3293, 0.29 ) }
    dend_38 { pt3dadd( 6.19841, -181.448, 21.5383, 1.03 ) }
    dend_38 { pt3dadd( 5.90894, -182.436, 21.8298, 1.92 ) }
    dend_38 { pt3dadd( 5.42985, -184.1, 22.3559, 3.02 ) }
    dend_38 { pt3dadd( 4.92254, -185.965, 22.98, 2.36 ) }
    dend_38 { pt3dadd( 4.37802, -188.111, 23.7311, 0.22 ) }
    dend_38 { pt3dadd( 4.20575, -188.906, 24.0162, 0.22 ) }
    dend_38 { pt3dadd( 4.02552, -189.98, 24.4014, 0.22 ) }
    dend_38 { pt3dadd( 3.96772, -190.458, 24.5676, 0.52 ) }
    dend_38 { pt3dadd( 3.92027, -191.241, 24.8399, 0.96 ) }
    dend_38 { pt3dadd( 3.87992, -192.393, 25.2299, 0.44 ) }
    dend_38 { pt3dadd( 3.83265, -193.831, 25.6951, 0.22 ) }
    dend_38 { pt3dadd( 3.80127, -194.755, 25.9772, 0.37 ) }
    dend_38 { pt3dadd( 3.76354, -195.841, 26.2858, 0.81 ) }
    dend_38 { pt3dadd( 3.70989, -196.79, 26.5524, 0.96 ) }
    dend_38 { pt3dadd( 3.58197, -198.081, 26.8971, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( 3.42215, -199.315, 27.1886, 0.66 ) }
    dend_38 { pt3dadd( 3.34459, -199.894, 27.2969, 0.22 ) }
    dend_38 { pt3dadd( 3.19837, -201.16, 27.482, 0.22 ) }
    dend_38 { pt3dadd( 3.15717, -201.76, 27.5543, 0.44 ) }
    dend_38 { pt3dadd( 3.11249, -203.294, 27.7282, 0.22 ) }
    dend_38 { pt3dadd( 3.14868, -204.359, 27.8597, 0.22 ) }
    dend_38 { pt3dadd( 3.25116, -205.639, 28.0502, 0.29 ) }
    dend_38 { pt3dadd( 3.34006, -206.694, 28.2288, 0.52 ) }
    dend_38 { pt3dadd( 3.43221, -207.788, 28.4179, 0.52 ) }
    dend_38 { pt3dadd( 3.50321, -208.947, 28.634, 0.52 ) }
    dend_38 { pt3dadd( 3.52915, -210.043, 28.8584, 1.18 ) }
    dend_38 { pt3dadd( 3.49934, -211.058, 29.0823, 2.43 ) }
    dend_38 { pt3dadd( 3.3736, -212.798, 29.4941, 1.33 ) }
    dend_38 { pt3dadd( 3.22821, -214.208, 29.8215, 0.59 ) }
    dend_38 { pt3dadd( 3.09032, -215.358, 30.0751, 0.81 ) }
    dend_38 { pt3dadd( 2.96745, -216.353, 30.2851, 0.15 ) }
    dend_38 { pt3dadd( 2.88052, -217.014, 30.4203, 0.15 ) }
    dend_38 { pt3dadd( 2.84932, -217.347, 30.4855, 0.15 ) }
    dend_38 { pt3dadd( 2.82087, -217.763, 30.5797, 0.22 ) }
    dend_38 { pt3dadd( 2.74225, -218.564, 30.7939, 0.37 ) }
    dend_38 { pt3dadd( 2.5783, -219.496, 31.0418, 0.37 ) }
    dend_38 { pt3dadd( 2.29103, -220.493, 31.2869, 0.22 ) }
    dend_38 { pt3dadd( 1.85129, -221.566, 31.5387, 0.22 ) }
    dend_38 { pt3dadd( 1.51963, -222.183, 31.6742, 0.22 ) }
    dend_38 { pt3dadd( 1.14042, -222.757, 31.8053, 0.74 ) }
    dend_38 { pt3dadd( 0.515874, -223.585, 31.9941, 1.77 ) }
    dend_38 { pt3dadd( -0.239933, -224.522, 32.2008, 2.21 ) }
    dend_38 { pt3dadd( -0.790962, -225.197, 32.3811, 2.21 ) }
    dend_38 { pt3dadd( -1.97331, -226.649, 32.8374, 0.37 ) }
    dend_38 { pt3dadd( -2.68881, -227.614, 33.1696, 0.37 ) }
    dend_38 { pt3dadd( -3.20935, -228.443, 33.4741, 0.22 ) }
    dend_38 { pt3dadd( -3.6032, -229.221, 33.7976, 0.22 ) }
    dend_38 { pt3dadd( -4.01586, -230.182, 34.2467, 0.22 ) }
    dend_38 { pt3dadd( -4.225, -230.744, 34.5455, 0.81 ) }
    dend_38 { pt3dadd( -4.48495, -231.595, 35.106, 1.25 ) }
    dend_38 { pt3dadd( -4.75332, -232.562, 35.8697, 0.88 ) }
    dend_38 { pt3dadd( -5.06549, -233.589, 36.7925, 0.22 ) }
    dend_38 { pt3dadd( -5.22843, -234.111, 37.2697, 0.22 ) }
    dend_38 { pt3dadd( -5.40895, -234.743, 37.7758, 0.22 ) }
    dend_38 { pt3dadd( -5.56008, -235.52, 38.3104, 0.22 ) }
    dend_38 { pt3dadd( -5.63058, -236.54, 38.8092, 0.44 ) }
    dend_38 { pt3dadd( -5.63057, -237.51, 39.1261, 1.47 ) }
    dend_38 { pt3dadd( -5.63596, -238.568, 39.3623, 1.47 ) }
    dend_38 { pt3dadd( -5.68916, -239.899, 39.5903, 0.44 ) }
    dend_38 { pt3dadd( -5.76999, -241.141, 39.7535, 0.96 ) }
    dend_38 { pt3dadd( -5.96706, -242.952, 39.9499, 0.22 ) }
    dend_38 { pt3dadd( -6.0981, -243.911, 40.0556, 0.22 ) }
    dend_38 { pt3dadd( -6.35509, -245.37, 40.2528, 0.22 ) }
    dend_38 { pt3dadd( -6.61525, -246.457, 40.4158, 0.22 ) }
    dend_38 { pt3dadd( -6.85415, -247.254, 40.5438, 0.22 ) }
    dend_38 { pt3dadd( -7.19556, -248.204, 40.7053, 0.22 ) }
    dend_38 { pt3dadd( -7.6847, -249.471, 40.9544, 0.22 ) }
    dend_38 { pt3dadd( -7.96767, -250.265, 41.1118, 0.81 ) }
    dend_38 { pt3dadd( -8.35858, -251.492, 41.3546, 1.77 ) }
    dend_38 { pt3dadd( -8.69842, -252.686, 41.6127, 1.18 ) }
    dend_38 { pt3dadd( -9.2739, -254.984, 42.1384, 0.22 ) }
    dend_38 { pt3dadd( -9.42393, -255.751, 42.3305, 0.22 ) }
    dend_38 { pt3dadd( -9.61472, -257.069, 42.7073, 0.88 ) }
    dend_38 { pt3dadd( -9.74976, -258.708, 43.2472, 0.15 ) }
    dend_38 { pt3dadd( -9.74634, -259.666, 43.6302, 0.15 ) }
    dend_38 { pt3dadd( -9.63965, -260.603, 44.0293, 0.29 ) }
    dend_38 { pt3dadd( -9.41265, -261.55, 44.4438, 0.74 ) }
    dend_38 { pt3dadd( -9.19703, -262.273, 44.7608, 1.4 ) }
    dend_38 { pt3dadd( -8.81745, -263.354, 45.2677, 0.59 ) }
    dend_38 { pt3dadd( -8.29754, -264.789, 45.9425, 0.15 ) }
    dend_38 { pt3dadd( -7.91843, -265.884, 46.4341, 0.15 ) }
    dend_38 { pt3dadd( -7.579, -266.874, 46.8573, 0.15 ) }
    dend_38 { pt3dadd( -7.25679, -267.783, 47.1869, 0.29 ) }
    dend_38 { pt3dadd( -6.81852, -268.922, 47.5653, 0.96 ) }
    dend_38 { pt3dadd( -6.32036, -270.173, 47.9671, 0.44 ) }
    dend_38 { pt3dadd( -5.91475, -271.185, 48.2966, 0.22 ) }
    dend_38 { pt3dadd( -5.40547, -272.403, 48.7424, 0.22 ) }
    dend_38 { pt3dadd( -4.87701, -273.57, 49.177, 0.15 ) }
    dend_38 { pt3dadd( -4.40575, -274.565, 49.5218, 0.15 ) }
    dend_38 { pt3dadd( -4.09628, -275.236, 49.7397, 0.15 ) }
    dend_38 { pt3dadd( -3.83361, -275.906, 49.9412, 0.29 ) }
    dend_38 { pt3dadd( -3.5021, -277.101, 50.2604, 0.44 ) }
    dend_38 { pt3dadd( -3.30525, -278.279, 50.5381, 0.44 ) }
    dend_38 { pt3dadd( -3.16263, -279.911, 50.9044, 0.44 ) }
    dend_38 { pt3dadd( -3.1305, -281.262, 51.1486, 0.44 ) }
    dend_38 { pt3dadd( -3.17044, -282.924, 51.4062, 0.88 ) }
    dend_38 { pt3dadd( -3.28694, -284.219, 51.5922, 1.03 ) }
    dend_38 { pt3dadd( -3.49315, -285.463, 51.7787, 0.37 ) }
    dend_38 { pt3dadd( -3.7612, -286.503, 51.9734, 0.15 ) }
    dend_38 { pt3dadd( -4.12186, -287.512, 52.2311, 0.15 ) }
    dend_38 { pt3dadd( -4.50986, -288.373, 52.5079, 0.37 ) }
    dend_38 { pt3dadd( -5.09179, -289.446, 52.9308, 0.22 ) }
    dend_38 { pt3dadd( -5.58196, -290.209, 53.2845, 0.81 ) }
    dend_38 { pt3dadd( -6.47816, -291.39, 53.9162, 1.25 ) }
    dend_38 { pt3dadd( -7.5976, -292.619, 54.6776, 0.88 ) }
    dend_38 { pt3dadd( -8.36808, -293.342, 55.1792, 0.22 ) }
    dend_38 { pt3dadd( -9.16524, -294.009, 55.6438, 0.22 ) }
    dend_38 { pt3dadd( -9.98247, -294.658, 56.0613, 0.74 ) }
    dend_38 { pt3dadd( -11.1427, -295.601, 56.5524, 1.47 ) }
    dend_38 { pt3dadd( -12.0956, -296.426, 56.8617, 0.37 ) }
    dend_38 { pt3dadd( -13.5391, -297.785, 57.1486, 0.22 ) }
    dend_38 { pt3dadd( -14.5351, -298.841, 57.2018, 0.29 ) }
    dend_38 { pt3dadd( -15.3565, -299.871, 57.1124, 0.29 ) }
    dend_38 { pt3dadd( -15.9617, -300.848, 56.8988, 0.29 ) }
    dend_38 { pt3dadd( -16.4483, -301.923, 56.5626, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_38 { pt3dadd( -16.8949, -303.345, 56.0845, 0.22 ) }
    dend_38 { pt3dadd( -17.2028, -304.94, 55.5504, 0.22 ) }
    dend_38 { pt3dadd( -17.2919, -305.719, 55.308, 0.22 ) }
    dend_38 { pt3dadd( -17.3445, -306.91, 55.0202, 0.37 ) }
    dend_38 { pt3dadd( -17.3501, -307.81, 54.8847, 0.59 ) }
    dend_38 { pt3dadd( -17.3713, -309.963, 54.736, 0.66 ) }
    dend_38 { pt3dadd( -17.407, -311.451, 54.7507, 0.88 ) }
    dend_38 { pt3dadd( -17.4292, -312.453, 54.8632, 0.88 ) }
    dend_38 { pt3dadd( -17.497, -314.255, 55.1736, 0.52 ) }
    dend_38 { pt3dadd( -17.5868, -316.21, 55.5943, 0.22 ) }
    dend_38 { pt3dadd( -17.6263, -318.173, 56.0984, 0.22 ) }
    dend_38 { pt3dadd( -17.6239, -318.977, 56.3407, 0.81 ) }
    dend_38 { pt3dadd( -17.6103, -321.112, 57.0443, 1.25 ) }
    dend_38 { pt3dadd( -17.5734, -322.338, 57.4405, 1.03 ) }
    dend_38 { pt3dadd( -17.5317, -323.128, 57.6813, 1.03 ) }
    dend_38 { pt3dadd( -17.3487, -325.069, 58.2724, 0.22 ) }
    dend_38 { pt3dadd( -17.1743, -326.502, 58.6936, 0.22 ) }
    dend_38 { pt3dadd( -17.0882, -327.467, 58.96, 0.22 ) }
    dend_38 { pt3dadd( -17.0406, -329.038, 59.3537, 0.22 ) }
    dend_38 { pt3dadd( -17.0811, -329.936, 59.5979, 0.22 ) }
    dend_38 { pt3dadd( -17.313, -331.593, 60.0655, 0.22 ) }
    dend_38 { pt3dadd( -17.6301, -332.7, 60.3971, 0.74 ) }
    dend_38 { pt3dadd( -18.0516, -333.762, 60.7151, 1.11 ) }
    dend_38 { pt3dadd( -18.4515, -334.551, 60.9178, 1.11 ) }
    dend_38 { pt3dadd( -19.4019, -336.048, 61.2306, 0.74 ) }
    dend_38 { pt3dadd( -20.1911, -337.125, 61.3509, 1.4 ) }
    dend_38 { pt3dadd( -21.5169, -338.767, 61.3526, 0.66 ) }
    dend_38 { pt3dadd( -22.4584, -339.911, 61.2539, 0.07 ) }
    dend_38 { pt3dadd( -23.6262, -341.365, 61.052, 0.07 ) }
    dend_38 { pt3dadd( -24.4002, -342.352, 60.8866, 0.22 ) }
    dend_38 { pt3dadd( -25.2454, -343.521, 60.67, 0.22 ) }
    dend_38 { pt3dadd( -25.8012, -344.35, 60.5353, 0.44 ) }
    dend_38 { pt3dadd( -26.4462, -345.441, 60.4033, 0.44 ) }
    dend_38 { pt3dadd( -27.2144, -346.915, 60.4313, 0.44 ) }
    dend_38 { pt3dadd( -27.6446, -347.88, 60.6122, 0.22 ) }
    dend_38 { pt3dadd( -28.1759, -349.236, 61.0333, 0.15 ) }
    dend_38 { pt3dadd( -28.475, -349.995, 61.3922, 0.37 ) }
    dend_38 { pt3dadd( -28.6848, -350.467, 61.707, 0.37 ) }
    dend_38 { pt3dadd( -29.2098, -351.578, 62.6301, 0.15 ) }
    dend_38 { pt3dadd( -29.6963, -352.534, 63.5652, 0.15 ) }
    dend_38 { pt3dadd( -29.8604, -352.817, 63.8758, 0.52 ) }
    dend_38 { pt3dadd( -30.3622, -353.471, 64.7053, 1.03 ) }
    dend_38 { pt3dadd( -31.0984, -354.276, 65.7729, 0.15 ) }
    dend_38 { pt3dadd( -31.6896, -354.824, 66.4926, 0.15 ) }
    dend_38 { pt3dadd( -32.317, -355.34, 67.1033, 0.15 ) }
    dend_38 { pt3dadd( -32.7482, -355.701, 67.4522, 0.59 ) }
    dend_38 { pt3dadd( -33.7091, -356.57, 68.1416, 0.15 ) }
    dend_38 { pt3dadd( -34.0337, -356.878, 68.3459, 0.15 ) }
    dend_38 { pt3dadd( -34.5471, -357.427, 68.6363, 0.66 ) }
    dend_38 { pt3dadd( -34.9816, -357.95, 68.8765, 0.81 ) }
    dend_38 { pt3dadd( -36.1603, -359.563, 69.5205, 0.15 ) }
    dend_38 { pt3dadd( -37.0724, -360.959, 70.0147, 0.15 ) }
    dend_38 { pt3dadd( -37.8462, -362.277, 70.4299, 0.29 ) }
    dend_38 { pt3dadd( -38.9033, -364.17, 70.9915, 0.22 ) }
    dend_38 { pt3dadd( -39.8062, -365.879, 71.47, 0.15 ) }
    dend_38 { pt3dadd( -40.1721, -366.58, 71.6638, 0.66 ) }
    dend_38 { pt3dadd( -40.7787, -367.659, 71.9551, 0.81 ) }
    dend_38 { pt3dadd( -41.5752, -368.898, 72.2993, 0.44 ) }
    dend_38 { pt3dadd( -42.0728, -369.632, 72.5058, 1.03 ) }
    dend_38 { pt3dadd( -42.6272, -370.338, 72.7269, 1.25 ) }
    dend_38 { pt3dadd( -44.1776, -372.099, 73.3137, 0.52 ) }
    dend_38 { pt3dadd( -45.4092, -373.349, 73.761, 0.22 ) }
    dend_38 { pt3dadd( -46.2174, -374.053, 74.0351, 0.07 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 63/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 7.66599, 29.714, -0.097398, 0.96 ) }
    dend_24 { pt3dadd( 9.5031, 30.9503, 0.0336317, 0.96 ) }
    dend_24 { pt3dadd( 10.396, 31.549, 0.10061, 1.03 ) }
    dend_24 { pt3dadd( 11.4664, 32.3291, 0.324641, 1.03 ) }
    dend_24 { pt3dadd( 12.4149, 33.0204, 0.523168, 1.62 ) }
    dend_24 { pt3dadd( 13.334, 33.6903, 0.715546, 1.33 ) }
    dend_24 { pt3dadd( 14.6245, 34.6309, 0.985659, 1.03 ) }
    dend_24 { pt3dadd( 15.5837, 35.3526, 1.21807, 0.96 ) }
    dend_24 { pt3dadd( 17.3751, 36.7389, 1.74006, 1.62 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 72/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 7.66599, 29.714, -0.097398, 0.88 ) }
    dend_21 { pt3dadd( 8.34061, 31.132, -0.231936, 0.88 ) }
    dend_21 { pt3dadd( 9.16182, 32.5467, -0.367846, 0.81 ) }
    dend_21 { pt3dadd( 9.56254, 33.206, -0.465064, 0.66 ) }
    dend_21 { pt3dadd( 9.96102, 33.8893, -0.596046, 1.11 ) }
    dend_21 { pt3dadd( 10.4462, 34.813, -0.797815, 0.74 ) }
    dend_21 { pt3dadd( 10.7705, 35.4994, -0.966153, 0.52 ) }
    dend_21 { pt3dadd( 11.1876, 36.4579, -1.3097, 0.22 ) }
    dend_21 { pt3dadd( 11.3428, 37.2239, -1.60564, 0.29 ) }
    dend_21 { pt3dadd( 11.2563, 37.765, -1.85715, 0.29 ) }
    dend_21 { pt3dadd( 10.9761, 38.3336, -2.18618, 0.66 ) }
    dend_21 { pt3dadd( 10.7599, 38.6201, -2.38754, 0.66 ) }
    dend_21 { pt3dadd( 10.1365, 39.2964, -2.88011, 0.81 ) }
    dend_21 { pt3dadd( 9.33328, 40.1471, -3.50571, 1.18 ) }
    dend_21 { pt3dadd( 8.73767, 40.8603, -4.01023, 1.03 ) }
    dend_21 { pt3dadd( 8.16637, 41.7016, -4.59377, 0.81 ) }
    dend_21 { pt3dadd( 7.70414, 42.5948, -5.19586, 1.11 ) }
    dend_21 { pt3dadd( 7.24149, 43.8179, -5.99616, 0.88 ) }
    dend_21 { pt3dadd( 6.97793, 44.8388, -6.6571, 0.66 ) }
    dend_21 { pt3dadd( 6.82318, 45.7813, -7.23982, 0.66 ) }
    dend_21 { pt3dadd( 6.70701, 46.578, -7.67367, 0.66 ) }
    dend_21 { pt3dadd( 6.58773, 47.3065, -8.0217, 0.66 ) }
    dend_21 { pt3dadd( 6.42521, 48.1771, -8.4234, 0.81 ) }
    dend_21 { pt3dadd( 6.2791, 48.8413, -8.75124, 1.18 ) }
    dend_21 { pt3dadd( 6.08853, 49.5732, -9.10643, 1.18 ) }
    dend_21 { pt3dadd( 5.65725, 51.1975, -9.83785, 0.52 ) }
    dend_21 { pt3dadd( 5.39413, 52.0555, -10.2196, 0.52 ) }
    dend_21 { pt3dadd( 5.19553, 52.7349, -10.5133, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 5.08855, 53.2246, -10.7067, 1.03 ) }
    dend_21 { pt3dadd( 5.00813, 54.1098, -11.0394, 1.03 ) }
    dend_21 { pt3dadd( 5.13789, 55.1848, -11.4486, 0.66 ) }
    dend_21 { pt3dadd( 5.16463, 63.6855, -15.8958, 0.66 ) }
    dend_21 { pt3dadd( 4.765, 72.5587, -19.431, 0.66 ) }
    dend_21 { pt3dadd( 2.2581, 81.1114, -22.9742, 0.66 ) }
    dend_21 { pt3dadd( -0.963056, 89.4832, -26.4185, 0.66 ) }
    dend_21 { pt3dadd( -4.26215, 97.442, -30.7522, 0.66 ) }
    dend_21 { pt3dadd( -9.34718, 104.839, -34.4136, 0.66 ) }
    dend_21 { pt3dadd( -13.8861, 111.902, -39.3102, 0.66 ) }
    dend_21 { pt3dadd( -17.5424, 119.241, -44.4831, 0.66 ) }
    dend_21 { pt3dadd( -21.8011, 126.997, -48.3682, 0.66 ) }
    dend_21 { pt3dadd( -26.2295, 133.967, -53.5067, 0.66 ) }
    dend_21 { pt3dadd( -28.7598, 141.071, -59.6266, 0.66 ) }
    dend_21 { pt3dadd( -31.8227, 148.308, -65.3169, 0.66 ) }
    dend_21 { pt3dadd( -35.0433, 155.393, -71.1307, 0.66 ) }
    dend_21 { pt3dadd( -38.1285, 162.107, -77.4811, 0.66 ) }
    dend_21 { pt3dadd( -42.0138, 167.841, -84.4289, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 18/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -0.848958, 31.3413, 5.42806, 0.96 ) }
    dend_13 { pt3dadd( -1.55518, 31.7831, 5.38282, 0.96 ) }
    dend_13 { pt3dadd( -2.23785, 32.0559, 5.38643, 0.66 ) }
    dend_13 { pt3dadd( -3.20824, 32.1466, 5.46983, 0.52 ) }
    dend_13 { pt3dadd( -3.60392, 31.962, 5.56578, 0.52 ) }
    dend_13 { pt3dadd( -4.13682, 31.3299, 5.78954, 0.52 ) }
    dend_13 { pt3dadd( -4.40428, 30.9817, 5.91876, 0.88 ) }
    dend_13 { pt3dadd( -4.96505, 30.1543, 6.23755, 1.11 ) }
    dend_13 { pt3dadd( -5.48218, 29.3994, 6.53978, 1.25 ) }
    dend_13 { pt3dadd( -5.92649, 28.8258, 6.76826, 1.25 ) }
    dend_13 { pt3dadd( -6.86821, 27.7988, 7.15445, 0.66 ) }
    dend_13 { pt3dadd( -7.41908, 27.2869, 7.33119, 0.96 ) }
    dend_13 { pt3dadd( -8.03389, 26.8092, 7.50102, 1.33 ) }
    dend_13 { pt3dadd( -8.84398, 26.2851, 7.70202, 1.33 ) }
    dend_13 { pt3dadd( -10.084, 25.6023, 8.00018, 1.33 ) }
    dend_13 { pt3dadd( -11.4514, 24.9121, 8.35106, 0.88 ) }
    dend_13 { pt3dadd( -12.2764, 24.5294, 8.55353, 0.88 ) }
    dend_13 { pt3dadd( -13.2137, 24.0885, 8.77854, 1.4 ) }
    dend_13 { pt3dadd( -13.8209, 23.7906, 8.93315, 1.55 ) }
    dend_13 { pt3dadd( -14.7612, 23.3007, 9.20283, 2.06 ) }
    dend_13 { pt3dadd( -15.4871, 22.8698, 9.49529, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.848958, 31.3413, 5.42806, 0.74 ) }
    dend_12 { pt3dadd( -1.02263, 30.7088, 5.24048, 0.74 ) }
    dend_12 { pt3dadd( -1.28037, 29.9072, 5.02209, 0.52 ) }
    dend_12 { pt3dadd( -1.52474, 29.2094, 4.8517, 0.88 ) }
    dend_12 { pt3dadd( -1.81173, 28.47, 4.71612, 0.44 ) }
    dend_12 { pt3dadd( -2.01316, 27.9963, 4.65183, 0.44 ) }
    dend_12 { pt3dadd( -2.17387, 27.6411, 4.61383, 0.37 ) }
    dend_12 { pt3dadd( -2.48807, 27.0095, 4.5876, 0.88 ) }
    dend_12 { pt3dadd( -2.8086, 26.3481, 4.6153, 0.44 ) }
    dend_12 { pt3dadd( -3.14169, 25.6178, 4.67662, 0.44 ) }
    dend_12 { pt3dadd( -3.34734, 25.091, 4.73091, 0.74 ) }
    dend_12 { pt3dadd( -3.48926, 24.6745, 4.7825, 1.11 ) }
    dend_12 { pt3dadd( -3.76598, 23.7641, 4.92206, 0.96 ) }
    dend_12 { pt3dadd( -3.99562, 22.9164, 5.09385, 1.18 ) }
    dend_12 { pt3dadd( -4.18267, 22.1916, 5.28006, 1.18 ) }
    dend_12 { pt3dadd( -4.39882, 21.3673, 5.52493, 0.88 ) }
    dend_12 { pt3dadd( -4.58554, 20.6865, 5.75821, 0.66 ) }
    dend_12 { pt3dadd( -4.75151, 20.1345, 5.97868, 0.66 ) }
    dend_12 { pt3dadd( -4.93541, 19.5481, 6.23211, 0.66 ) }
    dend_12 { pt3dadd( -5.15292, 18.8788, 6.53355, 0.66 ) }
    dend_12 { pt3dadd( -5.39159, 18.1133, 6.87061, 0.66 ) }
    dend_12 { pt3dadd( -5.70598, 17.0309, 7.27023, 0.52 ) }
    dend_12 { pt3dadd( -5.85215, 16.4435, 7.43903, 0.52 ) }
    dend_12 { pt3dadd( -6.05546, 15.4219, 7.65292, 0.52 ) }
    dend_12 { pt3dadd( -6.16135, 14.7133, 7.74312, 0.52 ) }
    dend_12 { pt3dadd( -6.23673, 13.9856, 7.79233, 0.52 ) }
    dend_12 { pt3dadd( -6.31254, 13.0416, 7.82687, 0.96 ) }
    dend_12 { pt3dadd( -6.36001, 12.5622, 7.82854, 1.11 ) }
    dend_12 { pt3dadd( -6.42249, 12.0713, 7.81878, 1.11 ) }
    dend_12 { pt3dadd( -6.62212, 10.8628, 7.78691, 0.44 ) }
    dend_12 { pt3dadd( -6.73491, 10.2916, 7.76064, 0.44 ) }
    dend_12 { pt3dadd( -6.99557, 9.27435, 7.70749, 0.66 ) }
    dend_12 { pt3dadd( -7.20517, 8.58385, 7.66226, 0.52 ) }
    dend_12 { pt3dadd( -7.32563, 8.22763, 7.6236, 0.88 ) }
    dend_12 { pt3dadd( -7.43774, 7.91559, 7.57841, 1.33 ) }
    dend_12 { pt3dadd( -7.6751, 7.21946, 7.45517, 0.96 ) }
    dend_12 { pt3dadd( -7.97368, 6.21819, 7.26746, 0.59 ) }
    dend_12 { pt3dadd( -8.1458, 5.50119, 7.12638, 0.59 ) }
    dend_12 { pt3dadd( -8.23255, 5.03476, 7.04457, 0.96 ) }
    dend_12 { pt3dadd( -8.33256, 4.37971, 6.9461, 0.52 ) }
    dend_12 { pt3dadd( -8.44263, 3.49098, 6.84405, 0.22 ) }
    dend_12 { pt3dadd( -8.50591, 2.92023, 6.80159, 0.29 ) }
    dend_12 { pt3dadd( -8.57618, 2.41173, 6.76918, 0.29 ) }
    dend_12 { pt3dadd( -8.65324, 2.02365, 6.74643, 1.03 ) }
    dend_12 { pt3dadd( -8.80198, 1.43904, 6.70583, 1.84 ) }
    dend_12 { pt3dadd( -9.08661, 0.586734, 6.63268, 0.74 ) }
    dend_12 { pt3dadd( -9.46059, -0.288656, 6.54333, 0.29 ) }
    dend_12 { pt3dadd( -9.90622, -1.0824, 6.44223, 0.29 ) }
    dend_12 { pt3dadd( -10.1889, -1.50278, 6.38144, 0.29 ) }
    dend_12 { pt3dadd( -10.3918, -1.78033, 6.33831, 0.88 ) }
    dend_12 { pt3dadd( -10.6701, -2.14683, 6.28105, 1.47 ) }
    dend_12 { pt3dadd( -10.9666, -2.55333, 6.21621, 0.88 ) }
    dend_12 { pt3dadd( -11.6303, -3.5901, 6.06462, 0.22 ) }
    dend_12 { pt3dadd( -11.8388, -3.9919, 6.01402, 0.15 ) }
    dend_12 { pt3dadd( -12.0611, -4.50101, 5.96623, 0.37 ) }
    dend_12 { pt3dadd( -12.2546, -4.95879, 5.93248, 0.22 ) }
    dend_12 { pt3dadd( -12.5618, -5.64264, 5.88833, 0.22 ) }
    dend_12 { pt3dadd( -12.8514, -6.20743, 5.84973, 0.52 ) }
    dend_12 { pt3dadd( -13.0425, -6.52055, 5.82747, 0.96 ) }
    dend_12 { pt3dadd( -13.4943, -7.08787, 5.77285, 1.62 ) }
    dend_12 { pt3dadd( -14.1248, -7.72406, 5.69023, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( -14.8424, -8.35685, 5.60054, 0.59 ) }
    dend_12 { pt3dadd( -15.4116, -8.81718, 5.53724, 0.88 ) }
    dend_12 { pt3dadd( -15.9552, -9.25314, 5.47678, 1.55 ) }
    dend_12 { pt3dadd( -16.429, -9.64003, 5.42189, 1.55 ) }
    dend_12 { pt3dadd( -17.1289, -10.2623, 5.33231, 0.37 ) }
    dend_12 { pt3dadd( -17.7053, -10.8404, 5.27448, 0.22 ) }
    dend_12 { pt3dadd( -18.0327, -11.2025, 5.24973, 0.44 ) }
    dend_12 { pt3dadd( -18.4895, -11.7548, 5.22291, 1.11 ) }
    dend_12 { pt3dadd( -18.6991, -12.0469, 5.21143, 1.11 ) }
    dend_12 { pt3dadd( -19.1276, -12.7255, 5.19446, 0.44 ) }
    dend_12 { pt3dadd( -19.4673, -13.3367, 5.16841, 0.22 ) }
    dend_12 { pt3dadd( -19.7388, -13.9064, 5.12767, 0.29 ) }
    dend_12 { pt3dadd( -19.8919, -14.2564, 5.08603, 0.15 ) }
    dend_12 { pt3dadd( -20.1386, -14.8498, 4.99505, 0.29 ) }
    dend_12 { pt3dadd( -20.2343, -15.0872, 4.95308, 0.96 ) }
    dend_12 { pt3dadd( -20.4575, -15.6442, 4.84088, 1.62 ) }
    dend_12 { pt3dadd( -20.8171, -16.5888, 4.64059, 2.06 ) }
    dend_12 { pt3dadd( -21.1606, -17.5135, 4.45895, 1.4 ) }
    dend_12 { pt3dadd( -21.3266, -17.9601, 4.37971, 0.59 ) }
    dend_12 { pt3dadd( -21.5917, -18.6589, 4.27231, 0.22 ) }
    dend_12 { pt3dadd( -21.757, -19.128, 4.21455, 0.22 ) }
    dend_12 { pt3dadd( -21.9119, -19.6014, 4.17394, 0.66 ) }
    dend_12 { pt3dadd( -22.0688, -20.1242, 4.1411, 0.74 ) }
    dend_12 { pt3dadd( -22.2277, -20.6856, 4.12002, 0.22 ) }
    dend_12 { pt3dadd( -22.4178, -21.3135, 4.10683, 0.15 ) }
    dend_12 { pt3dadd( -22.5862, -21.8289, 4.11229, 0.22 ) }
    dend_12 { pt3dadd( -22.7019, -22.1897, 4.12719, 0.66 ) }
    dend_12 { pt3dadd( -22.8524, -22.6406, 4.15659, 1.25 ) }
    dend_12 { pt3dadd( -23.0765, -23.2605, 4.20405, 1.47 ) }
    dend_12 { pt3dadd( -23.3765, -24.0019, 4.2593, 0.88 ) }
    dend_12 { pt3dadd( -23.6629, -24.6299, 4.29687, 0.22 ) }
    dend_12 { pt3dadd( -23.8834, -25.0612, 4.31265, 0.22 ) }
    dend_12 { pt3dadd( -24.1135, -25.4752, 4.31676, 0.22 ) }
    dend_12 { pt3dadd( -24.508, -26.1232, 4.29994, 0.37 ) }
    dend_12 { pt3dadd( -24.869, -26.6778, 4.25904, 0.37 ) }
    dend_12 { pt3dadd( -25.2607, -27.261, 4.19796, 0.52 ) }
    dend_12 { pt3dadd( -25.497, -27.6115, 4.15842, 0.22 ) }
    dend_12 { pt3dadd( -25.7188, -27.9529, 4.1257, 0.37 ) }
    dend_12 { pt3dadd( -25.9143, -28.3012, 4.10389, 0.74 ) }
    dend_12 { pt3dadd( -26.1861, -28.9259, 4.09482, 0.22 ) }
    dend_12 { pt3dadd( -26.4065, -29.603, 4.10832, 0.22 ) }
    dend_12 { pt3dadd( -26.5496, -30.1499, 4.12195, 0.29 ) }
    dend_12 { pt3dadd( -26.6545, -30.557, 4.12667, 0.52 ) }
    dend_12 { pt3dadd( -26.8053, -31.1433, 4.12614, 1.11 ) }
    dend_12 { pt3dadd( -26.9378, -31.6612, 4.11882, 1.7 ) }
    dend_12 { pt3dadd( -27.1262, -32.3775, 4.09424, 1.33 ) }
    dend_12 { pt3dadd( -27.3333, -33.1909, 4.05027, 0.22 ) }
    dend_12 { pt3dadd( -27.4786, -33.8369, 4.02131, 0.22 ) }
    dend_12 { pt3dadd( -27.5258, -34.0606, 4.0124, 0.22 ) }
    dend_12 { pt3dadd( -27.5787, -34.3215, 4.00353, 0.29 ) }
    dend_12 { pt3dadd( -27.6588, -34.7252, 3.99255, 0.52 ) }
    dend_12 { pt3dadd( -27.7567, -35.2459, 3.98483, 0.22 ) }
    dend_12 { pt3dadd( -27.8549, -35.679, 3.97855, 0.22 ) }
    dend_12 { pt3dadd( -27.9674, -36.0382, 3.96318, 0.22 ) }
    dend_12 { pt3dadd( -28.144, -36.4056, 3.92699, 0.81 ) }
    dend_12 { pt3dadd( -28.347, -36.7015, 3.87754, 1.47 ) }
    dend_12 { pt3dadd( -28.5328, -36.9188, 3.82891, 1.47 ) }
    dend_12 { pt3dadd( -29.0185, -37.4242, 3.69764, 0.22 ) }
    dend_12 { pt3dadd( -29.2883, -37.6985, 3.62412, 0.22 ) }
    dend_12 { pt3dadd( -29.6091, -38.0485, 3.53764, 0.37 ) }
    dend_12 { pt3dadd( -30.0045, -38.5212, 3.43266, 0.44 ) }
    dend_12 { pt3dadd( -30.2646, -38.8552, 3.3649, 0.22 ) }
    dend_12 { pt3dadd( -30.3667, -39.0019, 3.33577, 0.22 ) }
    dend_12 { pt3dadd( -30.4882, -39.1944, 3.29797, 0.22 ) }
    dend_12 { pt3dadd( -30.7158, -39.5748, 3.22412, 0.22 ) }
    dend_12 { pt3dadd( -30.8988, -39.8813, 3.16373, 0.74 ) }
    dend_12 { pt3dadd( -31.1229, -40.2597, 3.08999, 1.47 ) }
    dend_12 { pt3dadd( -31.473, -40.7942, 2.98458, 1.99 ) }
    dend_12 { pt3dadd( -31.8335, -41.2767, 2.8951, 1.77 ) }
    dend_12 { pt3dadd( -32.4607, -42.0135, 2.76074, 0.66 ) }
    dend_12 { pt3dadd( -32.8332, -42.4022, 2.69023, 0.15 ) }
    dend_12 { pt3dadd( -33.2304, -42.7886, 2.61848, 0.15 ) }
    dend_12 { pt3dadd( -33.657, -43.1986, 2.54184, 0.22 ) }
    dend_12 { pt3dadd( -34.0304, -43.5411, 2.47338, 0.22 ) }
    dend_12 { pt3dadd( -34.411, -43.8926, 2.38251, 0.29 ) }
    dend_12 { pt3dadd( -34.7249, -44.1994, 2.28618, 0.81 ) }
    dend_12 { pt3dadd( -35.1312, -44.6482, 2.12854, 1.47 ) }
    dend_12 { pt3dadd( -35.5607, -45.2065, 1.91128, 0.52 ) }
    dend_12 { pt3dadd( -35.8956, -45.7868, 1.68163, 0.22 ) }
    dend_12 { pt3dadd( -36.0985, -46.2605, 1.5008, 0.22 ) }
    dend_12 { pt3dadd( -36.2226, -46.6558, 1.37214, 0.22 ) }
    dend_12 { pt3dadd( -36.2684, -46.8608, 1.31326, 0.22 ) }
    dend_12 { pt3dadd( -36.3218, -47.2, 1.22757, 0.29 ) }
    dend_12 { pt3dadd( -36.3864, -47.717, 1.1044, 0.74 ) }
    dend_12 { pt3dadd( -36.4332, -48.1081, 1.00893, 1.03 ) }
    dend_12 { pt3dadd( -36.5751, -48.9322, 0.800617, 0.37 ) }
    dend_12 { pt3dadd( -36.7026, -49.4901, 0.651361, 0.88 ) }
    dend_12 { pt3dadd( -36.8438, -50.023, 0.506022, 1.18 ) }
    dend_12 { pt3dadd( -36.9814, -50.5056, 0.374068, 1.18 ) }
    dend_12 { pt3dadd( -37.2483, -51.3934, 0.149238, 0.29 ) }
    dend_12 { pt3dadd( -37.5071, -52.1548, -0.0332274, 0.29 ) }
    dend_12 { pt3dadd( -37.708, -52.6741, -0.14526, 0.37 ) }
    dend_12 { pt3dadd( -37.869, -53.0345, -0.20901, 0.88 ) }
    dend_12 { pt3dadd( -38.044, -53.4001, -0.257223, 0.66 ) }
    dend_12 { pt3dadd( -38.2722, -53.9007, -0.290057, 0.22 ) }
    dend_12 { pt3dadd( -38.4419, -54.3096, -0.288129, 0.22 ) }
    dend_12 { pt3dadd( -38.6003, -54.7643, -0.270336, 0.37 ) }
    dend_12 { pt3dadd( -38.6985, -55.0892, -0.248419, 0.66 ) }
    dend_12 { pt3dadd( -38.8459, -55.6026, -0.203478, 1.11 ) }
    dend_12 { pt3dadd( -39.0245, -56.2131, -0.14636, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( -39.1485, -56.5974, -0.113466, 0.29 ) }
    dend_12 { pt3dadd( -39.3318, -57.1291, -0.0637255, 0.22 ) }
    dend_12 { pt3dadd( -39.4604, -57.4904, -0.0390749, 0.29 ) }
    dend_12 { pt3dadd( -39.6772, -58.1259, -0.0264258, 0.96 ) }
    dend_12 { pt3dadd( -39.8263, -58.5798, -0.0424309, 1.03 ) }
    dend_12 { pt3dadd( -40.061, -59.3636, -0.106685, 0.81 ) }
    dend_12 { pt3dadd( -40.2229, -59.9964, -0.183284, 0.29 ) }
    dend_12 { pt3dadd( -40.3535, -60.5209, -0.268491, 0.22 ) }
    dend_12 { pt3dadd( -40.4887, -61.0707, -0.375091, 0.29 ) }
    dend_12 { pt3dadd( -40.6041, -61.5504, -0.481725, 0.74 ) }
    dend_12 { pt3dadd( -40.7038, -61.9725, -0.577583, 0.52 ) }
    dend_12 { pt3dadd( -40.9432, -62.8952, -0.789011, 0.29 ) }
    dend_12 { pt3dadd( -41.2177, -63.7478, -0.973771, 0.29 ) }
    dend_12 { pt3dadd( -41.5357, -64.5169, -1.11072, 0.29 ) }
    dend_12 { pt3dadd( -41.7369, -64.9299, -1.17491, 0.29 ) }
    dend_12 { pt3dadd( -41.9514, -65.3283, -1.23541, 1.03 ) }
    dend_12 { pt3dadd( -42.17, -65.7126, -1.29651, 1.7 ) }
    dend_12 { pt3dadd( -42.5564, -66.3841, -1.40017, 1.4 ) }
    dend_12 { pt3dadd( -43.1406, -67.3915, -1.5461, 0.44 ) }
    dend_12 { pt3dadd( -43.4893, -67.9619, -1.6195, 0.15 ) }
    dend_12 { pt3dadd( -43.6461, -68.2118, -1.65014, 0.37 ) }
    dend_12 { pt3dadd( -43.8964, -68.6106, -1.70487, 0.59 ) }
    dend_12 { pt3dadd( -44.1309, -69.0042, -1.76684, 0.59 ) }
    dend_12 { pt3dadd( -44.5525, -69.7465, -1.90706, 0.22 ) }
    dend_12 { pt3dadd( -44.8699, -70.2988, -2.03398, 0.22 ) }
    dend_12 { pt3dadd( -45.1103, -70.7063, -2.13124, 0.22 ) }
    dend_12 { pt3dadd( -45.2987, -71.0338, -2.21056, 0.88 ) }
    dend_12 { pt3dadd( -45.4838, -71.3649, -2.27418, 1.47 ) }
    dend_12 { pt3dadd( -45.7468, -71.8557, -2.35497, 1.84 ) }
    dend_12 { pt3dadd( -46.491, -73.3037, -2.55428, 0.22 ) }
    dend_12 { pt3dadd( -46.6011, -73.5298, -2.58477, 0.22 ) }
    dend_12 { pt3dadd( -46.7469, -73.8321, -2.62072, 0.22 ) }
    dend_12 { pt3dadd( -47.0841, -74.5019, -2.70901, 0.22 ) }
    dend_12 { pt3dadd( -47.3157, -74.9218, -2.77522, 0.22 ) }
    dend_12 { pt3dadd( -47.5081, -75.2432, -2.84127, 0.74 ) }
    dend_12 { pt3dadd( -47.8542, -75.8121, -2.99246, 1.33 ) }
    dend_12 { pt3dadd( -48.2953, -76.4926, -3.20364, 0.22 ) }
    dend_12 { pt3dadd( -48.5581, -76.8759, -3.33916, 0.22 ) }
    dend_12 { pt3dadd( -48.8515, -77.3062, -3.48481, 0.22 ) }
    dend_12 { pt3dadd( -49.0731, -77.6562, -3.55911, 0.15 ) }
    dend_12 { pt3dadd( -49.2377, -77.9407, -3.58224, 0.15 ) }
    dend_12 { pt3dadd( -49.4811, -78.3515, -3.56327, 0.37 ) }
    dend_12 { pt3dadd( -49.6014, -78.5544, -3.5343, 0.96 ) }
    dend_12 { pt3dadd( -50.0614, -79.314, -3.37568, 2.14 ) }
    dend_12 { pt3dadd( -50.6216, -80.194, -3.15658, 0.66 ) }
    dend_12 { pt3dadd( -51.0488, -80.7962, -2.9844, 0.15 ) }
    dend_12 { pt3dadd( -51.4607, -81.3012, -2.82052, 0.15 ) }
    dend_12 { pt3dadd( -51.7276, -81.5925, -2.71519, 0.44 ) }
    dend_12 { pt3dadd( -51.9891, -81.8577, -2.61468, 1.03 ) }
    dend_12 { pt3dadd( -52.4272, -82.2874, -2.45425, 1.55 ) }
    dend_12 { pt3dadd( -52.973, -82.8177, -2.24486, 0.44 ) }
    dend_12 { pt3dadd( -53.3246, -83.1941, -2.12152, 0.22 ) }
    dend_12 { pt3dadd( -53.5677, -83.4968, -2.04219, 0.22 ) }
    dend_12 { pt3dadd( -53.9172, -83.9742, -1.94552, 0.22 ) }
    dend_12 { pt3dadd( -54.2314, -84.4319, -1.88174, 0.29 ) }
    dend_12 { pt3dadd( -54.5741, -84.9621, -1.84795, 0.29 ) }
    dend_12 { pt3dadd( -54.9865, -85.6326, -1.85422, 0.15 ) }
    dend_12 { pt3dadd( -55.289, -86.1298, -1.88804, 0.22 ) }
    dend_12 { pt3dadd( -55.5986, -86.6432, -1.96855, 0.88 ) }
    dend_12 { pt3dadd( -56.0265, -87.3637, -2.14791, 0.74 ) }
    dend_12 { pt3dadd( -56.3025, -87.8273, -2.3062, 0.88 ) }
    dend_12 { pt3dadd( -56.5755, -88.3054, -2.50723, 1.77 ) }
    dend_12 { pt3dadd( -56.865, -88.8477, -2.77278, 2.29 ) }
    dend_12 { pt3dadd( -57.2588, -89.6839, -3.23442, 0.07 ) }
    dend_12 { pt3dadd( -57.4611, -90.1975, -3.55073, 0.15 ) }
    dend_12 { pt3dadd( -57.5603, -90.5236, -3.77424, 0.15 ) }
    dend_12 { pt3dadd( -57.6019, -90.7056, -3.90311, 0.15 ) }
    dend_12 { pt3dadd( -57.6453, -91.0618, -4.13995, 0.15 ) }
    dend_12 { pt3dadd( -57.6459, -91.3456, -4.29521, 0.15 ) }
    dend_12 { pt3dadd( -57.6345, -91.8539, -4.49811, 0.15 ) }
    dend_12 { pt3dadd( -57.6314, -92.0429, -4.5589, 0.15 ) }
    dend_12 { pt3dadd( -57.6276, -92.5786, -4.70688, 0.66 ) }
    dend_12 { pt3dadd( -57.6514, -93.5513, -4.95493, 0.29 ) }
    dend_12 { pt3dadd( -57.6946, -94.1827, -5.10031, 0.22 ) }
    dend_12 { pt3dadd( -57.7524, -94.7597, -5.21741, 0.22 ) }
    dend_12 { pt3dadd( -57.8324, -95.2582, -5.30846, 0.22 ) }
    dend_12 { pt3dadd( -57.9017, -95.51, -5.35613, 0.59 ) }
    dend_12 { pt3dadd( -58.0103, -95.7468, -5.4072, 0.74 ) }
    dend_12 { pt3dadd( -58.1782, -95.9733, -5.45475, 0.37 ) }
    dend_12 { pt3dadd( -58.4415, -96.2371, -5.50397, 0.15 ) }
    dend_12 { pt3dadd( -59.0028, -96.7229, -5.58185, 0.15 ) }
    dend_12 { pt3dadd( -59.3256, -96.9748, -5.6192, 0.22 ) }
    dend_12 { pt3dadd( -59.656, -97.2305, -5.65606, 0.29 ) }
    dend_12 { pt3dadd( -59.9989, -97.5042, -5.68314, 0.22 ) }
    dend_12 { pt3dadd( -60.438, -97.8856, -5.70466, 0.22 ) }
    dend_12 { pt3dadd( -60.9208, -98.3557, -5.71385, 0.29 ) }
    dend_12 { pt3dadd( -61.2531, -98.7159, -5.70645, 0.29 ) }
    dend_12 { pt3dadd( -61.6721, -99.1643, -5.70089, 0.22 ) }
    dend_12 { pt3dadd( -62.0226, -99.515, -5.7095, 0.37 ) }
    dend_12 { pt3dadd( -62.3643, -99.8452, -5.73466, 0.74 ) }
    dend_12 { pt3dadd( -62.61, -100.082, -5.75714, 1.03 ) }
    dend_12 { pt3dadd( -63.0988, -100.561, -5.80248, 0.22 ) }
    dend_12 { pt3dadd( -63.5357, -101.012, -5.84462, 0.22 ) }
    dend_12 { pt3dadd( -63.9104, -101.409, -5.89082, 0.15 ) }
    dend_12 { pt3dadd( -64.19, -101.725, -5.93587, 0.15 ) }
    dend_12 { pt3dadd( -64.3856, -101.967, -5.96867, 0.15 ) }
    dend_12 { pt3dadd( -64.6823, -102.397, -6.0302, 0.22 ) }
    dend_12 { pt3dadd( -65.0742, -103.058, -6.12888, 0.29 ) }
    dend_12 { pt3dadd( -65.3701, -103.65, -6.20655, 0.74 ) }
    dend_12 { pt3dadd( -65.6651, -104.326, -6.27022, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_12 { pt3dadd( -65.8816, -104.859, -6.30917, 0.37 ) }
    dend_12 { pt3dadd( -66.0989, -105.43, -6.34166, 0.37 ) }
    dend_12 { pt3dadd( -66.2633, -105.869, -6.35179, 1.4 ) }
    dend_12 { pt3dadd( -66.509, -106.498, -6.35413, 2.95 ) }
    dend_12 { pt3dadd( -66.8924, -107.375, -6.34565, 1.18 ) }
    dend_12 { pt3dadd( -67.2378, -108.053, -6.33814, 0.22 ) }
    dend_12 { pt3dadd( -67.6782, -108.833, -6.31621, 0.29 ) }
    dend_12 { pt3dadd( -68.0171, -109.41, -6.29065, 0.74 ) }
    dend_12 { pt3dadd( -68.2735, -109.838, -6.2734, 1.33 ) }
    dend_12 { pt3dadd( -68.6987, -110.48, -6.26843, 0.81 ) }
    dend_12 { pt3dadd( -69.0619, -111.007, -6.30968, 1.18 ) }
    dend_12 { pt3dadd( -69.6346, -111.881, -6.42414, 0.66 ) }
    dend_12 { pt3dadd( -69.9687, -112.459, -6.51675, 0.29 ) }
    dend_12 { pt3dadd( -70.0874, -112.686, -6.5579, 0.44 ) }
    dend_12 { pt3dadd( -70.5346, -113.64, -6.72923, 0.29 ) }
    dend_12 { pt3dadd( -70.8418, -114.356, -6.86948, 0.81 ) }
    dend_12 { pt3dadd( -71.271, -115.387, -7.11627, 0.22 ) }
    dend_12 { pt3dadd( -71.4845, -115.855, -7.2779, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 46.8265, -7.14532, -27.113, 0.15 ) }
    dend_9 { pt3dadd( 52.9833, -11.458, -30.2807, 0.15 ) }
    dend_9 { pt3dadd( 58.9011, -16.2267, -33.1633, 0.15 ) }
    dend_9 { pt3dadd( 64.5373, -20.698, -37.0139, 0.15 ) }
    dend_9 { pt3dadd( 70.7655, -25.0262, -40.0073, 0.15 ) }
    dend_9 { pt3dadd( 76.8009, -28.4052, -44.4418, 0.15 ) }
    dend_9 { pt3dadd( 82.6597, -31.8597, -49.0505, 0.15 ) }
    dend_9 { pt3dadd( 88.463, -36.1711, -52.8498, 0.15 ) }
    dend_9 { pt3dadd( 93.2036, -41.6777, -56.4294, 0.15 ) }
    dend_9 { pt3dadd( 99.2101, -46.2991, -59.3941, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 28/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 46.8265, -7.14532, -27.113, 0.59 ) }
    dend_8 { pt3dadd( 55.9455, -12.9041, -30.6086, 0.15 ) }
    dend_8 { pt3dadd( 64.7943, -18.8885, -34.3752, 0.15 ) }
    dend_8 { pt3dadd( 74.1194, -24.7384, -37.0419, 0.15 ) }
    dend_8 { pt3dadd( 83.6542, -30.4799, -39.1555, 0.15 ) }
    dend_8 { pt3dadd( 92.9274, -35.89, -42.8603, 0.15 ) }
    dend_8 { pt3dadd( 101.752, -41.785, -46.8377, 0.15 ) }
    dend_8 { pt3dadd( 109.94, -48.6811, -50.3646, 0.15 ) }
    dend_8 { pt3dadd( 117.339, -55.9199, -54.7895, 0.15 ) }
    dend_8 { pt3dadd( 123.898, -63.9544, -59.0225, 0.15 ) }
    dend_8 { pt3dadd( 129.826, -72.9915, -61.5968, 0.15 ) }
    dend_8 { pt3dadd( 136.748, -81.2187, -64.6443, 0.15 ) }
    dend_8 { pt3dadd( 143.339, -89.1705, -69.0008, 0.15 ) }
    dend_8 { pt3dadd( 149.257, -97.2789, -73.9814, 0.15 ) }
    dend_8 { pt3dadd( 156.626, -103.881, -79.4533, 0.15 ) }
    dend_8 { pt3dadd( 166.307, -108.2, -83.6781, 0.15 ) }
    dend_8 { pt3dadd( 176.087, -112.679, -87.46, 0.15 ) }
    dend_8 { pt3dadd( 186.312, -115.436, -91.8563, 0.15 ) }
    dend_8 { pt3dadd( 196.424, -118.937, -95.9064, 0.15 ) }
    dend_8 { pt3dadd( 206.538, -120.457, -101.158, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 47.6249, -16.2358, -35.2495, 0.15 ) }
    dend_6 { pt3dadd( 52.0169, -22.9006, -42.6925, 0.15 ) }
    dend_6 { pt3dadd( 55.9423, -30.4766, -49.3977, 0.15 ) }
    dend_6 { pt3dadd( 60.0914, -37.1591, -56.9557, 0.15 ) }
    dend_6 { pt3dadd( 62.5422, -45.8822, -62.7503, 0.15 ) }
    dend_6 { pt3dadd( 64.8743, -55.4503, -66.9505, 0.15 ) }
    dend_6 { pt3dadd( 66.9758, -64.6592, -72.0209, 0.15 ) }
    dend_6 { pt3dadd( 70.0772, -72.4619, -78.8504, 0.15 ) }
    dend_6 { pt3dadd( 74.8512, -80.403, -84.4936, 0.15 ) }
    dend_6 { pt3dadd( 78.2492, -89.2926, -89.5251, 0.15 ) }
    dend_6 { pt3dadd( 83.0781, -97.9254, -93.8969, 0.15 ) }
    dend_6 { pt3dadd( 87.1584, -106.809, -98.4453, 0.15 ) }
    dend_6 { pt3dadd( 90.5285, -115.206, -104.328, 0.15 ) }
    dend_6 { pt3dadd( 91.6496, -123.911, -110.51, 0.15 ) }
    dend_6 { pt3dadd( 93.6195, -132.997, -115.857, 0.15 ) }
    dend_6 { pt3dadd( 97.85, -141.945, -120.136, 0.15 ) }
    dend_6 { pt3dadd( 101.148, -150.141, -126.353, 0.15 ) }
    dend_6 { pt3dadd( 106.06, -157.986, -132.028, 0.15 ) }
    dend_6 { pt3dadd( 110.619, -166.562, -136.774, 0.15 ) }
    dend_6 { pt3dadd( 114.58, -174.488, -143.005, 0.15 ) }
    dend_6 { pt3dadd( 118.759, -182.877, -148.392, 0.15 ) }
    dend_6 { pt3dadd( 121.813, -190.788, -155.105, 0.15 ) }
    dend_6 { pt3dadd( 124.472, -199.485, -160.857, 0.15 ) }
    dend_6 { pt3dadd( 127.048, -208.871, -165.351, 0.15 ) }
    dend_6 { pt3dadd( 129.083, -217.578, -171.317, 0.15 ) }
    dend_6 { pt3dadd( 131.758, -226.25, -177.102, 0.15 ) }
    dend_6 { pt3dadd( 133.206, -235.667, -181.966, 0.15 ) }
    dend_6 { pt3dadd( 135.497, -245.563, -185.306, 0.15 ) }
    dend_6 { pt3dadd( 139.775, -255.311, -186.892, 0.15 ) }
    dend_6 { pt3dadd( 145.341, -264.614, -187.034, 0.15 ) }
    dend_6 { pt3dadd( 152.029, -273.229, -186.65, 0.15 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 79/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 47.6249, -16.2358, -35.2495, 0.59 ) }
    dend_3 { pt3dadd( 53.1148, -22.0657, -38.6368, 0.15 ) }
    dend_3 { pt3dadd( 59.7463, -26.6951, -42.0452, 0.15 ) }
    dend_3 { pt3dadd( 66.6186, -31.1821, -45.1844, 0.15 ) }
    dend_3 { pt3dadd( 71.8634, -36.6054, -49.5415, 0.15 ) }
    dend_3 { pt3dadd( 76.2872, -42.3595, -54.3024, 0.15 ) }
    dend_3 { pt3dadd( 81.3386, -47.4536, -59.2724, 0.15 ) }
    dend_3 { pt3dadd( 87.0949, -51.7204, -64.3459, 0.15 ) }
    dend_3 { pt3dadd( 93.6251, -55.2541, -69.1087, 0.15 ) }
    dend_3 { pt3dadd( 100.573, -59.2393, -72.7749, 0.15 ) }
    dend_3 { pt3dadd( 107.17, -64.1597, -75.7855, 0.15 ) }
    dend_3 { pt3dadd( 114.3, -69.0591, -77.2778, 0.15 ) }
    dend_3 { pt3dadd( 120.563, -75.0933, -77.8203, 0.15 ) }
    dend_3 { pt3dadd( 125.828, -81.9374, -77.1297, 0.15 ) }
    dend_3 { pt3dadd( 129.836, -89.1632, -74.5828, 0.15 ) }
    dend_3 { pt3dadd( 133.966, -96.4962, -72.6677, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 95/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -89.3448, -127.888, -11.5143, 0.15 ) }
    dend_56 { pt3dadd( -94.4272, -133.679, -11.4424, 0.15 ) }
    dend_56 { pt3dadd( -99.2072, -139.561, -12.8246, 0.15 ) }
    dend_56 { pt3dadd( -104.292, -145.331, -13.3532, 0.15 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 99/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -89.3448, -127.888, -11.5143, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_55 { pt3dadd( -95.8792, -135.561, -11.1528, 0.15 ) }
    dend_55 { pt3dadd( -100.848, -144.1, -9.60611, 0.15 ) }
    dend_55 { pt3dadd( -106.484, -152.155, -7.57628, 0.15 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 3/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -28.8337, -156.468, -100.934, 0.15 ) }
    dend_52 { pt3dadd( -31.8045, -169.48, -107.725, 0.15 ) }
    dend_52 { pt3dadd( -35.9752, -182.919, -112.643, 0.15 ) }
    dend_52 { pt3dadd( -38.5664, -196.305, -118.745, 0.15 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 7/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -28.8337, -156.468, -100.934, 0.59 ) }
    dend_51 { pt3dadd( -29.594, -165.928, -106.571, 0.15 ) }
    dend_51 { pt3dadd( -28.2401, -175.776, -111.289, 0.15 ) }
    dend_51 { pt3dadd( -28.3711, -185.476, -116.51, 0.15 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 11/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 26.9969, -168.74, 39.1483, 0.15 ) }
    dend_45 { pt3dadd( 27.7767, -169.304, 39.0641, 0.15 ) }
    dend_45 { pt3dadd( 28.1361, -169.564, 39.0253, 0.37 ) }
    dend_45 { pt3dadd( 28.7386, -170.0, 38.9602, 1.18 ) }
    dend_45 { pt3dadd( 29.1772, -170.317, 38.9128, 0.88 ) }
    dend_45 { pt3dadd( 29.9476, -170.874, 38.8296, 0.22 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 17/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 26.9969, -168.74, 39.1483, 0.22 ) }
    dend_44 { pt3dadd( 27.17, -170.028, 38.7772, 0.22 ) }
    dend_44 { pt3dadd( 27.2812, -170.985, 38.4598, 0.81 ) }
    dend_44 { pt3dadd( 27.3585, -171.915, 38.1554, 1.18 ) }
    dend_44 { pt3dadd( 27.3917, -173.331, 37.7286, 0.22 ) }
    dend_44 { pt3dadd( 27.3087, -174.538, 37.4103, 0.22 ) }
    dend_44 { pt3dadd( 27.1409, -175.738, 37.1305, 0.29 ) }
    dend_44 { pt3dadd( 26.8959, -176.873, 36.9039, 0.66 ) }
    dend_44 { pt3dadd( 26.5448, -178.022, 36.7326, 0.81 ) }
    dend_44 { pt3dadd( 26.0708, -179.269, 36.6132, 0.22 ) }
    dend_44 { pt3dadd( 25.3519, -180.893, 36.5592, 0.22 ) }
    dend_44 { pt3dadd( 24.9896, -181.691, 36.5799, 0.29 ) }
    dend_44 { pt3dadd( 24.6419, -182.494, 36.6284, 0.96 ) }
    dend_44 { pt3dadd( 24.333, -183.281, 36.7038, 1.7 ) }
    dend_44 { pt3dadd( 23.7696, -185.009, 36.9201, 0.52 ) }
    dend_44 { pt3dadd( 23.3965, -186.557, 37.1642, 0.22 ) }
    dend_44 { pt3dadd( 23.2713, -187.37, 37.3207, 0.15 ) }
    dend_44 { pt3dadd( 23.1431, -188.665, 37.6209, 0.22 ) }
    dend_44 { pt3dadd( 23.0659, -189.8, 37.8727, 0.15 ) }
    dend_44 { pt3dadd( 23.0115, -190.764, 38.0831, 0.15 ) }
    dend_44 { pt3dadd( 22.977, -191.419, 38.219, 0.15 ) }
    dend_44 { pt3dadd( 22.9473, -192.152, 38.3498, 0.37 ) }
    dend_44 { pt3dadd( 22.8957, -193.1, 38.4587, 0.59 ) }
    dend_44 { pt3dadd( 22.7563, -194.85, 38.5238, 0.07 ) }
    dend_44 { pt3dadd( 22.6399, -195.844, 38.4898, 0.07 ) }
    dend_44 { pt3dadd( 22.4966, -196.925, 38.4076, 0.15 ) }
    dend_44 { pt3dadd( 22.4037, -197.668, 38.3342, 0.66 ) }
    dend_44 { pt3dadd( 22.2986, -198.583, 38.2383, 0.74 ) }
    dend_44 { pt3dadd( 22.152, -200.122, 38.1015, 0.15 ) }
    dend_44 { pt3dadd( 22.0776, -201.109, 38.0583, 0.22 ) }
    dend_44 { pt3dadd( 22.0232, -201.915, 38.033, 0.15 ) }
    dend_44 { pt3dadd( 21.9554, -202.615, 38.0238, 0.81 ) }
    dend_44 { pt3dadd( 21.8529, -203.355, 38.031, 0.66 ) }
    dend_44 { pt3dadd( 21.6207, -204.605, 38.0437, 0.15 ) }
    dend_44 { pt3dadd( 21.3937, -205.604, 38.035, 0.22 ) }
    dend_44 { pt3dadd( 21.0718, -206.848, 38.0044, 0.52 ) }
    dend_44 { pt3dadd( 20.7409, -207.85, 37.9939, 0.59 ) }
    dend_44 { pt3dadd( 20.2798, -209.164, 38.0438, 0.07 ) }
    dend_44 { pt3dadd( 19.9128, -210.204, 38.1225, 0.22 ) }
    dend_44 { pt3dadd( 19.7771, -210.579, 38.1551, 0.22 ) }
    dend_44 { pt3dadd( 19.4665, -211.436, 38.2413, 0.96 ) }
    dend_44 { pt3dadd( 18.8699, -213.06, 38.4408, 0.07 ) }
    dend_44 { pt3dadd( 18.3933, -214.479, 38.6893, 0.07 ) }
    dend_44 { pt3dadd( 18.193, -215.129, 38.8681, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 61/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -15.317, -206.164, 25.4927, 0.15 ) }
    dend_41 { pt3dadd( -15.3046, -214.018, 26.9758, 0.15 ) }
    dend_41 { pt3dadd( -16.1731, -221.851, 28.3081, 0.15 ) }
    dend_41 { pt3dadd( -17.0164, -229.655, 29.8328, 0.15 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 65/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -15.317, -206.164, 25.4927, 0.59 ) }
    dend_40 { pt3dadd( -16.4771, -217.111, 27.4926, 0.15 ) }
    dend_40 { pt3dadd( -18.2159, -228.141, 26.963, 0.15 ) }
    dend_40 { pt3dadd( -21.3291, -238.766, 28.8077, 0.15 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 69/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 17.3751, 36.7389, 1.74006, 0.52 ) }
    dend_32 { pt3dadd( 18.2881, 37.3598, 1.66896, 0.52 ) }
    dend_32 { pt3dadd( 19.2981, 37.6255, 1.61901, 0.37 ) }
    dend_32 { pt3dadd( 20.0184, 37.7106, 1.61578, 0.37 ) }
    dend_32 { pt3dadd( 20.3911, 37.7457, 1.61176, 0.52 ) }
    dend_32 { pt3dadd( 21.0954, 37.837, 1.58052, 0.52 ) }
    dend_32 { pt3dadd( 22.2028, 38.0307, 1.48772, 0.44 ) }
    dend_32 { pt3dadd( 22.7559, 38.1145, 1.41103, 0.44 ) }
    dend_32 { pt3dadd( 23.3746, 38.2501, 1.31173, 0.66 ) }
    dend_32 { pt3dadd( 23.8815, 38.446, 1.23779, 0.66 ) }
    dend_32 { pt3dadd( 24.4732, 38.8077, 1.16828, 0.88 ) }
    dend_32 { pt3dadd( 24.8143, 39.1226, 1.15036, 1.03 ) }
    dend_32 { pt3dadd( 25.4322, 39.8894, 1.19176, 0.52 ) }
    dend_32 { pt3dadd( 25.8648, 40.4984, 1.26477, 0.52 ) }
    dend_32 { pt3dadd( 26.2195, 41.0281, 1.35507, 0.52 ) }
    dend_32 { pt3dadd( 26.5309, 41.4923, 1.46409, 0.52 ) }
    dend_32 { pt3dadd( 27.056, 42.232, 1.65503, 0.22 ) }
    dend_32 { pt3dadd( 27.5528, 42.9192, 1.85204, 0.44 ) }
    dend_32 { pt3dadd( 28.0417, 43.6011, 2.0537, 0.74 ) }
    dend_32 { pt3dadd( 28.5696, 44.36, 2.24147, 1.18 ) }
    dend_32 { pt3dadd( 28.9612, 44.9234, 2.34824, 0.88 ) }
    dend_32 { pt3dadd( 29.6159, 45.8166, 2.48717, 0.29 ) }
    dend_32 { pt3dadd( 34.9049, 51.9458, 3.74265, 0.29 ) }
    dend_32 { pt3dadd( 40.538, 57.8213, 4.79943, 0.29 ) }
    dend_32 { pt3dadd( 45.1042, 64.4038, 6.36855, 0.29 ) }
    dend_32 { pt3dadd( 48.9512, 71.1109, 9.01418, 0.29 ) }
    dend_32 { pt3dadd( 52.477, 78.0237, 11.5189, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 96/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 17.3751, 36.7389, 1.74006, 0.88 ) }
    dend_25 { pt3dadd( 18.4454, 37.9478, 3.03335, 0.88 ) }
    dend_25 { pt3dadd( 19.219, 38.7295, 3.86202, 0.81 ) }
    dend_25 { pt3dadd( 20.2132, 39.6393, 4.73093, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_25 { pt3dadd( 21.3393, 40.5839, 5.53826, 1.33 ) }
    dend_25 { pt3dadd( 22.7159, 41.7222, 6.39367, 1.33 ) }
    dend_25 { pt3dadd( 23.5247, 42.3977, 6.87002, 1.33 ) }
    dend_25 { pt3dadd( 24.4456, 43.1976, 7.34923, 1.33 ) }
    dend_25 { pt3dadd( 25.6316, 44.2213, 7.89169, 1.18 ) }
    dend_25 { pt3dadd( 26.7809, 45.1962, 8.37002, 1.03 ) }
    dend_25 { pt3dadd( 27.8005, 46.0385, 8.80545, 0.88 ) }
    dend_25 { pt3dadd( 29.0466, 47.0919, 9.3686, 1.4 ) }
    dend_25 { pt3dadd( 30.5282, 48.4242, 10.095, 0.74 ) }
    dend_25 { pt3dadd( 31.717, 49.5349, 10.7167, 1.25 ) }
    dend_25 { pt3dadd( 32.9938, 50.7174, 11.4049, 1.77 ) }
    dend_25 { pt3dadd( 34.6916, 52.2676, 12.2604, 0.96 ) }
    dend_25 { pt3dadd( 36.1483, 53.5716, 12.8908, 0.59 ) }
    dend_25 { pt3dadd( 37.2549, 54.5639, 13.2769, 0.74 ) }
    dend_25 { pt3dadd( 38.0986, 55.335, 13.5137, 0.96 ) }
    dend_25 { pt3dadd( 39.5674, 56.7497, 13.8829, 1.11 ) }
    dend_25 { pt3dadd( 40.5987, 57.8104, 14.1534, 1.4 ) }
    dend_25 { pt3dadd( 41.497, 58.7938, 14.425, 1.4 ) }
    dend_25 { pt3dadd( 42.9577, 60.3938, 14.9641, 0.96 ) }
    dend_25 { pt3dadd( 43.5536, 61.0635, 15.2587, 0.96 ) }
    dend_25 { pt3dadd( 44.7173, 62.4238, 16.048, 1.18 ) }
    dend_25 { pt3dadd( 45.6172, 63.5008, 16.8602, 1.18 ) }
    dend_25 { pt3dadd( 46.541, 64.5495, 17.795, 1.03 ) }
    dend_25 { pt3dadd( 47.2073, 65.2247, 18.4472, 0.96 ) }
    dend_25 { pt3dadd( 48.1715, 66.0905, 19.2806, 0.81 ) }
    dend_25 { pt3dadd( 49.3088, 67.0121, 20.1028, 0.74 ) }
    dend_25 { pt3dadd( 50.6122, 67.9848, 20.865, 0.96 ) }
    dend_25 { pt3dadd( 52.0107, 69.0136, 21.5597, 1.25 ) }
    dend_25 { pt3dadd( 53.5885, 70.1852, 22.2481, 1.55 ) }
    dend_25 { pt3dadd( 54.9587, 71.2556, 22.7799, 0.88 ) }
    dend_25 { pt3dadd( 56.5072, 72.561, 23.2645, 0.59 ) }
    dend_25 { pt3dadd( 57.4259, 73.4372, 23.5116, 0.81 ) }
    dend_25 { pt3dadd( 58.3743, 74.4915, 23.7394, 0.96 ) }
    dend_25 { pt3dadd( 59.347, 75.678, 23.9918, 1.33 ) }
    dend_25 { pt3dadd( 60.739, 77.5919, 24.3917, 1.55 ) }
    dend_25 { pt3dadd( 61.8863, 79.3318, 24.7147, 1.7 ) }
    dend_25 { pt3dadd( 62.9444, 81.0706, 24.9599, 1.62 ) }
    dend_25 { pt3dadd( 64.0918, 83.0636, 25.1533, 1.62 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 38/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -42.0138, 167.841, -84.4289, 0.15 ) }
    dend_23 { pt3dadd( -45.3287, 178.645, -91.5373, 0.15 ) }
    dend_23 { pt3dadd( -46.9087, 190.204, -97.9148, 0.15 ) }
    dend_23 { pt3dadd( -51.1786, 201.423, -103.651, 0.15 ) }
    dend_23 { pt3dadd( -55.268, 212.956, -108.801, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 43/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -42.0138, 167.841, -84.4289, 0.59 ) }
    dend_22 { pt3dadd( -46.4912, 176.683, -88.6742, 0.15 ) }
    dend_22 { pt3dadd( -51.6756, 184.984, -93.3006, 0.15 ) }
    dend_22 { pt3dadd( -55.5132, 194.705, -95.6054, 0.15 ) }
    dend_22 { pt3dadd( -57.8473, 204.758, -98.3612, 0.15 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 48/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -15.4871, 22.8698, 9.49529, 0.81 ) }
    dend_17 { pt3dadd( -13.8817, 23.809, 10.1387, 0.81 ) }
    dend_17 { pt3dadd( -12.984, 24.4108, 10.4201, 0.44 ) }
    dend_17 { pt3dadd( -11.7014, 25.4546, 10.8357, 0.59 ) }
    dend_17 { pt3dadd( -10.6723, 26.399, 11.2194, 0.59 ) }
    dend_17 { pt3dadd( -9.82486, 27.2242, 11.5673, 0.88 ) }
    dend_17 { pt3dadd( -9.18297, 27.8708, 11.8504, 1.11 ) }
    dend_17 { pt3dadd( -8.38075, 28.6696, 12.0753, 1.11 ) }
    dend_17 { pt3dadd( -7.65275, 29.6229, 12.2688, 0.29 ) }
    dend_17 { pt3dadd( -7.53554, 30.2121, 12.4145, 0.29 ) }
    dend_17 { pt3dadd( -7.80234, 30.6804, 12.624, 0.29 ) }
    dend_17 { pt3dadd( -8.01709, 30.924, 12.7621, 0.29 ) }
    dend_17 { pt3dadd( -8.23716, 31.2081, 12.9736, 0.29 ) }
    dend_17 { pt3dadd( -8.51073, 31.7112, 13.4623, 0.59 ) }
    dend_17 { pt3dadd( -8.61244, 32.1918, 14.0052, 1.11 ) }
    dend_17 { pt3dadd( -8.63807, 32.954, 14.9496, 1.84 ) }
    dend_17 { pt3dadd( -8.58719, 33.5677, 15.7989, 1.84 ) }
    dend_17 { pt3dadd( -8.46657, 34.3308, 16.9302, 0.96 ) }
    dend_17 { pt3dadd( -8.35382, 34.835, 17.7449, 0.74 ) }
    dend_17 { pt3dadd( -8.2049, 35.3889, 18.6258, 0.74 ) }
    dend_17 { pt3dadd( -8.0752, 36.0426, 19.6098, 0.74 ) }
    dend_17 { pt3dadd( -8.02975, 36.581, 20.3557, 1.11 ) }
    dend_17 { pt3dadd( -8.00899, 37.2742, 21.1534, 1.47 ) }
    dend_17 { pt3dadd( -7.98851, 38.0125, 21.8873, 1.47 ) }
    dend_17 { pt3dadd( -7.94227, 39.0142, 22.7823, 0.74 ) }
    dend_17 { pt3dadd( -7.8654, 40.3489, 23.8941, 0.52 ) }
    dend_17 { pt3dadd( -7.80948, 41.0769, 24.4838, 0.52 ) }
    dend_17 { pt3dadd( -7.73031, 42.0795, 25.3328, 0.37 ) }
    dend_17 { pt3dadd( -7.61653, 42.8458, 26.1146, 0.37 ) }
    dend_17 { pt3dadd( -7.5287, 43.0528, 26.505, 0.37 ) }
    dend_17 { pt3dadd( -7.39356, 43.1453, 27.0513, 0.37 ) }
    dend_17 { pt3dadd( -7.2888, 43.1684, 27.4694, 0.37 ) }
    dend_17 { pt3dadd( -7.14672, 43.2667, 28.531, 0.37 ) }
    dend_17 { pt3dadd( -7.18478, 43.4372, 29.3628, 0.37 ) }
    dend_17 { pt3dadd( -7.35071, 43.8886, 30.4934, 0.37 ) }
    dend_17 { pt3dadd( -7.51324, 44.3048, 31.244, 0.37 ) }
    dend_17 { pt3dadd( -7.74017, 44.8045, 31.9906, 0.59 ) }
    dend_17 { pt3dadd( -8.02199, 45.3902, 32.7335, 0.88 ) }
    dend_17 { pt3dadd( -8.57384, 46.5226, 33.8988, 0.88 ) }
    dend_17 { pt3dadd( -9.07933, 47.4902, 34.7626, 0.59 ) }
    dend_17 { pt3dadd( -9.73541, 48.7123, 35.7096, 0.59 ) }
    dend_17 { pt3dadd( -10.1071, 49.4829, 36.2363, 0.29 ) }
    dend_17 { pt3dadd( -10.4411, 50.3203, 36.7343, 0.29 ) }
    dend_17 { pt3dadd( -10.7481, 51.3002, 37.2393, 0.29 ) }
    dend_17 { pt3dadd( -10.9206, 52.032, 37.568, 0.96 ) }
    dend_17 { pt3dadd( -11.034, 52.7535, 37.8927, 1.84 ) }
    dend_17 { pt3dadd( -11.1509, 53.8659, 38.3768, 0.37 ) }
    dend_17 { pt3dadd( -11.2516, 54.7261, 38.7749, 0.81 ) }
    dend_17 { pt3dadd( -11.4431, 55.7437, 39.3107, 1.55 ) }
    dend_17 { pt3dadd( -11.7153, 56.7616, 39.9477, 0.22 ) }
    dend_17 { pt3dadd( -11.9604, 57.5261, 40.4602, 0.22 ) }
    dend_17 { pt3dadd( -12.1527, 58.067, 40.8602, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_17 { pt3dadd( -12.3385, 58.7526, 41.3627, 0.29 ) }
    dend_17 { pt3dadd( -12.4346, 59.4184, 41.8073, 0.29 ) }
    dend_17 { pt3dadd( -12.4608, 60.1962, 42.2878, 0.59 ) }
    dend_17 { pt3dadd( -12.401, 61.3452, 42.9901, 1.77 ) }
    dend_17 { pt3dadd( -12.3172, 62.1624, 43.4829, 2.14 ) }
    dend_17 { pt3dadd( -12.0609, 63.686, 44.3869, 0.29 ) }
    dend_17 { pt3dadd( -11.8978, 64.4099, 44.8007, 0.29 ) }
    dend_17 { pt3dadd( -11.7349, 65.1128, 45.1901, 0.29 ) }
    dend_17 { pt3dadd( -11.6313, 65.5108, 45.4128, 0.29 ) }
    dend_17 { pt3dadd( -11.4813, 66.0637, 45.7589, 0.88 ) }
    dend_17 { pt3dadd( -11.2871, 66.7469, 46.2375, 1.62 ) }
    dend_17 { pt3dadd( -11.1071, 67.3037, 46.6853, 1.62 ) }
    dend_17 { pt3dadd( -10.8303, 68.0265, 47.2558, 2.21 ) }
    dend_17 { pt3dadd( -10.0366, 69.7446, 48.5671, 0.22 ) }
    dend_17 { pt3dadd( -9.67527, 70.441, 49.0796, 0.22 ) }
    dend_17 { pt3dadd( -9.41347, 70.9062, 49.4211, 0.22 ) }
    dend_17 { pt3dadd( -9.13217, 71.3754, 49.7557, 0.22 ) }
    dend_17 { pt3dadd( -8.57602, 72.2456, 50.3443, 0.44 ) }
    dend_17 { pt3dadd( -7.88513, 73.2033, 50.9511, 0.66 ) }
    dend_17 { pt3dadd( -7.77495, 73.3601, 51.0376, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -15.4871, 22.8698, 9.49529, 0.96 ) }
    dend_14 { pt3dadd( -15.2456, 21.8238, 10.1754, 0.96 ) }
    dend_14 { pt3dadd( -14.9671, 20.7311, 10.8717, 0.37 ) }
    dend_14 { pt3dadd( -14.9268, 20.3275, 11.0656, 0.29 ) }
    dend_14 { pt3dadd( -14.9331, 19.5797, 11.3232, 0.22 ) }
    dend_14 { pt3dadd( -14.9994, 19.0795, 11.4653, 0.22 ) }
    dend_14 { pt3dadd( -15.1669, 18.3023, 11.6607, 0.52 ) }
    dend_14 { pt3dadd( -15.4493, 17.3642, 11.8663, 0.74 ) }
    dend_14 { pt3dadd( -16.0081, 16.0815, 12.0571, 0.52 ) }
    dend_14 { pt3dadd( -16.4579, 15.1542, 12.1634, 1.11 ) }
    dend_14 { pt3dadd( -17.1595, 13.7381, 12.3188, 1.62 ) }
    dend_14 { pt3dadd( -17.7704, 12.48, 12.4471, 1.33 ) }
    dend_14 { pt3dadd( -18.5893, 10.7005, 12.6335, 1.11 ) }
    dend_14 { pt3dadd( -19.6635, 8.26077, 12.8994, 0.44 ) }
    dend_14 { pt3dadd( -20.2058, 6.96952, 13.0376, 0.44 ) }
    dend_14 { pt3dadd( -20.762, 5.63123, 13.1626, 0.44 ) }
    dend_14 { pt3dadd( -21.201, 4.56358, 13.2305, 0.96 ) }
    dend_14 { pt3dadd( -21.8398, 3.02343, 13.3118, 1.47 ) }
    dend_14 { pt3dadd( -22.6194, 1.24765, 13.3731, 1.7 ) }
    dend_14 { pt3dadd( -23.5708, -0.712372, 13.4349, 1.7 ) }
    dend_14 { pt3dadd( -24.5721, -2.42884, 13.4807, 1.7 ) }
    dend_14 { pt3dadd( -25.6452, -4.00665, 13.5112, 0.59 ) }
    dend_14 { pt3dadd( -26.7448, -5.45008, 13.5569, 0.44 ) }
    dend_14 { pt3dadd( -27.8051, -6.72494, 13.6296, 0.44 ) }
    dend_14 { pt3dadd( -28.4573, -7.46216, 13.7225, 0.44 ) }
    dend_14 { pt3dadd( -29.4641, -8.56695, 13.9967, 0.44 ) }
    dend_14 { pt3dadd( -29.801, -8.95752, 14.1588, 0.44 ) }
    dend_14 { pt3dadd( -30.1235, -9.475, 14.4276, 0.44 ) }
    dend_14 { pt3dadd( -30.4587, -10.3048, 14.8591, 0.44 ) }
    dend_14 { pt3dadd( -30.653, -10.8583, 15.1275, 0.88 ) }
    dend_14 { pt3dadd( -31.147, -12.1636, 15.6657, 1.4 ) }
    dend_14 { pt3dadd( -31.5573, -13.0531, 15.981, 1.4 ) }
    dend_14 { pt3dadd( -32.3805, -14.4596, 16.401, 0.66 ) }
    dend_14 { pt3dadd( -33.0827, -15.4821, 16.6494, 0.22 ) }
    dend_14 { pt3dadd( -33.8288, -16.4737, 16.8795, 0.22 ) }
    dend_14 { pt3dadd( -34.2678, -17.0418, 17.021, 1.03 ) }
    dend_14 { pt3dadd( -35.0168, -18.0184, 17.2848, 2.36 ) }
    dend_14 { pt3dadd( -35.8479, -19.1666, 17.6403, 2.65 ) }
    dend_14 { pt3dadd( -37.2244, -21.2362, 18.4123, 0.81 ) }
    dend_14 { pt3dadd( -37.8016, -22.418, 18.8936, 0.22 ) }
    dend_14 { pt3dadd( -38.0031, -23.0053, 19.1513, 0.22 ) }
    dend_14 { pt3dadd( -38.1465, -23.5726, 19.4186, 0.66 ) }
    dend_14 { pt3dadd( -38.2686, -24.2793, 19.7777, 0.66 ) }
    dend_14 { pt3dadd( -38.3183, -24.7232, 20.0275, 0.66 ) }
    dend_14 { pt3dadd( -38.3953, -25.9559, 20.8123, 0.22 ) }
    dend_14 { pt3dadd( -38.4868, -26.5809, 21.1938, 0.22 ) }
    dend_14 { pt3dadd( -38.5739, -26.865, 21.367, 0.22 ) }
    dend_14 { pt3dadd( -38.8069, -27.3307, 21.6477, 0.22 ) }
    dend_14 { pt3dadd( -39.2128, -27.953, 21.9909, 0.22 ) }
    dend_14 { pt3dadd( -39.4209, -28.2108, 22.1121, 0.22 ) }
    dend_14 { pt3dadd( -39.9917, -28.8083, 22.3333, 0.22 ) }
    dend_14 { pt3dadd( -40.328, -29.1564, 22.4118, 0.29 ) }
    dend_14 { pt3dadd( -41.1763, -30.055, 22.5225, 0.29 ) }
    dend_14 { pt3dadd( -41.5805, -30.5316, 22.5587, 0.59 ) }
    dend_14 { pt3dadd( -42.2527, -31.4252, 22.6079, 0.88 ) }
    dend_14 { pt3dadd( -42.8435, -32.3272, 22.6758, 0.66 ) }
    dend_14 { pt3dadd( -43.4547, -33.5184, 22.8164, 0.22 ) }
    dend_14 { pt3dadd( -43.6745, -34.0996, 22.9262, 0.22 ) }
    dend_14 { pt3dadd( -44.1117, -35.5529, 23.3078, 0.59 ) }
    dend_14 { pt3dadd( -44.4184, -36.7849, 23.7016, 1.03 ) }
    dend_14 { pt3dadd( -44.6949, -38.0108, 24.1287, 1.62 ) }
    dend_14 { pt3dadd( -45.0849, -39.6587, 24.7449, 0.59 ) }
    dend_14 { pt3dadd( -45.5385, -41.3398, 25.3526, 0.22 ) }
    dend_14 { pt3dadd( -45.929, -42.4992, 25.754, 0.52 ) }
    dend_14 { pt3dadd( -46.2304, -43.1768, 25.9828, 1.25 ) }
    dend_14 { pt3dadd( -46.8558, -44.2723, 26.355, 2.14 ) }
    dend_14 { pt3dadd( -47.5549, -45.2493, 26.6718, 1.33 ) }
    dend_14 { pt3dadd( -48.6489, -46.5056, 27.1062, 0.52 ) }
    dend_14 { pt3dadd( -49.2934, -47.2063, 27.3764, 0.22 ) }
    dend_14 { pt3dadd( -49.9914, -48.0003, 27.7306, 0.44 ) }
    dend_14 { pt3dadd( -50.5266, -48.6435, 28.0719, 0.44 ) }
    dend_14 { pt3dadd( -50.9991, -49.324, 28.4547, 0.22 ) }
    dend_14 { pt3dadd( -51.374, -49.9992, 28.7619, 0.22 ) }
    dend_14 { pt3dadd( -51.7913, -50.8468, 29.0858, 0.22 ) }
    dend_14 { pt3dadd( -52.0609, -51.4475, 29.2511, 0.52 ) }
    dend_14 { pt3dadd( -52.4299, -52.2918, 29.4091, 0.74 ) }
    dend_14 { pt3dadd( -53.1305, -53.6379, 29.6117, 0.81 ) }
    dend_14 { pt3dadd( -53.9501, -54.7729, 29.8331, 0.22 ) }
    dend_14 { pt3dadd( -54.648, -55.4109, 30.0111, 0.22 ) }
    dend_14 { pt3dadd( -55.0193, -55.6614, 30.1239, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( -55.604, -56.0375, 30.3433, 0.66 ) }
    dend_14 { pt3dadd( -56.6146, -56.683, 30.8147, 1.33 ) }
    dend_14 { pt3dadd( -57.4505, -57.2617, 31.28, 1.55 ) }
    dend_14 { pt3dadd( -58.2763, -57.9613, 31.7984, 0.88 ) }
    dend_14 { pt3dadd( -59.2468, -58.9275, 32.3487, 0.15 ) }
    dend_14 { pt3dadd( -60.2068, -59.9381, 32.8345, 0.29 ) }
    dend_14 { pt3dadd( -60.7103, -60.5008, 33.0667, 0.88 ) }
    dend_14 { pt3dadd( -61.2155, -61.0849, 33.2405, 1.25 ) }
    dend_14 { pt3dadd( -61.7565, -61.7115, 33.3926, 1.33 ) }
    dend_14 { pt3dadd( -63.1998, -63.35, 33.7636, 0.22 ) }
    dend_14 { pt3dadd( -63.8363, -64.0763, 33.9245, 0.74 ) }
    dend_14 { pt3dadd( -64.4415, -64.7712, 34.0822, 1.25 ) }
    dend_14 { pt3dadd( -65.4041, -65.9878, 34.3559, 0.44 ) }
    dend_14 { pt3dadd( -65.9606, -66.9342, 34.6063, 0.22 ) }
    dend_14 { pt3dadd( -66.1893, -67.5169, 34.7701, 0.22 ) }
    dend_14 { pt3dadd( -66.3726, -68.3543, 34.9893, 0.96 ) }
    dend_14 { pt3dadd( -66.4531, -68.8941, 35.1303, 1.55 ) }
    dend_14 { pt3dadd( -66.5785, -69.9933, 35.4227, 1.33 ) }
    dend_14 { pt3dadd( -66.8459, -72.5048, 36.137, 0.15 ) }
    dend_14 { pt3dadd( -66.9313, -73.1073, 36.2999, 0.37 ) }
    dend_14 { pt3dadd( -67.1561, -74.2238, 36.6035, 0.15 ) }
    dend_14 { pt3dadd( -67.4333, -75.1575, 36.8826, 0.15 ) }
    dend_14 { pt3dadd( -67.7667, -76.0013, 37.1613, 0.52 ) }
    dend_14 { pt3dadd( -68.2081, -76.8952, 37.4778, 1.18 ) }
    dend_14 { pt3dadd( -68.8474, -77.9619, 37.8818, 2.06 ) }
    dend_14 { pt3dadd( -69.7054, -79.3174, 38.4267, 0.96 ) }
    dend_14 { pt3dadd( -70.6205, -80.7076, 39.0094, 0.22 ) }
    dend_14 { pt3dadd( -71.2941, -81.6908, 39.4143, 0.22 ) }
    dend_14 { pt3dadd( -72.1126, -82.8467, 39.9011, 0.22 ) }
    dend_14 { pt3dadd( -72.6444, -83.5889, 40.2183, 0.22 ) }
    dend_14 { pt3dadd( -73.4501, -84.6927, 40.7275, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 31/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 133.966, -96.4962, -72.6677, 0.15 ) }
    dend_5 { pt3dadd( 140.545, -103.319, -76.8241, 0.15 ) }
    dend_5 { pt3dadd( 146.111, -110.918, -80.9608, 0.15 ) }
    dend_5 { pt3dadd( 152.01, -118.054, -85.4923, 0.15 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 35/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 133.966, -96.4962, -72.6677, 0.59 ) }
    dend_4 { pt3dadd( 139.8, -102.128, -75.235, 0.15 ) }
    dend_4 { pt3dadd( 145.498, -108.227, -76.8715, 0.15 ) }
    dend_4 { pt3dadd( 149.529, -115.204, -79.2507, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 39/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 52.477, 78.0237, 11.5189, 0.15 ) }
    dend_34 { pt3dadd( 59.9604, 84.1382, 11.6279, 0.15 ) }
    dend_34 { pt3dadd( 66.5608, 90.8471, 9.78162, 0.15 ) }
    dend_34 { pt3dadd( 72.2399, 97.487, 5.89234, 0.15 ) }
    dend_34 { pt3dadd( 76.8509, 104.349, 1.14426, 0.15 ) }
    dend_34 { pt3dadd( 81.0188, 110.408, -4.99426, 0.15 ) }
    dend_34 { pt3dadd( 86.2796, 116.381, -10.3513, 0.15 ) }
    dend_34 { pt3dadd( 91.6133, 122.702, -15.1762, 0.15 ) }
    dend_34 { pt3dadd( 96.9175, 128.959, -20.1215, 0.15 ) }
    dend_34 { pt3dadd( 101.524, 136.294, -24.0426, 0.15 ) }
    dend_34 { pt3dadd( 103.83, 144.491, -28.1149, 0.15 ) }
    dend_34 { pt3dadd( 105.855, 153.535, -29.7434, 0.15 ) }
    dend_34 { pt3dadd( 108.238, 162.651, -30.1118, 0.15 ) }
    dend_34 { pt3dadd( 108.578, 172.063, -30.2445, 0.15 ) }
    dend_34 { pt3dadd( 109.074, 181.454, -29.382, 0.15 ) }
    dend_34 { pt3dadd( 110.646, 190.713, -28.2981, 0.15 ) }
    dend_34 { pt3dadd( 111.597, 200.029, -29.1928, 0.15 ) }
    dend_34 { pt3dadd( 113.065, 209.156, -30.9186, 0.15 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 57/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 52.477, 78.0237, 11.5189, 0.59 ) }
    dend_33 { pt3dadd( 54.6132, 84.9696, 15.8598, 0.15 ) }
    dend_33 { pt3dadd( 55.9714, 92.233, 19.9351, 0.15 ) }
    dend_33 { pt3dadd( 56.433, 98.8235, 25.2993, 0.15 ) }
    dend_33 { pt3dadd( 55.711, 105.965, 29.7802, 0.15 ) }
    dend_33 { pt3dadd( 54.7883, 112.427, 35.263, 0.15 ) }
    dend_33 { pt3dadd( 53.7035, 119.256, 40.1937, 0.15 ) }
    dend_33 { pt3dadd( 52.1052, 126.349, 44.5338, 0.15 ) }
    dend_33 { pt3dadd( 52.3296, 133.042, 49.7711, 0.15 ) }
    dend_33 { pt3dadd( 52.3601, 139.714, 55.0461, 0.15 ) }
    dend_33 { pt3dadd( 52.3631, 146.92, 59.4645, 0.15 ) }
    dend_33 { pt3dadd( 52.0908, 154.625, 62.7901, 0.15 ) }
    dend_33 { pt3dadd( 51.9002, 161.531, 67.7144, 0.15 ) }
    dend_33 { pt3dadd( 51.5454, 167.072, 74.2685, 0.15 ) }
    dend_33 { pt3dadd( 51.7031, 172.065, 81.2915, 0.15 ) }
    dend_33 { pt3dadd( 52.3183, 177.226, 88.1547, 0.15 ) }
    dend_33 { pt3dadd( 54.2793, 183.142, 94.0143, 0.15 ) }
    dend_33 { pt3dadd( 57.5464, 188.301, 100.064, 0.15 ) }
    dend_33 { pt3dadd( 60.3954, 194.108, 105.664, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 64.0918, 83.0636, 25.1533, 0.66 ) }
    dend_27 { pt3dadd( 65.0561, 84.8792, 25.2537, 0.66 ) }
    dend_27 { pt3dadd( 65.614, 85.8138, 25.3049, 0.66 ) }
    dend_27 { pt3dadd( 66.3033, 86.9342, 25.3644, 0.44 ) }
    dend_27 { pt3dadd( 66.7965, 87.7498, 25.425, 0.37 ) }
    dend_27 { pt3dadd( 67.4241, 88.8368, 25.5359, 0.37 ) }
    dend_27 { pt3dadd( 67.9532, 89.8114, 25.678, 0.37 ) }
    dend_27 { pt3dadd( 68.2112, 90.2779, 25.7736, 0.59 ) }
    dend_27 { pt3dadd( 68.6423, 91.1442, 25.9631, 1.11 ) }
    dend_27 { pt3dadd( 69.2188, 92.5633, 26.2573, 0.37 ) }
    dend_27 { pt3dadd( 69.5488, 93.7122, 26.5458, 0.59 ) }
    dend_27 { pt3dadd( 69.822, 95.1345, 26.9548, 0.37 ) }
    dend_27 { pt3dadd( 70.0338, 96.5443, 27.418, 0.44 ) }
    dend_27 { pt3dadd( 70.1526, 97.3141, 27.6979, 0.22 ) }
    dend_27 { pt3dadd( 70.289, 98.0013, 27.98, 0.22 ) }
    dend_27 { pt3dadd( 70.764, 99.7934, 28.7899, 0.22 ) }
    dend_27 { pt3dadd( 71.1175, 100.73, 29.2463, 0.22 ) }
    dend_27 { pt3dadd( 71.3712, 101.203, 29.4942, 0.44 ) }
    dend_27 { pt3dadd( 71.872, 101.891, 29.8762, 0.66 ) }
    dend_27 { pt3dadd( 72.7485, 102.833, 30.4027, 0.22 ) }
    dend_27 { pt3dadd( 73.1671, 103.207, 30.606, 0.22 ) }
    dend_27 { pt3dadd( 73.7413, 103.655, 30.8424, 0.66 ) }
    dend_27 { pt3dadd( 74.2273, 104.023, 31.0557, 1.03 ) }
    dend_27 { pt3dadd( 75.3303, 104.87, 31.5547, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_27 { pt3dadd( 76.2638, 105.627, 31.9831, 0.66 ) }
    dend_27 { pt3dadd( 76.8245, 106.113, 32.2539, 0.81 ) }
    dend_27 { pt3dadd( 78.0795, 107.232, 32.8806, 1.03 ) }
    dend_27 { pt3dadd( 79.0309, 108.091, 33.3698, 0.74 ) }
    dend_27 { pt3dadd( 79.963, 108.933, 33.8689, 0.37 ) }
    dend_27 { pt3dadd( 80.6455, 109.515, 34.2428, 0.37 ) }
    dend_27 { pt3dadd( 81.2249, 109.997, 34.5598, 0.29 ) }
    dend_27 { pt3dadd( 81.8322, 110.494, 34.8872, 0.29 ) }
    dend_27 { pt3dadd( 82.3433, 110.906, 35.1498, 0.66 ) }
    dend_27 { pt3dadd( 83.0896, 111.501, 35.5499, 1.25 ) }
    dend_27 { pt3dadd( 84.4227, 112.539, 36.2676, 0.29 ) }
    dend_27 { pt3dadd( 84.8319, 112.856, 36.4814, 0.29 ) }
    dend_27 { pt3dadd( 85.6935, 113.554, 36.9094, 0.88 ) }
    dend_27 { pt3dadd( 86.5199, 114.276, 37.3076, 0.52 ) }
    dend_27 { pt3dadd( 87.1956, 114.903, 37.6206, 1.11 ) }
    dend_27 { pt3dadd( 88.1311, 115.815, 38.0342, 0.66 ) }
    dend_27 { pt3dadd( 89.0058, 116.705, 38.4336, 0.29 ) }
    dend_27 { pt3dadd( 89.6399, 117.327, 38.7282, 0.59 ) }
    dend_27 { pt3dadd( 90.7859, 118.366, 39.2645, 0.22 ) }
    dend_27 { pt3dadd( 91.3252, 118.809, 39.5204, 0.59 ) }
    dend_27 { pt3dadd( 92.0804, 119.38, 39.8761, 1.18 ) }
    dend_27 { pt3dadd( 93.0202, 120.032, 40.3363, 0.22 ) }
    dend_27 { pt3dadd( 93.6503, 120.443, 40.6509, 0.22 ) }
    dend_27 { pt3dadd( 94.1805, 120.784, 40.915, 0.22 ) }
    dend_27 { pt3dadd( 94.7462, 121.178, 41.2148, 0.22 ) }
    dend_27 { pt3dadd( 95.1212, 121.499, 41.4164, 0.22 ) }
    dend_27 { pt3dadd( 95.5441, 121.964, 41.6394, 0.37 ) }
    dend_27 { pt3dadd( 96.156, 122.817, 41.9631, 0.37 ) }
    dend_27 { pt3dadd( 96.544, 123.455, 42.182, 0.22 ) }
    dend_27 { pt3dadd( 96.9676, 124.242, 42.4463, 0.52 ) }
    dend_27 { pt3dadd( 97.5084, 125.328, 42.8375, 0.52 ) }
    dend_27 { pt3dadd( 97.8684, 126.036, 43.1246, 0.96 ) }
    dend_27 { pt3dadd( 98.2375, 126.697, 43.4356, 1.77 ) }
    dend_27 { pt3dadd( 98.6621, 127.38, 43.7998, 1.77 ) }
    dend_27 { pt3dadd( 99.2792, 128.311, 44.3182, 0.22 ) }
    dend_27 { pt3dadd( 99.7333, 128.96, 44.6808, 0.22 ) }
    dend_27 { pt3dadd( 100.179, 129.541, 45.035, 0.22 ) }
    dend_27 { pt3dadd( 100.643, 130.111, 45.3845, 0.22 ) }
    dend_27 { pt3dadd( 101.091, 130.627, 45.6818, 0.22 ) }
    dend_27 { pt3dadd( 101.635, 131.269, 46.0025, 0.22 ) }
    dend_27 { pt3dadd( 102.227, 131.978, 46.2924, 0.22 ) }
    dend_27 { pt3dadd( 102.533, 132.366, 46.4302, 0.66 ) }
    dend_27 { pt3dadd( 102.984, 132.958, 46.633, 0.81 ) }
    dend_27 { pt3dadd( 103.638, 133.84, 46.9519, 0.22 ) }
    dend_27 { pt3dadd( 104.149, 134.516, 47.2309, 0.22 ) }
    dend_27 { pt3dadd( 104.569, 135.112, 47.4821, 0.74 ) }
    dend_27 { pt3dadd( 105.053, 135.899, 47.7884, 0.88 ) }
    dend_27 { pt3dadd( 105.318, 136.401, 47.9704, 1.11 ) }
    dend_27 { pt3dadd( 105.873, 137.657, 48.4161, 1.11 ) }
    dend_27 { pt3dadd( 106.3, 138.842, 48.8144, 0.37 ) }
    dend_27 { pt3dadd( 106.72, 140.183, 49.2741, 0.22 ) }
    dend_27 { pt3dadd( 106.949, 141.028, 49.5773, 0.29 ) }
    dend_27 { pt3dadd( 107.138, 141.8, 49.8781, 0.29 ) }
    dend_27 { pt3dadd( 107.33, 142.575, 50.2214, 0.37 ) }
    dend_27 { pt3dadd( 107.559, 143.266, 50.6181, 0.37 ) }
    dend_27 { pt3dadd( 107.789, 143.705, 50.983, 0.22 ) }
    dend_27 { pt3dadd( 108.12, 144.107, 51.4472, 0.22 ) }
    dend_27 { pt3dadd( 108.641, 144.603, 52.1302, 0.22 ) }
    dend_27 { pt3dadd( 109.175, 145.033, 52.7772, 0.29 ) }
    dend_27 { pt3dadd( 109.984, 145.641, 53.7224, 0.22 ) }
    dend_27 { pt3dadd( 110.471, 146.021, 54.279, 1.4 ) }
    dend_27 { pt3dadd( 110.981, 146.478, 54.8663, 2.21 ) }
    dend_27 { pt3dadd( 111.318, 146.873, 55.2918, 1.7 ) }
    dend_27 { pt3dadd( 111.704, 147.491, 55.8856, 0.96 ) }
    dend_27 { pt3dadd( 112.083, 148.265, 56.633, 0.96 ) }
    dend_27 { pt3dadd( 112.277, 148.713, 57.0947, 1.47 ) }
    dend_27 { pt3dadd( 112.481, 149.167, 57.6017, 1.47 ) }
    dend_27 { pt3dadd( 112.896, 150.022, 58.6197, 0.22 ) }
    dend_27 { pt3dadd( 113.18, 150.549, 59.2523, 0.22 ) }
    dend_27 { pt3dadd( 113.499, 151.116, 59.8909, 0.22 ) }
    dend_27 { pt3dadd( 113.849, 151.684, 60.472, 0.22 ) }
    dend_27 { pt3dadd( 114.176, 152.164, 60.9341, 0.22 ) }
    dend_27 { pt3dadd( 114.453, 152.536, 61.238, 0.88 ) }
    dend_27 { pt3dadd( 114.912, 153.111, 61.6406, 1.99 ) }
    dend_27 { pt3dadd( 115.607, 153.953, 62.1441, 1.55 ) }
    dend_27 { pt3dadd( 116.459, 155.004, 62.6715, 0.22 ) }
    dend_27 { pt3dadd( 117.09, 155.788, 63.0385, 0.22 ) }
    dend_27 { pt3dadd( 117.947, 156.798, 63.5153, 0.29 ) }
    dend_27 { pt3dadd( 118.487, 157.401, 63.8035, 0.59 ) }
    dend_27 { pt3dadd( 119.372, 158.267, 64.2132, 0.96 ) }
    dend_27 { pt3dadd( 120.447, 159.183, 64.648, 0.15 ) }
    dend_27 { pt3dadd( 121.37, 159.893, 65.004, 1.18 ) }
    dend_27 { pt3dadd( 122.566, 160.761, 65.4575, 1.18 ) }
    dend_27 { pt3dadd( 123.586, 161.467, 65.8479, 1.4 ) }
    dend_27 { pt3dadd( 125.063, 162.446, 66.4146, 0.22 ) }
    dend_27 { pt3dadd( 125.736, 162.893, 66.6693, 0.37 ) }
    dend_27 { pt3dadd( 126.439, 163.387, 66.9471, 1.03 ) }
    dend_27 { pt3dadd( 126.751, 163.634, 67.0798, 0.88 ) }
    dend_27 { pt3dadd( 127.167, 164.007, 67.2926, 0.74 ) }
    dend_27 { pt3dadd( 127.726, 164.546, 67.6325, 0.96 ) }
    dend_27 { pt3dadd( 128.441, 165.395, 68.1697, 0.22 ) }
    dend_27 { pt3dadd( 129.082, 166.201, 68.6464, 0.96 ) }
    dend_27 { pt3dadd( 129.435, 166.62, 68.883, 0.74 ) }
    dend_27 { pt3dadd( 130.055, 167.311, 69.3037, 0.22 ) }
    dend_27 { pt3dadd( 130.674, 167.974, 69.7262, 0.29 ) }
    dend_27 { pt3dadd( 131.598, 168.934, 70.3504, 0.29 ) }
    dend_27 { pt3dadd( 132.253, 169.568, 70.7652, 0.29 ) }
    dend_27 { pt3dadd( 133.305, 170.541, 71.3655, 0.22 ) }
    dend_27 { pt3dadd( 133.839, 171.027, 71.6483, 0.66 ) }
    dend_27 { pt3dadd( 134.282, 171.455, 71.8743, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_27 { pt3dadd( 134.568, 171.721, 72.0113, 1.55 ) }
    dend_27 { pt3dadd( 135.655, 172.672, 72.4888, 0.15 ) }
    dend_27 { pt3dadd( 136.51, 173.456, 72.8492, 0.15 ) }
    dend_27 { pt3dadd( 137.242, 174.17, 73.1358, 0.15 ) }
    dend_27 { pt3dadd( 137.879, 174.803, 73.3361, 0.15 ) }
    dend_27 { pt3dadd( 138.465, 175.411, 73.5037, 0.15 ) }
    dend_27 { pt3dadd( 138.913, 175.928, 73.6401, 0.88 ) }
    dend_27 { pt3dadd( 139.457, 176.617, 73.8123, 1.18 ) }
    dend_27 { pt3dadd( 140.096, 177.507, 74.0207, 1.18 ) }
    dend_27 { pt3dadd( 141.011, 178.8, 74.3234, 0.22 ) }
    dend_27 { pt3dadd( 141.983, 180.136, 74.6563, 0.22 ) }
    dend_27 { pt3dadd( 142.579, 181.001, 74.864, 1.18 ) }
    dend_27 { pt3dadd( 142.862, 181.42, 74.9683, 1.92 ) }
    dend_27 { pt3dadd( 143.318, 182.123, 75.1544, 1.92 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 64.0918, 83.0636, 25.1533, 0.44 ) }
    dend_26 { pt3dadd( 65.0343, 83.4408, 25.6649, 0.44 ) }
    dend_26 { pt3dadd( 66.0316, 83.8525, 26.2218, 0.44 ) }
    dend_26 { pt3dadd( 66.5232, 84.0279, 26.5154, 0.96 ) }
    dend_26 { pt3dadd( 67.6112, 84.3484, 27.2076, 1.7 ) }
    dend_26 { pt3dadd( 68.5732, 84.6067, 27.8316, 1.99 ) }
    dend_26 { pt3dadd( 70.026, 84.9624, 28.7623, 1.11 ) }
    dend_26 { pt3dadd( 71.0225, 85.1697, 29.3639, 0.37 ) }
    dend_26 { pt3dadd( 71.9738, 85.3401, 29.8677, 0.37 ) }
    dend_26 { pt3dadd( 73.1747, 85.5374, 30.4292, 0.37 ) }
    dend_26 { pt3dadd( 73.962, 85.6669, 30.7228, 0.37 ) }
    dend_26 { pt3dadd( 74.7373, 85.7966, 30.9538, 0.44 ) }
    dend_26 { pt3dadd( 75.8999, 85.9809, 31.2245, 0.96 ) }
    dend_26 { pt3dadd( 77.4002, 86.2111, 31.4945, 1.62 ) }
    dend_26 { pt3dadd( 78.8917, 86.4705, 31.769, 1.18 ) }
    dend_26 { pt3dadd( 80.8442, 86.8526, 32.1878, 0.29 ) }
    dend_26 { pt3dadd( 81.8276, 87.049, 32.4602, 0.44 ) }
    dend_26 { pt3dadd( 82.5366, 87.1948, 32.7146, 0.59 ) }
    dend_26 { pt3dadd( 83.6067, 87.4093, 33.1821, 0.29 ) }
    dend_26 { pt3dadd( 85.0037, 87.7123, 33.8973, 0.29 ) }
    dend_26 { pt3dadd( 86.5615, 88.1086, 34.785, 0.59 ) }
    dend_26 { pt3dadd( 87.6094, 88.4636, 35.419, 1.03 ) }
    dend_26 { pt3dadd( 88.8544, 89.0029, 36.1791, 1.7 ) }
    dend_26 { pt3dadd( 90.0268, 89.5993, 36.894, 1.7 ) }
    dend_26 { pt3dadd( 91.4333, 90.3452, 37.7543, 0.96 ) }
    dend_26 { pt3dadd( 92.292, 90.7752, 38.2521, 1.33 ) }
    dend_26 { pt3dadd( 93.9127, 91.5639, 39.1783, 1.62 ) }
    dend_26 { pt3dadd( 95.2222, 92.1923, 39.8832, 0.52 ) }
    dend_26 { pt3dadd( 96.2425, 92.6772, 40.4132, 0.22 ) }
    dend_26 { pt3dadd( 97.3442, 93.1987, 40.9651, 0.22 ) }
    dend_26 { pt3dadd( 98.7616, 93.8354, 41.6195, 0.22 ) }
    dend_26 { pt3dadd( 99.8622, 94.3492, 42.0758, 0.74 ) }
    dend_26 { pt3dadd( 100.877, 94.8781, 42.4454, 1.33 ) }
    dend_26 { pt3dadd( 101.785, 95.4566, 42.7215, 1.77 ) }
    dend_26 { pt3dadd( 103.143, 96.4983, 43.0644, 0.44 ) }
    dend_26 { pt3dadd( 104.397, 97.634, 43.3356, 0.22 ) }
    dend_26 { pt3dadd( 105.384, 98.6084, 43.5381, 0.66 ) }
    dend_26 { pt3dadd( 106.16, 99.3564, 43.7021, 0.29 ) }
    dend_26 { pt3dadd( 106.836, 99.9694, 43.8627, 0.29 ) }
    dend_26 { pt3dadd( 107.264, 100.303, 43.9819, 0.22 ) }
    dend_26 { pt3dadd( 107.838, 100.689, 44.1821, 0.22 ) }
    dend_26 { pt3dadd( 108.671, 101.174, 44.5298, 0.52 ) }
    dend_26 { pt3dadd( 109.681, 101.651, 44.9794, 0.88 ) }
    dend_26 { pt3dadd( 110.583, 102.0, 45.365, 0.88 ) }
    dend_26 { pt3dadd( 111.632, 102.381, 45.795, 0.22 ) }
    dend_26 { pt3dadd( 112.563, 102.752, 46.1829, 0.22 ) }
    dend_26 { pt3dadd( 113.024, 102.953, 46.3737, 0.52 ) }
    dend_26 { pt3dadd( 113.843, 103.333, 46.7141, 1.4 ) }
    dend_26 { pt3dadd( 114.956, 103.826, 47.1548, 1.18 ) }
    dend_26 { pt3dadd( 116.689, 104.542, 47.8087, 0.22 ) }
    dend_26 { pt3dadd( 117.974, 105.05, 48.2351, 0.59 ) }
    dend_26 { pt3dadd( 118.93, 105.417, 48.541, 0.22 ) }
    dend_26 { pt3dadd( 120.025, 105.867, 48.8685, 0.88 ) }
    dend_26 { pt3dadd( 121.43, 106.525, 49.2597, 1.55 ) }
    dend_26 { pt3dadd( 121.969, 106.814, 49.3888, 1.55 ) }
    dend_26 { pt3dadd( 123.82, 107.928, 49.7203, 0.88 ) }
    dend_26 { pt3dadd( 124.708, 108.505, 49.8375, 0.44 ) }
    dend_26 { pt3dadd( 125.521, 109.07, 49.9321, 0.22 ) }
    dend_26 { pt3dadd( 126.343, 109.628, 50.0293, 0.22 ) }
    dend_26 { pt3dadd( 127.205, 110.202, 50.1378, 0.37 ) }
    dend_26 { pt3dadd( 128.145, 110.791, 50.2716, 1.11 ) }
    dend_26 { pt3dadd( 129.35, 111.499, 50.4757, 1.18 ) }
    dend_26 { pt3dadd( 130.463, 112.141, 50.6841, 0.29 ) }
    dend_26 { pt3dadd( 131.986, 113.002, 50.9997, 0.22 ) }
    dend_26 { pt3dadd( 132.81, 113.467, 51.1987, 0.22 ) }
    dend_26 { pt3dadd( 133.633, 113.958, 51.4359, 1.11 ) }
    dend_26 { pt3dadd( 134.202, 114.338, 51.6366, 1.18 ) }
    dend_26 { pt3dadd( 135.305, 115.2, 52.1149, 0.29 ) }
    dend_26 { pt3dadd( 136.288, 116.011, 52.6356, 0.29 ) }
    dend_26 { pt3dadd( 136.888, 116.501, 53.0017, 1.03 ) }
    dend_26 { pt3dadd( 137.681, 117.075, 53.5346, 1.92 ) }
    dend_26 { pt3dadd( 138.25, 117.428, 53.8973, 1.92 ) }
    dend_26 { pt3dadd( 140.137, 118.413, 54.9931, 0.15 ) }
    dend_26 { pt3dadd( 141.151, 118.847, 55.5396, 0.15 ) }
    dend_26 { pt3dadd( 141.755, 119.089, 55.8591, 0.37 ) }
    dend_26 { pt3dadd( 142.618, 119.437, 56.3019, 1.11 ) }
    dend_26 { pt3dadd( 144.071, 120.03, 57.0477, 1.47 ) }
    dend_26 { pt3dadd( 145.486, 120.574, 57.7706, 0.44 ) }
    dend_26 { pt3dadd( 146.98, 121.108, 58.5339, 0.22 ) }
    dend_26 { pt3dadd( 148.164, 121.513, 59.1452, 0.74 ) }
    dend_26 { pt3dadd( 149.1, 121.785, 59.6568, 0.88 ) }
    dend_26 { pt3dadd( 150.699, 122.042, 60.5729, 0.22 ) }
    dend_26 { pt3dadd( 151.433, 122.038, 61.0289, 0.22 ) }
    dend_26 { pt3dadd( 152.157, 121.893, 61.4788, 0.44 ) }
    dend_26 { pt3dadd( 152.871, 121.649, 61.9154, 0.81 ) }
    dend_26 { pt3dadd( 153.743, 121.286, 62.4436, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_26 { pt3dadd( 155.162, 120.703, 63.2964, 0.81 ) }
    dend_26 { pt3dadd( 156.307, 120.272, 64.0038, 0.22 ) }
    dend_26 { pt3dadd( 157.125, 120.044, 64.5066, 0.22 ) }
    dend_26 { pt3dadd( 157.816, 119.957, 64.9103, 0.22 ) }
    dend_26 { pt3dadd( 159.17, 120.004, 65.6613, 0.37 ) }
    dend_26 { pt3dadd( 160.679, 120.274, 66.4505, 0.22 ) }
    dend_26 { pt3dadd( 161.242, 120.448, 66.715, 0.96 ) }
    dend_26 { pt3dadd( 162.292, 120.866, 67.1326, 1.84 ) }
    dend_26 { pt3dadd( 164.352, 121.812, 67.794, 0.22 ) }
    dend_26 { pt3dadd( 165.343, 122.33, 68.0302, 0.22 ) }
    dend_26 { pt3dadd( 165.763, 122.597, 68.0932, 0.22 ) }
    dend_26 { pt3dadd( 166.532, 123.205, 68.1572, 0.22 ) }
    dend_26 { pt3dadd( 167.246, 123.864, 68.1938, 0.44 ) }
    dend_26 { pt3dadd( 168.2, 124.819, 68.2623, 1.18 ) }
    dend_26 { pt3dadd( 169.002, 125.626, 68.3655, 1.62 ) }
    dend_26 { pt3dadd( 169.793, 126.376, 68.5263, 1.7 ) }
    dend_26 { pt3dadd( 171.0, 127.554, 68.8672, 1.25 ) }
    dend_26 { pt3dadd( 172.519, 129.01, 69.4086, 0.29 ) }
    dend_26 { pt3dadd( 173.462, 129.813, 69.7995, 1.03 ) }
    dend_26 { pt3dadd( 174.306, 130.428, 70.1602, 1.47 ) }
    dend_26 { pt3dadd( 175.924, 131.433, 70.877, 0.22 ) }
    dend_26 { pt3dadd( 177.241, 132.135, 71.4571, 0.88 ) }
    dend_26 { pt3dadd( 178.245, 132.61, 71.8972, 0.44 ) }
    dend_26 { pt3dadd( 179.743, 133.309, 72.5336, 0.22 ) }
    dend_26 { pt3dadd( 180.818, 133.858, 72.9829, 0.22 ) }
    dend_26 { pt3dadd( 181.652, 134.333, 73.3293, 1.03 ) }
    dend_26 { pt3dadd( 182.629, 134.963, 73.7482, 1.47 ) }
    dend_26 { pt3dadd( 183.462, 135.594, 74.1, 1.25 ) }
    dend_26 { pt3dadd( 184.713, 136.719, 74.5909, 0.52 ) }
    dend_26 { pt3dadd( 186.078, 138.099, 75.0775, 0.37 ) }
    dend_26 { pt3dadd( 186.804, 138.833, 75.3045, 1.03 ) }
    dend_26 { pt3dadd( 187.242, 139.245, 75.4075, 1.4 ) }
    dend_26 { pt3dadd( 188.643, 140.459, 75.6559, 0.96 ) }
    dend_26 { pt3dadd( 189.634, 141.19, 75.7797, 0.81 ) }
    dend_26 { pt3dadd( 191.166, 142.169, 75.9229, 0.22 ) }
    dend_26 { pt3dadd( 192.128, 142.691, 75.9973, 0.22 ) }
    dend_26 { pt3dadd( 192.94, 143.086, 76.0884, 0.74 ) }
    dend_26 { pt3dadd( 193.541, 143.371, 76.1825, 0.81 ) }
    dend_26 { pt3dadd( 194.661, 143.953, 76.4153, 0.22 ) }
    dend_26 { pt3dadd( 195.198, 144.286, 76.5426, 0.22 ) }
    dend_26 { pt3dadd( 195.991, 144.842, 76.7109, 0.88 ) }
    dend_26 { pt3dadd( 197.199, 145.799, 76.9565, 1.33 ) }
    dend_26 { pt3dadd( 198.186, 146.669, 77.1159, 1.7 ) }
    dend_26 { pt3dadd( 199.427, 147.875, 77.2688, 1.47 ) }
    dend_26 { pt3dadd( 200.769, 149.306, 77.3818, 0.22 ) }
    dend_26 { pt3dadd( 201.57, 150.21, 77.427, 0.22 ) }
    dend_26 { pt3dadd( 202.479, 151.345, 77.4269, 0.29 ) }
    dend_26 { pt3dadd( 203.069, 152.232, 77.3761, 0.15 ) }
    dend_26 { pt3dadd( 203.436, 152.921, 77.3091, 0.15 ) }
    dend_26 { pt3dadd( 203.864, 153.964, 77.1771, 0.59 ) }
    dend_26 { pt3dadd( 204.212, 154.981, 77.0367, 0.37 ) }
    dend_26 { pt3dadd( 204.684, 156.349, 76.8162, 0.22 ) }
    dend_26 { pt3dadd( 205.234, 157.795, 76.5387, 0.22 ) }
    dend_26 { pt3dadd( 205.54, 158.501, 76.3977, 1.11 ) }
    dend_26 { pt3dadd( 206.226, 159.931, 76.0717, 0.22 ) }
    dend_26 { pt3dadd( 206.77, 160.985, 75.7932, 0.07 ) }
    dend_26 { pt3dadd( 207.271, 161.99, 75.5181, 0.07 ) }
    dend_26 { pt3dadd( 207.556, 162.609, 75.3718, 0.88 ) }
    dend_26 { pt3dadd( 207.748, 163.129, 75.2764, 1.11 ) }
    dend_26 { pt3dadd( 207.981, 164.24, 75.1369, 0.81 ) }
    dend_26 { pt3dadd( 208.034, 165.444, 75.0812, 0.37 ) }
    dend_26 { pt3dadd( 207.927, 167.165, 75.1352, 0.15 ) }
    dend_26 { pt3dadd( 207.737, 168.605, 75.2904, 0.15 ) }
    dend_26 { pt3dadd( 207.496, 169.853, 75.5098, 0.15 ) }
    dend_26 { pt3dadd( 207.252, 171.02, 75.7824, 0.59 ) }
    dend_26 { pt3dadd( 206.852, 172.695, 76.2622, 0.29 ) }
    dend_26 { pt3dadd( 206.6, 173.59, 76.5661, 0.66 ) }
    dend_26 { pt3dadd( 206.291, 174.622, 76.9747, 1.47 ) }
    dend_26 { pt3dadd( 205.789, 176.23, 77.6629, 0.22 ) }
    dend_26 { pt3dadd( 205.442, 177.384, 78.1705, 0.15 ) }
    dend_26 { pt3dadd( 205.121, 178.621, 78.7411, 0.15 ) }
    dend_26 { pt3dadd( 204.919, 179.49, 79.1506, 0.44 ) }
    dend_26 { pt3dadd( 204.773, 180.295, 79.5135, 0.44 ) }
    dend_26 { pt3dadd( 204.605, 181.521, 80.0608, 0.22 ) }
    dend_26 { pt3dadd( 204.545, 182.067, 80.2846, 0.15 ) }
    dend_26 { pt3dadd( 204.341, 183.208, 80.6814, 0.15 ) }
    dend_26 { pt3dadd( 204.244, 183.653, 80.8047, 0.15 ) }
    dend_26 { pt3dadd( 204.031, 184.319, 80.9257, 0.44 ) }
    dend_26 { pt3dadd( 203.824, 184.83, 80.9925, 0.44 ) }
    dend_26 { pt3dadd( 203.174, 186.319, 81.2047, 0.15 ) }
    dend_26 { pt3dadd( 202.733, 187.373, 81.4052, 0.22 ) }
    dend_26 { pt3dadd( 202.445, 188.088, 81.5613, 0.29 ) }
    dend_26 { pt3dadd( 202.111, 189.265, 81.8887, 0.29 ) }
    dend_26 { pt3dadd( 201.989, 190.19, 82.1827, 0.74 ) }
    dend_26 { pt3dadd( 202.022, 191.3, 82.5772, 0.66 ) }
    dend_26 { pt3dadd( 202.195, 192.284, 82.9491, 1.55 ) }
    dend_26 { pt3dadd( 202.344, 192.818, 83.1425, 1.55 ) }
    dend_26 { pt3dadd( 202.976, 194.471, 83.6975, 0.15 ) }
    dend_26 { pt3dadd( 203.529, 195.647, 84.0762, 0.22 ) }
    dend_26 { pt3dadd( 204.106, 196.763, 84.4133, 0.22 ) }
    dend_26 { pt3dadd( 204.499, 197.463, 84.6111, 0.22 ) }
    dend_26 { pt3dadd( 205.075, 198.396, 84.8711, 0.37 ) }
    dend_26 { pt3dadd( 206.267, 200.189, 85.3726, 0.22 ) }
    dend_26 { pt3dadd( 207.312, 201.773, 85.8199, 0.15 ) }
    dend_26 { pt3dadd( 207.77, 202.514, 86.0452, 1.18 ) }
    dend_26 { pt3dadd( 208.282, 203.436, 86.3331, 2.21 ) }
    dend_26 { pt3dadd( 208.454, 203.782, 86.4419, 2.21 ) }
    dend_26 { pt3dadd( 209.257, 205.784, 87.0463, 0.22 ) }
    dend_26 { pt3dadd( 209.681, 207.33, 87.4572, 0.22 ) }
    dend_26 { pt3dadd( 210.004, 209.037, 87.8217, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_26 { pt3dadd( 210.084, 209.613, 87.9248, 0.66 ) }
    dend_26 { pt3dadd( 210.13, 210.037, 87.9807, 1.25 ) }
    dend_26 { pt3dadd( 210.277, 211.464, 88.1012, 1.62 ) }
    dend_26 { pt3dadd( 210.441, 213.202, 88.1454, 0.22 ) }
    dend_26 { pt3dadd( 210.676, 214.965, 88.0731, 0.22 ) }
    dend_26 { pt3dadd( 210.781, 215.647, 88.0072, 0.37 ) }
    dend_26 { pt3dadd( 210.966, 216.664, 87.8892, 0.88 ) }
    dend_26 { pt3dadd( 211.11, 217.448, 87.786, 0.88 ) }
    dend_26 { pt3dadd( 211.299, 218.573, 87.583, 0.22 ) }
    dend_26 { pt3dadd( 211.442, 219.859, 87.2988, 0.15 ) }
    dend_26 { pt3dadd( 211.479, 220.872, 87.0721, 0.15 ) }
    dend_26 { pt3dadd( 211.501, 221.362, 86.8844, 0.52 ) }
    dend_26 { pt3dadd( 211.558, 222.401, 86.397, 0.88 ) }
    dend_26 { pt3dadd( 211.634, 223.596, 85.7787, 0.22 ) }
    dend_26 { pt3dadd( 211.716, 224.425, 85.3063, 0.22 ) }
    dend_26 { pt3dadd( 211.896, 226.43, 84.1385, 0.15 ) }
    dend_26 { pt3dadd( 212.273, 229.86, 82.2444, 0.22 ) }
    dend_26 { pt3dadd( 212.42, 230.932, 81.6917, 0.44 ) }
    dend_26 { pt3dadd( 212.619, 232.069, 81.1761, 0.22 ) }
    dend_26 { pt3dadd( 212.87, 233.287, 80.7216, 0.29 ) }
    dend_26 { pt3dadd( 213.088, 234.272, 80.4356, 0.22 ) }
    dend_26 { pt3dadd( 213.449, 235.971, 80.1127, 0.15 ) }
    dend_26 { pt3dadd( 213.57, 236.745, 80.1111, 0.15 ) }
    dend_26 { pt3dadd( 213.794, 238.115, 80.1272, 0.15 ) }
    dend_26 { pt3dadd( 213.927, 238.852, 80.1612, 0.29 ) }
    dend_26 { pt3dadd( 214.065, 239.581, 80.2423, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 26/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -7.77495, 73.3601, 51.0376, 0.07 ) }
    dend_19 { pt3dadd( -8.05274, 74.1476, 51.0045, 0.07 ) }
    dend_19 { pt3dadd( -8.2828, 74.887, 51.0145, 0.07 ) }
    dend_19 { pt3dadd( -8.62748, 76.3151, 51.128, 0.07 ) }
    dend_19 { pt3dadd( -8.85603, 77.5202, 51.2284, 0.29 ) }
    dend_19 { pt3dadd( -8.98933, 78.4705, 51.3144, 0.07 ) }
    dend_19 { pt3dadd( -9.12056, 80.0138, 51.4507, 0.07 ) }
    dend_19 { pt3dadd( -9.12964, 80.7812, 51.5335, 0.52 ) }
    dend_19 { pt3dadd( -9.07381, 82.7152, 51.7705, 1.03 ) }
    dend_19 { pt3dadd( -8.96788, 84.8187, 52.0804, 0.15 ) }
    dend_19 { pt3dadd( -8.9308, 85.6736, 52.2116, 0.15 ) }
    dend_19 { pt3dadd( -8.91251, 86.74, 52.3628, 0.15 ) }
    dend_19 { pt3dadd( -8.92306, 87.7073, 52.4594, 0.15 ) }
    dend_19 { pt3dadd( -8.99121, 88.5751, 52.5476, 0.07 ) }
    dend_19 { pt3dadd( -9.09411, 89.2539, 52.6288, 0.07 ) }
    dend_19 { pt3dadd( -9.23311, 90.129, 52.7525, 0.44 ) }
    dend_19 { pt3dadd( -9.309, 90.6317, 52.8378, 0.74 ) }
    dend_19 { pt3dadd( -9.3595, 91.1931, 52.957, 0.74 ) }
    dend_19 { pt3dadd( -9.3711, 93.0346, 53.4104, 0.15 ) }
    dend_19 { pt3dadd( -9.30611, 94.1533, 53.7031, 0.15 ) }
    dend_19 { pt3dadd( -9.17468, 95.5242, 54.0618, 0.37 ) }
    dend_19 { pt3dadd( -9.02168, 96.8038, 54.3985, 1.7 ) }
    dend_19 { pt3dadd( -8.85202, 98.2124, 54.741, 1.03 ) }
    dend_19 { pt3dadd( -8.60098, 100.104, 55.1762, 0.15 ) }
    dend_19 { pt3dadd( -8.34273, 101.758, 55.561, 0.15 ) }
    dend_19 { pt3dadd( -8.23493, 102.434, 55.7121, 0.66 ) }
    dend_19 { pt3dadd( -8.08858, 103.29, 55.912, 1.03 ) }
    dend_19 { pt3dadd( -7.79473, 104.727, 56.2235, 0.15 ) }
    dend_19 { pt3dadd( -7.38857, 106.449, 56.5857, 0.15 ) }
    dend_19 { pt3dadd( -7.05633, 107.615, 56.8668, 0.15 ) }
    dend_19 { pt3dadd( -6.75255, 108.55, 57.0987, 0.29 ) }
    dend_19 { pt3dadd( -6.42326, 109.536, 57.3319, 0.29 ) }
    dend_19 { pt3dadd( -6.16224, 110.461, 57.5182, 0.74 ) }
    dend_19 { pt3dadd( -5.93875, 111.561, 57.7231, 0.81 ) }
    dend_19 { pt3dadd( -5.8479, 112.317, 57.8459, 0.81 ) }
    dend_19 { pt3dadd( -5.76728, 114.41, 58.1376, 0.15 ) }
    dend_19 { pt3dadd( -5.83638, 115.483, 58.3191, 0.74 ) }
    dend_19 { pt3dadd( -6.25381, 117.817, 58.7646, 0.15 ) }
    dend_19 { pt3dadd( -6.63003, 118.953, 59.027, 0.15 ) }
    dend_19 { pt3dadd( -7.19532, 119.951, 59.2889, 0.15 ) }
    dend_19 { pt3dadd( -7.74306, 120.65, 59.4873, 0.29 ) }
    dend_19 { pt3dadd( -8.85552, 121.722, 59.8543, 0.15 ) }
    dend_19 { pt3dadd( -9.23693, 122.024, 59.9667, 0.52 ) }
    dend_19 { pt3dadd( -10.5638, 122.88, 60.3754, 1.4 ) }
    dend_19 { pt3dadd( -13.035, 124.294, 61.1551, 0.15 ) }
    dend_19 { pt3dadd( -13.7114, 124.62, 61.3753, 0.15 ) }
    dend_19 { pt3dadd( -14.047, 124.754, 61.5042, 0.15 ) }
    dend_19 { pt3dadd( -15.5138, 125.207, 62.1615, 0.81 ) }
    dend_19 { pt3dadd( -17.1057, 125.538, 62.9759, 0.15 ) }
    dend_19 { pt3dadd( -17.6596, 125.584, 63.2975, 0.15 ) }
    dend_19 { pt3dadd( -18.4632, 125.581, 63.7817, 1.18 ) }
    dend_19 { pt3dadd( -20.7512, 125.499, 65.1484, 0.07 ) }
    dend_19 { pt3dadd( -22.2511, 125.402, 66.0095, 0.07 ) }
    dend_19 { pt3dadd( -22.9498, 125.349, 66.3807, 0.59 ) }
    dend_19 { pt3dadd( -23.6753, 125.318, 66.7169, 1.77 ) }
    dend_19 { pt3dadd( -26.1201, 125.258, 67.743, 0.07 ) }
    dend_19 { pt3dadd( -27.2382, 125.243, 68.1828, 0.07 ) }
    dend_19 { pt3dadd( -27.973, 125.221, 68.435, 0.37 ) }
    dend_19 { pt3dadd( -28.709, 125.202, 68.6528, 0.52 ) }
    dend_19 { pt3dadd( -30.3898, 125.14, 69.1527, 0.07 ) }
    dend_19 { pt3dadd( -31.9867, 125.078, 69.5928, 0.07 ) }
    dend_19 { pt3dadd( -32.6406, 125.033, 69.7538, 0.07 ) }
    dend_19 { pt3dadd( -33.178, 124.981, 69.8866, 0.29 ) }
    dend_19 { pt3dadd( -34.4018, 124.805, 70.2137, 0.66 ) }
    dend_19 { pt3dadd( -35.8266, 124.492, 70.6444, 0.07 ) }
    dend_19 { pt3dadd( -36.8747, 124.2, 70.9754, 0.29 ) }
    dend_19 { pt3dadd( -37.8122, 123.926, 71.2801, 0.88 ) }
    dend_19 { pt3dadd( -39.793, 123.39, 71.9818, 0.15 ) }
    dend_19 { pt3dadd( -40.8063, 123.133, 72.3782, 0.52 ) }
    dend_19 { pt3dadd( -42.9309, 122.61, 73.248, 0.07 ) }
    dend_19 { pt3dadd( -43.6184, 122.451, 73.5276, 0.59 ) }
    dend_19 { pt3dadd( -44.5568, 122.238, 73.9193, 1.47 ) }
    dend_19 { pt3dadd( -46.7739, 121.77, 74.8576, 0.07 ) }
    dend_19 { pt3dadd( -47.611, 121.6, 75.2213, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( -48.8829, 121.345, 75.7819, 0.07 ) }
    dend_19 { pt3dadd( -49.2738, 121.267, 75.949, 0.37 ) }
    dend_19 { pt3dadd( -50.0986, 121.106, 76.2714, 0.81 ) }
    dend_19 { pt3dadd( -51.6493, 120.822, 76.8238, 0.07 ) }
    dend_19 { pt3dadd( -52.8804, 120.61, 77.1947, 0.07 ) }
    dend_19 { pt3dadd( -53.5121, 120.549, 77.3526, 0.44 ) }
    dend_19 { pt3dadd( -54.1726, 120.53, 77.5017, 0.88 ) }
    dend_19 { pt3dadd( -56.0001, 120.583, 77.8414, 0.15 ) }
    dend_19 { pt3dadd( -56.9789, 120.667, 77.9783, 0.37 ) }
    dend_19 { pt3dadd( -57.5203, 120.732, 78.0263, 0.37 ) }
    dend_19 { pt3dadd( -59.747, 120.983, 78.137, 0.15 ) }
    dend_19 { pt3dadd( -60.4768, 121.054, 78.1646, 0.15 ) }
    dend_19 { pt3dadd( -61.5778, 121.169, 78.1855, 0.37 ) }
    dend_19 { pt3dadd( -63.5572, 121.351, 78.1789, 0.07 ) }
    dend_19 { pt3dadd( -64.8284, 121.477, 78.1604, 0.29 ) }
    dend_19 { pt3dadd( -65.9805, 121.605, 78.1467, 0.07 ) }
    dend_19 { pt3dadd( -67.1227, 121.75, 78.1311, 0.07 ) }
    dend_19 { pt3dadd( -69.568, 122.084, 78.0874, 0.07 ) }
    dend_19 { pt3dadd( -72.8126, 122.549, 78.03, 0.07 ) }
    dend_19 { pt3dadd( -73.8578, 122.715, 78.0097, 0.07 ) }
    dend_19 { pt3dadd( -75.3574, 122.979, 77.9944, 0.07 ) }
    dend_19 { pt3dadd( -76.2569, 123.158, 77.9986, 0.59 ) }
    dend_19 { pt3dadd( -77.613, 123.422, 78.0105, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -7.77495, 73.3601, 51.0376, 0.37 ) }
    dend_18 { pt3dadd( -8.07789, 72.3708, 52.2591, 0.37 ) }
    dend_18 { pt3dadd( -8.19082, 71.7102, 53.0539, 0.37 ) }
    dend_18 { pt3dadd( -8.2176, 71.2598, 53.6005, 0.59 ) }
    dend_18 { pt3dadd( -8.17962, 70.4543, 54.4852, 0.22 ) }
    dend_18 { pt3dadd( -8.1252, 69.8367, 55.0945, 0.22 ) }
    dend_18 { pt3dadd( -8.09983, 69.3609, 55.5025, 0.15 ) }
    dend_18 { pt3dadd( -8.09446, 68.8944, 55.908, 0.15 ) }
    dend_18 { pt3dadd( -8.09126, 68.2277, 56.4147, 0.15 ) }
    dend_18 { pt3dadd( -8.12334, 67.5739, 56.8489, 0.59 ) }
    dend_18 { pt3dadd( -8.19857, 67.0725, 57.1168, 0.88 ) }
    dend_18 { pt3dadd( -8.51833, 65.7743, 57.6971, 0.15 ) }
    dend_18 { pt3dadd( -8.8531, 64.8466, 58.1047, 0.15 ) }
    dend_18 { pt3dadd( -9.07664, 64.3328, 58.3086, 0.44 ) }
    dend_18 { pt3dadd( -9.3216, 63.8465, 58.4823, 0.81 ) }
    dend_18 { pt3dadd( -9.72117, 63.1274, 58.723, 0.07 ) }
    dend_18 { pt3dadd( -10.2184, 62.2466, 58.9825, 0.22 ) }
    dend_18 { pt3dadd( -10.7361, 61.3187, 59.2167, 0.22 ) }
    dend_18 { pt3dadd( -11.4439, 60.0071, 59.5015, 0.07 ) }
    dend_18 { pt3dadd( -12.032, 58.9253, 59.7078, 0.07 ) }
    dend_18 { pt3dadd( -12.5786, 57.8948, 59.8937, 0.07 ) }
    dend_18 { pt3dadd( -12.8668, 57.3085, 59.9859, 0.29 ) }
    dend_18 { pt3dadd( -13.5478, 55.8774, 60.1965, 0.07 ) }
    dend_18 { pt3dadd( -13.8527, 55.2021, 60.2805, 0.88 ) }
    dend_18 { pt3dadd( -14.2355, 54.3515, 60.3923, 1.25 ) }
    dend_18 { pt3dadd( -14.4716, 53.7925, 60.4675, 1.25 ) }
    dend_18 { pt3dadd( -15.2009, 51.9705, 60.713, 0.07 ) }
    dend_18 { pt3dadd( -15.6745, 50.7624, 60.8673, 0.07 ) }
    dend_18 { pt3dadd( -15.9323, 50.0792, 60.9461, 0.07 ) }
    dend_18 { pt3dadd( -16.0833, 49.6777, 60.9899, 0.52 ) }
    dend_18 { pt3dadd( -16.4889, 48.6034, 61.0915, 0.66 ) }
    dend_18 { pt3dadd( -16.7099, 48.0514, 61.1267, 0.22 ) }
    dend_18 { pt3dadd( -17.0054, 47.3277, 61.1495, 0.52 ) }
    dend_18 { pt3dadd( -17.2598, 46.7247, 61.1428, 0.29 ) }
    dend_18 { pt3dadd( -17.769, 45.605, 61.1118, 0.07 ) }
    dend_18 { pt3dadd( -18.2395, 44.6477, 61.0677, 0.07 ) }
    dend_18 { pt3dadd( -18.6071, 43.9562, 61.033, 0.22 ) }
    dend_18 { pt3dadd( -18.8767, 43.483, 61.0066, 0.22 ) }
    dend_18 { pt3dadd( -19.6409, 42.1765, 60.9307, 0.07 ) }
    dend_18 { pt3dadd( -19.8476, 41.8378, 60.9092, 0.37 ) }
    dend_18 { pt3dadd( -20.0947, 41.4474, 60.8848, 0.59 ) }
    dend_18 { pt3dadd( -20.6892, 40.5442, 60.8308, 0.07 ) }
    dend_18 { pt3dadd( -21.1829, 39.8167, 60.7931, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 66/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -73.4501, -84.6927, 40.7275, 0.15 ) }
    dend_16 { pt3dadd( -74.9867, -84.6962, 40.5976, 0.15 ) }
    dend_16 { pt3dadd( -76.4829, -84.6772, 40.4453, 0.15 ) }
    dend_16 { pt3dadd( -77.8441, -84.6441, 40.275, 0.15 ) }
    dend_16 { pt3dadd( -79.2369, -84.603, 40.0867, 0.37 ) }
    dend_16 { pt3dadd( -80.7703, -84.5464, 39.8669, 0.15 ) }
    dend_16 { pt3dadd( -82.3086, -84.4758, 39.6385, 0.07 ) }
    dend_16 { pt3dadd( -83.0856, -84.44, 39.5268, 0.22 ) }
    dend_16 { pt3dadd( -85.389, -84.3151, 39.094, 0.15 ) }
    dend_16 { pt3dadd( -85.5495, -84.3009, 39.0599, 0.59 ) }
    dend_16 { pt3dadd( -86.5664, -84.1951, 38.8462, 1.11 ) }
    dend_16 { pt3dadd( -87.0264, -84.1482, 38.7494, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -73.4501, -84.6927, 40.7275, 0.59 ) }
    dend_15 { pt3dadd( -73.8843, -85.6599, 41.0134, 0.59 ) }
    dend_15 { pt3dadd( -74.2184, -86.3612, 41.2224, 0.96 ) }
    dend_15 { pt3dadd( -74.676, -87.4525, 41.5839, 1.47 ) }
    dend_15 { pt3dadd( -74.9279, -88.1836, 41.8421, 1.47 ) }
    dend_15 { pt3dadd( -75.3024, -89.495, 42.3382, 0.22 ) }
    dend_15 { pt3dadd( -75.4613, -89.9849, 42.524, 0.15 ) }
    dend_15 { pt3dadd( -75.6652, -90.4451, 42.6978, 0.15 ) }
    dend_15 { pt3dadd( -76.0666, -91.2213, 43.0037, 0.15 ) }
    dend_15 { pt3dadd( -76.4332, -91.8771, 43.2666, 0.37 ) }
    dend_15 { pt3dadd( -76.8601, -92.5319, 43.5654, 0.37 ) }
    dend_15 { pt3dadd( -77.7355, -93.6697, 44.1833, 0.22 ) }
    dend_15 { pt3dadd( -78.285, -94.3082, 44.589, 0.22 ) }
    dend_15 { pt3dadd( -78.6207, -94.6828, 44.844, 0.96 ) }
    dend_15 { pt3dadd( -79.4836, -95.608, 45.5262, 2.06 ) }
    dend_15 { pt3dadd( -80.3231, -96.4881, 46.2327, 1.11 ) }
    dend_15 { pt3dadd( -81.4351, -97.6521, 47.2229, 0.22 ) }
    dend_15 { pt3dadd( -82.255, -98.5468, 48.0269, 0.22 ) }
    dend_15 { pt3dadd( -82.6216, -98.9457, 48.3751, 0.22 ) }
    dend_15 { pt3dadd( -82.9215, -99.2644, 48.6407, 0.22 ) }
    dend_15 { pt3dadd( -83.1947, -99.5382, 48.8602, 0.22 ) }
    dend_15 { pt3dadd( -83.6149, -99.9488, 49.1164, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_15 { pt3dadd( -84.114, -100.405, 49.3101, 0.22 ) }
    dend_15 { pt3dadd( -84.9118, -101.111, 49.5399, 0.22 ) }
    dend_15 { pt3dadd( -85.5848, -101.739, 49.7207, 0.22 ) }
    dend_15 { pt3dadd( -86.0025, -102.167, 49.8345, 0.66 ) }
    dend_15 { pt3dadd( -86.8005, -103.07, 50.0866, 1.11 ) }
    dend_15 { pt3dadd( -87.9341, -104.426, 50.491, 0.29 ) }
    dend_15 { pt3dadd( -88.9124, -105.608, 50.8361, 0.22 ) }
    dend_15 { pt3dadd( -89.7334, -106.595, 51.1257, 0.22 ) }
    dend_15 { pt3dadd( -90.1183, -107.048, 51.2374, 0.29 ) }
    dend_15 { pt3dadd( -91.0784, -108.178, 51.4836, 0.22 ) }
    dend_15 { pt3dadd( -91.5121, -108.689, 51.59, 0.96 ) }
    dend_15 { pt3dadd( -92.2536, -109.555, 51.7562, 1.84 ) }
    dend_15 { pt3dadd( -93.5041, -110.978, 52.0087, 0.29 ) }
    dend_15 { pt3dadd( -94.5583, -112.075, 52.208, 0.22 ) }
    dend_15 { pt3dadd( -95.2717, -112.78, 52.3513, 0.22 ) }
    dend_15 { pt3dadd( -95.7225, -113.223, 52.4512, 0.22 ) }
    dend_15 { pt3dadd( -96.1333, -113.666, 52.573, 0.37 ) }
    dend_15 { pt3dadd( -96.7534, -114.451, 52.8282, 0.52 ) }
    dend_15 { pt3dadd( -97.355, -115.422, 53.1366, 0.29 ) }
    dend_15 { pt3dadd( -97.8081, -116.299, 53.4313, 0.29 ) }
    dend_15 { pt3dadd( -98.0425, -116.826, 53.5876, 0.29 ) }
    dend_15 { pt3dadd( -98.4629, -117.874, 53.8892, 0.44 ) }
    dend_15 { pt3dadd( -98.9006, -119.11, 54.2621, 0.52 ) }
    dend_15 { pt3dadd( -99.4382, -120.852, 54.7933, 0.15 ) }
    dend_15 { pt3dadd( -99.6837, -121.727, 55.0654, 0.59 ) }
    dend_15 { pt3dadd( -100.12, -123.151, 55.5206, 1.7 ) }
    dend_15 { pt3dadd( -100.741, -124.877, 56.0959, 0.15 ) }
    dend_15 { pt3dadd( -101.087, -125.675, 56.389, 0.44 ) }
    dend_15 { pt3dadd( -101.338, -126.214, 56.6096, 0.44 ) }
    dend_15 { pt3dadd( -101.727, -126.97, 56.9556, 0.07 ) }
    dend_15 { pt3dadd( -102.088, -127.621, 57.2566, 0.07 ) }
    dend_15 { pt3dadd( -102.407, -128.106, 57.4732, 0.07 ) }
    dend_15 { pt3dadd( -102.895, -128.761, 57.731, 0.29 ) }
    dend_15 { pt3dadd( -103.75, -129.84, 58.1023, 0.52 ) }
    dend_15 { pt3dadd( -104.374, -130.607, 58.3638, 0.22 ) }
    dend_15 { pt3dadd( -104.908, -131.25, 58.5834, 0.22 ) }
    dend_15 { pt3dadd( -105.511, -131.955, 58.8312, 0.37 ) }
    dend_15 { pt3dadd( -106.125, -132.618, 59.0903, 0.74 ) }
    dend_15 { pt3dadd( -107.084, -133.542, 59.4716, 1.33 ) }
    dend_15 { pt3dadd( -108.132, -134.423, 59.8404, 0.22 ) }
    dend_15 { pt3dadd( -108.923, -135.041, 60.088, 0.15 ) }
    dend_15 { pt3dadd( -109.54, -135.499, 60.2702, 0.29 ) }
    dend_15 { pt3dadd( -110.396, -136.117, 60.5276, 0.15 ) }
    dend_15 { pt3dadd( -111.084, -136.598, 60.7138, 0.59 ) }
    dend_15 { pt3dadd( -111.823, -137.068, 60.9027, 0.74 ) }
    dend_15 { pt3dadd( -112.912, -137.707, 61.125, 0.07 ) }
    dend_15 { pt3dadd( -113.935, -138.285, 61.3215, 0.15 ) }
    dend_15 { pt3dadd( -114.664, -138.69, 61.4567, 0.15 ) }
    dend_15 { pt3dadd( -115.259, -139.024, 61.5612, 0.15 ) }
    dend_15 { pt3dadd( -115.929, -139.404, 61.6551, 0.15 ) }
    dend_15 { pt3dadd( -116.862, -139.941, 61.7524, 0.29 ) }
    dend_15 { pt3dadd( -117.614, -140.363, 61.7922, 0.74 ) }
    dend_15 { pt3dadd( -118.721, -140.994, 61.8, 1.03 ) }
    dend_15 { pt3dadd( -119.802, -141.634, 61.7781, 0.29 ) }
    dend_15 { pt3dadd( -121.321, -142.547, 61.7617, 0.22 ) }
    dend_15 { pt3dadd( -122.253, -143.137, 61.7393, 0.88 ) }
    dend_15 { pt3dadd( -123.305, -143.786, 61.7137, 1.33 ) }
    dend_15 { pt3dadd( -124.229, -144.337, 61.6778, 1.47 ) }
    dend_15 { pt3dadd( -125.995, -145.341, 61.5962, 0.22 ) }
    dend_15 { pt3dadd( -126.917, -145.834, 61.5432, 0.22 ) }
    dend_15 { pt3dadd( -127.998, -146.392, 61.4944, 1.03 ) }
    dend_15 { pt3dadd( -129.153, -146.972, 61.4351, 1.55 ) }
    dend_15 { pt3dadd( -130.817, -147.814, 61.358, 0.74 ) }
    dend_15 { pt3dadd( -132.465, -148.691, 61.3454, 0.22 ) }
    dend_15 { pt3dadd( -133.309, -149.195, 61.3649, 0.22 ) }
    dend_15 { pt3dadd( -134.07, -149.686, 61.3849, 0.22 ) }
    dend_15 { pt3dadd( -134.951, -150.299, 61.4375, 0.15 ) }
    dend_15 { pt3dadd( -135.753, -150.956, 61.5234, 0.37 ) }
    dend_15 { pt3dadd( -136.744, -151.913, 61.7126, 0.15 ) }
    dend_15 { pt3dadd( -137.408, -152.685, 61.8984, 0.15 ) }
    dend_15 { pt3dadd( -138.238, -153.759, 62.2136, 0.22 ) }
    dend_15 { pt3dadd( -138.598, -154.261, 62.3679, 0.15 ) }
    dend_15 { pt3dadd( -139.128, -155.044, 62.6324, 0.15 ) }
    dend_15 { pt3dadd( -139.435, -155.537, 62.8272, 0.74 ) }
    dend_15 { pt3dadd( -139.773, -156.141, 63.1029, 0.88 ) }
    dend_15 { pt3dadd( -140.403, -157.408, 63.8089, 0.15 ) }
    dend_15 { pt3dadd( -140.639, -157.893, 64.0948, 0.22 ) }
    dend_15 { pt3dadd( -141.014, -158.445, 64.408, 0.22 ) }
    dend_15 { pt3dadd( -141.777, -159.308, 64.8755, 0.22 ) }
    dend_15 { pt3dadd( -142.02, -159.542, 64.999, 0.22 ) }
    dend_15 { pt3dadd( -142.616, -160.055, 65.2524, 0.88 ) }
    dend_15 { pt3dadd( -143.63, -160.839, 65.5639, 1.84 ) }
    dend_15 { pt3dadd( -145.225, -161.95, 65.896, 0.15 ) }
    dend_15 { pt3dadd( -146.158, -162.598, 66.0122, 0.15 ) }
    dend_15 { pt3dadd( -146.83, -163.08, 66.0285, 0.29 ) }
    dend_15 { pt3dadd( -147.805, -163.818, 66.0685, 0.74 ) }
    dend_15 { pt3dadd( -148.653, -164.504, 66.1356, 1.11 ) }
    dend_15 { pt3dadd( -149.446, -165.197, 66.2496, 0.52 ) }
    dend_15 { pt3dadd( -150.541, -166.192, 66.4566, 0.22 ) }
    dend_15 { pt3dadd( -152.318, -167.668, 66.7934, 0.29 ) }
    dend_15 { pt3dadd( -153.776, -168.777, 67.1018, 0.15 ) }
    dend_15 { pt3dadd( -154.605, -169.362, 67.3023, 0.37 ) }
    dend_15 { pt3dadd( -155.708, -170.067, 67.5979, 1.18 ) }
    dend_15 { pt3dadd( -157.259, -170.982, 68.0935, 0.44 ) }
    dend_15 { pt3dadd( -158.667, -171.693, 68.601, 0.29 ) }
    dend_15 { pt3dadd( -159.688, -172.163, 69.0058, 0.15 ) }
    dend_15 { pt3dadd( -160.51, -172.52, 69.3065, 0.88 ) }
    dend_15 { pt3dadd( -161.725, -173.037, 69.7554, 1.03 ) }
    dend_15 { pt3dadd( -163.435, -173.727, 70.4354, 0.22 ) }
    dend_15 { pt3dadd( -165.068, -174.359, 71.2024, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( -165.853, -174.651, 71.6049, 0.59 ) }
    dend_15 { pt3dadd( -166.773, -174.972, 72.0805, 0.96 ) }
    dend_15 { pt3dadd( -168.06, -175.35, 72.7274, 0.37 ) }
    dend_15 { pt3dadd( -169.786, -175.737, 73.5696, 0.15 ) }
    dend_15 { pt3dadd( -171.183, -175.932, 74.2088, 0.59 ) }
    dend_15 { pt3dadd( -172.032, -176.001, 74.5855, 1.77 ) }
    dend_15 { pt3dadd( -174.182, -176.096, 75.5257, 0.22 ) }
    dend_15 { pt3dadd( -175.539, -176.133, 76.1316, 0.22 ) }
    dend_15 { pt3dadd( -176.527, -176.151, 76.5447, 0.37 ) }
    dend_15 { pt3dadd( -177.499, -176.19, 76.9041, 0.37 ) }
    dend_15 { pt3dadd( -178.262, -176.252, 77.1713, 0.37 ) }
    dend_15 { pt3dadd( -179.291, -176.356, 77.5561, 0.81 ) }
    dend_15 { pt3dadd( -180.176, -176.497, 77.9536, 0.81 ) }
    dend_15 { pt3dadd( -181.548, -176.897, 78.719, 0.29 ) }
    dend_15 { pt3dadd( -182.337, -177.222, 79.2838, 0.29 ) }
    dend_15 { pt3dadd( -182.84, -177.503, 79.8262, 0.29 ) }
    dend_15 { pt3dadd( -183.041, -177.641, 80.1544, 0.29 ) }
    dend_15 { pt3dadd( -183.692, -178.114, 81.5637, 0.29 ) }
    dend_15 { pt3dadd( -183.917, -178.302, 82.1647, 0.44 ) }
    dend_15 { pt3dadd( -184.312, -178.651, 83.2879, 0.44 ) }
    dend_15 { pt3dadd( -184.934, -179.139, 84.8133, 0.81 ) }
    dend_15 { pt3dadd( -185.595, -179.547, 86.0911, 0.81 ) }
    dend_15 { pt3dadd( -186.213, -179.871, 87.0445, 0.81 ) }
    dend_15 { pt3dadd( -186.645, -180.053, 87.5643, 0.22 ) }
    dend_15 { pt3dadd( -187.762, -180.469, 88.7108, 0.22 ) }
    dend_15 { pt3dadd( -189.139, -180.94, 89.896, 0.22 ) }
    dend_15 { pt3dadd( -190.447, -181.387, 90.8704, 0.81 ) }
    dend_15 { pt3dadd( -191.703, -181.847, 91.7133, 0.52 ) }
    dend_15 { pt3dadd( -193.601, -182.629, 92.8346, 0.22 ) }
    dend_15 { pt3dadd( -194.421, -183.008, 93.2492, 0.22 ) }
    dend_15 { pt3dadd( -195.033, -183.336, 93.476, 0.52 ) }
    dend_15 { pt3dadd( -196.082, -183.984, 93.6673, 0.15 ) }
    dend_15 { pt3dadd( -196.552, -184.312, 93.6487, 0.59 ) }
    dend_15 { pt3dadd( -197.72, -185.224, 93.3862, 0.15 ) }
    dend_15 { pt3dadd( -198.482, -185.921, 93.0163, 0.37 ) }
    dend_15 { pt3dadd( -199.286, -186.706, 92.5074, 0.15 ) }
    dend_15 { pt3dadd( -199.978, -187.362, 91.9604, 0.37 ) }
    dend_15 { pt3dadd( -200.391, -187.704, 91.5135, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 38/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 143.318, 182.123, 75.1544, 0.96 ) }
    dend_31 { pt3dadd( 144.313, 183.198, 75.4551, 0.96 ) }
    dend_31 { pt3dadd( 144.989, 184.007, 75.6711, 1.25 ) }
    dend_31 { pt3dadd( 145.588, 184.81, 75.8753, 0.66 ) }
    dend_31 { pt3dadd( 145.948, 185.334, 76.0043, 0.22 ) }
    dend_31 { pt3dadd( 146.378, 185.979, 76.1612, 0.15 ) }
    dend_31 { pt3dadd( 146.656, 186.385, 76.2609, 0.37 ) }
    dend_31 { pt3dadd( 147.215, 187.249, 76.4679, 0.15 ) }
    dend_31 { pt3dadd( 147.623, 187.846, 76.6139, 0.37 ) }
    dend_31 { pt3dadd( 147.943, 188.265, 76.721, 0.88 ) }
    dend_31 { pt3dadd( 148.345, 188.721, 76.8175, 0.88 ) }
    dend_31 { pt3dadd( 149.315, 189.661, 76.9131, 0.22 ) }
    dend_31 { pt3dadd( 149.994, 190.267, 76.9598, 0.22 ) }
    dend_31 { pt3dadd( 150.699, 190.814, 76.9814, 0.22 ) }
    dend_31 { pt3dadd( 151.194, 191.16, 76.9786, 0.22 ) }
    dend_31 { pt3dadd( 152.265, 191.855, 76.9233, 1.25 ) }
    dend_31 { pt3dadd( 153.4, 192.546, 76.7772, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 143.318, 182.123, 75.1544, 0.29 ) }
    dend_28 { pt3dadd( 143.282, 183.517, 75.6101, 0.29 ) }
    dend_28 { pt3dadd( 143.397, 184.204, 75.8263, 0.22 ) }
    dend_28 { pt3dadd( 143.552, 184.773, 75.9919, 0.66 ) }
    dend_28 { pt3dadd( 143.824, 185.617, 76.2153, 0.22 ) }
    dend_28 { pt3dadd( 144.12, 186.439, 76.4211, 0.15 ) }
    dend_28 { pt3dadd( 144.396, 187.207, 76.5994, 0.15 ) }
    dend_28 { pt3dadd( 144.792, 188.181, 76.782, 0.15 ) }
    dend_28 { pt3dadd( 145.243, 189.21, 76.9335, 0.22 ) }
    dend_28 { pt3dadd( 145.682, 190.144, 77.0406, 0.29 ) }
    dend_28 { pt3dadd( 146.072, 190.919, 77.1125, 0.22 ) }
    dend_28 { pt3dadd( 146.519, 191.702, 77.1759, 0.29 ) }
    dend_28 { pt3dadd( 147.245, 192.74, 77.2745, 0.22 ) }
    dend_28 { pt3dadd( 147.955, 193.625, 77.3721, 0.66 ) }
    dend_28 { pt3dadd( 148.389, 194.129, 77.4366, 1.11 ) }
    dend_28 { pt3dadd( 148.933, 194.746, 77.5154, 1.18 ) }
    dend_28 { pt3dadd( 149.692, 195.609, 77.6117, 0.37 ) }
    dend_28 { pt3dadd( 150.521, 196.561, 77.7139, 0.37 ) }
    dend_28 { pt3dadd( 151.165, 197.405, 77.7974, 0.22 ) }
    dend_28 { pt3dadd( 151.691, 198.33, 77.8819, 0.22 ) }
    dend_28 { pt3dadd( 151.999, 199.03, 77.924, 0.22 ) }
    dend_28 { pt3dadd( 152.203, 199.62, 77.9542, 0.59 ) }
    dend_28 { pt3dadd( 152.32, 200.051, 77.9856, 1.03 ) }
    dend_28 { pt3dadd( 152.538, 201.017, 78.0811, 1.18 ) }
    dend_28 { pt3dadd( 152.94, 202.839, 78.3638, 0.44 ) }
    dend_28 { pt3dadd( 153.123, 203.618, 78.5111, 0.88 ) }
    dend_28 { pt3dadd( 153.323, 204.495, 78.7101, 1.7 ) }
    dend_28 { pt3dadd( 153.548, 205.509, 78.9737, 2.29 ) }
    dend_28 { pt3dadd( 153.748, 206.417, 79.2324, 2.29 ) }
    dend_28 { pt3dadd( 153.895, 207.085, 79.4563, 1.99 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 85/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 153.895, 207.085, 79.4563, 0.22 ) }
    dend_30 { pt3dadd( 155.062, 209.173, 79.8417, 0.22 ) }
    dend_30 { pt3dadd( 155.609, 210.153, 80.0227, 0.22 ) }
    dend_30 { pt3dadd( 156.188, 211.19, 80.2141, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 153.895, 207.085, 79.4563, 0.29 ) }
    dend_29 { pt3dadd( 154.768, 207.757, 79.8681, 0.29 ) }
    dend_29 { pt3dadd( 155.348, 208.203, 80.1416, 0.29 ) }
    dend_29 { pt3dadd( 155.932, 208.652, 80.4172, 0.29 ) }
    dend_29 { pt3dadd( 156.426, 209.032, 80.6503, 0.52 ) }
    dend_29 { pt3dadd( 156.929, 209.42, 80.8879, 0.52 ) }
    dend_29 { pt3dadd( 157.762, 210.061, 81.2809, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_58 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_62 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_59 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_47 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_63 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_61 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_60 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_53 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_48 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_42 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_68 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_67 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_65 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_64 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_57 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_54 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_49 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_3 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_32 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_25 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_33 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_27 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_26 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_15 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_58 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_11 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_66 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_46 OneSecGrp_SectionRef_33.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_18 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_45 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_16 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_56 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_55 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_41 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_40 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_4 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_51 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_5 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_31 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_28 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_30 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_29 OneSecGrp_SectionRef_72.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_28 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_62 nseg = 3
    dend_59 nseg = 11
    dend_47 nseg = 3
    dend_1 nseg = 3
    dend_63 nseg = 5
    dend_61 nseg = 5
    dend_60 nseg = 5
    dend_53 nseg = 3
    dend_48 nseg = 5
    dend_42 nseg = 5
    dend_68 nseg = 13
    dend_67 nseg = 9
    dend_65 nseg = 9
    dend_64 nseg = 7
    dend_57 nseg = 11
    dend_54 nseg = 3
    dend_50 nseg = 3
    dend_49 nseg = 3
    dend_43 nseg = 3
    dend_39 nseg = 9
    dend_38 nseg = 19
    dend_21 nseg = 9
    dend_12 nseg = 9
    dend_9 nseg = 3
    dend_8 nseg = 11
    dend_6 nseg = 17
    dend_3 nseg = 7
    dend_52 nseg = 3
    dend_44 nseg = 3
    dend_32 nseg = 3
    dend_25 nseg = 3
    dend_23 nseg = 3
    dend_22 nseg = 3
    dend_17 nseg = 3
    dend_14 nseg = 7
    dend_34 nseg = 9
    dend_33 nseg = 7
    dend_27 nseg = 7
    dend_26 nseg = 13
    dend_19 nseg = 7
    dend_15 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_BTC_6b85c850ab_0_0


