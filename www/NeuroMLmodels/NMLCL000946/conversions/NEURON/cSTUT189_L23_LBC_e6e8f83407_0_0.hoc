// Cell: cSTUT189_L23_LBC_e6e8f83407_0_0
/*
{
  "id" : "cSTUT189_L23_LBC_e6e8f83407_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.56398, 12.1856, -3.45915, 3.25378", "-2.26706, 10.9606, -3.11058, 4.92468", "-1.97014, 9.73565, -2.76202, 6.49677", "-1.67322, 8.51066, -2.41345, 7.93038", "-1.3763, 7.28567, -2.06488, 8.78195", "-1.07938, 6.06068, -1.71632, 9.51699", "-0.782463, 4.83569, -1.36775, 10.3263", "-0.485543, 3.6107, -1.01918, 11.1493", "-0.188623, 2.38571, -0.670618, 11.9011", "0.108296, 1.16072, -0.322051, 12.0825", "0.405216, -0.0642733, 0.026515, 12.1848", "0.702136, -1.28926, 0.375081, 12.2225", "0.999056, -2.51425, 0.723648, 11.698", "1.29598, -3.73924, 1.07221, 11.5084", "1.5929, -4.96423, 1.42078, 11.8466", "1.88982, -6.18922, 1.76935, 11.6542", "2.18674, -7.41421, 2.11791, 11.2017", "2.48366, -8.6392, 2.46648, 10.0847", "2.78057, -9.86419, 2.81505, 8.25314", "3.07749, -11.0892, 3.16361, 6.3237", "3.37441, -12.3142, 3.51218, 3.70524" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "2.77471, -11.6989, 13.4707, 3.61", "2.63478, -13.1398, 13.3152, 3.61", "2.22995, -17.3085, 12.8653, 3.06", "1.89507, -20.7569, 12.4932, 3.06", "1.56279, -24.1786, 12.1239, 2.78", "1.25468, -27.3513, 11.7815, 2.78" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-4.14529, 12.4721, -7.22925, 2.5", "-5.0014, 13.6566, -6.34662, 2.5", "-9.2906, 18.4813, -2.74838, 1.39", "-10.7052, 20.0725, -1.56172, 1.11", "-12.4868, 22.0765, -0.0671345, 0.83", "-13.1861, 22.8631, 0.519512, 0.83", "-14.5717, 24.4218, 1.68196, 1.39", "-15.8356, 25.6, 2.5141, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.59471, -1.90235, -11.6093, 3.33", "6.86811, -1.95763, -11.5671, 3.33", "8.59196, -2.30615, -11.3011, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-1.40529, -1.60835, -18.0493, 1.11", "-3.85094, -2.45913, -17.4849, 1.11", "-7.25704, -3.48442, -17.2111, 1.11", "-9.23901, -4.17, -17.0786, 1.11", "-12.1767, -5.52516, -16.8093, 0.83", "-14.8421, -6.89619, -16.9446, 0.83", "-18.2199, -8.72478, -17.436, 1.11", "-21.3529, -10.5901, -18.4137, 0.83", "-24.2154, -12.2886, -19.6383, 0.83", "-28.4832, -14.461, -21.6721, 0.83", "-34.8623, -17.2455, -24.8828, 1.11", "-36.7315, -18.0012, -25.8841, 0.56", "-39.146, -18.8997, -27.153, 1.11", "-41.8587, -19.7115, -28.5209, 0.56", "-44.9968, -20.1773, -30.0852, 0.56", "-46.5413, -20.1798, -30.7198, 0.56", "-49.3254, -19.9773, -31.2915, 1.11", "-51.5334, -19.631, -31.7366, 0.28", "-52.6322, -19.4076, -31.9469, 0.28", "-55.2352, -18.8154, -32.6391, 1.11", "-57.112, -18.4021, -33.2764, 0.28", "-59.0475, -17.9506, -33.9877, 0.83", "-62.5173, -17.0258, -35.4075, 0.56", "-64.9864, -16.346, -36.5339, 0.56", "-67.79, -15.6401, -37.9573, 0.83", "-69.6258, -15.2243, -39.0434, 0.28", "-71.6614, -14.7527, -40.4138, 0.56", "-73.2188, -14.3908, -41.7664, 0.28", "-74.3273, -14.1325, -42.8809, 1.39", "-74.7168, -14.0248, -43.3468, 1.39", "-76.0441, -13.6234, -45.0605, 0.28", "-76.9992, -13.3754, -46.3461, 1.39", "-80.3409, -12.8109, -51.0295, 0.28", "-81.0468, -12.7922, -51.9136, 0.28", "-82.5449, -12.9132, -53.5961, 0.28", "-82.7509, -12.9426, -53.7861, 0.56", "-85.2521, -13.4188, -55.583, 0.28", "-86.8316, -13.8198, -56.4783, 1.67", "-89.3627, -14.5666, -57.5586, 0.28", "-90.7097, -14.9855, -58.0932, 0.56", "-94.2542, -16.164, -59.4021, 0.28", "-95.7622, -16.681, -60.0078, 0.83", "-99.0743, -17.86, -61.3685, 0.28", "-100.06, -18.2549, -61.8216, 0.83", "-101.551, -18.9072, -62.668, 0.28", "-102.548, -19.3234, -63.313, 0.56", "-105.712, -20.6128, -65.5102, 0.28", "-106.524, -20.8629, -66.0447, 1.67", "-110.128, -21.6902, -68.2, 0.28", "-112.768, -22.1698, -69.6053, 0.83", "-116.837, -22.7168, -71.5091, 0.28", "-117.869, -22.7906, -71.9289, 0.83", "-122.045, -22.8664, -73.2909, 0.28", "-123.668, -22.8289, -73.7777, 0.83", "-125.745, -22.653, -74.2669, 0.28", "-126.138, -22.6155, -74.3246, 0.56", "-130.177, -22.2703, -74.6674, 0.28", "-131.849, -22.1467, -74.8268, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.73529, -10.7539, 1.49075, 3.06", "-2.52807, -11.746, 1.6201, 2.78", "-4.49187, -14.2037, 1.94052, 2.78", "-6.25102, -16.4053, 2.22755, 2.78" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.37441, -12.3142, 3.51218, 0.83", "6.90787, -26.8921, 3.51218, 0.83", "10.4413, -41.47, 3.51218, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "1.25468, -27.3513, 11.7815, 0.83", "-2.09216, -30.8275, 7.30183, 0.83", "-3.38089, -32.1661, 5.57688, 1.11", "-5.13742, -33.9905, 3.22579, 1.39" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "1.25468, -27.3513, 11.7815, 1.67", "0.96026, -30.1251, 14.3442, 1.67", "0.691973, -32.6526, 16.6795, 1.67", "0.43874, -35.0383, 18.8837, 1.39", "0.207722, -37.2147, 20.8946, 1.39", "0.097224, -38.2557, 21.8564, 1.67" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-15.8356, 25.6, 2.5141, 0.56", "-18.4501, 24.0597, 4.10389, 0.56", "-20.1894, 23.2542, 5.29166, 0.56", "-22.0089, 22.6619, 6.59036, 0.56", "-24.1419, 22.1525, 8.12006, 0.56", "-25.4416, 21.8432, 9.05659, 0.56", "-28.4367, 21.0147, 11.032, 0.56", "-30.5498, 20.6494, 12.4077, 0.83", "-32.5663, 20.437, 13.7847, 0.83", "-33.8555, 20.3355, 14.6249, 0.83", "-36.4102, 19.9919, 16.2624, 0.83", "-39.1952, 19.5042, 18.0181, 0.83", "-43.4728, 18.4199, 20.6734, 0.83", "-46.6241, 17.4125, 22.6304, 0.83", "-49.0676, 16.5233, 24.166, 0.56", "-52.5303, 15.1006, 26.2414, 0.56", "-53.6576, 14.6167, 26.9276, 0.56", "-55.4664, 13.8109, 28.114, 0.56", "-56.3179, 13.3686, 28.6862, 0.56", "-57.8499, 12.5459, 29.7362, 0.83", "-60.7217, 11.1583, 31.7893, 0.56", "-62.524, 10.4314, 33.0338, 0.56", "-65.4436, 9.18288, 35.2066, 0.56", "-68.3233, 8.05687, 37.4772, 0.56" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-15.8356, 25.6, 2.5141, 0.56", "-18.6808, 24.961, 3.04837, 0.56", "-20.3608, 24.865, 3.24186, 0.56", "-24.9361, 24.6036, 3.7688, 0.83", "-28.3984, 24.4058, 4.16755, 0.83", "-30.7508, 24.2714, 4.43848, 0.83", "-33.0146, 24.1421, 4.6992, 0.83", "-36.8093, 24.3955, 5.00676, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "8.59196, -2.30615, -11.3011, 0.83", "11.6866, -2.47785, -13.1496, 0.83", "15.0691, -2.13462, -14.9886, 0.83", "18.2495, -1.32296, -16.5119, 0.83", "21.2611, -0.230407, -17.7691, 0.83", "24.7358, 1.24204, -19.0489, 0.83", "30.2553, 3.65327, -20.8709, 0.56", "33.8987, 5.59993, -21.8594, 0.83", "37.2523, 7.88451, -22.6314, 0.83", "38.636, 9.01338, -22.8035, 0.56", "39.6927, 9.98689, -22.7776, 0.56", "40.845, 11.4373, -22.5282, 0.56", "41.9723, 13.8209, -21.4121, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.59196, -2.30615, -11.3011, 1.94", "11.299, -3.92725, -12.8639, 1.94", "15.4347, -6.40385, -15.2514, 1.94", "17.7845, -7.81099, -16.6079, 1.94", "20.4508, -9.40767, -18.1472, 1.94" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.25102, -16.4053, 2.22755, 1.11", "-5.00347, -18.5343, 4.94894, 1.11", "-4.06561, -19.7175, 6.64062, 1.11", "-1.21322, -22.5107, 11.1807, 1.11", "0.0363008, -23.6307, 13.1099, 1.11", "1.3, -24.7634, 15.061, 0.83", "2.51926, -25.8563, 16.9435, 0.83", "4.75696, -27.462, 20.0177, 0.83", "6.8827, -28.793, 22.7023, 0.83", "8.71828, -29.6827, 24.7415, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.25102, -16.4053, 2.22755, 1.39", "-10.2477, -15.9059, 3.36135, 1.39", "-12.4306, -15.6331, 3.98063, 1.39", "-13.4966, -15.4999, 4.28305, 1.39", "-15.7758, -15.2151, 4.92963, 1.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.4413, -41.47, 3.51218, 0.56", "13.9748, -56.0478, 3.51218, 0.56", "17.5083, -70.6257, 3.51218, 0.56" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-5.13742, -33.9905, 3.22579, 0.83", "-4.27253, -35.6276, 1.72554, 0.83", "-3.51916, -37.5253, 0.109802, 0.83", "-3.10485, -39.1311, -1.17054, 0.83", "-2.3283, -42.9615, -4.18598, 0.83", "-1.16196, -49.4206, -8.98745, 0.56", "-0.940046, -51.1559, -10.1461, 0.56", "-0.877841, -53.2349, -11.4856, 1.11", "-0.820825, -55.7079, -13.026, 0.56", "-0.613187, -57.7537, -14.362, 0.56", "-0.196891, -59.7344, -15.589, 0.56", "0.642588, -62.588, -17.1219, 0.83", "1.87791, -65.3351, -18.7802, 0.56", "3.48379, -68.1675, -20.6528, 0.56", "5.58121, -71.5808, -22.9849, 1.11", "6.45548, -73.0892, -24.1182, 0.56", "7.44716, -74.9398, -25.7908, 0.56", "8.25497, -76.6977, -27.552, 0.56", "8.65991, -78.1705, -28.968, 0.28", "8.76132, -79.4646, -30.2313, 0.83", "8.63759, -82.4505, -33.0533, 0.28", "8.4192, -85.0188, -35.2346, 1.39", "7.97979, -88.4359, -37.8335, 0.28", "7.7842, -90.1043, -39.0384, 0.56", "7.58964, -92.9728, -40.8434, 0.28", "7.59477, -94.5917, -41.7181, 2.22", "7.91176, -99.156, -43.519, 0.28", "8.20284, -101.157, -44.1442, 0.56", "8.79113, -103.578, -44.8351, 0.56", "9.43582, -105.5, -45.3736, 0.28", "10.0421, -107.009, -45.8148, 0.83", "11.0685, -109.477, -46.6434, 0.28", "11.8118, -111.306, -47.299, 0.83", "12.9831, -114.539, -48.2872, 0.28", "13.3671, -115.874, -48.6564, 1.39", "14.4874, -119.409, -49.3966, 0.28", "15.1414, -121.393, -49.6877, 0.28", "15.7443, -122.998, -49.9128, 1.94", "17.0324, -126.072, -50.2796, 0.28", "17.5279, -127.129, -50.4308, 1.11", "20.7097, -133.312, -51.7486, 0.28", "21.1898, -134.215, -51.9716, 0.83", "23.3205, -138.225, -53.1518, 0.28", "23.5872, -138.78, -53.3395, 0.83", "25.565, -143.337, -55.0604, 0.28", "26.4405, -145.755, -56.0081, 0.56", "27.3353, -149.207, -57.3737, 0.28", "27.6028, -150.594, -57.8499, 1.39", "28.3055, -155.189, -59.2323, 0.28", "28.4423, -156.19, -59.5102, 0.83", "29.1045, -160.963, -61.189, 0.28", "29.3641, -162.631, -61.8802, 1.11", "30.0281, -166.149, -63.7698, 0.28", "30.4501, -168.127, -64.9796, 0.28", "30.7104, -169.244, -65.7273, 1.11", "32.3165, -176.151, -70.765, 0.28", "32.4677, -176.822, -71.288, 1.94", "33.5466, -181.286, -74.539, 0.28", "33.6073, -181.523, -74.6955, 0.56", "34.241, -184.372, -76.3758, 0.28", "34.6218, -186.349, -77.4162, 1.11", "35.0954, -190.326, -78.975, 0.28", "35.5169, -196.103, -81.0657, 0.28", "35.5392, -198.208, -81.7344, 1.39", "35.4011, -201.787, -82.76, 0.28", "35.253, -203.188, -83.1368, 0.83", "34.4662, -207.59, -83.9916, 0.28", "34.272, -208.199, -84.098, 0.56", "33.3599, -210.054, -84.4341, 0.28", "32.7802, -211.101, -84.6094, 0.83", "31.443, -213.46, -84.9164, 0.28", "29.6095, -216.716, -85.4134, 1.11", "27.6415, -220.278, -86.0541, 0.28", "27.3483, -220.836, -86.1861, 0.56", "26.7921, -221.967, -86.4507, 0.28", "26.5526, -222.459, -86.6509, 0.56", "25.9655, -223.613, -87.2607, 0.28", "25.6997, -224.095, -87.5823, 0.56", "24.5413, -226.195, -88.9105, 0.28", "23.6484, -228.042, -90.2388, 1.11", "21.7936, -232.258, -93.6393, 0.28", "21.5401, -232.923, -94.1976, 0.56", "20.3797, -236.444, -97.2109, 0.28", "19.9571, -237.941, -98.4905, 1.39", "19.0581, -241.891, -101.659, 0.28", "18.7612, -244.017, -103.373, 1.39", "18.682, -245.813, -104.653, 0.28", "18.6894, -246.263, -104.984, 0.83", "18.935, -248.299, -106.558, 0.28", "19.2071, -250.385, -108.141, 0.83", "19.4918, -252.838, -109.292, 0.28", "19.6524, -253.822, -109.621, 0.56" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-5.13742, -33.9905, 3.22579, 0.56", "-5.69957, -35.8101, 1.38559, 0.56", "-5.88343, -36.359, 0.833191, 0.28", "-6.28242, -37.4161, -0.23406, 0.83", "-7.04415, -39.107, -1.82938, 0.56", "-8.02193, -40.9305, -3.52486, 1.11", "-11.4559, -47.0851, -9.22941, 0.83", "-13.0127, -49.676, -11.7521, 0.28", "-13.3726, -50.2225, -12.3713, 0.28", "-14.5092, -51.8615, -14.5067, 0.83", "-15.3141, -53.0264, -16.3883, 0.56", "-15.9308, -53.9025, -17.9167, 0.56", "-16.4881, -54.6936, -19.3255, 1.39", "-18.9534, -58.0152, -25.5806, 0.28", "-19.6453, -58.9467, -27.3013, 1.39", "-21.4502, -61.3224, -31.6148, 0.56", "-22.4653, -62.5851, -33.7988, 0.56", "-23.953, -64.2757, -36.5739, 1.39", "-25.823, -66.3025, -39.6331, 0.28", "-26.2911, -66.8082, -40.1974, 0.83", "-28.0199, -68.8182, -41.9738, 0.28", "-28.228, -69.1006, -42.151, 0.56", "-29.7956, -71.6273, -43.4334, 0.28", "-30.3465, -72.6935, -43.8992, 1.39", "-32.4841, -77.5143, -45.6598, 0.28", "-32.8771, -78.5767, -46.1208, 1.39", "-33.7082, -81.3127, -47.4072, 0.28", "-33.9883, -82.3232, -47.9765, 0.83", "-34.7393, -85.3066, -49.8436, 0.28", "-35.2248, -87.4797, -51.3724, 1.11", "-36.3238, -92.8468, -55.5839, 0.28", "-36.3846, -93.1604, -55.8187, 0.56", "-37.5211, -98.9898, -59.9448, 0.28", "-37.6333, -99.522, -60.2609, 0.28", "-38.3025, -102.448, -61.6432, 0.28", "-38.6791, -103.967, -62.241, 0.56", "-39.4427, -106.8, -62.9001, 0.28", "-39.7761, -108.02, -63.1628, 1.39", "-40.6886, -111.528, -63.7368, 0.28", "-40.9008, -112.303, -63.9175, 0.83", "-41.7829, -114.964, -64.8646, 0.28", "-41.9538, -115.44, -65.133, 0.83", "-42.8265, -117.756, -66.8484, 0.28", "-42.9828, -118.171, -67.2023, 0.56", "-43.8013, -120.302, -69.0742, 0.28", "-44.6633, -122.6, -70.9597, 0.56", "-46.01, -126.087, -73.5992, 0.28", "-46.3118, -126.914, -74.1392, 0.56", "-47.0712, -129.29, -75.372, 0.28", "-47.7233, -132.222, -76.7898, 1.11", "-47.8886, -134.018, -77.4916, 0.28", "-47.7938, -134.787, -77.7467, 0.56", "-47.4064, -136.121, -78.1796, 0.28", "-47.1595, -136.87, -78.3862, 0.56", "-45.6641, -141.272, -79.4801, 0.28", "-45.4413, -142.034, -79.7017, 0.56", "-44.3094, -146.419, -80.9019, 0.28", "-44.0971, -147.41, -81.1273, 0.56", "-43.199, -153.107, -82.0141, 0.28", "-43.1249, -154.301, -82.1746, 1.11", "-43.1901, -157.64, -82.3546, 0.28", "-43.2719, -158.844, -82.4282, 0.83", "-43.6619, -161.975, -82.6813, 0.28", "-43.9632, -164.038, -82.8456, 1.11", "-44.8938, -169.597, -83.3029, 0.28", "-45.4177, -172.792, -83.4647, 1.11", "-45.875, -175.519, -83.5132, 0.28", "-46.0729, -176.602, -83.5206, 0.56", "-46.8896, -180.975, -83.5391, 0.28", "-47.166, -182.427, -83.4845, 1.11", "-47.8166, -185.575, -83.1205, 0.28", "-48.0812, -186.58, -82.9661, 0.56", "-49.4493, -191.051, -81.9574, 0.28", "-49.8055, -192.16, -81.6691, 0.56", "-50.6174, -194.408, -81.0003, 0.28", "-50.9592, -195.342, -80.6903, 0.56", "-52.1376, -198.323, -79.5845, 0.28", "-52.4186, -198.979, -79.3046, 1.11" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "0.097224, -38.2557, 21.8564, 1.11", "-4.14287, -41.1752, 21.2438, 1.11", "-7.16665, -44.171, 21.4945, 1.11", "-9.95488, -48.1429, 22.3213, 1.11", "-11.4383, -51.1979, 23.1213, 1.11", "-12.3348, -53.641, 23.7292, 1.11", "-13.6937, -58.5421, 24.5996, 1.11", "-14.2992, -64.2427, 25.1932, 1.11", "-14.2575, -66.7075, 25.433, 0.83", "-14.0757, -69.0242, 25.7767, 1.11", "-13.9064, -70.9243, 26.0739, 1.11", "-13.742, -74.5791, 26.5919, 0.83", "-13.8464, -76.8193, 26.8147, 0.83", "-14.1106, -78.8827, 26.7451, 1.11", "-14.5147, -81.0674, 26.6715, 0.83", "-14.7205, -82.2311, 26.6207, 1.11", "-15.468, -86.0106, 26.4767, 1.11", "-16.013, -87.6782, 26.4758, 1.11", "-17.8009, -91.617, 26.3104, 0.83", "-18.8323, -93.4448, 26.1995, 0.83", "-19.9755, -95.3235, 26.0123, 0.83", "-21.5414, -97.6755, 25.6918, 0.83", "-24.8302, -101.972, 24.9785, 0.83", "-27.1946, -104.758, 24.5443, 0.83", "-29.291, -107.079, 24.2914, 0.56", "-31.1794, -109.235, 24.0499, 0.83", "-32.8703, -111.288, 23.7944, 0.56", "-34.4157, -113.423, 23.4511, 0.83", "-35.4949, -115.131, 23.0914, 0.56", "-36.28, -116.29, 22.843, 0.83", "-37.7034, -118.077, 22.479, 0.83", "-39.4235, -120.033, 22.1257, 0.56", "-39.7671, -120.488, 22.1002, 0.56", "-40.8557, -122.306, 22.2208, 0.83", "-41.2411, -123.072, 22.3494, 0.83", "-41.9863, -125.195, 22.6135, 0.56", "-42.2841, -126.612, 22.7435, 0.83", "-42.6606, -129.666, 22.946, 0.83", "-43.047, -132.075, 23.2008, 0.83", "-43.4105, -133.859, 23.4377, 0.83", "-44.5455, -138.474, 24.1095, 0.83", "-44.8442, -139.592, 24.2764, 0.56", "-45.3575, -141.267, 24.4988, 0.56", "-47.0011, -145.96, 24.8301, 0.83", "-47.8165, -148.064, 24.8565, 0.56", "-48.3084, -149.152, 24.8081, 0.83", "-49.4326, -151.349, 24.7986, 0.56", "-51.0281, -154.873, 24.7079, 0.83", "-51.893, -157.252, 24.5713, 0.83", "-52.5182, -159.375, 24.4252, 0.56", "-53.187, -162.099, 24.3219, 1.11", "-54.0976, -165.582, 23.8848, 0.56", "-54.596, -167.32, 23.641, 0.56", "-55.424, -170.322, 23.2141, 0.83", "-55.9508, -172.292, 22.9793, 0.56", "-56.9083, -176.174, 22.5384, 0.83", "-58.566, -182.562, 21.8039, 0.56", "-59.4757, -185.252, 21.4014, 0.56", "-59.9804, -186.443, 21.2573, 0.56", "-61.3342, -189.44, 21.0009, 0.28", "-62.4304, -191.821, 20.9111, 0.56", "-63.2806, -193.648, 21.1223, 0.56", "-64.1335, -196.118, 21.4813, 0.83", "-64.4192, -197.267, 21.5051, 0.28", "-64.7971, -199.578, 21.4195, 0.28", "-65.0127, -201.325, 21.2638, 0.56", "-65.4613, -204.703, 20.8214, 1.67", "-66.048, -209.132, 20.0962, 0.83", "-66.3249, -210.831, 19.7913, 0.83", "-66.9838, -213.335, 19.314, 0.56", "-67.6964, -214.935, 19.0633, 0.56", "-68.3184, -215.933, 18.9528, 0.28", "-69.0776, -216.957, 18.9128, 0.28", "-70.5398, -218.787, 19.3391, 0.83", "-71.5892, -220.203, 19.8406, 0.56", "-73.6793, -223.186, 21.0429, 0.56", "-74.3712, -224.34, 21.5308, 0.56", "-75.2196, -226.12, 22.1759, 0.28", "-76.8565, -230.32, 23.61, 2.22", "-78.0425, -233.775, 24.6768, 0.56", "-79.0002, -237.091, 25.5066, 0.56", "-79.4011, -238.647, 25.7773, 0.56", "-80.7103, -242.857, 26.2893, 0.56", "-81.9055, -246.062, 26.5482, 0.56", "-82.6489, -248.108, 26.5749, 0.56", "-83.1425, -249.512, 26.6058, 0.28", "-84.1911, -252.408, 26.7677, 0.56", "-85.3348, -255.254, 27.0028, 0.56", "-86.4618, -258.043, 27.3236, 2.5", "-87.4615, -261.098, 27.6069, 0.56", "-88.0733, -263.506, 27.8988, 0.56", "-88.5842, -265.732, 28.2096, 0.28", "-88.9742, -267.636, 28.455, 0.56", "-89.2877, -269.492, 28.6006, 0.28", "-89.6019, -271.437, 28.6424, 0.56", "-89.9122, -273.468, 28.7545, 0.28", "-90.1294, -274.944, 28.8575, 0.28", "-90.6031, -277.456, 29.0781, 0.56", "-91.3544, -280.076, 29.3561, 0.28", "-91.9784, -281.673, 29.5452, 0.83", "-93.1596, -284.213, 29.8145, 0.56", "-94.4051, -286.778, 30.0444, 0.56", "-95.3356, -288.718, 30.2491, 1.11", "-96.2717, -290.788, 30.527, 0.28", "-96.618, -291.581, 30.6099, 0.28", "-96.9828, -292.6, 30.6511, 0.83", "-97.4875, -294.487, 30.6876, 0.83", "-97.7309, -295.661, 30.8081, 0.28", "-98.2327, -298.049, 31.1508, 0.56", "-98.7214, -300.85, 31.7868, 0.83", "-99.1844, -304.055, 32.4924, 0.56", "-99.423, -305.841, 32.9573, 0.28", "-99.8622, -308.553, 33.7327, 1.11", "-100.321, -310.782, 34.4052, 0.56", "-101.102, -313.768, 35.3948, 0.56", "-102.198, -317.833, 36.8171, 0.83", "-102.745, -320.14, 37.599, 0.56", "-103.033, -321.604, 38.0359, 0.56", "-103.141, -322.406, 38.2329, 0.56", "-103.383, -324.382, 38.8026, 1.11" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "0.097224, -38.2557, 21.8564, 1.11", "3.4438, -40.1632, 24.9491, 1.11", "4.93559, -41.1888, 26.5959, 1.11", "5.99425, -42.1032, 27.976, 0.83", "7.42078, -43.3355, 29.8357, 0.83", "8.65964, -44.4056, 31.4507, 0.83", "10.4236, -45.9294, 33.7504, 1.11", "11.2756, -47.2404, 35.5804, 0.83", "11.7169, -48.1147, 36.8545, 0.83" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-36.8093, 24.3955, 5.00676, 0.56", "-40.6758, 28.0561, 10.363, 0.56", "-43.9499, 30.656, 13.612, 0.56", "-46.2186, 32.1734, 15.4783, 0.56", "-48.2444, 33.3289, 16.9562, 0.83", "-50.2517, 34.2804, 18.4595, 0.83", "-52.8486, 35.2819, 20.5564, 0.83", "-56.0093, 35.6767, 22.8052, 0.56", "-57.9172, 35.552, 24.2866, 0.56", "-59.1258, 35.387, 25.3444, 0.56", "-61.9648, 34.8911, 28.091, 0.56", "-64.5014, 34.3608, 30.7493, 0.56", "-65.9159, 34.0941, 32.2737, 0.56", "-68.5663, 33.6303, 34.9282, 0.56", "-71.1726, 33.3936, 37.2151, 0.56", "-73.1711, 33.3148, 38.6342, 0.56", "-73.7321, 33.3336, 38.9076, 0.83", "-76.2193, 33.5444, 39.7085, 0.28", "-76.8073, 33.654, 39.8799, 0.56", "-78.8631, 34.2554, 40.4969, 0.56", "-80.8545, 35.0529, 41.1997, 0.83", "-83.237, 36.4593, 42.2597, 0.56", "-85.047, 37.9196, 43.3532, 1.67", "-87.3955, 40.781, 45.3322, 0.28", "-88.0181, 41.7233, 45.9205, 0.28", "-88.4846, 42.6771, 46.4457, 0.56", "-89.2421, 45.1587, 47.8151, 0.28", "-89.4327, 47.2365, 49.066, 0.56", "-89.3163, 48.409, 49.8827, 0.28" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-36.8093, 24.3955, 5.00676, 0.56", "-36.5369, 24.5703, 2.53824, 0.56", "-34.9479, 25.2798, -4.39445, 0.56", "-34.2381, 25.5334, -7.09938, 1.39", "-33.8589, 25.6496, -8.41976, 0.28", "-33.3391, 25.8147, -10.5112, 0.28", "-33.2066, 25.8641, -11.0758, 1.11", "-32.1919, 26.3016, -14.7656, 1.11", "-30.5081, 27.28, -20.4832, 0.56", "-29.8411, 27.816, -22.8879, 0.83", "-27.1785, 30.475, -33.4104, 0.28", "-26.9841, 30.6936, -34.252, 1.11", "-25.5526, 32.4949, -41.1022, 0.28", "-25.3656, 32.785, -42.1677, 0.56", "-24.6935, 33.9681, -45.6824, 0.28", "-24.2501, 34.7328, -48.8438, 0.56" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "41.9723, 13.8209, -21.4121, 0.56", "43.5328, 14.6233, -21.7467, 0.56", "47.2968, 16.7131, -22.9573, 0.56", "49.5012, 17.9057, -23.5905, 0.56", "50.7857, 18.5799, -24.0033, 0.56", "52.8549, 19.6513, -24.6757, 0.28", "54.4078, 20.4346, -25.1718, 0.83", "56.2142, 21.3528, -25.8591, 0.28", "58.8968, 22.76, -26.8999, 0.83", "61.0614, 24.015, -27.6526, 0.28", "62.8582, 25.072, -28.1822, 0.83", "63.8063, 25.6339, -28.3797, 0.56", "65.2778, 26.5291, -28.648, 0.56", "67.0388, 27.5739, -28.8684, 0.28", "68.7948, 28.6112, -29.1009, 0.28", "70.9361, 29.7871, -29.5778, 1.11", "72.2222, 30.5053, -30.0828, 0.28", "73.2775, 31.1101, -30.5996, 0.56", "75.6611, 32.5322, -31.9318, 0.56", "77.4229, 33.6627, -33.0623, 1.67", "81.5922, 36.6202, -36.0096, 0.56", "84.4556, 38.8389, -38.003, 0.28", "85.4061, 39.6101, -38.7101, 0.56", "86.8689, 40.8748, -39.8422, 0.28", "87.407, 41.41, -40.318, 0.56", "88.8545, 43.0654, -41.4724, 0.28", "90.4973, 45.1722, -41.976, 1.11" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "41.9723, 13.8209, -21.4121, 0.56", "44.3745, 14.3722, -19.2042, 0.56", "47.2441, 15.0196, -16.7249, 0.56", "49.8729, 15.5898, -14.5541, 0.56", "52.3801, 16.0895, -12.6519, 0.83", "54.4877, 16.4556, -11.1202, 0.56", "57.4634, 16.8283, -9.02643, 0.56", "58.7209, 16.9468, -8.18376, 0.56", "60.7156, 16.9958, -6.91005, 0.83", "62.6621, 17.0156, -5.79758, 0.56", "64.8065, 16.9757, -4.74029, 0.28", "66.5842, 16.8521, -3.87838, 0.28", "68.7533, 16.6729, -2.94324, 0.83", "71.1121, 16.4454, -1.9849, 0.28", "71.8922, 16.3607, -1.69786, 0.56", "74.0396, 16.1974, -0.966862, 0.28", "74.6476, 16.1744, -0.803113, 0.56", "76.6702, 16.1625, -0.444061, 0.28", "77.291, 16.1453, -0.407504, 0.83", "79.2018, 16.1025, -0.407965, 0.28", "80.3886, 16.0926, -0.424885, 0.28", "81.2584, 16.1118, -0.467851, 0.28", "83.8211, 16.1957, -0.649476, 0.83", "86.8609, 16.326, -0.936284, 0.28", "88.2667, 16.3904, -1.0937, 0.56", "91.0339, 16.5322, -1.43582, 0.56", "93.6953, 16.6159, -1.75268, 0.56", "95.9891, 16.7094, -1.99468, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "20.4508, -9.40767, -18.1472, 0.83", "23.6538, -9.35884, -20.5568, 0.83", "28.1562, -9.02177, -23.9139, 0.56", "29.4828, -8.76873, -24.8819, 0.56", "32.4309, -8.13235, -26.9941, 0.56", "35.1214, -7.56847, -28.8519, 0.83", "37.1406, -7.11535, -30.2215, 0.56", "40.2719, -6.35695, -32.055, 0.83", "42.8865, -5.37743, -33.5485, 0.56", "44.5622, -4.18222, -34.8351, 0.56", "45.6017, -2.98672, -35.834, 0.28", "46.0419, -2.44366, -36.3178, 0.28", "47.5803, -0.784939, -37.636, 0.83", "49.769, 0.870245, -38.88, 0.56", "51.1644, 1.68898, -39.6351, 0.56", "54.0195, 2.99953, -41.0169, 1.39", "57.5439, 4.2963, -42.5724, 0.56", "61.971, 5.48601, -44.3576, 0.28", "63.9892, 5.89788, -45.074, 0.28", "69.2914, 6.71634, -46.8991, 1.94", "72.1222, 7.14613, -48.0026, 0.28", "73.5298, 7.40499, -48.6525, 0.56", "75.5745, 7.94628, -49.7915, 0.28", "77.1494, 8.46244, -50.9289, 0.56", "79.2748, 9.26264, -52.632, 0.28", "80.5611, 9.71663, -53.656, 0.83", "82.385, 10.2993, -55.3522, 0.28", "82.8877, 10.4406, -55.8434, 0.56", "85.0434, 10.983, -58.0653, 0.28", "86.0117, 11.1025, -59.2396, 0.56", "87.0001, 11.183, -60.426, 0.28", "87.5913, 11.2284, -61.1029, 0.83", "88.6726, 11.3924, -62.2387, 0.28", "89.3171, 11.5534, -62.8971, 0.56", "93.3976, 12.9316, -66.9572, 0.28", "94.6018, 13.3904, -68.1655, 0.28", "96.1693, 14.0389, -69.9052, 0.83", "99.3754, 15.4555, -73.7128, 0.28", "100.562, 16.0106, -75.1647, 1.39", "102.589, 17.0269, -77.6244, 0.28", "103.38, 17.4417, -78.5535, 1.11", "106.652, 19.1036, -82.6025, 0.28", "108.097, 19.822, -84.4547, 0.28", "109.066, 20.2941, -85.7665, 0.83", "110.613, 20.986, -87.9002, 0.28", "110.93, 21.1774, -88.3284, 0.56", "112.536, 22.4865, -90.2652, 0.28", "113.079, 23.0446, -90.8613, 1.11", "114.807, 25.006, -92.6878, 0.28", "115.822, 26.2339, -93.8204, 0.83", "118.974, 30.1677, -97.5658, 0.28", "120.795, 32.5296, -99.7362, 1.11", "122.459, 34.7831, -101.677, 0.28", "122.875, 35.3556, -102.153, 0.83", "125.144, 38.6409, -104.731, 0.28", "126.547, 40.504, -106.344, 1.39" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "20.4508, -9.40767, -18.1472, 1.11", "19.1114, -12.2915, -19.0113, 1.11", "18.5345, -14.6948, -19.2144, 0.83", "18.7364, -16.2248, -19.0092, 0.83", "19.3578, -18.1799, -18.5818, 0.83", "19.8572, -19.5062, -18.2469, 0.83", "20.6324, -21.3162, -17.7721, 0.83", "22.5843, -25.0962, -16.7727, 0.83", "25.2578, -29.5389, -15.7485, 0.83", "27.7633, -33.3507, -15.1061, 0.83", "28.9817, -34.9173, -14.9101, 0.56", "30.5537, -36.7653, -14.7788, 0.83", "32.8196, -39.4725, -14.7941, 0.56", "35.0538, -42.1237, -15.0477, 1.11", "36.9861, -44.3356, -15.4548, 0.56", "40.0816, -47.6607, -16.2293, 0.56", "41.0378, -48.7018, -16.4678, 0.56", "43.9653, -52.0303, -17.3047, 0.56", "46.4156, -54.8958, -17.9998, 0.56", "48.2566, -57.2201, -18.6397, 0.56", "48.7914, -57.89, -18.8336, 0.56", "50.795, -60.5567, -19.6959, 0.83", "52.9998, -63.3747, -20.7558, 0.28", "53.6022, -64.1311, -21.0803, 0.83", "54.2036, -65.0745, -21.4793, 0.28", "55.6489, -67.4701, -22.3829, 0.28", "56.1178, -68.1851, -22.6567, 0.28", "57.7421, -70.955, -23.635, 1.11", "58.2582, -71.963, -23.8803, 0.28", "58.6071, -72.6768, -24.0759, 0.28", "59.6226, -74.74, -24.6376, 1.11", "60.4906, -76.5925, -25.1169, 0.28", "61.476, -78.6475, -25.6043, 0.28", "62.4537, -80.7311, -26.0183, 0.28", "63.3903, -82.609, -26.3579, 1.11", "64.5385, -85.0525, -26.7362, 0.28", "64.8638, -85.8549, -26.8209, 0.28", "65.6541, -87.7416, -26.9798, 0.56", "66.2726, -89.0779, -27.0327, 0.28", "68.1726, -93.1924, -27.3386, 0.28", "68.7192, -94.3678, -27.4439, 0.28", "70.0744, -97.2533, -27.7865, 0.83", "71.4598, -100.2, -28.2917, 0.28", "72.5884, -102.489, -28.788, 1.67", "74.3913, -105.991, -29.6839, 0.28", "75.167, -107.544, -30.1921, 0.56", "75.5951, -108.301, -30.4849, 0.56", "76.7353, -110.163, -31.2877, 0.28", "77.6876, -111.58, -31.9681, 0.28", "79.1189, -113.486, -33.65, 0.83", "80.5562, -115.282, -35.3088, 0.56", "81.4672, -116.343, -36.4232, 0.83", "82.3969, -117.355, -37.6049, 0.28", "83.7101, -118.71, -39.4189, 0.28", "87.8987, -123.262, -47.4212, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "8.71828, -29.6827, 24.7415, 0.28", "7.62281, -30.5572, 26.2788, 0.28", "5.36157, -32.3623, 29.452, 0.28", "4.73681, -32.8611, 30.3288, 0.56", "3.66259, -33.7186, 31.8362, 0.56", "2.15734, -34.9202, 33.9486, 0.56", "1.26256, -35.6345, 35.2042, 0.56" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "8.71828, -29.6827, 24.7415, 0.56", "11.6982, -28.7692, 25.9715, 0.56" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-15.7758, -15.2151, 4.92963, 0.83", "-18.2428, -8.36545, 13.0091, 0.83", "-18.7635, -7.13651, 13.5725, 0.83", "-19.4353, -5.60305, 13.9779, 0.83", "-20.5896, -3.22778, 14.3776, 0.83", "-22.6082, 0.888023, 15.0118, 0.56", "-23.8993, 3.65302, 15.3924, 0.56", "-25.9375, 8.11718, 15.1929, 0.56", "-26.4423, 9.16213, 15.1525, 0.83", "-28.0724, 12.2317, 15.0785, 0.56", "-29.0245, 13.8804, 15.1241, 0.56", "-30.4523, 16.3726, 15.4585, 0.83", "-31.3875, 18.1306, 15.7571, 0.56", "-32.6451, 20.4926, 16.2165, 0.56", "-34.2925, 23.2557, 16.6902, 0.28", "-35.6873, 25.521, 16.9466, 0.28", "-36.7644, 27.1208, 17.0058, 0.28", "-37.8224, 28.7287, 16.9897, 0.28", "-38.7996, 30.3447, 16.9251, 0.56", "-40.7167, 33.6942, 16.6343, 0.28", "-42.085, 36.1386, 16.3311, 0.28", "-43.7692, 39.1954, 15.8024, 0.83", "-46.9428, 44.8434, 14.7512, 0.28", "-47.9046, 46.6012, 14.3748, 0.83", "-48.8487, 48.3728, 13.9652, 0.28", "-49.8839, 50.4258, 13.385, 0.83", "-51.4129, 53.3227, 12.478, 0.28", "-51.8106, 54.073, 12.1781, 0.56", "-53.0657, 56.1503, 10.9259, 0.28", "-53.333, 56.5675, 10.6295, 0.56", "-54.6858, 58.6979, 8.89657, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-15.7758, -15.2151, 4.92963, 1.11", "-17.6692, -18.1782, 1.04326, 1.11", "-18.2784, -19.1316, -0.207218, 1.11", "-20.2701, -22.2486, -4.29534, 1.11", "-21.7976, -24.6391, -7.43074, 1.11", "-23.7649, -27.7178, -11.4688, 1.11", "-25.0155, -29.675, -14.0358, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-103.383, -324.382, 38.8026, 0.56", "-105.988, -326.082, 40.5763, 0.56", "-108.463, -327.697, 42.2616, 0.28", "-109.488, -328.365, 42.9595, 0.56" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-103.383, -324.382, 38.8026, 0.56", "-104.151, -326.24, 40.3151, 0.56", "-105.14, -328.813, 42.3051, 0.56", "-105.534, -329.741, 42.9782, 0.83", "-106.608, -331.773, 44.3058, 0.56", "-107.272, -332.883, 44.9263, 0.56", "-108.884, -335.577, 46.432, 0.56", "-109.451, -336.358, 46.8149, 0.56", "-110.351, -337.525, 47.2317, 0.56", "-111.978, -339.707, 47.9974, 0.28", "-112.883, -341.014, 48.3952, 0.83" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "11.7169, -48.1147, 36.8545, 0.56", "11.6585, -49.7428, 38.6334, 0.56", "11.6343, -51.3393, 40.4608, 0.56", "11.587, -54.4507, 44.0219, 0.56", "11.5704, -55.5442, 45.2735, 0.56", "11.5523, -56.7346, 46.6359, 0.56", "11.5124, -59.3535, 49.6334, 0.56", "11.6018, -60.6193, 51.1702, 0.56" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "11.7169, -48.1147, 36.8545, 0.83", "13.3972, -52.8543, 33.4519, 0.83", "13.7578, -54.6205, 32.5064, 0.83", "14.4638, -59.2851, 30.4446, 0.56", "14.6049, -60.2074, 30.0859, 0.56", "15.0678, -62.7316, 29.1791, 0.56", "15.5809, -64.865, 28.4156, 0.56", "16.7668, -69.081, 27.3379, 0.56", "17.5429, -71.6311, 26.5392, 0.56", "18.1178, -73.3055, 25.9675, 0.56", "18.8021, -74.8808, 25.3764, 0.56", "20.0571, -77.177, 24.4458, 0.56", "20.4838, -77.8122, 24.1519, 0.56", "23.6365, -81.9358, 22.0972, 0.83", "24.5297, -83.2828, 21.4824, 0.28", "25.8698, -85.9966, 20.2378, 0.83", "26.3806, -87.423, 19.6362, 0.56", "26.8534, -89.2769, 18.956, 0.56", "27.1462, -90.6231, 18.518, 0.28", "27.6932, -93.3332, 17.7581, 0.56", "28.3651, -96.762, 16.6498, 0.56", "28.8328, -98.8221, 15.9771, 0.56", "29.3354, -100.733, 15.4407, 0.28", "29.706, -101.841, 15.1814, 0.83", "30.7994, -104.188, 14.819, 0.28", "31.4248, -105.245, 14.7479, 1.11", "33.0072, -107.63, 14.8479, 0.56", "34.8133, -110.226, 15.0591, 0.56", "35.8837, -111.719, 15.121, 0.83", "36.99, -113.361, 15.223, 0.28", "37.2753, -113.844, 15.264, 0.56", "37.871, -114.992, 15.2713, 0.28", "38.7162, -116.737, 15.1312, 0.56", "40.2567, -119.769, 14.6821, 1.11", "41.5655, -122.668, 14.111, 0.28", "42.107, -123.982, 13.7296, 0.56", "42.9446, -126.153, 13.0315, 0.28", "43.3611, -127.336, 12.7026, 0.56", "43.6124, -128.197, 12.5205, 0.56", "44.1723, -129.927, 12.2613, 0.83", "44.7677, -131.627, 11.952, 0.28", "44.9375, -132.184, 11.8761, 0.56", "45.6915, -135.071, 11.6002, 0.28", "46.0816, -136.574, 11.498, 1.39", "47.8222, -142.31, 11.2657, 0.28", "48.2514, -143.532, 11.256, 0.83", "49.1136, -145.635, 11.2626, 0.28", "49.3431, -146.174, 11.2562, 0.56", "50.3557, -148.486, 11.1855, 0.28", "51.8022, -151.532, 11.1298, 0.28", "52.3764, -152.749, 11.1341, 1.11", "53.6484, -155.377, 11.0868, 0.28", "54.4841, -157.017, 11.0226, 0.28", "54.6117, -157.28, 11.0087, 0.56", "55.6066, -159.569, 10.8474, 0.28", "56.0469, -160.674, 10.7832, 1.39", "57.0624, -163.249, 10.6758, 0.28", "57.6585, -164.674, 10.5816, 1.39", "58.4891, -166.423, 10.402, 0.28", "58.9912, -167.459, 10.2673, 0.28", "60.2471, -169.859, 9.88001, 0.28", "60.8833, -170.962, 9.67417, 0.83", "62.4777, -173.542, 9.13005, 0.28", "62.6928, -173.875, 9.05585, 0.56", "63.3256, -174.804, 8.85013, 0.56", "64.3913, -176.243, 8.55376, 0.28", "64.9288, -176.919, 8.45038, 0.28", "65.6675, -177.95, 8.37293, 1.39", "66.8654, -179.803, 8.37029, 0.28", "67.5581, -181.065, 8.39778, 0.28", "67.9929, -182.017, 8.43623, 0.83", "68.6774, -184.179, 8.64929, 0.28", "69.3853, -186.727, 9.0329, 0.28", "69.4481, -187.009, 9.08905, 0.56", "69.7919, -188.909, 9.59215, 0.28", "69.8864, -189.523, 9.77652, 0.83", "70.2415, -191.651, 10.342, 0.28", "70.548, -193.421, 10.7396, 0.28", "70.8021, -194.575, 10.9558, 1.39", "71.1509, -196.552, 11.2136, 0.28", "71.2378, -197.126, 11.2592, 0.83", "71.7142, -200.698, 11.3422, 0.28", "71.8541, -202.551, 11.2876, 0.28", "71.8705, -203.416, 11.2496, 0.83", "71.8597, -206.565, 11.0437, 0.28", "71.8514, -207.438, 10.9687, 1.67", "71.8732, -210.153, 10.7352, 0.28", "71.9701, -213.342, 10.5848, 0.28", "72.0814, -214.505, 10.5177, 0.56", "72.3337, -216.277, 10.4632, 0.28", "72.4732, -217.326, 10.4813, 0.56", "72.6047, -218.625, 10.5325, 0.28", "72.7939, -220.724, 10.6524, 0.56", "73.1306, -224.12, 10.8703, 0.28", "73.2913, -226.018, 11.0012, 1.11", "73.9624, -236.568, 11.7824, 0.28", "74.006, -237.773, 11.8644, 0.83" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "90.4973, 45.1722, -41.976, 0.28", "92.2248, 47.9813, -45.4659, 0.28", "92.5508, 48.5195, -46.1214, 0.83", "94.6959, 52.3526, -50.2282, 0.28", "94.9774, 52.881, -50.7455, 0.56", "97.0172, 56.5701, -54.5898, 0.28", "98.067, 58.2379, -56.3446, 0.28", "98.3397, 58.6141, -56.7727, 0.83", "99.4848, 59.9522, -58.4091, 0.28", "99.809, 60.2967, -58.8378, 0.83", "102.82, 63.202, -62.6255, 0.56", "105.205, 65.2844, -65.4124, 0.28", "106.175, 66.0606, -66.4906, 0.83", "110.099, 69.1385, -70.8411, 0.56", "112.562, 70.9531, -73.4749, 0.28", "113.633, 71.7311, -74.5386, 0.28", "114.054, 72.0188, -74.9187, 0.56", "117.322, 74.069, -77.9974, 0.28", "118.546, 74.7795, -79.0924, 0.28", "119.752, 75.4634, -80.0451, 0.83", "120.869, 76.0532, -80.9002, 0.83", "124.295, 77.8515, -83.6521, 0.28", "126.373, 78.898, -85.3485, 1.11", "127.844, 79.572, -86.5481, 0.28", "129.148, 80.1312, -87.6653, 0.28", "129.744, 80.4182, -88.2377, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "90.4973, 45.1722, -41.976, 0.56", "92.294, 43.8627, -41.3067, 0.56", "93.6253, 42.5793, -40.7308, 0.28", "94.6499, 41.2673, -40.2607, 1.11", "96.5394, 38.3562, -39.1363, 0.28", "97.4251, 36.717, -38.6087, 1.11", "98.8898, 33.7954, -37.771, 0.28", "100.257, 30.6362, -36.9615, 0.28", "101.522, 27.4866, -36.2107, 0.28", "102.627, 24.9243, -35.6596, 1.39", "104.588, 20.8643, -34.9174, 0.28", "105.303, 19.6291, -34.6964, 1.11", "107.515, 16.4151, -34.1839, 0.28", "107.906, 15.9314, -34.0901, 0.83", "111.444, 12.2113, -33.2782, 0.28", "112.17, 11.5214, -33.1141, 0.83", "114.316, 9.61785, -32.4708, 0.28", "114.609, 9.35312, -32.3738, 0.56", "116.207, 7.86219, -32.0219, 0.28", "116.656, 7.41482, -31.9789, 0.56", "117.96, 6.07987, -32.1548, 0.28", "118.973, 5.09971, -32.424, 0.56", "119.363, 4.72198, -32.5805, 0.56", "123.022, 1.32712, -34.3514, 0.28", "123.043, 1.30909, -34.3643, 0.56", "124.825, -0.0595564, -35.541, 0.28", "125.423, -0.461989, -35.9979, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "126.547, 40.504, -106.344, 0.28", "131.113, 43.3457, -110.369, 0.28", "131.873, 43.8504, -111.031, 1.11", "135.649, 46.5834, -114.308, 0.28", "136.054, 46.9202, -114.65, 0.83", "139.481, 49.9851, -117.468, 0.28", "139.736, 50.2246, -117.671, 0.56", "140.622, 51.2571, -118.364, 0.28", "141.242, 52.073, -118.872, 1.67", "144.096, 56.2589, -121.153, 0.28", "144.519, 56.8687, -121.479, 0.56", "145.943, 58.9423, -122.486, 0.28", "146.424, 59.6388, -122.838, 1.11", "148.079, 62.1204, -124.181, 0.28", "148.494, 62.721, -124.534, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "126.547, 40.504, -106.344, 0.28", "127.658, 41.8157, -106.122, 0.28", "128.173, 42.356, -105.819, 0.83", "129.509, 43.4183, -104.849, 0.28", "130.065, 43.7667, -104.42, 0.56", "131.993, 44.6912, -103.306, 0.28", "132.338, 44.8172, -103.147, 0.56", "135.977, 45.1606, -101.903, 0.56", "137.519, 45.0654, -101.431, 0.28", "138.115, 44.9659, -101.282, 1.11", "141.482, 44.1486, -100.548, 0.28", "142.07, 43.9569, -100.464, 0.56", "144.887, 43.1139, -100.46, 0.28", "146.607, 42.6488, -100.855, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "87.8987, -123.262, -47.4212, 0.83", "93.7308, -131.794, -49.5373, 0.83", "95.716, -134.477, -50.1694, 0.28", "96.9954, -136.144, -50.5718, 1.39", "99.6117, -139.322, -51.3603, 0.28", "100.727, -140.607, -51.6622, 0.28", "102.238, -142.272, -52.0802, 0.28", "102.91, -142.989, -52.3726, 0.28", "103.386, -143.483, -52.4947, 0.56", "105.429, -145.636, -52.8023, 0.28", "106.525, -146.816, -52.8867, 1.39", "109.235, -150.137, -53.1956, 0.28", "110.078, -151.41, -53.3223, 0.83", "110.972, -152.993, -53.5524, 0.28", "112.058, -155.182, -53.9238, 0.28", "112.517, -156.302, -54.1722, 0.83", "113.687, -159.487, -55.0202, 0.28", "114.253, -161.049, -55.5183, 1.11", "115.74, -164.825, -56.9029, 0.28", "116.348, -166.27, -57.4879, 1.39", "117.374, -168.477, -58.4346, 0.28", "117.76, -169.127, -58.7162, 0.56", "120.068, -171.843, -59.8755, 0.28", "120.787, -172.518, -60.1677, 0.83", "123.369, -174.19, -60.8761, 0.28", "124.411, -174.667, -61.0887, 1.39", "127.76, -175.621, -61.5741, 0.28", "130.816, -176.106, -61.9118, 0.28", "131.097, -176.116, -61.9263, 0.56", "135.022, -176.017, -62.009, 0.28", "136.172, -175.944, -61.9975, 0.56", "138.782, -175.826, -61.9666, 0.28", "140.247, -175.85, -61.9192, 1.11", "142.401, -176.024, -61.8196, 0.28", "143.383, -176.196, -61.7648, 0.56", "147.814, -177.392, -61.4698, 0.28", "149.356, -177.912, -61.3599, 1.39", "152.551, -179.236, -61.1243, 0.28", "153.812, -179.841, -61.0675, 0.56", "156.425, -181.291, -60.958, 0.28", "157.168, -181.765, -60.9103, 0.56", "158.641, -182.824, -60.7826, 0.28", "160.063, -183.935, -60.6521, 0.83", "161.969, -185.518, -60.4846, 0.28", "163.398, -186.784, -60.3427, 1.39", "165.315, -188.596, -60.1241, 0.28", "166.707, -190.054, -59.9778, 0.28", "167.854, -191.333, -59.7977, 0.28", "168.68, -192.283, -59.5986, 0.83", "169.351, -193.039, -59.398, 0.28", "170.056, -193.769, -59.2149, 0.83", "171.114, -194.82, -58.7549, 0.28", "172.627, -196.328, -58.0172, 0.83", "174.398, -197.937, -57.1082, 0.28", "175.396, -198.818, -56.5567, 0.28", "177.962, -200.909, -55.0898, 0.28", "180.549, -202.807, -53.6136, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "87.8987, -123.262, -47.4212, 0.56", "92.3853, -129.541, -34.876, 0.56", "93.1047, -130.849, -32.8043, 0.28", "93.5791, -131.846, -31.4214, 0.28", "93.8971, -132.557, -30.538, 0.56", "95.2957, -135.843, -26.7584, 0.28", "95.7643, -136.92, -25.6647, 1.11", "97.1838, -141.094, -23.1135, 0.28", "97.4261, -141.805, -22.684, 0.56", "98.126, -143.701, -21.6398, 0.28", "98.434, -144.52, -21.2301, 0.83", "99.7422, -147.951, -19.8434, 0.28", "101.13, -151.307, -18.5655, 0.28", "101.617, -152.526, -18.2076, 0.83", "102.588, -155.143, -17.5163, 0.28", "102.751, -155.668, -17.3862, 0.56", "103.479, -158.257, -16.7488, 0.28", "103.552, -158.525, -16.6541, 0.56", "104.084, -160.326, -16.0127, 0.28", "104.22, -160.678, -15.8753, 0.56", "105.536, -163.444, -14.3779, 0.28", "105.879, -164.018, -14.0221, 1.11", "108.471, -168.062, -11.3119, 0.28", "108.754, -168.466, -11.0156, 0.56", "110.496, -170.807, -9.19417, 0.28", "111.979, -172.705, -7.71325, 0.56", "115.745, -177.12, -4.20035, 0.28", "116.403, -177.872, -3.60209, 0.56", "117.47, -179.02, -2.71426, 0.56" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-25.0155, -29.675, -14.0358, 0.56", "-28.1106, -32.5501, -14.8362, 0.56", "-28.9272, -33.4883, -15.1296, 0.56", "-30.5077, -35.2876, -15.6972, 0.56", "-32.4172, -37.2509, -16.3355, 0.83", "-34.9418, -39.5963, -17.1007, 0.83", "-37.4693, -42.0058, -17.9202, 0.83", "-39.1525, -43.9408, -18.7173, 0.56", "-39.8319, -44.8355, -19.0562, 0.56", "-40.904, -46.3338, -19.6107, 0.83", "-41.9096, -47.6862, -19.9951, 0.56", "-43.6484, -49.9331, -20.3649, 0.56", "-45.2853, -52.2972, -20.5521, 0.56", "-46.1733, -53.6499, -20.5802, 0.56", "-46.7371, -54.7027, -20.6239, 0.56", "-47.5096, -56.4783, -20.7927, 0.56", "-48.3965, -58.9724, -21.1205, 1.39", "-49.2343, -61.6692, -21.6211, 0.56", "-50.135, -64.7665, -22.3903, 0.56", "-51.0206, -68.5841, -23.6885, 0.83", "-51.429, -71.0762, -24.6799, 0.56", "-51.6499, -73.1763, -25.6834, 1.11", "-51.9274, -75.68, -27.1352, 0.56", "-52.21, -77.6874, -28.3922, 0.83", "-52.7758, -80.6418, -30.3615, 0.28", "-53.2637, -82.3412, -31.4647, 0.28", "-53.9864, -84.4943, -32.8369, 0.83", "-55.1262, -87.6793, -34.8977, 0.28", "-55.7727, -89.5007, -36.0277, 1.11", "-56.4905, -91.5095, -37.1724, 0.28", "-56.6868, -91.978, -37.4124, 0.83", "-57.7546, -94.2882, -38.6534, 0.28", "-58.2135, -95.2533, -39.1508, 0.83", "-59.5047, -98.0437, -40.577, 0.28", "-60.3823, -99.899, -41.5173, 0.83", "-61.3615, -101.943, -42.4926, 0.28", "-62.7584, -104.876, -43.8207, 0.56", "-63.4252, -106.24, -44.4008, 1.67", "-64.6767, -108.928, -45.4852, 0.28", "-65.3942, -110.677, -46.1407, 0.28", "-65.6636, -111.459, -46.4324, 0.56", "-66.327, -113.915, -47.2738, 0.28", "-66.4999, -114.776, -47.5485, 0.56", "-66.7417, -116.162, -48.0264, 0.28", "-67.0706, -118.505, -48.8392, 1.39", "-67.3799, -121.351, -49.8875, 0.28", "-67.4711, -122.202, -50.2198, 0.56", "-67.5994, -123.513, -50.7586, 0.28", "-67.7577, -124.94, -51.3582, 0.28", "-68.0684, -126.612, -51.868, 0.28", "-68.3594, -127.607, -51.9368, 1.11", "-69.1407, -129.502, -51.7348, 0.28", "-69.1407, -129.502, -51.7348, 0.56", "-70.2971, -131.561, -51.1637, 0.28", "-72.1893, -134.727, -50.1011, 0.83", "-73.7319, -137.117, -49.3356, 0.28", "-74.3407, -138.041, -49.0531, 0.56", "-76.3462, -141.164, -48.1403, 0.28", "-77.2175, -142.558, -47.8253, 1.11", "-78.7449, -145.136, -47.5104, 0.28", "-79.8885, -147.241, -47.5428, 1.11", "-81.2125, -149.912, -47.6846, 0.28", "-81.8762, -151.315, -47.7746, 0.28", "-82.6217, -152.885, -47.9306, 0.56", "-83.7512, -155.198, -48.0938, 0.28", "-84.5316, -156.765, -48.2271, 0.83", "-86.0846, -159.608, -48.3491, 0.28", "-86.5408, -160.341, -48.3821, 0.56", "-87.9505, -162.488, -48.5469, 0.28", "-89.0517, -164.046, -48.6885, 1.11", "-90.8035, -166.317, -49.1643, 0.28", "-91.5235, -167.184, -49.5542, 0.28", "-92.5313, -168.324, -50.2323, 0.56", "-94.3267, -170.467, -51.6465, 0.28", "-95.5893, -172.021, -52.7454, 0.56", "-97.001, -173.926, -54.0856, 1.39", "-99.495, -177.602, -56.4436, 0.28", "-100.172, -178.785, -57.1739, 0.56", "-101.07, -180.571, -58.229, 0.28", "-101.426, -181.441, -58.6864, 0.56", "-102.006, -183.449, -59.6, 0.28", "-102.233, -184.511, -60.0089, 0.83", "-102.659, -187.224, -60.9173, 0.28", "-102.779, -187.983, -61.2088, 0.83", "-103.332, -190.871, -62.4953, 0.28", "-103.786, -193.043, -63.6068, 0.56", "-104.378, -195.552, -65.001, 0.28", "-104.573, -196.322, -65.4476, 0.83", "-105.956, -201.44, -68.4182, 0.28", "-106.526, -203.536, -69.6566, 1.94", "-107.478, -206.793, -71.6265, 0.28", "-107.633, -207.322, -71.9563, 0.56", "-108.258, -209.321, -73.028, 0.28", "-108.472, -209.901, -73.2134, 0.56", "-109.014, -211.111, -73.182, 0.28", "-109.372, -211.884, -73.0216, 0.56", "-110.268, -213.743, -72.4619, 0.28", "-112.38, -217.953, -71.1705, 1.39", "-114.653, -222.372, -69.8977, 0.28", "-115.865, -224.749, -69.3516, 0.83", "-116.956, -226.852, -68.9494, 0.28", "-117.612, -228.131, -68.8099, 0.83", "-119.53, -231.998, -68.7054, 0.28", "-120.286, -233.627, -68.8792, 1.11", "-121.851, -237.264, -69.6483, 0.28", "-122.192, -238.09, -69.8501, 0.56", "-123.639, -241.549, -70.9618, 0.28", "-124.406, -243.338, -71.6212, 0.28", "-124.828, -244.126, -72.0529, 1.11", "-126.71, -247.119, -73.9438, 0.28", "-127.924, -248.772, -75.2901, 0.56", "-129.697, -250.926, -77.2347, 0.28", "-130.486, -251.742, -78.0588, 1.11", "-136.046, -256.905, -83.7591, 0.28", "-136.532, -257.311, -84.232, 0.83", "-139.24, -259.437, -86.9117, 0.28", "-140.629, -260.51, -88.362, 0.56", "-141.182, -260.93, -88.9194, 0.56", "-142.792, -262.086, -90.5569, 0.56", "-144.368, -262.989, -91.8678, 0.56" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-25.0155, -29.675, -14.0358, 0.83", "-24.763, -32.3161, -13.0167, 0.83", "-24.2663, -35.2121, -12.2923, 0.83", "-24.0271, -37.3924, -11.8561, 0.56", "-23.8311, -41.055, -11.2359, 0.83", "-23.8492, -43.1396, -10.9252, 0.56", "-23.9555, -45.4455, -10.6081, 0.56", "-24.5909, -51.9239, -9.85137, 0.83", "-24.8416, -54.405, -9.55913, 1.11", "-24.9385, -56.4912, -9.31525, 0.83", "-24.8909, -58.5719, -9.03966, 0.83", "-24.851, -59.7683, -8.87153, 0.83", "-24.7513, -63.2701, -8.45242, 0.83", "-24.738, -66.5111, -8.03032, 0.83", "-24.7367, -68.1969, -7.81422, 0.56", "-24.8804, -70.4101, -7.58075, 0.56", "-25.065, -71.846, -7.44005, 0.56", "-25.5349, -74.292, -7.25496, 0.83", "-26.1912, -76.8936, -7.13737, 0.56", "-26.8705, -79.5018, -6.8005, 0.83", "-27.4412, -82.1188, -6.22314, 0.56", "-27.7374, -83.9027, -5.76714, 0.56", "-28.0114, -86.4254, -5.11464, 0.28", "-28.1005, -87.8285, -4.72702, 0.83", "-28.1313, -92.395, -3.5156, 0.28", "-28.0975, -93.9448, -3.14274, 0.56", "-27.9841, -96.4511, -2.52211, 0.28", "-27.8725, -100.479, -1.59211, 0.83", "-27.9088, -103.044, -1.03526, 0.56", "-27.9494, -106.029, -0.467508, 1.11", "-27.8833, -108.065, -0.175474, 0.56", "-27.6347, -111.141, 0.27276, 0.56", "-27.5168, -112.05, 0.435222, 0.56", "-27.1456, -114.648, 0.962856, 0.83", "-26.8897, -116.722, 1.44013, 0.28", "-26.657, -118.89, 2.06171, 0.83", "-26.5973, -120.552, 2.58898, 0.28", "-26.6472, -121.571, 2.85218, 0.56", "-26.8402, -125.004, 3.58923, 0.83", "-27.0298, -127.711, 3.98823, 0.28", "-27.2196, -129.184, 4.1199, 0.56", "-27.7159, -132.489, 4.25186, 0.83", "-28.1619, -135.929, 4.19157, 0.28", "-28.3983, -139.501, 3.72442, 0.83", "-28.4266, -141.602, 3.16026, 0.28", "-28.3696, -142.72, 2.75994, 0.28", "-28.2172, -143.865, 2.33856, 0.28", "-28.0048, -144.979, 1.98111, 1.11", "-27.3637, -148.345, 1.29714, 0.28", "-27.2638, -148.992, 1.20669, 0.56", "-27.0887, -150.916, 0.995886, 0.56", "-26.8244, -153.937, 0.67271, 0.28", "-26.5763, -156.911, 0.381207, 0.56", "-26.4227, -159.265, 0.266977, 1.67", "-26.3586, -161.303, 0.283195, 0.56", "-26.2862, -164.932, 0.354712, 0.28", "-26.2543, -166.968, 0.415524, 1.11", "-26.1506, -168.657, 0.568573, 0.83", "-25.8152, -171.256, 1.01829, 0.28", "-25.6836, -172.128, 1.26971, 0.56", "-25.5015, -173.465, 1.8724, 0.28", "-25.3594, -175.038, 2.80808, 0.28", "-25.1893, -177.936, 4.6302, 0.28", "-25.1495, -178.816, 5.18787, 0.83", "-24.9933, -180.324, 6.13944, 0.28", "-24.6907, -182.511, 7.53441, 0.83", "-24.4549, -184.319, 8.65577, 0.28", "-24.2813, -185.905, 9.54503, 0.28", "-23.95, -188.143, 10.6563, 1.39", "-23.3732, -191.108, 11.8486, 0.28", "-23.1869, -192.091, 12.1274, 0.28", "-22.8894, -193.891, 12.4628, 0.56", "-22.6402, -195.896, 12.7087, 0.83", "-22.5131, -198.875, 13.0425, 0.28", "-22.5114, -201.008, 13.2349, 0.56", "-22.6694, -203.502, 13.4026, 0.56", "-22.8878, -205.45, 13.547, 0.28", "-23.1492, -207.228, 13.6044, 1.39", "-23.6054, -209.634, 13.5847, 0.28", "-23.79, -210.475, 13.5144, 0.56", "-24.1852, -212.494, 13.3016, 0.28", "-24.3327, -213.927, 13.136, 0.56", "-24.4914, -216.654, 12.8216, 0.28", "-24.5103, -217.241, 12.757, 0.83", "-24.4662, -219.127, 12.6468, 0.28", "-24.3594, -221.171, 12.6777, 0.83", "-24.0498, -224.337, 12.9594, 0.56", "-23.7485, -226.636, 13.2937, 0.28", "-23.5932, -227.809, 13.522, 1.11", "-23.4097, -231.043, 14.208, 0.28", "-23.4141, -232.182, 14.4708, 0.83", "-23.4794, -234.53, 14.9876, 0.28", "-23.6562, -237.395, 15.5191, 0.28", "-23.7268, -238.415, 15.7108, 0.56", "-24.2889, -243.002, 16.5002, 0.28", "-24.3877, -243.404, 16.5498, 0.56" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-112.883, -341.014, 48.3952, 0.28", "-110.277, -343.114, 49.2612, 0.28", "-109.846, -343.461, 49.4045, 0.56", "-108.556, -344.501, 49.8331, 0.28", "-108.251, -344.747, 49.9347, 0.56" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-112.883, -341.014, 48.3952, 0.56", "-114.685, -344.439, 48.3879, 0.56", "-115.447, -345.792, 48.384, 0.56", "-116.309, -347.215, 48.3795, 0.56", "-117.431, -349.104, 48.221, 0.56", "-118.603, -351.174, 47.9629, 0.28", "-120.139, -353.969, 47.5262, 0.56", "-120.948, -355.499, 47.1612, 0.28", "-121.475, -356.633, 46.8454, 0.83", "-122.702, -359.875, 45.9689, 0.56", "-123.48, -362.501, 45.1787, 0.56", "-123.638, -363.654, 44.8328, 0.28", "-123.66, -366.061, 44.0084, 0.28", "-123.56, -367.811, 43.3721, 0.56", "-123.227, -370.164, 42.5298, 1.39", "-122.589, -372.749, 41.582, 0.56", "-121.766, -375.691, 40.4032, 0.56", "-121.02, -378.071, 39.46, 0.28", "-120.668, -379.133, 39.0477, 0.28", "-120.293, -380.067, 38.7467, 0.83", "-119.378, -382.154, 38.2421, 0.28", "-118.238, -384.805, 37.9525, 0.28", "-117.441, -386.74, 37.898, 0.28", "-116.837, -388.178, 37.963, 1.11", "-115.613, -391.307, 38.154, 0.28", "-115.139, -392.792, 38.241, 0.83", "-114.814, -394.022, 38.3244, 0.28", "-114.254, -396.044, 38.441, 0.28", "-113.895, -397.754, 38.4978, 0.28", "-113.693, -398.956, 38.4811, 2.22", "-113.319, -402.294, 38.1111, 0.28", "-113.285, -402.944, 38.0376, 0.56" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-113.285, -402.944, 38.0376, 0.28", "-112.68, -406.115, 37.3434, 0.28", "-112.487, -407.126, 37.1221, 0.56", "-111.956, -409.905, 36.5136, 0.28", "-111.881, -410.297, 36.4277, 0.56", "-111.258, -413.562, 35.713, 0.28", "-111.137, -414.194, 35.5746, 0.56" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-113.285, -402.944, 38.0376, 0.28", "-114.66, -404.771, 37.9771, 0.28", "-115.212, -405.486, 37.8962, 0.56", "-116.704, -407.233, 37.7658, 0.28", "-117.536, -408.205, 37.7118, 0.56", "-118.75, -409.671, 37.5658, 0.28", "-120.02, -411.682, 37.4349, 0.28", "-120.977, -413.579, 37.3743, 1.11", "-122.175, -416.856, 37.2418, 0.28", "-122.391, -417.702, 37.2044, 0.28", "-122.768, -419.615, 37.1201, 0.83", "-123.386, -425.291, 36.8913, 0.28", "-123.38, -425.942, 36.862, 0.56", "-123.029, -429.862, 36.771, 0.28", "-122.873, -430.885, 36.7254, 0.56", "-122.646, -432.36, 36.6775, 0.56", "-122.302, -434.611, 36.6669, 0.28", "-121.889, -437.482, 36.3781, 0.28", "-121.754, -438.053, 36.3325, 0.83" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_23", "dend_10", "dend_9", "dend_0", "apic_12", "apic_1", "dend_27", "dend_24", "dend_18", "dend_11", "dend_6", "dend_1", "apic_14", "apic_13", "apic_5", "apic_2", "dend_26", "dend_25", "dend_20", "dend_19", "dend_15", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "apic_11", "apic_6", "apic_4", "apic_3", "dend_22", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_4", "dend_3", "apic_10", "apic_7", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_23", "dend_10", "dend_9", "dend_0", "apic_12", "apic_1", "dend_27", "dend_24", "dend_18", "dend_11", "dend_6", "dend_1", "apic_14", "apic_13", "apic_5", "apic_2", "dend_26", "dend_25", "dend_20", "dend_19", "dend_15", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "apic_11", "apic_6", "apic_4", "apic_3", "dend_22", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_4", "dend_3", "apic_10", "apic_7", "apic_9", "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_12", "apic_12", "apic_12", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_11", "apic_11", "apic_11", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_10", "apic_10", "apic_10", "apic_10", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L23_LBC_e6e8f83407_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_12, id: apic_12, parent: apic_0
create apic_12
public apic_12
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_14, id: apic_14, parent: apic_12
create apic_14
public apic_14
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: apic_5, id: apic_5, parent: apic_1
create apic_5
public apic_5
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_11, id: apic_11, parent: apic_5
create apic_11
public apic_11
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_10, id: apic_10, parent: apic_6
create apic_10
public apic_10
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, axon_0, axon_0, apic_12, apic_12, apic_12, apic_1, apic_1, apic_1, apic_1, apic_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_11, apic_11, apic_11, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4999990524732351)
    connect dend_23(0), soma_0(0.4999990524732351)
    connect dend_10(0), soma_0(0.4999990524732351)
    connect dend_9(0), soma_0(0.4999990524732351)
    connect dend_0(0), soma_0(0.4999990524732351)
    connect axon_0(0), soma_0(1.0)
    connect apic_12(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_14(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect apic_5(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_11(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_10(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.56398, 12.1856, -3.45915, 3.25378 ) }
    soma_0 { pt3dadd( -2.26706, 10.9606, -3.11058, 4.92468 ) }
    soma_0 { pt3dadd( -1.97014, 9.73565, -2.76202, 6.49677 ) }
    soma_0 { pt3dadd( -1.67322, 8.51066, -2.41345, 7.93038 ) }
    soma_0 { pt3dadd( -1.3763, 7.28567, -2.06488, 8.78195 ) }
    soma_0 { pt3dadd( -1.07938, 6.06068, -1.71632, 9.51699 ) }
    soma_0 { pt3dadd( -0.782463, 4.83569, -1.36775, 10.3263 ) }
    soma_0 { pt3dadd( -0.485543, 3.6107, -1.01918, 11.1493 ) }
    soma_0 { pt3dadd( -0.188623, 2.38571, -0.670618, 11.9011 ) }
    soma_0 { pt3dadd( 0.108296, 1.16072, -0.322051, 12.0825 ) }
    soma_0 { pt3dadd( 0.405216, -0.0642733, 0.026515, 12.1848 ) }
    soma_0 { pt3dadd( 0.702136, -1.28926, 0.375081, 12.2225 ) }
    soma_0 { pt3dadd( 0.999056, -2.51425, 0.723648, 11.698 ) }
    soma_0 { pt3dadd( 1.29598, -3.73924, 1.07221, 11.5084 ) }
    soma_0 { pt3dadd( 1.5929, -4.96423, 1.42078, 11.8466 ) }
    soma_0 { pt3dadd( 1.88982, -6.18922, 1.76935, 11.6542 ) }
    soma_0 { pt3dadd( 2.18674, -7.41421, 2.11791, 11.2017 ) }
    soma_0 { pt3dadd( 2.48366, -8.6392, 2.46648, 10.0847 ) }
    soma_0 { pt3dadd( 2.78057, -9.86419, 2.81505, 8.25314 ) }
    soma_0 { pt3dadd( 3.07749, -11.0892, 3.16361, 6.3237 ) }
    soma_0 { pt3dadd( 3.37441, -12.3142, 3.51218, 3.70524 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 2.77471, -11.6989, 13.4707, 3.61 ) }
    apic_0 { pt3dadd( 2.63478, -13.1398, 13.3152, 3.61 ) }
    apic_0 { pt3dadd( 2.22995, -17.3085, 12.8653, 3.06 ) }
    apic_0 { pt3dadd( 1.89507, -20.7569, 12.4932, 3.06 ) }
    apic_0 { pt3dadd( 1.56279, -24.1786, 12.1239, 2.78 ) }
    apic_0 { pt3dadd( 1.25468, -27.3513, 11.7815, 2.78 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 27/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -4.14529, 12.4721, -7.22925, 2.5 ) }
    dend_23 { pt3dadd( -5.0014, 13.6566, -6.34662, 2.5 ) }
    dend_23 { pt3dadd( -9.2906, 18.4813, -2.74838, 1.39 ) }
    dend_23 { pt3dadd( -10.7052, 20.0725, -1.56172, 1.11 ) }
    dend_23 { pt3dadd( -12.4868, 22.0765, -0.0671345, 0.83 ) }
    dend_23 { pt3dadd( -13.1861, 22.8631, 0.519512, 0.83 ) }
    dend_23 { pt3dadd( -14.5717, 24.4218, 1.68196, 1.39 ) }
    dend_23 { pt3dadd( -15.8356, 25.6, 2.5141, 1.39 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 35/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.59471, -1.90235, -11.6093, 3.33 ) }
    dend_10 { pt3dadd( 6.86811, -1.95763, -11.5671, 3.33 ) }
    dend_10 { pt3dadd( 8.59196, -2.30615, -11.3011, 2.5 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 38/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -1.40529, -1.60835, -18.0493, 1.11 ) }
    dend_9 { pt3dadd( -3.85094, -2.45913, -17.4849, 1.11 ) }
    dend_9 { pt3dadd( -7.25704, -3.48442, -17.2111, 1.11 ) }
    dend_9 { pt3dadd( -9.23901, -4.17, -17.0786, 1.11 ) }
    dend_9 { pt3dadd( -12.1767, -5.52516, -16.8093, 0.83 ) }
    dend_9 { pt3dadd( -14.8421, -6.89619, -16.9446, 0.83 ) }
    dend_9 { pt3dadd( -18.2199, -8.72478, -17.436, 1.11 ) }
    dend_9 { pt3dadd( -21.3529, -10.5901, -18.4137, 0.83 ) }
    dend_9 { pt3dadd( -24.2154, -12.2886, -19.6383, 0.83 ) }
    dend_9 { pt3dadd( -28.4832, -14.461, -21.6721, 0.83 ) }
    dend_9 { pt3dadd( -34.8623, -17.2455, -24.8828, 1.11 ) }
    dend_9 { pt3dadd( -36.7315, -18.0012, -25.8841, 0.56 ) }
    dend_9 { pt3dadd( -39.146, -18.8997, -27.153, 1.11 ) }
    dend_9 { pt3dadd( -41.8587, -19.7115, -28.5209, 0.56 ) }
    dend_9 { pt3dadd( -44.9968, -20.1773, -30.0852, 0.56 ) }
    dend_9 { pt3dadd( -46.5413, -20.1798, -30.7198, 0.56 ) }
    dend_9 { pt3dadd( -49.3254, -19.9773, -31.2915, 1.11 ) }
    dend_9 { pt3dadd( -51.5334, -19.631, -31.7366, 0.28 ) }
    dend_9 { pt3dadd( -52.6322, -19.4076, -31.9469, 0.28 ) }
    dend_9 { pt3dadd( -55.2352, -18.8154, -32.6391, 1.11 ) }
    dend_9 { pt3dadd( -57.112, -18.4021, -33.2764, 0.28 ) }
    dend_9 { pt3dadd( -59.0475, -17.9506, -33.9877, 0.83 ) }
    dend_9 { pt3dadd( -62.5173, -17.0258, -35.4075, 0.56 ) }
    dend_9 { pt3dadd( -64.9864, -16.346, -36.5339, 0.56 ) }
    dend_9 { pt3dadd( -67.79, -15.6401, -37.9573, 0.83 ) }
    dend_9 { pt3dadd( -69.6258, -15.2243, -39.0434, 0.28 ) }
    dend_9 { pt3dadd( -71.6614, -14.7527, -40.4138, 0.56 ) }
    dend_9 { pt3dadd( -73.2188, -14.3908, -41.7664, 0.28 ) }
    dend_9 { pt3dadd( -74.3273, -14.1325, -42.8809, 1.39 ) }
    dend_9 { pt3dadd( -74.7168, -14.0248, -43.3468, 1.39 ) }
    dend_9 { pt3dadd( -76.0441, -13.6234, -45.0605, 0.28 ) }
    dend_9 { pt3dadd( -76.9992, -13.3754, -46.3461, 1.39 ) }
    dend_9 { pt3dadd( -80.3409, -12.8109, -51.0295, 0.28 ) }
    dend_9 { pt3dadd( -81.0468, -12.7922, -51.9136, 0.28 ) }
    dend_9 { pt3dadd( -82.5449, -12.9132, -53.5961, 0.28 ) }
    dend_9 { pt3dadd( -82.7509, -12.9426, -53.7861, 0.56 ) }
    dend_9 { pt3dadd( -85.2521, -13.4188, -55.583, 0.28 ) }
    dend_9 { pt3dadd( -86.8316, -13.8198, -56.4783, 1.67 ) }
    dend_9 { pt3dadd( -89.3627, -14.5666, -57.5586, 0.28 ) }
    dend_9 { pt3dadd( -90.7097, -14.9855, -58.0932, 0.56 ) }
    dend_9 { pt3dadd( -94.2542, -16.164, -59.4021, 0.28 ) }
    dend_9 { pt3dadd( -95.7622, -16.681, -60.0078, 0.83 ) }
    dend_9 { pt3dadd( -99.0743, -17.86, -61.3685, 0.28 ) }
    dend_9 { pt3dadd( -100.06, -18.2549, -61.8216, 0.83 ) }
    dend_9 { pt3dadd( -101.551, -18.9072, -62.668, 0.28 ) }
    dend_9 { pt3dadd( -102.548, -19.3234, -63.313, 0.56 ) }
    dend_9 { pt3dadd( -105.712, -20.6128, -65.5102, 0.28 ) }
    dend_9 { pt3dadd( -106.524, -20.8629, -66.0447, 1.67 ) }
    dend_9 { pt3dadd( -110.128, -21.6902, -68.2, 0.28 ) }
    dend_9 { pt3dadd( -112.768, -22.1698, -69.6053, 0.83 ) }
    dend_9 { pt3dadd( -116.837, -22.7168, -71.5091, 0.28 ) }
    dend_9 { pt3dadd( -117.869, -22.7906, -71.9289, 0.83 ) }
    dend_9 { pt3dadd( -122.045, -22.8664, -73.2909, 0.28 ) }
    dend_9 { pt3dadd( -123.668, -22.8289, -73.7777, 0.83 ) }
    dend_9 { pt3dadd( -125.745, -22.653, -74.2669, 0.28 ) }
    dend_9 { pt3dadd( -126.138, -22.6155, -74.3246, 0.56 ) }
    dend_9 { pt3dadd( -130.177, -22.2703, -74.6674, 0.28 ) }
    dend_9 { pt3dadd( -131.849, -22.1467, -74.8268, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 96/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.73529, -10.7539, 1.49075, 3.06 ) }
    dend_0 { pt3dadd( -2.52807, -11.746, 1.6201, 2.78 ) }
    dend_0 { pt3dadd( -4.49187, -14.2037, 1.94052, 2.78 ) }
    dend_0 { pt3dadd( -6.25102, -16.4053, 2.22755, 2.78 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 0/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.37441, -12.3142, 3.51218, 0.83 ) }
    axon_0 { pt3dadd( 6.90787, -26.8921, 3.51218, 0.83 ) }
    axon_0 { pt3dadd( 10.4413, -41.47, 3.51218, 0.83 ) }
    // Section: apic_12, id: apic_12, parent: apic_0 (entry count 3/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 1.25468, -27.3513, 11.7815, 0.83 ) }
    apic_12 { pt3dadd( -2.09216, -30.8275, 7.30183, 0.83 ) }
    apic_12 { pt3dadd( -3.38089, -32.1661, 5.57688, 1.11 ) }
    apic_12 { pt3dadd( -5.13742, -33.9905, 3.22579, 1.39 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 7/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 1.25468, -27.3513, 11.7815, 1.67 ) }
    apic_1 { pt3dadd( 0.96026, -30.1251, 14.3442, 1.67 ) }
    apic_1 { pt3dadd( 0.691973, -32.6526, 16.6795, 1.67 ) }
    apic_1 { pt3dadd( 0.43874, -35.0383, 18.8837, 1.39 ) }
    apic_1 { pt3dadd( 0.207722, -37.2147, 20.8946, 1.39 ) }
    apic_1 { pt3dadd( 0.097224, -38.2557, 21.8564, 1.67 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -15.8356, 25.6, 2.5141, 0.56 ) }
    dend_27 { pt3dadd( -18.4501, 24.0597, 4.10389, 0.56 ) }
    dend_27 { pt3dadd( -20.1894, 23.2542, 5.29166, 0.56 ) }
    dend_27 { pt3dadd( -22.0089, 22.6619, 6.59036, 0.56 ) }
    dend_27 { pt3dadd( -24.1419, 22.1525, 8.12006, 0.56 ) }
    dend_27 { pt3dadd( -25.4416, 21.8432, 9.05659, 0.56 ) }
    dend_27 { pt3dadd( -28.4367, 21.0147, 11.032, 0.56 ) }
    dend_27 { pt3dadd( -30.5498, 20.6494, 12.4077, 0.83 ) }
    dend_27 { pt3dadd( -32.5663, 20.437, 13.7847, 0.83 ) }
    dend_27 { pt3dadd( -33.8555, 20.3355, 14.6249, 0.83 ) }
    dend_27 { pt3dadd( -36.4102, 19.9919, 16.2624, 0.83 ) }
    dend_27 { pt3dadd( -39.1952, 19.5042, 18.0181, 0.83 ) }
    dend_27 { pt3dadd( -43.4728, 18.4199, 20.6734, 0.83 ) }
    dend_27 { pt3dadd( -46.6241, 17.4125, 22.6304, 0.83 ) }
    dend_27 { pt3dadd( -49.0676, 16.5233, 24.166, 0.56 ) }
    dend_27 { pt3dadd( -52.5303, 15.1006, 26.2414, 0.56 ) }
    dend_27 { pt3dadd( -53.6576, 14.6167, 26.9276, 0.56 ) }
    dend_27 { pt3dadd( -55.4664, 13.8109, 28.114, 0.56 ) }
    dend_27 { pt3dadd( -56.3179, 13.3686, 28.6862, 0.56 ) }
    dend_27 { pt3dadd( -57.8499, 12.5459, 29.7362, 0.83 ) }
    dend_27 { pt3dadd( -60.7217, 11.1583, 31.7893, 0.56 ) }
    dend_27 { pt3dadd( -62.524, 10.4314, 33.0338, 0.56 ) }
    dend_27 { pt3dadd( -65.4436, 9.18288, 35.2066, 0.56 ) }
    dend_27 { pt3dadd( -68.3233, 8.05687, 37.4772, 0.56 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 37/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -15.8356, 25.6, 2.5141, 0.56 ) }
    dend_24 { pt3dadd( -18.6808, 24.961, 3.04837, 0.56 ) }
    dend_24 { pt3dadd( -20.3608, 24.865, 3.24186, 0.56 ) }
    dend_24 { pt3dadd( -24.9361, 24.6036, 3.7688, 0.83 ) }
    dend_24 { pt3dadd( -28.3984, 24.4058, 4.16755, 0.83 ) }
    dend_24 { pt3dadd( -30.7508, 24.2714, 4.43848, 0.83 ) }
    dend_24 { pt3dadd( -33.0146, 24.1421, 4.6992, 0.83 ) }
    dend_24 { pt3dadd( -36.8093, 24.3955, 5.00676, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 45/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 8.59196, -2.30615, -11.3011, 0.83 ) }
    dend_18 { pt3dadd( 11.6866, -2.47785, -13.1496, 0.83 ) }
    dend_18 { pt3dadd( 15.0691, -2.13462, -14.9886, 0.83 ) }
    dend_18 { pt3dadd( 18.2495, -1.32296, -16.5119, 0.83 ) }
    dend_18 { pt3dadd( 21.2611, -0.230407, -17.7691, 0.83 ) }
    dend_18 { pt3dadd( 24.7358, 1.24204, -19.0489, 0.83 ) }
    dend_18 { pt3dadd( 30.2553, 3.65327, -20.8709, 0.56 ) }
    dend_18 { pt3dadd( 33.8987, 5.59993, -21.8594, 0.83 ) }
    dend_18 { pt3dadd( 37.2523, 7.88451, -22.6314, 0.83 ) }
    dend_18 { pt3dadd( 38.636, 9.01338, -22.8035, 0.56 ) }
    dend_18 { pt3dadd( 39.6927, 9.98689, -22.7776, 0.56 ) }
    dend_18 { pt3dadd( 40.845, 11.4373, -22.5282, 0.56 ) }
    dend_18 { pt3dadd( 41.9723, 13.8209, -21.4121, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 58/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.59196, -2.30615, -11.3011, 1.94 ) }
    dend_11 { pt3dadd( 11.299, -3.92725, -12.8639, 1.94 ) }
    dend_11 { pt3dadd( 15.4347, -6.40385, -15.2514, 1.94 ) }
    dend_11 { pt3dadd( 17.7845, -7.81099, -16.6079, 1.94 ) }
    dend_11 { pt3dadd( 20.4508, -9.40767, -18.1472, 1.94 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 63/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.25102, -16.4053, 2.22755, 1.11 ) }
    dend_6 { pt3dadd( -5.00347, -18.5343, 4.94894, 1.11 ) }
    dend_6 { pt3dadd( -4.06561, -19.7175, 6.64062, 1.11 ) }
    dend_6 { pt3dadd( -1.21322, -22.5107, 11.1807, 1.11 ) }
    dend_6 { pt3dadd( 0.0363008, -23.6307, 13.1099, 1.11 ) }
    dend_6 { pt3dadd( 1.3, -24.7634, 15.061, 0.83 ) }
    dend_6 { pt3dadd( 2.51926, -25.8563, 16.9435, 0.83 ) }
    dend_6 { pt3dadd( 4.75696, -27.462, 20.0177, 0.83 ) }
    dend_6 { pt3dadd( 6.8827, -28.793, 22.7023, 0.83 ) }
    dend_6 { pt3dadd( 8.71828, -29.6827, 24.7415, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 73/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.25102, -16.4053, 2.22755, 1.39 ) }
    dend_1 { pt3dadd( -10.2477, -15.9059, 3.36135, 1.39 ) }
    dend_1 { pt3dadd( -12.4306, -15.6331, 3.98063, 1.39 ) }
    dend_1 { pt3dadd( -13.4966, -15.4999, 4.28305, 1.39 ) }
    dend_1 { pt3dadd( -15.7758, -15.2151, 4.92963, 1.67 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 78/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.4413, -41.47, 3.51218, 0.56 ) }
    axon_1 { pt3dadd( 13.9748, -56.0478, 3.51218, 0.56 ) }
    axon_1 { pt3dadd( 17.5083, -70.6257, 3.51218, 0.56 ) }
    // Section: apic_14, id: apic_14, parent: apic_12 (entry count 81/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -5.13742, -33.9905, 3.22579, 0.83 ) }
    apic_14 { pt3dadd( -4.27253, -35.6276, 1.72554, 0.83 ) }
    apic_14 { pt3dadd( -3.51916, -37.5253, 0.109802, 0.83 ) }
    apic_14 { pt3dadd( -3.10485, -39.1311, -1.17054, 0.83 ) }
    apic_14 { pt3dadd( -2.3283, -42.9615, -4.18598, 0.83 ) }
    apic_14 { pt3dadd( -1.16196, -49.4206, -8.98745, 0.56 ) }
    apic_14 { pt3dadd( -0.940046, -51.1559, -10.1461, 0.56 ) }
    apic_14 { pt3dadd( -0.877841, -53.2349, -11.4856, 1.11 ) }
    apic_14 { pt3dadd( -0.820825, -55.7079, -13.026, 0.56 ) }
    apic_14 { pt3dadd( -0.613187, -57.7537, -14.362, 0.56 ) }
    apic_14 { pt3dadd( -0.196891, -59.7344, -15.589, 0.56 ) }
    apic_14 { pt3dadd( 0.642588, -62.588, -17.1219, 0.83 ) }
    apic_14 { pt3dadd( 1.87791, -65.3351, -18.7802, 0.56 ) }
    apic_14 { pt3dadd( 3.48379, -68.1675, -20.6528, 0.56 ) }
    apic_14 { pt3dadd( 5.58121, -71.5808, -22.9849, 1.11 ) }
    apic_14 { pt3dadd( 6.45548, -73.0892, -24.1182, 0.56 ) }
    apic_14 { pt3dadd( 7.44716, -74.9398, -25.7908, 0.56 ) }
    apic_14 { pt3dadd( 8.25497, -76.6977, -27.552, 0.56 ) }
    apic_14 { pt3dadd( 8.65991, -78.1705, -28.968, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_14 { pt3dadd( 8.76132, -79.4646, -30.2313, 0.83 ) }
    apic_14 { pt3dadd( 8.63759, -82.4505, -33.0533, 0.28 ) }
    apic_14 { pt3dadd( 8.4192, -85.0188, -35.2346, 1.39 ) }
    apic_14 { pt3dadd( 7.97979, -88.4359, -37.8335, 0.28 ) }
    apic_14 { pt3dadd( 7.7842, -90.1043, -39.0384, 0.56 ) }
    apic_14 { pt3dadd( 7.58964, -92.9728, -40.8434, 0.28 ) }
    apic_14 { pt3dadd( 7.59477, -94.5917, -41.7181, 2.22 ) }
    apic_14 { pt3dadd( 7.91176, -99.156, -43.519, 0.28 ) }
    apic_14 { pt3dadd( 8.20284, -101.157, -44.1442, 0.56 ) }
    apic_14 { pt3dadd( 8.79113, -103.578, -44.8351, 0.56 ) }
    apic_14 { pt3dadd( 9.43582, -105.5, -45.3736, 0.28 ) }
    apic_14 { pt3dadd( 10.0421, -107.009, -45.8148, 0.83 ) }
    apic_14 { pt3dadd( 11.0685, -109.477, -46.6434, 0.28 ) }
    apic_14 { pt3dadd( 11.8118, -111.306, -47.299, 0.83 ) }
    apic_14 { pt3dadd( 12.9831, -114.539, -48.2872, 0.28 ) }
    apic_14 { pt3dadd( 13.3671, -115.874, -48.6564, 1.39 ) }
    apic_14 { pt3dadd( 14.4874, -119.409, -49.3966, 0.28 ) }
    apic_14 { pt3dadd( 15.1414, -121.393, -49.6877, 0.28 ) }
    apic_14 { pt3dadd( 15.7443, -122.998, -49.9128, 1.94 ) }
    apic_14 { pt3dadd( 17.0324, -126.072, -50.2796, 0.28 ) }
    apic_14 { pt3dadd( 17.5279, -127.129, -50.4308, 1.11 ) }
    apic_14 { pt3dadd( 20.7097, -133.312, -51.7486, 0.28 ) }
    apic_14 { pt3dadd( 21.1898, -134.215, -51.9716, 0.83 ) }
    apic_14 { pt3dadd( 23.3205, -138.225, -53.1518, 0.28 ) }
    apic_14 { pt3dadd( 23.5872, -138.78, -53.3395, 0.83 ) }
    apic_14 { pt3dadd( 25.565, -143.337, -55.0604, 0.28 ) }
    apic_14 { pt3dadd( 26.4405, -145.755, -56.0081, 0.56 ) }
    apic_14 { pt3dadd( 27.3353, -149.207, -57.3737, 0.28 ) }
    apic_14 { pt3dadd( 27.6028, -150.594, -57.8499, 1.39 ) }
    apic_14 { pt3dadd( 28.3055, -155.189, -59.2323, 0.28 ) }
    apic_14 { pt3dadd( 28.4423, -156.19, -59.5102, 0.83 ) }
    apic_14 { pt3dadd( 29.1045, -160.963, -61.189, 0.28 ) }
    apic_14 { pt3dadd( 29.3641, -162.631, -61.8802, 1.11 ) }
    apic_14 { pt3dadd( 30.0281, -166.149, -63.7698, 0.28 ) }
    apic_14 { pt3dadd( 30.4501, -168.127, -64.9796, 0.28 ) }
    apic_14 { pt3dadd( 30.7104, -169.244, -65.7273, 1.11 ) }
    apic_14 { pt3dadd( 32.3165, -176.151, -70.765, 0.28 ) }
    apic_14 { pt3dadd( 32.4677, -176.822, -71.288, 1.94 ) }
    apic_14 { pt3dadd( 33.5466, -181.286, -74.539, 0.28 ) }
    apic_14 { pt3dadd( 33.6073, -181.523, -74.6955, 0.56 ) }
    apic_14 { pt3dadd( 34.241, -184.372, -76.3758, 0.28 ) }
    apic_14 { pt3dadd( 34.6218, -186.349, -77.4162, 1.11 ) }
    apic_14 { pt3dadd( 35.0954, -190.326, -78.975, 0.28 ) }
    apic_14 { pt3dadd( 35.5169, -196.103, -81.0657, 0.28 ) }
    apic_14 { pt3dadd( 35.5392, -198.208, -81.7344, 1.39 ) }
    apic_14 { pt3dadd( 35.4011, -201.787, -82.76, 0.28 ) }
    apic_14 { pt3dadd( 35.253, -203.188, -83.1368, 0.83 ) }
    apic_14 { pt3dadd( 34.4662, -207.59, -83.9916, 0.28 ) }
    apic_14 { pt3dadd( 34.272, -208.199, -84.098, 0.56 ) }
    apic_14 { pt3dadd( 33.3599, -210.054, -84.4341, 0.28 ) }
    apic_14 { pt3dadd( 32.7802, -211.101, -84.6094, 0.83 ) }
    apic_14 { pt3dadd( 31.443, -213.46, -84.9164, 0.28 ) }
    apic_14 { pt3dadd( 29.6095, -216.716, -85.4134, 1.11 ) }
    apic_14 { pt3dadd( 27.6415, -220.278, -86.0541, 0.28 ) }
    apic_14 { pt3dadd( 27.3483, -220.836, -86.1861, 0.56 ) }
    apic_14 { pt3dadd( 26.7921, -221.967, -86.4507, 0.28 ) }
    apic_14 { pt3dadd( 26.5526, -222.459, -86.6509, 0.56 ) }
    apic_14 { pt3dadd( 25.9655, -223.613, -87.2607, 0.28 ) }
    apic_14 { pt3dadd( 25.6997, -224.095, -87.5823, 0.56 ) }
    apic_14 { pt3dadd( 24.5413, -226.195, -88.9105, 0.28 ) }
    apic_14 { pt3dadd( 23.6484, -228.042, -90.2388, 1.11 ) }
    apic_14 { pt3dadd( 21.7936, -232.258, -93.6393, 0.28 ) }
    apic_14 { pt3dadd( 21.5401, -232.923, -94.1976, 0.56 ) }
    apic_14 { pt3dadd( 20.3797, -236.444, -97.2109, 0.28 ) }
    apic_14 { pt3dadd( 19.9571, -237.941, -98.4905, 1.39 ) }
    apic_14 { pt3dadd( 19.0581, -241.891, -101.659, 0.28 ) }
    apic_14 { pt3dadd( 18.7612, -244.017, -103.373, 1.39 ) }
    apic_14 { pt3dadd( 18.682, -245.813, -104.653, 0.28 ) }
    apic_14 { pt3dadd( 18.6894, -246.263, -104.984, 0.83 ) }
    apic_14 { pt3dadd( 18.935, -248.299, -106.558, 0.28 ) }
    apic_14 { pt3dadd( 19.2071, -250.385, -108.141, 0.83 ) }
    apic_14 { pt3dadd( 19.4918, -252.838, -109.292, 0.28 ) }
    apic_14 { pt3dadd( 19.6524, -253.822, -109.621, 0.56 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 73/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -5.13742, -33.9905, 3.22579, 0.56 ) }
    apic_13 { pt3dadd( -5.69957, -35.8101, 1.38559, 0.56 ) }
    apic_13 { pt3dadd( -5.88343, -36.359, 0.833191, 0.28 ) }
    apic_13 { pt3dadd( -6.28242, -37.4161, -0.23406, 0.83 ) }
    apic_13 { pt3dadd( -7.04415, -39.107, -1.82938, 0.56 ) }
    apic_13 { pt3dadd( -8.02193, -40.9305, -3.52486, 1.11 ) }
    apic_13 { pt3dadd( -11.4559, -47.0851, -9.22941, 0.83 ) }
    apic_13 { pt3dadd( -13.0127, -49.676, -11.7521, 0.28 ) }
    apic_13 { pt3dadd( -13.3726, -50.2225, -12.3713, 0.28 ) }
    apic_13 { pt3dadd( -14.5092, -51.8615, -14.5067, 0.83 ) }
    apic_13 { pt3dadd( -15.3141, -53.0264, -16.3883, 0.56 ) }
    apic_13 { pt3dadd( -15.9308, -53.9025, -17.9167, 0.56 ) }
    apic_13 { pt3dadd( -16.4881, -54.6936, -19.3255, 1.39 ) }
    apic_13 { pt3dadd( -18.9534, -58.0152, -25.5806, 0.28 ) }
    apic_13 { pt3dadd( -19.6453, -58.9467, -27.3013, 1.39 ) }
    apic_13 { pt3dadd( -21.4502, -61.3224, -31.6148, 0.56 ) }
    apic_13 { pt3dadd( -22.4653, -62.5851, -33.7988, 0.56 ) }
    apic_13 { pt3dadd( -23.953, -64.2757, -36.5739, 1.39 ) }
    apic_13 { pt3dadd( -25.823, -66.3025, -39.6331, 0.28 ) }
    apic_13 { pt3dadd( -26.2911, -66.8082, -40.1974, 0.83 ) }
    apic_13 { pt3dadd( -28.0199, -68.8182, -41.9738, 0.28 ) }
    apic_13 { pt3dadd( -28.228, -69.1006, -42.151, 0.56 ) }
    apic_13 { pt3dadd( -29.7956, -71.6273, -43.4334, 0.28 ) }
    apic_13 { pt3dadd( -30.3465, -72.6935, -43.8992, 1.39 ) }
    apic_13 { pt3dadd( -32.4841, -77.5143, -45.6598, 0.28 ) }
    apic_13 { pt3dadd( -32.8771, -78.5767, -46.1208, 1.39 ) }
    apic_13 { pt3dadd( -33.7082, -81.3127, -47.4072, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_13 { pt3dadd( -33.9883, -82.3232, -47.9765, 0.83 ) }
    apic_13 { pt3dadd( -34.7393, -85.3066, -49.8436, 0.28 ) }
    apic_13 { pt3dadd( -35.2248, -87.4797, -51.3724, 1.11 ) }
    apic_13 { pt3dadd( -36.3238, -92.8468, -55.5839, 0.28 ) }
    apic_13 { pt3dadd( -36.3846, -93.1604, -55.8187, 0.56 ) }
    apic_13 { pt3dadd( -37.5211, -98.9898, -59.9448, 0.28 ) }
    apic_13 { pt3dadd( -37.6333, -99.522, -60.2609, 0.28 ) }
    apic_13 { pt3dadd( -38.3025, -102.448, -61.6432, 0.28 ) }
    apic_13 { pt3dadd( -38.6791, -103.967, -62.241, 0.56 ) }
    apic_13 { pt3dadd( -39.4427, -106.8, -62.9001, 0.28 ) }
    apic_13 { pt3dadd( -39.7761, -108.02, -63.1628, 1.39 ) }
    apic_13 { pt3dadd( -40.6886, -111.528, -63.7368, 0.28 ) }
    apic_13 { pt3dadd( -40.9008, -112.303, -63.9175, 0.83 ) }
    apic_13 { pt3dadd( -41.7829, -114.964, -64.8646, 0.28 ) }
    apic_13 { pt3dadd( -41.9538, -115.44, -65.133, 0.83 ) }
    apic_13 { pt3dadd( -42.8265, -117.756, -66.8484, 0.28 ) }
    apic_13 { pt3dadd( -42.9828, -118.171, -67.2023, 0.56 ) }
    apic_13 { pt3dadd( -43.8013, -120.302, -69.0742, 0.28 ) }
    apic_13 { pt3dadd( -44.6633, -122.6, -70.9597, 0.56 ) }
    apic_13 { pt3dadd( -46.01, -126.087, -73.5992, 0.28 ) }
    apic_13 { pt3dadd( -46.3118, -126.914, -74.1392, 0.56 ) }
    apic_13 { pt3dadd( -47.0712, -129.29, -75.372, 0.28 ) }
    apic_13 { pt3dadd( -47.7233, -132.222, -76.7898, 1.11 ) }
    apic_13 { pt3dadd( -47.8886, -134.018, -77.4916, 0.28 ) }
    apic_13 { pt3dadd( -47.7938, -134.787, -77.7467, 0.56 ) }
    apic_13 { pt3dadd( -47.4064, -136.121, -78.1796, 0.28 ) }
    apic_13 { pt3dadd( -47.1595, -136.87, -78.3862, 0.56 ) }
    apic_13 { pt3dadd( -45.6641, -141.272, -79.4801, 0.28 ) }
    apic_13 { pt3dadd( -45.4413, -142.034, -79.7017, 0.56 ) }
    apic_13 { pt3dadd( -44.3094, -146.419, -80.9019, 0.28 ) }
    apic_13 { pt3dadd( -44.0971, -147.41, -81.1273, 0.56 ) }
    apic_13 { pt3dadd( -43.199, -153.107, -82.0141, 0.28 ) }
    apic_13 { pt3dadd( -43.1249, -154.301, -82.1746, 1.11 ) }
    apic_13 { pt3dadd( -43.1901, -157.64, -82.3546, 0.28 ) }
    apic_13 { pt3dadd( -43.2719, -158.844, -82.4282, 0.83 ) }
    apic_13 { pt3dadd( -43.6619, -161.975, -82.6813, 0.28 ) }
    apic_13 { pt3dadd( -43.9632, -164.038, -82.8456, 1.11 ) }
    apic_13 { pt3dadd( -44.8938, -169.597, -83.3029, 0.28 ) }
    apic_13 { pt3dadd( -45.4177, -172.792, -83.4647, 1.11 ) }
    apic_13 { pt3dadd( -45.875, -175.519, -83.5132, 0.28 ) }
    apic_13 { pt3dadd( -46.0729, -176.602, -83.5206, 0.56 ) }
    apic_13 { pt3dadd( -46.8896, -180.975, -83.5391, 0.28 ) }
    apic_13 { pt3dadd( -47.166, -182.427, -83.4845, 1.11 ) }
    apic_13 { pt3dadd( -47.8166, -185.575, -83.1205, 0.28 ) }
    apic_13 { pt3dadd( -48.0812, -186.58, -82.9661, 0.56 ) }
    apic_13 { pt3dadd( -49.4493, -191.051, -81.9574, 0.28 ) }
    apic_13 { pt3dadd( -49.8055, -192.16, -81.6691, 0.56 ) }
    apic_13 { pt3dadd( -50.6174, -194.408, -81.0003, 0.28 ) }
    apic_13 { pt3dadd( -50.9592, -195.342, -80.6903, 0.56 ) }
    apic_13 { pt3dadd( -52.1376, -198.323, -79.5845, 0.28 ) }
    apic_13 { pt3dadd( -52.4186, -198.979, -79.3046, 1.11 ) }
    // Section: apic_5, id: apic_5, parent: apic_1 (entry count 51/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 0.097224, -38.2557, 21.8564, 1.11 ) }
    apic_5 { pt3dadd( -4.14287, -41.1752, 21.2438, 1.11 ) }
    apic_5 { pt3dadd( -7.16665, -44.171, 21.4945, 1.11 ) }
    apic_5 { pt3dadd( -9.95488, -48.1429, 22.3213, 1.11 ) }
    apic_5 { pt3dadd( -11.4383, -51.1979, 23.1213, 1.11 ) }
    apic_5 { pt3dadd( -12.3348, -53.641, 23.7292, 1.11 ) }
    apic_5 { pt3dadd( -13.6937, -58.5421, 24.5996, 1.11 ) }
    apic_5 { pt3dadd( -14.2992, -64.2427, 25.1932, 1.11 ) }
    apic_5 { pt3dadd( -14.2575, -66.7075, 25.433, 0.83 ) }
    apic_5 { pt3dadd( -14.0757, -69.0242, 25.7767, 1.11 ) }
    apic_5 { pt3dadd( -13.9064, -70.9243, 26.0739, 1.11 ) }
    apic_5 { pt3dadd( -13.742, -74.5791, 26.5919, 0.83 ) }
    apic_5 { pt3dadd( -13.8464, -76.8193, 26.8147, 0.83 ) }
    apic_5 { pt3dadd( -14.1106, -78.8827, 26.7451, 1.11 ) }
    apic_5 { pt3dadd( -14.5147, -81.0674, 26.6715, 0.83 ) }
    apic_5 { pt3dadd( -14.7205, -82.2311, 26.6207, 1.11 ) }
    apic_5 { pt3dadd( -15.468, -86.0106, 26.4767, 1.11 ) }
    apic_5 { pt3dadd( -16.013, -87.6782, 26.4758, 1.11 ) }
    apic_5 { pt3dadd( -17.8009, -91.617, 26.3104, 0.83 ) }
    apic_5 { pt3dadd( -18.8323, -93.4448, 26.1995, 0.83 ) }
    apic_5 { pt3dadd( -19.9755, -95.3235, 26.0123, 0.83 ) }
    apic_5 { pt3dadd( -21.5414, -97.6755, 25.6918, 0.83 ) }
    apic_5 { pt3dadd( -24.8302, -101.972, 24.9785, 0.83 ) }
    apic_5 { pt3dadd( -27.1946, -104.758, 24.5443, 0.83 ) }
    apic_5 { pt3dadd( -29.291, -107.079, 24.2914, 0.56 ) }
    apic_5 { pt3dadd( -31.1794, -109.235, 24.0499, 0.83 ) }
    apic_5 { pt3dadd( -32.8703, -111.288, 23.7944, 0.56 ) }
    apic_5 { pt3dadd( -34.4157, -113.423, 23.4511, 0.83 ) }
    apic_5 { pt3dadd( -35.4949, -115.131, 23.0914, 0.56 ) }
    apic_5 { pt3dadd( -36.28, -116.29, 22.843, 0.83 ) }
    apic_5 { pt3dadd( -37.7034, -118.077, 22.479, 0.83 ) }
    apic_5 { pt3dadd( -39.4235, -120.033, 22.1257, 0.56 ) }
    apic_5 { pt3dadd( -39.7671, -120.488, 22.1002, 0.56 ) }
    apic_5 { pt3dadd( -40.8557, -122.306, 22.2208, 0.83 ) }
    apic_5 { pt3dadd( -41.2411, -123.072, 22.3494, 0.83 ) }
    apic_5 { pt3dadd( -41.9863, -125.195, 22.6135, 0.56 ) }
    apic_5 { pt3dadd( -42.2841, -126.612, 22.7435, 0.83 ) }
    apic_5 { pt3dadd( -42.6606, -129.666, 22.946, 0.83 ) }
    apic_5 { pt3dadd( -43.047, -132.075, 23.2008, 0.83 ) }
    apic_5 { pt3dadd( -43.4105, -133.859, 23.4377, 0.83 ) }
    apic_5 { pt3dadd( -44.5455, -138.474, 24.1095, 0.83 ) }
    apic_5 { pt3dadd( -44.8442, -139.592, 24.2764, 0.56 ) }
    apic_5 { pt3dadd( -45.3575, -141.267, 24.4988, 0.56 ) }
    apic_5 { pt3dadd( -47.0011, -145.96, 24.8301, 0.83 ) }
    apic_5 { pt3dadd( -47.8165, -148.064, 24.8565, 0.56 ) }
    apic_5 { pt3dadd( -48.3084, -149.152, 24.8081, 0.83 ) }
    apic_5 { pt3dadd( -49.4326, -151.349, 24.7986, 0.56 ) }
    apic_5 { pt3dadd( -51.0281, -154.873, 24.7079, 0.83 ) }
    apic_5 { pt3dadd( -51.893, -157.252, 24.5713, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_5 { pt3dadd( -52.5182, -159.375, 24.4252, 0.56 ) }
    apic_5 { pt3dadd( -53.187, -162.099, 24.3219, 1.11 ) }
    apic_5 { pt3dadd( -54.0976, -165.582, 23.8848, 0.56 ) }
    apic_5 { pt3dadd( -54.596, -167.32, 23.641, 0.56 ) }
    apic_5 { pt3dadd( -55.424, -170.322, 23.2141, 0.83 ) }
    apic_5 { pt3dadd( -55.9508, -172.292, 22.9793, 0.56 ) }
    apic_5 { pt3dadd( -56.9083, -176.174, 22.5384, 0.83 ) }
    apic_5 { pt3dadd( -58.566, -182.562, 21.8039, 0.56 ) }
    apic_5 { pt3dadd( -59.4757, -185.252, 21.4014, 0.56 ) }
    apic_5 { pt3dadd( -59.9804, -186.443, 21.2573, 0.56 ) }
    apic_5 { pt3dadd( -61.3342, -189.44, 21.0009, 0.28 ) }
    apic_5 { pt3dadd( -62.4304, -191.821, 20.9111, 0.56 ) }
    apic_5 { pt3dadd( -63.2806, -193.648, 21.1223, 0.56 ) }
    apic_5 { pt3dadd( -64.1335, -196.118, 21.4813, 0.83 ) }
    apic_5 { pt3dadd( -64.4192, -197.267, 21.5051, 0.28 ) }
    apic_5 { pt3dadd( -64.7971, -199.578, 21.4195, 0.28 ) }
    apic_5 { pt3dadd( -65.0127, -201.325, 21.2638, 0.56 ) }
    apic_5 { pt3dadd( -65.4613, -204.703, 20.8214, 1.67 ) }
    apic_5 { pt3dadd( -66.048, -209.132, 20.0962, 0.83 ) }
    apic_5 { pt3dadd( -66.3249, -210.831, 19.7913, 0.83 ) }
    apic_5 { pt3dadd( -66.9838, -213.335, 19.314, 0.56 ) }
    apic_5 { pt3dadd( -67.6964, -214.935, 19.0633, 0.56 ) }
    apic_5 { pt3dadd( -68.3184, -215.933, 18.9528, 0.28 ) }
    apic_5 { pt3dadd( -69.0776, -216.957, 18.9128, 0.28 ) }
    apic_5 { pt3dadd( -70.5398, -218.787, 19.3391, 0.83 ) }
    apic_5 { pt3dadd( -71.5892, -220.203, 19.8406, 0.56 ) }
    apic_5 { pt3dadd( -73.6793, -223.186, 21.0429, 0.56 ) }
    apic_5 { pt3dadd( -74.3712, -224.34, 21.5308, 0.56 ) }
    apic_5 { pt3dadd( -75.2196, -226.12, 22.1759, 0.28 ) }
    apic_5 { pt3dadd( -76.8565, -230.32, 23.61, 2.22 ) }
    apic_5 { pt3dadd( -78.0425, -233.775, 24.6768, 0.56 ) }
    apic_5 { pt3dadd( -79.0002, -237.091, 25.5066, 0.56 ) }
    apic_5 { pt3dadd( -79.4011, -238.647, 25.7773, 0.56 ) }
    apic_5 { pt3dadd( -80.7103, -242.857, 26.2893, 0.56 ) }
    apic_5 { pt3dadd( -81.9055, -246.062, 26.5482, 0.56 ) }
    apic_5 { pt3dadd( -82.6489, -248.108, 26.5749, 0.56 ) }
    apic_5 { pt3dadd( -83.1425, -249.512, 26.6058, 0.28 ) }
    apic_5 { pt3dadd( -84.1911, -252.408, 26.7677, 0.56 ) }
    apic_5 { pt3dadd( -85.3348, -255.254, 27.0028, 0.56 ) }
    apic_5 { pt3dadd( -86.4618, -258.043, 27.3236, 2.5 ) }
    apic_5 { pt3dadd( -87.4615, -261.098, 27.6069, 0.56 ) }
    apic_5 { pt3dadd( -88.0733, -263.506, 27.8988, 0.56 ) }
    apic_5 { pt3dadd( -88.5842, -265.732, 28.2096, 0.28 ) }
    apic_5 { pt3dadd( -88.9742, -267.636, 28.455, 0.56 ) }
    apic_5 { pt3dadd( -89.2877, -269.492, 28.6006, 0.28 ) }
    apic_5 { pt3dadd( -89.6019, -271.437, 28.6424, 0.56 ) }
    apic_5 { pt3dadd( -89.9122, -273.468, 28.7545, 0.28 ) }
    apic_5 { pt3dadd( -90.1294, -274.944, 28.8575, 0.28 ) }
    apic_5 { pt3dadd( -90.6031, -277.456, 29.0781, 0.56 ) }
    apic_5 { pt3dadd( -91.3544, -280.076, 29.3561, 0.28 ) }
    apic_5 { pt3dadd( -91.9784, -281.673, 29.5452, 0.83 ) }
    apic_5 { pt3dadd( -93.1596, -284.213, 29.8145, 0.56 ) }
    apic_5 { pt3dadd( -94.4051, -286.778, 30.0444, 0.56 ) }
    apic_5 { pt3dadd( -95.3356, -288.718, 30.2491, 1.11 ) }
    apic_5 { pt3dadd( -96.2717, -290.788, 30.527, 0.28 ) }
    apic_5 { pt3dadd( -96.618, -291.581, 30.6099, 0.28 ) }
    apic_5 { pt3dadd( -96.9828, -292.6, 30.6511, 0.83 ) }
    apic_5 { pt3dadd( -97.4875, -294.487, 30.6876, 0.83 ) }
    apic_5 { pt3dadd( -97.7309, -295.661, 30.8081, 0.28 ) }
    apic_5 { pt3dadd( -98.2327, -298.049, 31.1508, 0.56 ) }
    apic_5 { pt3dadd( -98.7214, -300.85, 31.7868, 0.83 ) }
    apic_5 { pt3dadd( -99.1844, -304.055, 32.4924, 0.56 ) }
    apic_5 { pt3dadd( -99.423, -305.841, 32.9573, 0.28 ) }
    apic_5 { pt3dadd( -99.8622, -308.553, 33.7327, 1.11 ) }
    apic_5 { pt3dadd( -100.321, -310.782, 34.4052, 0.56 ) }
    apic_5 { pt3dadd( -101.102, -313.768, 35.3948, 0.56 ) }
    apic_5 { pt3dadd( -102.198, -317.833, 36.8171, 0.83 ) }
    apic_5 { pt3dadd( -102.745, -320.14, 37.599, 0.56 ) }
    apic_5 { pt3dadd( -103.033, -321.604, 38.0359, 0.56 ) }
    apic_5 { pt3dadd( -103.141, -322.406, 38.2329, 0.56 ) }
    apic_5 { pt3dadd( -103.383, -324.382, 38.8026, 1.11 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 71/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 0.097224, -38.2557, 21.8564, 1.11 ) }
    apic_2 { pt3dadd( 3.4438, -40.1632, 24.9491, 1.11 ) }
    apic_2 { pt3dadd( 4.93559, -41.1888, 26.5959, 1.11 ) }
    apic_2 { pt3dadd( 5.99425, -42.1032, 27.976, 0.83 ) }
    apic_2 { pt3dadd( 7.42078, -43.3355, 29.8357, 0.83 ) }
    apic_2 { pt3dadd( 8.65964, -44.4056, 31.4507, 0.83 ) }
    apic_2 { pt3dadd( 10.4236, -45.9294, 33.7504, 1.11 ) }
    apic_2 { pt3dadd( 11.2756, -47.2404, 35.5804, 0.83 ) }
    apic_2 { pt3dadd( 11.7169, -48.1147, 36.8545, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 80/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -36.8093, 24.3955, 5.00676, 0.56 ) }
    dend_26 { pt3dadd( -40.6758, 28.0561, 10.363, 0.56 ) }
    dend_26 { pt3dadd( -43.9499, 30.656, 13.612, 0.56 ) }
    dend_26 { pt3dadd( -46.2186, 32.1734, 15.4783, 0.56 ) }
    dend_26 { pt3dadd( -48.2444, 33.3289, 16.9562, 0.83 ) }
    dend_26 { pt3dadd( -50.2517, 34.2804, 18.4595, 0.83 ) }
    dend_26 { pt3dadd( -52.8486, 35.2819, 20.5564, 0.83 ) }
    dend_26 { pt3dadd( -56.0093, 35.6767, 22.8052, 0.56 ) }
    dend_26 { pt3dadd( -57.9172, 35.552, 24.2866, 0.56 ) }
    dend_26 { pt3dadd( -59.1258, 35.387, 25.3444, 0.56 ) }
    dend_26 { pt3dadd( -61.9648, 34.8911, 28.091, 0.56 ) }
    dend_26 { pt3dadd( -64.5014, 34.3608, 30.7493, 0.56 ) }
    dend_26 { pt3dadd( -65.9159, 34.0941, 32.2737, 0.56 ) }
    dend_26 { pt3dadd( -68.5663, 33.6303, 34.9282, 0.56 ) }
    dend_26 { pt3dadd( -71.1726, 33.3936, 37.2151, 0.56 ) }
    dend_26 { pt3dadd( -73.1711, 33.3148, 38.6342, 0.56 ) }
    dend_26 { pt3dadd( -73.7321, 33.3336, 38.9076, 0.83 ) }
    dend_26 { pt3dadd( -76.2193, 33.5444, 39.7085, 0.28 ) }
    dend_26 { pt3dadd( -76.8073, 33.654, 39.8799, 0.56 ) }
    dend_26 { pt3dadd( -78.8631, 34.2554, 40.4969, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( -80.8545, 35.0529, 41.1997, 0.83 ) }
    dend_26 { pt3dadd( -83.237, 36.4593, 42.2597, 0.56 ) }
    dend_26 { pt3dadd( -85.047, 37.9196, 43.3532, 1.67 ) }
    dend_26 { pt3dadd( -87.3955, 40.781, 45.3322, 0.28 ) }
    dend_26 { pt3dadd( -88.0181, 41.7233, 45.9205, 0.28 ) }
    dend_26 { pt3dadd( -88.4846, 42.6771, 46.4457, 0.56 ) }
    dend_26 { pt3dadd( -89.2421, 45.1587, 47.8151, 0.28 ) }
    dend_26 { pt3dadd( -89.4327, 47.2365, 49.066, 0.56 ) }
    dend_26 { pt3dadd( -89.3163, 48.409, 49.8827, 0.28 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 9/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -36.8093, 24.3955, 5.00676, 0.56 ) }
    dend_25 { pt3dadd( -36.5369, 24.5703, 2.53824, 0.56 ) }
    dend_25 { pt3dadd( -34.9479, 25.2798, -4.39445, 0.56 ) }
    dend_25 { pt3dadd( -34.2381, 25.5334, -7.09938, 1.39 ) }
    dend_25 { pt3dadd( -33.8589, 25.6496, -8.41976, 0.28 ) }
    dend_25 { pt3dadd( -33.3391, 25.8147, -10.5112, 0.28 ) }
    dend_25 { pt3dadd( -33.2066, 25.8641, -11.0758, 1.11 ) }
    dend_25 { pt3dadd( -32.1919, 26.3016, -14.7656, 1.11 ) }
    dend_25 { pt3dadd( -30.5081, 27.28, -20.4832, 0.56 ) }
    dend_25 { pt3dadd( -29.8411, 27.816, -22.8879, 0.83 ) }
    dend_25 { pt3dadd( -27.1785, 30.475, -33.4104, 0.28 ) }
    dend_25 { pt3dadd( -26.9841, 30.6936, -34.252, 1.11 ) }
    dend_25 { pt3dadd( -25.5526, 32.4949, -41.1022, 0.28 ) }
    dend_25 { pt3dadd( -25.3656, 32.785, -42.1677, 0.56 ) }
    dend_25 { pt3dadd( -24.6935, 33.9681, -45.6824, 0.28 ) }
    dend_25 { pt3dadd( -24.2501, 34.7328, -48.8438, 0.56 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 25/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 41.9723, 13.8209, -21.4121, 0.56 ) }
    dend_20 { pt3dadd( 43.5328, 14.6233, -21.7467, 0.56 ) }
    dend_20 { pt3dadd( 47.2968, 16.7131, -22.9573, 0.56 ) }
    dend_20 { pt3dadd( 49.5012, 17.9057, -23.5905, 0.56 ) }
    dend_20 { pt3dadd( 50.7857, 18.5799, -24.0033, 0.56 ) }
    dend_20 { pt3dadd( 52.8549, 19.6513, -24.6757, 0.28 ) }
    dend_20 { pt3dadd( 54.4078, 20.4346, -25.1718, 0.83 ) }
    dend_20 { pt3dadd( 56.2142, 21.3528, -25.8591, 0.28 ) }
    dend_20 { pt3dadd( 58.8968, 22.76, -26.8999, 0.83 ) }
    dend_20 { pt3dadd( 61.0614, 24.015, -27.6526, 0.28 ) }
    dend_20 { pt3dadd( 62.8582, 25.072, -28.1822, 0.83 ) }
    dend_20 { pt3dadd( 63.8063, 25.6339, -28.3797, 0.56 ) }
    dend_20 { pt3dadd( 65.2778, 26.5291, -28.648, 0.56 ) }
    dend_20 { pt3dadd( 67.0388, 27.5739, -28.8684, 0.28 ) }
    dend_20 { pt3dadd( 68.7948, 28.6112, -29.1009, 0.28 ) }
    dend_20 { pt3dadd( 70.9361, 29.7871, -29.5778, 1.11 ) }
    dend_20 { pt3dadd( 72.2222, 30.5053, -30.0828, 0.28 ) }
    dend_20 { pt3dadd( 73.2775, 31.1101, -30.5996, 0.56 ) }
    dend_20 { pt3dadd( 75.6611, 32.5322, -31.9318, 0.56 ) }
    dend_20 { pt3dadd( 77.4229, 33.6627, -33.0623, 1.67 ) }
    dend_20 { pt3dadd( 81.5922, 36.6202, -36.0096, 0.56 ) }
    dend_20 { pt3dadd( 84.4556, 38.8389, -38.003, 0.28 ) }
    dend_20 { pt3dadd( 85.4061, 39.6101, -38.7101, 0.56 ) }
    dend_20 { pt3dadd( 86.8689, 40.8748, -39.8422, 0.28 ) }
    dend_20 { pt3dadd( 87.407, 41.41, -40.318, 0.56 ) }
    dend_20 { pt3dadd( 88.8545, 43.0654, -41.4724, 0.28 ) }
    dend_20 { pt3dadd( 90.4973, 45.1722, -41.976, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 52/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 41.9723, 13.8209, -21.4121, 0.56 ) }
    dend_19 { pt3dadd( 44.3745, 14.3722, -19.2042, 0.56 ) }
    dend_19 { pt3dadd( 47.2441, 15.0196, -16.7249, 0.56 ) }
    dend_19 { pt3dadd( 49.8729, 15.5898, -14.5541, 0.56 ) }
    dend_19 { pt3dadd( 52.3801, 16.0895, -12.6519, 0.83 ) }
    dend_19 { pt3dadd( 54.4877, 16.4556, -11.1202, 0.56 ) }
    dend_19 { pt3dadd( 57.4634, 16.8283, -9.02643, 0.56 ) }
    dend_19 { pt3dadd( 58.7209, 16.9468, -8.18376, 0.56 ) }
    dend_19 { pt3dadd( 60.7156, 16.9958, -6.91005, 0.83 ) }
    dend_19 { pt3dadd( 62.6621, 17.0156, -5.79758, 0.56 ) }
    dend_19 { pt3dadd( 64.8065, 16.9757, -4.74029, 0.28 ) }
    dend_19 { pt3dadd( 66.5842, 16.8521, -3.87838, 0.28 ) }
    dend_19 { pt3dadd( 68.7533, 16.6729, -2.94324, 0.83 ) }
    dend_19 { pt3dadd( 71.1121, 16.4454, -1.9849, 0.28 ) }
    dend_19 { pt3dadd( 71.8922, 16.3607, -1.69786, 0.56 ) }
    dend_19 { pt3dadd( 74.0396, 16.1974, -0.966862, 0.28 ) }
    dend_19 { pt3dadd( 74.6476, 16.1744, -0.803113, 0.56 ) }
    dend_19 { pt3dadd( 76.6702, 16.1625, -0.444061, 0.28 ) }
    dend_19 { pt3dadd( 77.291, 16.1453, -0.407504, 0.83 ) }
    dend_19 { pt3dadd( 79.2018, 16.1025, -0.407965, 0.28 ) }
    dend_19 { pt3dadd( 80.3886, 16.0926, -0.424885, 0.28 ) }
    dend_19 { pt3dadd( 81.2584, 16.1118, -0.467851, 0.28 ) }
    dend_19 { pt3dadd( 83.8211, 16.1957, -0.649476, 0.83 ) }
    dend_19 { pt3dadd( 86.8609, 16.326, -0.936284, 0.28 ) }
    dend_19 { pt3dadd( 88.2667, 16.3904, -1.0937, 0.56 ) }
    dend_19 { pt3dadd( 91.0339, 16.5322, -1.43582, 0.56 ) }
    dend_19 { pt3dadd( 93.6953, 16.6159, -1.75268, 0.56 ) }
    dend_19 { pt3dadd( 95.9891, 16.7094, -1.99468, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 80/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 20.4508, -9.40767, -18.1472, 0.83 ) }
    dend_15 { pt3dadd( 23.6538, -9.35884, -20.5568, 0.83 ) }
    dend_15 { pt3dadd( 28.1562, -9.02177, -23.9139, 0.56 ) }
    dend_15 { pt3dadd( 29.4828, -8.76873, -24.8819, 0.56 ) }
    dend_15 { pt3dadd( 32.4309, -8.13235, -26.9941, 0.56 ) }
    dend_15 { pt3dadd( 35.1214, -7.56847, -28.8519, 0.83 ) }
    dend_15 { pt3dadd( 37.1406, -7.11535, -30.2215, 0.56 ) }
    dend_15 { pt3dadd( 40.2719, -6.35695, -32.055, 0.83 ) }
    dend_15 { pt3dadd( 42.8865, -5.37743, -33.5485, 0.56 ) }
    dend_15 { pt3dadd( 44.5622, -4.18222, -34.8351, 0.56 ) }
    dend_15 { pt3dadd( 45.6017, -2.98672, -35.834, 0.28 ) }
    dend_15 { pt3dadd( 46.0419, -2.44366, -36.3178, 0.28 ) }
    dend_15 { pt3dadd( 47.5803, -0.784939, -37.636, 0.83 ) }
    dend_15 { pt3dadd( 49.769, 0.870245, -38.88, 0.56 ) }
    dend_15 { pt3dadd( 51.1644, 1.68898, -39.6351, 0.56 ) }
    dend_15 { pt3dadd( 54.0195, 2.99953, -41.0169, 1.39 ) }
    dend_15 { pt3dadd( 57.5439, 4.2963, -42.5724, 0.56 ) }
    dend_15 { pt3dadd( 61.971, 5.48601, -44.3576, 0.28 ) }
    dend_15 { pt3dadd( 63.9892, 5.89788, -45.074, 0.28 ) }
    dend_15 { pt3dadd( 69.2914, 6.71634, -46.8991, 1.94 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( 72.1222, 7.14613, -48.0026, 0.28 ) }
    dend_15 { pt3dadd( 73.5298, 7.40499, -48.6525, 0.56 ) }
    dend_15 { pt3dadd( 75.5745, 7.94628, -49.7915, 0.28 ) }
    dend_15 { pt3dadd( 77.1494, 8.46244, -50.9289, 0.56 ) }
    dend_15 { pt3dadd( 79.2748, 9.26264, -52.632, 0.28 ) }
    dend_15 { pt3dadd( 80.5611, 9.71663, -53.656, 0.83 ) }
    dend_15 { pt3dadd( 82.385, 10.2993, -55.3522, 0.28 ) }
    dend_15 { pt3dadd( 82.8877, 10.4406, -55.8434, 0.56 ) }
    dend_15 { pt3dadd( 85.0434, 10.983, -58.0653, 0.28 ) }
    dend_15 { pt3dadd( 86.0117, 11.1025, -59.2396, 0.56 ) }
    dend_15 { pt3dadd( 87.0001, 11.183, -60.426, 0.28 ) }
    dend_15 { pt3dadd( 87.5913, 11.2284, -61.1029, 0.83 ) }
    dend_15 { pt3dadd( 88.6726, 11.3924, -62.2387, 0.28 ) }
    dend_15 { pt3dadd( 89.3171, 11.5534, -62.8971, 0.56 ) }
    dend_15 { pt3dadd( 93.3976, 12.9316, -66.9572, 0.28 ) }
    dend_15 { pt3dadd( 94.6018, 13.3904, -68.1655, 0.28 ) }
    dend_15 { pt3dadd( 96.1693, 14.0389, -69.9052, 0.83 ) }
    dend_15 { pt3dadd( 99.3754, 15.4555, -73.7128, 0.28 ) }
    dend_15 { pt3dadd( 100.562, 16.0106, -75.1647, 1.39 ) }
    dend_15 { pt3dadd( 102.589, 17.0269, -77.6244, 0.28 ) }
    dend_15 { pt3dadd( 103.38, 17.4417, -78.5535, 1.11 ) }
    dend_15 { pt3dadd( 106.652, 19.1036, -82.6025, 0.28 ) }
    dend_15 { pt3dadd( 108.097, 19.822, -84.4547, 0.28 ) }
    dend_15 { pt3dadd( 109.066, 20.2941, -85.7665, 0.83 ) }
    dend_15 { pt3dadd( 110.613, 20.986, -87.9002, 0.28 ) }
    dend_15 { pt3dadd( 110.93, 21.1774, -88.3284, 0.56 ) }
    dend_15 { pt3dadd( 112.536, 22.4865, -90.2652, 0.28 ) }
    dend_15 { pt3dadd( 113.079, 23.0446, -90.8613, 1.11 ) }
    dend_15 { pt3dadd( 114.807, 25.006, -92.6878, 0.28 ) }
    dend_15 { pt3dadd( 115.822, 26.2339, -93.8204, 0.83 ) }
    dend_15 { pt3dadd( 118.974, 30.1677, -97.5658, 0.28 ) }
    dend_15 { pt3dadd( 120.795, 32.5296, -99.7362, 1.11 ) }
    dend_15 { pt3dadd( 122.459, 34.7831, -101.677, 0.28 ) }
    dend_15 { pt3dadd( 122.875, 35.3556, -102.153, 0.83 ) }
    dend_15 { pt3dadd( 125.144, 38.6409, -104.731, 0.28 ) }
    dend_15 { pt3dadd( 126.547, 40.504, -106.344, 1.39 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 36/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 20.4508, -9.40767, -18.1472, 1.11 ) }
    dend_12 { pt3dadd( 19.1114, -12.2915, -19.0113, 1.11 ) }
    dend_12 { pt3dadd( 18.5345, -14.6948, -19.2144, 0.83 ) }
    dend_12 { pt3dadd( 18.7364, -16.2248, -19.0092, 0.83 ) }
    dend_12 { pt3dadd( 19.3578, -18.1799, -18.5818, 0.83 ) }
    dend_12 { pt3dadd( 19.8572, -19.5062, -18.2469, 0.83 ) }
    dend_12 { pt3dadd( 20.6324, -21.3162, -17.7721, 0.83 ) }
    dend_12 { pt3dadd( 22.5843, -25.0962, -16.7727, 0.83 ) }
    dend_12 { pt3dadd( 25.2578, -29.5389, -15.7485, 0.83 ) }
    dend_12 { pt3dadd( 27.7633, -33.3507, -15.1061, 0.83 ) }
    dend_12 { pt3dadd( 28.9817, -34.9173, -14.9101, 0.56 ) }
    dend_12 { pt3dadd( 30.5537, -36.7653, -14.7788, 0.83 ) }
    dend_12 { pt3dadd( 32.8196, -39.4725, -14.7941, 0.56 ) }
    dend_12 { pt3dadd( 35.0538, -42.1237, -15.0477, 1.11 ) }
    dend_12 { pt3dadd( 36.9861, -44.3356, -15.4548, 0.56 ) }
    dend_12 { pt3dadd( 40.0816, -47.6607, -16.2293, 0.56 ) }
    dend_12 { pt3dadd( 41.0378, -48.7018, -16.4678, 0.56 ) }
    dend_12 { pt3dadd( 43.9653, -52.0303, -17.3047, 0.56 ) }
    dend_12 { pt3dadd( 46.4156, -54.8958, -17.9998, 0.56 ) }
    dend_12 { pt3dadd( 48.2566, -57.2201, -18.6397, 0.56 ) }
    dend_12 { pt3dadd( 48.7914, -57.89, -18.8336, 0.56 ) }
    dend_12 { pt3dadd( 50.795, -60.5567, -19.6959, 0.83 ) }
    dend_12 { pt3dadd( 52.9998, -63.3747, -20.7558, 0.28 ) }
    dend_12 { pt3dadd( 53.6022, -64.1311, -21.0803, 0.83 ) }
    dend_12 { pt3dadd( 54.2036, -65.0745, -21.4793, 0.28 ) }
    dend_12 { pt3dadd( 55.6489, -67.4701, -22.3829, 0.28 ) }
    dend_12 { pt3dadd( 56.1178, -68.1851, -22.6567, 0.28 ) }
    dend_12 { pt3dadd( 57.7421, -70.955, -23.635, 1.11 ) }
    dend_12 { pt3dadd( 58.2582, -71.963, -23.8803, 0.28 ) }
    dend_12 { pt3dadd( 58.6071, -72.6768, -24.0759, 0.28 ) }
    dend_12 { pt3dadd( 59.6226, -74.74, -24.6376, 1.11 ) }
    dend_12 { pt3dadd( 60.4906, -76.5925, -25.1169, 0.28 ) }
    dend_12 { pt3dadd( 61.476, -78.6475, -25.6043, 0.28 ) }
    dend_12 { pt3dadd( 62.4537, -80.7311, -26.0183, 0.28 ) }
    dend_12 { pt3dadd( 63.3903, -82.609, -26.3579, 1.11 ) }
    dend_12 { pt3dadd( 64.5385, -85.0525, -26.7362, 0.28 ) }
    dend_12 { pt3dadd( 64.8638, -85.8549, -26.8209, 0.28 ) }
    dend_12 { pt3dadd( 65.6541, -87.7416, -26.9798, 0.56 ) }
    dend_12 { pt3dadd( 66.2726, -89.0779, -27.0327, 0.28 ) }
    dend_12 { pt3dadd( 68.1726, -93.1924, -27.3386, 0.28 ) }
    dend_12 { pt3dadd( 68.7192, -94.3678, -27.4439, 0.28 ) }
    dend_12 { pt3dadd( 70.0744, -97.2533, -27.7865, 0.83 ) }
    dend_12 { pt3dadd( 71.4598, -100.2, -28.2917, 0.28 ) }
    dend_12 { pt3dadd( 72.5884, -102.489, -28.788, 1.67 ) }
    dend_12 { pt3dadd( 74.3913, -105.991, -29.6839, 0.28 ) }
    dend_12 { pt3dadd( 75.167, -107.544, -30.1921, 0.56 ) }
    dend_12 { pt3dadd( 75.5951, -108.301, -30.4849, 0.56 ) }
    dend_12 { pt3dadd( 76.7353, -110.163, -31.2877, 0.28 ) }
    dend_12 { pt3dadd( 77.6876, -111.58, -31.9681, 0.28 ) }
    dend_12 { pt3dadd( 79.1189, -113.486, -33.65, 0.83 ) }
    dend_12 { pt3dadd( 80.5562, -115.282, -35.3088, 0.56 ) }
    dend_12 { pt3dadd( 81.4672, -116.343, -36.4232, 0.83 ) }
    dend_12 { pt3dadd( 82.3969, -117.355, -37.6049, 0.28 ) }
    dend_12 { pt3dadd( 83.7101, -118.71, -39.4189, 0.28 ) }
    dend_12 { pt3dadd( 87.8987, -123.262, -47.4212, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 91/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 8.71828, -29.6827, 24.7415, 0.28 ) }
    dend_8 { pt3dadd( 7.62281, -30.5572, 26.2788, 0.28 ) }
    dend_8 { pt3dadd( 5.36157, -32.3623, 29.452, 0.28 ) }
    dend_8 { pt3dadd( 4.73681, -32.8611, 30.3288, 0.56 ) }
    dend_8 { pt3dadd( 3.66259, -33.7186, 31.8362, 0.56 ) }
    dend_8 { pt3dadd( 2.15734, -34.9202, 33.9486, 0.56 ) }
    dend_8 { pt3dadd( 1.26256, -35.6345, 35.2042, 0.56 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 98/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 8.71828, -29.6827, 24.7415, 0.56 ) }
    dend_7 { pt3dadd( 11.6982, -28.7692, 25.9715, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 0/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -15.7758, -15.2151, 4.92963, 0.83 ) }
    dend_5 { pt3dadd( -18.2428, -8.36545, 13.0091, 0.83 ) }
    dend_5 { pt3dadd( -18.7635, -7.13651, 13.5725, 0.83 ) }
    dend_5 { pt3dadd( -19.4353, -5.60305, 13.9779, 0.83 ) }
    dend_5 { pt3dadd( -20.5896, -3.22778, 14.3776, 0.83 ) }
    dend_5 { pt3dadd( -22.6082, 0.888023, 15.0118, 0.56 ) }
    dend_5 { pt3dadd( -23.8993, 3.65302, 15.3924, 0.56 ) }
    dend_5 { pt3dadd( -25.9375, 8.11718, 15.1929, 0.56 ) }
    dend_5 { pt3dadd( -26.4423, 9.16213, 15.1525, 0.83 ) }
    dend_5 { pt3dadd( -28.0724, 12.2317, 15.0785, 0.56 ) }
    dend_5 { pt3dadd( -29.0245, 13.8804, 15.1241, 0.56 ) }
    dend_5 { pt3dadd( -30.4523, 16.3726, 15.4585, 0.83 ) }
    dend_5 { pt3dadd( -31.3875, 18.1306, 15.7571, 0.56 ) }
    dend_5 { pt3dadd( -32.6451, 20.4926, 16.2165, 0.56 ) }
    dend_5 { pt3dadd( -34.2925, 23.2557, 16.6902, 0.28 ) }
    dend_5 { pt3dadd( -35.6873, 25.521, 16.9466, 0.28 ) }
    dend_5 { pt3dadd( -36.7644, 27.1208, 17.0058, 0.28 ) }
    dend_5 { pt3dadd( -37.8224, 28.7287, 16.9897, 0.28 ) }
    dend_5 { pt3dadd( -38.7996, 30.3447, 16.9251, 0.56 ) }
    dend_5 { pt3dadd( -40.7167, 33.6942, 16.6343, 0.28 ) }
    dend_5 { pt3dadd( -42.085, 36.1386, 16.3311, 0.28 ) }
    dend_5 { pt3dadd( -43.7692, 39.1954, 15.8024, 0.83 ) }
    dend_5 { pt3dadd( -46.9428, 44.8434, 14.7512, 0.28 ) }
    dend_5 { pt3dadd( -47.9046, 46.6012, 14.3748, 0.83 ) }
    dend_5 { pt3dadd( -48.8487, 48.3728, 13.9652, 0.28 ) }
    dend_5 { pt3dadd( -49.8839, 50.4258, 13.385, 0.83 ) }
    dend_5 { pt3dadd( -51.4129, 53.3227, 12.478, 0.28 ) }
    dend_5 { pt3dadd( -51.8106, 54.073, 12.1781, 0.56 ) }
    dend_5 { pt3dadd( -53.0657, 56.1503, 10.9259, 0.28 ) }
    dend_5 { pt3dadd( -53.333, 56.5675, 10.6295, 0.56 ) }
    dend_5 { pt3dadd( -54.6858, 58.6979, 8.89657, 0.56 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 31/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -15.7758, -15.2151, 4.92963, 1.11 ) }
    dend_2 { pt3dadd( -17.6692, -18.1782, 1.04326, 1.11 ) }
    dend_2 { pt3dadd( -18.2784, -19.1316, -0.207218, 1.11 ) }
    dend_2 { pt3dadd( -20.2701, -22.2486, -4.29534, 1.11 ) }
    dend_2 { pt3dadd( -21.7976, -24.6391, -7.43074, 1.11 ) }
    dend_2 { pt3dadd( -23.7649, -27.7178, -11.4688, 1.11 ) }
    dend_2 { pt3dadd( -25.0155, -29.675, -14.0358, 1.11 ) }
    // Section: apic_11, id: apic_11, parent: apic_5 (entry count 38/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -103.383, -324.382, 38.8026, 0.56 ) }
    apic_11 { pt3dadd( -105.988, -326.082, 40.5763, 0.56 ) }
    apic_11 { pt3dadd( -108.463, -327.697, 42.2616, 0.28 ) }
    apic_11 { pt3dadd( -109.488, -328.365, 42.9595, 0.56 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 42/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -103.383, -324.382, 38.8026, 0.56 ) }
    apic_6 { pt3dadd( -104.151, -326.24, 40.3151, 0.56 ) }
    apic_6 { pt3dadd( -105.14, -328.813, 42.3051, 0.56 ) }
    apic_6 { pt3dadd( -105.534, -329.741, 42.9782, 0.83 ) }
    apic_6 { pt3dadd( -106.608, -331.773, 44.3058, 0.56 ) }
    apic_6 { pt3dadd( -107.272, -332.883, 44.9263, 0.56 ) }
    apic_6 { pt3dadd( -108.884, -335.577, 46.432, 0.56 ) }
    apic_6 { pt3dadd( -109.451, -336.358, 46.8149, 0.56 ) }
    apic_6 { pt3dadd( -110.351, -337.525, 47.2317, 0.56 ) }
    apic_6 { pt3dadd( -111.978, -339.707, 47.9974, 0.28 ) }
    apic_6 { pt3dadd( -112.883, -341.014, 48.3952, 0.83 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 53/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 11.7169, -48.1147, 36.8545, 0.56 ) }
    apic_4 { pt3dadd( 11.6585, -49.7428, 38.6334, 0.56 ) }
    apic_4 { pt3dadd( 11.6343, -51.3393, 40.4608, 0.56 ) }
    apic_4 { pt3dadd( 11.587, -54.4507, 44.0219, 0.56 ) }
    apic_4 { pt3dadd( 11.5704, -55.5442, 45.2735, 0.56 ) }
    apic_4 { pt3dadd( 11.5523, -56.7346, 46.6359, 0.56 ) }
    apic_4 { pt3dadd( 11.5124, -59.3535, 49.6334, 0.56 ) }
    apic_4 { pt3dadd( 11.6018, -60.6193, 51.1702, 0.56 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 61/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 11.7169, -48.1147, 36.8545, 0.83 ) }
    apic_3 { pt3dadd( 13.3972, -52.8543, 33.4519, 0.83 ) }
    apic_3 { pt3dadd( 13.7578, -54.6205, 32.5064, 0.83 ) }
    apic_3 { pt3dadd( 14.4638, -59.2851, 30.4446, 0.56 ) }
    apic_3 { pt3dadd( 14.6049, -60.2074, 30.0859, 0.56 ) }
    apic_3 { pt3dadd( 15.0678, -62.7316, 29.1791, 0.56 ) }
    apic_3 { pt3dadd( 15.5809, -64.865, 28.4156, 0.56 ) }
    apic_3 { pt3dadd( 16.7668, -69.081, 27.3379, 0.56 ) }
    apic_3 { pt3dadd( 17.5429, -71.6311, 26.5392, 0.56 ) }
    apic_3 { pt3dadd( 18.1178, -73.3055, 25.9675, 0.56 ) }
    apic_3 { pt3dadd( 18.8021, -74.8808, 25.3764, 0.56 ) }
    apic_3 { pt3dadd( 20.0571, -77.177, 24.4458, 0.56 ) }
    apic_3 { pt3dadd( 20.4838, -77.8122, 24.1519, 0.56 ) }
    apic_3 { pt3dadd( 23.6365, -81.9358, 22.0972, 0.83 ) }
    apic_3 { pt3dadd( 24.5297, -83.2828, 21.4824, 0.28 ) }
    apic_3 { pt3dadd( 25.8698, -85.9966, 20.2378, 0.83 ) }
    apic_3 { pt3dadd( 26.3806, -87.423, 19.6362, 0.56 ) }
    apic_3 { pt3dadd( 26.8534, -89.2769, 18.956, 0.56 ) }
    apic_3 { pt3dadd( 27.1462, -90.6231, 18.518, 0.28 ) }
    apic_3 { pt3dadd( 27.6932, -93.3332, 17.7581, 0.56 ) }
    apic_3 { pt3dadd( 28.3651, -96.762, 16.6498, 0.56 ) }
    apic_3 { pt3dadd( 28.8328, -98.8221, 15.9771, 0.56 ) }
    apic_3 { pt3dadd( 29.3354, -100.733, 15.4407, 0.28 ) }
    apic_3 { pt3dadd( 29.706, -101.841, 15.1814, 0.83 ) }
    apic_3 { pt3dadd( 30.7994, -104.188, 14.819, 0.28 ) }
    apic_3 { pt3dadd( 31.4248, -105.245, 14.7479, 1.11 ) }
    apic_3 { pt3dadd( 33.0072, -107.63, 14.8479, 0.56 ) }
    apic_3 { pt3dadd( 34.8133, -110.226, 15.0591, 0.56 ) }
    apic_3 { pt3dadd( 35.8837, -111.719, 15.121, 0.83 ) }
    apic_3 { pt3dadd( 36.99, -113.361, 15.223, 0.28 ) }
    apic_3 { pt3dadd( 37.2753, -113.844, 15.264, 0.56 ) }
    apic_3 { pt3dadd( 37.871, -114.992, 15.2713, 0.28 ) }
    apic_3 { pt3dadd( 38.7162, -116.737, 15.1312, 0.56 ) }
    apic_3 { pt3dadd( 40.2567, -119.769, 14.6821, 1.11 ) }
    apic_3 { pt3dadd( 41.5655, -122.668, 14.111, 0.28 ) }
    apic_3 { pt3dadd( 42.107, -123.982, 13.7296, 0.56 ) }
    apic_3 { pt3dadd( 42.9446, -126.153, 13.0315, 0.28 ) }
    apic_3 { pt3dadd( 43.3611, -127.336, 12.7026, 0.56 ) }
    apic_3 { pt3dadd( 43.6124, -128.197, 12.5205, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_3 { pt3dadd( 44.1723, -129.927, 12.2613, 0.83 ) }
    apic_3 { pt3dadd( 44.7677, -131.627, 11.952, 0.28 ) }
    apic_3 { pt3dadd( 44.9375, -132.184, 11.8761, 0.56 ) }
    apic_3 { pt3dadd( 45.6915, -135.071, 11.6002, 0.28 ) }
    apic_3 { pt3dadd( 46.0816, -136.574, 11.498, 1.39 ) }
    apic_3 { pt3dadd( 47.8222, -142.31, 11.2657, 0.28 ) }
    apic_3 { pt3dadd( 48.2514, -143.532, 11.256, 0.83 ) }
    apic_3 { pt3dadd( 49.1136, -145.635, 11.2626, 0.28 ) }
    apic_3 { pt3dadd( 49.3431, -146.174, 11.2562, 0.56 ) }
    apic_3 { pt3dadd( 50.3557, -148.486, 11.1855, 0.28 ) }
    apic_3 { pt3dadd( 51.8022, -151.532, 11.1298, 0.28 ) }
    apic_3 { pt3dadd( 52.3764, -152.749, 11.1341, 1.11 ) }
    apic_3 { pt3dadd( 53.6484, -155.377, 11.0868, 0.28 ) }
    apic_3 { pt3dadd( 54.4841, -157.017, 11.0226, 0.28 ) }
    apic_3 { pt3dadd( 54.6117, -157.28, 11.0087, 0.56 ) }
    apic_3 { pt3dadd( 55.6066, -159.569, 10.8474, 0.28 ) }
    apic_3 { pt3dadd( 56.0469, -160.674, 10.7832, 1.39 ) }
    apic_3 { pt3dadd( 57.0624, -163.249, 10.6758, 0.28 ) }
    apic_3 { pt3dadd( 57.6585, -164.674, 10.5816, 1.39 ) }
    apic_3 { pt3dadd( 58.4891, -166.423, 10.402, 0.28 ) }
    apic_3 { pt3dadd( 58.9912, -167.459, 10.2673, 0.28 ) }
    apic_3 { pt3dadd( 60.2471, -169.859, 9.88001, 0.28 ) }
    apic_3 { pt3dadd( 60.8833, -170.962, 9.67417, 0.83 ) }
    apic_3 { pt3dadd( 62.4777, -173.542, 9.13005, 0.28 ) }
    apic_3 { pt3dadd( 62.6928, -173.875, 9.05585, 0.56 ) }
    apic_3 { pt3dadd( 63.3256, -174.804, 8.85013, 0.56 ) }
    apic_3 { pt3dadd( 64.3913, -176.243, 8.55376, 0.28 ) }
    apic_3 { pt3dadd( 64.9288, -176.919, 8.45038, 0.28 ) }
    apic_3 { pt3dadd( 65.6675, -177.95, 8.37293, 1.39 ) }
    apic_3 { pt3dadd( 66.8654, -179.803, 8.37029, 0.28 ) }
    apic_3 { pt3dadd( 67.5581, -181.065, 8.39778, 0.28 ) }
    apic_3 { pt3dadd( 67.9929, -182.017, 8.43623, 0.83 ) }
    apic_3 { pt3dadd( 68.6774, -184.179, 8.64929, 0.28 ) }
    apic_3 { pt3dadd( 69.3853, -186.727, 9.0329, 0.28 ) }
    apic_3 { pt3dadd( 69.4481, -187.009, 9.08905, 0.56 ) }
    apic_3 { pt3dadd( 69.7919, -188.909, 9.59215, 0.28 ) }
    apic_3 { pt3dadd( 69.8864, -189.523, 9.77652, 0.83 ) }
    apic_3 { pt3dadd( 70.2415, -191.651, 10.342, 0.28 ) }
    apic_3 { pt3dadd( 70.548, -193.421, 10.7396, 0.28 ) }
    apic_3 { pt3dadd( 70.8021, -194.575, 10.9558, 1.39 ) }
    apic_3 { pt3dadd( 71.1509, -196.552, 11.2136, 0.28 ) }
    apic_3 { pt3dadd( 71.2378, -197.126, 11.2592, 0.83 ) }
    apic_3 { pt3dadd( 71.7142, -200.698, 11.3422, 0.28 ) }
    apic_3 { pt3dadd( 71.8541, -202.551, 11.2876, 0.28 ) }
    apic_3 { pt3dadd( 71.8705, -203.416, 11.2496, 0.83 ) }
    apic_3 { pt3dadd( 71.8597, -206.565, 11.0437, 0.28 ) }
    apic_3 { pt3dadd( 71.8514, -207.438, 10.9687, 1.67 ) }
    apic_3 { pt3dadd( 71.8732, -210.153, 10.7352, 0.28 ) }
    apic_3 { pt3dadd( 71.9701, -213.342, 10.5848, 0.28 ) }
    apic_3 { pt3dadd( 72.0814, -214.505, 10.5177, 0.56 ) }
    apic_3 { pt3dadd( 72.3337, -216.277, 10.4632, 0.28 ) }
    apic_3 { pt3dadd( 72.4732, -217.326, 10.4813, 0.56 ) }
    apic_3 { pt3dadd( 72.6047, -218.625, 10.5325, 0.28 ) }
    apic_3 { pt3dadd( 72.7939, -220.724, 10.6524, 0.56 ) }
    apic_3 { pt3dadd( 73.1306, -224.12, 10.8703, 0.28 ) }
    apic_3 { pt3dadd( 73.2913, -226.018, 11.0012, 1.11 ) }
    apic_3 { pt3dadd( 73.9624, -236.568, 11.7824, 0.28 ) }
    apic_3 { pt3dadd( 74.006, -237.773, 11.8644, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 58/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 90.4973, 45.1722, -41.976, 0.28 ) }
    dend_22 { pt3dadd( 92.2248, 47.9813, -45.4659, 0.28 ) }
    dend_22 { pt3dadd( 92.5508, 48.5195, -46.1214, 0.83 ) }
    dend_22 { pt3dadd( 94.6959, 52.3526, -50.2282, 0.28 ) }
    dend_22 { pt3dadd( 94.9774, 52.881, -50.7455, 0.56 ) }
    dend_22 { pt3dadd( 97.0172, 56.5701, -54.5898, 0.28 ) }
    dend_22 { pt3dadd( 98.067, 58.2379, -56.3446, 0.28 ) }
    dend_22 { pt3dadd( 98.3397, 58.6141, -56.7727, 0.83 ) }
    dend_22 { pt3dadd( 99.4848, 59.9522, -58.4091, 0.28 ) }
    dend_22 { pt3dadd( 99.809, 60.2967, -58.8378, 0.83 ) }
    dend_22 { pt3dadd( 102.82, 63.202, -62.6255, 0.56 ) }
    dend_22 { pt3dadd( 105.205, 65.2844, -65.4124, 0.28 ) }
    dend_22 { pt3dadd( 106.175, 66.0606, -66.4906, 0.83 ) }
    dend_22 { pt3dadd( 110.099, 69.1385, -70.8411, 0.56 ) }
    dend_22 { pt3dadd( 112.562, 70.9531, -73.4749, 0.28 ) }
    dend_22 { pt3dadd( 113.633, 71.7311, -74.5386, 0.28 ) }
    dend_22 { pt3dadd( 114.054, 72.0188, -74.9187, 0.56 ) }
    dend_22 { pt3dadd( 117.322, 74.069, -77.9974, 0.28 ) }
    dend_22 { pt3dadd( 118.546, 74.7795, -79.0924, 0.28 ) }
    dend_22 { pt3dadd( 119.752, 75.4634, -80.0451, 0.83 ) }
    dend_22 { pt3dadd( 120.869, 76.0532, -80.9002, 0.83 ) }
    dend_22 { pt3dadd( 124.295, 77.8515, -83.6521, 0.28 ) }
    dend_22 { pt3dadd( 126.373, 78.898, -85.3485, 1.11 ) }
    dend_22 { pt3dadd( 127.844, 79.572, -86.5481, 0.28 ) }
    dend_22 { pt3dadd( 129.148, 80.1312, -87.6653, 0.28 ) }
    dend_22 { pt3dadd( 129.744, 80.4182, -88.2377, 0.56 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 84/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 90.4973, 45.1722, -41.976, 0.56 ) }
    dend_21 { pt3dadd( 92.294, 43.8627, -41.3067, 0.56 ) }
    dend_21 { pt3dadd( 93.6253, 42.5793, -40.7308, 0.28 ) }
    dend_21 { pt3dadd( 94.6499, 41.2673, -40.2607, 1.11 ) }
    dend_21 { pt3dadd( 96.5394, 38.3562, -39.1363, 0.28 ) }
    dend_21 { pt3dadd( 97.4251, 36.717, -38.6087, 1.11 ) }
    dend_21 { pt3dadd( 98.8898, 33.7954, -37.771, 0.28 ) }
    dend_21 { pt3dadd( 100.257, 30.6362, -36.9615, 0.28 ) }
    dend_21 { pt3dadd( 101.522, 27.4866, -36.2107, 0.28 ) }
    dend_21 { pt3dadd( 102.627, 24.9243, -35.6596, 1.39 ) }
    dend_21 { pt3dadd( 104.588, 20.8643, -34.9174, 0.28 ) }
    dend_21 { pt3dadd( 105.303, 19.6291, -34.6964, 1.11 ) }
    dend_21 { pt3dadd( 107.515, 16.4151, -34.1839, 0.28 ) }
    dend_21 { pt3dadd( 107.906, 15.9314, -34.0901, 0.83 ) }
    dend_21 { pt3dadd( 111.444, 12.2113, -33.2782, 0.28 ) }
    dend_21 { pt3dadd( 112.17, 11.5214, -33.1141, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( 114.316, 9.61785, -32.4708, 0.28 ) }
    dend_21 { pt3dadd( 114.609, 9.35312, -32.3738, 0.56 ) }
    dend_21 { pt3dadd( 116.207, 7.86219, -32.0219, 0.28 ) }
    dend_21 { pt3dadd( 116.656, 7.41482, -31.9789, 0.56 ) }
    dend_21 { pt3dadd( 117.96, 6.07987, -32.1548, 0.28 ) }
    dend_21 { pt3dadd( 118.973, 5.09971, -32.424, 0.56 ) }
    dend_21 { pt3dadd( 119.363, 4.72198, -32.5805, 0.56 ) }
    dend_21 { pt3dadd( 123.022, 1.32712, -34.3514, 0.28 ) }
    dend_21 { pt3dadd( 123.043, 1.30909, -34.3643, 0.56 ) }
    dend_21 { pt3dadd( 124.825, -0.0595564, -35.541, 0.28 ) }
    dend_21 { pt3dadd( 125.423, -0.461989, -35.9979, 0.56 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 11/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 126.547, 40.504, -106.344, 0.28 ) }
    dend_17 { pt3dadd( 131.113, 43.3457, -110.369, 0.28 ) }
    dend_17 { pt3dadd( 131.873, 43.8504, -111.031, 1.11 ) }
    dend_17 { pt3dadd( 135.649, 46.5834, -114.308, 0.28 ) }
    dend_17 { pt3dadd( 136.054, 46.9202, -114.65, 0.83 ) }
    dend_17 { pt3dadd( 139.481, 49.9851, -117.468, 0.28 ) }
    dend_17 { pt3dadd( 139.736, 50.2246, -117.671, 0.56 ) }
    dend_17 { pt3dadd( 140.622, 51.2571, -118.364, 0.28 ) }
    dend_17 { pt3dadd( 141.242, 52.073, -118.872, 1.67 ) }
    dend_17 { pt3dadd( 144.096, 56.2589, -121.153, 0.28 ) }
    dend_17 { pt3dadd( 144.519, 56.8687, -121.479, 0.56 ) }
    dend_17 { pt3dadd( 145.943, 58.9423, -122.486, 0.28 ) }
    dend_17 { pt3dadd( 146.424, 59.6388, -122.838, 1.11 ) }
    dend_17 { pt3dadd( 148.079, 62.1204, -124.181, 0.28 ) }
    dend_17 { pt3dadd( 148.494, 62.721, -124.534, 0.56 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 26/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 126.547, 40.504, -106.344, 0.28 ) }
    dend_16 { pt3dadd( 127.658, 41.8157, -106.122, 0.28 ) }
    dend_16 { pt3dadd( 128.173, 42.356, -105.819, 0.83 ) }
    dend_16 { pt3dadd( 129.509, 43.4183, -104.849, 0.28 ) }
    dend_16 { pt3dadd( 130.065, 43.7667, -104.42, 0.56 ) }
    dend_16 { pt3dadd( 131.993, 44.6912, -103.306, 0.28 ) }
    dend_16 { pt3dadd( 132.338, 44.8172, -103.147, 0.56 ) }
    dend_16 { pt3dadd( 135.977, 45.1606, -101.903, 0.56 ) }
    dend_16 { pt3dadd( 137.519, 45.0654, -101.431, 0.28 ) }
    dend_16 { pt3dadd( 138.115, 44.9659, -101.282, 1.11 ) }
    dend_16 { pt3dadd( 141.482, 44.1486, -100.548, 0.28 ) }
    dend_16 { pt3dadd( 142.07, 43.9569, -100.464, 0.56 ) }
    dend_16 { pt3dadd( 144.887, 43.1139, -100.46, 0.28 ) }
    dend_16 { pt3dadd( 146.607, 42.6488, -100.855, 0.56 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 40/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 87.8987, -123.262, -47.4212, 0.83 ) }
    dend_14 { pt3dadd( 93.7308, -131.794, -49.5373, 0.83 ) }
    dend_14 { pt3dadd( 95.716, -134.477, -50.1694, 0.28 ) }
    dend_14 { pt3dadd( 96.9954, -136.144, -50.5718, 1.39 ) }
    dend_14 { pt3dadd( 99.6117, -139.322, -51.3603, 0.28 ) }
    dend_14 { pt3dadd( 100.727, -140.607, -51.6622, 0.28 ) }
    dend_14 { pt3dadd( 102.238, -142.272, -52.0802, 0.28 ) }
    dend_14 { pt3dadd( 102.91, -142.989, -52.3726, 0.28 ) }
    dend_14 { pt3dadd( 103.386, -143.483, -52.4947, 0.56 ) }
    dend_14 { pt3dadd( 105.429, -145.636, -52.8023, 0.28 ) }
    dend_14 { pt3dadd( 106.525, -146.816, -52.8867, 1.39 ) }
    dend_14 { pt3dadd( 109.235, -150.137, -53.1956, 0.28 ) }
    dend_14 { pt3dadd( 110.078, -151.41, -53.3223, 0.83 ) }
    dend_14 { pt3dadd( 110.972, -152.993, -53.5524, 0.28 ) }
    dend_14 { pt3dadd( 112.058, -155.182, -53.9238, 0.28 ) }
    dend_14 { pt3dadd( 112.517, -156.302, -54.1722, 0.83 ) }
    dend_14 { pt3dadd( 113.687, -159.487, -55.0202, 0.28 ) }
    dend_14 { pt3dadd( 114.253, -161.049, -55.5183, 1.11 ) }
    dend_14 { pt3dadd( 115.74, -164.825, -56.9029, 0.28 ) }
    dend_14 { pt3dadd( 116.348, -166.27, -57.4879, 1.39 ) }
    dend_14 { pt3dadd( 117.374, -168.477, -58.4346, 0.28 ) }
    dend_14 { pt3dadd( 117.76, -169.127, -58.7162, 0.56 ) }
    dend_14 { pt3dadd( 120.068, -171.843, -59.8755, 0.28 ) }
    dend_14 { pt3dadd( 120.787, -172.518, -60.1677, 0.83 ) }
    dend_14 { pt3dadd( 123.369, -174.19, -60.8761, 0.28 ) }
    dend_14 { pt3dadd( 124.411, -174.667, -61.0887, 1.39 ) }
    dend_14 { pt3dadd( 127.76, -175.621, -61.5741, 0.28 ) }
    dend_14 { pt3dadd( 130.816, -176.106, -61.9118, 0.28 ) }
    dend_14 { pt3dadd( 131.097, -176.116, -61.9263, 0.56 ) }
    dend_14 { pt3dadd( 135.022, -176.017, -62.009, 0.28 ) }
    dend_14 { pt3dadd( 136.172, -175.944, -61.9975, 0.56 ) }
    dend_14 { pt3dadd( 138.782, -175.826, -61.9666, 0.28 ) }
    dend_14 { pt3dadd( 140.247, -175.85, -61.9192, 1.11 ) }
    dend_14 { pt3dadd( 142.401, -176.024, -61.8196, 0.28 ) }
    dend_14 { pt3dadd( 143.383, -176.196, -61.7648, 0.56 ) }
    dend_14 { pt3dadd( 147.814, -177.392, -61.4698, 0.28 ) }
    dend_14 { pt3dadd( 149.356, -177.912, -61.3599, 1.39 ) }
    dend_14 { pt3dadd( 152.551, -179.236, -61.1243, 0.28 ) }
    dend_14 { pt3dadd( 153.812, -179.841, -61.0675, 0.56 ) }
    dend_14 { pt3dadd( 156.425, -181.291, -60.958, 0.28 ) }
    dend_14 { pt3dadd( 157.168, -181.765, -60.9103, 0.56 ) }
    dend_14 { pt3dadd( 158.641, -182.824, -60.7826, 0.28 ) }
    dend_14 { pt3dadd( 160.063, -183.935, -60.6521, 0.83 ) }
    dend_14 { pt3dadd( 161.969, -185.518, -60.4846, 0.28 ) }
    dend_14 { pt3dadd( 163.398, -186.784, -60.3427, 1.39 ) }
    dend_14 { pt3dadd( 165.315, -188.596, -60.1241, 0.28 ) }
    dend_14 { pt3dadd( 166.707, -190.054, -59.9778, 0.28 ) }
    dend_14 { pt3dadd( 167.854, -191.333, -59.7977, 0.28 ) }
    dend_14 { pt3dadd( 168.68, -192.283, -59.5986, 0.83 ) }
    dend_14 { pt3dadd( 169.351, -193.039, -59.398, 0.28 ) }
    dend_14 { pt3dadd( 170.056, -193.769, -59.2149, 0.83 ) }
    dend_14 { pt3dadd( 171.114, -194.82, -58.7549, 0.28 ) }
    dend_14 { pt3dadd( 172.627, -196.328, -58.0172, 0.83 ) }
    dend_14 { pt3dadd( 174.398, -197.937, -57.1082, 0.28 ) }
    dend_14 { pt3dadd( 175.396, -198.818, -56.5567, 0.28 ) }
    dend_14 { pt3dadd( 177.962, -200.909, -55.0898, 0.28 ) }
    dend_14 { pt3dadd( 180.549, -202.807, -53.6136, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 97/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 87.8987, -123.262, -47.4212, 0.56 ) }
    dend_13 { pt3dadd( 92.3853, -129.541, -34.876, 0.56 ) }
    dend_13 { pt3dadd( 93.1047, -130.849, -32.8043, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( 93.5791, -131.846, -31.4214, 0.28 ) }
    dend_13 { pt3dadd( 93.8971, -132.557, -30.538, 0.56 ) }
    dend_13 { pt3dadd( 95.2957, -135.843, -26.7584, 0.28 ) }
    dend_13 { pt3dadd( 95.7643, -136.92, -25.6647, 1.11 ) }
    dend_13 { pt3dadd( 97.1838, -141.094, -23.1135, 0.28 ) }
    dend_13 { pt3dadd( 97.4261, -141.805, -22.684, 0.56 ) }
    dend_13 { pt3dadd( 98.126, -143.701, -21.6398, 0.28 ) }
    dend_13 { pt3dadd( 98.434, -144.52, -21.2301, 0.83 ) }
    dend_13 { pt3dadd( 99.7422, -147.951, -19.8434, 0.28 ) }
    dend_13 { pt3dadd( 101.13, -151.307, -18.5655, 0.28 ) }
    dend_13 { pt3dadd( 101.617, -152.526, -18.2076, 0.83 ) }
    dend_13 { pt3dadd( 102.588, -155.143, -17.5163, 0.28 ) }
    dend_13 { pt3dadd( 102.751, -155.668, -17.3862, 0.56 ) }
    dend_13 { pt3dadd( 103.479, -158.257, -16.7488, 0.28 ) }
    dend_13 { pt3dadd( 103.552, -158.525, -16.6541, 0.56 ) }
    dend_13 { pt3dadd( 104.084, -160.326, -16.0127, 0.28 ) }
    dend_13 { pt3dadd( 104.22, -160.678, -15.8753, 0.56 ) }
    dend_13 { pt3dadd( 105.536, -163.444, -14.3779, 0.28 ) }
    dend_13 { pt3dadd( 105.879, -164.018, -14.0221, 1.11 ) }
    dend_13 { pt3dadd( 108.471, -168.062, -11.3119, 0.28 ) }
    dend_13 { pt3dadd( 108.754, -168.466, -11.0156, 0.56 ) }
    dend_13 { pt3dadd( 110.496, -170.807, -9.19417, 0.28 ) }
    dend_13 { pt3dadd( 111.979, -172.705, -7.71325, 0.56 ) }
    dend_13 { pt3dadd( 115.745, -177.12, -4.20035, 0.28 ) }
    dend_13 { pt3dadd( 116.403, -177.872, -3.60209, 0.56 ) }
    dend_13 { pt3dadd( 117.47, -179.02, -2.71426, 0.56 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 26/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -25.0155, -29.675, -14.0358, 0.56 ) }
    dend_4 { pt3dadd( -28.1106, -32.5501, -14.8362, 0.56 ) }
    dend_4 { pt3dadd( -28.9272, -33.4883, -15.1296, 0.56 ) }
    dend_4 { pt3dadd( -30.5077, -35.2876, -15.6972, 0.56 ) }
    dend_4 { pt3dadd( -32.4172, -37.2509, -16.3355, 0.83 ) }
    dend_4 { pt3dadd( -34.9418, -39.5963, -17.1007, 0.83 ) }
    dend_4 { pt3dadd( -37.4693, -42.0058, -17.9202, 0.83 ) }
    dend_4 { pt3dadd( -39.1525, -43.9408, -18.7173, 0.56 ) }
    dend_4 { pt3dadd( -39.8319, -44.8355, -19.0562, 0.56 ) }
    dend_4 { pt3dadd( -40.904, -46.3338, -19.6107, 0.83 ) }
    dend_4 { pt3dadd( -41.9096, -47.6862, -19.9951, 0.56 ) }
    dend_4 { pt3dadd( -43.6484, -49.9331, -20.3649, 0.56 ) }
    dend_4 { pt3dadd( -45.2853, -52.2972, -20.5521, 0.56 ) }
    dend_4 { pt3dadd( -46.1733, -53.6499, -20.5802, 0.56 ) }
    dend_4 { pt3dadd( -46.7371, -54.7027, -20.6239, 0.56 ) }
    dend_4 { pt3dadd( -47.5096, -56.4783, -20.7927, 0.56 ) }
    dend_4 { pt3dadd( -48.3965, -58.9724, -21.1205, 1.39 ) }
    dend_4 { pt3dadd( -49.2343, -61.6692, -21.6211, 0.56 ) }
    dend_4 { pt3dadd( -50.135, -64.7665, -22.3903, 0.56 ) }
    dend_4 { pt3dadd( -51.0206, -68.5841, -23.6885, 0.83 ) }
    dend_4 { pt3dadd( -51.429, -71.0762, -24.6799, 0.56 ) }
    dend_4 { pt3dadd( -51.6499, -73.1763, -25.6834, 1.11 ) }
    dend_4 { pt3dadd( -51.9274, -75.68, -27.1352, 0.56 ) }
    dend_4 { pt3dadd( -52.21, -77.6874, -28.3922, 0.83 ) }
    dend_4 { pt3dadd( -52.7758, -80.6418, -30.3615, 0.28 ) }
    dend_4 { pt3dadd( -53.2637, -82.3412, -31.4647, 0.28 ) }
    dend_4 { pt3dadd( -53.9864, -84.4943, -32.8369, 0.83 ) }
    dend_4 { pt3dadd( -55.1262, -87.6793, -34.8977, 0.28 ) }
    dend_4 { pt3dadd( -55.7727, -89.5007, -36.0277, 1.11 ) }
    dend_4 { pt3dadd( -56.4905, -91.5095, -37.1724, 0.28 ) }
    dend_4 { pt3dadd( -56.6868, -91.978, -37.4124, 0.83 ) }
    dend_4 { pt3dadd( -57.7546, -94.2882, -38.6534, 0.28 ) }
    dend_4 { pt3dadd( -58.2135, -95.2533, -39.1508, 0.83 ) }
    dend_4 { pt3dadd( -59.5047, -98.0437, -40.577, 0.28 ) }
    dend_4 { pt3dadd( -60.3823, -99.899, -41.5173, 0.83 ) }
    dend_4 { pt3dadd( -61.3615, -101.943, -42.4926, 0.28 ) }
    dend_4 { pt3dadd( -62.7584, -104.876, -43.8207, 0.56 ) }
    dend_4 { pt3dadd( -63.4252, -106.24, -44.4008, 1.67 ) }
    dend_4 { pt3dadd( -64.6767, -108.928, -45.4852, 0.28 ) }
    dend_4 { pt3dadd( -65.3942, -110.677, -46.1407, 0.28 ) }
    dend_4 { pt3dadd( -65.6636, -111.459, -46.4324, 0.56 ) }
    dend_4 { pt3dadd( -66.327, -113.915, -47.2738, 0.28 ) }
    dend_4 { pt3dadd( -66.4999, -114.776, -47.5485, 0.56 ) }
    dend_4 { pt3dadd( -66.7417, -116.162, -48.0264, 0.28 ) }
    dend_4 { pt3dadd( -67.0706, -118.505, -48.8392, 1.39 ) }
    dend_4 { pt3dadd( -67.3799, -121.351, -49.8875, 0.28 ) }
    dend_4 { pt3dadd( -67.4711, -122.202, -50.2198, 0.56 ) }
    dend_4 { pt3dadd( -67.5994, -123.513, -50.7586, 0.28 ) }
    dend_4 { pt3dadd( -67.7577, -124.94, -51.3582, 0.28 ) }
    dend_4 { pt3dadd( -68.0684, -126.612, -51.868, 0.28 ) }
    dend_4 { pt3dadd( -68.3594, -127.607, -51.9368, 1.11 ) }
    dend_4 { pt3dadd( -69.1407, -129.502, -51.7348, 0.28 ) }
    dend_4 { pt3dadd( -69.1407, -129.502, -51.7348, 0.56 ) }
    dend_4 { pt3dadd( -70.2971, -131.561, -51.1637, 0.28 ) }
    dend_4 { pt3dadd( -72.1893, -134.727, -50.1011, 0.83 ) }
    dend_4 { pt3dadd( -73.7319, -137.117, -49.3356, 0.28 ) }
    dend_4 { pt3dadd( -74.3407, -138.041, -49.0531, 0.56 ) }
    dend_4 { pt3dadd( -76.3462, -141.164, -48.1403, 0.28 ) }
    dend_4 { pt3dadd( -77.2175, -142.558, -47.8253, 1.11 ) }
    dend_4 { pt3dadd( -78.7449, -145.136, -47.5104, 0.28 ) }
    dend_4 { pt3dadd( -79.8885, -147.241, -47.5428, 1.11 ) }
    dend_4 { pt3dadd( -81.2125, -149.912, -47.6846, 0.28 ) }
    dend_4 { pt3dadd( -81.8762, -151.315, -47.7746, 0.28 ) }
    dend_4 { pt3dadd( -82.6217, -152.885, -47.9306, 0.56 ) }
    dend_4 { pt3dadd( -83.7512, -155.198, -48.0938, 0.28 ) }
    dend_4 { pt3dadd( -84.5316, -156.765, -48.2271, 0.83 ) }
    dend_4 { pt3dadd( -86.0846, -159.608, -48.3491, 0.28 ) }
    dend_4 { pt3dadd( -86.5408, -160.341, -48.3821, 0.56 ) }
    dend_4 { pt3dadd( -87.9505, -162.488, -48.5469, 0.28 ) }
    dend_4 { pt3dadd( -89.0517, -164.046, -48.6885, 1.11 ) }
    dend_4 { pt3dadd( -90.8035, -166.317, -49.1643, 0.28 ) }
    dend_4 { pt3dadd( -91.5235, -167.184, -49.5542, 0.28 ) }
    dend_4 { pt3dadd( -92.5313, -168.324, -50.2323, 0.56 ) }
    dend_4 { pt3dadd( -94.3267, -170.467, -51.6465, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_4 { pt3dadd( -95.5893, -172.021, -52.7454, 0.56 ) }
    dend_4 { pt3dadd( -97.001, -173.926, -54.0856, 1.39 ) }
    dend_4 { pt3dadd( -99.495, -177.602, -56.4436, 0.28 ) }
    dend_4 { pt3dadd( -100.172, -178.785, -57.1739, 0.56 ) }
    dend_4 { pt3dadd( -101.07, -180.571, -58.229, 0.28 ) }
    dend_4 { pt3dadd( -101.426, -181.441, -58.6864, 0.56 ) }
    dend_4 { pt3dadd( -102.006, -183.449, -59.6, 0.28 ) }
    dend_4 { pt3dadd( -102.233, -184.511, -60.0089, 0.83 ) }
    dend_4 { pt3dadd( -102.659, -187.224, -60.9173, 0.28 ) }
    dend_4 { pt3dadd( -102.779, -187.983, -61.2088, 0.83 ) }
    dend_4 { pt3dadd( -103.332, -190.871, -62.4953, 0.28 ) }
    dend_4 { pt3dadd( -103.786, -193.043, -63.6068, 0.56 ) }
    dend_4 { pt3dadd( -104.378, -195.552, -65.001, 0.28 ) }
    dend_4 { pt3dadd( -104.573, -196.322, -65.4476, 0.83 ) }
    dend_4 { pt3dadd( -105.956, -201.44, -68.4182, 0.28 ) }
    dend_4 { pt3dadd( -106.526, -203.536, -69.6566, 1.94 ) }
    dend_4 { pt3dadd( -107.478, -206.793, -71.6265, 0.28 ) }
    dend_4 { pt3dadd( -107.633, -207.322, -71.9563, 0.56 ) }
    dend_4 { pt3dadd( -108.258, -209.321, -73.028, 0.28 ) }
    dend_4 { pt3dadd( -108.472, -209.901, -73.2134, 0.56 ) }
    dend_4 { pt3dadd( -109.014, -211.111, -73.182, 0.28 ) }
    dend_4 { pt3dadd( -109.372, -211.884, -73.0216, 0.56 ) }
    dend_4 { pt3dadd( -110.268, -213.743, -72.4619, 0.28 ) }
    dend_4 { pt3dadd( -112.38, -217.953, -71.1705, 1.39 ) }
    dend_4 { pt3dadd( -114.653, -222.372, -69.8977, 0.28 ) }
    dend_4 { pt3dadd( -115.865, -224.749, -69.3516, 0.83 ) }
    dend_4 { pt3dadd( -116.956, -226.852, -68.9494, 0.28 ) }
    dend_4 { pt3dadd( -117.612, -228.131, -68.8099, 0.83 ) }
    dend_4 { pt3dadd( -119.53, -231.998, -68.7054, 0.28 ) }
    dend_4 { pt3dadd( -120.286, -233.627, -68.8792, 1.11 ) }
    dend_4 { pt3dadd( -121.851, -237.264, -69.6483, 0.28 ) }
    dend_4 { pt3dadd( -122.192, -238.09, -69.8501, 0.56 ) }
    dend_4 { pt3dadd( -123.639, -241.549, -70.9618, 0.28 ) }
    dend_4 { pt3dadd( -124.406, -243.338, -71.6212, 0.28 ) }
    dend_4 { pt3dadd( -124.828, -244.126, -72.0529, 1.11 ) }
    dend_4 { pt3dadd( -126.71, -247.119, -73.9438, 0.28 ) }
    dend_4 { pt3dadd( -127.924, -248.772, -75.2901, 0.56 ) }
    dend_4 { pt3dadd( -129.697, -250.926, -77.2347, 0.28 ) }
    dend_4 { pt3dadd( -130.486, -251.742, -78.0588, 1.11 ) }
    dend_4 { pt3dadd( -136.046, -256.905, -83.7591, 0.28 ) }
    dend_4 { pt3dadd( -136.532, -257.311, -84.232, 0.83 ) }
    dend_4 { pt3dadd( -139.24, -259.437, -86.9117, 0.28 ) }
    dend_4 { pt3dadd( -140.629, -260.51, -88.362, 0.56 ) }
    dend_4 { pt3dadd( -141.182, -260.93, -88.9194, 0.56 ) }
    dend_4 { pt3dadd( -142.792, -262.086, -90.5569, 0.56 ) }
    dend_4 { pt3dadd( -144.368, -262.989, -91.8678, 0.56 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 46/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -25.0155, -29.675, -14.0358, 0.83 ) }
    dend_3 { pt3dadd( -24.763, -32.3161, -13.0167, 0.83 ) }
    dend_3 { pt3dadd( -24.2663, -35.2121, -12.2923, 0.83 ) }
    dend_3 { pt3dadd( -24.0271, -37.3924, -11.8561, 0.56 ) }
    dend_3 { pt3dadd( -23.8311, -41.055, -11.2359, 0.83 ) }
    dend_3 { pt3dadd( -23.8492, -43.1396, -10.9252, 0.56 ) }
    dend_3 { pt3dadd( -23.9555, -45.4455, -10.6081, 0.56 ) }
    dend_3 { pt3dadd( -24.5909, -51.9239, -9.85137, 0.83 ) }
    dend_3 { pt3dadd( -24.8416, -54.405, -9.55913, 1.11 ) }
    dend_3 { pt3dadd( -24.9385, -56.4912, -9.31525, 0.83 ) }
    dend_3 { pt3dadd( -24.8909, -58.5719, -9.03966, 0.83 ) }
    dend_3 { pt3dadd( -24.851, -59.7683, -8.87153, 0.83 ) }
    dend_3 { pt3dadd( -24.7513, -63.2701, -8.45242, 0.83 ) }
    dend_3 { pt3dadd( -24.738, -66.5111, -8.03032, 0.83 ) }
    dend_3 { pt3dadd( -24.7367, -68.1969, -7.81422, 0.56 ) }
    dend_3 { pt3dadd( -24.8804, -70.4101, -7.58075, 0.56 ) }
    dend_3 { pt3dadd( -25.065, -71.846, -7.44005, 0.56 ) }
    dend_3 { pt3dadd( -25.5349, -74.292, -7.25496, 0.83 ) }
    dend_3 { pt3dadd( -26.1912, -76.8936, -7.13737, 0.56 ) }
    dend_3 { pt3dadd( -26.8705, -79.5018, -6.8005, 0.83 ) }
    dend_3 { pt3dadd( -27.4412, -82.1188, -6.22314, 0.56 ) }
    dend_3 { pt3dadd( -27.7374, -83.9027, -5.76714, 0.56 ) }
    dend_3 { pt3dadd( -28.0114, -86.4254, -5.11464, 0.28 ) }
    dend_3 { pt3dadd( -28.1005, -87.8285, -4.72702, 0.83 ) }
    dend_3 { pt3dadd( -28.1313, -92.395, -3.5156, 0.28 ) }
    dend_3 { pt3dadd( -28.0975, -93.9448, -3.14274, 0.56 ) }
    dend_3 { pt3dadd( -27.9841, -96.4511, -2.52211, 0.28 ) }
    dend_3 { pt3dadd( -27.8725, -100.479, -1.59211, 0.83 ) }
    dend_3 { pt3dadd( -27.9088, -103.044, -1.03526, 0.56 ) }
    dend_3 { pt3dadd( -27.9494, -106.029, -0.467508, 1.11 ) }
    dend_3 { pt3dadd( -27.8833, -108.065, -0.175474, 0.56 ) }
    dend_3 { pt3dadd( -27.6347, -111.141, 0.27276, 0.56 ) }
    dend_3 { pt3dadd( -27.5168, -112.05, 0.435222, 0.56 ) }
    dend_3 { pt3dadd( -27.1456, -114.648, 0.962856, 0.83 ) }
    dend_3 { pt3dadd( -26.8897, -116.722, 1.44013, 0.28 ) }
    dend_3 { pt3dadd( -26.657, -118.89, 2.06171, 0.83 ) }
    dend_3 { pt3dadd( -26.5973, -120.552, 2.58898, 0.28 ) }
    dend_3 { pt3dadd( -26.6472, -121.571, 2.85218, 0.56 ) }
    dend_3 { pt3dadd( -26.8402, -125.004, 3.58923, 0.83 ) }
    dend_3 { pt3dadd( -27.0298, -127.711, 3.98823, 0.28 ) }
    dend_3 { pt3dadd( -27.2196, -129.184, 4.1199, 0.56 ) }
    dend_3 { pt3dadd( -27.7159, -132.489, 4.25186, 0.83 ) }
    dend_3 { pt3dadd( -28.1619, -135.929, 4.19157, 0.28 ) }
    dend_3 { pt3dadd( -28.3983, -139.501, 3.72442, 0.83 ) }
    dend_3 { pt3dadd( -28.4266, -141.602, 3.16026, 0.28 ) }
    dend_3 { pt3dadd( -28.3696, -142.72, 2.75994, 0.28 ) }
    dend_3 { pt3dadd( -28.2172, -143.865, 2.33856, 0.28 ) }
    dend_3 { pt3dadd( -28.0048, -144.979, 1.98111, 1.11 ) }
    dend_3 { pt3dadd( -27.3637, -148.345, 1.29714, 0.28 ) }
    dend_3 { pt3dadd( -27.2638, -148.992, 1.20669, 0.56 ) }
    dend_3 { pt3dadd( -27.0887, -150.916, 0.995886, 0.56 ) }
    dend_3 { pt3dadd( -26.8244, -153.937, 0.67271, 0.28 ) }
    dend_3 { pt3dadd( -26.5763, -156.911, 0.381207, 0.56 ) }
    dend_3 { pt3dadd( -26.4227, -159.265, 0.266977, 1.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_3 { pt3dadd( -26.3586, -161.303, 0.283195, 0.56 ) }
    dend_3 { pt3dadd( -26.2862, -164.932, 0.354712, 0.28 ) }
    dend_3 { pt3dadd( -26.2543, -166.968, 0.415524, 1.11 ) }
    dend_3 { pt3dadd( -26.1506, -168.657, 0.568573, 0.83 ) }
    dend_3 { pt3dadd( -25.8152, -171.256, 1.01829, 0.28 ) }
    dend_3 { pt3dadd( -25.6836, -172.128, 1.26971, 0.56 ) }
    dend_3 { pt3dadd( -25.5015, -173.465, 1.8724, 0.28 ) }
    dend_3 { pt3dadd( -25.3594, -175.038, 2.80808, 0.28 ) }
    dend_3 { pt3dadd( -25.1893, -177.936, 4.6302, 0.28 ) }
    dend_3 { pt3dadd( -25.1495, -178.816, 5.18787, 0.83 ) }
    dend_3 { pt3dadd( -24.9933, -180.324, 6.13944, 0.28 ) }
    dend_3 { pt3dadd( -24.6907, -182.511, 7.53441, 0.83 ) }
    dend_3 { pt3dadd( -24.4549, -184.319, 8.65577, 0.28 ) }
    dend_3 { pt3dadd( -24.2813, -185.905, 9.54503, 0.28 ) }
    dend_3 { pt3dadd( -23.95, -188.143, 10.6563, 1.39 ) }
    dend_3 { pt3dadd( -23.3732, -191.108, 11.8486, 0.28 ) }
    dend_3 { pt3dadd( -23.1869, -192.091, 12.1274, 0.28 ) }
    dend_3 { pt3dadd( -22.8894, -193.891, 12.4628, 0.56 ) }
    dend_3 { pt3dadd( -22.6402, -195.896, 12.7087, 0.83 ) }
    dend_3 { pt3dadd( -22.5131, -198.875, 13.0425, 0.28 ) }
    dend_3 { pt3dadd( -22.5114, -201.008, 13.2349, 0.56 ) }
    dend_3 { pt3dadd( -22.6694, -203.502, 13.4026, 0.56 ) }
    dend_3 { pt3dadd( -22.8878, -205.45, 13.547, 0.28 ) }
    dend_3 { pt3dadd( -23.1492, -207.228, 13.6044, 1.39 ) }
    dend_3 { pt3dadd( -23.6054, -209.634, 13.5847, 0.28 ) }
    dend_3 { pt3dadd( -23.79, -210.475, 13.5144, 0.56 ) }
    dend_3 { pt3dadd( -24.1852, -212.494, 13.3016, 0.28 ) }
    dend_3 { pt3dadd( -24.3327, -213.927, 13.136, 0.56 ) }
    dend_3 { pt3dadd( -24.4914, -216.654, 12.8216, 0.28 ) }
    dend_3 { pt3dadd( -24.5103, -217.241, 12.757, 0.83 ) }
    dend_3 { pt3dadd( -24.4662, -219.127, 12.6468, 0.28 ) }
    dend_3 { pt3dadd( -24.3594, -221.171, 12.6777, 0.83 ) }
    dend_3 { pt3dadd( -24.0498, -224.337, 12.9594, 0.56 ) }
    dend_3 { pt3dadd( -23.7485, -226.636, 13.2937, 0.28 ) }
    dend_3 { pt3dadd( -23.5932, -227.809, 13.522, 1.11 ) }
    dend_3 { pt3dadd( -23.4097, -231.043, 14.208, 0.28 ) }
    dend_3 { pt3dadd( -23.4141, -232.182, 14.4708, 0.83 ) }
    dend_3 { pt3dadd( -23.4794, -234.53, 14.9876, 0.28 ) }
    dend_3 { pt3dadd( -23.6562, -237.395, 15.5191, 0.28 ) }
    dend_3 { pt3dadd( -23.7268, -238.415, 15.7108, 0.56 ) }
    dend_3 { pt3dadd( -24.2889, -243.002, 16.5002, 0.28 ) }
    dend_3 { pt3dadd( -24.3877, -243.404, 16.5498, 0.56 ) }
    // Section: apic_10, id: apic_10, parent: apic_6 (entry count 42/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -112.883, -341.014, 48.3952, 0.28 ) }
    apic_10 { pt3dadd( -110.277, -343.114, 49.2612, 0.28 ) }
    apic_10 { pt3dadd( -109.846, -343.461, 49.4045, 0.56 ) }
    apic_10 { pt3dadd( -108.556, -344.501, 49.8331, 0.28 ) }
    apic_10 { pt3dadd( -108.251, -344.747, 49.9347, 0.56 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 47/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -112.883, -341.014, 48.3952, 0.56 ) }
    apic_7 { pt3dadd( -114.685, -344.439, 48.3879, 0.56 ) }
    apic_7 { pt3dadd( -115.447, -345.792, 48.384, 0.56 ) }
    apic_7 { pt3dadd( -116.309, -347.215, 48.3795, 0.56 ) }
    apic_7 { pt3dadd( -117.431, -349.104, 48.221, 0.56 ) }
    apic_7 { pt3dadd( -118.603, -351.174, 47.9629, 0.28 ) }
    apic_7 { pt3dadd( -120.139, -353.969, 47.5262, 0.56 ) }
    apic_7 { pt3dadd( -120.948, -355.499, 47.1612, 0.28 ) }
    apic_7 { pt3dadd( -121.475, -356.633, 46.8454, 0.83 ) }
    apic_7 { pt3dadd( -122.702, -359.875, 45.9689, 0.56 ) }
    apic_7 { pt3dadd( -123.48, -362.501, 45.1787, 0.56 ) }
    apic_7 { pt3dadd( -123.638, -363.654, 44.8328, 0.28 ) }
    apic_7 { pt3dadd( -123.66, -366.061, 44.0084, 0.28 ) }
    apic_7 { pt3dadd( -123.56, -367.811, 43.3721, 0.56 ) }
    apic_7 { pt3dadd( -123.227, -370.164, 42.5298, 1.39 ) }
    apic_7 { pt3dadd( -122.589, -372.749, 41.582, 0.56 ) }
    apic_7 { pt3dadd( -121.766, -375.691, 40.4032, 0.56 ) }
    apic_7 { pt3dadd( -121.02, -378.071, 39.46, 0.28 ) }
    apic_7 { pt3dadd( -120.668, -379.133, 39.0477, 0.28 ) }
    apic_7 { pt3dadd( -120.293, -380.067, 38.7467, 0.83 ) }
    apic_7 { pt3dadd( -119.378, -382.154, 38.2421, 0.28 ) }
    apic_7 { pt3dadd( -118.238, -384.805, 37.9525, 0.28 ) }
    apic_7 { pt3dadd( -117.441, -386.74, 37.898, 0.28 ) }
    apic_7 { pt3dadd( -116.837, -388.178, 37.963, 1.11 ) }
    apic_7 { pt3dadd( -115.613, -391.307, 38.154, 0.28 ) }
    apic_7 { pt3dadd( -115.139, -392.792, 38.241, 0.83 ) }
    apic_7 { pt3dadd( -114.814, -394.022, 38.3244, 0.28 ) }
    apic_7 { pt3dadd( -114.254, -396.044, 38.441, 0.28 ) }
    apic_7 { pt3dadd( -113.895, -397.754, 38.4978, 0.28 ) }
    apic_7 { pt3dadd( -113.693, -398.956, 38.4811, 2.22 ) }
    apic_7 { pt3dadd( -113.319, -402.294, 38.1111, 0.28 ) }
    apic_7 { pt3dadd( -113.285, -402.944, 38.0376, 0.56 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 79/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -113.285, -402.944, 38.0376, 0.28 ) }
    apic_9 { pt3dadd( -112.68, -406.115, 37.3434, 0.28 ) }
    apic_9 { pt3dadd( -112.487, -407.126, 37.1221, 0.56 ) }
    apic_9 { pt3dadd( -111.956, -409.905, 36.5136, 0.28 ) }
    apic_9 { pt3dadd( -111.881, -410.297, 36.4277, 0.56 ) }
    apic_9 { pt3dadd( -111.258, -413.562, 35.713, 0.28 ) }
    apic_9 { pt3dadd( -111.137, -414.194, 35.5746, 0.56 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 86/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -113.285, -402.944, 38.0376, 0.28 ) }
    apic_8 { pt3dadd( -114.66, -404.771, 37.9771, 0.28 ) }
    apic_8 { pt3dadd( -115.212, -405.486, 37.8962, 0.56 ) }
    apic_8 { pt3dadd( -116.704, -407.233, 37.7658, 0.28 ) }
    apic_8 { pt3dadd( -117.536, -408.205, 37.7118, 0.56 ) }
    apic_8 { pt3dadd( -118.75, -409.671, 37.5658, 0.28 ) }
    apic_8 { pt3dadd( -120.02, -411.682, 37.4349, 0.28 ) }
    apic_8 { pt3dadd( -120.977, -413.579, 37.3743, 1.11 ) }
    apic_8 { pt3dadd( -122.175, -416.856, 37.2418, 0.28 ) }
    apic_8 { pt3dadd( -122.391, -417.702, 37.2044, 0.28 ) }
    apic_8 { pt3dadd( -122.768, -419.615, 37.1201, 0.83 ) }
    apic_8 { pt3dadd( -123.386, -425.291, 36.8913, 0.28 ) }
    apic_8 { pt3dadd( -123.38, -425.942, 36.862, 0.56 ) }
    apic_8 { pt3dadd( -123.029, -429.862, 36.771, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_8 { pt3dadd( -122.873, -430.885, 36.7254, 0.56 ) }
    apic_8 { pt3dadd( -122.646, -432.36, 36.6775, 0.56 ) }
    apic_8 { pt3dadd( -122.302, -434.611, 36.6669, 0.28 ) }
    apic_8 { pt3dadd( -121.889, -437.482, 36.3781, 0.28 ) }
    apic_8 { pt3dadd( -121.754, -438.053, 36.3325, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_14 ModelViewParmSubset_2.append()
    apic_13 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_27 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_18 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_17 = new SectionList()
    apic_14 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_18 = new SectionList()
    apic_13 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_19 = new SectionList()
    apic_5 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_26 OneSecGrp_SectionRef_21.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_25 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_19 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_15 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_5 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    apic_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_21 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_14 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_4 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_3 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_44 = new SectionList()
    apic_7 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_10 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_8 = new SectionList()
    apic_12 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_6 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_24 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_8 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_20 = new SectionList()
    apic_2 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_33 = new SectionList()
    apic_4 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_17 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_43 = new SectionList()
    apic_10 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_45 = new SectionList()
    apic_9 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_46 = new SectionList()
    apic_8 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, axon_0, axon_0, apic_12, apic_12, apic_12, apic_1, apic_1, apic_1, apic_1, apic_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_11, apic_11, apic_11, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_9 nseg = 7
    dend_27 nseg = 3
    dend_18 nseg = 3
    apic_14 nseg = 13
    apic_13 nseg = 11
    apic_5 nseg = 15
    dend_26 nseg = 3
    dend_25 nseg = 3
    dend_20 nseg = 3
    dend_19 nseg = 3
    dend_15 nseg = 7
    dend_12 nseg = 7
    dend_5 nseg = 5
    apic_3 nseg = 11
    dend_22 nseg = 3
    dend_21 nseg = 3
    dend_14 nseg = 7
    dend_13 nseg = 5
    dend_4 nseg = 15
    dend_3 nseg = 11
    apic_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L23_LBC_e6e8f83407_0_0


