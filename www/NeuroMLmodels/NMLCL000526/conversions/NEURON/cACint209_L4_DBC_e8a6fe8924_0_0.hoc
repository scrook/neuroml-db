// Cell: cACint209_L4_DBC_e8a6fe8924_0_0
/*
{
  "id" : "cACint209_L4_DBC_e8a6fe8924_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.72142, 10.9655, 0.761584, 2.84462", "1.58182, 9.77504, 0.687603, 4.62864", "1.44222, 8.58452, 0.613623, 7.50202", "1.30262, 7.39401, 0.539642, 9.47415", "1.16302, 6.2035, 0.465661, 11.0555", "1.02343, 5.01299, 0.391681, 12.4342", "0.883829, 3.82247, 0.3177, 13.5523", "0.744231, 2.63196, 0.243719, 14.3411", "0.604633, 1.44145, 0.169739, 14.9091", "0.465035, 0.250937, 0.0957582, 15.2878", "0.325437, -0.939575, 0.0217776, 15.5461", "0.185839, -2.13009, -0.0522031, 15.5537", "0.0462405, -3.3206, -0.126184, 15.1598", "-0.0933575, -4.51111, -0.200164, 14.7587", "-0.232956, -5.70162, -0.274145, 14.0408", "-0.372554, -6.89214, -0.348126, 13.1988", "-0.512152, -8.08265, -0.422106, 12.1253", "-0.65175, -9.27316, -0.496087, 10.5491", "-0.791348, -10.4637, -0.570068, 8.74654", "-0.930946, -11.6542, -0.644048, 6.27284", "-1.07054, -12.8447, -0.718029, 3.68979" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.07622, -6.43901, -17.6726, 3.85", "4.1975, -5.70431, -16.6655, 3.85", "5.36213, -4.94119, -15.6194, 3.85" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-0.643782, -12.759, -2.03262, 2.64", "-0.500205, -14.177, -0.989697, 1.92", "-0.380267, -15.2426, -0.299869, 1.8", "-0.263881, -16.0934, 0.152379, 1.92", "0.0932442, -18.3617, 1.13035, 1.32", "0.286201, -19.3887, 1.48867, 1.56", "0.510954, -20.4054, 1.77018, 1.8", "0.727125, -21.2236, 1.85779, 2.04", "1.11249, -22.492, 1.83356, 2.16", "1.37969, -23.3134, 1.70804, 1.32", "1.67751, -24.2443, 1.50467, 1.44", "2.01644, -25.4607, 1.29314, 1.44", "2.22578, -26.4154, 1.17911, 1.8", "2.31964, -27.0812, 1.12716, 2.04", "2.35362, -28.0279, 1.0967, 1.68", "2.26487, -29.445, 1.07185, 1.44", "2.14924, -30.1508, 1.06771, 1.8", "2.00515, -30.73, 1.07425, 2.04", "1.76894, -31.521, 1.10085, 1.92", "1.5149, -32.2504, 1.12272, 1.56", "1.18042, -33.1436, 1.10625, 1.56", "0.955305, -33.7401, 1.01737, 0.72", "0.797388, -34.1877, 0.93995, 0.48", "0.676896, -34.5416, 0.891279, 0.48", "0.398765, -35.38, 0.810995, 1.32", "0.168875, -36.0837, 0.74732, 1.68", "-0.25666, -37.393, 0.588735, 1.56", "-0.496359, -38.1292, 0.501102, 1.92", "-0.843539, -39.2236, 0.377888, 2.64", "-1.08413, -40.037, 0.312046, 2.76", "-1.26316, -40.76, 0.288572, 2.76", "-1.45785, -41.7845, 0.319878, 1.68", "-1.53588, -42.443, 0.366718, 0.96", "-1.57619, -43.3111, 0.419813, 0.96", "-1.55253, -44.4306, 0.478212, 1.32", "-1.45076, -46.0406, 0.581625, 1.8", "-1.39141, -46.7433, 0.636514, 2.16", "-1.31718, -47.5499, 0.693784, 2.28", "-1.22718, -48.5394, 0.740593, 0.84", "-1.18526, -49.188, 0.752335, 0.84", "-1.16084, -50.1478, 0.72914, 1.08", "-1.22744, -51.1538, 0.673153, 1.68", "-1.3726, -51.9349, 0.623565, 2.52", "-1.47035, -52.2553, 0.585145, 3.0", "-1.60874, -52.6011, 0.526513, 2.88", "-1.69873, -52.7914, 0.4922, 2.88", "-2.07629, -53.5127, 0.353129, 2.16", "-2.69398, -54.6282, 0.23827, 0.96", "-3.16754, -55.4764, 0.175659, 0.48", "-3.33345, -55.7692, 0.155077, 0.48", "-3.91537, -56.7852, 0.0914732, 1.92", "-4.48081, -57.7487, 0.0459317, 3.12", "-5.11776, -58.8472, 0.0380945, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.64622, 11.001, 0.167383, 2.16", "3.31004, 13.6066, 1.11088, 1.44", "3.98555, 16.1062, 1.9695, 2.16", "4.74369, 18.8338, 2.84368, 3.25", "5.27721, 20.6794, 3.41349, 3.49", "5.89519, 22.7641, 4.15769, 3.25", "6.32875, 24.2266, 4.67982, 2.88", "6.66259, 25.3366, 5.12992, 2.88", "7.02324, 26.4807, 5.5492, 2.52", "7.70809, 28.5, 6.32015, 2.16", "8.69648, 31.2441, 7.39744, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.07054, -12.8447, -0.718029, 0.781062", "-2.81746, -27.7426, -0.718029, 0.781062", "-4.56437, -42.6406, -0.718029, 0.781062" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "5.36213, -4.94119, -15.6194, 1.56", "3.88365, -1.19063, -17.0478, 1.56", "3.33775, 0.402876, -17.6534, 1.2", "3.01345, 1.53962, -18.0939, 0.96", "2.70231, 2.90389, -18.5659, 0.96", "2.26181, 5.32451, -19.3849, 1.32", "1.87217, 8.10345, -20.1452, 1.32", "1.69494, 10.3913, -20.5271, 1.44", "1.67604, 12.3676, -20.7737, 1.44", "1.7892, 14.4836, -20.9302, 1.44", "1.93672, 16.1603, -20.9494, 1.68", "2.21577, 19.2206, -20.7883, 2.88", "2.30236, 20.5258, -20.636, 3.73", "2.32051, 22.5896, -20.3526, 3.73", "2.14767, 25.2748, -19.9919, 2.88", "1.74406, 28.2954, -19.6693, 1.68", "1.4624, 29.6965, -19.5452, 1.2", "1.14497, 30.9739, -19.5019, 0.96", "0.657971, 32.6167, -19.445, 1.68", "0.00243904, 34.4281, -19.3835, 2.88", "-0.36166, 35.2164, -19.3635, 3.49", "-0.86769, 36.1046, -19.3712, 3.61" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "5.36213, -4.94119, -15.6194, 1.32", "7.40601, -5.74133, -15.5705, 1.32", "8.22784, -6.04996, -15.6675, 0.84", "9.42266, -6.52724, -15.9123, 1.2", "10.7332, -7.13395, -16.3003, 1.44", "12.0582, -7.94149, -16.8489, 1.32", "13.1191, -8.8054, -17.3908, 1.56", "14.155, -10.0998, -18.2288, 1.2", "14.45, -10.5894, -18.558, 1.2", "14.7806, -11.4541, -19.144, 1.2", "15.0708, -12.9664, -20.1141, 2.64", "15.1443, -14.2511, -20.8137, 4.45", "15.1597, -15.2702, -21.1857, 4.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-5.11776, -58.8472, 0.0380945, 3.0", "-6.05836, -59.8725, 0.477449, 3.0", "-6.59091, -60.5456, 0.734208, 2.76", "-7.39686, -61.7406, 1.20294, 1.92", "-7.64689, -62.1991, 1.38164, 1.92", "-8.11252, -63.2692, 1.77376, 0.6", "-8.37364, -64.0166, 2.01274, 0.48", "-8.4217, -64.3115, 2.07973, 0.48", "-8.46871, -65.0847, 2.21291, 0.48", "-8.43947, -66.0235, 2.3126, 0.84", "-8.31615, -67.088, 2.37815, 1.08", "-8.0995, -68.1358, 2.44003, 1.32", "-7.81277, -69.1662, 2.46441, 0.96", "-7.56173, -69.8893, 2.46406, 0.72", "-7.25926, -70.6383, 2.44024, 0.6", "-6.68329, -71.8126, 2.42284, 0.48", "-6.05762, -72.8988, 2.36199, 0.48", "-5.38817, -73.9236, 2.27264, 1.44", "-4.64657, -74.9792, 2.14802, 1.92", "-4.07457, -75.7563, 2.06813, 2.04", "-3.32582, -76.8113, 1.9813, 1.44", "-2.43838, -78.1309, 1.86294, 0.84", "-2.18241, -78.5417, 1.87055, 0.12", "-1.86153, -79.1313, 1.97401, 0.12", "-1.43342, -80.1149, 2.35335, 1.32", "-1.06866, -81.1725, 2.91099, 1.68", "-0.923917, -81.6749, 3.20459, 1.8", "-0.332681, -83.7492, 4.46909, 1.2", "-0.109491, -84.6391, 4.99765, 1.68", "0.282896, -86.1093, 5.86664, 1.2", "0.52221, -87.0435, 6.43295, 0.24", "0.668843, -87.6711, 6.83666, 0.24", "0.884298, -88.7866, 7.53533, 1.92", "0.954331, -89.5442, 7.9614, 1.8", "0.816548, -91.8912, 9.34922, 0.72", "0.568087, -93.0797, 10.0686, 0.72", "0.274361, -93.8659, 10.5752, 0.48", "-0.0193545, -94.4109, 10.9716, 0.36", "-0.577582, -95.2312, 11.5791, 0.36", "-0.907524, -95.7452, 11.8977, 0.36", "-1.51199, -97.0158, 12.6827, 0.6", "-1.61154, -97.4894, 12.9765, 0.6", "-1.66644, -98.0895, 13.4546, 0.36", "-1.69769, -98.5354, 13.8731, 0.36", "-1.70635, -99.0836, 14.411, 0.36", "-1.76244, -100.661, 16.0443, 0.36", "-1.80862, -100.967, 16.3829, 0.36", "-1.95798, -101.958, 17.595, 1.44", "-2.00853, -102.339, 18.1015, 1.68" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-5.11776, -58.8472, 0.0380945, 0.12", "-5.54548, -60.7481, -0.150961, 0.12", "-5.77025, -61.4281, -0.288275, 0.12", "-6.00272, -62.056, -0.441966, 0.96", "-6.2565, -62.7794, -0.638031, 1.32", "-6.43426, -63.3327, -0.803234, 1.32", "-6.77764, -64.5403, -1.18833, 0.6", "-7.07089, -65.4389, -1.58653, 0.36", "-7.13777, -65.674, -1.71205, 0.36", "-7.2428, -66.2488, -2.05562, 0.36", "-7.26916, -66.6172, -2.26009, 0.36", "-7.28381, -67.001, -2.43545, 0.36", "-7.33327, -67.7208, -2.66474, 0.36", "-7.39584, -68.2037, -2.75577, 0.36", "-7.55311, -68.8932, -2.93356, 0.36", "-7.77989, -69.6792, -3.12642, 1.08", "-8.12756, -70.7352, -3.36284, 1.68", "-8.40219, -71.5046, -3.52084, 1.8", "-8.77071, -72.5046, -3.68972, 1.56", "-9.30896, -73.9856, -3.99723, 1.2", "-9.53239, -74.6667, -4.1579, 0.36", "-9.62182, -75.0372, -4.23373, 0.36", "-9.67543, -75.4671, -4.2654, 0.36", "-9.71384, -76.5022, -4.26161, 1.56", "-9.6961, -77.2987, -4.22443, 1.92", "-9.62589, -78.2914, -4.12433, 1.92", "-9.48673, -79.6494, -4.01198, 1.08", "-9.31658, -80.8051, -3.89688, 0.36", "-9.15453, -81.7449, -3.78534, 0.36", "-9.00777, -82.4005, -3.63087, 0.36", "-8.94893, -82.6574, -3.55307, 0.36", "-8.8086, -83.3011, -3.35057, 0.96", "-8.66076, -83.9894, -3.11277, 1.8", "-8.52042, -84.7672, -2.87826, 2.16", "-8.17728, -87.0259, -2.21916, 1.92", "-8.06293, -88.1313, -1.9415, 1.8", "-8.02721, -89.077, -1.77956, 1.8", "-8.10908, -90.2001, -1.78271, 1.2", "-8.44124, -91.7989, -2.20151, 0.12", "-8.51176, -92.0412, -2.31014, 0.12", "-8.74145, -92.7007, -2.68917, 0.12", "-9.01844, -93.4956, -3.15117, 0.84", "-9.46765, -94.8147, -3.94787, 1.08", "-9.84162, -96.0001, -4.64989, 1.92", "-10.0854, -96.9464, -5.12738, 2.88", "-10.2291, -97.5466, -5.40206, 2.88", "-10.4079, -98.3162, -5.73817, 1.92", "-10.6626, -99.4156, -6.16793, 0.36", "-10.7785, -99.9366, -6.32262, 0.36", "-10.9099, -100.597, -6.46077, 1.08", "-11.0829, -101.423, -6.61433, 1.2", "-11.3315, -102.662, -6.79711, 0.48", "-11.5323, -103.732, -6.93061, 0.48", "-11.7058, -104.669, -7.01716, 0.48", "-11.9781, -106.027, -7.1348, 1.92", "-12.1844, -106.954, -7.20047, 2.4", "-12.3685, -107.744, -7.23882, 2.64", "-12.6245, -108.824, -7.25557, 2.64", "-12.8331, -109.593, -7.27653, 2.04", "-13.1526, -110.589, -7.30876, 0.72", "-13.3204, -111.057, -7.30913, 0.72", "-13.5383, -111.721, -7.26834, 0.72", "-13.7279, -112.368, -7.22644, 0.72", "-13.934, -113.217, -7.16472, 0.24", "-14.0511, -113.975, -7.04245, 0.12", "-14.0693, -114.398, -6.94598, 0.12", "-14.0237, -115.195, -6.73784, 0.12", "-13.8792, -115.99, -6.53071, 1.2", "-13.6921, -116.687, -6.36771, 2.28", "-13.0502, -118.696, -5.96568, 1.8", "-12.6781, -119.785, -5.79459, 0.36", "-12.5108, -120.342, -5.75495, 0.36", "-12.2788, -121.476, -5.75706, 0.36", "-12.1835, -122.557, -5.83209, 0.36", "-12.2001, -123.245, -5.96432, 0.36", "-12.3729, -124.303, -6.29309, 0.36", "-12.742, -125.611, -6.69932, 1.56", "-13.0916, -126.612, -6.99177, 2.4", "-13.3086, -127.167, -7.14206, 2.4", "-13.6601, -128.123, -7.38226, 2.4", "-14.1039, -129.593, -7.70924, 0.48", "-14.2397, -130.183, -7.81405, 0.48", "-14.3549, -131.119, -7.93213, 0.6", "-14.3858, -131.925, -8.03087, 0.36", "-14.3787, -132.878, -8.14874, 0.36", "-14.3444, -133.794, -8.2485, 0.48", "-14.3074, -134.461, -8.34698, 0.36", "-14.2731, -135.268, -8.5096, 0.36", "-14.2786, -136.058, -8.70176, 0.36", "-14.3327, -136.563, -8.85106, 0.48", "-14.4951, -137.312, -9.1208, 0.48", "-14.7624, -138.215, -9.43826, 0.36", "-14.9725, -138.854, -9.6561, 0.84", "-15.3159, -139.892, -9.95509, 1.32", "-15.7611, -141.25, -10.2756, 2.16", "-16.1132, -142.284, -10.4806, 2.64", "-16.4816, -143.351, -10.6532, 2.28", "-16.8817, -144.548, -10.7578, 1.8", "-17.2635, -145.785, -10.8216, 1.2", "-17.4245, -146.499, -10.768, 0.48", "-17.5921, -147.69, -10.5775, 0.36", "-17.6576, -148.504, -10.3985, 0.36", "-17.6755, -149.336, -10.188, 1.08", "-17.6266, -150.172, -9.94177, 1.08", "-17.3086, -152.554, -9.25826, 1.44", "-17.0592, -153.897, -8.90473, 1.44", "-16.8419, -154.828, -8.64004, 1.32", "-16.6416, -155.734, -8.41719, 0.48", "-16.5051, -156.481, -8.2923, 0.48", "-16.444, -156.936, -8.23269, 1.08", "-16.376, -157.79, -8.1749, 1.68", "-16.3, -159.19, -8.01283, 2.28", "-16.3107, -160.145, -7.90725, 2.4", "-16.4156, -161.371, -7.81193, 1.32", "-16.548, -162.198, -7.75467, 0.6", "-16.6879, -162.735, -7.76597, 0.48", "-17.0358, -163.577, -7.90576, 0.48", "-17.4285, -164.322, -8.12673, 0.48", "-17.9267, -165.144, -8.52975, 1.08", "-18.3338, -165.849, -8.94021, 1.92", "-19.1676, -167.346, -9.95347, 1.92", "-19.8106, -168.574, -10.8452, 2.28", "-20.2035, -169.386, -11.4531, 2.76", "-21.0719, -171.361, -12.8881, 2.76", "-21.6648, -172.889, -13.9007, 0.72", "-22.0497, -174.071, -14.5904, 0.72", "-22.289, -174.994, -15.0173, 0.96", "-22.4702, -175.766, -15.2956, 1.56", "-22.6979, -176.698, -15.5366, 1.8", "-22.8835, -177.53, -15.6324, 1.44", "-23.0591, -178.5, -15.7244, 0.48", "-23.0893, -178.885, -15.7595, 0.6", "-23.0995, -179.915, -15.873, 0.6", "-23.0828, -180.398, -15.9214, 0.48", "-23.0297, -181.513, -16.0173, 0.48", "-23.001, -182.383, -16.0743, 0.48", "-22.984, -183.459, -16.0864, 0.48", "-23.0107, -184.526, -16.0841, 0.84", "-23.1107, -185.91, -16.0537, 1.68", "-23.287, -187.412, -15.9903, 2.4", "-23.4236, -188.39, -15.9368, 2.4", "-23.6141, -189.754, -15.8767, 0.6", "-23.7117, -190.701, -15.8532, 0.6", "-23.7592, -191.932, -15.9022, 0.6", "-23.7061, -193.021, -16.0132, 0.6", "-23.5726, -193.918, -16.1313, 1.08", "-23.3755, -194.798, -16.2594, 1.44", "-23.1624, -195.578, -16.3777, 0.84", "-22.905, -196.447, -16.4741, 0.96", "-22.6359, -197.444, -16.5528, 0.96", "-22.4828, -198.185, -16.5866, 0.72", "-22.4071, -198.741, -16.5964, 0.48", "-22.3676, -199.241, -16.5917, 0.48", "-22.3573, -199.934, -16.554, 1.32", "-22.4114, -201.074, -16.444, 1.8", "-22.5071, -201.905, -16.3914, 2.04", "-22.6955, -203.022, -16.3618, 1.92", "-22.8609, -203.853, -16.3634, 1.44", "-23.0949, -204.886, -16.4118, 0.48", "-23.3255, -205.762, -16.5108, 0.48", "-23.7204, -207.169, -16.7503, 1.44", "-24.0652, -208.393, -16.9849, 2.52", "-24.3538, -209.455, -17.2036, 3.25", "-24.7284, -210.973, -17.5447, 2.28", "-24.9348, -212.028, -17.7901, 1.8", "-25.0877, -213.22, -18.0626, 0.96", "-25.207, -214.824, -18.3977, 0.96", "-25.2581, -216.027, -18.6602, 0.96", "-25.2917, -217.573, -18.9882, 2.52", "-25.2817, -218.72, -19.1837, 2.52", "-25.2179, -220.638, -19.4404, 1.44", "-25.1709, -221.584, -19.5476, 0.96", "-25.1078, -222.686, -19.6743, 0.72", "-25.0794, -223.249, -19.7312, 0.72", "-25.0701, -224.336, -19.8606, 0.72", "-25.124, -225.15, -19.9815, 0.72", "-25.2519, -226.062, -20.2169, 1.08", "-25.4202, -226.95, -20.6402, 1.44", "-25.4841, -227.273, -20.8454, 1.44", "-25.7787, -228.607, -21.8563, 0.36", "-26.0389, -229.734, -22.8112, 0.36", "-26.317, -231.061, -23.9598, 1.32", "-26.5737, -232.591, -25.2483, 0.48", "-26.649, -233.222, -25.7458, 0.48", "-26.748, -234.533, -26.708, 1.92", "-26.7623, -234.941, -26.9717, 2.76", "-26.7797, -235.905, -27.497, 2.4", "-26.7883, -236.827, -27.8042, 1.32", "-26.8446, -237.358, -27.9757, 0.12", "-26.9685, -237.872, -28.1797, 0.12", "-27.0694, -238.127, -28.2935, 0.12", "-27.4572, -238.901, -28.7084, 1.08", "-27.7448, -239.427, -29.0442, 1.08", "-28.9758, -241.642, -30.7508, 0.24", "-29.1169, -241.954, -31.0181, 0.24", "-29.2882, -242.543, -31.5332, 0.24", "-29.3198, -243.253, -32.1128, 0.24", "-29.1551, -244.028, -32.6884, 0.24", "-28.8336, -245.014, -33.4076, 1.08", "-28.4795, -245.881, -33.955, 2.04", "-28.1861, -246.685, -34.4626, 2.04", "-27.865, -247.683, -35.0833, 1.44", "-27.7543, -248.188, -35.3529, 0.96", "-27.5079, -250.084, -36.1671, 0.72", "-27.448, -250.868, -36.4174, 0.36", "-27.4701, -251.8, -36.6535, 0.36", "-27.5048, -252.217, -36.7147, 0.36", "-27.6134, -253.243, -36.7346, 1.32", "-27.6897, -254.106, -36.6693, 2.04", "-27.7139, -254.524, -36.6057, 2.4", "-27.7546, -255.129, -36.5064, 2.4", "-27.8607, -256.716, -36.2459, 0.48", "-27.9173, -257.528, -36.1197, 0.36", "-28.025, -259.002, -35.9423, 0.36", "-28.0838, -259.831, -35.8533, 0.36", "-28.1529, -260.741, -35.7685, 1.68", "-28.1893, -261.419, -35.726, 2.16", "-28.1992, -261.853, -35.7198, 2.16", "-28.1756, -262.995, -35.7178, 0.96", "-28.1428, -263.674, -35.756, 0.36", "-28.1286, -264.08, -35.8254, 0.36", "-28.116, -265.076, -36.1186, 0.36", "-28.131, -266.049, -36.4749, 0.36", "-28.1441, -266.729, -36.7327, 0.36", "-28.1796, -267.807, -37.1322, 1.44", "-28.2721, -269.29, -37.6241, 2.4", "-28.3342, -270.065, -37.8339, 2.52", "-28.376, -270.436, -37.9078, 2.52", "-28.5517, -271.775, -38.0651, 0.48", "-28.6531, -272.608, -38.1176, 0.36", "-28.7907, -274.094, -38.048, 0.36", "-28.8285, -274.766, -37.9492, 1.32", "-28.8721, -275.608, -37.7915, 1.92", "-28.9094, -276.326, -37.6663, 1.92" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "8.69648, 31.2441, 7.39744, 1.92", "8.63166, 33.7317, 7.49891, 1.92", "8.57911, 34.9311, 7.5685, 2.28", "8.53132, 36.0296, 7.67311, 1.8", "8.48495, 37.3154, 7.81583, 1.8", "8.43937, 39.063, 8.02134, 1.68", "8.40891, 41.1004, 8.26511, 2.4", "8.41831, 42.6478, 8.55271, 2.88", "8.4307, 43.4676, 8.69029, 2.76", "8.463, 44.2167, 8.82652, 2.76", "8.516, 44.7824, 8.95695, 2.76", "8.61928, 45.4241, 9.12776, 2.52", "8.93634, 46.79, 9.51064, 1.68", "9.14357, 47.5851, 9.73946, 1.44", "9.3843, 48.4874, 9.99029, 1.68", "9.83468, 50.1288, 10.4807, 2.64", "10.1173, 51.128, 10.7958, 2.88", "10.2874, 51.6939, 10.9804, 3.12" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.69648, 31.2441, 7.39744, 0.84", "8.22952, 31.0104, 7.67425, 0.84", "7.47239, 30.822, 8.12369, 0.84", "6.96695, 30.8415, 8.51764, 0.84", "6.82767, 30.8921, 8.67162, 0.84", "6.51951, 31.1572, 9.1184, 0.72", "6.3618, 31.4894, 9.64357, 0.72", "6.35087, 31.7255, 10.0154, 0.72", "6.50855, 32.1843, 10.6668, 0.96", "6.7541, 32.5366, 11.1561, 1.44", "7.10506, 32.9138, 11.6429, 1.56", "7.88216, 33.5733, 12.4776, 1.32", "8.44439, 33.9734, 12.9863, 0.48", "8.9324, 34.2833, 13.3472, 0.6", "9.89222, 34.8128, 13.9072, 0.6", "10.4657, 35.0868, 14.1369, 1.68", "11.4411, 35.4637, 14.258, 1.92", "12.0951, 35.6878, 13.9785, 1.56", "13.6451, 36.0209, 11.8756, 0.48", "13.8813, 36.0436, 11.2571, 0.48", "14.0427, 36.0481, 10.7048, 0.84", "14.103, 36.0306, 10.3246, 0.72" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.56437, -42.6406, -0.718029, 0.461269", "-6.31129, -57.5385, -0.718029, 0.461269", "-8.0582, -72.4364, -0.718029, 0.461269" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-0.86769, 36.1046, -19.3712, 0.96", "0.163967, 38.5112, -19.9256, 0.96", "0.652902, 39.907, -20.1647, 0.6", "1.02948, 41.2659, -20.3622, 0.6", "1.1852, 42.0064, -20.4604, 1.32", "1.2764, 42.6731, -20.5206, 1.56", "1.35217, 43.9636, -20.5924, 0.96", "1.19624, 45.5273, -20.5141, 0.6", "1.05308, 46.2607, -20.4571, 0.48", "0.89907, 46.8964, -20.4085, 0.48", "0.581734, 48.1911, -20.3212, 0.72", "0.228942, 49.7515, -20.2609, 1.8", "-0.0344344, 51.1824, -20.2457, 2.04", "-0.177382, 52.3514, -20.2577, 2.64", "-0.251207, 53.6673, -20.339, 3.25", "-0.256272, 54.8607, -20.4666, 3.25", "-0.202594, 56.0703, -20.6509, 2.88", "-0.0734112, 57.6744, -20.9127, 0.84", "-0.0133661, 58.3282, -21.0162, 0.6", "0.11542, 60.0019, -21.2634, 2.4", "0.177415, 61.1786, -21.4198, 3.25", "0.210079, 62.2936, -21.5375, 2.88", "0.237538, 64.1394, -21.6828, 0.96", "0.268773, 66.1021, -21.8454, 0.84", "0.291287, 67.311, -21.9537, 0.48", "0.310478, 68.1353, -22.0228, 0.48", "0.347971, 69.728, -22.1796, 0.48", "0.37699, 70.9763, -22.3276, 1.92", "0.441905, 72.4666, -22.5478, 3.37", "0.527475, 73.446, -22.7243, 3.49", "0.697901, 74.621, -22.9612, 3.0" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-0.86769, 36.1046, -19.3712, 0.84", "-1.75307, 36.8396, -19.307, 0.84", "-1.96194, 37.0909, -19.3475, 0.72", "-2.09303, 37.3111, -19.4086, 0.72", "-2.20362, 37.5936, -19.5365, 0.72", "-2.37878, 38.1074, -19.8823, 0.84", "-2.59468, 38.7304, -20.3577, 0.72", "-2.69982, 39.1661, -20.7415, 0.48", "-2.79061, 39.5744, -21.116, 0.48", "-2.95055, 40.2868, -21.7762, 0.72", "-3.14794, 41.0329, -22.4598, 0.48", "-3.21885, 41.2214, -22.6419, 0.48", "-3.29778, 41.3854, -22.7873, 0.48", "-3.46847, 41.6837, -23.0316, 1.32", "-3.66172, 41.9782, -23.2621, 2.04", "-3.94241, 42.3835, -23.5417, 1.56", "-4.51858, 43.2644, -24.1162, 0.36", "-4.65379, 43.4731, -24.2646, 0.36", "-5.17597, 44.2624, -24.8848, 2.4", "-5.39904, 44.5925, -25.1775, 3.25", "-5.54201, 44.8014, -25.3829, 3.73" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "15.1597, -15.2702, -21.1857, 0.24", "14.3918, -17.3005, -21.8971, 0.24", "14.1646, -18.0227, -22.176, 0.24", "13.8195, -19.3938, -22.6795, 1.92", "13.5354, -20.4841, -23.0561, 2.52", "13.2812, -21.3648, -23.3456, 2.4", "13.0012, -22.2708, -23.6345, 1.8", "12.6597, -23.4571, -23.9976, 0.24", "12.2209, -24.8607, -24.3719, 0.24", "11.7518, -26.2628, -24.6777, 0.24", "11.4048, -27.2306, -24.8518, 0.24", "11.0651, -28.1183, -25.0227, 1.68", "10.49, -29.5213, -25.2928, 1.92", "9.8149, -31.0721, -25.6098, 2.28", "9.26235, -32.2744, -25.8831, 3.12", "8.67896, -33.4996, -26.1792, 3.12", "7.57598, -35.676, -26.6871, 0.24", "7.11573, -36.505, -26.8682, 0.24", "7.00374, -36.6846, -26.9056, 0.48", "6.51205, -37.3787, -27.0311, 0.48", "5.78402, -38.2987, -27.148, 0.48", "5.29303, -38.9275, -27.1671, 0.48", "5.06659, -39.2591, -27.1238, 0.12", "4.71675, -39.9807, -27.0355, 0.12", "4.56622, -40.3809, -26.9908, 0.12", "4.40353, -40.9711, -26.9387, 0.72", "4.15157, -42.1558, -26.8765, 0.96", "4.00731, -42.9019, -26.8856, 0.24", "3.72592, -44.3679, -26.9595, 0.24", "3.60292, -45.0073, -26.9756, 0.96", "3.45446, -45.745, -26.9842, 1.44", "3.25097, -46.6468, -26.9921, 1.56", "2.93104, -47.8729, -27.0085, 0.48", "2.70905, -48.6683, -27.0261, 0.24", "2.29446, -50.132, -27.0509, 1.68", "2.03557, -51.1635, -27.0877, 2.88", "1.70069, -52.6639, -27.1174, 2.88", "1.32881, -54.6466, -27.1394, 0.24", "1.08318, -56.3053, -27.1349, 0.24", "1.01299, -56.928, -27.136, 0.24", "0.861761, -58.8552, -27.1861, 0.24", "0.807513, -60.0833, -27.2152, 1.8", "0.799111, -61.4343, -27.2314, 2.76", "0.845106, -63.2856, -27.2386, 0.48", "0.867479, -64.3367, -27.2403, 0.48", "0.856181, -65.1584, -27.2453, 0.6", "0.802887, -66.0731, -27.23, 0.6", "0.733606, -66.7791, -27.2374, 0.36", "0.631756, -67.5321, -27.2458, 0.36", "0.387753, -68.7446, -27.349, 0.48", "0.00309204, -70.341, -27.5538, 0.48", "-0.293428, -71.409, -27.7249, 1.44", "-0.680348, -72.7549, -28.0309, 2.76", "-0.976853, -73.877, -28.3484, 3.0", "-1.51408, -76.2038, -29.2142, 0.12", "-1.65619, -76.8859, -29.5175, 0.12", "-1.84797, -77.8481, -30.0023, 0.12", "-2.05154, -78.9503, -30.5935, 1.32", "-2.23781, -80.0135, -31.1502, 2.4", "-2.64925, -82.1271, -32.1918, 0.12", "-2.87267, -83.1604, -32.6339, 0.12", "-3.03848, -83.7731, -32.8772, 0.84", "-3.25656, -84.4465, -33.1169, 0.96", "-3.8276, -86.0308, -33.5706, 0.12", "-4.27257, -87.214, -33.8618, 0.12", "-4.60561, -88.1499, -34.0347, 1.32", "-4.89506, -89.0403, -34.1915, 1.8", "-5.2547, -90.2455, -34.3813, 0.12", "-5.71672, -91.8315, -34.5986, 0.12", "-5.95056, -92.6944, -34.6961, 1.56", "-6.18192, -93.7258, -34.8002, 2.52", "-6.35568, -94.6303, -34.8807, 2.64", "-6.67672, -96.5745, -35.0295, 1.32", "-6.81998, -97.4532, -35.0855, 0.12", "-6.84823, -97.6151, -35.0959, 0.24", "-7.05959, -98.7491, -35.1916, 0.24", "-7.30941, -100.075, -35.3262, 0.24", "-7.47435, -100.957, -35.488, 0.24", "-7.58436, -101.564, -35.6419, 0.24", "-7.69191, -102.157, -35.8155, 1.56", "-7.87932, -103.081, -36.1065, 2.28", "-8.06672, -103.926, -36.407, 2.28", "-8.48476, -105.825, -37.1312, 0.48", "-8.73309, -106.924, -37.5552, 0.48", "-8.76508, -107.063, -37.6068, 0.72", "-9.0088, -108.039, -37.9483, 0.96", "-9.23332, -108.86, -38.1968, 0.48", "-9.37176, -109.287, -38.329, 0.48", "-9.62152, -109.986, -38.4934, 0.48", "-9.96438, -110.912, -38.6978, 0.6", "-10.0775, -111.226, -38.7606, 0.24", "-10.4052, -112.22, -38.9432, 0.24", "-10.82, -113.678, -39.1717, 1.56", "-11.1169, -114.855, -39.3518, 2.4", "-11.3558, -115.911, -39.5077, 2.52", "-11.479, -116.501, -39.5896, 2.52", "-11.871, -118.426, -39.8051, 0.24", "-12.2908, -120.793, -39.9983, 0.24", "-12.3836, -121.418, -40.0334, 0.96", "-12.494, -122.321, -40.0899, 1.44", "-12.5477, -122.933, -40.1188, 1.68", "-12.6217, -124.258, -40.1904, 0.24", "-12.6442, -126.555, -40.3172, 0.24", "-12.6061, -127.767, -40.3992, 1.56", "-12.5666, -128.526, -40.4656, 2.16", "-12.5136, -129.342, -40.559, 1.8", "-12.4619, -130.737, -40.7716, 0.12", "-12.4705, -131.527, -40.9352, 0.12", "-12.4897, -131.674, -40.9691, 0.6", "-12.6325, -132.281, -41.1089, 0.12", "-12.7757, -132.73, -41.2053, 0.12", "-13.1821, -133.818, -41.4081, 0.12", "-13.3735, -134.327, -41.4758, 0.6", "-13.6734, -135.192, -41.4932, 0.6", "-13.8546, -135.778, -41.4547, 0.12", "-14.0598, -136.491, -41.3663, 0.12", "-14.2377, -137.086, -41.2795, 0.6", "-14.4779, -137.954, -41.1381, 0.6", "-14.9103, -139.609, -40.8657, 0.12", "-15.1807, -140.709, -40.692, 0.12", "-15.4366, -141.815, -40.5382, 1.44", "-15.6842, -142.959, -40.4136, 2.4", "-15.7913, -143.496, -40.3771, 2.52", "-15.9484, -144.357, -40.369, 2.16", "-16.0525, -145.415, -40.4394, 0.12", "-16.0797, -146.327, -40.447, 0.36", "-16.0697, -146.921, -40.4234, 0.12", "-16.0521, -147.376, -40.3871, 0.12", "-16.0192, -148.041, -40.3314, 0.12", "-15.9453, -149.221, -40.229, 0.12", "-15.8342, -150.583, -40.1219, 0.12", "-15.8194, -150.886, -40.1093, 0.12", "-15.8347, -151.802, -40.1119, 0.12", "-15.914, -152.858, -40.2003, 1.8", "-15.9629, -153.306, -40.2681, 2.28", "-16.1083, -154.2, -40.3793, 1.92", "-16.355, -155.671, -40.4878, 0.36", "-16.5578, -156.798, -40.5209, 0.36", "-16.7406, -157.842, -40.5134, 1.2", "-16.8822, -158.774, -40.4018, 0.72", "-17.0448, -160.686, -40.1795, 0.12", "-17.1333, -162.415, -39.9857, 0.12", "-17.1589, -163.55, -39.8667, 1.68", "-17.1819, -164.431, -39.7766, 1.8", "-17.2766, -166.772, -39.513, 1.44", "-17.4, -169.125, -39.3518, 0.24", "-17.4955, -171.383, -39.2341, 0.12", "-17.5396, -172.431, -39.1529, 0.12", "-17.6467, -174.233, -38.9608, 0.12", "-17.7128, -175.108, -38.8797, 1.2", "-17.796, -176.308, -38.8039, 2.52", "-17.9094, -178.193, -38.482, 0.48", "-17.912, -178.629, -38.4004, 0.48", "-17.8789, -179.707, -38.1953, 0.48", "-17.7989, -180.881, -37.9967, 0.72", "-17.6855, -182.402, -37.7643, 0.24", "-17.5892, -184.013, -37.4217, 0.12", "-17.4797, -185.223, -37.1709, 0.12", "-17.3815, -185.885, -37.0492, 1.08", "-17.2367, -186.617, -36.8922, 1.32", "-17.0895, -187.214, -36.7716, 1.08", "-16.6739, -188.769, -36.4969, 0.36", "-16.0133, -191.091, -36.2321, 0.36", "-15.5582, -192.655, -36.0435, 1.56", "-15.1649, -194.019, -35.8885, 2.16", "-14.8016, -195.109, -35.7817, 1.68" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "15.1597, -15.2702, -21.1857, 0.36", "16.6474, -16.0951, -21.6081, 0.36", "17.0933, -16.1953, -21.8904, 0.36", "17.3173, -16.1885, -22.1012, 0.36", "17.5171, -16.1678, -22.2993, 0.36", "18.0035, -16.1183, -22.7676, 0.72", "18.7566, -16.0695, -23.4716, 0.96", "19.2169, -15.9905, -23.965, 0.96", "19.8683, -15.8977, -24.6619, 0.48", "20.4849, -15.8657, -25.288, 0.36", "20.8181, -15.9228, -25.5849, 0.36", "21.1252, -16.1199, -25.7568, 0.36", "21.2451, -16.2677, -25.7749, 0.36", "21.5895, -16.7808, -25.7693, 0.36", "21.9182, -17.2596, -25.7343, 1.56", "22.3532, -17.8293, -25.6866, 2.52", "22.7901, -18.3264, -25.6852, 2.4", "23.7037, -19.1809, -25.7572, 0.36", "24.036, -19.4379, -25.81, 0.36", "24.7124, -19.8837, -25.9535, 0.36", "25.3536, -20.2542, -26.1233, 0.36", "26.2365, -20.7162, -26.3745, 1.44", "27.1703, -21.1647, -26.6601, 3.25", "28.2087, -21.627, -27.0021, 4.69", "28.4011, -21.7176, -27.0693, 4.93", "29.5461, -22.337, -27.4957, 3.61" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-28.9094, -276.326, -37.6663, 0.12", "-29.4478, -277.284, -38.5687, 0.12", "-29.6708, -277.719, -38.9811, 0.12", "-29.7433, -277.843, -39.1383, 0.12", "-29.8449, -277.982, -39.3146, 0.36", "-30.4547, -278.743, -40.2358, 0.12", "-30.6487, -278.965, -40.5434, 0.12", "-30.6487, -278.965, -40.5434, 0.36", "-31.3572, -279.771, -41.7291, 0.36", "-31.7882, -280.297, -42.4697, 2.52", "-31.9423, -280.506, -42.7428, 2.88", "-33.2568, -282.397, -44.9664, 0.24", "-33.4312, -282.664, -45.2559, 0.12", "-33.5742, -282.924, -45.5004, 0.12", "-33.7121, -283.272, -45.7541, 0.48", "-33.8169, -283.659, -45.9969, 0.48", "-33.9042, -284.06, -46.1993, 0.12", "-33.9996, -284.781, -46.3719, 0.12", "-34.0562, -285.206, -46.5167, 0.12", "-34.1205, -285.691, -46.7036, 0.84", "-34.1727, -286.005, -46.8137, 0.84", "-34.3618, -287.192, -47.1977, 0.12", "-34.4325, -287.711, -47.3445, 0.12", "-34.652, -289.051, -47.6805, 2.64", "-34.7429, -289.472, -47.7703, 2.28", "-35.0518, -290.635, -47.8706, 0.12", "-35.1836, -291.044, -47.8406, 0.12", "-35.5029, -291.803, -47.6297, 0.12", "-35.8181, -292.32, -47.3982, 1.2", "-35.8769, -292.394, -47.3489, 1.44", "-36.7865, -293.362, -46.5651, 0.12", "-37.0832, -293.613, -46.2891, 0.12", "-37.3665, -293.803, -46.0125, 0.12", "-37.7496, -294.001, -45.591, 0.84" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-28.9094, -276.326, -37.6663, 0.6", "-28.7684, -277.244, -39.0504, 0.6", "-28.7655, -277.358, -39.2383, 0.6", "-28.7704, -277.844, -40.0374, 1.32", "-28.7843, -278.377, -40.8672, 2.28", "-28.8, -278.976, -41.8002, 2.04", "-28.8516, -280.945, -44.867, 0.96", "-28.8945, -281.408, -45.6736, 0.48", "-28.9263, -281.649, -46.1159, 0.48", "-28.9828, -281.903, -46.6255, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "10.2874, 51.6939, 10.9804, 1.2", "10.2434, 53.4814, 10.7527, 1.2", "10.2324, 55.1481, 10.6989, 1.32", "10.2361, 56.1367, 10.7074, 1.44", "10.2627, 57.4031, 10.7606, 0.96", "10.3469, 59.108, 10.8489, 1.08", "10.5344, 61.4026, 10.9696, 1.56", "10.861, 63.3812, 11.1265, 0.96", "11.1312, 64.4846, 11.2284, 0.6", "11.4687, 65.5381, 11.3246, 1.2", "11.8535, 66.528, 11.4124, 2.04", "12.1911, 67.2986, 11.4755, 2.16", "12.896, 68.8527, 11.6169, 1.2", "13.365, 69.9741, 11.7197, 0.84", "13.7537, 71.1621, 11.7931, 0.48", "13.9464, 71.9972, 11.8257, 0.48", "14.1739, 73.8786, 11.8593, 0.48", "14.224, 75.2632, 11.8572, 0.84", "14.1837, 76.8261, 11.8164, 1.92", "14.0958, 78.7922, 11.7007, 2.52", "14.0557, 79.7982, 11.6112, 2.28", "14.0489, 81.4566, 11.4619, 0.6", "14.0776, 82.0261, 11.4193, 0.6", "14.1476, 82.8458, 11.3887, 0.48", "14.302, 84.2339, 11.4153, 0.48", "14.4515, 85.2784, 11.5066, 0.96", "14.6012, 86.2091, 11.6087, 1.8", "14.8467, 87.5253, 11.7985, 2.04", "15.09, 88.9128, 12.011, 2.04", "15.37, 90.9093, 12.3442, 2.28" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "10.2874, 51.6939, 10.9804, 1.32", "11.3686, 53.1871, 11.2519, 1.32", "11.8373, 53.833, 11.2775, 0.96", "12.6652, 54.8873, 11.221, 1.32", "13.1879, 55.4583, 11.1228, 1.68", "13.8728, 56.1017, 10.9593, 1.2", "14.7197, 56.8176, 10.7325, 0.84", "15.643, 57.506, 10.4058, 0.72", "16.1748, 57.8741, 10.2261, 0.84", "17.1052, 58.3893, 9.88605, 0.6", "17.7119, 58.6561, 9.66545, 0.6", "18.2179, 58.811, 9.49613, 1.32", "19.5248, 59.1206, 9.28118, 1.8", "20.3248, 59.4411, 9.37333, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "0.697901, 74.621, -22.9612, 0.48", "0.490775, 76.7972, -22.7806, 0.48", "0.310158, 78.079, -22.6646, 0.48", "0.158705, 78.9415, -22.5737, 0.48", "-0.126737, 80.4737, -22.425, 0.72", "-0.304884, 81.3921, -22.3468, 0.48", "-0.525149, 82.4921, -22.2647, 0.48", "-0.938185, 84.0535, -22.209, 0.48", "-1.3312, 85.4538, -22.167, 1.8", "-1.51843, 86.1764, -22.1468, 2.64", "-1.70097, 87.0075, -22.1282, 2.88", "-1.88942, 87.9755, -22.0885, 2.88", "-2.0869, 89.0816, -22.0362, 2.04", "-2.31397, 90.488, -21.9723, 0.48", "-2.39921, 91.0507, -21.9417, 0.36", "-2.69789, 93.1336, -21.8247, 0.36", "-2.87473, 94.4731, -21.7543, 1.44", "-2.97904, 95.7242, -21.692, 2.52", "-3.0222, 96.9674, -21.6347, 2.64", "-3.01545, 97.8583, -21.6007, 2.52", "-2.94087, 99.8319, -21.5508, 0.48", "-2.89349, 100.664, -21.5456, 0.36", "-2.80752, 102.271, -21.5614, 0.36", "-2.77679, 103.03, -21.5612, 0.36", "-2.74646, 104.286, -21.5689, 0.36", "-2.7406, 105.691, -21.5819, 1.44", "-2.77458, 106.536, -21.5992, 1.56", "-2.87536, 107.622, -21.6455, 0.24", "-3.07664, 108.868, -21.7278, 0.24", "-3.28336, 109.939, -21.7914, 0.72", "-3.39151, 110.48, -21.8158, 0.72", "-3.51608, 111.108, -21.8337, 0.48", "-3.5872, 111.525, -21.8361, 0.36", "-3.67984, 112.211, -21.8005, 0.36", "-3.7626, 113.044, -21.6889, 0.84", "-3.82923, 114.415, -21.4391, 2.4", "-3.84357, 114.97, -21.3427, 3.0", "-3.85659, 116.071, -21.1577, 3.0", "-3.87596, 117.45, -20.9555, 1.68", "-3.90165, 118.828, -20.7819, 0.36", "-3.93562, 119.951, -20.6759, 0.36", "-4.03633, 121.393, -20.5919, 0.36", "-4.16354, 122.515, -20.5775, 1.68", "-4.27548, 123.261, -20.6036, 2.52", "-4.38, 123.838, -20.6522, 2.64", "-4.52751, 124.574, -20.7296, 2.28", "-4.7611, 125.763, -20.8492, 0.48", "-4.9909, 127.424, -21.025, 0.48", "-5.101, 128.676, -21.1679, 0.48", "-5.12296, 129.242, -21.2274, 0.96", "-5.13194, 130.225, -21.319, 1.56", "-5.11672, 130.942, -21.3714, 1.56", "-5.05681, 132.354, -21.4434, 0.48", "-5.033, 132.787, -21.4686, 0.12", "-4.97244, 134.04, -21.5489, 0.12", "-4.92319, 135.441, -21.6415, 2.16", "-4.91153, 136.147, -21.6869, 2.88", "-4.91963, 136.71, -21.7147, 3.0" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "0.697901, 74.621, -22.9612, 0.48", "0.603203, 77.4355, -25.3469, 0.48", "0.571882, 77.8405, -25.6916, 0.48", "0.504724, 78.7012, -26.4849, 0.72", "0.480181, 79.2927, -27.0692, 0.72", "0.458204, 80.4116, -28.163, 0.24", "0.455189, 80.9147, -28.6577, 0.12", "0.445379, 81.6277, -29.3266, 0.84", "0.4877, 82.5632, -30.2514, 0.12", "0.575347, 83.5842, -31.2641, 0.12", "0.630638, 84.1734, -31.8011, 1.68", "0.683899, 84.8941, -32.363, 2.4", "0.769707, 86.1473, -33.3098, 1.8", "0.846772, 87.3496, -34.2035, 0.12", "0.850831, 87.8907, -34.5955, 0.12", "0.792438, 88.947, -35.397, 1.92", "0.744224, 89.649, -35.9915, 2.4", "0.622191, 91.4777, -37.6498, 0.6", "0.546894, 92.3138, -38.4492, 0.48", "0.477029, 92.9834, -39.0965, 0.48", "0.390505, 93.9638, -40.0519, 1.2", "0.32462, 95.0749, -41.1892, 0.48", "0.311347, 95.5007, -41.6037, 0.12", "0.292697, 96.3932, -42.2924, 0.12", "0.296961, 96.9625, -42.6626, 0.72", "0.347731, 97.5411, -43.0655, 0.72", "0.44574, 98.8955, -44.0443, 0.12", "0.464323, 99.2005, -44.2841, 0.12", "0.546912, 100.116, -45.0472, 2.28", "0.626298, 100.604, -45.513, 2.52", "1.08308, 102.747, -47.7495, 0.12", "1.31447, 103.633, -48.6652, 0.12", "1.58466, 104.546, -49.5814, 1.44", "1.74668, 105.058, -50.0991, 1.8", "2.11802, 106.159, -51.2439, 1.32", "2.30259, 106.791, -51.8959, 0.12", "2.53852, 107.777, -52.8044, 0.12", "2.82321, 109.135, -54.0139, 1.56", "2.88897, 109.585, -54.399, 1.92", "3.00805, 111.031, -55.6342, 0.12", "3.04265, 111.91, -56.3652, 0.12", "3.05594, 112.449, -56.8219, 0.96", "3.06144, 112.649, -56.9983, 0.96", "3.13703, 113.505, -57.8122, 0.12", "3.22081, 114.172, -58.4919, 0.12", "3.34156, 115.14, -59.5347, 1.32", "3.39632, 115.59, -60.0259, 1.8", "3.44701, 116.172, -60.6543, 1.32", "3.55939, 117.824, -62.3563, 0.12", "3.58263, 118.016, -62.5827, 0.12", "3.69423, 118.706, -63.4319, 0.36", "3.76076, 119.282, -64.1472, 0.36", "3.88722, 120.073, -65.1465, 1.92", "4.0323, 120.749, -65.9625, 2.76", "4.76946, 123.838, -69.4092, 0.36", "4.84008, 124.098, -69.7036, 0.36", "5.13457, 125.082, -70.8196, 0.36", "5.43355, 126.062, -71.9282, 0.36", "5.6119, 126.617, -72.5409, 0.36", "5.95164, 127.585, -73.5524, 0.72", "6.43462, 128.762, -74.6762, 0.12", "6.56244, 129.045, -74.9611, 0.12", "6.82496, 129.563, -75.5153, 1.92", "7.26803, 130.586, -76.6739, 2.52", "7.7993, 131.67, -78.0464, 1.44", "8.26156, 132.331, -78.9727, 0.12" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-5.54201, 44.8014, -25.3829, 0.12", "-5.79053, 47.5135, -26.1973, 0.12", "-5.9156, 48.6953, -26.5747, 0.6", "-5.99151, 49.5981, -26.8723, 0.12", "-6.01986, 50.0088, -27.0016, 0.12", "-6.05388, 50.5647, -27.1593, 0.12", "-6.08642, 51.2317, -27.3297, 0.24", "-6.11094, 51.8524, -27.5041, 0.12", "-6.13135, 52.3841, -27.7323, 0.12", "-6.15904, 53.2621, -28.172, 0.12", "-6.17612, 54.1208, -28.6489, 1.32", "-6.15572, 54.7002, -28.9864, 1.8", "-6.01764, 56.3315, -29.9347, 0.84", "-5.91255, 57.3264, -30.6717, 0.12", "-5.85905, 57.6365, -30.9336, 0.12", "-5.62336, 58.6064, -31.7742, 1.8", "-5.45543, 59.1873, -32.2624, 2.16", "-5.27502, 59.7247, -32.7132, 1.8", "-4.32734, 62.2071, -34.9984, 0.24", "-3.9117, 63.2013, -35.993, 0.24", "-3.48536, 64.1983, -37.0141, 0.24", "-3.29772, 64.6399, -37.483, 0.24", "-2.71199, 66.0897, -39.0888, 2.28", "-1.92288, 68.0934, -41.3584, 0.24", "-1.79512, 68.4164, -41.7068, 0.24", "-1.43798, 69.375, -42.7981, 0.24", "-1.04237, 70.4038, -43.9941, 1.44", "-0.723087, 71.2623, -44.9191, 1.8", "-0.340528, 72.3787, -45.9024, 0.12", "-0.0590222, 73.2622, -46.525, 0.12", "0.0834219, 73.7278, -46.8529, 0.96", "0.21101, 74.1198, -47.1213, 1.2", "0.54196, 75.1293, -47.7273, 0.12", "0.809251, 75.9236, -48.1821, 0.12", "0.969893, 76.3863, -48.4672, 0.36", "1.27745, 77.361, -49.1904, 0.12", "1.40259, 77.8398, -49.5474, 0.12", "1.58896, 78.6772, -50.1673, 0.48", "1.80379, 79.7824, -51.01, 0.48", "2.00217, 80.9476, -51.8933, 2.28", "2.30612, 82.8661, -53.2867, 0.12", "2.44046, 83.8626, -53.9602, 0.12", "2.49778, 84.4152, -54.3361, 0.12", "2.57112, 85.4662, -55.0205, 1.08", "2.57172, 86.0255, -55.391, 1.2", "2.44385, 86.9796, -56.1896, 0.12", "2.25176, 87.706, -56.8915, 0.12", "1.91745, 88.8008, -58.0675, 1.44", "1.79287, 89.181, -58.4859, 2.04", "1.53841, 89.8759, -59.2426, 1.68", "0.683973, 91.9858, -61.5876, 0.24", "0.372493, 92.6769, -62.3711, 0.24", "0.0291564, 93.4099, -63.2083, 0.12", "-0.303984, 94.1098, -63.9407, 0.72", "-0.450342, 94.4486, -64.2661, 0.72", "-0.588405, 94.7662, -64.5256, 0.12", "-1.04569, 95.8397, -65.2374, 0.12", "-1.3062, 96.3115, -65.6008, 0.12", "-1.9172, 97.162, -66.2845, 1.68", "-2.0548, 97.3439, -66.4343, 1.68", "-3.14502, 98.9233, -67.7839, 0.12", "-3.49314, 99.4989, -68.2505, 0.12", "-3.75986, 100.053, -68.7079, 0.24", "-4.0029, 100.668, -69.2124, 0.24", "-4.33364, 101.699, -70.0329, 0.24", "-4.61705, 102.777, -70.7729, 1.56", "-4.73841, 103.462, -71.1815, 2.04", "-5.01098, 105.399, -72.2261, 0.36", "-5.06607, 105.994, -72.5212, 0.48", "-5.12624, 106.906, -72.9938, 0.48", "-5.21818, 107.905, -73.4785, 0.48", "-5.28651, 108.416, -73.7228, 0.24", "-5.39669, 108.99, -74.0519, 0.24", "-5.59245, 109.801, -74.5796, 0.24", "-5.93188, 110.909, -75.467, 1.08", "-6.13102, 111.386, -75.9215, 1.08", "-6.54412, 111.99, -76.7007, 0.36", "-7.14695, 112.611, -77.6387, 0.36", "-7.37116, 112.782, -77.9355, 0.36", "-7.63614, 112.944, -78.235, 0.36", "-8.00086, 113.145, -78.6132, 0.36", "-9.58515, 114.007, -80.21, 1.68", "-9.87994, 114.166, -80.4819, 2.4", "-10.0926, 114.286, -80.6652, 2.64", "-12.3386, 115.561, -82.512, 0.6", "-12.6229, 115.711, -82.7254, 0.12", "-13.002, 115.902, -82.962, 0.12", "-13.4666, 116.109, -83.189, 0.6", "-13.9496, 116.313, -83.4222, 0.12", "-14.4851, 116.524, -83.6246, 0.12", "-15.3466, 116.791, -83.7798, 1.44", "-16.0608, 117.013, -83.9017, 1.08", "-17.8468, 117.635, -84.162, 0.12", "-18.5678, 117.942, -84.223, 0.12", "-19.4166, 118.368, -84.228, 0.84", "-19.7511, 118.561, -84.2313, 0.84", "-19.9834, 118.704, -84.227, 0.12", "-20.5126, 119.004, -84.1849, 0.12", "-21.2636, 119.409, -84.0553, 1.44", "-21.5311, 119.541, -84.0203, 1.56", "-22.6203, 120.081, -83.9321, 0.12", "-23.4425, 120.5, -83.8654, 0.12", "-23.947, 120.752, -83.8236, 1.08", "-24.5666, 121.037, -83.8054, 1.92", "-25.0828, 121.26, -83.8265, 1.56", "-26.0535, 121.68, -83.921, 0.12", "-26.4473, 121.847, -83.9761, 0.12", "-26.6932, 121.953, -84.0284, 0.48", "-27.743, 122.423, -84.3251, 0.48", "-28.2006, 122.64, -84.4654, 0.12", "-28.8709, 123.022, -84.5471, 0.12", "-29.1674, 123.272, -84.7013, 0.84", "-29.4521, 123.526, -84.9032, 1.2", "-29.9129, 123.945, -85.1641, 0.12", "-30.5472, 124.43, -85.1209, 0.12", "-32.0147, 125.019, -83.6068, 2.88", "-34.753, 125.524, -79.0981, 0.96", "-35.1767, 125.494, -78.0681, 0.96", "-37.0882, 124.792, -71.7465, 0.12", "-37.2856, 124.661, -70.9205, 0.12", "-37.4125, 124.523, -70.2504, 0.96" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-5.54201, 44.8014, -25.3829, 0.48", "-7.57621, 45.3371, -25.7427, 0.48", "-8.5212, 45.6659, -26.2348, 0.48", "-9.7806, 46.2765, -27.3119, 0.48", "-10.4107, 46.6378, -27.9034, 2.16", "-10.7178, 46.8341, -28.2095, 2.52", "-11.1391, 47.1254, -28.6462, 2.52", "-12.8721, 48.4739, -30.874, 1.44", "-13.9863, 49.3226, -32.3628, 0.36", "-14.402, 49.6084, -32.9082, 0.48", "-15.2006, 50.0851, -33.9258, 0.6", "-16.1088, 50.4929, -35.2025, 0.6", "-17.289, 50.9282, -36.9843, 0.6", "-17.8063, 51.0909, -37.7595, 1.92", "-18.2567, 51.2079, -38.4242, 2.64", "-18.7057, 51.3124, -39.084, 2.64", "-22.7978, 52.1751, -44.9927, 1.68", "-24.61, 52.5551, -47.545, 0.72", "-24.957, 52.6372, -48.0154, 1.56", "-25.6825, 52.8274, -48.974, 1.92", "-26.0088, 52.92, -49.3786, 2.28", "-26.2826, 53.0045, -49.6823, 2.28", "-28.9065, 53.882, -51.5375, 0.24", "-29.346, 54.0188, -51.8279, 0.12", "-29.666, 54.1059, -52.0815, 0.12", "-30.2413, 54.2477, -52.5789, 0.12", "-31.3021, 54.4751, -53.5135, 1.32", "-31.804, 54.5626, -53.9644, 2.16", "-32.6213, 54.6648, -54.6792, 2.4", "-34.9848, 54.8541, -56.7343, 0.72", "-35.6441, 54.8762, -57.3003, 0.84", "-36.0612, 54.8666, -57.6583, 1.08", "-37.3304, 54.7723, -58.6774, 0.48", "-37.6459, 54.74, -58.9145, 0.12", "-38.2626, 54.6555, -59.3271, 0.48", "-38.4851, 54.6132, -59.4398, 0.48", "-39.4745, 54.3874, -59.933, 0.12", "-39.8404, 54.2914, -60.1094, 0.12", "-40.3217, 54.1513, -60.3593, 0.12", "-40.6261, 54.0771, -60.6015, 0.12", "-40.965, 54.0089, -60.9286, 0.12", "-41.2785, 53.9502, -61.2141, 0.48", "-41.417, 53.9181, -61.3351, 0.48", "-42.4639, 53.5851, -62.2338, 0.48", "-43.1036, 53.315, -62.7549, 0.12", "-43.3313, 53.2233, -62.9188, 0.12", "-43.8941, 52.9698, -63.2715, 0.12", "-44.8782, 52.5014, -63.8899, 1.8", "-45.5364, 52.2091, -64.2465, 2.76", "-45.9411, 52.0195, -64.4274, 2.76", "-46.6812, 51.6463, -64.7391, 1.92", "-47.4583, 51.2189, -65.0809, 1.92", "-49.2687, 50.1113, -66.016, 0.12", "-49.9928, 49.6235, -66.4104, 0.12", "-50.3735, 49.3483, -66.6636, 0.12", "-50.7512, 49.0532, -66.9213, 0.48", "-51.0969, 48.7603, -67.1703, 0.6", "-51.8153, 48.1749, -67.6729, 0.12", "-52.078, 47.9188, -67.8491, 0.12", "-53.292, 46.657, -68.776, 2.4", "-53.9566, 46.0543, -69.2839, 3.25" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-14.8016, -195.109, -35.7817, 0.12", "-15.0207, -196.105, -36.1153, 0.12", "-15.1499, -196.421, -36.1985, 0.12", "-15.3485, -196.777, -36.2456, 0.36", "-15.6925, -197.326, -36.2795, 0.48", "-15.8655, -197.592, -36.288, 0.12", "-16.1123, -197.999, -36.2955, 0.12", "-16.5206, -198.622, -36.2434, 0.36", "-16.8248, -199.024, -36.0863, 0.12", "-17.1174, -199.329, -35.8982, 0.12", "-17.3711, -199.528, -35.7493, 0.12", "-17.7713, -199.831, -35.495, 0.12", "-18.3911, -200.277, -35.076, 0.36", "-19.3726, -200.921, -34.4099, 0.12", "-20.0543, -201.312, -33.9621, 0.12", "-21.113, -201.783, -33.26, 0.12" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-14.8016, -195.109, -35.7817, 0.12", "-14.3009, -195.413, -36.3608, 0.12", "-13.9142, -195.638, -36.857, 0.12", "-13.4928, -195.886, -37.4028, 0.48", "-13.1761, -196.074, -37.8141, 0.12", "-12.5529, -196.444, -38.6231, 0.12", "-11.9041, -196.829, -39.4653, 0.12", "-11.2016, -197.222, -40.4805, 2.52", "-11.0462, -197.307, -40.7194, 2.28", "-11.0266, -197.318, -40.749, 2.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "29.5461, -22.337, -27.4957, 0.48", "29.4084, -24.2377, -28.7831, 0.48", "29.4018, -24.5347, -28.9525, 0.36", "29.4054, -24.85, -29.1128, 0.36", "29.4165, -25.2067, -29.2761, 0.84", "29.445, -25.7692, -29.5146, 1.32", "29.5237, -26.5104, -29.8055, 0.48", "29.6618, -27.0813, -29.9321, 0.36", "29.738, -27.3375, -29.9861, 0.36", "29.8533, -27.6632, -30.0614, 0.48", "29.9884, -28.0006, -30.1411, 0.36", "30.2666, -28.6371, -30.3017, 0.36", "30.4246, -28.9933, -30.3964, 0.36", "30.532, -29.3186, -30.4846, 0.48", "30.6402, -29.7259, -30.5974, 0.36", "30.7253, -30.1445, -30.7115, 0.36", "30.7513, -30.3137, -30.7558, 0.36", "30.9183, -31.8111, -31.1326, 3.49", "31.0527, -33.2396, -31.4609, 0.12", "31.0743, -33.491, -31.5144, 0.12", "31.1054, -33.8787, -31.5859, 0.36", "31.1149, -34.0117, -31.6088, 0.12", "31.1368, -34.4788, -31.6742, 0.12", "31.1258, -34.9315, -31.7036, 0.6", "31.1169, -35.204, -31.7063, 0.6", "31.0802, -35.6534, -31.7118, 0.36", "31.059, -35.8291, -31.7189, 0.24", "31.0126, -36.1092, -31.7358, 0.24", "30.9422, -36.4194, -31.7574, 1.08", "30.7767, -37.12, -31.8135, 1.8", "30.6532, -37.6578, -31.8365, 1.56", "30.5562, -38.1404, -31.8235, 0.96", "30.5109, -38.5017, -31.8048, 0.24", "30.4581, -39.205, -31.7621, 0.24", "30.4457, -39.5613, -31.7372, 0.24", "30.4427, -40.236, -31.6847, 0.24", "30.4673, -41.5963, -31.5709, 3.25", "30.5239, -42.8521, -31.4692, 0.24", "30.5431, -43.1211, -31.4508, 0.24", "30.6268, -43.999, -31.4101, 0.24", "30.6746, -44.4311, -31.4031, 0.48", "30.6993, -44.6061, -31.4101, 0.12", "30.9275, -45.8174, -31.5006, 0.12", "30.9538, -45.9393, -31.5098, 0.84", "31.0558, -46.373, -31.5444, 1.08", "31.177, -46.8723, -31.5872, 0.12", "31.3869, -47.7464, -31.6618, 0.12", "31.6136, -48.7181, -31.7434, 2.4", "31.8445, -49.7592, -31.8287, 0.24", "31.9295, -50.1836, -31.8693, 0.24", "32.0171, -50.7041, -31.9239, 0.36", "32.0521, -50.9795, -31.9572, 0.24", "32.0682, -51.154, -31.981, 0.24", "32.0804, -51.4067, -32.0312, 0.24", "32.089, -51.894, -32.1619, 0.24", "32.1077, -52.1999, -32.2496, 0.84", "32.1416, -52.4985, -32.3364, 0.84", "32.1817, -52.7673, -32.4021, 0.84", "32.2531, -53.1578, -32.4722, 0.12", "32.2885, -53.3573, -32.4986, 0.12", "32.4017, -53.9329, -32.5502, 0.12", "32.4587, -54.2106, -32.5725, 1.32", "32.5707, -54.8168, -32.6401, 1.68", "32.7032, -55.5927, -32.7394, 1.2", "32.7768, -56.0533, -32.8483, 0.12", "32.8, -56.2281, -32.9024, 0.12", "32.8493, -56.7259, -33.0793, 0.12", "32.9008, -57.4465, -33.3524, 1.32", "32.9254, -57.9317, -33.5466, 2.04", "33.0026, -59.2377, -34.0669, 0.36", "33.0581, -59.9801, -34.3413, 0.36", "33.0976, -60.5643, -34.518, 0.36", "33.1228, -60.8737, -34.5905, 0.36", "33.1524, -61.2153, -34.6395, 0.36", "33.2163, -61.926, -34.6899, 1.92", "33.2712, -62.4537, -34.6789, 2.52", "33.3933, -63.4313, -34.6547, 0.24", "33.4612, -63.9001, -34.6061, 0.24", "33.5327, -64.3617, -34.5371, 0.84", "33.6147, -64.8771, -34.4415, 1.08", "33.6986, -65.4053, -34.3035, 0.36", "33.8275, -66.0671, -34.0957, 0.36", "34.0963, -67.2003, -33.6997, 1.44", "34.2268, -67.6961, -33.5131, 1.92", "34.3324, -68.0528, -33.3789, 1.56", "34.5863, -68.8637, -33.033, 0.12", "34.7114, -69.2526, -32.864, 0.12", "34.8403, -69.645, -32.702, 0.12", "34.877, -69.7579, -32.6628, 0.48", "35.0858, -70.3932, -32.4375, 0.84", "35.4693, -71.626, -32.0349, 0.12", "35.624, -72.1366, -31.8923, 0.12", "35.6929, -72.375, -31.822, 0.24", "35.7912, -72.7115, -31.7218, 0.24", "35.8658, -72.9712, -31.6498, 0.24", "35.9551, -73.2962, -31.5701, 0.48", "36.0014, -73.4864, -31.5423, 0.6", "36.0738, -73.8052, -31.4916, 0.12", "36.1331, -74.0675, -31.4466, 0.12", "36.1888, -74.3226, -31.3995, 0.12", "36.3778, -75.2211, -31.2276, 2.4", "36.4833, -75.7319, -31.1301, 2.88", "36.5802, -76.2458, -31.0402, 2.4" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "29.5461, -22.337, -27.4957, 0.12", "30.5523, -22.4336, -26.3421, 0.12", "30.958, -22.4262, -25.9022, 0.12", "31.5709, -22.3631, -25.2996, 0.72", "32.8442, -22.1353, -24.1672, 0.72", "33.3968, -21.9989, -23.7533, 0.12", "33.8357, -21.8796, -23.4831, 0.12", "34.5519, -21.6078, -23.0741, 1.68", "35.0346, -21.4077, -22.8551, 2.28", "35.8657, -21.0563, -22.6024, 1.92", "36.8675, -20.6829, -22.2926, 0.36", "37.7295, -20.4294, -21.96, 0.36", "38.4256, -20.3097, -21.5545, 0.6", "38.7438, -20.2887, -21.2568, 0.36", "39.0339, -20.2901, -20.9311, 0.36", "40.5364, -20.3671, -19.084, 0.36", "40.8033, -20.3909, -18.7397, 1.2", "41.6798, -20.486, -17.532, 1.92", "43.0077, -20.6514, -15.6868, 0.24", "43.6832, -20.7286, -14.74, 2.16", "43.9376, -20.7517, -14.4026, 3.0", "44.2743, -20.7486, -14.059, 3.0" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-28.9828, -281.903, -46.6255, 0.12", "-28.25, -281.78, -47.6177, 0.12", "-27.8955, -281.759, -48.039, 0.12", "-27.6952, -281.763, -48.2606, 0.12", "-27.0481, -281.789, -48.9388, 0.6", "-26.7677, -281.8, -49.2328, 0.6", "-26.2561, -281.821, -49.7689, 0.12", "-25.4353, -281.906, -50.5153, 0.12", "-25.1671, -281.949, -50.7669, 0.84", "-24.9501, -281.993, -50.9675, 0.84" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-28.9828, -281.903, -46.6255, 1.56", "-28.8593, -282.563, -46.6987, 1.56", "-28.6881, -283.477, -46.8002, 2.28", "-28.5871, -284.017, -46.8601, 2.64" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "15.37, 90.9093, 12.3442, 0.48", "15.9981, 93.3071, 13.0758, 0.48", "16.1825, 94.1558, 13.2734, 0.36", "16.3318, 95.0281, 13.4313, 0.36", "16.4372, 95.9318, 13.5589, 0.36", "16.4866, 96.7023, 13.6528, 0.36", "16.4928, 97.1442, 13.6979, 0.72", "16.4468, 97.6045, 13.6635, 0.72", "16.3685, 98.1623, 13.6254, 0.36", "16.2491, 98.8537, 13.5865, 0.36", "16.1548, 99.4681, 13.5638, 1.2", "16.0699, 100.169, 13.5533, 1.8", "15.9729, 101.141, 13.5756, 1.8", "15.8668, 102.486, 13.6518, 0.36", "15.8444, 102.927, 13.6563, 0.36", "15.8269, 103.845, 13.6584, 0.72", "15.8332, 104.295, 13.6569, 0.84", "15.8612, 105.279, 13.6635, 0.36", "15.8841, 106.065, 13.6792, 1.08", "15.9243, 107.725, 13.6597, 2.64", "15.9479, 108.804, 13.617, 3.61", "15.9541, 109.304, 13.5678, 3.61" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "15.37, 90.9093, 12.3442, 0.6", "14.9754, 92.3728, 12.5131, 0.6", "14.7766, 93.3787, 12.5229, 0.6", "14.5263, 94.7868, 12.3822, 0.6", "14.3851, 95.4145, 12.2202, 0.6", "14.146, 96.3268, 11.9549, 1.68", "13.8817, 97.225, 11.6877, 2.04", "13.7098, 97.8073, 11.4407, 1.8", "13.41, 98.5183, 11.072, 2.04", "12.6118, 99.681, 10.4399, 0.48", "12.1162, 100.206, 10.2242, 0.48", "11.8973, 100.387, 10.1894, 0.72", "11.3864, 100.787, 10.1733, 0.96", "10.7079, 101.321, 10.177, 0.72", "10.1646, 101.785, 10.2035, 1.32", "9.70397, 102.251, 10.2278, 1.8", "9.06624, 103.013, 10.2248, 1.8", "8.60215, 103.667, 10.2197, 0.96", "8.13244, 104.41, 10.1851, 0.72", "7.79231, 104.968, 10.1401, 0.84", "7.12712, 106.0, 9.99328, 1.56", "6.75951, 106.539, 9.8835, 2.52", "6.42853, 106.998, 9.77561, 2.52", "5.48085, 108.214, 9.49119, 2.4", "4.64724, 109.215, 9.24723, 1.56", "3.99196, 109.963, 9.03876, 0.84", "3.5033, 110.5, 8.88044, 0.48", "3.30814, 110.717, 8.80842, 0.24", "2.77735, 111.311, 8.62005, 0.24", "2.3201, 111.801, 8.35462, 0.48", "2.0277, 112.112, 8.11283, 0.12", "1.76753, 112.409, 7.8535, 0.12", "1.10591, 113.177, 7.15354, 1.2", "0.747262, 113.604, 6.76585, 1.56", "-0.968223, 115.689, 4.9062, 0.36", "-1.48549, 116.359, 4.3714, 0.12", "-2.31844, 117.528, 3.60358, 2.64", "-2.54752, 117.89, 3.42662, 3.0", "-2.84449, 118.486, 3.36436, 2.76", "-3.60112, 120.326, 3.84476, 0.48", "-4.84058, 123.757, 5.55906, 0.48", "-5.12814, 124.503, 5.81466, 0.48", "-5.33936, 125.015, 5.72215, 0.48", "-5.56737, 125.61, 5.35875, 0.36", "-5.95335, 126.7, 4.40551, 0.36", "-6.27323, 127.791, 3.26479, 0.36", "-6.61423, 129.299, 1.68238, 2.16", "-6.68928, 129.861, 1.07728, 3.0", "-6.70087, 130.112, 0.815521, 3.12", "-6.64673, 131.213, -0.289616, 3.0", "-6.45851, 132.849, -1.83634, 0.12", "-6.34944, 133.62, -2.50128, 0.12", "-6.31432, 133.851, -2.67904, 0.12", "-6.15468, 134.859, -3.49188, 2.52", "-6.08, 135.269, -3.8094, 2.52" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "20.3248, 59.4411, 9.37333, 0.6", "19.8064, 59.7537, 11.2292, 0.6", "19.605, 59.8752, 11.9502, 0.6", "19.3202, 60.0469, 12.9697, 0.24", "19.1258, 60.1642, 13.6657, 0.24", "18.9206, 60.2879, 14.4003, 0.36" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "20.3248, 59.4411, 9.37333, 0.6", "21.0962, 60.6034, 9.8184, 0.6", "21.9843, 62.0414, 10.3786, 0.72", "22.5745, 63.0834, 10.7549, 1.08", "22.8867, 63.6884, 10.9339, 1.44", "23.2574, 64.4267, 11.1598, 1.56", "23.8387, 65.6118, 11.5039, 1.44", "24.6014, 67.2818, 11.9676, 1.56", "25.058, 68.3838, 12.2641, 1.68", "25.4423, 69.3328, 12.5879, 1.68", "25.8419, 70.3219, 12.9807, 1.68", "26.4351, 71.8264, 13.6367, 0.6", "26.8593, 72.9694, 14.1631, 0.36", "27.1811, 73.8661, 14.4989, 0.36", "27.6112, 75.0591, 14.8865, 1.44", "27.8467, 75.6861, 15.0529, 1.56", "28.2134, 76.6935, 15.2067, 1.56", "28.3913, 77.1883, 15.2311, 1.44", "29.0463, 78.922, 15.2532, 0.72", "29.3244, 79.5686, 15.2565, 0.6", "29.8227, 80.6083, 15.2663, 1.2", "30.0778, 81.0835, 15.2916, 1.32", "30.7182, 82.1387, 15.3751, 0.84", "31.8624, 83.7536, 15.6191, 1.08", "32.6892, 84.7755, 15.8429, 0.96", "33.3996, 85.5729, 15.9873, 0.48", "33.9805, 86.1999, 16.0761, 0.48", "34.6569, 86.8986, 16.1418, 0.6", "35.6821, 87.9382, 16.174, 0.96", "36.0173, 88.2884, 16.1703, 0.96", "37.2303, 89.6567, 16.1781, 1.68", "38.3557, 91.0448, 16.1893, 2.28", "39.2766, 92.3094, 16.2181, 2.16", "39.8481, 93.2488, 16.258, 1.92", "40.4794, 94.5961, 16.2919, 0.6", "40.9899, 96.1105, 16.3253, 0.6", "41.243, 97.0601, 16.3587, 0.6", "41.4251, 98.0678, 16.3825, 0.48", "41.5622, 99.789, 16.4194, 0.48", "41.5433, 101.429, 16.4133, 0.48", "41.3544, 102.892, 16.292, 1.2" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-4.91963, 136.71, -21.7147, 0.48", "-5.21299, 138.471, -21.3771, 0.48", "-5.28859, 139.043, -21.229, 0.12", "-5.43385, 140.187, -20.913, 0.36", "-5.53325, 141.046, -20.6745, 0.48", "-5.58866, 141.671, -20.5021, 0.48", "-5.64007, 142.452, -20.2948, 0.48", "-5.63469, 143.781, -19.9681, 1.68", "-5.60551, 144.173, -19.8928, 2.16", "-5.53407, 144.699, -19.8325, 2.4", "-5.42637, 145.328, -19.7827, 2.4", "-5.28706, 146.09, -19.71, 1.92", "-5.07081, 147.234, -19.6012, 0.12", "-4.97371, 147.687, -19.5621, 0.24", "-4.88921, 148.096, -19.5115, 0.24", "-4.72232, 148.979, -19.3719, 0.48", "-4.52755, 150.092, -19.1537, 0.48", "-4.46789, 150.455, -19.0689, 1.32", "-4.36206, 151.075, -18.908, 1.68", "-4.24136, 151.688, -18.7831, 1.8", "-4.11749, 152.249, -18.703, 1.92", "-4.03171, 152.597, -18.682, 1.92", "-3.81075, 153.476, -18.6937, 0.48", "-3.53375, 154.554, -18.7716, 0.48", "-3.30566, 155.5, -18.8647, 0.72", "-3.07622, 156.53, -18.957, 0.72", "-2.83615, 157.528, -19.1637, 0.36", "-2.65823, 158.256, -19.3844, 0.36", "-2.45125, 159.179, -19.7313, 0.72", "-2.2895, 160.097, -20.0522, 1.08", "-2.16235, 160.991, -20.3183, 1.32", "-1.88927, 163.84, -20.9937, 0.48", "-1.85549, 164.61, -21.1124, 0.36", "-1.85316, 166.017, -21.2192, 0.36", "-1.90385, 167.928, -21.2994, 0.36", "-1.92023, 168.578, -21.3223, 1.92", "-1.91683, 169.495, -21.3151, 3.0", "-1.89316, 170.13, -21.2633, 3.25", "-1.78385, 171.158, -21.2355, 3.25", "-1.46291, 173.151, -21.2997, 0.36", "-1.32456, 173.891, -21.3675, 0.48", "-1.04231, 175.424, -21.5102, 0.48", "-0.839854, 176.617, -21.6199, 0.48", "-0.699969, 177.737, -21.725, 0.48", "-0.66703, 178.253, -21.7707, 0.96", "-0.661734, 178.776, -21.8036, 1.2", "-0.688737, 179.718, -21.8624, 0.84", "-0.747805, 180.88, -21.9279, 0.48", "-0.789311, 182.063, -21.9687, 0.36", "-0.771739, 182.971, -21.9685, 0.36", "-0.651565, 184.179, -21.943, 0.36", "-0.519663, 184.929, -21.9254, 1.32", "-0.275432, 186.006, -21.8981, 2.28", "-0.103897, 186.673, -21.8817, 2.76", "0.132607, 187.58, -21.865, 2.4", "0.540541, 189.373, -21.8634, 1.08", "0.768198, 190.654, -21.8828, 0.36", "0.892281, 191.673, -21.908, 0.36", "0.979895, 192.729, -21.9629, 1.68", "1.01231, 193.378, -22.0091, 2.28", "1.02011, 194.411, -22.0667, 2.4", "0.972485, 196.002, -22.1269, 1.68", "0.879405, 197.923, -22.1498, 1.08", "0.827173, 198.857, -22.1566, 0.6", "0.770727, 199.633, -22.1643, 0.6", "0.680467, 200.928, -22.175, 1.44", "0.640772, 201.564, -22.1853, 1.8", "0.598759, 202.341, -22.2108, 1.8", "0.57102, 203.399, -22.2489, 0.48", "0.56581, 204.947, -22.2932, 0.48", "0.598608, 206.326, -22.4026, 1.2", "0.685833, 207.907, -22.5864, 1.68", "0.779631, 209.0, -22.7152, 2.28", "0.925193, 210.567, -22.8852, 2.52", "1.09452, 212.646, -23.0554, 1.2", "1.1618, 214.028, -23.1025, 0.6", "1.15217, 214.888, -23.0894, 0.48", "1.0399, 216.146, -22.9881, 0.48", "0.869657, 217.153, -22.8141, 0.48", "0.631558, 218.157, -22.5418, 0.48", "0.312174, 219.322, -22.115, 0.48", "0.12854, 220.02, -21.8248, 0.48", "-0.00449505, 220.754, -21.6037, 0.48", "-0.0676882, 221.801, -21.4497, 1.08", "0.0100024, 222.783, -21.4555, 1.68", "0.138198, 223.576, -21.5529, 2.04", "0.297672, 224.324, -21.695, 2.04", "0.782541, 226.407, -22.1359, 0.96", "0.962275, 227.181, -22.3168, 0.48", "1.12974, 227.919, -22.5009, 0.48", "1.35949, 229.034, -22.7489, 1.56", "1.42566, 229.46, -22.8237, 2.16", "1.56241, 230.333, -23.0227, 2.64", "1.65107, 230.949, -23.1641, 2.64", "1.7823, 231.739, -23.3823, 3.12", "1.92419, 232.456, -23.6143, 3.12", "2.22604, 233.812, -24.0741, 0.6", "2.78971, 236.146, -24.8304, 0.48", "3.01838, 237.025, -25.0877, 0.36", "3.15959, 237.563, -25.2176, 0.36", "3.37144, 238.508, -25.3505, 0.96", "3.6066, 239.704, -25.3936, 0.96", "3.77786, 240.843, -25.3149, 0.72", "3.84303, 241.767, -25.1943, 0.48", "3.88367, 242.947, -25.0975, 0.48", "3.88878, 244.743, -25.0245, 1.2", "3.86986, 245.65, -25.0225, 1.68", "3.82612, 246.804, -25.0586, 2.04", "3.77819, 248.061, -25.1298, 1.8", "3.73892, 249.633, -25.2523, 0.6", "3.73489, 250.673, -25.3555, 0.48", "3.76629, 251.966, -25.5135, 0.48", "3.83119, 253.249, -25.6563, 0.48", "3.89495, 253.991, -25.7168, 0.48", "3.97435, 254.647, -25.7337, 1.08", "4.0882, 255.546, -25.7043, 1.32", "4.16385, 256.058, -25.6823, 1.32", "4.32092, 256.982, -25.6148, 0.72", "4.43186, 257.558, -25.5742, 0.48", "4.58739, 258.377, -25.5222, 0.72", "4.76563, 259.278, -25.4866, 1.08", "4.96107, 260.248, -25.4849, 1.32", "5.19139, 261.414, -25.5295, 0.48", "5.38887, 262.431, -25.6461, 0.48", "5.59697, 263.43, -25.8163, 0.48", "5.83763, 264.535, -26.0371, 1.44", "6.04685, 265.507, -26.2344, 2.28", "6.29059, 266.686, -26.4645, 1.92", "6.62598, 268.368, -26.7645, 0.48", "6.86948, 269.66, -26.933, 0.48", "7.02377, 270.59, -26.9961, 0.72", "7.10528, 271.281, -26.9908, 0.48", "7.1345, 271.976, -26.9307, 0.36", "7.10214, 273.034, -26.8969, 0.36", "6.99924, 274.061, -26.9644, 0.36", "6.83451, 275.183, -27.1811, 1.8", "6.64592, 276.289, -27.5009, 3.0", "6.43703, 277.369, -27.8942, 3.25", "5.858, 279.999, -29.1001, 1.8", "5.6019, 281.092, -29.6825, 0.48", "5.45474, 281.743, -30.0611, 0.48", "5.36792, 282.199, -30.3271, 0.72", "5.27727, 282.809, -30.6324, 0.48", "5.179, 284.024, -31.0287, 0.36", "5.15674, 285.048, -31.1087, 0.36", "5.17929, 285.708, -31.1028, 0.72", "5.25071, 286.891, -31.021, 1.08", "5.31624, 287.856, -30.913, 1.2", "5.41085, 289.341, -30.6634, 0.72", "5.48536, 290.741, -30.3631, 0.36", "5.52367, 291.661, -30.158, 0.36", "5.53835, 292.893, -29.865, 0.36", "5.51971, 294.023, -29.5882, 0.36", "5.47119, 295.308, -29.3267, 1.92", "5.4168, 296.083, -29.1947, 2.76", "5.39457, 296.329, -29.1623, 3.12", "5.28561, 297.555, -29.0339, 2.76", "5.25568, 297.963, -29.0077, 2.76", "5.16132, 299.497, -28.9397, 0.48", "5.09612, 300.651, -28.9246, 0.48", "5.05465, 301.292, -28.9198, 0.96", "5.01335, 301.891, -28.9193, 0.6", "4.95676, 302.656, -28.927, 0.48", "4.90398, 303.309, -28.917, 0.36", "4.77532, 304.849, -28.7912, 0.36", "4.72983, 305.495, -28.7279, 0.48", "4.70045, 306.14, -28.6682, 0.36", "4.68503, 306.903, -28.5865, 0.36", "4.67799, 307.468, -28.515, 0.36", "4.68765, 308.483, -28.4251, 1.2", "4.6937, 309.121, -28.4026, 2.04", "4.68368, 309.868, -28.3747, 2.16", "4.64377, 310.804, -28.3458, 1.68", "4.57053, 311.836, -28.3256, 0.48", "4.47609, 313.02, -28.3139, 0.36", "4.27488, 315.327, -28.294, 0.36", "4.18229, 316.379, -28.2716, 1.2", "4.14252, 316.912, -28.2625, 0.84", "4.10247, 317.678, -28.2595, 0.48", "4.08789, 319.065, -28.2789, 0.36", "4.11154, 319.659, -28.3244, 0.36", "4.19206, 320.341, -28.455, 1.44", "4.33111, 321.316, -28.7055, 1.92", "4.42224, 321.925, -28.8696, 2.04", "4.57643, 322.949, -29.1432, 2.04", "4.757, 324.436, -29.4613, 0.48", "4.89769, 326.094, -29.7164, 0.48", "4.93204, 326.729, -29.77, 0.6", "4.93894, 327.148, -29.778, 0.48", "4.93192, 328.367, -29.7539, 0.48", "4.8557, 330.059, -29.6278, 2.64", "4.77046, 331.106, -29.4933, 3.49", "4.72267, 331.558, -29.4316, 3.49", "4.65035, 332.209, -29.3445, 3.49", "4.443, 334.024, -29.1231, 0.48", "4.30589, 335.213, -28.984, 0.72", "4.22342, 336.063, -28.897, 0.48", "4.17699, 336.71, -28.8237, 0.48", "4.13294, 337.55, -28.7256, 1.32", "4.13437, 338.071, -28.6606, 1.56", "4.19214, 338.839, -28.5525, 1.56", "4.30539, 339.603, -28.463, 0.48", "4.47463, 340.518, -28.3766, 0.48", "4.59818, 341.191, -28.308, 0.6", "4.76223, 342.209, -28.2018, 0.6", "4.8779, 343.047, -28.1143, 0.36", "4.95744, 343.728, -28.0566, 0.36", "5.0184, 344.631, -28.0069, 0.36", "5.021, 345.348, -28.0082, 1.32", "4.98126, 345.997, -28.0278, 1.56", "4.91174, 346.51, -28.0518, 1.32", "4.80457, 347.14, -28.0847, 0.36", "4.66987, 348.064, -28.1157, 0.36", "4.5989, 348.811, -28.1287, 1.2", "4.57795, 349.604, -28.1396, 1.2", "4.59466, 350.538, -28.1522, 0.36", "4.64302, 351.443, -28.1602, 0.36", "4.72276, 352.374, -28.1584, 0.48", "4.80746, 353.071, -28.1765, 0.48", "4.93758, 354.046, -28.2307, 0.48", "4.97558, 354.303, -28.2578, 0.48", "5.07699, 354.941, -28.335, 0.72", "5.21626, 355.842, -28.4359, 0.72", "5.27939, 356.324, -28.4738, 0.48", "5.37613, 357.107, -28.5006, 0.48", "5.48393, 358.034, -28.4919, 1.08", "5.57928, 358.837, -28.4464, 1.68", "5.67106, 359.576, -28.3871, 1.68", "5.76658, 360.389, -28.3239, 0.84", "5.83443, 360.908, -28.2992, 0.72", "5.99471, 361.929, -28.3527, 0.72", "6.19122, 363.044, -28.4988, 1.32", "6.3139, 363.697, -28.6218, 2.4", "6.49742, 364.645, -28.8437, 2.76", "6.67344, 365.589, -29.0871, 2.04", "6.96049, 367.234, -29.5163, 0.48", "7.08675, 368.009, -29.7159, 0.48", "7.17861, 368.645, -29.8689, 0.6", "7.22607, 369.015, -29.9351, 0.48", "7.39123, 370.543, -30.0901, 0.48", "7.43921, 371.192, -30.1057, 0.72", "7.48802, 371.85, -30.0648, 1.08", "7.53411, 372.37, -30.0218, 0.72", "7.60222, 373.06, -29.9374, 0.48", "7.66867, 373.704, -29.8686, 0.24", "7.74619, 374.385, -29.804, 0.24", "7.93233, 376.089, -29.7036, 3.12", "7.98972, 376.594, -29.6858, 3.37", "8.09484, 377.509, -29.6714, 3.0", "8.23945, 379.218, -29.686, 0.48", "8.29827, 380.436, -29.7271, 0.48", "8.31809, 381.546, -29.7689, 0.84", "8.3179, 382.301, -29.7942, 0.48", "8.32055, 383.475, -29.7635, 0.48", "8.33134, 384.856, -29.6404, 0.48", "8.33738, 385.405, -29.5409, 0.48", "8.34601, 386.405, -29.312, 0.48", "8.36242, 387.01, -29.1454, 0.96", "8.43639, 388.173, -28.8484, 1.56", "8.49178, 388.621, -28.7265, 1.56", "8.66547, 389.458, -28.5641, 0.48", "8.72251, 389.711, -28.5493, 0.36", "8.85631, 390.507, -28.6064, 0.36", "9.01902, 391.709, -28.7642, 1.8", "9.11522, 392.532, -28.9, 2.64", "9.27291, 394.079, -29.1398, 1.56", "9.3772, 395.198, -29.2833, 0.36", "9.49248, 396.454, -29.4225, 0.48", "9.60427, 398.005, -29.5138, 0.48", "9.63732, 398.527, -29.5427, 0.48", "9.70364, 399.312, -29.5763, 1.32", "9.75377, 399.729, -29.5643, 1.68", "9.84468, 400.288, -29.4968, 1.92", "10.0935, 401.718, -29.2892, 0.84", "10.2631, 403.139, -29.0827, 0.48", "10.3407, 404.312, -28.8976, 0.48", "10.3492, 404.946, -28.7977, 0.48", "10.2995, 406.329, -28.5964, 0.48", "10.1708, 407.666, -28.3717, 0.72", "10.0462, 408.549, -28.2115, 1.32", "9.89026, 409.418, -28.0327, 0.84", "9.75839, 410.042, -27.8999, 0.36", "9.61276, 410.789, -27.7408, 0.36", "9.47592, 411.767, -27.5288, 0.84", "9.44394, 412.292, -27.3845, 0.36", "9.4336, 413.403, -27.0272, 0.36", "9.48425, 414.69, -26.5925, 0.84", "9.5245, 415.234, -26.3965, 0.84", "9.59306, 415.855, -26.1893, 0.36", "9.77626, 417.168, -25.8166, 0.36", "9.87948, 417.955, -25.6298, 1.2", "9.98397, 418.869, -25.473, 2.16", "10.0094, 419.157, -25.4498, 2.28", "10.1232, 420.657, -25.3831, 0.6", "10.1678, 421.336, -25.3601, 0.36", "10.228, 422.143, -25.3284, 0.36", "10.2825, 422.607, -25.3045, 0.36", "10.3543, 423.108, -25.2571, 0.36", "10.5841, 424.47, -25.0748, 0.36", "10.7599, 425.415, -24.9234, 1.08", "10.9627, 426.428, -24.762, 1.56", "11.2163, 427.603, -24.5865, 0.72", "11.2978, 428.016, -24.5374, 0.48", "11.4434, 428.935, -24.461, 0.48", "11.5511, 429.98, -24.42, 1.68", "11.6248, 430.765, -24.4319, 2.52", "11.7205, 431.691, -24.5029, 1.92", "11.8815, 432.967, -24.6513, 0.72", "12.0101, 433.715, -24.7638, 0.6", "12.2574, 434.832, -24.976, 0.6", "12.6488, 436.28, -25.271, 0.6", "13.0437, 437.638, -25.556, 1.44", "13.2265, 438.239, -25.6805, 1.92", "13.5777, 439.409, -25.8935, 0.96", "13.8092, 440.252, -26.0164, 0.36", "14.0131, 441.224, -26.0881, 0.36", "14.1229, 442.027, -26.0781, 0.36", "14.1983, 442.798, -26.0066, 0.72", "14.3096, 443.75, -25.979, 0.36", "14.4283, 444.561, -25.9896, 0.24", "14.681, 445.872, -26.064, 2.04", "14.7427, 446.122, -26.0947, 2.04", "15.0519, 447.18, -26.2614, 1.92", "15.7939, 449.431, -26.6815, 0.48", "16.1142, 450.336, -26.8657, 0.48", "16.4385, 451.239, -27.0542, 0.72", "16.8793, 452.518, -27.314, 0.84", "17.3497, 454.048, -27.607, 0.36", "17.5051, 454.643, -27.7037, 0.24", "17.6755, 455.557, -27.7934, 1.2", "17.7129, 455.843, -27.8261, 1.68", "17.7862, 456.859, -27.9532, 1.56", "17.8027, 457.899, -28.0807, 0.36", "17.7719, 458.661, -28.1696, 0.36", "17.6699, 460.09, -28.3055, 0.36", "17.6153, 460.727, -28.357, 1.32", "17.5557, 461.376, -28.3972, 1.8", "17.509, 461.898, -28.4166, 1.68", "17.4043, 463.049, -28.4257, 0.48", "17.2867, 464.595, -28.4324, 0.48", "17.2314, 465.491, -28.4333, 1.8", "17.1704, 466.255, -28.4383, 2.4", "17.1063, 466.786, -28.4241, 1.92", "16.8984, 468.04, -28.3236, 0.6", "16.826, 468.385, -28.2693, 0.6", "16.5517, 469.483, -28.0356, 0.6", "16.2825, 470.515, -27.7756, 0.6", "15.9098, 471.932, -27.4254, 0.6", "15.5283, 473.415, -27.0969, 0.6", "15.2334, 474.65, -26.8687, 1.56", "15.0783, 475.407, -26.7823, 2.04", "14.9443, 476.22, -26.7606, 1.68", "14.8072, 477.35, -26.8257, 0.84", "14.7148, 478.311, -26.9786, 0.48", "14.5421, 479.811, -27.3094, 0.48", "14.355, 481.268, -27.664, 0.6", "14.1924, 482.357, -27.9162, 1.32", "14.0429, 483.224, -28.1009, 1.44", "13.8365, 484.288, -28.2954, 0.48", "13.4463, 486.255, -28.6101, 0.48", "13.3274, 486.889, -28.6966, 1.32", "13.1512, 487.904, -28.7972, 2.04", "13.0396, 488.671, -28.8627, 1.68", "12.9167, 489.746, -28.9525, 0.6", "12.8297, 490.836, -29.0453, 0.48", "12.7812, 492.015, -29.1573, 0.48", "12.7519, 492.777, -29.2366, 0.48", "12.7171, 493.864, -29.3531, 0.72", "12.6924, 494.627, -29.4314, 0.72", "12.6779, 495.245, -29.4816, 0.36", "12.643, 496.148, -29.5507, 0.36", "12.6363, 496.914, -29.5899, 1.8", "12.6807, 497.68, -29.5963, 2.4", "12.7793, 498.709, -29.5627, 2.4", "12.9292, 499.922, -29.5248, 0.48", "12.9667, 500.21, -29.5161, 0.48", "13.1184, 501.292, -29.5429, 0.48", "13.2682, 502.29, -29.6233, 0.48", "13.4051, 503.326, -29.7958, 0.48", "13.4535, 503.918, -29.9453, 1.08", "13.4391, 504.469, -30.1253, 1.92", "13.3253, 505.402, -30.4479, 2.16", "13.2246, 505.904, -30.6138, 2.16", "12.9637, 507.077, -30.9567, 0.72", "12.8553, 507.625, -31.0713, 0.48", "12.6644, 508.706, -31.2068, 0.48", "12.5192, 509.728, -31.2775, 0.48", "12.3348, 511.284, -31.2668, 0.48", "12.2877, 511.932, -31.2333, 0.48", "12.2569, 512.864, -31.1392, 1.32", "12.2577, 513.764, -31.0307, 1.92", "12.2696, 514.831, -30.8442, 1.56", "12.2663, 515.739, -30.6516, 0.36", "12.237, 516.92, -30.3455, 0.36", "12.2076, 517.818, -30.0901, 0.6", "12.1775, 518.671, -29.8159, 0.6", "12.1435, 519.857, -29.3984, 0.24", "12.1445, 520.588, -29.131, 0.24", "12.1938, 521.645, -28.7731, 1.92", "12.2355, 522.191, -28.5826, 2.4", "12.3686, 523.385, -28.1912, 1.92", "12.5056, 524.523, -27.8672, 0.48", "12.6296, 525.594, -27.6201, 0.48", "12.7427, 526.896, -27.3557, 0.48", "12.8034, 528.075, -27.1634, 1.44", "12.8371, 529.363, -26.9835, 2.04", "12.8482, 530.643, -26.8406, 1.08", "12.8544, 531.55, -26.7439, 0.6", "12.8735, 532.575, -26.6478, 0.48", "12.9484, 533.725, -26.5527, 0.48", "13.0281, 534.407, -26.5097, 0.48", "13.1252, 535.087, -26.4624, 0.96", "13.2762, 536.086, -26.3921, 1.44", "13.4366, 537.223, -26.3219, 0.84", "13.5386, 538.044, -26.2777, 0.48", "13.6702, 539.458, -26.2139, 0.48", "13.7099, 540.491, -26.1664, 0.6", "13.6878, 541.653, -26.1156, 0.72", "13.6356, 542.301, -26.0903, 0.12", "13.5961, 542.556, -26.0601, 0.12", "13.4158, 543.43, -25.9026, 1.56", "13.2031, 544.361, -25.695, 2.28", "13.0303, 545.087, -25.5189, 2.52", "12.8782, 545.699, -25.3666, 2.52", "12.3314, 547.841, -24.8725, 0.72", "11.8943, 549.707, -24.5723, 0.72", "11.6729, 550.706, -24.4242, 0.96", "11.5414, 551.336, -24.3279, 0.6", "11.4128, 551.968, -24.2172, 0.48", "11.1423, 553.344, -23.9888, 0.48", "10.8153, 555.305, -23.729, 0.48", "10.6175, 556.743, -23.5108, 0.48", "10.4997, 557.961, -23.3198, 1.92", "10.4238, 559.526, -23.1148, 0.96", "10.428, 560.85, -22.9685, 0.48", "10.5578, 563.284, -22.7795, 0.48", "10.7072, 564.908, -22.6947, 0.48", "10.9082, 566.442, -22.7111, 0.48", "11.1513, 567.87, -22.7782, 1.2", "11.3376, 568.763, -22.834, 1.92", "11.6594, 570.111, -22.9178, 1.44", "11.8602, 570.984, -22.977, 1.08", "11.9782, 571.623, -23.0161, 0.48", "12.0983, 572.531, -23.0548, 0.96", "12.1797, 573.461, -23.0622, 0.96", "12.2228, 574.15, -23.066, 0.48", "12.3415, 576.216, -23.0183, 0.48", "12.3875, 577.003, -22.9941, 0.6", "12.4176, 577.509, -22.9687, 0.48", "12.4756, 578.689, -22.8717, 0.48", "12.5193, 580.363, -22.6897, 0.48", "12.5151, 581.338, -22.5728, 0.96", "12.4874, 582.108, -22.4671, 1.2", "12.4249, 583.004, -22.3432, 0.6", "12.3473, 583.704, -22.2694, 0.36", "12.0763, 585.342, -22.1608, 0.36", "11.8404, 586.401, -22.1483, 0.72", "11.6269, 587.218, -22.1964, 1.44", "11.3792, 588.098, -22.2711, 2.4", "10.9925, 589.476, -22.4114, 1.56", "10.7749, 590.263, -22.491, 0.48", "10.2369, 592.275, -22.6638, 0.48", "9.99981, 593.263, -22.6809, 0.6", "9.88496, 593.812, -22.6455, 0.48", "9.68967, 594.955, -22.4378, 0.48", "9.62355, 595.67, -22.2255, 0.48", "9.61333, 596.477, -21.8989, 0.84", "9.70366, 598.086, -21.0972, 0.96", "9.81657, 599.141, -20.5337, 0.48", "9.93224, 599.96, -20.0787, 0.36", "10.1625, 601.325, -19.3163, 0.36", "10.3841, 602.522, -18.6946, 0.96", "10.4275, 602.767, -18.5649, 1.08", "10.5603, 603.588, -18.1373, 0.48", "10.6813, 604.627, -17.5241, 0.48", "10.7518, 605.598, -16.9015, 0.48", "10.7822, 606.449, -16.3276, 0.48", "10.8246, 607.687, -15.5607, 0.48", "10.8703, 609.134, -14.7414, 0.48", "10.8958, 610.905, -13.8587, 1.68", "10.9054, 611.537, -13.5867, 2.4", "10.9166, 612.08, -13.384, 2.64", "10.9726, 613.778, -12.9625, 0.24", "10.9768, 615.061, -12.8826, 0.24", "10.9035, 616.24, -12.976, 0.24", "10.8922, 616.368, -12.9966, 0.72", "10.7901, 617.254, -13.1543, 0.84", "10.6219, 618.409, -13.3792, 0.24", "10.2786, 620.253, -13.7759, 0.24", "9.98577, 621.765, -14.1439, 0.24", "9.91364, 622.135, -14.2392, 0.48" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 25
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-4.91963, 136.71, -21.7147, 0.12", "-5.13175, 137.061, -23.291, 0.12", "-5.17428, 137.125, -23.5782, 0.12", "-5.33729, 137.337, -24.4574, 1.2", "-5.50141, 137.517, -25.2566, 1.44", "-6.51499, 138.486, -29.5742, 0.36", "-6.75231, 138.716, -30.4832, 0.36", "-6.87867, 138.861, -30.9971, 1.8", "-7.07254, 139.095, -31.7109, 2.16", "-7.91024, 140.171, -34.4347, 0.36", "-8.20094, 140.583, -35.3499, 0.36", "-8.55651, 141.088, -36.2437, 1.32", "-8.84376, 141.605, -37.1788, 0.24", "-8.98649, 141.937, -37.753, 0.24", "-9.33598, 142.845, -39.2243, 0.6", "-9.81511, 144.091, -41.0076, 1.68", "-9.97458, 144.462, -41.5249, 2.04", "-10.7524, 146.034, -43.7716, 0.36", "-11.0759, 146.61, -44.54, 0.36", "-11.4953, 147.297, -45.3445, 1.56", "-11.9196, 147.97, -46.0031, 0.36", "-12.439, 148.744, -46.6402, 0.6", "-12.7579, 149.205, -47.003, 0.12", "-13.283, 149.928, -47.4809, 0.12", "-13.5324, 150.321, -47.7514, 0.48", "-14.1503, 151.606, -48.686, 0.12", "-14.3233, 152.042, -49.0004, 0.12", "-14.4556, 152.424, -49.2589, 0.12", "-14.6385, 152.969, -49.5972, 1.68", "-14.8491, 153.661, -49.9684, 2.04", "-15.2551, 155.139, -50.6228, 0.24", "-15.4298, 155.786, -50.8481, 0.24", "-15.5538, 156.287, -51.0314, 0.48", "-15.6753, 156.849, -51.2678, 0.12", "-15.9988, 158.388, -51.9466, 0.12", "-16.2915, 159.788, -52.5602, 0.12", "-16.4868, 160.696, -52.9382, 0.12", "-16.7743, 162.018, -53.4684, 1.68", "-17.1578, 163.622, -54.0782, 0.12", "-17.4856, 164.884, -54.5256, 0.12", "-17.6583, 165.507, -54.7316, 1.32", "-17.8745, 166.285, -54.9278, 1.68", "-18.163, 167.363, -55.11, 0.12", "-18.4279, 168.39, -55.1705, 0.12", "-18.5085, 168.781, -55.1647, 0.36", "-18.5897, 169.313, -55.1552, 0.12", "-18.7451, 170.63, -55.1343, 0.12", "-18.8134, 171.425, -55.1262, 1.56", "-18.8892, 172.617, -55.1255, 0.12", "-18.9975, 174.758, -55.1176, 0.12", "-19.0198, 175.178, -55.1172, 0.48", "-19.0427, 175.565, -55.1183, 0.12", "-19.1243, 177.016, -55.1373, 0.12", "-19.1717, 177.934, -55.1574, 1.2", "-19.2031, 178.599, -55.1801, 1.2", "-19.2332, 179.268, -55.209, 0.12", "-19.2459, 180.321, -55.2477, 0.12", "-19.2367, 181.027, -55.2701, 1.32", "-19.2111, 181.692, -55.2871, 1.68", "-19.136, 183.289, -55.3192, 0.12", "-19.0746, 184.473, -55.341, 0.12", "-19.021, 185.652, -55.3589, 0.12", "-19.0058, 186.073, -55.3643, 0.12", "-18.995, 186.871, -55.3697, 0.12", "-18.9999, 187.42, -55.3747, 1.2", "-19.0274, 188.362, -55.3833, 0.12", "-19.071, 189.547, -55.4088, 0.12", "-19.0914, 189.957, -55.4216, 0.36", "-19.1072, 190.382, -55.4347, 0.12", "-19.1305, 191.708, -55.4701, 0.12", "-19.1251, 192.293, -55.4809, 0.96", "-19.1058, 192.888, -55.4836, 0.12", "-19.044, 194.21, -55.3978, 0.12", "-19.0097, 194.874, -55.3414, 0.84", "-18.9735, 195.538, -55.2739, 0.36", "-18.95, 195.955, -55.2236, 0.12", "-18.7728, 198.598, -54.9003, 0.12", "-18.6522, 200.03, -54.7206, 0.24", "-18.5933, 200.613, -54.6531, 0.48", "-18.5497, 201.029, -54.6128, 0.12", "-18.4328, 202.274, -54.5431, 0.12", "-18.3884, 203.095, -54.5461, 0.84", "-18.3853, 203.523, -54.5867, 0.12", "-18.3713, 204.839, -54.7727, 0.12", "-18.3778, 205.039, -54.7987, 0.6", "-18.4578, 205.667, -54.9438, 0.12", "-18.6439, 206.449, -55.1975, 0.12", "-18.8655, 207.179, -55.4674, 1.08", "-19.1389, 208.009, -55.8498, 1.32", "-19.4025, 208.679, -56.2201, 1.68", "-19.9228, 209.907, -56.921, 0.12", "-20.2503, 210.635, -57.3984, 0.12", "-20.406, 210.931, -57.6162, 0.48", "-20.7384, 211.463, -58.0175, 0.12", "-21.2428, 212.192, -58.5459, 0.12", "-21.5529, 212.62, -58.8282, 0.48", "-22.1585, 213.355, -59.2772, 0.12", "-22.8156, 214.041, -59.6996, 0.12", "-23.4791, 214.699, -60.0631, 0.12", "-23.8055, 215.019, -60.2098, 0.84", "-24.267, 215.463, -60.4016, 0.84", "-24.5598, 215.723, -60.5035, 0.12", "-25.3469, 216.355, -60.7105, 0.12", "-25.872, 216.742, -60.8549, 0.12", "-25.9807, 216.813, -60.8818, 0.48", "-26.4135, 217.079, -60.9762, 0.12", "-26.9252, 217.364, -61.08, 0.12", "-27.6202, 217.682, -61.176, 1.32", "-27.9025, 217.773, -61.2012, 1.56", "-28.8848, 218.009, -61.2582, 0.12", "-29.5495, 218.152, -61.2929, 0.12", "-30.0213, 218.234, -61.2612, 0.48", "-30.6832, 218.324, -61.1604, 0.12", "-31.0718, 218.386, -61.0934, 0.12", "-31.5309, 218.478, -61.0221, 0.12", "-31.9882, 218.593, -60.9277, 0.72", "-33.4203, 219.063, -60.6196, 0.12", "-34.039, 219.314, -60.4995, 0.12", "-35.0023, 219.752, -60.3016, 1.8", "-35.6447, 220.064, -60.1456, 2.04", "-37.1567, 220.825, -59.7599, 0.24", "-37.7282, 221.127, -59.6166, 0.24", "-38.453, 221.55, -59.4674, 0.24", "-39.5147, 222.218, -59.2447, 0.24", "-40.1834, 222.655, -59.0993, 0.96", "-40.5686, 222.922, -59.0302, 1.32", "-41.188, 223.375, -58.9566, 0.12", "-41.865, 223.872, -58.8835, 0.12", "-42.8428, 224.611, -58.8301, 0.12", "-43.2017, 224.922, -58.8445, 0.96", "-43.4959, 225.221, -58.8683, 0.96", "-43.8492, 225.626, -58.9024, 0.24", "-44.2613, 226.148, -58.9656, 0.24", "-44.5157, 226.506, -59.0183, 0.12", "-45.1644, 227.519, -59.1952, 0.12", "-45.6352, 228.305, -59.3543, 0.12", "-45.9104, 228.787, -59.4568, 0.96", "-46.1398, 229.2, -59.6047, 0.12", "-46.4649, 229.764, -59.879, 0.12", "-46.6063, 229.989, -60.0115, 0.12", "-46.7367, 230.196, -60.1634, 1.2", "-46.9404, 230.537, -60.4315, 1.2", "-47.6641, 231.867, -61.4332, 0.12", "-47.9216, 232.399, -61.8869, 0.12", "-48.1466, 232.955, -62.3642, 0.12", "-48.3472, 233.513, -62.8323, 0.12", "-48.4684, 233.913, -63.1703, 0.72", "-48.6054, 234.372, -63.5241, 0.84", "-49.0314, 235.822, -64.4927, 0.12", "-49.2881, 236.763, -65.1684, 0.12", "-49.3329, 236.904, -65.2712, 0.24", "-49.5552, 237.484, -65.7058, 0.12", "-50.0408, 238.686, -66.669, 0.12", "-50.1295, 238.88, -66.8279, 1.2", "-50.5919, 239.751, -67.5602, 0.12", "-51.0266, 240.49, -68.3084, 0.12", "-51.3414, 241.035, -68.8883, 0.72", "-51.6563, 241.544, -69.5242, 0.12", "-51.8748, 241.844, -69.996, 0.12", "-52.2712, 242.278, -70.777, 0.12", "-52.5876, 242.574, -71.3716, 1.08", "-52.8134, 242.763, -71.8282, 1.08", "-53.3877, 243.181, -72.917, 0.12", "-53.8358, 243.447, -73.7002, 0.12", "-53.9591, 243.512, -73.9269, 0.36" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "8.26156, 132.331, -78.9727, 0.12", "8.79658, 133.659, -79.3514, 0.12", "9.39431, 135.183, -79.8111, 2.64", "9.62094, 135.798, -80.0112, 2.16", "10.0443, 137.124, -80.4626, 0.24", "10.3801, 138.302, -80.8452, 0.24", "10.6088, 139.19, -81.1206, 0.24", "10.8807, 140.537, -81.469, 0.96", "11.0229, 141.453, -81.691, 0.12", "11.1493, 142.591, -81.8837, 0.12", "11.2165, 143.485, -81.9523, 0.24", "11.242, 144.021, -81.9525, 0.24", "11.2849, 145.139, -81.8667, 1.68", "11.3152, 145.99, -81.7811, 2.52", "11.4062, 147.411, -81.6801, 1.56", "11.4504, 148.012, -81.6668, 0.48", "11.5612, 149.923, -81.7484, 0.48", "11.6118, 151.01, -81.8481, 1.32", "11.6596, 152.258, -82.062, 0.96", "11.6951, 153.207, -82.2859, 0.12", "11.7324, 154.152, -82.5694, 0.12", "11.7774, 155.314, -82.9433, 1.8", "11.8095, 156.109, -83.2063, 1.92", "11.8455, 157.314, -83.5543, 0.12", "11.8558, 158.284, -83.7329, 0.12", "11.8508, 158.571, -83.7676, 0.48", "11.8355, 159.208, -83.8197, 0.12", "11.8075, 159.892, -83.8419, 0.12", "11.7089, 160.972, -83.8147, 0.72", "11.5885, 161.877, -83.7335, 0.12", "11.4236, 162.85, -83.6551, 0.12", "11.3519, 163.254, -83.6268, 0.48", "11.2806, 163.642, -83.6091, 0.12", "11.1048, 164.617, -83.6184, 0.12", "11.0327, 165.032, -83.6483, 1.2", "10.9089, 165.797, -83.7286, 1.32", "10.8126, 166.612, -83.782, 0.84", "10.779, 166.975, -83.7935, 0.12", "10.7156, 167.794, -83.787, 0.12", "10.7061, 168.068, -83.7719, 0.6", "10.7088, 168.645, -83.7252, 0.12", "10.7712, 169.929, -83.5856, 0.12", "10.8187, 170.477, -83.5229, 0.6", "10.8835, 170.917, -83.5388, 0.12", "11.0208, 171.585, -83.6287, 0.12", "11.2593, 172.711, -83.8553, 1.56", "11.3441, 173.122, -83.9607, 2.04", "11.5102, 173.981, -84.2081, 1.68", "12.0247, 176.4, -84.9931, 0.12", "12.2822, 177.552, -85.424, 0.12", "12.4435, 178.291, -85.7473, 0.12", "12.5678, 178.896, -86.0439, 1.08", "12.6591, 179.367, -86.2837, 1.56", "12.8857, 180.495, -86.9241, 0.12", "13.1995, 181.876, -87.713, 0.12", "13.464, 182.741, -88.3005, 0.48", "13.7863, 183.576, -88.9463, 0.48", "13.9793, 183.991, -89.2901, 0.48", "14.5586, 185.048, -90.2965, 1.44", "14.8289, 185.498, -90.7369, 1.92", "15.2941, 186.17, -91.3862, 1.44", "15.9314, 186.981, -92.2127, 0.48", "16.7284, 187.933, -93.1975, 0.36", "17.7629, 189.12, -94.4093, 0.12", "18.3574, 189.794, -95.0524, 1.56", "18.8276, 190.322, -95.5597, 1.2", "20.0594, 191.709, -96.7861, 0.12", "20.4564, 192.126, -97.14, 0.12", "20.7162, 192.377, -97.3481, 0.6", "21.0401, 192.687, -97.5559, 0.6", "21.6926, 193.295, -97.9865, 0.36", "22.144, 193.725, -98.2492, 0.36", "22.9028, 194.484, -98.5675, 0.12", "23.3606, 194.97, -98.7219, 0.12", "24.0723, 195.777, -98.9258, 0.12", "24.97, 196.851, -99.1856, 1.56", "25.5367, 197.56, -99.3325, 2.16", "26.345, 198.647, -99.5476, 0.24", "27.412, 200.22, -99.9295, 0.24", "27.8346, 200.935, -100.141, 0.12", "28.5216, 202.233, -100.576, 1.68", "28.7147, 202.655, -100.745, 2.28", "28.9007, 203.136, -100.976, 2.28", "29.4796, 204.887, -102.015, 0.12", "29.7757, 206.008, -102.776, 0.12", "29.8464, 206.346, -103.019, 0.6", "30.0285, 207.504, -103.944, 0.24", "30.0972, 208.11, -104.495, 0.24", "30.1716, 208.873, -105.219, 0.24", "30.1979, 209.393, -105.726, 0.96", "30.2072, 210.087, -106.461, 1.44", "30.1696, 211.339, -107.796, 0.12", "30.0735, 212.52, -108.942, 0.12", "30.0217, 213.016, -109.398, 0.12", "29.9967, 213.179, -109.527, 0.48", "29.9426, 213.529, -109.777, 0.48", "29.9149, 213.694, -109.875, 0.48", "29.715, 214.696, -110.333, 0.48", "29.486, 215.792, -110.778, 1.32", "29.3693, 216.357, -111.005, 1.8", "29.2301, 217.216, -111.315, 0.96", "29.1195, 218.009, -111.565, 0.12", "28.981, 219.179, -111.916, 0.12", "28.9051, 219.839, -112.096, 1.2", "28.8756, 220.368, -112.234, 1.56", "28.8978, 221.104, -112.48, 0.12", "28.9918, 222.275, -112.911, 0.12", "29.1395, 223.344, -113.332, 0.12", "29.3881, 224.407, -113.898, 0.12", "29.8776, 226.142, -114.956, 0.12", "30.3516, 227.579, -115.973, 0.12", "30.5528, 228.137, -116.394, 0.84", "30.6975, 228.517, -116.687, 0.96", "31.4037, 230.426, -118.161, 0.12", "31.6761, 231.255, -118.806, 0.12", "31.8109, 232.083, -119.382, 0.12", "31.856, 232.943, -119.899, 0.12", "31.8481, 233.682, -120.351, 0.36", "31.8323, 233.802, -120.415, 0.12", "31.589, 234.367, -120.479, 0.12", "31.204, 234.933, -120.511, 0.48" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "8.26156, 132.331, -78.9727, 0.12", "8.14446, 133.242, -83.3095, 0.12", "8.07161, 133.443, -84.123, 0.12", "7.87464, 133.724, -85.1246, 0.12", "7.70142, 133.919, -85.7497, 0.84", "7.26062, 134.351, -87.0444, 1.8", "7.08612, 134.507, -87.4783, 1.92", "6.51304, 134.913, -88.2672, 0.12", "5.77821, 135.483, -89.1736, 0.12", "5.25466, 135.892, -89.7165, 0.96", "4.98972, 136.106, -89.9602, 1.2", "4.33236, 136.647, -90.4708, 0.12", "3.90709, 137.039, -90.8231, 0.12", "3.09489, 137.934, -91.5171, 0.12", "2.81774, 138.294, -91.7699, 1.2", "2.64615, 138.528, -91.9229, 1.44", "2.30091, 139.048, -92.285, 0.6", "1.88536, 139.697, -92.7691, 0.12", "1.51329, 140.237, -93.2338, 0.12", "1.24866, 140.581, -93.6191, 0.96", "1.06028, 140.806, -93.9067, 1.32", "0.516093, 141.355, -94.7044, 0.12", "0.209341, 141.601, -95.124, 0.12", "-0.164304, 141.841, -95.6353, 0.12", "-0.836444, 142.194, -96.5883, 0.12", "-1.23952, 142.389, -97.1634, 1.08", "-1.53849, 142.518, -97.5682, 1.8", "-1.92291, 142.663, -98.1171, 1.2", "-2.50366, 142.881, -99.0112, 0.12", "-2.7779, 142.982, -99.4354, 0.12", "-3.00812, 143.058, -99.7769, 0.12", "-3.25996, 143.14, -100.223, 0.12", "-4.13946, 143.405, -101.909, 0.12", "-4.33176, 143.458, -102.277, 1.44", "-4.53481, 143.515, -102.752, 2.04", "-4.83363, 143.58, -103.537, 1.32", "-5.50055, 143.659, -105.243, 0.12", "-5.72534, 143.666, -105.789, 0.12", "-5.94981, 143.643, -106.256, 0.96", "-6.94871, 143.431, -108.236, 0.12", "-7.35019, 143.309, -108.942, 0.12", "-7.81257, 143.136, -109.676, 1.56", "-8.02921, 143.044, -109.958, 1.8", "-8.62529, 142.784, -110.73, 0.12", "-8.79411, 142.713, -110.93, 0.12", "-9.18667, 142.561, -111.338, 0.48", "-9.96198, 142.271, -112.256, 0.12", "-10.4582, 142.091, -112.898, 0.12", "-10.8798, 141.945, -113.41, 1.32", "-11.1926, 141.828, -113.754, 1.56", "-11.894, 141.505, -114.392, 0.12", "-12.2429, 141.294, -114.644, 0.12", "-12.4171, 141.171, -114.735, 0.48", "-12.9591, 140.726, -114.995, 0.12", "-13.4922, 140.261, -115.223, 0.12", "-14.2003, 139.622, -115.485, 0.12", "-14.852, 139.025, -115.689, 0.12", "-15.1121, 138.784, -115.774, 0.72", "-15.3601, 138.573, -115.826, 0.12", "-16.0353, 138.057, -115.921, 0.12", "-16.4948, 137.759, -115.958, 0.12", "-17.0001, 137.473, -115.981, 1.44", "-17.5544, 137.192, -116.0, 1.8", "-19.2066, 136.39, -116.059, 0.12", "-19.7347, 136.149, -116.069, 0.12", "-21.14, 135.55, -116.093, 0.12", "-21.446, 135.432, -116.111, 0.24", "-21.6924, 135.351, -116.118, 0.12", "-22.0432, 135.242, -116.122, 0.12", "-23.008, 134.987, -116.171, 1.32", "-23.1217, 134.963, -116.17, 1.56", "-23.9336, 134.847, -116.126, 1.56", "-25.1142, 134.726, -116.09, 0.24", "-25.3533, 134.714, -116.091, 0.12", "-26.0945, 134.716, -116.152, 0.12", "-26.7074, 134.739, -116.275, 0.12", "-26.956, 134.751, -116.333, 0.48", "-27.3557, 134.784, -116.453, 0.48", "-27.5672, 134.81, -116.546, 0.12", "-28.4368, 134.916, -116.933, 0.12", "-29.0807, 134.952, -117.222, 0.72" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-53.9566, 46.0543, -69.2839, 0.12", "-55.1478, 44.7752, -70.494, 0.12", "-55.8639, 44.0866, -71.3003, 0.12", "-56.7682, 43.2313, -72.3025, 0.12", "-56.9779, 43.0332, -72.5295, 1.56", "-57.447, 42.5846, -73.0163, 1.56", "-57.9225, 42.1296, -73.4753, 0.96", "-58.8196, 41.3353, -74.2626, 0.12", "-59.383, 40.8652, -74.7796, 0.12", "-59.5558, 40.7165, -74.917, 0.12", "-59.9037, 40.3944, -75.1592, 0.12", "-60.3244, 39.9704, -75.4549, 0.6", "-60.5881, 39.6818, -75.6321, 0.72", "-61.6431, 38.4112, -76.2687, 0.12", "-62.1201, 37.841, -76.6954, 0.12", "-62.7836, 36.9986, -77.3747, 2.04", "-63.8828, 35.541, -78.6588, 0.12", "-64.3637, 34.8864, -79.2556, 0.12", "-64.8967, 34.1858, -79.9481, 2.28", "-66.6382, 31.9342, -82.1843, 0.12", "-67.214, 31.2453, -82.945, 0.12", "-67.698, 30.7854, -83.6624, 0.12", "-67.916, 30.6116, -83.9888, 0.12", "-68.7529, 30.036, -85.1861, 0.12", "-69.3121, 29.7169, -85.9187, 1.92", "-69.6875, 29.5233, -86.3382, 2.28", "-72.9182, 27.9673, -89.9078, 0.12", "-73.2622, 27.798, -90.2642, 0.12", "-74.1227, 27.3495, -91.1357, 1.8", "-74.4795, 27.1489, -91.4761, 1.8", "-75.0337, 26.8124, -91.9838, 1.2", "-76.019, 26.052, -92.771, 0.12", "-76.4804, 25.5647, -92.9278, 0.12", "-76.6387, 25.3878, -92.9999, 0.6", "-77.0129, 24.8924, -93.2116, 0.12", "-77.5214, 24.1329, -93.5424, 0.12", "-77.6389, 23.9519, -93.6168, 0.36", "-77.9031, 23.5435, -93.8331, 0.36", "-78.0848, 23.2616, -94.0218, 0.12", "-78.6405, 22.3949, -94.5916, 0.12", "-79.1471, 21.6479, -95.2653, 0.12", "-79.3332, 21.3703, -95.5347, 0.96", "-80.1371, 20.1123, -96.7493, 0.12", "-80.463, 19.6196, -97.3392, 0.12", "-80.9762, 18.8437, -98.3442, 2.76", "-82.2743, 16.9457, -101.155, 0.12", "-82.6846, 16.3326, -102.084, 0.12", "-82.8396, 16.0844, -102.467, 0.96", "-83.8605, 14.2471, -105.388, 0.12", "-84.0539, 13.8534, -106.1, 0.12", "-84.3389, 13.0849, -107.593, 0.12", "-84.378, 12.8639, -108.003, 1.2", "-84.396, 12.5034, -108.67, 2.28", "-84.3115, 11.576, -110.195, 1.68", "-84.0632, 10.7688, -111.192, 0.12", "-83.8931, 10.3752, -111.728, 0.12", "-83.7832, 10.1577, -112.014, 0.12", "-83.6471, 9.87791, -112.447, 0.12", "-83.5127, 9.57456, -112.89, 0.6", "-83.4135, 9.34932, -113.171, 0.6", "-83.1988, 8.53793, -114.376, 0.24", "-83.1922, 8.3623, -114.686, 0.24", "-83.2604, 7.79427, -115.79, 0.12", "-83.393, 7.13935, -116.98, 2.4", "-83.4204, 7.01734, -117.183, 2.4", "-83.9393, 5.45486, -119.912, 0.12", "-84.3578, 4.3652, -121.772, 0.12", "-84.6372, 3.69631, -122.914, 0.12", "-84.9321, 3.06489, -124.013, 3.12", "-85.0811, 2.78604, -124.508, 3.12", "-86.4599, 0.270551, -128.65, 0.12", "-86.6702, -0.10746, -129.218, 0.12", "-86.7814, -0.301347, -129.497, 0.48", "-87.0307, -0.736288, -130.098, 0.12", "-87.2462, -1.07711, -130.59, 0.12", "-87.4405, -1.30999, -130.963, 0.48", "-87.8352, -1.72282, -131.593, 0.12", "-88.1932, -2.06935, -132.145, 0.12", "-89.142, -3.04081, -133.581, 2.76", "-89.3212, -3.23821, -133.847, 2.76", "-91.2643, -5.48178, -136.724, 0.12", "-91.5363, -5.82705, -137.125, 0.12", "-91.8661, -6.27932, -137.614, 0.12", "-92.3365, -6.95908, -138.322, 0.12", "-92.8603, -7.76481, -139.109, 1.8", "-93.1766, -8.32838, -139.633, 2.16", "-93.4572, -8.9147, -140.097, 1.92", "-94.2477, -10.3467, -141.423, 0.12", "-94.4489, -10.6534, -141.735, 0.72", "-94.9201, -11.1989, -142.343, 0.72", "-95.2059, -11.4951, -142.645, 0.12", "-95.7707, -12.0441, -143.139, 0.12", "-96.3725, -12.6107, -143.574, 0.12", "-96.965, -13.203, -143.907, 2.4", "-98.3057, -14.6059, -144.581, 0.12", "-99.122, -15.5081, -144.955, 0.12", "-99.4398, -15.9005, -145.094, 0.6", "-99.655, -16.1899, -145.202, 0.12", "-100.066, -16.7752, -145.405, 0.12", "-100.193, -16.9651, -145.472, 0.48", "-100.553, -17.5249, -145.731, 0.12", "-101.4, -18.8104, -146.486, 0.12", "-102.049, -19.7877, -147.109, 1.68", "-102.303, -20.1675, -147.364, 2.16", "-102.504, -20.4835, -147.574, 2.16", "-103.57, -22.2524, -148.75, 0.12", "-103.886, -22.7966, -149.096, 0.12", "-104.048, -23.0703, -149.279, 0.48", "-104.102, -23.1619, -149.332, 0.12", "-104.619, -23.994, -149.758, 0.12", "-105.139, -24.7572, -150.05, 0.12", "-105.543, -25.2528, -150.237, 1.68", "-105.855, -25.5751, -150.398, 1.92", "-106.543, -26.2001, -150.749, 0.12", "-107.013, -26.574, -150.974, 0.12", "-107.613, -26.9824, -151.222, 1.32", "-109.22, -28.0143, -151.88, 0.12", "-109.82, -28.3871, -152.147, 0.12", "-110.238, -28.6317, -152.368, 0.48", "-110.535, -28.7873, -152.538, 0.12", "-111.262, -29.1213, -153.0, 0.12", "-112.229, -29.5241, -153.602, 0.12", "-112.458, -29.601, -153.734, 0.96", "-113.573, -29.886, -154.333, 0.12", "-114.011, -29.9803, -154.551, 0.12", "-115.008, -30.1591, -154.998, 1.44", "-115.847, -30.2892, -155.314, 1.8", "-117.132, -30.4747, -155.656, 0.12", "-118.716, -30.7032, -155.95, 0.12", "-119.093, -30.7568, -155.985, 0.48", "-119.339, -30.7899, -155.997, 0.12", "-120.005, -30.8906, -155.989, 0.12", "-120.489, -30.9682, -155.971, 1.08", "-121.081, -31.0793, -155.914, 1.68", "-122.184, -31.2938, -155.768, 0.12", "-122.66, -31.3898, -155.698, 0.12", "-122.983, -31.4706, -155.648, 0.48", "-123.218, -31.5409, -155.609, 0.12", "-124.167, -31.8846, -155.519, 0.12", "-125.229, -32.3795, -155.483, 1.68", "-126.0, -32.8493, -155.548, 0.12", "-126.721, -33.3587, -155.71, 0.12", "-127.225, -33.7606, -155.88, 0.6", "-128.268, -34.6934, -156.341, 0.12", "-128.921, -35.3699, -156.702, 0.12", "-129.793, -36.3261, -157.295, 0.12", "-130.097, -36.667, -157.506, 0.12", "-130.419, -37.0199, -157.72, 1.68", "-130.736, -37.3676, -157.904, 2.28", "-131.334, -37.9913, -158.146, 1.56", "-132.187, -38.8056, -158.398, 0.12", "-132.613, -39.2191, -158.443, 0.12", "-132.987, -39.584, -158.476, 0.12", "-133.411, -39.9996, -158.511, 1.32", "-133.76, -40.3442, -158.533, 1.56", "-134.287, -40.8636, -158.56, 0.12", "-135.657, -42.2547, -158.578, 0.12", "-136.492, -43.1044, -158.603, 1.8", "-136.778, -43.4132, -158.617, 2.52", "-137.012, -43.6646, -158.629, 2.52", "-137.766, -44.473, -158.689, 0.12", "-138.748, -45.5285, -158.787, 0.12", "-139.217, -46.0395, -158.826, 1.56", "-139.779, -46.6862, -158.852, 2.04", "-140.392, -47.4145, -158.884, 2.04", "-141.237, -48.4557, -158.928, 0.12", "-141.742, -49.1164, -158.945, 0.12", "-142.039, -49.5478, -158.958, 0.72", "-142.175, -49.7767, -158.952, 0.12", "-142.466, -50.3357, -158.905, 0.12", "-142.567, -50.5795, -158.872, 0.48", "-142.699, -50.9191, -158.839, 0.12", "-143.153, -52.1496, -158.828, 0.12", "-143.442, -52.9781, -158.872, 1.56", "-143.576, -53.3809, -158.913, 1.8", "-143.723, -53.8584, -158.987, 1.8", "-144.183, -55.3947, -159.288, 0.12", "-144.478, -56.3917, -159.533, 0.12", "-144.478, -56.3917, -159.533, 0.48", "-144.539, -56.6043, -159.622, 0.12", "-144.69, -57.2298, -159.932, 0.12", "-144.734, -57.4574, -160.063, 0.48", "-144.772, -57.6701, -160.185, 0.12", "-144.984, -58.6149, -160.884, 0.12", "-145.284, -59.8149, -161.816, 0.48", "-145.376, -60.1651, -162.062, 0.12", "-145.573, -60.9272, -162.565, 1.56", "-145.749, -61.6228, -162.986, 1.92", "-146.008, -62.6825, -163.561, 1.56", "-146.134, -63.1997, -163.841, 0.12", "-146.741, -65.5626, -164.94, 0.12", "-146.826, -65.8888, -165.085, 0.84", "-146.916, -66.2323, -165.233, 0.12", "-147.05, -66.7665, -165.464, 0.12", "-147.421, -68.4058, -166.113, 0.12", "-147.768, -69.8841, -166.825, 2.4" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-53.9566, 46.0543, -69.2839, 0.12", "-54.664, 46.9189, -70.2187, 0.12", "-55.1531, 47.5461, -70.8834, 0.12", "-55.9195, 48.6376, -71.8978, 2.4", "-57.1578, 50.4756, -73.5838, 0.24", "-57.4046, 50.8539, -73.9156, 0.24", "-57.65, 51.2494, -74.2424, 1.44", "-58.1357, 52.0693, -74.8954, 0.12", "-58.6436, 53.0336, -75.632, 0.12", "-59.0317, 53.8957, -76.1759, 0.12", "-59.3993, 54.7382, -76.6636, 2.28", "-59.8587, 55.7664, -77.3007, 0.12", "-60.2408, 56.5953, -77.8105, 0.12", "-60.7459, 57.6931, -78.4598, 0.12", "-61.3102, 58.9033, -79.1618, 2.76", "-62.0045, 60.3717, -80.0006, 0.24", "-62.0045, 60.3717, -80.0006, 0.12", "-62.3952, 61.2275, -80.4686, 0.12", "-62.5804, 61.6346, -80.6918, 0.96", "-62.8065, 62.155, -80.9309, 0.96", "-63.2813, 63.3096, -81.4307, 0.12", "-63.6825, 64.4569, -81.9433, 0.12", "-63.8098, 64.8704, -82.1426, 0.72", "-64.0151, 65.563, -82.5351, 0.12", "-64.2249, 66.288, -82.9566, 0.12", "-64.4403, 67.0783, -83.3794, 2.16", "-64.8593, 68.5389, -84.2296, 0.12", "-64.9919, 68.966, -84.5102, 0.12", "-65.2954, 69.91, -85.1613, 0.12", "-65.4912, 70.5263, -85.5771, 0.12", "-65.7468, 71.2808, -86.1506, 1.44", "-66.323, 73.0541, -87.5335, 0.12", "-66.513, 73.6483, -87.9683, 0.12", "-66.6484, 74.1005, -88.297, 1.56", "-66.7875, 74.6277, -88.6681, 1.56", "-67.0928, 75.7927, -89.5008, 0.12", "-67.2196, 76.3059, -89.8657, 0.12", "-67.3149, 76.7537, -90.1144, 0.12", "-67.3843, 76.9992, -90.2698, 0.12", "-67.699, 77.9159, -90.8459, 0.12", "-67.8559, 78.2887, -91.0897, 0.12", "-68.1515, 78.883, -91.4531, 1.92", "-68.3772, 79.2762, -91.7237, 2.16", "-69.2032, 80.5677, -92.6307, 0.12", "-69.5416, 81.0491, -92.9526, 0.12", "-69.8266, 81.4232, -93.2009, 1.08", "-70.185, 81.8335, -93.4878, 1.32", "-70.8403, 82.4841, -93.9549, 0.12", "-71.3222, 82.8994, -94.2665, 0.12", "-71.704, 83.179, -94.4885, 0.48", "-72.1037, 83.4263, -94.7189, 0.12", "-73.0126, 83.9639, -95.2338, 0.12", "-73.5791, 84.3007, -95.5612, 1.44", "-73.8968, 84.5046, -95.7507, 1.68", "-74.8418, 85.2075, -96.378, 0.12", "-75.5097, 85.7735, -96.8239, 0.12", "-76.0204, 86.2788, -97.1573, 1.8", "-76.4762, 86.8245, -97.45, 2.16", "-77.1512, 87.7056, -97.8448, 0.12", "-77.5724, 88.2496, -98.1116, 0.12", "-77.9024, 88.6549, -98.2967, 0.48", "-77.9631, 88.7238, -98.3273, 0.12", "-78.3529, 89.0913, -98.5182, 0.12", "-79.0187, 89.6296, -98.8701, 1.68", "-80.4295, 90.6555, -99.6469, 0.12", "-81.0012, 91.0524, -99.9736, 0.12", "-81.3447, 91.311, -100.184, 0.48", "-81.9455, 91.8109, -100.55, 0.12", "-82.3346, 92.1674, -100.797, 0.12", "-82.7728, 92.6214, -101.09, 1.56", "-83.1251, 93.013, -101.304, 2.28", "-83.9216, 93.9564, -101.757, 0.12", "-84.291, 94.3863, -101.946, 0.12", "-84.5442, 94.6727, -102.036, 0.48", "-84.9885, 95.1541, -102.152, 0.12", "-85.3156, 95.4861, -102.229, 0.12", "-86.1356, 96.2407, -102.374, 2.16", "-87.2775, 97.1624, -102.461, 0.12", "-88.0837, 97.7568, -102.477, 0.12", "-88.5498, 98.0767, -102.49, 0.6", "-88.8647, 98.2771, -102.502, 0.12", "-89.4979, 98.6581, -102.522, 0.12", "-90.2592, 99.0979, -102.537, 2.4", "-90.6213, 99.3146, -102.519, 2.4", "-91.9274, 100.113, -102.435, 0.12", "-92.985, 100.786, -102.32, 0.12", "-93.657, 101.232, -102.216, 1.68", "-94.1617, 101.57, -102.118, 2.16", "-95.1786, 102.258, -101.844, 0.12", "-95.7769, 102.667, -101.631, 0.12", "-96.2414, 102.984, -101.408, 0.6", "-96.404, 103.093, -101.328, 0.12", "-97.3199, 103.693, -100.927, 0.12", "-97.6942, 103.939, -100.729, 0.84", "-98.0418, 104.173, -100.511, 1.08", "-98.2126, 104.296, -100.404, 1.08", "-98.466, 104.496, -100.254, 0.12", "-98.922, 104.898, -99.9768, 0.12", "-99.4624, 105.414, -99.6418, 1.44", "-99.8937, 105.817, -99.3919, 1.68", "-100.361, 106.252, -99.1199, 0.12", "-101.05, 106.885, -98.7396, 0.12", "-101.221, 107.037, -98.6529, 1.32", "-101.625, 107.37, -98.4798, 0.12", "-101.944, 107.619, -98.3581, 0.12", "-102.127, 107.747, -98.2805, 0.36", "-102.437, 107.92, -98.142, 0.12", "-102.882, 108.127, -97.9457, 0.12", "-103.241, 108.282, -97.7863, 0.48", "-103.788, 108.499, -97.5611, 0.12", "-104.532, 108.776, -97.2731, 0.12", "-105.105, 108.975, -97.0623, 1.8", "-105.511, 109.106, -96.9207, 2.64", "-105.801, 109.196, -96.8289, 2.64", "-106.798, 109.478, -96.5493, 0.12", "-107.695, 109.708, -96.3367, 0.12", "-108.094, 109.813, -96.2445, 0.12", "-108.414, 109.9, -96.171, 0.48", "-108.612, 109.954, -96.1204, 0.12", "-109.013, 110.075, -96.0019, 0.12", "-109.389, 110.214, -95.8687, 0.6", "-109.712, 110.372, -95.7448, 0.12", "-110.145, 110.623, -95.5738, 0.12", "-110.492, 110.849, -95.4045, 0.72", "-110.848, 111.1, -95.2109, 0.96", "-111.26, 111.431, -95.0014, 0.12", "-111.743, 111.85, -94.7819, 0.12", "-112.05, 112.125, -94.6488, 1.2", "-112.608, 112.661, -94.4218, 1.56", "-112.995, 113.058, -94.2945, 1.68", "-113.675, 113.84, -94.1105, 0.12", "-114.263, 114.567, -93.976, 0.12", "-114.579, 114.955, -93.9948, 1.56", "-114.945, 115.417, -94.0421, 1.56", "-115.378, 115.976, -94.1388, 0.12", "-116.758, 117.803, -94.5201, 0.12", "-116.932, 118.038, -94.5784, 0.48", "-118.526, 120.23, -95.3789, 0.12" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-21.113, -201.783, -33.26, 3.37", "-21.1851, -202.125, -32.2841, 3.37", "-21.3158, -203.019, -29.5469, 0.12", "-21.3084, -203.072, -29.3605, 0.12", "-21.2582, -203.209, -28.846, 0.12", "-21.2052, -203.286, -28.527, 0.72", "-21.1173, -203.367, -28.158, 0.72", "-21.0316, -203.394, -27.9861, 0.12", "-20.2624, -203.438, -27.1148, 0.12", "-20.1938, -203.454, -27.0024, 0.96", "-20.0531, -203.572, -26.5728, 0.96", "-20.0364, -203.808, -25.8758, 0.12", "-20.0677, -203.868, -25.7158, 0.12", "-20.1729, -203.969, -25.4392, 0.84", "-20.9392, -204.546, -23.9713, 0.24", "-21.3979, -204.885, -23.174, 1.92", "-22.1226, -205.418, -22.0426, 0.24", "-22.4447, -205.658, -21.5873, 1.68", "-23.3201, -206.344, -20.4212, 1.68", "-23.5602, -206.545, -20.1315, 0.12", "-23.8118, -206.797, -19.8837, 0.12", "-23.9968, -207.036, -19.7277, 0.6", "-24.1904, -207.398, -19.5898, 1.08", "-24.3918, -207.868, -19.469, 1.08", "-24.65, -208.563, -19.4057, 0.12", "-24.7996, -208.969, -19.3702, 0.12", "-24.9372, -209.381, -19.3395, 0.12", "-25.0562, -209.797, -19.3163, 0.12", "-25.1443, -210.214, -19.3016, 0.12", "-25.1934, -210.568, -19.3057, 0.96", "-25.2345, -211.005, -19.3234, 0.12", "-25.2904, -211.543, -19.3471, 0.12", "-25.338, -211.852, -19.3553, 1.32", "-25.3816, -212.041, -19.3596, 1.32", "-25.5366, -212.595, -19.3666, 0.12", "-25.7042, -213.088, -19.3727, 0.12", "-25.7455, -213.203, -19.3736, 0.48", "-25.8801, -213.581, -19.3694, 0.12", "-25.9321, -213.768, -19.3619, 0.12", "-25.9799, -214.016, -19.345, 0.12", "-25.991, -214.195, -19.2731, 0.48", "-26.0196, -214.526, -19.0728, 0.36", "-26.0405, -214.768, -18.961, 0.36", "-26.0561, -215.001, -18.8843, 1.2", "-26.0706, -215.252, -18.8173, 1.2", "-26.1849, -216.542, -18.4096, 0.12", "-26.2222, -217.02, -18.2519, 0.12", "-26.3319, -218.057, -17.917, 0.12", "-26.3961, -218.573, -17.763, 0.12", "-26.4444, -218.917, -17.6783, 0.12", "-26.5476, -219.699, -17.5631, 1.32", "-26.5689, -220.317, -17.6027, 1.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-21.113, -201.783, -33.26, 0.12", "-22.1979, -202.331, -33.6255, 0.12", "-22.9178, -202.695, -33.868, 0.12", "-23.1456, -202.81, -33.9448, 0.96", "-23.4141, -202.946, -34.0352, 1.08" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-11.0266, -197.318, -40.749, 0.12", "-10.5182, -198.172, -40.8096, 0.12", "-10.1606, -198.891, -40.848, 0.12", "-9.82883, -199.566, -40.8894, 0.72", "-9.40339, -200.438, -40.9648, 0.84", "-9.1604, -200.914, -40.9926, 0.48", "-8.98914, -201.24, -41.008, 0.12", "-8.6104, -201.943, -41.0312, 0.12", "-8.36288, -202.398, -41.0305, 0.12", "-8.12244, -202.812, -41.0349, 0.84", "-7.6907, -203.622, -41.1356, 0.36", "-7.4904, -204.016, -41.2018, 0.12", "-7.01862, -204.955, -41.3952, 0.12", "-6.61865, -205.768, -41.5925, 1.8", "-6.31534, -206.487, -41.778, 1.56", "-5.8452, -207.754, -42.139, 0.12", "-5.77426, -207.984, -42.2171, 0.12", "-5.74192, -208.099, -42.2571, 0.36", "-5.64464, -208.51, -42.4012, 0.12", "-5.52033, -209.242, -42.6194, 0.12", "-5.48461, -209.486, -42.6716, 0.12", "-5.41938, -209.873, -42.7284, 0.72", "-5.32666, -210.492, -42.8162, 0.96", "-5.26001, -210.977, -42.8815, 0.12", "-5.0762, -212.464, -43.0713, 0.12", "-5.02209, -212.952, -43.1309, 0.84", "-4.97676, -213.467, -43.1991, 0.12", "-4.94505, -214.082, -43.2781, 0.12", "-4.93296, -214.484, -43.329, 0.96", "-4.91899, -214.99, -43.3967, 0.12", "-4.90524, -215.854, -43.5235, 0.12", "-4.90175, -216.687, -43.654, 1.68", "-4.91025, -217.039, -43.7133, 1.68" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-11.0266, -197.318, -40.749, 0.6", "-10.3696, -196.992, -37.39, 0.6", "-10.2527, -197.253, -37.8787, 0.6", "-9.81433, -198.022, -39.0189, 0.12", "-9.62459, -198.335, -39.4296, 0.12", "-9.38747, -198.726, -39.9427, 0.96", "-9.14943, -199.119, -40.4579, 0.96", "-8.64731, -200.023, -41.8242, 0.12", "-8.45183, -200.412, -42.4139, 0.12", "-8.34318, -200.616, -42.6985, 0.48" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "36.5802, -76.2458, -31.0402, 0.12", "38.1882, -76.9243, -28.9575, 0.12", "38.552, -77.0744, -28.5093, 0.12", "38.7225, -77.146, -28.3121, 0.6", "39.207, -77.3365, -27.7809, 0.12", "40.094, -77.6627, -26.8636, 0.12", "40.3408, -77.7499, -26.6125, 0.12", "40.5261, -77.8069, -26.4679, 0.12", "40.7856, -77.8892, -26.2728, 0.12", "41.4102, -78.0932, -25.8061, 0.12", "41.6104, -78.1648, -25.6709, 0.6", "42.0373, -78.3638, -25.4449, 0.12", "42.4693, -78.5732, -25.1962, 0.12", "43.0345, -78.8272, -24.8709, 0.6" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "36.5802, -76.2458, -31.0402, 0.24", "36.7994, -77.2334, -31.3561, 0.24", "36.943, -78.1321, -31.6531, 0.24", "36.9952, -78.551, -31.7877, 0.96", "37.0727, -79.2802, -32.0169, 1.8", "37.1587, -79.9952, -32.2842, 0.84", "37.2114, -80.4559, -32.483, 0.12", "37.2863, -81.1614, -32.8621, 0.12", "37.3134, -81.53, -33.0756, 0.72", "37.3185, -81.6169, -33.12, 0.72", "37.4002, -82.5087, -33.5279, 0.24", "37.4624, -82.8824, -33.6537, 0.24", "37.6028, -83.4912, -33.7937, 0.24", "37.7698, -84.1139, -33.8678, 0.24", "37.9159, -84.6897, -33.8804, 0.24", "38.0617, -85.3494, -33.85, 0.24", "38.1869, -86.0046, -33.7483, 1.44", "38.3167, -86.7163, -33.603, 1.92", "38.4237, -87.4192, -33.4398, 1.92", "38.5163, -88.1327, -33.2761, 1.2", "38.5992, -88.8707, -33.1251, 0.48", "38.6641, -89.5943, -32.9881, 0.12", "38.712, -90.1141, -32.8781, 0.12", "38.7452, -90.4348, -32.8132, 0.6", "38.7934, -90.8377, -32.7476, 0.12", "38.9194, -91.6694, -32.6093, 0.12", "39.0007, -92.0841, -32.5494, 0.12", "39.3249, -93.5533, -32.4453, 2.4" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "44.2743, -20.7486, -14.059, 0.96", "42.75, -19.4398, -4.63036, 0.96", "42.553, -19.2239, -3.62144, 0.72", "42.4206, -19.0465, -3.06247, 0.24", "42.2793, -18.7929, -2.51494, 0.24", "42.0976, -18.3339, -1.82788, 0.24", "41.9031, -17.6773, -1.02658, 0.84", "41.7587, -16.6029, -0.51355, 1.2", "41.6739, -15.6303, 0.0107338, 0.48", "41.6094, -14.4048, 0.817937, 0.24", "41.618, -13.1572, 1.72971, 0.24", "41.7248, -11.612, 2.99055, 1.68", "41.8087, -10.8364, 3.647, 2.28", "41.8832, -10.271, 4.14045, 2.4", "42.1251, -8.43667, 5.76486, 0.36", "42.203, -7.71878, 6.39838, 0.36", "42.2853, -6.72584, 7.2301, 0.84", "42.3612, -5.30235, 8.3354, 0.84", "42.3935, -3.85665, 9.41955, 0.6", "42.4061, -2.50429, 10.3913, 0.6", "42.4083, -1.63446, 10.9606, 0.96", "42.3795, -0.95152, 11.4029, 0.96", "42.2658, 0.325167, 12.1908, 0.12", "42.1724, 0.953871, 12.5678, 0.12", "42.0762, 1.4947, 12.8547, 0.12", "41.9625, 2.08908, 13.1344, 0.12", "41.8509, 2.68826, 13.4178, 0.6", "41.7762, 3.17527, 13.6174, 0.96", "41.6348, 3.99708, 13.7833, 1.08" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "44.2743, -20.7486, -14.059, 0.12", "45.4891, -20.7316, -13.7909, 0.12", "45.8453, -20.7181, -13.7103, 0.12", "46.2896, -20.6931, -13.6074, 0.6", "46.8297, -20.6447, -13.4867, 0.6", "47.6041, -20.5567, -13.3288, 0.12", "48.3152, -20.4469, -13.2013, 0.12", "48.4028, -20.4242, -13.1887, 0.36", "48.681, -20.3346, -13.1564, 0.12", "49.0582, -20.1891, -13.0981, 0.12", "49.3843, -20.0244, -13.0445, 0.48", "49.8548, -19.769, -12.9809, 0.6", "50.1816, -19.5931, -12.9277, 0.48", "50.4767, -19.4538, -12.8832, 0.48", "51.1896, -19.1428, -12.6605, 0.12", "51.929, -18.8786, -12.3652, 2.04", "52.3635, -18.7599, -12.1745, 3.25", "52.7789, -18.6956, -11.9959, 3.37", "53.3171, -18.6669, -11.7811, 2.88", "55.0499, -18.7285, -11.143, 0.24", "55.7958, -18.8192, -10.9013, 0.24", "56.28, -18.9188, -10.7506, 0.72", "57.1366, -19.1191, -10.5224, 0.96", "57.6878, -19.2654, -10.4156, 0.24", "57.8641, -19.313, -10.41, 0.24", "58.1119, -19.3687, -10.4572, 0.24", "58.6513, -19.4021, -10.5865, 0.24", "59.0962, -19.3533, -10.6983, 1.2", "59.4493, -19.2667, -10.7343, 1.92", "60.1694, -19.0374, -10.7322, 1.92", "60.8923, -18.7775, -10.6792, 0.36", "61.3463, -18.5992, -10.5881, 0.36", "62.2441, -18.2235, -10.338, 0.36", "63.6606, -17.6263, -9.87437, 1.68", "64.0967, -17.4482, -9.73263, 2.52", "64.7717, -17.1914, -9.51221, 2.64", "66.2662, -16.6892, -9.1073, 0.24", "66.922, -16.4984, -8.97564, 0.24", "67.3693, -16.3807, -8.93407, 0.36", "68.1376, -16.1998, -8.98802, 1.08", "68.5347, -16.109, -9.01837, 1.08", "69.2347, -15.9394, -9.09646, 0.48", "69.5813, -15.8433, -9.16045, 0.24", "70.0603, -15.6676, -9.19485, 0.24", "70.4699, -15.4674, -9.16782, 0.6", "71.2724, -15.0, -9.00146, 0.36", "71.6603, -14.7874, -8.90776, 0.36", "71.9892, -14.6438, -8.79352, 0.36", "72.2349, -14.5717, -8.69593, 0.48", "72.4245, -14.54, -8.62671, 0.24", "72.7775, -14.5031, -8.50068, 0.24", "73.4152, -14.4582, -8.33334, 0.24", "74.3283, -14.3967, -8.13526, 0.24", "74.7073, -14.371, -8.06799, 1.2", "75.3527, -14.3015, -7.98288, 2.16", "76.2745, -14.1521, -7.86258, 1.8", "76.9921, -13.9957, -7.78126, 0.36", "78.0226, -13.6856, -7.57305, 0.36", "78.4738, -13.5243, -7.46166, 0.36", "79.2093, -13.23, -7.23546, 0.36", "79.9176, -12.9202, -6.91841, 1.56", "80.4577, -12.6697, -6.62225, 2.04", "81.9535, -11.9608, -5.64144, 0.24", "82.3887, -11.7602, -5.31867, 0.24", "82.6085, -11.6678, -5.15567, 0.24", "83.6299, -11.3174, -4.41761, 1.68", "83.9385, -11.2307, -4.21998, 2.04", "84.1743, -11.173, -4.06335, 2.04", "85.2049, -10.919, -3.43623, 0.24", "85.6463, -10.7816, -3.14167, 0.24", "86.0038, -10.6359, -2.88912, 1.2", "86.2764, -10.472, -2.68754, 1.2", "87.2471, -9.65511, -1.8549, 0.12", "87.5742, -9.25574, -1.53751, 0.12", "87.7361, -8.95687, -1.37528, 0.24", "87.8404, -8.72249, -1.24257, 0.24", "88.0449, -8.27899, -1.01103, 0.24", "88.164, -8.04985, -0.898639, 0.24", "88.4069, -7.68613, -0.767249, 0.24", "88.8325, -7.20693, -0.58973, 0.24", "89.6441, -6.40652, -0.25705, 0.12", "90.2068, -5.91802, -0.0340347, 0.12", "90.3675, -5.79586, 0.0278416, 1.44", "90.986, -5.35379, 0.256169, 2.52", "91.6571, -4.8699, 0.48843, 2.04" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-28.5871, -284.017, -46.8601, 0.12", "-27.9986, -285.403, -47.1001, 0.12", "-27.6945, -286.106, -47.2198, 0.12", "-27.5544, -286.43, -47.2761, 0.48", "-27.3058, -286.991, -47.3551, 0.48", "-27.0346, -287.577, -47.429, 0.48", "-26.8833, -287.881, -47.499, 0.48", "-26.7365, -288.132, -47.5917, 0.48", "-26.3934, -288.625, -47.848, 1.68", "-26.027, -289.08, -48.1439, 2.28", "-25.6746, -289.473, -48.4393, 2.4", "-24.6625, -290.498, -49.3273, 0.48", "-23.9716, -291.169, -49.9674, 0.36", "-23.5532, -291.549, -50.3796, 0.12", "-23.3265, -291.733, -50.6174, 0.12", "-23.158, -291.858, -50.812, 0.12", "-22.8951, -292.027, -51.1163, 0.72" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-28.5871, -284.017, -46.8601, 0.12", "-28.7579, -285.515, -46.8628, 0.12", "-28.7888, -285.894, -46.89, 0.12", "-28.8032, -286.281, -46.9352, 0.12", "-28.8372, -286.923, -47.0679, 0.12", "-28.8641, -287.241, -47.1441, 0.48", "-28.9347, -287.826, -47.2883, 0.48", "-28.9662, -288.045, -47.3621, 0.12", "-29.2073, -288.697, -47.6462, 0.12", "-29.5369, -289.315, -47.9439, 0.12", "-29.7455, -289.67, -48.1112, 1.68", "-29.9144, -289.941, -48.2541, 1.8", "-30.2157, -290.399, -48.5184, 1.8", "-31.1274, -291.827, -49.3154, 0.12", "-31.3637, -292.211, -49.5305, 0.12", "-31.773, -293.008, -49.9385, 0.12", "-32.0303, -293.617, -50.273, 0.48", "-32.0993, -293.825, -50.3868, 0.48", "-32.1976, -294.339, -50.6281, 0.48", "-32.2198, -294.499, -50.694, 0.12", "-32.3162, -294.941, -50.8923, 0.12", "-32.4857, -295.566, -51.1671, 0.12", "-32.5745, -295.873, -51.289, 0.96", "-32.79, -296.532, -51.5495, 1.44", "-33.2657, -297.754, -52.1001, 0.12", "-33.5733, -298.483, -52.4195, 0.12", "-33.7101, -298.8, -52.5547, 0.12", "-33.8105, -299.031, -52.6424, 0.6", "-33.9935, -299.404, -52.802, 0.6", "-34.383, -300.03, -53.1646, 0.12", "-34.7778, -300.584, -53.5276, 0.12", "-34.8414, -300.669, -53.5903, 0.48", "-35.014, -300.931, -53.759, 0.48", "-35.4206, -301.712, -54.1592, 0.48", "-35.7884, -302.59, -54.5138, 0.24", "-35.9099, -302.882, -54.6854, 0.12", "-36.2216, -303.77, -55.2368, 0.12", "-36.421, -304.348, -55.6266, 1.44", "-36.5716, -304.832, -55.9602, 2.16", "-36.747, -305.481, -56.3924, 2.28", "-37.3487, -307.868, -57.9399, 0.12", "-37.6608, -309.167, -58.8198, 0.12", "-37.8234, -309.882, -59.3267, 0.84", "-37.9298, -310.384, -59.6831, 1.44", "-38.0106, -310.802, -59.9743, 0.96", "-38.0636, -311.246, -60.2088, 0.12", "-38.089, -311.673, -60.331, 0.12", "-38.1365, -312.139, -60.4505, 0.12", "-38.1694, -312.408, -60.5046, 0.36", "-38.0261, -313.123, -59.8733, 0.12", "-37.6942, -314.271, -58.4858, 0.12", "-37.5865, -314.538, -58.0616, 1.08", "-37.4367, -314.829, -57.4936, 1.8", "-37.3401, -314.978, -57.1457, 2.04", "-35.4266, -317.432, -50.5196, 0.12" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "15.9541, 109.304, 13.5678, 0.48", "16.3088, 110.878, 13.8655, 0.48", "16.4506, 111.558, 13.9689, 0.48", "16.5299, 111.936, 14.018, 0.48", "16.6289, 112.411, 14.0567, 0.48", "16.8279, 113.44, 14.0953, 0.48", "16.9995, 114.478, 14.1021, 0.48", "17.0274, 114.696, 14.0836, 0.72", "17.0758, 115.117, 14.0712, 0.96", "17.1554, 115.817, 14.0847, 0.96", "17.2275, 116.418, 14.1778, 0.36", "17.3629, 117.329, 14.4198, 0.36", "17.454, 117.901, 14.611, 0.36", "17.6442, 119.12, 15.0574, 1.56", "17.7278, 119.676, 15.2735, 2.16", "17.9423, 121.141, 15.8779, 0.48", "18.0969, 122.241, 16.2691, 0.48", "18.176, 122.885, 16.4659, 0.48", "18.205, 123.258, 16.5476, 0.48", "18.2045, 123.922, 16.604, 1.68", "18.1764, 124.319, 16.6054, 1.92", "18.0622, 125.592, 16.4876, 1.08", "18.0066, 126.274, 16.4278, 0.48", "17.9884, 126.764, 16.391, 0.36", "18.0252, 127.665, 16.3458, 0.36", "18.1063, 128.263, 16.3619, 0.36", "18.3591, 129.347, 16.4329, 0.72", "18.4954, 129.758, 16.4764, 0.36", "18.673, 130.237, 16.5119, 0.36", "18.9618, 130.93, 16.5675, 0.36", "19.3531, 131.809, 16.6422, 0.84", "19.7592, 132.74, 16.8745, 1.92", "20.001, 133.38, 16.952, 2.28", "20.1523, 133.847, 16.9531, 2.64", "20.2591, 134.228, 16.9106, 2.76", "20.3888, 134.77, 16.7895, 2.76", "20.9346, 136.975, 16.0775, 1.56", "21.75, 139.89, 14.9676, 0.12", "21.8343, 140.162, 14.8585, 0.12", "21.9094, 140.403, 14.7731, 0.12", "22.0141, 140.8, 14.6414, 0.72", "22.1376, 141.374, 14.4706, 0.96", "22.2513, 142.058, 14.2603, 0.48", "22.343, 142.646, 14.2471, 0.36", "22.5183, 143.971, 14.22, 0.36", "22.5579, 144.399, 14.2459, 0.36", "22.576, 144.732, 14.2789, 0.12", "22.5931, 145.591, 14.4244, 0.96", "22.5986, 146.192, 14.562, 1.32", "22.6208, 146.571, 14.6262, 1.2", "22.718, 147.748, 14.9678, 0.48", "22.8067, 148.589, 15.2452, 0.24", "22.8839, 149.214, 15.4575, 1.2", "22.9622, 149.748, 15.6412, 1.68", "23.1476, 150.85, 16.0304, 1.68", "23.4892, 152.696, 16.6802, 1.8", "23.6397, 153.404, 16.9045, 0.96", "23.8108, 154.14, 17.2134, 1.08", "23.9583, 154.714, 17.4621, 0.36", "24.2888, 155.922, 17.9372, 0.36", "24.4818, 156.647, 18.1765, 0.36", "24.6306, 157.156, 18.2753, 1.08", "25.0129, 158.495, 18.5147, 1.2", "25.323, 159.612, 18.6708, 0.96", "25.6287, 160.768, 18.7651, 0.36", "25.9, 161.788, 18.7191, 0.24", "26.0662, 162.435, 18.634, 0.6", "26.1723, 162.865, 18.5702, 0.12", "26.2734, 163.232, 18.5091, 0.24", "26.6001, 164.332, 18.3636, 0.24", "26.8789, 165.249, 18.25, 0.24", "27.104, 165.985, 18.0903, 1.68", "27.416, 167.077, 17.82, 2.52", "27.6398, 167.999, 17.59, 0.48", "27.8317, 168.891, 17.3685, 0.48", "27.9777, 169.76, 17.1691, 0.72", "28.0751, 170.72, 16.9892, 1.08", "28.0968, 171.371, 16.8845, 1.68", "28.0615, 172.224, 16.7519, 1.2", "27.9823, 172.942, 16.6877, 0.36", "27.8515, 173.883, 16.6541, 0.36", "27.7505, 174.521, 16.6821, 0.36", "27.6236, 175.245, 16.7453, 0.36", "27.4705, 176.136, 16.8192, 2.04", "27.4102, 176.526, 16.8591, 2.4", "27.3159, 177.45, 16.9221, 2.4", "27.3, 178.848, 16.9253, 0.36", "27.3719, 179.705, 16.8764, 0.36", "27.4849, 180.464, 16.8394, 1.44", "27.6142, 181.052, 16.8187, 2.16", "27.9498, 182.409, 16.789, 0.48", "28.1508, 183.187, 16.7859, 0.12", "28.2963, 183.723, 16.7733, 0.6", "28.613, 184.976, 16.8261, 0.36", "28.7381, 185.588, 16.8982, 0.24", "28.8276, 186.298, 17.0364, 0.24", "28.8447, 186.695, 17.125, 0.24", "28.8538, 187.428, 17.2398, 0.36", "28.8773, 188.243, 17.2922, 0.36", "28.937, 188.841, 17.3018, 0.36", "29.0178, 189.317, 17.3259, 0.36", "29.2241, 190.132, 17.3664, 1.68", "29.4078, 190.713, 17.3457, 2.4", "29.5504, 191.113, 17.2971, 2.4", "29.9745, 192.187, 17.1755, 0.24", "30.1855, 192.698, 17.1269, 0.24", "30.3144, 193.02, 17.1033, 0.48", "30.7104, 194.131, 17.0727, 0.24", "30.883, 194.803, 17.0603, 0.24", "30.9994, 195.524, 17.0232, 0.24", "31.0334, 196.109, 17.009, 0.72", "31.0439, 196.62, 17.0327, 0.84", "31.0468, 196.972, 17.063, 0.36", "31.0594, 197.646, 17.111, 0.36", "31.0948, 198.37, 17.0821, 0.48", "31.1874, 199.422, 16.9236, 0.36", "31.2811, 200.003, 16.7955, 0.36", "31.3657, 200.401, 16.7154, 0.96", "31.6222, 201.332, 16.4846, 0.96", "31.7699, 201.762, 16.408, 0.36", "31.8965, 202.122, 16.3761, 0.36", "32.2247, 203.122, 16.3343, 2.4", "32.5342, 204.192, 16.3727, 3.25", "32.7711, 205.185, 16.4797, 2.16", "33.0468, 206.591, 16.6761, 0.24", "33.2211, 207.625, 16.8099, 0.12", "33.3465, 208.492, 16.8976, 0.24", "33.3735, 208.788, 16.9153, 0.36", "33.417, 209.555, 16.8855, 0.36", "33.4436, 210.519, 16.7975, 1.32", "33.4633, 211.112, 16.7001, 0.48", "33.494, 211.456, 16.6506, 0.12", "33.5804, 212.049, 16.5736, 0.12", "33.698, 212.732, 16.507, 0.12", "33.7856, 213.153, 16.4822, 0.84", "34.0402, 214.327, 16.4669, 1.56", "34.1493, 214.799, 16.47, 1.68", "34.3756, 215.652, 16.4973, 0.12", "34.6196, 216.381, 16.5263, 0.12", "34.7784, 216.736, 16.6538, 0.24", "34.872, 216.872, 16.7637, 0.12", "35.1431, 217.097, 17.1345, 0.12", "35.3228, 217.207, 17.4111, 0.12", "35.9422, 217.465, 18.4698, 3.25", "37.6832, 217.906, 21.6706, 0.12", "37.8389, 217.928, 21.9805, 0.12", "37.9689, 217.931, 22.2562, 0.72" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "15.9541, 109.304, 13.5678, 0.12", "13.6225, 110.06, 13.2627, 0.12", "13.0581, 110.243, 13.2073, 0.12", "12.6439, 110.383, 13.1301, 0.96", "11.6176, 110.711, 12.8849, 0.12", "10.9311, 110.922, 12.6479, 0.12", "10.5332, 111.047, 12.4953, 0.12", "9.96444, 111.234, 12.2453, 1.08", "8.77002, 111.598, 11.793, 0.36", "7.61008, 111.936, 11.3647, 0.36", "6.14216, 112.392, 10.9945, 0.36", "5.47872, 112.584, 10.8434, 0.36", "4.20269, 112.884, 10.8543, 0.36", "3.47897, 112.999, 11.0229, 0.36", "2.6826, 113.055, 11.386, 0.36", "0.941448, 113.105, 12.4379, 1.92", "-0.021988, 113.083, 13.1586, 1.92", "-2.94219, 112.831, 15.5798, 0.12", "-3.58956, 112.734, 16.1798, 0.12", "-3.95882, 112.655, 16.573, 0.72" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-6.08, 135.269, -3.8094, 0.12", "-6.93792, 136.429, -4.54727, 0.12", "-7.06858, 136.649, -4.65552, 0.12", "-7.25817, 137.061, -4.80738, 0.24", "-7.75576, 138.451, -5.33384, 0.24", "-7.90237, 138.971, -5.52109, 0.24", "-7.98909, 139.338, -5.64719, 0.24", "-8.06462, 140.12, -5.8798, 1.68", "-8.10023, 140.665, -6.07283, 1.68", "-8.13083, 142.299, -6.70121, 0.12", "-8.11901, 142.949, -6.94828, 0.12", "-8.11575, 143.167, -7.0488, 0.6", "-8.11055, 143.591, -7.27527, 0.48", "-8.09821, 144.623, -7.90011, 0.12", "-8.08764, 145.157, -8.25369, 0.12", "-8.07609, 145.29, -8.33146, 0.12", "-8.05085, 145.592, -8.50191, 0.96", "-8.01809, 145.904, -8.66323, 0.96", "-7.98338, 146.252, -8.83562, 0.48", "-7.87967, 147.081, -9.18582, 0.12", "-7.74065, 148.216, -9.66572, 0.12", "-7.65848, 148.929, -9.97314, 1.8", "-7.61725, 149.303, -10.1344, 2.16", "-7.47438, 150.457, -10.6124, 0.12", "-7.35101, 151.295, -10.946, 0.12", "-7.29485, 151.619, -11.0604, 0.96", "-7.20383, 152.126, -11.2359, 0.24", "-7.11477, 152.607, -11.3972, 0.24", "-6.96784, 153.33, -11.6473, 1.68", "-6.83477, 153.867, -11.8329, 0.12", "-6.70264, 154.303, -11.995, 0.12", "-6.53342, 154.858, -12.2835, 0.6", "-6.39738, 155.272, -12.5361, 0.12", "-6.10961, 156.142, -13.1334, 0.12", "-6.05306, 156.31, -13.2576, 0.12", "-5.83029, 156.995, -13.7689, 1.92", "-5.28317, 158.64, -14.9675, 0.12", "-5.00716, 159.466, -15.5322, 0.12", "-4.91894, 159.719, -15.6772, 0.84", "-4.82082, 160.018, -15.8109, 0.12", "-4.58527, 160.806, -16.0652, 0.12", "-4.39211, 161.417, -16.1228, 1.68", "-4.24032, 161.807, -16.0566, 1.2", "-3.95396, 162.483, -15.8865, 0.12", "-3.66838, 163.07, -15.6891, 0.12", "-3.44707, 163.469, -15.5256, 0.6", "-2.80097, 164.493, -15.0457, 0.48", "-2.4799, 164.996, -14.8119, 0.48", "-2.23366, 165.368, -14.6415, 0.48", "-1.96604, 165.799, -14.4779, 0.12", "-1.798, 166.091, -14.3929, 0.12", "-1.5384, 166.67, -14.3059, 1.44", "-1.42703, 167.04, -14.2893, 1.68", "-1.25346, 167.777, -14.269, 0.12", "-1.07637, 168.737, -14.257, 0.12", "-0.952058, 169.588, -14.2646, 1.92", "-0.828175, 170.584, -14.2757, 0.12", "-0.710385, 171.636, -14.2973, 0.12", "-0.668158, 172.024, -14.3109, 0.6", "-0.650089, 172.216, -14.3204, 0.12", "-0.576933, 173.094, -14.3582, 0.12", "-0.557137, 173.694, -14.4182, 1.08", "-0.554793, 173.996, -14.4618, 0.72", "-0.562123, 174.205, -14.5059, 0.12", "-0.607751, 174.95, -14.6973, 0.12", "-0.663962, 175.652, -14.8989, 1.44", "-0.827652, 176.889, -15.3615, 0.12", "-0.872529, 177.242, -15.5036, 0.12", "-0.881755, 177.33, -15.5402, 0.48", "-0.894791, 177.531, -15.6186, 0.12", "-0.890945, 178.168, -15.84, 0.48", "-0.80719, 178.947, -16.0386, 0.12", "-0.658081, 179.939, -16.2821, 0.12", "-0.631499, 180.125, -16.3339, 0.72", "-0.544213, 180.769, -16.5152, 1.44", "-0.475664, 181.263, -16.6519, 1.8", "-0.374757, 181.872, -16.821, 1.68", "-0.153609, 183.153, -17.1441, 0.12", "-0.0962572, 183.62, -17.2896, 0.12", "-0.0541538, 184.076, -17.4463, 0.12", "-0.0388611, 184.6, -17.6521, 1.32", "-0.0401152, 184.973, -17.8058, 1.32", "-0.050657, 185.241, -17.9149, 1.32", "-0.0906902, 185.993, -18.1692, 0.12", "-0.175128, 186.659, -18.4507, 0.12", "-0.332097, 187.327, -18.7949, 0.72" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-6.08, 135.269, -3.8094, 0.12", "4.4184, 134.612, 5.94144, 0.12", "4.82398, 134.588, 6.31272, 0.12", "5.07727, 134.574, 6.54105, 0.12", "5.94134, 134.525, 7.30717, 0.84", "6.23218, 134.509, 7.56523, 0.84", "6.87318, 134.461, 8.17303, 0.36", "6.84483, 134.562, 7.79822, 0.36", "6.78032, 134.674, 7.43107, 0.36", "6.68795, 134.807, 7.00292, 0.36", "6.46627, 135.122, 6.01174, 0.36", "5.97961, 135.811, 3.92587, 0.36", "5.73956, 136.193, 2.83031, 2.04", "5.39961, 136.786, 1.16646, 1.56", "5.28323, 137.053, 0.45285, 0.12", "5.25016, 137.18, 0.1316, 0.12", "5.27162, 137.511, -0.701547, 1.2", "5.40089, 137.722, -1.28004, 0.48", "5.50429, 137.821, -1.57564, 0.12", "5.86455, 138.082, -2.32543, 0.12", "6.19758, 138.362, -3.1428, 1.32", "6.33263, 138.493, -3.53122, 1.68", "6.66795, 138.926, -4.746, 0.12", "6.7312, 139.077, -5.15742, 0.12", "6.76256, 139.322, -5.83389, 0.6", "6.73682, 139.776, -7.18387, 0.12", "6.72086, 139.919, -7.65286, 0.12", "6.65009, 140.301, -8.98922, 1.8", "6.5854, 140.675, -10.3708, 1.8", "6.48014, 141.011, -11.8363, 0.48", "6.45266, 141.108, -12.3492, 0.48", "6.46097, 141.18, -12.8305, 0.48", "6.50599, 141.298, -13.7769, 1.44", "6.55441, 141.354, -14.3223, 1.68", "6.78099, 141.592, -16.2603, 0.36", "6.8773, 141.761, -17.1178, 0.36", "6.87762, 141.994, -17.9562, 1.68", "6.82666, 142.269, -18.767, 1.2", "6.68695, 142.734, -19.9367, 0.36", "6.5577, 143.1, -20.7391, 0.36", "6.32726, 143.679, -21.8255, 1.68", "5.78372, 144.866, -23.8696, 0.24", "5.65762, 145.143, -24.3149, 0.24", "5.53257, 145.473, -24.823, 0.84", "5.4609, 145.719, -25.2032, 0.96", "5.37756, 146.219, -26.0794, 0.24", "5.3946, 146.449, -26.5616, 0.24", "5.53106, 146.765, -27.4308, 1.44", "5.56094, 146.86, -27.8645, 1.68", "5.49714, 146.951, -28.757, 0.36", "5.4298, 146.963, -29.2309, 0.36", "5.35609, 146.947, -29.6077, 0.36", "4.99208, 146.828, -31.2122, 0.96", "4.54909, 146.647, -33.0518, 1.68", "4.01259, 146.4, -35.2576, 0.6", "3.91255, 146.341, -35.6782, 0.48", "3.56489, 146.074, -37.2217, 2.04", "3.46292, 145.956, -37.7382, 2.52", "3.27974, 145.521, -39.162, 0.36", "3.27312, 145.387, -39.5276, 0.36", "3.33779, 145.19, -40.0615, 0.48", "3.52591, 144.782, -41.1623, 0.36", "3.6143, 144.621, -41.5429, 0.36", "3.66667, 144.522, -41.7569, 0.36", "3.98842, 144.013, -42.7652, 0.36", "4.28842, 143.595, -43.5634, 1.08", "4.53187, 143.323, -44.0693, 1.8", "4.90327, 142.991, -44.6546, 1.2", "5.23584, 142.744, -45.1369, 0.36", "5.74975, 142.44, -45.7322, 0.36", "6.32448, 142.169, -46.2772, 0.36", "6.80003, 141.998, -46.6674, 1.2", "7.39314, 141.846, -47.1422, 1.8", "8.16985, 141.714, -47.7742, 0.12", "9.24825, 141.594, -48.6924, 0.12", "9.82372, 141.542, -49.2146, 1.44", "10.1427, 141.499, -49.5267, 2.16", "10.7026, 141.373, -50.0984, 2.4", "11.4343, 141.127, -50.848, 0.24", "11.7278, 140.979, -51.1478, 0.24", "11.9903, 140.782, -51.4484, 0.24", "12.4747, 140.348, -51.9432, 0.48", "12.8032, 140.02, -52.2539, 0.12", "13.2179, 139.636, -52.5853, 0.12", "13.5362, 139.394, -52.7816, 0.12", "13.8737, 139.197, -52.9752, 0.12", "14.3404, 139.008, -53.1692, 0.36", "14.66, 138.92, -53.2784, 0.12", "15.665, 138.688, -53.6021, 0.12", "16.5507, 138.509, -53.8682, 1.44", "16.7788, 138.467, -53.9351, 1.56", "18.1026, 138.215, -54.3044, 0.36", "18.5684, 138.107, -54.3696, 0.36", "18.8696, 138.019, -54.3769, 0.36", "19.2609, 137.859, -54.3448, 0.36", "19.5388, 137.711, -54.3419, 0.36", "19.7463, 137.588, -54.3289, 0.36", "21.1373, 136.665, -54.2584, 0.12", "21.4069, 136.486, -54.2449, 0.12", "21.717, 136.291, -54.2207, 0.12", "22.7596, 135.672, -54.1533, 2.4", "24.4751, 134.695, -54.1316, 0.12", "24.937, 134.431, -54.1578, 0.12", "25.5123, 134.109, -54.2058, 0.36", "26.0891, 133.796, -54.2288, 0.12", "26.5748, 133.538, -54.2349, 0.12", "27.0444, 133.283, -54.2286, 1.08", "27.4463, 133.063, -54.225, 1.08", "28.8674, 132.269, -54.147, 0.36", "29.2355, 132.035, -54.1294, 0.36", "29.5107, 131.838, -54.1407, 0.12", "29.6876, 131.715, -54.1329, 0.12", "30.6876, 131.028, -54.0587, 0.12", "31.1298, 130.732, -54.04, 1.32", "31.7825, 130.308, -54.0404, 2.04", "32.543, 129.86, -54.0404, 1.32", "34.2523, 128.949, -54.0318, 0.12", "34.4787, 128.845, -54.0358, 0.12", "34.9054, 128.712, -53.9875, 0.24", "35.571, 128.547, -53.8757, 0.24", "36.1041, 128.452, -53.7537, 0.24", "36.8712, 128.36, -53.5348, 0.24", "37.2504, 128.336, -53.4348, 0.84", "40.0837, 128.224, -52.5065, 0.6" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "41.3544, 102.892, 16.292, 0.72", "40.9501, 102.436, 15.3465, 0.72", "40.3253, 101.898, 14.1202, 0.6", "39.9189, 101.548, 13.3225, 0.36", "39.7678, 101.418, 13.026, 0.48", "39.3906, 101.093, 12.2856, 0.36", "38.9299, 100.696, 11.3815, 0.12", "38.7496, 100.59, 11.0765, 0.12" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "41.3544, 102.892, 16.292, 0.48", "41.3378, 103.879, 16.3041, 0.48", "41.3075, 104.732, 16.3643, 0.48", "41.216, 105.638, 16.4373, 0.6", "41.1051, 106.367, 16.5124, 0.48", "40.923, 107.464, 16.6342, 0.48", "40.7178, 108.703, 16.7749, 2.04", "40.5864, 109.723, 16.8975, 1.92", "40.4452, 110.907, 16.9798, 1.44", "40.3362, 111.843, 17.0025, 1.08", "40.2595, 112.673, 16.9995, 0.96", "40.2461, 113.093, 16.9643, 0.72", "40.2972, 114.07, 16.7736, 1.08", "40.5161, 115.673, 16.4281, 0.48", "40.6514, 116.345, 16.2906, 0.48", "40.9067, 117.455, 16.0863, 1.32", "41.1224, 118.438, 15.9059, 1.92", "41.39, 119.745, 15.7447, 1.08", "41.5816, 120.665, 15.7025, 0.72", "41.688, 121.153, 15.7386, 0.24", "41.9996, 122.265, 15.8385, 0.24", "42.2216, 123.088, 15.9155, 0.72", "42.4324, 124.044, 16.0562, 0.12", "42.6352, 124.875, 16.1996, 0.12", "42.9213, 126.045, 16.376, 1.8", "43.2654, 127.529, 16.6045, 2.76", "43.4735, 128.492, 16.7795, 2.64", "43.8114, 130.098, 17.0962, 1.08" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "39.3249, -93.5533, -32.4453, 0.12", "40.1938, -94.0109, -32.6598, 0.12", "40.9148, -94.3906, -32.8378, 0.12", "41.6438, -94.7746, -33.0177, 0.6", "42.0265, -94.9761, -33.1122, 0.12", "42.9438, -95.4593, -33.3386, 0.12", "43.4245, -95.7124, -33.4572, 0.72" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "39.3249, -93.5533, -32.4453, 0.12", "39.5574, -94.6494, -32.2282, 0.12", "39.7202, -95.3106, -31.985, 0.12", "39.8654, -95.7855, -31.7812, 0.96", "40.0213, -96.2496, -31.5832, 1.56", "40.2846, -96.9768, -31.2885, 0.12", "40.4336, -97.3553, -31.1458, 0.12", "40.9867, -98.4995, -30.6471, 1.08", "41.2485, -98.9844, -30.4324, 0.72", "41.4636, -99.3612, -30.2779, 0.12", "41.7326, -99.8026, -30.0549, 0.12", "41.973, -100.203, -29.8352, 0.12", "42.3286, -100.845, -29.5054, 1.44", "42.5065, -101.195, -29.3491, 1.68", "42.6327, -101.471, -29.2184, 1.68", "43.1234, -102.646, -28.6832, 0.12", "43.3152, -103.193, -28.4429, 0.12", "43.4764, -103.79, -28.2093, 0.12", "43.5191, -104.001, -28.1421, 0.96", "43.5976, -104.499, -28.0014, 0.96", "43.6622, -104.959, -27.8959, 0.12", "43.7871, -106.217, -27.7104, 0.12", "43.8413, -106.861, -27.6152, 0.96", "43.8782, -107.45, -27.5392, 1.68", "43.9054, -107.864, -27.4929, 1.92", "43.932, -108.3, -27.464, 1.92", "43.992, -109.383, -27.4402, 0.12", "44.0008, -109.801, -27.4614, 0.12", "43.9874, -110.739, -27.5372, 0.12", "43.9534, -111.167, -27.6088, 0.6", "43.8648, -111.744, -27.7322, 0.12", "43.7333, -112.34, -27.8757, 0.12", "43.5777, -112.963, -28.0421, 1.2", "43.3405, -113.832, -28.2792, 1.68", "42.9757, -115.087, -28.5989, 0.12", "42.8042, -115.714, -28.7588, 0.12", "42.7119, -116.153, -28.8604, 0.12", "42.6396, -116.664, -28.9936, 0.12", "42.6223, -116.964, -29.0736, 1.2", "42.6332, -117.606, -29.2428, 1.56", "42.7284, -118.721, -29.5234, 0.24", "42.8271, -119.537, -29.7539, 0.24", "42.922, -120.355, -29.9967, 0.72", "42.9603, -120.759, -30.1143, 0.84", "42.9973, -121.192, -30.233, 0.12", "43.0157, -121.494, -30.3136, 0.12", "43.0163, -122.001, -30.4491, 0.12", "43.0048, -122.368, -30.558, 0.12", "43.0449, -122.793, -30.5223, 0.12", "43.0785, -122.992, -30.467, 0.12", "43.2171, -123.686, -30.1791, 1.32", "43.3565, -124.442, -29.7998, 0.12", "43.5216, -125.096, -29.393, 0.12", "44.4434, -127.879, -27.2584, 0.6", "44.8538, -128.869, -26.2602, 1.32", "44.9841, -129.12, -25.9188, 2.04", "45.1534, -129.36, -25.4423, 2.4" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "91.6571, -4.8699, 0.48843, 0.24", "92.9037, -4.55013, 0.95823, 0.24", "93.4505, -4.39927, 1.16458, 0.24", "95.4422, -3.84176, 1.90336, 0.24", "96.0247, -3.66734, 2.10023, 0.96", "97.1109, -3.32395, 2.38588, 1.56", "98.0617, -3.01024, 2.64877, 0.36", "99.8891, -2.37548, 3.12289, 0.12", "100.301, -2.2239, 3.22343, 1.2", "101.571, -1.71523, 3.46365, 2.16", "103.131, -1.00187, 3.79286, 0.12", "104.714, -0.162442, 4.13359, 0.12", "104.985, 0.012253, 4.1897, 0.84", "105.492, 0.418633, 4.27512, 0.96", "106.154, 1.01776, 4.40417, 0.12", "106.733, 1.67922, 4.56005, 0.12", "106.902, 1.9657, 4.62092, 0.6", "107.237, 2.76472, 4.60849, 0.12", "107.429, 3.39644, 4.61607, 0.12" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "91.6571, -4.8699, 0.48843, 0.6", "91.2505, -3.54044, 0.255667, 0.6", "91.1463, -3.17098, 0.190515, 0.6", "90.9638, -2.38401, 0.0179925, 0.84", "90.7897, -1.30773, -0.255565, 0.12", "90.5882, -0.089169, -0.585352, 0.12", "90.5217, 0.324645, -0.703023, 0.96", "90.4271, 1.23256, -0.973885, 1.2", "90.3636, 2.26239, -1.31415, 0.12", "90.3378, 3.40982, -1.7309, 0.12", "90.3475, 4.29759, -2.10994, 0.12", "90.4076, 5.28437, -2.58883, 0.12", "90.4516, 5.72733, -2.8084, 0.12", "90.5932, 6.72778, -3.31098, 1.68", "90.6611, 7.03252, -3.54364, 1.92", "90.9963, 8.0232, -4.58181, 0.12", "91.3313, 8.76326, -5.59046, 0.12", "91.4663, 9.06984, -6.09476, 1.32", "91.5508, 9.31602, -6.6176, 1.68", "91.9383, 10.5694, -10.3622, 0.36", "91.9881, 10.6889, -10.8414, 0.36", "92.0525, 10.8149, -11.5501, 0.12", "92.1327, 10.9563, -12.6987, 0.12", "92.2422, 11.1944, -15.0839, 0.48", "92.2578, 11.3418, -16.6324, 1.44", "92.1899, 11.5421, -17.8865, 2.16" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-22.8951, -292.027, -51.1163, 0.24", "-22.7343, -291.625, -51.4317, 0.24", "-22.5302, -291.114, -51.832, 0.24", "-22.2834, -290.495, -52.3161, 0.6", "-22.034, -289.871, -52.8053, 1.08" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-22.8951, -292.027, -51.1163, 0.12", "-22.221, -292.51, -50.6815, 0.12", "-21.782, -292.777, -50.3958, 0.12", "-21.3993, -292.962, -50.1996, 0.12", "-20.9043, -293.145, -50.0185, 0.12", "-20.6311, -293.223, -49.9425, 0.12", "-18.4142, -293.709, -49.4743, 0.12", "-17.4697, -293.794, -49.3662, 2.04", "-16.4584, -293.807, -49.271, 1.56", "-15.3902, -293.758, -49.2058, 0.36", "-14.8076, -293.698, -49.1526, 0.36", "-14.1458, -293.607, -49.0956, 0.36", "-12.8238, -293.388, -49.0414, 0.36", "-12.2866, -293.297, -48.9479, 0.6", "-11.9127, -293.238, -48.8371, 0.6", "-10.273, -292.959, -48.2247, 0.36", "-9.90986, -292.898, -48.083, 0.6", "-9.39998, -292.819, -47.9166, 0.6", "-8.48252, -292.697, -47.71, 0.12", "-8.1116, -292.673, -47.6959, 0.12", "-7.45232, -292.684, -47.7917, 0.12", "-6.85457, -292.765, -48.0534, 1.08", "-5.74901, -293.058, -48.6813, 0.12", "-5.52102, -293.16, -48.8363, 0.12", "-4.91512, -293.513, -49.2865, 0.12", "-4.53896, -293.779, -49.5729, 0.48", "-3.94115, -294.267, -50.0388, 0.12", "-3.58943, -294.582, -50.3057, 0.12", "-2.97387, -295.147, -50.6962, 0.12", "-2.53988, -295.547, -50.9854, 0.12", "-2.17661, -295.873, -51.2398, 1.08" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "45.1534, -129.36, -25.4423, 0.48", "44.4867, -131.848, -29.1753, 0.48", "44.3743, -132.253, -29.7507, 0.48", "44.1428, -133.186, -30.9509, 0.12", "44.0496, -133.641, -31.5008, 0.12", "43.9203, -134.27, -32.2626, 1.2", "43.7576, -135.064, -33.2221, 0.12", "43.7224, -135.265, -33.3994, 0.12", "43.6078, -135.895, -33.9701, 0.72", "43.5501, -136.261, -34.2197, 0.72" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "45.1534, -129.36, -25.4423, 0.12", "43.6834, -132.022, -26.2054, 0.12", "43.2567, -133.103, -26.292, 0.12", "43.1469, -133.411, -26.2941, 0.6", "42.8518, -134.26, -26.2505, 0.24", "42.7603, -134.568, -26.1906, 0.24", "42.5367, -135.358, -25.9653, 0.24", "42.4318, -135.907, -25.6476, 0.6", "42.2192, -136.631, -25.1601, 0.12", "41.9932, -137.187, -24.76, 0.12", "41.4231, -138.205, -23.9768, 0.84", "41.2831, -138.428, -23.7835, 0.84", "41.0165, -138.803, -23.3945, 0.12", "40.8693, -138.984, -23.1658, 0.12", "40.4941, -139.385, -22.5224, 0.84", "40.3168, -139.526, -22.2873, 0.96" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_15", "dend_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_15", "dend_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_15", "dend_0", "axon_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "axon_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_DBC_e8a6fe8924_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_26
create dend_48
public dend_48
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_15
create dend_25
public dend_25
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_48
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_27
create dend_41
public dend_41
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_16
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_26, dend_15, dend_0, axon_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, axon_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_62
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.499998982464247)
    connect dend_15(0), soma_0(0.499998982464247)
    connect dend_0(0), soma_0(0.499998982464247)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.72142, 10.9655, 0.761584, 2.84462 ) }
    soma_0 { pt3dadd( 1.58182, 9.77504, 0.687603, 4.62864 ) }
    soma_0 { pt3dadd( 1.44222, 8.58452, 0.613623, 7.50202 ) }
    soma_0 { pt3dadd( 1.30262, 7.39401, 0.539642, 9.47415 ) }
    soma_0 { pt3dadd( 1.16302, 6.2035, 0.465661, 11.0555 ) }
    soma_0 { pt3dadd( 1.02343, 5.01299, 0.391681, 12.4342 ) }
    soma_0 { pt3dadd( 0.883829, 3.82247, 0.3177, 13.5523 ) }
    soma_0 { pt3dadd( 0.744231, 2.63196, 0.243719, 14.3411 ) }
    soma_0 { pt3dadd( 0.604633, 1.44145, 0.169739, 14.9091 ) }
    soma_0 { pt3dadd( 0.465035, 0.250937, 0.0957582, 15.2878 ) }
    soma_0 { pt3dadd( 0.325437, -0.939575, 0.0217776, 15.5461 ) }
    soma_0 { pt3dadd( 0.185839, -2.13009, -0.0522031, 15.5537 ) }
    soma_0 { pt3dadd( 0.0462405, -3.3206, -0.126184, 15.1598 ) }
    soma_0 { pt3dadd( -0.0933575, -4.51111, -0.200164, 14.7587 ) }
    soma_0 { pt3dadd( -0.232956, -5.70162, -0.274145, 14.0408 ) }
    soma_0 { pt3dadd( -0.372554, -6.89214, -0.348126, 13.1988 ) }
    soma_0 { pt3dadd( -0.512152, -8.08265, -0.422106, 12.1253 ) }
    soma_0 { pt3dadd( -0.65175, -9.27316, -0.496087, 10.5491 ) }
    soma_0 { pt3dadd( -0.791348, -10.4637, -0.570068, 8.74654 ) }
    soma_0 { pt3dadd( -0.930946, -11.6542, -0.644048, 6.27284 ) }
    soma_0 { pt3dadd( -1.07054, -12.8447, -0.718029, 3.68979 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.07622, -6.43901, -17.6726, 3.85 ) }
    dend_26 { pt3dadd( 4.1975, -5.70431, -16.6655, 3.85 ) }
    dend_26 { pt3dadd( 5.36213, -4.94119, -15.6194, 3.85 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 24/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -0.643782, -12.759, -2.03262, 2.64 ) }
    dend_15 { pt3dadd( -0.500205, -14.177, -0.989697, 1.92 ) }
    dend_15 { pt3dadd( -0.380267, -15.2426, -0.299869, 1.8 ) }
    dend_15 { pt3dadd( -0.263881, -16.0934, 0.152379, 1.92 ) }
    dend_15 { pt3dadd( 0.0932442, -18.3617, 1.13035, 1.32 ) }
    dend_15 { pt3dadd( 0.286201, -19.3887, 1.48867, 1.56 ) }
    dend_15 { pt3dadd( 0.510954, -20.4054, 1.77018, 1.8 ) }
    dend_15 { pt3dadd( 0.727125, -21.2236, 1.85779, 2.04 ) }
    dend_15 { pt3dadd( 1.11249, -22.492, 1.83356, 2.16 ) }
    dend_15 { pt3dadd( 1.37969, -23.3134, 1.70804, 1.32 ) }
    dend_15 { pt3dadd( 1.67751, -24.2443, 1.50467, 1.44 ) }
    dend_15 { pt3dadd( 2.01644, -25.4607, 1.29314, 1.44 ) }
    dend_15 { pt3dadd( 2.22578, -26.4154, 1.17911, 1.8 ) }
    dend_15 { pt3dadd( 2.31964, -27.0812, 1.12716, 2.04 ) }
    dend_15 { pt3dadd( 2.35362, -28.0279, 1.0967, 1.68 ) }
    dend_15 { pt3dadd( 2.26487, -29.445, 1.07185, 1.44 ) }
    dend_15 { pt3dadd( 2.14924, -30.1508, 1.06771, 1.8 ) }
    dend_15 { pt3dadd( 2.00515, -30.73, 1.07425, 2.04 ) }
    dend_15 { pt3dadd( 1.76894, -31.521, 1.10085, 1.92 ) }
    dend_15 { pt3dadd( 1.5149, -32.2504, 1.12272, 1.56 ) }
    dend_15 { pt3dadd( 1.18042, -33.1436, 1.10625, 1.56 ) }
    dend_15 { pt3dadd( 0.955305, -33.7401, 1.01737, 0.72 ) }
    dend_15 { pt3dadd( 0.797388, -34.1877, 0.93995, 0.48 ) }
    dend_15 { pt3dadd( 0.676896, -34.5416, 0.891279, 0.48 ) }
    dend_15 { pt3dadd( 0.398765, -35.38, 0.810995, 1.32 ) }
    dend_15 { pt3dadd( 0.168875, -36.0837, 0.74732, 1.68 ) }
    dend_15 { pt3dadd( -0.25666, -37.393, 0.588735, 1.56 ) }
    dend_15 { pt3dadd( -0.496359, -38.1292, 0.501102, 1.92 ) }
    dend_15 { pt3dadd( -0.843539, -39.2236, 0.377888, 2.64 ) }
    dend_15 { pt3dadd( -1.08413, -40.037, 0.312046, 2.76 ) }
    dend_15 { pt3dadd( -1.26316, -40.76, 0.288572, 2.76 ) }
    dend_15 { pt3dadd( -1.45785, -41.7845, 0.319878, 1.68 ) }
    dend_15 { pt3dadd( -1.53588, -42.443, 0.366718, 0.96 ) }
    dend_15 { pt3dadd( -1.57619, -43.3111, 0.419813, 0.96 ) }
    dend_15 { pt3dadd( -1.55253, -44.4306, 0.478212, 1.32 ) }
    dend_15 { pt3dadd( -1.45076, -46.0406, 0.581625, 1.8 ) }
    dend_15 { pt3dadd( -1.39141, -46.7433, 0.636514, 2.16 ) }
    dend_15 { pt3dadd( -1.31718, -47.5499, 0.693784, 2.28 ) }
    dend_15 { pt3dadd( -1.22718, -48.5394, 0.740593, 0.84 ) }
    dend_15 { pt3dadd( -1.18526, -49.188, 0.752335, 0.84 ) }
    dend_15 { pt3dadd( -1.16084, -50.1478, 0.72914, 1.08 ) }
    dend_15 { pt3dadd( -1.22744, -51.1538, 0.673153, 1.68 ) }
    dend_15 { pt3dadd( -1.3726, -51.9349, 0.623565, 2.52 ) }
    dend_15 { pt3dadd( -1.47035, -52.2553, 0.585145, 3.0 ) }
    dend_15 { pt3dadd( -1.60874, -52.6011, 0.526513, 2.88 ) }
    dend_15 { pt3dadd( -1.69873, -52.7914, 0.4922, 2.88 ) }
    dend_15 { pt3dadd( -2.07629, -53.5127, 0.353129, 2.16 ) }
    dend_15 { pt3dadd( -2.69398, -54.6282, 0.23827, 0.96 ) }
    dend_15 { pt3dadd( -3.16754, -55.4764, 0.175659, 0.48 ) }
    dend_15 { pt3dadd( -3.33345, -55.7692, 0.155077, 0.48 ) }
    dend_15 { pt3dadd( -3.91537, -56.7852, 0.0914732, 1.92 ) }
    dend_15 { pt3dadd( -4.48081, -57.7487, 0.0459317, 3.12 ) }
    dend_15 { pt3dadd( -5.11776, -58.8472, 0.0380945, 3.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.64622, 11.001, 0.167383, 2.16 ) }
    dend_0 { pt3dadd( 3.31004, 13.6066, 1.11088, 1.44 ) }
    dend_0 { pt3dadd( 3.98555, 16.1062, 1.9695, 2.16 ) }
    dend_0 { pt3dadd( 4.74369, 18.8338, 2.84368, 3.25 ) }
    dend_0 { pt3dadd( 5.27721, 20.6794, 3.41349, 3.49 ) }
    dend_0 { pt3dadd( 5.89519, 22.7641, 4.15769, 3.25 ) }
    dend_0 { pt3dadd( 6.32875, 24.2266, 4.67982, 2.88 ) }
    dend_0 { pt3dadd( 6.66259, 25.3366, 5.12992, 2.88 ) }
    dend_0 { pt3dadd( 7.02324, 26.4807, 5.5492, 2.52 ) }
    dend_0 { pt3dadd( 7.70809, 28.5, 6.32015, 2.16 ) }
    dend_0 { pt3dadd( 8.69648, 31.2441, 7.39744, 1.8 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.07054, -12.8447, -0.718029, 0.781062 ) }
    axon_0 { pt3dadd( -2.81746, -27.7426, -0.718029, 0.781062 ) }
    axon_0 { pt3dadd( -4.56437, -42.6406, -0.718029, 0.781062 ) }
    // Section: dend_48, id: dend_48, parent: dend_26 (entry count 91/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 5.36213, -4.94119, -15.6194, 1.56 ) }
    dend_48 { pt3dadd( 3.88365, -1.19063, -17.0478, 1.56 ) }
    dend_48 { pt3dadd( 3.33775, 0.402876, -17.6534, 1.2 ) }
    dend_48 { pt3dadd( 3.01345, 1.53962, -18.0939, 0.96 ) }
    dend_48 { pt3dadd( 2.70231, 2.90389, -18.5659, 0.96 ) }
    dend_48 { pt3dadd( 2.26181, 5.32451, -19.3849, 1.32 ) }
    dend_48 { pt3dadd( 1.87217, 8.10345, -20.1452, 1.32 ) }
    dend_48 { pt3dadd( 1.69494, 10.3913, -20.5271, 1.44 ) }
    dend_48 { pt3dadd( 1.67604, 12.3676, -20.7737, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_48 { pt3dadd( 1.7892, 14.4836, -20.9302, 1.44 ) }
    dend_48 { pt3dadd( 1.93672, 16.1603, -20.9494, 1.68 ) }
    dend_48 { pt3dadd( 2.21577, 19.2206, -20.7883, 2.88 ) }
    dend_48 { pt3dadd( 2.30236, 20.5258, -20.636, 3.73 ) }
    dend_48 { pt3dadd( 2.32051, 22.5896, -20.3526, 3.73 ) }
    dend_48 { pt3dadd( 2.14767, 25.2748, -19.9919, 2.88 ) }
    dend_48 { pt3dadd( 1.74406, 28.2954, -19.6693, 1.68 ) }
    dend_48 { pt3dadd( 1.4624, 29.6965, -19.5452, 1.2 ) }
    dend_48 { pt3dadd( 1.14497, 30.9739, -19.5019, 0.96 ) }
    dend_48 { pt3dadd( 0.657971, 32.6167, -19.445, 1.68 ) }
    dend_48 { pt3dadd( 0.00243904, 34.4281, -19.3835, 2.88 ) }
    dend_48 { pt3dadd( -0.36166, 35.2164, -19.3635, 3.49 ) }
    dend_48 { pt3dadd( -0.86769, 36.1046, -19.3712, 3.61 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 5.36213, -4.94119, -15.6194, 1.32 ) }
    dend_27 { pt3dadd( 7.40601, -5.74133, -15.5705, 1.32 ) }
    dend_27 { pt3dadd( 8.22784, -6.04996, -15.6675, 0.84 ) }
    dend_27 { pt3dadd( 9.42266, -6.52724, -15.9123, 1.2 ) }
    dend_27 { pt3dadd( 10.7332, -7.13395, -16.3003, 1.44 ) }
    dend_27 { pt3dadd( 12.0582, -7.94149, -16.8489, 1.32 ) }
    dend_27 { pt3dadd( 13.1191, -8.8054, -17.3908, 1.56 ) }
    dend_27 { pt3dadd( 14.155, -10.0998, -18.2288, 1.2 ) }
    dend_27 { pt3dadd( 14.45, -10.5894, -18.558, 1.2 ) }
    dend_27 { pt3dadd( 14.7806, -11.4541, -19.144, 1.2 ) }
    dend_27 { pt3dadd( 15.0708, -12.9664, -20.1141, 2.64 ) }
    dend_27 { pt3dadd( 15.1443, -14.2511, -20.8137, 4.45 ) }
    dend_27 { pt3dadd( 15.1597, -15.2702, -21.1857, 4.33 ) }
    // Section: dend_25, id: dend_25, parent: dend_15 (entry count 26/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -5.11776, -58.8472, 0.0380945, 3.0 ) }
    dend_25 { pt3dadd( -6.05836, -59.8725, 0.477449, 3.0 ) }
    dend_25 { pt3dadd( -6.59091, -60.5456, 0.734208, 2.76 ) }
    dend_25 { pt3dadd( -7.39686, -61.7406, 1.20294, 1.92 ) }
    dend_25 { pt3dadd( -7.64689, -62.1991, 1.38164, 1.92 ) }
    dend_25 { pt3dadd( -8.11252, -63.2692, 1.77376, 0.6 ) }
    dend_25 { pt3dadd( -8.37364, -64.0166, 2.01274, 0.48 ) }
    dend_25 { pt3dadd( -8.4217, -64.3115, 2.07973, 0.48 ) }
    dend_25 { pt3dadd( -8.46871, -65.0847, 2.21291, 0.48 ) }
    dend_25 { pt3dadd( -8.43947, -66.0235, 2.3126, 0.84 ) }
    dend_25 { pt3dadd( -8.31615, -67.088, 2.37815, 1.08 ) }
    dend_25 { pt3dadd( -8.0995, -68.1358, 2.44003, 1.32 ) }
    dend_25 { pt3dadd( -7.81277, -69.1662, 2.46441, 0.96 ) }
    dend_25 { pt3dadd( -7.56173, -69.8893, 2.46406, 0.72 ) }
    dend_25 { pt3dadd( -7.25926, -70.6383, 2.44024, 0.6 ) }
    dend_25 { pt3dadd( -6.68329, -71.8126, 2.42284, 0.48 ) }
    dend_25 { pt3dadd( -6.05762, -72.8988, 2.36199, 0.48 ) }
    dend_25 { pt3dadd( -5.38817, -73.9236, 2.27264, 1.44 ) }
    dend_25 { pt3dadd( -4.64657, -74.9792, 2.14802, 1.92 ) }
    dend_25 { pt3dadd( -4.07457, -75.7563, 2.06813, 2.04 ) }
    dend_25 { pt3dadd( -3.32582, -76.8113, 1.9813, 1.44 ) }
    dend_25 { pt3dadd( -2.43838, -78.1309, 1.86294, 0.84 ) }
    dend_25 { pt3dadd( -2.18241, -78.5417, 1.87055, 0.12 ) }
    dend_25 { pt3dadd( -1.86153, -79.1313, 1.97401, 0.12 ) }
    dend_25 { pt3dadd( -1.43342, -80.1149, 2.35335, 1.32 ) }
    dend_25 { pt3dadd( -1.06866, -81.1725, 2.91099, 1.68 ) }
    dend_25 { pt3dadd( -0.923917, -81.6749, 3.20459, 1.8 ) }
    dend_25 { pt3dadd( -0.332681, -83.7492, 4.46909, 1.2 ) }
    dend_25 { pt3dadd( -0.109491, -84.6391, 4.99765, 1.68 ) }
    dend_25 { pt3dadd( 0.282896, -86.1093, 5.86664, 1.2 ) }
    dend_25 { pt3dadd( 0.52221, -87.0435, 6.43295, 0.24 ) }
    dend_25 { pt3dadd( 0.668843, -87.6711, 6.83666, 0.24 ) }
    dend_25 { pt3dadd( 0.884298, -88.7866, 7.53533, 1.92 ) }
    dend_25 { pt3dadd( 0.954331, -89.5442, 7.9614, 1.8 ) }
    dend_25 { pt3dadd( 0.816548, -91.8912, 9.34922, 0.72 ) }
    dend_25 { pt3dadd( 0.568087, -93.0797, 10.0686, 0.72 ) }
    dend_25 { pt3dadd( 0.274361, -93.8659, 10.5752, 0.48 ) }
    dend_25 { pt3dadd( -0.0193545, -94.4109, 10.9716, 0.36 ) }
    dend_25 { pt3dadd( -0.577582, -95.2312, 11.5791, 0.36 ) }
    dend_25 { pt3dadd( -0.907524, -95.7452, 11.8977, 0.36 ) }
    dend_25 { pt3dadd( -1.51199, -97.0158, 12.6827, 0.6 ) }
    dend_25 { pt3dadd( -1.61154, -97.4894, 12.9765, 0.6 ) }
    dend_25 { pt3dadd( -1.66644, -98.0895, 13.4546, 0.36 ) }
    dend_25 { pt3dadd( -1.69769, -98.5354, 13.8731, 0.36 ) }
    dend_25 { pt3dadd( -1.70635, -99.0836, 14.411, 0.36 ) }
    dend_25 { pt3dadd( -1.76244, -100.661, 16.0443, 0.36 ) }
    dend_25 { pt3dadd( -1.80862, -100.967, 16.3829, 0.36 ) }
    dend_25 { pt3dadd( -1.95798, -101.958, 17.595, 1.44 ) }
    dend_25 { pt3dadd( -2.00853, -102.339, 18.1015, 1.68 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 75/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -5.11776, -58.8472, 0.0380945, 0.12 ) }
    dend_16 { pt3dadd( -5.54548, -60.7481, -0.150961, 0.12 ) }
    dend_16 { pt3dadd( -5.77025, -61.4281, -0.288275, 0.12 ) }
    dend_16 { pt3dadd( -6.00272, -62.056, -0.441966, 0.96 ) }
    dend_16 { pt3dadd( -6.2565, -62.7794, -0.638031, 1.32 ) }
    dend_16 { pt3dadd( -6.43426, -63.3327, -0.803234, 1.32 ) }
    dend_16 { pt3dadd( -6.77764, -64.5403, -1.18833, 0.6 ) }
    dend_16 { pt3dadd( -7.07089, -65.4389, -1.58653, 0.36 ) }
    dend_16 { pt3dadd( -7.13777, -65.674, -1.71205, 0.36 ) }
    dend_16 { pt3dadd( -7.2428, -66.2488, -2.05562, 0.36 ) }
    dend_16 { pt3dadd( -7.26916, -66.6172, -2.26009, 0.36 ) }
    dend_16 { pt3dadd( -7.28381, -67.001, -2.43545, 0.36 ) }
    dend_16 { pt3dadd( -7.33327, -67.7208, -2.66474, 0.36 ) }
    dend_16 { pt3dadd( -7.39584, -68.2037, -2.75577, 0.36 ) }
    dend_16 { pt3dadd( -7.55311, -68.8932, -2.93356, 0.36 ) }
    dend_16 { pt3dadd( -7.77989, -69.6792, -3.12642, 1.08 ) }
    dend_16 { pt3dadd( -8.12756, -70.7352, -3.36284, 1.68 ) }
    dend_16 { pt3dadd( -8.40219, -71.5046, -3.52084, 1.8 ) }
    dend_16 { pt3dadd( -8.77071, -72.5046, -3.68972, 1.56 ) }
    dend_16 { pt3dadd( -9.30896, -73.9856, -3.99723, 1.2 ) }
    dend_16 { pt3dadd( -9.53239, -74.6667, -4.1579, 0.36 ) }
    dend_16 { pt3dadd( -9.62182, -75.0372, -4.23373, 0.36 ) }
    dend_16 { pt3dadd( -9.67543, -75.4671, -4.2654, 0.36 ) }
    dend_16 { pt3dadd( -9.71384, -76.5022, -4.26161, 1.56 ) }
    dend_16 { pt3dadd( -9.6961, -77.2987, -4.22443, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_16 { pt3dadd( -9.62589, -78.2914, -4.12433, 1.92 ) }
    dend_16 { pt3dadd( -9.48673, -79.6494, -4.01198, 1.08 ) }
    dend_16 { pt3dadd( -9.31658, -80.8051, -3.89688, 0.36 ) }
    dend_16 { pt3dadd( -9.15453, -81.7449, -3.78534, 0.36 ) }
    dend_16 { pt3dadd( -9.00777, -82.4005, -3.63087, 0.36 ) }
    dend_16 { pt3dadd( -8.94893, -82.6574, -3.55307, 0.36 ) }
    dend_16 { pt3dadd( -8.8086, -83.3011, -3.35057, 0.96 ) }
    dend_16 { pt3dadd( -8.66076, -83.9894, -3.11277, 1.8 ) }
    dend_16 { pt3dadd( -8.52042, -84.7672, -2.87826, 2.16 ) }
    dend_16 { pt3dadd( -8.17728, -87.0259, -2.21916, 1.92 ) }
    dend_16 { pt3dadd( -8.06293, -88.1313, -1.9415, 1.8 ) }
    dend_16 { pt3dadd( -8.02721, -89.077, -1.77956, 1.8 ) }
    dend_16 { pt3dadd( -8.10908, -90.2001, -1.78271, 1.2 ) }
    dend_16 { pt3dadd( -8.44124, -91.7989, -2.20151, 0.12 ) }
    dend_16 { pt3dadd( -8.51176, -92.0412, -2.31014, 0.12 ) }
    dend_16 { pt3dadd( -8.74145, -92.7007, -2.68917, 0.12 ) }
    dend_16 { pt3dadd( -9.01844, -93.4956, -3.15117, 0.84 ) }
    dend_16 { pt3dadd( -9.46765, -94.8147, -3.94787, 1.08 ) }
    dend_16 { pt3dadd( -9.84162, -96.0001, -4.64989, 1.92 ) }
    dend_16 { pt3dadd( -10.0854, -96.9464, -5.12738, 2.88 ) }
    dend_16 { pt3dadd( -10.2291, -97.5466, -5.40206, 2.88 ) }
    dend_16 { pt3dadd( -10.4079, -98.3162, -5.73817, 1.92 ) }
    dend_16 { pt3dadd( -10.6626, -99.4156, -6.16793, 0.36 ) }
    dend_16 { pt3dadd( -10.7785, -99.9366, -6.32262, 0.36 ) }
    dend_16 { pt3dadd( -10.9099, -100.597, -6.46077, 1.08 ) }
    dend_16 { pt3dadd( -11.0829, -101.423, -6.61433, 1.2 ) }
    dend_16 { pt3dadd( -11.3315, -102.662, -6.79711, 0.48 ) }
    dend_16 { pt3dadd( -11.5323, -103.732, -6.93061, 0.48 ) }
    dend_16 { pt3dadd( -11.7058, -104.669, -7.01716, 0.48 ) }
    dend_16 { pt3dadd( -11.9781, -106.027, -7.1348, 1.92 ) }
    dend_16 { pt3dadd( -12.1844, -106.954, -7.20047, 2.4 ) }
    dend_16 { pt3dadd( -12.3685, -107.744, -7.23882, 2.64 ) }
    dend_16 { pt3dadd( -12.6245, -108.824, -7.25557, 2.64 ) }
    dend_16 { pt3dadd( -12.8331, -109.593, -7.27653, 2.04 ) }
    dend_16 { pt3dadd( -13.1526, -110.589, -7.30876, 0.72 ) }
    dend_16 { pt3dadd( -13.3204, -111.057, -7.30913, 0.72 ) }
    dend_16 { pt3dadd( -13.5383, -111.721, -7.26834, 0.72 ) }
    dend_16 { pt3dadd( -13.7279, -112.368, -7.22644, 0.72 ) }
    dend_16 { pt3dadd( -13.934, -113.217, -7.16472, 0.24 ) }
    dend_16 { pt3dadd( -14.0511, -113.975, -7.04245, 0.12 ) }
    dend_16 { pt3dadd( -14.0693, -114.398, -6.94598, 0.12 ) }
    dend_16 { pt3dadd( -14.0237, -115.195, -6.73784, 0.12 ) }
    dend_16 { pt3dadd( -13.8792, -115.99, -6.53071, 1.2 ) }
    dend_16 { pt3dadd( -13.6921, -116.687, -6.36771, 2.28 ) }
    dend_16 { pt3dadd( -13.0502, -118.696, -5.96568, 1.8 ) }
    dend_16 { pt3dadd( -12.6781, -119.785, -5.79459, 0.36 ) }
    dend_16 { pt3dadd( -12.5108, -120.342, -5.75495, 0.36 ) }
    dend_16 { pt3dadd( -12.2788, -121.476, -5.75706, 0.36 ) }
    dend_16 { pt3dadd( -12.1835, -122.557, -5.83209, 0.36 ) }
    dend_16 { pt3dadd( -12.2001, -123.245, -5.96432, 0.36 ) }
    dend_16 { pt3dadd( -12.3729, -124.303, -6.29309, 0.36 ) }
    dend_16 { pt3dadd( -12.742, -125.611, -6.69932, 1.56 ) }
    dend_16 { pt3dadd( -13.0916, -126.612, -6.99177, 2.4 ) }
    dend_16 { pt3dadd( -13.3086, -127.167, -7.14206, 2.4 ) }
    dend_16 { pt3dadd( -13.6601, -128.123, -7.38226, 2.4 ) }
    dend_16 { pt3dadd( -14.1039, -129.593, -7.70924, 0.48 ) }
    dend_16 { pt3dadd( -14.2397, -130.183, -7.81405, 0.48 ) }
    dend_16 { pt3dadd( -14.3549, -131.119, -7.93213, 0.6 ) }
    dend_16 { pt3dadd( -14.3858, -131.925, -8.03087, 0.36 ) }
    dend_16 { pt3dadd( -14.3787, -132.878, -8.14874, 0.36 ) }
    dend_16 { pt3dadd( -14.3444, -133.794, -8.2485, 0.48 ) }
    dend_16 { pt3dadd( -14.3074, -134.461, -8.34698, 0.36 ) }
    dend_16 { pt3dadd( -14.2731, -135.268, -8.5096, 0.36 ) }
    dend_16 { pt3dadd( -14.2786, -136.058, -8.70176, 0.36 ) }
    dend_16 { pt3dadd( -14.3327, -136.563, -8.85106, 0.48 ) }
    dend_16 { pt3dadd( -14.4951, -137.312, -9.1208, 0.48 ) }
    dend_16 { pt3dadd( -14.7624, -138.215, -9.43826, 0.36 ) }
    dend_16 { pt3dadd( -14.9725, -138.854, -9.6561, 0.84 ) }
    dend_16 { pt3dadd( -15.3159, -139.892, -9.95509, 1.32 ) }
    dend_16 { pt3dadd( -15.7611, -141.25, -10.2756, 2.16 ) }
    dend_16 { pt3dadd( -16.1132, -142.284, -10.4806, 2.64 ) }
    dend_16 { pt3dadd( -16.4816, -143.351, -10.6532, 2.28 ) }
    dend_16 { pt3dadd( -16.8817, -144.548, -10.7578, 1.8 ) }
    dend_16 { pt3dadd( -17.2635, -145.785, -10.8216, 1.2 ) }
    dend_16 { pt3dadd( -17.4245, -146.499, -10.768, 0.48 ) }
    dend_16 { pt3dadd( -17.5921, -147.69, -10.5775, 0.36 ) }
    dend_16 { pt3dadd( -17.6576, -148.504, -10.3985, 0.36 ) }
    dend_16 { pt3dadd( -17.6755, -149.336, -10.188, 1.08 ) }
    dend_16 { pt3dadd( -17.6266, -150.172, -9.94177, 1.08 ) }
    dend_16 { pt3dadd( -17.3086, -152.554, -9.25826, 1.44 ) }
    dend_16 { pt3dadd( -17.0592, -153.897, -8.90473, 1.44 ) }
    dend_16 { pt3dadd( -16.8419, -154.828, -8.64004, 1.32 ) }
    dend_16 { pt3dadd( -16.6416, -155.734, -8.41719, 0.48 ) }
    dend_16 { pt3dadd( -16.5051, -156.481, -8.2923, 0.48 ) }
    dend_16 { pt3dadd( -16.444, -156.936, -8.23269, 1.08 ) }
    dend_16 { pt3dadd( -16.376, -157.79, -8.1749, 1.68 ) }
    dend_16 { pt3dadd( -16.3, -159.19, -8.01283, 2.28 ) }
    dend_16 { pt3dadd( -16.3107, -160.145, -7.90725, 2.4 ) }
    dend_16 { pt3dadd( -16.4156, -161.371, -7.81193, 1.32 ) }
    dend_16 { pt3dadd( -16.548, -162.198, -7.75467, 0.6 ) }
    dend_16 { pt3dadd( -16.6879, -162.735, -7.76597, 0.48 ) }
    dend_16 { pt3dadd( -17.0358, -163.577, -7.90576, 0.48 ) }
    dend_16 { pt3dadd( -17.4285, -164.322, -8.12673, 0.48 ) }
    dend_16 { pt3dadd( -17.9267, -165.144, -8.52975, 1.08 ) }
    dend_16 { pt3dadd( -18.3338, -165.849, -8.94021, 1.92 ) }
    dend_16 { pt3dadd( -19.1676, -167.346, -9.95347, 1.92 ) }
    dend_16 { pt3dadd( -19.8106, -168.574, -10.8452, 2.28 ) }
    dend_16 { pt3dadd( -20.2035, -169.386, -11.4531, 2.76 ) }
    dend_16 { pt3dadd( -21.0719, -171.361, -12.8881, 2.76 ) }
    dend_16 { pt3dadd( -21.6648, -172.889, -13.9007, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( -22.0497, -174.071, -14.5904, 0.72 ) }
    dend_16 { pt3dadd( -22.289, -174.994, -15.0173, 0.96 ) }
    dend_16 { pt3dadd( -22.4702, -175.766, -15.2956, 1.56 ) }
    dend_16 { pt3dadd( -22.6979, -176.698, -15.5366, 1.8 ) }
    dend_16 { pt3dadd( -22.8835, -177.53, -15.6324, 1.44 ) }
    dend_16 { pt3dadd( -23.0591, -178.5, -15.7244, 0.48 ) }
    dend_16 { pt3dadd( -23.0893, -178.885, -15.7595, 0.6 ) }
    dend_16 { pt3dadd( -23.0995, -179.915, -15.873, 0.6 ) }
    dend_16 { pt3dadd( -23.0828, -180.398, -15.9214, 0.48 ) }
    dend_16 { pt3dadd( -23.0297, -181.513, -16.0173, 0.48 ) }
    dend_16 { pt3dadd( -23.001, -182.383, -16.0743, 0.48 ) }
    dend_16 { pt3dadd( -22.984, -183.459, -16.0864, 0.48 ) }
    dend_16 { pt3dadd( -23.0107, -184.526, -16.0841, 0.84 ) }
    dend_16 { pt3dadd( -23.1107, -185.91, -16.0537, 1.68 ) }
    dend_16 { pt3dadd( -23.287, -187.412, -15.9903, 2.4 ) }
    dend_16 { pt3dadd( -23.4236, -188.39, -15.9368, 2.4 ) }
    dend_16 { pt3dadd( -23.6141, -189.754, -15.8767, 0.6 ) }
    dend_16 { pt3dadd( -23.7117, -190.701, -15.8532, 0.6 ) }
    dend_16 { pt3dadd( -23.7592, -191.932, -15.9022, 0.6 ) }
    dend_16 { pt3dadd( -23.7061, -193.021, -16.0132, 0.6 ) }
    dend_16 { pt3dadd( -23.5726, -193.918, -16.1313, 1.08 ) }
    dend_16 { pt3dadd( -23.3755, -194.798, -16.2594, 1.44 ) }
    dend_16 { pt3dadd( -23.1624, -195.578, -16.3777, 0.84 ) }
    dend_16 { pt3dadd( -22.905, -196.447, -16.4741, 0.96 ) }
    dend_16 { pt3dadd( -22.6359, -197.444, -16.5528, 0.96 ) }
    dend_16 { pt3dadd( -22.4828, -198.185, -16.5866, 0.72 ) }
    dend_16 { pt3dadd( -22.4071, -198.741, -16.5964, 0.48 ) }
    dend_16 { pt3dadd( -22.3676, -199.241, -16.5917, 0.48 ) }
    dend_16 { pt3dadd( -22.3573, -199.934, -16.554, 1.32 ) }
    dend_16 { pt3dadd( -22.4114, -201.074, -16.444, 1.8 ) }
    dend_16 { pt3dadd( -22.5071, -201.905, -16.3914, 2.04 ) }
    dend_16 { pt3dadd( -22.6955, -203.022, -16.3618, 1.92 ) }
    dend_16 { pt3dadd( -22.8609, -203.853, -16.3634, 1.44 ) }
    dend_16 { pt3dadd( -23.0949, -204.886, -16.4118, 0.48 ) }
    dend_16 { pt3dadd( -23.3255, -205.762, -16.5108, 0.48 ) }
    dend_16 { pt3dadd( -23.7204, -207.169, -16.7503, 1.44 ) }
    dend_16 { pt3dadd( -24.0652, -208.393, -16.9849, 2.52 ) }
    dend_16 { pt3dadd( -24.3538, -209.455, -17.2036, 3.25 ) }
    dend_16 { pt3dadd( -24.7284, -210.973, -17.5447, 2.28 ) }
    dend_16 { pt3dadd( -24.9348, -212.028, -17.7901, 1.8 ) }
    dend_16 { pt3dadd( -25.0877, -213.22, -18.0626, 0.96 ) }
    dend_16 { pt3dadd( -25.207, -214.824, -18.3977, 0.96 ) }
    dend_16 { pt3dadd( -25.2581, -216.027, -18.6602, 0.96 ) }
    dend_16 { pt3dadd( -25.2917, -217.573, -18.9882, 2.52 ) }
    dend_16 { pt3dadd( -25.2817, -218.72, -19.1837, 2.52 ) }
    dend_16 { pt3dadd( -25.2179, -220.638, -19.4404, 1.44 ) }
    dend_16 { pt3dadd( -25.1709, -221.584, -19.5476, 0.96 ) }
    dend_16 { pt3dadd( -25.1078, -222.686, -19.6743, 0.72 ) }
    dend_16 { pt3dadd( -25.0794, -223.249, -19.7312, 0.72 ) }
    dend_16 { pt3dadd( -25.0701, -224.336, -19.8606, 0.72 ) }
    dend_16 { pt3dadd( -25.124, -225.15, -19.9815, 0.72 ) }
    dend_16 { pt3dadd( -25.2519, -226.062, -20.2169, 1.08 ) }
    dend_16 { pt3dadd( -25.4202, -226.95, -20.6402, 1.44 ) }
    dend_16 { pt3dadd( -25.4841, -227.273, -20.8454, 1.44 ) }
    dend_16 { pt3dadd( -25.7787, -228.607, -21.8563, 0.36 ) }
    dend_16 { pt3dadd( -26.0389, -229.734, -22.8112, 0.36 ) }
    dend_16 { pt3dadd( -26.317, -231.061, -23.9598, 1.32 ) }
    dend_16 { pt3dadd( -26.5737, -232.591, -25.2483, 0.48 ) }
    dend_16 { pt3dadd( -26.649, -233.222, -25.7458, 0.48 ) }
    dend_16 { pt3dadd( -26.748, -234.533, -26.708, 1.92 ) }
    dend_16 { pt3dadd( -26.7623, -234.941, -26.9717, 2.76 ) }
    dend_16 { pt3dadd( -26.7797, -235.905, -27.497, 2.4 ) }
    dend_16 { pt3dadd( -26.7883, -236.827, -27.8042, 1.32 ) }
    dend_16 { pt3dadd( -26.8446, -237.358, -27.9757, 0.12 ) }
    dend_16 { pt3dadd( -26.9685, -237.872, -28.1797, 0.12 ) }
    dend_16 { pt3dadd( -27.0694, -238.127, -28.2935, 0.12 ) }
    dend_16 { pt3dadd( -27.4572, -238.901, -28.7084, 1.08 ) }
    dend_16 { pt3dadd( -27.7448, -239.427, -29.0442, 1.08 ) }
    dend_16 { pt3dadd( -28.9758, -241.642, -30.7508, 0.24 ) }
    dend_16 { pt3dadd( -29.1169, -241.954, -31.0181, 0.24 ) }
    dend_16 { pt3dadd( -29.2882, -242.543, -31.5332, 0.24 ) }
    dend_16 { pt3dadd( -29.3198, -243.253, -32.1128, 0.24 ) }
    dend_16 { pt3dadd( -29.1551, -244.028, -32.6884, 0.24 ) }
    dend_16 { pt3dadd( -28.8336, -245.014, -33.4076, 1.08 ) }
    dend_16 { pt3dadd( -28.4795, -245.881, -33.955, 2.04 ) }
    dend_16 { pt3dadd( -28.1861, -246.685, -34.4626, 2.04 ) }
    dend_16 { pt3dadd( -27.865, -247.683, -35.0833, 1.44 ) }
    dend_16 { pt3dadd( -27.7543, -248.188, -35.3529, 0.96 ) }
    dend_16 { pt3dadd( -27.5079, -250.084, -36.1671, 0.72 ) }
    dend_16 { pt3dadd( -27.448, -250.868, -36.4174, 0.36 ) }
    dend_16 { pt3dadd( -27.4701, -251.8, -36.6535, 0.36 ) }
    dend_16 { pt3dadd( -27.5048, -252.217, -36.7147, 0.36 ) }
    dend_16 { pt3dadd( -27.6134, -253.243, -36.7346, 1.32 ) }
    dend_16 { pt3dadd( -27.6897, -254.106, -36.6693, 2.04 ) }
    dend_16 { pt3dadd( -27.7139, -254.524, -36.6057, 2.4 ) }
    dend_16 { pt3dadd( -27.7546, -255.129, -36.5064, 2.4 ) }
    dend_16 { pt3dadd( -27.8607, -256.716, -36.2459, 0.48 ) }
    dend_16 { pt3dadd( -27.9173, -257.528, -36.1197, 0.36 ) }
    dend_16 { pt3dadd( -28.025, -259.002, -35.9423, 0.36 ) }
    dend_16 { pt3dadd( -28.0838, -259.831, -35.8533, 0.36 ) }
    dend_16 { pt3dadd( -28.1529, -260.741, -35.7685, 1.68 ) }
    dend_16 { pt3dadd( -28.1893, -261.419, -35.726, 2.16 ) }
    dend_16 { pt3dadd( -28.1992, -261.853, -35.7198, 2.16 ) }
    dend_16 { pt3dadd( -28.1756, -262.995, -35.7178, 0.96 ) }
    dend_16 { pt3dadd( -28.1428, -263.674, -35.756, 0.36 ) }
    dend_16 { pt3dadd( -28.1286, -264.08, -35.8254, 0.36 ) }
    dend_16 { pt3dadd( -28.116, -265.076, -36.1186, 0.36 ) }
    dend_16 { pt3dadd( -28.131, -266.049, -36.4749, 0.36 ) }
    dend_16 { pt3dadd( -28.1441, -266.729, -36.7327, 0.36 ) }
    dend_16 { pt3dadd( -28.1796, -267.807, -37.1322, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( -28.2721, -269.29, -37.6241, 2.4 ) }
    dend_16 { pt3dadd( -28.3342, -270.065, -37.8339, 2.52 ) }
    dend_16 { pt3dadd( -28.376, -270.436, -37.9078, 2.52 ) }
    dend_16 { pt3dadd( -28.5517, -271.775, -38.0651, 0.48 ) }
    dend_16 { pt3dadd( -28.6531, -272.608, -38.1176, 0.36 ) }
    dend_16 { pt3dadd( -28.7907, -274.094, -38.048, 0.36 ) }
    dend_16 { pt3dadd( -28.8285, -274.766, -37.9492, 1.32 ) }
    dend_16 { pt3dadd( -28.8721, -275.608, -37.7915, 1.92 ) }
    dend_16 { pt3dadd( -28.9094, -276.326, -37.6663, 1.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 8.69648, 31.2441, 7.39744, 1.92 ) }
    dend_2 { pt3dadd( 8.63166, 33.7317, 7.49891, 1.92 ) }
    dend_2 { pt3dadd( 8.57911, 34.9311, 7.5685, 2.28 ) }
    dend_2 { pt3dadd( 8.53132, 36.0296, 7.67311, 1.8 ) }
    dend_2 { pt3dadd( 8.48495, 37.3154, 7.81583, 1.8 ) }
    dend_2 { pt3dadd( 8.43937, 39.063, 8.02134, 1.68 ) }
    dend_2 { pt3dadd( 8.40891, 41.1004, 8.26511, 2.4 ) }
    dend_2 { pt3dadd( 8.41831, 42.6478, 8.55271, 2.88 ) }
    dend_2 { pt3dadd( 8.4307, 43.4676, 8.69029, 2.76 ) }
    dend_2 { pt3dadd( 8.463, 44.2167, 8.82652, 2.76 ) }
    dend_2 { pt3dadd( 8.516, 44.7824, 8.95695, 2.76 ) }
    dend_2 { pt3dadd( 8.61928, 45.4241, 9.12776, 2.52 ) }
    dend_2 { pt3dadd( 8.93634, 46.79, 9.51064, 1.68 ) }
    dend_2 { pt3dadd( 9.14357, 47.5851, 9.73946, 1.44 ) }
    dend_2 { pt3dadd( 9.3843, 48.4874, 9.99029, 1.68 ) }
    dend_2 { pt3dadd( 9.83468, 50.1288, 10.4807, 2.64 ) }
    dend_2 { pt3dadd( 10.1173, 51.128, 10.7958, 2.88 ) }
    dend_2 { pt3dadd( 10.2874, 51.6939, 10.9804, 3.12 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 27/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.69648, 31.2441, 7.39744, 0.84 ) }
    dend_1 { pt3dadd( 8.22952, 31.0104, 7.67425, 0.84 ) }
    dend_1 { pt3dadd( 7.47239, 30.822, 8.12369, 0.84 ) }
    dend_1 { pt3dadd( 6.96695, 30.8415, 8.51764, 0.84 ) }
    dend_1 { pt3dadd( 6.82767, 30.8921, 8.67162, 0.84 ) }
    dend_1 { pt3dadd( 6.51951, 31.1572, 9.1184, 0.72 ) }
    dend_1 { pt3dadd( 6.3618, 31.4894, 9.64357, 0.72 ) }
    dend_1 { pt3dadd( 6.35087, 31.7255, 10.0154, 0.72 ) }
    dend_1 { pt3dadd( 6.50855, 32.1843, 10.6668, 0.96 ) }
    dend_1 { pt3dadd( 6.7541, 32.5366, 11.1561, 1.44 ) }
    dend_1 { pt3dadd( 7.10506, 32.9138, 11.6429, 1.56 ) }
    dend_1 { pt3dadd( 7.88216, 33.5733, 12.4776, 1.32 ) }
    dend_1 { pt3dadd( 8.44439, 33.9734, 12.9863, 0.48 ) }
    dend_1 { pt3dadd( 8.9324, 34.2833, 13.3472, 0.6 ) }
    dend_1 { pt3dadd( 9.89222, 34.8128, 13.9072, 0.6 ) }
    dend_1 { pt3dadd( 10.4657, 35.0868, 14.1369, 1.68 ) }
    dend_1 { pt3dadd( 11.4411, 35.4637, 14.258, 1.92 ) }
    dend_1 { pt3dadd( 12.0951, 35.6878, 13.9785, 1.56 ) }
    dend_1 { pt3dadd( 13.6451, 36.0209, 11.8756, 0.48 ) }
    dend_1 { pt3dadd( 13.8813, 36.0436, 11.2571, 0.48 ) }
    dend_1 { pt3dadd( 14.0427, 36.0481, 10.7048, 0.84 ) }
    dend_1 { pt3dadd( 14.103, 36.0306, 10.3246, 0.72 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.56437, -42.6406, -0.718029, 0.461269 ) }
    axon_1 { pt3dadd( -6.31129, -57.5385, -0.718029, 0.461269 ) }
    axon_1 { pt3dadd( -8.0582, -72.4364, -0.718029, 0.461269 ) }
    // Section: dend_54, id: dend_54, parent: dend_48 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -0.86769, 36.1046, -19.3712, 0.96 ) }
    dend_54 { pt3dadd( 0.163967, 38.5112, -19.9256, 0.96 ) }
    dend_54 { pt3dadd( 0.652902, 39.907, -20.1647, 0.6 ) }
    dend_54 { pt3dadd( 1.02948, 41.2659, -20.3622, 0.6 ) }
    dend_54 { pt3dadd( 1.1852, 42.0064, -20.4604, 1.32 ) }
    dend_54 { pt3dadd( 1.2764, 42.6731, -20.5206, 1.56 ) }
    dend_54 { pt3dadd( 1.35217, 43.9636, -20.5924, 0.96 ) }
    dend_54 { pt3dadd( 1.19624, 45.5273, -20.5141, 0.6 ) }
    dend_54 { pt3dadd( 1.05308, 46.2607, -20.4571, 0.48 ) }
    dend_54 { pt3dadd( 0.89907, 46.8964, -20.4085, 0.48 ) }
    dend_54 { pt3dadd( 0.581734, 48.1911, -20.3212, 0.72 ) }
    dend_54 { pt3dadd( 0.228942, 49.7515, -20.2609, 1.8 ) }
    dend_54 { pt3dadd( -0.0344344, 51.1824, -20.2457, 2.04 ) }
    dend_54 { pt3dadd( -0.177382, 52.3514, -20.2577, 2.64 ) }
    dend_54 { pt3dadd( -0.251207, 53.6673, -20.339, 3.25 ) }
    dend_54 { pt3dadd( -0.256272, 54.8607, -20.4666, 3.25 ) }
    dend_54 { pt3dadd( -0.202594, 56.0703, -20.6509, 2.88 ) }
    dend_54 { pt3dadd( -0.0734112, 57.6744, -20.9127, 0.84 ) }
    dend_54 { pt3dadd( -0.0133661, 58.3282, -21.0162, 0.6 ) }
    dend_54 { pt3dadd( 0.11542, 60.0019, -21.2634, 2.4 ) }
    dend_54 { pt3dadd( 0.177415, 61.1786, -21.4198, 3.25 ) }
    dend_54 { pt3dadd( 0.210079, 62.2936, -21.5375, 2.88 ) }
    dend_54 { pt3dadd( 0.237538, 64.1394, -21.6828, 0.96 ) }
    dend_54 { pt3dadd( 0.268773, 66.1021, -21.8454, 0.84 ) }
    dend_54 { pt3dadd( 0.291287, 67.311, -21.9537, 0.48 ) }
    dend_54 { pt3dadd( 0.310478, 68.1353, -22.0228, 0.48 ) }
    dend_54 { pt3dadd( 0.347971, 69.728, -22.1796, 0.48 ) }
    dend_54 { pt3dadd( 0.37699, 70.9763, -22.3276, 1.92 ) }
    dend_54 { pt3dadd( 0.441905, 72.4666, -22.5478, 3.37 ) }
    dend_54 { pt3dadd( 0.527475, 73.446, -22.7243, 3.49 ) }
    dend_54 { pt3dadd( 0.697901, 74.621, -22.9612, 3.0 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 83/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -0.86769, 36.1046, -19.3712, 0.84 ) }
    dend_49 { pt3dadd( -1.75307, 36.8396, -19.307, 0.84 ) }
    dend_49 { pt3dadd( -1.96194, 37.0909, -19.3475, 0.72 ) }
    dend_49 { pt3dadd( -2.09303, 37.3111, -19.4086, 0.72 ) }
    dend_49 { pt3dadd( -2.20362, 37.5936, -19.5365, 0.72 ) }
    dend_49 { pt3dadd( -2.37878, 38.1074, -19.8823, 0.84 ) }
    dend_49 { pt3dadd( -2.59468, 38.7304, -20.3577, 0.72 ) }
    dend_49 { pt3dadd( -2.69982, 39.1661, -20.7415, 0.48 ) }
    dend_49 { pt3dadd( -2.79061, 39.5744, -21.116, 0.48 ) }
    dend_49 { pt3dadd( -2.95055, 40.2868, -21.7762, 0.72 ) }
    dend_49 { pt3dadd( -3.14794, 41.0329, -22.4598, 0.48 ) }
    dend_49 { pt3dadd( -3.21885, 41.2214, -22.6419, 0.48 ) }
    dend_49 { pt3dadd( -3.29778, 41.3854, -22.7873, 0.48 ) }
    dend_49 { pt3dadd( -3.46847, 41.6837, -23.0316, 1.32 ) }
    dend_49 { pt3dadd( -3.66172, 41.9782, -23.2621, 2.04 ) }
    dend_49 { pt3dadd( -3.94241, 42.3835, -23.5417, 1.56 ) }
    dend_49 { pt3dadd( -4.51858, 43.2644, -24.1162, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_49 { pt3dadd( -4.65379, 43.4731, -24.2646, 0.36 ) }
    dend_49 { pt3dadd( -5.17597, 44.2624, -24.8848, 2.4 ) }
    dend_49 { pt3dadd( -5.39904, 44.5925, -25.1775, 3.25 ) }
    dend_49 { pt3dadd( -5.54201, 44.8014, -25.3829, 3.73 ) }
    // Section: dend_41, id: dend_41, parent: dend_27 (entry count 4/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 15.1597, -15.2702, -21.1857, 0.24 ) }
    dend_41 { pt3dadd( 14.3918, -17.3005, -21.8971, 0.24 ) }
    dend_41 { pt3dadd( 14.1646, -18.0227, -22.176, 0.24 ) }
    dend_41 { pt3dadd( 13.8195, -19.3938, -22.6795, 1.92 ) }
    dend_41 { pt3dadd( 13.5354, -20.4841, -23.0561, 2.52 ) }
    dend_41 { pt3dadd( 13.2812, -21.3648, -23.3456, 2.4 ) }
    dend_41 { pt3dadd( 13.0012, -22.2708, -23.6345, 1.8 ) }
    dend_41 { pt3dadd( 12.6597, -23.4571, -23.9976, 0.24 ) }
    dend_41 { pt3dadd( 12.2209, -24.8607, -24.3719, 0.24 ) }
    dend_41 { pt3dadd( 11.7518, -26.2628, -24.6777, 0.24 ) }
    dend_41 { pt3dadd( 11.4048, -27.2306, -24.8518, 0.24 ) }
    dend_41 { pt3dadd( 11.0651, -28.1183, -25.0227, 1.68 ) }
    dend_41 { pt3dadd( 10.49, -29.5213, -25.2928, 1.92 ) }
    dend_41 { pt3dadd( 9.8149, -31.0721, -25.6098, 2.28 ) }
    dend_41 { pt3dadd( 9.26235, -32.2744, -25.8831, 3.12 ) }
    dend_41 { pt3dadd( 8.67896, -33.4996, -26.1792, 3.12 ) }
    dend_41 { pt3dadd( 7.57598, -35.676, -26.6871, 0.24 ) }
    dend_41 { pt3dadd( 7.11573, -36.505, -26.8682, 0.24 ) }
    dend_41 { pt3dadd( 7.00374, -36.6846, -26.9056, 0.48 ) }
    dend_41 { pt3dadd( 6.51205, -37.3787, -27.0311, 0.48 ) }
    dend_41 { pt3dadd( 5.78402, -38.2987, -27.148, 0.48 ) }
    dend_41 { pt3dadd( 5.29303, -38.9275, -27.1671, 0.48 ) }
    dend_41 { pt3dadd( 5.06659, -39.2591, -27.1238, 0.12 ) }
    dend_41 { pt3dadd( 4.71675, -39.9807, -27.0355, 0.12 ) }
    dend_41 { pt3dadd( 4.56622, -40.3809, -26.9908, 0.12 ) }
    dend_41 { pt3dadd( 4.40353, -40.9711, -26.9387, 0.72 ) }
    dend_41 { pt3dadd( 4.15157, -42.1558, -26.8765, 0.96 ) }
    dend_41 { pt3dadd( 4.00731, -42.9019, -26.8856, 0.24 ) }
    dend_41 { pt3dadd( 3.72592, -44.3679, -26.9595, 0.24 ) }
    dend_41 { pt3dadd( 3.60292, -45.0073, -26.9756, 0.96 ) }
    dend_41 { pt3dadd( 3.45446, -45.745, -26.9842, 1.44 ) }
    dend_41 { pt3dadd( 3.25097, -46.6468, -26.9921, 1.56 ) }
    dend_41 { pt3dadd( 2.93104, -47.8729, -27.0085, 0.48 ) }
    dend_41 { pt3dadd( 2.70905, -48.6683, -27.0261, 0.24 ) }
    dend_41 { pt3dadd( 2.29446, -50.132, -27.0509, 1.68 ) }
    dend_41 { pt3dadd( 2.03557, -51.1635, -27.0877, 2.88 ) }
    dend_41 { pt3dadd( 1.70069, -52.6639, -27.1174, 2.88 ) }
    dend_41 { pt3dadd( 1.32881, -54.6466, -27.1394, 0.24 ) }
    dend_41 { pt3dadd( 1.08318, -56.3053, -27.1349, 0.24 ) }
    dend_41 { pt3dadd( 1.01299, -56.928, -27.136, 0.24 ) }
    dend_41 { pt3dadd( 0.861761, -58.8552, -27.1861, 0.24 ) }
    dend_41 { pt3dadd( 0.807513, -60.0833, -27.2152, 1.8 ) }
    dend_41 { pt3dadd( 0.799111, -61.4343, -27.2314, 2.76 ) }
    dend_41 { pt3dadd( 0.845106, -63.2856, -27.2386, 0.48 ) }
    dend_41 { pt3dadd( 0.867479, -64.3367, -27.2403, 0.48 ) }
    dend_41 { pt3dadd( 0.856181, -65.1584, -27.2453, 0.6 ) }
    dend_41 { pt3dadd( 0.802887, -66.0731, -27.23, 0.6 ) }
    dend_41 { pt3dadd( 0.733606, -66.7791, -27.2374, 0.36 ) }
    dend_41 { pt3dadd( 0.631756, -67.5321, -27.2458, 0.36 ) }
    dend_41 { pt3dadd( 0.387753, -68.7446, -27.349, 0.48 ) }
    dend_41 { pt3dadd( 0.00309204, -70.341, -27.5538, 0.48 ) }
    dend_41 { pt3dadd( -0.293428, -71.409, -27.7249, 1.44 ) }
    dend_41 { pt3dadd( -0.680348, -72.7549, -28.0309, 2.76 ) }
    dend_41 { pt3dadd( -0.976853, -73.877, -28.3484, 3.0 ) }
    dend_41 { pt3dadd( -1.51408, -76.2038, -29.2142, 0.12 ) }
    dend_41 { pt3dadd( -1.65619, -76.8859, -29.5175, 0.12 ) }
    dend_41 { pt3dadd( -1.84797, -77.8481, -30.0023, 0.12 ) }
    dend_41 { pt3dadd( -2.05154, -78.9503, -30.5935, 1.32 ) }
    dend_41 { pt3dadd( -2.23781, -80.0135, -31.1502, 2.4 ) }
    dend_41 { pt3dadd( -2.64925, -82.1271, -32.1918, 0.12 ) }
    dend_41 { pt3dadd( -2.87267, -83.1604, -32.6339, 0.12 ) }
    dend_41 { pt3dadd( -3.03848, -83.7731, -32.8772, 0.84 ) }
    dend_41 { pt3dadd( -3.25656, -84.4465, -33.1169, 0.96 ) }
    dend_41 { pt3dadd( -3.8276, -86.0308, -33.5706, 0.12 ) }
    dend_41 { pt3dadd( -4.27257, -87.214, -33.8618, 0.12 ) }
    dend_41 { pt3dadd( -4.60561, -88.1499, -34.0347, 1.32 ) }
    dend_41 { pt3dadd( -4.89506, -89.0403, -34.1915, 1.8 ) }
    dend_41 { pt3dadd( -5.2547, -90.2455, -34.3813, 0.12 ) }
    dend_41 { pt3dadd( -5.71672, -91.8315, -34.5986, 0.12 ) }
    dend_41 { pt3dadd( -5.95056, -92.6944, -34.6961, 1.56 ) }
    dend_41 { pt3dadd( -6.18192, -93.7258, -34.8002, 2.52 ) }
    dend_41 { pt3dadd( -6.35568, -94.6303, -34.8807, 2.64 ) }
    dend_41 { pt3dadd( -6.67672, -96.5745, -35.0295, 1.32 ) }
    dend_41 { pt3dadd( -6.81998, -97.4532, -35.0855, 0.12 ) }
    dend_41 { pt3dadd( -6.84823, -97.6151, -35.0959, 0.24 ) }
    dend_41 { pt3dadd( -7.05959, -98.7491, -35.1916, 0.24 ) }
    dend_41 { pt3dadd( -7.30941, -100.075, -35.3262, 0.24 ) }
    dend_41 { pt3dadd( -7.47435, -100.957, -35.488, 0.24 ) }
    dend_41 { pt3dadd( -7.58436, -101.564, -35.6419, 0.24 ) }
    dend_41 { pt3dadd( -7.69191, -102.157, -35.8155, 1.56 ) }
    dend_41 { pt3dadd( -7.87932, -103.081, -36.1065, 2.28 ) }
    dend_41 { pt3dadd( -8.06672, -103.926, -36.407, 2.28 ) }
    dend_41 { pt3dadd( -8.48476, -105.825, -37.1312, 0.48 ) }
    dend_41 { pt3dadd( -8.73309, -106.924, -37.5552, 0.48 ) }
    dend_41 { pt3dadd( -8.76508, -107.063, -37.6068, 0.72 ) }
    dend_41 { pt3dadd( -9.0088, -108.039, -37.9483, 0.96 ) }
    dend_41 { pt3dadd( -9.23332, -108.86, -38.1968, 0.48 ) }
    dend_41 { pt3dadd( -9.37176, -109.287, -38.329, 0.48 ) }
    dend_41 { pt3dadd( -9.62152, -109.986, -38.4934, 0.48 ) }
    dend_41 { pt3dadd( -9.96438, -110.912, -38.6978, 0.6 ) }
    dend_41 { pt3dadd( -10.0775, -111.226, -38.7606, 0.24 ) }
    dend_41 { pt3dadd( -10.4052, -112.22, -38.9432, 0.24 ) }
    dend_41 { pt3dadd( -10.82, -113.678, -39.1717, 1.56 ) }
    dend_41 { pt3dadd( -11.1169, -114.855, -39.3518, 2.4 ) }
    dend_41 { pt3dadd( -11.3558, -115.911, -39.5077, 2.52 ) }
    dend_41 { pt3dadd( -11.479, -116.501, -39.5896, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_41 { pt3dadd( -11.871, -118.426, -39.8051, 0.24 ) }
    dend_41 { pt3dadd( -12.2908, -120.793, -39.9983, 0.24 ) }
    dend_41 { pt3dadd( -12.3836, -121.418, -40.0334, 0.96 ) }
    dend_41 { pt3dadd( -12.494, -122.321, -40.0899, 1.44 ) }
    dend_41 { pt3dadd( -12.5477, -122.933, -40.1188, 1.68 ) }
    dend_41 { pt3dadd( -12.6217, -124.258, -40.1904, 0.24 ) }
    dend_41 { pt3dadd( -12.6442, -126.555, -40.3172, 0.24 ) }
    dend_41 { pt3dadd( -12.6061, -127.767, -40.3992, 1.56 ) }
    dend_41 { pt3dadd( -12.5666, -128.526, -40.4656, 2.16 ) }
    dend_41 { pt3dadd( -12.5136, -129.342, -40.559, 1.8 ) }
    dend_41 { pt3dadd( -12.4619, -130.737, -40.7716, 0.12 ) }
    dend_41 { pt3dadd( -12.4705, -131.527, -40.9352, 0.12 ) }
    dend_41 { pt3dadd( -12.4897, -131.674, -40.9691, 0.6 ) }
    dend_41 { pt3dadd( -12.6325, -132.281, -41.1089, 0.12 ) }
    dend_41 { pt3dadd( -12.7757, -132.73, -41.2053, 0.12 ) }
    dend_41 { pt3dadd( -13.1821, -133.818, -41.4081, 0.12 ) }
    dend_41 { pt3dadd( -13.3735, -134.327, -41.4758, 0.6 ) }
    dend_41 { pt3dadd( -13.6734, -135.192, -41.4932, 0.6 ) }
    dend_41 { pt3dadd( -13.8546, -135.778, -41.4547, 0.12 ) }
    dend_41 { pt3dadd( -14.0598, -136.491, -41.3663, 0.12 ) }
    dend_41 { pt3dadd( -14.2377, -137.086, -41.2795, 0.6 ) }
    dend_41 { pt3dadd( -14.4779, -137.954, -41.1381, 0.6 ) }
    dend_41 { pt3dadd( -14.9103, -139.609, -40.8657, 0.12 ) }
    dend_41 { pt3dadd( -15.1807, -140.709, -40.692, 0.12 ) }
    dend_41 { pt3dadd( -15.4366, -141.815, -40.5382, 1.44 ) }
    dend_41 { pt3dadd( -15.6842, -142.959, -40.4136, 2.4 ) }
    dend_41 { pt3dadd( -15.7913, -143.496, -40.3771, 2.52 ) }
    dend_41 { pt3dadd( -15.9484, -144.357, -40.369, 2.16 ) }
    dend_41 { pt3dadd( -16.0525, -145.415, -40.4394, 0.12 ) }
    dend_41 { pt3dadd( -16.0797, -146.327, -40.447, 0.36 ) }
    dend_41 { pt3dadd( -16.0697, -146.921, -40.4234, 0.12 ) }
    dend_41 { pt3dadd( -16.0521, -147.376, -40.3871, 0.12 ) }
    dend_41 { pt3dadd( -16.0192, -148.041, -40.3314, 0.12 ) }
    dend_41 { pt3dadd( -15.9453, -149.221, -40.229, 0.12 ) }
    dend_41 { pt3dadd( -15.8342, -150.583, -40.1219, 0.12 ) }
    dend_41 { pt3dadd( -15.8194, -150.886, -40.1093, 0.12 ) }
    dend_41 { pt3dadd( -15.8347, -151.802, -40.1119, 0.12 ) }
    dend_41 { pt3dadd( -15.914, -152.858, -40.2003, 1.8 ) }
    dend_41 { pt3dadd( -15.9629, -153.306, -40.2681, 2.28 ) }
    dend_41 { pt3dadd( -16.1083, -154.2, -40.3793, 1.92 ) }
    dend_41 { pt3dadd( -16.355, -155.671, -40.4878, 0.36 ) }
    dend_41 { pt3dadd( -16.5578, -156.798, -40.5209, 0.36 ) }
    dend_41 { pt3dadd( -16.7406, -157.842, -40.5134, 1.2 ) }
    dend_41 { pt3dadd( -16.8822, -158.774, -40.4018, 0.72 ) }
    dend_41 { pt3dadd( -17.0448, -160.686, -40.1795, 0.12 ) }
    dend_41 { pt3dadd( -17.1333, -162.415, -39.9857, 0.12 ) }
    dend_41 { pt3dadd( -17.1589, -163.55, -39.8667, 1.68 ) }
    dend_41 { pt3dadd( -17.1819, -164.431, -39.7766, 1.8 ) }
    dend_41 { pt3dadd( -17.2766, -166.772, -39.513, 1.44 ) }
    dend_41 { pt3dadd( -17.4, -169.125, -39.3518, 0.24 ) }
    dend_41 { pt3dadd( -17.4955, -171.383, -39.2341, 0.12 ) }
    dend_41 { pt3dadd( -17.5396, -172.431, -39.1529, 0.12 ) }
    dend_41 { pt3dadd( -17.6467, -174.233, -38.9608, 0.12 ) }
    dend_41 { pt3dadd( -17.7128, -175.108, -38.8797, 1.2 ) }
    dend_41 { pt3dadd( -17.796, -176.308, -38.8039, 2.52 ) }
    dend_41 { pt3dadd( -17.9094, -178.193, -38.482, 0.48 ) }
    dend_41 { pt3dadd( -17.912, -178.629, -38.4004, 0.48 ) }
    dend_41 { pt3dadd( -17.8789, -179.707, -38.1953, 0.48 ) }
    dend_41 { pt3dadd( -17.7989, -180.881, -37.9967, 0.72 ) }
    dend_41 { pt3dadd( -17.6855, -182.402, -37.7643, 0.24 ) }
    dend_41 { pt3dadd( -17.5892, -184.013, -37.4217, 0.12 ) }
    dend_41 { pt3dadd( -17.4797, -185.223, -37.1709, 0.12 ) }
    dend_41 { pt3dadd( -17.3815, -185.885, -37.0492, 1.08 ) }
    dend_41 { pt3dadd( -17.2367, -186.617, -36.8922, 1.32 ) }
    dend_41 { pt3dadd( -17.0895, -187.214, -36.7716, 1.08 ) }
    dend_41 { pt3dadd( -16.6739, -188.769, -36.4969, 0.36 ) }
    dend_41 { pt3dadd( -16.0133, -191.091, -36.2321, 0.36 ) }
    dend_41 { pt3dadd( -15.5582, -192.655, -36.0435, 1.56 ) }
    dend_41 { pt3dadd( -15.1649, -194.019, -35.8885, 2.16 ) }
    dend_41 { pt3dadd( -14.8016, -195.109, -35.7817, 1.68 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 70/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 15.1597, -15.2702, -21.1857, 0.36 ) }
    dend_28 { pt3dadd( 16.6474, -16.0951, -21.6081, 0.36 ) }
    dend_28 { pt3dadd( 17.0933, -16.1953, -21.8904, 0.36 ) }
    dend_28 { pt3dadd( 17.3173, -16.1885, -22.1012, 0.36 ) }
    dend_28 { pt3dadd( 17.5171, -16.1678, -22.2993, 0.36 ) }
    dend_28 { pt3dadd( 18.0035, -16.1183, -22.7676, 0.72 ) }
    dend_28 { pt3dadd( 18.7566, -16.0695, -23.4716, 0.96 ) }
    dend_28 { pt3dadd( 19.2169, -15.9905, -23.965, 0.96 ) }
    dend_28 { pt3dadd( 19.8683, -15.8977, -24.6619, 0.48 ) }
    dend_28 { pt3dadd( 20.4849, -15.8657, -25.288, 0.36 ) }
    dend_28 { pt3dadd( 20.8181, -15.9228, -25.5849, 0.36 ) }
    dend_28 { pt3dadd( 21.1252, -16.1199, -25.7568, 0.36 ) }
    dend_28 { pt3dadd( 21.2451, -16.2677, -25.7749, 0.36 ) }
    dend_28 { pt3dadd( 21.5895, -16.7808, -25.7693, 0.36 ) }
    dend_28 { pt3dadd( 21.9182, -17.2596, -25.7343, 1.56 ) }
    dend_28 { pt3dadd( 22.3532, -17.8293, -25.6866, 2.52 ) }
    dend_28 { pt3dadd( 22.7901, -18.3264, -25.6852, 2.4 ) }
    dend_28 { pt3dadd( 23.7037, -19.1809, -25.7572, 0.36 ) }
    dend_28 { pt3dadd( 24.036, -19.4379, -25.81, 0.36 ) }
    dend_28 { pt3dadd( 24.7124, -19.8837, -25.9535, 0.36 ) }
    dend_28 { pt3dadd( 25.3536, -20.2542, -26.1233, 0.36 ) }
    dend_28 { pt3dadd( 26.2365, -20.7162, -26.3745, 1.44 ) }
    dend_28 { pt3dadd( 27.1703, -21.1647, -26.6601, 3.25 ) }
    dend_28 { pt3dadd( 28.2087, -21.627, -27.0021, 4.69 ) }
    dend_28 { pt3dadd( 28.4011, -21.7176, -27.0693, 4.93 ) }
    dend_28 { pt3dadd( 29.5461, -22.337, -27.4957, 3.61 ) }
    // Section: dend_24, id: dend_24, parent: dend_16 (entry count 96/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -28.9094, -276.326, -37.6663, 0.12 ) }
    dend_24 { pt3dadd( -29.4478, -277.284, -38.5687, 0.12 ) }
    dend_24 { pt3dadd( -29.6708, -277.719, -38.9811, 0.12 ) }
    dend_24 { pt3dadd( -29.7433, -277.843, -39.1383, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -29.8449, -277.982, -39.3146, 0.36 ) }
    dend_24 { pt3dadd( -30.4547, -278.743, -40.2358, 0.12 ) }
    dend_24 { pt3dadd( -30.6487, -278.965, -40.5434, 0.12 ) }
    dend_24 { pt3dadd( -30.6487, -278.965, -40.5434, 0.36 ) }
    dend_24 { pt3dadd( -31.3572, -279.771, -41.7291, 0.36 ) }
    dend_24 { pt3dadd( -31.7882, -280.297, -42.4697, 2.52 ) }
    dend_24 { pt3dadd( -31.9423, -280.506, -42.7428, 2.88 ) }
    dend_24 { pt3dadd( -33.2568, -282.397, -44.9664, 0.24 ) }
    dend_24 { pt3dadd( -33.4312, -282.664, -45.2559, 0.12 ) }
    dend_24 { pt3dadd( -33.5742, -282.924, -45.5004, 0.12 ) }
    dend_24 { pt3dadd( -33.7121, -283.272, -45.7541, 0.48 ) }
    dend_24 { pt3dadd( -33.8169, -283.659, -45.9969, 0.48 ) }
    dend_24 { pt3dadd( -33.9042, -284.06, -46.1993, 0.12 ) }
    dend_24 { pt3dadd( -33.9996, -284.781, -46.3719, 0.12 ) }
    dend_24 { pt3dadd( -34.0562, -285.206, -46.5167, 0.12 ) }
    dend_24 { pt3dadd( -34.1205, -285.691, -46.7036, 0.84 ) }
    dend_24 { pt3dadd( -34.1727, -286.005, -46.8137, 0.84 ) }
    dend_24 { pt3dadd( -34.3618, -287.192, -47.1977, 0.12 ) }
    dend_24 { pt3dadd( -34.4325, -287.711, -47.3445, 0.12 ) }
    dend_24 { pt3dadd( -34.652, -289.051, -47.6805, 2.64 ) }
    dend_24 { pt3dadd( -34.7429, -289.472, -47.7703, 2.28 ) }
    dend_24 { pt3dadd( -35.0518, -290.635, -47.8706, 0.12 ) }
    dend_24 { pt3dadd( -35.1836, -291.044, -47.8406, 0.12 ) }
    dend_24 { pt3dadd( -35.5029, -291.803, -47.6297, 0.12 ) }
    dend_24 { pt3dadd( -35.8181, -292.32, -47.3982, 1.2 ) }
    dend_24 { pt3dadd( -35.8769, -292.394, -47.3489, 1.44 ) }
    dend_24 { pt3dadd( -36.7865, -293.362, -46.5651, 0.12 ) }
    dend_24 { pt3dadd( -37.0832, -293.613, -46.2891, 0.12 ) }
    dend_24 { pt3dadd( -37.3665, -293.803, -46.0125, 0.12 ) }
    dend_24 { pt3dadd( -37.7496, -294.001, -45.591, 0.84 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 30/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -28.9094, -276.326, -37.6663, 0.6 ) }
    dend_17 { pt3dadd( -28.7684, -277.244, -39.0504, 0.6 ) }
    dend_17 { pt3dadd( -28.7655, -277.358, -39.2383, 0.6 ) }
    dend_17 { pt3dadd( -28.7704, -277.844, -40.0374, 1.32 ) }
    dend_17 { pt3dadd( -28.7843, -278.377, -40.8672, 2.28 ) }
    dend_17 { pt3dadd( -28.8, -278.976, -41.8002, 2.04 ) }
    dend_17 { pt3dadd( -28.8516, -280.945, -44.867, 0.96 ) }
    dend_17 { pt3dadd( -28.8945, -281.408, -45.6736, 0.48 ) }
    dend_17 { pt3dadd( -28.9263, -281.649, -46.1159, 0.48 ) }
    dend_17 { pt3dadd( -28.9828, -281.903, -46.6255, 0.48 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 10.2874, 51.6939, 10.9804, 1.2 ) }
    dend_8 { pt3dadd( 10.2434, 53.4814, 10.7527, 1.2 ) }
    dend_8 { pt3dadd( 10.2324, 55.1481, 10.6989, 1.32 ) }
    dend_8 { pt3dadd( 10.2361, 56.1367, 10.7074, 1.44 ) }
    dend_8 { pt3dadd( 10.2627, 57.4031, 10.7606, 0.96 ) }
    dend_8 { pt3dadd( 10.3469, 59.108, 10.8489, 1.08 ) }
    dend_8 { pt3dadd( 10.5344, 61.4026, 10.9696, 1.56 ) }
    dend_8 { pt3dadd( 10.861, 63.3812, 11.1265, 0.96 ) }
    dend_8 { pt3dadd( 11.1312, 64.4846, 11.2284, 0.6 ) }
    dend_8 { pt3dadd( 11.4687, 65.5381, 11.3246, 1.2 ) }
    dend_8 { pt3dadd( 11.8535, 66.528, 11.4124, 2.04 ) }
    dend_8 { pt3dadd( 12.1911, 67.2986, 11.4755, 2.16 ) }
    dend_8 { pt3dadd( 12.896, 68.8527, 11.6169, 1.2 ) }
    dend_8 { pt3dadd( 13.365, 69.9741, 11.7197, 0.84 ) }
    dend_8 { pt3dadd( 13.7537, 71.1621, 11.7931, 0.48 ) }
    dend_8 { pt3dadd( 13.9464, 71.9972, 11.8257, 0.48 ) }
    dend_8 { pt3dadd( 14.1739, 73.8786, 11.8593, 0.48 ) }
    dend_8 { pt3dadd( 14.224, 75.2632, 11.8572, 0.84 ) }
    dend_8 { pt3dadd( 14.1837, 76.8261, 11.8164, 1.92 ) }
    dend_8 { pt3dadd( 14.0958, 78.7922, 11.7007, 2.52 ) }
    dend_8 { pt3dadd( 14.0557, 79.7982, 11.6112, 2.28 ) }
    dend_8 { pt3dadd( 14.0489, 81.4566, 11.4619, 0.6 ) }
    dend_8 { pt3dadd( 14.0776, 82.0261, 11.4193, 0.6 ) }
    dend_8 { pt3dadd( 14.1476, 82.8458, 11.3887, 0.48 ) }
    dend_8 { pt3dadd( 14.302, 84.2339, 11.4153, 0.48 ) }
    dend_8 { pt3dadd( 14.4515, 85.2784, 11.5066, 0.96 ) }
    dend_8 { pt3dadd( 14.6012, 86.2091, 11.6087, 1.8 ) }
    dend_8 { pt3dadd( 14.8467, 87.5253, 11.7985, 2.04 ) }
    dend_8 { pt3dadd( 15.09, 88.9128, 12.011, 2.04 ) }
    dend_8 { pt3dadd( 15.37, 90.9093, 12.3442, 2.28 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 70/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 10.2874, 51.6939, 10.9804, 1.32 ) }
    dend_3 { pt3dadd( 11.3686, 53.1871, 11.2519, 1.32 ) }
    dend_3 { pt3dadd( 11.8373, 53.833, 11.2775, 0.96 ) }
    dend_3 { pt3dadd( 12.6652, 54.8873, 11.221, 1.32 ) }
    dend_3 { pt3dadd( 13.1879, 55.4583, 11.1228, 1.68 ) }
    dend_3 { pt3dadd( 13.8728, 56.1017, 10.9593, 1.2 ) }
    dend_3 { pt3dadd( 14.7197, 56.8176, 10.7325, 0.84 ) }
    dend_3 { pt3dadd( 15.643, 57.506, 10.4058, 0.72 ) }
    dend_3 { pt3dadd( 16.1748, 57.8741, 10.2261, 0.84 ) }
    dend_3 { pt3dadd( 17.1052, 58.3893, 9.88605, 0.6 ) }
    dend_3 { pt3dadd( 17.7119, 58.6561, 9.66545, 0.6 ) }
    dend_3 { pt3dadd( 18.2179, 58.811, 9.49613, 1.32 ) }
    dend_3 { pt3dadd( 19.5248, 59.1206, 9.28118, 1.8 ) }
    dend_3 { pt3dadd( 20.3248, 59.4411, 9.37333, 1.2 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 84/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 0.697901, 74.621, -22.9612, 0.48 ) }
    dend_58 { pt3dadd( 0.490775, 76.7972, -22.7806, 0.48 ) }
    dend_58 { pt3dadd( 0.310158, 78.079, -22.6646, 0.48 ) }
    dend_58 { pt3dadd( 0.158705, 78.9415, -22.5737, 0.48 ) }
    dend_58 { pt3dadd( -0.126737, 80.4737, -22.425, 0.72 ) }
    dend_58 { pt3dadd( -0.304884, 81.3921, -22.3468, 0.48 ) }
    dend_58 { pt3dadd( -0.525149, 82.4921, -22.2647, 0.48 ) }
    dend_58 { pt3dadd( -0.938185, 84.0535, -22.209, 0.48 ) }
    dend_58 { pt3dadd( -1.3312, 85.4538, -22.167, 1.8 ) }
    dend_58 { pt3dadd( -1.51843, 86.1764, -22.1468, 2.64 ) }
    dend_58 { pt3dadd( -1.70097, 87.0075, -22.1282, 2.88 ) }
    dend_58 { pt3dadd( -1.88942, 87.9755, -22.0885, 2.88 ) }
    dend_58 { pt3dadd( -2.0869, 89.0816, -22.0362, 2.04 ) }
    dend_58 { pt3dadd( -2.31397, 90.488, -21.9723, 0.48 ) }
    dend_58 { pt3dadd( -2.39921, 91.0507, -21.9417, 0.36 ) }
    dend_58 { pt3dadd( -2.69789, 93.1336, -21.8247, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_58 { pt3dadd( -2.87473, 94.4731, -21.7543, 1.44 ) }
    dend_58 { pt3dadd( -2.97904, 95.7242, -21.692, 2.52 ) }
    dend_58 { pt3dadd( -3.0222, 96.9674, -21.6347, 2.64 ) }
    dend_58 { pt3dadd( -3.01545, 97.8583, -21.6007, 2.52 ) }
    dend_58 { pt3dadd( -2.94087, 99.8319, -21.5508, 0.48 ) }
    dend_58 { pt3dadd( -2.89349, 100.664, -21.5456, 0.36 ) }
    dend_58 { pt3dadd( -2.80752, 102.271, -21.5614, 0.36 ) }
    dend_58 { pt3dadd( -2.77679, 103.03, -21.5612, 0.36 ) }
    dend_58 { pt3dadd( -2.74646, 104.286, -21.5689, 0.36 ) }
    dend_58 { pt3dadd( -2.7406, 105.691, -21.5819, 1.44 ) }
    dend_58 { pt3dadd( -2.77458, 106.536, -21.5992, 1.56 ) }
    dend_58 { pt3dadd( -2.87536, 107.622, -21.6455, 0.24 ) }
    dend_58 { pt3dadd( -3.07664, 108.868, -21.7278, 0.24 ) }
    dend_58 { pt3dadd( -3.28336, 109.939, -21.7914, 0.72 ) }
    dend_58 { pt3dadd( -3.39151, 110.48, -21.8158, 0.72 ) }
    dend_58 { pt3dadd( -3.51608, 111.108, -21.8337, 0.48 ) }
    dend_58 { pt3dadd( -3.5872, 111.525, -21.8361, 0.36 ) }
    dend_58 { pt3dadd( -3.67984, 112.211, -21.8005, 0.36 ) }
    dend_58 { pt3dadd( -3.7626, 113.044, -21.6889, 0.84 ) }
    dend_58 { pt3dadd( -3.82923, 114.415, -21.4391, 2.4 ) }
    dend_58 { pt3dadd( -3.84357, 114.97, -21.3427, 3.0 ) }
    dend_58 { pt3dadd( -3.85659, 116.071, -21.1577, 3.0 ) }
    dend_58 { pt3dadd( -3.87596, 117.45, -20.9555, 1.68 ) }
    dend_58 { pt3dadd( -3.90165, 118.828, -20.7819, 0.36 ) }
    dend_58 { pt3dadd( -3.93562, 119.951, -20.6759, 0.36 ) }
    dend_58 { pt3dadd( -4.03633, 121.393, -20.5919, 0.36 ) }
    dend_58 { pt3dadd( -4.16354, 122.515, -20.5775, 1.68 ) }
    dend_58 { pt3dadd( -4.27548, 123.261, -20.6036, 2.52 ) }
    dend_58 { pt3dadd( -4.38, 123.838, -20.6522, 2.64 ) }
    dend_58 { pt3dadd( -4.52751, 124.574, -20.7296, 2.28 ) }
    dend_58 { pt3dadd( -4.7611, 125.763, -20.8492, 0.48 ) }
    dend_58 { pt3dadd( -4.9909, 127.424, -21.025, 0.48 ) }
    dend_58 { pt3dadd( -5.101, 128.676, -21.1679, 0.48 ) }
    dend_58 { pt3dadd( -5.12296, 129.242, -21.2274, 0.96 ) }
    dend_58 { pt3dadd( -5.13194, 130.225, -21.319, 1.56 ) }
    dend_58 { pt3dadd( -5.11672, 130.942, -21.3714, 1.56 ) }
    dend_58 { pt3dadd( -5.05681, 132.354, -21.4434, 0.48 ) }
    dend_58 { pt3dadd( -5.033, 132.787, -21.4686, 0.12 ) }
    dend_58 { pt3dadd( -4.97244, 134.04, -21.5489, 0.12 ) }
    dend_58 { pt3dadd( -4.92319, 135.441, -21.6415, 2.16 ) }
    dend_58 { pt3dadd( -4.91153, 136.147, -21.6869, 2.88 ) }
    dend_58 { pt3dadd( -4.91963, 136.71, -21.7147, 3.0 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 42/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 0.697901, 74.621, -22.9612, 0.48 ) }
    dend_55 { pt3dadd( 0.603203, 77.4355, -25.3469, 0.48 ) }
    dend_55 { pt3dadd( 0.571882, 77.8405, -25.6916, 0.48 ) }
    dend_55 { pt3dadd( 0.504724, 78.7012, -26.4849, 0.72 ) }
    dend_55 { pt3dadd( 0.480181, 79.2927, -27.0692, 0.72 ) }
    dend_55 { pt3dadd( 0.458204, 80.4116, -28.163, 0.24 ) }
    dend_55 { pt3dadd( 0.455189, 80.9147, -28.6577, 0.12 ) }
    dend_55 { pt3dadd( 0.445379, 81.6277, -29.3266, 0.84 ) }
    dend_55 { pt3dadd( 0.4877, 82.5632, -30.2514, 0.12 ) }
    dend_55 { pt3dadd( 0.575347, 83.5842, -31.2641, 0.12 ) }
    dend_55 { pt3dadd( 0.630638, 84.1734, -31.8011, 1.68 ) }
    dend_55 { pt3dadd( 0.683899, 84.8941, -32.363, 2.4 ) }
    dend_55 { pt3dadd( 0.769707, 86.1473, -33.3098, 1.8 ) }
    dend_55 { pt3dadd( 0.846772, 87.3496, -34.2035, 0.12 ) }
    dend_55 { pt3dadd( 0.850831, 87.8907, -34.5955, 0.12 ) }
    dend_55 { pt3dadd( 0.792438, 88.947, -35.397, 1.92 ) }
    dend_55 { pt3dadd( 0.744224, 89.649, -35.9915, 2.4 ) }
    dend_55 { pt3dadd( 0.622191, 91.4777, -37.6498, 0.6 ) }
    dend_55 { pt3dadd( 0.546894, 92.3138, -38.4492, 0.48 ) }
    dend_55 { pt3dadd( 0.477029, 92.9834, -39.0965, 0.48 ) }
    dend_55 { pt3dadd( 0.390505, 93.9638, -40.0519, 1.2 ) }
    dend_55 { pt3dadd( 0.32462, 95.0749, -41.1892, 0.48 ) }
    dend_55 { pt3dadd( 0.311347, 95.5007, -41.6037, 0.12 ) }
    dend_55 { pt3dadd( 0.292697, 96.3932, -42.2924, 0.12 ) }
    dend_55 { pt3dadd( 0.296961, 96.9625, -42.6626, 0.72 ) }
    dend_55 { pt3dadd( 0.347731, 97.5411, -43.0655, 0.72 ) }
    dend_55 { pt3dadd( 0.44574, 98.8955, -44.0443, 0.12 ) }
    dend_55 { pt3dadd( 0.464323, 99.2005, -44.2841, 0.12 ) }
    dend_55 { pt3dadd( 0.546912, 100.116, -45.0472, 2.28 ) }
    dend_55 { pt3dadd( 0.626298, 100.604, -45.513, 2.52 ) }
    dend_55 { pt3dadd( 1.08308, 102.747, -47.7495, 0.12 ) }
    dend_55 { pt3dadd( 1.31447, 103.633, -48.6652, 0.12 ) }
    dend_55 { pt3dadd( 1.58466, 104.546, -49.5814, 1.44 ) }
    dend_55 { pt3dadd( 1.74668, 105.058, -50.0991, 1.8 ) }
    dend_55 { pt3dadd( 2.11802, 106.159, -51.2439, 1.32 ) }
    dend_55 { pt3dadd( 2.30259, 106.791, -51.8959, 0.12 ) }
    dend_55 { pt3dadd( 2.53852, 107.777, -52.8044, 0.12 ) }
    dend_55 { pt3dadd( 2.82321, 109.135, -54.0139, 1.56 ) }
    dend_55 { pt3dadd( 2.88897, 109.585, -54.399, 1.92 ) }
    dend_55 { pt3dadd( 3.00805, 111.031, -55.6342, 0.12 ) }
    dend_55 { pt3dadd( 3.04265, 111.91, -56.3652, 0.12 ) }
    dend_55 { pt3dadd( 3.05594, 112.449, -56.8219, 0.96 ) }
    dend_55 { pt3dadd( 3.06144, 112.649, -56.9983, 0.96 ) }
    dend_55 { pt3dadd( 3.13703, 113.505, -57.8122, 0.12 ) }
    dend_55 { pt3dadd( 3.22081, 114.172, -58.4919, 0.12 ) }
    dend_55 { pt3dadd( 3.34156, 115.14, -59.5347, 1.32 ) }
    dend_55 { pt3dadd( 3.39632, 115.59, -60.0259, 1.8 ) }
    dend_55 { pt3dadd( 3.44701, 116.172, -60.6543, 1.32 ) }
    dend_55 { pt3dadd( 3.55939, 117.824, -62.3563, 0.12 ) }
    dend_55 { pt3dadd( 3.58263, 118.016, -62.5827, 0.12 ) }
    dend_55 { pt3dadd( 3.69423, 118.706, -63.4319, 0.36 ) }
    dend_55 { pt3dadd( 3.76076, 119.282, -64.1472, 0.36 ) }
    dend_55 { pt3dadd( 3.88722, 120.073, -65.1465, 1.92 ) }
    dend_55 { pt3dadd( 4.0323, 120.749, -65.9625, 2.76 ) }
    dend_55 { pt3dadd( 4.76946, 123.838, -69.4092, 0.36 ) }
    dend_55 { pt3dadd( 4.84008, 124.098, -69.7036, 0.36 ) }
    dend_55 { pt3dadd( 5.13457, 125.082, -70.8196, 0.36 ) }
    dend_55 { pt3dadd( 5.43355, 126.062, -71.9282, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( 5.6119, 126.617, -72.5409, 0.36 ) }
    dend_55 { pt3dadd( 5.95164, 127.585, -73.5524, 0.72 ) }
    dend_55 { pt3dadd( 6.43462, 128.762, -74.6762, 0.12 ) }
    dend_55 { pt3dadd( 6.56244, 129.045, -74.9611, 0.12 ) }
    dend_55 { pt3dadd( 6.82496, 129.563, -75.5153, 1.92 ) }
    dend_55 { pt3dadd( 7.26803, 130.586, -76.6739, 2.52 ) }
    dend_55 { pt3dadd( 7.7993, 131.67, -78.0464, 1.44 ) }
    dend_55 { pt3dadd( 8.26156, 132.331, -78.9727, 0.12 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 8/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -5.54201, 44.8014, -25.3829, 0.12 ) }
    dend_53 { pt3dadd( -5.79053, 47.5135, -26.1973, 0.12 ) }
    dend_53 { pt3dadd( -5.9156, 48.6953, -26.5747, 0.6 ) }
    dend_53 { pt3dadd( -5.99151, 49.5981, -26.8723, 0.12 ) }
    dend_53 { pt3dadd( -6.01986, 50.0088, -27.0016, 0.12 ) }
    dend_53 { pt3dadd( -6.05388, 50.5647, -27.1593, 0.12 ) }
    dend_53 { pt3dadd( -6.08642, 51.2317, -27.3297, 0.24 ) }
    dend_53 { pt3dadd( -6.11094, 51.8524, -27.5041, 0.12 ) }
    dend_53 { pt3dadd( -6.13135, 52.3841, -27.7323, 0.12 ) }
    dend_53 { pt3dadd( -6.15904, 53.2621, -28.172, 0.12 ) }
    dend_53 { pt3dadd( -6.17612, 54.1208, -28.6489, 1.32 ) }
    dend_53 { pt3dadd( -6.15572, 54.7002, -28.9864, 1.8 ) }
    dend_53 { pt3dadd( -6.01764, 56.3315, -29.9347, 0.84 ) }
    dend_53 { pt3dadd( -5.91255, 57.3264, -30.6717, 0.12 ) }
    dend_53 { pt3dadd( -5.85905, 57.6365, -30.9336, 0.12 ) }
    dend_53 { pt3dadd( -5.62336, 58.6064, -31.7742, 1.8 ) }
    dend_53 { pt3dadd( -5.45543, 59.1873, -32.2624, 2.16 ) }
    dend_53 { pt3dadd( -5.27502, 59.7247, -32.7132, 1.8 ) }
    dend_53 { pt3dadd( -4.32734, 62.2071, -34.9984, 0.24 ) }
    dend_53 { pt3dadd( -3.9117, 63.2013, -35.993, 0.24 ) }
    dend_53 { pt3dadd( -3.48536, 64.1983, -37.0141, 0.24 ) }
    dend_53 { pt3dadd( -3.29772, 64.6399, -37.483, 0.24 ) }
    dend_53 { pt3dadd( -2.71199, 66.0897, -39.0888, 2.28 ) }
    dend_53 { pt3dadd( -1.92288, 68.0934, -41.3584, 0.24 ) }
    dend_53 { pt3dadd( -1.79512, 68.4164, -41.7068, 0.24 ) }
    dend_53 { pt3dadd( -1.43798, 69.375, -42.7981, 0.24 ) }
    dend_53 { pt3dadd( -1.04237, 70.4038, -43.9941, 1.44 ) }
    dend_53 { pt3dadd( -0.723087, 71.2623, -44.9191, 1.8 ) }
    dend_53 { pt3dadd( -0.340528, 72.3787, -45.9024, 0.12 ) }
    dend_53 { pt3dadd( -0.0590222, 73.2622, -46.525, 0.12 ) }
    dend_53 { pt3dadd( 0.0834219, 73.7278, -46.8529, 0.96 ) }
    dend_53 { pt3dadd( 0.21101, 74.1198, -47.1213, 1.2 ) }
    dend_53 { pt3dadd( 0.54196, 75.1293, -47.7273, 0.12 ) }
    dend_53 { pt3dadd( 0.809251, 75.9236, -48.1821, 0.12 ) }
    dend_53 { pt3dadd( 0.969893, 76.3863, -48.4672, 0.36 ) }
    dend_53 { pt3dadd( 1.27745, 77.361, -49.1904, 0.12 ) }
    dend_53 { pt3dadd( 1.40259, 77.8398, -49.5474, 0.12 ) }
    dend_53 { pt3dadd( 1.58896, 78.6772, -50.1673, 0.48 ) }
    dend_53 { pt3dadd( 1.80379, 79.7824, -51.01, 0.48 ) }
    dend_53 { pt3dadd( 2.00217, 80.9476, -51.8933, 2.28 ) }
    dend_53 { pt3dadd( 2.30612, 82.8661, -53.2867, 0.12 ) }
    dend_53 { pt3dadd( 2.44046, 83.8626, -53.9602, 0.12 ) }
    dend_53 { pt3dadd( 2.49778, 84.4152, -54.3361, 0.12 ) }
    dend_53 { pt3dadd( 2.57112, 85.4662, -55.0205, 1.08 ) }
    dend_53 { pt3dadd( 2.57172, 86.0255, -55.391, 1.2 ) }
    dend_53 { pt3dadd( 2.44385, 86.9796, -56.1896, 0.12 ) }
    dend_53 { pt3dadd( 2.25176, 87.706, -56.8915, 0.12 ) }
    dend_53 { pt3dadd( 1.91745, 88.8008, -58.0675, 1.44 ) }
    dend_53 { pt3dadd( 1.79287, 89.181, -58.4859, 2.04 ) }
    dend_53 { pt3dadd( 1.53841, 89.8759, -59.2426, 1.68 ) }
    dend_53 { pt3dadd( 0.683973, 91.9858, -61.5876, 0.24 ) }
    dend_53 { pt3dadd( 0.372493, 92.6769, -62.3711, 0.24 ) }
    dend_53 { pt3dadd( 0.0291564, 93.4099, -63.2083, 0.12 ) }
    dend_53 { pt3dadd( -0.303984, 94.1098, -63.9407, 0.72 ) }
    dend_53 { pt3dadd( -0.450342, 94.4486, -64.2661, 0.72 ) }
    dend_53 { pt3dadd( -0.588405, 94.7662, -64.5256, 0.12 ) }
    dend_53 { pt3dadd( -1.04569, 95.8397, -65.2374, 0.12 ) }
    dend_53 { pt3dadd( -1.3062, 96.3115, -65.6008, 0.12 ) }
    dend_53 { pt3dadd( -1.9172, 97.162, -66.2845, 1.68 ) }
    dend_53 { pt3dadd( -2.0548, 97.3439, -66.4343, 1.68 ) }
    dend_53 { pt3dadd( -3.14502, 98.9233, -67.7839, 0.12 ) }
    dend_53 { pt3dadd( -3.49314, 99.4989, -68.2505, 0.12 ) }
    dend_53 { pt3dadd( -3.75986, 100.053, -68.7079, 0.24 ) }
    dend_53 { pt3dadd( -4.0029, 100.668, -69.2124, 0.24 ) }
    dend_53 { pt3dadd( -4.33364, 101.699, -70.0329, 0.24 ) }
    dend_53 { pt3dadd( -4.61705, 102.777, -70.7729, 1.56 ) }
    dend_53 { pt3dadd( -4.73841, 103.462, -71.1815, 2.04 ) }
    dend_53 { pt3dadd( -5.01098, 105.399, -72.2261, 0.36 ) }
    dend_53 { pt3dadd( -5.06607, 105.994, -72.5212, 0.48 ) }
    dend_53 { pt3dadd( -5.12624, 106.906, -72.9938, 0.48 ) }
    dend_53 { pt3dadd( -5.21818, 107.905, -73.4785, 0.48 ) }
    dend_53 { pt3dadd( -5.28651, 108.416, -73.7228, 0.24 ) }
    dend_53 { pt3dadd( -5.39669, 108.99, -74.0519, 0.24 ) }
    dend_53 { pt3dadd( -5.59245, 109.801, -74.5796, 0.24 ) }
    dend_53 { pt3dadd( -5.93188, 110.909, -75.467, 1.08 ) }
    dend_53 { pt3dadd( -6.13102, 111.386, -75.9215, 1.08 ) }
    dend_53 { pt3dadd( -6.54412, 111.99, -76.7007, 0.36 ) }
    dend_53 { pt3dadd( -7.14695, 112.611, -77.6387, 0.36 ) }
    dend_53 { pt3dadd( -7.37116, 112.782, -77.9355, 0.36 ) }
    dend_53 { pt3dadd( -7.63614, 112.944, -78.235, 0.36 ) }
    dend_53 { pt3dadd( -8.00086, 113.145, -78.6132, 0.36 ) }
    dend_53 { pt3dadd( -9.58515, 114.007, -80.21, 1.68 ) }
    dend_53 { pt3dadd( -9.87994, 114.166, -80.4819, 2.4 ) }
    dend_53 { pt3dadd( -10.0926, 114.286, -80.6652, 2.64 ) }
    dend_53 { pt3dadd( -12.3386, 115.561, -82.512, 0.6 ) }
    dend_53 { pt3dadd( -12.6229, 115.711, -82.7254, 0.12 ) }
    dend_53 { pt3dadd( -13.002, 115.902, -82.962, 0.12 ) }
    dend_53 { pt3dadd( -13.4666, 116.109, -83.189, 0.6 ) }
    dend_53 { pt3dadd( -13.9496, 116.313, -83.4222, 0.12 ) }
    dend_53 { pt3dadd( -14.4851, 116.524, -83.6246, 0.12 ) }
    dend_53 { pt3dadd( -15.3466, 116.791, -83.7798, 1.44 ) }
    dend_53 { pt3dadd( -16.0608, 117.013, -83.9017, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_53 { pt3dadd( -17.8468, 117.635, -84.162, 0.12 ) }
    dend_53 { pt3dadd( -18.5678, 117.942, -84.223, 0.12 ) }
    dend_53 { pt3dadd( -19.4166, 118.368, -84.228, 0.84 ) }
    dend_53 { pt3dadd( -19.7511, 118.561, -84.2313, 0.84 ) }
    dend_53 { pt3dadd( -19.9834, 118.704, -84.227, 0.12 ) }
    dend_53 { pt3dadd( -20.5126, 119.004, -84.1849, 0.12 ) }
    dend_53 { pt3dadd( -21.2636, 119.409, -84.0553, 1.44 ) }
    dend_53 { pt3dadd( -21.5311, 119.541, -84.0203, 1.56 ) }
    dend_53 { pt3dadd( -22.6203, 120.081, -83.9321, 0.12 ) }
    dend_53 { pt3dadd( -23.4425, 120.5, -83.8654, 0.12 ) }
    dend_53 { pt3dadd( -23.947, 120.752, -83.8236, 1.08 ) }
    dend_53 { pt3dadd( -24.5666, 121.037, -83.8054, 1.92 ) }
    dend_53 { pt3dadd( -25.0828, 121.26, -83.8265, 1.56 ) }
    dend_53 { pt3dadd( -26.0535, 121.68, -83.921, 0.12 ) }
    dend_53 { pt3dadd( -26.4473, 121.847, -83.9761, 0.12 ) }
    dend_53 { pt3dadd( -26.6932, 121.953, -84.0284, 0.48 ) }
    dend_53 { pt3dadd( -27.743, 122.423, -84.3251, 0.48 ) }
    dend_53 { pt3dadd( -28.2006, 122.64, -84.4654, 0.12 ) }
    dend_53 { pt3dadd( -28.8709, 123.022, -84.5471, 0.12 ) }
    dend_53 { pt3dadd( -29.1674, 123.272, -84.7013, 0.84 ) }
    dend_53 { pt3dadd( -29.4521, 123.526, -84.9032, 1.2 ) }
    dend_53 { pt3dadd( -29.9129, 123.945, -85.1641, 0.12 ) }
    dend_53 { pt3dadd( -30.5472, 124.43, -85.1209, 0.12 ) }
    dend_53 { pt3dadd( -32.0147, 125.019, -83.6068, 2.88 ) }
    dend_53 { pt3dadd( -34.753, 125.524, -79.0981, 0.96 ) }
    dend_53 { pt3dadd( -35.1767, 125.494, -78.0681, 0.96 ) }
    dend_53 { pt3dadd( -37.0882, 124.792, -71.7465, 0.12 ) }
    dend_53 { pt3dadd( -37.2856, 124.661, -70.9205, 0.12 ) }
    dend_53 { pt3dadd( -37.4125, 124.523, -70.2504, 0.96 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 29/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -5.54201, 44.8014, -25.3829, 0.48 ) }
    dend_50 { pt3dadd( -7.57621, 45.3371, -25.7427, 0.48 ) }
    dend_50 { pt3dadd( -8.5212, 45.6659, -26.2348, 0.48 ) }
    dend_50 { pt3dadd( -9.7806, 46.2765, -27.3119, 0.48 ) }
    dend_50 { pt3dadd( -10.4107, 46.6378, -27.9034, 2.16 ) }
    dend_50 { pt3dadd( -10.7178, 46.8341, -28.2095, 2.52 ) }
    dend_50 { pt3dadd( -11.1391, 47.1254, -28.6462, 2.52 ) }
    dend_50 { pt3dadd( -12.8721, 48.4739, -30.874, 1.44 ) }
    dend_50 { pt3dadd( -13.9863, 49.3226, -32.3628, 0.36 ) }
    dend_50 { pt3dadd( -14.402, 49.6084, -32.9082, 0.48 ) }
    dend_50 { pt3dadd( -15.2006, 50.0851, -33.9258, 0.6 ) }
    dend_50 { pt3dadd( -16.1088, 50.4929, -35.2025, 0.6 ) }
    dend_50 { pt3dadd( -17.289, 50.9282, -36.9843, 0.6 ) }
    dend_50 { pt3dadd( -17.8063, 51.0909, -37.7595, 1.92 ) }
    dend_50 { pt3dadd( -18.2567, 51.2079, -38.4242, 2.64 ) }
    dend_50 { pt3dadd( -18.7057, 51.3124, -39.084, 2.64 ) }
    dend_50 { pt3dadd( -22.7978, 52.1751, -44.9927, 1.68 ) }
    dend_50 { pt3dadd( -24.61, 52.5551, -47.545, 0.72 ) }
    dend_50 { pt3dadd( -24.957, 52.6372, -48.0154, 1.56 ) }
    dend_50 { pt3dadd( -25.6825, 52.8274, -48.974, 1.92 ) }
    dend_50 { pt3dadd( -26.0088, 52.92, -49.3786, 2.28 ) }
    dend_50 { pt3dadd( -26.2826, 53.0045, -49.6823, 2.28 ) }
    dend_50 { pt3dadd( -28.9065, 53.882, -51.5375, 0.24 ) }
    dend_50 { pt3dadd( -29.346, 54.0188, -51.8279, 0.12 ) }
    dend_50 { pt3dadd( -29.666, 54.1059, -52.0815, 0.12 ) }
    dend_50 { pt3dadd( -30.2413, 54.2477, -52.5789, 0.12 ) }
    dend_50 { pt3dadd( -31.3021, 54.4751, -53.5135, 1.32 ) }
    dend_50 { pt3dadd( -31.804, 54.5626, -53.9644, 2.16 ) }
    dend_50 { pt3dadd( -32.6213, 54.6648, -54.6792, 2.4 ) }
    dend_50 { pt3dadd( -34.9848, 54.8541, -56.7343, 0.72 ) }
    dend_50 { pt3dadd( -35.6441, 54.8762, -57.3003, 0.84 ) }
    dend_50 { pt3dadd( -36.0612, 54.8666, -57.6583, 1.08 ) }
    dend_50 { pt3dadd( -37.3304, 54.7723, -58.6774, 0.48 ) }
    dend_50 { pt3dadd( -37.6459, 54.74, -58.9145, 0.12 ) }
    dend_50 { pt3dadd( -38.2626, 54.6555, -59.3271, 0.48 ) }
    dend_50 { pt3dadd( -38.4851, 54.6132, -59.4398, 0.48 ) }
    dend_50 { pt3dadd( -39.4745, 54.3874, -59.933, 0.12 ) }
    dend_50 { pt3dadd( -39.8404, 54.2914, -60.1094, 0.12 ) }
    dend_50 { pt3dadd( -40.3217, 54.1513, -60.3593, 0.12 ) }
    dend_50 { pt3dadd( -40.6261, 54.0771, -60.6015, 0.12 ) }
    dend_50 { pt3dadd( -40.965, 54.0089, -60.9286, 0.12 ) }
    dend_50 { pt3dadd( -41.2785, 53.9502, -61.2141, 0.48 ) }
    dend_50 { pt3dadd( -41.417, 53.9181, -61.3351, 0.48 ) }
    dend_50 { pt3dadd( -42.4639, 53.5851, -62.2338, 0.48 ) }
    dend_50 { pt3dadd( -43.1036, 53.315, -62.7549, 0.12 ) }
    dend_50 { pt3dadd( -43.3313, 53.2233, -62.9188, 0.12 ) }
    dend_50 { pt3dadd( -43.8941, 52.9698, -63.2715, 0.12 ) }
    dend_50 { pt3dadd( -44.8782, 52.5014, -63.8899, 1.8 ) }
    dend_50 { pt3dadd( -45.5364, 52.2091, -64.2465, 2.76 ) }
    dend_50 { pt3dadd( -45.9411, 52.0195, -64.4274, 2.76 ) }
    dend_50 { pt3dadd( -46.6812, 51.6463, -64.7391, 1.92 ) }
    dend_50 { pt3dadd( -47.4583, 51.2189, -65.0809, 1.92 ) }
    dend_50 { pt3dadd( -49.2687, 50.1113, -66.016, 0.12 ) }
    dend_50 { pt3dadd( -49.9928, 49.6235, -66.4104, 0.12 ) }
    dend_50 { pt3dadd( -50.3735, 49.3483, -66.6636, 0.12 ) }
    dend_50 { pt3dadd( -50.7512, 49.0532, -66.9213, 0.48 ) }
    dend_50 { pt3dadd( -51.0969, 48.7603, -67.1703, 0.6 ) }
    dend_50 { pt3dadd( -51.8153, 48.1749, -67.6729, 0.12 ) }
    dend_50 { pt3dadd( -52.078, 47.9188, -67.8491, 0.12 ) }
    dend_50 { pt3dadd( -53.292, 46.657, -68.776, 2.4 ) }
    dend_50 { pt3dadd( -53.9566, 46.0543, -69.2839, 3.25 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 90/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -14.8016, -195.109, -35.7817, 0.12 ) }
    dend_45 { pt3dadd( -15.0207, -196.105, -36.1153, 0.12 ) }
    dend_45 { pt3dadd( -15.1499, -196.421, -36.1985, 0.12 ) }
    dend_45 { pt3dadd( -15.3485, -196.777, -36.2456, 0.36 ) }
    dend_45 { pt3dadd( -15.6925, -197.326, -36.2795, 0.48 ) }
    dend_45 { pt3dadd( -15.8655, -197.592, -36.288, 0.12 ) }
    dend_45 { pt3dadd( -16.1123, -197.999, -36.2955, 0.12 ) }
    dend_45 { pt3dadd( -16.5206, -198.622, -36.2434, 0.36 ) }
    dend_45 { pt3dadd( -16.8248, -199.024, -36.0863, 0.12 ) }
    dend_45 { pt3dadd( -17.1174, -199.329, -35.8982, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( -17.3711, -199.528, -35.7493, 0.12 ) }
    dend_45 { pt3dadd( -17.7713, -199.831, -35.495, 0.12 ) }
    dend_45 { pt3dadd( -18.3911, -200.277, -35.076, 0.36 ) }
    dend_45 { pt3dadd( -19.3726, -200.921, -34.4099, 0.12 ) }
    dend_45 { pt3dadd( -20.0543, -201.312, -33.9621, 0.12 ) }
    dend_45 { pt3dadd( -21.113, -201.783, -33.26, 0.12 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 6/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -14.8016, -195.109, -35.7817, 0.12 ) }
    dend_42 { pt3dadd( -14.3009, -195.413, -36.3608, 0.12 ) }
    dend_42 { pt3dadd( -13.9142, -195.638, -36.857, 0.12 ) }
    dend_42 { pt3dadd( -13.4928, -195.886, -37.4028, 0.48 ) }
    dend_42 { pt3dadd( -13.1761, -196.074, -37.8141, 0.12 ) }
    dend_42 { pt3dadd( -12.5529, -196.444, -38.6231, 0.12 ) }
    dend_42 { pt3dadd( -11.9041, -196.829, -39.4653, 0.12 ) }
    dend_42 { pt3dadd( -11.2016, -197.222, -40.4805, 2.52 ) }
    dend_42 { pt3dadd( -11.0462, -197.307, -40.7194, 2.28 ) }
    dend_42 { pt3dadd( -11.0266, -197.318, -40.749, 2.28 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 16/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 29.5461, -22.337, -27.4957, 0.48 ) }
    dend_34 { pt3dadd( 29.4084, -24.2377, -28.7831, 0.48 ) }
    dend_34 { pt3dadd( 29.4018, -24.5347, -28.9525, 0.36 ) }
    dend_34 { pt3dadd( 29.4054, -24.85, -29.1128, 0.36 ) }
    dend_34 { pt3dadd( 29.4165, -25.2067, -29.2761, 0.84 ) }
    dend_34 { pt3dadd( 29.445, -25.7692, -29.5146, 1.32 ) }
    dend_34 { pt3dadd( 29.5237, -26.5104, -29.8055, 0.48 ) }
    dend_34 { pt3dadd( 29.6618, -27.0813, -29.9321, 0.36 ) }
    dend_34 { pt3dadd( 29.738, -27.3375, -29.9861, 0.36 ) }
    dend_34 { pt3dadd( 29.8533, -27.6632, -30.0614, 0.48 ) }
    dend_34 { pt3dadd( 29.9884, -28.0006, -30.1411, 0.36 ) }
    dend_34 { pt3dadd( 30.2666, -28.6371, -30.3017, 0.36 ) }
    dend_34 { pt3dadd( 30.4246, -28.9933, -30.3964, 0.36 ) }
    dend_34 { pt3dadd( 30.532, -29.3186, -30.4846, 0.48 ) }
    dend_34 { pt3dadd( 30.6402, -29.7259, -30.5974, 0.36 ) }
    dend_34 { pt3dadd( 30.7253, -30.1445, -30.7115, 0.36 ) }
    dend_34 { pt3dadd( 30.7513, -30.3137, -30.7558, 0.36 ) }
    dend_34 { pt3dadd( 30.9183, -31.8111, -31.1326, 3.49 ) }
    dend_34 { pt3dadd( 31.0527, -33.2396, -31.4609, 0.12 ) }
    dend_34 { pt3dadd( 31.0743, -33.491, -31.5144, 0.12 ) }
    dend_34 { pt3dadd( 31.1054, -33.8787, -31.5859, 0.36 ) }
    dend_34 { pt3dadd( 31.1149, -34.0117, -31.6088, 0.12 ) }
    dend_34 { pt3dadd( 31.1368, -34.4788, -31.6742, 0.12 ) }
    dend_34 { pt3dadd( 31.1258, -34.9315, -31.7036, 0.6 ) }
    dend_34 { pt3dadd( 31.1169, -35.204, -31.7063, 0.6 ) }
    dend_34 { pt3dadd( 31.0802, -35.6534, -31.7118, 0.36 ) }
    dend_34 { pt3dadd( 31.059, -35.8291, -31.7189, 0.24 ) }
    dend_34 { pt3dadd( 31.0126, -36.1092, -31.7358, 0.24 ) }
    dend_34 { pt3dadd( 30.9422, -36.4194, -31.7574, 1.08 ) }
    dend_34 { pt3dadd( 30.7767, -37.12, -31.8135, 1.8 ) }
    dend_34 { pt3dadd( 30.6532, -37.6578, -31.8365, 1.56 ) }
    dend_34 { pt3dadd( 30.5562, -38.1404, -31.8235, 0.96 ) }
    dend_34 { pt3dadd( 30.5109, -38.5017, -31.8048, 0.24 ) }
    dend_34 { pt3dadd( 30.4581, -39.205, -31.7621, 0.24 ) }
    dend_34 { pt3dadd( 30.4457, -39.5613, -31.7372, 0.24 ) }
    dend_34 { pt3dadd( 30.4427, -40.236, -31.6847, 0.24 ) }
    dend_34 { pt3dadd( 30.4673, -41.5963, -31.5709, 3.25 ) }
    dend_34 { pt3dadd( 30.5239, -42.8521, -31.4692, 0.24 ) }
    dend_34 { pt3dadd( 30.5431, -43.1211, -31.4508, 0.24 ) }
    dend_34 { pt3dadd( 30.6268, -43.999, -31.4101, 0.24 ) }
    dend_34 { pt3dadd( 30.6746, -44.4311, -31.4031, 0.48 ) }
    dend_34 { pt3dadd( 30.6993, -44.6061, -31.4101, 0.12 ) }
    dend_34 { pt3dadd( 30.9275, -45.8174, -31.5006, 0.12 ) }
    dend_34 { pt3dadd( 30.9538, -45.9393, -31.5098, 0.84 ) }
    dend_34 { pt3dadd( 31.0558, -46.373, -31.5444, 1.08 ) }
    dend_34 { pt3dadd( 31.177, -46.8723, -31.5872, 0.12 ) }
    dend_34 { pt3dadd( 31.3869, -47.7464, -31.6618, 0.12 ) }
    dend_34 { pt3dadd( 31.6136, -48.7181, -31.7434, 2.4 ) }
    dend_34 { pt3dadd( 31.8445, -49.7592, -31.8287, 0.24 ) }
    dend_34 { pt3dadd( 31.9295, -50.1836, -31.8693, 0.24 ) }
    dend_34 { pt3dadd( 32.0171, -50.7041, -31.9239, 0.36 ) }
    dend_34 { pt3dadd( 32.0521, -50.9795, -31.9572, 0.24 ) }
    dend_34 { pt3dadd( 32.0682, -51.154, -31.981, 0.24 ) }
    dend_34 { pt3dadd( 32.0804, -51.4067, -32.0312, 0.24 ) }
    dend_34 { pt3dadd( 32.089, -51.894, -32.1619, 0.24 ) }
    dend_34 { pt3dadd( 32.1077, -52.1999, -32.2496, 0.84 ) }
    dend_34 { pt3dadd( 32.1416, -52.4985, -32.3364, 0.84 ) }
    dend_34 { pt3dadd( 32.1817, -52.7673, -32.4021, 0.84 ) }
    dend_34 { pt3dadd( 32.2531, -53.1578, -32.4722, 0.12 ) }
    dend_34 { pt3dadd( 32.2885, -53.3573, -32.4986, 0.12 ) }
    dend_34 { pt3dadd( 32.4017, -53.9329, -32.5502, 0.12 ) }
    dend_34 { pt3dadd( 32.4587, -54.2106, -32.5725, 1.32 ) }
    dend_34 { pt3dadd( 32.5707, -54.8168, -32.6401, 1.68 ) }
    dend_34 { pt3dadd( 32.7032, -55.5927, -32.7394, 1.2 ) }
    dend_34 { pt3dadd( 32.7768, -56.0533, -32.8483, 0.12 ) }
    dend_34 { pt3dadd( 32.8, -56.2281, -32.9024, 0.12 ) }
    dend_34 { pt3dadd( 32.8493, -56.7259, -33.0793, 0.12 ) }
    dend_34 { pt3dadd( 32.9008, -57.4465, -33.3524, 1.32 ) }
    dend_34 { pt3dadd( 32.9254, -57.9317, -33.5466, 2.04 ) }
    dend_34 { pt3dadd( 33.0026, -59.2377, -34.0669, 0.36 ) }
    dend_34 { pt3dadd( 33.0581, -59.9801, -34.3413, 0.36 ) }
    dend_34 { pt3dadd( 33.0976, -60.5643, -34.518, 0.36 ) }
    dend_34 { pt3dadd( 33.1228, -60.8737, -34.5905, 0.36 ) }
    dend_34 { pt3dadd( 33.1524, -61.2153, -34.6395, 0.36 ) }
    dend_34 { pt3dadd( 33.2163, -61.926, -34.6899, 1.92 ) }
    dend_34 { pt3dadd( 33.2712, -62.4537, -34.6789, 2.52 ) }
    dend_34 { pt3dadd( 33.3933, -63.4313, -34.6547, 0.24 ) }
    dend_34 { pt3dadd( 33.4612, -63.9001, -34.6061, 0.24 ) }
    dend_34 { pt3dadd( 33.5327, -64.3617, -34.5371, 0.84 ) }
    dend_34 { pt3dadd( 33.6147, -64.8771, -34.4415, 1.08 ) }
    dend_34 { pt3dadd( 33.6986, -65.4053, -34.3035, 0.36 ) }
    dend_34 { pt3dadd( 33.8275, -66.0671, -34.0957, 0.36 ) }
    dend_34 { pt3dadd( 34.0963, -67.2003, -33.6997, 1.44 ) }
    dend_34 { pt3dadd( 34.2268, -67.6961, -33.5131, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( 34.3324, -68.0528, -33.3789, 1.56 ) }
    dend_34 { pt3dadd( 34.5863, -68.8637, -33.033, 0.12 ) }
    dend_34 { pt3dadd( 34.7114, -69.2526, -32.864, 0.12 ) }
    dend_34 { pt3dadd( 34.8403, -69.645, -32.702, 0.12 ) }
    dend_34 { pt3dadd( 34.877, -69.7579, -32.6628, 0.48 ) }
    dend_34 { pt3dadd( 35.0858, -70.3932, -32.4375, 0.84 ) }
    dend_34 { pt3dadd( 35.4693, -71.626, -32.0349, 0.12 ) }
    dend_34 { pt3dadd( 35.624, -72.1366, -31.8923, 0.12 ) }
    dend_34 { pt3dadd( 35.6929, -72.375, -31.822, 0.24 ) }
    dend_34 { pt3dadd( 35.7912, -72.7115, -31.7218, 0.24 ) }
    dend_34 { pt3dadd( 35.8658, -72.9712, -31.6498, 0.24 ) }
    dend_34 { pt3dadd( 35.9551, -73.2962, -31.5701, 0.48 ) }
    dend_34 { pt3dadd( 36.0014, -73.4864, -31.5423, 0.6 ) }
    dend_34 { pt3dadd( 36.0738, -73.8052, -31.4916, 0.12 ) }
    dend_34 { pt3dadd( 36.1331, -74.0675, -31.4466, 0.12 ) }
    dend_34 { pt3dadd( 36.1888, -74.3226, -31.3995, 0.12 ) }
    dend_34 { pt3dadd( 36.3778, -75.2211, -31.2276, 2.4 ) }
    dend_34 { pt3dadd( 36.4833, -75.7319, -31.1301, 2.88 ) }
    dend_34 { pt3dadd( 36.5802, -76.2458, -31.0402, 2.4 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 19/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 29.5461, -22.337, -27.4957, 0.12 ) }
    dend_29 { pt3dadd( 30.5523, -22.4336, -26.3421, 0.12 ) }
    dend_29 { pt3dadd( 30.958, -22.4262, -25.9022, 0.12 ) }
    dend_29 { pt3dadd( 31.5709, -22.3631, -25.2996, 0.72 ) }
    dend_29 { pt3dadd( 32.8442, -22.1353, -24.1672, 0.72 ) }
    dend_29 { pt3dadd( 33.3968, -21.9989, -23.7533, 0.12 ) }
    dend_29 { pt3dadd( 33.8357, -21.8796, -23.4831, 0.12 ) }
    dend_29 { pt3dadd( 34.5519, -21.6078, -23.0741, 1.68 ) }
    dend_29 { pt3dadd( 35.0346, -21.4077, -22.8551, 2.28 ) }
    dend_29 { pt3dadd( 35.8657, -21.0563, -22.6024, 1.92 ) }
    dend_29 { pt3dadd( 36.8675, -20.6829, -22.2926, 0.36 ) }
    dend_29 { pt3dadd( 37.7295, -20.4294, -21.96, 0.36 ) }
    dend_29 { pt3dadd( 38.4256, -20.3097, -21.5545, 0.6 ) }
    dend_29 { pt3dadd( 38.7438, -20.2887, -21.2568, 0.36 ) }
    dend_29 { pt3dadd( 39.0339, -20.2901, -20.9311, 0.36 ) }
    dend_29 { pt3dadd( 40.5364, -20.3671, -19.084, 0.36 ) }
    dend_29 { pt3dadd( 40.8033, -20.3909, -18.7397, 1.2 ) }
    dend_29 { pt3dadd( 41.6798, -20.486, -17.532, 1.92 ) }
    dend_29 { pt3dadd( 43.0077, -20.6514, -15.6868, 0.24 ) }
    dend_29 { pt3dadd( 43.6832, -20.7286, -14.74, 2.16 ) }
    dend_29 { pt3dadd( 43.9376, -20.7517, -14.4026, 3.0 ) }
    dend_29 { pt3dadd( 44.2743, -20.7486, -14.059, 3.0 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 41/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -28.9828, -281.903, -46.6255, 0.12 ) }
    dend_23 { pt3dadd( -28.25, -281.78, -47.6177, 0.12 ) }
    dend_23 { pt3dadd( -27.8955, -281.759, -48.039, 0.12 ) }
    dend_23 { pt3dadd( -27.6952, -281.763, -48.2606, 0.12 ) }
    dend_23 { pt3dadd( -27.0481, -281.789, -48.9388, 0.6 ) }
    dend_23 { pt3dadd( -26.7677, -281.8, -49.2328, 0.6 ) }
    dend_23 { pt3dadd( -26.2561, -281.821, -49.7689, 0.12 ) }
    dend_23 { pt3dadd( -25.4353, -281.906, -50.5153, 0.12 ) }
    dend_23 { pt3dadd( -25.1671, -281.949, -50.7669, 0.84 ) }
    dend_23 { pt3dadd( -24.9501, -281.993, -50.9675, 0.84 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -28.9828, -281.903, -46.6255, 1.56 ) }
    dend_18 { pt3dadd( -28.8593, -282.563, -46.6987, 1.56 ) }
    dend_18 { pt3dadd( -28.6881, -283.477, -46.8002, 2.28 ) }
    dend_18 { pt3dadd( -28.5871, -284.017, -46.8601, 2.64 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 15.37, 90.9093, 12.3442, 0.48 ) }
    dend_12 { pt3dadd( 15.9981, 93.3071, 13.0758, 0.48 ) }
    dend_12 { pt3dadd( 16.1825, 94.1558, 13.2734, 0.36 ) }
    dend_12 { pt3dadd( 16.3318, 95.0281, 13.4313, 0.36 ) }
    dend_12 { pt3dadd( 16.4372, 95.9318, 13.5589, 0.36 ) }
    dend_12 { pt3dadd( 16.4866, 96.7023, 13.6528, 0.36 ) }
    dend_12 { pt3dadd( 16.4928, 97.1442, 13.6979, 0.72 ) }
    dend_12 { pt3dadd( 16.4468, 97.6045, 13.6635, 0.72 ) }
    dend_12 { pt3dadd( 16.3685, 98.1623, 13.6254, 0.36 ) }
    dend_12 { pt3dadd( 16.2491, 98.8537, 13.5865, 0.36 ) }
    dend_12 { pt3dadd( 16.1548, 99.4681, 13.5638, 1.2 ) }
    dend_12 { pt3dadd( 16.0699, 100.169, 13.5533, 1.8 ) }
    dend_12 { pt3dadd( 15.9729, 101.141, 13.5756, 1.8 ) }
    dend_12 { pt3dadd( 15.8668, 102.486, 13.6518, 0.36 ) }
    dend_12 { pt3dadd( 15.8444, 102.927, 13.6563, 0.36 ) }
    dend_12 { pt3dadd( 15.8269, 103.845, 13.6584, 0.72 ) }
    dend_12 { pt3dadd( 15.8332, 104.295, 13.6569, 0.84 ) }
    dend_12 { pt3dadd( 15.8612, 105.279, 13.6635, 0.36 ) }
    dend_12 { pt3dadd( 15.8841, 106.065, 13.6792, 1.08 ) }
    dend_12 { pt3dadd( 15.9243, 107.725, 13.6597, 2.64 ) }
    dend_12 { pt3dadd( 15.9479, 108.804, 13.617, 3.61 ) }
    dend_12 { pt3dadd( 15.9541, 109.304, 13.5678, 3.61 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 77/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 15.37, 90.9093, 12.3442, 0.6 ) }
    dend_9 { pt3dadd( 14.9754, 92.3728, 12.5131, 0.6 ) }
    dend_9 { pt3dadd( 14.7766, 93.3787, 12.5229, 0.6 ) }
    dend_9 { pt3dadd( 14.5263, 94.7868, 12.3822, 0.6 ) }
    dend_9 { pt3dadd( 14.3851, 95.4145, 12.2202, 0.6 ) }
    dend_9 { pt3dadd( 14.146, 96.3268, 11.9549, 1.68 ) }
    dend_9 { pt3dadd( 13.8817, 97.225, 11.6877, 2.04 ) }
    dend_9 { pt3dadd( 13.7098, 97.8073, 11.4407, 1.8 ) }
    dend_9 { pt3dadd( 13.41, 98.5183, 11.072, 2.04 ) }
    dend_9 { pt3dadd( 12.6118, 99.681, 10.4399, 0.48 ) }
    dend_9 { pt3dadd( 12.1162, 100.206, 10.2242, 0.48 ) }
    dend_9 { pt3dadd( 11.8973, 100.387, 10.1894, 0.72 ) }
    dend_9 { pt3dadd( 11.3864, 100.787, 10.1733, 0.96 ) }
    dend_9 { pt3dadd( 10.7079, 101.321, 10.177, 0.72 ) }
    dend_9 { pt3dadd( 10.1646, 101.785, 10.2035, 1.32 ) }
    dend_9 { pt3dadd( 9.70397, 102.251, 10.2278, 1.8 ) }
    dend_9 { pt3dadd( 9.06624, 103.013, 10.2248, 1.8 ) }
    dend_9 { pt3dadd( 8.60215, 103.667, 10.2197, 0.96 ) }
    dend_9 { pt3dadd( 8.13244, 104.41, 10.1851, 0.72 ) }
    dend_9 { pt3dadd( 7.79231, 104.968, 10.1401, 0.84 ) }
    dend_9 { pt3dadd( 7.12712, 106.0, 9.99328, 1.56 ) }
    dend_9 { pt3dadd( 6.75951, 106.539, 9.8835, 2.52 ) }
    dend_9 { pt3dadd( 6.42853, 106.998, 9.77561, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_9 { pt3dadd( 5.48085, 108.214, 9.49119, 2.4 ) }
    dend_9 { pt3dadd( 4.64724, 109.215, 9.24723, 1.56 ) }
    dend_9 { pt3dadd( 3.99196, 109.963, 9.03876, 0.84 ) }
    dend_9 { pt3dadd( 3.5033, 110.5, 8.88044, 0.48 ) }
    dend_9 { pt3dadd( 3.30814, 110.717, 8.80842, 0.24 ) }
    dend_9 { pt3dadd( 2.77735, 111.311, 8.62005, 0.24 ) }
    dend_9 { pt3dadd( 2.3201, 111.801, 8.35462, 0.48 ) }
    dend_9 { pt3dadd( 2.0277, 112.112, 8.11283, 0.12 ) }
    dend_9 { pt3dadd( 1.76753, 112.409, 7.8535, 0.12 ) }
    dend_9 { pt3dadd( 1.10591, 113.177, 7.15354, 1.2 ) }
    dend_9 { pt3dadd( 0.747262, 113.604, 6.76585, 1.56 ) }
    dend_9 { pt3dadd( -0.968223, 115.689, 4.9062, 0.36 ) }
    dend_9 { pt3dadd( -1.48549, 116.359, 4.3714, 0.12 ) }
    dend_9 { pt3dadd( -2.31844, 117.528, 3.60358, 2.64 ) }
    dend_9 { pt3dadd( -2.54752, 117.89, 3.42662, 3.0 ) }
    dend_9 { pt3dadd( -2.84449, 118.486, 3.36436, 2.76 ) }
    dend_9 { pt3dadd( -3.60112, 120.326, 3.84476, 0.48 ) }
    dend_9 { pt3dadd( -4.84058, 123.757, 5.55906, 0.48 ) }
    dend_9 { pt3dadd( -5.12814, 124.503, 5.81466, 0.48 ) }
    dend_9 { pt3dadd( -5.33936, 125.015, 5.72215, 0.48 ) }
    dend_9 { pt3dadd( -5.56737, 125.61, 5.35875, 0.36 ) }
    dend_9 { pt3dadd( -5.95335, 126.7, 4.40551, 0.36 ) }
    dend_9 { pt3dadd( -6.27323, 127.791, 3.26479, 0.36 ) }
    dend_9 { pt3dadd( -6.61423, 129.299, 1.68238, 2.16 ) }
    dend_9 { pt3dadd( -6.68928, 129.861, 1.07728, 3.0 ) }
    dend_9 { pt3dadd( -6.70087, 130.112, 0.815521, 3.12 ) }
    dend_9 { pt3dadd( -6.64673, 131.213, -0.289616, 3.0 ) }
    dend_9 { pt3dadd( -6.45851, 132.849, -1.83634, 0.12 ) }
    dend_9 { pt3dadd( -6.34944, 133.62, -2.50128, 0.12 ) }
    dend_9 { pt3dadd( -6.31432, 133.851, -2.67904, 0.12 ) }
    dend_9 { pt3dadd( -6.15468, 134.859, -3.49188, 2.52 ) }
    dend_9 { pt3dadd( -6.08, 135.269, -3.8094, 2.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 32/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 20.3248, 59.4411, 9.37333, 0.6 ) }
    dend_7 { pt3dadd( 19.8064, 59.7537, 11.2292, 0.6 ) }
    dend_7 { pt3dadd( 19.605, 59.8752, 11.9502, 0.6 ) }
    dend_7 { pt3dadd( 19.3202, 60.0469, 12.9697, 0.24 ) }
    dend_7 { pt3dadd( 19.1258, 60.1642, 13.6657, 0.24 ) }
    dend_7 { pt3dadd( 18.9206, 60.2879, 14.4003, 0.36 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 38/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 20.3248, 59.4411, 9.37333, 0.6 ) }
    dend_4 { pt3dadd( 21.0962, 60.6034, 9.8184, 0.6 ) }
    dend_4 { pt3dadd( 21.9843, 62.0414, 10.3786, 0.72 ) }
    dend_4 { pt3dadd( 22.5745, 63.0834, 10.7549, 1.08 ) }
    dend_4 { pt3dadd( 22.8867, 63.6884, 10.9339, 1.44 ) }
    dend_4 { pt3dadd( 23.2574, 64.4267, 11.1598, 1.56 ) }
    dend_4 { pt3dadd( 23.8387, 65.6118, 11.5039, 1.44 ) }
    dend_4 { pt3dadd( 24.6014, 67.2818, 11.9676, 1.56 ) }
    dend_4 { pt3dadd( 25.058, 68.3838, 12.2641, 1.68 ) }
    dend_4 { pt3dadd( 25.4423, 69.3328, 12.5879, 1.68 ) }
    dend_4 { pt3dadd( 25.8419, 70.3219, 12.9807, 1.68 ) }
    dend_4 { pt3dadd( 26.4351, 71.8264, 13.6367, 0.6 ) }
    dend_4 { pt3dadd( 26.8593, 72.9694, 14.1631, 0.36 ) }
    dend_4 { pt3dadd( 27.1811, 73.8661, 14.4989, 0.36 ) }
    dend_4 { pt3dadd( 27.6112, 75.0591, 14.8865, 1.44 ) }
    dend_4 { pt3dadd( 27.8467, 75.6861, 15.0529, 1.56 ) }
    dend_4 { pt3dadd( 28.2134, 76.6935, 15.2067, 1.56 ) }
    dend_4 { pt3dadd( 28.3913, 77.1883, 15.2311, 1.44 ) }
    dend_4 { pt3dadd( 29.0463, 78.922, 15.2532, 0.72 ) }
    dend_4 { pt3dadd( 29.3244, 79.5686, 15.2565, 0.6 ) }
    dend_4 { pt3dadd( 29.8227, 80.6083, 15.2663, 1.2 ) }
    dend_4 { pt3dadd( 30.0778, 81.0835, 15.2916, 1.32 ) }
    dend_4 { pt3dadd( 30.7182, 82.1387, 15.3751, 0.84 ) }
    dend_4 { pt3dadd( 31.8624, 83.7536, 15.6191, 1.08 ) }
    dend_4 { pt3dadd( 32.6892, 84.7755, 15.8429, 0.96 ) }
    dend_4 { pt3dadd( 33.3996, 85.5729, 15.9873, 0.48 ) }
    dend_4 { pt3dadd( 33.9805, 86.1999, 16.0761, 0.48 ) }
    dend_4 { pt3dadd( 34.6569, 86.8986, 16.1418, 0.6 ) }
    dend_4 { pt3dadd( 35.6821, 87.9382, 16.174, 0.96 ) }
    dend_4 { pt3dadd( 36.0173, 88.2884, 16.1703, 0.96 ) }
    dend_4 { pt3dadd( 37.2303, 89.6567, 16.1781, 1.68 ) }
    dend_4 { pt3dadd( 38.3557, 91.0448, 16.1893, 2.28 ) }
    dend_4 { pt3dadd( 39.2766, 92.3094, 16.2181, 2.16 ) }
    dend_4 { pt3dadd( 39.8481, 93.2488, 16.258, 1.92 ) }
    dend_4 { pt3dadd( 40.4794, 94.5961, 16.2919, 0.6 ) }
    dend_4 { pt3dadd( 40.9899, 96.1105, 16.3253, 0.6 ) }
    dend_4 { pt3dadd( 41.243, 97.0601, 16.3587, 0.6 ) }
    dend_4 { pt3dadd( 41.4251, 98.0678, 16.3825, 0.48 ) }
    dend_4 { pt3dadd( 41.5622, 99.789, 16.4194, 0.48 ) }
    dend_4 { pt3dadd( 41.5433, 101.429, 16.4133, 0.48 ) }
    dend_4 { pt3dadd( 41.3544, 102.892, 16.292, 1.2 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 79/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -4.91963, 136.71, -21.7147, 0.48 ) }
    dend_60 { pt3dadd( -5.21299, 138.471, -21.3771, 0.48 ) }
    dend_60 { pt3dadd( -5.28859, 139.043, -21.229, 0.12 ) }
    dend_60 { pt3dadd( -5.43385, 140.187, -20.913, 0.36 ) }
    dend_60 { pt3dadd( -5.53325, 141.046, -20.6745, 0.48 ) }
    dend_60 { pt3dadd( -5.58866, 141.671, -20.5021, 0.48 ) }
    dend_60 { pt3dadd( -5.64007, 142.452, -20.2948, 0.48 ) }
    dend_60 { pt3dadd( -5.63469, 143.781, -19.9681, 1.68 ) }
    dend_60 { pt3dadd( -5.60551, 144.173, -19.8928, 2.16 ) }
    dend_60 { pt3dadd( -5.53407, 144.699, -19.8325, 2.4 ) }
    dend_60 { pt3dadd( -5.42637, 145.328, -19.7827, 2.4 ) }
    dend_60 { pt3dadd( -5.28706, 146.09, -19.71, 1.92 ) }
    dend_60 { pt3dadd( -5.07081, 147.234, -19.6012, 0.12 ) }
    dend_60 { pt3dadd( -4.97371, 147.687, -19.5621, 0.24 ) }
    dend_60 { pt3dadd( -4.88921, 148.096, -19.5115, 0.24 ) }
    dend_60 { pt3dadd( -4.72232, 148.979, -19.3719, 0.48 ) }
    dend_60 { pt3dadd( -4.52755, 150.092, -19.1537, 0.48 ) }
    dend_60 { pt3dadd( -4.46789, 150.455, -19.0689, 1.32 ) }
    dend_60 { pt3dadd( -4.36206, 151.075, -18.908, 1.68 ) }
    dend_60 { pt3dadd( -4.24136, 151.688, -18.7831, 1.8 ) }
    dend_60 { pt3dadd( -4.11749, 152.249, -18.703, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_60 { pt3dadd( -4.03171, 152.597, -18.682, 1.92 ) }
    dend_60 { pt3dadd( -3.81075, 153.476, -18.6937, 0.48 ) }
    dend_60 { pt3dadd( -3.53375, 154.554, -18.7716, 0.48 ) }
    dend_60 { pt3dadd( -3.30566, 155.5, -18.8647, 0.72 ) }
    dend_60 { pt3dadd( -3.07622, 156.53, -18.957, 0.72 ) }
    dend_60 { pt3dadd( -2.83615, 157.528, -19.1637, 0.36 ) }
    dend_60 { pt3dadd( -2.65823, 158.256, -19.3844, 0.36 ) }
    dend_60 { pt3dadd( -2.45125, 159.179, -19.7313, 0.72 ) }
    dend_60 { pt3dadd( -2.2895, 160.097, -20.0522, 1.08 ) }
    dend_60 { pt3dadd( -2.16235, 160.991, -20.3183, 1.32 ) }
    dend_60 { pt3dadd( -1.88927, 163.84, -20.9937, 0.48 ) }
    dend_60 { pt3dadd( -1.85549, 164.61, -21.1124, 0.36 ) }
    dend_60 { pt3dadd( -1.85316, 166.017, -21.2192, 0.36 ) }
    dend_60 { pt3dadd( -1.90385, 167.928, -21.2994, 0.36 ) }
    dend_60 { pt3dadd( -1.92023, 168.578, -21.3223, 1.92 ) }
    dend_60 { pt3dadd( -1.91683, 169.495, -21.3151, 3.0 ) }
    dend_60 { pt3dadd( -1.89316, 170.13, -21.2633, 3.25 ) }
    dend_60 { pt3dadd( -1.78385, 171.158, -21.2355, 3.25 ) }
    dend_60 { pt3dadd( -1.46291, 173.151, -21.2997, 0.36 ) }
    dend_60 { pt3dadd( -1.32456, 173.891, -21.3675, 0.48 ) }
    dend_60 { pt3dadd( -1.04231, 175.424, -21.5102, 0.48 ) }
    dend_60 { pt3dadd( -0.839854, 176.617, -21.6199, 0.48 ) }
    dend_60 { pt3dadd( -0.699969, 177.737, -21.725, 0.48 ) }
    dend_60 { pt3dadd( -0.66703, 178.253, -21.7707, 0.96 ) }
    dend_60 { pt3dadd( -0.661734, 178.776, -21.8036, 1.2 ) }
    dend_60 { pt3dadd( -0.688737, 179.718, -21.8624, 0.84 ) }
    dend_60 { pt3dadd( -0.747805, 180.88, -21.9279, 0.48 ) }
    dend_60 { pt3dadd( -0.789311, 182.063, -21.9687, 0.36 ) }
    dend_60 { pt3dadd( -0.771739, 182.971, -21.9685, 0.36 ) }
    dend_60 { pt3dadd( -0.651565, 184.179, -21.943, 0.36 ) }
    dend_60 { pt3dadd( -0.519663, 184.929, -21.9254, 1.32 ) }
    dend_60 { pt3dadd( -0.275432, 186.006, -21.8981, 2.28 ) }
    dend_60 { pt3dadd( -0.103897, 186.673, -21.8817, 2.76 ) }
    dend_60 { pt3dadd( 0.132607, 187.58, -21.865, 2.4 ) }
    dend_60 { pt3dadd( 0.540541, 189.373, -21.8634, 1.08 ) }
    dend_60 { pt3dadd( 0.768198, 190.654, -21.8828, 0.36 ) }
    dend_60 { pt3dadd( 0.892281, 191.673, -21.908, 0.36 ) }
    dend_60 { pt3dadd( 0.979895, 192.729, -21.9629, 1.68 ) }
    dend_60 { pt3dadd( 1.01231, 193.378, -22.0091, 2.28 ) }
    dend_60 { pt3dadd( 1.02011, 194.411, -22.0667, 2.4 ) }
    dend_60 { pt3dadd( 0.972485, 196.002, -22.1269, 1.68 ) }
    dend_60 { pt3dadd( 0.879405, 197.923, -22.1498, 1.08 ) }
    dend_60 { pt3dadd( 0.827173, 198.857, -22.1566, 0.6 ) }
    dend_60 { pt3dadd( 0.770727, 199.633, -22.1643, 0.6 ) }
    dend_60 { pt3dadd( 0.680467, 200.928, -22.175, 1.44 ) }
    dend_60 { pt3dadd( 0.640772, 201.564, -22.1853, 1.8 ) }
    dend_60 { pt3dadd( 0.598759, 202.341, -22.2108, 1.8 ) }
    dend_60 { pt3dadd( 0.57102, 203.399, -22.2489, 0.48 ) }
    dend_60 { pt3dadd( 0.56581, 204.947, -22.2932, 0.48 ) }
    dend_60 { pt3dadd( 0.598608, 206.326, -22.4026, 1.2 ) }
    dend_60 { pt3dadd( 0.685833, 207.907, -22.5864, 1.68 ) }
    dend_60 { pt3dadd( 0.779631, 209.0, -22.7152, 2.28 ) }
    dend_60 { pt3dadd( 0.925193, 210.567, -22.8852, 2.52 ) }
    dend_60 { pt3dadd( 1.09452, 212.646, -23.0554, 1.2 ) }
    dend_60 { pt3dadd( 1.1618, 214.028, -23.1025, 0.6 ) }
    dend_60 { pt3dadd( 1.15217, 214.888, -23.0894, 0.48 ) }
    dend_60 { pt3dadd( 1.0399, 216.146, -22.9881, 0.48 ) }
    dend_60 { pt3dadd( 0.869657, 217.153, -22.8141, 0.48 ) }
    dend_60 { pt3dadd( 0.631558, 218.157, -22.5418, 0.48 ) }
    dend_60 { pt3dadd( 0.312174, 219.322, -22.115, 0.48 ) }
    dend_60 { pt3dadd( 0.12854, 220.02, -21.8248, 0.48 ) }
    dend_60 { pt3dadd( -0.00449505, 220.754, -21.6037, 0.48 ) }
    dend_60 { pt3dadd( -0.0676882, 221.801, -21.4497, 1.08 ) }
    dend_60 { pt3dadd( 0.0100024, 222.783, -21.4555, 1.68 ) }
    dend_60 { pt3dadd( 0.138198, 223.576, -21.5529, 2.04 ) }
    dend_60 { pt3dadd( 0.297672, 224.324, -21.695, 2.04 ) }
    dend_60 { pt3dadd( 0.782541, 226.407, -22.1359, 0.96 ) }
    dend_60 { pt3dadd( 0.962275, 227.181, -22.3168, 0.48 ) }
    dend_60 { pt3dadd( 1.12974, 227.919, -22.5009, 0.48 ) }
    dend_60 { pt3dadd( 1.35949, 229.034, -22.7489, 1.56 ) }
    dend_60 { pt3dadd( 1.42566, 229.46, -22.8237, 2.16 ) }
    dend_60 { pt3dadd( 1.56241, 230.333, -23.0227, 2.64 ) }
    dend_60 { pt3dadd( 1.65107, 230.949, -23.1641, 2.64 ) }
    dend_60 { pt3dadd( 1.7823, 231.739, -23.3823, 3.12 ) }
    dend_60 { pt3dadd( 1.92419, 232.456, -23.6143, 3.12 ) }
    dend_60 { pt3dadd( 2.22604, 233.812, -24.0741, 0.6 ) }
    dend_60 { pt3dadd( 2.78971, 236.146, -24.8304, 0.48 ) }
    dend_60 { pt3dadd( 3.01838, 237.025, -25.0877, 0.36 ) }
    dend_60 { pt3dadd( 3.15959, 237.563, -25.2176, 0.36 ) }
    dend_60 { pt3dadd( 3.37144, 238.508, -25.3505, 0.96 ) }
    dend_60 { pt3dadd( 3.6066, 239.704, -25.3936, 0.96 ) }
    dend_60 { pt3dadd( 3.77786, 240.843, -25.3149, 0.72 ) }
    dend_60 { pt3dadd( 3.84303, 241.767, -25.1943, 0.48 ) }
    dend_60 { pt3dadd( 3.88367, 242.947, -25.0975, 0.48 ) }
    dend_60 { pt3dadd( 3.88878, 244.743, -25.0245, 1.2 ) }
    dend_60 { pt3dadd( 3.86986, 245.65, -25.0225, 1.68 ) }
    dend_60 { pt3dadd( 3.82612, 246.804, -25.0586, 2.04 ) }
    dend_60 { pt3dadd( 3.77819, 248.061, -25.1298, 1.8 ) }
    dend_60 { pt3dadd( 3.73892, 249.633, -25.2523, 0.6 ) }
    dend_60 { pt3dadd( 3.73489, 250.673, -25.3555, 0.48 ) }
    dend_60 { pt3dadd( 3.76629, 251.966, -25.5135, 0.48 ) }
    dend_60 { pt3dadd( 3.83119, 253.249, -25.6563, 0.48 ) }
    dend_60 { pt3dadd( 3.89495, 253.991, -25.7168, 0.48 ) }
    dend_60 { pt3dadd( 3.97435, 254.647, -25.7337, 1.08 ) }
    dend_60 { pt3dadd( 4.0882, 255.546, -25.7043, 1.32 ) }
    dend_60 { pt3dadd( 4.16385, 256.058, -25.6823, 1.32 ) }
    dend_60 { pt3dadd( 4.32092, 256.982, -25.6148, 0.72 ) }
    dend_60 { pt3dadd( 4.43186, 257.558, -25.5742, 0.48 ) }
    dend_60 { pt3dadd( 4.58739, 258.377, -25.5222, 0.72 ) }
    dend_60 { pt3dadd( 4.76563, 259.278, -25.4866, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_60 { pt3dadd( 4.96107, 260.248, -25.4849, 1.32 ) }
    dend_60 { pt3dadd( 5.19139, 261.414, -25.5295, 0.48 ) }
    dend_60 { pt3dadd( 5.38887, 262.431, -25.6461, 0.48 ) }
    dend_60 { pt3dadd( 5.59697, 263.43, -25.8163, 0.48 ) }
    dend_60 { pt3dadd( 5.83763, 264.535, -26.0371, 1.44 ) }
    dend_60 { pt3dadd( 6.04685, 265.507, -26.2344, 2.28 ) }
    dend_60 { pt3dadd( 6.29059, 266.686, -26.4645, 1.92 ) }
    dend_60 { pt3dadd( 6.62598, 268.368, -26.7645, 0.48 ) }
    dend_60 { pt3dadd( 6.86948, 269.66, -26.933, 0.48 ) }
    dend_60 { pt3dadd( 7.02377, 270.59, -26.9961, 0.72 ) }
    dend_60 { pt3dadd( 7.10528, 271.281, -26.9908, 0.48 ) }
    dend_60 { pt3dadd( 7.1345, 271.976, -26.9307, 0.36 ) }
    dend_60 { pt3dadd( 7.10214, 273.034, -26.8969, 0.36 ) }
    dend_60 { pt3dadd( 6.99924, 274.061, -26.9644, 0.36 ) }
    dend_60 { pt3dadd( 6.83451, 275.183, -27.1811, 1.8 ) }
    dend_60 { pt3dadd( 6.64592, 276.289, -27.5009, 3.0 ) }
    dend_60 { pt3dadd( 6.43703, 277.369, -27.8942, 3.25 ) }
    dend_60 { pt3dadd( 5.858, 279.999, -29.1001, 1.8 ) }
    dend_60 { pt3dadd( 5.6019, 281.092, -29.6825, 0.48 ) }
    dend_60 { pt3dadd( 5.45474, 281.743, -30.0611, 0.48 ) }
    dend_60 { pt3dadd( 5.36792, 282.199, -30.3271, 0.72 ) }
    dend_60 { pt3dadd( 5.27727, 282.809, -30.6324, 0.48 ) }
    dend_60 { pt3dadd( 5.179, 284.024, -31.0287, 0.36 ) }
    dend_60 { pt3dadd( 5.15674, 285.048, -31.1087, 0.36 ) }
    dend_60 { pt3dadd( 5.17929, 285.708, -31.1028, 0.72 ) }
    dend_60 { pt3dadd( 5.25071, 286.891, -31.021, 1.08 ) }
    dend_60 { pt3dadd( 5.31624, 287.856, -30.913, 1.2 ) }
    dend_60 { pt3dadd( 5.41085, 289.341, -30.6634, 0.72 ) }
    dend_60 { pt3dadd( 5.48536, 290.741, -30.3631, 0.36 ) }
    dend_60 { pt3dadd( 5.52367, 291.661, -30.158, 0.36 ) }
    dend_60 { pt3dadd( 5.53835, 292.893, -29.865, 0.36 ) }
    dend_60 { pt3dadd( 5.51971, 294.023, -29.5882, 0.36 ) }
    dend_60 { pt3dadd( 5.47119, 295.308, -29.3267, 1.92 ) }
    dend_60 { pt3dadd( 5.4168, 296.083, -29.1947, 2.76 ) }
    dend_60 { pt3dadd( 5.39457, 296.329, -29.1623, 3.12 ) }
    dend_60 { pt3dadd( 5.28561, 297.555, -29.0339, 2.76 ) }
    dend_60 { pt3dadd( 5.25568, 297.963, -29.0077, 2.76 ) }
    dend_60 { pt3dadd( 5.16132, 299.497, -28.9397, 0.48 ) }
    dend_60 { pt3dadd( 5.09612, 300.651, -28.9246, 0.48 ) }
    dend_60 { pt3dadd( 5.05465, 301.292, -28.9198, 0.96 ) }
    dend_60 { pt3dadd( 5.01335, 301.891, -28.9193, 0.6 ) }
    dend_60 { pt3dadd( 4.95676, 302.656, -28.927, 0.48 ) }
    dend_60 { pt3dadd( 4.90398, 303.309, -28.917, 0.36 ) }
    dend_60 { pt3dadd( 4.77532, 304.849, -28.7912, 0.36 ) }
    dend_60 { pt3dadd( 4.72983, 305.495, -28.7279, 0.48 ) }
    dend_60 { pt3dadd( 4.70045, 306.14, -28.6682, 0.36 ) }
    dend_60 { pt3dadd( 4.68503, 306.903, -28.5865, 0.36 ) }
    dend_60 { pt3dadd( 4.67799, 307.468, -28.515, 0.36 ) }
    dend_60 { pt3dadd( 4.68765, 308.483, -28.4251, 1.2 ) }
    dend_60 { pt3dadd( 4.6937, 309.121, -28.4026, 2.04 ) }
    dend_60 { pt3dadd( 4.68368, 309.868, -28.3747, 2.16 ) }
    dend_60 { pt3dadd( 4.64377, 310.804, -28.3458, 1.68 ) }
    dend_60 { pt3dadd( 4.57053, 311.836, -28.3256, 0.48 ) }
    dend_60 { pt3dadd( 4.47609, 313.02, -28.3139, 0.36 ) }
    dend_60 { pt3dadd( 4.27488, 315.327, -28.294, 0.36 ) }
    dend_60 { pt3dadd( 4.18229, 316.379, -28.2716, 1.2 ) }
    dend_60 { pt3dadd( 4.14252, 316.912, -28.2625, 0.84 ) }
    dend_60 { pt3dadd( 4.10247, 317.678, -28.2595, 0.48 ) }
    dend_60 { pt3dadd( 4.08789, 319.065, -28.2789, 0.36 ) }
    dend_60 { pt3dadd( 4.11154, 319.659, -28.3244, 0.36 ) }
    dend_60 { pt3dadd( 4.19206, 320.341, -28.455, 1.44 ) }
    dend_60 { pt3dadd( 4.33111, 321.316, -28.7055, 1.92 ) }
    dend_60 { pt3dadd( 4.42224, 321.925, -28.8696, 2.04 ) }
    dend_60 { pt3dadd( 4.57643, 322.949, -29.1432, 2.04 ) }
    dend_60 { pt3dadd( 4.757, 324.436, -29.4613, 0.48 ) }
    dend_60 { pt3dadd( 4.89769, 326.094, -29.7164, 0.48 ) }
    dend_60 { pt3dadd( 4.93204, 326.729, -29.77, 0.6 ) }
    dend_60 { pt3dadd( 4.93894, 327.148, -29.778, 0.48 ) }
    dend_60 { pt3dadd( 4.93192, 328.367, -29.7539, 0.48 ) }
    dend_60 { pt3dadd( 4.8557, 330.059, -29.6278, 2.64 ) }
    dend_60 { pt3dadd( 4.77046, 331.106, -29.4933, 3.49 ) }
    dend_60 { pt3dadd( 4.72267, 331.558, -29.4316, 3.49 ) }
    dend_60 { pt3dadd( 4.65035, 332.209, -29.3445, 3.49 ) }
    dend_60 { pt3dadd( 4.443, 334.024, -29.1231, 0.48 ) }
    dend_60 { pt3dadd( 4.30589, 335.213, -28.984, 0.72 ) }
    dend_60 { pt3dadd( 4.22342, 336.063, -28.897, 0.48 ) }
    dend_60 { pt3dadd( 4.17699, 336.71, -28.8237, 0.48 ) }
    dend_60 { pt3dadd( 4.13294, 337.55, -28.7256, 1.32 ) }
    dend_60 { pt3dadd( 4.13437, 338.071, -28.6606, 1.56 ) }
    dend_60 { pt3dadd( 4.19214, 338.839, -28.5525, 1.56 ) }
    dend_60 { pt3dadd( 4.30539, 339.603, -28.463, 0.48 ) }
    dend_60 { pt3dadd( 4.47463, 340.518, -28.3766, 0.48 ) }
    dend_60 { pt3dadd( 4.59818, 341.191, -28.308, 0.6 ) }
    dend_60 { pt3dadd( 4.76223, 342.209, -28.2018, 0.6 ) }
    dend_60 { pt3dadd( 4.8779, 343.047, -28.1143, 0.36 ) }
    dend_60 { pt3dadd( 4.95744, 343.728, -28.0566, 0.36 ) }
    dend_60 { pt3dadd( 5.0184, 344.631, -28.0069, 0.36 ) }
    dend_60 { pt3dadd( 5.021, 345.348, -28.0082, 1.32 ) }
    dend_60 { pt3dadd( 4.98126, 345.997, -28.0278, 1.56 ) }
    dend_60 { pt3dadd( 4.91174, 346.51, -28.0518, 1.32 ) }
    dend_60 { pt3dadd( 4.80457, 347.14, -28.0847, 0.36 ) }
    dend_60 { pt3dadd( 4.66987, 348.064, -28.1157, 0.36 ) }
    dend_60 { pt3dadd( 4.5989, 348.811, -28.1287, 1.2 ) }
    dend_60 { pt3dadd( 4.57795, 349.604, -28.1396, 1.2 ) }
    dend_60 { pt3dadd( 4.59466, 350.538, -28.1522, 0.36 ) }
    dend_60 { pt3dadd( 4.64302, 351.443, -28.1602, 0.36 ) }
    dend_60 { pt3dadd( 4.72276, 352.374, -28.1584, 0.48 ) }
    dend_60 { pt3dadd( 4.80746, 353.071, -28.1765, 0.48 ) }
    dend_60 { pt3dadd( 4.93758, 354.046, -28.2307, 0.48 ) }
    dend_60 { pt3dadd( 4.97558, 354.303, -28.2578, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_60 { pt3dadd( 5.07699, 354.941, -28.335, 0.72 ) }
    dend_60 { pt3dadd( 5.21626, 355.842, -28.4359, 0.72 ) }
    dend_60 { pt3dadd( 5.27939, 356.324, -28.4738, 0.48 ) }
    dend_60 { pt3dadd( 5.37613, 357.107, -28.5006, 0.48 ) }
    dend_60 { pt3dadd( 5.48393, 358.034, -28.4919, 1.08 ) }
    dend_60 { pt3dadd( 5.57928, 358.837, -28.4464, 1.68 ) }
    dend_60 { pt3dadd( 5.67106, 359.576, -28.3871, 1.68 ) }
    dend_60 { pt3dadd( 5.76658, 360.389, -28.3239, 0.84 ) }
    dend_60 { pt3dadd( 5.83443, 360.908, -28.2992, 0.72 ) }
    dend_60 { pt3dadd( 5.99471, 361.929, -28.3527, 0.72 ) }
    dend_60 { pt3dadd( 6.19122, 363.044, -28.4988, 1.32 ) }
    dend_60 { pt3dadd( 6.3139, 363.697, -28.6218, 2.4 ) }
    dend_60 { pt3dadd( 6.49742, 364.645, -28.8437, 2.76 ) }
    dend_60 { pt3dadd( 6.67344, 365.589, -29.0871, 2.04 ) }
    dend_60 { pt3dadd( 6.96049, 367.234, -29.5163, 0.48 ) }
    dend_60 { pt3dadd( 7.08675, 368.009, -29.7159, 0.48 ) }
    dend_60 { pt3dadd( 7.17861, 368.645, -29.8689, 0.6 ) }
    dend_60 { pt3dadd( 7.22607, 369.015, -29.9351, 0.48 ) }
    dend_60 { pt3dadd( 7.39123, 370.543, -30.0901, 0.48 ) }
    dend_60 { pt3dadd( 7.43921, 371.192, -30.1057, 0.72 ) }
    dend_60 { pt3dadd( 7.48802, 371.85, -30.0648, 1.08 ) }
    dend_60 { pt3dadd( 7.53411, 372.37, -30.0218, 0.72 ) }
    dend_60 { pt3dadd( 7.60222, 373.06, -29.9374, 0.48 ) }
    dend_60 { pt3dadd( 7.66867, 373.704, -29.8686, 0.24 ) }
    dend_60 { pt3dadd( 7.74619, 374.385, -29.804, 0.24 ) }
    dend_60 { pt3dadd( 7.93233, 376.089, -29.7036, 3.12 ) }
    dend_60 { pt3dadd( 7.98972, 376.594, -29.6858, 3.37 ) }
    dend_60 { pt3dadd( 8.09484, 377.509, -29.6714, 3.0 ) }
    dend_60 { pt3dadd( 8.23945, 379.218, -29.686, 0.48 ) }
    dend_60 { pt3dadd( 8.29827, 380.436, -29.7271, 0.48 ) }
    dend_60 { pt3dadd( 8.31809, 381.546, -29.7689, 0.84 ) }
    dend_60 { pt3dadd( 8.3179, 382.301, -29.7942, 0.48 ) }
    dend_60 { pt3dadd( 8.32055, 383.475, -29.7635, 0.48 ) }
    dend_60 { pt3dadd( 8.33134, 384.856, -29.6404, 0.48 ) }
    dend_60 { pt3dadd( 8.33738, 385.405, -29.5409, 0.48 ) }
    dend_60 { pt3dadd( 8.34601, 386.405, -29.312, 0.48 ) }
    dend_60 { pt3dadd( 8.36242, 387.01, -29.1454, 0.96 ) }
    dend_60 { pt3dadd( 8.43639, 388.173, -28.8484, 1.56 ) }
    dend_60 { pt3dadd( 8.49178, 388.621, -28.7265, 1.56 ) }
    dend_60 { pt3dadd( 8.66547, 389.458, -28.5641, 0.48 ) }
    dend_60 { pt3dadd( 8.72251, 389.711, -28.5493, 0.36 ) }
    dend_60 { pt3dadd( 8.85631, 390.507, -28.6064, 0.36 ) }
    dend_60 { pt3dadd( 9.01902, 391.709, -28.7642, 1.8 ) }
    dend_60 { pt3dadd( 9.11522, 392.532, -28.9, 2.64 ) }
    dend_60 { pt3dadd( 9.27291, 394.079, -29.1398, 1.56 ) }
    dend_60 { pt3dadd( 9.3772, 395.198, -29.2833, 0.36 ) }
    dend_60 { pt3dadd( 9.49248, 396.454, -29.4225, 0.48 ) }
    dend_60 { pt3dadd( 9.60427, 398.005, -29.5138, 0.48 ) }
    dend_60 { pt3dadd( 9.63732, 398.527, -29.5427, 0.48 ) }
    dend_60 { pt3dadd( 9.70364, 399.312, -29.5763, 1.32 ) }
    dend_60 { pt3dadd( 9.75377, 399.729, -29.5643, 1.68 ) }
    dend_60 { pt3dadd( 9.84468, 400.288, -29.4968, 1.92 ) }
    dend_60 { pt3dadd( 10.0935, 401.718, -29.2892, 0.84 ) }
    dend_60 { pt3dadd( 10.2631, 403.139, -29.0827, 0.48 ) }
    dend_60 { pt3dadd( 10.3407, 404.312, -28.8976, 0.48 ) }
    dend_60 { pt3dadd( 10.3492, 404.946, -28.7977, 0.48 ) }
    dend_60 { pt3dadd( 10.2995, 406.329, -28.5964, 0.48 ) }
    dend_60 { pt3dadd( 10.1708, 407.666, -28.3717, 0.72 ) }
    dend_60 { pt3dadd( 10.0462, 408.549, -28.2115, 1.32 ) }
    dend_60 { pt3dadd( 9.89026, 409.418, -28.0327, 0.84 ) }
    dend_60 { pt3dadd( 9.75839, 410.042, -27.8999, 0.36 ) }
    dend_60 { pt3dadd( 9.61276, 410.789, -27.7408, 0.36 ) }
    dend_60 { pt3dadd( 9.47592, 411.767, -27.5288, 0.84 ) }
    dend_60 { pt3dadd( 9.44394, 412.292, -27.3845, 0.36 ) }
    dend_60 { pt3dadd( 9.4336, 413.403, -27.0272, 0.36 ) }
    dend_60 { pt3dadd( 9.48425, 414.69, -26.5925, 0.84 ) }
    dend_60 { pt3dadd( 9.5245, 415.234, -26.3965, 0.84 ) }
    dend_60 { pt3dadd( 9.59306, 415.855, -26.1893, 0.36 ) }
    dend_60 { pt3dadd( 9.77626, 417.168, -25.8166, 0.36 ) }
    dend_60 { pt3dadd( 9.87948, 417.955, -25.6298, 1.2 ) }
    dend_60 { pt3dadd( 9.98397, 418.869, -25.473, 2.16 ) }
    dend_60 { pt3dadd( 10.0094, 419.157, -25.4498, 2.28 ) }
    dend_60 { pt3dadd( 10.1232, 420.657, -25.3831, 0.6 ) }
    dend_60 { pt3dadd( 10.1678, 421.336, -25.3601, 0.36 ) }
    dend_60 { pt3dadd( 10.228, 422.143, -25.3284, 0.36 ) }
    dend_60 { pt3dadd( 10.2825, 422.607, -25.3045, 0.36 ) }
    dend_60 { pt3dadd( 10.3543, 423.108, -25.2571, 0.36 ) }
    dend_60 { pt3dadd( 10.5841, 424.47, -25.0748, 0.36 ) }
    dend_60 { pt3dadd( 10.7599, 425.415, -24.9234, 1.08 ) }
    dend_60 { pt3dadd( 10.9627, 426.428, -24.762, 1.56 ) }
    dend_60 { pt3dadd( 11.2163, 427.603, -24.5865, 0.72 ) }
    dend_60 { pt3dadd( 11.2978, 428.016, -24.5374, 0.48 ) }
    dend_60 { pt3dadd( 11.4434, 428.935, -24.461, 0.48 ) }
    dend_60 { pt3dadd( 11.5511, 429.98, -24.42, 1.68 ) }
    dend_60 { pt3dadd( 11.6248, 430.765, -24.4319, 2.52 ) }
    dend_60 { pt3dadd( 11.7205, 431.691, -24.5029, 1.92 ) }
    dend_60 { pt3dadd( 11.8815, 432.967, -24.6513, 0.72 ) }
    dend_60 { pt3dadd( 12.0101, 433.715, -24.7638, 0.6 ) }
    dend_60 { pt3dadd( 12.2574, 434.832, -24.976, 0.6 ) }
    dend_60 { pt3dadd( 12.6488, 436.28, -25.271, 0.6 ) }
    dend_60 { pt3dadd( 13.0437, 437.638, -25.556, 1.44 ) }
    dend_60 { pt3dadd( 13.2265, 438.239, -25.6805, 1.92 ) }
    dend_60 { pt3dadd( 13.5777, 439.409, -25.8935, 0.96 ) }
    dend_60 { pt3dadd( 13.8092, 440.252, -26.0164, 0.36 ) }
    dend_60 { pt3dadd( 14.0131, 441.224, -26.0881, 0.36 ) }
    dend_60 { pt3dadd( 14.1229, 442.027, -26.0781, 0.36 ) }
    dend_60 { pt3dadd( 14.1983, 442.798, -26.0066, 0.72 ) }
    dend_60 { pt3dadd( 14.3096, 443.75, -25.979, 0.36 ) }
    dend_60 { pt3dadd( 14.4283, 444.561, -25.9896, 0.24 ) }
    dend_60 { pt3dadd( 14.681, 445.872, -26.064, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_60 { pt3dadd( 14.7427, 446.122, -26.0947, 2.04 ) }
    dend_60 { pt3dadd( 15.0519, 447.18, -26.2614, 1.92 ) }
    dend_60 { pt3dadd( 15.7939, 449.431, -26.6815, 0.48 ) }
    dend_60 { pt3dadd( 16.1142, 450.336, -26.8657, 0.48 ) }
    dend_60 { pt3dadd( 16.4385, 451.239, -27.0542, 0.72 ) }
    dend_60 { pt3dadd( 16.8793, 452.518, -27.314, 0.84 ) }
    dend_60 { pt3dadd( 17.3497, 454.048, -27.607, 0.36 ) }
    dend_60 { pt3dadd( 17.5051, 454.643, -27.7037, 0.24 ) }
    dend_60 { pt3dadd( 17.6755, 455.557, -27.7934, 1.2 ) }
    dend_60 { pt3dadd( 17.7129, 455.843, -27.8261, 1.68 ) }
    dend_60 { pt3dadd( 17.7862, 456.859, -27.9532, 1.56 ) }
    dend_60 { pt3dadd( 17.8027, 457.899, -28.0807, 0.36 ) }
    dend_60 { pt3dadd( 17.7719, 458.661, -28.1696, 0.36 ) }
    dend_60 { pt3dadd( 17.6699, 460.09, -28.3055, 0.36 ) }
    dend_60 { pt3dadd( 17.6153, 460.727, -28.357, 1.32 ) }
    dend_60 { pt3dadd( 17.5557, 461.376, -28.3972, 1.8 ) }
    dend_60 { pt3dadd( 17.509, 461.898, -28.4166, 1.68 ) }
    dend_60 { pt3dadd( 17.4043, 463.049, -28.4257, 0.48 ) }
    dend_60 { pt3dadd( 17.2867, 464.595, -28.4324, 0.48 ) }
    dend_60 { pt3dadd( 17.2314, 465.491, -28.4333, 1.8 ) }
    dend_60 { pt3dadd( 17.1704, 466.255, -28.4383, 2.4 ) }
    dend_60 { pt3dadd( 17.1063, 466.786, -28.4241, 1.92 ) }
    dend_60 { pt3dadd( 16.8984, 468.04, -28.3236, 0.6 ) }
    dend_60 { pt3dadd( 16.826, 468.385, -28.2693, 0.6 ) }
    dend_60 { pt3dadd( 16.5517, 469.483, -28.0356, 0.6 ) }
    dend_60 { pt3dadd( 16.2825, 470.515, -27.7756, 0.6 ) }
    dend_60 { pt3dadd( 15.9098, 471.932, -27.4254, 0.6 ) }
    dend_60 { pt3dadd( 15.5283, 473.415, -27.0969, 0.6 ) }
    dend_60 { pt3dadd( 15.2334, 474.65, -26.8687, 1.56 ) }
    dend_60 { pt3dadd( 15.0783, 475.407, -26.7823, 2.04 ) }
    dend_60 { pt3dadd( 14.9443, 476.22, -26.7606, 1.68 ) }
    dend_60 { pt3dadd( 14.8072, 477.35, -26.8257, 0.84 ) }
    dend_60 { pt3dadd( 14.7148, 478.311, -26.9786, 0.48 ) }
    dend_60 { pt3dadd( 14.5421, 479.811, -27.3094, 0.48 ) }
    dend_60 { pt3dadd( 14.355, 481.268, -27.664, 0.6 ) }
    dend_60 { pt3dadd( 14.1924, 482.357, -27.9162, 1.32 ) }
    dend_60 { pt3dadd( 14.0429, 483.224, -28.1009, 1.44 ) }
    dend_60 { pt3dadd( 13.8365, 484.288, -28.2954, 0.48 ) }
    dend_60 { pt3dadd( 13.4463, 486.255, -28.6101, 0.48 ) }
    dend_60 { pt3dadd( 13.3274, 486.889, -28.6966, 1.32 ) }
    dend_60 { pt3dadd( 13.1512, 487.904, -28.7972, 2.04 ) }
    dend_60 { pt3dadd( 13.0396, 488.671, -28.8627, 1.68 ) }
    dend_60 { pt3dadd( 12.9167, 489.746, -28.9525, 0.6 ) }
    dend_60 { pt3dadd( 12.8297, 490.836, -29.0453, 0.48 ) }
    dend_60 { pt3dadd( 12.7812, 492.015, -29.1573, 0.48 ) }
    dend_60 { pt3dadd( 12.7519, 492.777, -29.2366, 0.48 ) }
    dend_60 { pt3dadd( 12.7171, 493.864, -29.3531, 0.72 ) }
    dend_60 { pt3dadd( 12.6924, 494.627, -29.4314, 0.72 ) }
    dend_60 { pt3dadd( 12.6779, 495.245, -29.4816, 0.36 ) }
    dend_60 { pt3dadd( 12.643, 496.148, -29.5507, 0.36 ) }
    dend_60 { pt3dadd( 12.6363, 496.914, -29.5899, 1.8 ) }
    dend_60 { pt3dadd( 12.6807, 497.68, -29.5963, 2.4 ) }
    dend_60 { pt3dadd( 12.7793, 498.709, -29.5627, 2.4 ) }
    dend_60 { pt3dadd( 12.9292, 499.922, -29.5248, 0.48 ) }
    dend_60 { pt3dadd( 12.9667, 500.21, -29.5161, 0.48 ) }
    dend_60 { pt3dadd( 13.1184, 501.292, -29.5429, 0.48 ) }
    dend_60 { pt3dadd( 13.2682, 502.29, -29.6233, 0.48 ) }
    dend_60 { pt3dadd( 13.4051, 503.326, -29.7958, 0.48 ) }
    dend_60 { pt3dadd( 13.4535, 503.918, -29.9453, 1.08 ) }
    dend_60 { pt3dadd( 13.4391, 504.469, -30.1253, 1.92 ) }
    dend_60 { pt3dadd( 13.3253, 505.402, -30.4479, 2.16 ) }
    dend_60 { pt3dadd( 13.2246, 505.904, -30.6138, 2.16 ) }
    dend_60 { pt3dadd( 12.9637, 507.077, -30.9567, 0.72 ) }
    dend_60 { pt3dadd( 12.8553, 507.625, -31.0713, 0.48 ) }
    dend_60 { pt3dadd( 12.6644, 508.706, -31.2068, 0.48 ) }
    dend_60 { pt3dadd( 12.5192, 509.728, -31.2775, 0.48 ) }
    dend_60 { pt3dadd( 12.3348, 511.284, -31.2668, 0.48 ) }
    dend_60 { pt3dadd( 12.2877, 511.932, -31.2333, 0.48 ) }
    dend_60 { pt3dadd( 12.2569, 512.864, -31.1392, 1.32 ) }
    dend_60 { pt3dadd( 12.2577, 513.764, -31.0307, 1.92 ) }
    dend_60 { pt3dadd( 12.2696, 514.831, -30.8442, 1.56 ) }
    dend_60 { pt3dadd( 12.2663, 515.739, -30.6516, 0.36 ) }
    dend_60 { pt3dadd( 12.237, 516.92, -30.3455, 0.36 ) }
    dend_60 { pt3dadd( 12.2076, 517.818, -30.0901, 0.6 ) }
    dend_60 { pt3dadd( 12.1775, 518.671, -29.8159, 0.6 ) }
    dend_60 { pt3dadd( 12.1435, 519.857, -29.3984, 0.24 ) }
    dend_60 { pt3dadd( 12.1445, 520.588, -29.131, 0.24 ) }
    dend_60 { pt3dadd( 12.1938, 521.645, -28.7731, 1.92 ) }
    dend_60 { pt3dadd( 12.2355, 522.191, -28.5826, 2.4 ) }
    dend_60 { pt3dadd( 12.3686, 523.385, -28.1912, 1.92 ) }
    dend_60 { pt3dadd( 12.5056, 524.523, -27.8672, 0.48 ) }
    dend_60 { pt3dadd( 12.6296, 525.594, -27.6201, 0.48 ) }
    dend_60 { pt3dadd( 12.7427, 526.896, -27.3557, 0.48 ) }
    dend_60 { pt3dadd( 12.8034, 528.075, -27.1634, 1.44 ) }
    dend_60 { pt3dadd( 12.8371, 529.363, -26.9835, 2.04 ) }
    dend_60 { pt3dadd( 12.8482, 530.643, -26.8406, 1.08 ) }
    dend_60 { pt3dadd( 12.8544, 531.55, -26.7439, 0.6 ) }
    dend_60 { pt3dadd( 12.8735, 532.575, -26.6478, 0.48 ) }
    dend_60 { pt3dadd( 12.9484, 533.725, -26.5527, 0.48 ) }
    dend_60 { pt3dadd( 13.0281, 534.407, -26.5097, 0.48 ) }
    dend_60 { pt3dadd( 13.1252, 535.087, -26.4624, 0.96 ) }
    dend_60 { pt3dadd( 13.2762, 536.086, -26.3921, 1.44 ) }
    dend_60 { pt3dadd( 13.4366, 537.223, -26.3219, 0.84 ) }
    dend_60 { pt3dadd( 13.5386, 538.044, -26.2777, 0.48 ) }
    dend_60 { pt3dadd( 13.6702, 539.458, -26.2139, 0.48 ) }
    dend_60 { pt3dadd( 13.7099, 540.491, -26.1664, 0.6 ) }
    dend_60 { pt3dadd( 13.6878, 541.653, -26.1156, 0.72 ) }
    dend_60 { pt3dadd( 13.6356, 542.301, -26.0903, 0.12 ) }
    dend_60 { pt3dadd( 13.5961, 542.556, -26.0601, 0.12 ) }
    dend_60 { pt3dadd( 13.4158, 543.43, -25.9026, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_60 { pt3dadd( 13.2031, 544.361, -25.695, 2.28 ) }
    dend_60 { pt3dadd( 13.0303, 545.087, -25.5189, 2.52 ) }
    dend_60 { pt3dadd( 12.8782, 545.699, -25.3666, 2.52 ) }
    dend_60 { pt3dadd( 12.3314, 547.841, -24.8725, 0.72 ) }
    dend_60 { pt3dadd( 11.8943, 549.707, -24.5723, 0.72 ) }
    dend_60 { pt3dadd( 11.6729, 550.706, -24.4242, 0.96 ) }
    dend_60 { pt3dadd( 11.5414, 551.336, -24.3279, 0.6 ) }
    dend_60 { pt3dadd( 11.4128, 551.968, -24.2172, 0.48 ) }
    dend_60 { pt3dadd( 11.1423, 553.344, -23.9888, 0.48 ) }
    dend_60 { pt3dadd( 10.8153, 555.305, -23.729, 0.48 ) }
    dend_60 { pt3dadd( 10.6175, 556.743, -23.5108, 0.48 ) }
    dend_60 { pt3dadd( 10.4997, 557.961, -23.3198, 1.92 ) }
    dend_60 { pt3dadd( 10.4238, 559.526, -23.1148, 0.96 ) }
    dend_60 { pt3dadd( 10.428, 560.85, -22.9685, 0.48 ) }
    dend_60 { pt3dadd( 10.5578, 563.284, -22.7795, 0.48 ) }
    dend_60 { pt3dadd( 10.7072, 564.908, -22.6947, 0.48 ) }
    dend_60 { pt3dadd( 10.9082, 566.442, -22.7111, 0.48 ) }
    dend_60 { pt3dadd( 11.1513, 567.87, -22.7782, 1.2 ) }
    dend_60 { pt3dadd( 11.3376, 568.763, -22.834, 1.92 ) }
    dend_60 { pt3dadd( 11.6594, 570.111, -22.9178, 1.44 ) }
    dend_60 { pt3dadd( 11.8602, 570.984, -22.977, 1.08 ) }
    dend_60 { pt3dadd( 11.9782, 571.623, -23.0161, 0.48 ) }
    dend_60 { pt3dadd( 12.0983, 572.531, -23.0548, 0.96 ) }
    dend_60 { pt3dadd( 12.1797, 573.461, -23.0622, 0.96 ) }
    dend_60 { pt3dadd( 12.2228, 574.15, -23.066, 0.48 ) }
    dend_60 { pt3dadd( 12.3415, 576.216, -23.0183, 0.48 ) }
    dend_60 { pt3dadd( 12.3875, 577.003, -22.9941, 0.6 ) }
    dend_60 { pt3dadd( 12.4176, 577.509, -22.9687, 0.48 ) }
    dend_60 { pt3dadd( 12.4756, 578.689, -22.8717, 0.48 ) }
    dend_60 { pt3dadd( 12.5193, 580.363, -22.6897, 0.48 ) }
    dend_60 { pt3dadd( 12.5151, 581.338, -22.5728, 0.96 ) }
    dend_60 { pt3dadd( 12.4874, 582.108, -22.4671, 1.2 ) }
    dend_60 { pt3dadd( 12.4249, 583.004, -22.3432, 0.6 ) }
    dend_60 { pt3dadd( 12.3473, 583.704, -22.2694, 0.36 ) }
    dend_60 { pt3dadd( 12.0763, 585.342, -22.1608, 0.36 ) }
    dend_60 { pt3dadd( 11.8404, 586.401, -22.1483, 0.72 ) }
    dend_60 { pt3dadd( 11.6269, 587.218, -22.1964, 1.44 ) }
    dend_60 { pt3dadd( 11.3792, 588.098, -22.2711, 2.4 ) }
    dend_60 { pt3dadd( 10.9925, 589.476, -22.4114, 1.56 ) }
    dend_60 { pt3dadd( 10.7749, 590.263, -22.491, 0.48 ) }
    dend_60 { pt3dadd( 10.2369, 592.275, -22.6638, 0.48 ) }
    dend_60 { pt3dadd( 9.99981, 593.263, -22.6809, 0.6 ) }
    dend_60 { pt3dadd( 9.88496, 593.812, -22.6455, 0.48 ) }
    dend_60 { pt3dadd( 9.68967, 594.955, -22.4378, 0.48 ) }
    dend_60 { pt3dadd( 9.62355, 595.67, -22.2255, 0.48 ) }
    dend_60 { pt3dadd( 9.61333, 596.477, -21.8989, 0.84 ) }
    dend_60 { pt3dadd( 9.70366, 598.086, -21.0972, 0.96 ) }
    dend_60 { pt3dadd( 9.81657, 599.141, -20.5337, 0.48 ) }
    dend_60 { pt3dadd( 9.93224, 599.96, -20.0787, 0.36 ) }
    dend_60 { pt3dadd( 10.1625, 601.325, -19.3163, 0.36 ) }
    dend_60 { pt3dadd( 10.3841, 602.522, -18.6946, 0.96 ) }
    dend_60 { pt3dadd( 10.4275, 602.767, -18.5649, 1.08 ) }
    dend_60 { pt3dadd( 10.5603, 603.588, -18.1373, 0.48 ) }
    dend_60 { pt3dadd( 10.6813, 604.627, -17.5241, 0.48 ) }
    dend_60 { pt3dadd( 10.7518, 605.598, -16.9015, 0.48 ) }
    dend_60 { pt3dadd( 10.7822, 606.449, -16.3276, 0.48 ) }
    dend_60 { pt3dadd( 10.8246, 607.687, -15.5607, 0.48 ) }
    dend_60 { pt3dadd( 10.8703, 609.134, -14.7414, 0.48 ) }
    dend_60 { pt3dadd( 10.8958, 610.905, -13.8587, 1.68 ) }
    dend_60 { pt3dadd( 10.9054, 611.537, -13.5867, 2.4 ) }
    dend_60 { pt3dadd( 10.9166, 612.08, -13.384, 2.64 ) }
    dend_60 { pt3dadd( 10.9726, 613.778, -12.9625, 0.24 ) }
    dend_60 { pt3dadd( 10.9768, 615.061, -12.8826, 0.24 ) }
    dend_60 { pt3dadd( 10.9035, 616.24, -12.976, 0.24 ) }
    dend_60 { pt3dadd( 10.8922, 616.368, -12.9966, 0.72 ) }
    dend_60 { pt3dadd( 10.7901, 617.254, -13.1543, 0.84 ) }
    dend_60 { pt3dadd( 10.6219, 618.409, -13.3792, 0.24 ) }
    dend_60 { pt3dadd( 10.2786, 620.253, -13.7759, 0.24 ) }
    dend_60 { pt3dadd( 9.98577, 621.765, -14.1439, 0.24 ) }
    dend_60 { pt3dadd( 9.91364, 622.135, -14.2392, 0.48 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 70/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -4.91963, 136.71, -21.7147, 0.12 ) }
    dend_59 { pt3dadd( -5.13175, 137.061, -23.291, 0.12 ) }
    dend_59 { pt3dadd( -5.17428, 137.125, -23.5782, 0.12 ) }
    dend_59 { pt3dadd( -5.33729, 137.337, -24.4574, 1.2 ) }
    dend_59 { pt3dadd( -5.50141, 137.517, -25.2566, 1.44 ) }
    dend_59 { pt3dadd( -6.51499, 138.486, -29.5742, 0.36 ) }
    dend_59 { pt3dadd( -6.75231, 138.716, -30.4832, 0.36 ) }
    dend_59 { pt3dadd( -6.87867, 138.861, -30.9971, 1.8 ) }
    dend_59 { pt3dadd( -7.07254, 139.095, -31.7109, 2.16 ) }
    dend_59 { pt3dadd( -7.91024, 140.171, -34.4347, 0.36 ) }
    dend_59 { pt3dadd( -8.20094, 140.583, -35.3499, 0.36 ) }
    dend_59 { pt3dadd( -8.55651, 141.088, -36.2437, 1.32 ) }
    dend_59 { pt3dadd( -8.84376, 141.605, -37.1788, 0.24 ) }
    dend_59 { pt3dadd( -8.98649, 141.937, -37.753, 0.24 ) }
    dend_59 { pt3dadd( -9.33598, 142.845, -39.2243, 0.6 ) }
    dend_59 { pt3dadd( -9.81511, 144.091, -41.0076, 1.68 ) }
    dend_59 { pt3dadd( -9.97458, 144.462, -41.5249, 2.04 ) }
    dend_59 { pt3dadd( -10.7524, 146.034, -43.7716, 0.36 ) }
    dend_59 { pt3dadd( -11.0759, 146.61, -44.54, 0.36 ) }
    dend_59 { pt3dadd( -11.4953, 147.297, -45.3445, 1.56 ) }
    dend_59 { pt3dadd( -11.9196, 147.97, -46.0031, 0.36 ) }
    dend_59 { pt3dadd( -12.439, 148.744, -46.6402, 0.6 ) }
    dend_59 { pt3dadd( -12.7579, 149.205, -47.003, 0.12 ) }
    dend_59 { pt3dadd( -13.283, 149.928, -47.4809, 0.12 ) }
    dend_59 { pt3dadd( -13.5324, 150.321, -47.7514, 0.48 ) }
    dend_59 { pt3dadd( -14.1503, 151.606, -48.686, 0.12 ) }
    dend_59 { pt3dadd( -14.3233, 152.042, -49.0004, 0.12 ) }
    dend_59 { pt3dadd( -14.4556, 152.424, -49.2589, 0.12 ) }
    dend_59 { pt3dadd( -14.6385, 152.969, -49.5972, 1.68 ) }
    dend_59 { pt3dadd( -14.8491, 153.661, -49.9684, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_59 { pt3dadd( -15.2551, 155.139, -50.6228, 0.24 ) }
    dend_59 { pt3dadd( -15.4298, 155.786, -50.8481, 0.24 ) }
    dend_59 { pt3dadd( -15.5538, 156.287, -51.0314, 0.48 ) }
    dend_59 { pt3dadd( -15.6753, 156.849, -51.2678, 0.12 ) }
    dend_59 { pt3dadd( -15.9988, 158.388, -51.9466, 0.12 ) }
    dend_59 { pt3dadd( -16.2915, 159.788, -52.5602, 0.12 ) }
    dend_59 { pt3dadd( -16.4868, 160.696, -52.9382, 0.12 ) }
    dend_59 { pt3dadd( -16.7743, 162.018, -53.4684, 1.68 ) }
    dend_59 { pt3dadd( -17.1578, 163.622, -54.0782, 0.12 ) }
    dend_59 { pt3dadd( -17.4856, 164.884, -54.5256, 0.12 ) }
    dend_59 { pt3dadd( -17.6583, 165.507, -54.7316, 1.32 ) }
    dend_59 { pt3dadd( -17.8745, 166.285, -54.9278, 1.68 ) }
    dend_59 { pt3dadd( -18.163, 167.363, -55.11, 0.12 ) }
    dend_59 { pt3dadd( -18.4279, 168.39, -55.1705, 0.12 ) }
    dend_59 { pt3dadd( -18.5085, 168.781, -55.1647, 0.36 ) }
    dend_59 { pt3dadd( -18.5897, 169.313, -55.1552, 0.12 ) }
    dend_59 { pt3dadd( -18.7451, 170.63, -55.1343, 0.12 ) }
    dend_59 { pt3dadd( -18.8134, 171.425, -55.1262, 1.56 ) }
    dend_59 { pt3dadd( -18.8892, 172.617, -55.1255, 0.12 ) }
    dend_59 { pt3dadd( -18.9975, 174.758, -55.1176, 0.12 ) }
    dend_59 { pt3dadd( -19.0198, 175.178, -55.1172, 0.48 ) }
    dend_59 { pt3dadd( -19.0427, 175.565, -55.1183, 0.12 ) }
    dend_59 { pt3dadd( -19.1243, 177.016, -55.1373, 0.12 ) }
    dend_59 { pt3dadd( -19.1717, 177.934, -55.1574, 1.2 ) }
    dend_59 { pt3dadd( -19.2031, 178.599, -55.1801, 1.2 ) }
    dend_59 { pt3dadd( -19.2332, 179.268, -55.209, 0.12 ) }
    dend_59 { pt3dadd( -19.2459, 180.321, -55.2477, 0.12 ) }
    dend_59 { pt3dadd( -19.2367, 181.027, -55.2701, 1.32 ) }
    dend_59 { pt3dadd( -19.2111, 181.692, -55.2871, 1.68 ) }
    dend_59 { pt3dadd( -19.136, 183.289, -55.3192, 0.12 ) }
    dend_59 { pt3dadd( -19.0746, 184.473, -55.341, 0.12 ) }
    dend_59 { pt3dadd( -19.021, 185.652, -55.3589, 0.12 ) }
    dend_59 { pt3dadd( -19.0058, 186.073, -55.3643, 0.12 ) }
    dend_59 { pt3dadd( -18.995, 186.871, -55.3697, 0.12 ) }
    dend_59 { pt3dadd( -18.9999, 187.42, -55.3747, 1.2 ) }
    dend_59 { pt3dadd( -19.0274, 188.362, -55.3833, 0.12 ) }
    dend_59 { pt3dadd( -19.071, 189.547, -55.4088, 0.12 ) }
    dend_59 { pt3dadd( -19.0914, 189.957, -55.4216, 0.36 ) }
    dend_59 { pt3dadd( -19.1072, 190.382, -55.4347, 0.12 ) }
    dend_59 { pt3dadd( -19.1305, 191.708, -55.4701, 0.12 ) }
    dend_59 { pt3dadd( -19.1251, 192.293, -55.4809, 0.96 ) }
    dend_59 { pt3dadd( -19.1058, 192.888, -55.4836, 0.12 ) }
    dend_59 { pt3dadd( -19.044, 194.21, -55.3978, 0.12 ) }
    dend_59 { pt3dadd( -19.0097, 194.874, -55.3414, 0.84 ) }
    dend_59 { pt3dadd( -18.9735, 195.538, -55.2739, 0.36 ) }
    dend_59 { pt3dadd( -18.95, 195.955, -55.2236, 0.12 ) }
    dend_59 { pt3dadd( -18.7728, 198.598, -54.9003, 0.12 ) }
    dend_59 { pt3dadd( -18.6522, 200.03, -54.7206, 0.24 ) }
    dend_59 { pt3dadd( -18.5933, 200.613, -54.6531, 0.48 ) }
    dend_59 { pt3dadd( -18.5497, 201.029, -54.6128, 0.12 ) }
    dend_59 { pt3dadd( -18.4328, 202.274, -54.5431, 0.12 ) }
    dend_59 { pt3dadd( -18.3884, 203.095, -54.5461, 0.84 ) }
    dend_59 { pt3dadd( -18.3853, 203.523, -54.5867, 0.12 ) }
    dend_59 { pt3dadd( -18.3713, 204.839, -54.7727, 0.12 ) }
    dend_59 { pt3dadd( -18.3778, 205.039, -54.7987, 0.6 ) }
    dend_59 { pt3dadd( -18.4578, 205.667, -54.9438, 0.12 ) }
    dend_59 { pt3dadd( -18.6439, 206.449, -55.1975, 0.12 ) }
    dend_59 { pt3dadd( -18.8655, 207.179, -55.4674, 1.08 ) }
    dend_59 { pt3dadd( -19.1389, 208.009, -55.8498, 1.32 ) }
    dend_59 { pt3dadd( -19.4025, 208.679, -56.2201, 1.68 ) }
    dend_59 { pt3dadd( -19.9228, 209.907, -56.921, 0.12 ) }
    dend_59 { pt3dadd( -20.2503, 210.635, -57.3984, 0.12 ) }
    dend_59 { pt3dadd( -20.406, 210.931, -57.6162, 0.48 ) }
    dend_59 { pt3dadd( -20.7384, 211.463, -58.0175, 0.12 ) }
    dend_59 { pt3dadd( -21.2428, 212.192, -58.5459, 0.12 ) }
    dend_59 { pt3dadd( -21.5529, 212.62, -58.8282, 0.48 ) }
    dend_59 { pt3dadd( -22.1585, 213.355, -59.2772, 0.12 ) }
    dend_59 { pt3dadd( -22.8156, 214.041, -59.6996, 0.12 ) }
    dend_59 { pt3dadd( -23.4791, 214.699, -60.0631, 0.12 ) }
    dend_59 { pt3dadd( -23.8055, 215.019, -60.2098, 0.84 ) }
    dend_59 { pt3dadd( -24.267, 215.463, -60.4016, 0.84 ) }
    dend_59 { pt3dadd( -24.5598, 215.723, -60.5035, 0.12 ) }
    dend_59 { pt3dadd( -25.3469, 216.355, -60.7105, 0.12 ) }
    dend_59 { pt3dadd( -25.872, 216.742, -60.8549, 0.12 ) }
    dend_59 { pt3dadd( -25.9807, 216.813, -60.8818, 0.48 ) }
    dend_59 { pt3dadd( -26.4135, 217.079, -60.9762, 0.12 ) }
    dend_59 { pt3dadd( -26.9252, 217.364, -61.08, 0.12 ) }
    dend_59 { pt3dadd( -27.6202, 217.682, -61.176, 1.32 ) }
    dend_59 { pt3dadd( -27.9025, 217.773, -61.2012, 1.56 ) }
    dend_59 { pt3dadd( -28.8848, 218.009, -61.2582, 0.12 ) }
    dend_59 { pt3dadd( -29.5495, 218.152, -61.2929, 0.12 ) }
    dend_59 { pt3dadd( -30.0213, 218.234, -61.2612, 0.48 ) }
    dend_59 { pt3dadd( -30.6832, 218.324, -61.1604, 0.12 ) }
    dend_59 { pt3dadd( -31.0718, 218.386, -61.0934, 0.12 ) }
    dend_59 { pt3dadd( -31.5309, 218.478, -61.0221, 0.12 ) }
    dend_59 { pt3dadd( -31.9882, 218.593, -60.9277, 0.72 ) }
    dend_59 { pt3dadd( -33.4203, 219.063, -60.6196, 0.12 ) }
    dend_59 { pt3dadd( -34.039, 219.314, -60.4995, 0.12 ) }
    dend_59 { pt3dadd( -35.0023, 219.752, -60.3016, 1.8 ) }
    dend_59 { pt3dadd( -35.6447, 220.064, -60.1456, 2.04 ) }
    dend_59 { pt3dadd( -37.1567, 220.825, -59.7599, 0.24 ) }
    dend_59 { pt3dadd( -37.7282, 221.127, -59.6166, 0.24 ) }
    dend_59 { pt3dadd( -38.453, 221.55, -59.4674, 0.24 ) }
    dend_59 { pt3dadd( -39.5147, 222.218, -59.2447, 0.24 ) }
    dend_59 { pt3dadd( -40.1834, 222.655, -59.0993, 0.96 ) }
    dend_59 { pt3dadd( -40.5686, 222.922, -59.0302, 1.32 ) }
    dend_59 { pt3dadd( -41.188, 223.375, -58.9566, 0.12 ) }
    dend_59 { pt3dadd( -41.865, 223.872, -58.8835, 0.12 ) }
    dend_59 { pt3dadd( -42.8428, 224.611, -58.8301, 0.12 ) }
    dend_59 { pt3dadd( -43.2017, 224.922, -58.8445, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_59 { pt3dadd( -43.4959, 225.221, -58.8683, 0.96 ) }
    dend_59 { pt3dadd( -43.8492, 225.626, -58.9024, 0.24 ) }
    dend_59 { pt3dadd( -44.2613, 226.148, -58.9656, 0.24 ) }
    dend_59 { pt3dadd( -44.5157, 226.506, -59.0183, 0.12 ) }
    dend_59 { pt3dadd( -45.1644, 227.519, -59.1952, 0.12 ) }
    dend_59 { pt3dadd( -45.6352, 228.305, -59.3543, 0.12 ) }
    dend_59 { pt3dadd( -45.9104, 228.787, -59.4568, 0.96 ) }
    dend_59 { pt3dadd( -46.1398, 229.2, -59.6047, 0.12 ) }
    dend_59 { pt3dadd( -46.4649, 229.764, -59.879, 0.12 ) }
    dend_59 { pt3dadd( -46.6063, 229.989, -60.0115, 0.12 ) }
    dend_59 { pt3dadd( -46.7367, 230.196, -60.1634, 1.2 ) }
    dend_59 { pt3dadd( -46.9404, 230.537, -60.4315, 1.2 ) }
    dend_59 { pt3dadd( -47.6641, 231.867, -61.4332, 0.12 ) }
    dend_59 { pt3dadd( -47.9216, 232.399, -61.8869, 0.12 ) }
    dend_59 { pt3dadd( -48.1466, 232.955, -62.3642, 0.12 ) }
    dend_59 { pt3dadd( -48.3472, 233.513, -62.8323, 0.12 ) }
    dend_59 { pt3dadd( -48.4684, 233.913, -63.1703, 0.72 ) }
    dend_59 { pt3dadd( -48.6054, 234.372, -63.5241, 0.84 ) }
    dend_59 { pt3dadd( -49.0314, 235.822, -64.4927, 0.12 ) }
    dend_59 { pt3dadd( -49.2881, 236.763, -65.1684, 0.12 ) }
    dend_59 { pt3dadd( -49.3329, 236.904, -65.2712, 0.24 ) }
    dend_59 { pt3dadd( -49.5552, 237.484, -65.7058, 0.12 ) }
    dend_59 { pt3dadd( -50.0408, 238.686, -66.669, 0.12 ) }
    dend_59 { pt3dadd( -50.1295, 238.88, -66.8279, 1.2 ) }
    dend_59 { pt3dadd( -50.5919, 239.751, -67.5602, 0.12 ) }
    dend_59 { pt3dadd( -51.0266, 240.49, -68.3084, 0.12 ) }
    dend_59 { pt3dadd( -51.3414, 241.035, -68.8883, 0.72 ) }
    dend_59 { pt3dadd( -51.6563, 241.544, -69.5242, 0.12 ) }
    dend_59 { pt3dadd( -51.8748, 241.844, -69.996, 0.12 ) }
    dend_59 { pt3dadd( -52.2712, 242.278, -70.777, 0.12 ) }
    dend_59 { pt3dadd( -52.5876, 242.574, -71.3716, 1.08 ) }
    dend_59 { pt3dadd( -52.8134, 242.763, -71.8282, 1.08 ) }
    dend_59 { pt3dadd( -53.3877, 243.181, -72.917, 0.12 ) }
    dend_59 { pt3dadd( -53.8358, 243.447, -73.7002, 0.12 ) }
    dend_59 { pt3dadd( -53.9591, 243.512, -73.9269, 0.36 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 8.26156, 132.331, -78.9727, 0.12 ) }
    dend_57 { pt3dadd( 8.79658, 133.659, -79.3514, 0.12 ) }
    dend_57 { pt3dadd( 9.39431, 135.183, -79.8111, 2.64 ) }
    dend_57 { pt3dadd( 9.62094, 135.798, -80.0112, 2.16 ) }
    dend_57 { pt3dadd( 10.0443, 137.124, -80.4626, 0.24 ) }
    dend_57 { pt3dadd( 10.3801, 138.302, -80.8452, 0.24 ) }
    dend_57 { pt3dadd( 10.6088, 139.19, -81.1206, 0.24 ) }
    dend_57 { pt3dadd( 10.8807, 140.537, -81.469, 0.96 ) }
    dend_57 { pt3dadd( 11.0229, 141.453, -81.691, 0.12 ) }
    dend_57 { pt3dadd( 11.1493, 142.591, -81.8837, 0.12 ) }
    dend_57 { pt3dadd( 11.2165, 143.485, -81.9523, 0.24 ) }
    dend_57 { pt3dadd( 11.242, 144.021, -81.9525, 0.24 ) }
    dend_57 { pt3dadd( 11.2849, 145.139, -81.8667, 1.68 ) }
    dend_57 { pt3dadd( 11.3152, 145.99, -81.7811, 2.52 ) }
    dend_57 { pt3dadd( 11.4062, 147.411, -81.6801, 1.56 ) }
    dend_57 { pt3dadd( 11.4504, 148.012, -81.6668, 0.48 ) }
    dend_57 { pt3dadd( 11.5612, 149.923, -81.7484, 0.48 ) }
    dend_57 { pt3dadd( 11.6118, 151.01, -81.8481, 1.32 ) }
    dend_57 { pt3dadd( 11.6596, 152.258, -82.062, 0.96 ) }
    dend_57 { pt3dadd( 11.6951, 153.207, -82.2859, 0.12 ) }
    dend_57 { pt3dadd( 11.7324, 154.152, -82.5694, 0.12 ) }
    dend_57 { pt3dadd( 11.7774, 155.314, -82.9433, 1.8 ) }
    dend_57 { pt3dadd( 11.8095, 156.109, -83.2063, 1.92 ) }
    dend_57 { pt3dadd( 11.8455, 157.314, -83.5543, 0.12 ) }
    dend_57 { pt3dadd( 11.8558, 158.284, -83.7329, 0.12 ) }
    dend_57 { pt3dadd( 11.8508, 158.571, -83.7676, 0.48 ) }
    dend_57 { pt3dadd( 11.8355, 159.208, -83.8197, 0.12 ) }
    dend_57 { pt3dadd( 11.8075, 159.892, -83.8419, 0.12 ) }
    dend_57 { pt3dadd( 11.7089, 160.972, -83.8147, 0.72 ) }
    dend_57 { pt3dadd( 11.5885, 161.877, -83.7335, 0.12 ) }
    dend_57 { pt3dadd( 11.4236, 162.85, -83.6551, 0.12 ) }
    dend_57 { pt3dadd( 11.3519, 163.254, -83.6268, 0.48 ) }
    dend_57 { pt3dadd( 11.2806, 163.642, -83.6091, 0.12 ) }
    dend_57 { pt3dadd( 11.1048, 164.617, -83.6184, 0.12 ) }
    dend_57 { pt3dadd( 11.0327, 165.032, -83.6483, 1.2 ) }
    dend_57 { pt3dadd( 10.9089, 165.797, -83.7286, 1.32 ) }
    dend_57 { pt3dadd( 10.8126, 166.612, -83.782, 0.84 ) }
    dend_57 { pt3dadd( 10.779, 166.975, -83.7935, 0.12 ) }
    dend_57 { pt3dadd( 10.7156, 167.794, -83.787, 0.12 ) }
    dend_57 { pt3dadd( 10.7061, 168.068, -83.7719, 0.6 ) }
    dend_57 { pt3dadd( 10.7088, 168.645, -83.7252, 0.12 ) }
    dend_57 { pt3dadd( 10.7712, 169.929, -83.5856, 0.12 ) }
    dend_57 { pt3dadd( 10.8187, 170.477, -83.5229, 0.6 ) }
    dend_57 { pt3dadd( 10.8835, 170.917, -83.5388, 0.12 ) }
    dend_57 { pt3dadd( 11.0208, 171.585, -83.6287, 0.12 ) }
    dend_57 { pt3dadd( 11.2593, 172.711, -83.8553, 1.56 ) }
    dend_57 { pt3dadd( 11.3441, 173.122, -83.9607, 2.04 ) }
    dend_57 { pt3dadd( 11.5102, 173.981, -84.2081, 1.68 ) }
    dend_57 { pt3dadd( 12.0247, 176.4, -84.9931, 0.12 ) }
    dend_57 { pt3dadd( 12.2822, 177.552, -85.424, 0.12 ) }
    dend_57 { pt3dadd( 12.4435, 178.291, -85.7473, 0.12 ) }
    dend_57 { pt3dadd( 12.5678, 178.896, -86.0439, 1.08 ) }
    dend_57 { pt3dadd( 12.6591, 179.367, -86.2837, 1.56 ) }
    dend_57 { pt3dadd( 12.8857, 180.495, -86.9241, 0.12 ) }
    dend_57 { pt3dadd( 13.1995, 181.876, -87.713, 0.12 ) }
    dend_57 { pt3dadd( 13.464, 182.741, -88.3005, 0.48 ) }
    dend_57 { pt3dadd( 13.7863, 183.576, -88.9463, 0.48 ) }
    dend_57 { pt3dadd( 13.9793, 183.991, -89.2901, 0.48 ) }
    dend_57 { pt3dadd( 14.5586, 185.048, -90.2965, 1.44 ) }
    dend_57 { pt3dadd( 14.8289, 185.498, -90.7369, 1.92 ) }
    dend_57 { pt3dadd( 15.2941, 186.17, -91.3862, 1.44 ) }
    dend_57 { pt3dadd( 15.9314, 186.981, -92.2127, 0.48 ) }
    dend_57 { pt3dadd( 16.7284, 187.933, -93.1975, 0.36 ) }
    dend_57 { pt3dadd( 17.7629, 189.12, -94.4093, 0.12 ) }
    dend_57 { pt3dadd( 18.3574, 189.794, -95.0524, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_57 { pt3dadd( 18.8276, 190.322, -95.5597, 1.2 ) }
    dend_57 { pt3dadd( 20.0594, 191.709, -96.7861, 0.12 ) }
    dend_57 { pt3dadd( 20.4564, 192.126, -97.14, 0.12 ) }
    dend_57 { pt3dadd( 20.7162, 192.377, -97.3481, 0.6 ) }
    dend_57 { pt3dadd( 21.0401, 192.687, -97.5559, 0.6 ) }
    dend_57 { pt3dadd( 21.6926, 193.295, -97.9865, 0.36 ) }
    dend_57 { pt3dadd( 22.144, 193.725, -98.2492, 0.36 ) }
    dend_57 { pt3dadd( 22.9028, 194.484, -98.5675, 0.12 ) }
    dend_57 { pt3dadd( 23.3606, 194.97, -98.7219, 0.12 ) }
    dend_57 { pt3dadd( 24.0723, 195.777, -98.9258, 0.12 ) }
    dend_57 { pt3dadd( 24.97, 196.851, -99.1856, 1.56 ) }
    dend_57 { pt3dadd( 25.5367, 197.56, -99.3325, 2.16 ) }
    dend_57 { pt3dadd( 26.345, 198.647, -99.5476, 0.24 ) }
    dend_57 { pt3dadd( 27.412, 200.22, -99.9295, 0.24 ) }
    dend_57 { pt3dadd( 27.8346, 200.935, -100.141, 0.12 ) }
    dend_57 { pt3dadd( 28.5216, 202.233, -100.576, 1.68 ) }
    dend_57 { pt3dadd( 28.7147, 202.655, -100.745, 2.28 ) }
    dend_57 { pt3dadd( 28.9007, 203.136, -100.976, 2.28 ) }
    dend_57 { pt3dadd( 29.4796, 204.887, -102.015, 0.12 ) }
    dend_57 { pt3dadd( 29.7757, 206.008, -102.776, 0.12 ) }
    dend_57 { pt3dadd( 29.8464, 206.346, -103.019, 0.6 ) }
    dend_57 { pt3dadd( 30.0285, 207.504, -103.944, 0.24 ) }
    dend_57 { pt3dadd( 30.0972, 208.11, -104.495, 0.24 ) }
    dend_57 { pt3dadd( 30.1716, 208.873, -105.219, 0.24 ) }
    dend_57 { pt3dadd( 30.1979, 209.393, -105.726, 0.96 ) }
    dend_57 { pt3dadd( 30.2072, 210.087, -106.461, 1.44 ) }
    dend_57 { pt3dadd( 30.1696, 211.339, -107.796, 0.12 ) }
    dend_57 { pt3dadd( 30.0735, 212.52, -108.942, 0.12 ) }
    dend_57 { pt3dadd( 30.0217, 213.016, -109.398, 0.12 ) }
    dend_57 { pt3dadd( 29.9967, 213.179, -109.527, 0.48 ) }
    dend_57 { pt3dadd( 29.9426, 213.529, -109.777, 0.48 ) }
    dend_57 { pt3dadd( 29.9149, 213.694, -109.875, 0.48 ) }
    dend_57 { pt3dadd( 29.715, 214.696, -110.333, 0.48 ) }
    dend_57 { pt3dadd( 29.486, 215.792, -110.778, 1.32 ) }
    dend_57 { pt3dadd( 29.3693, 216.357, -111.005, 1.8 ) }
    dend_57 { pt3dadd( 29.2301, 217.216, -111.315, 0.96 ) }
    dend_57 { pt3dadd( 29.1195, 218.009, -111.565, 0.12 ) }
    dend_57 { pt3dadd( 28.981, 219.179, -111.916, 0.12 ) }
    dend_57 { pt3dadd( 28.9051, 219.839, -112.096, 1.2 ) }
    dend_57 { pt3dadd( 28.8756, 220.368, -112.234, 1.56 ) }
    dend_57 { pt3dadd( 28.8978, 221.104, -112.48, 0.12 ) }
    dend_57 { pt3dadd( 28.9918, 222.275, -112.911, 0.12 ) }
    dend_57 { pt3dadd( 29.1395, 223.344, -113.332, 0.12 ) }
    dend_57 { pt3dadd( 29.3881, 224.407, -113.898, 0.12 ) }
    dend_57 { pt3dadd( 29.8776, 226.142, -114.956, 0.12 ) }
    dend_57 { pt3dadd( 30.3516, 227.579, -115.973, 0.12 ) }
    dend_57 { pt3dadd( 30.5528, 228.137, -116.394, 0.84 ) }
    dend_57 { pt3dadd( 30.6975, 228.517, -116.687, 0.96 ) }
    dend_57 { pt3dadd( 31.4037, 230.426, -118.161, 0.12 ) }
    dend_57 { pt3dadd( 31.6761, 231.255, -118.806, 0.12 ) }
    dend_57 { pt3dadd( 31.8109, 232.083, -119.382, 0.12 ) }
    dend_57 { pt3dadd( 31.856, 232.943, -119.899, 0.12 ) }
    dend_57 { pt3dadd( 31.8481, 233.682, -120.351, 0.36 ) }
    dend_57 { pt3dadd( 31.8323, 233.802, -120.415, 0.12 ) }
    dend_57 { pt3dadd( 31.589, 234.367, -120.479, 0.12 ) }
    dend_57 { pt3dadd( 31.204, 234.933, -120.511, 0.48 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 56/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 8.26156, 132.331, -78.9727, 0.12 ) }
    dend_56 { pt3dadd( 8.14446, 133.242, -83.3095, 0.12 ) }
    dend_56 { pt3dadd( 8.07161, 133.443, -84.123, 0.12 ) }
    dend_56 { pt3dadd( 7.87464, 133.724, -85.1246, 0.12 ) }
    dend_56 { pt3dadd( 7.70142, 133.919, -85.7497, 0.84 ) }
    dend_56 { pt3dadd( 7.26062, 134.351, -87.0444, 1.8 ) }
    dend_56 { pt3dadd( 7.08612, 134.507, -87.4783, 1.92 ) }
    dend_56 { pt3dadd( 6.51304, 134.913, -88.2672, 0.12 ) }
    dend_56 { pt3dadd( 5.77821, 135.483, -89.1736, 0.12 ) }
    dend_56 { pt3dadd( 5.25466, 135.892, -89.7165, 0.96 ) }
    dend_56 { pt3dadd( 4.98972, 136.106, -89.9602, 1.2 ) }
    dend_56 { pt3dadd( 4.33236, 136.647, -90.4708, 0.12 ) }
    dend_56 { pt3dadd( 3.90709, 137.039, -90.8231, 0.12 ) }
    dend_56 { pt3dadd( 3.09489, 137.934, -91.5171, 0.12 ) }
    dend_56 { pt3dadd( 2.81774, 138.294, -91.7699, 1.2 ) }
    dend_56 { pt3dadd( 2.64615, 138.528, -91.9229, 1.44 ) }
    dend_56 { pt3dadd( 2.30091, 139.048, -92.285, 0.6 ) }
    dend_56 { pt3dadd( 1.88536, 139.697, -92.7691, 0.12 ) }
    dend_56 { pt3dadd( 1.51329, 140.237, -93.2338, 0.12 ) }
    dend_56 { pt3dadd( 1.24866, 140.581, -93.6191, 0.96 ) }
    dend_56 { pt3dadd( 1.06028, 140.806, -93.9067, 1.32 ) }
    dend_56 { pt3dadd( 0.516093, 141.355, -94.7044, 0.12 ) }
    dend_56 { pt3dadd( 0.209341, 141.601, -95.124, 0.12 ) }
    dend_56 { pt3dadd( -0.164304, 141.841, -95.6353, 0.12 ) }
    dend_56 { pt3dadd( -0.836444, 142.194, -96.5883, 0.12 ) }
    dend_56 { pt3dadd( -1.23952, 142.389, -97.1634, 1.08 ) }
    dend_56 { pt3dadd( -1.53849, 142.518, -97.5682, 1.8 ) }
    dend_56 { pt3dadd( -1.92291, 142.663, -98.1171, 1.2 ) }
    dend_56 { pt3dadd( -2.50366, 142.881, -99.0112, 0.12 ) }
    dend_56 { pt3dadd( -2.7779, 142.982, -99.4354, 0.12 ) }
    dend_56 { pt3dadd( -3.00812, 143.058, -99.7769, 0.12 ) }
    dend_56 { pt3dadd( -3.25996, 143.14, -100.223, 0.12 ) }
    dend_56 { pt3dadd( -4.13946, 143.405, -101.909, 0.12 ) }
    dend_56 { pt3dadd( -4.33176, 143.458, -102.277, 1.44 ) }
    dend_56 { pt3dadd( -4.53481, 143.515, -102.752, 2.04 ) }
    dend_56 { pt3dadd( -4.83363, 143.58, -103.537, 1.32 ) }
    dend_56 { pt3dadd( -5.50055, 143.659, -105.243, 0.12 ) }
    dend_56 { pt3dadd( -5.72534, 143.666, -105.789, 0.12 ) }
    dend_56 { pt3dadd( -5.94981, 143.643, -106.256, 0.96 ) }
    dend_56 { pt3dadd( -6.94871, 143.431, -108.236, 0.12 ) }
    dend_56 { pt3dadd( -7.35019, 143.309, -108.942, 0.12 ) }
    dend_56 { pt3dadd( -7.81257, 143.136, -109.676, 1.56 ) }
    dend_56 { pt3dadd( -8.02921, 143.044, -109.958, 1.8 ) }
    dend_56 { pt3dadd( -8.62529, 142.784, -110.73, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_56 { pt3dadd( -8.79411, 142.713, -110.93, 0.12 ) }
    dend_56 { pt3dadd( -9.18667, 142.561, -111.338, 0.48 ) }
    dend_56 { pt3dadd( -9.96198, 142.271, -112.256, 0.12 ) }
    dend_56 { pt3dadd( -10.4582, 142.091, -112.898, 0.12 ) }
    dend_56 { pt3dadd( -10.8798, 141.945, -113.41, 1.32 ) }
    dend_56 { pt3dadd( -11.1926, 141.828, -113.754, 1.56 ) }
    dend_56 { pt3dadd( -11.894, 141.505, -114.392, 0.12 ) }
    dend_56 { pt3dadd( -12.2429, 141.294, -114.644, 0.12 ) }
    dend_56 { pt3dadd( -12.4171, 141.171, -114.735, 0.48 ) }
    dend_56 { pt3dadd( -12.9591, 140.726, -114.995, 0.12 ) }
    dend_56 { pt3dadd( -13.4922, 140.261, -115.223, 0.12 ) }
    dend_56 { pt3dadd( -14.2003, 139.622, -115.485, 0.12 ) }
    dend_56 { pt3dadd( -14.852, 139.025, -115.689, 0.12 ) }
    dend_56 { pt3dadd( -15.1121, 138.784, -115.774, 0.72 ) }
    dend_56 { pt3dadd( -15.3601, 138.573, -115.826, 0.12 ) }
    dend_56 { pt3dadd( -16.0353, 138.057, -115.921, 0.12 ) }
    dend_56 { pt3dadd( -16.4948, 137.759, -115.958, 0.12 ) }
    dend_56 { pt3dadd( -17.0001, 137.473, -115.981, 1.44 ) }
    dend_56 { pt3dadd( -17.5544, 137.192, -116.0, 1.8 ) }
    dend_56 { pt3dadd( -19.2066, 136.39, -116.059, 0.12 ) }
    dend_56 { pt3dadd( -19.7347, 136.149, -116.069, 0.12 ) }
    dend_56 { pt3dadd( -21.14, 135.55, -116.093, 0.12 ) }
    dend_56 { pt3dadd( -21.446, 135.432, -116.111, 0.24 ) }
    dend_56 { pt3dadd( -21.6924, 135.351, -116.118, 0.12 ) }
    dend_56 { pt3dadd( -22.0432, 135.242, -116.122, 0.12 ) }
    dend_56 { pt3dadd( -23.008, 134.987, -116.171, 1.32 ) }
    dend_56 { pt3dadd( -23.1217, 134.963, -116.17, 1.56 ) }
    dend_56 { pt3dadd( -23.9336, 134.847, -116.126, 1.56 ) }
    dend_56 { pt3dadd( -25.1142, 134.726, -116.09, 0.24 ) }
    dend_56 { pt3dadd( -25.3533, 134.714, -116.091, 0.12 ) }
    dend_56 { pt3dadd( -26.0945, 134.716, -116.152, 0.12 ) }
    dend_56 { pt3dadd( -26.7074, 134.739, -116.275, 0.12 ) }
    dend_56 { pt3dadd( -26.956, 134.751, -116.333, 0.48 ) }
    dend_56 { pt3dadd( -27.3557, 134.784, -116.453, 0.48 ) }
    dend_56 { pt3dadd( -27.5672, 134.81, -116.546, 0.12 ) }
    dend_56 { pt3dadd( -28.4368, 134.916, -116.933, 0.12 ) }
    dend_56 { pt3dadd( -29.0807, 134.952, -117.222, 0.72 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 37/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -53.9566, 46.0543, -69.2839, 0.12 ) }
    dend_52 { pt3dadd( -55.1478, 44.7752, -70.494, 0.12 ) }
    dend_52 { pt3dadd( -55.8639, 44.0866, -71.3003, 0.12 ) }
    dend_52 { pt3dadd( -56.7682, 43.2313, -72.3025, 0.12 ) }
    dend_52 { pt3dadd( -56.9779, 43.0332, -72.5295, 1.56 ) }
    dend_52 { pt3dadd( -57.447, 42.5846, -73.0163, 1.56 ) }
    dend_52 { pt3dadd( -57.9225, 42.1296, -73.4753, 0.96 ) }
    dend_52 { pt3dadd( -58.8196, 41.3353, -74.2626, 0.12 ) }
    dend_52 { pt3dadd( -59.383, 40.8652, -74.7796, 0.12 ) }
    dend_52 { pt3dadd( -59.5558, 40.7165, -74.917, 0.12 ) }
    dend_52 { pt3dadd( -59.9037, 40.3944, -75.1592, 0.12 ) }
    dend_52 { pt3dadd( -60.3244, 39.9704, -75.4549, 0.6 ) }
    dend_52 { pt3dadd( -60.5881, 39.6818, -75.6321, 0.72 ) }
    dend_52 { pt3dadd( -61.6431, 38.4112, -76.2687, 0.12 ) }
    dend_52 { pt3dadd( -62.1201, 37.841, -76.6954, 0.12 ) }
    dend_52 { pt3dadd( -62.7836, 36.9986, -77.3747, 2.04 ) }
    dend_52 { pt3dadd( -63.8828, 35.541, -78.6588, 0.12 ) }
    dend_52 { pt3dadd( -64.3637, 34.8864, -79.2556, 0.12 ) }
    dend_52 { pt3dadd( -64.8967, 34.1858, -79.9481, 2.28 ) }
    dend_52 { pt3dadd( -66.6382, 31.9342, -82.1843, 0.12 ) }
    dend_52 { pt3dadd( -67.214, 31.2453, -82.945, 0.12 ) }
    dend_52 { pt3dadd( -67.698, 30.7854, -83.6624, 0.12 ) }
    dend_52 { pt3dadd( -67.916, 30.6116, -83.9888, 0.12 ) }
    dend_52 { pt3dadd( -68.7529, 30.036, -85.1861, 0.12 ) }
    dend_52 { pt3dadd( -69.3121, 29.7169, -85.9187, 1.92 ) }
    dend_52 { pt3dadd( -69.6875, 29.5233, -86.3382, 2.28 ) }
    dend_52 { pt3dadd( -72.9182, 27.9673, -89.9078, 0.12 ) }
    dend_52 { pt3dadd( -73.2622, 27.798, -90.2642, 0.12 ) }
    dend_52 { pt3dadd( -74.1227, 27.3495, -91.1357, 1.8 ) }
    dend_52 { pt3dadd( -74.4795, 27.1489, -91.4761, 1.8 ) }
    dend_52 { pt3dadd( -75.0337, 26.8124, -91.9838, 1.2 ) }
    dend_52 { pt3dadd( -76.019, 26.052, -92.771, 0.12 ) }
    dend_52 { pt3dadd( -76.4804, 25.5647, -92.9278, 0.12 ) }
    dend_52 { pt3dadd( -76.6387, 25.3878, -92.9999, 0.6 ) }
    dend_52 { pt3dadd( -77.0129, 24.8924, -93.2116, 0.12 ) }
    dend_52 { pt3dadd( -77.5214, 24.1329, -93.5424, 0.12 ) }
    dend_52 { pt3dadd( -77.6389, 23.9519, -93.6168, 0.36 ) }
    dend_52 { pt3dadd( -77.9031, 23.5435, -93.8331, 0.36 ) }
    dend_52 { pt3dadd( -78.0848, 23.2616, -94.0218, 0.12 ) }
    dend_52 { pt3dadd( -78.6405, 22.3949, -94.5916, 0.12 ) }
    dend_52 { pt3dadd( -79.1471, 21.6479, -95.2653, 0.12 ) }
    dend_52 { pt3dadd( -79.3332, 21.3703, -95.5347, 0.96 ) }
    dend_52 { pt3dadd( -80.1371, 20.1123, -96.7493, 0.12 ) }
    dend_52 { pt3dadd( -80.463, 19.6196, -97.3392, 0.12 ) }
    dend_52 { pt3dadd( -80.9762, 18.8437, -98.3442, 2.76 ) }
    dend_52 { pt3dadd( -82.2743, 16.9457, -101.155, 0.12 ) }
    dend_52 { pt3dadd( -82.6846, 16.3326, -102.084, 0.12 ) }
    dend_52 { pt3dadd( -82.8396, 16.0844, -102.467, 0.96 ) }
    dend_52 { pt3dadd( -83.8605, 14.2471, -105.388, 0.12 ) }
    dend_52 { pt3dadd( -84.0539, 13.8534, -106.1, 0.12 ) }
    dend_52 { pt3dadd( -84.3389, 13.0849, -107.593, 0.12 ) }
    dend_52 { pt3dadd( -84.378, 12.8639, -108.003, 1.2 ) }
    dend_52 { pt3dadd( -84.396, 12.5034, -108.67, 2.28 ) }
    dend_52 { pt3dadd( -84.3115, 11.576, -110.195, 1.68 ) }
    dend_52 { pt3dadd( -84.0632, 10.7688, -111.192, 0.12 ) }
    dend_52 { pt3dadd( -83.8931, 10.3752, -111.728, 0.12 ) }
    dend_52 { pt3dadd( -83.7832, 10.1577, -112.014, 0.12 ) }
    dend_52 { pt3dadd( -83.6471, 9.87791, -112.447, 0.12 ) }
    dend_52 { pt3dadd( -83.5127, 9.57456, -112.89, 0.6 ) }
    dend_52 { pt3dadd( -83.4135, 9.34932, -113.171, 0.6 ) }
    dend_52 { pt3dadd( -83.1988, 8.53793, -114.376, 0.24 ) }
    dend_52 { pt3dadd( -83.1922, 8.3623, -114.686, 0.24 ) }
    dend_52 { pt3dadd( -83.2604, 7.79427, -115.79, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_52 { pt3dadd( -83.393, 7.13935, -116.98, 2.4 ) }
    dend_52 { pt3dadd( -83.4204, 7.01734, -117.183, 2.4 ) }
    dend_52 { pt3dadd( -83.9393, 5.45486, -119.912, 0.12 ) }
    dend_52 { pt3dadd( -84.3578, 4.3652, -121.772, 0.12 ) }
    dend_52 { pt3dadd( -84.6372, 3.69631, -122.914, 0.12 ) }
    dend_52 { pt3dadd( -84.9321, 3.06489, -124.013, 3.12 ) }
    dend_52 { pt3dadd( -85.0811, 2.78604, -124.508, 3.12 ) }
    dend_52 { pt3dadd( -86.4599, 0.270551, -128.65, 0.12 ) }
    dend_52 { pt3dadd( -86.6702, -0.10746, -129.218, 0.12 ) }
    dend_52 { pt3dadd( -86.7814, -0.301347, -129.497, 0.48 ) }
    dend_52 { pt3dadd( -87.0307, -0.736288, -130.098, 0.12 ) }
    dend_52 { pt3dadd( -87.2462, -1.07711, -130.59, 0.12 ) }
    dend_52 { pt3dadd( -87.4405, -1.30999, -130.963, 0.48 ) }
    dend_52 { pt3dadd( -87.8352, -1.72282, -131.593, 0.12 ) }
    dend_52 { pt3dadd( -88.1932, -2.06935, -132.145, 0.12 ) }
    dend_52 { pt3dadd( -89.142, -3.04081, -133.581, 2.76 ) }
    dend_52 { pt3dadd( -89.3212, -3.23821, -133.847, 2.76 ) }
    dend_52 { pt3dadd( -91.2643, -5.48178, -136.724, 0.12 ) }
    dend_52 { pt3dadd( -91.5363, -5.82705, -137.125, 0.12 ) }
    dend_52 { pt3dadd( -91.8661, -6.27932, -137.614, 0.12 ) }
    dend_52 { pt3dadd( -92.3365, -6.95908, -138.322, 0.12 ) }
    dend_52 { pt3dadd( -92.8603, -7.76481, -139.109, 1.8 ) }
    dend_52 { pt3dadd( -93.1766, -8.32838, -139.633, 2.16 ) }
    dend_52 { pt3dadd( -93.4572, -8.9147, -140.097, 1.92 ) }
    dend_52 { pt3dadd( -94.2477, -10.3467, -141.423, 0.12 ) }
    dend_52 { pt3dadd( -94.4489, -10.6534, -141.735, 0.72 ) }
    dend_52 { pt3dadd( -94.9201, -11.1989, -142.343, 0.72 ) }
    dend_52 { pt3dadd( -95.2059, -11.4951, -142.645, 0.12 ) }
    dend_52 { pt3dadd( -95.7707, -12.0441, -143.139, 0.12 ) }
    dend_52 { pt3dadd( -96.3725, -12.6107, -143.574, 0.12 ) }
    dend_52 { pt3dadd( -96.965, -13.203, -143.907, 2.4 ) }
    dend_52 { pt3dadd( -98.3057, -14.6059, -144.581, 0.12 ) }
    dend_52 { pt3dadd( -99.122, -15.5081, -144.955, 0.12 ) }
    dend_52 { pt3dadd( -99.4398, -15.9005, -145.094, 0.6 ) }
    dend_52 { pt3dadd( -99.655, -16.1899, -145.202, 0.12 ) }
    dend_52 { pt3dadd( -100.066, -16.7752, -145.405, 0.12 ) }
    dend_52 { pt3dadd( -100.193, -16.9651, -145.472, 0.48 ) }
    dend_52 { pt3dadd( -100.553, -17.5249, -145.731, 0.12 ) }
    dend_52 { pt3dadd( -101.4, -18.8104, -146.486, 0.12 ) }
    dend_52 { pt3dadd( -102.049, -19.7877, -147.109, 1.68 ) }
    dend_52 { pt3dadd( -102.303, -20.1675, -147.364, 2.16 ) }
    dend_52 { pt3dadd( -102.504, -20.4835, -147.574, 2.16 ) }
    dend_52 { pt3dadd( -103.57, -22.2524, -148.75, 0.12 ) }
    dend_52 { pt3dadd( -103.886, -22.7966, -149.096, 0.12 ) }
    dend_52 { pt3dadd( -104.048, -23.0703, -149.279, 0.48 ) }
    dend_52 { pt3dadd( -104.102, -23.1619, -149.332, 0.12 ) }
    dend_52 { pt3dadd( -104.619, -23.994, -149.758, 0.12 ) }
    dend_52 { pt3dadd( -105.139, -24.7572, -150.05, 0.12 ) }
    dend_52 { pt3dadd( -105.543, -25.2528, -150.237, 1.68 ) }
    dend_52 { pt3dadd( -105.855, -25.5751, -150.398, 1.92 ) }
    dend_52 { pt3dadd( -106.543, -26.2001, -150.749, 0.12 ) }
    dend_52 { pt3dadd( -107.013, -26.574, -150.974, 0.12 ) }
    dend_52 { pt3dadd( -107.613, -26.9824, -151.222, 1.32 ) }
    dend_52 { pt3dadd( -109.22, -28.0143, -151.88, 0.12 ) }
    dend_52 { pt3dadd( -109.82, -28.3871, -152.147, 0.12 ) }
    dend_52 { pt3dadd( -110.238, -28.6317, -152.368, 0.48 ) }
    dend_52 { pt3dadd( -110.535, -28.7873, -152.538, 0.12 ) }
    dend_52 { pt3dadd( -111.262, -29.1213, -153.0, 0.12 ) }
    dend_52 { pt3dadd( -112.229, -29.5241, -153.602, 0.12 ) }
    dend_52 { pt3dadd( -112.458, -29.601, -153.734, 0.96 ) }
    dend_52 { pt3dadd( -113.573, -29.886, -154.333, 0.12 ) }
    dend_52 { pt3dadd( -114.011, -29.9803, -154.551, 0.12 ) }
    dend_52 { pt3dadd( -115.008, -30.1591, -154.998, 1.44 ) }
    dend_52 { pt3dadd( -115.847, -30.2892, -155.314, 1.8 ) }
    dend_52 { pt3dadd( -117.132, -30.4747, -155.656, 0.12 ) }
    dend_52 { pt3dadd( -118.716, -30.7032, -155.95, 0.12 ) }
    dend_52 { pt3dadd( -119.093, -30.7568, -155.985, 0.48 ) }
    dend_52 { pt3dadd( -119.339, -30.7899, -155.997, 0.12 ) }
    dend_52 { pt3dadd( -120.005, -30.8906, -155.989, 0.12 ) }
    dend_52 { pt3dadd( -120.489, -30.9682, -155.971, 1.08 ) }
    dend_52 { pt3dadd( -121.081, -31.0793, -155.914, 1.68 ) }
    dend_52 { pt3dadd( -122.184, -31.2938, -155.768, 0.12 ) }
    dend_52 { pt3dadd( -122.66, -31.3898, -155.698, 0.12 ) }
    dend_52 { pt3dadd( -122.983, -31.4706, -155.648, 0.48 ) }
    dend_52 { pt3dadd( -123.218, -31.5409, -155.609, 0.12 ) }
    dend_52 { pt3dadd( -124.167, -31.8846, -155.519, 0.12 ) }
    dend_52 { pt3dadd( -125.229, -32.3795, -155.483, 1.68 ) }
    dend_52 { pt3dadd( -126.0, -32.8493, -155.548, 0.12 ) }
    dend_52 { pt3dadd( -126.721, -33.3587, -155.71, 0.12 ) }
    dend_52 { pt3dadd( -127.225, -33.7606, -155.88, 0.6 ) }
    dend_52 { pt3dadd( -128.268, -34.6934, -156.341, 0.12 ) }
    dend_52 { pt3dadd( -128.921, -35.3699, -156.702, 0.12 ) }
    dend_52 { pt3dadd( -129.793, -36.3261, -157.295, 0.12 ) }
    dend_52 { pt3dadd( -130.097, -36.667, -157.506, 0.12 ) }
    dend_52 { pt3dadd( -130.419, -37.0199, -157.72, 1.68 ) }
    dend_52 { pt3dadd( -130.736, -37.3676, -157.904, 2.28 ) }
    dend_52 { pt3dadd( -131.334, -37.9913, -158.146, 1.56 ) }
    dend_52 { pt3dadd( -132.187, -38.8056, -158.398, 0.12 ) }
    dend_52 { pt3dadd( -132.613, -39.2191, -158.443, 0.12 ) }
    dend_52 { pt3dadd( -132.987, -39.584, -158.476, 0.12 ) }
    dend_52 { pt3dadd( -133.411, -39.9996, -158.511, 1.32 ) }
    dend_52 { pt3dadd( -133.76, -40.3442, -158.533, 1.56 ) }
    dend_52 { pt3dadd( -134.287, -40.8636, -158.56, 0.12 ) }
    dend_52 { pt3dadd( -135.657, -42.2547, -158.578, 0.12 ) }
    dend_52 { pt3dadd( -136.492, -43.1044, -158.603, 1.8 ) }
    dend_52 { pt3dadd( -136.778, -43.4132, -158.617, 2.52 ) }
    dend_52 { pt3dadd( -137.012, -43.6646, -158.629, 2.52 ) }
    dend_52 { pt3dadd( -137.766, -44.473, -158.689, 0.12 ) }
    dend_52 { pt3dadd( -138.748, -45.5285, -158.787, 0.12 ) }
    dend_52 { pt3dadd( -139.217, -46.0395, -158.826, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_52 { pt3dadd( -139.779, -46.6862, -158.852, 2.04 ) }
    dend_52 { pt3dadd( -140.392, -47.4145, -158.884, 2.04 ) }
    dend_52 { pt3dadd( -141.237, -48.4557, -158.928, 0.12 ) }
    dend_52 { pt3dadd( -141.742, -49.1164, -158.945, 0.12 ) }
    dend_52 { pt3dadd( -142.039, -49.5478, -158.958, 0.72 ) }
    dend_52 { pt3dadd( -142.175, -49.7767, -158.952, 0.12 ) }
    dend_52 { pt3dadd( -142.466, -50.3357, -158.905, 0.12 ) }
    dend_52 { pt3dadd( -142.567, -50.5795, -158.872, 0.48 ) }
    dend_52 { pt3dadd( -142.699, -50.9191, -158.839, 0.12 ) }
    dend_52 { pt3dadd( -143.153, -52.1496, -158.828, 0.12 ) }
    dend_52 { pt3dadd( -143.442, -52.9781, -158.872, 1.56 ) }
    dend_52 { pt3dadd( -143.576, -53.3809, -158.913, 1.8 ) }
    dend_52 { pt3dadd( -143.723, -53.8584, -158.987, 1.8 ) }
    dend_52 { pt3dadd( -144.183, -55.3947, -159.288, 0.12 ) }
    dend_52 { pt3dadd( -144.478, -56.3917, -159.533, 0.12 ) }
    dend_52 { pt3dadd( -144.478, -56.3917, -159.533, 0.48 ) }
    dend_52 { pt3dadd( -144.539, -56.6043, -159.622, 0.12 ) }
    dend_52 { pt3dadd( -144.69, -57.2298, -159.932, 0.12 ) }
    dend_52 { pt3dadd( -144.734, -57.4574, -160.063, 0.48 ) }
    dend_52 { pt3dadd( -144.772, -57.6701, -160.185, 0.12 ) }
    dend_52 { pt3dadd( -144.984, -58.6149, -160.884, 0.12 ) }
    dend_52 { pt3dadd( -145.284, -59.8149, -161.816, 0.48 ) }
    dend_52 { pt3dadd( -145.376, -60.1651, -162.062, 0.12 ) }
    dend_52 { pt3dadd( -145.573, -60.9272, -162.565, 1.56 ) }
    dend_52 { pt3dadd( -145.749, -61.6228, -162.986, 1.92 ) }
    dend_52 { pt3dadd( -146.008, -62.6825, -163.561, 1.56 ) }
    dend_52 { pt3dadd( -146.134, -63.1997, -163.841, 0.12 ) }
    dend_52 { pt3dadd( -146.741, -65.5626, -164.94, 0.12 ) }
    dend_52 { pt3dadd( -146.826, -65.8888, -165.085, 0.84 ) }
    dend_52 { pt3dadd( -146.916, -66.2323, -165.233, 0.12 ) }
    dend_52 { pt3dadd( -147.05, -66.7665, -165.464, 0.12 ) }
    dend_52 { pt3dadd( -147.421, -68.4058, -166.113, 0.12 ) }
    dend_52 { pt3dadd( -147.768, -69.8841, -166.825, 2.4 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 33/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -53.9566, 46.0543, -69.2839, 0.12 ) }
    dend_51 { pt3dadd( -54.664, 46.9189, -70.2187, 0.12 ) }
    dend_51 { pt3dadd( -55.1531, 47.5461, -70.8834, 0.12 ) }
    dend_51 { pt3dadd( -55.9195, 48.6376, -71.8978, 2.4 ) }
    dend_51 { pt3dadd( -57.1578, 50.4756, -73.5838, 0.24 ) }
    dend_51 { pt3dadd( -57.4046, 50.8539, -73.9156, 0.24 ) }
    dend_51 { pt3dadd( -57.65, 51.2494, -74.2424, 1.44 ) }
    dend_51 { pt3dadd( -58.1357, 52.0693, -74.8954, 0.12 ) }
    dend_51 { pt3dadd( -58.6436, 53.0336, -75.632, 0.12 ) }
    dend_51 { pt3dadd( -59.0317, 53.8957, -76.1759, 0.12 ) }
    dend_51 { pt3dadd( -59.3993, 54.7382, -76.6636, 2.28 ) }
    dend_51 { pt3dadd( -59.8587, 55.7664, -77.3007, 0.12 ) }
    dend_51 { pt3dadd( -60.2408, 56.5953, -77.8105, 0.12 ) }
    dend_51 { pt3dadd( -60.7459, 57.6931, -78.4598, 0.12 ) }
    dend_51 { pt3dadd( -61.3102, 58.9033, -79.1618, 2.76 ) }
    dend_51 { pt3dadd( -62.0045, 60.3717, -80.0006, 0.24 ) }
    dend_51 { pt3dadd( -62.0045, 60.3717, -80.0006, 0.12 ) }
    dend_51 { pt3dadd( -62.3952, 61.2275, -80.4686, 0.12 ) }
    dend_51 { pt3dadd( -62.5804, 61.6346, -80.6918, 0.96 ) }
    dend_51 { pt3dadd( -62.8065, 62.155, -80.9309, 0.96 ) }
    dend_51 { pt3dadd( -63.2813, 63.3096, -81.4307, 0.12 ) }
    dend_51 { pt3dadd( -63.6825, 64.4569, -81.9433, 0.12 ) }
    dend_51 { pt3dadd( -63.8098, 64.8704, -82.1426, 0.72 ) }
    dend_51 { pt3dadd( -64.0151, 65.563, -82.5351, 0.12 ) }
    dend_51 { pt3dadd( -64.2249, 66.288, -82.9566, 0.12 ) }
    dend_51 { pt3dadd( -64.4403, 67.0783, -83.3794, 2.16 ) }
    dend_51 { pt3dadd( -64.8593, 68.5389, -84.2296, 0.12 ) }
    dend_51 { pt3dadd( -64.9919, 68.966, -84.5102, 0.12 ) }
    dend_51 { pt3dadd( -65.2954, 69.91, -85.1613, 0.12 ) }
    dend_51 { pt3dadd( -65.4912, 70.5263, -85.5771, 0.12 ) }
    dend_51 { pt3dadd( -65.7468, 71.2808, -86.1506, 1.44 ) }
    dend_51 { pt3dadd( -66.323, 73.0541, -87.5335, 0.12 ) }
    dend_51 { pt3dadd( -66.513, 73.6483, -87.9683, 0.12 ) }
    dend_51 { pt3dadd( -66.6484, 74.1005, -88.297, 1.56 ) }
    dend_51 { pt3dadd( -66.7875, 74.6277, -88.6681, 1.56 ) }
    dend_51 { pt3dadd( -67.0928, 75.7927, -89.5008, 0.12 ) }
    dend_51 { pt3dadd( -67.2196, 76.3059, -89.8657, 0.12 ) }
    dend_51 { pt3dadd( -67.3149, 76.7537, -90.1144, 0.12 ) }
    dend_51 { pt3dadd( -67.3843, 76.9992, -90.2698, 0.12 ) }
    dend_51 { pt3dadd( -67.699, 77.9159, -90.8459, 0.12 ) }
    dend_51 { pt3dadd( -67.8559, 78.2887, -91.0897, 0.12 ) }
    dend_51 { pt3dadd( -68.1515, 78.883, -91.4531, 1.92 ) }
    dend_51 { pt3dadd( -68.3772, 79.2762, -91.7237, 2.16 ) }
    dend_51 { pt3dadd( -69.2032, 80.5677, -92.6307, 0.12 ) }
    dend_51 { pt3dadd( -69.5416, 81.0491, -92.9526, 0.12 ) }
    dend_51 { pt3dadd( -69.8266, 81.4232, -93.2009, 1.08 ) }
    dend_51 { pt3dadd( -70.185, 81.8335, -93.4878, 1.32 ) }
    dend_51 { pt3dadd( -70.8403, 82.4841, -93.9549, 0.12 ) }
    dend_51 { pt3dadd( -71.3222, 82.8994, -94.2665, 0.12 ) }
    dend_51 { pt3dadd( -71.704, 83.179, -94.4885, 0.48 ) }
    dend_51 { pt3dadd( -72.1037, 83.4263, -94.7189, 0.12 ) }
    dend_51 { pt3dadd( -73.0126, 83.9639, -95.2338, 0.12 ) }
    dend_51 { pt3dadd( -73.5791, 84.3007, -95.5612, 1.44 ) }
    dend_51 { pt3dadd( -73.8968, 84.5046, -95.7507, 1.68 ) }
    dend_51 { pt3dadd( -74.8418, 85.2075, -96.378, 0.12 ) }
    dend_51 { pt3dadd( -75.5097, 85.7735, -96.8239, 0.12 ) }
    dend_51 { pt3dadd( -76.0204, 86.2788, -97.1573, 1.8 ) }
    dend_51 { pt3dadd( -76.4762, 86.8245, -97.45, 2.16 ) }
    dend_51 { pt3dadd( -77.1512, 87.7056, -97.8448, 0.12 ) }
    dend_51 { pt3dadd( -77.5724, 88.2496, -98.1116, 0.12 ) }
    dend_51 { pt3dadd( -77.9024, 88.6549, -98.2967, 0.48 ) }
    dend_51 { pt3dadd( -77.9631, 88.7238, -98.3273, 0.12 ) }
    dend_51 { pt3dadd( -78.3529, 89.0913, -98.5182, 0.12 ) }
    dend_51 { pt3dadd( -79.0187, 89.6296, -98.8701, 1.68 ) }
    dend_51 { pt3dadd( -80.4295, 90.6555, -99.6469, 0.12 ) }
    dend_51 { pt3dadd( -81.0012, 91.0524, -99.9736, 0.12 ) }
    dend_51 { pt3dadd( -81.3447, 91.311, -100.184, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_51 { pt3dadd( -81.9455, 91.8109, -100.55, 0.12 ) }
    dend_51 { pt3dadd( -82.3346, 92.1674, -100.797, 0.12 ) }
    dend_51 { pt3dadd( -82.7728, 92.6214, -101.09, 1.56 ) }
    dend_51 { pt3dadd( -83.1251, 93.013, -101.304, 2.28 ) }
    dend_51 { pt3dadd( -83.9216, 93.9564, -101.757, 0.12 ) }
    dend_51 { pt3dadd( -84.291, 94.3863, -101.946, 0.12 ) }
    dend_51 { pt3dadd( -84.5442, 94.6727, -102.036, 0.48 ) }
    dend_51 { pt3dadd( -84.9885, 95.1541, -102.152, 0.12 ) }
    dend_51 { pt3dadd( -85.3156, 95.4861, -102.229, 0.12 ) }
    dend_51 { pt3dadd( -86.1356, 96.2407, -102.374, 2.16 ) }
    dend_51 { pt3dadd( -87.2775, 97.1624, -102.461, 0.12 ) }
    dend_51 { pt3dadd( -88.0837, 97.7568, -102.477, 0.12 ) }
    dend_51 { pt3dadd( -88.5498, 98.0767, -102.49, 0.6 ) }
    dend_51 { pt3dadd( -88.8647, 98.2771, -102.502, 0.12 ) }
    dend_51 { pt3dadd( -89.4979, 98.6581, -102.522, 0.12 ) }
    dend_51 { pt3dadd( -90.2592, 99.0979, -102.537, 2.4 ) }
    dend_51 { pt3dadd( -90.6213, 99.3146, -102.519, 2.4 ) }
    dend_51 { pt3dadd( -91.9274, 100.113, -102.435, 0.12 ) }
    dend_51 { pt3dadd( -92.985, 100.786, -102.32, 0.12 ) }
    dend_51 { pt3dadd( -93.657, 101.232, -102.216, 1.68 ) }
    dend_51 { pt3dadd( -94.1617, 101.57, -102.118, 2.16 ) }
    dend_51 { pt3dadd( -95.1786, 102.258, -101.844, 0.12 ) }
    dend_51 { pt3dadd( -95.7769, 102.667, -101.631, 0.12 ) }
    dend_51 { pt3dadd( -96.2414, 102.984, -101.408, 0.6 ) }
    dend_51 { pt3dadd( -96.404, 103.093, -101.328, 0.12 ) }
    dend_51 { pt3dadd( -97.3199, 103.693, -100.927, 0.12 ) }
    dend_51 { pt3dadd( -97.6942, 103.939, -100.729, 0.84 ) }
    dend_51 { pt3dadd( -98.0418, 104.173, -100.511, 1.08 ) }
    dend_51 { pt3dadd( -98.2126, 104.296, -100.404, 1.08 ) }
    dend_51 { pt3dadd( -98.466, 104.496, -100.254, 0.12 ) }
    dend_51 { pt3dadd( -98.922, 104.898, -99.9768, 0.12 ) }
    dend_51 { pt3dadd( -99.4624, 105.414, -99.6418, 1.44 ) }
    dend_51 { pt3dadd( -99.8937, 105.817, -99.3919, 1.68 ) }
    dend_51 { pt3dadd( -100.361, 106.252, -99.1199, 0.12 ) }
    dend_51 { pt3dadd( -101.05, 106.885, -98.7396, 0.12 ) }
    dend_51 { pt3dadd( -101.221, 107.037, -98.6529, 1.32 ) }
    dend_51 { pt3dadd( -101.625, 107.37, -98.4798, 0.12 ) }
    dend_51 { pt3dadd( -101.944, 107.619, -98.3581, 0.12 ) }
    dend_51 { pt3dadd( -102.127, 107.747, -98.2805, 0.36 ) }
    dend_51 { pt3dadd( -102.437, 107.92, -98.142, 0.12 ) }
    dend_51 { pt3dadd( -102.882, 108.127, -97.9457, 0.12 ) }
    dend_51 { pt3dadd( -103.241, 108.282, -97.7863, 0.48 ) }
    dend_51 { pt3dadd( -103.788, 108.499, -97.5611, 0.12 ) }
    dend_51 { pt3dadd( -104.532, 108.776, -97.2731, 0.12 ) }
    dend_51 { pt3dadd( -105.105, 108.975, -97.0623, 1.8 ) }
    dend_51 { pt3dadd( -105.511, 109.106, -96.9207, 2.64 ) }
    dend_51 { pt3dadd( -105.801, 109.196, -96.8289, 2.64 ) }
    dend_51 { pt3dadd( -106.798, 109.478, -96.5493, 0.12 ) }
    dend_51 { pt3dadd( -107.695, 109.708, -96.3367, 0.12 ) }
    dend_51 { pt3dadd( -108.094, 109.813, -96.2445, 0.12 ) }
    dend_51 { pt3dadd( -108.414, 109.9, -96.171, 0.48 ) }
    dend_51 { pt3dadd( -108.612, 109.954, -96.1204, 0.12 ) }
    dend_51 { pt3dadd( -109.013, 110.075, -96.0019, 0.12 ) }
    dend_51 { pt3dadd( -109.389, 110.214, -95.8687, 0.6 ) }
    dend_51 { pt3dadd( -109.712, 110.372, -95.7448, 0.12 ) }
    dend_51 { pt3dadd( -110.145, 110.623, -95.5738, 0.12 ) }
    dend_51 { pt3dadd( -110.492, 110.849, -95.4045, 0.72 ) }
    dend_51 { pt3dadd( -110.848, 111.1, -95.2109, 0.96 ) }
    dend_51 { pt3dadd( -111.26, 111.431, -95.0014, 0.12 ) }
    dend_51 { pt3dadd( -111.743, 111.85, -94.7819, 0.12 ) }
    dend_51 { pt3dadd( -112.05, 112.125, -94.6488, 1.2 ) }
    dend_51 { pt3dadd( -112.608, 112.661, -94.4218, 1.56 ) }
    dend_51 { pt3dadd( -112.995, 113.058, -94.2945, 1.68 ) }
    dend_51 { pt3dadd( -113.675, 113.84, -94.1105, 0.12 ) }
    dend_51 { pt3dadd( -114.263, 114.567, -93.976, 0.12 ) }
    dend_51 { pt3dadd( -114.579, 114.955, -93.9948, 1.56 ) }
    dend_51 { pt3dadd( -114.945, 115.417, -94.0421, 1.56 ) }
    dend_51 { pt3dadd( -115.378, 115.976, -94.1388, 0.12 ) }
    dend_51 { pt3dadd( -116.758, 117.803, -94.5201, 0.12 ) }
    dend_51 { pt3dadd( -116.932, 118.038, -94.5784, 0.48 ) }
    dend_51 { pt3dadd( -118.526, 120.23, -95.3789, 0.12 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 71/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -21.113, -201.783, -33.26, 3.37 ) }
    dend_47 { pt3dadd( -21.1851, -202.125, -32.2841, 3.37 ) }
    dend_47 { pt3dadd( -21.3158, -203.019, -29.5469, 0.12 ) }
    dend_47 { pt3dadd( -21.3084, -203.072, -29.3605, 0.12 ) }
    dend_47 { pt3dadd( -21.2582, -203.209, -28.846, 0.12 ) }
    dend_47 { pt3dadd( -21.2052, -203.286, -28.527, 0.72 ) }
    dend_47 { pt3dadd( -21.1173, -203.367, -28.158, 0.72 ) }
    dend_47 { pt3dadd( -21.0316, -203.394, -27.9861, 0.12 ) }
    dend_47 { pt3dadd( -20.2624, -203.438, -27.1148, 0.12 ) }
    dend_47 { pt3dadd( -20.1938, -203.454, -27.0024, 0.96 ) }
    dend_47 { pt3dadd( -20.0531, -203.572, -26.5728, 0.96 ) }
    dend_47 { pt3dadd( -20.0364, -203.808, -25.8758, 0.12 ) }
    dend_47 { pt3dadd( -20.0677, -203.868, -25.7158, 0.12 ) }
    dend_47 { pt3dadd( -20.1729, -203.969, -25.4392, 0.84 ) }
    dend_47 { pt3dadd( -20.9392, -204.546, -23.9713, 0.24 ) }
    dend_47 { pt3dadd( -21.3979, -204.885, -23.174, 1.92 ) }
    dend_47 { pt3dadd( -22.1226, -205.418, -22.0426, 0.24 ) }
    dend_47 { pt3dadd( -22.4447, -205.658, -21.5873, 1.68 ) }
    dend_47 { pt3dadd( -23.3201, -206.344, -20.4212, 1.68 ) }
    dend_47 { pt3dadd( -23.5602, -206.545, -20.1315, 0.12 ) }
    dend_47 { pt3dadd( -23.8118, -206.797, -19.8837, 0.12 ) }
    dend_47 { pt3dadd( -23.9968, -207.036, -19.7277, 0.6 ) }
    dend_47 { pt3dadd( -24.1904, -207.398, -19.5898, 1.08 ) }
    dend_47 { pt3dadd( -24.3918, -207.868, -19.469, 1.08 ) }
    dend_47 { pt3dadd( -24.65, -208.563, -19.4057, 0.12 ) }
    dend_47 { pt3dadd( -24.7996, -208.969, -19.3702, 0.12 ) }
    dend_47 { pt3dadd( -24.9372, -209.381, -19.3395, 0.12 ) }
    dend_47 { pt3dadd( -25.0562, -209.797, -19.3163, 0.12 ) }
    dend_47 { pt3dadd( -25.1443, -210.214, -19.3016, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_47 { pt3dadd( -25.1934, -210.568, -19.3057, 0.96 ) }
    dend_47 { pt3dadd( -25.2345, -211.005, -19.3234, 0.12 ) }
    dend_47 { pt3dadd( -25.2904, -211.543, -19.3471, 0.12 ) }
    dend_47 { pt3dadd( -25.338, -211.852, -19.3553, 1.32 ) }
    dend_47 { pt3dadd( -25.3816, -212.041, -19.3596, 1.32 ) }
    dend_47 { pt3dadd( -25.5366, -212.595, -19.3666, 0.12 ) }
    dend_47 { pt3dadd( -25.7042, -213.088, -19.3727, 0.12 ) }
    dend_47 { pt3dadd( -25.7455, -213.203, -19.3736, 0.48 ) }
    dend_47 { pt3dadd( -25.8801, -213.581, -19.3694, 0.12 ) }
    dend_47 { pt3dadd( -25.9321, -213.768, -19.3619, 0.12 ) }
    dend_47 { pt3dadd( -25.9799, -214.016, -19.345, 0.12 ) }
    dend_47 { pt3dadd( -25.991, -214.195, -19.2731, 0.48 ) }
    dend_47 { pt3dadd( -26.0196, -214.526, -19.0728, 0.36 ) }
    dend_47 { pt3dadd( -26.0405, -214.768, -18.961, 0.36 ) }
    dend_47 { pt3dadd( -26.0561, -215.001, -18.8843, 1.2 ) }
    dend_47 { pt3dadd( -26.0706, -215.252, -18.8173, 1.2 ) }
    dend_47 { pt3dadd( -26.1849, -216.542, -18.4096, 0.12 ) }
    dend_47 { pt3dadd( -26.2222, -217.02, -18.2519, 0.12 ) }
    dend_47 { pt3dadd( -26.3319, -218.057, -17.917, 0.12 ) }
    dend_47 { pt3dadd( -26.3961, -218.573, -17.763, 0.12 ) }
    dend_47 { pt3dadd( -26.4444, -218.917, -17.6783, 0.12 ) }
    dend_47 { pt3dadd( -26.5476, -219.699, -17.5631, 1.32 ) }
    dend_47 { pt3dadd( -26.5689, -220.317, -17.6027, 1.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 23/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -21.113, -201.783, -33.26, 0.12 ) }
    dend_46 { pt3dadd( -22.1979, -202.331, -33.6255, 0.12 ) }
    dend_46 { pt3dadd( -22.9178, -202.695, -33.868, 0.12 ) }
    dend_46 { pt3dadd( -23.1456, -202.81, -33.9448, 0.96 ) }
    dend_46 { pt3dadd( -23.4141, -202.946, -34.0352, 1.08 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 28/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -11.0266, -197.318, -40.749, 0.12 ) }
    dend_44 { pt3dadd( -10.5182, -198.172, -40.8096, 0.12 ) }
    dend_44 { pt3dadd( -10.1606, -198.891, -40.848, 0.12 ) }
    dend_44 { pt3dadd( -9.82883, -199.566, -40.8894, 0.72 ) }
    dend_44 { pt3dadd( -9.40339, -200.438, -40.9648, 0.84 ) }
    dend_44 { pt3dadd( -9.1604, -200.914, -40.9926, 0.48 ) }
    dend_44 { pt3dadd( -8.98914, -201.24, -41.008, 0.12 ) }
    dend_44 { pt3dadd( -8.6104, -201.943, -41.0312, 0.12 ) }
    dend_44 { pt3dadd( -8.36288, -202.398, -41.0305, 0.12 ) }
    dend_44 { pt3dadd( -8.12244, -202.812, -41.0349, 0.84 ) }
    dend_44 { pt3dadd( -7.6907, -203.622, -41.1356, 0.36 ) }
    dend_44 { pt3dadd( -7.4904, -204.016, -41.2018, 0.12 ) }
    dend_44 { pt3dadd( -7.01862, -204.955, -41.3952, 0.12 ) }
    dend_44 { pt3dadd( -6.61865, -205.768, -41.5925, 1.8 ) }
    dend_44 { pt3dadd( -6.31534, -206.487, -41.778, 1.56 ) }
    dend_44 { pt3dadd( -5.8452, -207.754, -42.139, 0.12 ) }
    dend_44 { pt3dadd( -5.77426, -207.984, -42.2171, 0.12 ) }
    dend_44 { pt3dadd( -5.74192, -208.099, -42.2571, 0.36 ) }
    dend_44 { pt3dadd( -5.64464, -208.51, -42.4012, 0.12 ) }
    dend_44 { pt3dadd( -5.52033, -209.242, -42.6194, 0.12 ) }
    dend_44 { pt3dadd( -5.48461, -209.486, -42.6716, 0.12 ) }
    dend_44 { pt3dadd( -5.41938, -209.873, -42.7284, 0.72 ) }
    dend_44 { pt3dadd( -5.32666, -210.492, -42.8162, 0.96 ) }
    dend_44 { pt3dadd( -5.26001, -210.977, -42.8815, 0.12 ) }
    dend_44 { pt3dadd( -5.0762, -212.464, -43.0713, 0.12 ) }
    dend_44 { pt3dadd( -5.02209, -212.952, -43.1309, 0.84 ) }
    dend_44 { pt3dadd( -4.97676, -213.467, -43.1991, 0.12 ) }
    dend_44 { pt3dadd( -4.94505, -214.082, -43.2781, 0.12 ) }
    dend_44 { pt3dadd( -4.93296, -214.484, -43.329, 0.96 ) }
    dend_44 { pt3dadd( -4.91899, -214.99, -43.3967, 0.12 ) }
    dend_44 { pt3dadd( -4.90524, -215.854, -43.5235, 0.12 ) }
    dend_44 { pt3dadd( -4.90175, -216.687, -43.654, 1.68 ) }
    dend_44 { pt3dadd( -4.91025, -217.039, -43.7133, 1.68 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -11.0266, -197.318, -40.749, 0.6 ) }
    dend_43 { pt3dadd( -10.3696, -196.992, -37.39, 0.6 ) }
    dend_43 { pt3dadd( -10.2527, -197.253, -37.8787, 0.6 ) }
    dend_43 { pt3dadd( -9.81433, -198.022, -39.0189, 0.12 ) }
    dend_43 { pt3dadd( -9.62459, -198.335, -39.4296, 0.12 ) }
    dend_43 { pt3dadd( -9.38747, -198.726, -39.9427, 0.96 ) }
    dend_43 { pt3dadd( -9.14943, -199.119, -40.4579, 0.96 ) }
    dend_43 { pt3dadd( -8.64731, -200.023, -41.8242, 0.12 ) }
    dend_43 { pt3dadd( -8.45183, -200.412, -42.4139, 0.12 ) }
    dend_43 { pt3dadd( -8.34318, -200.616, -42.6985, 0.48 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 36.5802, -76.2458, -31.0402, 0.12 ) }
    dend_40 { pt3dadd( 38.1882, -76.9243, -28.9575, 0.12 ) }
    dend_40 { pt3dadd( 38.552, -77.0744, -28.5093, 0.12 ) }
    dend_40 { pt3dadd( 38.7225, -77.146, -28.3121, 0.6 ) }
    dend_40 { pt3dadd( 39.207, -77.3365, -27.7809, 0.12 ) }
    dend_40 { pt3dadd( 40.094, -77.6627, -26.8636, 0.12 ) }
    dend_40 { pt3dadd( 40.3408, -77.7499, -26.6125, 0.12 ) }
    dend_40 { pt3dadd( 40.5261, -77.8069, -26.4679, 0.12 ) }
    dend_40 { pt3dadd( 40.7856, -77.8892, -26.2728, 0.12 ) }
    dend_40 { pt3dadd( 41.4102, -78.0932, -25.8061, 0.12 ) }
    dend_40 { pt3dadd( 41.6104, -78.1648, -25.6709, 0.6 ) }
    dend_40 { pt3dadd( 42.0373, -78.3638, -25.4449, 0.12 ) }
    dend_40 { pt3dadd( 42.4693, -78.5732, -25.1962, 0.12 ) }
    dend_40 { pt3dadd( 43.0345, -78.8272, -24.8709, 0.6 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 85/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 36.5802, -76.2458, -31.0402, 0.24 ) }
    dend_35 { pt3dadd( 36.7994, -77.2334, -31.3561, 0.24 ) }
    dend_35 { pt3dadd( 36.943, -78.1321, -31.6531, 0.24 ) }
    dend_35 { pt3dadd( 36.9952, -78.551, -31.7877, 0.96 ) }
    dend_35 { pt3dadd( 37.0727, -79.2802, -32.0169, 1.8 ) }
    dend_35 { pt3dadd( 37.1587, -79.9952, -32.2842, 0.84 ) }
    dend_35 { pt3dadd( 37.2114, -80.4559, -32.483, 0.12 ) }
    dend_35 { pt3dadd( 37.2863, -81.1614, -32.8621, 0.12 ) }
    dend_35 { pt3dadd( 37.3134, -81.53, -33.0756, 0.72 ) }
    dend_35 { pt3dadd( 37.3185, -81.6169, -33.12, 0.72 ) }
    dend_35 { pt3dadd( 37.4002, -82.5087, -33.5279, 0.24 ) }
    dend_35 { pt3dadd( 37.4624, -82.8824, -33.6537, 0.24 ) }
    dend_35 { pt3dadd( 37.6028, -83.4912, -33.7937, 0.24 ) }
    dend_35 { pt3dadd( 37.7698, -84.1139, -33.8678, 0.24 ) }
    dend_35 { pt3dadd( 37.9159, -84.6897, -33.8804, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_35 { pt3dadd( 38.0617, -85.3494, -33.85, 0.24 ) }
    dend_35 { pt3dadd( 38.1869, -86.0046, -33.7483, 1.44 ) }
    dend_35 { pt3dadd( 38.3167, -86.7163, -33.603, 1.92 ) }
    dend_35 { pt3dadd( 38.4237, -87.4192, -33.4398, 1.92 ) }
    dend_35 { pt3dadd( 38.5163, -88.1327, -33.2761, 1.2 ) }
    dend_35 { pt3dadd( 38.5992, -88.8707, -33.1251, 0.48 ) }
    dend_35 { pt3dadd( 38.6641, -89.5943, -32.9881, 0.12 ) }
    dend_35 { pt3dadd( 38.712, -90.1141, -32.8781, 0.12 ) }
    dend_35 { pt3dadd( 38.7452, -90.4348, -32.8132, 0.6 ) }
    dend_35 { pt3dadd( 38.7934, -90.8377, -32.7476, 0.12 ) }
    dend_35 { pt3dadd( 38.9194, -91.6694, -32.6093, 0.12 ) }
    dend_35 { pt3dadd( 39.0007, -92.0841, -32.5494, 0.12 ) }
    dend_35 { pt3dadd( 39.3249, -93.5533, -32.4453, 2.4 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 44.2743, -20.7486, -14.059, 0.96 ) }
    dend_33 { pt3dadd( 42.75, -19.4398, -4.63036, 0.96 ) }
    dend_33 { pt3dadd( 42.553, -19.2239, -3.62144, 0.72 ) }
    dend_33 { pt3dadd( 42.4206, -19.0465, -3.06247, 0.24 ) }
    dend_33 { pt3dadd( 42.2793, -18.7929, -2.51494, 0.24 ) }
    dend_33 { pt3dadd( 42.0976, -18.3339, -1.82788, 0.24 ) }
    dend_33 { pt3dadd( 41.9031, -17.6773, -1.02658, 0.84 ) }
    dend_33 { pt3dadd( 41.7587, -16.6029, -0.51355, 1.2 ) }
    dend_33 { pt3dadd( 41.6739, -15.6303, 0.0107338, 0.48 ) }
    dend_33 { pt3dadd( 41.6094, -14.4048, 0.817937, 0.24 ) }
    dend_33 { pt3dadd( 41.618, -13.1572, 1.72971, 0.24 ) }
    dend_33 { pt3dadd( 41.7248, -11.612, 2.99055, 1.68 ) }
    dend_33 { pt3dadd( 41.8087, -10.8364, 3.647, 2.28 ) }
    dend_33 { pt3dadd( 41.8832, -10.271, 4.14045, 2.4 ) }
    dend_33 { pt3dadd( 42.1251, -8.43667, 5.76486, 0.36 ) }
    dend_33 { pt3dadd( 42.203, -7.71878, 6.39838, 0.36 ) }
    dend_33 { pt3dadd( 42.2853, -6.72584, 7.2301, 0.84 ) }
    dend_33 { pt3dadd( 42.3612, -5.30235, 8.3354, 0.84 ) }
    dend_33 { pt3dadd( 42.3935, -3.85665, 9.41955, 0.6 ) }
    dend_33 { pt3dadd( 42.4061, -2.50429, 10.3913, 0.6 ) }
    dend_33 { pt3dadd( 42.4083, -1.63446, 10.9606, 0.96 ) }
    dend_33 { pt3dadd( 42.3795, -0.95152, 11.4029, 0.96 ) }
    dend_33 { pt3dadd( 42.2658, 0.325167, 12.1908, 0.12 ) }
    dend_33 { pt3dadd( 42.1724, 0.953871, 12.5678, 0.12 ) }
    dend_33 { pt3dadd( 42.0762, 1.4947, 12.8547, 0.12 ) }
    dend_33 { pt3dadd( 41.9625, 2.08908, 13.1344, 0.12 ) }
    dend_33 { pt3dadd( 41.8509, 2.68826, 13.4178, 0.6 ) }
    dend_33 { pt3dadd( 41.7762, 3.17527, 13.6174, 0.96 ) }
    dend_33 { pt3dadd( 41.6348, 3.99708, 13.7833, 1.08 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 42/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 44.2743, -20.7486, -14.059, 0.12 ) }
    dend_30 { pt3dadd( 45.4891, -20.7316, -13.7909, 0.12 ) }
    dend_30 { pt3dadd( 45.8453, -20.7181, -13.7103, 0.12 ) }
    dend_30 { pt3dadd( 46.2896, -20.6931, -13.6074, 0.6 ) }
    dend_30 { pt3dadd( 46.8297, -20.6447, -13.4867, 0.6 ) }
    dend_30 { pt3dadd( 47.6041, -20.5567, -13.3288, 0.12 ) }
    dend_30 { pt3dadd( 48.3152, -20.4469, -13.2013, 0.12 ) }
    dend_30 { pt3dadd( 48.4028, -20.4242, -13.1887, 0.36 ) }
    dend_30 { pt3dadd( 48.681, -20.3346, -13.1564, 0.12 ) }
    dend_30 { pt3dadd( 49.0582, -20.1891, -13.0981, 0.12 ) }
    dend_30 { pt3dadd( 49.3843, -20.0244, -13.0445, 0.48 ) }
    dend_30 { pt3dadd( 49.8548, -19.769, -12.9809, 0.6 ) }
    dend_30 { pt3dadd( 50.1816, -19.5931, -12.9277, 0.48 ) }
    dend_30 { pt3dadd( 50.4767, -19.4538, -12.8832, 0.48 ) }
    dend_30 { pt3dadd( 51.1896, -19.1428, -12.6605, 0.12 ) }
    dend_30 { pt3dadd( 51.929, -18.8786, -12.3652, 2.04 ) }
    dend_30 { pt3dadd( 52.3635, -18.7599, -12.1745, 3.25 ) }
    dend_30 { pt3dadd( 52.7789, -18.6956, -11.9959, 3.37 ) }
    dend_30 { pt3dadd( 53.3171, -18.6669, -11.7811, 2.88 ) }
    dend_30 { pt3dadd( 55.0499, -18.7285, -11.143, 0.24 ) }
    dend_30 { pt3dadd( 55.7958, -18.8192, -10.9013, 0.24 ) }
    dend_30 { pt3dadd( 56.28, -18.9188, -10.7506, 0.72 ) }
    dend_30 { pt3dadd( 57.1366, -19.1191, -10.5224, 0.96 ) }
    dend_30 { pt3dadd( 57.6878, -19.2654, -10.4156, 0.24 ) }
    dend_30 { pt3dadd( 57.8641, -19.313, -10.41, 0.24 ) }
    dend_30 { pt3dadd( 58.1119, -19.3687, -10.4572, 0.24 ) }
    dend_30 { pt3dadd( 58.6513, -19.4021, -10.5865, 0.24 ) }
    dend_30 { pt3dadd( 59.0962, -19.3533, -10.6983, 1.2 ) }
    dend_30 { pt3dadd( 59.4493, -19.2667, -10.7343, 1.92 ) }
    dend_30 { pt3dadd( 60.1694, -19.0374, -10.7322, 1.92 ) }
    dend_30 { pt3dadd( 60.8923, -18.7775, -10.6792, 0.36 ) }
    dend_30 { pt3dadd( 61.3463, -18.5992, -10.5881, 0.36 ) }
    dend_30 { pt3dadd( 62.2441, -18.2235, -10.338, 0.36 ) }
    dend_30 { pt3dadd( 63.6606, -17.6263, -9.87437, 1.68 ) }
    dend_30 { pt3dadd( 64.0967, -17.4482, -9.73263, 2.52 ) }
    dend_30 { pt3dadd( 64.7717, -17.1914, -9.51221, 2.64 ) }
    dend_30 { pt3dadd( 66.2662, -16.6892, -9.1073, 0.24 ) }
    dend_30 { pt3dadd( 66.922, -16.4984, -8.97564, 0.24 ) }
    dend_30 { pt3dadd( 67.3693, -16.3807, -8.93407, 0.36 ) }
    dend_30 { pt3dadd( 68.1376, -16.1998, -8.98802, 1.08 ) }
    dend_30 { pt3dadd( 68.5347, -16.109, -9.01837, 1.08 ) }
    dend_30 { pt3dadd( 69.2347, -15.9394, -9.09646, 0.48 ) }
    dend_30 { pt3dadd( 69.5813, -15.8433, -9.16045, 0.24 ) }
    dend_30 { pt3dadd( 70.0603, -15.6676, -9.19485, 0.24 ) }
    dend_30 { pt3dadd( 70.4699, -15.4674, -9.16782, 0.6 ) }
    dend_30 { pt3dadd( 71.2724, -15.0, -9.00146, 0.36 ) }
    dend_30 { pt3dadd( 71.6603, -14.7874, -8.90776, 0.36 ) }
    dend_30 { pt3dadd( 71.9892, -14.6438, -8.79352, 0.36 ) }
    dend_30 { pt3dadd( 72.2349, -14.5717, -8.69593, 0.48 ) }
    dend_30 { pt3dadd( 72.4245, -14.54, -8.62671, 0.24 ) }
    dend_30 { pt3dadd( 72.7775, -14.5031, -8.50068, 0.24 ) }
    dend_30 { pt3dadd( 73.4152, -14.4582, -8.33334, 0.24 ) }
    dend_30 { pt3dadd( 74.3283, -14.3967, -8.13526, 0.24 ) }
    dend_30 { pt3dadd( 74.7073, -14.371, -8.06799, 1.2 ) }
    dend_30 { pt3dadd( 75.3527, -14.3015, -7.98288, 2.16 ) }
    dend_30 { pt3dadd( 76.2745, -14.1521, -7.86258, 1.8 ) }
    dend_30 { pt3dadd( 76.9921, -13.9957, -7.78126, 0.36 ) }
    dend_30 { pt3dadd( 78.0226, -13.6856, -7.57305, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_30 { pt3dadd( 78.4738, -13.5243, -7.46166, 0.36 ) }
    dend_30 { pt3dadd( 79.2093, -13.23, -7.23546, 0.36 ) }
    dend_30 { pt3dadd( 79.9176, -12.9202, -6.91841, 1.56 ) }
    dend_30 { pt3dadd( 80.4577, -12.6697, -6.62225, 2.04 ) }
    dend_30 { pt3dadd( 81.9535, -11.9608, -5.64144, 0.24 ) }
    dend_30 { pt3dadd( 82.3887, -11.7602, -5.31867, 0.24 ) }
    dend_30 { pt3dadd( 82.6085, -11.6678, -5.15567, 0.24 ) }
    dend_30 { pt3dadd( 83.6299, -11.3174, -4.41761, 1.68 ) }
    dend_30 { pt3dadd( 83.9385, -11.2307, -4.21998, 2.04 ) }
    dend_30 { pt3dadd( 84.1743, -11.173, -4.06335, 2.04 ) }
    dend_30 { pt3dadd( 85.2049, -10.919, -3.43623, 0.24 ) }
    dend_30 { pt3dadd( 85.6463, -10.7816, -3.14167, 0.24 ) }
    dend_30 { pt3dadd( 86.0038, -10.6359, -2.88912, 1.2 ) }
    dend_30 { pt3dadd( 86.2764, -10.472, -2.68754, 1.2 ) }
    dend_30 { pt3dadd( 87.2471, -9.65511, -1.8549, 0.12 ) }
    dend_30 { pt3dadd( 87.5742, -9.25574, -1.53751, 0.12 ) }
    dend_30 { pt3dadd( 87.7361, -8.95687, -1.37528, 0.24 ) }
    dend_30 { pt3dadd( 87.8404, -8.72249, -1.24257, 0.24 ) }
    dend_30 { pt3dadd( 88.0449, -8.27899, -1.01103, 0.24 ) }
    dend_30 { pt3dadd( 88.164, -8.04985, -0.898639, 0.24 ) }
    dend_30 { pt3dadd( 88.4069, -7.68613, -0.767249, 0.24 ) }
    dend_30 { pt3dadd( 88.8325, -7.20693, -0.58973, 0.24 ) }
    dend_30 { pt3dadd( 89.6441, -6.40652, -0.25705, 0.12 ) }
    dend_30 { pt3dadd( 90.2068, -5.91802, -0.0340347, 0.12 ) }
    dend_30 { pt3dadd( 90.3675, -5.79586, 0.0278416, 1.44 ) }
    dend_30 { pt3dadd( 90.986, -5.35379, 0.256169, 2.52 ) }
    dend_30 { pt3dadd( 91.6571, -4.8699, 0.48843, 2.04 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -28.5871, -284.017, -46.8601, 0.12 ) }
    dend_20 { pt3dadd( -27.9986, -285.403, -47.1001, 0.12 ) }
    dend_20 { pt3dadd( -27.6945, -286.106, -47.2198, 0.12 ) }
    dend_20 { pt3dadd( -27.5544, -286.43, -47.2761, 0.48 ) }
    dend_20 { pt3dadd( -27.3058, -286.991, -47.3551, 0.48 ) }
    dend_20 { pt3dadd( -27.0346, -287.577, -47.429, 0.48 ) }
    dend_20 { pt3dadd( -26.8833, -287.881, -47.499, 0.48 ) }
    dend_20 { pt3dadd( -26.7365, -288.132, -47.5917, 0.48 ) }
    dend_20 { pt3dadd( -26.3934, -288.625, -47.848, 1.68 ) }
    dend_20 { pt3dadd( -26.027, -289.08, -48.1439, 2.28 ) }
    dend_20 { pt3dadd( -25.6746, -289.473, -48.4393, 2.4 ) }
    dend_20 { pt3dadd( -24.6625, -290.498, -49.3273, 0.48 ) }
    dend_20 { pt3dadd( -23.9716, -291.169, -49.9674, 0.36 ) }
    dend_20 { pt3dadd( -23.5532, -291.549, -50.3796, 0.12 ) }
    dend_20 { pt3dadd( -23.3265, -291.733, -50.6174, 0.12 ) }
    dend_20 { pt3dadd( -23.158, -291.858, -50.812, 0.12 ) }
    dend_20 { pt3dadd( -22.8951, -292.027, -51.1163, 0.72 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 44/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -28.5871, -284.017, -46.8601, 0.12 ) }
    dend_19 { pt3dadd( -28.7579, -285.515, -46.8628, 0.12 ) }
    dend_19 { pt3dadd( -28.7888, -285.894, -46.89, 0.12 ) }
    dend_19 { pt3dadd( -28.8032, -286.281, -46.9352, 0.12 ) }
    dend_19 { pt3dadd( -28.8372, -286.923, -47.0679, 0.12 ) }
    dend_19 { pt3dadd( -28.8641, -287.241, -47.1441, 0.48 ) }
    dend_19 { pt3dadd( -28.9347, -287.826, -47.2883, 0.48 ) }
    dend_19 { pt3dadd( -28.9662, -288.045, -47.3621, 0.12 ) }
    dend_19 { pt3dadd( -29.2073, -288.697, -47.6462, 0.12 ) }
    dend_19 { pt3dadd( -29.5369, -289.315, -47.9439, 0.12 ) }
    dend_19 { pt3dadd( -29.7455, -289.67, -48.1112, 1.68 ) }
    dend_19 { pt3dadd( -29.9144, -289.941, -48.2541, 1.8 ) }
    dend_19 { pt3dadd( -30.2157, -290.399, -48.5184, 1.8 ) }
    dend_19 { pt3dadd( -31.1274, -291.827, -49.3154, 0.12 ) }
    dend_19 { pt3dadd( -31.3637, -292.211, -49.5305, 0.12 ) }
    dend_19 { pt3dadd( -31.773, -293.008, -49.9385, 0.12 ) }
    dend_19 { pt3dadd( -32.0303, -293.617, -50.273, 0.48 ) }
    dend_19 { pt3dadd( -32.0993, -293.825, -50.3868, 0.48 ) }
    dend_19 { pt3dadd( -32.1976, -294.339, -50.6281, 0.48 ) }
    dend_19 { pt3dadd( -32.2198, -294.499, -50.694, 0.12 ) }
    dend_19 { pt3dadd( -32.3162, -294.941, -50.8923, 0.12 ) }
    dend_19 { pt3dadd( -32.4857, -295.566, -51.1671, 0.12 ) }
    dend_19 { pt3dadd( -32.5745, -295.873, -51.289, 0.96 ) }
    dend_19 { pt3dadd( -32.79, -296.532, -51.5495, 1.44 ) }
    dend_19 { pt3dadd( -33.2657, -297.754, -52.1001, 0.12 ) }
    dend_19 { pt3dadd( -33.5733, -298.483, -52.4195, 0.12 ) }
    dend_19 { pt3dadd( -33.7101, -298.8, -52.5547, 0.12 ) }
    dend_19 { pt3dadd( -33.8105, -299.031, -52.6424, 0.6 ) }
    dend_19 { pt3dadd( -33.9935, -299.404, -52.802, 0.6 ) }
    dend_19 { pt3dadd( -34.383, -300.03, -53.1646, 0.12 ) }
    dend_19 { pt3dadd( -34.7778, -300.584, -53.5276, 0.12 ) }
    dend_19 { pt3dadd( -34.8414, -300.669, -53.5903, 0.48 ) }
    dend_19 { pt3dadd( -35.014, -300.931, -53.759, 0.48 ) }
    dend_19 { pt3dadd( -35.4206, -301.712, -54.1592, 0.48 ) }
    dend_19 { pt3dadd( -35.7884, -302.59, -54.5138, 0.24 ) }
    dend_19 { pt3dadd( -35.9099, -302.882, -54.6854, 0.12 ) }
    dend_19 { pt3dadd( -36.2216, -303.77, -55.2368, 0.12 ) }
    dend_19 { pt3dadd( -36.421, -304.348, -55.6266, 1.44 ) }
    dend_19 { pt3dadd( -36.5716, -304.832, -55.9602, 2.16 ) }
    dend_19 { pt3dadd( -36.747, -305.481, -56.3924, 2.28 ) }
    dend_19 { pt3dadd( -37.3487, -307.868, -57.9399, 0.12 ) }
    dend_19 { pt3dadd( -37.6608, -309.167, -58.8198, 0.12 ) }
    dend_19 { pt3dadd( -37.8234, -309.882, -59.3267, 0.84 ) }
    dend_19 { pt3dadd( -37.9298, -310.384, -59.6831, 1.44 ) }
    dend_19 { pt3dadd( -38.0106, -310.802, -59.9743, 0.96 ) }
    dend_19 { pt3dadd( -38.0636, -311.246, -60.2088, 0.12 ) }
    dend_19 { pt3dadd( -38.089, -311.673, -60.331, 0.12 ) }
    dend_19 { pt3dadd( -38.1365, -312.139, -60.4505, 0.12 ) }
    dend_19 { pt3dadd( -38.1694, -312.408, -60.5046, 0.36 ) }
    dend_19 { pt3dadd( -38.0261, -313.123, -59.8733, 0.12 ) }
    dend_19 { pt3dadd( -37.6942, -314.271, -58.4858, 0.12 ) }
    dend_19 { pt3dadd( -37.5865, -314.538, -58.0616, 1.08 ) }
    dend_19 { pt3dadd( -37.4367, -314.829, -57.4936, 1.8 ) }
    dend_19 { pt3dadd( -37.3401, -314.978, -57.1457, 2.04 ) }
    dend_19 { pt3dadd( -35.4266, -317.432, -50.5196, 0.12 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 99/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 15.9541, 109.304, 13.5678, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_14 { pt3dadd( 16.3088, 110.878, 13.8655, 0.48 ) }
    dend_14 { pt3dadd( 16.4506, 111.558, 13.9689, 0.48 ) }
    dend_14 { pt3dadd( 16.5299, 111.936, 14.018, 0.48 ) }
    dend_14 { pt3dadd( 16.6289, 112.411, 14.0567, 0.48 ) }
    dend_14 { pt3dadd( 16.8279, 113.44, 14.0953, 0.48 ) }
    dend_14 { pt3dadd( 16.9995, 114.478, 14.1021, 0.48 ) }
    dend_14 { pt3dadd( 17.0274, 114.696, 14.0836, 0.72 ) }
    dend_14 { pt3dadd( 17.0758, 115.117, 14.0712, 0.96 ) }
    dend_14 { pt3dadd( 17.1554, 115.817, 14.0847, 0.96 ) }
    dend_14 { pt3dadd( 17.2275, 116.418, 14.1778, 0.36 ) }
    dend_14 { pt3dadd( 17.3629, 117.329, 14.4198, 0.36 ) }
    dend_14 { pt3dadd( 17.454, 117.901, 14.611, 0.36 ) }
    dend_14 { pt3dadd( 17.6442, 119.12, 15.0574, 1.56 ) }
    dend_14 { pt3dadd( 17.7278, 119.676, 15.2735, 2.16 ) }
    dend_14 { pt3dadd( 17.9423, 121.141, 15.8779, 0.48 ) }
    dend_14 { pt3dadd( 18.0969, 122.241, 16.2691, 0.48 ) }
    dend_14 { pt3dadd( 18.176, 122.885, 16.4659, 0.48 ) }
    dend_14 { pt3dadd( 18.205, 123.258, 16.5476, 0.48 ) }
    dend_14 { pt3dadd( 18.2045, 123.922, 16.604, 1.68 ) }
    dend_14 { pt3dadd( 18.1764, 124.319, 16.6054, 1.92 ) }
    dend_14 { pt3dadd( 18.0622, 125.592, 16.4876, 1.08 ) }
    dend_14 { pt3dadd( 18.0066, 126.274, 16.4278, 0.48 ) }
    dend_14 { pt3dadd( 17.9884, 126.764, 16.391, 0.36 ) }
    dend_14 { pt3dadd( 18.0252, 127.665, 16.3458, 0.36 ) }
    dend_14 { pt3dadd( 18.1063, 128.263, 16.3619, 0.36 ) }
    dend_14 { pt3dadd( 18.3591, 129.347, 16.4329, 0.72 ) }
    dend_14 { pt3dadd( 18.4954, 129.758, 16.4764, 0.36 ) }
    dend_14 { pt3dadd( 18.673, 130.237, 16.5119, 0.36 ) }
    dend_14 { pt3dadd( 18.9618, 130.93, 16.5675, 0.36 ) }
    dend_14 { pt3dadd( 19.3531, 131.809, 16.6422, 0.84 ) }
    dend_14 { pt3dadd( 19.7592, 132.74, 16.8745, 1.92 ) }
    dend_14 { pt3dadd( 20.001, 133.38, 16.952, 2.28 ) }
    dend_14 { pt3dadd( 20.1523, 133.847, 16.9531, 2.64 ) }
    dend_14 { pt3dadd( 20.2591, 134.228, 16.9106, 2.76 ) }
    dend_14 { pt3dadd( 20.3888, 134.77, 16.7895, 2.76 ) }
    dend_14 { pt3dadd( 20.9346, 136.975, 16.0775, 1.56 ) }
    dend_14 { pt3dadd( 21.75, 139.89, 14.9676, 0.12 ) }
    dend_14 { pt3dadd( 21.8343, 140.162, 14.8585, 0.12 ) }
    dend_14 { pt3dadd( 21.9094, 140.403, 14.7731, 0.12 ) }
    dend_14 { pt3dadd( 22.0141, 140.8, 14.6414, 0.72 ) }
    dend_14 { pt3dadd( 22.1376, 141.374, 14.4706, 0.96 ) }
    dend_14 { pt3dadd( 22.2513, 142.058, 14.2603, 0.48 ) }
    dend_14 { pt3dadd( 22.343, 142.646, 14.2471, 0.36 ) }
    dend_14 { pt3dadd( 22.5183, 143.971, 14.22, 0.36 ) }
    dend_14 { pt3dadd( 22.5579, 144.399, 14.2459, 0.36 ) }
    dend_14 { pt3dadd( 22.576, 144.732, 14.2789, 0.12 ) }
    dend_14 { pt3dadd( 22.5931, 145.591, 14.4244, 0.96 ) }
    dend_14 { pt3dadd( 22.5986, 146.192, 14.562, 1.32 ) }
    dend_14 { pt3dadd( 22.6208, 146.571, 14.6262, 1.2 ) }
    dend_14 { pt3dadd( 22.718, 147.748, 14.9678, 0.48 ) }
    dend_14 { pt3dadd( 22.8067, 148.589, 15.2452, 0.24 ) }
    dend_14 { pt3dadd( 22.8839, 149.214, 15.4575, 1.2 ) }
    dend_14 { pt3dadd( 22.9622, 149.748, 15.6412, 1.68 ) }
    dend_14 { pt3dadd( 23.1476, 150.85, 16.0304, 1.68 ) }
    dend_14 { pt3dadd( 23.4892, 152.696, 16.6802, 1.8 ) }
    dend_14 { pt3dadd( 23.6397, 153.404, 16.9045, 0.96 ) }
    dend_14 { pt3dadd( 23.8108, 154.14, 17.2134, 1.08 ) }
    dend_14 { pt3dadd( 23.9583, 154.714, 17.4621, 0.36 ) }
    dend_14 { pt3dadd( 24.2888, 155.922, 17.9372, 0.36 ) }
    dend_14 { pt3dadd( 24.4818, 156.647, 18.1765, 0.36 ) }
    dend_14 { pt3dadd( 24.6306, 157.156, 18.2753, 1.08 ) }
    dend_14 { pt3dadd( 25.0129, 158.495, 18.5147, 1.2 ) }
    dend_14 { pt3dadd( 25.323, 159.612, 18.6708, 0.96 ) }
    dend_14 { pt3dadd( 25.6287, 160.768, 18.7651, 0.36 ) }
    dend_14 { pt3dadd( 25.9, 161.788, 18.7191, 0.24 ) }
    dend_14 { pt3dadd( 26.0662, 162.435, 18.634, 0.6 ) }
    dend_14 { pt3dadd( 26.1723, 162.865, 18.5702, 0.12 ) }
    dend_14 { pt3dadd( 26.2734, 163.232, 18.5091, 0.24 ) }
    dend_14 { pt3dadd( 26.6001, 164.332, 18.3636, 0.24 ) }
    dend_14 { pt3dadd( 26.8789, 165.249, 18.25, 0.24 ) }
    dend_14 { pt3dadd( 27.104, 165.985, 18.0903, 1.68 ) }
    dend_14 { pt3dadd( 27.416, 167.077, 17.82, 2.52 ) }
    dend_14 { pt3dadd( 27.6398, 167.999, 17.59, 0.48 ) }
    dend_14 { pt3dadd( 27.8317, 168.891, 17.3685, 0.48 ) }
    dend_14 { pt3dadd( 27.9777, 169.76, 17.1691, 0.72 ) }
    dend_14 { pt3dadd( 28.0751, 170.72, 16.9892, 1.08 ) }
    dend_14 { pt3dadd( 28.0968, 171.371, 16.8845, 1.68 ) }
    dend_14 { pt3dadd( 28.0615, 172.224, 16.7519, 1.2 ) }
    dend_14 { pt3dadd( 27.9823, 172.942, 16.6877, 0.36 ) }
    dend_14 { pt3dadd( 27.8515, 173.883, 16.6541, 0.36 ) }
    dend_14 { pt3dadd( 27.7505, 174.521, 16.6821, 0.36 ) }
    dend_14 { pt3dadd( 27.6236, 175.245, 16.7453, 0.36 ) }
    dend_14 { pt3dadd( 27.4705, 176.136, 16.8192, 2.04 ) }
    dend_14 { pt3dadd( 27.4102, 176.526, 16.8591, 2.4 ) }
    dend_14 { pt3dadd( 27.3159, 177.45, 16.9221, 2.4 ) }
    dend_14 { pt3dadd( 27.3, 178.848, 16.9253, 0.36 ) }
    dend_14 { pt3dadd( 27.3719, 179.705, 16.8764, 0.36 ) }
    dend_14 { pt3dadd( 27.4849, 180.464, 16.8394, 1.44 ) }
    dend_14 { pt3dadd( 27.6142, 181.052, 16.8187, 2.16 ) }
    dend_14 { pt3dadd( 27.9498, 182.409, 16.789, 0.48 ) }
    dend_14 { pt3dadd( 28.1508, 183.187, 16.7859, 0.12 ) }
    dend_14 { pt3dadd( 28.2963, 183.723, 16.7733, 0.6 ) }
    dend_14 { pt3dadd( 28.613, 184.976, 16.8261, 0.36 ) }
    dend_14 { pt3dadd( 28.7381, 185.588, 16.8982, 0.24 ) }
    dend_14 { pt3dadd( 28.8276, 186.298, 17.0364, 0.24 ) }
    dend_14 { pt3dadd( 28.8447, 186.695, 17.125, 0.24 ) }
    dend_14 { pt3dadd( 28.8538, 187.428, 17.2398, 0.36 ) }
    dend_14 { pt3dadd( 28.8773, 188.243, 17.2922, 0.36 ) }
    dend_14 { pt3dadd( 28.937, 188.841, 17.3018, 0.36 ) }
    dend_14 { pt3dadd( 29.0178, 189.317, 17.3259, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_14 { pt3dadd( 29.2241, 190.132, 17.3664, 1.68 ) }
    dend_14 { pt3dadd( 29.4078, 190.713, 17.3457, 2.4 ) }
    dend_14 { pt3dadd( 29.5504, 191.113, 17.2971, 2.4 ) }
    dend_14 { pt3dadd( 29.9745, 192.187, 17.1755, 0.24 ) }
    dend_14 { pt3dadd( 30.1855, 192.698, 17.1269, 0.24 ) }
    dend_14 { pt3dadd( 30.3144, 193.02, 17.1033, 0.48 ) }
    dend_14 { pt3dadd( 30.7104, 194.131, 17.0727, 0.24 ) }
    dend_14 { pt3dadd( 30.883, 194.803, 17.0603, 0.24 ) }
    dend_14 { pt3dadd( 30.9994, 195.524, 17.0232, 0.24 ) }
    dend_14 { pt3dadd( 31.0334, 196.109, 17.009, 0.72 ) }
    dend_14 { pt3dadd( 31.0439, 196.62, 17.0327, 0.84 ) }
    dend_14 { pt3dadd( 31.0468, 196.972, 17.063, 0.36 ) }
    dend_14 { pt3dadd( 31.0594, 197.646, 17.111, 0.36 ) }
    dend_14 { pt3dadd( 31.0948, 198.37, 17.0821, 0.48 ) }
    dend_14 { pt3dadd( 31.1874, 199.422, 16.9236, 0.36 ) }
    dend_14 { pt3dadd( 31.2811, 200.003, 16.7955, 0.36 ) }
    dend_14 { pt3dadd( 31.3657, 200.401, 16.7154, 0.96 ) }
    dend_14 { pt3dadd( 31.6222, 201.332, 16.4846, 0.96 ) }
    dend_14 { pt3dadd( 31.7699, 201.762, 16.408, 0.36 ) }
    dend_14 { pt3dadd( 31.8965, 202.122, 16.3761, 0.36 ) }
    dend_14 { pt3dadd( 32.2247, 203.122, 16.3343, 2.4 ) }
    dend_14 { pt3dadd( 32.5342, 204.192, 16.3727, 3.25 ) }
    dend_14 { pt3dadd( 32.7711, 205.185, 16.4797, 2.16 ) }
    dend_14 { pt3dadd( 33.0468, 206.591, 16.6761, 0.24 ) }
    dend_14 { pt3dadd( 33.2211, 207.625, 16.8099, 0.12 ) }
    dend_14 { pt3dadd( 33.3465, 208.492, 16.8976, 0.24 ) }
    dend_14 { pt3dadd( 33.3735, 208.788, 16.9153, 0.36 ) }
    dend_14 { pt3dadd( 33.417, 209.555, 16.8855, 0.36 ) }
    dend_14 { pt3dadd( 33.4436, 210.519, 16.7975, 1.32 ) }
    dend_14 { pt3dadd( 33.4633, 211.112, 16.7001, 0.48 ) }
    dend_14 { pt3dadd( 33.494, 211.456, 16.6506, 0.12 ) }
    dend_14 { pt3dadd( 33.5804, 212.049, 16.5736, 0.12 ) }
    dend_14 { pt3dadd( 33.698, 212.732, 16.507, 0.12 ) }
    dend_14 { pt3dadd( 33.7856, 213.153, 16.4822, 0.84 ) }
    dend_14 { pt3dadd( 34.0402, 214.327, 16.4669, 1.56 ) }
    dend_14 { pt3dadd( 34.1493, 214.799, 16.47, 1.68 ) }
    dend_14 { pt3dadd( 34.3756, 215.652, 16.4973, 0.12 ) }
    dend_14 { pt3dadd( 34.6196, 216.381, 16.5263, 0.12 ) }
    dend_14 { pt3dadd( 34.7784, 216.736, 16.6538, 0.24 ) }
    dend_14 { pt3dadd( 34.872, 216.872, 16.7637, 0.12 ) }
    dend_14 { pt3dadd( 35.1431, 217.097, 17.1345, 0.12 ) }
    dend_14 { pt3dadd( 35.3228, 217.207, 17.4111, 0.12 ) }
    dend_14 { pt3dadd( 35.9422, 217.465, 18.4698, 3.25 ) }
    dend_14 { pt3dadd( 37.6832, 217.906, 21.6706, 0.12 ) }
    dend_14 { pt3dadd( 37.8389, 217.928, 21.9805, 0.12 ) }
    dend_14 { pt3dadd( 37.9689, 217.931, 22.2562, 0.72 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 46/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 15.9541, 109.304, 13.5678, 0.12 ) }
    dend_13 { pt3dadd( 13.6225, 110.06, 13.2627, 0.12 ) }
    dend_13 { pt3dadd( 13.0581, 110.243, 13.2073, 0.12 ) }
    dend_13 { pt3dadd( 12.6439, 110.383, 13.1301, 0.96 ) }
    dend_13 { pt3dadd( 11.6176, 110.711, 12.8849, 0.12 ) }
    dend_13 { pt3dadd( 10.9311, 110.922, 12.6479, 0.12 ) }
    dend_13 { pt3dadd( 10.5332, 111.047, 12.4953, 0.12 ) }
    dend_13 { pt3dadd( 9.96444, 111.234, 12.2453, 1.08 ) }
    dend_13 { pt3dadd( 8.77002, 111.598, 11.793, 0.36 ) }
    dend_13 { pt3dadd( 7.61008, 111.936, 11.3647, 0.36 ) }
    dend_13 { pt3dadd( 6.14216, 112.392, 10.9945, 0.36 ) }
    dend_13 { pt3dadd( 5.47872, 112.584, 10.8434, 0.36 ) }
    dend_13 { pt3dadd( 4.20269, 112.884, 10.8543, 0.36 ) }
    dend_13 { pt3dadd( 3.47897, 112.999, 11.0229, 0.36 ) }
    dend_13 { pt3dadd( 2.6826, 113.055, 11.386, 0.36 ) }
    dend_13 { pt3dadd( 0.941448, 113.105, 12.4379, 1.92 ) }
    dend_13 { pt3dadd( -0.021988, 113.083, 13.1586, 1.92 ) }
    dend_13 { pt3dadd( -2.94219, 112.831, 15.5798, 0.12 ) }
    dend_13 { pt3dadd( -3.58956, 112.734, 16.1798, 0.12 ) }
    dend_13 { pt3dadd( -3.95882, 112.655, 16.573, 0.72 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 66/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -6.08, 135.269, -3.8094, 0.12 ) }
    dend_11 { pt3dadd( -6.93792, 136.429, -4.54727, 0.12 ) }
    dend_11 { pt3dadd( -7.06858, 136.649, -4.65552, 0.12 ) }
    dend_11 { pt3dadd( -7.25817, 137.061, -4.80738, 0.24 ) }
    dend_11 { pt3dadd( -7.75576, 138.451, -5.33384, 0.24 ) }
    dend_11 { pt3dadd( -7.90237, 138.971, -5.52109, 0.24 ) }
    dend_11 { pt3dadd( -7.98909, 139.338, -5.64719, 0.24 ) }
    dend_11 { pt3dadd( -8.06462, 140.12, -5.8798, 1.68 ) }
    dend_11 { pt3dadd( -8.10023, 140.665, -6.07283, 1.68 ) }
    dend_11 { pt3dadd( -8.13083, 142.299, -6.70121, 0.12 ) }
    dend_11 { pt3dadd( -8.11901, 142.949, -6.94828, 0.12 ) }
    dend_11 { pt3dadd( -8.11575, 143.167, -7.0488, 0.6 ) }
    dend_11 { pt3dadd( -8.11055, 143.591, -7.27527, 0.48 ) }
    dend_11 { pt3dadd( -8.09821, 144.623, -7.90011, 0.12 ) }
    dend_11 { pt3dadd( -8.08764, 145.157, -8.25369, 0.12 ) }
    dend_11 { pt3dadd( -8.07609, 145.29, -8.33146, 0.12 ) }
    dend_11 { pt3dadd( -8.05085, 145.592, -8.50191, 0.96 ) }
    dend_11 { pt3dadd( -8.01809, 145.904, -8.66323, 0.96 ) }
    dend_11 { pt3dadd( -7.98338, 146.252, -8.83562, 0.48 ) }
    dend_11 { pt3dadd( -7.87967, 147.081, -9.18582, 0.12 ) }
    dend_11 { pt3dadd( -7.74065, 148.216, -9.66572, 0.12 ) }
    dend_11 { pt3dadd( -7.65848, 148.929, -9.97314, 1.8 ) }
    dend_11 { pt3dadd( -7.61725, 149.303, -10.1344, 2.16 ) }
    dend_11 { pt3dadd( -7.47438, 150.457, -10.6124, 0.12 ) }
    dend_11 { pt3dadd( -7.35101, 151.295, -10.946, 0.12 ) }
    dend_11 { pt3dadd( -7.29485, 151.619, -11.0604, 0.96 ) }
    dend_11 { pt3dadd( -7.20383, 152.126, -11.2359, 0.24 ) }
    dend_11 { pt3dadd( -7.11477, 152.607, -11.3972, 0.24 ) }
    dend_11 { pt3dadd( -6.96784, 153.33, -11.6473, 1.68 ) }
    dend_11 { pt3dadd( -6.83477, 153.867, -11.8329, 0.12 ) }
    dend_11 { pt3dadd( -6.70264, 154.303, -11.995, 0.12 ) }
    dend_11 { pt3dadd( -6.53342, 154.858, -12.2835, 0.6 ) }
    dend_11 { pt3dadd( -6.39738, 155.272, -12.5361, 0.12 ) }
    dend_11 { pt3dadd( -6.10961, 156.142, -13.1334, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_11 { pt3dadd( -6.05306, 156.31, -13.2576, 0.12 ) }
    dend_11 { pt3dadd( -5.83029, 156.995, -13.7689, 1.92 ) }
    dend_11 { pt3dadd( -5.28317, 158.64, -14.9675, 0.12 ) }
    dend_11 { pt3dadd( -5.00716, 159.466, -15.5322, 0.12 ) }
    dend_11 { pt3dadd( -4.91894, 159.719, -15.6772, 0.84 ) }
    dend_11 { pt3dadd( -4.82082, 160.018, -15.8109, 0.12 ) }
    dend_11 { pt3dadd( -4.58527, 160.806, -16.0652, 0.12 ) }
    dend_11 { pt3dadd( -4.39211, 161.417, -16.1228, 1.68 ) }
    dend_11 { pt3dadd( -4.24032, 161.807, -16.0566, 1.2 ) }
    dend_11 { pt3dadd( -3.95396, 162.483, -15.8865, 0.12 ) }
    dend_11 { pt3dadd( -3.66838, 163.07, -15.6891, 0.12 ) }
    dend_11 { pt3dadd( -3.44707, 163.469, -15.5256, 0.6 ) }
    dend_11 { pt3dadd( -2.80097, 164.493, -15.0457, 0.48 ) }
    dend_11 { pt3dadd( -2.4799, 164.996, -14.8119, 0.48 ) }
    dend_11 { pt3dadd( -2.23366, 165.368, -14.6415, 0.48 ) }
    dend_11 { pt3dadd( -1.96604, 165.799, -14.4779, 0.12 ) }
    dend_11 { pt3dadd( -1.798, 166.091, -14.3929, 0.12 ) }
    dend_11 { pt3dadd( -1.5384, 166.67, -14.3059, 1.44 ) }
    dend_11 { pt3dadd( -1.42703, 167.04, -14.2893, 1.68 ) }
    dend_11 { pt3dadd( -1.25346, 167.777, -14.269, 0.12 ) }
    dend_11 { pt3dadd( -1.07637, 168.737, -14.257, 0.12 ) }
    dend_11 { pt3dadd( -0.952058, 169.588, -14.2646, 1.92 ) }
    dend_11 { pt3dadd( -0.828175, 170.584, -14.2757, 0.12 ) }
    dend_11 { pt3dadd( -0.710385, 171.636, -14.2973, 0.12 ) }
    dend_11 { pt3dadd( -0.668158, 172.024, -14.3109, 0.6 ) }
    dend_11 { pt3dadd( -0.650089, 172.216, -14.3204, 0.12 ) }
    dend_11 { pt3dadd( -0.576933, 173.094, -14.3582, 0.12 ) }
    dend_11 { pt3dadd( -0.557137, 173.694, -14.4182, 1.08 ) }
    dend_11 { pt3dadd( -0.554793, 173.996, -14.4618, 0.72 ) }
    dend_11 { pt3dadd( -0.562123, 174.205, -14.5059, 0.12 ) }
    dend_11 { pt3dadd( -0.607751, 174.95, -14.6973, 0.12 ) }
    dend_11 { pt3dadd( -0.663962, 175.652, -14.8989, 1.44 ) }
    dend_11 { pt3dadd( -0.827652, 176.889, -15.3615, 0.12 ) }
    dend_11 { pt3dadd( -0.872529, 177.242, -15.5036, 0.12 ) }
    dend_11 { pt3dadd( -0.881755, 177.33, -15.5402, 0.48 ) }
    dend_11 { pt3dadd( -0.894791, 177.531, -15.6186, 0.12 ) }
    dend_11 { pt3dadd( -0.890945, 178.168, -15.84, 0.48 ) }
    dend_11 { pt3dadd( -0.80719, 178.947, -16.0386, 0.12 ) }
    dend_11 { pt3dadd( -0.658081, 179.939, -16.2821, 0.12 ) }
    dend_11 { pt3dadd( -0.631499, 180.125, -16.3339, 0.72 ) }
    dend_11 { pt3dadd( -0.544213, 180.769, -16.5152, 1.44 ) }
    dend_11 { pt3dadd( -0.475664, 181.263, -16.6519, 1.8 ) }
    dend_11 { pt3dadd( -0.374757, 181.872, -16.821, 1.68 ) }
    dend_11 { pt3dadd( -0.153609, 183.153, -17.1441, 0.12 ) }
    dend_11 { pt3dadd( -0.0962572, 183.62, -17.2896, 0.12 ) }
    dend_11 { pt3dadd( -0.0541538, 184.076, -17.4463, 0.12 ) }
    dend_11 { pt3dadd( -0.0388611, 184.6, -17.6521, 1.32 ) }
    dend_11 { pt3dadd( -0.0401152, 184.973, -17.8058, 1.32 ) }
    dend_11 { pt3dadd( -0.050657, 185.241, -17.9149, 1.32 ) }
    dend_11 { pt3dadd( -0.0906902, 185.993, -18.1692, 0.12 ) }
    dend_11 { pt3dadd( -0.175128, 186.659, -18.4507, 0.12 ) }
    dend_11 { pt3dadd( -0.332097, 187.327, -18.7949, 0.72 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 52/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -6.08, 135.269, -3.8094, 0.12 ) }
    dend_10 { pt3dadd( 4.4184, 134.612, 5.94144, 0.12 ) }
    dend_10 { pt3dadd( 4.82398, 134.588, 6.31272, 0.12 ) }
    dend_10 { pt3dadd( 5.07727, 134.574, 6.54105, 0.12 ) }
    dend_10 { pt3dadd( 5.94134, 134.525, 7.30717, 0.84 ) }
    dend_10 { pt3dadd( 6.23218, 134.509, 7.56523, 0.84 ) }
    dend_10 { pt3dadd( 6.87318, 134.461, 8.17303, 0.36 ) }
    dend_10 { pt3dadd( 6.84483, 134.562, 7.79822, 0.36 ) }
    dend_10 { pt3dadd( 6.78032, 134.674, 7.43107, 0.36 ) }
    dend_10 { pt3dadd( 6.68795, 134.807, 7.00292, 0.36 ) }
    dend_10 { pt3dadd( 6.46627, 135.122, 6.01174, 0.36 ) }
    dend_10 { pt3dadd( 5.97961, 135.811, 3.92587, 0.36 ) }
    dend_10 { pt3dadd( 5.73956, 136.193, 2.83031, 2.04 ) }
    dend_10 { pt3dadd( 5.39961, 136.786, 1.16646, 1.56 ) }
    dend_10 { pt3dadd( 5.28323, 137.053, 0.45285, 0.12 ) }
    dend_10 { pt3dadd( 5.25016, 137.18, 0.1316, 0.12 ) }
    dend_10 { pt3dadd( 5.27162, 137.511, -0.701547, 1.2 ) }
    dend_10 { pt3dadd( 5.40089, 137.722, -1.28004, 0.48 ) }
    dend_10 { pt3dadd( 5.50429, 137.821, -1.57564, 0.12 ) }
    dend_10 { pt3dadd( 5.86455, 138.082, -2.32543, 0.12 ) }
    dend_10 { pt3dadd( 6.19758, 138.362, -3.1428, 1.32 ) }
    dend_10 { pt3dadd( 6.33263, 138.493, -3.53122, 1.68 ) }
    dend_10 { pt3dadd( 6.66795, 138.926, -4.746, 0.12 ) }
    dend_10 { pt3dadd( 6.7312, 139.077, -5.15742, 0.12 ) }
    dend_10 { pt3dadd( 6.76256, 139.322, -5.83389, 0.6 ) }
    dend_10 { pt3dadd( 6.73682, 139.776, -7.18387, 0.12 ) }
    dend_10 { pt3dadd( 6.72086, 139.919, -7.65286, 0.12 ) }
    dend_10 { pt3dadd( 6.65009, 140.301, -8.98922, 1.8 ) }
    dend_10 { pt3dadd( 6.5854, 140.675, -10.3708, 1.8 ) }
    dend_10 { pt3dadd( 6.48014, 141.011, -11.8363, 0.48 ) }
    dend_10 { pt3dadd( 6.45266, 141.108, -12.3492, 0.48 ) }
    dend_10 { pt3dadd( 6.46097, 141.18, -12.8305, 0.48 ) }
    dend_10 { pt3dadd( 6.50599, 141.298, -13.7769, 1.44 ) }
    dend_10 { pt3dadd( 6.55441, 141.354, -14.3223, 1.68 ) }
    dend_10 { pt3dadd( 6.78099, 141.592, -16.2603, 0.36 ) }
    dend_10 { pt3dadd( 6.8773, 141.761, -17.1178, 0.36 ) }
    dend_10 { pt3dadd( 6.87762, 141.994, -17.9562, 1.68 ) }
    dend_10 { pt3dadd( 6.82666, 142.269, -18.767, 1.2 ) }
    dend_10 { pt3dadd( 6.68695, 142.734, -19.9367, 0.36 ) }
    dend_10 { pt3dadd( 6.5577, 143.1, -20.7391, 0.36 ) }
    dend_10 { pt3dadd( 6.32726, 143.679, -21.8255, 1.68 ) }
    dend_10 { pt3dadd( 5.78372, 144.866, -23.8696, 0.24 ) }
    dend_10 { pt3dadd( 5.65762, 145.143, -24.3149, 0.24 ) }
    dend_10 { pt3dadd( 5.53257, 145.473, -24.823, 0.84 ) }
    dend_10 { pt3dadd( 5.4609, 145.719, -25.2032, 0.96 ) }
    dend_10 { pt3dadd( 5.37756, 146.219, -26.0794, 0.24 ) }
    dend_10 { pt3dadd( 5.3946, 146.449, -26.5616, 0.24 ) }
    dend_10 { pt3dadd( 5.53106, 146.765, -27.4308, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_10 { pt3dadd( 5.56094, 146.86, -27.8645, 1.68 ) }
    dend_10 { pt3dadd( 5.49714, 146.951, -28.757, 0.36 ) }
    dend_10 { pt3dadd( 5.4298, 146.963, -29.2309, 0.36 ) }
    dend_10 { pt3dadd( 5.35609, 146.947, -29.6077, 0.36 ) }
    dend_10 { pt3dadd( 4.99208, 146.828, -31.2122, 0.96 ) }
    dend_10 { pt3dadd( 4.54909, 146.647, -33.0518, 1.68 ) }
    dend_10 { pt3dadd( 4.01259, 146.4, -35.2576, 0.6 ) }
    dend_10 { pt3dadd( 3.91255, 146.341, -35.6782, 0.48 ) }
    dend_10 { pt3dadd( 3.56489, 146.074, -37.2217, 2.04 ) }
    dend_10 { pt3dadd( 3.46292, 145.956, -37.7382, 2.52 ) }
    dend_10 { pt3dadd( 3.27974, 145.521, -39.162, 0.36 ) }
    dend_10 { pt3dadd( 3.27312, 145.387, -39.5276, 0.36 ) }
    dend_10 { pt3dadd( 3.33779, 145.19, -40.0615, 0.48 ) }
    dend_10 { pt3dadd( 3.52591, 144.782, -41.1623, 0.36 ) }
    dend_10 { pt3dadd( 3.6143, 144.621, -41.5429, 0.36 ) }
    dend_10 { pt3dadd( 3.66667, 144.522, -41.7569, 0.36 ) }
    dend_10 { pt3dadd( 3.98842, 144.013, -42.7652, 0.36 ) }
    dend_10 { pt3dadd( 4.28842, 143.595, -43.5634, 1.08 ) }
    dend_10 { pt3dadd( 4.53187, 143.323, -44.0693, 1.8 ) }
    dend_10 { pt3dadd( 4.90327, 142.991, -44.6546, 1.2 ) }
    dend_10 { pt3dadd( 5.23584, 142.744, -45.1369, 0.36 ) }
    dend_10 { pt3dadd( 5.74975, 142.44, -45.7322, 0.36 ) }
    dend_10 { pt3dadd( 6.32448, 142.169, -46.2772, 0.36 ) }
    dend_10 { pt3dadd( 6.80003, 141.998, -46.6674, 1.2 ) }
    dend_10 { pt3dadd( 7.39314, 141.846, -47.1422, 1.8 ) }
    dend_10 { pt3dadd( 8.16985, 141.714, -47.7742, 0.12 ) }
    dend_10 { pt3dadd( 9.24825, 141.594, -48.6924, 0.12 ) }
    dend_10 { pt3dadd( 9.82372, 141.542, -49.2146, 1.44 ) }
    dend_10 { pt3dadd( 10.1427, 141.499, -49.5267, 2.16 ) }
    dend_10 { pt3dadd( 10.7026, 141.373, -50.0984, 2.4 ) }
    dend_10 { pt3dadd( 11.4343, 141.127, -50.848, 0.24 ) }
    dend_10 { pt3dadd( 11.7278, 140.979, -51.1478, 0.24 ) }
    dend_10 { pt3dadd( 11.9903, 140.782, -51.4484, 0.24 ) }
    dend_10 { pt3dadd( 12.4747, 140.348, -51.9432, 0.48 ) }
    dend_10 { pt3dadd( 12.8032, 140.02, -52.2539, 0.12 ) }
    dend_10 { pt3dadd( 13.2179, 139.636, -52.5853, 0.12 ) }
    dend_10 { pt3dadd( 13.5362, 139.394, -52.7816, 0.12 ) }
    dend_10 { pt3dadd( 13.8737, 139.197, -52.9752, 0.12 ) }
    dend_10 { pt3dadd( 14.3404, 139.008, -53.1692, 0.36 ) }
    dend_10 { pt3dadd( 14.66, 138.92, -53.2784, 0.12 ) }
    dend_10 { pt3dadd( 15.665, 138.688, -53.6021, 0.12 ) }
    dend_10 { pt3dadd( 16.5507, 138.509, -53.8682, 1.44 ) }
    dend_10 { pt3dadd( 16.7788, 138.467, -53.9351, 1.56 ) }
    dend_10 { pt3dadd( 18.1026, 138.215, -54.3044, 0.36 ) }
    dend_10 { pt3dadd( 18.5684, 138.107, -54.3696, 0.36 ) }
    dend_10 { pt3dadd( 18.8696, 138.019, -54.3769, 0.36 ) }
    dend_10 { pt3dadd( 19.2609, 137.859, -54.3448, 0.36 ) }
    dend_10 { pt3dadd( 19.5388, 137.711, -54.3419, 0.36 ) }
    dend_10 { pt3dadd( 19.7463, 137.588, -54.3289, 0.36 ) }
    dend_10 { pt3dadd( 21.1373, 136.665, -54.2584, 0.12 ) }
    dend_10 { pt3dadd( 21.4069, 136.486, -54.2449, 0.12 ) }
    dend_10 { pt3dadd( 21.717, 136.291, -54.2207, 0.12 ) }
    dend_10 { pt3dadd( 22.7596, 135.672, -54.1533, 2.4 ) }
    dend_10 { pt3dadd( 24.4751, 134.695, -54.1316, 0.12 ) }
    dend_10 { pt3dadd( 24.937, 134.431, -54.1578, 0.12 ) }
    dend_10 { pt3dadd( 25.5123, 134.109, -54.2058, 0.36 ) }
    dend_10 { pt3dadd( 26.0891, 133.796, -54.2288, 0.12 ) }
    dend_10 { pt3dadd( 26.5748, 133.538, -54.2349, 0.12 ) }
    dend_10 { pt3dadd( 27.0444, 133.283, -54.2286, 1.08 ) }
    dend_10 { pt3dadd( 27.4463, 133.063, -54.225, 1.08 ) }
    dend_10 { pt3dadd( 28.8674, 132.269, -54.147, 0.36 ) }
    dend_10 { pt3dadd( 29.2355, 132.035, -54.1294, 0.36 ) }
    dend_10 { pt3dadd( 29.5107, 131.838, -54.1407, 0.12 ) }
    dend_10 { pt3dadd( 29.6876, 131.715, -54.1329, 0.12 ) }
    dend_10 { pt3dadd( 30.6876, 131.028, -54.0587, 0.12 ) }
    dend_10 { pt3dadd( 31.1298, 130.732, -54.04, 1.32 ) }
    dend_10 { pt3dadd( 31.7825, 130.308, -54.0404, 2.04 ) }
    dend_10 { pt3dadd( 32.543, 129.86, -54.0404, 1.32 ) }
    dend_10 { pt3dadd( 34.2523, 128.949, -54.0318, 0.12 ) }
    dend_10 { pt3dadd( 34.4787, 128.845, -54.0358, 0.12 ) }
    dend_10 { pt3dadd( 34.9054, 128.712, -53.9875, 0.24 ) }
    dend_10 { pt3dadd( 35.571, 128.547, -53.8757, 0.24 ) }
    dend_10 { pt3dadd( 36.1041, 128.452, -53.7537, 0.24 ) }
    dend_10 { pt3dadd( 36.8712, 128.36, -53.5348, 0.24 ) }
    dend_10 { pt3dadd( 37.2504, 128.336, -53.4348, 0.84 ) }
    dend_10 { pt3dadd( 40.0837, 128.224, -52.5065, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 76/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 41.3544, 102.892, 16.292, 0.72 ) }
    dend_6 { pt3dadd( 40.9501, 102.436, 15.3465, 0.72 ) }
    dend_6 { pt3dadd( 40.3253, 101.898, 14.1202, 0.6 ) }
    dend_6 { pt3dadd( 39.9189, 101.548, 13.3225, 0.36 ) }
    dend_6 { pt3dadd( 39.7678, 101.418, 13.026, 0.48 ) }
    dend_6 { pt3dadd( 39.3906, 101.093, 12.2856, 0.36 ) }
    dend_6 { pt3dadd( 38.9299, 100.696, 11.3815, 0.12 ) }
    dend_6 { pt3dadd( 38.7496, 100.59, 11.0765, 0.12 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 41.3544, 102.892, 16.292, 0.48 ) }
    dend_5 { pt3dadd( 41.3378, 103.879, 16.3041, 0.48 ) }
    dend_5 { pt3dadd( 41.3075, 104.732, 16.3643, 0.48 ) }
    dend_5 { pt3dadd( 41.216, 105.638, 16.4373, 0.6 ) }
    dend_5 { pt3dadd( 41.1051, 106.367, 16.5124, 0.48 ) }
    dend_5 { pt3dadd( 40.923, 107.464, 16.6342, 0.48 ) }
    dend_5 { pt3dadd( 40.7178, 108.703, 16.7749, 2.04 ) }
    dend_5 { pt3dadd( 40.5864, 109.723, 16.8975, 1.92 ) }
    dend_5 { pt3dadd( 40.4452, 110.907, 16.9798, 1.44 ) }
    dend_5 { pt3dadd( 40.3362, 111.843, 17.0025, 1.08 ) }
    dend_5 { pt3dadd( 40.2595, 112.673, 16.9995, 0.96 ) }
    dend_5 { pt3dadd( 40.2461, 113.093, 16.9643, 0.72 ) }
    dend_5 { pt3dadd( 40.2972, 114.07, 16.7736, 1.08 ) }
    dend_5 { pt3dadd( 40.5161, 115.673, 16.4281, 0.48 ) }
    dend_5 { pt3dadd( 40.6514, 116.345, 16.2906, 0.48 ) }
    dend_5 { pt3dadd( 40.9067, 117.455, 16.0863, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_5 { pt3dadd( 41.1224, 118.438, 15.9059, 1.92 ) }
    dend_5 { pt3dadd( 41.39, 119.745, 15.7447, 1.08 ) }
    dend_5 { pt3dadd( 41.5816, 120.665, 15.7025, 0.72 ) }
    dend_5 { pt3dadd( 41.688, 121.153, 15.7386, 0.24 ) }
    dend_5 { pt3dadd( 41.9996, 122.265, 15.8385, 0.24 ) }
    dend_5 { pt3dadd( 42.2216, 123.088, 15.9155, 0.72 ) }
    dend_5 { pt3dadd( 42.4324, 124.044, 16.0562, 0.12 ) }
    dend_5 { pt3dadd( 42.6352, 124.875, 16.1996, 0.12 ) }
    dend_5 { pt3dadd( 42.9213, 126.045, 16.376, 1.8 ) }
    dend_5 { pt3dadd( 43.2654, 127.529, 16.6045, 2.76 ) }
    dend_5 { pt3dadd( 43.4735, 128.492, 16.7795, 2.64 ) }
    dend_5 { pt3dadd( 43.8114, 130.098, 17.0962, 1.08 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 39.3249, -93.5533, -32.4453, 0.12 ) }
    dend_39 { pt3dadd( 40.1938, -94.0109, -32.6598, 0.12 ) }
    dend_39 { pt3dadd( 40.9148, -94.3906, -32.8378, 0.12 ) }
    dend_39 { pt3dadd( 41.6438, -94.7746, -33.0177, 0.6 ) }
    dend_39 { pt3dadd( 42.0265, -94.9761, -33.1122, 0.12 ) }
    dend_39 { pt3dadd( 42.9438, -95.4593, -33.3386, 0.12 ) }
    dend_39 { pt3dadd( 43.4245, -95.7124, -33.4572, 0.72 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 39.3249, -93.5533, -32.4453, 0.12 ) }
    dend_36 { pt3dadd( 39.5574, -94.6494, -32.2282, 0.12 ) }
    dend_36 { pt3dadd( 39.7202, -95.3106, -31.985, 0.12 ) }
    dend_36 { pt3dadd( 39.8654, -95.7855, -31.7812, 0.96 ) }
    dend_36 { pt3dadd( 40.0213, -96.2496, -31.5832, 1.56 ) }
    dend_36 { pt3dadd( 40.2846, -96.9768, -31.2885, 0.12 ) }
    dend_36 { pt3dadd( 40.4336, -97.3553, -31.1458, 0.12 ) }
    dend_36 { pt3dadd( 40.9867, -98.4995, -30.6471, 1.08 ) }
    dend_36 { pt3dadd( 41.2485, -98.9844, -30.4324, 0.72 ) }
    dend_36 { pt3dadd( 41.4636, -99.3612, -30.2779, 0.12 ) }
    dend_36 { pt3dadd( 41.7326, -99.8026, -30.0549, 0.12 ) }
    dend_36 { pt3dadd( 41.973, -100.203, -29.8352, 0.12 ) }
    dend_36 { pt3dadd( 42.3286, -100.845, -29.5054, 1.44 ) }
    dend_36 { pt3dadd( 42.5065, -101.195, -29.3491, 1.68 ) }
    dend_36 { pt3dadd( 42.6327, -101.471, -29.2184, 1.68 ) }
    dend_36 { pt3dadd( 43.1234, -102.646, -28.6832, 0.12 ) }
    dend_36 { pt3dadd( 43.3152, -103.193, -28.4429, 0.12 ) }
    dend_36 { pt3dadd( 43.4764, -103.79, -28.2093, 0.12 ) }
    dend_36 { pt3dadd( 43.5191, -104.001, -28.1421, 0.96 ) }
    dend_36 { pt3dadd( 43.5976, -104.499, -28.0014, 0.96 ) }
    dend_36 { pt3dadd( 43.6622, -104.959, -27.8959, 0.12 ) }
    dend_36 { pt3dadd( 43.7871, -106.217, -27.7104, 0.12 ) }
    dend_36 { pt3dadd( 43.8413, -106.861, -27.6152, 0.96 ) }
    dend_36 { pt3dadd( 43.8782, -107.45, -27.5392, 1.68 ) }
    dend_36 { pt3dadd( 43.9054, -107.864, -27.4929, 1.92 ) }
    dend_36 { pt3dadd( 43.932, -108.3, -27.464, 1.92 ) }
    dend_36 { pt3dadd( 43.992, -109.383, -27.4402, 0.12 ) }
    dend_36 { pt3dadd( 44.0008, -109.801, -27.4614, 0.12 ) }
    dend_36 { pt3dadd( 43.9874, -110.739, -27.5372, 0.12 ) }
    dend_36 { pt3dadd( 43.9534, -111.167, -27.6088, 0.6 ) }
    dend_36 { pt3dadd( 43.8648, -111.744, -27.7322, 0.12 ) }
    dend_36 { pt3dadd( 43.7333, -112.34, -27.8757, 0.12 ) }
    dend_36 { pt3dadd( 43.5777, -112.963, -28.0421, 1.2 ) }
    dend_36 { pt3dadd( 43.3405, -113.832, -28.2792, 1.68 ) }
    dend_36 { pt3dadd( 42.9757, -115.087, -28.5989, 0.12 ) }
    dend_36 { pt3dadd( 42.8042, -115.714, -28.7588, 0.12 ) }
    dend_36 { pt3dadd( 42.7119, -116.153, -28.8604, 0.12 ) }
    dend_36 { pt3dadd( 42.6396, -116.664, -28.9936, 0.12 ) }
    dend_36 { pt3dadd( 42.6223, -116.964, -29.0736, 1.2 ) }
    dend_36 { pt3dadd( 42.6332, -117.606, -29.2428, 1.56 ) }
    dend_36 { pt3dadd( 42.7284, -118.721, -29.5234, 0.24 ) }
    dend_36 { pt3dadd( 42.8271, -119.537, -29.7539, 0.24 ) }
    dend_36 { pt3dadd( 42.922, -120.355, -29.9967, 0.72 ) }
    dend_36 { pt3dadd( 42.9603, -120.759, -30.1143, 0.84 ) }
    dend_36 { pt3dadd( 42.9973, -121.192, -30.233, 0.12 ) }
    dend_36 { pt3dadd( 43.0157, -121.494, -30.3136, 0.12 ) }
    dend_36 { pt3dadd( 43.0163, -122.001, -30.4491, 0.12 ) }
    dend_36 { pt3dadd( 43.0048, -122.368, -30.558, 0.12 ) }
    dend_36 { pt3dadd( 43.0449, -122.793, -30.5223, 0.12 ) }
    dend_36 { pt3dadd( 43.0785, -122.992, -30.467, 0.12 ) }
    dend_36 { pt3dadd( 43.2171, -123.686, -30.1791, 1.32 ) }
    dend_36 { pt3dadd( 43.3565, -124.442, -29.7998, 0.12 ) }
    dend_36 { pt3dadd( 43.5216, -125.096, -29.393, 0.12 ) }
    dend_36 { pt3dadd( 44.4434, -127.879, -27.2584, 0.6 ) }
    dend_36 { pt3dadd( 44.8538, -128.869, -26.2602, 1.32 ) }
    dend_36 { pt3dadd( 44.9841, -129.12, -25.9188, 2.04 ) }
    dend_36 { pt3dadd( 45.1534, -129.36, -25.4423, 2.4 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 76/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 91.6571, -4.8699, 0.48843, 0.24 ) }
    dend_32 { pt3dadd( 92.9037, -4.55013, 0.95823, 0.24 ) }
    dend_32 { pt3dadd( 93.4505, -4.39927, 1.16458, 0.24 ) }
    dend_32 { pt3dadd( 95.4422, -3.84176, 1.90336, 0.24 ) }
    dend_32 { pt3dadd( 96.0247, -3.66734, 2.10023, 0.96 ) }
    dend_32 { pt3dadd( 97.1109, -3.32395, 2.38588, 1.56 ) }
    dend_32 { pt3dadd( 98.0617, -3.01024, 2.64877, 0.36 ) }
    dend_32 { pt3dadd( 99.8891, -2.37548, 3.12289, 0.12 ) }
    dend_32 { pt3dadd( 100.301, -2.2239, 3.22343, 1.2 ) }
    dend_32 { pt3dadd( 101.571, -1.71523, 3.46365, 2.16 ) }
    dend_32 { pt3dadd( 103.131, -1.00187, 3.79286, 0.12 ) }
    dend_32 { pt3dadd( 104.714, -0.162442, 4.13359, 0.12 ) }
    dend_32 { pt3dadd( 104.985, 0.012253, 4.1897, 0.84 ) }
    dend_32 { pt3dadd( 105.492, 0.418633, 4.27512, 0.96 ) }
    dend_32 { pt3dadd( 106.154, 1.01776, 4.40417, 0.12 ) }
    dend_32 { pt3dadd( 106.733, 1.67922, 4.56005, 0.12 ) }
    dend_32 { pt3dadd( 106.902, 1.9657, 4.62092, 0.6 ) }
    dend_32 { pt3dadd( 107.237, 2.76472, 4.60849, 0.12 ) }
    dend_32 { pt3dadd( 107.429, 3.39644, 4.61607, 0.12 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 95/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 91.6571, -4.8699, 0.48843, 0.6 ) }
    dend_31 { pt3dadd( 91.2505, -3.54044, 0.255667, 0.6 ) }
    dend_31 { pt3dadd( 91.1463, -3.17098, 0.190515, 0.6 ) }
    dend_31 { pt3dadd( 90.9638, -2.38401, 0.0179925, 0.84 ) }
    dend_31 { pt3dadd( 90.7897, -1.30773, -0.255565, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_31 { pt3dadd( 90.5882, -0.089169, -0.585352, 0.12 ) }
    dend_31 { pt3dadd( 90.5217, 0.324645, -0.703023, 0.96 ) }
    dend_31 { pt3dadd( 90.4271, 1.23256, -0.973885, 1.2 ) }
    dend_31 { pt3dadd( 90.3636, 2.26239, -1.31415, 0.12 ) }
    dend_31 { pt3dadd( 90.3378, 3.40982, -1.7309, 0.12 ) }
    dend_31 { pt3dadd( 90.3475, 4.29759, -2.10994, 0.12 ) }
    dend_31 { pt3dadd( 90.4076, 5.28437, -2.58883, 0.12 ) }
    dend_31 { pt3dadd( 90.4516, 5.72733, -2.8084, 0.12 ) }
    dend_31 { pt3dadd( 90.5932, 6.72778, -3.31098, 1.68 ) }
    dend_31 { pt3dadd( 90.6611, 7.03252, -3.54364, 1.92 ) }
    dend_31 { pt3dadd( 90.9963, 8.0232, -4.58181, 0.12 ) }
    dend_31 { pt3dadd( 91.3313, 8.76326, -5.59046, 0.12 ) }
    dend_31 { pt3dadd( 91.4663, 9.06984, -6.09476, 1.32 ) }
    dend_31 { pt3dadd( 91.5508, 9.31602, -6.6176, 1.68 ) }
    dend_31 { pt3dadd( 91.9383, 10.5694, -10.3622, 0.36 ) }
    dend_31 { pt3dadd( 91.9881, 10.6889, -10.8414, 0.36 ) }
    dend_31 { pt3dadd( 92.0525, 10.8149, -11.5501, 0.12 ) }
    dend_31 { pt3dadd( 92.1327, 10.9563, -12.6987, 0.12 ) }
    dend_31 { pt3dadd( 92.2422, 11.1944, -15.0839, 0.48 ) }
    dend_31 { pt3dadd( 92.2578, 11.3418, -16.6324, 1.44 ) }
    dend_31 { pt3dadd( 92.1899, 11.5421, -17.8865, 2.16 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -22.8951, -292.027, -51.1163, 0.24 ) }
    dend_22 { pt3dadd( -22.7343, -291.625, -51.4317, 0.24 ) }
    dend_22 { pt3dadd( -22.5302, -291.114, -51.832, 0.24 ) }
    dend_22 { pt3dadd( -22.2834, -290.495, -52.3161, 0.6 ) }
    dend_22 { pt3dadd( -22.034, -289.871, -52.8053, 1.08 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 26/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -22.8951, -292.027, -51.1163, 0.12 ) }
    dend_21 { pt3dadd( -22.221, -292.51, -50.6815, 0.12 ) }
    dend_21 { pt3dadd( -21.782, -292.777, -50.3958, 0.12 ) }
    dend_21 { pt3dadd( -21.3993, -292.962, -50.1996, 0.12 ) }
    dend_21 { pt3dadd( -20.9043, -293.145, -50.0185, 0.12 ) }
    dend_21 { pt3dadd( -20.6311, -293.223, -49.9425, 0.12 ) }
    dend_21 { pt3dadd( -18.4142, -293.709, -49.4743, 0.12 ) }
    dend_21 { pt3dadd( -17.4697, -293.794, -49.3662, 2.04 ) }
    dend_21 { pt3dadd( -16.4584, -293.807, -49.271, 1.56 ) }
    dend_21 { pt3dadd( -15.3902, -293.758, -49.2058, 0.36 ) }
    dend_21 { pt3dadd( -14.8076, -293.698, -49.1526, 0.36 ) }
    dend_21 { pt3dadd( -14.1458, -293.607, -49.0956, 0.36 ) }
    dend_21 { pt3dadd( -12.8238, -293.388, -49.0414, 0.36 ) }
    dend_21 { pt3dadd( -12.2866, -293.297, -48.9479, 0.6 ) }
    dend_21 { pt3dadd( -11.9127, -293.238, -48.8371, 0.6 ) }
    dend_21 { pt3dadd( -10.273, -292.959, -48.2247, 0.36 ) }
    dend_21 { pt3dadd( -9.90986, -292.898, -48.083, 0.6 ) }
    dend_21 { pt3dadd( -9.39998, -292.819, -47.9166, 0.6 ) }
    dend_21 { pt3dadd( -8.48252, -292.697, -47.71, 0.12 ) }
    dend_21 { pt3dadd( -8.1116, -292.673, -47.6959, 0.12 ) }
    dend_21 { pt3dadd( -7.45232, -292.684, -47.7917, 0.12 ) }
    dend_21 { pt3dadd( -6.85457, -292.765, -48.0534, 1.08 ) }
    dend_21 { pt3dadd( -5.74901, -293.058, -48.6813, 0.12 ) }
    dend_21 { pt3dadd( -5.52102, -293.16, -48.8363, 0.12 ) }
    dend_21 { pt3dadd( -4.91512, -293.513, -49.2865, 0.12 ) }
    dend_21 { pt3dadd( -4.53896, -293.779, -49.5729, 0.48 ) }
    dend_21 { pt3dadd( -3.94115, -294.267, -50.0388, 0.12 ) }
    dend_21 { pt3dadd( -3.58943, -294.582, -50.3057, 0.12 ) }
    dend_21 { pt3dadd( -2.97387, -295.147, -50.6962, 0.12 ) }
    dend_21 { pt3dadd( -2.53988, -295.547, -50.9854, 0.12 ) }
    dend_21 { pt3dadd( -2.17661, -295.873, -51.2398, 1.08 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 57/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 45.1534, -129.36, -25.4423, 0.48 ) }
    dend_38 { pt3dadd( 44.4867, -131.848, -29.1753, 0.48 ) }
    dend_38 { pt3dadd( 44.3743, -132.253, -29.7507, 0.48 ) }
    dend_38 { pt3dadd( 44.1428, -133.186, -30.9509, 0.12 ) }
    dend_38 { pt3dadd( 44.0496, -133.641, -31.5008, 0.12 ) }
    dend_38 { pt3dadd( 43.9203, -134.27, -32.2626, 1.2 ) }
    dend_38 { pt3dadd( 43.7576, -135.064, -33.2221, 0.12 ) }
    dend_38 { pt3dadd( 43.7224, -135.265, -33.3994, 0.12 ) }
    dend_38 { pt3dadd( 43.6078, -135.895, -33.9701, 0.72 ) }
    dend_38 { pt3dadd( 43.5501, -136.261, -34.2197, 0.72 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 45.1534, -129.36, -25.4423, 0.12 ) }
    dend_37 { pt3dadd( 43.6834, -132.022, -26.2054, 0.12 ) }
    dend_37 { pt3dadd( 43.2567, -133.103, -26.292, 0.12 ) }
    dend_37 { pt3dadd( 43.1469, -133.411, -26.2941, 0.6 ) }
    dend_37 { pt3dadd( 42.8518, -134.26, -26.2505, 0.24 ) }
    dend_37 { pt3dadd( 42.7603, -134.568, -26.1906, 0.24 ) }
    dend_37 { pt3dadd( 42.5367, -135.358, -25.9653, 0.24 ) }
    dend_37 { pt3dadd( 42.4318, -135.907, -25.6476, 0.6 ) }
    dend_37 { pt3dadd( 42.2192, -136.631, -25.1601, 0.12 ) }
    dend_37 { pt3dadd( 41.9932, -137.187, -24.76, 0.12 ) }
    dend_37 { pt3dadd( 41.4231, -138.205, -23.9768, 0.84 ) }
    dend_37 { pt3dadd( 41.2831, -138.428, -23.7835, 0.84 ) }
    dend_37 { pt3dadd( 41.0165, -138.803, -23.3945, 0.12 ) }
    dend_37 { pt3dadd( 40.8693, -138.984, -23.1658, 0.12 ) }
    dend_37 { pt3dadd( 40.4941, -139.385, -22.5224, 0.84 ) }
    dend_37 { pt3dadd( 40.3168, -139.526, -22.2873, 0.96 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_26, dend_15, dend_0, axon_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, axon_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_5 = new SectionList()
    dend_26 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_15 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_25 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_16 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_41 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_8 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_58 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_55 OneSecGrp_SectionRef_22.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_53 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_50 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_9 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_60 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_59 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_57 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_56 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_52 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_51 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_30 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_19 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_14 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_11 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_10 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_36 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_3 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_54 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_12 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_6 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_39 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_13 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_32 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_5 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_31 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_38 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_37 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_42 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_45 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_46 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_44 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_47 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_18 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_20 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_22 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_21 OneSecGrp_SectionRef_62.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_15 nseg = 3
    dend_48 nseg = 3
    dend_25 nseg = 3
    dend_16 nseg = 11
    dend_41 nseg = 9
    dend_8 nseg = 3
    dend_58 nseg = 3
    dend_55 nseg = 5
    dend_53 nseg = 7
    dend_50 nseg = 3
    dend_34 nseg = 3
    dend_9 nseg = 3
    dend_4 nseg = 3
    dend_60 nseg = 25
    dend_59 nseg = 7
    dend_57 nseg = 7
    dend_56 nseg = 3
    dend_52 nseg = 9
    dend_51 nseg = 5
    dend_33 nseg = 3
    dend_30 nseg = 3
    dend_19 nseg = 3
    dend_14 nseg = 5
    dend_11 nseg = 3
    dend_10 nseg = 5
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_DBC_e8a6fe8924_0_0


