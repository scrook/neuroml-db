// Cell: cACint209_L4_BP_5e74f0aae9_0_0
/*
{
  "id" : "cACint209_L4_BP_5e74f0aae9_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.08452, 6.27464, 0.312461, 1.46623", "-2.79927, 5.64032, 0.287115, 2.64844", "-2.51401, 5.00599, 0.26177, 4.10361", "-2.22875, 4.37167, 0.236425, 4.91598", "-1.94349, 3.73735, 0.21108, 5.72835", "-1.65823, 3.10303, 0.185734, 6.53421", "-1.37297, 2.46871, 0.160389, 7.31212", "-1.08771, 1.83438, 0.135044, 8.08989", "-0.802456, 1.20006, 0.109699, 8.85679", "-0.517198, 0.56574, 0.0843534, 8.93483", "-0.23194, -0.0685822, 0.0590082, 8.92633", "0.0533189, -0.702904, 0.033663, 8.91784", "0.338577, -1.33723, 0.00831775, 8.90934", "0.623836, -1.97155, -0.0170275, 8.90084", "0.909094, -2.60587, -0.0423727, 8.82493", "1.19435, -3.24019, -0.067718, 7.82232", "1.47961, -3.87451, -0.0930632, 6.5965", "1.76487, -4.50884, -0.118408, 5.37067", "2.05013, -5.14316, -0.143754, 4.14485", "2.33539, -5.77748, -0.169099, 2.91903", "2.62064, -6.4118, -0.194444, 1.76337" ]
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.61629, -5.55298, -1.26548, 1.33", "2.66235, -9.87172, -2.10422, 1.33", "4.3967, -17.0322, -3.49483, 0.66", "5.73948, -22.576, -4.57147, 0.66", "7.17033, -28.4834, -5.71874, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001318721313
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.62064, -6.4118, -0.194444, 0.33", "8.77276, -20.0921, -0.194444, 0.33", "14.9249, -33.7725, -0.194444, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.17033, -28.4834, -5.71874, 0.66", "7.57012, -38.8414, -3.12219, 0.66", "8.14804, -54.2267, 0.755099, 0.66", "8.84619, -73.0076, 5.6411, 0.66", "9.44938, -87.5021, 9.43146, 0.66", "9.81067, -95.9122, 11.6238, 0.66", "9.92007, -98.7034, 12.3455, 0.66", "10.0818, -102.489, 13.3532, 0.66", "10.1698, -106.031, 14.3218, 0.66", "10.2698, -110.117, 15.3614, 0.66", "10.3352, -112.324, 15.6372, 0.66", "10.3849, -115.079, 15.7205, 0.66", "10.4982, -119.232, 15.3505, 0.66", "10.6135, -124.692, 14.5924, 0.66", "10.7121, -127.07, 14.2412, 0.66", "11.2665, -138.234, 12.4866, 0.66", "11.4636, -140.868, 12.0282, 0.66", "12.229, -149.005, 10.4038, 0.66", "12.5918, -152.44, 9.68838, 0.66", "13.3722, -158.749, 8.46035, 0.66", "13.8247, -162.365, 8.00402, 0.66", "14.2697, -165.883, 7.9294, 0.66", "14.7005, -169.279, 7.98302, 0.66", "14.985, -172.554, 8.04201, 0.66", "15.2316, -176.022, 7.96307, 0.66", "15.4164, -181.382, 7.75828, 0.66", "15.562, -184.64, 7.79243, 0.66", "15.6807, -188.591, 7.89195, 0.66", "15.8232, -193.941, 7.99965, 0.66", "15.8818, -197.356, 7.9034, 0.66", "15.9928, -201.95, 7.5643, 0.66", "16.2399, -206.276, 7.20609, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.17033, -28.4834, -5.71874, 0.66", "9.22804, -31.1627, -4.45479, 0.66", "13.9586, -37.3222, -1.54907, 0.33", "24.7869, -51.4214, 5.10223, 0.33", "25.1954, -51.9533, 5.35319, 0.66", "29.5652, -57.643, 8.0373, 0.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "14.9249, -33.7725, -0.194444, 0.33", "21.077, -47.4528, -0.194444, 0.33", "27.2291, -61.1331, -0.194444, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "16.2399, -206.276, 7.20609, 0.66", "17.4616, -208.766, 9.39932, 0.66", "17.9651, -210.198, 10.7729, 0.66", "18.2525, -212.448, 13.3685, 0.66", "18.3066, -213.804, 15.1104, 0.66", "18.2393, -216.313, 18.5645, 0.66", "18.1894, -218.143, 21.2166, 0.66", "17.9973, -219.827, 23.8919, 0.66", "17.6132, -223.099, 29.6601, 0.66", "17.415, -224.815, 32.946, 0.66", "17.1412, -226.804, 36.8166, 0.33", "17.0827, -227.582, 38.3408, 0.33", "17.0891, -227.827, 38.8635, 0.66", "17.293, -229.121, 41.9118, 0.33", "17.4727, -229.356, 42.474, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "16.2399, -206.276, 7.20609, 0.66", "16.3454, -208.005, 7.78656, 0.66", "16.4749, -210.24, 8.5469, 0.66", "16.8194, -214.706, 10.0228, 0.66", "16.9571, -216.652, 10.6385, 0.66", "17.1567, -219.021, 11.4172, 0.66", "17.3575, -221.427, 12.1326, 0.66", "17.4798, -222.779, 12.4908, 0.66", "17.6062, -224.649, 12.8911, 0.66", "17.8551, -228.245, 13.5168, 0.66", "18.0208, -230.287, 13.778, 0.66", "18.2046, -232.683, 14.0399, 0.66", "18.3413, -234.709, 14.1195, 0.66", "18.3895, -235.808, 14.1427, 0.66", "18.5017, -239.501, 14.1482, 0.66", "18.5668, -241.411, 14.0901, 0.66", "18.6167, -244.06, 13.9746, 0.66", "18.6874, -246.181, 13.9811, 0.66", "18.7217, -247.123, 13.9736, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "18.7217, -247.123, 13.9736, 0.66", "19.0666, -249.724, 14.2807, 0.66", "19.2423, -253.971, 15.0938, 0.66", "19.3052, -258.509, 16.0653, 0.66", "19.2652, -261.49, 16.6878, 0.66", "19.2257, -265.607, 17.4515, 0.66", "19.1499, -272.888, 18.5403, 0.66", "19.0147, -277.87, 19.1436, 0.66", "18.85, -281.291, 19.5655, 0.66", "18.7471, -284.865, 19.9352, 0.66", "18.6835, -288.872, 20.3252, 0.66", "18.6823, -291.611, 20.5785, 0.66", "18.818, -295.365, 20.8743, 0.66", "19.023, -298.815, 21.161, 0.66", "19.4352, -306.932, 22.0175, 0.66", "19.6293, -310.158, 22.435, 0.66", "20.0659, -318.259, 23.3892, 0.66", "20.2624, -321.522, 23.6527, 0.66", "20.458, -324.664, 23.7778, 0.66", "20.6613, -327.488, 23.7705, 0.66", "20.9602, -332.112, 23.6758, 0.66", "21.1818, -336.067, 23.5297, 0.66", "21.6815, -343.665, 22.9788, 0.66", "22.0107, -347.5, 22.7475, 0.66", "22.2776, -350.485, 22.5914, 0.66", "22.6627, -354.501, 22.4253, 0.66", "24.149, -369.608, 21.7798, 0.66", "24.8095, -375.152, 21.4886, 0.66", "26.6928, -389.697, 20.5664, 0.66", "27.4545, -395.19, 20.1617, 0.66", "28.2103, -400.596, 19.8132, 0.66", "28.7559, -404.355, 19.6093, 0.66", "29.5721, -409.498, 19.332, 0.66", "30.3662, -415.223, 18.9917, 0.66", "31.2839, -421.457, 18.3813, 0.66", "31.7717, -424.942, 18.0359, 0.66", "32.0828, -427.373, 17.8643, 0.66", "33.025, -436.826, 17.6789, 0.66", "33.3123, -439.773, 17.6276, 0.66", "33.827, -444.603, 17.3189, 0.66", "34.3863, -449.429, 16.9436, 0.66", "34.8647, -453.167, 16.7152, 0.66", "35.9495, -462.331, 16.5428, 0.66", "37.1965, -472.86, 16.6597, 0.66", "38.1067, -480.024, 16.7291, 0.66", "38.5866, -483.623, 16.6959, 0.66", "40.4859, -496.779, 16.3519, 0.66", "41.7418, -505.211, 15.7766, 0.66", "42.1328, -507.673, 15.5619, 0.66", "42.8259, -511.659, 15.1355, 0.66", "43.9225, -517.495, 14.344, 0.66", "44.3878, -520.014, 13.8892, 0.66", "45.6602, -526.752, 12.3518, 0.66", "48.4808, -540.791, 8.96406, 0.66", "49.8756, -548.042, 7.45801, 0.66", "50.385, -550.753, 7.00241, 0.33", "50.7208, -552.565, 6.77472, 1.33", "51.5235, -556.87, 6.541, 0.66", "52.553, -562.07, 6.66521, 0.66", "53.3152, -565.764, 6.90576, 0.66", "54.086, -569.506, 7.28656, 0.66", "54.795, -572.564, 7.61899, 0.66", "57.6083, -585.142, 9.32268, 0.66", "57.9735, -586.919, 9.60078, 0.33", "58.4511, -589.459, 9.96993, 1.33", "58.9396, -591.977, 10.2776, 0.66", "59.3019, -593.957, 10.4996, 0.33", "60.2305, -599.427, 11.1113, 0.66", "60.3747, -602.272, 11.5882, 0.66", "60.399, -606.042, 12.3465, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "18.7217, -247.123, 13.9736, 0.66", "16.3582, -253.393, 13.8288, 0.66", "14.4161, -258.717, 13.6359, 0.66", "13.0864, -262.715, 13.7663, 0.33", "11.2676, -268.34, 14.1731, 0.33", "10.9697, -269.259, 14.288, 0.66", "10.0607, -272.24, 14.7387, 0.33", "9.449, -274.415, 15.2, 0.66", "8.17351, -279.569, 16.1423, 0.33", "7.98809, -280.384, 16.3165, 0.66", "6.72455, -285.903, 17.4781, 0.33", "6.20695, -288.763, 18.1864, 0.33", "5.7884, -291.871, 19.0384, 0.66", "5.38309, -295.594, 20.1633, 0.33", "5.23241, -297.604, 20.7335, 0.33", "5.22391, -298.732, 21.1144, 0.66", "5.60076, -303.469, 23.4376, 0.33", "5.66319, -304.159, 23.8743, 0.66", "5.89745, -305.898, 25.1568, 0.33", "6.00045, -306.792, 25.8356, 0.33", "6.07561, -307.739, 26.4508, 0.66", "6.17893, -311.291, 28.3582, 0.33", "6.0618, -313.466, 29.1501, 0.33", "6.02876, -314.289, 29.3909, 0.66", "6.00683, -315.886, 29.7137, 0.33", "5.98509, -316.733, 29.8245, 0.66", "5.94879, -317.809, 29.8988, 0.33", "5.90174, -318.924, 29.8918, 0.66", "5.80515, -320.558, 29.913, 0.33", "5.75776, -321.154, 29.9338, 0.66", "5.28222, -326.09, 30.2273, 0.33", "5.24458, -326.405, 30.2477, 0.66", "5.06928, -327.54, 30.3289, 0.33", "4.96085, -328.131, 30.3743, 0.66", "4.72144, -329.741, 30.6636, 0.33", "4.63682, -330.478, 30.8474, 0.66", "4.5397, -331.796, 31.2404, 0.33", "4.4873, -332.729, 31.5317, 0.66", "4.46191, -333.798, 31.8942, 0.33", "4.43683, -338.77, 33.7502, 0.33", "4.46346, -340.221, 34.3671, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "60.399, -606.042, 12.3465, 0.66", "61.3128, -609.399, 11.745, 0.66", "61.7012, -611.151, 11.8564, 1.33", "61.9819, -612.661, 12.0791, 0.66", "62.3065, -614.561, 12.2964, 0.66", "62.9482, -618.661, 12.9602, 0.33", "63.7354, -623.621, 13.9014, 0.66", "64.6432, -630.04, 15.5237, 0.66", "65.116, -633.238, 16.466, 0.66", "65.7414, -636.795, 17.45, 0.33", "66.6224, -641.339, 18.5326, 0.33", "66.8778, -642.621, 18.7406, 0.66", "67.1888, -643.675, 18.7246, 0.33", "67.4893, -644.583, 18.5629, 0.66", "69.3436, -649.867, 17.3786, 0.33", "70.1456, -652.072, 16.8889, 0.66", "70.901, -654.161, 16.3397, 0.33", "72.8466, -660.11, 15.0143, 0.33", "73.9609, -663.6, 14.3891, 0.66", "75.9185, -669.928, 13.513, 0.33", "76.773, -672.92, 13.2525, 0.66", "77.6028, -675.876, 13.0704, 1.33", "79.4174, -682.633, 12.9313, 0.33", "80.2083, -685.988, 13.0658, 0.33", "80.5037, -687.309, 13.1506, 0.66", "81.1463, -690.646, 13.4708, 0.33", "81.9259, -695.13, 13.9616, 0.33", "82.207, -696.768, 14.1962, 1.33", "82.9893, -701.475, 14.8608, 0.33", "83.184, -703.11, 15.0898, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "60.399, -606.042, 12.3465, 0.66", "60.0528, -607.283, 10.7829, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "83.184, -703.11, 15.0898, 0.66", "81.0503, -702.802, 13.5482, 0.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "83.184, -703.11, 15.0898, 0.66", "83.6564, -704.824, 15.052, 0.66", "85.7599, -712.455, 14.8837, 0.33", "86.4289, -714.882, 14.8302, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "86.4289, -714.882, 14.8302, 0.33", "86.0617, -725.232, 22.9152, 0.33", "86.0783, -726.233, 23.646, 1.33", "86.2701, -729.018, 25.6076, 0.33", "86.3715, -729.59, 25.9707, 0.66", "87.1013, -732.295, 27.5531, 0.33", "87.3228, -733.115, 28.0334, 0.66", "87.7727, -733.834, 28.2021, 0.33", "88.4127, -734.725, 28.4283, 0.66", "90.8694, -737.477, 29.2038, 0.33", "91.8741, -738.465, 29.4907, 1.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "86.4289, -714.882, 14.8302, 0.33", "83.8897, -732.428, 18.1369, 0.33", "82.505, -741.997, 19.9404, 0.33", "82.2873, -743.5, 20.2238, 0.66", "80.858, -753.377, 22.0851, 0.33", "80.6675, -754.693, 22.3333, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_0", "axon_0", "dend_2", "dend_1", "axon_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_11", "dend_8", "dend_8", "dend_8", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_BP_5e74f0aae9_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_0, axon_0, dend_2, dend_1, axon_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_0(0), soma_0(0.4500001318721313)
    connect axon_0(0), soma_0(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.08452, 6.27464, 0.312461, 1.46623 ) }
    soma_0 { pt3dadd( -2.79927, 5.64032, 0.287115, 2.64844 ) }
    soma_0 { pt3dadd( -2.51401, 5.00599, 0.26177, 4.10361 ) }
    soma_0 { pt3dadd( -2.22875, 4.37167, 0.236425, 4.91598 ) }
    soma_0 { pt3dadd( -1.94349, 3.73735, 0.21108, 5.72835 ) }
    soma_0 { pt3dadd( -1.65823, 3.10303, 0.185734, 6.53421 ) }
    soma_0 { pt3dadd( -1.37297, 2.46871, 0.160389, 7.31212 ) }
    soma_0 { pt3dadd( -1.08771, 1.83438, 0.135044, 8.08989 ) }
    soma_0 { pt3dadd( -0.802456, 1.20006, 0.109699, 8.85679 ) }
    soma_0 { pt3dadd( -0.517198, 0.56574, 0.0843534, 8.93483 ) }
    soma_0 { pt3dadd( -0.23194, -0.0685822, 0.0590082, 8.92633 ) }
    soma_0 { pt3dadd( 0.0533189, -0.702904, 0.033663, 8.91784 ) }
    soma_0 { pt3dadd( 0.338577, -1.33723, 0.00831775, 8.90934 ) }
    soma_0 { pt3dadd( 0.623836, -1.97155, -0.0170275, 8.90084 ) }
    soma_0 { pt3dadd( 0.909094, -2.60587, -0.0423727, 8.82493 ) }
    soma_0 { pt3dadd( 1.19435, -3.24019, -0.067718, 7.82232 ) }
    soma_0 { pt3dadd( 1.47961, -3.87451, -0.0930632, 6.5965 ) }
    soma_0 { pt3dadd( 1.76487, -4.50884, -0.118408, 5.37067 ) }
    soma_0 { pt3dadd( 2.05013, -5.14316, -0.143754, 4.14485 ) }
    soma_0 { pt3dadd( 2.33539, -5.77748, -0.169099, 2.91903 ) }
    soma_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 1.76337 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 21/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.61629, -5.55298, -1.26548, 1.33 ) }
    dend_0 { pt3dadd( 2.66235, -9.87172, -2.10422, 1.33 ) }
    dend_0 { pt3dadd( 4.3967, -17.0322, -3.49483, 0.66 ) }
    dend_0 { pt3dadd( 5.73948, -22.576, -4.57147, 0.66 ) }
    dend_0 { pt3dadd( 7.17033, -28.4834, -5.71874, 1.33 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 26/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 8.77276, -20.0921, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 29/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.17033, -28.4834, -5.71874, 0.66 ) }
    dend_2 { pt3dadd( 7.57012, -38.8414, -3.12219, 0.66 ) }
    dend_2 { pt3dadd( 8.14804, -54.2267, 0.755099, 0.66 ) }
    dend_2 { pt3dadd( 8.84619, -73.0076, 5.6411, 0.66 ) }
    dend_2 { pt3dadd( 9.44938, -87.5021, 9.43146, 0.66 ) }
    dend_2 { pt3dadd( 9.81067, -95.9122, 11.6238, 0.66 ) }
    dend_2 { pt3dadd( 9.92007, -98.7034, 12.3455, 0.66 ) }
    dend_2 { pt3dadd( 10.0818, -102.489, 13.3532, 0.66 ) }
    dend_2 { pt3dadd( 10.1698, -106.031, 14.3218, 0.66 ) }
    dend_2 { pt3dadd( 10.2698, -110.117, 15.3614, 0.66 ) }
    dend_2 { pt3dadd( 10.3352, -112.324, 15.6372, 0.66 ) }
    dend_2 { pt3dadd( 10.3849, -115.079, 15.7205, 0.66 ) }
    dend_2 { pt3dadd( 10.4982, -119.232, 15.3505, 0.66 ) }
    dend_2 { pt3dadd( 10.6135, -124.692, 14.5924, 0.66 ) }
    dend_2 { pt3dadd( 10.7121, -127.07, 14.2412, 0.66 ) }
    dend_2 { pt3dadd( 11.2665, -138.234, 12.4866, 0.66 ) }
    dend_2 { pt3dadd( 11.4636, -140.868, 12.0282, 0.66 ) }
    dend_2 { pt3dadd( 12.229, -149.005, 10.4038, 0.66 ) }
    dend_2 { pt3dadd( 12.5918, -152.44, 9.68838, 0.66 ) }
    dend_2 { pt3dadd( 13.3722, -158.749, 8.46035, 0.66 ) }
    dend_2 { pt3dadd( 13.8247, -162.365, 8.00402, 0.66 ) }
    dend_2 { pt3dadd( 14.2697, -165.883, 7.9294, 0.66 ) }
    dend_2 { pt3dadd( 14.7005, -169.279, 7.98302, 0.66 ) }
    dend_2 { pt3dadd( 14.985, -172.554, 8.04201, 0.66 ) }
    dend_2 { pt3dadd( 15.2316, -176.022, 7.96307, 0.66 ) }
    dend_2 { pt3dadd( 15.4164, -181.382, 7.75828, 0.66 ) }
    dend_2 { pt3dadd( 15.562, -184.64, 7.79243, 0.66 ) }
    dend_2 { pt3dadd( 15.6807, -188.591, 7.89195, 0.66 ) }
    dend_2 { pt3dadd( 15.8232, -193.941, 7.99965, 0.66 ) }
    dend_2 { pt3dadd( 15.8818, -197.356, 7.9034, 0.66 ) }
    dend_2 { pt3dadd( 15.9928, -201.95, 7.5643, 0.66 ) }
    dend_2 { pt3dadd( 16.2399, -206.276, 7.20609, 0.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 61/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.17033, -28.4834, -5.71874, 0.66 ) }
    dend_1 { pt3dadd( 9.22804, -31.1627, -4.45479, 0.66 ) }
    dend_1 { pt3dadd( 13.9586, -37.3222, -1.54907, 0.33 ) }
    dend_1 { pt3dadd( 24.7869, -51.4214, 5.10223, 0.33 ) }
    dend_1 { pt3dadd( 25.1954, -51.9533, 5.35319, 0.66 ) }
    dend_1 { pt3dadd( 29.5652, -57.643, 8.0373, 0.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 21.077, -47.4528, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 27.2291, -61.1331, -0.194444, 0.33 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 70/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 16.2399, -206.276, 7.20609, 0.66 ) }
    dend_12 { pt3dadd( 17.4616, -208.766, 9.39932, 0.66 ) }
    dend_12 { pt3dadd( 17.9651, -210.198, 10.7729, 0.66 ) }
    dend_12 { pt3dadd( 18.2525, -212.448, 13.3685, 0.66 ) }
    dend_12 { pt3dadd( 18.3066, -213.804, 15.1104, 0.66 ) }
    dend_12 { pt3dadd( 18.2393, -216.313, 18.5645, 0.66 ) }
    dend_12 { pt3dadd( 18.1894, -218.143, 21.2166, 0.66 ) }
    dend_12 { pt3dadd( 17.9973, -219.827, 23.8919, 0.66 ) }
    dend_12 { pt3dadd( 17.6132, -223.099, 29.6601, 0.66 ) }
    dend_12 { pt3dadd( 17.415, -224.815, 32.946, 0.66 ) }
    dend_12 { pt3dadd( 17.1412, -226.804, 36.8166, 0.33 ) }
    dend_12 { pt3dadd( 17.0827, -227.582, 38.3408, 0.33 ) }
    dend_12 { pt3dadd( 17.0891, -227.827, 38.8635, 0.66 ) }
    dend_12 { pt3dadd( 17.293, -229.121, 41.9118, 0.33 ) }
    dend_12 { pt3dadd( 17.4727, -229.356, 42.474, 0.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 85/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 16.2399, -206.276, 7.20609, 0.66 ) }
    dend_3 { pt3dadd( 16.3454, -208.005, 7.78656, 0.66 ) }
    dend_3 { pt3dadd( 16.4749, -210.24, 8.5469, 0.66 ) }
    dend_3 { pt3dadd( 16.8194, -214.706, 10.0228, 0.66 ) }
    dend_3 { pt3dadd( 16.9571, -216.652, 10.6385, 0.66 ) }
    dend_3 { pt3dadd( 17.1567, -219.021, 11.4172, 0.66 ) }
    dend_3 { pt3dadd( 17.3575, -221.427, 12.1326, 0.66 ) }
    dend_3 { pt3dadd( 17.4798, -222.779, 12.4908, 0.66 ) }
    dend_3 { pt3dadd( 17.6062, -224.649, 12.8911, 0.66 ) }
    dend_3 { pt3dadd( 17.8551, -228.245, 13.5168, 0.66 ) }
    dend_3 { pt3dadd( 18.0208, -230.287, 13.778, 0.66 ) }
    dend_3 { pt3dadd( 18.2046, -232.683, 14.0399, 0.66 ) }
    dend_3 { pt3dadd( 18.3413, -234.709, 14.1195, 0.66 ) }
    dend_3 { pt3dadd( 18.3895, -235.808, 14.1427, 0.66 ) }
    dend_3 { pt3dadd( 18.5017, -239.501, 14.1482, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_3 { pt3dadd( 18.5668, -241.411, 14.0901, 0.66 ) }
    dend_3 { pt3dadd( 18.6167, -244.06, 13.9746, 0.66 ) }
    dend_3 { pt3dadd( 18.6874, -246.181, 13.9811, 0.66 ) }
    dend_3 { pt3dadd( 18.7217, -247.123, 13.9736, 0.66 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 4/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 18.7217, -247.123, 13.9736, 0.66 ) }
    dend_5 { pt3dadd( 19.0666, -249.724, 14.2807, 0.66 ) }
    dend_5 { pt3dadd( 19.2423, -253.971, 15.0938, 0.66 ) }
    dend_5 { pt3dadd( 19.3052, -258.509, 16.0653, 0.66 ) }
    dend_5 { pt3dadd( 19.2652, -261.49, 16.6878, 0.66 ) }
    dend_5 { pt3dadd( 19.2257, -265.607, 17.4515, 0.66 ) }
    dend_5 { pt3dadd( 19.1499, -272.888, 18.5403, 0.66 ) }
    dend_5 { pt3dadd( 19.0147, -277.87, 19.1436, 0.66 ) }
    dend_5 { pt3dadd( 18.85, -281.291, 19.5655, 0.66 ) }
    dend_5 { pt3dadd( 18.7471, -284.865, 19.9352, 0.66 ) }
    dend_5 { pt3dadd( 18.6835, -288.872, 20.3252, 0.66 ) }
    dend_5 { pt3dadd( 18.6823, -291.611, 20.5785, 0.66 ) }
    dend_5 { pt3dadd( 18.818, -295.365, 20.8743, 0.66 ) }
    dend_5 { pt3dadd( 19.023, -298.815, 21.161, 0.66 ) }
    dend_5 { pt3dadd( 19.4352, -306.932, 22.0175, 0.66 ) }
    dend_5 { pt3dadd( 19.6293, -310.158, 22.435, 0.66 ) }
    dend_5 { pt3dadd( 20.0659, -318.259, 23.3892, 0.66 ) }
    dend_5 { pt3dadd( 20.2624, -321.522, 23.6527, 0.66 ) }
    dend_5 { pt3dadd( 20.458, -324.664, 23.7778, 0.66 ) }
    dend_5 { pt3dadd( 20.6613, -327.488, 23.7705, 0.66 ) }
    dend_5 { pt3dadd( 20.9602, -332.112, 23.6758, 0.66 ) }
    dend_5 { pt3dadd( 21.1818, -336.067, 23.5297, 0.66 ) }
    dend_5 { pt3dadd( 21.6815, -343.665, 22.9788, 0.66 ) }
    dend_5 { pt3dadd( 22.0107, -347.5, 22.7475, 0.66 ) }
    dend_5 { pt3dadd( 22.2776, -350.485, 22.5914, 0.66 ) }
    dend_5 { pt3dadd( 22.6627, -354.501, 22.4253, 0.66 ) }
    dend_5 { pt3dadd( 24.149, -369.608, 21.7798, 0.66 ) }
    dend_5 { pt3dadd( 24.8095, -375.152, 21.4886, 0.66 ) }
    dend_5 { pt3dadd( 26.6928, -389.697, 20.5664, 0.66 ) }
    dend_5 { pt3dadd( 27.4545, -395.19, 20.1617, 0.66 ) }
    dend_5 { pt3dadd( 28.2103, -400.596, 19.8132, 0.66 ) }
    dend_5 { pt3dadd( 28.7559, -404.355, 19.6093, 0.66 ) }
    dend_5 { pt3dadd( 29.5721, -409.498, 19.332, 0.66 ) }
    dend_5 { pt3dadd( 30.3662, -415.223, 18.9917, 0.66 ) }
    dend_5 { pt3dadd( 31.2839, -421.457, 18.3813, 0.66 ) }
    dend_5 { pt3dadd( 31.7717, -424.942, 18.0359, 0.66 ) }
    dend_5 { pt3dadd( 32.0828, -427.373, 17.8643, 0.66 ) }
    dend_5 { pt3dadd( 33.025, -436.826, 17.6789, 0.66 ) }
    dend_5 { pt3dadd( 33.3123, -439.773, 17.6276, 0.66 ) }
    dend_5 { pt3dadd( 33.827, -444.603, 17.3189, 0.66 ) }
    dend_5 { pt3dadd( 34.3863, -449.429, 16.9436, 0.66 ) }
    dend_5 { pt3dadd( 34.8647, -453.167, 16.7152, 0.66 ) }
    dend_5 { pt3dadd( 35.9495, -462.331, 16.5428, 0.66 ) }
    dend_5 { pt3dadd( 37.1965, -472.86, 16.6597, 0.66 ) }
    dend_5 { pt3dadd( 38.1067, -480.024, 16.7291, 0.66 ) }
    dend_5 { pt3dadd( 38.5866, -483.623, 16.6959, 0.66 ) }
    dend_5 { pt3dadd( 40.4859, -496.779, 16.3519, 0.66 ) }
    dend_5 { pt3dadd( 41.7418, -505.211, 15.7766, 0.66 ) }
    dend_5 { pt3dadd( 42.1328, -507.673, 15.5619, 0.66 ) }
    dend_5 { pt3dadd( 42.8259, -511.659, 15.1355, 0.66 ) }
    dend_5 { pt3dadd( 43.9225, -517.495, 14.344, 0.66 ) }
    dend_5 { pt3dadd( 44.3878, -520.014, 13.8892, 0.66 ) }
    dend_5 { pt3dadd( 45.6602, -526.752, 12.3518, 0.66 ) }
    dend_5 { pt3dadd( 48.4808, -540.791, 8.96406, 0.66 ) }
    dend_5 { pt3dadd( 49.8756, -548.042, 7.45801, 0.66 ) }
    dend_5 { pt3dadd( 50.385, -550.753, 7.00241, 0.33 ) }
    dend_5 { pt3dadd( 50.7208, -552.565, 6.77472, 1.33 ) }
    dend_5 { pt3dadd( 51.5235, -556.87, 6.541, 0.66 ) }
    dend_5 { pt3dadd( 52.553, -562.07, 6.66521, 0.66 ) }
    dend_5 { pt3dadd( 53.3152, -565.764, 6.90576, 0.66 ) }
    dend_5 { pt3dadd( 54.086, -569.506, 7.28656, 0.66 ) }
    dend_5 { pt3dadd( 54.795, -572.564, 7.61899, 0.66 ) }
    dend_5 { pt3dadd( 57.6083, -585.142, 9.32268, 0.66 ) }
    dend_5 { pt3dadd( 57.9735, -586.919, 9.60078, 0.33 ) }
    dend_5 { pt3dadd( 58.4511, -589.459, 9.96993, 1.33 ) }
    dend_5 { pt3dadd( 58.9396, -591.977, 10.2776, 0.66 ) }
    dend_5 { pt3dadd( 59.3019, -593.957, 10.4996, 0.33 ) }
    dend_5 { pt3dadd( 60.2305, -599.427, 11.1113, 0.66 ) }
    dend_5 { pt3dadd( 60.3747, -602.272, 11.5882, 0.66 ) }
    dend_5 { pt3dadd( 60.399, -606.042, 12.3465, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 74/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 18.7217, -247.123, 13.9736, 0.66 ) }
    dend_4 { pt3dadd( 16.3582, -253.393, 13.8288, 0.66 ) }
    dend_4 { pt3dadd( 14.4161, -258.717, 13.6359, 0.66 ) }
    dend_4 { pt3dadd( 13.0864, -262.715, 13.7663, 0.33 ) }
    dend_4 { pt3dadd( 11.2676, -268.34, 14.1731, 0.33 ) }
    dend_4 { pt3dadd( 10.9697, -269.259, 14.288, 0.66 ) }
    dend_4 { pt3dadd( 10.0607, -272.24, 14.7387, 0.33 ) }
    dend_4 { pt3dadd( 9.449, -274.415, 15.2, 0.66 ) }
    dend_4 { pt3dadd( 8.17351, -279.569, 16.1423, 0.33 ) }
    dend_4 { pt3dadd( 7.98809, -280.384, 16.3165, 0.66 ) }
    dend_4 { pt3dadd( 6.72455, -285.903, 17.4781, 0.33 ) }
    dend_4 { pt3dadd( 6.20695, -288.763, 18.1864, 0.33 ) }
    dend_4 { pt3dadd( 5.7884, -291.871, 19.0384, 0.66 ) }
    dend_4 { pt3dadd( 5.38309, -295.594, 20.1633, 0.33 ) }
    dend_4 { pt3dadd( 5.23241, -297.604, 20.7335, 0.33 ) }
    dend_4 { pt3dadd( 5.22391, -298.732, 21.1144, 0.66 ) }
    dend_4 { pt3dadd( 5.60076, -303.469, 23.4376, 0.33 ) }
    dend_4 { pt3dadd( 5.66319, -304.159, 23.8743, 0.66 ) }
    dend_4 { pt3dadd( 5.89745, -305.898, 25.1568, 0.33 ) }
    dend_4 { pt3dadd( 6.00045, -306.792, 25.8356, 0.33 ) }
    dend_4 { pt3dadd( 6.07561, -307.739, 26.4508, 0.66 ) }
    dend_4 { pt3dadd( 6.17893, -311.291, 28.3582, 0.33 ) }
    dend_4 { pt3dadd( 6.0618, -313.466, 29.1501, 0.33 ) }
    dend_4 { pt3dadd( 6.02876, -314.289, 29.3909, 0.66 ) }
    dend_4 { pt3dadd( 6.00683, -315.886, 29.7137, 0.33 ) }
    dend_4 { pt3dadd( 5.98509, -316.733, 29.8245, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_4 { pt3dadd( 5.94879, -317.809, 29.8988, 0.33 ) }
    dend_4 { pt3dadd( 5.90174, -318.924, 29.8918, 0.66 ) }
    dend_4 { pt3dadd( 5.80515, -320.558, 29.913, 0.33 ) }
    dend_4 { pt3dadd( 5.75776, -321.154, 29.9338, 0.66 ) }
    dend_4 { pt3dadd( 5.28222, -326.09, 30.2273, 0.33 ) }
    dend_4 { pt3dadd( 5.24458, -326.405, 30.2477, 0.66 ) }
    dend_4 { pt3dadd( 5.06928, -327.54, 30.3289, 0.33 ) }
    dend_4 { pt3dadd( 4.96085, -328.131, 30.3743, 0.66 ) }
    dend_4 { pt3dadd( 4.72144, -329.741, 30.6636, 0.33 ) }
    dend_4 { pt3dadd( 4.63682, -330.478, 30.8474, 0.66 ) }
    dend_4 { pt3dadd( 4.5397, -331.796, 31.2404, 0.33 ) }
    dend_4 { pt3dadd( 4.4873, -332.729, 31.5317, 0.66 ) }
    dend_4 { pt3dadd( 4.46191, -333.798, 31.8942, 0.33 ) }
    dend_4 { pt3dadd( 4.43683, -338.77, 33.7502, 0.33 ) }
    dend_4 { pt3dadd( 4.46346, -340.221, 34.3671, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 60.399, -606.042, 12.3465, 0.66 ) }
    dend_7 { pt3dadd( 61.3128, -609.399, 11.745, 0.66 ) }
    dend_7 { pt3dadd( 61.7012, -611.151, 11.8564, 1.33 ) }
    dend_7 { pt3dadd( 61.9819, -612.661, 12.0791, 0.66 ) }
    dend_7 { pt3dadd( 62.3065, -614.561, 12.2964, 0.66 ) }
    dend_7 { pt3dadd( 62.9482, -618.661, 12.9602, 0.33 ) }
    dend_7 { pt3dadd( 63.7354, -623.621, 13.9014, 0.66 ) }
    dend_7 { pt3dadd( 64.6432, -630.04, 15.5237, 0.66 ) }
    dend_7 { pt3dadd( 65.116, -633.238, 16.466, 0.66 ) }
    dend_7 { pt3dadd( 65.7414, -636.795, 17.45, 0.33 ) }
    dend_7 { pt3dadd( 66.6224, -641.339, 18.5326, 0.33 ) }
    dend_7 { pt3dadd( 66.8778, -642.621, 18.7406, 0.66 ) }
    dend_7 { pt3dadd( 67.1888, -643.675, 18.7246, 0.33 ) }
    dend_7 { pt3dadd( 67.4893, -644.583, 18.5629, 0.66 ) }
    dend_7 { pt3dadd( 69.3436, -649.867, 17.3786, 0.33 ) }
    dend_7 { pt3dadd( 70.1456, -652.072, 16.8889, 0.66 ) }
    dend_7 { pt3dadd( 70.901, -654.161, 16.3397, 0.33 ) }
    dend_7 { pt3dadd( 72.8466, -660.11, 15.0143, 0.33 ) }
    dend_7 { pt3dadd( 73.9609, -663.6, 14.3891, 0.66 ) }
    dend_7 { pt3dadd( 75.9185, -669.928, 13.513, 0.33 ) }
    dend_7 { pt3dadd( 76.773, -672.92, 13.2525, 0.66 ) }
    dend_7 { pt3dadd( 77.6028, -675.876, 13.0704, 1.33 ) }
    dend_7 { pt3dadd( 79.4174, -682.633, 12.9313, 0.33 ) }
    dend_7 { pt3dadd( 80.2083, -685.988, 13.0658, 0.33 ) }
    dend_7 { pt3dadd( 80.5037, -687.309, 13.1506, 0.66 ) }
    dend_7 { pt3dadd( 81.1463, -690.646, 13.4708, 0.33 ) }
    dend_7 { pt3dadd( 81.9259, -695.13, 13.9616, 0.33 ) }
    dend_7 { pt3dadd( 82.207, -696.768, 14.1962, 1.33 ) }
    dend_7 { pt3dadd( 82.9893, -701.475, 14.8608, 0.33 ) }
    dend_7 { pt3dadd( 83.184, -703.11, 15.0898, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 45/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 60.399, -606.042, 12.3465, 0.66 ) }
    dend_6 { pt3dadd( 60.0528, -607.283, 10.7829, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 47/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 83.184, -703.11, 15.0898, 0.66 ) }
    dend_11 { pt3dadd( 81.0503, -702.802, 13.5482, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 49/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 83.184, -703.11, 15.0898, 0.66 ) }
    dend_8 { pt3dadd( 83.6564, -704.824, 15.052, 0.66 ) }
    dend_8 { pt3dadd( 85.7599, -712.455, 14.8837, 0.33 ) }
    dend_8 { pt3dadd( 86.4289, -714.882, 14.8302, 1.33 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 53/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 86.4289, -714.882, 14.8302, 0.33 ) }
    dend_10 { pt3dadd( 86.0617, -725.232, 22.9152, 0.33 ) }
    dend_10 { pt3dadd( 86.0783, -726.233, 23.646, 1.33 ) }
    dend_10 { pt3dadd( 86.2701, -729.018, 25.6076, 0.33 ) }
    dend_10 { pt3dadd( 86.3715, -729.59, 25.9707, 0.66 ) }
    dend_10 { pt3dadd( 87.1013, -732.295, 27.5531, 0.33 ) }
    dend_10 { pt3dadd( 87.3228, -733.115, 28.0334, 0.66 ) }
    dend_10 { pt3dadd( 87.7727, -733.834, 28.2021, 0.33 ) }
    dend_10 { pt3dadd( 88.4127, -734.725, 28.4283, 0.66 ) }
    dend_10 { pt3dadd( 90.8694, -737.477, 29.2038, 0.33 ) }
    dend_10 { pt3dadd( 91.8741, -738.465, 29.4907, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 64/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 86.4289, -714.882, 14.8302, 0.33 ) }
    dend_9 { pt3dadd( 83.8897, -732.428, 18.1369, 0.33 ) }
    dend_9 { pt3dadd( 82.505, -741.997, 19.9404, 0.33 ) }
    dend_9 { pt3dadd( 82.2873, -743.5, 20.2238, 0.66 ) }
    dend_9 { pt3dadd( 80.858, -753.377, 22.0851, 0.33 ) }
    dend_9 { pt3dadd( 80.6675, -754.693, 22.3333, 0.66 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_0 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_0, axon_0, dend_2, dend_1, axon_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_5 = new SectionList()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_2 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_3 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_5 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_7 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_9 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_6 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_8 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_2 nseg = 9
    dend_12 nseg = 3
    dend_3 nseg = 3
    dend_5 nseg = 19
    dend_4 nseg = 5
    dend_7 nseg = 5
    dend_9 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_BP_5e74f0aae9_0_0


