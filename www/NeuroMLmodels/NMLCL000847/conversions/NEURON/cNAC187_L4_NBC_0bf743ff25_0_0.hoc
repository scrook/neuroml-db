// Cell: cNAC187_L4_NBC_0bf743ff25_0_0
/*
{
  "id" : "cNAC187_L4_NBC_0bf743ff25_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.53393, -11.9164, -1.40296, 3.39671", "-4.03416, -10.7727, -1.27498, 5.62461", "-3.5344, -9.62896, -1.147, 8.62637", "-3.03463, -8.48523, -1.01903, 11.2222", "-2.53486, -7.34149, -0.891052, 12.7227", "-2.03509, -6.19776, -0.763075, 13.3506", "-1.53533, -5.05403, -0.635099, 14.0469", "-1.03556, -3.9103, -0.507122, 15.0988", "-0.535791, -2.76657, -0.379146, 15.8493", "-0.0360235, -1.62283, -0.251169, 16.1591", "0.463744, -0.479101, -0.123193, 16.4305", "0.963512, 0.664631, 0.00478339, 16.699", "1.46328, 1.80836, 0.13276, 16.9675", "1.96305, 2.9521, 0.260736, 17.2049", "2.46281, 4.09583, 0.388713, 17.1677", "2.96258, 5.23956, 0.516689, 17.0235", "3.46235, 6.38329, 0.644665, 16.3909", "3.96212, 7.52703, 0.772642, 14.8004", "4.46188, 8.67076, 0.900618, 13.0866", "4.96165, 9.81449, 1.02859, 10.0515", "5.46142, 10.9582, 1.15657, 5.57337" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "-3.18144, -13.4551, -0.850449, 2.67", "-4.26102, -15.5172, -0.527439, 2.67", "-5.34202, -17.5819, -0.20401, 2.0", "-7.25627, -21.2382, 0.368726, 2.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995593213237
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "1.46857, 10.9297, -10.5305, 2.0", "3.7647, 13.6957, -10.5305, 2.0", "5.76979, 16.1112, -10.5305, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995593213237
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-4.21143, 7.24986, -0.710449, 1.33", "-6.20268, 8.66971, -0.390147, 1.33", "-8.73991, 10.4789, 0.0179782, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995593213237
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-7.12143, -7.28464, -1.37045, 2.0", "-9.92111, -8.66883, -3.91963, 1.33", "-13.528, -10.4521, -7.20378, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995593213237
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "2.88857, -9.7139, -18.7105, 1.33", "4.08456, -11.5527, -18.7105, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995593213237
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "9.7886, 4.70786, 8.61955, 1.33", "12.7197, 3.98331, 8.90752, 1.33", "16.6664, 3.0077, 9.29528, 0.67", "19.2799, 2.36168, 9.55204, 0.67", "21.0307, 1.92889, 9.72406, 1.33", "23.5597, 1.30373, 9.97252, 1.33", "27.1717, 0.410881, 10.3274, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995593213237
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.40857, 3.18061, 17.1995, 1.33", "5.86112, 0.820971, 17.5624, 1.33", "4.56125, -1.16113, 17.8671, 1.33", "3.02068, -3.51031, 18.2284, 2.0", "1.10449, -6.43222, 18.6777, 0.67", "-0.0334149, -8.16736, 18.9445, 1.33", "-0.657967, -9.11971, 19.0909, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995593213237
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "7.16858, 7.45486, -1.67045, 0.67", "8.09114, 9.34925, -1.40531, 0.67", "9.07413, 11.0178, -1.18664, 0.67", "10.5685, 13.4762, -0.901379, 2.0", "12.3151, 16.2404, -0.552571, 1.33", "14.4873, 19.2801, -0.171033, 1.33", "15.4583, 20.5907, -0.0111708, 0.67", "16.875, 22.4101, 0.287908, 0.67", "18.9602, 25.062, 0.802434, 2.0", "20.6254, 27.0307, 1.22378, 0.67", "22.3714, 29.0695, 1.57788, 0.67", "23.6305, 30.6781, 1.79058, 0.67", "24.8796, 32.5275, 1.8563, 1.33", "25.8741, 34.1982, 1.79541, 1.33", "27.2893, 36.5791, 1.5173, 1.33", "28.9118, 39.5033, 0.996662, 0.67", "29.2438, 40.1773, 0.861817, 1.33", "30.8102, 43.3462, 0.142081, 0.67", "31.5267, 44.7963, -0.220627, 0.67", "32.4779, 46.4509, -0.615557, 1.33", "33.0073, 47.2528, -0.772471, 0.67", "34.1353, 48.7547, -0.936366, 0.67", "35.1175, 49.9247, -1.04248, 0.67", "35.6731, 50.5611, -1.1406, 1.33", "37.7165, 52.7566, -1.67506, 0.67", "38.6357, 53.6882, -1.96962, 0.67", "40.178, 55.1031, -2.50714, 0.67", "41.8287, 56.444, -3.10986, 0.67", "44.4042, 58.4692, -4.07687, 1.33", "45.6515, 59.4937, -4.57646, 0.67", "46.0862, 59.882, -4.74513, 1.33", "47.2189, 60.9632, -5.13028, 0.67", "47.7456, 61.5472, -5.28125, 1.33", "48.7914, 62.8931, -5.53966, 1.33", "49.8266, 64.3363, -5.72195, 0.67", "51.6277, 67.2587, -6.16744, 1.33", "52.8208, 69.427, -6.50892, 0.67", "53.5511, 70.8613, -6.6925, 0.67", "54.6551, 73.2234, -6.92814, 1.33", "55.3102, 74.6002, -7.03552, 0.67", "56.1983, 76.3099, -7.10214, 0.67", "57.7469, 79.1691, -7.13414, 1.33", "58.9379, 81.187, -7.08401, 0.67", "59.972, 82.767, -6.98337, 0.67", "61.2027, 84.5339, -6.77748, 1.33", "62.4369, 86.1655, -6.56123, 0.67", "63.1804, 86.9771, -6.44088, 0.67", "64.9987, 88.6519, -6.26977, 0.67", "65.9461, 89.3919, -6.24584, 0.33", "66.7557, 89.917, -6.246, 1.33", "68.263, 90.8893, -6.26842, 1.33", "70.3896, 92.2691, -6.33954, 0.67", "72.0265, 93.2885, -6.39754, 0.67", "73.0294, 93.9305, -6.47132, 0.67", "74.7929, 95.1502, -6.72032, 0.67", "75.8563, 95.9687, -6.96672, 1.33", "77.0654, 97.0899, -7.34992, 0.67", "77.7418, 97.8886, -7.72157, 0.67", "79.0752, 99.5107, -8.6318, 0.33", "80.4362, 101.182, -9.65803, 1.33", "81.7055, 102.618, -10.625, 0.67", "82.5601, 103.462, -11.2363, 0.67", "84.8521, 105.461, -12.8147, 0.67", "86.9, 107.19, -14.1271, 0.33", "87.294, 107.491, -14.345, 1.33", "88.7218, 108.519, -15.03, 0.33", "89.3787, 108.973, -15.3053, 1.33", "92.1357, 110.931, -16.4196, 0.33", "93.436, 111.902, -16.878, 0.67", "95.4589, 113.636, -17.7501, 0.33", "96.3438, 114.535, -18.2035, 0.33", "96.9772, 115.314, -18.5809, 0.67", "98.0764, 116.792, -19.2572, 0.33", "99.1185, 118.253, -19.878, 0.33", "100.102, 119.626, -20.4628, 0.67", "101.548, 121.572, -21.2564, 0.33", "102.294, 122.441, -21.6112, 0.67", "103.579, 123.741, -22.0714, 0.67", "104.619, 124.701, -22.3282, 0.33", "105.474, 125.514, -22.5432, 0.33", "106.29, 126.238, -22.7095, 0.33", "106.724, 126.636, -22.8076, 0.67", "108.566, 128.492, -23.2991, 0.33", "108.805, 128.792, -23.3878, 0.67", "110.532, 131.286, -24.1604, 0.33", "112.37, 134.126, -25.0723, 0.33", "113.504, 136.085, -25.7242, 0.33", "113.621, 136.311, -25.7995, 0.67", "114.737, 138.923, -26.7581, 0.33", "115.014, 139.803, -27.0759, 0.33", "115.333, 141.051, -27.4911, 0.67", "115.673, 142.408, -28.0367, 0.33", "116.118, 143.856, -28.6857, 0.67", "116.861, 145.615, -29.6709, 0.33", "117.538, 146.96, -30.4806, 0.67", "118.999, 149.762, -32.3418, 0.67", "120.157, 151.735, -33.8305, 0.67", "120.647, 152.366, -34.3844, 0.67", "122.196, 153.729, -35.9463, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995593213237,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.46142, 10.9582, 1.15657, 0.820304", "11.4675, 24.7033, 1.15657, 0.820304", "17.4736, 38.4483, 1.15657, 0.820304" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-7.25627, -21.2382, 0.368726, 2.0", "-7.11471, -26.5532, 0.237237, 2.0", "-7.01455, -30.3139, 0.144198, 2.0" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-7.25627, -21.2382, 0.368726, 1.33", "-8.80602, -23.0814, 2.10039, 1.33", "-10.3345, -24.5427, 3.48031, 0.67", "-11.8049, -25.6349, 5.06236, 0.67", "-13.002, -26.4443, 6.35973, 0.67", "-14.0561, -27.2529, 7.49448, 1.33", "-15.3581, -28.3683, 8.97706, 0.67", "-16.2421, -29.0343, 10.053, 2.0", "-18.8961, -30.8611, 13.4278, 0.67", "-19.8238, -31.4982, 14.5536, 1.33", "-21.255, -32.6592, 16.264, 0.67", "-22.9526, -34.0891, 18.2188, 0.67", "-24.2079, -35.0961, 19.6786, 0.67", "-24.9806, -35.6567, 20.5314, 0.67", "-25.9707, -36.327, 21.5081, 1.33", "-27.8171, -37.3931, 23.3786, 0.67", "-29.5162, -38.2241, 25.0484, 0.67", "-30.8717, -38.8811, 26.2882, 0.67", "-31.9095, -39.4365, 27.2361, 0.67", "-32.6113, -39.7747, 27.9217, 2.0", "-34.2965, -40.4629, 29.7472, 2.0" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "5.76979, 16.1112, -10.5305, 1.33", "7.75392, 16.8979, -10.7391, 1.33", "11.0168, 18.1917, -11.0822, 2.0" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "5.76979, 16.1112, -10.5305, 0.67", "6.18374, 16.5112, -14.0739, 0.67", "6.9529, 17.0732, -17.3072, 0.67", "7.92135, 17.7078, -20.3174, 1.33", "11.055, 19.761, -30.0575, 1.33", "12.6216, 20.7875, -34.927, 1.33", "13.5186, 21.3752, -37.715, 1.33", "14.5456, 21.6788, -40.9112, 0.67", "15.2817, 21.705, -42.7073, 1.33" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-8.73991, 10.4789, 0.0179782, 0.67", "-11.7396, 15.5398, -1.63542, 0.67", "-13.9217, 18.9218, -2.65974, 0.67", "-15.251, 20.8833, -3.26089, 1.33", "-18.9169, 26.1264, -4.6209, 0.67", "-23.2834, 32.2232, -6.2849, 1.33", "-25.7371, 35.5189, -7.22091, 0.67", "-28.5133, 39.08, -8.18206, 0.67", "-30.5773, 41.4982, -8.82446, 1.33", "-33.3727, 44.633, -9.61593, 0.33", "-36.7176, 48.2477, -10.2745, 0.67", "-37.7975, 49.4295, -10.5627, 0.67", "-39.7681, 51.4625, -11.0187, 0.67", "-41.0555, 52.8218, -11.372, 1.33" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-8.73991, 10.4789, 0.0179782, 1.33", "-10.7495, 11.5171, 0.823793, 1.33", "-12.6052, 12.519, 1.52927, 0.67", "-14.6688, 13.6688, 2.28797, 1.33", "-17.2115, 15.0883, 3.18661, 0.33", "-20.7388, 17.0698, 4.50393, 0.67", "-22.0265, 17.7607, 4.99927, 0.33", "-23.6936, 18.6341, 5.70371, 0.67", "-24.0945, 18.8318, 5.87147, 0.33", "-25.3231, 19.3465, 6.38933, 0.33", "-26.7718, 19.9269, 7.11786, 0.67", "-28.0533, 20.41, 7.8263, 0.67", "-30.0773, 21.3386, 9.2687, 1.33", "-31.1666, 21.8691, 10.1483, 0.33", "-32.2089, 22.3964, 11.0074, 0.67", "-33.2675, 22.9891, 11.8876, 1.33", "-34.2756, 23.617, 12.6845, 0.67", "-36.7942, 25.5163, 14.6853, 1.33", "-37.7664, 26.3818, 15.5183, 0.67", "-38.4145, 26.964, 16.0247, 0.67", "-39.0394, 27.5379, 16.4576, 0.67", "-39.7655, 28.1912, 16.9091, 0.67", "-40.6589, 28.9691, 17.3902, 0.67", "-42.1114, 30.2259, 17.6606, 0.33", "-43.2074, 31.5586, 17.9954, 0.67" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-13.528, -10.4521, -7.20378, 1.33", "-17.6424, -15.0138, -5.90786, 1.33", "-20.3984, -18.151, -5.14553, 0.67", "-23.3982, -22.0034, -3.9179, 1.33", "-26.3365, -25.9371, -2.51509, 0.67", "-29.0455, -29.4995, -1.12208, 1.33", "-31.2978, -32.3868, 0.0741901, 0.67", "-32.7863, -34.3253, 0.881542, 1.33", "-36.4492, -39.2922, 3.60624, 0.67", "-37.3186, -40.3689, 4.43705, 0.67", "-38.3596, -41.4235, 5.49004, 1.33", "-39.0579, -42.1137, 6.18354, 0.67", "-40.9926, -43.9371, 8.0682, 0.67", "-44.7733, -47.4076, 11.3581, 0.67", "-46.8037, -49.1452, 12.5843, 1.33", "-47.6483, -49.9054, 12.9947, 0.67", "-49.5305, -51.6604, 13.662, 0.67", "-50.9825, -53.084, 13.9847, 0.67", "-53.8089, -55.8465, 14.2223, 0.67", "-56.7366, -58.8601, 14.3355, 1.33", "-58.9806, -61.3275, 14.6658, 0.67", "-61.0091, -63.6172, 15.1251, 1.33", "-63.1506, -65.9961, 15.7512, 0.33", "-64.4863, -67.4503, 16.2173, 0.33", "-68.1492, -71.1732, 17.9877, 2.0", "-70.63, -73.8665, 19.4968, 1.33", "-71.4584, -74.7648, 20.0673, 0.67", "-72.9746, -76.3354, 21.2064, 0.67", "-74.5272, -77.7992, 22.4073, 1.33", "-79.825, -82.708, 26.3707, 0.67", "-85.6412, -92.3092, 31.1167, 0.67", "-93.4123, -101.227, 33.9961, 0.67", "-101.795, -110.04, 34.7092, 0.67", "-111.231, -116.843, 38.1059, 0.67", "-120.286, -124.533, 40.6178, 0.67", "-130.028, -131.305, 43.0997, 0.67", "-139.04, -138.87, 46.0763, 0.67", "-147.728, -146.769, 49.179, 0.67", "-158.229, -151.981, 52.1487, 0.67", "-168.816, -157.503, 54.1097, 0.67", "-179.431, -163.271, 54.9305, 0.67", "-189.299, -170.1, 56.6662, 0.67", "-197.341, -178.853, 59.2846, 0.67" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-13.528, -10.4521, -7.20378, 0.67", "-17.6563, -10.5195, -6.7779, 0.67", "-21.2608, -10.5954, -6.4477, 0.67", "-22.9338, -10.5656, -6.44813, 0.67", "-27.374, -10.4888, -6.64352, 1.33", "-30.037, -10.5134, -6.81892, 0.67", "-32.5723, -10.563, -7.00879, 1.33", "-35.336, -10.7066, -7.14373, 0.67", "-38.942, -10.8433, -7.4372, 0.67", "-42.0214, -10.9177, -7.84229, 0.67", "-43.8023, -10.9792, -8.16788, 0.33", "-44.906, -11.0664, -8.33935, 1.33", "-47.2102, -11.2746, -8.56001, 0.33", "-51.5118, -11.8477, -8.79729, 0.67", "-53.9029, -12.1908, -8.94118, 0.67", "-55.9684, -12.3945, -9.15616, 0.33", "-57.9206, -12.5154, -9.29487, 0.67", "-60.2814, -12.7185, -9.40113, 0.67", "-62.1302, -12.871, -9.42287, 0.67", "-65.9976, -13.0903, -9.2369, 0.33", "-69.1888, -13.2505, -9.24816, 0.67", "-72.5459, -13.3153, -9.37135, 0.33", "-75.593, -13.4192, -9.48137, 0.67", "-78.5145, -13.7076, -9.58068, 0.67", "-80.0819, -13.9291, -9.60557, 1.33", "-84.0257, -14.641, -9.61312, 0.33", "-85.232, -14.9121, -9.69024, 1.33", "-88.5394, -15.5994, -10.215, 0.67", "-90.7046, -15.9847, -10.6011, 0.67", "-92.4703, -16.2838, -10.927, 0.67", "-94.4793, -16.4535, -11.2106, 1.33", "-96.1107, -16.5511, -11.4888, 0.67", "-98.9393, -16.6397, -12.1972, 0.33", "-99.5183, -16.6114, -12.4143, 0.67", "-100.703, -16.5065, -12.8883, 0.33", "-104.549, -16.105, -14.435, 0.67", "-109.22, -15.4589, -16.1959, 0.67", "-110.96, -15.1953, -16.8656, 0.33", "-114.132, -14.6811, -18.0548, 0.67", "-117.105, -14.1133, -19.1979, 0.67", "-118.533, -13.8505, -19.7473, 0.67", "-119.774, -13.5536, -20.2013, 0.33", "-124.19, -12.2304, -21.3326, 0.67", "-125.387, -11.9356, -21.6695, 0.33", "-126.221, -11.8263, -21.8863, 0.67", "-128.198, -11.6937, -22.521, 0.33", "-129.485, -11.7673, -23.0253, 0.33", "-130.62, -11.9517, -23.5044, 0.33", "-133.166, -12.7282, -24.5543, 0.67", "-134.511, -13.2153, -25.1422, 0.33", "-135.329, -13.5148, -25.4824, 0.67", "-137.883, -14.4943, -26.4014, 0.33", "-138.765, -14.8296, -26.6434, 0.67", "-140.658, -15.3929, -26.9143, 0.33", "-142.158, -15.7954, -26.9454, 0.33", "-144.965, -16.3275, -26.8385, 0.67", "-147.588, -16.6057, -26.5811, 0.33", "-149.554, -16.7063, -26.2863, 0.67", "-151.804, -16.7024, -25.9727, 0.33", "-153.549, -16.6543, -25.7247, 0.33", "-155.514, -16.6355, -25.4532, 0.33", "-158.142, -16.5104, -25.0874, 0.67", "-160.592, -16.2685, -24.7545, 0.67", "-162.55, -16.1398, -24.5391, 0.67" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "4.08456, -11.5527, -18.7105, 1.33", "9.22967, -10.2073, -18.6067, 1.33", "12.4267, -9.37135, -18.5422, 1.33" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "4.08456, -11.5527, -18.7105, 0.67", "6.2471, -14.5028, -15.7036, 0.67", "9.04012, -18.7656, -11.4067, 0.67", "10.2716, -20.7802, -9.46339, 1.33", "11.062, -22.0875, -8.15548, 0.67", "12.3268, -24.3081, -5.94842, 0.67", "14.2659, -27.8881, -2.59433, 0.67", "15.0566, -29.5549, -1.20756, 0.33", "15.4676, -30.5131, -0.432236, 1.33", "16.5444, -33.6124, 2.23132, 0.33", "16.8373, -34.5961, 3.10816, 0.67", "17.2464, -36.2499, 4.59326, 0.33", "18.1357, -39.274, 7.01228, 1.33", "18.8014, -41.4486, 8.68755, 0.33", "19.1457, -42.6742, 9.64408, 1.33", "22.3075, -49.3034, 15.6873, 1.33" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "27.1717, 0.410881, 10.3274, 0.67", "28.7126, 1.58951, 13.2347, 0.67", "29.9548, 2.55275, 15.961, 1.33", "31.9989, 4.13774, 20.4471, 0.67", "34.0938, 5.76213, 25.0448, 1.33", "34.6947, 6.22809, 26.3636, 2.0", "35.4807, 6.83754, 28.0886, 0.67", "36.8878, 8.34476, 32.6068, 1.33", "41.135, 9.32635, 42.7686, 1.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "27.1717, 0.410881, 10.3274, 0.67", "27.7405, -2.16745, 10.2403, 0.67", "28.0914, -3.75794, 10.1866, 0.67", "28.7773, -6.86728, 10.0816, 0.67", "29.2759, -9.12704, 10.0054, 0.67", "30.0491, -12.6319, 9.88702, 0.67", "33.046, -21.9492, 10.7436, 0.67", "36.6705, -31.011, 9.83007, 0.67", "38.9479, -40.5394, 9.06586, 0.67" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.657967, -9.11971, 19.0909, 0.67", "1.21024, -10.23, 19.2671, 0.67", "4.14258, -12.2203, 19.5508, 1.33", "6.98758, -14.3287, 19.8312, 0.67", "9.76641, -16.6357, 20.2917, 1.33", "13.1314, -19.4291, 20.8494, 0.67", "14.6326, -20.6754, 21.0982, 1.33", "17.1288, -23.0154, 21.5726, 0.67", "17.6946, -23.6707, 21.707, 1.33", "19.9133, -26.6973, 22.4166, 0.67", "29.4679, -32.0291, 25.9969, 0.67", "38.3468, -36.6905, 31.6156, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.657967, -9.11971, 19.0909, 0.67", "-1.79048, -4.96848, 17.4279, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "17.4736, 38.4483, 1.15657, 0.33", "23.4797, 52.1934, 1.15657, 0.33", "29.4858, 65.9385, 1.15657, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-7.01455, -30.3139, 0.144198, 1.33", "-8.02977, -35.5653, 1.15783, 1.33", "-9.03399, -39.2556, 1.79029, 1.33", "-9.75525, -41.7467, 2.15065, 1.33", "-11.3614, -47.0873, 2.82302, 1.33", "-11.7978, -48.5951, 2.993, 1.33", "-12.6759, -51.8386, 3.32596, 1.33", "-13.9151, -57.0747, 3.70137, 1.33", "-14.7855, -60.8853, 3.84993, 0.67", "-15.3349, -63.5839, 3.9475, 0.67", "-15.5789, -65.026, 4.01358, 0.67", "-15.7829, -66.2515, 4.10986, 1.33", "-16.2192, -69.7163, 4.50422, 0.67", "-16.3821, -72.9051, 5.02385, 0.67", "-16.5637, -76.7116, 5.76482, 1.33", "-16.7056, -79.1691, 6.31301, 2.0", "-17.0014, -82.9248, 7.18242, 0.67", "-17.1755, -85.1368, 7.72215, 2.0", "-17.3858, -88.3618, 8.47967, 1.33", "-17.5147, -91.1836, 9.05819, 1.33", "-17.6108, -94.5507, 9.73172, 0.67", "-17.6537, -97.5556, 10.3063, 0.67", "-17.6515, -99.8211, 10.724, 2.0", "-17.5772, -104.93, 11.6495, 0.67", "-17.3474, -112.717, 13.0442, 1.33", "-17.0597, -116.268, 13.6671, 1.33", "-16.7284, -119.192, 14.1447, 1.33", "-16.4653, -121.908, 14.5977, 1.33", "-16.3205, -124.115, 14.9142, 0.67", "-16.2671, -125.56, 15.0958, 1.33", "-16.2624, -128.042, 15.2557, 0.67", "-16.3753, -130.743, 15.3324, 0.67", "-16.763, -135.135, 15.396, 0.67", "-17.6293, -141.255, 15.3993, 1.33", "-17.8633, -142.543, 15.4098, 1.33", "-18.5487, -146.046, 15.4546, 0.67", "-19.0278, -148.478, 15.4953, 1.33" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-7.01455, -30.3139, 0.144198, 0.67", "-3.25826, -33.7231, -0.967598, 0.67", "-1.06873, -35.7579, -1.53187, 1.33", "0.455503, -37.2206, -1.86535, 0.67", "1.78085, -38.611, -2.09773, 0.33", "2.03289, -38.8756, -2.1628, 0.67", "3.52433, -40.417, -2.67221, 0.33", "3.8833, -40.7796, -2.79372, 0.67", "5.03831, -41.9011, -3.33313, 0.33", "7.18637, -43.8239, -4.46543, 0.67", "9.62151, -46.0005, -5.93543, 0.67", "11.0061, -47.4073, -6.84987, 0.33", "11.7202, -48.21, -7.3751, 1.33", "13.521, -50.4864, -8.77999, 0.33", "13.9726, -51.1032, -9.12701, 1.33", "15.7337, -53.8625, -10.5138, 0.67", "17.1622, -56.4214, -11.6143, 0.33", "17.8983, -57.8322, -12.2205, 1.33", "19.102, -60.2697, -13.32, 0.67", "20.1149, -62.2584, -14.288, 0.33", "21.0447, -63.9046, -15.1285, 0.33", "22.2153, -65.786, -16.1191, 1.33", "23.8388, -68.2248, -17.4464, 0.67", "25.1553, -70.2532, -18.4874, 0.33", "26.1844, -71.9234, -19.3019, 1.33", "27.2845, -73.851, -20.2169, 0.33", "27.6653, -74.5126, -20.557, 0.67", "28.9573, -76.9098, -21.8578, 0.33", "29.4267, -77.8047, -22.3828, 0.67", "30.516, -80.022, -23.7547, 0.33", "30.8654, -80.8746, -24.2676, 0.67", "32.212, -84.6873, -26.5008, 0.33", "32.2149, -84.697, -26.5061, 0.67", "32.5423, -86.2411, -27.2695, 0.33", "32.708, -87.2066, -27.7087, 0.67", "33.2259, -90.4223, -28.9595, 0.33", "33.5707, -92.5907, -29.6858, 0.33", "33.8626, -94.7446, -30.2706, 0.67", "34.3824, -98.0233, -31.1703, 0.33", "34.5856, -98.9546, -31.4532, 0.67", "35.1635, -100.66, -32.063, 0.33", "35.6724, -101.568, -32.4351, 0.67", "36.764, -103.017, -33.0922, 0.33", "37.4563, -103.752, -33.4316, 1.33", "39.9269, -106.079, -34.5024, 0.33", "41.662, -107.696, -35.2022, 0.67", "45.2113, -110.967, -36.5777, 0.33", "45.9122, -111.569, -36.8151, 0.67", "48.1379, -113.497, -37.4273, 0.33", "48.9552, -114.259, -37.6057, 1.33", "50.6264, -115.945, -37.8652, 0.33", "50.9845, -116.345, -37.9073, 0.67", "53.1785, -118.947, -38.1214, 0.33", "56.9646, -123.573, -38.4345, 0.33", "57.9105, -124.749, -38.5069, 1.33", "60.775, -128.27, -38.744, 0.33", "61.7245, -129.46, -38.8324, 0.67" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "11.0168, 18.1917, -11.0822, 0.67", "14.3835, 18.9654, -11.2474, 0.67", "17.4174, 19.8082, -11.5508, 0.67", "21.224, 21.0436, -12.0181, 1.33", "25.8165, 22.8736, -12.6033, 0.67", "27.8507, 23.7805, -12.8642, 0.67", "30.1708, 24.8825, -13.1588, 0.67", "33.7482, 26.547, -13.6418, 0.67", "37.5791, 28.5524, -14.1748, 1.33", "41.8599, 31.2593, -14.7803, 0.67", "42.7918, 31.9225, -14.9046, 0.67", "44.6943, 33.2872, -15.133, 0.33", "46.0221, 34.185, -15.2621, 1.33", "48.4666, 35.8685, -15.3892, 0.67", "49.3239, 36.4039, -15.497, 1.33", "50.9649, 37.2328, -15.8616, 0.67", "51.5213, 37.4889, -16.0109, 0.67", "53.5399, 38.345, -16.6208, 0.33", "54.5823, 38.694, -16.9505, 0.33", "60.2485, 40.3614, -19.0957, 0.33", "62.1384, 40.8805, -19.8513, 0.33", "64.0744, 41.4221, -20.6355, 0.33", "65.2383, 41.7379, -21.1603, 0.67", "68.0488, 42.4213, -22.434, 0.33", "71.9094, 43.2489, -24.1737, 0.67", "75.3762, 43.9794, -25.6742, 0.67", "77.4024, 44.5491, -26.6183, 0.67", "80.319, 45.4634, -27.9563, 0.33", "85.1035, 47.0736, -30.0339, 0.67", "87.9285, 48.0716, -31.1577, 0.67", "89.212, 48.5019, -31.6118, 0.67", "93.0699, 50.0093, -32.9769, 0.67", "95.9532, 51.3115, -33.8942, 0.67", "97.5495, 52.1996, -34.2723, 0.67", "98.6097, 52.9014, -34.5098, 1.33", "100.367, 54.0133, -34.7313, 0.67", "101.28, 54.4588, -34.8095, 0.67", "102.793, 54.9725, -34.8932, 0.33", "104.05, 55.3793, -35.0067, 0.67", "105.012, 55.7008, -35.0686, 1.33", "109.561, 57.1433, -35.2744, 0.67", "112.218, 57.7937, -35.3586, 0.33", "115.417, 58.4175, -35.4694, 0.67", "117.419, 58.673, -35.5512, 0.67", "120.19, 58.8965, -35.6858, 0.33", "120.19, 58.8965, -35.6858, 0.67", "123.577, 58.8958, -35.9403, 0.33", "124.723, 58.9953, -36.0253, 0.67", "127.274, 59.4115, -36.1046, 0.33", "130.099, 60.0357, -36.1159, 0.67", "134.106, 61.1946, -36.0507, 0.67", "137.407, 62.4424, -35.9294, 0.67", "141.86, 64.6823, -35.703, 0.67", "145.087, 66.5952, -35.5102, 0.33", "145.921, 67.1785, -35.4312, 0.67", "147.192, 68.1786, -35.2749, 0.33", "148.927, 69.7344, -35.0365, 0.67", "154.099, 74.3621, -34.4802, 0.67", "155.191, 75.2976, -34.4003, 0.67", "157.551, 77.2206, -34.3209, 0.33", "159.035, 78.3802, -34.2804, 0.67", "163.74, 81.9819, -34.1726, 0.67", "168.982, 85.9688, -34.0908, 0.33", "169.56, 86.3762, -34.1083, 0.67", "171.551, 87.6254, -34.1959, 0.33", "172.347, 88.0728, -34.2508, 0.33", "172.753, 88.2684, -34.2748, 0.67", "175.337, 89.2197, -34.3911, 0.33", "178.968, 90.5646, -34.7687, 0.33", "181.169, 91.3599, -35.0617, 0.67", "182.911, 91.9641, -35.3303, 0.33", "184.522, 92.5182, -35.5976, 0.33", "186.957, 93.4536, -36.0045, 0.33", "190.287, 95.0004, -36.5596, 0.67", "192.324, 96.1647, -36.9793, 0.67", "193.429, 96.8422, -37.2841, 0.33", "195.235, 98.127, -37.7716, 0.33", "197.231, 99.6327, -38.1591, 0.67", "198.974, 100.901, -38.3952, 0.33", "200.989, 102.398, -38.5852, 0.67", "203.855, 104.579, -38.8981, 0.33", "208.413, 107.979, -39.3824, 0.33", "211.597, 110.13, -39.7018, 0.33", "213.141, 111.059, -39.8321, 0.33" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "11.0168, 18.1917, -11.0822, 0.67", "10.5058, 20.5996, -12.9587, 0.67", "9.99651, 22.9993, -14.829, 1.33", "9.23619, 26.5826, -17.6215, 0.67", "8.07571, 32.0513, -21.8835, 0.67" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "15.2817, 21.705, -42.7073, 0.67", "15.4132, 23.8456, -44.4427, 0.67", "15.4801, 24.4143, -44.8231, 1.33", "15.5849, 25.6968, -45.7106, 0.67", "15.8765, 28.347, -47.2915, 1.33", "16.3064, 31.8465, -49.4089, 0.67", "16.6346, 35.2099, -51.2439, 0.67", "16.7442, 36.5816, -51.9598, 0.67", "16.9759, 40.1706, -53.6301, 0.67", "17.0671, 44.5382, -55.6136, 0.67", "16.8447, 47.7034, -56.6843, 0.67", "16.1869, 51.1782, -57.5828, 0.33", "15.3006, 53.1699, -58.0883, 0.67", "14.271, 54.5956, -58.4156, 0.67", "11.646, 56.9026, -59.0932, 0.33", "7.75158, 59.0443, -60.2595, 0.67", "6.67625, 59.4347, -60.6809, 0.67", "2.31708, 60.3152, -63.0232, 0.33", "0.386415, 60.5308, -64.0714, 0.67", "-3.26259, 60.6229, -66.1844, 0.33", "-4.31223, 60.5556, -66.8766, 0.67", "-6.7135, 60.1629, -68.9692, 0.33", "-7.66931, 59.8763, -69.9285, 0.67" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "15.2817, 21.705, -42.7073, 1.33", "17.1136, 22.7976, -46.0543, 1.33", "21.539, 26.4894, -54.3407, 0.67", "21.8259, 26.745, -54.8636, 1.33", "22.8541, 27.6783, -56.6231, 0.67", "23.2854, 28.1116, -57.4374, 0.67", "24.3135, 29.2315, -59.6041, 0.67", "25.6919, 31.4094, -63.6603, 0.67", "26.2373, 33.0275, -66.2777, 0.33", "26.3482, 33.6879, -67.4159, 1.33", "26.567, 36.2613, -71.6875, 0.67", "26.7219, 37.2877, -73.3414, 0.67", "26.9076, 38.7769, -75.4458, 0.33", "27.1009, 40.5714, -77.9889, 0.67", "27.3414, 42.7131, -80.8346, 0.67", "27.5842, 44.5733, -83.1382, 0.67", "27.938, 46.3961, -85.2507, 0.67", "28.9802, 50.7195, -90.1986, 0.67", "30.2261, 55.2042, -95.3912, 0.33", "30.526, 56.4688, -96.9587, 0.33", "30.7894, 57.8062, -98.756, 1.33" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-41.0555, 52.8218, -11.372, 0.67", "-44.2659, 57.684, -10.7621, 0.67", "-47.1718, 61.8265, -10.6721, 0.67", "-49.8243, 65.6178, -10.9054, 0.67", "-52.6811, 69.6964, -11.3343, 0.67", "-54.6723, 72.539, -11.6332, 0.67", "-56.5575, 75.2306, -11.9163, 0.67", "-60.5026, 81.0648, -13.1829, 0.67", "-61.9405, 83.113, -13.7435, 0.67", "-62.9543, 84.5458, -14.2202, 1.33" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-41.0555, 52.8218, -11.372, 0.67", "-42.2568, 57.9291, -15.125, 0.67", "-42.6539, 59.5264, -16.1653, 0.33", "-42.919, 60.7697, -17.0458, 0.67", "-43.3043, 65.5033, -20.9178, 0.33", "-43.2796, 67.6551, -22.7598, 0.67", "-43.2143, 69.1657, -24.1905, 0.67", "-43.0589, 70.5412, -25.5892, 0.33", "-42.6561, 73.3062, -28.6383, 0.67", "-41.8123, 76.8145, -32.8385, 0.33", "-41.3698, 77.8286, -34.1664, 0.67", "-40.341, 79.6205, -37.096, 0.33", "-39.4187, 80.8487, -39.4269, 0.67" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-43.2074, 31.5586, 17.9954, 0.67", "-44.1354, 33.0765, 17.9813, 0.67", "-44.7725, 33.9788, 17.8241, 0.67", "-45.0799, 34.3582, 17.7367, 2.0", "-45.8135, 35.2393, 17.4648, 2.0", "-46.5159, 36.2839, 17.2503, 0.33", "-46.7451, 36.6626, 17.1918, 0.67", "-47.8619, 38.6011, 16.9957, 0.33", "-48.1564, 39.1876, 16.9532, 0.33", "-49.7303, 42.743, 16.7674, 0.67", "-50.9177, 46.0504, 16.6341, 0.67", "-51.5804, 48.2696, 16.5848, 0.67", "-51.8837, 49.5425, 16.5843, 0.33", "-52.1079, 51.1227, 16.6463, 0.33", "-52.1639, 51.7865, 16.6768, 1.33", "-52.1232, 53.0368, 16.7744, 0.33", "-52.0507, 53.6934, 16.7672, 1.33", "-51.804, 54.6575, 16.7162, 0.33", "-51.4436, 55.8334, 16.5589, 1.33", "-53.9519, 61.9627, 16.1287, 1.33" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-43.2074, 31.5586, 17.9954, 0.67", "-45.6502, 32.1432, 20.49, 0.67", "-47.2652, 32.5299, 22.1391, 0.67", "-49.881, 33.1559, 24.8103, 0.67", "-56.8794, 35.5233, 31.0173, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "12.4267, -9.37135, -18.5422, 0.67", "15.0659, -10.3706, -19.3706, 0.67", "18.7239, -11.7555, -20.5188, 1.33", "20.3236, -12.3612, -21.0209, 0.67", "23.2067, -13.4527, -21.9259, 0.67", "27.0784, -14.9186, -23.1412, 0.67", "28.0401, -15.2827, -23.443, 1.33" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "12.4267, -9.37135, -18.5422, 0.67", "12.3748, -7.10201, -19.8841, 0.67", "12.3581, -3.14572, -22.4588, 1.33", "12.3862, -1.36638, -23.7655, 1.33", "12.4145, 1.64349, -26.1951, 0.67", "12.4302, 5.41013, -29.3769, 1.33", "12.442, 8.24141, -31.7686, 0.67", "12.4402, 10.3438, -33.659, 1.33", "12.4926, 12.0519, -35.2466, 1.33", "12.5784, 14.1466, -37.5493, 0.67", "12.5915, 14.3137, -37.7854, 1.33" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "22.3075, -49.3034, 15.6873, 0.67", "28.2333, -54.1944, 21.4372, 0.67", "33.7665, -59.9865, 26.7636, 0.67", "38.262, -66.6948, 32.0451, 0.67", "41.8757, -73.7349, 37.5908, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "22.3075, -49.3034, 15.6873, 0.67", "23.0322, -58.0907, 22.6053, 0.67", "24.1653, -65.8297, 30.5793, 0.67", "27.1197, -71.7597, 39.4981, 0.67", "29.0988, -80.1394, 46.6406, 0.67", "30.8133, -88.4235, 53.9576, 0.67", "32.5058, -97.7686, 59.9368, 0.67", "34.6414, -107.426, 65.2584, 0.67", "35.9026, -116.654, 71.515, 0.67", "39.7679, -125.71, 76.8543, 0.67", "45.3496, -134.758, 80.3408, 0.67", "51.9327, -142.293, 85.2323, 0.67", "60.5912, -148.435, 88.4456, 0.67", "69.7595, -154.301, 90.5311, 0.67", "78.7627, -160.772, 90.9217, 0.67", "87.1052, -167.715, 93.2952, 0.67", "95.633, -174.392, 95.7406, 0.67", "103.951, -181.265, 98.3865, 0.67", "111.211, -189.572, 100.018, 0.67", "118.395, -197.734, 102.488, 0.67", "126.05, -205.687, 103.985, 0.67", "133.178, -214.235, 103.216, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "41.135, 9.32635, 42.7686, 0.67", "44.0742, 10.2698, 49.9682, 0.67", "45.9668, 9.72305, 57.5321, 0.67", "48.3058, 10.7394, 64.9431, 0.67", "50.6884, 12.5325, 72.2069, 0.67", "54.7512, 13.991, 78.7465, 0.67", "58.8534, 15.3433, 85.2819, 0.67", "62.1771, 16.6884, 92.252, 0.67", "65.8632, 19.6529, 98.5389, 0.67", "69.1622, 23.5018, 104.586, 0.67", "72.8018, 27.1556, 110.549, 0.67", "75.916, 30.8163, 116.804, 0.67", "79.6659, 34.276, 122.807, 0.67", "83.7648, 38.6781, 127.92, 0.67", "88.0744, 41.9081, 133.654, 0.67", "92.9042, 45.5065, 138.718, 0.67", "97.6598, 49.2863, 143.727, 0.67", "103.052, 51.5564, 148.944, 0.67", "109.248, 54.3791, 152.826, 0.67", "115.707, 57.9001, 155.545, 0.67", "121.871, 61.8977, 158.321, 0.67", "128.38, 65.5191, 160.774, 0.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "41.135, 9.32635, 42.7686, 0.67", "44.0026, 11.4514, 49.3801, 0.67", "45.535, 12.6204, 56.6314, 0.67", "46.2249, 13.1193, 64.077, 0.67", "45.706, 13.3382, 71.5487, 0.67", "46.3203, 13.1248, 79.0026, 0.67", "46.6757, 13.4097, 86.4802, 0.67", "47.0632, 12.493, 93.8867, 0.67", "47.4861, 11.9937, 101.337, 0.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "38.9479, -40.5394, 9.06586, 0.67", "40.1836, -48.1087, 11.9304, 0.67", "40.6293, -55.4227, 15.5844, 0.67", "42.3231, -62.8411, 18.5889, 0.67", "45.209, -69.6818, 21.97, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "38.9479, -40.5394, 9.06586, 0.67", "42.0975, -51.7295, 8.81486, 0.67", "46.004, -62.6451, 8.19503, 0.67", "52.9746, -71.8525, 8.03979, 0.67", "59.1708, -81.525, 6.80121, 0.67", "66.9331, -90.0482, 7.07201, 0.67", "74.1018, -98.9333, 8.89786, 0.67", "81.7744, -107.132, 11.5931, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "38.3468, -36.6905, 31.6156, 0.67", "45.6944, -44.2609, 33.5269, 0.67", "54.4032, -49.5508, 36.6568, 0.67", "63.1472, -54.2985, 40.452, 0.67", "72.545, -56.5547, 44.8216, 0.67", "81.8489, -60.3512, 48.2829, 0.67", "90.7328, -63.8603, 52.9394, 0.67", "98.6012, -68.3887, 58.509, 0.67", "105.785, -72.9966, 64.8892, 0.67", "113.235, -78.9045, 69.7625, 0.67", "119.158, -86.4539, 74.581, 0.67", "126.919, -92.0092, 79.3576, 0.67", "135.374, -97.3915, 83.0001, 0.67", "144.404, -102.475, 85.4666, 0.67", "151.975, -109.118, 89.0766, 0.67", "158.81, -117.087, 91.3284, 0.67", "166.692, -124.278, 92.1785, 0.67", "174.796, -131.206, 91.4363, 0.67", "183.686, -137.021, 90.5869, 0.67", "192.659, -142.748, 91.1622, 0.67", "200.967, -149.23, 92.9369, 0.67", "209.491, -154.925, 95.8933, 0.67" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "38.3468, -36.6905, 31.6156, 0.67", "46.4685, -42.4841, 34.1564, 0.67", "54.5855, -48.432, 36.3432, 0.67", "61.3938, -55.6572, 39.2386, 0.67", "68.2699, -61.9725, 43.6288, 0.67", "75.9504, -68.1273, 46.6884, 0.67", "84.655, -72.7677, 49.5319, 0.67", "93.7376, -77.5213, 49.9976, 0.67", "103.317, -81.0347, 49.1938, 0.67", "112.743, -84.7046, 47.6232, 0.67", "121.935, -89.1735, 46.8211, 0.67", "131.424, -93.0211, 46.594, 0.67", "140.358, -98.0676, 46.9978, 0.67", "149.2, -103.119, 48.3466, 0.67", "158.635, -106.759, 49.9641, 0.67", "167.506, -111.888, 50.6783, 0.67", "175.713, -118.048, 49.8677, 0.67", "184.28, -123.732, 49.6644, 0.67", "192.683, -129.605, 48.8349, 0.67", "200.83, -135.86, 49.6367, 0.67", "208.223, -142.507, 52.4096, 0.67", "216.57, -148.443, 53.4289, 0.67" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-1.79048, -4.96848, 17.4279, 0.67", "-4.7539, -4.44533, 19.0187, 0.67", "-10.0115, -3.51717, 21.8411, 0.67", "-13.8354, -2.84211, 23.8939, 1.33", "-22.785, 0.676531, 26.6172, 1.33", "-32.384, 3.09111, 28.015, 1.33", "-41.6953, 6.62486, 28.8511, 1.33", "-50.9978, 9.93465, 30.3988, 1.33", "-59.9748, 14.2617, 31.1936, 1.33", "-68.0806, 19.8614, 32.9693, 1.33", "-76.8437, 23.813, 35.7104, 1.33", "-84.3727, 28.9561, 39.8379, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-1.79048, -4.96848, 17.4279, 0.67", "2.58777, 3.13164, 20.1233, 0.67", "5.0474, 7.68215, 21.6376, 0.67", "7.3459, 11.9346, 23.0527, 0.67", "8.88237, 14.7772, 23.9986, 1.33", "10.1112, 17.0506, 24.7552, 0.67", "12.8095, 22.0428, 26.4164, 1.33", "18.9055, 33.7752, 27.5327, 1.33", "23.3307, 46.2703, 26.8776, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-19.0278, -148.478, 15.4953, 1.33", "-20.0202, -151.344, 15.8577, 1.33", "-20.6402, -153.381, 16.0895, 0.67", "-21.2149, -155.453, 16.366, 1.33", "-22.3838, -159.353, 17.0226, 0.67", "-23.1673, -161.724, 17.4776, 1.33", "-23.9036, -163.952, 17.9051, 0.67", "-24.8036, -166.468, 18.469, 1.33", "-25.5634, -168.583, 18.9942, 0.67", "-26.4815, -171.314, 19.7295, 1.33", "-26.9163, -172.575, 20.1296, 0.67" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-19.0278, -148.478, 15.4953, 0.67", "-17.3001, -149.821, 17.9591, 0.67", "-16.4942, -150.447, 19.1083, 0.67" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "30.7894, 57.8062, -98.756, 0.67", "29.9282, 65.546, -103.819, 0.67", "29.7553, 67.5043, -105.041, 0.67", "29.5388, 69.4955, -106.145, 1.33", "29.1676, 73.9775, -108.351, 0.33", "29.0448, 76.7843, -109.649, 0.33", "29.0621, 78.2541, -110.301, 0.67", "29.4329, 81.5517, -111.565, 0.33", "30.1834, 84.8139, -113.321, 0.33", "30.9305, 87.0977, -114.809, 0.67", "32.3081, 90.1886, -117.055, 0.33", "33.4075, 92.167, -118.705, 0.67", "35.5671, 95.4145, -121.595, 0.67", "39.4287, 100.528, -126.181, 0.33", "40.2012, 101.504, -127.067, 0.67", "41.4393, 103.177, -128.516, 0.67", "43.1755, 105.826, -130.442, 0.33", "43.9329, 107.191, -131.351, 0.67", "45.1883, 109.975, -132.818, 0.33", "46.1465, 112.319, -133.902, 0.33", "46.6731, 113.527, -134.485, 0.67", "47.6977, 115.815, -135.618, 0.67", "50.1858, 121.046, -138.215, 0.33", "51.0959, 122.673, -139.316, 0.33", "51.9292, 123.885, -140.364, 0.67", "53.1879, 125.443, -141.908, 0.33", "54.0907, 126.539, -143.014, 0.33", "54.9585, 127.614, -144.068, 0.67", "57.1761, 130.783, -146.313, 0.67", "57.5562, 131.363, -146.733, 0.33", "57.9815, 131.979, -146.992, 0.67", "59.4389, 133.888, -147.326, 0.33", "59.7626, 134.288, -147.291, 0.67", "61.0393, 135.827, -146.929, 0.33", "61.2722, 136.081, -146.851, 0.67", "66.0084, 140.999, -145.368, 0.33", "66.0084, 140.999, -145.368, 0.67", "68.7308, 143.672, -144.637, 0.33", "69.4975, 144.411, -144.454, 1.33", "71.9067, 146.737, -144.289, 0.33", "72.71, 147.54, -144.4, 0.67", "73.5016, 148.465, -144.809, 0.33", "74.7889, 149.927, -145.608, 0.67", "75.4654, 150.668, -146.147, 0.33", "78.8394, 154.371, -149.213, 0.33", "79.0226, 154.597, -149.43, 0.67", "80.5927, 156.466, -151.505, 0.33", "81.2625, 157.291, -152.557, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "30.7894, 57.8062, -98.756, 0.67", "32.7631, 58.9255, -100.237, 0.67", "33.8298, 59.5304, -101.038, 0.67", "35.1759, 60.2939, -102.049, 0.33" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-62.9543, 84.5458, -14.2202, 0.67", "-67.6092, 86.4544, -14.6505, 0.67", "-70.9595, 87.6673, -14.9328, 0.33", "-73.0974, 88.4413, -15.113, 0.33", "-75.2142, 89.2076, -15.2913, 0.67", "-77.7258, 90.1169, -15.503, 0.33", "-80.0948, 90.9744, -15.7026, 0.67", "-83.4394, 92.0549, -15.992, 0.33" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-62.9543, 84.5458, -14.2202, 0.67", "-66.8933, 89.7484, -13.9382, 0.67", "-69.689, 93.1537, -13.4271, 0.67", "-75.6158, 99.9397, -12.0607, 0.67", "-78.7277, 103.302, -11.3059, 0.67", "-85.0001, 109.68, -9.81643, 0.67", "-87.7397, 112.32, -9.10016, 0.67", "-91.6528, 115.835, -7.84324, 0.33", "-93.9579, 117.861, -6.94327, 0.67", "-96.3557, 119.693, -5.91032, 0.33", "-97.8896, 120.876, -5.26255, 0.33", "-102.306, 123.973, -3.51507, 0.67", "-103.609, 124.963, -3.13525, 0.67", "-104.824, 126.113, -2.8584, 0.33", "-106.053, 127.415, -2.49223, 1.33", "-109.019, 131.194, -1.4054, 0.33" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-53.9519, 61.9627, 16.1287, 0.67", "-56.8016, 70.0231, 15.5698, 0.67", "-60.5493, 77.6888, 16.0548, 0.67", "-62.9025, 85.9338, 15.9351, 0.67", "-65.9876, 93.8699, 15.0296, 0.67", "-69.2115, 101.511, 12.9363, 0.67", "-73.0089, 108.648, 10.2068, 0.67", "-77.1136, 115.279, 6.78794, 0.67", "-82.4983, 121.398, 4.40488, 0.67", "-86.8857, 128.466, 2.53036, 0.67", "-92.7864, 134.349, 0.940212, 0.67", "-99.7741, 138.875, -0.456154, 0.67" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-53.9519, 61.9627, 16.1287, 0.67", "-56.3946, 71.5163, 16.9344, 0.67", "-58.2977, 81.1031, 18.4575, 0.67", "-59.8732, 90.5625, 20.8435, 0.67", "-61.9062, 99.2896, 24.9184, 0.67", "-62.9876, 108.409, 28.5135, 0.67", "-62.4568, 117.028, 33.2249, 0.67", "-60.7229, 125.164, 38.437, 0.67", "-59.9488, 133.199, 44.0139, 0.67", "-57.8318, 141.477, 48.8606, 0.67", "-55.1214, 148.882, 54.6611, 0.67", "-52.3674, 156.286, 60.4419, 0.67", "-49.2798, 164.069, 65.5444, 0.67" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "28.0401, -15.2827, -23.443, 0.67", "29.6685, -13.8809, -25.3972, 0.67", "30.5324, -13.9378, -26.6263, 1.33", "31.8771, -14.0452, -28.4473, 0.67", "32.8574, -14.1004, -29.4661, 1.33", "34.4862, -14.233, -30.8519, 0.33", "35.3912, -14.3113, -31.5305, 1.33", "42.7415, -14.9559, -36.1448, 0.33", "44.6649, -15.1469, -37.3862, 0.33", "49.3378, -15.7453, -40.3726, 0.33", "52.0854, -16.0837, -42.051, 0.33", "53.5435, -16.2458, -42.904, 0.67", "56.5206, -16.581, -44.4936, 0.67", "61.3479, -17.0425, -46.5217, 0.33", "63.4153, -17.3097, -47.4229, 0.33", "65.1625, -17.5605, -48.2283, 0.67", "66.8252, -17.843, -49.0499, 0.67", "69.1578, -18.4041, -50.1307, 0.33", "71.3588, -18.9313, -51.0461, 0.67", "73.7769, -19.4035, -52.0034, 0.33", "74.5812, -19.5236, -52.3705, 0.67", "78.9631, -20.1774, -54.9619, 0.33", "80.5085, -20.3427, -56.0467, 0.33", "83.2861, -20.4888, -58.142, 0.33", "86.3106, -20.5457, -60.6008, 0.33", "87.4957, -20.5364, -61.5659, 0.67", "91.9422, -20.4615, -64.7927, 0.33", "93.1017, -20.4218, -65.5212, 0.33", "96.1706, -20.6609, -66.9204, 0.33", "96.5217, -20.7335, -67.0196, 0.67", "98.4933, -21.2239, -67.3322, 0.33", "103.089, -22.3396, -67.821, 0.33", "103.449, -22.4264, -67.8404, 0.67", "110.9, -24.2787, -68.2687, 0.33", "113.215, -24.8146, -68.4282, 0.33", "114.044, -24.9905, -68.5034, 0.67", "121.888, -26.3396, -69.3214, 0.33", "122.255, -26.3761, -69.3669, 0.67", "125.384, -26.5225, -70.041, 0.33", "127.185, -26.4534, -70.6362, 0.33", "128.191, -26.3956, -71.0275, 0.67", "131.201, -26.2377, -72.3069, 0.33", "132.132, -26.1643, -72.8157, 0.67", "137.726, -25.5891, -76.2629, 0.33", "139.082, -25.4047, -77.3073, 0.67", "139.619, -25.3482, -77.7777, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "28.0401, -15.2827, -23.443, 0.33", "29.0089, -20.0189, -23.8334, 0.33", "29.1183, -20.5597, -23.9627, 0.67", "29.6763, -23.4129, -24.7279, 0.67", "30.6882, -28.6475, -26.1402, 0.67", "31.3689, -32.1208, -27.2021, 0.67", "31.5845, -33.1601, -27.5369, 1.33", "32.8668, -39.2603, -30.047, 0.67", "33.2232, -40.924, -30.8144, 0.33", "33.3872, -41.6409, -31.1864, 0.67", "34.3767, -45.4827, -33.2849, 0.33", "34.5681, -46.1596, -33.7115, 1.33", "35.8512, -50.7141, -36.5645, 0.33", "36.2045, -51.8371, -37.184, 0.33", "36.5529, -52.8852, -37.8559, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "12.5915, 14.3137, -37.7854, 0.67", "13.1513, 16.4737, -40.8774, 0.67", "13.3788, 17.3512, -42.1333, 0.67" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "12.5915, 14.3137, -37.7854, 0.67", "9.91671, 14.6545, -40.7508, 0.67", "7.37338, 14.9786, -43.5704, 0.67", "4.43955, 15.3525, -46.823, 0.67", "-2.86386, 16.2831, -54.9198, 0.67", "-5.57779, 16.629, -57.9286, 1.33", "-6.6234, 16.7621, -59.0878, 1.33" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "47.4861, 11.9937, 101.337, 0.67", "49.8211, 10.8932, 115.55, 0.67", "51.2142, 10.4759, 129.942, 0.67", "50.2129, 8.39062, 144.214, 0.67", "51.1698, 5.53876, 158.329, 0.67", "53.8254, 4.05628, 172.443, 0.67", "54.6509, 4.01084, 186.897, 0.67", "56.9262, 4.96036, 201.165, 0.67", "59.2032, 4.49839, 215.433, 0.67", "63.5036, 4.00702, 229.205, 0.67", "69.4834, 2.33023, 242.209, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "47.4861, 11.9937, 101.337, 0.67", "48.7828, 11.7621, 111.423, 0.67", "50.4485, 11.6374, 121.455, 0.67", "49.9913, 12.7832, 131.601, 0.67", "51.7098, 14.0446, 141.566, 0.67", "54.9461, 15.7855, 151.054, 0.67", "57.045, 17.5707, 160.868, 0.67", "57.878, 19.2001, 170.913, 0.67", "58.373, 20.3118, 181.046, 0.67", "57.6551, 20.462, 191.225, 0.67", "55.7875, 19.9468, 201.245, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "81.7744, -107.132, 11.5931, 0.67", "86.1114, -115.912, 13.8171, 0.67", "90.7229, -124.742, 14.9144, 0.67", "94.9082, -133.725, 16.5078, 0.67", "99.3284, -142.692, 17.1869, 0.67", "102.479, -152.208, 17.043, 0.67", "104.305, -161.799, 14.9077, 0.67", "104.968, -171.724, 13.6935, 0.67", "103.644, -181.386, 11.5052, 0.67", "101.867, -190.963, 9.27613, 0.67", "98.8184, -200.014, 6.42661, 0.67", "94.3142, -208.857, 5.31258, 0.67", "91.1656, -218.373, 5.87486, 0.67" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "81.7744, -107.132, 11.5931, 0.67", "87.6736, -114.922, 9.44319, 0.67", "92.967, -122.73, 6.1606, 0.67", "99.2686, -130.026, 3.54723, 0.67", "104.961, -136.765, -1.06723, 0.67", "110.475, -143.524, -5.86223, 0.67", "116.055, -151.06, -9.28455, 0.67", "120.256, -159.294, -13.0677, 0.67", "123.564, -167.533, -17.6187, 0.67", "126.955, -174.308, -24.0536, 0.67", "130.704, -180.139, -31.1644, 0.67", "134.716, -186.765, -37.3944, 0.67" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-26.9163, -172.575, 20.1296, 0.33", "-28.8247, -172.915, 21.446, 0.33", "-29.7861, -173.087, 22.1091, 0.33", "-30.6198, -173.235, 22.6841, 0.33", "-31.9734, -173.477, 23.6178, 0.67", "-33.6025, -173.767, 24.7415, 0.67" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-26.9163, -172.575, 20.1296, 0.67", "-26.019, -175.162, 19.2564, 0.67" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-83.4394, 92.0549, -15.992, 0.33", "-87.2281, 93.4215, -16.4001, 0.33", "-87.8955, 93.5529, -16.4521, 0.67", "-90.6019, 93.9158, -16.637, 0.33", "-91.8914, 94.0358, -16.7894, 0.67", "-94.275, 94.1667, -17.1316, 0.33", "-95.9827, 94.2606, -17.3768, 0.67", "-100.28, 94.1446, -17.9117, 0.33", "-100.993, 94.0913, -18.0123, 0.67", "-103.698, 93.6896, -18.4765, 0.67", "-104.734, 93.5259, -18.6992, 0.67" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-83.4394, 92.0549, -15.992, 0.67", "-85.0842, 90.7588, -16.5889, 0.67" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-109.019, 131.194, -1.4054, 0.33", "-110.095, 132.085, -1.04886, 0.33", "-110.905, 132.756, -0.780148, 0.33", "-113.464, 134.876, 0.0682321, 0.33", "-116.564, 137.444, 1.09607, 0.67", "-118.368, 138.938, 1.69433, 0.33", "-120.628, 140.81, 2.44344, 0.33", "-129.255, 146.446, 5.70849, 0.33", "-137.582, 152.355, 9.2892, 0.33", "-145.781, 158.626, 12.5618, 0.33", "-153.323, 166.073, 14.9241, 0.33", "-158.896, 175.346, 16.3651, 0.33", "-164.731, 184.548, 16.3716, 0.33", "-168.828, 194.596, 15.2047, 0.33", "-173.131, 204.145, 12.2764, 0.33", "-175.381, 214.469, 9.58746, 0.33" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-109.019, 131.194, -1.4054, 0.67", "-110.194, 129.582, -2.27837, 0.67", "-114.924, 120.997, -5.14016, 0.67", "-120.368, 112.626, -7.18957, 0.67", "-126.434, 104.786, -9.48631, 0.67", "-131.936, 96.4898, -11.6714, 0.67", "-137.035, 87.7155, -12.6968, 0.67", "-141.001, 78.3121, -13.3037, 0.67", "-145.505, 69.5488, -16.0087, 0.67", "-148.453, 60.1513, -18.8493, 0.67", "-152.479, 50.8332, -20.0926, 0.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "13.3788, 17.3512, -42.1333, 0.67", "15.1982, 20.6653, -43.047, 0.67", "15.5274, 21.229, -43.3295, 0.67", "17.3664, 24.0891, -44.8317, 0.67", "18.452, 25.7255, -45.6713, 0.33", "19.3783, 27.2218, -46.3907, 0.33", "21.078, 30.3729, -47.7703, 0.67", "23.3165, 34.7379, -49.5809, 0.67", "25.0099, 38.3378, -51.2547, 0.67", "25.6914, 39.9768, -52.1567, 0.33", "26.4009, 42.0648, -53.3129, 0.67", "27.1474, 44.8423, -54.8355, 0.67", "27.4139, 46.416, -55.615, 0.67", "27.5847, 50.367, -58.3274, 0.67", "27.6102, 52.687, -60.4024, 0.67", "27.6274, 54.8412, -62.7241, 0.67", "27.7318, 56.2262, -64.4443, 0.67", "27.9325, 57.4868, -66.1415, 1.33", "28.8982, 62.0938, -72.0944, 0.67", "29.207, 63.7613, -73.9947, 0.67", "29.7669, 66.3837, -76.8583, 0.33", "30.1043, 67.5684, -78.1206, 0.67", "30.509, 68.8622, -79.4259, 1.33", "31.688, 72.3772, -82.5948, 0.33", "32.5296, 74.7685, -84.1798, 0.33", "32.5296, 74.7685, -84.1798, 0.67", "33.2477, 76.6103, -85.2652, 0.33", "34.1879, 79.4767, -86.7695, 0.67", "34.8557, 81.6553, -87.8224, 0.33", "35.3418, 83.204, -88.7977, 0.33", "35.5775, 83.8149, -89.252, 0.67", "36.3996, 86.04, -90.9303, 0.33", "37.0176, 87.8743, -92.2781, 0.33", "37.6165, 89.7152, -93.5479, 0.67", "39.5073, 95.7307, -97.736, 0.33", "40.1211, 97.489, -98.9507, 0.33", "41.0564, 99.4767, -100.469, 0.67", "41.8746, 100.781, -101.586, 0.33", "42.3808, 101.416, -102.134, 0.67", "43.3583, 102.38, -102.897, 0.33", "44.7498, 103.553, -103.678, 0.67", "47.7339, 105.992, -105.563, 0.33", "48.2281, 106.347, -105.902, 1.33", "51.9369, 108.767, -108.508, 0.33", "53.4282, 109.762, -109.578, 0.33", "53.9814, 110.135, -109.977, 0.67", "55.9316, 111.42, -111.267, 0.33", "57.3398, 112.399, -112.062, 0.67", "58.3666, 113.135, -112.745, 0.33", "59.565, 114.079, -113.83, 0.33", "59.9926, 114.516, -114.296, 0.67", "61.2417, 116.144, -115.658, 0.33", "61.5689, 116.744, -116.037, 0.67", "62.9331, 120.618, -118.008, 0.33", "63.6082, 123.102, -119.246, 0.67", "64.0916, 125.475, -120.409, 0.33", "64.4555, 128.861, -121.903, 0.33", "64.4247, 130.281, -122.411, 0.33", "64.3283, 131.265, -122.604, 0.33" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "13.3788, 17.3512, -42.1333, 0.33", "16.1477, 18.514, -46.2681, 0.33", "16.5603, 18.6873, -46.8842, 0.67", "17.5761, 19.1138, -48.401, 0.33", "20.1405, 20.1908, -52.2303, 0.67", "20.9709, 20.5394, -53.4703, 0.67" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-6.6234, 16.7621, -59.0878, 0.67", "-7.50193, 18.3409, -61.7553, 0.67", "-8.68699, 19.8869, -65.7639, 0.67", "-9.29644, 20.2292, -67.7926, 1.33", "-10.5328, 20.3318, -71.6952, 0.33", "-11.1848, 20.2411, -73.5583, 1.33", "-17.0797, 19.4282, -88.1881, 0.67", "-18.12, 19.1109, -90.6182, 0.67", "-21.5691, 17.4363, -98.6452, 1.33", "-24.6494, 15.687, -105.363, 0.67", "-26.1145, 14.7015, -108.389, 0.33", "-29.1996, 12.3721, -113.765, 1.33", "-34.1409, 8.21957, -119.481, 0.67", "-35.0371, 7.16794, -120.58, 0.33", "-36.48, 5.06275, -122.115, 0.33", "-37.1077, 3.34053, -122.985, 0.67", "-37.3804, 1.03598, -124.108, 0.67", "-37.3942, -1.25787, -125.228, 0.67", "-35.9213, -8.86862, -126.746, 0.33" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-6.6234, 16.7621, -59.0878, 0.67", "-5.91089, 21.7057, -63.1866, 0.67", "-5.4543, 23.9347, -65.0856, 0.67", "-5.23306, 24.8362, -65.8729, 0.67", "-4.54459, 27.44, -68.1727, 0.33", "-4.40835, 28.8545, -69.3971, 0.67", "-3.49961, 30.0758, -70.8631, 0.33", "-0.847166, 28.6604, -70.9223, 0.33", "-0.210541, 28.2572, -70.9058, 0.67", "1.46444, 27.1256, -70.7958, 0.33", "4.363, 25.0856, -70.4458, 0.67", "8.96519, 21.3382, -69.8853, 0.67" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "20.9709, 20.5394, -53.4703, 0.67", "22.0412, 22.3318, -54.0104, 0.67", "23.4391, 24.6728, -54.7158, 0.67", "24.7468, 26.8628, -55.3757, 0.33" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "20.9709, 20.5394, -53.4703, 0.33", "22.5011, 20.1467, -55.0997, 0.33", "26.0577, 19.2926, -59.1101, 0.33", "27.6569, 18.9522, -60.8446, 0.33", "29.2732, 18.6492, -62.8141, 0.67", "31.5318, 18.2255, -65.5663, 0.33", "32.3452, 18.073, -66.5574, 0.33", "33.5686, 17.9738, -68.107, 0.67", "34.99, 17.9099, -70.0448, 0.33", "36.764, 17.8997, -72.9018, 0.67" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_54", "dend_39", "dend_36", "dend_19", "dend_8", "dend_1", "dend_0", "apic_2", "apic_1", "dend_60", "dend_55", "dend_45", "dend_40", "dend_38", "dend_37", "dend_23", "dend_20", "dend_14", "dend_9", "dend_5", "dend_2", "apic_4", "apic_3", "dend_62", "dend_61", "dend_59", "dend_56", "dend_47", "dend_46", "dend_42", "dend_41", "dend_33", "dend_24", "dend_22", "dend_21", "dend_18", "dend_15", "dend_13", "dend_10", "dend_7", "dend_6", "dend_4", "dend_3", "apic_6", "apic_5", "dend_58", "dend_57", "dend_51", "dend_48", "dend_44", "dend_43", "dend_35", "dend_34", "dend_28", "dend_25", "dend_17", "dend_16", "dend_12", "dend_11", "apic_8", "apic_7", "dend_53", "dend_52", "dend_50", "dend_49", "dend_32", "dend_29", "dend_27", "dend_26", "dend_31", "dend_30" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_54", "dend_39", "dend_36", "dend_19", "dend_8", "dend_1", "dend_0", "apic_2", "apic_1", "dend_60", "dend_55", "dend_45", "dend_40", "dend_38", "dend_37", "dend_23", "dend_20", "dend_14", "dend_9", "dend_5", "dend_2", "apic_4", "apic_3", "dend_62", "dend_61", "dend_59", "dend_56", "dend_47", "dend_46", "dend_42", "dend_41", "dend_33", "dend_24", "dend_22", "dend_21", "dend_18", "dend_15", "dend_13", "dend_10", "dend_7", "dend_6", "dend_4", "dend_3", "apic_6", "apic_5", "dend_58", "dend_57", "dend_51", "dend_48", "dend_44", "dend_43", "dend_35", "dend_34", "dend_28", "dend_25", "dend_17", "dend_16", "dend_12", "dend_11", "apic_8", "apic_7", "dend_53", "dend_52", "dend_50", "dend_49", "dend_32", "dend_29", "dend_27", "dend_26", "dend_31", "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "dend_54", "dend_54", "dend_39", "dend_39", "dend_36", "dend_36", "dend_19", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_2", "apic_2", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "axon_1", "axon_1", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_5", "apic_5", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_7", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_NBC_0bf743ff25_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_54, id: dend_54, parent: soma_0
create dend_54
public dend_54
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_2, id: apic_2, parent: apic_0
create apic_2
public apic_2
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_60, id: dend_60, parent: dend_54
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_8
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_33, id: dend_33, parent: dend_23
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: apic_8, id: apic_8, parent: apic_6
create apic_8
public apic_8
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_54, dend_39, dend_36, dend_19, dend_8, dend_1, dend_0, apic_2, apic_1, dend_60, dend_55, dend_45, dend_40, dend_38, dend_37, dend_23, dend_20, dend_14, dend_9, dend_5, dend_2, apic_4, apic_3, dend_62, dend_61, dend_59, dend_56, dend_47, dend_46, dend_42, dend_41, dend_33, dend_24, dend_22, dend_21, dend_18, dend_15, dend_13, dend_10, dend_7, dend_6, dend_4, dend_3, apic_6, apic_5, dend_58, dend_57, dend_51, dend_48, dend_44, dend_43, dend_35, dend_34, dend_28, dend_25, dend_17, dend_16, dend_12, dend_11, apic_8, apic_7, dend_53, dend_52, dend_50, dend_49, dend_32, dend_29, dend_27, dend_26, dend_31, dend_30]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_54, dend_39, dend_36, dend_19, dend_8, dend_1, dend_0, apic_2, apic_1, dend_60, dend_55, dend_45, dend_40, dend_38, dend_37, dend_23, dend_20, dend_14, dend_9, dend_5, dend_2, apic_4, apic_3, dend_62, dend_61, dend_59, dend_56, dend_47, dend_46, dend_42, dend_41, dend_33, dend_24, dend_22, dend_21, dend_18, dend_15, dend_13, dend_10, dend_7, dend_6, dend_4, dend_3, apic_6, apic_5, dend_58, dend_57, dend_51, dend_48, dend_44, dend_43, dend_35, dend_34, dend_28, dend_25, dend_17, dend_16, dend_12, dend_11, apic_8, apic_7, dend_53, dend_52, dend_50, dend_49, dend_32, dend_29, dend_27, dend_26, dend_31, dend_30]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_64
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, dend_54, dend_54, dend_39, dend_39, dend_36, dend_36, dend_19, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, axon_1, axon_1, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.49999995593213237)
    connect dend_54(0), soma_0(0.49999995593213237)
    connect dend_39(0), soma_0(0.49999995593213237)
    connect dend_36(0), soma_0(0.49999995593213237)
    connect dend_19(0), soma_0(0.49999995593213237)
    connect dend_8(0), soma_0(0.49999995593213237)
    connect dend_1(0), soma_0(0.49999995593213237)
    connect dend_0(0), soma_0(0.49999995593213237)
    connect axon_0(0), soma_0(1.0)
    connect apic_2(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_60(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_33(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect apic_8(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.53393, -11.9164, -1.40296, 3.39671 ) }
    soma_0 { pt3dadd( -4.03416, -10.7727, -1.27498, 5.62461 ) }
    soma_0 { pt3dadd( -3.5344, -9.62896, -1.147, 8.62637 ) }
    soma_0 { pt3dadd( -3.03463, -8.48523, -1.01903, 11.2222 ) }
    soma_0 { pt3dadd( -2.53486, -7.34149, -0.891052, 12.7227 ) }
    soma_0 { pt3dadd( -2.03509, -6.19776, -0.763075, 13.3506 ) }
    soma_0 { pt3dadd( -1.53533, -5.05403, -0.635099, 14.0469 ) }
    soma_0 { pt3dadd( -1.03556, -3.9103, -0.507122, 15.0988 ) }
    soma_0 { pt3dadd( -0.535791, -2.76657, -0.379146, 15.8493 ) }
    soma_0 { pt3dadd( -0.0360235, -1.62283, -0.251169, 16.1591 ) }
    soma_0 { pt3dadd( 0.463744, -0.479101, -0.123193, 16.4305 ) }
    soma_0 { pt3dadd( 0.963512, 0.664631, 0.00478339, 16.699 ) }
    soma_0 { pt3dadd( 1.46328, 1.80836, 0.13276, 16.9675 ) }
    soma_0 { pt3dadd( 1.96305, 2.9521, 0.260736, 17.2049 ) }
    soma_0 { pt3dadd( 2.46281, 4.09583, 0.388713, 17.1677 ) }
    soma_0 { pt3dadd( 2.96258, 5.23956, 0.516689, 17.0235 ) }
    soma_0 { pt3dadd( 3.46235, 6.38329, 0.644665, 16.3909 ) }
    soma_0 { pt3dadd( 3.96212, 7.52703, 0.772642, 14.8004 ) }
    soma_0 { pt3dadd( 4.46188, 8.67076, 0.900618, 13.0866 ) }
    soma_0 { pt3dadd( 4.96165, 9.81449, 1.02859, 10.0515 ) }
    soma_0 { pt3dadd( 5.46142, 10.9582, 1.15657, 5.57337 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( -3.18144, -13.4551, -0.850449, 2.67 ) }
    apic_0 { pt3dadd( -4.26102, -15.5172, -0.527439, 2.67 ) }
    apic_0 { pt3dadd( -5.34202, -17.5819, -0.20401, 2.0 ) }
    apic_0 { pt3dadd( -7.25627, -21.2382, 0.368726, 2.67 ) }
    // Section: dend_54, id: dend_54, parent: soma_0 (entry count 25/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 1.46857, 10.9297, -10.5305, 2.0 ) }
    dend_54 { pt3dadd( 3.7647, 13.6957, -10.5305, 2.0 ) }
    dend_54 { pt3dadd( 5.76979, 16.1112, -10.5305, 2.0 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 28/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -4.21143, 7.24986, -0.710449, 1.33 ) }
    dend_39 { pt3dadd( -6.20268, 8.66971, -0.390147, 1.33 ) }
    dend_39 { pt3dadd( -8.73991, 10.4789, 0.0179782, 2.0 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 31/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -7.12143, -7.28464, -1.37045, 2.0 ) }
    dend_36 { pt3dadd( -9.92111, -8.66883, -3.91963, 1.33 ) }
    dend_36 { pt3dadd( -13.528, -10.4521, -7.20378, 1.33 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 34/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 2.88857, -9.7139, -18.7105, 1.33 ) }
    dend_19 { pt3dadd( 4.08456, -11.5527, -18.7105, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 9.7886, 4.70786, 8.61955, 1.33 ) }
    dend_8 { pt3dadd( 12.7197, 3.98331, 8.90752, 1.33 ) }
    dend_8 { pt3dadd( 16.6664, 3.0077, 9.29528, 0.67 ) }
    dend_8 { pt3dadd( 19.2799, 2.36168, 9.55204, 0.67 ) }
    dend_8 { pt3dadd( 21.0307, 1.92889, 9.72406, 1.33 ) }
    dend_8 { pt3dadd( 23.5597, 1.30373, 9.97252, 1.33 ) }
    dend_8 { pt3dadd( 27.1717, 0.410881, 10.3274, 1.33 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 43/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.40857, 3.18061, 17.1995, 1.33 ) }
    dend_1 { pt3dadd( 5.86112, 0.820971, 17.5624, 1.33 ) }
    dend_1 { pt3dadd( 4.56125, -1.16113, 17.8671, 1.33 ) }
    dend_1 { pt3dadd( 3.02068, -3.51031, 18.2284, 2.0 ) }
    dend_1 { pt3dadd( 1.10449, -6.43222, 18.6777, 0.67 ) }
    dend_1 { pt3dadd( -0.0334149, -8.16736, 18.9445, 1.33 ) }
    dend_1 { pt3dadd( -0.657967, -9.11971, 19.0909, 0.67 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 50/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 7.16858, 7.45486, -1.67045, 0.67 ) }
    dend_0 { pt3dadd( 8.09114, 9.34925, -1.40531, 0.67 ) }
    dend_0 { pt3dadd( 9.07413, 11.0178, -1.18664, 0.67 ) }
    dend_0 { pt3dadd( 10.5685, 13.4762, -0.901379, 2.0 ) }
    dend_0 { pt3dadd( 12.3151, 16.2404, -0.552571, 1.33 ) }
    dend_0 { pt3dadd( 14.4873, 19.2801, -0.171033, 1.33 ) }
    dend_0 { pt3dadd( 15.4583, 20.5907, -0.0111708, 0.67 ) }
    dend_0 { pt3dadd( 16.875, 22.4101, 0.287908, 0.67 ) }
    dend_0 { pt3dadd( 18.9602, 25.062, 0.802434, 2.0 ) }
    dend_0 { pt3dadd( 20.6254, 27.0307, 1.22378, 0.67 ) }
    dend_0 { pt3dadd( 22.3714, 29.0695, 1.57788, 0.67 ) }
    dend_0 { pt3dadd( 23.6305, 30.6781, 1.79058, 0.67 ) }
    dend_0 { pt3dadd( 24.8796, 32.5275, 1.8563, 1.33 ) }
    dend_0 { pt3dadd( 25.8741, 34.1982, 1.79541, 1.33 ) }
    dend_0 { pt3dadd( 27.2893, 36.5791, 1.5173, 1.33 ) }
    dend_0 { pt3dadd( 28.9118, 39.5033, 0.996662, 0.67 ) }
    dend_0 { pt3dadd( 29.2438, 40.1773, 0.861817, 1.33 ) }
    dend_0 { pt3dadd( 30.8102, 43.3462, 0.142081, 0.67 ) }
    dend_0 { pt3dadd( 31.5267, 44.7963, -0.220627, 0.67 ) }
    dend_0 { pt3dadd( 32.4779, 46.4509, -0.615557, 1.33 ) }
    dend_0 { pt3dadd( 33.0073, 47.2528, -0.772471, 0.67 ) }
    dend_0 { pt3dadd( 34.1353, 48.7547, -0.936366, 0.67 ) }
    dend_0 { pt3dadd( 35.1175, 49.9247, -1.04248, 0.67 ) }
    dend_0 { pt3dadd( 35.6731, 50.5611, -1.1406, 1.33 ) }
    dend_0 { pt3dadd( 37.7165, 52.7566, -1.67506, 0.67 ) }
    dend_0 { pt3dadd( 38.6357, 53.6882, -1.96962, 0.67 ) }
    dend_0 { pt3dadd( 40.178, 55.1031, -2.50714, 0.67 ) }
    dend_0 { pt3dadd( 41.8287, 56.444, -3.10986, 0.67 ) }
    dend_0 { pt3dadd( 44.4042, 58.4692, -4.07687, 1.33 ) }
    dend_0 { pt3dadd( 45.6515, 59.4937, -4.57646, 0.67 ) }
    dend_0 { pt3dadd( 46.0862, 59.882, -4.74513, 1.33 ) }
    dend_0 { pt3dadd( 47.2189, 60.9632, -5.13028, 0.67 ) }
    dend_0 { pt3dadd( 47.7456, 61.5472, -5.28125, 1.33 ) }
    dend_0 { pt3dadd( 48.7914, 62.8931, -5.53966, 1.33 ) }
    dend_0 { pt3dadd( 49.8266, 64.3363, -5.72195, 0.67 ) }
    dend_0 { pt3dadd( 51.6277, 67.2587, -6.16744, 1.33 ) }
    dend_0 { pt3dadd( 52.8208, 69.427, -6.50892, 0.67 ) }
    dend_0 { pt3dadd( 53.5511, 70.8613, -6.6925, 0.67 ) }
    dend_0 { pt3dadd( 54.6551, 73.2234, -6.92814, 1.33 ) }
    dend_0 { pt3dadd( 55.3102, 74.6002, -7.03552, 0.67 ) }
    dend_0 { pt3dadd( 56.1983, 76.3099, -7.10214, 0.67 ) }
    dend_0 { pt3dadd( 57.7469, 79.1691, -7.13414, 1.33 ) }
    dend_0 { pt3dadd( 58.9379, 81.187, -7.08401, 0.67 ) }
    dend_0 { pt3dadd( 59.972, 82.767, -6.98337, 0.67 ) }
    dend_0 { pt3dadd( 61.2027, 84.5339, -6.77748, 1.33 ) }
    dend_0 { pt3dadd( 62.4369, 86.1655, -6.56123, 0.67 ) }
    dend_0 { pt3dadd( 63.1804, 86.9771, -6.44088, 0.67 ) }
    dend_0 { pt3dadd( 64.9987, 88.6519, -6.26977, 0.67 ) }
    dend_0 { pt3dadd( 65.9461, 89.3919, -6.24584, 0.33 ) }
    dend_0 { pt3dadd( 66.7557, 89.917, -6.246, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 68.263, 90.8893, -6.26842, 1.33 ) }
    dend_0 { pt3dadd( 70.3896, 92.2691, -6.33954, 0.67 ) }
    dend_0 { pt3dadd( 72.0265, 93.2885, -6.39754, 0.67 ) }
    dend_0 { pt3dadd( 73.0294, 93.9305, -6.47132, 0.67 ) }
    dend_0 { pt3dadd( 74.7929, 95.1502, -6.72032, 0.67 ) }
    dend_0 { pt3dadd( 75.8563, 95.9687, -6.96672, 1.33 ) }
    dend_0 { pt3dadd( 77.0654, 97.0899, -7.34992, 0.67 ) }
    dend_0 { pt3dadd( 77.7418, 97.8886, -7.72157, 0.67 ) }
    dend_0 { pt3dadd( 79.0752, 99.5107, -8.6318, 0.33 ) }
    dend_0 { pt3dadd( 80.4362, 101.182, -9.65803, 1.33 ) }
    dend_0 { pt3dadd( 81.7055, 102.618, -10.625, 0.67 ) }
    dend_0 { pt3dadd( 82.5601, 103.462, -11.2363, 0.67 ) }
    dend_0 { pt3dadd( 84.8521, 105.461, -12.8147, 0.67 ) }
    dend_0 { pt3dadd( 86.9, 107.19, -14.1271, 0.33 ) }
    dend_0 { pt3dadd( 87.294, 107.491, -14.345, 1.33 ) }
    dend_0 { pt3dadd( 88.7218, 108.519, -15.03, 0.33 ) }
    dend_0 { pt3dadd( 89.3787, 108.973, -15.3053, 1.33 ) }
    dend_0 { pt3dadd( 92.1357, 110.931, -16.4196, 0.33 ) }
    dend_0 { pt3dadd( 93.436, 111.902, -16.878, 0.67 ) }
    dend_0 { pt3dadd( 95.4589, 113.636, -17.7501, 0.33 ) }
    dend_0 { pt3dadd( 96.3438, 114.535, -18.2035, 0.33 ) }
    dend_0 { pt3dadd( 96.9772, 115.314, -18.5809, 0.67 ) }
    dend_0 { pt3dadd( 98.0764, 116.792, -19.2572, 0.33 ) }
    dend_0 { pt3dadd( 99.1185, 118.253, -19.878, 0.33 ) }
    dend_0 { pt3dadd( 100.102, 119.626, -20.4628, 0.67 ) }
    dend_0 { pt3dadd( 101.548, 121.572, -21.2564, 0.33 ) }
    dend_0 { pt3dadd( 102.294, 122.441, -21.6112, 0.67 ) }
    dend_0 { pt3dadd( 103.579, 123.741, -22.0714, 0.67 ) }
    dend_0 { pt3dadd( 104.619, 124.701, -22.3282, 0.33 ) }
    dend_0 { pt3dadd( 105.474, 125.514, -22.5432, 0.33 ) }
    dend_0 { pt3dadd( 106.29, 126.238, -22.7095, 0.33 ) }
    dend_0 { pt3dadd( 106.724, 126.636, -22.8076, 0.67 ) }
    dend_0 { pt3dadd( 108.566, 128.492, -23.2991, 0.33 ) }
    dend_0 { pt3dadd( 108.805, 128.792, -23.3878, 0.67 ) }
    dend_0 { pt3dadd( 110.532, 131.286, -24.1604, 0.33 ) }
    dend_0 { pt3dadd( 112.37, 134.126, -25.0723, 0.33 ) }
    dend_0 { pt3dadd( 113.504, 136.085, -25.7242, 0.33 ) }
    dend_0 { pt3dadd( 113.621, 136.311, -25.7995, 0.67 ) }
    dend_0 { pt3dadd( 114.737, 138.923, -26.7581, 0.33 ) }
    dend_0 { pt3dadd( 115.014, 139.803, -27.0759, 0.33 ) }
    dend_0 { pt3dadd( 115.333, 141.051, -27.4911, 0.67 ) }
    dend_0 { pt3dadd( 115.673, 142.408, -28.0367, 0.33 ) }
    dend_0 { pt3dadd( 116.118, 143.856, -28.6857, 0.67 ) }
    dend_0 { pt3dadd( 116.861, 145.615, -29.6709, 0.33 ) }
    dend_0 { pt3dadd( 117.538, 146.96, -30.4806, 0.67 ) }
    dend_0 { pt3dadd( 118.999, 149.762, -32.3418, 0.67 ) }
    dend_0 { pt3dadd( 120.157, 151.735, -33.8305, 0.67 ) }
    dend_0 { pt3dadd( 120.647, 152.366, -34.3844, 0.67 ) }
    dend_0 { pt3dadd( 122.196, 153.729, -35.9463, 0.33 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 49/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.46142, 10.9582, 1.15657, 0.820304 ) }
    axon_0 { pt3dadd( 11.4675, 24.7033, 1.15657, 0.820304 ) }
    axon_0 { pt3dadd( 17.4736, 38.4483, 1.15657, 0.820304 ) }
    // Section: apic_2, id: apic_2, parent: apic_0 (entry count 52/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -7.25627, -21.2382, 0.368726, 2.0 ) }
    apic_2 { pt3dadd( -7.11471, -26.5532, 0.237237, 2.0 ) }
    apic_2 { pt3dadd( -7.01455, -30.3139, 0.144198, 2.0 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 55/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -7.25627, -21.2382, 0.368726, 1.33 ) }
    apic_1 { pt3dadd( -8.80602, -23.0814, 2.10039, 1.33 ) }
    apic_1 { pt3dadd( -10.3345, -24.5427, 3.48031, 0.67 ) }
    apic_1 { pt3dadd( -11.8049, -25.6349, 5.06236, 0.67 ) }
    apic_1 { pt3dadd( -13.002, -26.4443, 6.35973, 0.67 ) }
    apic_1 { pt3dadd( -14.0561, -27.2529, 7.49448, 1.33 ) }
    apic_1 { pt3dadd( -15.3581, -28.3683, 8.97706, 0.67 ) }
    apic_1 { pt3dadd( -16.2421, -29.0343, 10.053, 2.0 ) }
    apic_1 { pt3dadd( -18.8961, -30.8611, 13.4278, 0.67 ) }
    apic_1 { pt3dadd( -19.8238, -31.4982, 14.5536, 1.33 ) }
    apic_1 { pt3dadd( -21.255, -32.6592, 16.264, 0.67 ) }
    apic_1 { pt3dadd( -22.9526, -34.0891, 18.2188, 0.67 ) }
    apic_1 { pt3dadd( -24.2079, -35.0961, 19.6786, 0.67 ) }
    apic_1 { pt3dadd( -24.9806, -35.6567, 20.5314, 0.67 ) }
    apic_1 { pt3dadd( -25.9707, -36.327, 21.5081, 1.33 ) }
    apic_1 { pt3dadd( -27.8171, -37.3931, 23.3786, 0.67 ) }
    apic_1 { pt3dadd( -29.5162, -38.2241, 25.0484, 0.67 ) }
    apic_1 { pt3dadd( -30.8717, -38.8811, 26.2882, 0.67 ) }
    apic_1 { pt3dadd( -31.9095, -39.4365, 27.2361, 0.67 ) }
    apic_1 { pt3dadd( -32.6113, -39.7747, 27.9217, 2.0 ) }
    apic_1 { pt3dadd( -34.2965, -40.4629, 29.7472, 2.0 ) }
    // Section: dend_60, id: dend_60, parent: dend_54 (entry count 76/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 5.76979, 16.1112, -10.5305, 1.33 ) }
    dend_60 { pt3dadd( 7.75392, 16.8979, -10.7391, 1.33 ) }
    dend_60 { pt3dadd( 11.0168, 18.1917, -11.0822, 2.0 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 79/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 5.76979, 16.1112, -10.5305, 0.67 ) }
    dend_55 { pt3dadd( 6.18374, 16.5112, -14.0739, 0.67 ) }
    dend_55 { pt3dadd( 6.9529, 17.0732, -17.3072, 0.67 ) }
    dend_55 { pt3dadd( 7.92135, 17.7078, -20.3174, 1.33 ) }
    dend_55 { pt3dadd( 11.055, 19.761, -30.0575, 1.33 ) }
    dend_55 { pt3dadd( 12.6216, 20.7875, -34.927, 1.33 ) }
    dend_55 { pt3dadd( 13.5186, 21.3752, -37.715, 1.33 ) }
    dend_55 { pt3dadd( 14.5456, 21.6788, -40.9112, 0.67 ) }
    dend_55 { pt3dadd( 15.2817, 21.705, -42.7073, 1.33 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 88/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -8.73991, 10.4789, 0.0179782, 0.67 ) }
    dend_45 { pt3dadd( -11.7396, 15.5398, -1.63542, 0.67 ) }
    dend_45 { pt3dadd( -13.9217, 18.9218, -2.65974, 0.67 ) }
    dend_45 { pt3dadd( -15.251, 20.8833, -3.26089, 1.33 ) }
    dend_45 { pt3dadd( -18.9169, 26.1264, -4.6209, 0.67 ) }
    dend_45 { pt3dadd( -23.2834, 32.2232, -6.2849, 1.33 ) }
    dend_45 { pt3dadd( -25.7371, 35.5189, -7.22091, 0.67 ) }
    dend_45 { pt3dadd( -28.5133, 39.08, -8.18206, 0.67 ) }
    dend_45 { pt3dadd( -30.5773, 41.4982, -8.82446, 1.33 ) }
    dend_45 { pt3dadd( -33.3727, 44.633, -9.61593, 0.33 ) }
    dend_45 { pt3dadd( -36.7176, 48.2477, -10.2745, 0.67 ) }
    dend_45 { pt3dadd( -37.7975, 49.4295, -10.5627, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_45 { pt3dadd( -39.7681, 51.4625, -11.0187, 0.67 ) }
    dend_45 { pt3dadd( -41.0555, 52.8218, -11.372, 1.33 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 2/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -8.73991, 10.4789, 0.0179782, 1.33 ) }
    dend_40 { pt3dadd( -10.7495, 11.5171, 0.823793, 1.33 ) }
    dend_40 { pt3dadd( -12.6052, 12.519, 1.52927, 0.67 ) }
    dend_40 { pt3dadd( -14.6688, 13.6688, 2.28797, 1.33 ) }
    dend_40 { pt3dadd( -17.2115, 15.0883, 3.18661, 0.33 ) }
    dend_40 { pt3dadd( -20.7388, 17.0698, 4.50393, 0.67 ) }
    dend_40 { pt3dadd( -22.0265, 17.7607, 4.99927, 0.33 ) }
    dend_40 { pt3dadd( -23.6936, 18.6341, 5.70371, 0.67 ) }
    dend_40 { pt3dadd( -24.0945, 18.8318, 5.87147, 0.33 ) }
    dend_40 { pt3dadd( -25.3231, 19.3465, 6.38933, 0.33 ) }
    dend_40 { pt3dadd( -26.7718, 19.9269, 7.11786, 0.67 ) }
    dend_40 { pt3dadd( -28.0533, 20.41, 7.8263, 0.67 ) }
    dend_40 { pt3dadd( -30.0773, 21.3386, 9.2687, 1.33 ) }
    dend_40 { pt3dadd( -31.1666, 21.8691, 10.1483, 0.33 ) }
    dend_40 { pt3dadd( -32.2089, 22.3964, 11.0074, 0.67 ) }
    dend_40 { pt3dadd( -33.2675, 22.9891, 11.8876, 1.33 ) }
    dend_40 { pt3dadd( -34.2756, 23.617, 12.6845, 0.67 ) }
    dend_40 { pt3dadd( -36.7942, 25.5163, 14.6853, 1.33 ) }
    dend_40 { pt3dadd( -37.7664, 26.3818, 15.5183, 0.67 ) }
    dend_40 { pt3dadd( -38.4145, 26.964, 16.0247, 0.67 ) }
    dend_40 { pt3dadd( -39.0394, 27.5379, 16.4576, 0.67 ) }
    dend_40 { pt3dadd( -39.7655, 28.1912, 16.9091, 0.67 ) }
    dend_40 { pt3dadd( -40.6589, 28.9691, 17.3902, 0.67 ) }
    dend_40 { pt3dadd( -42.1114, 30.2259, 17.6606, 0.33 ) }
    dend_40 { pt3dadd( -43.2074, 31.5586, 17.9954, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 27/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -13.528, -10.4521, -7.20378, 1.33 ) }
    dend_38 { pt3dadd( -17.6424, -15.0138, -5.90786, 1.33 ) }
    dend_38 { pt3dadd( -20.3984, -18.151, -5.14553, 0.67 ) }
    dend_38 { pt3dadd( -23.3982, -22.0034, -3.9179, 1.33 ) }
    dend_38 { pt3dadd( -26.3365, -25.9371, -2.51509, 0.67 ) }
    dend_38 { pt3dadd( -29.0455, -29.4995, -1.12208, 1.33 ) }
    dend_38 { pt3dadd( -31.2978, -32.3868, 0.0741901, 0.67 ) }
    dend_38 { pt3dadd( -32.7863, -34.3253, 0.881542, 1.33 ) }
    dend_38 { pt3dadd( -36.4492, -39.2922, 3.60624, 0.67 ) }
    dend_38 { pt3dadd( -37.3186, -40.3689, 4.43705, 0.67 ) }
    dend_38 { pt3dadd( -38.3596, -41.4235, 5.49004, 1.33 ) }
    dend_38 { pt3dadd( -39.0579, -42.1137, 6.18354, 0.67 ) }
    dend_38 { pt3dadd( -40.9926, -43.9371, 8.0682, 0.67 ) }
    dend_38 { pt3dadd( -44.7733, -47.4076, 11.3581, 0.67 ) }
    dend_38 { pt3dadd( -46.8037, -49.1452, 12.5843, 1.33 ) }
    dend_38 { pt3dadd( -47.6483, -49.9054, 12.9947, 0.67 ) }
    dend_38 { pt3dadd( -49.5305, -51.6604, 13.662, 0.67 ) }
    dend_38 { pt3dadd( -50.9825, -53.084, 13.9847, 0.67 ) }
    dend_38 { pt3dadd( -53.8089, -55.8465, 14.2223, 0.67 ) }
    dend_38 { pt3dadd( -56.7366, -58.8601, 14.3355, 1.33 ) }
    dend_38 { pt3dadd( -58.9806, -61.3275, 14.6658, 0.67 ) }
    dend_38 { pt3dadd( -61.0091, -63.6172, 15.1251, 1.33 ) }
    dend_38 { pt3dadd( -63.1506, -65.9961, 15.7512, 0.33 ) }
    dend_38 { pt3dadd( -64.4863, -67.4503, 16.2173, 0.33 ) }
    dend_38 { pt3dadd( -68.1492, -71.1732, 17.9877, 2.0 ) }
    dend_38 { pt3dadd( -70.63, -73.8665, 19.4968, 1.33 ) }
    dend_38 { pt3dadd( -71.4584, -74.7648, 20.0673, 0.67 ) }
    dend_38 { pt3dadd( -72.9746, -76.3354, 21.2064, 0.67 ) }
    dend_38 { pt3dadd( -74.5272, -77.7992, 22.4073, 1.33 ) }
    dend_38 { pt3dadd( -79.825, -82.708, 26.3707, 0.67 ) }
    dend_38 { pt3dadd( -85.6412, -92.3092, 31.1167, 0.67 ) }
    dend_38 { pt3dadd( -93.4123, -101.227, 33.9961, 0.67 ) }
    dend_38 { pt3dadd( -101.795, -110.04, 34.7092, 0.67 ) }
    dend_38 { pt3dadd( -111.231, -116.843, 38.1059, 0.67 ) }
    dend_38 { pt3dadd( -120.286, -124.533, 40.6178, 0.67 ) }
    dend_38 { pt3dadd( -130.028, -131.305, 43.0997, 0.67 ) }
    dend_38 { pt3dadd( -139.04, -138.87, 46.0763, 0.67 ) }
    dend_38 { pt3dadd( -147.728, -146.769, 49.179, 0.67 ) }
    dend_38 { pt3dadd( -158.229, -151.981, 52.1487, 0.67 ) }
    dend_38 { pt3dadd( -168.816, -157.503, 54.1097, 0.67 ) }
    dend_38 { pt3dadd( -179.431, -163.271, 54.9305, 0.67 ) }
    dend_38 { pt3dadd( -189.299, -170.1, 56.6662, 0.67 ) }
    dend_38 { pt3dadd( -197.341, -178.853, 59.2846, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 70/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -13.528, -10.4521, -7.20378, 0.67 ) }
    dend_37 { pt3dadd( -17.6563, -10.5195, -6.7779, 0.67 ) }
    dend_37 { pt3dadd( -21.2608, -10.5954, -6.4477, 0.67 ) }
    dend_37 { pt3dadd( -22.9338, -10.5656, -6.44813, 0.67 ) }
    dend_37 { pt3dadd( -27.374, -10.4888, -6.64352, 1.33 ) }
    dend_37 { pt3dadd( -30.037, -10.5134, -6.81892, 0.67 ) }
    dend_37 { pt3dadd( -32.5723, -10.563, -7.00879, 1.33 ) }
    dend_37 { pt3dadd( -35.336, -10.7066, -7.14373, 0.67 ) }
    dend_37 { pt3dadd( -38.942, -10.8433, -7.4372, 0.67 ) }
    dend_37 { pt3dadd( -42.0214, -10.9177, -7.84229, 0.67 ) }
    dend_37 { pt3dadd( -43.8023, -10.9792, -8.16788, 0.33 ) }
    dend_37 { pt3dadd( -44.906, -11.0664, -8.33935, 1.33 ) }
    dend_37 { pt3dadd( -47.2102, -11.2746, -8.56001, 0.33 ) }
    dend_37 { pt3dadd( -51.5118, -11.8477, -8.79729, 0.67 ) }
    dend_37 { pt3dadd( -53.9029, -12.1908, -8.94118, 0.67 ) }
    dend_37 { pt3dadd( -55.9684, -12.3945, -9.15616, 0.33 ) }
    dend_37 { pt3dadd( -57.9206, -12.5154, -9.29487, 0.67 ) }
    dend_37 { pt3dadd( -60.2814, -12.7185, -9.40113, 0.67 ) }
    dend_37 { pt3dadd( -62.1302, -12.871, -9.42287, 0.67 ) }
    dend_37 { pt3dadd( -65.9976, -13.0903, -9.2369, 0.33 ) }
    dend_37 { pt3dadd( -69.1888, -13.2505, -9.24816, 0.67 ) }
    dend_37 { pt3dadd( -72.5459, -13.3153, -9.37135, 0.33 ) }
    dend_37 { pt3dadd( -75.593, -13.4192, -9.48137, 0.67 ) }
    dend_37 { pt3dadd( -78.5145, -13.7076, -9.58068, 0.67 ) }
    dend_37 { pt3dadd( -80.0819, -13.9291, -9.60557, 1.33 ) }
    dend_37 { pt3dadd( -84.0257, -14.641, -9.61312, 0.33 ) }
    dend_37 { pt3dadd( -85.232, -14.9121, -9.69024, 1.33 ) }
    dend_37 { pt3dadd( -88.5394, -15.5994, -10.215, 0.67 ) }
    dend_37 { pt3dadd( -90.7046, -15.9847, -10.6011, 0.67 ) }
    dend_37 { pt3dadd( -92.4703, -16.2838, -10.927, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_37 { pt3dadd( -94.4793, -16.4535, -11.2106, 1.33 ) }
    dend_37 { pt3dadd( -96.1107, -16.5511, -11.4888, 0.67 ) }
    dend_37 { pt3dadd( -98.9393, -16.6397, -12.1972, 0.33 ) }
    dend_37 { pt3dadd( -99.5183, -16.6114, -12.4143, 0.67 ) }
    dend_37 { pt3dadd( -100.703, -16.5065, -12.8883, 0.33 ) }
    dend_37 { pt3dadd( -104.549, -16.105, -14.435, 0.67 ) }
    dend_37 { pt3dadd( -109.22, -15.4589, -16.1959, 0.67 ) }
    dend_37 { pt3dadd( -110.96, -15.1953, -16.8656, 0.33 ) }
    dend_37 { pt3dadd( -114.132, -14.6811, -18.0548, 0.67 ) }
    dend_37 { pt3dadd( -117.105, -14.1133, -19.1979, 0.67 ) }
    dend_37 { pt3dadd( -118.533, -13.8505, -19.7473, 0.67 ) }
    dend_37 { pt3dadd( -119.774, -13.5536, -20.2013, 0.33 ) }
    dend_37 { pt3dadd( -124.19, -12.2304, -21.3326, 0.67 ) }
    dend_37 { pt3dadd( -125.387, -11.9356, -21.6695, 0.33 ) }
    dend_37 { pt3dadd( -126.221, -11.8263, -21.8863, 0.67 ) }
    dend_37 { pt3dadd( -128.198, -11.6937, -22.521, 0.33 ) }
    dend_37 { pt3dadd( -129.485, -11.7673, -23.0253, 0.33 ) }
    dend_37 { pt3dadd( -130.62, -11.9517, -23.5044, 0.33 ) }
    dend_37 { pt3dadd( -133.166, -12.7282, -24.5543, 0.67 ) }
    dend_37 { pt3dadd( -134.511, -13.2153, -25.1422, 0.33 ) }
    dend_37 { pt3dadd( -135.329, -13.5148, -25.4824, 0.67 ) }
    dend_37 { pt3dadd( -137.883, -14.4943, -26.4014, 0.33 ) }
    dend_37 { pt3dadd( -138.765, -14.8296, -26.6434, 0.67 ) }
    dend_37 { pt3dadd( -140.658, -15.3929, -26.9143, 0.33 ) }
    dend_37 { pt3dadd( -142.158, -15.7954, -26.9454, 0.33 ) }
    dend_37 { pt3dadd( -144.965, -16.3275, -26.8385, 0.67 ) }
    dend_37 { pt3dadd( -147.588, -16.6057, -26.5811, 0.33 ) }
    dend_37 { pt3dadd( -149.554, -16.7063, -26.2863, 0.67 ) }
    dend_37 { pt3dadd( -151.804, -16.7024, -25.9727, 0.33 ) }
    dend_37 { pt3dadd( -153.549, -16.6543, -25.7247, 0.33 ) }
    dend_37 { pt3dadd( -155.514, -16.6355, -25.4532, 0.33 ) }
    dend_37 { pt3dadd( -158.142, -16.5104, -25.0874, 0.67 ) }
    dend_37 { pt3dadd( -160.592, -16.2685, -24.7545, 0.67 ) }
    dend_37 { pt3dadd( -162.55, -16.1398, -24.5391, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 34/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 4.08456, -11.5527, -18.7105, 1.33 ) }
    dend_23 { pt3dadd( 9.22967, -10.2073, -18.6067, 1.33 ) }
    dend_23 { pt3dadd( 12.4267, -9.37135, -18.5422, 1.33 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 37/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 4.08456, -11.5527, -18.7105, 0.67 ) }
    dend_20 { pt3dadd( 6.2471, -14.5028, -15.7036, 0.67 ) }
    dend_20 { pt3dadd( 9.04012, -18.7656, -11.4067, 0.67 ) }
    dend_20 { pt3dadd( 10.2716, -20.7802, -9.46339, 1.33 ) }
    dend_20 { pt3dadd( 11.062, -22.0875, -8.15548, 0.67 ) }
    dend_20 { pt3dadd( 12.3268, -24.3081, -5.94842, 0.67 ) }
    dend_20 { pt3dadd( 14.2659, -27.8881, -2.59433, 0.67 ) }
    dend_20 { pt3dadd( 15.0566, -29.5549, -1.20756, 0.33 ) }
    dend_20 { pt3dadd( 15.4676, -30.5131, -0.432236, 1.33 ) }
    dend_20 { pt3dadd( 16.5444, -33.6124, 2.23132, 0.33 ) }
    dend_20 { pt3dadd( 16.8373, -34.5961, 3.10816, 0.67 ) }
    dend_20 { pt3dadd( 17.2464, -36.2499, 4.59326, 0.33 ) }
    dend_20 { pt3dadd( 18.1357, -39.274, 7.01228, 1.33 ) }
    dend_20 { pt3dadd( 18.8014, -41.4486, 8.68755, 0.33 ) }
    dend_20 { pt3dadd( 19.1457, -42.6742, 9.64408, 1.33 ) }
    dend_20 { pt3dadd( 22.3075, -49.3034, 15.6873, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_8 (entry count 53/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 27.1717, 0.410881, 10.3274, 0.67 ) }
    dend_14 { pt3dadd( 28.7126, 1.58951, 13.2347, 0.67 ) }
    dend_14 { pt3dadd( 29.9548, 2.55275, 15.961, 1.33 ) }
    dend_14 { pt3dadd( 31.9989, 4.13774, 20.4471, 0.67 ) }
    dend_14 { pt3dadd( 34.0938, 5.76213, 25.0448, 1.33 ) }
    dend_14 { pt3dadd( 34.6947, 6.22809, 26.3636, 2.0 ) }
    dend_14 { pt3dadd( 35.4807, 6.83754, 28.0886, 0.67 ) }
    dend_14 { pt3dadd( 36.8878, 8.34476, 32.6068, 1.33 ) }
    dend_14 { pt3dadd( 41.135, 9.32635, 42.7686, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 62/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 27.1717, 0.410881, 10.3274, 0.67 ) }
    dend_9 { pt3dadd( 27.7405, -2.16745, 10.2403, 0.67 ) }
    dend_9 { pt3dadd( 28.0914, -3.75794, 10.1866, 0.67 ) }
    dend_9 { pt3dadd( 28.7773, -6.86728, 10.0816, 0.67 ) }
    dend_9 { pt3dadd( 29.2759, -9.12704, 10.0054, 0.67 ) }
    dend_9 { pt3dadd( 30.0491, -12.6319, 9.88702, 0.67 ) }
    dend_9 { pt3dadd( 33.046, -21.9492, 10.7436, 0.67 ) }
    dend_9 { pt3dadd( 36.6705, -31.011, 9.83007, 0.67 ) }
    dend_9 { pt3dadd( 38.9479, -40.5394, 9.06586, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 71/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.657967, -9.11971, 19.0909, 0.67 ) }
    dend_5 { pt3dadd( 1.21024, -10.23, 19.2671, 0.67 ) }
    dend_5 { pt3dadd( 4.14258, -12.2203, 19.5508, 1.33 ) }
    dend_5 { pt3dadd( 6.98758, -14.3287, 19.8312, 0.67 ) }
    dend_5 { pt3dadd( 9.76641, -16.6357, 20.2917, 1.33 ) }
    dend_5 { pt3dadd( 13.1314, -19.4291, 20.8494, 0.67 ) }
    dend_5 { pt3dadd( 14.6326, -20.6754, 21.0982, 1.33 ) }
    dend_5 { pt3dadd( 17.1288, -23.0154, 21.5726, 0.67 ) }
    dend_5 { pt3dadd( 17.6946, -23.6707, 21.707, 1.33 ) }
    dend_5 { pt3dadd( 19.9133, -26.6973, 22.4166, 0.67 ) }
    dend_5 { pt3dadd( 29.4679, -32.0291, 25.9969, 0.67 ) }
    dend_5 { pt3dadd( 38.3468, -36.6905, 31.6156, 0.67 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 83/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.657967, -9.11971, 19.0909, 0.67 ) }
    dend_2 { pt3dadd( -1.79048, -4.96848, 17.4279, 0.67 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 85/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 17.4736, 38.4483, 1.15657, 0.33 ) }
    axon_1 { pt3dadd( 23.4797, 52.1934, 1.15657, 0.33 ) }
    axon_1 { pt3dadd( 29.4858, 65.9385, 1.15657, 0.33 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 88/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -7.01455, -30.3139, 0.144198, 1.33 ) }
    apic_4 { pt3dadd( -8.02977, -35.5653, 1.15783, 1.33 ) }
    apic_4 { pt3dadd( -9.03399, -39.2556, 1.79029, 1.33 ) }
    apic_4 { pt3dadd( -9.75525, -41.7467, 2.15065, 1.33 ) }
    apic_4 { pt3dadd( -11.3614, -47.0873, 2.82302, 1.33 ) }
    apic_4 { pt3dadd( -11.7978, -48.5951, 2.993, 1.33 ) }
    apic_4 { pt3dadd( -12.6759, -51.8386, 3.32596, 1.33 ) }
    apic_4 { pt3dadd( -13.9151, -57.0747, 3.70137, 1.33 ) }
    apic_4 { pt3dadd( -14.7855, -60.8853, 3.84993, 0.67 ) }
    apic_4 { pt3dadd( -15.3349, -63.5839, 3.9475, 0.67 ) }
    apic_4 { pt3dadd( -15.5789, -65.026, 4.01358, 0.67 ) }
    apic_4 { pt3dadd( -15.7829, -66.2515, 4.10986, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_4 { pt3dadd( -16.2192, -69.7163, 4.50422, 0.67 ) }
    apic_4 { pt3dadd( -16.3821, -72.9051, 5.02385, 0.67 ) }
    apic_4 { pt3dadd( -16.5637, -76.7116, 5.76482, 1.33 ) }
    apic_4 { pt3dadd( -16.7056, -79.1691, 6.31301, 2.0 ) }
    apic_4 { pt3dadd( -17.0014, -82.9248, 7.18242, 0.67 ) }
    apic_4 { pt3dadd( -17.1755, -85.1368, 7.72215, 2.0 ) }
    apic_4 { pt3dadd( -17.3858, -88.3618, 8.47967, 1.33 ) }
    apic_4 { pt3dadd( -17.5147, -91.1836, 9.05819, 1.33 ) }
    apic_4 { pt3dadd( -17.6108, -94.5507, 9.73172, 0.67 ) }
    apic_4 { pt3dadd( -17.6537, -97.5556, 10.3063, 0.67 ) }
    apic_4 { pt3dadd( -17.6515, -99.8211, 10.724, 2.0 ) }
    apic_4 { pt3dadd( -17.5772, -104.93, 11.6495, 0.67 ) }
    apic_4 { pt3dadd( -17.3474, -112.717, 13.0442, 1.33 ) }
    apic_4 { pt3dadd( -17.0597, -116.268, 13.6671, 1.33 ) }
    apic_4 { pt3dadd( -16.7284, -119.192, 14.1447, 1.33 ) }
    apic_4 { pt3dadd( -16.4653, -121.908, 14.5977, 1.33 ) }
    apic_4 { pt3dadd( -16.3205, -124.115, 14.9142, 0.67 ) }
    apic_4 { pt3dadd( -16.2671, -125.56, 15.0958, 1.33 ) }
    apic_4 { pt3dadd( -16.2624, -128.042, 15.2557, 0.67 ) }
    apic_4 { pt3dadd( -16.3753, -130.743, 15.3324, 0.67 ) }
    apic_4 { pt3dadd( -16.763, -135.135, 15.396, 0.67 ) }
    apic_4 { pt3dadd( -17.6293, -141.255, 15.3993, 1.33 ) }
    apic_4 { pt3dadd( -17.8633, -142.543, 15.4098, 1.33 ) }
    apic_4 { pt3dadd( -18.5487, -146.046, 15.4546, 0.67 ) }
    apic_4 { pt3dadd( -19.0278, -148.478, 15.4953, 1.33 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 25/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -7.01455, -30.3139, 0.144198, 0.67 ) }
    apic_3 { pt3dadd( -3.25826, -33.7231, -0.967598, 0.67 ) }
    apic_3 { pt3dadd( -1.06873, -35.7579, -1.53187, 1.33 ) }
    apic_3 { pt3dadd( 0.455503, -37.2206, -1.86535, 0.67 ) }
    apic_3 { pt3dadd( 1.78085, -38.611, -2.09773, 0.33 ) }
    apic_3 { pt3dadd( 2.03289, -38.8756, -2.1628, 0.67 ) }
    apic_3 { pt3dadd( 3.52433, -40.417, -2.67221, 0.33 ) }
    apic_3 { pt3dadd( 3.8833, -40.7796, -2.79372, 0.67 ) }
    apic_3 { pt3dadd( 5.03831, -41.9011, -3.33313, 0.33 ) }
    apic_3 { pt3dadd( 7.18637, -43.8239, -4.46543, 0.67 ) }
    apic_3 { pt3dadd( 9.62151, -46.0005, -5.93543, 0.67 ) }
    apic_3 { pt3dadd( 11.0061, -47.4073, -6.84987, 0.33 ) }
    apic_3 { pt3dadd( 11.7202, -48.21, -7.3751, 1.33 ) }
    apic_3 { pt3dadd( 13.521, -50.4864, -8.77999, 0.33 ) }
    apic_3 { pt3dadd( 13.9726, -51.1032, -9.12701, 1.33 ) }
    apic_3 { pt3dadd( 15.7337, -53.8625, -10.5138, 0.67 ) }
    apic_3 { pt3dadd( 17.1622, -56.4214, -11.6143, 0.33 ) }
    apic_3 { pt3dadd( 17.8983, -57.8322, -12.2205, 1.33 ) }
    apic_3 { pt3dadd( 19.102, -60.2697, -13.32, 0.67 ) }
    apic_3 { pt3dadd( 20.1149, -62.2584, -14.288, 0.33 ) }
    apic_3 { pt3dadd( 21.0447, -63.9046, -15.1285, 0.33 ) }
    apic_3 { pt3dadd( 22.2153, -65.786, -16.1191, 1.33 ) }
    apic_3 { pt3dadd( 23.8388, -68.2248, -17.4464, 0.67 ) }
    apic_3 { pt3dadd( 25.1553, -70.2532, -18.4874, 0.33 ) }
    apic_3 { pt3dadd( 26.1844, -71.9234, -19.3019, 1.33 ) }
    apic_3 { pt3dadd( 27.2845, -73.851, -20.2169, 0.33 ) }
    apic_3 { pt3dadd( 27.6653, -74.5126, -20.557, 0.67 ) }
    apic_3 { pt3dadd( 28.9573, -76.9098, -21.8578, 0.33 ) }
    apic_3 { pt3dadd( 29.4267, -77.8047, -22.3828, 0.67 ) }
    apic_3 { pt3dadd( 30.516, -80.022, -23.7547, 0.33 ) }
    apic_3 { pt3dadd( 30.8654, -80.8746, -24.2676, 0.67 ) }
    apic_3 { pt3dadd( 32.212, -84.6873, -26.5008, 0.33 ) }
    apic_3 { pt3dadd( 32.2149, -84.697, -26.5061, 0.67 ) }
    apic_3 { pt3dadd( 32.5423, -86.2411, -27.2695, 0.33 ) }
    apic_3 { pt3dadd( 32.708, -87.2066, -27.7087, 0.67 ) }
    apic_3 { pt3dadd( 33.2259, -90.4223, -28.9595, 0.33 ) }
    apic_3 { pt3dadd( 33.5707, -92.5907, -29.6858, 0.33 ) }
    apic_3 { pt3dadd( 33.8626, -94.7446, -30.2706, 0.67 ) }
    apic_3 { pt3dadd( 34.3824, -98.0233, -31.1703, 0.33 ) }
    apic_3 { pt3dadd( 34.5856, -98.9546, -31.4532, 0.67 ) }
    apic_3 { pt3dadd( 35.1635, -100.66, -32.063, 0.33 ) }
    apic_3 { pt3dadd( 35.6724, -101.568, -32.4351, 0.67 ) }
    apic_3 { pt3dadd( 36.764, -103.017, -33.0922, 0.33 ) }
    apic_3 { pt3dadd( 37.4563, -103.752, -33.4316, 1.33 ) }
    apic_3 { pt3dadd( 39.9269, -106.079, -34.5024, 0.33 ) }
    apic_3 { pt3dadd( 41.662, -107.696, -35.2022, 0.67 ) }
    apic_3 { pt3dadd( 45.2113, -110.967, -36.5777, 0.33 ) }
    apic_3 { pt3dadd( 45.9122, -111.569, -36.8151, 0.67 ) }
    apic_3 { pt3dadd( 48.1379, -113.497, -37.4273, 0.33 ) }
    apic_3 { pt3dadd( 48.9552, -114.259, -37.6057, 1.33 ) }
    apic_3 { pt3dadd( 50.6264, -115.945, -37.8652, 0.33 ) }
    apic_3 { pt3dadd( 50.9845, -116.345, -37.9073, 0.67 ) }
    apic_3 { pt3dadd( 53.1785, -118.947, -38.1214, 0.33 ) }
    apic_3 { pt3dadd( 56.9646, -123.573, -38.4345, 0.33 ) }
    apic_3 { pt3dadd( 57.9105, -124.749, -38.5069, 1.33 ) }
    apic_3 { pt3dadd( 60.775, -128.27, -38.744, 0.33 ) }
    apic_3 { pt3dadd( 61.7245, -129.46, -38.8324, 0.67 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 82/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 11.0168, 18.1917, -11.0822, 0.67 ) }
    dend_62 { pt3dadd( 14.3835, 18.9654, -11.2474, 0.67 ) }
    dend_62 { pt3dadd( 17.4174, 19.8082, -11.5508, 0.67 ) }
    dend_62 { pt3dadd( 21.224, 21.0436, -12.0181, 1.33 ) }
    dend_62 { pt3dadd( 25.8165, 22.8736, -12.6033, 0.67 ) }
    dend_62 { pt3dadd( 27.8507, 23.7805, -12.8642, 0.67 ) }
    dend_62 { pt3dadd( 30.1708, 24.8825, -13.1588, 0.67 ) }
    dend_62 { pt3dadd( 33.7482, 26.547, -13.6418, 0.67 ) }
    dend_62 { pt3dadd( 37.5791, 28.5524, -14.1748, 1.33 ) }
    dend_62 { pt3dadd( 41.8599, 31.2593, -14.7803, 0.67 ) }
    dend_62 { pt3dadd( 42.7918, 31.9225, -14.9046, 0.67 ) }
    dend_62 { pt3dadd( 44.6943, 33.2872, -15.133, 0.33 ) }
    dend_62 { pt3dadd( 46.0221, 34.185, -15.2621, 1.33 ) }
    dend_62 { pt3dadd( 48.4666, 35.8685, -15.3892, 0.67 ) }
    dend_62 { pt3dadd( 49.3239, 36.4039, -15.497, 1.33 ) }
    dend_62 { pt3dadd( 50.9649, 37.2328, -15.8616, 0.67 ) }
    dend_62 { pt3dadd( 51.5213, 37.4889, -16.0109, 0.67 ) }
    dend_62 { pt3dadd( 53.5399, 38.345, -16.6208, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_62 { pt3dadd( 54.5823, 38.694, -16.9505, 0.33 ) }
    dend_62 { pt3dadd( 60.2485, 40.3614, -19.0957, 0.33 ) }
    dend_62 { pt3dadd( 62.1384, 40.8805, -19.8513, 0.33 ) }
    dend_62 { pt3dadd( 64.0744, 41.4221, -20.6355, 0.33 ) }
    dend_62 { pt3dadd( 65.2383, 41.7379, -21.1603, 0.67 ) }
    dend_62 { pt3dadd( 68.0488, 42.4213, -22.434, 0.33 ) }
    dend_62 { pt3dadd( 71.9094, 43.2489, -24.1737, 0.67 ) }
    dend_62 { pt3dadd( 75.3762, 43.9794, -25.6742, 0.67 ) }
    dend_62 { pt3dadd( 77.4024, 44.5491, -26.6183, 0.67 ) }
    dend_62 { pt3dadd( 80.319, 45.4634, -27.9563, 0.33 ) }
    dend_62 { pt3dadd( 85.1035, 47.0736, -30.0339, 0.67 ) }
    dend_62 { pt3dadd( 87.9285, 48.0716, -31.1577, 0.67 ) }
    dend_62 { pt3dadd( 89.212, 48.5019, -31.6118, 0.67 ) }
    dend_62 { pt3dadd( 93.0699, 50.0093, -32.9769, 0.67 ) }
    dend_62 { pt3dadd( 95.9532, 51.3115, -33.8942, 0.67 ) }
    dend_62 { pt3dadd( 97.5495, 52.1996, -34.2723, 0.67 ) }
    dend_62 { pt3dadd( 98.6097, 52.9014, -34.5098, 1.33 ) }
    dend_62 { pt3dadd( 100.367, 54.0133, -34.7313, 0.67 ) }
    dend_62 { pt3dadd( 101.28, 54.4588, -34.8095, 0.67 ) }
    dend_62 { pt3dadd( 102.793, 54.9725, -34.8932, 0.33 ) }
    dend_62 { pt3dadd( 104.05, 55.3793, -35.0067, 0.67 ) }
    dend_62 { pt3dadd( 105.012, 55.7008, -35.0686, 1.33 ) }
    dend_62 { pt3dadd( 109.561, 57.1433, -35.2744, 0.67 ) }
    dend_62 { pt3dadd( 112.218, 57.7937, -35.3586, 0.33 ) }
    dend_62 { pt3dadd( 115.417, 58.4175, -35.4694, 0.67 ) }
    dend_62 { pt3dadd( 117.419, 58.673, -35.5512, 0.67 ) }
    dend_62 { pt3dadd( 120.19, 58.8965, -35.6858, 0.33 ) }
    dend_62 { pt3dadd( 120.19, 58.8965, -35.6858, 0.67 ) }
    dend_62 { pt3dadd( 123.577, 58.8958, -35.9403, 0.33 ) }
    dend_62 { pt3dadd( 124.723, 58.9953, -36.0253, 0.67 ) }
    dend_62 { pt3dadd( 127.274, 59.4115, -36.1046, 0.33 ) }
    dend_62 { pt3dadd( 130.099, 60.0357, -36.1159, 0.67 ) }
    dend_62 { pt3dadd( 134.106, 61.1946, -36.0507, 0.67 ) }
    dend_62 { pt3dadd( 137.407, 62.4424, -35.9294, 0.67 ) }
    dend_62 { pt3dadd( 141.86, 64.6823, -35.703, 0.67 ) }
    dend_62 { pt3dadd( 145.087, 66.5952, -35.5102, 0.33 ) }
    dend_62 { pt3dadd( 145.921, 67.1785, -35.4312, 0.67 ) }
    dend_62 { pt3dadd( 147.192, 68.1786, -35.2749, 0.33 ) }
    dend_62 { pt3dadd( 148.927, 69.7344, -35.0365, 0.67 ) }
    dend_62 { pt3dadd( 154.099, 74.3621, -34.4802, 0.67 ) }
    dend_62 { pt3dadd( 155.191, 75.2976, -34.4003, 0.67 ) }
    dend_62 { pt3dadd( 157.551, 77.2206, -34.3209, 0.33 ) }
    dend_62 { pt3dadd( 159.035, 78.3802, -34.2804, 0.67 ) }
    dend_62 { pt3dadd( 163.74, 81.9819, -34.1726, 0.67 ) }
    dend_62 { pt3dadd( 168.982, 85.9688, -34.0908, 0.33 ) }
    dend_62 { pt3dadd( 169.56, 86.3762, -34.1083, 0.67 ) }
    dend_62 { pt3dadd( 171.551, 87.6254, -34.1959, 0.33 ) }
    dend_62 { pt3dadd( 172.347, 88.0728, -34.2508, 0.33 ) }
    dend_62 { pt3dadd( 172.753, 88.2684, -34.2748, 0.67 ) }
    dend_62 { pt3dadd( 175.337, 89.2197, -34.3911, 0.33 ) }
    dend_62 { pt3dadd( 178.968, 90.5646, -34.7687, 0.33 ) }
    dend_62 { pt3dadd( 181.169, 91.3599, -35.0617, 0.67 ) }
    dend_62 { pt3dadd( 182.911, 91.9641, -35.3303, 0.33 ) }
    dend_62 { pt3dadd( 184.522, 92.5182, -35.5976, 0.33 ) }
    dend_62 { pt3dadd( 186.957, 93.4536, -36.0045, 0.33 ) }
    dend_62 { pt3dadd( 190.287, 95.0004, -36.5596, 0.67 ) }
    dend_62 { pt3dadd( 192.324, 96.1647, -36.9793, 0.67 ) }
    dend_62 { pt3dadd( 193.429, 96.8422, -37.2841, 0.33 ) }
    dend_62 { pt3dadd( 195.235, 98.127, -37.7716, 0.33 ) }
    dend_62 { pt3dadd( 197.231, 99.6327, -38.1591, 0.67 ) }
    dend_62 { pt3dadd( 198.974, 100.901, -38.3952, 0.33 ) }
    dend_62 { pt3dadd( 200.989, 102.398, -38.5852, 0.67 ) }
    dend_62 { pt3dadd( 203.855, 104.579, -38.8981, 0.33 ) }
    dend_62 { pt3dadd( 208.413, 107.979, -39.3824, 0.33 ) }
    dend_62 { pt3dadd( 211.597, 110.13, -39.7018, 0.33 ) }
    dend_62 { pt3dadd( 213.141, 111.059, -39.8321, 0.33 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 66/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 11.0168, 18.1917, -11.0822, 0.67 ) }
    dend_61 { pt3dadd( 10.5058, 20.5996, -12.9587, 0.67 ) }
    dend_61 { pt3dadd( 9.99651, 22.9993, -14.829, 1.33 ) }
    dend_61 { pt3dadd( 9.23619, 26.5826, -17.6215, 0.67 ) }
    dend_61 { pt3dadd( 8.07571, 32.0513, -21.8835, 0.67 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 71/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 15.2817, 21.705, -42.7073, 0.67 ) }
    dend_59 { pt3dadd( 15.4132, 23.8456, -44.4427, 0.67 ) }
    dend_59 { pt3dadd( 15.4801, 24.4143, -44.8231, 1.33 ) }
    dend_59 { pt3dadd( 15.5849, 25.6968, -45.7106, 0.67 ) }
    dend_59 { pt3dadd( 15.8765, 28.347, -47.2915, 1.33 ) }
    dend_59 { pt3dadd( 16.3064, 31.8465, -49.4089, 0.67 ) }
    dend_59 { pt3dadd( 16.6346, 35.2099, -51.2439, 0.67 ) }
    dend_59 { pt3dadd( 16.7442, 36.5816, -51.9598, 0.67 ) }
    dend_59 { pt3dadd( 16.9759, 40.1706, -53.6301, 0.67 ) }
    dend_59 { pt3dadd( 17.0671, 44.5382, -55.6136, 0.67 ) }
    dend_59 { pt3dadd( 16.8447, 47.7034, -56.6843, 0.67 ) }
    dend_59 { pt3dadd( 16.1869, 51.1782, -57.5828, 0.33 ) }
    dend_59 { pt3dadd( 15.3006, 53.1699, -58.0883, 0.67 ) }
    dend_59 { pt3dadd( 14.271, 54.5956, -58.4156, 0.67 ) }
    dend_59 { pt3dadd( 11.646, 56.9026, -59.0932, 0.33 ) }
    dend_59 { pt3dadd( 7.75158, 59.0443, -60.2595, 0.67 ) }
    dend_59 { pt3dadd( 6.67625, 59.4347, -60.6809, 0.67 ) }
    dend_59 { pt3dadd( 2.31708, 60.3152, -63.0232, 0.33 ) }
    dend_59 { pt3dadd( 0.386415, 60.5308, -64.0714, 0.67 ) }
    dend_59 { pt3dadd( -3.26259, 60.6229, -66.1844, 0.33 ) }
    dend_59 { pt3dadd( -4.31223, 60.5556, -66.8766, 0.67 ) }
    dend_59 { pt3dadd( -6.7135, 60.1629, -68.9692, 0.33 ) }
    dend_59 { pt3dadd( -7.66931, 59.8763, -69.9285, 0.67 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 94/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 15.2817, 21.705, -42.7073, 1.33 ) }
    dend_56 { pt3dadd( 17.1136, 22.7976, -46.0543, 1.33 ) }
    dend_56 { pt3dadd( 21.539, 26.4894, -54.3407, 0.67 ) }
    dend_56 { pt3dadd( 21.8259, 26.745, -54.8636, 1.33 ) }
    dend_56 { pt3dadd( 22.8541, 27.6783, -56.6231, 0.67 ) }
    dend_56 { pt3dadd( 23.2854, 28.1116, -57.4374, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_56 { pt3dadd( 24.3135, 29.2315, -59.6041, 0.67 ) }
    dend_56 { pt3dadd( 25.6919, 31.4094, -63.6603, 0.67 ) }
    dend_56 { pt3dadd( 26.2373, 33.0275, -66.2777, 0.33 ) }
    dend_56 { pt3dadd( 26.3482, 33.6879, -67.4159, 1.33 ) }
    dend_56 { pt3dadd( 26.567, 36.2613, -71.6875, 0.67 ) }
    dend_56 { pt3dadd( 26.7219, 37.2877, -73.3414, 0.67 ) }
    dend_56 { pt3dadd( 26.9076, 38.7769, -75.4458, 0.33 ) }
    dend_56 { pt3dadd( 27.1009, 40.5714, -77.9889, 0.67 ) }
    dend_56 { pt3dadd( 27.3414, 42.7131, -80.8346, 0.67 ) }
    dend_56 { pt3dadd( 27.5842, 44.5733, -83.1382, 0.67 ) }
    dend_56 { pt3dadd( 27.938, 46.3961, -85.2507, 0.67 ) }
    dend_56 { pt3dadd( 28.9802, 50.7195, -90.1986, 0.67 ) }
    dend_56 { pt3dadd( 30.2261, 55.2042, -95.3912, 0.33 ) }
    dend_56 { pt3dadd( 30.526, 56.4688, -96.9587, 0.33 ) }
    dend_56 { pt3dadd( 30.7894, 57.8062, -98.756, 1.33 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 15/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -41.0555, 52.8218, -11.372, 0.67 ) }
    dend_47 { pt3dadd( -44.2659, 57.684, -10.7621, 0.67 ) }
    dend_47 { pt3dadd( -47.1718, 61.8265, -10.6721, 0.67 ) }
    dend_47 { pt3dadd( -49.8243, 65.6178, -10.9054, 0.67 ) }
    dend_47 { pt3dadd( -52.6811, 69.6964, -11.3343, 0.67 ) }
    dend_47 { pt3dadd( -54.6723, 72.539, -11.6332, 0.67 ) }
    dend_47 { pt3dadd( -56.5575, 75.2306, -11.9163, 0.67 ) }
    dend_47 { pt3dadd( -60.5026, 81.0648, -13.1829, 0.67 ) }
    dend_47 { pt3dadd( -61.9405, 83.113, -13.7435, 0.67 ) }
    dend_47 { pt3dadd( -62.9543, 84.5458, -14.2202, 1.33 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 25/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -41.0555, 52.8218, -11.372, 0.67 ) }
    dend_46 { pt3dadd( -42.2568, 57.9291, -15.125, 0.67 ) }
    dend_46 { pt3dadd( -42.6539, 59.5264, -16.1653, 0.33 ) }
    dend_46 { pt3dadd( -42.919, 60.7697, -17.0458, 0.67 ) }
    dend_46 { pt3dadd( -43.3043, 65.5033, -20.9178, 0.33 ) }
    dend_46 { pt3dadd( -43.2796, 67.6551, -22.7598, 0.67 ) }
    dend_46 { pt3dadd( -43.2143, 69.1657, -24.1905, 0.67 ) }
    dend_46 { pt3dadd( -43.0589, 70.5412, -25.5892, 0.33 ) }
    dend_46 { pt3dadd( -42.6561, 73.3062, -28.6383, 0.67 ) }
    dend_46 { pt3dadd( -41.8123, 76.8145, -32.8385, 0.33 ) }
    dend_46 { pt3dadd( -41.3698, 77.8286, -34.1664, 0.67 ) }
    dend_46 { pt3dadd( -40.341, 79.6205, -37.096, 0.33 ) }
    dend_46 { pt3dadd( -39.4187, 80.8487, -39.4269, 0.67 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 38/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -43.2074, 31.5586, 17.9954, 0.67 ) }
    dend_42 { pt3dadd( -44.1354, 33.0765, 17.9813, 0.67 ) }
    dend_42 { pt3dadd( -44.7725, 33.9788, 17.8241, 0.67 ) }
    dend_42 { pt3dadd( -45.0799, 34.3582, 17.7367, 2.0 ) }
    dend_42 { pt3dadd( -45.8135, 35.2393, 17.4648, 2.0 ) }
    dend_42 { pt3dadd( -46.5159, 36.2839, 17.2503, 0.33 ) }
    dend_42 { pt3dadd( -46.7451, 36.6626, 17.1918, 0.67 ) }
    dend_42 { pt3dadd( -47.8619, 38.6011, 16.9957, 0.33 ) }
    dend_42 { pt3dadd( -48.1564, 39.1876, 16.9532, 0.33 ) }
    dend_42 { pt3dadd( -49.7303, 42.743, 16.7674, 0.67 ) }
    dend_42 { pt3dadd( -50.9177, 46.0504, 16.6341, 0.67 ) }
    dend_42 { pt3dadd( -51.5804, 48.2696, 16.5848, 0.67 ) }
    dend_42 { pt3dadd( -51.8837, 49.5425, 16.5843, 0.33 ) }
    dend_42 { pt3dadd( -52.1079, 51.1227, 16.6463, 0.33 ) }
    dend_42 { pt3dadd( -52.1639, 51.7865, 16.6768, 1.33 ) }
    dend_42 { pt3dadd( -52.1232, 53.0368, 16.7744, 0.33 ) }
    dend_42 { pt3dadd( -52.0507, 53.6934, 16.7672, 1.33 ) }
    dend_42 { pt3dadd( -51.804, 54.6575, 16.7162, 0.33 ) }
    dend_42 { pt3dadd( -51.4436, 55.8334, 16.5589, 1.33 ) }
    dend_42 { pt3dadd( -53.9519, 61.9627, 16.1287, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 58/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -43.2074, 31.5586, 17.9954, 0.67 ) }
    dend_41 { pt3dadd( -45.6502, 32.1432, 20.49, 0.67 ) }
    dend_41 { pt3dadd( -47.2652, 32.5299, 22.1391, 0.67 ) }
    dend_41 { pt3dadd( -49.881, 33.1559, 24.8103, 0.67 ) }
    dend_41 { pt3dadd( -56.8794, 35.5233, 31.0173, 0.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_23 (entry count 63/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 12.4267, -9.37135, -18.5422, 0.67 ) }
    dend_33 { pt3dadd( 15.0659, -10.3706, -19.3706, 0.67 ) }
    dend_33 { pt3dadd( 18.7239, -11.7555, -20.5188, 1.33 ) }
    dend_33 { pt3dadd( 20.3236, -12.3612, -21.0209, 0.67 ) }
    dend_33 { pt3dadd( 23.2067, -13.4527, -21.9259, 0.67 ) }
    dend_33 { pt3dadd( 27.0784, -14.9186, -23.1412, 0.67 ) }
    dend_33 { pt3dadd( 28.0401, -15.2827, -23.443, 1.33 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 70/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 12.4267, -9.37135, -18.5422, 0.67 ) }
    dend_24 { pt3dadd( 12.3748, -7.10201, -19.8841, 0.67 ) }
    dend_24 { pt3dadd( 12.3581, -3.14572, -22.4588, 1.33 ) }
    dend_24 { pt3dadd( 12.3862, -1.36638, -23.7655, 1.33 ) }
    dend_24 { pt3dadd( 12.4145, 1.64349, -26.1951, 0.67 ) }
    dend_24 { pt3dadd( 12.4302, 5.41013, -29.3769, 1.33 ) }
    dend_24 { pt3dadd( 12.442, 8.24141, -31.7686, 0.67 ) }
    dend_24 { pt3dadd( 12.4402, 10.3438, -33.659, 1.33 ) }
    dend_24 { pt3dadd( 12.4926, 12.0519, -35.2466, 1.33 ) }
    dend_24 { pt3dadd( 12.5784, 14.1466, -37.5493, 0.67 ) }
    dend_24 { pt3dadd( 12.5915, 14.3137, -37.7854, 1.33 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 81/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 22.3075, -49.3034, 15.6873, 0.67 ) }
    dend_22 { pt3dadd( 28.2333, -54.1944, 21.4372, 0.67 ) }
    dend_22 { pt3dadd( 33.7665, -59.9865, 26.7636, 0.67 ) }
    dend_22 { pt3dadd( 38.262, -66.6948, 32.0451, 0.67 ) }
    dend_22 { pt3dadd( 41.8757, -73.7349, 37.5908, 0.67 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 86/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 22.3075, -49.3034, 15.6873, 0.67 ) }
    dend_21 { pt3dadd( 23.0322, -58.0907, 22.6053, 0.67 ) }
    dend_21 { pt3dadd( 24.1653, -65.8297, 30.5793, 0.67 ) }
    dend_21 { pt3dadd( 27.1197, -71.7597, 39.4981, 0.67 ) }
    dend_21 { pt3dadd( 29.0988, -80.1394, 46.6406, 0.67 ) }
    dend_21 { pt3dadd( 30.8133, -88.4235, 53.9576, 0.67 ) }
    dend_21 { pt3dadd( 32.5058, -97.7686, 59.9368, 0.67 ) }
    dend_21 { pt3dadd( 34.6414, -107.426, 65.2584, 0.67 ) }
    dend_21 { pt3dadd( 35.9026, -116.654, 71.515, 0.67 ) }
    dend_21 { pt3dadd( 39.7679, -125.71, 76.8543, 0.67 ) }
    dend_21 { pt3dadd( 45.3496, -134.758, 80.3408, 0.67 ) }
    dend_21 { pt3dadd( 51.9327, -142.293, 85.2323, 0.67 ) }
    dend_21 { pt3dadd( 60.5912, -148.435, 88.4456, 0.67 ) }
    dend_21 { pt3dadd( 69.7595, -154.301, 90.5311, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_21 { pt3dadd( 78.7627, -160.772, 90.9217, 0.67 ) }
    dend_21 { pt3dadd( 87.1052, -167.715, 93.2952, 0.67 ) }
    dend_21 { pt3dadd( 95.633, -174.392, 95.7406, 0.67 ) }
    dend_21 { pt3dadd( 103.951, -181.265, 98.3865, 0.67 ) }
    dend_21 { pt3dadd( 111.211, -189.572, 100.018, 0.67 ) }
    dend_21 { pt3dadd( 118.395, -197.734, 102.488, 0.67 ) }
    dend_21 { pt3dadd( 126.05, -205.687, 103.985, 0.67 ) }
    dend_21 { pt3dadd( 133.178, -214.235, 103.216, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 8/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 41.135, 9.32635, 42.7686, 0.67 ) }
    dend_18 { pt3dadd( 44.0742, 10.2698, 49.9682, 0.67 ) }
    dend_18 { pt3dadd( 45.9668, 9.72305, 57.5321, 0.67 ) }
    dend_18 { pt3dadd( 48.3058, 10.7394, 64.9431, 0.67 ) }
    dend_18 { pt3dadd( 50.6884, 12.5325, 72.2069, 0.67 ) }
    dend_18 { pt3dadd( 54.7512, 13.991, 78.7465, 0.67 ) }
    dend_18 { pt3dadd( 58.8534, 15.3433, 85.2819, 0.67 ) }
    dend_18 { pt3dadd( 62.1771, 16.6884, 92.252, 0.67 ) }
    dend_18 { pt3dadd( 65.8632, 19.6529, 98.5389, 0.67 ) }
    dend_18 { pt3dadd( 69.1622, 23.5018, 104.586, 0.67 ) }
    dend_18 { pt3dadd( 72.8018, 27.1556, 110.549, 0.67 ) }
    dend_18 { pt3dadd( 75.916, 30.8163, 116.804, 0.67 ) }
    dend_18 { pt3dadd( 79.6659, 34.276, 122.807, 0.67 ) }
    dend_18 { pt3dadd( 83.7648, 38.6781, 127.92, 0.67 ) }
    dend_18 { pt3dadd( 88.0744, 41.9081, 133.654, 0.67 ) }
    dend_18 { pt3dadd( 92.9042, 45.5065, 138.718, 0.67 ) }
    dend_18 { pt3dadd( 97.6598, 49.2863, 143.727, 0.67 ) }
    dend_18 { pt3dadd( 103.052, 51.5564, 148.944, 0.67 ) }
    dend_18 { pt3dadd( 109.248, 54.3791, 152.826, 0.67 ) }
    dend_18 { pt3dadd( 115.707, 57.9001, 155.545, 0.67 ) }
    dend_18 { pt3dadd( 121.871, 61.8977, 158.321, 0.67 ) }
    dend_18 { pt3dadd( 128.38, 65.5191, 160.774, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 30/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 41.135, 9.32635, 42.7686, 0.67 ) }
    dend_15 { pt3dadd( 44.0026, 11.4514, 49.3801, 0.67 ) }
    dend_15 { pt3dadd( 45.535, 12.6204, 56.6314, 0.67 ) }
    dend_15 { pt3dadd( 46.2249, 13.1193, 64.077, 0.67 ) }
    dend_15 { pt3dadd( 45.706, 13.3382, 71.5487, 0.67 ) }
    dend_15 { pt3dadd( 46.3203, 13.1248, 79.0026, 0.67 ) }
    dend_15 { pt3dadd( 46.6757, 13.4097, 86.4802, 0.67 ) }
    dend_15 { pt3dadd( 47.0632, 12.493, 93.8867, 0.67 ) }
    dend_15 { pt3dadd( 47.4861, 11.9937, 101.337, 0.67 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 39/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 38.9479, -40.5394, 9.06586, 0.67 ) }
    dend_13 { pt3dadd( 40.1836, -48.1087, 11.9304, 0.67 ) }
    dend_13 { pt3dadd( 40.6293, -55.4227, 15.5844, 0.67 ) }
    dend_13 { pt3dadd( 42.3231, -62.8411, 18.5889, 0.67 ) }
    dend_13 { pt3dadd( 45.209, -69.6818, 21.97, 0.67 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 44/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 38.9479, -40.5394, 9.06586, 0.67 ) }
    dend_10 { pt3dadd( 42.0975, -51.7295, 8.81486, 0.67 ) }
    dend_10 { pt3dadd( 46.004, -62.6451, 8.19503, 0.67 ) }
    dend_10 { pt3dadd( 52.9746, -71.8525, 8.03979, 0.67 ) }
    dend_10 { pt3dadd( 59.1708, -81.525, 6.80121, 0.67 ) }
    dend_10 { pt3dadd( 66.9331, -90.0482, 7.07201, 0.67 ) }
    dend_10 { pt3dadd( 74.1018, -98.9333, 8.89786, 0.67 ) }
    dend_10 { pt3dadd( 81.7744, -107.132, 11.5931, 0.67 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 52/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 38.3468, -36.6905, 31.6156, 0.67 ) }
    dend_7 { pt3dadd( 45.6944, -44.2609, 33.5269, 0.67 ) }
    dend_7 { pt3dadd( 54.4032, -49.5508, 36.6568, 0.67 ) }
    dend_7 { pt3dadd( 63.1472, -54.2985, 40.452, 0.67 ) }
    dend_7 { pt3dadd( 72.545, -56.5547, 44.8216, 0.67 ) }
    dend_7 { pt3dadd( 81.8489, -60.3512, 48.2829, 0.67 ) }
    dend_7 { pt3dadd( 90.7328, -63.8603, 52.9394, 0.67 ) }
    dend_7 { pt3dadd( 98.6012, -68.3887, 58.509, 0.67 ) }
    dend_7 { pt3dadd( 105.785, -72.9966, 64.8892, 0.67 ) }
    dend_7 { pt3dadd( 113.235, -78.9045, 69.7625, 0.67 ) }
    dend_7 { pt3dadd( 119.158, -86.4539, 74.581, 0.67 ) }
    dend_7 { pt3dadd( 126.919, -92.0092, 79.3576, 0.67 ) }
    dend_7 { pt3dadd( 135.374, -97.3915, 83.0001, 0.67 ) }
    dend_7 { pt3dadd( 144.404, -102.475, 85.4666, 0.67 ) }
    dend_7 { pt3dadd( 151.975, -109.118, 89.0766, 0.67 ) }
    dend_7 { pt3dadd( 158.81, -117.087, 91.3284, 0.67 ) }
    dend_7 { pt3dadd( 166.692, -124.278, 92.1785, 0.67 ) }
    dend_7 { pt3dadd( 174.796, -131.206, 91.4363, 0.67 ) }
    dend_7 { pt3dadd( 183.686, -137.021, 90.5869, 0.67 ) }
    dend_7 { pt3dadd( 192.659, -142.748, 91.1622, 0.67 ) }
    dend_7 { pt3dadd( 200.967, -149.23, 92.9369, 0.67 ) }
    dend_7 { pt3dadd( 209.491, -154.925, 95.8933, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 38.3468, -36.6905, 31.6156, 0.67 ) }
    dend_6 { pt3dadd( 46.4685, -42.4841, 34.1564, 0.67 ) }
    dend_6 { pt3dadd( 54.5855, -48.432, 36.3432, 0.67 ) }
    dend_6 { pt3dadd( 61.3938, -55.6572, 39.2386, 0.67 ) }
    dend_6 { pt3dadd( 68.2699, -61.9725, 43.6288, 0.67 ) }
    dend_6 { pt3dadd( 75.9504, -68.1273, 46.6884, 0.67 ) }
    dend_6 { pt3dadd( 84.655, -72.7677, 49.5319, 0.67 ) }
    dend_6 { pt3dadd( 93.7376, -77.5213, 49.9976, 0.67 ) }
    dend_6 { pt3dadd( 103.317, -81.0347, 49.1938, 0.67 ) }
    dend_6 { pt3dadd( 112.743, -84.7046, 47.6232, 0.67 ) }
    dend_6 { pt3dadd( 121.935, -89.1735, 46.8211, 0.67 ) }
    dend_6 { pt3dadd( 131.424, -93.0211, 46.594, 0.67 ) }
    dend_6 { pt3dadd( 140.358, -98.0676, 46.9978, 0.67 ) }
    dend_6 { pt3dadd( 149.2, -103.119, 48.3466, 0.67 ) }
    dend_6 { pt3dadd( 158.635, -106.759, 49.9641, 0.67 ) }
    dend_6 { pt3dadd( 167.506, -111.888, 50.6783, 0.67 ) }
    dend_6 { pt3dadd( 175.713, -118.048, 49.8677, 0.67 ) }
    dend_6 { pt3dadd( 184.28, -123.732, 49.6644, 0.67 ) }
    dend_6 { pt3dadd( 192.683, -129.605, 48.8349, 0.67 ) }
    dend_6 { pt3dadd( 200.83, -135.86, 49.6367, 0.67 ) }
    dend_6 { pt3dadd( 208.223, -142.507, 52.4096, 0.67 ) }
    dend_6 { pt3dadd( 216.57, -148.443, 53.4289, 0.67 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 96/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -1.79048, -4.96848, 17.4279, 0.67 ) }
    dend_4 { pt3dadd( -4.7539, -4.44533, 19.0187, 0.67 ) }
    dend_4 { pt3dadd( -10.0115, -3.51717, 21.8411, 0.67 ) }
    dend_4 { pt3dadd( -13.8354, -2.84211, 23.8939, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( -22.785, 0.676531, 26.6172, 1.33 ) }
    dend_4 { pt3dadd( -32.384, 3.09111, 28.015, 1.33 ) }
    dend_4 { pt3dadd( -41.6953, 6.62486, 28.8511, 1.33 ) }
    dend_4 { pt3dadd( -50.9978, 9.93465, 30.3988, 1.33 ) }
    dend_4 { pt3dadd( -59.9748, 14.2617, 31.1936, 1.33 ) }
    dend_4 { pt3dadd( -68.0806, 19.8614, 32.9693, 1.33 ) }
    dend_4 { pt3dadd( -76.8437, 23.813, 35.7104, 1.33 ) }
    dend_4 { pt3dadd( -84.3727, 28.9561, 39.8379, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 8/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -1.79048, -4.96848, 17.4279, 0.67 ) }
    dend_3 { pt3dadd( 2.58777, 3.13164, 20.1233, 0.67 ) }
    dend_3 { pt3dadd( 5.0474, 7.68215, 21.6376, 0.67 ) }
    dend_3 { pt3dadd( 7.3459, 11.9346, 23.0527, 0.67 ) }
    dend_3 { pt3dadd( 8.88237, 14.7772, 23.9986, 1.33 ) }
    dend_3 { pt3dadd( 10.1112, 17.0506, 24.7552, 0.67 ) }
    dend_3 { pt3dadd( 12.8095, 22.0428, 26.4164, 1.33 ) }
    dend_3 { pt3dadd( 18.9055, 33.7752, 27.5327, 1.33 ) }
    dend_3 { pt3dadd( 23.3307, 46.2703, 26.8776, 1.33 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 17/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -19.0278, -148.478, 15.4953, 1.33 ) }
    apic_6 { pt3dadd( -20.0202, -151.344, 15.8577, 1.33 ) }
    apic_6 { pt3dadd( -20.6402, -153.381, 16.0895, 0.67 ) }
    apic_6 { pt3dadd( -21.2149, -155.453, 16.366, 1.33 ) }
    apic_6 { pt3dadd( -22.3838, -159.353, 17.0226, 0.67 ) }
    apic_6 { pt3dadd( -23.1673, -161.724, 17.4776, 1.33 ) }
    apic_6 { pt3dadd( -23.9036, -163.952, 17.9051, 0.67 ) }
    apic_6 { pt3dadd( -24.8036, -166.468, 18.469, 1.33 ) }
    apic_6 { pt3dadd( -25.5634, -168.583, 18.9942, 0.67 ) }
    apic_6 { pt3dadd( -26.4815, -171.314, 19.7295, 1.33 ) }
    apic_6 { pt3dadd( -26.9163, -172.575, 20.1296, 0.67 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 28/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -19.0278, -148.478, 15.4953, 0.67 ) }
    apic_5 { pt3dadd( -17.3001, -149.821, 17.9591, 0.67 ) }
    apic_5 { pt3dadd( -16.4942, -150.447, 19.1083, 0.67 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 31/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 30.7894, 57.8062, -98.756, 0.67 ) }
    dend_58 { pt3dadd( 29.9282, 65.546, -103.819, 0.67 ) }
    dend_58 { pt3dadd( 29.7553, 67.5043, -105.041, 0.67 ) }
    dend_58 { pt3dadd( 29.5388, 69.4955, -106.145, 1.33 ) }
    dend_58 { pt3dadd( 29.1676, 73.9775, -108.351, 0.33 ) }
    dend_58 { pt3dadd( 29.0448, 76.7843, -109.649, 0.33 ) }
    dend_58 { pt3dadd( 29.0621, 78.2541, -110.301, 0.67 ) }
    dend_58 { pt3dadd( 29.4329, 81.5517, -111.565, 0.33 ) }
    dend_58 { pt3dadd( 30.1834, 84.8139, -113.321, 0.33 ) }
    dend_58 { pt3dadd( 30.9305, 87.0977, -114.809, 0.67 ) }
    dend_58 { pt3dadd( 32.3081, 90.1886, -117.055, 0.33 ) }
    dend_58 { pt3dadd( 33.4075, 92.167, -118.705, 0.67 ) }
    dend_58 { pt3dadd( 35.5671, 95.4145, -121.595, 0.67 ) }
    dend_58 { pt3dadd( 39.4287, 100.528, -126.181, 0.33 ) }
    dend_58 { pt3dadd( 40.2012, 101.504, -127.067, 0.67 ) }
    dend_58 { pt3dadd( 41.4393, 103.177, -128.516, 0.67 ) }
    dend_58 { pt3dadd( 43.1755, 105.826, -130.442, 0.33 ) }
    dend_58 { pt3dadd( 43.9329, 107.191, -131.351, 0.67 ) }
    dend_58 { pt3dadd( 45.1883, 109.975, -132.818, 0.33 ) }
    dend_58 { pt3dadd( 46.1465, 112.319, -133.902, 0.33 ) }
    dend_58 { pt3dadd( 46.6731, 113.527, -134.485, 0.67 ) }
    dend_58 { pt3dadd( 47.6977, 115.815, -135.618, 0.67 ) }
    dend_58 { pt3dadd( 50.1858, 121.046, -138.215, 0.33 ) }
    dend_58 { pt3dadd( 51.0959, 122.673, -139.316, 0.33 ) }
    dend_58 { pt3dadd( 51.9292, 123.885, -140.364, 0.67 ) }
    dend_58 { pt3dadd( 53.1879, 125.443, -141.908, 0.33 ) }
    dend_58 { pt3dadd( 54.0907, 126.539, -143.014, 0.33 ) }
    dend_58 { pt3dadd( 54.9585, 127.614, -144.068, 0.67 ) }
    dend_58 { pt3dadd( 57.1761, 130.783, -146.313, 0.67 ) }
    dend_58 { pt3dadd( 57.5562, 131.363, -146.733, 0.33 ) }
    dend_58 { pt3dadd( 57.9815, 131.979, -146.992, 0.67 ) }
    dend_58 { pt3dadd( 59.4389, 133.888, -147.326, 0.33 ) }
    dend_58 { pt3dadd( 59.7626, 134.288, -147.291, 0.67 ) }
    dend_58 { pt3dadd( 61.0393, 135.827, -146.929, 0.33 ) }
    dend_58 { pt3dadd( 61.2722, 136.081, -146.851, 0.67 ) }
    dend_58 { pt3dadd( 66.0084, 140.999, -145.368, 0.33 ) }
    dend_58 { pt3dadd( 66.0084, 140.999, -145.368, 0.67 ) }
    dend_58 { pt3dadd( 68.7308, 143.672, -144.637, 0.33 ) }
    dend_58 { pt3dadd( 69.4975, 144.411, -144.454, 1.33 ) }
    dend_58 { pt3dadd( 71.9067, 146.737, -144.289, 0.33 ) }
    dend_58 { pt3dadd( 72.71, 147.54, -144.4, 0.67 ) }
    dend_58 { pt3dadd( 73.5016, 148.465, -144.809, 0.33 ) }
    dend_58 { pt3dadd( 74.7889, 149.927, -145.608, 0.67 ) }
    dend_58 { pt3dadd( 75.4654, 150.668, -146.147, 0.33 ) }
    dend_58 { pt3dadd( 78.8394, 154.371, -149.213, 0.33 ) }
    dend_58 { pt3dadd( 79.0226, 154.597, -149.43, 0.67 ) }
    dend_58 { pt3dadd( 80.5927, 156.466, -151.505, 0.33 ) }
    dend_58 { pt3dadd( 81.2625, 157.291, -152.557, 0.67 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 79/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 30.7894, 57.8062, -98.756, 0.67 ) }
    dend_57 { pt3dadd( 32.7631, 58.9255, -100.237, 0.67 ) }
    dend_57 { pt3dadd( 33.8298, 59.5304, -101.038, 0.67 ) }
    dend_57 { pt3dadd( 35.1759, 60.2939, -102.049, 0.33 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 83/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -62.9543, 84.5458, -14.2202, 0.67 ) }
    dend_51 { pt3dadd( -67.6092, 86.4544, -14.6505, 0.67 ) }
    dend_51 { pt3dadd( -70.9595, 87.6673, -14.9328, 0.33 ) }
    dend_51 { pt3dadd( -73.0974, 88.4413, -15.113, 0.33 ) }
    dend_51 { pt3dadd( -75.2142, 89.2076, -15.2913, 0.67 ) }
    dend_51 { pt3dadd( -77.7258, 90.1169, -15.503, 0.33 ) }
    dend_51 { pt3dadd( -80.0948, 90.9744, -15.7026, 0.67 ) }
    dend_51 { pt3dadd( -83.4394, 92.0549, -15.992, 0.33 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 91/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -62.9543, 84.5458, -14.2202, 0.67 ) }
    dend_48 { pt3dadd( -66.8933, 89.7484, -13.9382, 0.67 ) }
    dend_48 { pt3dadd( -69.689, 93.1537, -13.4271, 0.67 ) }
    dend_48 { pt3dadd( -75.6158, 99.9397, -12.0607, 0.67 ) }
    dend_48 { pt3dadd( -78.7277, 103.302, -11.3059, 0.67 ) }
    dend_48 { pt3dadd( -85.0001, 109.68, -9.81643, 0.67 ) }
    dend_48 { pt3dadd( -87.7397, 112.32, -9.10016, 0.67 ) }
    dend_48 { pt3dadd( -91.6528, 115.835, -7.84324, 0.33 ) }
    dend_48 { pt3dadd( -93.9579, 117.861, -6.94327, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -96.3557, 119.693, -5.91032, 0.33 ) }
    dend_48 { pt3dadd( -97.8896, 120.876, -5.26255, 0.33 ) }
    dend_48 { pt3dadd( -102.306, 123.973, -3.51507, 0.67 ) }
    dend_48 { pt3dadd( -103.609, 124.963, -3.13525, 0.67 ) }
    dend_48 { pt3dadd( -104.824, 126.113, -2.8584, 0.33 ) }
    dend_48 { pt3dadd( -106.053, 127.415, -2.49223, 1.33 ) }
    dend_48 { pt3dadd( -109.019, 131.194, -1.4054, 0.33 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 7/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -53.9519, 61.9627, 16.1287, 0.67 ) }
    dend_44 { pt3dadd( -56.8016, 70.0231, 15.5698, 0.67 ) }
    dend_44 { pt3dadd( -60.5493, 77.6888, 16.0548, 0.67 ) }
    dend_44 { pt3dadd( -62.9025, 85.9338, 15.9351, 0.67 ) }
    dend_44 { pt3dadd( -65.9876, 93.8699, 15.0296, 0.67 ) }
    dend_44 { pt3dadd( -69.2115, 101.511, 12.9363, 0.67 ) }
    dend_44 { pt3dadd( -73.0089, 108.648, 10.2068, 0.67 ) }
    dend_44 { pt3dadd( -77.1136, 115.279, 6.78794, 0.67 ) }
    dend_44 { pt3dadd( -82.4983, 121.398, 4.40488, 0.67 ) }
    dend_44 { pt3dadd( -86.8857, 128.466, 2.53036, 0.67 ) }
    dend_44 { pt3dadd( -92.7864, 134.349, 0.940212, 0.67 ) }
    dend_44 { pt3dadd( -99.7741, 138.875, -0.456154, 0.67 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 19/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -53.9519, 61.9627, 16.1287, 0.67 ) }
    dend_43 { pt3dadd( -56.3946, 71.5163, 16.9344, 0.67 ) }
    dend_43 { pt3dadd( -58.2977, 81.1031, 18.4575, 0.67 ) }
    dend_43 { pt3dadd( -59.8732, 90.5625, 20.8435, 0.67 ) }
    dend_43 { pt3dadd( -61.9062, 99.2896, 24.9184, 0.67 ) }
    dend_43 { pt3dadd( -62.9876, 108.409, 28.5135, 0.67 ) }
    dend_43 { pt3dadd( -62.4568, 117.028, 33.2249, 0.67 ) }
    dend_43 { pt3dadd( -60.7229, 125.164, 38.437, 0.67 ) }
    dend_43 { pt3dadd( -59.9488, 133.199, 44.0139, 0.67 ) }
    dend_43 { pt3dadd( -57.8318, 141.477, 48.8606, 0.67 ) }
    dend_43 { pt3dadd( -55.1214, 148.882, 54.6611, 0.67 ) }
    dend_43 { pt3dadd( -52.3674, 156.286, 60.4419, 0.67 ) }
    dend_43 { pt3dadd( -49.2798, 164.069, 65.5444, 0.67 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 32/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 28.0401, -15.2827, -23.443, 0.67 ) }
    dend_35 { pt3dadd( 29.6685, -13.8809, -25.3972, 0.67 ) }
    dend_35 { pt3dadd( 30.5324, -13.9378, -26.6263, 1.33 ) }
    dend_35 { pt3dadd( 31.8771, -14.0452, -28.4473, 0.67 ) }
    dend_35 { pt3dadd( 32.8574, -14.1004, -29.4661, 1.33 ) }
    dend_35 { pt3dadd( 34.4862, -14.233, -30.8519, 0.33 ) }
    dend_35 { pt3dadd( 35.3912, -14.3113, -31.5305, 1.33 ) }
    dend_35 { pt3dadd( 42.7415, -14.9559, -36.1448, 0.33 ) }
    dend_35 { pt3dadd( 44.6649, -15.1469, -37.3862, 0.33 ) }
    dend_35 { pt3dadd( 49.3378, -15.7453, -40.3726, 0.33 ) }
    dend_35 { pt3dadd( 52.0854, -16.0837, -42.051, 0.33 ) }
    dend_35 { pt3dadd( 53.5435, -16.2458, -42.904, 0.67 ) }
    dend_35 { pt3dadd( 56.5206, -16.581, -44.4936, 0.67 ) }
    dend_35 { pt3dadd( 61.3479, -17.0425, -46.5217, 0.33 ) }
    dend_35 { pt3dadd( 63.4153, -17.3097, -47.4229, 0.33 ) }
    dend_35 { pt3dadd( 65.1625, -17.5605, -48.2283, 0.67 ) }
    dend_35 { pt3dadd( 66.8252, -17.843, -49.0499, 0.67 ) }
    dend_35 { pt3dadd( 69.1578, -18.4041, -50.1307, 0.33 ) }
    dend_35 { pt3dadd( 71.3588, -18.9313, -51.0461, 0.67 ) }
    dend_35 { pt3dadd( 73.7769, -19.4035, -52.0034, 0.33 ) }
    dend_35 { pt3dadd( 74.5812, -19.5236, -52.3705, 0.67 ) }
    dend_35 { pt3dadd( 78.9631, -20.1774, -54.9619, 0.33 ) }
    dend_35 { pt3dadd( 80.5085, -20.3427, -56.0467, 0.33 ) }
    dend_35 { pt3dadd( 83.2861, -20.4888, -58.142, 0.33 ) }
    dend_35 { pt3dadd( 86.3106, -20.5457, -60.6008, 0.33 ) }
    dend_35 { pt3dadd( 87.4957, -20.5364, -61.5659, 0.67 ) }
    dend_35 { pt3dadd( 91.9422, -20.4615, -64.7927, 0.33 ) }
    dend_35 { pt3dadd( 93.1017, -20.4218, -65.5212, 0.33 ) }
    dend_35 { pt3dadd( 96.1706, -20.6609, -66.9204, 0.33 ) }
    dend_35 { pt3dadd( 96.5217, -20.7335, -67.0196, 0.67 ) }
    dend_35 { pt3dadd( 98.4933, -21.2239, -67.3322, 0.33 ) }
    dend_35 { pt3dadd( 103.089, -22.3396, -67.821, 0.33 ) }
    dend_35 { pt3dadd( 103.449, -22.4264, -67.8404, 0.67 ) }
    dend_35 { pt3dadd( 110.9, -24.2787, -68.2687, 0.33 ) }
    dend_35 { pt3dadd( 113.215, -24.8146, -68.4282, 0.33 ) }
    dend_35 { pt3dadd( 114.044, -24.9905, -68.5034, 0.67 ) }
    dend_35 { pt3dadd( 121.888, -26.3396, -69.3214, 0.33 ) }
    dend_35 { pt3dadd( 122.255, -26.3761, -69.3669, 0.67 ) }
    dend_35 { pt3dadd( 125.384, -26.5225, -70.041, 0.33 ) }
    dend_35 { pt3dadd( 127.185, -26.4534, -70.6362, 0.33 ) }
    dend_35 { pt3dadd( 128.191, -26.3956, -71.0275, 0.67 ) }
    dend_35 { pt3dadd( 131.201, -26.2377, -72.3069, 0.33 ) }
    dend_35 { pt3dadd( 132.132, -26.1643, -72.8157, 0.67 ) }
    dend_35 { pt3dadd( 137.726, -25.5891, -76.2629, 0.33 ) }
    dend_35 { pt3dadd( 139.082, -25.4047, -77.3073, 0.67 ) }
    dend_35 { pt3dadd( 139.619, -25.3482, -77.7777, 0.67 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 78/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 28.0401, -15.2827, -23.443, 0.33 ) }
    dend_34 { pt3dadd( 29.0089, -20.0189, -23.8334, 0.33 ) }
    dend_34 { pt3dadd( 29.1183, -20.5597, -23.9627, 0.67 ) }
    dend_34 { pt3dadd( 29.6763, -23.4129, -24.7279, 0.67 ) }
    dend_34 { pt3dadd( 30.6882, -28.6475, -26.1402, 0.67 ) }
    dend_34 { pt3dadd( 31.3689, -32.1208, -27.2021, 0.67 ) }
    dend_34 { pt3dadd( 31.5845, -33.1601, -27.5369, 1.33 ) }
    dend_34 { pt3dadd( 32.8668, -39.2603, -30.047, 0.67 ) }
    dend_34 { pt3dadd( 33.2232, -40.924, -30.8144, 0.33 ) }
    dend_34 { pt3dadd( 33.3872, -41.6409, -31.1864, 0.67 ) }
    dend_34 { pt3dadd( 34.3767, -45.4827, -33.2849, 0.33 ) }
    dend_34 { pt3dadd( 34.5681, -46.1596, -33.7115, 1.33 ) }
    dend_34 { pt3dadd( 35.8512, -50.7141, -36.5645, 0.33 ) }
    dend_34 { pt3dadd( 36.2045, -51.8371, -37.184, 0.33 ) }
    dend_34 { pt3dadd( 36.5529, -52.8852, -37.8559, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 93/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 12.5915, 14.3137, -37.7854, 0.67 ) }
    dend_28 { pt3dadd( 13.1513, 16.4737, -40.8774, 0.67 ) }
    dend_28 { pt3dadd( 13.3788, 17.3512, -42.1333, 0.67 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 96/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 12.5915, 14.3137, -37.7854, 0.67 ) }
    dend_25 { pt3dadd( 9.91671, 14.6545, -40.7508, 0.67 ) }
    dend_25 { pt3dadd( 7.37338, 14.9786, -43.5704, 0.67 ) }
    dend_25 { pt3dadd( 4.43955, 15.3525, -46.823, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_25 { pt3dadd( -2.86386, 16.2831, -54.9198, 0.67 ) }
    dend_25 { pt3dadd( -5.57779, 16.629, -57.9286, 1.33 ) }
    dend_25 { pt3dadd( -6.6234, 16.7621, -59.0878, 1.33 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 3/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 47.4861, 11.9937, 101.337, 0.67 ) }
    dend_17 { pt3dadd( 49.8211, 10.8932, 115.55, 0.67 ) }
    dend_17 { pt3dadd( 51.2142, 10.4759, 129.942, 0.67 ) }
    dend_17 { pt3dadd( 50.2129, 8.39062, 144.214, 0.67 ) }
    dend_17 { pt3dadd( 51.1698, 5.53876, 158.329, 0.67 ) }
    dend_17 { pt3dadd( 53.8254, 4.05628, 172.443, 0.67 ) }
    dend_17 { pt3dadd( 54.6509, 4.01084, 186.897, 0.67 ) }
    dend_17 { pt3dadd( 56.9262, 4.96036, 201.165, 0.67 ) }
    dend_17 { pt3dadd( 59.2032, 4.49839, 215.433, 0.67 ) }
    dend_17 { pt3dadd( 63.5036, 4.00702, 229.205, 0.67 ) }
    dend_17 { pt3dadd( 69.4834, 2.33023, 242.209, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 14/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 47.4861, 11.9937, 101.337, 0.67 ) }
    dend_16 { pt3dadd( 48.7828, 11.7621, 111.423, 0.67 ) }
    dend_16 { pt3dadd( 50.4485, 11.6374, 121.455, 0.67 ) }
    dend_16 { pt3dadd( 49.9913, 12.7832, 131.601, 0.67 ) }
    dend_16 { pt3dadd( 51.7098, 14.0446, 141.566, 0.67 ) }
    dend_16 { pt3dadd( 54.9461, 15.7855, 151.054, 0.67 ) }
    dend_16 { pt3dadd( 57.045, 17.5707, 160.868, 0.67 ) }
    dend_16 { pt3dadd( 57.878, 19.2001, 170.913, 0.67 ) }
    dend_16 { pt3dadd( 58.373, 20.3118, 181.046, 0.67 ) }
    dend_16 { pt3dadd( 57.6551, 20.462, 191.225, 0.67 ) }
    dend_16 { pt3dadd( 55.7875, 19.9468, 201.245, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 81.7744, -107.132, 11.5931, 0.67 ) }
    dend_12 { pt3dadd( 86.1114, -115.912, 13.8171, 0.67 ) }
    dend_12 { pt3dadd( 90.7229, -124.742, 14.9144, 0.67 ) }
    dend_12 { pt3dadd( 94.9082, -133.725, 16.5078, 0.67 ) }
    dend_12 { pt3dadd( 99.3284, -142.692, 17.1869, 0.67 ) }
    dend_12 { pt3dadd( 102.479, -152.208, 17.043, 0.67 ) }
    dend_12 { pt3dadd( 104.305, -161.799, 14.9077, 0.67 ) }
    dend_12 { pt3dadd( 104.968, -171.724, 13.6935, 0.67 ) }
    dend_12 { pt3dadd( 103.644, -181.386, 11.5052, 0.67 ) }
    dend_12 { pt3dadd( 101.867, -190.963, 9.27613, 0.67 ) }
    dend_12 { pt3dadd( 98.8184, -200.014, 6.42661, 0.67 ) }
    dend_12 { pt3dadd( 94.3142, -208.857, 5.31258, 0.67 ) }
    dend_12 { pt3dadd( 91.1656, -218.373, 5.87486, 0.67 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 38/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 81.7744, -107.132, 11.5931, 0.67 ) }
    dend_11 { pt3dadd( 87.6736, -114.922, 9.44319, 0.67 ) }
    dend_11 { pt3dadd( 92.967, -122.73, 6.1606, 0.67 ) }
    dend_11 { pt3dadd( 99.2686, -130.026, 3.54723, 0.67 ) }
    dend_11 { pt3dadd( 104.961, -136.765, -1.06723, 0.67 ) }
    dend_11 { pt3dadd( 110.475, -143.524, -5.86223, 0.67 ) }
    dend_11 { pt3dadd( 116.055, -151.06, -9.28455, 0.67 ) }
    dend_11 { pt3dadd( 120.256, -159.294, -13.0677, 0.67 ) }
    dend_11 { pt3dadd( 123.564, -167.533, -17.6187, 0.67 ) }
    dend_11 { pt3dadd( 126.955, -174.308, -24.0536, 0.67 ) }
    dend_11 { pt3dadd( 130.704, -180.139, -31.1644, 0.67 ) }
    dend_11 { pt3dadd( 134.716, -186.765, -37.3944, 0.67 ) }
    // Section: apic_8, id: apic_8, parent: apic_6 (entry count 50/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -26.9163, -172.575, 20.1296, 0.33 ) }
    apic_8 { pt3dadd( -28.8247, -172.915, 21.446, 0.33 ) }
    apic_8 { pt3dadd( -29.7861, -173.087, 22.1091, 0.33 ) }
    apic_8 { pt3dadd( -30.6198, -173.235, 22.6841, 0.33 ) }
    apic_8 { pt3dadd( -31.9734, -173.477, 23.6178, 0.67 ) }
    apic_8 { pt3dadd( -33.6025, -173.767, 24.7415, 0.67 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 56/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -26.9163, -172.575, 20.1296, 0.67 ) }
    apic_7 { pt3dadd( -26.019, -175.162, 19.2564, 0.67 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 58/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -83.4394, 92.0549, -15.992, 0.33 ) }
    dend_53 { pt3dadd( -87.2281, 93.4215, -16.4001, 0.33 ) }
    dend_53 { pt3dadd( -87.8955, 93.5529, -16.4521, 0.67 ) }
    dend_53 { pt3dadd( -90.6019, 93.9158, -16.637, 0.33 ) }
    dend_53 { pt3dadd( -91.8914, 94.0358, -16.7894, 0.67 ) }
    dend_53 { pt3dadd( -94.275, 94.1667, -17.1316, 0.33 ) }
    dend_53 { pt3dadd( -95.9827, 94.2606, -17.3768, 0.67 ) }
    dend_53 { pt3dadd( -100.28, 94.1446, -17.9117, 0.33 ) }
    dend_53 { pt3dadd( -100.993, 94.0913, -18.0123, 0.67 ) }
    dend_53 { pt3dadd( -103.698, 93.6896, -18.4765, 0.67 ) }
    dend_53 { pt3dadd( -104.734, 93.5259, -18.6992, 0.67 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 69/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -83.4394, 92.0549, -15.992, 0.67 ) }
    dend_52 { pt3dadd( -85.0842, 90.7588, -16.5889, 0.67 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 71/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -109.019, 131.194, -1.4054, 0.33 ) }
    dend_50 { pt3dadd( -110.095, 132.085, -1.04886, 0.33 ) }
    dend_50 { pt3dadd( -110.905, 132.756, -0.780148, 0.33 ) }
    dend_50 { pt3dadd( -113.464, 134.876, 0.0682321, 0.33 ) }
    dend_50 { pt3dadd( -116.564, 137.444, 1.09607, 0.67 ) }
    dend_50 { pt3dadd( -118.368, 138.938, 1.69433, 0.33 ) }
    dend_50 { pt3dadd( -120.628, 140.81, 2.44344, 0.33 ) }
    dend_50 { pt3dadd( -129.255, 146.446, 5.70849, 0.33 ) }
    dend_50 { pt3dadd( -137.582, 152.355, 9.2892, 0.33 ) }
    dend_50 { pt3dadd( -145.781, 158.626, 12.5618, 0.33 ) }
    dend_50 { pt3dadd( -153.323, 166.073, 14.9241, 0.33 ) }
    dend_50 { pt3dadd( -158.896, 175.346, 16.3651, 0.33 ) }
    dend_50 { pt3dadd( -164.731, 184.548, 16.3716, 0.33 ) }
    dend_50 { pt3dadd( -168.828, 194.596, 15.2047, 0.33 ) }
    dend_50 { pt3dadd( -173.131, 204.145, 12.2764, 0.33 ) }
    dend_50 { pt3dadd( -175.381, 214.469, 9.58746, 0.33 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 87/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -109.019, 131.194, -1.4054, 0.67 ) }
    dend_49 { pt3dadd( -110.194, 129.582, -2.27837, 0.67 ) }
    dend_49 { pt3dadd( -114.924, 120.997, -5.14016, 0.67 ) }
    dend_49 { pt3dadd( -120.368, 112.626, -7.18957, 0.67 ) }
    dend_49 { pt3dadd( -126.434, 104.786, -9.48631, 0.67 ) }
    dend_49 { pt3dadd( -131.936, 96.4898, -11.6714, 0.67 ) }
    dend_49 { pt3dadd( -137.035, 87.7155, -12.6968, 0.67 ) }
    dend_49 { pt3dadd( -141.001, 78.3121, -13.3037, 0.67 ) }
    dend_49 { pt3dadd( -145.505, 69.5488, -16.0087, 0.67 ) }
    dend_49 { pt3dadd( -148.453, 60.1513, -18.8493, 0.67 ) }
    dend_49 { pt3dadd( -152.479, 50.8332, -20.0926, 0.67 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 98/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 13.3788, 17.3512, -42.1333, 0.67 ) }
    dend_32 { pt3dadd( 15.1982, 20.6653, -43.047, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_32 { pt3dadd( 15.5274, 21.229, -43.3295, 0.67 ) }
    dend_32 { pt3dadd( 17.3664, 24.0891, -44.8317, 0.67 ) }
    dend_32 { pt3dadd( 18.452, 25.7255, -45.6713, 0.33 ) }
    dend_32 { pt3dadd( 19.3783, 27.2218, -46.3907, 0.33 ) }
    dend_32 { pt3dadd( 21.078, 30.3729, -47.7703, 0.67 ) }
    dend_32 { pt3dadd( 23.3165, 34.7379, -49.5809, 0.67 ) }
    dend_32 { pt3dadd( 25.0099, 38.3378, -51.2547, 0.67 ) }
    dend_32 { pt3dadd( 25.6914, 39.9768, -52.1567, 0.33 ) }
    dend_32 { pt3dadd( 26.4009, 42.0648, -53.3129, 0.67 ) }
    dend_32 { pt3dadd( 27.1474, 44.8423, -54.8355, 0.67 ) }
    dend_32 { pt3dadd( 27.4139, 46.416, -55.615, 0.67 ) }
    dend_32 { pt3dadd( 27.5847, 50.367, -58.3274, 0.67 ) }
    dend_32 { pt3dadd( 27.6102, 52.687, -60.4024, 0.67 ) }
    dend_32 { pt3dadd( 27.6274, 54.8412, -62.7241, 0.67 ) }
    dend_32 { pt3dadd( 27.7318, 56.2262, -64.4443, 0.67 ) }
    dend_32 { pt3dadd( 27.9325, 57.4868, -66.1415, 1.33 ) }
    dend_32 { pt3dadd( 28.8982, 62.0938, -72.0944, 0.67 ) }
    dend_32 { pt3dadd( 29.207, 63.7613, -73.9947, 0.67 ) }
    dend_32 { pt3dadd( 29.7669, 66.3837, -76.8583, 0.33 ) }
    dend_32 { pt3dadd( 30.1043, 67.5684, -78.1206, 0.67 ) }
    dend_32 { pt3dadd( 30.509, 68.8622, -79.4259, 1.33 ) }
    dend_32 { pt3dadd( 31.688, 72.3772, -82.5948, 0.33 ) }
    dend_32 { pt3dadd( 32.5296, 74.7685, -84.1798, 0.33 ) }
    dend_32 { pt3dadd( 32.5296, 74.7685, -84.1798, 0.67 ) }
    dend_32 { pt3dadd( 33.2477, 76.6103, -85.2652, 0.33 ) }
    dend_32 { pt3dadd( 34.1879, 79.4767, -86.7695, 0.67 ) }
    dend_32 { pt3dadd( 34.8557, 81.6553, -87.8224, 0.33 ) }
    dend_32 { pt3dadd( 35.3418, 83.204, -88.7977, 0.33 ) }
    dend_32 { pt3dadd( 35.5775, 83.8149, -89.252, 0.67 ) }
    dend_32 { pt3dadd( 36.3996, 86.04, -90.9303, 0.33 ) }
    dend_32 { pt3dadd( 37.0176, 87.8743, -92.2781, 0.33 ) }
    dend_32 { pt3dadd( 37.6165, 89.7152, -93.5479, 0.67 ) }
    dend_32 { pt3dadd( 39.5073, 95.7307, -97.736, 0.33 ) }
    dend_32 { pt3dadd( 40.1211, 97.489, -98.9507, 0.33 ) }
    dend_32 { pt3dadd( 41.0564, 99.4767, -100.469, 0.67 ) }
    dend_32 { pt3dadd( 41.8746, 100.781, -101.586, 0.33 ) }
    dend_32 { pt3dadd( 42.3808, 101.416, -102.134, 0.67 ) }
    dend_32 { pt3dadd( 43.3583, 102.38, -102.897, 0.33 ) }
    dend_32 { pt3dadd( 44.7498, 103.553, -103.678, 0.67 ) }
    dend_32 { pt3dadd( 47.7339, 105.992, -105.563, 0.33 ) }
    dend_32 { pt3dadd( 48.2281, 106.347, -105.902, 1.33 ) }
    dend_32 { pt3dadd( 51.9369, 108.767, -108.508, 0.33 ) }
    dend_32 { pt3dadd( 53.4282, 109.762, -109.578, 0.33 ) }
    dend_32 { pt3dadd( 53.9814, 110.135, -109.977, 0.67 ) }
    dend_32 { pt3dadd( 55.9316, 111.42, -111.267, 0.33 ) }
    dend_32 { pt3dadd( 57.3398, 112.399, -112.062, 0.67 ) }
    dend_32 { pt3dadd( 58.3666, 113.135, -112.745, 0.33 ) }
    dend_32 { pt3dadd( 59.565, 114.079, -113.83, 0.33 ) }
    dend_32 { pt3dadd( 59.9926, 114.516, -114.296, 0.67 ) }
    dend_32 { pt3dadd( 61.2417, 116.144, -115.658, 0.33 ) }
    dend_32 { pt3dadd( 61.5689, 116.744, -116.037, 0.67 ) }
    dend_32 { pt3dadd( 62.9331, 120.618, -118.008, 0.33 ) }
    dend_32 { pt3dadd( 63.6082, 123.102, -119.246, 0.67 ) }
    dend_32 { pt3dadd( 64.0916, 125.475, -120.409, 0.33 ) }
    dend_32 { pt3dadd( 64.4555, 128.861, -121.903, 0.33 ) }
    dend_32 { pt3dadd( 64.4247, 130.281, -122.411, 0.33 ) }
    dend_32 { pt3dadd( 64.3283, 131.265, -122.604, 0.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 57/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 13.3788, 17.3512, -42.1333, 0.33 ) }
    dend_29 { pt3dadd( 16.1477, 18.514, -46.2681, 0.33 ) }
    dend_29 { pt3dadd( 16.5603, 18.6873, -46.8842, 0.67 ) }
    dend_29 { pt3dadd( 17.5761, 19.1138, -48.401, 0.33 ) }
    dend_29 { pt3dadd( 20.1405, 20.1908, -52.2303, 0.67 ) }
    dend_29 { pt3dadd( 20.9709, 20.5394, -53.4703, 0.67 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -6.6234, 16.7621, -59.0878, 0.67 ) }
    dend_27 { pt3dadd( -7.50193, 18.3409, -61.7553, 0.67 ) }
    dend_27 { pt3dadd( -8.68699, 19.8869, -65.7639, 0.67 ) }
    dend_27 { pt3dadd( -9.29644, 20.2292, -67.7926, 1.33 ) }
    dend_27 { pt3dadd( -10.5328, 20.3318, -71.6952, 0.33 ) }
    dend_27 { pt3dadd( -11.1848, 20.2411, -73.5583, 1.33 ) }
    dend_27 { pt3dadd( -17.0797, 19.4282, -88.1881, 0.67 ) }
    dend_27 { pt3dadd( -18.12, 19.1109, -90.6182, 0.67 ) }
    dend_27 { pt3dadd( -21.5691, 17.4363, -98.6452, 1.33 ) }
    dend_27 { pt3dadd( -24.6494, 15.687, -105.363, 0.67 ) }
    dend_27 { pt3dadd( -26.1145, 14.7015, -108.389, 0.33 ) }
    dend_27 { pt3dadd( -29.1996, 12.3721, -113.765, 1.33 ) }
    dend_27 { pt3dadd( -34.1409, 8.21957, -119.481, 0.67 ) }
    dend_27 { pt3dadd( -35.0371, 7.16794, -120.58, 0.33 ) }
    dend_27 { pt3dadd( -36.48, 5.06275, -122.115, 0.33 ) }
    dend_27 { pt3dadd( -37.1077, 3.34053, -122.985, 0.67 ) }
    dend_27 { pt3dadd( -37.3804, 1.03598, -124.108, 0.67 ) }
    dend_27 { pt3dadd( -37.3942, -1.25787, -125.228, 0.67 ) }
    dend_27 { pt3dadd( -35.9213, -8.86862, -126.746, 0.33 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 82/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -6.6234, 16.7621, -59.0878, 0.67 ) }
    dend_26 { pt3dadd( -5.91089, 21.7057, -63.1866, 0.67 ) }
    dend_26 { pt3dadd( -5.4543, 23.9347, -65.0856, 0.67 ) }
    dend_26 { pt3dadd( -5.23306, 24.8362, -65.8729, 0.67 ) }
    dend_26 { pt3dadd( -4.54459, 27.44, -68.1727, 0.33 ) }
    dend_26 { pt3dadd( -4.40835, 28.8545, -69.3971, 0.67 ) }
    dend_26 { pt3dadd( -3.49961, 30.0758, -70.8631, 0.33 ) }
    dend_26 { pt3dadd( -0.847166, 28.6604, -70.9223, 0.33 ) }
    dend_26 { pt3dadd( -0.210541, 28.2572, -70.9058, 0.67 ) }
    dend_26 { pt3dadd( 1.46444, 27.1256, -70.7958, 0.33 ) }
    dend_26 { pt3dadd( 4.363, 25.0856, -70.4458, 0.67 ) }
    dend_26 { pt3dadd( 8.96519, 21.3382, -69.8853, 0.67 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 94/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 20.9709, 20.5394, -53.4703, 0.67 ) }
    dend_31 { pt3dadd( 22.0412, 22.3318, -54.0104, 0.67 ) }
    dend_31 { pt3dadd( 23.4391, 24.6728, -54.7158, 0.67 ) }
    dend_31 { pt3dadd( 24.7468, 26.8628, -55.3757, 0.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 98/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 20.9709, 20.5394, -53.4703, 0.33 ) }
    dend_30 { pt3dadd( 22.5011, 20.1467, -55.0997, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_30 { pt3dadd( 26.0577, 19.2926, -59.1101, 0.33 ) }
    dend_30 { pt3dadd( 27.6569, 18.9522, -60.8446, 0.33 ) }
    dend_30 { pt3dadd( 29.2732, 18.6492, -62.8141, 0.67 ) }
    dend_30 { pt3dadd( 31.5318, 18.2255, -65.5663, 0.33 ) }
    dend_30 { pt3dadd( 32.3452, 18.073, -66.5574, 0.33 ) }
    dend_30 { pt3dadd( 33.5686, 17.9738, -68.107, 0.67 ) }
    dend_30 { pt3dadd( 34.99, 17.9099, -70.0448, 0.33 ) }
    dend_30 { pt3dadd( 36.764, 17.8997, -72.9018, 0.67 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_54, dend_39, dend_36, dend_19, dend_8, dend_1, dend_0, apic_2, apic_1, dend_60, dend_55, dend_45, dend_40, dend_38, dend_37, dend_23, dend_20, dend_14, dend_9, dend_5, dend_2, apic_4, apic_3, dend_62, dend_61, dend_59, dend_56, dend_47, dend_46, dend_42, dend_41, dend_33, dend_24, dend_22, dend_21, dend_18, dend_15, dend_13, dend_10, dend_7, dend_6, dend_4, dend_3, apic_6, apic_5, dend_58, dend_57, dend_51, dend_48, dend_44, dend_43, dend_35, dend_34, dend_28, dend_25, dend_17, dend_16, dend_12, dend_11, apic_8, apic_7, dend_53, dend_52, dend_50, dend_49, dend_32, dend_29, dend_27, dend_26, dend_31, dend_30]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_54, dend_39, dend_36, dend_19, dend_8, dend_1, dend_0, apic_2, apic_1, dend_60, dend_55, dend_45, dend_40, dend_38, dend_37, dend_23, dend_20, dend_14, dend_9, dend_5, dend_2, apic_4, apic_3, dend_62, dend_61, dend_59, dend_56, dend_47, dend_46, dend_42, dend_41, dend_33, dend_24, dend_22, dend_21, dend_18, dend_15, dend_13, dend_10, dend_7, dend_6, dend_4, dend_3, apic_6, apic_5, dend_58, dend_57, dend_51, dend_48, dend_44, dend_43, dend_35, dend_34, dend_28, dend_25, dend_17, dend_16, dend_12, dend_11, apic_8, apic_7, dend_53, dend_52, dend_50, dend_49, dend_32, dend_29, dend_27, dend_26, dend_31, dend_30]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_4 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    apic_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_45 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_40 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_38 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_37 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_20 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_9 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_5 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_4 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_27 = new SectionList()
    apic_3 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_62 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_59 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_56 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_46 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_21 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_18 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_15 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_10 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_7 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_6 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_4 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_3 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_58 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_48 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_44 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_43 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_35 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_34 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_17 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_16 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_12 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_11 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_50 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_49 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_32 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_27 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_19 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_39 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_54 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_36 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_23 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_60 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_11 = new SectionList()
    apic_2 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_8 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_33 OneSecGrp_SectionRef_36.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_61 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_55 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_28 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_29 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_31 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_41 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_25 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_42 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_30 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_13 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_22 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_47 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_26 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_57 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_51 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_52 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_53 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_49 = new SectionList()
    apic_5 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_48 = new SectionList()
    apic_6 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_65 = new SectionList()
    apic_7 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_64 = new SectionList()
    apic_8 OneSecGrp_SectionRef_64.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, dend_54, dend_54, dend_39, dend_39, dend_36, dend_36, dend_19, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, axon_1, axon_1, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_19 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_7 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_53 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 9
    apic_1 nseg = 3
    dend_45 nseg = 3
    dend_40 nseg = 3
    dend_38 nseg = 13
    dend_37 nseg = 7
    dend_20 nseg = 3
    dend_9 nseg = 3
    dend_5 nseg = 3
    apic_4 nseg = 7
    apic_3 nseg = 7
    dend_62 nseg = 11
    dend_59 nseg = 3
    dend_56 nseg = 3
    dend_46 nseg = 3
    dend_21 nseg = 11
    dend_18 nseg = 9
    dend_15 nseg = 3
    dend_10 nseg = 5
    dend_7 nseg = 11
    dend_6 nseg = 11
    dend_4 nseg = 5
    dend_3 nseg = 3
    dend_58 nseg = 7
    dend_48 nseg = 3
    dend_44 nseg = 5
    dend_43 nseg = 5
    dend_35 nseg = 7
    dend_34 nseg = 3
    dend_17 nseg = 7
    dend_16 nseg = 5
    dend_12 nseg = 7
    dend_11 nseg = 5
    dend_50 nseg = 5
    dend_49 nseg = 5
    dend_32 nseg = 7
    dend_27 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_NBC_0bf743ff25_0_0


