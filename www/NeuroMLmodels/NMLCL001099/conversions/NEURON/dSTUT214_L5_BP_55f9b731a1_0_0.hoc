// Cell: dSTUT214_L5_BP_55f9b731a1_0_0
/*
{
  "id" : "dSTUT214_L5_BP_55f9b731a1_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 5.92555, 2.40803, 0.83", "-3.10211, 7.89537, 2.84516, 0.83", "-5.96815, 10.0057, 3.2774, 1.11", "-7.65798, 11.2492, 3.50224, 0.83", "-9.29972, 12.4467, 3.7037, 0.83", "-10.2718, 13.1296, 3.81409, 1.11", "-13.3157, 15.2635, 4.1679, 1.11", "-18.7602, 18.9169, 4.79333, 0.83", "-20.7216, 20.1828, 4.99986, 0.83", "-22.2749, 21.1556, 5.12815, 0.83", "-23.7895, 22.1196, 5.23919, 0.83", "-25.0225, 22.9142, 5.2991, 0.55", "-25.9492, 23.4522, 5.35991, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.18455, -5.68197, 0.55", "4.80437, 6.02137, -6.28391, 0.55", "7.77006, 6.63084, -6.9462, 0.55", "9.49095, 6.78469, -7.82256, 0.83", "12.2145, 6.94842, -9.45045, 0.55", "13.5293, 7.02745, -10.2363, 1.38", "16.7619, 7.22178, -12.1684, 0.55", "18.1388, 7.15597, -13.0903, 0.83", "25.2609, 5.94914, -18.2701, 0.55", "25.9499, 5.78685, -18.84, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -7.82095, 2.42803, 1.11", "-0.683645, -9.91292, 3.21745, 1.11", "-0.731071, -13.8881, 4.71755, 1.11", "-0.750386, -15.507, 5.32849, 0.83", "-0.776047, -17.6579, 6.14015, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.22705, -1.26197, 1.11", "0.83941, 8.74179, -1.34314, 1.11", "0.902274, 10.076, -1.33398, 1.11", "0.997236, 12.253, -1.23547, 1.38", "1.00469, 12.3742, -1.22765, 1.38", "1.19179, 13.8741, -1.11322, 0.83", "1.45573, 15.4601, -0.90175, 0.83", "1.91061, 17.2506, -0.431943, 0.83", "2.17004, 17.9296, -0.164127, 0.83", "2.42647, 18.4212, 0.0832924, 1.11", "3.17775, 19.6181, 0.723319, 0.55", "4.05137, 20.8674, 1.48811, 0.83", "5.19773, 22.1516, 2.35837, 0.55", "5.78312, 22.6847, 2.75362, 0.83", "6.60063, 23.4067, 3.36973, 0.55", "7.6125, 24.3253, 4.20338, 0.55", "9.02452, 25.7081, 5.47614, 0.55", "10.5805, 27.2888, 6.88132, 0.55", "11.5599, 28.315, 7.93027, 0.55", "12.7577, 29.6129, 9.41031, 0.55", "13.0062, 29.8732, 9.74603, 0.83", "13.6618, 30.5612, 10.6929, 0.55", "14.2141, 31.0975, 11.4365, 0.83", "15.4855, 32.5629, 13.1991, 0.55", "15.9663, 33.0978, 13.7145, 0.83", "16.418, 33.4917, 14.0649, 0.55", "16.8671, 33.8305, 14.3343, 0.83", "17.8643, 34.4599, 14.8238, 0.83", "19.1846, 35.3167, 15.3511, 0.83", "19.9957, 35.8831, 15.5851, 0.55", "20.6143, 36.3735, 15.7669, 0.55", "22.2359, 37.6404, 16.2189, 0.83", "23.2837, 38.4528, 16.4678, 0.55", "24.875, 39.6425, 16.78, 0.55", "26.3335, 40.6395, 17.0069, 0.55", "27.6382, 41.4839, 17.1743, 0.55", "29.2874, 42.4726, 17.3102, 0.55", "30.2954, 42.9564, 17.3602, 0.55", "30.9836, 43.2277, 17.3114, 0.55", "31.8979, 43.4291, 17.1693, 0.55", "33.2628, 43.5182, 16.8453, 0.55", "34.1138, 43.4711, 16.6105, 0.55", "35.3569, 43.3704, 16.3548, 0.55", "37.7239, 43.2505, 16.0796, 0.55", "39.5808, 43.2383, 15.9961, 0.55", "41.5483, 43.3146, 16.0252, 0.55", "42.8095, 43.4048, 16.1437, 0.55", "46.0855, 43.9216, 16.6675, 0.55", "48.0233, 44.3698, 17.1237, 0.55", "49.4758, 44.7968, 17.6023, 0.55", "50.3584, 45.196, 17.9274, 0.55", "51.3817, 45.7904, 18.2991, 0.55", "53.1147, 46.9628, 18.7727, 0.55", "53.5124, 47.2451, 18.826, 0.55", "54.6539, 47.9996, 18.9035, 0.55", "55.703, 48.8036, 18.9705, 0.83", "56.2756, 49.2497, 18.998, 0.55", "57.1333, 50.0156, 19.0049, 0.83", "61.6443, 54.108, 20.2358, 0.83", "65.5697, 58.8044, 20.9928, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-25.9492, 23.4522, 5.35991, 0.55", "-27.6332, 24.0596, 4.67074, 0.55", "-29.4643, 24.7201, 3.92133, 0.55", "-31.6742, 25.5172, 3.01697, 0.55", "-33.4989, 26.1754, 2.2702, 0.83", "-35.028, 26.7269, 1.64442, 0.55", "-37.8662, 27.7507, 0.482872, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-25.9492, 23.4522, 5.35991, 0.55", "-28.2473, 23.8204, 5.16754, 0.55", "-30.6816, 24.1503, 5.20812, 0.55", "-33.4389, 24.5231, 5.32161, 0.55", "-37.4161, 25.0377, 5.85453, 0.55", "-40.733, 25.3862, 6.54242, 0.55", "-44.2047, 25.7068, 7.4162, 0.55", "-47.5422, 25.8141, 8.63679, 0.55", "-50.3998, 25.6481, 9.98308, 0.55", "-53.9407, 25.2154, 12.0631, 0.55", "-55.4694, 24.9263, 13.1941, 0.55", "-57.1173, 24.5997, 14.4908, 0.55", "-60.0272, 23.8, 16.6498, 0.55", "-61.587, 23.3682, 17.5445, 0.55", "-63.2205, 22.8663, 18.4738, 0.55", "-65.1722, 22.2848, 19.3742, 0.55", "-67.2964, 21.6935, 20.2911, 0.55", "-70.3308, 20.8393, 21.532, 0.55", "-74.403, 19.9462, 22.8044, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "25.9499, 5.78685, -18.84, 0.55", "30.8078, 7.27846, -19.9124, 0.55", "33.6297, 7.94744, -20.9184, 0.55", "36.4246, 8.48475, -21.9427, 0.55", "38.3395, 8.7792, -22.6363, 0.55", "41.1424, 9.14954, -23.6236, 0.55", "46.9692, 9.79641, -25.8453, 0.55", "53.5934, 10.4552, -28.8029, 0.55", "56.8252, 10.567, -30.4441, 0.55", "58.5618, 10.5778, -31.4327, 0.55", "60.4673, 10.5921, -32.5936, 0.55", "63.8739, 10.5298, -34.6453, 0.55", "65.117, 10.4359, -35.4257, 0.55", "70.3808, 10.1287, -39.1381, 0.55", "74.1094, 9.94511, -42.041, 0.55", "76.2547, 9.8736, -43.7733, 0.55", "78.3956, 9.78481, -45.498, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "25.9499, 5.78685, -18.84, 0.83", "27.5719, 6.67976, -18.8392, 0.83", "28.4988, 7.19127, -18.8809, 0.55", "29.8633, 7.97785, -19.0562, 0.83", "30.7811, 8.53012, -19.2008, 0.55", "32.0478, 9.32287, -19.3803, 0.83", "33.5718, 10.3017, -19.5392, 0.55", "34.3375, 10.7394, -19.5899, 0.55", "36.0951, 11.5152, -19.5925, 0.83", "37.6873, 12.0283, -19.3957, 0.55", "38.5775, 12.3025, -19.2009, 0.83", "39.9144, 12.7354, -18.7672, 0.55", "41.8362, 13.3786, -17.8977, 0.55", "44.5025, 14.1355, -16.5589, 0.55", "47.0435, 14.7628, -15.1103, 0.55", "49.0562, 15.2377, -13.9273, 0.55", "52.3748, 16.0347, -11.959, 0.55", "54.8044, 16.6815, -10.4628, 0.55", "56.2739, 17.1861, -9.5007, 0.55", "58.9855, 18.3767, -7.69289, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.776047, -17.6579, 6.14015, 0.83", "-0.792589, -19.7482, 6.04797, 0.83", "-0.808707, -21.7848, 5.95815, 0.83", "-0.826702, -24.0587, 5.85787, 0.83", "-0.8361, -25.2461, 5.80551, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.776047, -17.6579, 6.14015, 0.55", "-0.313809, -18.7858, 6.90153, 0.55", "0.116256, -20.1624, 7.91063, 0.55", "0.402125, -21.9571, 9.3374, 0.55", "0.46434, -22.6531, 9.91696, 0.83", "0.474774, -24.4246, 11.6258, 0.55", "0.403426, -25.3368, 12.5347, 0.55", "0.233361, -27.1099, 14.3854, 0.83", "0.0362567, -28.4244, 15.8561, 0.55", "-0.229751, -29.5049, 17.0621, 0.55", "-0.786346, -31.5495, 19.312, 0.55", "-1.2303, -33.179, 21.0848, 0.55", "-1.55613, -34.4864, 22.5224, 0.55", "-1.82594, -35.877, 23.994, 0.28", "-1.88933, -36.4579, 24.5782, 0.55", "-1.98368, -37.5315, 25.5899, 0.28", "-1.91934, -39.214, 26.8702, 0.55", "-3.08473, -44.7642, 31.5941, 0.55", "-4.33796, -49.8886, 36.8035, 0.55", "-5.12238, -54.1144, 42.9211, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-37.8662, 27.7507, 0.482872, 0.55", "-39.7941, 28.318, 2.17889, 0.55", "-40.5688, 28.5443, 3.01769, 0.83", "-41.4299, 28.8023, 4.15409, 0.55", "-42.0676, 29.023, 5.097, 0.83", "-43.7504, 29.6695, 7.52719, 0.55", "-44.3869, 29.9295, 8.44978, 0.28", "-45.4166, 30.4139, 10.0967, 0.55", "-46.8016, 31.0717, 12.2949, 0.55", "-47.8715, 31.5513, 13.9013, 0.55", "-49.3177, 32.1729, 15.9892, 0.28", "-49.7104, 32.3196, 16.4736, 0.55", "-50.535, 32.6225, 17.4357, 0.28", "-51.1145, 32.8252, 18.0215, 0.55", "-52.3313, 33.1915, 19.1025, 0.28", "-53.0539, 33.3499, 19.7084, 0.55", "-54.3168, 33.5318, 20.819, 0.28", "-55.1741, 33.6371, 21.5336, 0.55", "-59.613, 34.6509, 28.5794, 0.55", "-63.3685, 35.0646, 36.0564, 0.55", "-66.8628, 34.7512, 43.6433, 0.55", "-70.3619, 33.444, 51.0851, 0.55", "-72.7625, 32.7137, 59.0372, 0.55", "-75.8652, 32.1634, 66.7689, 0.55", "-79.0823, 32.9415, 74.4694, 0.55", "-82.2589, 33.0797, 82.2104, 0.55", "-85.2632, 33.7956, 90.0004, 0.55", "-87.8255, 34.473, 97.9476, 0.55", "-89.4709, 34.3615, 106.137, 0.55", "-91.2049, 35.0019, 114.304, 0.55", "-93.0552, 34.8032, 122.447, 0.55", "-93.8599, 34.3819, 130.738, 0.55", "-93.2167, 34.6467, 139.067, 0.55", "-92.557, 33.3583, 147.241, 0.55", "-90.7162, 31.9493, 155.205, 0.55", "-89.2946, 30.8948, 163.324, 0.55", "-88.7496, 30.4182, 171.627, 0.55", "-90.0125, 31.0737, 179.878, 0.55", "-90.5044, 30.8966, 188.209, 0.55", "-89.42, 32.177, 196.42, 0.55", "-89.721, 33.9544, 204.613, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-37.8662, 27.7507, 0.482872, 0.55", "-40.0882, 27.7112, -1.1529, 0.55", "-41.9904, 27.665, -3.12931, 0.55", "-43.8583, 27.7539, -5.31229, 0.55", "-45.0279, 27.8097, -6.67926, 0.55", "-47.1614, 27.9113, -9.17275, 0.83", "-48.7223, 27.9856, -10.997, 0.55", "-50.6832, 28.0147, -13.7368, 0.83", "-51.5737, 28.1577, -15.3807, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-74.403, 19.9462, 22.8044, 0.28", "-75.4619, 18.1691, 22.4402, 0.28", "-75.9701, 17.407, 22.2167, 0.28", "-76.6343, 16.3303, 21.857, 0.55", "-77.1826, 15.3833, 21.5485, 0.28", "-77.9915, 13.94, 21.0972, 0.55", "-80.2425, 9.6956, 19.8411, 0.28", "-80.9839, 8.21001, 19.2732, 0.55", "-82.1116, 5.92408, 18.3161, 0.28", "-82.7634, 4.55824, 17.6775, 0.55", "-83.2146, 3.61757, 17.2133, 0.28", "-83.7287, 2.53768, 16.6898, 0.55", "-85.2856, -1.0692, 15.0327, 0.28", "-85.7762, -2.1592, 14.491, 0.55", "-86.637, -3.82105, 13.482, 0.28", "-87.3417, -4.88201, 12.7405, 0.28", "-87.968, -5.58894, 12.2202, 0.55", "-90.1325, -7.57126, 10.8274, 0.28", "-91.1341, -8.3732, 10.2842, 0.55", "-93.5858, -10.1952, 8.92718, 0.28", "-96.0336, -11.8046, 7.68825, 0.28", "-98.6923, -13.3352, 6.42548, 0.28", "-99.906, -13.91, 5.94697, 0.55", "-105.799, -20.4056, 2.5323, 0.55", "-112.265, -27.047, 0.905856, 0.55", "-118.658, -33.2854, -2.1279, 0.55", "-125.241, -38.9256, -5.94337, 0.55", "-131.935, -43.8779, -10.5418, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-74.403, 19.9462, 22.8044, 0.55", "-75.0175, 19.8971, 22.9196, 0.55", "-76.74, 19.7739, 23.4708, 0.55", "-77.3854, 19.7136, 23.714, 0.55", "-78.9018, 19.5288, 24.3126, 0.55", "-81.2395, 19.2609, 25.1167, 0.55", "-82.4557, 19.1564, 25.5103, 0.28", "-84.3498, 18.952, 26.0879, 0.55", "-85.7586, 18.7692, 26.4673, 0.55", "-86.3534, 18.6884, 26.629, 0.28", "-89.9213, 18.2012, 27.5946, 0.55", "-91.5931, 17.8934, 27.9475, 0.28", "-93.8542, 17.4622, 28.2906, 0.28", "-95.8094, 17.1111, 28.4695, 0.55", "-103.37, 16.9051, 30.7626, 0.55", "-110.627, 16.5612, 33.8726, 0.55", "-117.413, 15.5042, 37.7698, 0.55", "-123.976, 15.7407, 42.1676, 0.55", "-129.487, 15.8114, 47.8325, 0.55", "-133.813, 16.3611, 54.4228, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "78.3956, 9.78481, -45.498, 0.55", "82.6738, 11.0964, -48.9627, 0.55", "84.0267, 11.454, -50.1438, 0.55", "85.7204, 11.8481, -51.602, 0.55", "88.7943, 12.5372, -54.4303, 0.55", "92.0038, 13.1292, -57.4628, 0.55", "93.574, 13.2976, -58.9062, 0.83", "94.8673, 13.3503, -60.1934, 0.55", "95.8355, 13.3125, -61.2552, 0.83", "98.1716, 12.9057, -63.9795, 0.55", "100.097, 12.3969, -66.2373, 0.55", "102.311, 11.7972, -68.7237, 0.55", "104.776, 11.1979, -71.5426, 0.55", "106.429, 10.7581, -73.4751, 0.55", "108.295, 10.2563, -75.7155, 0.55", "109.907, 9.87783, -77.7655, 0.55", "110.92, 9.7296, -79.1914, 0.55", "112.206, 9.47708, -82.0635, 0.55", "112.908, 9.26513, -83.8601, 0.55", "113.514, 8.8822, -86.2482, 0.55", "114.347, 8.1176, -90.2854, 0.55", "114.517, 7.91248, -91.1957, 0.28", "116.72, 5.30228, -102.263, 0.28", "117.463, 4.55815, -105.511, 0.83", "120.388, 1.72569, -117.029, 0.83", "121.891, 0.207477, -122.377, 0.83", "122.613, -0.490462, -124.542, 0.55", "123.441, -1.17887, -126.651, 0.55", "125.727, -2.53822, -130.555, 0.55", "128.173, -3.76396, -133.981, 0.28", "128.91, -3.98973, -134.177, 0.55", "130.532, -4.37569, -134.025, 0.28", "131.534, -4.54567, -133.785, 0.55", "132.579, -4.73591, -133.445, 0.28", "133.833, -4.90394, -132.979, 0.55", "135.71, -5.06103, -132.484, 0.28", "137.216, -5.23171, -132.135, 0.55", "138.884, -5.31505, -131.884, 0.28", "141.152, -5.42179, -131.743, 0.55", "143.695, -5.48569, -131.739, 0.55", "145.933, -5.51702, -131.885, 0.28", "149.029, -5.53391, -132.259, 0.55", "154.384, -5.42376, -133.476, 0.55", "156.751, -5.25893, -134.301, 0.55", "157.768, -5.14802, -134.765, 0.83", "159.706, -4.92419, -135.828, 0.55", "161.051, -4.71696, -136.65, 0.83", "164.67, -4.0683, -138.904, 0.55", "166.881, -3.81829, -140.337, 0.28", "167.812, -3.76808, -140.836, 0.55", "170.361, -3.85532, -141.917, 0.28", "171.254, -3.96418, -142.237, 0.55", "173.095, -4.29764, -142.611, 0.28", "174.968, -4.80948, -142.666, 0.55", "178.75, -6.03443, -142.111, 0.28", "180.493, -6.67188, -141.669, 0.55", "183.086, -7.7615, -140.872, 0.28", "186.362, -9.12527, -139.747, 0.55", "188.73, -10.0804, -138.896, 0.55", "192.832, -11.6115, -137.353, 0.28", "194.516, -12.1662, -136.86, 0.55", "197.419, -12.9654, -136.329, 0.28", "200.311, -13.5513, -136.002, 0.55", "201.898, -13.7021, -136.045, 0.28", "203.331, -13.6546, -136.197, 0.55", "207.376, -13.2919, -137.008, 0.28", "210.264, -12.8419, -137.635, 0.28", "212.775, -12.2758, -138.217, 0.55", "215.546, -11.5774, -139.001, 0.28", "216.244, -11.3595, -139.174, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "78.3956, 9.78481, -45.498, 0.55", "79.2314, 7.67502, -46.7399, 0.55", "79.7736, 5.87871, -47.6633, 0.28", "80.265, 4.24372, -48.3661, 0.55", "81.4887, 0.798362, -49.8879, 0.28", "81.5605, 0.578359, -50.0153, 0.55", "81.9707, -0.577415, -50.7789, 0.28", "82.2255, -1.55621, -51.5653, 0.55", "82.4369, -2.59389, -52.5025, 0.28", "82.6867, -4.01916, -53.8453, 0.55", "83.31, -7.59339, -57.1511, 0.55", "83.8434, -10.8599, -60.221, 0.55", "84.2449, -13.474, -62.6784, 0.55", "84.5931, -16.0461, -65.0498, 0.55", "84.6804, -16.7088, -65.6351, 0.28", "84.7916, -17.41, -66.2029, 0.55", "85.0317, -18.3636, -66.9004, 0.28", "85.63, -20.0403, -67.9935, 0.55", "87.0389, -23.1781, -69.5687, 0.55", "87.8079, -24.8517, -70.2589, 0.28", "88.4894, -26.5715, -71.039, 0.55", "89.2658, -29.0092, -72.2264, 0.28", "89.7663, -30.9957, -73.2328, 0.55", "90.3881, -33.9818, -74.7443, 0.28", "91.0514, -37.0613, -76.2121, 0.55", "91.9564, -41.5429, -78.3832, 0.28", "92.3871, -43.9388, -79.5488, 0.55", "92.7895, -46.3987, -80.7993, 0.28", "93.1247, -48.5779, -82.0348, 0.28", "93.6418, -51.3111, -83.8125, 0.55", "94.2915, -53.8191, -85.3964, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "58.9855, 18.3767, -7.69289, 0.55", "61.8768, 17.7117, -7.78079, 0.55", "63.9479, 17.251, -8.05552, 0.55", "68.4424, 16.3087, -8.89146, 0.55", "70.4327, 15.9339, -9.44809, 0.55", "72.5929, 15.6188, -10.136, 0.55", "75.4674, 15.3405, -11.2258, 0.55", "78.447, 15.1154, -12.679, 0.55", "79.9808, 15.0674, -13.6199, 0.55", "83.029, 15.1849, -15.943, 0.55", "84.4268, 15.2733, -17.0512, 0.55", "87.6808, 15.4645, -19.7627, 0.55", "89.8776, 15.4988, -21.6244, 0.55", "91.5056, 15.4754, -22.9257, 0.83", "94.1005, 15.3292, -25.0226, 0.55", "96.6442, 15.0141, -27.0384, 0.83", "98.8041, 14.6103, -28.7204, 0.55", "100.747, 14.225, -30.1031, 0.55", "101.868, 14.0204, -30.8056, 0.83", "104.508, 13.4794, -32.3074, 0.28", "105.841, 13.2186, -32.948, 0.28", "107.11, 12.9245, -33.6694, 0.28", "108.486, 12.644, -34.4379, 0.28", "110.684, 12.2569, -35.6918, 0.28", "111.574, 12.0979, -36.1657, 0.55", "113.74, 11.6324, -37.0892, 0.55", "117.665, 10.6628, -38.5836, 0.55", "118.756, 10.345, -38.9658, 0.55", "119.733, 10.0119, -39.2827, 0.83", "121.891, 9.26331, -39.782, 0.55", "123.771, 8.60133, -40.1868, 0.55", "125.551, 7.97849, -40.5585, 0.55", "126.92, 7.49374, -40.8926, 0.55", "129.057, 6.64235, -41.5883, 0.55", "131.528, 5.50787, -42.6403, 0.55", "135.272, 3.48333, -44.7344, 0.55", "137.268, 2.15404, -46.1579, 0.55", "138.945, 0.760681, -47.6272, 0.28", "139.425, 0.25083, -48.1523, 0.55", "140.431, -1.1805, -49.5457, 0.28", "141.23, -2.80079, -51.0106, 0.55", "141.921, -4.91433, -52.5943, 0.55", "142.407, -6.34169, -53.5664, 0.28", "142.592, -6.85982, -53.8853, 0.55", "143.082, -8.15685, -54.6639, 0.28", "143.771, -9.86682, -55.6428, 0.55", "145.628, -14.0437, -57.9294, 0.55", "146.612, -16.1723, -59.0448, 0.55", "147.532, -18.1323, -60.0525, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "58.9855, 18.3767, -7.69289, 0.55", "61.4861, 18.5207, -5.74831, 0.55", "62.289, 18.5669, -5.16921, 0.55", "65.283, 18.61, -3.15003, 0.55", "68.6248, 18.7179, -0.842026, 0.55", "72.9053, 18.8394, 2.23004, 0.55", "74.0878, 18.8747, 3.07071, 0.55", "76.2098, 18.8615, 4.55289, 0.55", "78.538, 18.9042, 6.09254, 0.55", "81.2476, 19.0347, 7.7649, 0.55", "83.8007, 19.1915, 9.35229, 0.55", "85.2028, 19.343, 10.1619, 0.55", "86.849, 19.5663, 11.1125, 0.55", "88.8861, 19.9014, 12.2555, 0.83", "92.2302, 20.467, 13.7772, 0.55", "94.4467, 20.7655, 14.6729, 0.83", "97.5263, 21.0528, 15.8018, 0.55", "98.4722, 21.0929, 16.1317, 0.55", "101.409, 21.0834, 17.0846, 0.55", "106.667, 20.7793, 18.5601, 0.55", "110.519, 20.3597, 19.539, 0.55", "113.567, 19.8883, 20.3762, 0.55", "116.672, 19.2453, 21.3253, 0.55", "117.325, 19.0931, 21.5272, 0.28", "118.649, 18.7344, 21.9298, 0.83", "124.087, 17.1835, 23.6099, 0.55", "127.892, 16.108, 24.7116, 0.55", "131.014, 15.2951, 25.6997, 0.55", "132.878, 14.8027, 26.3076, 0.83", "134.347, 14.4352, 26.7901, 0.28", "135.678, 14.1048, 27.2155, 0.55", "146.032, 13.8326, 32.1945, 0.55", "157.025, 12.0373, 35.0652, 0.55", "167.966, 11.524, 38.5623, 0.55", "177.694, 9.33096, 44.298, 0.55", "186.719, 5.66061, 50.3933, 0.55", "196.623, 0.661303, 53.2093, 0.55", "206.372, -5.18733, 54.0258, 0.55", "217.144, -9.10028, 54.3205, 0.55", "227.785, -13.2328, 55.3625, 0.55", "238.889, -16.1481, 55.7758, 0.55", "249.934, -18.6993, 57.6946, 0.55", "260.247, -23.1114, 60.052, 0.55", "270.843, -25.7157, 63.6834, 0.55", "280.971, -26.8373, 69.0148, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-0.8361, -25.2461, 5.80551, 1.38", "2.9781, -28.7556, 5.05757, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.8361, -25.2461, 5.80551, 0.55", "-1.81875, -26.5321, 5.6481, 0.55", "-2.89318, -28.1708, 5.4769, 0.55", "-3.74192, -29.263, 5.35208, 0.55", "-4.43476, -30.1764, 5.12499, 0.55", "-5.92174, -32.073, 4.46782, 0.55", "-6.96184, -33.3426, 3.97324, 0.55", "-7.87862, -34.4804, 3.49343, 0.55", "-10.2428, -37.2574, 2.26191, 0.55", "-13.0949, -40.479, 0.807068, 0.55", "-15.2983, -42.922, -0.364071, 0.55", "-16.6979, -44.5238, -1.13454, 0.55", "-18.3001, -46.4411, -2.01217, 0.55", "-20.3214, -49.1749, -3.09178, 0.55", "-21.491, -51.0991, -3.69134, 0.55", "-22.9403, -53.8523, -4.27849, 0.55", "-24.0851, -56.4199, -4.68974, 0.55", "-25.2135, -59.6074, -5.07661, 0.55", "-26.2478, -63.3336, -5.37958, 0.55", "-26.7681, -66.1668, -5.48763, 0.55", "-26.9471, -67.5713, -5.42859, 0.55", "-27.1998, -70.8606, -5.06667, 0.55", "-27.3956, -73.9351, -4.63446, 0.55", "-27.4737, -77.0233, -3.93176, 0.55", "-27.5565, -78.7959, -3.4324, 0.55", "-27.8173, -84.2741, -1.67397, 0.55", "-27.8407, -84.6776, -1.53771, 0.55", "-27.9475, -87.1461, -0.631556, 0.55", "-28.3714, -91.5715, 1.0556, 0.55", "-28.5049, -93.0521, 1.52745, 0.55", "-28.6951, -95.3703, 1.845, 0.55", "-28.7046, -96.2306, 1.76458, 0.55", "-28.4978, -99.1367, 0.954497, 0.55", "-28.1782, -101.014, 0.0408896, 0.55", "-27.4658, -104.001, -2.02701, 0.55", "-26.3857, -107.648, -4.82055, 0.28", "-26.0801, -108.549, -5.63487, 0.55", "-25.5886, -109.915, -6.99367, 0.28", "-25.5143, -110.121, -7.21017, 0.55", "-25.134, -111.249, -8.29675, 0.28", "-25.0494, -111.633, -8.57926, 0.55", "-24.7316, -113.633, -9.6574, 0.28", "-24.6523, -114.315, -10.0205, 0.55", "-24.4704, -116.288, -10.9597, 0.28", "-24.4108, -116.909, -11.2525, 0.55", "-24.2298, -119.053, -12.2302, 0.28", "-24.1402, -120.039, -12.6841, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-5.12238, -54.1144, 42.9211, 0.55", "-9.1758, -63.0043, 49.6439, 0.55", "-14.699, -71.3698, 56.1004, 0.55", "-19.4862, -80.318, 62.2652, 0.55", "-24.369, -89.3729, 68.1874, 0.55", "-27.4148, -99.1836, 73.9452, 0.55", "-30.7018, -108.617, 80.2392, 0.55", "-31.3225, -119.214, 85.0516, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-5.12238, -54.1144, 42.9211, 0.55", "-4.29238, -59.9779, 49.1416, 0.55", "-2.96147, -66.7406, 54.14, 0.55", "-3.03245, -73.6914, 59.0422, 0.55", "-3.52967, -81.0965, 63.1192, 0.55", "-3.68353, -88.4365, 67.3466, 0.55", "-3.82557, -95.4669, 72.1209, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-51.5737, 28.1577, -15.3807, 0.83", "-52.0118, 28.4364, -17.3016, 0.83", "-53.05, 29.2603, -21.7056, 0.55", "-53.4509, 29.6807, -23.5146, 0.83", "-53.8347, 30.1872, -25.3719, 0.55", "-54.1453, 30.8306, -27.1114, 0.55", "-54.2568, 31.2089, -27.9097, 0.28", "-54.3108, 31.5349, -28.3249, 0.55", "-54.3006, 32.8215, -29.4471, 0.28", "-54.2648, 33.3904, -29.9059, 0.55", "-54.1291, 35.4288, -31.4077, 0.28", "-54.0436, 37.0874, -32.5235, 0.55", "-54.0124, 39.7472, -34.1283, 0.28", "-54.0546, 42.1245, -35.4579, 0.28", "-54.1499, 43.4808, -36.1419, 0.55", "-54.3676, 45.1009, -36.9057, 0.28", "-54.5203, 45.8864, -37.2368, 0.55", "-55.0208, 47.6938, -38.0414, 0.28", "-55.4675, 48.8677, -38.5955, 0.28", "-55.9492, 50.0007, -39.1597, 0.28", "-56.1795, 50.5952, -39.4712, 0.55", "-56.9946, 52.949, -40.8481, 0.28", "-57.8796, 55.6923, -42.5747, 0.55", "-58.1711, 56.6357, -43.1817, 0.55", "-58.4708, 57.5972, -43.7628, 0.55", "-59.2468, 59.6292, -44.9737, 0.55", "-59.8684, 60.9529, -45.752, 0.28", "-60.1739, 61.4555, -46.023, 0.55", "-61.0972, 62.8464, -46.6795, 0.28", "-62.1762, 64.294, -47.4028, 0.55", "-63.9898, 66.3399, -48.4202, 0.28", "-64.8688, 67.1842, -48.8229, 0.28", "-66.3288, 68.2915, -49.4188, 0.55", "-67.9789, 69.4079, -50.0598, 0.28", "-68.2769, 69.5793, -50.1545, 0.55", "-69.342, 70.1172, -50.435, 0.28", "-72.9781, 71.8485, -51.2506, 0.55", "-78.0748, 73.8453, -52.2987, 0.28", "-79.0327, 74.1448, -52.5016, 0.55", "-81.6717, 74.8755, -53.0405, 0.28", "-82.7892, 75.1576, -53.2793, 0.28", "-83.7752, 75.3639, -53.5056, 0.55", "-86.7156, 75.6318, -54.1535, 0.28", "-88.752, 75.717, -54.4642, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-51.5737, 28.1577, -15.3807, 0.55", "-52.0602, 29.5243, -16.2662, 0.55", "-52.3369, 30.3803, -16.702, 0.28", "-52.6061, 31.0918, -16.8142, 0.55", "-53.2246, 32.7257, -17.0719, 0.28", "-53.6589, 33.8733, -17.2529, 0.55", "-54.4597, 35.989, -17.5866, 0.28", "-54.9252, 37.2321, -17.557, 0.55", "-56.4499, 40.7398, -16.3771, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-131.935, -43.8779, -10.5418, 0.55", "-139.319, -52.1704, -14.9626, 0.55", "-144.814, -61.1902, -20.3863, 0.55", "-149.433, -68.9998, -28.1349, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-131.935, -43.8779, -10.5418, 0.55", "-138.665, -50.2653, -15.4497, 0.55", "-144.363, -56.6061, -21.5593, 0.55", "-149.637, -63.0662, -27.9016, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-133.813, 16.3611, 54.4228, 0.55", "-144.317, 16.5956, 62.3173, 0.55", "-155.517, 18.3566, 68.9393, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-133.813, 16.3611, 54.4228, 0.55", "-145.653, 14.9995, 59.2371, 0.55", "-157.512, 15.6566, 64.1671, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "94.2915, -53.8191, -85.3964, 0.28", "101.534, -58.662, -95.5547, 0.28", "102.258, -59.1651, -96.4383, 0.55", "103.482, -60.0145, -97.9301, 0.28", "104.512, -60.7297, -99.1861, 0.28", "105.875, -61.6764, -100.849, 0.55", "107.673, -62.9246, -103.042, 0.55", "110.099, -64.4863, -103.909, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "94.2915, -53.8191, -85.3964, 0.55", "95.0403, -54.911, -86.5065, 0.55", "95.2792, -55.4025, -87.0089, 0.28", "95.6424, -56.246, -87.8934, 0.55", "96.4424, -58.1041, -89.8417, 0.28", "96.9968, -59.3918, -91.192, 0.55", "97.9362, -61.5736, -93.4798, 0.28", "99.0223, -64.2422, -96.5099, 0.28", "99.4676, -65.4704, -97.935, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "147.532, -18.1323, -60.0525, 0.28", "149.091, -20.5679, -60.9523, 0.28", "151.071, -23.9283, -61.8891, 0.28", "152.325, -26.154, -62.4164, 0.55", "153.099, -27.4181, -62.6641, 0.28", "153.51, -28.1017, -62.7914, 0.28", "155.545, -31.451, -63.4642, 0.55", "156.025, -32.246, -63.5344, 0.28", "157.154, -34.4014, -63.5926, 0.55", "158.108, -36.2383, -63.7005, 0.28", "158.948, -37.7215, -63.818, 0.55", "159.92, -39.4421, -64.0432, 0.55", "161.44, -42.0077, -64.68, 0.55", "161.803, -42.625, -64.855, 0.55", "163.089, -44.9133, -65.5241, 0.28", "163.579, -45.8335, -65.8158, 0.55", "164.276, -47.0101, -66.1999, 0.28", "165.252, -48.6393, -66.8129, 0.55", "166.851, -51.0064, -68.1324, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "147.532, -18.1323, -60.0525, 0.55", "144.45, -18.0601, -59.6071, 0.55", "141.946, -18.0016, -59.2454, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.9781, -28.7556, 5.05757, 0.83", "3.10371, -28.9677, 5.05536, 0.83", "4.49836, -30.8259, 5.20722, 0.83", "5.73821, -32.4526, 5.22115, 0.55", "6.72734, -33.7503, 5.23226, 0.55", "8.82977, -36.5087, 5.25589, 0.83", "11.3798, -39.8543, 5.28454, 0.55", "12.7597, -41.6024, 5.34536, 0.83", "15.1604, -44.3692, 5.61291, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.9781, -28.7556, 5.05757, 0.55", "1.32307, -29.9455, 1.90677, 0.55", "-0.453408, -31.2226, -1.47522, 0.55", "-2.55056, -32.7303, -5.4677, 0.55", "-5.09718, -34.5612, -10.3158, 0.55", "-6.54229, -35.6001, -13.067, 0.55", "-6.8326, -35.8088, -13.6197, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-3.82557, -95.4669, 72.1209, 0.55", "-3.23988, -103.412, 78.0579, 0.55", "-1.44687, -111.926, 82.771, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.82557, -95.4669, 72.1209, 0.55", "-3.76929, -103.322, 77.0461, 0.55", "-4.20703, -111.057, 82.1726, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-56.4499, 40.7398, -16.3771, 0.28", "-57.1201, 42.6406, -15.5157, 0.28", "-57.3463, 43.3927, -15.1396, 0.55", "-57.9723, 45.587, -14.0303, 0.28", "-58.3173, 46.6339, -13.5441, 0.55", "-59.2975, 49.4308, -12.2815, 0.28", "-60.2937, 52.2734, -10.9982, 0.55", "-61.9124, 56.8425, -8.76197, 0.28", "-62.2572, 57.8207, -8.28813, 0.55", "-63.0483, 60.0263, -7.33993, 0.28", "-63.3583, 60.9218, -6.98632, 0.55", "-67.2388, 67.658, -2.76143, 0.55", "-72.5476, 74.2293, -0.317036, 0.55", "-76.5975, 81.4789, 2.54833, 0.55", "-79.7622, 89.4049, 4.30698, 0.55", "-83.9635, 96.8441, 6.12769, 0.55", "-88.3724, 103.676, 9.54169, 0.55", "-91.6943, 110.538, 14.043, 0.55", "-93.716, 117.195, 19.5745, 0.55", "-95.912, 124.126, 24.6544, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-56.4499, 40.7398, -16.3771, 0.55", "-57.8232, 41.6871, -13.8724, 0.55", "-58.5302, 42.1468, -12.5409, 0.28", "-59.0564, 42.4889, -11.55, 0.55", "-59.495, 42.7741, -10.7241, 0.28", "-59.8021, 42.9738, -10.1457, 0.55", "-60.6491, 43.5245, -8.55064, 0.28", "-61.2763, 43.7347, -7.49702, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-149.433, -68.9998, -28.1349, 0.55", "-154.627, -78.8031, -28.095, 0.55", "-159.697, -88.5563, -26.75, 0.55", "-163.768, -98.8363, -27.3136, 0.55", "-169.083, -108.536, -26.5364, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-149.433, -68.9998, -28.1349, 0.55", "-153.996, -76.762, -34.7977, 0.55", "-157.72, -83.6746, -42.8784, 0.55", "-162.667, -91.1856, -49.5719, 0.55", "-169.706, -96.6805, -56.4742, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-149.637, -63.0662, -27.9016, 0.55", "-153.985, -68.4677, -34.5443, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-149.637, -63.0662, -27.9016, 0.55", "-152.568, -69.4652, -28.5856, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "110.099, -64.4863, -103.909, 0.28", "113.348, -65.7005, -105.313, 0.28", "114.857, -66.2645, -105.965, 0.55", "117.736, -67.3401, -107.208, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "110.099, -64.4863, -103.909, 0.55", "110.037, -65.908, -104.635, 0.55", "109.913, -68.7518, -106.086, 0.28", "109.872, -69.6781, -106.559, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "99.4676, -65.4704, -97.935, 0.28", "100.911, -68.3835, -100.075, 0.28", "101.625, -69.826, -101.135, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "99.4676, -65.4704, -97.935, 0.55", "97.1557, -66.7677, -96.279, 0.55", "90.7089, -70.3852, -91.6614, 0.28", "89.1774, -71.2446, -90.5644, 0.55", "84.988, -73.5954, -87.5636, 0.28", "82.2875, -75.1108, -85.6293, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "15.1604, -44.3692, 5.61291, 0.83", "15.2038, -44.5468, 5.59224, 0.83", "15.7876, -46.8706, 5.39897, 0.83", "16.0365, -48.6296, 5.32281, 0.83", "16.1032, -50.3453, 5.39253, 0.83", "16.0598, -52.6423, 5.63543, 0.83", "15.9078, -55.2987, 5.99183, 0.83", "15.7051, -58.2697, 6.54926, 0.83", "15.4701, -61.1607, 7.22422, 0.83", "14.9754, -64.726, 7.90258, 0.83", "14.6859, -66.368, 8.09523, 0.83", "14.4861, -67.6002, 8.16133, 0.83", "14.0676, -69.9667, 8.22354, 0.83", "13.7761, -72.0777, 8.17734, 0.83", "13.5448, -76.5406, 7.64871, 0.83", "13.5407, -78.967, 7.04708, 0.83", "13.5839, -81.1966, 6.32665, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "15.1604, -44.3692, 5.61291, 0.55", "14.0164, -47.5701, 5.15578, 0.55", "13.0899, -49.9048, 4.97808, 0.55", "12.4802, -51.402, 5.02173, 0.55", "11.5479, -53.7478, 5.34705, 0.55", "9.70665, -58.3982, 6.31872, 0.55", "8.14443, -61.9392, 7.40992, 0.55", "6.7851, -64.7918, 8.57054, 0.55", "5.27322, -67.6881, 9.90853, 0.55", "3.95577, -70.0975, 11.1279, 0.28", "2.75019, -72.0819, 12.3816, 0.55", "0.300007, -75.7227, 15.1011, 0.55", "-1.39804, -77.9744, 16.9456, 0.55", "-2.35755, -79.2362, 17.9625, 0.55", "-3.53017, -80.7264, 19.0646, 0.83", "-6.94003, -85.1346, 22.0501, 0.28", "-8.05327, -86.5915, 23.0024, 0.55", "-9.95841, -89.2121, 24.6722, 0.28", "-10.5658, -90.0224, 25.2411, 0.55", "-11.882, -91.9162, 26.5805, 0.28", "-12.596, -92.989, 27.2719, 0.55", "-14.7858, -96.4524, 28.5776, 0.55", "-19.8205, -105.786, 36.3327, 0.55", "-24.492, -114.688, 44.8349, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.8326, -35.8088, -13.6197, 0.55", "-8.97929, -37.3867, -18.5099, 0.55", "-9.63099, -37.7629, -19.9076, 0.55", "-11.3096, -38.7044, -23.3189, 0.55", "-15.0793, -40.5792, -30.5537, 0.28", "-15.662, -40.8361, -31.5787, 0.55", "-18.1516, -42.0024, -35.714, 0.55", "-21.7495, -43.5847, -40.9184, 0.55", "-23.1428, -44.13, -42.8682, 0.28", "-24.3976, -44.4942, -44.4909, 0.28", "-26.6834, -45.0476, -46.902, 0.55", "-29.4218, -45.5711, -49.9727, 0.28", "-31.9206, -45.7946, -52.8887, 0.55", "-33.8664, -45.7695, -55.1067, 0.55", "-35.1845, -45.6175, -56.691, 0.55", "-38.9993, -44.9602, -61.4973, 0.55", "-43.0452, -43.9218, -66.477, 0.55", "-44.7345, -43.3758, -68.4882, 0.28", "-46.3263, -42.8899, -70.4339, 0.55", "-49.5777, -42.1624, -74.3298, 0.28", "-50.6779, -41.956, -75.6258, 0.83", "-52.7979, -41.5346, -77.8782, 0.28", "-54.4179, -41.3592, -79.2611, 0.55", "-56.7923, -41.1951, -81.2127, 0.28", "-57.7506, -41.115, -81.9563, 0.55", "-59.5663, -40.9994, -83.229, 0.55", "-62.3437, -40.5262, -85.0522, 0.55", "-64.1943, -40.0945, -86.1406, 0.28", "-65.725, -39.5507, -86.9029, 0.55", "-67.5205, -38.6866, -87.8186, 0.28", "-67.8119, -38.521, -87.9804, 0.55", "-70.3362, -36.9472, -89.958, 0.28", "-72.0943, -35.7727, -91.6095, 0.55", "-74.2835, -34.0614, -94.162, 0.83", "-76.0006, -32.6106, -96.5127, 0.28", "-76.4248, -32.2419, -97.1757, 0.55", "-79.5953, -29.4867, -102.501, 0.28", "-80.124, -29.0199, -103.508, 0.55", "-81.6292, -27.4952, -106.626, 0.28", "-82.0162, -27.1033, -107.435, 0.55", "-83.0462, -26.0787, -109.41, 0.28", "-83.7999, -25.3383, -110.742, 0.55", "-85.6133, -23.6723, -113.358, 0.28", "-86.7142, -22.7813, -114.854, 0.55", "-89.1307, -21.0642, -117.878, 0.28", "-89.8579, -20.6018, -118.763, 0.55", "-91.0218, -19.9846, -120.095, 0.28", "-92.0289, -19.4629, -121.165, 0.55", "-94.1755, -18.408, -123.235, 0.28", "-94.8315, -18.1065, -123.833, 0.55", "-99.7923, -15.7472, -128.021, 0.28", "-101.584, -14.7751, -129.322, 0.55", "-104.85, -12.8651, -131.423, 0.28", "-106.335, -11.94, -132.323, 0.55", "-109.809, -9.83802, -134.175, 0.28", "-111.105, -9.12353, -134.794, 0.55", "-115.897, -6.96214, -136.755, 0.28", "-117.912, -6.31231, -137.545, 0.55", "-120.82, -5.85529, -138.622, 0.55", "-122.627, -5.68498, -139.237, 0.55", "-126.395, -5.42175, -140.203, 0.28", "-130.167, -5.19074, -140.921, 0.28", "-133.332, -4.98444, -141.431, 0.55", "-137.285, -4.40402, -141.654, 0.28", "-139.286, -3.88367, -141.52, 0.55", "-144.1, -1.9379, -140.775, 0.28", "-146.645, -0.479574, -139.849, 0.55", "-148.321, 0.700028, -138.923, 0.28", "-150.241, 2.04414, -137.461, 0.55", "-152.659, 3.81006, -135.365, 0.28", "-153.581, 4.43411, -134.579, 0.55", "-158.371, 7.23798, -131.035, 0.28", "-159.993, 8.12459, -129.854, 0.55", "-163.862, 10.0998, -126.951, 0.28", "-165.966, 11.1497, -125.374, 0.55", "-167.697, 12.0099, -124.081, 0.55", "-169.767, 13.0214, -122.589, 0.28", "-170.847, 13.5311, -121.983, 0.55", "-174.461, 15.3411, -120.169, 0.28", "-176.337, 16.4898, -119.187, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-6.8326, -35.8088, -13.6197, 0.55", "-5.997, -36.04, -14.5156, 0.55", "-5.1194, -36.1455, -15.3961, 0.55", "-3.96325, -36.1786, -16.4394, 0.55", "-2.97904, -36.1136, -17.2505, 0.55", "3.88977, -34.9143, -22.0993, 0.55", "5.44783, -34.4589, -23.2158, 0.55", "7.74423, -33.6122, -24.9153, 0.55", "9.37009, -32.9557, -26.1295, 0.55", "10.9753, -32.2184, -27.2779, 0.28", "13.5025, -30.9373, -28.9252, 0.55", "17.3488, -28.9103, -31.1726, 0.28", "17.6549, -28.8012, -31.4498, 0.55", "19.2041, -28.5531, -33.7547, 0.28", "19.9831, -28.4894, -35.4776, 0.55", "20.6464, -28.5512, -37.4192, 0.55", "21.7805, -28.8366, -40.9204, 0.55", "24.0226, -29.4453, -47.7834, 0.55", "25.6071, -29.9042, -52.3626, 0.55", "26.1953, -30.0778, -53.9272, 0.55", "30.3072, -31.1431, -64.1158, 0.55", "31.5387, -31.3934, -66.8266, 0.55", "32.344, -31.5363, -68.2945, 0.55", "34.5161, -31.9646, -71.5474, 0.55", "40.1665, -33.4393, -79.028, 0.55", "41.7713, -33.9323, -80.9732, 0.28", "42.7674, -34.272, -82.0077, 0.55", "44.2698, -34.8556, -83.5095, 0.28", "44.9306, -35.1757, -84.0756, 0.55", "47.2561, -36.472, -85.1938, 0.28", "49.0125, -38.0276, -84.9136, 0.55", "50.0402, -39.117, -84.6616, 0.28", "50.9422, -40.2976, -84.2908, 0.55", "51.6968, -41.5667, -83.8694, 0.28", "52.0183, -42.2181, -83.6962, 0.55", "52.7309, -43.9137, -83.2048, 0.28", "52.9255, -44.4229, -83.15, 0.55", "54.069, -47.3515, -83.0067, 0.28", "54.6797, -48.7182, -83.109, 0.55", "56.1711, -51.661, -83.634, 0.28", "56.7951, -52.7535, -83.9379, 0.55", "59.0385, -56.3587, -85.1218, 0.28", "59.5984, -57.2375, -85.4456, 0.55", "61.3179, -60.0231, -86.5893, 0.28", "61.6711, -60.6716, -86.8163, 0.55", "62.5439, -62.3823, -87.4147, 0.28", "63.0824, -63.3807, -87.8562, 0.55", "63.6636, -64.3666, -88.3596, 0.55", "64.8207, -66.3331, -89.349, 0.28", "65.6824, -67.5616, -90.0749, 0.55", "68.5932, -70.6898, -92.442, 0.28", "69.769, -71.7247, -93.4179, 0.55", "70.5968, -72.3869, -94.0747, 0.28", "71.4536, -72.9982, -94.7256, 0.55", "74.1469, -74.7289, -96.6774, 0.28", "76.1899, -76.0653, -98.0971, 0.55", "79.6645, -78.5636, -100.238, 0.28", "80.7608, -79.3419, -100.906, 0.55", "82.8824, -80.772, -102.003, 0.28", "83.5919, -81.2396, -102.311, 0.55", "84.7441, -81.9802, -102.603, 0.28", "85.7608, -82.6041, -102.773, 0.55", "88.5166, -84.1524, -102.954, 0.28", "91.6902, -85.807, -103.113, 0.28", "93.2953, -86.5725, -103.082, 0.28", "94.9296, -87.3017, -103.149, 0.55", "97.3322, -88.2662, -103.259, 0.28", "98.4008, -88.6796, -103.286, 0.83", "101.112, -89.7623, -103.252, 0.28", "102.291, -90.2593, -103.302, 0.55", "107.474, -92.6346, -103.75, 0.28", "110.079, -93.8593, -104.179, 0.28", "111.982, -94.7546, -104.612, 0.55", "113.094, -95.3026, -104.986, 0.55", "116.05, -96.8026, -106.204, 0.28", "118.8, -98.323, -107.45, 0.55", "121.294, -99.7789, -108.583, 0.28", "123.547, -101.13, -109.724, 0.55", "125.413, -102.226, -110.657, 0.28", "126.954, -103.019, -111.342, 0.55", "130.699, -104.733, -112.832, 0.28", "132.598, -105.597, -113.511, 0.55", "135.447, -106.896, -114.428, 0.28", "137.786, -107.897, -115.128, 0.55", "143.293, -110.02, -116.78, 0.28", "145.554, -110.775, -117.601, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-1.44687, -111.926, 82.771, 0.55", "-0.850733, -120.684, 87.1437, 0.55", "0.528535, -130.125, 89.1492, 0.55", "1.43102, -139.235, 92.5806, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-1.44687, -111.926, 82.771, 0.55", "0.0504416, -119.88, 88.2794, 0.55", "0.814803, -126.575, 95.4884, 0.55", "2.19253, -131.755, 103.89, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-4.20703, -111.057, 82.1726, 0.55", "-2.90318, -120.139, 89.2367, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.20703, -111.057, 82.1726, 0.55", "-4.9544, -117.179, 86.0952, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "13.5839, -81.1966, 6.32665, 0.83", "14.7272, -84.9091, 6.97661, 0.83", "15.8187, -88.0268, 7.78523, 0.83", "16.9038, -91.1258, 8.58902, 0.83", "17.9342, -94.0689, 9.35236, 0.83", "19.5222, -98.6044, 10.5287, 0.83", "21.0987, -103.107, 11.6966, 0.83", "22.3562, -106.069, 12.9051, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "13.5839, -81.1966, 6.32665, 0.55", "15.0402, -82.9186, 6.87752, 0.55", "16.2667, -84.2512, 7.05955, 0.55", "17.1713, -85.2355, 7.07155, 0.55", "18.116, -86.3991, 6.85236, 0.83", "19.1718, -87.7204, 6.39634, 0.55", "20.2044, -89.0127, 5.95029, 0.83", "21.3014, -90.4148, 5.29489, 0.55", "21.9705, -91.2243, 4.83497, 0.83", "24.1146, -93.842, 3.08174, 0.55", "25.6797, -95.907, 1.49184, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-24.492, -114.688, 44.8349, 0.55", "-28.8483, -122.58, 49.5526, 0.55", "-34.5823, -129.489, 54.4969, 0.55", "-41.0064, -135.48, 59.8963, 0.55", "-48.267, -140.305, 65.5168, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-24.492, -114.688, 44.8349, 0.55", "-29.7876, -125.104, 52.2808, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "22.3562, -106.069, 12.9051, 0.55", "22.4361, -107.635, 13.2981, 0.55", "22.5637, -109.633, 13.8732, 0.55", "22.6898, -111.518, 14.4068, 0.55", "22.7752, -112.858, 14.7596, 0.55", "22.9211, -115.25, 15.3417, 0.55", "23.5092, -121.949, 16.8694, 0.55", "23.8077, -124.211, 17.3241, 0.55", "24.0632, -125.798, 17.5728, 0.55", "24.4409, -127.599, 17.7275, 0.55", "24.7721, -128.984, 17.7183, 0.55", "25.7039, -132.199, 17.6179, 0.55", "26.3316, -134.649, 17.4955, 0.55", "26.7613, -136.257, 17.4823, 0.55", "27.7551, -140.445, 17.6451, 0.55", "28.3443, -143.272, 17.8645, 0.55", "29.0193, -146.932, 18.3509, 0.55", "29.6791, -151.103, 19.2321, 0.55", "30.1531, -153.888, 20.0445, 0.55", "30.4491, -155.533, 20.5857, 0.55", "30.6978, -157.052, 21.0666, 0.55", "31.0872, -158.965, 21.6062, 0.55", "32.1272, -163.558, 22.584, 0.55", "32.619, -165.323, 22.9294, 0.55", "33.1284, -167.293, 23.2777, 0.55", "33.8779, -170.253, 23.7741, 0.55", "34.3426, -172.542, 24.1239, 0.55", "34.6789, -174.73, 24.3674, 0.55", "34.9121, -176.826, 24.5545, 0.55", "35.0925, -178.877, 24.7479, 0.55", "35.2362, -180.335, 24.8762, 0.55", "35.5253, -182.712, 25.016, 0.55", "35.9414, -185.554, 24.9593, 0.55", "36.2283, -186.922, 24.851, 0.55", "36.5381, -188.114, 24.6753, 0.55", "37.2887, -190.341, 24.2669, 0.55", "37.7707, -191.75, 23.9623, 0.55", "38.3503, -193.491, 23.6611, 0.55", "38.6751, -194.727, 23.4982, 0.55", "39.4009, -197.955, 23.1671, 0.55", "39.8007, -200.394, 23.0557, 0.55", "40.2063, -204.2, 23.146, 0.55", "40.4036, -206.67, 23.4489, 0.55", "40.5508, -209.271, 23.8361, 0.28", "40.5649, -210.323, 24.0192, 0.28", "40.4751, -212.896, 24.6731, 0.28", "40.2807, -215.29, 25.4403, 0.28", "40.1324, -218.447, 26.8929, 0.28", "41.5167, -225.306, 28.9441, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "22.3562, -106.069, 12.9051, 0.55", "23.4003, -106.548, 14.3487, 0.55", "25.4011, -107.833, 17.4819, 0.55", "27.0587, -109.124, 20.2687, 0.28", "28.7791, -110.606, 23.3217, 0.55", "29.6364, -111.578, 25.3404, 0.28", "30.9055, -113.358, 29.0487, 0.55", "31.1624, -114.34, 30.8601, 0.28", "31.1846, -114.704, 31.5771, 0.28", "31.2032, -115.23, 32.8267, 0.55", "31.4752, -116.941, 37.5331, 0.28", "31.6371, -117.605, 39.5005, 0.55", "32.5666, -119.482, 45.1235, 0.28", "33.2149, -120.39, 48.068, 0.28", "34.1812, -121.537, 51.6215, 0.55", "35.9635, -123.28, 56.6512, 0.28", "36.2593, -123.505, 57.2887, 0.55", "37.8816, -124.577, 60.2911, 0.28", "38.0532, -124.674, 60.543, 0.55", "39.5436, -125.863, 62.8096, 0.28", "40.2065, -126.525, 63.9344, 0.55", "45.5308, -131.401, 73.2582, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-48.267, -140.305, 65.5168, 0.55", "-51.7307, -144.07, 72.1502, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-48.267, -140.305, 65.5168, 0.55", "-53.8073, -146.604, 68.9809, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L5_BP_55f9b731a1_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 5.92555, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.10211, 7.89537, 2.84516, 0.83 ) }
    dend_43 { pt3dadd( -5.96815, 10.0057, 3.2774, 1.11 ) }
    dend_43 { pt3dadd( -7.65798, 11.2492, 3.50224, 0.83 ) }
    dend_43 { pt3dadd( -9.29972, 12.4467, 3.7037, 0.83 ) }
    dend_43 { pt3dadd( -10.2718, 13.1296, 3.81409, 1.11 ) }
    dend_43 { pt3dadd( -13.3157, 15.2635, 4.1679, 1.11 ) }
    dend_43 { pt3dadd( -18.7602, 18.9169, 4.79333, 0.83 ) }
    dend_43 { pt3dadd( -20.7216, 20.1828, 4.99986, 0.83 ) }
    dend_43 { pt3dadd( -22.2749, 21.1556, 5.12815, 0.83 ) }
    dend_43 { pt3dadd( -23.7895, 22.1196, 5.23919, 0.83 ) }
    dend_43 { pt3dadd( -25.0225, 22.9142, 5.2991, 0.55 ) }
    dend_43 { pt3dadd( -25.9492, 23.4522, 5.35991, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.18455, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.80437, 6.02137, -6.28391, 0.55 ) }
    dend_28 { pt3dadd( 7.77006, 6.63084, -6.9462, 0.55 ) }
    dend_28 { pt3dadd( 9.49095, 6.78469, -7.82256, 0.83 ) }
    dend_28 { pt3dadd( 12.2145, 6.94842, -9.45045, 0.55 ) }
    dend_28 { pt3dadd( 13.5293, 7.02745, -10.2363, 1.38 ) }
    dend_28 { pt3dadd( 16.7619, 7.22178, -12.1684, 0.55 ) }
    dend_28 { pt3dadd( 18.1388, 7.15597, -13.0903, 0.83 ) }
    dend_28 { pt3dadd( 25.2609, 5.94914, -18.2701, 0.55 ) }
    dend_28 { pt3dadd( 25.9499, 5.78685, -18.84, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -7.82095, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.683645, -9.91292, 3.21745, 1.11 ) }
    dend_1 { pt3dadd( -0.731071, -13.8881, 4.71755, 1.11 ) }
    dend_1 { pt3dadd( -0.750386, -15.507, 5.32849, 0.83 ) }
    dend_1 { pt3dadd( -0.776047, -17.6579, 6.14015, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.22705, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.83941, 8.74179, -1.34314, 1.11 ) }
    dend_0 { pt3dadd( 0.902274, 10.076, -1.33398, 1.11 ) }
    dend_0 { pt3dadd( 0.997236, 12.253, -1.23547, 1.38 ) }
    dend_0 { pt3dadd( 1.00469, 12.3742, -1.22765, 1.38 ) }
    dend_0 { pt3dadd( 1.19179, 13.8741, -1.11322, 0.83 ) }
    dend_0 { pt3dadd( 1.45573, 15.4601, -0.90175, 0.83 ) }
    dend_0 { pt3dadd( 1.91061, 17.2506, -0.431943, 0.83 ) }
    dend_0 { pt3dadd( 2.17004, 17.9296, -0.164127, 0.83 ) }
    dend_0 { pt3dadd( 2.42647, 18.4212, 0.0832924, 1.11 ) }
    dend_0 { pt3dadd( 3.17775, 19.6181, 0.723319, 0.55 ) }
    dend_0 { pt3dadd( 4.05137, 20.8674, 1.48811, 0.83 ) }
    dend_0 { pt3dadd( 5.19773, 22.1516, 2.35837, 0.55 ) }
    dend_0 { pt3dadd( 5.78312, 22.6847, 2.75362, 0.83 ) }
    dend_0 { pt3dadd( 6.60063, 23.4067, 3.36973, 0.55 ) }
    dend_0 { pt3dadd( 7.6125, 24.3253, 4.20338, 0.55 ) }
    dend_0 { pt3dadd( 9.02452, 25.7081, 5.47614, 0.55 ) }
    dend_0 { pt3dadd( 10.5805, 27.2888, 6.88132, 0.55 ) }
    dend_0 { pt3dadd( 11.5599, 28.315, 7.93027, 0.55 ) }
    dend_0 { pt3dadd( 12.7577, 29.6129, 9.41031, 0.55 ) }
    dend_0 { pt3dadd( 13.0062, 29.8732, 9.74603, 0.83 ) }
    dend_0 { pt3dadd( 13.6618, 30.5612, 10.6929, 0.55 ) }
    dend_0 { pt3dadd( 14.2141, 31.0975, 11.4365, 0.83 ) }
    dend_0 { pt3dadd( 15.4855, 32.5629, 13.1991, 0.55 ) }
    dend_0 { pt3dadd( 15.9663, 33.0978, 13.7145, 0.83 ) }
    dend_0 { pt3dadd( 16.418, 33.4917, 14.0649, 0.55 ) }
    dend_0 { pt3dadd( 16.8671, 33.8305, 14.3343, 0.83 ) }
    dend_0 { pt3dadd( 17.8643, 34.4599, 14.8238, 0.83 ) }
    dend_0 { pt3dadd( 19.1846, 35.3167, 15.3511, 0.83 ) }
    dend_0 { pt3dadd( 19.9957, 35.8831, 15.5851, 0.55 ) }
    dend_0 { pt3dadd( 20.6143, 36.3735, 15.7669, 0.55 ) }
    dend_0 { pt3dadd( 22.2359, 37.6404, 16.2189, 0.83 ) }
    dend_0 { pt3dadd( 23.2837, 38.4528, 16.4678, 0.55 ) }
    dend_0 { pt3dadd( 24.875, 39.6425, 16.78, 0.55 ) }
    dend_0 { pt3dadd( 26.3335, 40.6395, 17.0069, 0.55 ) }
    dend_0 { pt3dadd( 27.6382, 41.4839, 17.1743, 0.55 ) }
    dend_0 { pt3dadd( 29.2874, 42.4726, 17.3102, 0.55 ) }
    dend_0 { pt3dadd( 30.2954, 42.9564, 17.3602, 0.55 ) }
    dend_0 { pt3dadd( 30.9836, 43.2277, 17.3114, 0.55 ) }
    dend_0 { pt3dadd( 31.8979, 43.4291, 17.1693, 0.55 ) }
    dend_0 { pt3dadd( 33.2628, 43.5182, 16.8453, 0.55 ) }
    dend_0 { pt3dadd( 34.1138, 43.4711, 16.6105, 0.55 ) }
    dend_0 { pt3dadd( 35.3569, 43.3704, 16.3548, 0.55 ) }
    dend_0 { pt3dadd( 37.7239, 43.2505, 16.0796, 0.55 ) }
    dend_0 { pt3dadd( 39.5808, 43.2383, 15.9961, 0.55 ) }
    dend_0 { pt3dadd( 41.5483, 43.3146, 16.0252, 0.55 ) }
    dend_0 { pt3dadd( 42.8095, 43.4048, 16.1437, 0.55 ) }
    dend_0 { pt3dadd( 46.0855, 43.9216, 16.6675, 0.55 ) }
    dend_0 { pt3dadd( 48.0233, 44.3698, 17.1237, 0.55 ) }
    dend_0 { pt3dadd( 49.4758, 44.7968, 17.6023, 0.55 ) }
    dend_0 { pt3dadd( 50.3584, 45.196, 17.9274, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 51.3817, 45.7904, 18.2991, 0.55 ) }
    dend_0 { pt3dadd( 53.1147, 46.9628, 18.7727, 0.55 ) }
    dend_0 { pt3dadd( 53.5124, 47.2451, 18.826, 0.55 ) }
    dend_0 { pt3dadd( 54.6539, 47.9996, 18.9035, 0.55 ) }
    dend_0 { pt3dadd( 55.703, 48.8036, 18.9705, 0.83 ) }
    dend_0 { pt3dadd( 56.2756, 49.2497, 18.998, 0.55 ) }
    dend_0 { pt3dadd( 57.1333, 50.0156, 19.0049, 0.83 ) }
    dend_0 { pt3dadd( 61.6443, 54.108, 20.2358, 0.83 ) }
    dend_0 { pt3dadd( 65.5697, 58.8044, 20.9928, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -25.9492, 23.4522, 5.35991, 0.55 ) }
    dend_55 { pt3dadd( -27.6332, 24.0596, 4.67074, 0.55 ) }
    dend_55 { pt3dadd( -29.4643, 24.7201, 3.92133, 0.55 ) }
    dend_55 { pt3dadd( -31.6742, 25.5172, 3.01697, 0.55 ) }
    dend_55 { pt3dadd( -33.4989, 26.1754, 2.2702, 0.83 ) }
    dend_55 { pt3dadd( -35.028, 26.7269, 1.64442, 0.55 ) }
    dend_55 { pt3dadd( -37.8662, 27.7507, 0.482872, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -25.9492, 23.4522, 5.35991, 0.55 ) }
    dend_44 { pt3dadd( -28.2473, 23.8204, 5.16754, 0.55 ) }
    dend_44 { pt3dadd( -30.6816, 24.1503, 5.20812, 0.55 ) }
    dend_44 { pt3dadd( -33.4389, 24.5231, 5.32161, 0.55 ) }
    dend_44 { pt3dadd( -37.4161, 25.0377, 5.85453, 0.55 ) }
    dend_44 { pt3dadd( -40.733, 25.3862, 6.54242, 0.55 ) }
    dend_44 { pt3dadd( -44.2047, 25.7068, 7.4162, 0.55 ) }
    dend_44 { pt3dadd( -47.5422, 25.8141, 8.63679, 0.55 ) }
    dend_44 { pt3dadd( -50.3998, 25.6481, 9.98308, 0.55 ) }
    dend_44 { pt3dadd( -53.9407, 25.2154, 12.0631, 0.55 ) }
    dend_44 { pt3dadd( -55.4694, 24.9263, 13.1941, 0.55 ) }
    dend_44 { pt3dadd( -57.1173, 24.5997, 14.4908, 0.55 ) }
    dend_44 { pt3dadd( -60.0272, 23.8, 16.6498, 0.55 ) }
    dend_44 { pt3dadd( -61.587, 23.3682, 17.5445, 0.55 ) }
    dend_44 { pt3dadd( -63.2205, 22.8663, 18.4738, 0.55 ) }
    dend_44 { pt3dadd( -65.1722, 22.2848, 19.3742, 0.55 ) }
    dend_44 { pt3dadd( -67.2964, 21.6935, 20.2911, 0.55 ) }
    dend_44 { pt3dadd( -70.3308, 20.8393, 21.532, 0.55 ) }
    dend_44 { pt3dadd( -74.403, 19.9462, 22.8044, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 25.9499, 5.78685, -18.84, 0.55 ) }
    dend_34 { pt3dadd( 30.8078, 7.27846, -19.9124, 0.55 ) }
    dend_34 { pt3dadd( 33.6297, 7.94744, -20.9184, 0.55 ) }
    dend_34 { pt3dadd( 36.4246, 8.48475, -21.9427, 0.55 ) }
    dend_34 { pt3dadd( 38.3395, 8.7792, -22.6363, 0.55 ) }
    dend_34 { pt3dadd( 41.1424, 9.14954, -23.6236, 0.55 ) }
    dend_34 { pt3dadd( 46.9692, 9.79641, -25.8453, 0.55 ) }
    dend_34 { pt3dadd( 53.5934, 10.4552, -28.8029, 0.55 ) }
    dend_34 { pt3dadd( 56.8252, 10.567, -30.4441, 0.55 ) }
    dend_34 { pt3dadd( 58.5618, 10.5778, -31.4327, 0.55 ) }
    dend_34 { pt3dadd( 60.4673, 10.5921, -32.5936, 0.55 ) }
    dend_34 { pt3dadd( 63.8739, 10.5298, -34.6453, 0.55 ) }
    dend_34 { pt3dadd( 65.117, 10.4359, -35.4257, 0.55 ) }
    dend_34 { pt3dadd( 70.3808, 10.1287, -39.1381, 0.55 ) }
    dend_34 { pt3dadd( 74.1094, 9.94511, -42.041, 0.55 ) }
    dend_34 { pt3dadd( 76.2547, 9.8736, -43.7733, 0.55 ) }
    dend_34 { pt3dadd( 78.3956, 9.78481, -45.498, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 25.9499, 5.78685, -18.84, 0.83 ) }
    dend_29 { pt3dadd( 27.5719, 6.67976, -18.8392, 0.83 ) }
    dend_29 { pt3dadd( 28.4988, 7.19127, -18.8809, 0.55 ) }
    dend_29 { pt3dadd( 29.8633, 7.97785, -19.0562, 0.83 ) }
    dend_29 { pt3dadd( 30.7811, 8.53012, -19.2008, 0.55 ) }
    dend_29 { pt3dadd( 32.0478, 9.32287, -19.3803, 0.83 ) }
    dend_29 { pt3dadd( 33.5718, 10.3017, -19.5392, 0.55 ) }
    dend_29 { pt3dadd( 34.3375, 10.7394, -19.5899, 0.55 ) }
    dend_29 { pt3dadd( 36.0951, 11.5152, -19.5925, 0.83 ) }
    dend_29 { pt3dadd( 37.6873, 12.0283, -19.3957, 0.55 ) }
    dend_29 { pt3dadd( 38.5775, 12.3025, -19.2009, 0.83 ) }
    dend_29 { pt3dadd( 39.9144, 12.7354, -18.7672, 0.55 ) }
    dend_29 { pt3dadd( 41.8362, 13.3786, -17.8977, 0.55 ) }
    dend_29 { pt3dadd( 44.5025, 14.1355, -16.5589, 0.55 ) }
    dend_29 { pt3dadd( 47.0435, 14.7628, -15.1103, 0.55 ) }
    dend_29 { pt3dadd( 49.0562, 15.2377, -13.9273, 0.55 ) }
    dend_29 { pt3dadd( 52.3748, 16.0347, -11.959, 0.55 ) }
    dend_29 { pt3dadd( 54.8044, 16.6815, -10.4628, 0.55 ) }
    dend_29 { pt3dadd( 56.2739, 17.1861, -9.5007, 0.55 ) }
    dend_29 { pt3dadd( 58.9855, 18.3767, -7.69289, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.776047, -17.6579, 6.14015, 0.83 ) }
    dend_11 { pt3dadd( -0.792589, -19.7482, 6.04797, 0.83 ) }
    dend_11 { pt3dadd( -0.808707, -21.7848, 5.95815, 0.83 ) }
    dend_11 { pt3dadd( -0.826702, -24.0587, 5.85787, 0.83 ) }
    dend_11 { pt3dadd( -0.8361, -25.2461, 5.80551, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.776047, -17.6579, 6.14015, 0.55 ) }
    dend_2 { pt3dadd( -0.313809, -18.7858, 6.90153, 0.55 ) }
    dend_2 { pt3dadd( 0.116256, -20.1624, 7.91063, 0.55 ) }
    dend_2 { pt3dadd( 0.402125, -21.9571, 9.3374, 0.55 ) }
    dend_2 { pt3dadd( 0.46434, -22.6531, 9.91696, 0.83 ) }
    dend_2 { pt3dadd( 0.474774, -24.4246, 11.6258, 0.55 ) }
    dend_2 { pt3dadd( 0.403426, -25.3368, 12.5347, 0.55 ) }
    dend_2 { pt3dadd( 0.233361, -27.1099, 14.3854, 0.83 ) }
    dend_2 { pt3dadd( 0.0362567, -28.4244, 15.8561, 0.55 ) }
    dend_2 { pt3dadd( -0.229751, -29.5049, 17.0621, 0.55 ) }
    dend_2 { pt3dadd( -0.786346, -31.5495, 19.312, 0.55 ) }
    dend_2 { pt3dadd( -1.2303, -33.179, 21.0848, 0.55 ) }
    dend_2 { pt3dadd( -1.55613, -34.4864, 22.5224, 0.55 ) }
    dend_2 { pt3dadd( -1.82594, -35.877, 23.994, 0.28 ) }
    dend_2 { pt3dadd( -1.88933, -36.4579, 24.5782, 0.55 ) }
    dend_2 { pt3dadd( -1.98368, -37.5315, 25.5899, 0.28 ) }
    dend_2 { pt3dadd( -1.91934, -39.214, 26.8702, 0.55 ) }
    dend_2 { pt3dadd( -3.08473, -44.7642, 31.5941, 0.55 ) }
    dend_2 { pt3dadd( -4.33796, -49.8886, 36.8035, 0.55 ) }
    dend_2 { pt3dadd( -5.12238, -54.1144, 42.9211, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -37.8662, 27.7507, 0.482872, 0.55 ) }
    dend_61 { pt3dadd( -39.7941, 28.318, 2.17889, 0.55 ) }
    dend_61 { pt3dadd( -40.5688, 28.5443, 3.01769, 0.83 ) }
    dend_61 { pt3dadd( -41.4299, 28.8023, 4.15409, 0.55 ) }
    dend_61 { pt3dadd( -42.0676, 29.023, 5.097, 0.83 ) }
    dend_61 { pt3dadd( -43.7504, 29.6695, 7.52719, 0.55 ) }
    dend_61 { pt3dadd( -44.3869, 29.9295, 8.44978, 0.28 ) }
    dend_61 { pt3dadd( -45.4166, 30.4139, 10.0967, 0.55 ) }
    dend_61 { pt3dadd( -46.8016, 31.0717, 12.2949, 0.55 ) }
    dend_61 { pt3dadd( -47.8715, 31.5513, 13.9013, 0.55 ) }
    dend_61 { pt3dadd( -49.3177, 32.1729, 15.9892, 0.28 ) }
    dend_61 { pt3dadd( -49.7104, 32.3196, 16.4736, 0.55 ) }
    dend_61 { pt3dadd( -50.535, 32.6225, 17.4357, 0.28 ) }
    dend_61 { pt3dadd( -51.1145, 32.8252, 18.0215, 0.55 ) }
    dend_61 { pt3dadd( -52.3313, 33.1915, 19.1025, 0.28 ) }
    dend_61 { pt3dadd( -53.0539, 33.3499, 19.7084, 0.55 ) }
    dend_61 { pt3dadd( -54.3168, 33.5318, 20.819, 0.28 ) }
    dend_61 { pt3dadd( -55.1741, 33.6371, 21.5336, 0.55 ) }
    dend_61 { pt3dadd( -59.613, 34.6509, 28.5794, 0.55 ) }
    dend_61 { pt3dadd( -63.3685, 35.0646, 36.0564, 0.55 ) }
    dend_61 { pt3dadd( -66.8628, 34.7512, 43.6433, 0.55 ) }
    dend_61 { pt3dadd( -70.3619, 33.444, 51.0851, 0.55 ) }
    dend_61 { pt3dadd( -72.7625, 32.7137, 59.0372, 0.55 ) }
    dend_61 { pt3dadd( -75.8652, 32.1634, 66.7689, 0.55 ) }
    dend_61 { pt3dadd( -79.0823, 32.9415, 74.4694, 0.55 ) }
    dend_61 { pt3dadd( -82.2589, 33.0797, 82.2104, 0.55 ) }
    dend_61 { pt3dadd( -85.2632, 33.7956, 90.0004, 0.55 ) }
    dend_61 { pt3dadd( -87.8255, 34.473, 97.9476, 0.55 ) }
    dend_61 { pt3dadd( -89.4709, 34.3615, 106.137, 0.55 ) }
    dend_61 { pt3dadd( -91.2049, 35.0019, 114.304, 0.55 ) }
    dend_61 { pt3dadd( -93.0552, 34.8032, 122.447, 0.55 ) }
    dend_61 { pt3dadd( -93.8599, 34.3819, 130.738, 0.55 ) }
    dend_61 { pt3dadd( -93.2167, 34.6467, 139.067, 0.55 ) }
    dend_61 { pt3dadd( -92.557, 33.3583, 147.241, 0.55 ) }
    dend_61 { pt3dadd( -90.7162, 31.9493, 155.205, 0.55 ) }
    dend_61 { pt3dadd( -89.2946, 30.8948, 163.324, 0.55 ) }
    dend_61 { pt3dadd( -88.7496, 30.4182, 171.627, 0.55 ) }
    dend_61 { pt3dadd( -90.0125, 31.0737, 179.878, 0.55 ) }
    dend_61 { pt3dadd( -90.5044, 30.8966, 188.209, 0.55 ) }
    dend_61 { pt3dadd( -89.42, 32.177, 196.42, 0.55 ) }
    dend_61 { pt3dadd( -89.721, 33.9544, 204.613, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -37.8662, 27.7507, 0.482872, 0.55 ) }
    dend_56 { pt3dadd( -40.0882, 27.7112, -1.1529, 0.55 ) }
    dend_56 { pt3dadd( -41.9904, 27.665, -3.12931, 0.55 ) }
    dend_56 { pt3dadd( -43.8583, 27.7539, -5.31229, 0.55 ) }
    dend_56 { pt3dadd( -45.0279, 27.8097, -6.67926, 0.55 ) }
    dend_56 { pt3dadd( -47.1614, 27.9113, -9.17275, 0.83 ) }
    dend_56 { pt3dadd( -48.7223, 27.9856, -10.997, 0.55 ) }
    dend_56 { pt3dadd( -50.6832, 28.0147, -13.7368, 0.83 ) }
    dend_56 { pt3dadd( -51.5737, 28.1577, -15.3807, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -74.403, 19.9462, 22.8044, 0.28 ) }
    dend_48 { pt3dadd( -75.4619, 18.1691, 22.4402, 0.28 ) }
    dend_48 { pt3dadd( -75.9701, 17.407, 22.2167, 0.28 ) }
    dend_48 { pt3dadd( -76.6343, 16.3303, 21.857, 0.55 ) }
    dend_48 { pt3dadd( -77.1826, 15.3833, 21.5485, 0.28 ) }
    dend_48 { pt3dadd( -77.9915, 13.94, 21.0972, 0.55 ) }
    dend_48 { pt3dadd( -80.2425, 9.6956, 19.8411, 0.28 ) }
    dend_48 { pt3dadd( -80.9839, 8.21001, 19.2732, 0.55 ) }
    dend_48 { pt3dadd( -82.1116, 5.92408, 18.3161, 0.28 ) }
    dend_48 { pt3dadd( -82.7634, 4.55824, 17.6775, 0.55 ) }
    dend_48 { pt3dadd( -83.2146, 3.61757, 17.2133, 0.28 ) }
    dend_48 { pt3dadd( -83.7287, 2.53768, 16.6898, 0.55 ) }
    dend_48 { pt3dadd( -85.2856, -1.0692, 15.0327, 0.28 ) }
    dend_48 { pt3dadd( -85.7762, -2.1592, 14.491, 0.55 ) }
    dend_48 { pt3dadd( -86.637, -3.82105, 13.482, 0.28 ) }
    dend_48 { pt3dadd( -87.3417, -4.88201, 12.7405, 0.28 ) }
    dend_48 { pt3dadd( -87.968, -5.58894, 12.2202, 0.55 ) }
    dend_48 { pt3dadd( -90.1325, -7.57126, 10.8274, 0.28 ) }
    dend_48 { pt3dadd( -91.1341, -8.3732, 10.2842, 0.55 ) }
    dend_48 { pt3dadd( -93.5858, -10.1952, 8.92718, 0.28 ) }
    dend_48 { pt3dadd( -96.0336, -11.8046, 7.68825, 0.28 ) }
    dend_48 { pt3dadd( -98.6923, -13.3352, 6.42548, 0.28 ) }
    dend_48 { pt3dadd( -99.906, -13.91, 5.94697, 0.55 ) }
    dend_48 { pt3dadd( -105.799, -20.4056, 2.5323, 0.55 ) }
    dend_48 { pt3dadd( -112.265, -27.047, 0.905856, 0.55 ) }
    dend_48 { pt3dadd( -118.658, -33.2854, -2.1279, 0.55 ) }
    dend_48 { pt3dadd( -125.241, -38.9256, -5.94337, 0.55 ) }
    dend_48 { pt3dadd( -131.935, -43.8779, -10.5418, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -74.403, 19.9462, 22.8044, 0.55 ) }
    dend_45 { pt3dadd( -75.0175, 19.8971, 22.9196, 0.55 ) }
    dend_45 { pt3dadd( -76.74, 19.7739, 23.4708, 0.55 ) }
    dend_45 { pt3dadd( -77.3854, 19.7136, 23.714, 0.55 ) }
    dend_45 { pt3dadd( -78.9018, 19.5288, 24.3126, 0.55 ) }
    dend_45 { pt3dadd( -81.2395, 19.2609, 25.1167, 0.55 ) }
    dend_45 { pt3dadd( -82.4557, 19.1564, 25.5103, 0.28 ) }
    dend_45 { pt3dadd( -84.3498, 18.952, 26.0879, 0.55 ) }
    dend_45 { pt3dadd( -85.7586, 18.7692, 26.4673, 0.55 ) }
    dend_45 { pt3dadd( -86.3534, 18.6884, 26.629, 0.28 ) }
    dend_45 { pt3dadd( -89.9213, 18.2012, 27.5946, 0.55 ) }
    dend_45 { pt3dadd( -91.5931, 17.8934, 27.9475, 0.28 ) }
    dend_45 { pt3dadd( -93.8542, 17.4622, 28.2906, 0.28 ) }
    dend_45 { pt3dadd( -95.8094, 17.1111, 28.4695, 0.55 ) }
    dend_45 { pt3dadd( -103.37, 16.9051, 30.7626, 0.55 ) }
    dend_45 { pt3dadd( -110.627, 16.5612, 33.8726, 0.55 ) }
    dend_45 { pt3dadd( -117.413, 15.5042, 37.7698, 0.55 ) }
    dend_45 { pt3dadd( -123.976, 15.7407, 42.1676, 0.55 ) }
    dend_45 { pt3dadd( -129.487, 15.8114, 47.8325, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -133.813, 16.3611, 54.4228, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 78.3956, 9.78481, -45.498, 0.55 ) }
    dend_42 { pt3dadd( 82.6738, 11.0964, -48.9627, 0.55 ) }
    dend_42 { pt3dadd( 84.0267, 11.454, -50.1438, 0.55 ) }
    dend_42 { pt3dadd( 85.7204, 11.8481, -51.602, 0.55 ) }
    dend_42 { pt3dadd( 88.7943, 12.5372, -54.4303, 0.55 ) }
    dend_42 { pt3dadd( 92.0038, 13.1292, -57.4628, 0.55 ) }
    dend_42 { pt3dadd( 93.574, 13.2976, -58.9062, 0.83 ) }
    dend_42 { pt3dadd( 94.8673, 13.3503, -60.1934, 0.55 ) }
    dend_42 { pt3dadd( 95.8355, 13.3125, -61.2552, 0.83 ) }
    dend_42 { pt3dadd( 98.1716, 12.9057, -63.9795, 0.55 ) }
    dend_42 { pt3dadd( 100.097, 12.3969, -66.2373, 0.55 ) }
    dend_42 { pt3dadd( 102.311, 11.7972, -68.7237, 0.55 ) }
    dend_42 { pt3dadd( 104.776, 11.1979, -71.5426, 0.55 ) }
    dend_42 { pt3dadd( 106.429, 10.7581, -73.4751, 0.55 ) }
    dend_42 { pt3dadd( 108.295, 10.2563, -75.7155, 0.55 ) }
    dend_42 { pt3dadd( 109.907, 9.87783, -77.7655, 0.55 ) }
    dend_42 { pt3dadd( 110.92, 9.7296, -79.1914, 0.55 ) }
    dend_42 { pt3dadd( 112.206, 9.47708, -82.0635, 0.55 ) }
    dend_42 { pt3dadd( 112.908, 9.26513, -83.8601, 0.55 ) }
    dend_42 { pt3dadd( 113.514, 8.8822, -86.2482, 0.55 ) }
    dend_42 { pt3dadd( 114.347, 8.1176, -90.2854, 0.55 ) }
    dend_42 { pt3dadd( 114.517, 7.91248, -91.1957, 0.28 ) }
    dend_42 { pt3dadd( 116.72, 5.30228, -102.263, 0.28 ) }
    dend_42 { pt3dadd( 117.463, 4.55815, -105.511, 0.83 ) }
    dend_42 { pt3dadd( 120.388, 1.72569, -117.029, 0.83 ) }
    dend_42 { pt3dadd( 121.891, 0.207477, -122.377, 0.83 ) }
    dend_42 { pt3dadd( 122.613, -0.490462, -124.542, 0.55 ) }
    dend_42 { pt3dadd( 123.441, -1.17887, -126.651, 0.55 ) }
    dend_42 { pt3dadd( 125.727, -2.53822, -130.555, 0.55 ) }
    dend_42 { pt3dadd( 128.173, -3.76396, -133.981, 0.28 ) }
    dend_42 { pt3dadd( 128.91, -3.98973, -134.177, 0.55 ) }
    dend_42 { pt3dadd( 130.532, -4.37569, -134.025, 0.28 ) }
    dend_42 { pt3dadd( 131.534, -4.54567, -133.785, 0.55 ) }
    dend_42 { pt3dadd( 132.579, -4.73591, -133.445, 0.28 ) }
    dend_42 { pt3dadd( 133.833, -4.90394, -132.979, 0.55 ) }
    dend_42 { pt3dadd( 135.71, -5.06103, -132.484, 0.28 ) }
    dend_42 { pt3dadd( 137.216, -5.23171, -132.135, 0.55 ) }
    dend_42 { pt3dadd( 138.884, -5.31505, -131.884, 0.28 ) }
    dend_42 { pt3dadd( 141.152, -5.42179, -131.743, 0.55 ) }
    dend_42 { pt3dadd( 143.695, -5.48569, -131.739, 0.55 ) }
    dend_42 { pt3dadd( 145.933, -5.51702, -131.885, 0.28 ) }
    dend_42 { pt3dadd( 149.029, -5.53391, -132.259, 0.55 ) }
    dend_42 { pt3dadd( 154.384, -5.42376, -133.476, 0.55 ) }
    dend_42 { pt3dadd( 156.751, -5.25893, -134.301, 0.55 ) }
    dend_42 { pt3dadd( 157.768, -5.14802, -134.765, 0.83 ) }
    dend_42 { pt3dadd( 159.706, -4.92419, -135.828, 0.55 ) }
    dend_42 { pt3dadd( 161.051, -4.71696, -136.65, 0.83 ) }
    dend_42 { pt3dadd( 164.67, -4.0683, -138.904, 0.55 ) }
    dend_42 { pt3dadd( 166.881, -3.81829, -140.337, 0.28 ) }
    dend_42 { pt3dadd( 167.812, -3.76808, -140.836, 0.55 ) }
    dend_42 { pt3dadd( 170.361, -3.85532, -141.917, 0.28 ) }
    dend_42 { pt3dadd( 171.254, -3.96418, -142.237, 0.55 ) }
    dend_42 { pt3dadd( 173.095, -4.29764, -142.611, 0.28 ) }
    dend_42 { pt3dadd( 174.968, -4.80948, -142.666, 0.55 ) }
    dend_42 { pt3dadd( 178.75, -6.03443, -142.111, 0.28 ) }
    dend_42 { pt3dadd( 180.493, -6.67188, -141.669, 0.55 ) }
    dend_42 { pt3dadd( 183.086, -7.7615, -140.872, 0.28 ) }
    dend_42 { pt3dadd( 186.362, -9.12527, -139.747, 0.55 ) }
    dend_42 { pt3dadd( 188.73, -10.0804, -138.896, 0.55 ) }
    dend_42 { pt3dadd( 192.832, -11.6115, -137.353, 0.28 ) }
    dend_42 { pt3dadd( 194.516, -12.1662, -136.86, 0.55 ) }
    dend_42 { pt3dadd( 197.419, -12.9654, -136.329, 0.28 ) }
    dend_42 { pt3dadd( 200.311, -13.5513, -136.002, 0.55 ) }
    dend_42 { pt3dadd( 201.898, -13.7021, -136.045, 0.28 ) }
    dend_42 { pt3dadd( 203.331, -13.6546, -136.197, 0.55 ) }
    dend_42 { pt3dadd( 207.376, -13.2919, -137.008, 0.28 ) }
    dend_42 { pt3dadd( 210.264, -12.8419, -137.635, 0.28 ) }
    dend_42 { pt3dadd( 212.775, -12.2758, -138.217, 0.55 ) }
    dend_42 { pt3dadd( 215.546, -11.5774, -139.001, 0.28 ) }
    dend_42 { pt3dadd( 216.244, -11.3595, -139.174, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 78.3956, 9.78481, -45.498, 0.55 ) }
    dend_35 { pt3dadd( 79.2314, 7.67502, -46.7399, 0.55 ) }
    dend_35 { pt3dadd( 79.7736, 5.87871, -47.6633, 0.28 ) }
    dend_35 { pt3dadd( 80.265, 4.24372, -48.3661, 0.55 ) }
    dend_35 { pt3dadd( 81.4887, 0.798362, -49.8879, 0.28 ) }
    dend_35 { pt3dadd( 81.5605, 0.578359, -50.0153, 0.55 ) }
    dend_35 { pt3dadd( 81.9707, -0.577415, -50.7789, 0.28 ) }
    dend_35 { pt3dadd( 82.2255, -1.55621, -51.5653, 0.55 ) }
    dend_35 { pt3dadd( 82.4369, -2.59389, -52.5025, 0.28 ) }
    dend_35 { pt3dadd( 82.6867, -4.01916, -53.8453, 0.55 ) }
    dend_35 { pt3dadd( 83.31, -7.59339, -57.1511, 0.55 ) }
    dend_35 { pt3dadd( 83.8434, -10.8599, -60.221, 0.55 ) }
    dend_35 { pt3dadd( 84.2449, -13.474, -62.6784, 0.55 ) }
    dend_35 { pt3dadd( 84.5931, -16.0461, -65.0498, 0.55 ) }
    dend_35 { pt3dadd( 84.6804, -16.7088, -65.6351, 0.28 ) }
    dend_35 { pt3dadd( 84.7916, -17.41, -66.2029, 0.55 ) }
    dend_35 { pt3dadd( 85.0317, -18.3636, -66.9004, 0.28 ) }
    dend_35 { pt3dadd( 85.63, -20.0403, -67.9935, 0.55 ) }
    dend_35 { pt3dadd( 87.0389, -23.1781, -69.5687, 0.55 ) }
    dend_35 { pt3dadd( 87.8079, -24.8517, -70.2589, 0.28 ) }
    dend_35 { pt3dadd( 88.4894, -26.5715, -71.039, 0.55 ) }
    dend_35 { pt3dadd( 89.2658, -29.0092, -72.2264, 0.28 ) }
    dend_35 { pt3dadd( 89.7663, -30.9957, -73.2328, 0.55 ) }
    dend_35 { pt3dadd( 90.3881, -33.9818, -74.7443, 0.28 ) }
    dend_35 { pt3dadd( 91.0514, -37.0613, -76.2121, 0.55 ) }
    dend_35 { pt3dadd( 91.9564, -41.5429, -78.3832, 0.28 ) }
    dend_35 { pt3dadd( 92.3871, -43.9388, -79.5488, 0.55 ) }
    dend_35 { pt3dadd( 92.7895, -46.3987, -80.7993, 0.28 ) }
    dend_35 { pt3dadd( 93.1247, -48.5779, -82.0348, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 93.6418, -51.3111, -83.8125, 0.55 ) }
    dend_35 { pt3dadd( 94.2915, -53.8191, -85.3964, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 58.9855, 18.3767, -7.69289, 0.55 ) }
    dend_31 { pt3dadd( 61.8768, 17.7117, -7.78079, 0.55 ) }
    dend_31 { pt3dadd( 63.9479, 17.251, -8.05552, 0.55 ) }
    dend_31 { pt3dadd( 68.4424, 16.3087, -8.89146, 0.55 ) }
    dend_31 { pt3dadd( 70.4327, 15.9339, -9.44809, 0.55 ) }
    dend_31 { pt3dadd( 72.5929, 15.6188, -10.136, 0.55 ) }
    dend_31 { pt3dadd( 75.4674, 15.3405, -11.2258, 0.55 ) }
    dend_31 { pt3dadd( 78.447, 15.1154, -12.679, 0.55 ) }
    dend_31 { pt3dadd( 79.9808, 15.0674, -13.6199, 0.55 ) }
    dend_31 { pt3dadd( 83.029, 15.1849, -15.943, 0.55 ) }
    dend_31 { pt3dadd( 84.4268, 15.2733, -17.0512, 0.55 ) }
    dend_31 { pt3dadd( 87.6808, 15.4645, -19.7627, 0.55 ) }
    dend_31 { pt3dadd( 89.8776, 15.4988, -21.6244, 0.55 ) }
    dend_31 { pt3dadd( 91.5056, 15.4754, -22.9257, 0.83 ) }
    dend_31 { pt3dadd( 94.1005, 15.3292, -25.0226, 0.55 ) }
    dend_31 { pt3dadd( 96.6442, 15.0141, -27.0384, 0.83 ) }
    dend_31 { pt3dadd( 98.8041, 14.6103, -28.7204, 0.55 ) }
    dend_31 { pt3dadd( 100.747, 14.225, -30.1031, 0.55 ) }
    dend_31 { pt3dadd( 101.868, 14.0204, -30.8056, 0.83 ) }
    dend_31 { pt3dadd( 104.508, 13.4794, -32.3074, 0.28 ) }
    dend_31 { pt3dadd( 105.841, 13.2186, -32.948, 0.28 ) }
    dend_31 { pt3dadd( 107.11, 12.9245, -33.6694, 0.28 ) }
    dend_31 { pt3dadd( 108.486, 12.644, -34.4379, 0.28 ) }
    dend_31 { pt3dadd( 110.684, 12.2569, -35.6918, 0.28 ) }
    dend_31 { pt3dadd( 111.574, 12.0979, -36.1657, 0.55 ) }
    dend_31 { pt3dadd( 113.74, 11.6324, -37.0892, 0.55 ) }
    dend_31 { pt3dadd( 117.665, 10.6628, -38.5836, 0.55 ) }
    dend_31 { pt3dadd( 118.756, 10.345, -38.9658, 0.55 ) }
    dend_31 { pt3dadd( 119.733, 10.0119, -39.2827, 0.83 ) }
    dend_31 { pt3dadd( 121.891, 9.26331, -39.782, 0.55 ) }
    dend_31 { pt3dadd( 123.771, 8.60133, -40.1868, 0.55 ) }
    dend_31 { pt3dadd( 125.551, 7.97849, -40.5585, 0.55 ) }
    dend_31 { pt3dadd( 126.92, 7.49374, -40.8926, 0.55 ) }
    dend_31 { pt3dadd( 129.057, 6.64235, -41.5883, 0.55 ) }
    dend_31 { pt3dadd( 131.528, 5.50787, -42.6403, 0.55 ) }
    dend_31 { pt3dadd( 135.272, 3.48333, -44.7344, 0.55 ) }
    dend_31 { pt3dadd( 137.268, 2.15404, -46.1579, 0.55 ) }
    dend_31 { pt3dadd( 138.945, 0.760681, -47.6272, 0.28 ) }
    dend_31 { pt3dadd( 139.425, 0.25083, -48.1523, 0.55 ) }
    dend_31 { pt3dadd( 140.431, -1.1805, -49.5457, 0.28 ) }
    dend_31 { pt3dadd( 141.23, -2.80079, -51.0106, 0.55 ) }
    dend_31 { pt3dadd( 141.921, -4.91433, -52.5943, 0.55 ) }
    dend_31 { pt3dadd( 142.407, -6.34169, -53.5664, 0.28 ) }
    dend_31 { pt3dadd( 142.592, -6.85982, -53.8853, 0.55 ) }
    dend_31 { pt3dadd( 143.082, -8.15685, -54.6639, 0.28 ) }
    dend_31 { pt3dadd( 143.771, -9.86682, -55.6428, 0.55 ) }
    dend_31 { pt3dadd( 145.628, -14.0437, -57.9294, 0.55 ) }
    dend_31 { pt3dadd( 146.612, -16.1723, -59.0448, 0.55 ) }
    dend_31 { pt3dadd( 147.532, -18.1323, -60.0525, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 58.9855, 18.3767, -7.69289, 0.55 ) }
    dend_30 { pt3dadd( 61.4861, 18.5207, -5.74831, 0.55 ) }
    dend_30 { pt3dadd( 62.289, 18.5669, -5.16921, 0.55 ) }
    dend_30 { pt3dadd( 65.283, 18.61, -3.15003, 0.55 ) }
    dend_30 { pt3dadd( 68.6248, 18.7179, -0.842026, 0.55 ) }
    dend_30 { pt3dadd( 72.9053, 18.8394, 2.23004, 0.55 ) }
    dend_30 { pt3dadd( 74.0878, 18.8747, 3.07071, 0.55 ) }
    dend_30 { pt3dadd( 76.2098, 18.8615, 4.55289, 0.55 ) }
    dend_30 { pt3dadd( 78.538, 18.9042, 6.09254, 0.55 ) }
    dend_30 { pt3dadd( 81.2476, 19.0347, 7.7649, 0.55 ) }
    dend_30 { pt3dadd( 83.8007, 19.1915, 9.35229, 0.55 ) }
    dend_30 { pt3dadd( 85.2028, 19.343, 10.1619, 0.55 ) }
    dend_30 { pt3dadd( 86.849, 19.5663, 11.1125, 0.55 ) }
    dend_30 { pt3dadd( 88.8861, 19.9014, 12.2555, 0.83 ) }
    dend_30 { pt3dadd( 92.2302, 20.467, 13.7772, 0.55 ) }
    dend_30 { pt3dadd( 94.4467, 20.7655, 14.6729, 0.83 ) }
    dend_30 { pt3dadd( 97.5263, 21.0528, 15.8018, 0.55 ) }
    dend_30 { pt3dadd( 98.4722, 21.0929, 16.1317, 0.55 ) }
    dend_30 { pt3dadd( 101.409, 21.0834, 17.0846, 0.55 ) }
    dend_30 { pt3dadd( 106.667, 20.7793, 18.5601, 0.55 ) }
    dend_30 { pt3dadd( 110.519, 20.3597, 19.539, 0.55 ) }
    dend_30 { pt3dadd( 113.567, 19.8883, 20.3762, 0.55 ) }
    dend_30 { pt3dadd( 116.672, 19.2453, 21.3253, 0.55 ) }
    dend_30 { pt3dadd( 117.325, 19.0931, 21.5272, 0.28 ) }
    dend_30 { pt3dadd( 118.649, 18.7344, 21.9298, 0.83 ) }
    dend_30 { pt3dadd( 124.087, 17.1835, 23.6099, 0.55 ) }
    dend_30 { pt3dadd( 127.892, 16.108, 24.7116, 0.55 ) }
    dend_30 { pt3dadd( 131.014, 15.2951, 25.6997, 0.55 ) }
    dend_30 { pt3dadd( 132.878, 14.8027, 26.3076, 0.83 ) }
    dend_30 { pt3dadd( 134.347, 14.4352, 26.7901, 0.28 ) }
    dend_30 { pt3dadd( 135.678, 14.1048, 27.2155, 0.55 ) }
    dend_30 { pt3dadd( 146.032, 13.8326, 32.1945, 0.55 ) }
    dend_30 { pt3dadd( 157.025, 12.0373, 35.0652, 0.55 ) }
    dend_30 { pt3dadd( 167.966, 11.524, 38.5623, 0.55 ) }
    dend_30 { pt3dadd( 177.694, 9.33096, 44.298, 0.55 ) }
    dend_30 { pt3dadd( 186.719, 5.66061, 50.3933, 0.55 ) }
    dend_30 { pt3dadd( 196.623, 0.661303, 53.2093, 0.55 ) }
    dend_30 { pt3dadd( 206.372, -5.18733, 54.0258, 0.55 ) }
    dend_30 { pt3dadd( 217.144, -9.10028, 54.3205, 0.55 ) }
    dend_30 { pt3dadd( 227.785, -13.2328, 55.3625, 0.55 ) }
    dend_30 { pt3dadd( 238.889, -16.1481, 55.7758, 0.55 ) }
    dend_30 { pt3dadd( 249.934, -18.6993, 57.6946, 0.55 ) }
    dend_30 { pt3dadd( 260.247, -23.1114, 60.052, 0.55 ) }
    dend_30 { pt3dadd( 270.843, -25.7157, 63.6834, 0.55 ) }
    dend_30 { pt3dadd( 280.971, -26.8373, 69.0148, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -0.8361, -25.2461, 5.80551, 1.38 ) }
    dend_13 { pt3dadd( 2.9781, -28.7556, 5.05757, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.8361, -25.2461, 5.80551, 0.55 ) }
    dend_12 { pt3dadd( -1.81875, -26.5321, 5.6481, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -2.89318, -28.1708, 5.4769, 0.55 ) }
    dend_12 { pt3dadd( -3.74192, -29.263, 5.35208, 0.55 ) }
    dend_12 { pt3dadd( -4.43476, -30.1764, 5.12499, 0.55 ) }
    dend_12 { pt3dadd( -5.92174, -32.073, 4.46782, 0.55 ) }
    dend_12 { pt3dadd( -6.96184, -33.3426, 3.97324, 0.55 ) }
    dend_12 { pt3dadd( -7.87862, -34.4804, 3.49343, 0.55 ) }
    dend_12 { pt3dadd( -10.2428, -37.2574, 2.26191, 0.55 ) }
    dend_12 { pt3dadd( -13.0949, -40.479, 0.807068, 0.55 ) }
    dend_12 { pt3dadd( -15.2983, -42.922, -0.364071, 0.55 ) }
    dend_12 { pt3dadd( -16.6979, -44.5238, -1.13454, 0.55 ) }
    dend_12 { pt3dadd( -18.3001, -46.4411, -2.01217, 0.55 ) }
    dend_12 { pt3dadd( -20.3214, -49.1749, -3.09178, 0.55 ) }
    dend_12 { pt3dadd( -21.491, -51.0991, -3.69134, 0.55 ) }
    dend_12 { pt3dadd( -22.9403, -53.8523, -4.27849, 0.55 ) }
    dend_12 { pt3dadd( -24.0851, -56.4199, -4.68974, 0.55 ) }
    dend_12 { pt3dadd( -25.2135, -59.6074, -5.07661, 0.55 ) }
    dend_12 { pt3dadd( -26.2478, -63.3336, -5.37958, 0.55 ) }
    dend_12 { pt3dadd( -26.7681, -66.1668, -5.48763, 0.55 ) }
    dend_12 { pt3dadd( -26.9471, -67.5713, -5.42859, 0.55 ) }
    dend_12 { pt3dadd( -27.1998, -70.8606, -5.06667, 0.55 ) }
    dend_12 { pt3dadd( -27.3956, -73.9351, -4.63446, 0.55 ) }
    dend_12 { pt3dadd( -27.4737, -77.0233, -3.93176, 0.55 ) }
    dend_12 { pt3dadd( -27.5565, -78.7959, -3.4324, 0.55 ) }
    dend_12 { pt3dadd( -27.8173, -84.2741, -1.67397, 0.55 ) }
    dend_12 { pt3dadd( -27.8407, -84.6776, -1.53771, 0.55 ) }
    dend_12 { pt3dadd( -27.9475, -87.1461, -0.631556, 0.55 ) }
    dend_12 { pt3dadd( -28.3714, -91.5715, 1.0556, 0.55 ) }
    dend_12 { pt3dadd( -28.5049, -93.0521, 1.52745, 0.55 ) }
    dend_12 { pt3dadd( -28.6951, -95.3703, 1.845, 0.55 ) }
    dend_12 { pt3dadd( -28.7046, -96.2306, 1.76458, 0.55 ) }
    dend_12 { pt3dadd( -28.4978, -99.1367, 0.954497, 0.55 ) }
    dend_12 { pt3dadd( -28.1782, -101.014, 0.0408896, 0.55 ) }
    dend_12 { pt3dadd( -27.4658, -104.001, -2.02701, 0.55 ) }
    dend_12 { pt3dadd( -26.3857, -107.648, -4.82055, 0.28 ) }
    dend_12 { pt3dadd( -26.0801, -108.549, -5.63487, 0.55 ) }
    dend_12 { pt3dadd( -25.5886, -109.915, -6.99367, 0.28 ) }
    dend_12 { pt3dadd( -25.5143, -110.121, -7.21017, 0.55 ) }
    dend_12 { pt3dadd( -25.134, -111.249, -8.29675, 0.28 ) }
    dend_12 { pt3dadd( -25.0494, -111.633, -8.57926, 0.55 ) }
    dend_12 { pt3dadd( -24.7316, -113.633, -9.6574, 0.28 ) }
    dend_12 { pt3dadd( -24.6523, -114.315, -10.0205, 0.55 ) }
    dend_12 { pt3dadd( -24.4704, -116.288, -10.9597, 0.28 ) }
    dend_12 { pt3dadd( -24.4108, -116.909, -11.2525, 0.55 ) }
    dend_12 { pt3dadd( -24.2298, -119.053, -12.2302, 0.28 ) }
    dend_12 { pt3dadd( -24.1402, -120.039, -12.6841, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -5.12238, -54.1144, 42.9211, 0.55 ) }
    dend_10 { pt3dadd( -9.1758, -63.0043, 49.6439, 0.55 ) }
    dend_10 { pt3dadd( -14.699, -71.3698, 56.1004, 0.55 ) }
    dend_10 { pt3dadd( -19.4862, -80.318, 62.2652, 0.55 ) }
    dend_10 { pt3dadd( -24.369, -89.3729, 68.1874, 0.55 ) }
    dend_10 { pt3dadd( -27.4148, -99.1836, 73.9452, 0.55 ) }
    dend_10 { pt3dadd( -30.7018, -108.617, 80.2392, 0.55 ) }
    dend_10 { pt3dadd( -31.3225, -119.214, 85.0516, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -5.12238, -54.1144, 42.9211, 0.55 ) }
    dend_3 { pt3dadd( -4.29238, -59.9779, 49.1416, 0.55 ) }
    dend_3 { pt3dadd( -2.96147, -66.7406, 54.14, 0.55 ) }
    dend_3 { pt3dadd( -3.03245, -73.6914, 59.0422, 0.55 ) }
    dend_3 { pt3dadd( -3.52967, -81.0965, 63.1192, 0.55 ) }
    dend_3 { pt3dadd( -3.68353, -88.4365, 67.3466, 0.55 ) }
    dend_3 { pt3dadd( -3.82557, -95.4669, 72.1209, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -51.5737, 28.1577, -15.3807, 0.83 ) }
    dend_60 { pt3dadd( -52.0118, 28.4364, -17.3016, 0.83 ) }
    dend_60 { pt3dadd( -53.05, 29.2603, -21.7056, 0.55 ) }
    dend_60 { pt3dadd( -53.4509, 29.6807, -23.5146, 0.83 ) }
    dend_60 { pt3dadd( -53.8347, 30.1872, -25.3719, 0.55 ) }
    dend_60 { pt3dadd( -54.1453, 30.8306, -27.1114, 0.55 ) }
    dend_60 { pt3dadd( -54.2568, 31.2089, -27.9097, 0.28 ) }
    dend_60 { pt3dadd( -54.3108, 31.5349, -28.3249, 0.55 ) }
    dend_60 { pt3dadd( -54.3006, 32.8215, -29.4471, 0.28 ) }
    dend_60 { pt3dadd( -54.2648, 33.3904, -29.9059, 0.55 ) }
    dend_60 { pt3dadd( -54.1291, 35.4288, -31.4077, 0.28 ) }
    dend_60 { pt3dadd( -54.0436, 37.0874, -32.5235, 0.55 ) }
    dend_60 { pt3dadd( -54.0124, 39.7472, -34.1283, 0.28 ) }
    dend_60 { pt3dadd( -54.0546, 42.1245, -35.4579, 0.28 ) }
    dend_60 { pt3dadd( -54.1499, 43.4808, -36.1419, 0.55 ) }
    dend_60 { pt3dadd( -54.3676, 45.1009, -36.9057, 0.28 ) }
    dend_60 { pt3dadd( -54.5203, 45.8864, -37.2368, 0.55 ) }
    dend_60 { pt3dadd( -55.0208, 47.6938, -38.0414, 0.28 ) }
    dend_60 { pt3dadd( -55.4675, 48.8677, -38.5955, 0.28 ) }
    dend_60 { pt3dadd( -55.9492, 50.0007, -39.1597, 0.28 ) }
    dend_60 { pt3dadd( -56.1795, 50.5952, -39.4712, 0.55 ) }
    dend_60 { pt3dadd( -56.9946, 52.949, -40.8481, 0.28 ) }
    dend_60 { pt3dadd( -57.8796, 55.6923, -42.5747, 0.55 ) }
    dend_60 { pt3dadd( -58.1711, 56.6357, -43.1817, 0.55 ) }
    dend_60 { pt3dadd( -58.4708, 57.5972, -43.7628, 0.55 ) }
    dend_60 { pt3dadd( -59.2468, 59.6292, -44.9737, 0.55 ) }
    dend_60 { pt3dadd( -59.8684, 60.9529, -45.752, 0.28 ) }
    dend_60 { pt3dadd( -60.1739, 61.4555, -46.023, 0.55 ) }
    dend_60 { pt3dadd( -61.0972, 62.8464, -46.6795, 0.28 ) }
    dend_60 { pt3dadd( -62.1762, 64.294, -47.4028, 0.55 ) }
    dend_60 { pt3dadd( -63.9898, 66.3399, -48.4202, 0.28 ) }
    dend_60 { pt3dadd( -64.8688, 67.1842, -48.8229, 0.28 ) }
    dend_60 { pt3dadd( -66.3288, 68.2915, -49.4188, 0.55 ) }
    dend_60 { pt3dadd( -67.9789, 69.4079, -50.0598, 0.28 ) }
    dend_60 { pt3dadd( -68.2769, 69.5793, -50.1545, 0.55 ) }
    dend_60 { pt3dadd( -69.342, 70.1172, -50.435, 0.28 ) }
    dend_60 { pt3dadd( -72.9781, 71.8485, -51.2506, 0.55 ) }
    dend_60 { pt3dadd( -78.0748, 73.8453, -52.2987, 0.28 ) }
    dend_60 { pt3dadd( -79.0327, 74.1448, -52.5016, 0.55 ) }
    dend_60 { pt3dadd( -81.6717, 74.8755, -53.0405, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -82.7892, 75.1576, -53.2793, 0.28 ) }
    dend_60 { pt3dadd( -83.7752, 75.3639, -53.5056, 0.55 ) }
    dend_60 { pt3dadd( -86.7156, 75.6318, -54.1535, 0.28 ) }
    dend_60 { pt3dadd( -88.752, 75.717, -54.4642, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -51.5737, 28.1577, -15.3807, 0.55 ) }
    dend_57 { pt3dadd( -52.0602, 29.5243, -16.2662, 0.55 ) }
    dend_57 { pt3dadd( -52.3369, 30.3803, -16.702, 0.28 ) }
    dend_57 { pt3dadd( -52.6061, 31.0918, -16.8142, 0.55 ) }
    dend_57 { pt3dadd( -53.2246, 32.7257, -17.0719, 0.28 ) }
    dend_57 { pt3dadd( -53.6589, 33.8733, -17.2529, 0.55 ) }
    dend_57 { pt3dadd( -54.4597, 35.989, -17.5866, 0.28 ) }
    dend_57 { pt3dadd( -54.9252, 37.2321, -17.557, 0.55 ) }
    dend_57 { pt3dadd( -56.4499, 40.7398, -16.3771, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -131.935, -43.8779, -10.5418, 0.55 ) }
    dend_52 { pt3dadd( -139.319, -52.1704, -14.9626, 0.55 ) }
    dend_52 { pt3dadd( -144.814, -61.1902, -20.3863, 0.55 ) }
    dend_52 { pt3dadd( -149.433, -68.9998, -28.1349, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -131.935, -43.8779, -10.5418, 0.55 ) }
    dend_49 { pt3dadd( -138.665, -50.2653, -15.4497, 0.55 ) }
    dend_49 { pt3dadd( -144.363, -56.6061, -21.5593, 0.55 ) }
    dend_49 { pt3dadd( -149.637, -63.0662, -27.9016, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -133.813, 16.3611, 54.4228, 0.55 ) }
    dend_47 { pt3dadd( -144.317, 16.5956, 62.3173, 0.55 ) }
    dend_47 { pt3dadd( -155.517, 18.3566, 68.9393, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -133.813, 16.3611, 54.4228, 0.55 ) }
    dend_46 { pt3dadd( -145.653, 14.9995, 59.2371, 0.55 ) }
    dend_46 { pt3dadd( -157.512, 15.6566, 64.1671, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 94.2915, -53.8191, -85.3964, 0.28 ) }
    dend_39 { pt3dadd( 101.534, -58.662, -95.5547, 0.28 ) }
    dend_39 { pt3dadd( 102.258, -59.1651, -96.4383, 0.55 ) }
    dend_39 { pt3dadd( 103.482, -60.0145, -97.9301, 0.28 ) }
    dend_39 { pt3dadd( 104.512, -60.7297, -99.1861, 0.28 ) }
    dend_39 { pt3dadd( 105.875, -61.6764, -100.849, 0.55 ) }
    dend_39 { pt3dadd( 107.673, -62.9246, -103.042, 0.55 ) }
    dend_39 { pt3dadd( 110.099, -64.4863, -103.909, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 94.2915, -53.8191, -85.3964, 0.55 ) }
    dend_36 { pt3dadd( 95.0403, -54.911, -86.5065, 0.55 ) }
    dend_36 { pt3dadd( 95.2792, -55.4025, -87.0089, 0.28 ) }
    dend_36 { pt3dadd( 95.6424, -56.246, -87.8934, 0.55 ) }
    dend_36 { pt3dadd( 96.4424, -58.1041, -89.8417, 0.28 ) }
    dend_36 { pt3dadd( 96.9968, -59.3918, -91.192, 0.55 ) }
    dend_36 { pt3dadd( 97.9362, -61.5736, -93.4798, 0.28 ) }
    dend_36 { pt3dadd( 99.0223, -64.2422, -96.5099, 0.28 ) }
    dend_36 { pt3dadd( 99.4676, -65.4704, -97.935, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 147.532, -18.1323, -60.0525, 0.28 ) }
    dend_33 { pt3dadd( 149.091, -20.5679, -60.9523, 0.28 ) }
    dend_33 { pt3dadd( 151.071, -23.9283, -61.8891, 0.28 ) }
    dend_33 { pt3dadd( 152.325, -26.154, -62.4164, 0.55 ) }
    dend_33 { pt3dadd( 153.099, -27.4181, -62.6641, 0.28 ) }
    dend_33 { pt3dadd( 153.51, -28.1017, -62.7914, 0.28 ) }
    dend_33 { pt3dadd( 155.545, -31.451, -63.4642, 0.55 ) }
    dend_33 { pt3dadd( 156.025, -32.246, -63.5344, 0.28 ) }
    dend_33 { pt3dadd( 157.154, -34.4014, -63.5926, 0.55 ) }
    dend_33 { pt3dadd( 158.108, -36.2383, -63.7005, 0.28 ) }
    dend_33 { pt3dadd( 158.948, -37.7215, -63.818, 0.55 ) }
    dend_33 { pt3dadd( 159.92, -39.4421, -64.0432, 0.55 ) }
    dend_33 { pt3dadd( 161.44, -42.0077, -64.68, 0.55 ) }
    dend_33 { pt3dadd( 161.803, -42.625, -64.855, 0.55 ) }
    dend_33 { pt3dadd( 163.089, -44.9133, -65.5241, 0.28 ) }
    dend_33 { pt3dadd( 163.579, -45.8335, -65.8158, 0.55 ) }
    dend_33 { pt3dadd( 164.276, -47.0101, -66.1999, 0.28 ) }
    dend_33 { pt3dadd( 165.252, -48.6393, -66.8129, 0.55 ) }
    dend_33 { pt3dadd( 166.851, -51.0064, -68.1324, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 147.532, -18.1323, -60.0525, 0.55 ) }
    dend_32 { pt3dadd( 144.45, -18.0601, -59.6071, 0.55 ) }
    dend_32 { pt3dadd( 141.946, -18.0016, -59.2454, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.9781, -28.7556, 5.05757, 0.83 ) }
    dend_17 { pt3dadd( 3.10371, -28.9677, 5.05536, 0.83 ) }
    dend_17 { pt3dadd( 4.49836, -30.8259, 5.20722, 0.83 ) }
    dend_17 { pt3dadd( 5.73821, -32.4526, 5.22115, 0.55 ) }
    dend_17 { pt3dadd( 6.72734, -33.7503, 5.23226, 0.55 ) }
    dend_17 { pt3dadd( 8.82977, -36.5087, 5.25589, 0.83 ) }
    dend_17 { pt3dadd( 11.3798, -39.8543, 5.28454, 0.55 ) }
    dend_17 { pt3dadd( 12.7597, -41.6024, 5.34536, 0.83 ) }
    dend_17 { pt3dadd( 15.1604, -44.3692, 5.61291, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.9781, -28.7556, 5.05757, 0.55 ) }
    dend_14 { pt3dadd( 1.32307, -29.9455, 1.90677, 0.55 ) }
    dend_14 { pt3dadd( -0.453408, -31.2226, -1.47522, 0.55 ) }
    dend_14 { pt3dadd( -2.55056, -32.7303, -5.4677, 0.55 ) }
    dend_14 { pt3dadd( -5.09718, -34.5612, -10.3158, 0.55 ) }
    dend_14 { pt3dadd( -6.54229, -35.6001, -13.067, 0.55 ) }
    dend_14 { pt3dadd( -6.8326, -35.8088, -13.6197, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -3.82557, -95.4669, 72.1209, 0.55 ) }
    dend_7 { pt3dadd( -3.23988, -103.412, 78.0579, 0.55 ) }
    dend_7 { pt3dadd( -1.44687, -111.926, 82.771, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.82557, -95.4669, 72.1209, 0.55 ) }
    dend_4 { pt3dadd( -3.76929, -103.322, 77.0461, 0.55 ) }
    dend_4 { pt3dadd( -4.20703, -111.057, 82.1726, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -56.4499, 40.7398, -16.3771, 0.28 ) }
    dend_59 { pt3dadd( -57.1201, 42.6406, -15.5157, 0.28 ) }
    dend_59 { pt3dadd( -57.3463, 43.3927, -15.1396, 0.55 ) }
    dend_59 { pt3dadd( -57.9723, 45.587, -14.0303, 0.28 ) }
    dend_59 { pt3dadd( -58.3173, 46.6339, -13.5441, 0.55 ) }
    dend_59 { pt3dadd( -59.2975, 49.4308, -12.2815, 0.28 ) }
    dend_59 { pt3dadd( -60.2937, 52.2734, -10.9982, 0.55 ) }
    dend_59 { pt3dadd( -61.9124, 56.8425, -8.76197, 0.28 ) }
    dend_59 { pt3dadd( -62.2572, 57.8207, -8.28813, 0.55 ) }
    dend_59 { pt3dadd( -63.0483, 60.0263, -7.33993, 0.28 ) }
    dend_59 { pt3dadd( -63.3583, 60.9218, -6.98632, 0.55 ) }
    dend_59 { pt3dadd( -67.2388, 67.658, -2.76143, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -72.5476, 74.2293, -0.317036, 0.55 ) }
    dend_59 { pt3dadd( -76.5975, 81.4789, 2.54833, 0.55 ) }
    dend_59 { pt3dadd( -79.7622, 89.4049, 4.30698, 0.55 ) }
    dend_59 { pt3dadd( -83.9635, 96.8441, 6.12769, 0.55 ) }
    dend_59 { pt3dadd( -88.3724, 103.676, 9.54169, 0.55 ) }
    dend_59 { pt3dadd( -91.6943, 110.538, 14.043, 0.55 ) }
    dend_59 { pt3dadd( -93.716, 117.195, 19.5745, 0.55 ) }
    dend_59 { pt3dadd( -95.912, 124.126, 24.6544, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -56.4499, 40.7398, -16.3771, 0.55 ) }
    dend_58 { pt3dadd( -57.8232, 41.6871, -13.8724, 0.55 ) }
    dend_58 { pt3dadd( -58.5302, 42.1468, -12.5409, 0.28 ) }
    dend_58 { pt3dadd( -59.0564, 42.4889, -11.55, 0.55 ) }
    dend_58 { pt3dadd( -59.495, 42.7741, -10.7241, 0.28 ) }
    dend_58 { pt3dadd( -59.8021, 42.9738, -10.1457, 0.55 ) }
    dend_58 { pt3dadd( -60.6491, 43.5245, -8.55064, 0.28 ) }
    dend_58 { pt3dadd( -61.2763, 43.7347, -7.49702, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -149.433, -68.9998, -28.1349, 0.55 ) }
    dend_54 { pt3dadd( -154.627, -78.8031, -28.095, 0.55 ) }
    dend_54 { pt3dadd( -159.697, -88.5563, -26.75, 0.55 ) }
    dend_54 { pt3dadd( -163.768, -98.8363, -27.3136, 0.55 ) }
    dend_54 { pt3dadd( -169.083, -108.536, -26.5364, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -149.433, -68.9998, -28.1349, 0.55 ) }
    dend_53 { pt3dadd( -153.996, -76.762, -34.7977, 0.55 ) }
    dend_53 { pt3dadd( -157.72, -83.6746, -42.8784, 0.55 ) }
    dend_53 { pt3dadd( -162.667, -91.1856, -49.5719, 0.55 ) }
    dend_53 { pt3dadd( -169.706, -96.6805, -56.4742, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -149.637, -63.0662, -27.9016, 0.55 ) }
    dend_51 { pt3dadd( -153.985, -68.4677, -34.5443, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -149.637, -63.0662, -27.9016, 0.55 ) }
    dend_50 { pt3dadd( -152.568, -69.4652, -28.5856, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 110.099, -64.4863, -103.909, 0.28 ) }
    dend_41 { pt3dadd( 113.348, -65.7005, -105.313, 0.28 ) }
    dend_41 { pt3dadd( 114.857, -66.2645, -105.965, 0.55 ) }
    dend_41 { pt3dadd( 117.736, -67.3401, -107.208, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 110.099, -64.4863, -103.909, 0.55 ) }
    dend_40 { pt3dadd( 110.037, -65.908, -104.635, 0.55 ) }
    dend_40 { pt3dadd( 109.913, -68.7518, -106.086, 0.28 ) }
    dend_40 { pt3dadd( 109.872, -69.6781, -106.559, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 99.4676, -65.4704, -97.935, 0.28 ) }
    dend_38 { pt3dadd( 100.911, -68.3835, -100.075, 0.28 ) }
    dend_38 { pt3dadd( 101.625, -69.826, -101.135, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 99.4676, -65.4704, -97.935, 0.55 ) }
    dend_37 { pt3dadd( 97.1557, -66.7677, -96.279, 0.55 ) }
    dend_37 { pt3dadd( 90.7089, -70.3852, -91.6614, 0.28 ) }
    dend_37 { pt3dadd( 89.1774, -71.2446, -90.5644, 0.55 ) }
    dend_37 { pt3dadd( 84.988, -73.5954, -87.5636, 0.28 ) }
    dend_37 { pt3dadd( 82.2875, -75.1108, -85.6293, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 15.1604, -44.3692, 5.61291, 0.83 ) }
    dend_23 { pt3dadd( 15.2038, -44.5468, 5.59224, 0.83 ) }
    dend_23 { pt3dadd( 15.7876, -46.8706, 5.39897, 0.83 ) }
    dend_23 { pt3dadd( 16.0365, -48.6296, 5.32281, 0.83 ) }
    dend_23 { pt3dadd( 16.1032, -50.3453, 5.39253, 0.83 ) }
    dend_23 { pt3dadd( 16.0598, -52.6423, 5.63543, 0.83 ) }
    dend_23 { pt3dadd( 15.9078, -55.2987, 5.99183, 0.83 ) }
    dend_23 { pt3dadd( 15.7051, -58.2697, 6.54926, 0.83 ) }
    dend_23 { pt3dadd( 15.4701, -61.1607, 7.22422, 0.83 ) }
    dend_23 { pt3dadd( 14.9754, -64.726, 7.90258, 0.83 ) }
    dend_23 { pt3dadd( 14.6859, -66.368, 8.09523, 0.83 ) }
    dend_23 { pt3dadd( 14.4861, -67.6002, 8.16133, 0.83 ) }
    dend_23 { pt3dadd( 14.0676, -69.9667, 8.22354, 0.83 ) }
    dend_23 { pt3dadd( 13.7761, -72.0777, 8.17734, 0.83 ) }
    dend_23 { pt3dadd( 13.5448, -76.5406, 7.64871, 0.83 ) }
    dend_23 { pt3dadd( 13.5407, -78.967, 7.04708, 0.83 ) }
    dend_23 { pt3dadd( 13.5839, -81.1966, 6.32665, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 15.1604, -44.3692, 5.61291, 0.55 ) }
    dend_18 { pt3dadd( 14.0164, -47.5701, 5.15578, 0.55 ) }
    dend_18 { pt3dadd( 13.0899, -49.9048, 4.97808, 0.55 ) }
    dend_18 { pt3dadd( 12.4802, -51.402, 5.02173, 0.55 ) }
    dend_18 { pt3dadd( 11.5479, -53.7478, 5.34705, 0.55 ) }
    dend_18 { pt3dadd( 9.70665, -58.3982, 6.31872, 0.55 ) }
    dend_18 { pt3dadd( 8.14443, -61.9392, 7.40992, 0.55 ) }
    dend_18 { pt3dadd( 6.7851, -64.7918, 8.57054, 0.55 ) }
    dend_18 { pt3dadd( 5.27322, -67.6881, 9.90853, 0.55 ) }
    dend_18 { pt3dadd( 3.95577, -70.0975, 11.1279, 0.28 ) }
    dend_18 { pt3dadd( 2.75019, -72.0819, 12.3816, 0.55 ) }
    dend_18 { pt3dadd( 0.300007, -75.7227, 15.1011, 0.55 ) }
    dend_18 { pt3dadd( -1.39804, -77.9744, 16.9456, 0.55 ) }
    dend_18 { pt3dadd( -2.35755, -79.2362, 17.9625, 0.55 ) }
    dend_18 { pt3dadd( -3.53017, -80.7264, 19.0646, 0.83 ) }
    dend_18 { pt3dadd( -6.94003, -85.1346, 22.0501, 0.28 ) }
    dend_18 { pt3dadd( -8.05327, -86.5915, 23.0024, 0.55 ) }
    dend_18 { pt3dadd( -9.95841, -89.2121, 24.6722, 0.28 ) }
    dend_18 { pt3dadd( -10.5658, -90.0224, 25.2411, 0.55 ) }
    dend_18 { pt3dadd( -11.882, -91.9162, 26.5805, 0.28 ) }
    dend_18 { pt3dadd( -12.596, -92.989, 27.2719, 0.55 ) }
    dend_18 { pt3dadd( -14.7858, -96.4524, 28.5776, 0.55 ) }
    dend_18 { pt3dadd( -19.8205, -105.786, 36.3327, 0.55 ) }
    dend_18 { pt3dadd( -24.492, -114.688, 44.8349, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.8326, -35.8088, -13.6197, 0.55 ) }
    dend_16 { pt3dadd( -8.97929, -37.3867, -18.5099, 0.55 ) }
    dend_16 { pt3dadd( -9.63099, -37.7629, -19.9076, 0.55 ) }
    dend_16 { pt3dadd( -11.3096, -38.7044, -23.3189, 0.55 ) }
    dend_16 { pt3dadd( -15.0793, -40.5792, -30.5537, 0.28 ) }
    dend_16 { pt3dadd( -15.662, -40.8361, -31.5787, 0.55 ) }
    dend_16 { pt3dadd( -18.1516, -42.0024, -35.714, 0.55 ) }
    dend_16 { pt3dadd( -21.7495, -43.5847, -40.9184, 0.55 ) }
    dend_16 { pt3dadd( -23.1428, -44.13, -42.8682, 0.28 ) }
    dend_16 { pt3dadd( -24.3976, -44.4942, -44.4909, 0.28 ) }
    dend_16 { pt3dadd( -26.6834, -45.0476, -46.902, 0.55 ) }
    dend_16 { pt3dadd( -29.4218, -45.5711, -49.9727, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -31.9206, -45.7946, -52.8887, 0.55 ) }
    dend_16 { pt3dadd( -33.8664, -45.7695, -55.1067, 0.55 ) }
    dend_16 { pt3dadd( -35.1845, -45.6175, -56.691, 0.55 ) }
    dend_16 { pt3dadd( -38.9993, -44.9602, -61.4973, 0.55 ) }
    dend_16 { pt3dadd( -43.0452, -43.9218, -66.477, 0.55 ) }
    dend_16 { pt3dadd( -44.7345, -43.3758, -68.4882, 0.28 ) }
    dend_16 { pt3dadd( -46.3263, -42.8899, -70.4339, 0.55 ) }
    dend_16 { pt3dadd( -49.5777, -42.1624, -74.3298, 0.28 ) }
    dend_16 { pt3dadd( -50.6779, -41.956, -75.6258, 0.83 ) }
    dend_16 { pt3dadd( -52.7979, -41.5346, -77.8782, 0.28 ) }
    dend_16 { pt3dadd( -54.4179, -41.3592, -79.2611, 0.55 ) }
    dend_16 { pt3dadd( -56.7923, -41.1951, -81.2127, 0.28 ) }
    dend_16 { pt3dadd( -57.7506, -41.115, -81.9563, 0.55 ) }
    dend_16 { pt3dadd( -59.5663, -40.9994, -83.229, 0.55 ) }
    dend_16 { pt3dadd( -62.3437, -40.5262, -85.0522, 0.55 ) }
    dend_16 { pt3dadd( -64.1943, -40.0945, -86.1406, 0.28 ) }
    dend_16 { pt3dadd( -65.725, -39.5507, -86.9029, 0.55 ) }
    dend_16 { pt3dadd( -67.5205, -38.6866, -87.8186, 0.28 ) }
    dend_16 { pt3dadd( -67.8119, -38.521, -87.9804, 0.55 ) }
    dend_16 { pt3dadd( -70.3362, -36.9472, -89.958, 0.28 ) }
    dend_16 { pt3dadd( -72.0943, -35.7727, -91.6095, 0.55 ) }
    dend_16 { pt3dadd( -74.2835, -34.0614, -94.162, 0.83 ) }
    dend_16 { pt3dadd( -76.0006, -32.6106, -96.5127, 0.28 ) }
    dend_16 { pt3dadd( -76.4248, -32.2419, -97.1757, 0.55 ) }
    dend_16 { pt3dadd( -79.5953, -29.4867, -102.501, 0.28 ) }
    dend_16 { pt3dadd( -80.124, -29.0199, -103.508, 0.55 ) }
    dend_16 { pt3dadd( -81.6292, -27.4952, -106.626, 0.28 ) }
    dend_16 { pt3dadd( -82.0162, -27.1033, -107.435, 0.55 ) }
    dend_16 { pt3dadd( -83.0462, -26.0787, -109.41, 0.28 ) }
    dend_16 { pt3dadd( -83.7999, -25.3383, -110.742, 0.55 ) }
    dend_16 { pt3dadd( -85.6133, -23.6723, -113.358, 0.28 ) }
    dend_16 { pt3dadd( -86.7142, -22.7813, -114.854, 0.55 ) }
    dend_16 { pt3dadd( -89.1307, -21.0642, -117.878, 0.28 ) }
    dend_16 { pt3dadd( -89.8579, -20.6018, -118.763, 0.55 ) }
    dend_16 { pt3dadd( -91.0218, -19.9846, -120.095, 0.28 ) }
    dend_16 { pt3dadd( -92.0289, -19.4629, -121.165, 0.55 ) }
    dend_16 { pt3dadd( -94.1755, -18.408, -123.235, 0.28 ) }
    dend_16 { pt3dadd( -94.8315, -18.1065, -123.833, 0.55 ) }
    dend_16 { pt3dadd( -99.7923, -15.7472, -128.021, 0.28 ) }
    dend_16 { pt3dadd( -101.584, -14.7751, -129.322, 0.55 ) }
    dend_16 { pt3dadd( -104.85, -12.8651, -131.423, 0.28 ) }
    dend_16 { pt3dadd( -106.335, -11.94, -132.323, 0.55 ) }
    dend_16 { pt3dadd( -109.809, -9.83802, -134.175, 0.28 ) }
    dend_16 { pt3dadd( -111.105, -9.12353, -134.794, 0.55 ) }
    dend_16 { pt3dadd( -115.897, -6.96214, -136.755, 0.28 ) }
    dend_16 { pt3dadd( -117.912, -6.31231, -137.545, 0.55 ) }
    dend_16 { pt3dadd( -120.82, -5.85529, -138.622, 0.55 ) }
    dend_16 { pt3dadd( -122.627, -5.68498, -139.237, 0.55 ) }
    dend_16 { pt3dadd( -126.395, -5.42175, -140.203, 0.28 ) }
    dend_16 { pt3dadd( -130.167, -5.19074, -140.921, 0.28 ) }
    dend_16 { pt3dadd( -133.332, -4.98444, -141.431, 0.55 ) }
    dend_16 { pt3dadd( -137.285, -4.40402, -141.654, 0.28 ) }
    dend_16 { pt3dadd( -139.286, -3.88367, -141.52, 0.55 ) }
    dend_16 { pt3dadd( -144.1, -1.9379, -140.775, 0.28 ) }
    dend_16 { pt3dadd( -146.645, -0.479574, -139.849, 0.55 ) }
    dend_16 { pt3dadd( -148.321, 0.700028, -138.923, 0.28 ) }
    dend_16 { pt3dadd( -150.241, 2.04414, -137.461, 0.55 ) }
    dend_16 { pt3dadd( -152.659, 3.81006, -135.365, 0.28 ) }
    dend_16 { pt3dadd( -153.581, 4.43411, -134.579, 0.55 ) }
    dend_16 { pt3dadd( -158.371, 7.23798, -131.035, 0.28 ) }
    dend_16 { pt3dadd( -159.993, 8.12459, -129.854, 0.55 ) }
    dend_16 { pt3dadd( -163.862, 10.0998, -126.951, 0.28 ) }
    dend_16 { pt3dadd( -165.966, 11.1497, -125.374, 0.55 ) }
    dend_16 { pt3dadd( -167.697, 12.0099, -124.081, 0.55 ) }
    dend_16 { pt3dadd( -169.767, 13.0214, -122.589, 0.28 ) }
    dend_16 { pt3dadd( -170.847, 13.5311, -121.983, 0.55 ) }
    dend_16 { pt3dadd( -174.461, 15.3411, -120.169, 0.28 ) }
    dend_16 { pt3dadd( -176.337, 16.4898, -119.187, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -6.8326, -35.8088, -13.6197, 0.55 ) }
    dend_15 { pt3dadd( -5.997, -36.04, -14.5156, 0.55 ) }
    dend_15 { pt3dadd( -5.1194, -36.1455, -15.3961, 0.55 ) }
    dend_15 { pt3dadd( -3.96325, -36.1786, -16.4394, 0.55 ) }
    dend_15 { pt3dadd( -2.97904, -36.1136, -17.2505, 0.55 ) }
    dend_15 { pt3dadd( 3.88977, -34.9143, -22.0993, 0.55 ) }
    dend_15 { pt3dadd( 5.44783, -34.4589, -23.2158, 0.55 ) }
    dend_15 { pt3dadd( 7.74423, -33.6122, -24.9153, 0.55 ) }
    dend_15 { pt3dadd( 9.37009, -32.9557, -26.1295, 0.55 ) }
    dend_15 { pt3dadd( 10.9753, -32.2184, -27.2779, 0.28 ) }
    dend_15 { pt3dadd( 13.5025, -30.9373, -28.9252, 0.55 ) }
    dend_15 { pt3dadd( 17.3488, -28.9103, -31.1726, 0.28 ) }
    dend_15 { pt3dadd( 17.6549, -28.8012, -31.4498, 0.55 ) }
    dend_15 { pt3dadd( 19.2041, -28.5531, -33.7547, 0.28 ) }
    dend_15 { pt3dadd( 19.9831, -28.4894, -35.4776, 0.55 ) }
    dend_15 { pt3dadd( 20.6464, -28.5512, -37.4192, 0.55 ) }
    dend_15 { pt3dadd( 21.7805, -28.8366, -40.9204, 0.55 ) }
    dend_15 { pt3dadd( 24.0226, -29.4453, -47.7834, 0.55 ) }
    dend_15 { pt3dadd( 25.6071, -29.9042, -52.3626, 0.55 ) }
    dend_15 { pt3dadd( 26.1953, -30.0778, -53.9272, 0.55 ) }
    dend_15 { pt3dadd( 30.3072, -31.1431, -64.1158, 0.55 ) }
    dend_15 { pt3dadd( 31.5387, -31.3934, -66.8266, 0.55 ) }
    dend_15 { pt3dadd( 32.344, -31.5363, -68.2945, 0.55 ) }
    dend_15 { pt3dadd( 34.5161, -31.9646, -71.5474, 0.55 ) }
    dend_15 { pt3dadd( 40.1665, -33.4393, -79.028, 0.55 ) }
    dend_15 { pt3dadd( 41.7713, -33.9323, -80.9732, 0.28 ) }
    dend_15 { pt3dadd( 42.7674, -34.272, -82.0077, 0.55 ) }
    dend_15 { pt3dadd( 44.2698, -34.8556, -83.5095, 0.28 ) }
    dend_15 { pt3dadd( 44.9306, -35.1757, -84.0756, 0.55 ) }
    dend_15 { pt3dadd( 47.2561, -36.472, -85.1938, 0.28 ) }
    dend_15 { pt3dadd( 49.0125, -38.0276, -84.9136, 0.55 ) }
    dend_15 { pt3dadd( 50.0402, -39.117, -84.6616, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 50.9422, -40.2976, -84.2908, 0.55 ) }
    dend_15 { pt3dadd( 51.6968, -41.5667, -83.8694, 0.28 ) }
    dend_15 { pt3dadd( 52.0183, -42.2181, -83.6962, 0.55 ) }
    dend_15 { pt3dadd( 52.7309, -43.9137, -83.2048, 0.28 ) }
    dend_15 { pt3dadd( 52.9255, -44.4229, -83.15, 0.55 ) }
    dend_15 { pt3dadd( 54.069, -47.3515, -83.0067, 0.28 ) }
    dend_15 { pt3dadd( 54.6797, -48.7182, -83.109, 0.55 ) }
    dend_15 { pt3dadd( 56.1711, -51.661, -83.634, 0.28 ) }
    dend_15 { pt3dadd( 56.7951, -52.7535, -83.9379, 0.55 ) }
    dend_15 { pt3dadd( 59.0385, -56.3587, -85.1218, 0.28 ) }
    dend_15 { pt3dadd( 59.5984, -57.2375, -85.4456, 0.55 ) }
    dend_15 { pt3dadd( 61.3179, -60.0231, -86.5893, 0.28 ) }
    dend_15 { pt3dadd( 61.6711, -60.6716, -86.8163, 0.55 ) }
    dend_15 { pt3dadd( 62.5439, -62.3823, -87.4147, 0.28 ) }
    dend_15 { pt3dadd( 63.0824, -63.3807, -87.8562, 0.55 ) }
    dend_15 { pt3dadd( 63.6636, -64.3666, -88.3596, 0.55 ) }
    dend_15 { pt3dadd( 64.8207, -66.3331, -89.349, 0.28 ) }
    dend_15 { pt3dadd( 65.6824, -67.5616, -90.0749, 0.55 ) }
    dend_15 { pt3dadd( 68.5932, -70.6898, -92.442, 0.28 ) }
    dend_15 { pt3dadd( 69.769, -71.7247, -93.4179, 0.55 ) }
    dend_15 { pt3dadd( 70.5968, -72.3869, -94.0747, 0.28 ) }
    dend_15 { pt3dadd( 71.4536, -72.9982, -94.7256, 0.55 ) }
    dend_15 { pt3dadd( 74.1469, -74.7289, -96.6774, 0.28 ) }
    dend_15 { pt3dadd( 76.1899, -76.0653, -98.0971, 0.55 ) }
    dend_15 { pt3dadd( 79.6645, -78.5636, -100.238, 0.28 ) }
    dend_15 { pt3dadd( 80.7608, -79.3419, -100.906, 0.55 ) }
    dend_15 { pt3dadd( 82.8824, -80.772, -102.003, 0.28 ) }
    dend_15 { pt3dadd( 83.5919, -81.2396, -102.311, 0.55 ) }
    dend_15 { pt3dadd( 84.7441, -81.9802, -102.603, 0.28 ) }
    dend_15 { pt3dadd( 85.7608, -82.6041, -102.773, 0.55 ) }
    dend_15 { pt3dadd( 88.5166, -84.1524, -102.954, 0.28 ) }
    dend_15 { pt3dadd( 91.6902, -85.807, -103.113, 0.28 ) }
    dend_15 { pt3dadd( 93.2953, -86.5725, -103.082, 0.28 ) }
    dend_15 { pt3dadd( 94.9296, -87.3017, -103.149, 0.55 ) }
    dend_15 { pt3dadd( 97.3322, -88.2662, -103.259, 0.28 ) }
    dend_15 { pt3dadd( 98.4008, -88.6796, -103.286, 0.83 ) }
    dend_15 { pt3dadd( 101.112, -89.7623, -103.252, 0.28 ) }
    dend_15 { pt3dadd( 102.291, -90.2593, -103.302, 0.55 ) }
    dend_15 { pt3dadd( 107.474, -92.6346, -103.75, 0.28 ) }
    dend_15 { pt3dadd( 110.079, -93.8593, -104.179, 0.28 ) }
    dend_15 { pt3dadd( 111.982, -94.7546, -104.612, 0.55 ) }
    dend_15 { pt3dadd( 113.094, -95.3026, -104.986, 0.55 ) }
    dend_15 { pt3dadd( 116.05, -96.8026, -106.204, 0.28 ) }
    dend_15 { pt3dadd( 118.8, -98.323, -107.45, 0.55 ) }
    dend_15 { pt3dadd( 121.294, -99.7789, -108.583, 0.28 ) }
    dend_15 { pt3dadd( 123.547, -101.13, -109.724, 0.55 ) }
    dend_15 { pt3dadd( 125.413, -102.226, -110.657, 0.28 ) }
    dend_15 { pt3dadd( 126.954, -103.019, -111.342, 0.55 ) }
    dend_15 { pt3dadd( 130.699, -104.733, -112.832, 0.28 ) }
    dend_15 { pt3dadd( 132.598, -105.597, -113.511, 0.55 ) }
    dend_15 { pt3dadd( 135.447, -106.896, -114.428, 0.28 ) }
    dend_15 { pt3dadd( 137.786, -107.897, -115.128, 0.55 ) }
    dend_15 { pt3dadd( 143.293, -110.02, -116.78, 0.28 ) }
    dend_15 { pt3dadd( 145.554, -110.775, -117.601, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -1.44687, -111.926, 82.771, 0.55 ) }
    dend_9 { pt3dadd( -0.850733, -120.684, 87.1437, 0.55 ) }
    dend_9 { pt3dadd( 0.528535, -130.125, 89.1492, 0.55 ) }
    dend_9 { pt3dadd( 1.43102, -139.235, 92.5806, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -1.44687, -111.926, 82.771, 0.55 ) }
    dend_8 { pt3dadd( 0.0504416, -119.88, 88.2794, 0.55 ) }
    dend_8 { pt3dadd( 0.814803, -126.575, 95.4884, 0.55 ) }
    dend_8 { pt3dadd( 2.19253, -131.755, 103.89, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -4.20703, -111.057, 82.1726, 0.55 ) }
    dend_6 { pt3dadd( -2.90318, -120.139, 89.2367, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.20703, -111.057, 82.1726, 0.55 ) }
    dend_5 { pt3dadd( -4.9544, -117.179, 86.0952, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 13.5839, -81.1966, 6.32665, 0.83 ) }
    dend_25 { pt3dadd( 14.7272, -84.9091, 6.97661, 0.83 ) }
    dend_25 { pt3dadd( 15.8187, -88.0268, 7.78523, 0.83 ) }
    dend_25 { pt3dadd( 16.9038, -91.1258, 8.58902, 0.83 ) }
    dend_25 { pt3dadd( 17.9342, -94.0689, 9.35236, 0.83 ) }
    dend_25 { pt3dadd( 19.5222, -98.6044, 10.5287, 0.83 ) }
    dend_25 { pt3dadd( 21.0987, -103.107, 11.6966, 0.83 ) }
    dend_25 { pt3dadd( 22.3562, -106.069, 12.9051, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 13.5839, -81.1966, 6.32665, 0.55 ) }
    dend_24 { pt3dadd( 15.0402, -82.9186, 6.87752, 0.55 ) }
    dend_24 { pt3dadd( 16.2667, -84.2512, 7.05955, 0.55 ) }
    dend_24 { pt3dadd( 17.1713, -85.2355, 7.07155, 0.55 ) }
    dend_24 { pt3dadd( 18.116, -86.3991, 6.85236, 0.83 ) }
    dend_24 { pt3dadd( 19.1718, -87.7204, 6.39634, 0.55 ) }
    dend_24 { pt3dadd( 20.2044, -89.0127, 5.95029, 0.83 ) }
    dend_24 { pt3dadd( 21.3014, -90.4148, 5.29489, 0.55 ) }
    dend_24 { pt3dadd( 21.9705, -91.2243, 4.83497, 0.83 ) }
    dend_24 { pt3dadd( 24.1146, -93.842, 3.08174, 0.55 ) }
    dend_24 { pt3dadd( 25.6797, -95.907, 1.49184, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -24.492, -114.688, 44.8349, 0.55 ) }
    dend_20 { pt3dadd( -28.8483, -122.58, 49.5526, 0.55 ) }
    dend_20 { pt3dadd( -34.5823, -129.489, 54.4969, 0.55 ) }
    dend_20 { pt3dadd( -41.0064, -135.48, 59.8963, 0.55 ) }
    dend_20 { pt3dadd( -48.267, -140.305, 65.5168, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -24.492, -114.688, 44.8349, 0.55 ) }
    dend_19 { pt3dadd( -29.7876, -125.104, 52.2808, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 22.3562, -106.069, 12.9051, 0.55 ) }
    dend_27 { pt3dadd( 22.4361, -107.635, 13.2981, 0.55 ) }
    dend_27 { pt3dadd( 22.5637, -109.633, 13.8732, 0.55 ) }
    dend_27 { pt3dadd( 22.6898, -111.518, 14.4068, 0.55 ) }
    dend_27 { pt3dadd( 22.7752, -112.858, 14.7596, 0.55 ) }
    dend_27 { pt3dadd( 22.9211, -115.25, 15.3417, 0.55 ) }
    dend_27 { pt3dadd( 23.5092, -121.949, 16.8694, 0.55 ) }
    dend_27 { pt3dadd( 23.8077, -124.211, 17.3241, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 24.0632, -125.798, 17.5728, 0.55 ) }
    dend_27 { pt3dadd( 24.4409, -127.599, 17.7275, 0.55 ) }
    dend_27 { pt3dadd( 24.7721, -128.984, 17.7183, 0.55 ) }
    dend_27 { pt3dadd( 25.7039, -132.199, 17.6179, 0.55 ) }
    dend_27 { pt3dadd( 26.3316, -134.649, 17.4955, 0.55 ) }
    dend_27 { pt3dadd( 26.7613, -136.257, 17.4823, 0.55 ) }
    dend_27 { pt3dadd( 27.7551, -140.445, 17.6451, 0.55 ) }
    dend_27 { pt3dadd( 28.3443, -143.272, 17.8645, 0.55 ) }
    dend_27 { pt3dadd( 29.0193, -146.932, 18.3509, 0.55 ) }
    dend_27 { pt3dadd( 29.6791, -151.103, 19.2321, 0.55 ) }
    dend_27 { pt3dadd( 30.1531, -153.888, 20.0445, 0.55 ) }
    dend_27 { pt3dadd( 30.4491, -155.533, 20.5857, 0.55 ) }
    dend_27 { pt3dadd( 30.6978, -157.052, 21.0666, 0.55 ) }
    dend_27 { pt3dadd( 31.0872, -158.965, 21.6062, 0.55 ) }
    dend_27 { pt3dadd( 32.1272, -163.558, 22.584, 0.55 ) }
    dend_27 { pt3dadd( 32.619, -165.323, 22.9294, 0.55 ) }
    dend_27 { pt3dadd( 33.1284, -167.293, 23.2777, 0.55 ) }
    dend_27 { pt3dadd( 33.8779, -170.253, 23.7741, 0.55 ) }
    dend_27 { pt3dadd( 34.3426, -172.542, 24.1239, 0.55 ) }
    dend_27 { pt3dadd( 34.6789, -174.73, 24.3674, 0.55 ) }
    dend_27 { pt3dadd( 34.9121, -176.826, 24.5545, 0.55 ) }
    dend_27 { pt3dadd( 35.0925, -178.877, 24.7479, 0.55 ) }
    dend_27 { pt3dadd( 35.2362, -180.335, 24.8762, 0.55 ) }
    dend_27 { pt3dadd( 35.5253, -182.712, 25.016, 0.55 ) }
    dend_27 { pt3dadd( 35.9414, -185.554, 24.9593, 0.55 ) }
    dend_27 { pt3dadd( 36.2283, -186.922, 24.851, 0.55 ) }
    dend_27 { pt3dadd( 36.5381, -188.114, 24.6753, 0.55 ) }
    dend_27 { pt3dadd( 37.2887, -190.341, 24.2669, 0.55 ) }
    dend_27 { pt3dadd( 37.7707, -191.75, 23.9623, 0.55 ) }
    dend_27 { pt3dadd( 38.3503, -193.491, 23.6611, 0.55 ) }
    dend_27 { pt3dadd( 38.6751, -194.727, 23.4982, 0.55 ) }
    dend_27 { pt3dadd( 39.4009, -197.955, 23.1671, 0.55 ) }
    dend_27 { pt3dadd( 39.8007, -200.394, 23.0557, 0.55 ) }
    dend_27 { pt3dadd( 40.2063, -204.2, 23.146, 0.55 ) }
    dend_27 { pt3dadd( 40.4036, -206.67, 23.4489, 0.55 ) }
    dend_27 { pt3dadd( 40.5508, -209.271, 23.8361, 0.28 ) }
    dend_27 { pt3dadd( 40.5649, -210.323, 24.0192, 0.28 ) }
    dend_27 { pt3dadd( 40.4751, -212.896, 24.6731, 0.28 ) }
    dend_27 { pt3dadd( 40.2807, -215.29, 25.4403, 0.28 ) }
    dend_27 { pt3dadd( 40.1324, -218.447, 26.8929, 0.28 ) }
    dend_27 { pt3dadd( 41.5167, -225.306, 28.9441, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 22.3562, -106.069, 12.9051, 0.55 ) }
    dend_26 { pt3dadd( 23.4003, -106.548, 14.3487, 0.55 ) }
    dend_26 { pt3dadd( 25.4011, -107.833, 17.4819, 0.55 ) }
    dend_26 { pt3dadd( 27.0587, -109.124, 20.2687, 0.28 ) }
    dend_26 { pt3dadd( 28.7791, -110.606, 23.3217, 0.55 ) }
    dend_26 { pt3dadd( 29.6364, -111.578, 25.3404, 0.28 ) }
    dend_26 { pt3dadd( 30.9055, -113.358, 29.0487, 0.55 ) }
    dend_26 { pt3dadd( 31.1624, -114.34, 30.8601, 0.28 ) }
    dend_26 { pt3dadd( 31.1846, -114.704, 31.5771, 0.28 ) }
    dend_26 { pt3dadd( 31.2032, -115.23, 32.8267, 0.55 ) }
    dend_26 { pt3dadd( 31.4752, -116.941, 37.5331, 0.28 ) }
    dend_26 { pt3dadd( 31.6371, -117.605, 39.5005, 0.55 ) }
    dend_26 { pt3dadd( 32.5666, -119.482, 45.1235, 0.28 ) }
    dend_26 { pt3dadd( 33.2149, -120.39, 48.068, 0.28 ) }
    dend_26 { pt3dadd( 34.1812, -121.537, 51.6215, 0.55 ) }
    dend_26 { pt3dadd( 35.9635, -123.28, 56.6512, 0.28 ) }
    dend_26 { pt3dadd( 36.2593, -123.505, 57.2887, 0.55 ) }
    dend_26 { pt3dadd( 37.8816, -124.577, 60.2911, 0.28 ) }
    dend_26 { pt3dadd( 38.0532, -124.674, 60.543, 0.55 ) }
    dend_26 { pt3dadd( 39.5436, -125.863, 62.8096, 0.28 ) }
    dend_26 { pt3dadd( 40.2065, -126.525, 63.9344, 0.55 ) }
    dend_26 { pt3dadd( 45.5308, -131.401, 73.2582, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -48.267, -140.305, 65.5168, 0.55 ) }
    dend_22 { pt3dadd( -51.7307, -144.07, 72.1502, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -48.267, -140.305, 65.5168, 0.55 ) }
    dend_21 { pt3dadd( -53.8073, -146.604, 68.9809, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 5
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 11
    dend_48 nseg = 5
    dend_45 nseg = 3
    dend_42 nseg = 11
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 13
    dend_12 nseg = 5
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_59 nseg = 5
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_18 nseg = 5
    dend_16 nseg = 13
    dend_15 nseg = 11
    dend_20 nseg = 3
    dend_27 nseg = 7
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L5_BP_55f9b731a1_0_0


