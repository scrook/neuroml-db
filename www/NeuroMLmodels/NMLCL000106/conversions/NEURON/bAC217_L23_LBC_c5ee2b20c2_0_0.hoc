// Cell: bAC217_L23_LBC_c5ee2b20c2_0_0
/*
{
  "id" : "bAC217_L23_LBC_c5ee2b20c2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.94076, -9.8712, -1.65398, 2.77643", "-2.68752, -8.89837, -1.49144, 3.78775", "-2.43427, -7.92553, -1.32889, 4.91862", "-2.18103, -6.95269, -1.16635, 5.95702", "-1.92778, -5.97986, -1.00381, 6.99541", "-1.67453, -5.00702, -0.841265, 8.01733", "-1.42129, -4.03418, -0.678723, 8.72435", "-1.16804, -3.06135, -0.516181, 9.35315", "-0.914798, -2.08851, -0.353638, 9.98195", "-0.661552, -1.11567, -0.191096, 10.5", "-0.408307, -0.142835, -0.0285532, 10.7936", "-0.155061, 0.830002, 0.133989, 11.1592", "0.0981843, 1.80284, 0.296532, 11.5247", "0.35143, 2.77568, 0.459074, 11.423", "0.604675, 3.74851, 0.621617, 11.7952", "0.857921, 4.72135, 0.784159, 12.2515", "1.11117, 5.69419, 0.946702, 11.9034", "1.36441, 6.66702, 1.10924, 10.4337", "1.61766, 7.63986, 1.27179, 8.34249", "1.8709, 8.6127, 1.43433, 5.63558", "2.12415, 9.58553, 1.59687, 3.26719" ]
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "0.931045, 6.68854, 20.757, 0.83", "0.927805, 9.56083, 20.7613, 0.83", "1.03973, 12.0941, 20.7639, 0.83", "1.19513, 14.0005, 20.7652, 1.11", "1.37302, 15.7498, 20.766, 0.83", "1.60596, 17.9447, 20.7669, 0.83", "1.76822, 19.1855, 20.7671, 0.83", "1.97048, 20.1442, 20.8031, 0.83", "2.14625, 20.9911, 20.9023, 1.11", "2.3944, 22.111, 21.1053, 0.83", "2.56635, 22.885, 21.2789, 1.11", "2.79598, 24.1983, 21.6063, 0.83", "3.15236, 25.9877, 22.042, 1.11", "3.54282, 27.9579, 22.4955, 0.83", "3.83596, 29.4743, 22.8028, 0.55", "4.12407, 30.9487, 23.0371, 0.55", "4.28765, 31.9315, 23.1487, 0.83", "4.57384, 34.1841, 23.3043, 0.83", "4.75336, 35.5736, 23.3314, 0.83", "4.97518, 37.5596, 23.3255, 0.55", "5.28841, 40.5333, 23.3163, 1.11", "5.44225, 42.5591, 23.4252, 0.83", "5.50487, 43.9279, 23.5615, 1.11", "5.54378, 46.2618, 23.8908, 0.55", "5.55433, 47.289, 24.0877, 0.55", "5.46071, 50.0065, 24.7456, 0.55", "5.26561, 52.9271, 25.6365, 0.83", "5.14388, 54.2638, 26.1184, 0.55", "5.06996, 55.1706, 26.4699, 0.83", "4.95761, 56.452, 26.9841, 0.83", "4.84739, 58.1842, 27.6435, 0.83", "4.74707, 61.1723, 28.7082, 1.11", "4.76909, 63.248, 29.3388, 0.55", "4.87626, 65.901, 30.1568, 0.83", "4.96821, 67.0733, 30.5051, 0.55", "5.14911, 68.7679, 30.9898, 0.83", "5.3359, 70.0298, 31.3485, 0.28", "5.50449, 70.9645, 31.5714, 0.55", "5.68517, 71.7903, 31.7254, 0.28", "5.99404, 73.6935, 32.0533, 0.83", "6.5538, 80.5842, 33.4371, 0.83", "5.83491, 87.0601, 36.1785, 0.83", "5.062, 93.0251, 39.936, 0.83", "3.95672, 99.3664, 42.8712, 0.83", "3.18692, 105.744, 45.8302, 0.83", "2.78206, 112.458, 47.9686, 0.83", "1.50888, 119.327, 48.9092, 0.83", "1.05301, 126.354, 48.9112, 0.83", "0.0475301, 133.286, 48.1458, 0.83", "-0.973761, 140.219, 47.4134, 0.83", "-2.37679, 147.006, 46.1062, 0.83", "-4.33733, 153.702, 45.0485, 0.83", "-5.65577, 160.613, 44.6554, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "1.84105, 8.07304, 11.867, 1.38", "2.85126, 9.34643, 12.2299, 1.38", "3.80369, 10.5469, 12.572, 1.38", "5.38144, 12.5356, 13.1388, 1.11", "6.69351, 14.1894, 13.6101, 1.11", "9.40396, 17.6059, 14.5838, 0.83", "12.2815, 21.233, 15.6175, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "5.61104, 3.90004, -0.263001, 2.77", "6.90264, 4.50418, -0.405935, 2.77", "10.7346, 6.29661, -0.830006, 1.66", "16.8411, 9.15293, -1.50579, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "3.58105, 6.73729, -5.263, 0.83", "4.9501, 7.88428, -5.30963, 0.83", "6.62684, 9.55873, -5.226, 0.83", "9.16354, 12.3663, -5.5612, 0.83", "11.2517, 14.7129, -6.16387, 0.83", "12.8335, 16.4031, -6.68965, 0.83", "14.9759, 18.5925, -7.43695, 0.83", "16.5394, 20.2405, -8.03148, 0.83", "20.3948, 24.7458, -9.70131, 1.11", "21.9095, 26.7029, -10.3897, 0.55", "23.0567, 28.2338, -10.8686, 0.55", "24.1087, 29.6308, -11.2293, 0.55", "26.0868, 32.2642, -11.7712, 1.11", "28.1547, 35.1749, -12.0835, 0.83", "30.0164, 38.0001, -12.0411, 0.83", "31.5278, 40.4862, -11.9827, 0.55", "33.0668, 43.1914, -11.9625, 0.55", "33.6647, 44.2799, -11.9507, 0.83", "35.5195, 47.7098, -11.9376, 0.55", "36.0523, 48.7126, -11.9358, 0.55", "37.0393, 50.7294, -11.9859, 1.11", "37.656, 52.01, -12.0226, 1.11", "38.2537, 53.2946, -12.0931, 0.28", "38.9698, 54.9012, -12.323, 0.55", "39.4472, 56.1276, -12.6464, 0.28", "39.8824, 57.392, -13.0791, 0.83", "41.0561, 60.9825, -14.4609, 0.55", "41.7271, 62.8708, -15.2395, 0.55", "42.6869, 65.5038, -16.354, 0.83", "43.4974, 67.7815, -17.2936, 0.83", "44.1328, 69.5782, -17.9921, 0.55", "44.9907, 71.8875, -18.8763, 0.55", "45.8604, 74.1588, -19.7073, 0.55", "46.2126, 74.9357, -19.919, 0.55", "47.3487, 76.9344, -20.2555, 1.38", "48.6192, 78.7837, -20.4655, 0.55", "49.4623, 79.8814, -20.4759, 0.83", "49.8507, 80.366, -20.4364, 0.28", "50.993, 81.7675, -20.2081, 0.83", "52.0498, 82.9745, -19.9636, 0.28", "53.0587, 84.0376, -19.6219, 0.28", "55.1038, 86.2979, -18.8711, 0.55", "56.02, 87.3397, -18.5059, 0.55", "57.6047, 89.158, -17.8409, 0.55", "59.0776, 90.9197, -17.1911, 0.55", "60.7134, 92.9359, -16.4929, 0.83", "62.0238, 94.6052, -16.0136, 0.83", "62.9302, 95.8675, -15.7472, 0.28", "63.3645, 96.5666, -15.5776, 0.83", "64.4068, 98.3778, -15.1768, 0.28", "64.534, 98.6351, -15.1307, 0.83", "65.4566, 100.721, -14.9402, 0.28", "66.0559, 102.118, -14.8055, 0.83", "66.8978, 104.212, -14.7174, 0.28", "67.7565, 106.373, -14.6653, 1.11", "68.3152, 107.671, -14.6461, 1.11", "68.9118, 108.88, -14.6838, 0.55", "69.738, 110.282, -14.8111, 0.28", "70.331, 111.196, -14.9439, 0.55", "71.145, 112.413, -15.2287, 0.28", "71.927, 113.55, -15.4405, 0.83", "73.6033, 115.629, -15.8028, 0.55", "74.2163, 116.321, -15.9122, 0.55", "75.9828, 118.188, -16.1624, 1.11", "78.5522, 120.83, -16.4107, 0.28", "80.1618, 122.308, -16.5127, 0.83", "81.9417, 123.84, -16.4972, 0.28", "82.8404, 124.611, -16.4175, 0.83", "84.3281, 125.888, -16.2319, 0.28", "85.0994, 126.543, -16.1002, 0.83", "87.5132, 128.705, -15.6059, 0.83", "88.5087, 129.684, -15.4304, 0.28", "90.8965, 132.265, -15.006, 0.28", "92.084, 133.595, -14.8109, 1.11", "94.7452, 136.733, -14.4073, 0.28", "96.008, 138.279, -14.219, 1.11", "97.219, 139.886, -14.0486, 0.28", "97.9253, 140.804, -13.9667, 0.83", "99.3745, 142.663, -13.7843, 0.28", "99.7531, 143.168, -13.7274, 0.55", "100.496, 144.177, -13.6307, 0.28", "100.885, 144.669, -13.5673, 0.55", "101.945, 145.867, -13.3992, 0.28", "102.589, 146.437, -13.2945, 0.55", "103.869, 147.373, -13.1641, 0.28", "104.612, 147.855, -13.1698, 0.55", "106.271, 148.821, -13.3044, 0.28", "106.783, 149.079, -13.3363, 0.83", "108.837, 150.015, -13.505, 0.28", "109.893, 150.459, -13.5884, 0.83", "112.129, 151.471, -13.7428, 0.28", "114.374, 152.583, -13.8297, 0.28", "116.495, 153.804, -14.0107, 1.11", "117.86, 154.687, -14.161, 0.28", "119.073, 155.571, -14.292, 0.55", "120.406, 156.657, -14.4131, 0.28", "121.552, 157.742, -14.5304, 0.83", "123.934, 160.433, -14.6831, 0.28", "124.312, 160.943, -14.6941, 0.55", "125.527, 162.73, -14.6108, 0.55", "126.809, 164.801, -14.4325, 0.28", "127.645, 166.325, -14.1358, 1.11", "128.564, 168.554, -13.4867, 0.28", "129.015, 170.12, -13.0389, 0.55", "129.51, 172.972, -12.4961, 0.28", "129.556, 174.145, -12.3993, 0.83", "129.416, 177.663, -11.9774, 0.28", "129.197, 180.188, -11.7592, 0.28", "128.674, 184.025, -11.6621, 0.55", "128.266, 186.296, -11.6712, 0.28", "127.441, 189.565, -11.8567, 0.28", "126.461, 193.868, -12.4612, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.11895, -10.14, -2.573, 2.22", "-1.21212, -12.0397, -1.53116, 2.22", "-1.37926, -15.4478, 0.337958, 2.77", "-1.65876, -21.1468, 3.46342, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.67895, -8.62871, -5.133, 1.94", "-5.84219, -9.25484, -5.133, 1.94", "-8.30717, -9.96831, -5.133, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-5.96896, 1.90129, 10.787, 1.11", "-7.3187, 2.76927, 11.4657, 0.83", "-9.82973, 4.25417, 12.4659, 0.55", "-10.4912, 4.66405, 12.6915, 0.83", "-11.8524, 5.49751, 13.143, 0.55", "-13.3691, 6.42621, 13.6461, 0.83", "-15.0996, 7.48579, 14.2201, 0.55", "-17.2435, 8.76515, 14.8996, 0.55", "-19.584, 10.0712, 15.4573, 0.55", "-20.898, 10.8104, 15.7603, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.12895, -1.66721, 5.667, 2.49", "-0.967733, -4.15235, 5.667, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.12415, 9.58553, 1.59687, 1.11", "5.90296, 24.1017, 1.59687, 1.11", "9.68178, 38.618, 1.59687, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "12.2815, 21.233, 15.6175, 0.55", "13.0594, 22.6292, 15.0593, 0.55", "14.1451, 24.5866, 14.2493, 0.55", "15.2072, 26.2458, 13.6015, 0.83", "16.2749, 27.7349, 13.051, 0.83", "17.7466, 29.6377, 12.3764, 0.55", "18.8366, 30.9716, 11.9189, 0.55", "19.9878, 32.2551, 11.5097, 0.83", "21.4553, 33.8459, 11.0983, 0.55", "22.7685, 35.1607, 10.9843, 0.55", "23.6478, 36.0338, 11.042, 0.28", "24.5151, 36.9054, 11.2322, 0.28", "25.8318, 38.2087, 11.7466, 0.55", "27.6469, 40.1254, 12.6692, 0.55", "29.6776, 42.3679, 13.8557, 0.28", "30.0833, 42.7731, 14.1093, 0.28", "31.0272, 43.6619, 14.7062, 0.55", "32.2811, 44.7182, 15.344, 0.28", "33.8226, 45.8893, 15.8336, 0.55", "34.791, 46.6024, 15.9815, 0.28", "35.9995, 47.5121, 16.0096, 0.83", "37.6059, 48.6901, 15.961, 0.55", "39.6497, 50.2008, 15.8182, 0.55", "41.5998, 51.741, 15.5654, 0.55", "43.7326, 53.5037, 15.2382, 0.55", "44.0338, 53.7592, 15.1802, 0.28", "45.1109, 54.6534, 14.9214, 0.28", "46.3563, 55.6483, 14.4831, 0.55", "47.3408, 56.465, 14.0297, 0.28", "47.7235, 56.7935, 13.7977, 0.55", "48.5334, 57.5598, 12.954, 0.55", "49.1186, 58.2026, 12.2457, 0.55", "50.211, 59.5509, 10.8514, 0.55", "50.9631, 60.4724, 9.9418, 0.28", "52.5615, 62.3867, 8.22031, 0.83", "55.5847, 66.0743, 5.26557, 0.55", "56.6908, 67.4542, 4.28203, 0.55", "57.8681, 68.9369, 3.21921, 0.83", "58.8815, 70.1671, 2.46971, 0.28", "59.6386, 71.0485, 2.02516, 0.83", "60.5524, 72.0502, 1.67659, 0.28", "61.4542, 73.0347, 1.57482, 0.83", "64.4464, 76.1004, 1.66576, 0.28", "66.6086, 78.4612, 2.01173, 0.55", "68.1045, 80.1789, 2.45942, 0.28", "68.8247, 81.0799, 2.64701, 0.28", "70.0699, 82.6599, 2.92831, 0.83", "72.2635, 85.3624, 3.3559, 0.28", "73.2757, 86.5186, 3.46608, 0.83", "74.8914, 88.2858, 3.17121, 0.28", "78.0337, 91.7833, 2.13245, 0.55", "79.4482, 93.2495, 1.51755, 0.28", "80.2152, 93.9704, 1.04754, 0.28", "81.2443, 94.9701, 0.0773649, 0.55", "82.6256, 96.0554, -1.20323, 0.83", "88.7412, 103.85, -2.80457, 0.83", "95.123, 111.557, -3.56923, 0.83", "102.927, 117.921, -3.45847, 0.83", "111.852, 122.585, -2.6654, 0.83", "121.275, 125.637, -0.617844, 0.83", "130.138, 127.876, 3.71217, 0.83", "139.538, 129.167, 7.22646, 0.83", "148.88, 128.65, 11.0583, 0.83", "158.566, 129.813, 13.74, 0.83", "167.654, 130.204, 18.1692, 0.83", "177.364, 130.852, 20.9297, 0.83" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "12.2815, 21.233, 15.6175, 0.55", "14.0854, 21.8418, 16.18, 0.55", "15.1991, 22.2963, 16.6742, 0.55", "17.3067, 23.0649, 17.6374, 0.55", "20.5928, 24.1993, 19.1265, 0.55", "21.7472, 24.5609, 19.6093, 0.83", "22.7779, 24.8957, 19.9639, 0.83", "25.1933, 25.6206, 20.8231, 0.83", "26.771, 26.0662, 21.2632, 0.55", "28.6248, 26.5048, 21.5219, 0.83", "30.0822, 26.7607, 21.4926, 0.55", "32.2515, 27.0882, 21.3137, 0.55", "35.1618, 27.4576, 20.8842, 0.83", "37.8765, 27.7635, 20.2627, 0.83", "39.5019, 27.9115, 19.8334, 0.55", "41.0992, 27.9675, 19.348, 0.83", "42.8904, 27.9659, 18.7841, 0.55", "44.0501, 27.8878, 18.4117, 0.83", "45.2977, 27.7598, 17.9262, 0.83", "46.6702, 27.6336, 17.4215, 0.83", "49.1133, 27.3743, 16.5185, 0.83", "50.167, 27.1635, 16.0823, 0.55", "51.0039, 26.9209, 15.7095, 0.83", "51.8104, 26.6375, 15.3128, 0.83", "53.7053, 25.7717, 14.2932, 0.83", "55.0433, 24.9693, 13.5489, 0.83", "56.7619, 23.6991, 12.7939, 0.83", "58.134, 22.6245, 12.2018, 0.83", "59.7023, 21.3541, 11.5498, 0.55", "60.9879, 20.1844, 11.0422, 0.55", "62.5286, 18.5811, 10.5038, 0.55", "64.9166, 16.2124, 9.9417, 0.55", "73.2044, 16.0823, 9.9404, 0.55" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "16.8411, 9.15293, -1.50579, 0.83", "17.5065, 13.3562, -1.46888, 0.83", "17.9044, 15.5966, -1.66627, 0.83", "18.3027, 17.6849, -1.47542, 0.83", "19.3161, 22.0212, -0.801985, 0.83", "19.9288, 24.1792, -0.455097, 0.83", "20.8681, 27.2399, 0.0177799, 0.28", "21.5525, 29.2615, 0.511692, 0.83", "24.1452, 35.7153, 2.46312, 0.55", "25.1315, 37.9324, 3.22147, 0.55", "26.7515, 41.2326, 4.44999, 0.55", "27.277, 42.23, 4.93075, 0.55", "28.9655, 45.3278, 6.73657, 0.55", "29.5154, 46.2364, 7.3039, 0.28", "30.1702, 47.207, 7.87402, 0.55", "31.4015, 48.9284, 9.09741, 0.55", "32.5333, 50.3857, 10.2832, 0.28", "32.9893, 50.9636, 10.7355, 0.28", "33.3957, 51.4299, 11.0423, 0.55", "34.095, 52.1425, 11.5581, 0.28", "35.3454, 53.2379, 12.3793, 0.55", "35.7108, 53.517, 12.5709, 0.55", "36.6788, 54.2451, 13.0287, 0.55", "38.7384, 55.7272, 14.0416, 0.28", "39.975, 56.579, 14.6605, 0.55", "41.2022, 57.3723, 15.2664, 0.28", "41.9821, 57.864, 15.669, 0.28", "43.3164, 58.635, 16.3115, 0.55", "47.2591, 65.814, 19.1483, 0.55", "52.5815, 72.4217, 20.9676, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "16.8411, 9.15293, -1.50579, 1.11", "19.5934, 7.99125, -1.59343, 1.11", "21.5598, 7.18813, -1.86922, 1.11", "22.9096, 6.77269, -2.14275, 1.11", "24.385, 6.43276, -2.51031, 1.38", "26.9436, 5.84324, -3.14774, 2.22", "29.1889, 5.32592, -3.70709, 1.38", "31.3187, 4.76897, -4.36137, 0.83", "33.5082, 4.23758, -5.2658, 1.38", "34.9245, 4.02954, -5.93712, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-1.65876, -21.1468, 3.46342, 1.38", "-2.70238, -22.4305, 3.60041, 1.38", "-4.71058, -24.9007, 3.864, 0.83", "-5.42779, -25.783, 3.95814, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-1.65876, -21.1468, 3.46342, 1.38", "-0.617698, -23.855, 3.47703, 1.38" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-8.30717, -9.96831, -5.133, 1.38", "-10.9562, -12.1588, -5.1623, 1.38", "-14.5543, -15.134, -5.20209, 1.66" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-8.30717, -9.96831, -5.133, 0.55", "-8.99393, -8.29483, -6.31403, 0.55", "-9.74691, -5.60583, -8.40668, 0.55", "-10.1277, -3.84839, -9.7975, 0.55", "-10.4876, -1.38405, -11.5812, 0.55", "-10.616, -0.00115275, -12.5419, 0.55", "-10.6691, 2.0213, -13.9682, 0.55", "-10.4315, 4.11724, -15.3747, 0.28", "-10.2486, 4.87759, -15.8449, 0.55", "-9.53135, 6.68984, -17.0149, 0.28", "-8.94088, 7.90042, -17.6568, 0.55", "-7.99634, 9.76303, -18.3715, 0.28", "-7.30693, 11.0959, -18.7237, 0.55", "-6.34959, 12.9578, -19.1108, 0.28", "-5.8867, 13.8589, -19.3103, 0.55", "-4.66383, 16.2328, -19.9038, 0.28", "-3.94966, 17.6455, -20.2809, 0.55", "-2.32771, 20.8769, -21.3068, 0.28", "-1.82282, 21.84, -21.6845, 0.55", "-1.15088, 23.0161, -22.1769, 0.28", "-0.593558, 23.9692, -22.6008, 0.55", "0.71626, 26.0363, -23.6762, 0.28", "1.66436, 27.5616, -24.4487, 0.55", "2.55344, 29.1091, -25.1858, 0.28", "3.8237, 31.2464, -26.2625, 0.28", "4.68108, 32.6427, -26.9514, 0.55", "6.42938, 35.5687, -28.4689, 0.28", "6.90097, 36.3654, -28.9152, 1.11", "8.01562, 38.3875, -30.1187, 0.55", "9.05702, 40.3946, -31.4138, 0.28", "9.77044, 41.8016, -32.3596, 0.83", "10.6051, 43.4016, -33.4913, 0.28", "11.0211, 44.1214, -34.1187, 0.55", "11.6486, 44.9641, -34.9666, 0.28", "12.2365, 45.6354, -35.7727, 0.83", "13.1354, 46.6017, -37.074, 0.28", "14.5227, 48.0591, -38.998, 0.55", "17.0986, 50.549, -42.4452, 0.28", "18.412, 51.7363, -44.2093, 0.55", "20.3652, 53.3565, -46.8451, 0.28", "22.3295, 54.9223, -49.5783, 0.28", "23.8021, 56.0982, -51.6938, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-20.898, 10.8104, 15.7603, 0.55", "-21.7296, 13.6177, 14.5271, 0.55", "-22.2143, 15.2018, 13.9807, 0.55", "-22.7359, 16.6501, 13.5627, 0.55", "-24.1326, 20.053, 12.6553, 0.55", "-25.0274, 21.9915, 12.0657, 0.28", "-26.0819, 24.196, 11.3904, 0.55", "-26.5712, 25.1607, 11.1309, 0.28", "-27.4693, 26.8751, 10.659, 0.55", "-28.5101, 28.8234, 10.1617, 0.55", "-30.0753, 31.6374, 9.59856, 0.28", "-30.7926, 32.9783, 9.29762, 0.55", "-31.6004, 34.529, 8.98764, 0.28", "-32.1457, 35.6254, 8.82654, 0.55", "-32.574, 36.539, 8.72098, 0.55", "-33.1983, 37.8644, 8.62811, 0.28", "-34.0111, 39.5455, 8.51487, 0.55", "-34.7376, 40.9491, 8.42848, 0.28", "-35.3565, 41.9988, 8.31012, 0.55", "-36.9981, 44.4513, 7.90548, 0.28", "-37.4268, 44.9941, 7.79157, 0.55", "-38.7651, 46.4866, 7.42374, 0.28", "-40.18, 47.9456, 7.05403, 0.55", "-42.501, 50.2586, 6.50051, 0.28", "-43.6666, 51.4209, 6.24522, 0.55", "-44.9698, 52.758, 6.00685, 0.28", "-45.9315, 53.8144, 5.81446, 0.55", "-46.5823, 54.5861, 5.68017, 0.28", "-46.7214, 54.7871, 5.62905, 0.83", "-47.7307, 56.7127, 5.21052, 0.28", "-48.1762, 57.7715, 5.02831, 0.83", "-48.6568, 59.0798, 4.86784, 0.28", "-48.8402, 59.6024, 4.8446, 0.83", "-49.695, 62.0988, 4.92155, 0.28", "-50.133, 63.4444, 5.1556, 0.55", "-50.7714, 65.5302, 5.82286, 0.28", "-51.1141, 66.7688, 6.34764, 0.55", "-51.4745, 68.2367, 7.09021, 0.28", "-51.7166, 69.2902, 7.65761, 0.55", "-52.1196, 71.3236, 8.82297, 0.28", "-52.1922, 71.8059, 9.08517, 0.55", "-52.3128, 72.697, 9.4985, 0.28", "-52.4097, 73.4035, 9.80523, 0.55", "-52.6363, 74.763, 10.3297, 0.28", "-52.9341, 76.1344, 10.8109, 0.55", "-53.4484, 77.9317, 11.3371, 0.28", "-53.8164, 79.061, 11.6737, 0.55", "-54.4119, 80.6407, 12.1443, 0.28", "-54.5486, 80.9444, 12.2331, 0.55", "-55.177, 82.2538, 12.6029, 0.28", "-55.7548, 83.4076, 12.8607, 0.55", "-56.0936, 84.1105, 12.9687, 0.28", "-56.4619, 84.9032, 13.0903, 0.55", "-57.2319, 86.6385, 13.3493, 0.55", "-57.8081, 88.0071, 13.5398, 0.83", "-58.3243, 89.3461, 13.6979, 0.55", "-58.9536, 91.1915, 13.9246, 0.83", "-63.7187, 98.649, 14.7788, 0.83", "-70.1584, 104.458, 16.9791, 0.83", "-76.3695, 109.426, 21.1068, 0.83", "-82.9523, 114.418, 24.5887, 0.83", "-90.1671, 119.094, 27.1766, 0.83", "-96.6381, 124.218, 30.6654, 0.83", "-102.901, 129.638, 34.063, 0.83", "-109.556, 134.384, 37.7568, 0.83", "-114.854, 139.222, 43.119, 0.83", "-120.31, 142.544, 49.4452, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-20.898, 10.8104, 15.7603, 0.55", "-22.4845, 10.4577, 16.2245, 0.55", "-23.779, 10.1223, 16.9339, 0.55", "-26.4064, 9.39783, 18.5033, 0.55", "-28.4761, 8.84127, 19.7832, 0.55", "-31.0159, 8.09093, 21.404, 0.55", "-35.2231, 6.70609, 23.9181, 0.55", "-39.6358, 5.08256, 26.6121, 0.55", "-42.1608, 4.03467, 28.2338, 0.55", "-44.8489, 2.68113, 30.05, 0.55", "-46.6913, 1.58164, 31.3314, 0.55", "-49.355, -0.331398, 32.9901, 0.55", "-50.0991, -0.987032, 33.3208, 0.83", "-51.8541, -2.70654, 33.7944, 0.83", "-53.9678, -5.03553, 34.1795, 0.55", "-55.8426, -7.26833, 34.3047, 0.55", "-57.7802, -9.47247, 34.3028, 0.83", "-59.3672, -11.2661, 34.291, 0.28", "-60.8953, -12.9622, 34.1869, 0.55", "-63.0738, -15.3932, 34.1553, 0.55", "-64.0409, -16.5304, 34.2382, 0.55", "-65.2523, -17.9278, 34.4172, 0.55", "-66.9418, -19.8905, 34.9375, 0.28", "-67.9414, -21.084, 35.3694, 0.83", "-70.3202, -24.1866, 36.602, 0.28", "-71.0981, -25.3089, 37.2213, 0.55", "-78.234, -30.2608, 42.3003, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-0.967733, -4.15235, 5.667, 2.22", "-0.388668, -6.93611, 3.3148, 2.22", "0.144148, -9.49754, 1.15047, 1.38", "0.997955, -13.6021, -2.31775, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.967733, -4.15235, 5.667, 1.66", "1.25478, -4.63467, 4.2547, 1.66", "4.43958, -5.32581, 2.23091, 1.66", "9.80245, -6.48962, -1.17693, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.68178, 38.618, 1.59687, 1.11", "13.4606, 53.1342, 1.59687, 1.11", "17.2394, 67.6504, 1.59687, 1.11" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "34.9245, 4.02954, -5.93712, 0.83", "32.7358, 6.32518, -5.96067, 0.83", "30.3719, 8.06404, -5.96012, 0.83", "28.8505, 9.09113, -6.20952, 0.83", "26.581, 10.856, -6.79949, 0.83", "24.8041, 12.3097, -7.31863, 0.55", "23.5137, 13.3907, -7.84541, 0.83", "22.1362, 14.5388, -8.39332, 0.83", "19.8569, 16.6355, -9.45443, 0.55", "17.3561, 19.0673, -10.7629, 0.55", "16.0737, 20.4892, -11.5552, 0.55", "13.8681, 23.3775, -13.1454, 0.83", "12.4755, 25.463, -14.2145, 1.11", "10.5495, 28.6389, -15.7266, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "34.9245, 4.02954, -5.93712, 0.55", "39.0326, 5.5838, 4.55889, 0.55", "39.5466, 5.75026, 5.69068, 0.55", "40.7848, 6.20889, 7.97287, 1.11", "42.5552, 6.86467, 11.2361, 0.55", "43.6267, 7.26154, 13.2109, 0.55", "43.8937, 7.36046, 13.7032, 0.83", "45.7777, 7.73536, 15.0664, 0.55", "47.5443, 8.26248, 16.6391, 1.11", "52.8845, 11.23, 24.7377, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-5.42779, -25.783, 3.95814, 0.83", "-4.30849, -27.036, 3.98645, 0.83", "-3.14358, -28.2939, 3.92887, 0.83", "-2.20603, -29.3548, 3.75514, 0.83", "-0.49165, -31.5468, 3.31802, 0.28", "0.606307, -33.033, 3.00204, 0.83", "2.36428, -35.3764, 2.51497, 0.28", "2.9709, -36.1335, 2.3507, 0.83", "4.66349, -38.1733, 1.96189, 0.28", "6.00409, -39.9002, 1.6558, 0.55", "6.4752, -40.5246, 1.55556, 0.28", "7.70722, -42.2349, 1.4294, 0.55", "8.82207, -43.8382, 1.44053, 0.55", "10.2058, -45.8208, 1.50786, 0.55", "11.7503, -47.9738, 1.67282, 0.28", "12.3232, -48.7796, 1.72937, 0.83", "13.1262, -50.0513, 1.83357, 0.28", "13.8582, -51.3446, 1.95492, 0.55", "14.663, -52.7725, 1.99628, 0.55", "15.4359, -54.1222, 1.99556, 0.55", "16.4176, -55.6831, 1.9968, 0.83", "17.3046, -57.0487, 1.98897, 0.55", "19.2981, -59.965, 1.96828, 0.55", "21.303, -62.8429, 1.96802, 2.22", "22.8459, -65.0046, 1.97991, 0.55", "24.1321, -66.7449, 1.99376, 0.55", "25.6212, -68.7129, 2.02187, 0.28", "26.7218, -70.1013, 2.01171, 0.55", "28.047, -71.7365, 2.02383, 0.28", "28.8998, -72.8126, 2.07148, 0.83", "29.7474, -73.9185, 2.07808, 0.28", "30.8917, -75.5616, 2.05861, 0.55", "32.1834, -77.7192, 2.03575, 0.28", "32.818, -78.9313, 2.03225, 0.55", "33.4137, -80.2113, 1.99108, 0.55", "34.0769, -81.8401, 1.9163, 0.28", "34.5674, -83.1284, 1.87226, 0.55", "35.6052, -86.0109, 1.82626, 0.28", "35.9217, -86.9488, 1.84234, 0.55", "36.7871, -89.3191, 1.82073, 0.28", "37.1251, -90.1212, 1.81608, 0.55", "38.1607, -92.2881, 1.75488, 0.28", "38.5542, -93.0234, 1.70162, 0.55", "39.9176, -95.3472, 1.45714, 0.28", "40.7743, -96.6652, 1.2848, 0.83", "42.0662, -98.6032, 1.00075, 0.28", "43.0924, -100.149, 0.711324, 0.55", "44.3938, -102.085, 0.285125, 0.28", "45.0458, -103.033, 0.110673, 0.55", "47.1124, -106.062, -0.273517, 0.28", "48.1829, -107.653, -0.431628, 0.55", "48.9927, -108.893, -0.487574, 0.55", "50.0352, -110.534, -0.461916, 0.55", "52.0405, -113.718, -0.219058, 0.28", "52.6272, -114.667, -0.124115, 0.55", "54.6463, -117.948, 0.36362, 0.28", "55.7212, -119.502, 0.603951, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-5.42779, -25.783, 3.95814, 0.55", "-7.98479, -27.3288, 4.96481, 0.55", "-10.4859, -28.7848, 6.0794, 0.55", "-13.1588, -30.1893, 7.31075, 0.55", "-16.5556, -31.7823, 8.78633, 0.55", "-18.5923, -32.642, 9.62997, 0.55", "-19.4854, -32.9992, 10.0045, 0.55", "-21.0796, -33.6114, 10.6587, 0.83", "-22.9066, -34.1964, 11.4615, 0.83", "-25.3412, -34.9573, 12.5201, 0.55", "-26.2417, -35.2901, 12.9465, 0.55", "-28.4412, -36.2077, 14.0695, 0.55", "-30.8938, -37.4313, 15.3508, 0.83", "-34.2134, -39.3655, 17.0508, 0.28", "-35.7186, -40.3911, 17.8737, 1.11", "-37.9023, -42.105, 19.1852, 0.55", "-39.0237, -43.0836, 19.8636, 0.55", "-40.0266, -44.0235, 20.4436, 0.83", "-40.9137, -44.9243, 20.9614, 0.28", "-41.2787, -45.3328, 21.0981, 0.55", "-42.4084, -46.6118, 21.427, 0.28", "-43.0057, -47.2988, 21.503, 0.55", "-44.2652, -48.6654, 21.5945, 0.28", "-45.3229, -49.7421, 21.641, 0.55", "-46.7058, -51.0495, 21.7162, 0.28", "-47.4204, -51.6419, 21.7547, 0.55", "-49.0469, -52.8344, 21.8231, 0.28", "-51.3164, -54.3647, 21.9468, 0.83", "-54.0772, -56.0708, 22.1408, 0.55", "-55.5982, -56.9317, 22.2828, 0.55", "-57.6565, -57.9422, 22.5106, 0.55", "-59.8973, -58.9065, 22.7933, 0.28", "-60.6535, -59.1916, 22.904, 0.55", "-62.5075, -59.7884, 23.1786, 0.28", "-63.0611, -59.9406, 23.2574, 0.83", "-65.7461, -60.6648, 23.6879, 0.28", "-67.5386, -61.1123, 24.0861, 0.83", "-69.3021, -61.4583, 24.5796, 0.28", "-70.3271, -61.6012, 24.8791, 0.83", "-72.0788, -61.7262, 25.4264, 0.28", "-73.4902, -61.7211, 25.8917, 0.55", "-75.2304, -61.5315, 26.5125, 0.28", "-75.9748, -61.3211, 26.8102, 0.83", "-77.2985, -60.7261, 27.4549, 0.28", "-77.7065, -60.5107, 27.6792, 0.55", "-78.4557, -60.1286, 28.0931, 0.28", "-79.1174, -59.8428, 28.4629, 0.55", "-81.7179, -59.4662, 29.8644, 0.28", "-82.227, -59.4828, 30.1345, 0.83", "-83.0553, -59.6107, 30.5192, 0.83", "-85.6249, -60.2345, 31.6719, 0.28", "-87.0545, -60.7381, 32.2045, 0.83", "-90.7851, -62.398, 33.3646, 0.28", "-91.5956, -62.7982, 33.5752, 0.83", "-93.3235, -63.7005, 34.0172, 0.28", "-95.4381, -64.8707, 34.5373, 0.83", "-98.4865, -66.7792, 35.2001, 0.28", "-99.361, -67.3576, 35.3272, 0.83", "-107.074, -69.9116, 39.8933, 0.83", "-114.567, -70.9446, 45.3675, 0.83", "-121.529, -72.8875, 51.266, 0.83", "-129.262, -73.9517, 56.3888, 0.83", "-136.754, -76.3205, 61.4057, 0.83", "-143.195, -78.6063, 67.7497, 0.83", "-150.484, -80.2806, 73.3303, 0.83", "-157.866, -80.4026, 79.053, 0.83", "-165.815, -80.8334, 83.9378, 0.83", "-174.118, -80.0325, 88.1381, 0.83", "-182.729, -79.2744, 91.6764, 0.83" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-0.617698, -23.855, 3.47703, 0.55", "-2.09651, -28.216, 5.16693, 0.55", "-2.85798, -30.6374, 5.97066, 0.55", "-3.80535, -33.7675, 6.8668, 1.11", "-4.66762, -36.6579, 7.66431, 0.83", "-5.60313, -39.7524, 8.4941, 1.66", "-6.45797, -42.7084, 9.41154, 0.83", "-6.78852, -43.9606, 9.8382, 0.55", "-7.42395, -46.1588, 10.62, 1.11", "-7.94403, -47.7255, 11.1612, 0.55", "-8.74208, -49.9905, 11.9177, 1.11", "-10.2573, -54.0725, 13.4008, 0.55", "-11.1702, -56.2616, 14.2781, 0.55", "-11.6416, -57.2913, 14.6847, 0.83", "-12.9361, -59.8879, 15.5606, 0.55", "-13.721, -61.3218, 15.9154, 0.83", "-14.7071, -63.1235, 16.3185, 0.28", "-15.4042, -64.4163, 16.5459, 1.11", "-16.0204, -65.6569, 16.8071, 1.11", "-16.9976, -67.9598, 17.32, 0.55", "-17.5574, -69.4964, 17.6772, 0.55", "-18.7605, -73.0422, 18.5435, 0.55", "-19.4225, -75.2892, 19.1938, 0.55", "-19.9587, -77.4843, 19.8856, 0.55", "-20.2887, -79.1389, 20.4132, 0.55", "-20.5367, -80.51, 20.8665, 0.83", "-20.7731, -81.7731, 21.2565, 0.83", "-21.3742, -84.2432, 21.8794, 0.28", "-21.6019, -84.9271, 21.9924, 0.55", "-22.454, -86.8092, 22.1082, 0.28", "-22.9324, -87.6085, 21.9757, 0.55", "-23.8418, -88.9438, 21.58, 0.28", "-24.5572, -89.8555, 21.2906, 0.83", "-27.7353, -93.6969, 20.04, 0.28", "-28.9285, -95.1299, 19.6099, 0.83", "-32.1451, -98.9472, 18.5748, 0.55", "-33.4771, -100.567, 18.2051, 1.38", "-35.5098, -103.092, 17.7381, 0.55", "-36.7384, -104.677, 17.5981, 0.55", "-38.2566, -106.779, 17.8257, 0.28", "-38.9772, -107.75, 18.0294, 0.83", "-39.7785, -108.779, 18.4097, 0.28", "-39.9849, -109.033, 18.4872, 0.83", "-41.3585, -110.646, 18.8407, 0.28", "-42.7965, -112.267, 19.1512, 0.55", "-43.9809, -113.623, 19.2318, 0.28", "-44.4538, -114.195, 19.1702, 0.55", "-45.9686, -116.165, 18.7909, 0.28", "-46.3675, -116.772, 18.657, 0.55", "-47.2169, -118.249, 18.1063, 0.55", "-48.2982, -120.201, 17.2921, 0.28", "-48.951, -121.346, 16.8067, 0.55", "-49.7531, -122.662, 16.2547, 0.28", "-50.7219, -124.311, 15.6378, 1.11", "-52.8681, -127.541, 14.3721, 0.55", "-53.779, -128.817, 14.0398, 0.83", "-55.1574, -131.002, 13.9546, 0.28", "-55.5027, -131.575, 13.9532, 0.83", "-56.5763, -133.519, 14.0263, 0.28", "-57.2733, -135.152, 14.2323, 0.55", "-58.6184, -138.848, 14.7019, 0.55", "-59.4829, -141.219, 14.7707, 0.55", "-60.6722, -144.832, 14.8014, 0.28", "-60.9922, -145.96, 14.8646, 0.28", "-61.5419, -147.89, 14.909, 0.83", "-62.2651, -150.475, 14.7798, 0.28", "-62.9527, -152.57, 14.5161, 0.28", "-63.5602, -154.147, 14.3714, 0.83", "-65.2122, -158.143, 14.3841, 0.28", "-66.3053, -160.477, 14.7038, 0.55", "-67.753, -163.447, 15.2347, 0.28", "-68.6524, -165.315, 15.673, 0.83", "-70.0724, -167.97, 16.3363, 1.38", "-70.974, -169.367, 16.7086, 0.55", "-73.8526, -172.941, 17.7384, 1.66", "-80.2842, -183.005, 18.2065, 1.66", "-86.6386, -192.956, 20.1012, 1.66", "-93.0972, -202.668, 22.7892, 1.66", "-100.135, -212.336, 23.2932, 1.66", "-106.59, -222.374, 22.6182, 1.66", "-113.71, -231.817, 24.524, 1.66", "-121.484, -240.328, 27.9155, 1.66" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-0.617698, -23.855, 3.47703, 0.83", "0.234466, -26.0707, 2.02888, 0.83", "1.27621, -28.7793, 0.25857, 0.83", "1.76259, -30.0439, -0.567964, 0.83", "2.7281, -32.5543, -2.20871, 0.83" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-14.5543, -15.134, -5.20209, 0.83", "-16.0532, -17.088, -6.27603, 0.83", "-16.5808, -18.0148, -6.56056, 0.83", "-17.0224, -19.0136, -6.73997, 0.83", "-17.7476, -20.6539, -7.03459, 1.94", "-18.6168, -22.6197, -7.3877, 0.55", "-19.6241, -24.8979, -7.7969, 0.55", "-19.9915, -25.9116, -7.8283, 0.55", "-20.6021, -27.8899, -7.81016, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-14.5543, -15.134, -5.20209, 0.83", "-15.7174, -17.0165, -5.69779, 0.83", "-17.1329, -18.7862, -5.92223, 0.55", "-19.2986, -21.2279, -5.96305, 0.55", "-21.6752, -23.6257, -5.86857, 0.55", "-23.979, -25.7219, -5.62667, 0.55", "-26.33, -27.7045, -5.30415, 0.55", "-30.7678, -30.6838, -4.63666, 0.55", "-32.5503, -31.6314, -4.28614, 0.28", "-34.6842, -32.5521, -3.7229, 0.55", "-36.6999, -33.1641, -3.07663, 0.55", "-37.8621, -33.4105, -2.7176, 0.55", "-39.9291, -33.6664, -2.13408, 0.55", "-41.8769, -33.8246, -1.87468, 0.28", "-42.5021, -33.8298, -1.82653, 0.28", "-44.6862, -33.7779, -1.76831, 0.83", "-47.8159, -33.756, -2.16779, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "0.997955, -13.6021, -2.31775, 1.11", "-2.0356, -13.5715, -1.15742, 1.11", "-3.36525, -13.5581, -0.648839, 0.83", "-5.70221, -13.5345, 0.245043, 1.38", "-10.2578, -13.4886, 1.9875, 0.83", "-11.8351, -13.4727, 2.59082, 0.83", "-14.714, -13.4436, 3.69201, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "0.997955, -13.6021, -2.31775, 1.11", "1.46635, -14.8374, -2.30718, 1.11", "2.33963, -17.0394, -2.33153, 1.11", "3.35598, -19.6592, -2.38163, 1.11", "4.44813, -22.4744, -2.43547, 1.11", "5.16402, -24.3197, -2.47076, 1.11", "5.95565, -26.3603, -2.50978, 1.11", "6.39812, -27.4927, -2.54216, 1.11", "7.37065, -29.9037, -2.64996, 1.38" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "9.80245, -6.48962, -1.17693, 0.55", "12.2719, -6.7611, 1.27284, 0.55", "15.558, -7.43459, 4.7387, 0.55", "18.412, -8.23741, 7.56634, 0.83", "20.0288, -8.74289, 9.03503, 0.83", "22.7082, -9.57499, 11.3527, 0.83", "25.5433, -10.3791, 13.8513, 0.55", "27.3318, -10.8592, 15.6341, 0.55", "30.6443, -11.0947, 18.5208, 0.83", "31.589, -10.4284, 19.8549, 0.83", "32.3543, -9.01733, 21.457, 0.28", "33.1429, -7.35364, 23.0045, 0.83", "34.0127, -5.78698, 24.3863, 0.55", "34.5849, -4.9304, 25.1684, 0.55", "36.5096, -2.15538, 27.628, 0.55", "38.6172, 0.609352, 29.8694, 0.55", "39.7256, 1.8514, 30.7104, 0.55", "41.594, 3.7315, 31.9104, 0.55", "43.2879, 5.39944, 32.8939, 0.55", "45.2641, 7.23359, 33.8981, 0.55", "46.9085, 8.61725, 34.5768, 0.55", "48.7759, 10.2141, 35.31, 0.55", "51.942, 13.1013, 36.6267, 0.55", "53.7149, 14.8153, 37.3572, 0.55", "54.9024, 15.9792, 37.9146, 0.55", "56.7672, 17.5539, 39.0587, 0.55", "65.5762, 23.7792, 45.729, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "9.80245, -6.48962, -1.17693, 0.55", "10.2883, -7.53667, -1.18639, 0.55", "10.8247, -8.5653, -1.16415, 0.55", "11.4813, -9.86575, -1.06663, 0.55", "12.5283, -12.0301, -0.873828, 0.55", "13.1434, -13.2773, -0.760193, 0.55", "14.2598, -15.5608, -0.476609, 0.55", "14.8727, -16.8837, -0.244117, 0.55", "15.6171, -18.631, 0.165533, 0.55", "16.1702, -19.948, 0.50814, 0.55", "16.7123, -21.2728, 0.898699, 0.28", "17.3881, -22.9658, 1.38641, 0.83", "18.0153, -24.7613, 1.968, 0.83", "18.555, -26.4033, 2.53978, 1.11", "19.0986, -27.9249, 3.06952, 0.83", "19.9728, -30.4078, 3.97301, 0.83", "20.5785, -32.1967, 4.62246, 0.83", "21.4262, -34.5899, 5.43122, 0.55", "21.9117, -35.8879, 5.87888, 0.55", "22.6231, -37.6438, 6.52666, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "52.8845, 11.23, 24.7377, 0.55", "57.5695, 13.9732, 32.5283, 0.55", "61.9656, 17.9097, 39.9523, 0.55", "66.8612, 21.0191, 47.4669, 0.55", "72.612, 23.7668, 54.5033, 0.55", "77.3221, 25.5733, 62.5525, 0.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "52.8845, 11.23, 24.7377, 0.55", "57.6588, 12.8038, 33.0235, 0.55", "61.6962, 13.2634, 41.8273, 0.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "55.7212, -119.502, 0.603951, 0.28", "56.8754, -121.455, 1.25991, 0.28", "57.674, -122.741, 1.63929, 0.28", "58.5348, -124.113, 2.06315, 0.83", "59.3215, -125.385, 2.45974, 0.28", "59.9422, -126.422, 2.76584, 0.55", "61.2855, -128.653, 3.39828, 0.28", "61.4983, -128.989, 3.48912, 0.55", "62.2552, -130.229, 3.57289, 0.28", "62.483, -130.618, 3.5308, 0.55", "63.4751, -132.5, 3.2267, 0.28", "63.7935, -133.213, 3.07117, 0.28", "64.0719, -133.95, 2.94545, 0.55", "65.3456, -137.792, 2.3806, 0.28", "65.7238, -139.056, 2.21061, 0.28", "66.2542, -141.059, 1.89385, 0.83", "67.0022, -144.652, 1.28079, 0.28", "67.4728, -147.268, 0.839349, 0.55", "67.6705, -148.564, 0.645938, 0.55", "67.7351, -149.049, 0.61078, 0.55", "68.0925, -151.872, 0.189303, 0.28", "68.1619, -152.465, 0.0162249, 0.55", "68.4958, -154.577, -0.921058, 0.28", "68.5508, -154.843, -1.08142, 0.55" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "55.7212, -119.502, 0.603951, 0.28", "56.2933, -122.279, -5.59831, 0.28", "56.4116, -122.853, -6.88009, 0.28", "56.5523, -123.536, -8.40486, 0.55", "56.9923, -125.672, -13.1751, 0.28" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "2.7281, -32.5543, -2.20871, 0.83", "3.88308, -37.295, -2.27388, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "2.7281, -32.5543, -2.20871, 0.83", "4.58251, -32.6056, -3.18694, 0.83", "5.9623, -32.5841, -3.87283, 0.83", "8.3729, -32.566, -4.88858, 1.11", "11.6246, -32.5199, -6.61643, 0.83", "13.3394, -32.5556, -7.60379, 0.83", "15.0124, -32.5887, -8.61601, 0.83", "16.3515, -32.647, -9.5804, 0.55", "17.8214, -32.7845, -10.7209, 0.83", "21.2564, -33.1124, -13.3643, 0.55", "22.5911, -33.1489, -14.2706, 0.55", "24.6668, -33.1854, -15.6814, 0.55", "25.9261, -33.2301, -16.5509, 0.55", "27.3924, -33.3088, -17.5526, 0.83", "29.0696, -33.3654, -18.6256, 0.83", "30.3357, -33.4138, -19.2783, 0.55", "31.9454, -33.4451, -20.1152, 0.55", "33.5842, -33.5268, -20.9148, 0.55", "34.4243, -33.5608, -21.2998, 0.83", "35.6597, -33.6252, -21.9502, 0.28", "36.6713, -33.7211, -22.6299, 0.83", "37.4363, -33.7946, -23.19, 0.28", "38.3346, -33.872, -23.8929, 0.83", "39.4033, -33.9631, -24.8704, 0.28", "40.5732, -34.0516, -26.058, 0.28", "42.0473, -34.1456, -27.626, 1.11", "43.4479, -34.2543, -29.1913, 0.28", "44.0558, -34.304, -29.955, 0.83", "46.4636, -34.4275, -32.9988, 0.28", "46.7725, -34.4432, -33.4093, 0.83", "47.7252, -34.4814, -34.5495, 0.28", "49.1167, -34.5899, -36.1307, 0.55", "51.1463, -34.8178, -38.3254, 0.83", "53.0993, -35.0853, -40.1877, 0.28", "55.3734, -35.4751, -42.2536, 0.55", "57.1982, -35.7906, -43.8778, 0.28", "58.6963, -36.0945, -45.1096, 0.83", "59.6609, -36.3007, -45.8667, 0.28", "60.571, -36.5191, -46.5231, 0.83", "63.3706, -37.2595, -48.3931, 0.28", "64.285, -37.4793, -48.9774, 0.28", "65.5736, -37.7711, -49.9318, 0.83", "68.6594, -38.3077, -52.1315, 0.28", "70.2901, -38.5782, -53.3577, 0.28", "71.8644, -38.8856, -54.5533, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-20.6021, -27.8899, -7.81016, 0.55", "-22.6974, -27.9885, -8.81589, 0.55", "-25.179, -27.9931, -10.0309, 0.83", "-27.7182, -27.932, -11.2456, 0.28", "-29.887, -27.897, -12.2427, 0.55", "-32.0364, -27.8965, -13.2446, 0.28", "-32.7463, -27.9007, -13.5749, 0.55", "-33.8484, -27.9443, -14.1114, 0.55", "-35.6287, -28.0405, -14.9204, 0.55", "-36.7263, -28.101, -15.3418, 0.55", "-39.287, -28.2849, -16.2774, 0.55", "-40.3258, -28.4277, -16.6302, 0.55", "-42.6349, -28.9129, -17.3346, 0.55", "-46.0725, -29.8031, -18.2746, 1.11", "-48.0314, -30.3935, -18.7416, 0.28", "-48.7542, -30.616, -18.9024, 0.55", "-50.1737, -31.0384, -19.1788, 0.28", "-52.1714, -31.5665, -19.5831, 0.83", "-54.0262, -31.9001, -19.9571, 0.55", "-55.7535, -32.0038, -20.2999, 0.83", "-57.7844, -31.7595, -20.8244, 0.55", "-59.1417, -31.4786, -21.6718, 0.28", "-59.9784, -31.2649, -22.4244, 0.55", "-60.7693, -31.2197, -23.6356, 0.28", "-61.1082, -31.2958, -24.3136, 0.83", "-61.6907, -31.5198, -25.5791, 0.83", "-64.6057, -33.0503, -31.7936, 0.28", "-64.9884, -33.4309, -33.1372, 0.55", "-65.4986, -31.9662, -27.877, 0.28", "-66.1609, -31.6715, -26.5871, 0.55", "-67.5823, -31.3423, -24.6594, 0.28", "-68.4864, -31.1623, -23.5935, 0.55", "-80.2365, -28.781, -10.7385, 0.55", "-81.359, -28.5264, -9.5487, 0.28", "-82.1842, -28.3279, -8.72275, 0.55", "-83.4686, -28.0546, -7.49048, 0.28", "-85.4243, -27.7097, -5.68158, 0.83", "-87.5961, -27.3982, -4.01549, 0.28", "-89.5438, -27.3975, -3.80597, 0.55", "-92.5747, -27.3623, -3.41784, 0.55", "-94.0406, -27.3005, -3.23031, 0.83", "-95.1515, -27.2461, -3.10278, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-20.6021, -27.8899, -7.81016, 0.55", "-20.5349, -29.803, -7.82944, 0.55", "-20.5062, -32.3843, -7.88486, 0.83", "-20.5826, -35.4963, -7.86091, 0.55", "-20.8618, -39.3451, -7.71666, 0.83", "-21.465, -44.6307, -7.34448, 0.55", "-21.7112, -46.1941, -7.18961, 0.28", "-22.1377, -48.0509, -6.98852, 0.28", "-22.7616, -50.2469, -6.7101, 0.28", "-23.74, -53.2118, -6.18936, 0.83", "-24.5621, -55.3981, -5.68665, 0.28", "-25.8646, -58.558, -4.75439, 2.22", "-27.489, -62.4255, -3.69284, 0.28", "-28.2324, -64.1708, -3.25155, 0.83", "-29.2095, -66.432, -2.7531, 0.28", "-29.8409, -67.8854, -2.46548, 0.28", "-30.3399, -68.9624, -2.28642, 0.55", "-31.4774, -71.3287, -2.03913, 0.28", "-31.8179, -72.0197, -1.99987, 0.55", "-33.1364, -74.6567, -1.96932, 0.28", "-33.9482, -76.5208, -2.19375, 0.55", "-34.8274, -78.8089, -2.60364, 0.55", "-36.0209, -82.2611, -3.34224, 0.28", "-36.3705, -83.3349, -3.59999, 0.28", "-37.1832, -85.9217, -4.24735, 0.83", "-38.9618, -91.5687, -5.50103, 0.28", "-39.5329, -93.3867, -5.85469, 0.83", "-40.362, -96.0896, -6.2966, 0.28", "-40.7048, -97.128, -6.44485, 0.55", "-42.0494, -100.954, -6.92832, 0.28", "-42.8762, -103.635, -7.41155, 0.55", "-44.2149, -107.257, -7.92929, 0.28", "-44.4829, -108.084, -8.13537, 0.55", "-45.141, -110.447, -8.89386, 0.28", "-45.41, -111.585, -9.27284, 0.55", "-46.6181, -118.046, -11.6106, 0.28", "-47.2001, -121.806, -13.1026, 0.55", "-47.8291, -126.02, -14.6383, 0.28", "-48.0091, -127.526, -15.1628, 0.55", "-48.2812, -129.981, -15.7645, 0.28", "-48.4088, -130.838, -15.8639, 0.55", "-48.842, -132.682, -15.6982, 0.28", "-49.0066, -133.513, -15.6181, 0.55", "-49.7636, -136.336, -15.0207, 0.28", "-50.5276, -138.567, -14.5009, 0.55", "-51.4344, -140.677, -13.9802, 0.28", "-51.9342, -141.706, -13.647, 0.55", "-52.5309, -142.918, -13.2368, 0.28", "-52.8434, -143.58, -13.0174, 0.55", "-54.0765, -146.069, -12.2126, 0.28", "-55.1828, -148.6, -11.7126, 0.55", "-56.2597, -151.512, -11.2646, 0.28", "-56.9449, -153.43, -11.0168, 0.55", "-57.5692, -155.257, -10.9594, 0.55", "-57.9977, -156.558, -10.9868, 0.55", "-59.4932, -161.225, -11.4742, 0.28", "-61.277, -166.261, -12.2085, 0.28", "-62.4296, -169.125, -12.5979, 0.83", "-65.1479, -175.194, -13.2841, 0.28", "-65.9146, -176.76, -13.4552, 0.55", "-67.7644, -180.271, -13.8025, 0.28", "-69.2458, -182.76, -13.9876, 1.11", "-71.4533, -186.167, -14.1189, 0.28", "-71.9281, -186.863, -14.0078, 0.55", "-73.0353, -188.349, -13.3463, 0.28", "-73.7778, -189.377, -12.8013, 0.55", "-75.0176, -191.109, -11.7365, 0.28", "-75.8196, -192.287, -11.0844, 0.55", "-78.1314, -195.76, -9.36549, 0.28", "-78.6965, -196.737, -8.93059, 0.55", "-79.5208, -198.415, -8.22798, 0.28", "-80.0671, -199.825, -7.64566, 0.55", "-81.4202, -204.21, -5.92506, 0.28", "-81.5447, -204.961, -5.70914, 0.83", "-81.9949, -209.584, -4.70488, 0.28", "-82.0932, -211.192, -4.38379, 0.55", "-82.2258, -214.278, -3.79823, 0.28", "-82.2767, -216.212, -3.49285, 0.55", "-82.5023, -224.415, -2.50925, 0.28", "-82.6451, -227.2, -2.3416, 0.83", "-82.9536, -230.978, -2.33694, 0.28", "-83.0785, -232.071, -2.39965, 0.55", "-83.4478, -234.831, -2.77807, 0.28", "-83.6622, -236.199, -3.0072, 0.55", "-84.5245, -240.531, -3.85051, 0.28", "-84.5745, -240.9, -3.96962, 0.55", "-84.8163, -243.202, -4.7175, 0.28", "-84.9962, -245.284, -5.33257, 0.83", "-85.276, -248.373, -5.96652, 0.28", "-85.3578, -249.225, -6.03605, 0.55", "-86.1775, -256.696, -5.92226, 0.28", "-86.623, -260.887, -5.76684, 0.28", "-86.7663, -262.282, -5.62493, 0.55", "-87.2407, -265.8, -4.74227, 0.28", "-87.4226, -266.788, -4.20462, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-47.8159, -33.756, -2.16779, 0.55", "-48.9786, -34.0181, -3.97065, 0.55", "-49.5873, -34.2009, -4.90804, 0.55", "-50.7161, -34.5741, -6.48781, 0.55", "-52.5567, -35.0783, -8.795, 0.55", "-55.0521, -35.6169, -11.73, 0.55", "-57.6393, -36.014, -14.6059, 0.28", "-58.8346, -36.1395, -15.9628, 0.28", "-60.361, -36.2172, -17.4664, 0.55", "-62.2577, -36.1892, -18.9197, 0.28", "-63.1048, -36.218, -19.6648, 0.55", "-64.0485, -36.3064, -20.5979, 0.28", "-64.9895, -36.4561, -21.676, 0.83", "-66.7567, -36.851, -24.0885, 0.28", "-67.5057, -37.1074, -25.2967, 0.55", "-71.759, -39.3033, -33.1396, 0.55", "-72.1425, -39.5539, -33.9158, 0.55", "-72.7408, -40.0471, -35.3201, 0.55", "-73.1638, -40.4883, -36.5825, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-47.8159, -33.756, -2.16779, 0.83", "-48.9426, -33.0251, -2.63298, 0.83", "-50.4119, -32.072, -3.23965, 1.11", "-52.1658, -30.9343, -3.96379, 1.11", "-54.3947, -29.4884, -4.88407, 0.28", "-56.3664, -28.2094, -5.69814, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-14.714, -13.4436, 3.69201, 0.83", "-15.5717, -11.2091, 4.31612, 0.83", "-16.4594, -9.28431, 4.81179, 0.83", "-18.5607, -5.72228, 5.78296, 0.83", "-20.5389, -2.80759, 6.80241, 0.83", "-22.5716, -0.169746, 7.8677, 0.83", "-24.0524, 1.58238, 8.61678, 0.83", "-25.6238, 2.97712, 9.35011, 0.83", "-28.3345, 4.77792, 10.536, 0.83", "-31.0024, 6.05249, 11.5856, 0.83", "-32.3426, 6.58324, 12.0395, 0.83", "-34.7858, 7.50214, 12.909, 0.83", "-37.5391, 8.64195, 13.9116, 0.55", "-38.8692, 9.22693, 14.3681, 0.83", "-40.9296, 10.2174, 14.9714, 0.83", "-42.1873, 10.8548, 15.2501, 0.28", "-44.162, 11.9903, 15.7255, 0.55", "-45.8236, 13.045, 16.1728, 0.28", "-47.7318, 14.7197, 16.6998, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-14.714, -13.4436, 3.69201, 0.83", "-16.2136, -13.6567, 3.23485, 0.83", "-18.0005, -14.0231, 2.78399, 0.83", "-19.2758, -14.3647, 2.30556, 0.83", "-21.8922, -15.2439, 1.13904, 0.83", "-24.4397, -16.1597, -0.0397491, 0.83", "-25.5312, -16.5521, -0.544808, 0.83", "-27.3602, -17.1397, -1.46705, 0.83", "-30.3329, -17.9995, -3.03776, 0.55", "-31.1687, -18.3299, -3.57443, 0.55", "-31.9991, -18.9383, -4.27247, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "7.37065, -29.9037, -2.64996, 0.83", "8.10484, -31.9483, -2.39811, 0.83", "8.86596, -34.1535, -2.11219, 1.11", "9.38578, -35.9232, -1.9077, 0.83", "9.76754, -37.1774, -1.76661, 0.55", "9.98345, -37.8346, -1.69419, 0.83", "10.7854, -40.3985, -1.43682, 0.83", "11.2054, -41.7926, -1.27326, 0.83", "11.9252, -44.3191, -0.98122, 0.83", "12.3303, -45.9051, -0.792415, 0.55", "12.8432, -48.0455, -0.568922, 0.55", "13.3548, -50.2658, -0.344456, 0.55", "13.9239, -52.989, -0.100213, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.37065, -29.9037, -2.64996, 0.83", "10.1448, -31.8261, -2.46281, 0.83", "11.919, -33.2611, -2.59115, 0.83", "13.7144, -34.9202, -2.82983, 0.55", "15.145, -36.3735, -3.08216, 0.83", "16.8599, -38.3884, -3.47916, 0.83", "18.2777, -40.2379, -3.82372, 0.83", "19.9625, -42.7517, -4.48808, 0.55", "21.0978, -44.6194, -4.92513, 0.55", "21.3989, -45.1652, -5.09656, 0.83", "22.0975, -46.8037, -5.67238, 0.55", "22.459, -47.8531, -6.08734, 0.55", "23.0936, -49.6821, -6.8562, 1.11", "23.7004, -51.2856, -7.5778, 1.11", "24.8624, -54.2436, -9.08486, 0.55", "25.6363, -55.93, -10.0005, 1.11", "26.8349, -58.26, -11.3182, 0.55", "26.9921, -58.5913, -11.505, 0.83", "28.2019, -61.3472, -12.9808, 0.28", "28.3609, -61.6831, -13.1571, 0.55", "29.2238, -63.268, -13.8266, 0.28", "29.7237, -64.1387, -14.1171, 0.83", "30.6465, -65.7735, -14.4824, 0.55", "31.3381, -67.1721, -14.6943, 0.83", "32.157, -69.0326, -14.8572, 0.28", "32.7987, -70.5959, -15.0051, 0.83", "33.8301, -73.1669, -15.1134, 0.28", "34.8387, -75.4081, -15.1287, 0.83", "35.5707, -76.8878, -15.0249, 0.28", "36.0767, -77.8813, -14.8874, 0.28", "36.8947, -79.363, -14.6464, 0.83", "38.4218, -81.8479, -14.2875, 0.28", "39.8118, -83.8271, -14.0121, 0.55", "41.0371, -85.4847, -13.6743, 0.28", "42.56, -87.4659, -13.2037, 0.28", "43.6144, -88.8646, -12.86, 0.55", "44.3542, -89.8865, -12.6181, 0.28", "45.0697, -90.9751, -12.4011, 0.55", "46.2115, -92.813, -11.9965, 0.28", "46.9938, -94.183, -11.7108, 1.38", "48.6292, -97.1796, -11.3787, 0.28", "49.1263, -98.1201, -11.3476, 0.55", "50.0412, -99.8659, -11.4064, 0.28", "50.8934, -101.517, -11.6221, 0.28", "51.9374, -103.586, -12.0253, 1.11", "53.964, -107.788, -12.7272, 0.28", "55.2406, -110.516, -13.1403, 0.28", "55.7254, -111.611, -13.2064, 0.83", "57.2048, -114.978, -13.4392, 0.28", "57.7984, -116.352, -13.4974, 0.55", "59.3211, -119.764, -13.4276, 0.28", "59.556, -120.313, -13.3672, 0.83", "61.1528, -124.125, -13.0444, 0.28", "62.965, -128.274, -12.7433, 0.55", "63.4516, -129.471, -12.5089, 0.28", "63.7039, -130.054, -12.3701, 0.55", "64.2758, -131.342, -12.014, 0.55", "64.9244, -132.776, -11.5293, 0.55", "65.8757, -134.776, -10.7013, 0.55", "67.6604, -138.679, -8.72874, 0.28", "68.6153, -140.657, -7.72804, 0.28", "68.8763, -141.178, -7.45744, 0.83", "69.9161, -143.036, -6.42945, 0.28", "70.4311, -143.838, -5.97472, 0.55", "71.8502, -145.963, -5.01397, 0.28", "72.0229, -146.187, -4.97499, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "65.5762, 23.7792, 45.729, 0.55", "74.4585, 28.9802, 52.6198, 0.55", "82.322, 33.969, 60.7876, 0.55", "90.4986, 37.5029, 69.4356, 0.55", "97.5961, 39.19, 79.5081, 0.55", "106.574, 40.3314, 88.0495, 0.55", "115.564, 43.0422, 96.1919, 0.55", "123.436, 46.9212, 104.965, 0.55", "131.213, 51.5436, 113.436, 0.55", "140.086, 56.4776, 120.541, 0.55", "149.126, 62.4014, 126.562, 0.55", "157.135, 67.3516, 134.614, 0.55", "164.438, 73.587, 142.388, 0.55", "170.014, 80.2141, 151.175, 0.55", "175.601, 85.9935, 160.565, 0.55", "180.128, 90.9096, 170.984, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "65.5762, 23.7792, 45.729, 0.55", "74.0762, 27.535, 54.9339, 0.55", "81.107, 31.9516, 65.0275, 0.55", "87.798, 38.0948, 74.3738, 0.55", "95.4344, 45.0103, 82.3212, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "22.6231, -37.6438, 6.52666, 0.55", "23.3779, -38.8195, 6.23514, 0.55", "23.7656, -39.4361, 6.06779, 0.55", "24.7472, -41.0503, 5.62804, 0.55", "26.3589, -43.596, 4.89912, 0.55", "27.15, -44.8019, 4.55313, 0.55", "28.1887, -46.4384, 4.10685, 0.28", "28.7177, -47.3141, 3.88786, 0.83", "29.3176, -48.2662, 3.67243, 0.83", "30.4268, -49.9766, 3.27499, 0.55", "31.3854, -51.4695, 2.94214, 0.55", "32.3117, -52.9788, 2.66409, 0.55", "32.9271, -53.9822, 2.54989, 0.28", "33.4147, -54.7417, 2.46802, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "22.6231, -37.6438, 6.52666, 0.55", "22.6927, -39.5526, 6.49361, 0.55", "22.8192, -41.2734, 6.46756, 0.55", "22.9928, -43.0812, 6.93587, 0.55", "23.1588, -44.5424, 7.48091, 0.55", "23.3286, -46.1102, 8.19204, 0.28", "23.435, -47.236, 8.74006, 0.55", "23.5326, -47.9858, 9.19427, 0.55", "24.0895, -52.5459, 12.2714, 0.28", "24.1072, -52.8364, 12.4717, 0.55", "24.1085, -54.0076, 13.2167, 0.28", "24.1202, -54.6849, 13.5839, 0.55", "24.1061, -56.2452, 14.3783, 0.28", "24.041, -57.6041, 14.9173, 0.28", "23.9264, -59.2432, 15.118, 0.55", "23.7993, -60.9556, 15.2784, 0.55", "23.6951, -62.6743, 15.3289, 0.55", "24.6787, -70.8409, 18.6632, 0.55", "26.0821, -79.1888, 21.2977, 0.55", "28.4689, -87.6067, 22.6899, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "77.3221, 25.5733, 62.5525, 0.55", "82.5796, 25.6117, 70.7625, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "77.3221, 25.5733, 62.5525, 0.55", "83.3869, 32.975, 68.2632, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "61.6962, 13.2634, 41.8273, 0.55", "67.3513, 13.4413, 52.1941, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "61.6962, 13.2634, 41.8273, 0.55", "65.9001, 14.6417, 50.1747, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "3.88308, -37.295, -2.27388, 0.83", "5.43778, -38.7706, -2.73203, 0.83", "7.34887, -40.5927, -3.20383, 0.83", "8.25372, -41.495, -3.45324, 0.28", "9.5058, -42.8944, -3.82975, 0.55", "10.2951, -43.8276, -4.07591, 0.83", "11.1989, -44.9306, -4.38255, 0.28", "11.6738, -45.5514, -4.52653, 0.55", "12.7878, -47.0448, -4.79532, 0.28", "13.6668, -48.3187, -5.01873, 1.11", "14.351, -49.4001, -5.24012, 1.11", "15.295, -50.9113, -5.59307, 0.28", "16.0652, -52.1126, -5.93602, 0.83", "16.869, -53.3563, -6.28238, 0.28", "17.1917, -53.8268, -6.40536, 0.55", "18.3253, -55.4477, -6.78624, 0.28", "18.8752, -56.2497, -6.95359, 0.55", "21.0722, -59.5054, -7.56637, 0.83", "22.5105, -61.6352, -7.94166, 0.28", "23.5982, -63.1964, -8.17008, 0.55", "24.3754, -64.2964, -8.29482, 0.28", "25.3661, -65.7034, -8.36652, 0.55", "25.7703, -66.2844, -8.3735, 0.55", "26.3686, -67.1306, -8.33644, 0.28", "26.8239, -67.7912, -8.31221, 0.55", "27.8811, -69.4655, -8.35334, 0.28", "28.8636, -71.0983, -8.49957, 0.55", "29.3368, -71.9762, -8.58479, 0.28", "29.6164, -72.5326, -8.64108, 0.83", "30.1357, -73.7367, -8.80247, 0.83", "30.6746, -75.307, -9.02626, 0.28", "30.7507, -75.5928, -9.06909, 0.55", "31.0544, -77.016, -9.32033, 0.28", "31.1621, -77.5532, -9.40587, 0.55", "31.5276, -79.2187, -9.64522, 0.28", "31.8661, -80.4826, -9.79927, 0.55", "32.176, -81.5266, -9.95198, 0.28", "32.7596, -83.282, -10.2399, 1.38", "33.4107, -85.0418, -10.4617, 0.28", "33.6364, -85.6211, -10.5154, 0.55", "34.3128, -87.3113, -10.6111, 0.55", "35.4297, -90.0757, -10.7219, 0.55", "36.2201, -92.0347, -10.8289, 0.55", "37.5962, -95.4379, -11.0433, 0.28", "38.1212, -96.7176, -11.0769, 1.11", "38.6435, -97.9749, -11.065, 0.28", "38.9239, -98.6042, -11.0312, 0.83", "39.7151, -100.202, -10.8278, 0.28", "39.816, -100.391, -10.8073, 0.55", "41.3302, -102.933, -10.685, 0.28", "41.5767, -103.296, -10.6579, 0.83", "42.2706, -104.27, -10.5909, 0.28", "42.5124, -104.628, -10.5822, 0.83", "43.023, -105.397, -10.5461, 0.28", "44.0047, -106.895, -10.5304, 0.83", "46.1269, -110.106, -10.6633, 0.28", "47.0747, -111.54, -10.7636, 0.83", "48.1957, -113.223, -10.9181, 0.28", "49.2338, -114.695, -11.0893, 0.55", "49.9123, -115.593, -11.1895, 0.28", "51.275, -117.316, -11.3632, 1.11", "52.4181, -118.708, -11.5039, 0.28", "53.1758, -119.52, -11.5841, 0.55", "54.3304, -120.637, -11.7265, 0.55", "55.4778, -121.685, -11.9154, 0.55", "56.5216, -122.581, -12.0963, 0.28", "56.6882, -122.718, -12.1247, 0.83", "59.1481, -124.637, -12.5286, 0.28", "60.4774, -125.643, -12.8211, 0.55", "62.1395, -126.865, -13.2746, 0.28", "63.5085, -127.863, -13.7117, 0.83", "64.8019, -128.784, -14.1446, 0.28", "65.3427, -129.175, -14.3239, 0.55", "67.4548, -130.739, -14.9972, 0.28", "68.5923, -131.534, -15.3384, 1.11", "73.2508, -137.841, -16.9307, 1.11", "76.9446, -144.866, -17.6626, 1.11", "80.8541, -151.818, -17.6473, 1.11", "84.9953, -158.64, -17.7801, 1.11", "89.0057, -165.499, -17.0168, 1.11", "94.179, -171.475, -15.6568, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "3.88308, -37.295, -2.27388, 0.28", "3.8128, -38.5784, -2.14131, 0.28", "3.78367, -39.5252, -2.05567, 0.83", "3.76455, -40.7444, -2.04331, 0.28", "3.71289, -42.3758, -2.09568, 0.83", "3.54398, -44.6905, -2.30561, 0.55", "3.4458, -45.6611, -2.41748, 0.28", "3.35226, -46.8763, -2.51798, 0.83", "3.18859, -48.9596, -2.68211, 0.28", "3.0248, -51.1063, -2.65271, 0.83", "2.78716, -53.7966, -2.37671, 0.28", "2.69295, -54.7422, -2.2562, 0.83", "2.4311, -57.704, -1.82157, 0.28", "2.23082, -60.175, -1.34877, 0.83", "1.94498, -64.342, -0.255243, 0.28", "1.88541, -65.8902, 0.24495, 0.83", "1.87025, -68.3105, 1.20773, 0.28", "1.85785, -69.4821, 1.67172, 0.55", "-0.689158, -80.1878, 1.29792, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-73.1638, -40.4883, -36.5825, 0.28", "-79.73, -38.5115, -41.3268, 0.28", "-80.9057, -38.1575, -42.1762, 0.55", "-84.7728, -36.9933, -44.9704, 0.28", "-87.1933, -36.2646, -46.7193, 0.55", "-88.63, -35.8321, -47.7573, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-73.1638, -40.4883, -36.5825, 0.28", "-73.9171, -41.7708, -37.1361, 0.28", "-74.5336, -42.4297, -37.1935, 0.55", "-76.1722, -43.8858, -36.9578, 0.28", "-76.8455, -44.5201, -36.9916, 0.55", "-78.431, -46.0766, -37.1767, 0.28", "-78.9783, -46.6139, -37.2406, 0.55", "-80.4857, -47.8966, -37.2588, 0.28", "-81.3923, -48.587, -37.1898, 0.83", "-83.987, -50.3725, -36.7614, 0.28", "-84.6202, -50.8895, -36.7586, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-56.3664, -28.2094, -5.69814, 0.28", "-57.6275, -26.6032, -4.9226, 0.28", "-58.1619, -25.9253, -4.75564, 0.55", "-59.2968, -24.5619, -4.59639, 0.28", "-59.9338, -23.839, -4.51124, 0.83", "-61.5329, -22.057, -4.28531, 0.28", "-61.8837, -21.6655, -4.236, 0.55", "-64.0331, -19.4006, -3.92288, 0.28", "-64.8719, -18.5342, -3.84956, 0.55", "-65.9084, -17.4236, -3.83831, 0.28", "-66.5933, -16.6877, -3.86602, 0.55", "-66.9961, -16.228, -3.93263, 0.28", "-67.7911, -15.3328, -3.97968, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-56.3664, -28.2094, -5.69814, 0.55", "-58.987, -27.1062, -5.35973, 0.55", "-60.0245, -26.7934, -5.23831, 0.55", "-61.6073, -26.4805, -5.1709, 0.83", "-64.1151, -26.169, -5.16166, 0.28", "-64.9611, -26.1352, -5.20804, 0.55", "-66.3201, -26.1341, -5.32333, 0.55", "-68.0668, -26.3966, -5.45889, 0.83", "-70.3316, -26.9105, -5.70353, 0.28", "-71.031, -27.1174, -5.80445, 0.55", "-72.7811, -27.7512, -6.14552, 0.28", "-73.1278, -27.8697, -6.21155, 0.55", "-75.6292, -28.7746, -6.66035, 0.28", "-77.1488, -29.218, -6.8508, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-47.7318, 14.7197, 16.6998, 0.83", "-50.2929, 18.2955, 18.7882, 0.83", "-51.7115, 20.1034, 19.6834, 0.55", "-52.3094, 20.8523, 20.0347, 0.55", "-54.1813, 23.2789, 21.1429, 0.83", "-55.6971, 25.3796, 22.0677, 0.55", "-56.65, 26.7741, 22.7183, 0.55", "-58.2251, 29.5035, 23.9186, 0.55", "-58.6726, 30.2805, 24.282, 0.83", "-59.9115, 32.5408, 25.3184, 0.28", "-60.64, 34.0332, 26.0096, 0.83", "-61.4373, 35.9509, 26.9268, 0.28", "-61.9206, 37.4918, 27.6842, 0.83", "-66.373, 45.5937, 33.0092, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-47.7318, 14.7197, 16.6998, 0.55", "-49.2421, 13.7874, 16.9925, 0.55", "-52.8571, 11.5555, 17.6932, 0.55", "-60.6205, 7.19782, 19.0851, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-31.9991, -18.9383, -4.27247, 0.83", "-34.7256, -20.3219, -3.2754, 0.83", "-36.7127, -21.0817, -2.43354, 0.83", "-38.6241, -21.7689, -1.59229, 0.55", "-40.3396, -22.3771, -0.83365, 0.55", "-42.5016, -23.1386, 0.206648, 0.55", "-44.4926, -23.8343, 1.1977, 0.83", "-47.3939, -24.8143, 2.64578, 0.83", "-48.7852, -25.2229, 3.29808, 0.55", "-49.6764, -25.4465, 3.67768, 0.83", "-52.7152, -26.1687, 4.89976, 0.28", "-53.9068, -26.4304, 5.20973, 0.83", "-54.8833, -26.6514, 5.35038, 0.83", "-57.574, -27.2414, 5.46036, 0.28", "-58.5517, -27.435, 5.44653, 0.83", "-59.7942, -27.6906, 5.37301, 0.83", "-63.6351, -28.6215, 4.98439, 0.55", "-66.291, -29.4036, 4.75512, 0.28", "-67.4582, -29.8398, 4.58613, 0.83", "-69.2104, -30.7341, 4.23635, 0.28", "-70.4739, -31.6165, 3.84311, 0.55", "-71.4803, -32.5973, 3.3924, 0.28", "-71.9865, -33.2618, 3.09587, 0.55", "-74.0899, -36.5137, 1.41209, 0.28", "-74.9768, -38.0827, 0.590701, 0.28", "-76.0183, -40.2439, -0.498413, 0.83", "-76.6953, -41.7907, -1.2543, 0.28", "-76.9448, -42.3819, -1.52551, 0.83", "-77.4238, -43.593, -1.95753, 0.28", "-77.7827, -44.6027, -2.18755, 0.55", "-78.2577, -45.8708, -2.46405, 0.28", "-78.6808, -46.8813, -2.64746, 0.83", "-79.4872, -48.5223, -2.86035, 0.28", "-79.9888, -49.5048, -3.01488, 0.55", "-80.7701, -50.9697, -3.26467, 0.28", "-81.1786, -51.7075, -3.39569, 0.55", "-82.4105, -53.8194, -3.78422, 0.28", "-84.1953, -56.4237, -4.42684, 0.55", "-85.6188, -58.1906, -4.94978, 0.28", "-86.2112, -58.8006, -5.15088, 0.83", "-87.1292, -59.5798, -5.40158, 0.28", "-87.9985, -60.2413, -5.64575, 0.83", "-91.1562, -62.1782, -6.5729, 0.28", "-91.7103, -62.4405, -6.73117, 0.83", "-93.7525, -63.1872, -7.13683, 0.28", "-94.6532, -63.4497, -7.31247, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-31.9991, -18.9383, -4.27247, 0.55", "-31.6075, -19.9315, -4.78438, 0.55", "-30.9583, -21.605, -5.63452, 0.55", "-30.6297, -22.582, -6.07007, 1.11", "-30.3758, -23.5168, -6.61053, 0.55", "-30.1227, -24.6208, -7.31735, 0.55", "-29.9391, -25.5983, -7.98003, 0.55", "-29.836, -26.3876, -8.55822, 0.28", "-29.8063, -27.7072, -9.57133, 1.11", "-29.8094, -29.9553, -11.3769, 0.28", "-29.8537, -30.8276, -12.0616, 0.28", "-29.8906, -31.2236, -12.3663, 0.55", "-29.9771, -31.807, -12.792, 0.28", "-30.0864, -32.5698, -13.349, 0.28", "-30.2106, -33.3655, -13.8943, 0.55", "-30.3782, -34.5783, -14.5771, 0.28", "-30.5029, -35.4277, -15.0732, 0.55", "-30.6572, -36.5552, -15.7454, 0.28", "-30.8723, -37.8667, -16.5741, 0.28", "-31.0496, -38.7146, -17.1133, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "13.9239, -52.989, -0.100213, 0.55", "12.0853, -56.0523, -0.211597, 0.55", "10.8496, -58.2378, -0.271276, 0.55", "10.178, -59.4055, -0.303754, 0.28", "9.12836, -61.258, -0.35387, 0.55", "8.4285, -62.5018, -0.384459, 0.28", "7.73691, -63.7468, -0.413669, 0.55", "6.99419, -65.1547, -0.41942, 0.55", "6.37637, -66.4251, -0.380296, 0.28", "6.19063, -66.9228, -0.34998, 0.55", "5.99203, -67.6323, -0.299419, 0.28", "5.8055, -68.5702, -0.231992, 0.55", "5.64223, -69.7595, -0.126255, 0.28", "5.46157, -71.0436, 0.0238949, 0.55", "5.36765, -71.8161, 0.12952, 0.28", "5.27552, -72.5994, 0.222793, 0.83", "5.12014, -74.082, 0.375157, 0.28", "5.08385, -74.5997, 0.401376, 0.55", "5.02703, -76.0199, 0.399631, 0.28", "5.01934, -76.2961, 0.392898, 0.83", "4.98643, -77.9224, 0.329156, 0.28", "4.97701, -78.7583, 0.302085, 0.83", "5.02185, -80.9264, 0.0425359, 0.28", "4.96934, -82.7524, -0.228016, 0.28", "4.86139, -84.145, -0.457281, 0.55", "4.60944, -86.0851, -0.77685, 0.55", "4.23457, -88.0071, -1.02214, 1.11", "3.27494, -91.8297, -1.42499, 0.28", "2.39048, -94.6466, -1.64653, 0.83", "1.67099, -96.5553, -1.83856, 0.28", "1.23655, -97.589, -1.98556, 0.55", "0.20067, -100.007, -2.31259, 0.28", "-0.0032489, -100.476, -2.36017, 0.28", "-0.431166, -101.569, -2.38553, 0.55", "-1.08709, -103.966, -2.34458, 0.28", "-1.47657, -106.041, -2.2027, 0.83", "-1.84027, -109.429, -1.78249, 0.28", "-1.86988, -110.31, -1.63926, 0.83", "-1.83027, -112.357, -1.13269, 0.83", "-1.72439, -114.734, -0.363151, 0.28", "-1.64023, -115.949, 0.105905, 0.83", "-1.52704, -117.521, 0.732596, 0.28", "-1.46536, -118.519, 1.07998, 0.55", "-1.33183, -120.761, 1.7573, 0.28", "-1.25545, -121.693, 1.97747, 0.55", "-1.07357, -123.507, 2.26879, 0.83", "-0.965546, -124.272, 2.39, 0.83", "-0.667216, -125.891, 2.6222, 0.28", "-0.396462, -126.934, 2.69645, 0.55", "0.585055, -129.7, 2.67401, 0.28", "0.694869, -129.94, 2.65577, 0.55", "1.68254, -131.749, 2.3761, 0.28", "1.94534, -132.188, 2.28468, 0.55", "3.43124, -134.35, 1.62039, 0.28", "3.63961, -134.624, 1.50819, 0.55", "4.51573, -135.566, 0.942459, 0.28", "4.68109, -135.747, 0.813564, 0.55", "5.2404, -144.951, 2.82447, 0.55", "4.59043, -154.126, 5.01273, 0.55", "4.16924, -163.559, 5.00959, 0.55", "2.4375, -172.727, 6.62419, 0.55", "2.20643, -181.977, 8.52413, 0.55", "2.84829, -191.009, 11.2048, 0.55", "1.74714, -199.648, 14.9545, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "13.9239, -52.989, -0.100213, 0.55", "14.7619, -55.1494, -0.00397106, 0.55", "15.4833, -57.0411, 0.0756519, 0.55", "16.265, -59.1909, 0.167307, 0.28", "16.5323, -59.9858, 0.202395, 0.55", "17.42, -63.2104, 0.361758, 0.55", "17.9777, -65.5196, 0.481172, 0.28", "18.5503, -68.0565, 0.651825, 0.28", "18.7192, -68.8654, 0.759893, 0.55", "19.1603, -71.0804, 1.16427, 0.55", "19.8783, -74.9293, 2.03166, 0.55", "20.4127, -77.7872, 2.77912, 0.55", "20.738, -79.1748, 3.15666, 0.55", "21.8691, -83.395, 4.23753, 0.28", "22.1905, -84.5051, 4.5128, 0.83", "22.9537, -86.9399, 5.10101, 0.55", "23.7028, -89.0473, 5.55102, 0.55", "24.9407, -92.518, 6.15397, 0.55", "25.7961, -94.9805, 6.47869, 0.83", "26.4328, -96.7443, 6.62499, 0.28", "26.6902, -97.4481, 6.69559, 0.55", "27.5873, -99.7665, 7.08667, 0.28", "27.6195, -99.8531, 7.10705, 0.55", "28.5614, -102.266, 8.25004, 0.28", "29.0758, -103.523, 9.01334, 0.83", "29.4428, -104.473, 9.63757, 0.83", "30.5534, -107.812, 11.7578, 0.28", "30.8224, -108.704, 12.2949, 0.55", "32.5055, -114.339, 15.4119, 0.28", "33.176, -116.498, 16.5171, 0.28", "33.5005, -117.517, 16.9908, 0.83", "34.454, -120.665, 18.2235, 0.28", "35.1262, -122.833, 18.8558, 0.28", "35.5328, -123.94, 19.0834, 0.55", "36.6635, -126.632, 19.2151, 0.55", "37.3308, -127.974, 19.2756, 0.55", "38.1779, -129.7, 19.3626, 0.28", "38.7049, -130.761, 19.5013, 0.28", "39.2135, -131.812, 19.6921, 0.55", "40.7905, -135.179, 20.3931, 0.28", "41.6675, -137.209, 20.847, 0.83", "42.5734, -139.516, 21.2286, 0.83", "43.503, -142.173, 21.5403, 0.55", "44.3357, -144.903, 21.8321, 0.28", "44.7517, -146.351, 21.9643, 0.28", "45.0432, -147.354, 22.0773, 0.55", "46.1602, -151.085, 22.4814, 0.28", "46.4871, -152.17, 22.5739, 0.55", "47.2207, -154.846, 22.733, 0.28", "47.6898, -156.7, 22.9023, 0.83", "48.5701, -159.983, 23.3038, 0.28", "48.7711, -160.69, 23.4139, 0.55", "49.7918, -164.206, 24.2154, 0.28", "50.0923, -165.276, 24.445, 0.55", "50.6273, -167.049, 24.861, 0.55", "51.0795, -168.471, 25.295, 0.28", "51.3252, -169.139, 25.511, 0.55", "52.3179, -171.483, 26.3735, 0.28", "52.6106, -172.111, 26.651, 0.55", "54.381, -175.667, 28.3726, 0.28", "54.9854, -176.783, 28.9705, 0.55", "56.164, -178.894, 30.1757, 0.28", "56.6654, -179.743, 30.6622, 0.55", "58.5981, -193.087, 31.4391, 0.55", "62.0944, -206.126, 31.4314, 0.55", "62.7554, -219.57, 30.1503, 0.55", "65.0201, -232.616, 27.4082, 0.55", "67.8318, -245.821, 27.2391, 0.55", "72.2766, -258.524, 28.3262, 0.55", "78.3456, -270.598, 28.2598, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "95.4344, 45.0103, 82.3212, 0.55", "101.708, 50.3887, 89.8495, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "95.4344, 45.0103, 82.3212, 0.55", "102.137, 49.6247, 90.946, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "33.4147, -54.7417, 2.46802, 0.55", "34.6369, -55.3095, 3.9264, 0.55", "36.5761, -56.3682, 6.04735, 0.55", "37.3134, -56.8212, 6.72962, 0.55", "46.2274, -62.9262, 14.1188, 0.28", "47.1488, -63.672, 14.7826, 0.83", "49.6736, -66.0258, 16.4179, 0.28", "50.9088, -67.4693, 17.1416, 0.28", "52.6468, -70.3181, 17.6795, 0.28", "53.1125, -71.2929, 17.5659, 0.55", "53.9452, -73.9259, 16.4987, 0.28", "54.2182, -74.8083, 16.2152, 0.28", "54.7194, -76.246, 15.9877, 0.55", "55.3619, -78.0599, 15.8158, 0.55", "56.5538, -81.3019, 15.9981, 0.55", "63.4045, -89.5147, 18.3395, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "33.4147, -54.7417, 2.46802, 0.55", "34.6334, -57.5119, 2.69948, 0.55", "35.7246, -60.0588, 2.90744, 0.55", "36.5533, -62.0429, 3.04997, 0.55", "37.6094, -64.5531, 3.20709, 0.28", "38.4783, -66.5544, 3.29003, 0.55", "39.7741, -69.3799, 3.3459, 0.55", "40.5266, -70.8348, 3.35578, 0.28", "41.1601, -72.026, 3.35766, 0.28", "41.5152, -72.6092, 3.35486, 0.28", "42.5873, -74.259, 3.31132, 0.55", "43.6217, -75.6869, 3.17897, 0.55", "45.0695, -77.555, 2.89085, 0.28", "45.5021, -78.0855, 2.80115, 0.55", "47.3158, -80.2579, 2.43753, 0.28", "48.0455, -81.1547, 2.28963, 0.55", "49.8802, -83.4721, 1.89018, 0.28", "50.2653, -83.9995, 1.73701, 0.55", "56.6776, -92.8241, 2.3265, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "28.4689, -87.6067, 22.6899, 0.55", "29.59, -96.3056, 25.6974, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "28.4689, -87.6067, 22.6899, 0.55", "29.4823, -97.6048, 24.872, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_71", "dend_68", "dend_57", "dend_56", "dend_43", "dend_30", "dend_27", "dend_0", "dend_70", "dend_69", "dend_67", "dend_58", "dend_51", "dend_44", "dend_32", "dend_31", "dend_29", "dend_28", "dend_14", "dend_1", "dend_66", "dend_59", "dend_53", "dend_52", "dend_50", "dend_45", "dend_40", "dend_33", "dend_20", "dend_15", "dend_9", "dend_2", "dend_63", "dend_60", "dend_55", "dend_54", "dend_47", "dend_46", "dend_42", "dend_41", "dend_37", "dend_34", "dend_24", "dend_21", "dend_17", "dend_16", "dend_13", "dend_10", "dend_6", "dend_3", "dend_65", "dend_64", "dend_62", "dend_61", "dend_49", "dend_48", "dend_39", "dend_38", "dend_36", "dend_35", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_71", "dend_68", "dend_57", "dend_56", "dend_43", "dend_30", "dend_27", "dend_0", "dend_70", "dend_69", "dend_67", "dend_58", "dend_51", "dend_44", "dend_32", "dend_31", "dend_29", "dend_28", "dend_14", "dend_1", "dend_66", "dend_59", "dend_53", "dend_52", "dend_50", "dend_45", "dend_40", "dend_33", "dend_20", "dend_15", "dend_9", "dend_2", "dend_63", "dend_60", "dend_55", "dend_54", "dend_47", "dend_46", "dend_42", "dend_41", "dend_37", "dend_34", "dend_24", "dend_21", "dend_17", "dend_16", "dend_13", "dend_10", "dend_6", "dend_3", "dend_65", "dend_64", "dend_62", "dend_61", "dend_49", "dend_48", "dend_39", "dend_38", "dend_36", "dend_35", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_43", "dend_43", "dend_43", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "axon_0", "axon_0", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_51", "dend_51", "dend_51", "dend_44", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_65", "dend_64", "dend_62", "dend_61", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_4" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_LBC_c5ee2b20c2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_71, id: dend_71, parent: soma_0
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: soma_0
create dend_68
public dend_68
// Section: dend_57, id: dend_57, parent: soma_0
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_67, id: dend_67, parent: dend_57
create dend_67
public dend_67
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_51, id: dend_51, parent: dend_43
create dend_51
public dend_51
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_58
create dend_66
public dend_66
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_44
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_63, id: dend_63, parent: dend_59
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_38
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_43, dend_43, dend_43, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, axon_0, axon_0, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_44, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_4]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_71(0), soma_0(0.4999999896865996)
    connect dend_68(0), soma_0(0.4999999896865996)
    connect dend_57(0), soma_0(0.4999999896865996)
    connect dend_56(0), soma_0(0.4999999896865996)
    connect dend_43(0), soma_0(0.4999999896865996)
    connect dend_30(0), soma_0(0.4999999896865996)
    connect dend_27(0), soma_0(0.4999999896865996)
    connect dend_0(0), soma_0(0.4999999896865996)
    connect axon_0(0), soma_0(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_67(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_51(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_63(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.94076, -9.8712, -1.65398, 2.77643 ) }
    soma_0 { pt3dadd( -2.68752, -8.89837, -1.49144, 3.78775 ) }
    soma_0 { pt3dadd( -2.43427, -7.92553, -1.32889, 4.91862 ) }
    soma_0 { pt3dadd( -2.18103, -6.95269, -1.16635, 5.95702 ) }
    soma_0 { pt3dadd( -1.92778, -5.97986, -1.00381, 6.99541 ) }
    soma_0 { pt3dadd( -1.67453, -5.00702, -0.841265, 8.01733 ) }
    soma_0 { pt3dadd( -1.42129, -4.03418, -0.678723, 8.72435 ) }
    soma_0 { pt3dadd( -1.16804, -3.06135, -0.516181, 9.35315 ) }
    soma_0 { pt3dadd( -0.914798, -2.08851, -0.353638, 9.98195 ) }
    soma_0 { pt3dadd( -0.661552, -1.11567, -0.191096, 10.5 ) }
    soma_0 { pt3dadd( -0.408307, -0.142835, -0.0285532, 10.7936 ) }
    soma_0 { pt3dadd( -0.155061, 0.830002, 0.133989, 11.1592 ) }
    soma_0 { pt3dadd( 0.0981843, 1.80284, 0.296532, 11.5247 ) }
    soma_0 { pt3dadd( 0.35143, 2.77568, 0.459074, 11.423 ) }
    soma_0 { pt3dadd( 0.604675, 3.74851, 0.621617, 11.7952 ) }
    soma_0 { pt3dadd( 0.857921, 4.72135, 0.784159, 12.2515 ) }
    soma_0 { pt3dadd( 1.11117, 5.69419, 0.946702, 11.9034 ) }
    soma_0 { pt3dadd( 1.36441, 6.66702, 1.10924, 10.4337 ) }
    soma_0 { pt3dadd( 1.61766, 7.63986, 1.27179, 8.34249 ) }
    soma_0 { pt3dadd( 1.8709, 8.6127, 1.43433, 5.63558 ) }
    soma_0 { pt3dadd( 2.12415, 9.58553, 1.59687, 3.26719 ) }
    // Section: dend_71, id: dend_71, parent: soma_0 (entry count 21/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 0.931045, 6.68854, 20.757, 0.83 ) }
    dend_71 { pt3dadd( 0.927805, 9.56083, 20.7613, 0.83 ) }
    dend_71 { pt3dadd( 1.03973, 12.0941, 20.7639, 0.83 ) }
    dend_71 { pt3dadd( 1.19513, 14.0005, 20.7652, 1.11 ) }
    dend_71 { pt3dadd( 1.37302, 15.7498, 20.766, 0.83 ) }
    dend_71 { pt3dadd( 1.60596, 17.9447, 20.7669, 0.83 ) }
    dend_71 { pt3dadd( 1.76822, 19.1855, 20.7671, 0.83 ) }
    dend_71 { pt3dadd( 1.97048, 20.1442, 20.8031, 0.83 ) }
    dend_71 { pt3dadd( 2.14625, 20.9911, 20.9023, 1.11 ) }
    dend_71 { pt3dadd( 2.3944, 22.111, 21.1053, 0.83 ) }
    dend_71 { pt3dadd( 2.56635, 22.885, 21.2789, 1.11 ) }
    dend_71 { pt3dadd( 2.79598, 24.1983, 21.6063, 0.83 ) }
    dend_71 { pt3dadd( 3.15236, 25.9877, 22.042, 1.11 ) }
    dend_71 { pt3dadd( 3.54282, 27.9579, 22.4955, 0.83 ) }
    dend_71 { pt3dadd( 3.83596, 29.4743, 22.8028, 0.55 ) }
    dend_71 { pt3dadd( 4.12407, 30.9487, 23.0371, 0.55 ) }
    dend_71 { pt3dadd( 4.28765, 31.9315, 23.1487, 0.83 ) }
    dend_71 { pt3dadd( 4.57384, 34.1841, 23.3043, 0.83 ) }
    dend_71 { pt3dadd( 4.75336, 35.5736, 23.3314, 0.83 ) }
    dend_71 { pt3dadd( 4.97518, 37.5596, 23.3255, 0.55 ) }
    dend_71 { pt3dadd( 5.28841, 40.5333, 23.3163, 1.11 ) }
    dend_71 { pt3dadd( 5.44225, 42.5591, 23.4252, 0.83 ) }
    dend_71 { pt3dadd( 5.50487, 43.9279, 23.5615, 1.11 ) }
    dend_71 { pt3dadd( 5.54378, 46.2618, 23.8908, 0.55 ) }
    dend_71 { pt3dadd( 5.55433, 47.289, 24.0877, 0.55 ) }
    dend_71 { pt3dadd( 5.46071, 50.0065, 24.7456, 0.55 ) }
    dend_71 { pt3dadd( 5.26561, 52.9271, 25.6365, 0.83 ) }
    dend_71 { pt3dadd( 5.14388, 54.2638, 26.1184, 0.55 ) }
    dend_71 { pt3dadd( 5.06996, 55.1706, 26.4699, 0.83 ) }
    dend_71 { pt3dadd( 4.95761, 56.452, 26.9841, 0.83 ) }
    dend_71 { pt3dadd( 4.84739, 58.1842, 27.6435, 0.83 ) }
    dend_71 { pt3dadd( 4.74707, 61.1723, 28.7082, 1.11 ) }
    dend_71 { pt3dadd( 4.76909, 63.248, 29.3388, 0.55 ) }
    dend_71 { pt3dadd( 4.87626, 65.901, 30.1568, 0.83 ) }
    dend_71 { pt3dadd( 4.96821, 67.0733, 30.5051, 0.55 ) }
    dend_71 { pt3dadd( 5.14911, 68.7679, 30.9898, 0.83 ) }
    dend_71 { pt3dadd( 5.3359, 70.0298, 31.3485, 0.28 ) }
    dend_71 { pt3dadd( 5.50449, 70.9645, 31.5714, 0.55 ) }
    dend_71 { pt3dadd( 5.68517, 71.7903, 31.7254, 0.28 ) }
    dend_71 { pt3dadd( 5.99404, 73.6935, 32.0533, 0.83 ) }
    dend_71 { pt3dadd( 6.5538, 80.5842, 33.4371, 0.83 ) }
    dend_71 { pt3dadd( 5.83491, 87.0601, 36.1785, 0.83 ) }
    dend_71 { pt3dadd( 5.062, 93.0251, 39.936, 0.83 ) }
    dend_71 { pt3dadd( 3.95672, 99.3664, 42.8712, 0.83 ) }
    dend_71 { pt3dadd( 3.18692, 105.744, 45.8302, 0.83 ) }
    dend_71 { pt3dadd( 2.78206, 112.458, 47.9686, 0.83 ) }
    dend_71 { pt3dadd( 1.50888, 119.327, 48.9092, 0.83 ) }
    dend_71 { pt3dadd( 1.05301, 126.354, 48.9112, 0.83 ) }
    dend_71 { pt3dadd( 0.0475301, 133.286, 48.1458, 0.83 ) }
    dend_71 { pt3dadd( -0.973761, 140.219, 47.4134, 0.83 ) }
    dend_71 { pt3dadd( -2.37679, 147.006, 46.1062, 0.83 ) }
    dend_71 { pt3dadd( -4.33733, 153.702, 45.0485, 0.83 ) }
    dend_71 { pt3dadd( -5.65577, 160.613, 44.6554, 0.83 ) }
    // Section: dend_68, id: dend_68, parent: soma_0 (entry count 74/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 1.84105, 8.07304, 11.867, 1.38 ) }
    dend_68 { pt3dadd( 2.85126, 9.34643, 12.2299, 1.38 ) }
    dend_68 { pt3dadd( 3.80369, 10.5469, 12.572, 1.38 ) }
    dend_68 { pt3dadd( 5.38144, 12.5356, 13.1388, 1.11 ) }
    dend_68 { pt3dadd( 6.69351, 14.1894, 13.6101, 1.11 ) }
    dend_68 { pt3dadd( 9.40396, 17.6059, 14.5838, 0.83 ) }
    dend_68 { pt3dadd( 12.2815, 21.233, 15.6175, 1.11 ) }
    // Section: dend_57, id: dend_57, parent: soma_0 (entry count 81/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 5.61104, 3.90004, -0.263001, 2.77 ) }
    dend_57 { pt3dadd( 6.90264, 4.50418, -0.405935, 2.77 ) }
    dend_57 { pt3dadd( 10.7346, 6.29661, -0.830006, 1.66 ) }
    dend_57 { pt3dadd( 16.8411, 9.15293, -1.50579, 1.66 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 85/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 3.58105, 6.73729, -5.263, 0.83 ) }
    dend_56 { pt3dadd( 4.9501, 7.88428, -5.30963, 0.83 ) }
    dend_56 { pt3dadd( 6.62684, 9.55873, -5.226, 0.83 ) }
    dend_56 { pt3dadd( 9.16354, 12.3663, -5.5612, 0.83 ) }
    dend_56 { pt3dadd( 11.2517, 14.7129, -6.16387, 0.83 ) }
    dend_56 { pt3dadd( 12.8335, 16.4031, -6.68965, 0.83 ) }
    dend_56 { pt3dadd( 14.9759, 18.5925, -7.43695, 0.83 ) }
    dend_56 { pt3dadd( 16.5394, 20.2405, -8.03148, 0.83 ) }
    dend_56 { pt3dadd( 20.3948, 24.7458, -9.70131, 1.11 ) }
    dend_56 { pt3dadd( 21.9095, 26.7029, -10.3897, 0.55 ) }
    dend_56 { pt3dadd( 23.0567, 28.2338, -10.8686, 0.55 ) }
    dend_56 { pt3dadd( 24.1087, 29.6308, -11.2293, 0.55 ) }
    dend_56 { pt3dadd( 26.0868, 32.2642, -11.7712, 1.11 ) }
    dend_56 { pt3dadd( 28.1547, 35.1749, -12.0835, 0.83 ) }
    dend_56 { pt3dadd( 30.0164, 38.0001, -12.0411, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_56 { pt3dadd( 31.5278, 40.4862, -11.9827, 0.55 ) }
    dend_56 { pt3dadd( 33.0668, 43.1914, -11.9625, 0.55 ) }
    dend_56 { pt3dadd( 33.6647, 44.2799, -11.9507, 0.83 ) }
    dend_56 { pt3dadd( 35.5195, 47.7098, -11.9376, 0.55 ) }
    dend_56 { pt3dadd( 36.0523, 48.7126, -11.9358, 0.55 ) }
    dend_56 { pt3dadd( 37.0393, 50.7294, -11.9859, 1.11 ) }
    dend_56 { pt3dadd( 37.656, 52.01, -12.0226, 1.11 ) }
    dend_56 { pt3dadd( 38.2537, 53.2946, -12.0931, 0.28 ) }
    dend_56 { pt3dadd( 38.9698, 54.9012, -12.323, 0.55 ) }
    dend_56 { pt3dadd( 39.4472, 56.1276, -12.6464, 0.28 ) }
    dend_56 { pt3dadd( 39.8824, 57.392, -13.0791, 0.83 ) }
    dend_56 { pt3dadd( 41.0561, 60.9825, -14.4609, 0.55 ) }
    dend_56 { pt3dadd( 41.7271, 62.8708, -15.2395, 0.55 ) }
    dend_56 { pt3dadd( 42.6869, 65.5038, -16.354, 0.83 ) }
    dend_56 { pt3dadd( 43.4974, 67.7815, -17.2936, 0.83 ) }
    dend_56 { pt3dadd( 44.1328, 69.5782, -17.9921, 0.55 ) }
    dend_56 { pt3dadd( 44.9907, 71.8875, -18.8763, 0.55 ) }
    dend_56 { pt3dadd( 45.8604, 74.1588, -19.7073, 0.55 ) }
    dend_56 { pt3dadd( 46.2126, 74.9357, -19.919, 0.55 ) }
    dend_56 { pt3dadd( 47.3487, 76.9344, -20.2555, 1.38 ) }
    dend_56 { pt3dadd( 48.6192, 78.7837, -20.4655, 0.55 ) }
    dend_56 { pt3dadd( 49.4623, 79.8814, -20.4759, 0.83 ) }
    dend_56 { pt3dadd( 49.8507, 80.366, -20.4364, 0.28 ) }
    dend_56 { pt3dadd( 50.993, 81.7675, -20.2081, 0.83 ) }
    dend_56 { pt3dadd( 52.0498, 82.9745, -19.9636, 0.28 ) }
    dend_56 { pt3dadd( 53.0587, 84.0376, -19.6219, 0.28 ) }
    dend_56 { pt3dadd( 55.1038, 86.2979, -18.8711, 0.55 ) }
    dend_56 { pt3dadd( 56.02, 87.3397, -18.5059, 0.55 ) }
    dend_56 { pt3dadd( 57.6047, 89.158, -17.8409, 0.55 ) }
    dend_56 { pt3dadd( 59.0776, 90.9197, -17.1911, 0.55 ) }
    dend_56 { pt3dadd( 60.7134, 92.9359, -16.4929, 0.83 ) }
    dend_56 { pt3dadd( 62.0238, 94.6052, -16.0136, 0.83 ) }
    dend_56 { pt3dadd( 62.9302, 95.8675, -15.7472, 0.28 ) }
    dend_56 { pt3dadd( 63.3645, 96.5666, -15.5776, 0.83 ) }
    dend_56 { pt3dadd( 64.4068, 98.3778, -15.1768, 0.28 ) }
    dend_56 { pt3dadd( 64.534, 98.6351, -15.1307, 0.83 ) }
    dend_56 { pt3dadd( 65.4566, 100.721, -14.9402, 0.28 ) }
    dend_56 { pt3dadd( 66.0559, 102.118, -14.8055, 0.83 ) }
    dend_56 { pt3dadd( 66.8978, 104.212, -14.7174, 0.28 ) }
    dend_56 { pt3dadd( 67.7565, 106.373, -14.6653, 1.11 ) }
    dend_56 { pt3dadd( 68.3152, 107.671, -14.6461, 1.11 ) }
    dend_56 { pt3dadd( 68.9118, 108.88, -14.6838, 0.55 ) }
    dend_56 { pt3dadd( 69.738, 110.282, -14.8111, 0.28 ) }
    dend_56 { pt3dadd( 70.331, 111.196, -14.9439, 0.55 ) }
    dend_56 { pt3dadd( 71.145, 112.413, -15.2287, 0.28 ) }
    dend_56 { pt3dadd( 71.927, 113.55, -15.4405, 0.83 ) }
    dend_56 { pt3dadd( 73.6033, 115.629, -15.8028, 0.55 ) }
    dend_56 { pt3dadd( 74.2163, 116.321, -15.9122, 0.55 ) }
    dend_56 { pt3dadd( 75.9828, 118.188, -16.1624, 1.11 ) }
    dend_56 { pt3dadd( 78.5522, 120.83, -16.4107, 0.28 ) }
    dend_56 { pt3dadd( 80.1618, 122.308, -16.5127, 0.83 ) }
    dend_56 { pt3dadd( 81.9417, 123.84, -16.4972, 0.28 ) }
    dend_56 { pt3dadd( 82.8404, 124.611, -16.4175, 0.83 ) }
    dend_56 { pt3dadd( 84.3281, 125.888, -16.2319, 0.28 ) }
    dend_56 { pt3dadd( 85.0994, 126.543, -16.1002, 0.83 ) }
    dend_56 { pt3dadd( 87.5132, 128.705, -15.6059, 0.83 ) }
    dend_56 { pt3dadd( 88.5087, 129.684, -15.4304, 0.28 ) }
    dend_56 { pt3dadd( 90.8965, 132.265, -15.006, 0.28 ) }
    dend_56 { pt3dadd( 92.084, 133.595, -14.8109, 1.11 ) }
    dend_56 { pt3dadd( 94.7452, 136.733, -14.4073, 0.28 ) }
    dend_56 { pt3dadd( 96.008, 138.279, -14.219, 1.11 ) }
    dend_56 { pt3dadd( 97.219, 139.886, -14.0486, 0.28 ) }
    dend_56 { pt3dadd( 97.9253, 140.804, -13.9667, 0.83 ) }
    dend_56 { pt3dadd( 99.3745, 142.663, -13.7843, 0.28 ) }
    dend_56 { pt3dadd( 99.7531, 143.168, -13.7274, 0.55 ) }
    dend_56 { pt3dadd( 100.496, 144.177, -13.6307, 0.28 ) }
    dend_56 { pt3dadd( 100.885, 144.669, -13.5673, 0.55 ) }
    dend_56 { pt3dadd( 101.945, 145.867, -13.3992, 0.28 ) }
    dend_56 { pt3dadd( 102.589, 146.437, -13.2945, 0.55 ) }
    dend_56 { pt3dadd( 103.869, 147.373, -13.1641, 0.28 ) }
    dend_56 { pt3dadd( 104.612, 147.855, -13.1698, 0.55 ) }
    dend_56 { pt3dadd( 106.271, 148.821, -13.3044, 0.28 ) }
    dend_56 { pt3dadd( 106.783, 149.079, -13.3363, 0.83 ) }
    dend_56 { pt3dadd( 108.837, 150.015, -13.505, 0.28 ) }
    dend_56 { pt3dadd( 109.893, 150.459, -13.5884, 0.83 ) }
    dend_56 { pt3dadd( 112.129, 151.471, -13.7428, 0.28 ) }
    dend_56 { pt3dadd( 114.374, 152.583, -13.8297, 0.28 ) }
    dend_56 { pt3dadd( 116.495, 153.804, -14.0107, 1.11 ) }
    dend_56 { pt3dadd( 117.86, 154.687, -14.161, 0.28 ) }
    dend_56 { pt3dadd( 119.073, 155.571, -14.292, 0.55 ) }
    dend_56 { pt3dadd( 120.406, 156.657, -14.4131, 0.28 ) }
    dend_56 { pt3dadd( 121.552, 157.742, -14.5304, 0.83 ) }
    dend_56 { pt3dadd( 123.934, 160.433, -14.6831, 0.28 ) }
    dend_56 { pt3dadd( 124.312, 160.943, -14.6941, 0.55 ) }
    dend_56 { pt3dadd( 125.527, 162.73, -14.6108, 0.55 ) }
    dend_56 { pt3dadd( 126.809, 164.801, -14.4325, 0.28 ) }
    dend_56 { pt3dadd( 127.645, 166.325, -14.1358, 1.11 ) }
    dend_56 { pt3dadd( 128.564, 168.554, -13.4867, 0.28 ) }
    dend_56 { pt3dadd( 129.015, 170.12, -13.0389, 0.55 ) }
    dend_56 { pt3dadd( 129.51, 172.972, -12.4961, 0.28 ) }
    dend_56 { pt3dadd( 129.556, 174.145, -12.3993, 0.83 ) }
    dend_56 { pt3dadd( 129.416, 177.663, -11.9774, 0.28 ) }
    dend_56 { pt3dadd( 129.197, 180.188, -11.7592, 0.28 ) }
    dend_56 { pt3dadd( 128.674, 184.025, -11.6621, 0.55 ) }
    dend_56 { pt3dadd( 128.266, 186.296, -11.6712, 0.28 ) }
    dend_56 { pt3dadd( 127.441, 189.565, -11.8567, 0.28 ) }
    dend_56 { pt3dadd( 126.461, 193.868, -12.4612, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 97/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.11895, -10.14, -2.573, 2.22 ) }
    dend_43 { pt3dadd( -1.21212, -12.0397, -1.53116, 2.22 ) }
    dend_43 { pt3dadd( -1.37926, -15.4478, 0.337958, 2.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_43 { pt3dadd( -1.65876, -21.1468, 3.46342, 2.77 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.67895, -8.62871, -5.133, 1.94 ) }
    dend_30 { pt3dadd( -5.84219, -9.25484, -5.133, 1.94 ) }
    dend_30 { pt3dadd( -8.30717, -9.96831, -5.133, 2.49 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 4/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -5.96896, 1.90129, 10.787, 1.11 ) }
    dend_27 { pt3dadd( -7.3187, 2.76927, 11.4657, 0.83 ) }
    dend_27 { pt3dadd( -9.82973, 4.25417, 12.4659, 0.55 ) }
    dend_27 { pt3dadd( -10.4912, 4.66405, 12.6915, 0.83 ) }
    dend_27 { pt3dadd( -11.8524, 5.49751, 13.143, 0.55 ) }
    dend_27 { pt3dadd( -13.3691, 6.42621, 13.6461, 0.83 ) }
    dend_27 { pt3dadd( -15.0996, 7.48579, 14.2201, 0.55 ) }
    dend_27 { pt3dadd( -17.2435, 8.76515, 14.8996, 0.55 ) }
    dend_27 { pt3dadd( -19.584, 10.0712, 15.4573, 0.55 ) }
    dend_27 { pt3dadd( -20.898, 10.8104, 15.7603, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 14/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.12895, -1.66721, 5.667, 2.49 ) }
    dend_0 { pt3dadd( -0.967733, -4.15235, 5.667, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.12415, 9.58553, 1.59687, 1.11 ) }
    axon_0 { pt3dadd( 5.90296, 24.1017, 1.59687, 1.11 ) }
    axon_0 { pt3dadd( 9.68178, 38.618, 1.59687, 1.11 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 19/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 12.2815, 21.233, 15.6175, 0.55 ) }
    dend_70 { pt3dadd( 13.0594, 22.6292, 15.0593, 0.55 ) }
    dend_70 { pt3dadd( 14.1451, 24.5866, 14.2493, 0.55 ) }
    dend_70 { pt3dadd( 15.2072, 26.2458, 13.6015, 0.83 ) }
    dend_70 { pt3dadd( 16.2749, 27.7349, 13.051, 0.83 ) }
    dend_70 { pt3dadd( 17.7466, 29.6377, 12.3764, 0.55 ) }
    dend_70 { pt3dadd( 18.8366, 30.9716, 11.9189, 0.55 ) }
    dend_70 { pt3dadd( 19.9878, 32.2551, 11.5097, 0.83 ) }
    dend_70 { pt3dadd( 21.4553, 33.8459, 11.0983, 0.55 ) }
    dend_70 { pt3dadd( 22.7685, 35.1607, 10.9843, 0.55 ) }
    dend_70 { pt3dadd( 23.6478, 36.0338, 11.042, 0.28 ) }
    dend_70 { pt3dadd( 24.5151, 36.9054, 11.2322, 0.28 ) }
    dend_70 { pt3dadd( 25.8318, 38.2087, 11.7466, 0.55 ) }
    dend_70 { pt3dadd( 27.6469, 40.1254, 12.6692, 0.55 ) }
    dend_70 { pt3dadd( 29.6776, 42.3679, 13.8557, 0.28 ) }
    dend_70 { pt3dadd( 30.0833, 42.7731, 14.1093, 0.28 ) }
    dend_70 { pt3dadd( 31.0272, 43.6619, 14.7062, 0.55 ) }
    dend_70 { pt3dadd( 32.2811, 44.7182, 15.344, 0.28 ) }
    dend_70 { pt3dadd( 33.8226, 45.8893, 15.8336, 0.55 ) }
    dend_70 { pt3dadd( 34.791, 46.6024, 15.9815, 0.28 ) }
    dend_70 { pt3dadd( 35.9995, 47.5121, 16.0096, 0.83 ) }
    dend_70 { pt3dadd( 37.6059, 48.6901, 15.961, 0.55 ) }
    dend_70 { pt3dadd( 39.6497, 50.2008, 15.8182, 0.55 ) }
    dend_70 { pt3dadd( 41.5998, 51.741, 15.5654, 0.55 ) }
    dend_70 { pt3dadd( 43.7326, 53.5037, 15.2382, 0.55 ) }
    dend_70 { pt3dadd( 44.0338, 53.7592, 15.1802, 0.28 ) }
    dend_70 { pt3dadd( 45.1109, 54.6534, 14.9214, 0.28 ) }
    dend_70 { pt3dadd( 46.3563, 55.6483, 14.4831, 0.55 ) }
    dend_70 { pt3dadd( 47.3408, 56.465, 14.0297, 0.28 ) }
    dend_70 { pt3dadd( 47.7235, 56.7935, 13.7977, 0.55 ) }
    dend_70 { pt3dadd( 48.5334, 57.5598, 12.954, 0.55 ) }
    dend_70 { pt3dadd( 49.1186, 58.2026, 12.2457, 0.55 ) }
    dend_70 { pt3dadd( 50.211, 59.5509, 10.8514, 0.55 ) }
    dend_70 { pt3dadd( 50.9631, 60.4724, 9.9418, 0.28 ) }
    dend_70 { pt3dadd( 52.5615, 62.3867, 8.22031, 0.83 ) }
    dend_70 { pt3dadd( 55.5847, 66.0743, 5.26557, 0.55 ) }
    dend_70 { pt3dadd( 56.6908, 67.4542, 4.28203, 0.55 ) }
    dend_70 { pt3dadd( 57.8681, 68.9369, 3.21921, 0.83 ) }
    dend_70 { pt3dadd( 58.8815, 70.1671, 2.46971, 0.28 ) }
    dend_70 { pt3dadd( 59.6386, 71.0485, 2.02516, 0.83 ) }
    dend_70 { pt3dadd( 60.5524, 72.0502, 1.67659, 0.28 ) }
    dend_70 { pt3dadd( 61.4542, 73.0347, 1.57482, 0.83 ) }
    dend_70 { pt3dadd( 64.4464, 76.1004, 1.66576, 0.28 ) }
    dend_70 { pt3dadd( 66.6086, 78.4612, 2.01173, 0.55 ) }
    dend_70 { pt3dadd( 68.1045, 80.1789, 2.45942, 0.28 ) }
    dend_70 { pt3dadd( 68.8247, 81.0799, 2.64701, 0.28 ) }
    dend_70 { pt3dadd( 70.0699, 82.6599, 2.92831, 0.83 ) }
    dend_70 { pt3dadd( 72.2635, 85.3624, 3.3559, 0.28 ) }
    dend_70 { pt3dadd( 73.2757, 86.5186, 3.46608, 0.83 ) }
    dend_70 { pt3dadd( 74.8914, 88.2858, 3.17121, 0.28 ) }
    dend_70 { pt3dadd( 78.0337, 91.7833, 2.13245, 0.55 ) }
    dend_70 { pt3dadd( 79.4482, 93.2495, 1.51755, 0.28 ) }
    dend_70 { pt3dadd( 80.2152, 93.9704, 1.04754, 0.28 ) }
    dend_70 { pt3dadd( 81.2443, 94.9701, 0.0773649, 0.55 ) }
    dend_70 { pt3dadd( 82.6256, 96.0554, -1.20323, 0.83 ) }
    dend_70 { pt3dadd( 88.7412, 103.85, -2.80457, 0.83 ) }
    dend_70 { pt3dadd( 95.123, 111.557, -3.56923, 0.83 ) }
    dend_70 { pt3dadd( 102.927, 117.921, -3.45847, 0.83 ) }
    dend_70 { pt3dadd( 111.852, 122.585, -2.6654, 0.83 ) }
    dend_70 { pt3dadd( 121.275, 125.637, -0.617844, 0.83 ) }
    dend_70 { pt3dadd( 130.138, 127.876, 3.71217, 0.83 ) }
    dend_70 { pt3dadd( 139.538, 129.167, 7.22646, 0.83 ) }
    dend_70 { pt3dadd( 148.88, 128.65, 11.0583, 0.83 ) }
    dend_70 { pt3dadd( 158.566, 129.813, 13.74, 0.83 ) }
    dend_70 { pt3dadd( 167.654, 130.204, 18.1692, 0.83 ) }
    dend_70 { pt3dadd( 177.364, 130.852, 20.9297, 0.83 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 85/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 12.2815, 21.233, 15.6175, 0.55 ) }
    dend_69 { pt3dadd( 14.0854, 21.8418, 16.18, 0.55 ) }
    dend_69 { pt3dadd( 15.1991, 22.2963, 16.6742, 0.55 ) }
    dend_69 { pt3dadd( 17.3067, 23.0649, 17.6374, 0.55 ) }
    dend_69 { pt3dadd( 20.5928, 24.1993, 19.1265, 0.55 ) }
    dend_69 { pt3dadd( 21.7472, 24.5609, 19.6093, 0.83 ) }
    dend_69 { pt3dadd( 22.7779, 24.8957, 19.9639, 0.83 ) }
    dend_69 { pt3dadd( 25.1933, 25.6206, 20.8231, 0.83 ) }
    dend_69 { pt3dadd( 26.771, 26.0662, 21.2632, 0.55 ) }
    dend_69 { pt3dadd( 28.6248, 26.5048, 21.5219, 0.83 ) }
    dend_69 { pt3dadd( 30.0822, 26.7607, 21.4926, 0.55 ) }
    dend_69 { pt3dadd( 32.2515, 27.0882, 21.3137, 0.55 ) }
    dend_69 { pt3dadd( 35.1618, 27.4576, 20.8842, 0.83 ) }
    dend_69 { pt3dadd( 37.8765, 27.7635, 20.2627, 0.83 ) }
    dend_69 { pt3dadd( 39.5019, 27.9115, 19.8334, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_69 { pt3dadd( 41.0992, 27.9675, 19.348, 0.83 ) }
    dend_69 { pt3dadd( 42.8904, 27.9659, 18.7841, 0.55 ) }
    dend_69 { pt3dadd( 44.0501, 27.8878, 18.4117, 0.83 ) }
    dend_69 { pt3dadd( 45.2977, 27.7598, 17.9262, 0.83 ) }
    dend_69 { pt3dadd( 46.6702, 27.6336, 17.4215, 0.83 ) }
    dend_69 { pt3dadd( 49.1133, 27.3743, 16.5185, 0.83 ) }
    dend_69 { pt3dadd( 50.167, 27.1635, 16.0823, 0.55 ) }
    dend_69 { pt3dadd( 51.0039, 26.9209, 15.7095, 0.83 ) }
    dend_69 { pt3dadd( 51.8104, 26.6375, 15.3128, 0.83 ) }
    dend_69 { pt3dadd( 53.7053, 25.7717, 14.2932, 0.83 ) }
    dend_69 { pt3dadd( 55.0433, 24.9693, 13.5489, 0.83 ) }
    dend_69 { pt3dadd( 56.7619, 23.6991, 12.7939, 0.83 ) }
    dend_69 { pt3dadd( 58.134, 22.6245, 12.2018, 0.83 ) }
    dend_69 { pt3dadd( 59.7023, 21.3541, 11.5498, 0.55 ) }
    dend_69 { pt3dadd( 60.9879, 20.1844, 11.0422, 0.55 ) }
    dend_69 { pt3dadd( 62.5286, 18.5811, 10.5038, 0.55 ) }
    dend_69 { pt3dadd( 64.9166, 16.2124, 9.9417, 0.55 ) }
    dend_69 { pt3dadd( 73.2044, 16.0823, 9.9404, 0.55 ) }
    // Section: dend_67, id: dend_67, parent: dend_57 (entry count 18/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 16.8411, 9.15293, -1.50579, 0.83 ) }
    dend_67 { pt3dadd( 17.5065, 13.3562, -1.46888, 0.83 ) }
    dend_67 { pt3dadd( 17.9044, 15.5966, -1.66627, 0.83 ) }
    dend_67 { pt3dadd( 18.3027, 17.6849, -1.47542, 0.83 ) }
    dend_67 { pt3dadd( 19.3161, 22.0212, -0.801985, 0.83 ) }
    dend_67 { pt3dadd( 19.9288, 24.1792, -0.455097, 0.83 ) }
    dend_67 { pt3dadd( 20.8681, 27.2399, 0.0177799, 0.28 ) }
    dend_67 { pt3dadd( 21.5525, 29.2615, 0.511692, 0.83 ) }
    dend_67 { pt3dadd( 24.1452, 35.7153, 2.46312, 0.55 ) }
    dend_67 { pt3dadd( 25.1315, 37.9324, 3.22147, 0.55 ) }
    dend_67 { pt3dadd( 26.7515, 41.2326, 4.44999, 0.55 ) }
    dend_67 { pt3dadd( 27.277, 42.23, 4.93075, 0.55 ) }
    dend_67 { pt3dadd( 28.9655, 45.3278, 6.73657, 0.55 ) }
    dend_67 { pt3dadd( 29.5154, 46.2364, 7.3039, 0.28 ) }
    dend_67 { pt3dadd( 30.1702, 47.207, 7.87402, 0.55 ) }
    dend_67 { pt3dadd( 31.4015, 48.9284, 9.09741, 0.55 ) }
    dend_67 { pt3dadd( 32.5333, 50.3857, 10.2832, 0.28 ) }
    dend_67 { pt3dadd( 32.9893, 50.9636, 10.7355, 0.28 ) }
    dend_67 { pt3dadd( 33.3957, 51.4299, 11.0423, 0.55 ) }
    dend_67 { pt3dadd( 34.095, 52.1425, 11.5581, 0.28 ) }
    dend_67 { pt3dadd( 35.3454, 53.2379, 12.3793, 0.55 ) }
    dend_67 { pt3dadd( 35.7108, 53.517, 12.5709, 0.55 ) }
    dend_67 { pt3dadd( 36.6788, 54.2451, 13.0287, 0.55 ) }
    dend_67 { pt3dadd( 38.7384, 55.7272, 14.0416, 0.28 ) }
    dend_67 { pt3dadd( 39.975, 56.579, 14.6605, 0.55 ) }
    dend_67 { pt3dadd( 41.2022, 57.3723, 15.2664, 0.28 ) }
    dend_67 { pt3dadd( 41.9821, 57.864, 15.669, 0.28 ) }
    dend_67 { pt3dadd( 43.3164, 58.635, 16.3115, 0.55 ) }
    dend_67 { pt3dadd( 47.2591, 65.814, 19.1483, 0.55 ) }
    dend_67 { pt3dadd( 52.5815, 72.4217, 20.9676, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 48/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 16.8411, 9.15293, -1.50579, 1.11 ) }
    dend_58 { pt3dadd( 19.5934, 7.99125, -1.59343, 1.11 ) }
    dend_58 { pt3dadd( 21.5598, 7.18813, -1.86922, 1.11 ) }
    dend_58 { pt3dadd( 22.9096, 6.77269, -2.14275, 1.11 ) }
    dend_58 { pt3dadd( 24.385, 6.43276, -2.51031, 1.38 ) }
    dend_58 { pt3dadd( 26.9436, 5.84324, -3.14774, 2.22 ) }
    dend_58 { pt3dadd( 29.1889, 5.32592, -3.70709, 1.38 ) }
    dend_58 { pt3dadd( 31.3187, 4.76897, -4.36137, 0.83 ) }
    dend_58 { pt3dadd( 33.5082, 4.23758, -5.2658, 1.38 ) }
    dend_58 { pt3dadd( 34.9245, 4.02954, -5.93712, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_43 (entry count 58/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -1.65876, -21.1468, 3.46342, 1.38 ) }
    dend_51 { pt3dadd( -2.70238, -22.4305, 3.60041, 1.38 ) }
    dend_51 { pt3dadd( -4.71058, -24.9007, 3.864, 0.83 ) }
    dend_51 { pt3dadd( -5.42779, -25.783, 3.95814, 1.11 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 62/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -1.65876, -21.1468, 3.46342, 1.38 ) }
    dend_44 { pt3dadd( -0.617698, -23.855, 3.47703, 1.38 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 64/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -8.30717, -9.96831, -5.133, 1.38 ) }
    dend_32 { pt3dadd( -10.9562, -12.1588, -5.1623, 1.38 ) }
    dend_32 { pt3dadd( -14.5543, -15.134, -5.20209, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 67/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -8.30717, -9.96831, -5.133, 0.55 ) }
    dend_31 { pt3dadd( -8.99393, -8.29483, -6.31403, 0.55 ) }
    dend_31 { pt3dadd( -9.74691, -5.60583, -8.40668, 0.55 ) }
    dend_31 { pt3dadd( -10.1277, -3.84839, -9.7975, 0.55 ) }
    dend_31 { pt3dadd( -10.4876, -1.38405, -11.5812, 0.55 ) }
    dend_31 { pt3dadd( -10.616, -0.00115275, -12.5419, 0.55 ) }
    dend_31 { pt3dadd( -10.6691, 2.0213, -13.9682, 0.55 ) }
    dend_31 { pt3dadd( -10.4315, 4.11724, -15.3747, 0.28 ) }
    dend_31 { pt3dadd( -10.2486, 4.87759, -15.8449, 0.55 ) }
    dend_31 { pt3dadd( -9.53135, 6.68984, -17.0149, 0.28 ) }
    dend_31 { pt3dadd( -8.94088, 7.90042, -17.6568, 0.55 ) }
    dend_31 { pt3dadd( -7.99634, 9.76303, -18.3715, 0.28 ) }
    dend_31 { pt3dadd( -7.30693, 11.0959, -18.7237, 0.55 ) }
    dend_31 { pt3dadd( -6.34959, 12.9578, -19.1108, 0.28 ) }
    dend_31 { pt3dadd( -5.8867, 13.8589, -19.3103, 0.55 ) }
    dend_31 { pt3dadd( -4.66383, 16.2328, -19.9038, 0.28 ) }
    dend_31 { pt3dadd( -3.94966, 17.6455, -20.2809, 0.55 ) }
    dend_31 { pt3dadd( -2.32771, 20.8769, -21.3068, 0.28 ) }
    dend_31 { pt3dadd( -1.82282, 21.84, -21.6845, 0.55 ) }
    dend_31 { pt3dadd( -1.15088, 23.0161, -22.1769, 0.28 ) }
    dend_31 { pt3dadd( -0.593558, 23.9692, -22.6008, 0.55 ) }
    dend_31 { pt3dadd( 0.71626, 26.0363, -23.6762, 0.28 ) }
    dend_31 { pt3dadd( 1.66436, 27.5616, -24.4487, 0.55 ) }
    dend_31 { pt3dadd( 2.55344, 29.1091, -25.1858, 0.28 ) }
    dend_31 { pt3dadd( 3.8237, 31.2464, -26.2625, 0.28 ) }
    dend_31 { pt3dadd( 4.68108, 32.6427, -26.9514, 0.55 ) }
    dend_31 { pt3dadd( 6.42938, 35.5687, -28.4689, 0.28 ) }
    dend_31 { pt3dadd( 6.90097, 36.3654, -28.9152, 1.11 ) }
    dend_31 { pt3dadd( 8.01562, 38.3875, -30.1187, 0.55 ) }
    dend_31 { pt3dadd( 9.05702, 40.3946, -31.4138, 0.28 ) }
    dend_31 { pt3dadd( 9.77044, 41.8016, -32.3596, 0.83 ) }
    dend_31 { pt3dadd( 10.6051, 43.4016, -33.4913, 0.28 ) }
    dend_31 { pt3dadd( 11.0211, 44.1214, -34.1187, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_31 { pt3dadd( 11.6486, 44.9641, -34.9666, 0.28 ) }
    dend_31 { pt3dadd( 12.2365, 45.6354, -35.7727, 0.83 ) }
    dend_31 { pt3dadd( 13.1354, 46.6017, -37.074, 0.28 ) }
    dend_31 { pt3dadd( 14.5227, 48.0591, -38.998, 0.55 ) }
    dend_31 { pt3dadd( 17.0986, 50.549, -42.4452, 0.28 ) }
    dend_31 { pt3dadd( 18.412, 51.7363, -44.2093, 0.55 ) }
    dend_31 { pt3dadd( 20.3652, 53.3565, -46.8451, 0.28 ) }
    dend_31 { pt3dadd( 22.3295, 54.9223, -49.5783, 0.28 ) }
    dend_31 { pt3dadd( 23.8021, 56.0982, -51.6938, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 9/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -20.898, 10.8104, 15.7603, 0.55 ) }
    dend_29 { pt3dadd( -21.7296, 13.6177, 14.5271, 0.55 ) }
    dend_29 { pt3dadd( -22.2143, 15.2018, 13.9807, 0.55 ) }
    dend_29 { pt3dadd( -22.7359, 16.6501, 13.5627, 0.55 ) }
    dend_29 { pt3dadd( -24.1326, 20.053, 12.6553, 0.55 ) }
    dend_29 { pt3dadd( -25.0274, 21.9915, 12.0657, 0.28 ) }
    dend_29 { pt3dadd( -26.0819, 24.196, 11.3904, 0.55 ) }
    dend_29 { pt3dadd( -26.5712, 25.1607, 11.1309, 0.28 ) }
    dend_29 { pt3dadd( -27.4693, 26.8751, 10.659, 0.55 ) }
    dend_29 { pt3dadd( -28.5101, 28.8234, 10.1617, 0.55 ) }
    dend_29 { pt3dadd( -30.0753, 31.6374, 9.59856, 0.28 ) }
    dend_29 { pt3dadd( -30.7926, 32.9783, 9.29762, 0.55 ) }
    dend_29 { pt3dadd( -31.6004, 34.529, 8.98764, 0.28 ) }
    dend_29 { pt3dadd( -32.1457, 35.6254, 8.82654, 0.55 ) }
    dend_29 { pt3dadd( -32.574, 36.539, 8.72098, 0.55 ) }
    dend_29 { pt3dadd( -33.1983, 37.8644, 8.62811, 0.28 ) }
    dend_29 { pt3dadd( -34.0111, 39.5455, 8.51487, 0.55 ) }
    dend_29 { pt3dadd( -34.7376, 40.9491, 8.42848, 0.28 ) }
    dend_29 { pt3dadd( -35.3565, 41.9988, 8.31012, 0.55 ) }
    dend_29 { pt3dadd( -36.9981, 44.4513, 7.90548, 0.28 ) }
    dend_29 { pt3dadd( -37.4268, 44.9941, 7.79157, 0.55 ) }
    dend_29 { pt3dadd( -38.7651, 46.4866, 7.42374, 0.28 ) }
    dend_29 { pt3dadd( -40.18, 47.9456, 7.05403, 0.55 ) }
    dend_29 { pt3dadd( -42.501, 50.2586, 6.50051, 0.28 ) }
    dend_29 { pt3dadd( -43.6666, 51.4209, 6.24522, 0.55 ) }
    dend_29 { pt3dadd( -44.9698, 52.758, 6.00685, 0.28 ) }
    dend_29 { pt3dadd( -45.9315, 53.8144, 5.81446, 0.55 ) }
    dend_29 { pt3dadd( -46.5823, 54.5861, 5.68017, 0.28 ) }
    dend_29 { pt3dadd( -46.7214, 54.7871, 5.62905, 0.83 ) }
    dend_29 { pt3dadd( -47.7307, 56.7127, 5.21052, 0.28 ) }
    dend_29 { pt3dadd( -48.1762, 57.7715, 5.02831, 0.83 ) }
    dend_29 { pt3dadd( -48.6568, 59.0798, 4.86784, 0.28 ) }
    dend_29 { pt3dadd( -48.8402, 59.6024, 4.8446, 0.83 ) }
    dend_29 { pt3dadd( -49.695, 62.0988, 4.92155, 0.28 ) }
    dend_29 { pt3dadd( -50.133, 63.4444, 5.1556, 0.55 ) }
    dend_29 { pt3dadd( -50.7714, 65.5302, 5.82286, 0.28 ) }
    dend_29 { pt3dadd( -51.1141, 66.7688, 6.34764, 0.55 ) }
    dend_29 { pt3dadd( -51.4745, 68.2367, 7.09021, 0.28 ) }
    dend_29 { pt3dadd( -51.7166, 69.2902, 7.65761, 0.55 ) }
    dend_29 { pt3dadd( -52.1196, 71.3236, 8.82297, 0.28 ) }
    dend_29 { pt3dadd( -52.1922, 71.8059, 9.08517, 0.55 ) }
    dend_29 { pt3dadd( -52.3128, 72.697, 9.4985, 0.28 ) }
    dend_29 { pt3dadd( -52.4097, 73.4035, 9.80523, 0.55 ) }
    dend_29 { pt3dadd( -52.6363, 74.763, 10.3297, 0.28 ) }
    dend_29 { pt3dadd( -52.9341, 76.1344, 10.8109, 0.55 ) }
    dend_29 { pt3dadd( -53.4484, 77.9317, 11.3371, 0.28 ) }
    dend_29 { pt3dadd( -53.8164, 79.061, 11.6737, 0.55 ) }
    dend_29 { pt3dadd( -54.4119, 80.6407, 12.1443, 0.28 ) }
    dend_29 { pt3dadd( -54.5486, 80.9444, 12.2331, 0.55 ) }
    dend_29 { pt3dadd( -55.177, 82.2538, 12.6029, 0.28 ) }
    dend_29 { pt3dadd( -55.7548, 83.4076, 12.8607, 0.55 ) }
    dend_29 { pt3dadd( -56.0936, 84.1105, 12.9687, 0.28 ) }
    dend_29 { pt3dadd( -56.4619, 84.9032, 13.0903, 0.55 ) }
    dend_29 { pt3dadd( -57.2319, 86.6385, 13.3493, 0.55 ) }
    dend_29 { pt3dadd( -57.8081, 88.0071, 13.5398, 0.83 ) }
    dend_29 { pt3dadd( -58.3243, 89.3461, 13.6979, 0.55 ) }
    dend_29 { pt3dadd( -58.9536, 91.1915, 13.9246, 0.83 ) }
    dend_29 { pt3dadd( -63.7187, 98.649, 14.7788, 0.83 ) }
    dend_29 { pt3dadd( -70.1584, 104.458, 16.9791, 0.83 ) }
    dend_29 { pt3dadd( -76.3695, 109.426, 21.1068, 0.83 ) }
    dend_29 { pt3dadd( -82.9523, 114.418, 24.5887, 0.83 ) }
    dend_29 { pt3dadd( -90.1671, 119.094, 27.1766, 0.83 ) }
    dend_29 { pt3dadd( -96.6381, 124.218, 30.6654, 0.83 ) }
    dend_29 { pt3dadd( -102.901, 129.638, 34.063, 0.83 ) }
    dend_29 { pt3dadd( -109.556, 134.384, 37.7568, 0.83 ) }
    dend_29 { pt3dadd( -114.854, 139.222, 43.119, 0.83 ) }
    dend_29 { pt3dadd( -120.31, 142.544, 49.4452, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 76/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -20.898, 10.8104, 15.7603, 0.55 ) }
    dend_28 { pt3dadd( -22.4845, 10.4577, 16.2245, 0.55 ) }
    dend_28 { pt3dadd( -23.779, 10.1223, 16.9339, 0.55 ) }
    dend_28 { pt3dadd( -26.4064, 9.39783, 18.5033, 0.55 ) }
    dend_28 { pt3dadd( -28.4761, 8.84127, 19.7832, 0.55 ) }
    dend_28 { pt3dadd( -31.0159, 8.09093, 21.404, 0.55 ) }
    dend_28 { pt3dadd( -35.2231, 6.70609, 23.9181, 0.55 ) }
    dend_28 { pt3dadd( -39.6358, 5.08256, 26.6121, 0.55 ) }
    dend_28 { pt3dadd( -42.1608, 4.03467, 28.2338, 0.55 ) }
    dend_28 { pt3dadd( -44.8489, 2.68113, 30.05, 0.55 ) }
    dend_28 { pt3dadd( -46.6913, 1.58164, 31.3314, 0.55 ) }
    dend_28 { pt3dadd( -49.355, -0.331398, 32.9901, 0.55 ) }
    dend_28 { pt3dadd( -50.0991, -0.987032, 33.3208, 0.83 ) }
    dend_28 { pt3dadd( -51.8541, -2.70654, 33.7944, 0.83 ) }
    dend_28 { pt3dadd( -53.9678, -5.03553, 34.1795, 0.55 ) }
    dend_28 { pt3dadd( -55.8426, -7.26833, 34.3047, 0.55 ) }
    dend_28 { pt3dadd( -57.7802, -9.47247, 34.3028, 0.83 ) }
    dend_28 { pt3dadd( -59.3672, -11.2661, 34.291, 0.28 ) }
    dend_28 { pt3dadd( -60.8953, -12.9622, 34.1869, 0.55 ) }
    dend_28 { pt3dadd( -63.0738, -15.3932, 34.1553, 0.55 ) }
    dend_28 { pt3dadd( -64.0409, -16.5304, 34.2382, 0.55 ) }
    dend_28 { pt3dadd( -65.2523, -17.9278, 34.4172, 0.55 ) }
    dend_28 { pt3dadd( -66.9418, -19.8905, 34.9375, 0.28 ) }
    dend_28 { pt3dadd( -67.9414, -21.084, 35.3694, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_28 { pt3dadd( -70.3202, -24.1866, 36.602, 0.28 ) }
    dend_28 { pt3dadd( -71.0981, -25.3089, 37.2213, 0.55 ) }
    dend_28 { pt3dadd( -78.234, -30.2608, 42.3003, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 3/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -0.967733, -4.15235, 5.667, 2.22 ) }
    dend_14 { pt3dadd( -0.388668, -6.93611, 3.3148, 2.22 ) }
    dend_14 { pt3dadd( 0.144148, -9.49754, 1.15047, 1.38 ) }
    dend_14 { pt3dadd( 0.997955, -13.6021, -2.31775, 1.94 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.967733, -4.15235, 5.667, 1.66 ) }
    dend_1 { pt3dadd( 1.25478, -4.63467, 4.2547, 1.66 ) }
    dend_1 { pt3dadd( 4.43958, -5.32581, 2.23091, 1.66 ) }
    dend_1 { pt3dadd( 9.80245, -6.48962, -1.17693, 1.38 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.68178, 38.618, 1.59687, 1.11 ) }
    axon_1 { pt3dadd( 13.4606, 53.1342, 1.59687, 1.11 ) }
    axon_1 { pt3dadd( 17.2394, 67.6504, 1.59687, 1.11 ) }
    // Section: dend_66, id: dend_66, parent: dend_58 (entry count 14/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 34.9245, 4.02954, -5.93712, 0.83 ) }
    dend_66 { pt3dadd( 32.7358, 6.32518, -5.96067, 0.83 ) }
    dend_66 { pt3dadd( 30.3719, 8.06404, -5.96012, 0.83 ) }
    dend_66 { pt3dadd( 28.8505, 9.09113, -6.20952, 0.83 ) }
    dend_66 { pt3dadd( 26.581, 10.856, -6.79949, 0.83 ) }
    dend_66 { pt3dadd( 24.8041, 12.3097, -7.31863, 0.55 ) }
    dend_66 { pt3dadd( 23.5137, 13.3907, -7.84541, 0.83 ) }
    dend_66 { pt3dadd( 22.1362, 14.5388, -8.39332, 0.83 ) }
    dend_66 { pt3dadd( 19.8569, 16.6355, -9.45443, 0.55 ) }
    dend_66 { pt3dadd( 17.3561, 19.0673, -10.7629, 0.55 ) }
    dend_66 { pt3dadd( 16.0737, 20.4892, -11.5552, 0.55 ) }
    dend_66 { pt3dadd( 13.8681, 23.3775, -13.1454, 0.83 ) }
    dend_66 { pt3dadd( 12.4755, 25.463, -14.2145, 1.11 ) }
    dend_66 { pt3dadd( 10.5495, 28.6389, -15.7266, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 28/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 34.9245, 4.02954, -5.93712, 0.55 ) }
    dend_59 { pt3dadd( 39.0326, 5.5838, 4.55889, 0.55 ) }
    dend_59 { pt3dadd( 39.5466, 5.75026, 5.69068, 0.55 ) }
    dend_59 { pt3dadd( 40.7848, 6.20889, 7.97287, 1.11 ) }
    dend_59 { pt3dadd( 42.5552, 6.86467, 11.2361, 0.55 ) }
    dend_59 { pt3dadd( 43.6267, 7.26154, 13.2109, 0.55 ) }
    dend_59 { pt3dadd( 43.8937, 7.36046, 13.7032, 0.83 ) }
    dend_59 { pt3dadd( 45.7777, 7.73536, 15.0664, 0.55 ) }
    dend_59 { pt3dadd( 47.5443, 8.26248, 16.6391, 1.11 ) }
    dend_59 { pt3dadd( 52.8845, 11.23, 24.7377, 1.11 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -5.42779, -25.783, 3.95814, 0.83 ) }
    dend_53 { pt3dadd( -4.30849, -27.036, 3.98645, 0.83 ) }
    dend_53 { pt3dadd( -3.14358, -28.2939, 3.92887, 0.83 ) }
    dend_53 { pt3dadd( -2.20603, -29.3548, 3.75514, 0.83 ) }
    dend_53 { pt3dadd( -0.49165, -31.5468, 3.31802, 0.28 ) }
    dend_53 { pt3dadd( 0.606307, -33.033, 3.00204, 0.83 ) }
    dend_53 { pt3dadd( 2.36428, -35.3764, 2.51497, 0.28 ) }
    dend_53 { pt3dadd( 2.9709, -36.1335, 2.3507, 0.83 ) }
    dend_53 { pt3dadd( 4.66349, -38.1733, 1.96189, 0.28 ) }
    dend_53 { pt3dadd( 6.00409, -39.9002, 1.6558, 0.55 ) }
    dend_53 { pt3dadd( 6.4752, -40.5246, 1.55556, 0.28 ) }
    dend_53 { pt3dadd( 7.70722, -42.2349, 1.4294, 0.55 ) }
    dend_53 { pt3dadd( 8.82207, -43.8382, 1.44053, 0.55 ) }
    dend_53 { pt3dadd( 10.2058, -45.8208, 1.50786, 0.55 ) }
    dend_53 { pt3dadd( 11.7503, -47.9738, 1.67282, 0.28 ) }
    dend_53 { pt3dadd( 12.3232, -48.7796, 1.72937, 0.83 ) }
    dend_53 { pt3dadd( 13.1262, -50.0513, 1.83357, 0.28 ) }
    dend_53 { pt3dadd( 13.8582, -51.3446, 1.95492, 0.55 ) }
    dend_53 { pt3dadd( 14.663, -52.7725, 1.99628, 0.55 ) }
    dend_53 { pt3dadd( 15.4359, -54.1222, 1.99556, 0.55 ) }
    dend_53 { pt3dadd( 16.4176, -55.6831, 1.9968, 0.83 ) }
    dend_53 { pt3dadd( 17.3046, -57.0487, 1.98897, 0.55 ) }
    dend_53 { pt3dadd( 19.2981, -59.965, 1.96828, 0.55 ) }
    dend_53 { pt3dadd( 21.303, -62.8429, 1.96802, 2.22 ) }
    dend_53 { pt3dadd( 22.8459, -65.0046, 1.97991, 0.55 ) }
    dend_53 { pt3dadd( 24.1321, -66.7449, 1.99376, 0.55 ) }
    dend_53 { pt3dadd( 25.6212, -68.7129, 2.02187, 0.28 ) }
    dend_53 { pt3dadd( 26.7218, -70.1013, 2.01171, 0.55 ) }
    dend_53 { pt3dadd( 28.047, -71.7365, 2.02383, 0.28 ) }
    dend_53 { pt3dadd( 28.8998, -72.8126, 2.07148, 0.83 ) }
    dend_53 { pt3dadd( 29.7474, -73.9185, 2.07808, 0.28 ) }
    dend_53 { pt3dadd( 30.8917, -75.5616, 2.05861, 0.55 ) }
    dend_53 { pt3dadd( 32.1834, -77.7192, 2.03575, 0.28 ) }
    dend_53 { pt3dadd( 32.818, -78.9313, 2.03225, 0.55 ) }
    dend_53 { pt3dadd( 33.4137, -80.2113, 1.99108, 0.55 ) }
    dend_53 { pt3dadd( 34.0769, -81.8401, 1.9163, 0.28 ) }
    dend_53 { pt3dadd( 34.5674, -83.1284, 1.87226, 0.55 ) }
    dend_53 { pt3dadd( 35.6052, -86.0109, 1.82626, 0.28 ) }
    dend_53 { pt3dadd( 35.9217, -86.9488, 1.84234, 0.55 ) }
    dend_53 { pt3dadd( 36.7871, -89.3191, 1.82073, 0.28 ) }
    dend_53 { pt3dadd( 37.1251, -90.1212, 1.81608, 0.55 ) }
    dend_53 { pt3dadd( 38.1607, -92.2881, 1.75488, 0.28 ) }
    dend_53 { pt3dadd( 38.5542, -93.0234, 1.70162, 0.55 ) }
    dend_53 { pt3dadd( 39.9176, -95.3472, 1.45714, 0.28 ) }
    dend_53 { pt3dadd( 40.7743, -96.6652, 1.2848, 0.83 ) }
    dend_53 { pt3dadd( 42.0662, -98.6032, 1.00075, 0.28 ) }
    dend_53 { pt3dadd( 43.0924, -100.149, 0.711324, 0.55 ) }
    dend_53 { pt3dadd( 44.3938, -102.085, 0.285125, 0.28 ) }
    dend_53 { pt3dadd( 45.0458, -103.033, 0.110673, 0.55 ) }
    dend_53 { pt3dadd( 47.1124, -106.062, -0.273517, 0.28 ) }
    dend_53 { pt3dadd( 48.1829, -107.653, -0.431628, 0.55 ) }
    dend_53 { pt3dadd( 48.9927, -108.893, -0.487574, 0.55 ) }
    dend_53 { pt3dadd( 50.0352, -110.534, -0.461916, 0.55 ) }
    dend_53 { pt3dadd( 52.0405, -113.718, -0.219058, 0.28 ) }
    dend_53 { pt3dadd( 52.6272, -114.667, -0.124115, 0.55 ) }
    dend_53 { pt3dadd( 54.6463, -117.948, 0.36362, 0.28 ) }
    dend_53 { pt3dadd( 55.7212, -119.502, 0.603951, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 95/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -5.42779, -25.783, 3.95814, 0.55 ) }
    dend_52 { pt3dadd( -7.98479, -27.3288, 4.96481, 0.55 ) }
    dend_52 { pt3dadd( -10.4859, -28.7848, 6.0794, 0.55 ) }
    dend_52 { pt3dadd( -13.1588, -30.1893, 7.31075, 0.55 ) }
    dend_52 { pt3dadd( -16.5556, -31.7823, 8.78633, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_52 { pt3dadd( -18.5923, -32.642, 9.62997, 0.55 ) }
    dend_52 { pt3dadd( -19.4854, -32.9992, 10.0045, 0.55 ) }
    dend_52 { pt3dadd( -21.0796, -33.6114, 10.6587, 0.83 ) }
    dend_52 { pt3dadd( -22.9066, -34.1964, 11.4615, 0.83 ) }
    dend_52 { pt3dadd( -25.3412, -34.9573, 12.5201, 0.55 ) }
    dend_52 { pt3dadd( -26.2417, -35.2901, 12.9465, 0.55 ) }
    dend_52 { pt3dadd( -28.4412, -36.2077, 14.0695, 0.55 ) }
    dend_52 { pt3dadd( -30.8938, -37.4313, 15.3508, 0.83 ) }
    dend_52 { pt3dadd( -34.2134, -39.3655, 17.0508, 0.28 ) }
    dend_52 { pt3dadd( -35.7186, -40.3911, 17.8737, 1.11 ) }
    dend_52 { pt3dadd( -37.9023, -42.105, 19.1852, 0.55 ) }
    dend_52 { pt3dadd( -39.0237, -43.0836, 19.8636, 0.55 ) }
    dend_52 { pt3dadd( -40.0266, -44.0235, 20.4436, 0.83 ) }
    dend_52 { pt3dadd( -40.9137, -44.9243, 20.9614, 0.28 ) }
    dend_52 { pt3dadd( -41.2787, -45.3328, 21.0981, 0.55 ) }
    dend_52 { pt3dadd( -42.4084, -46.6118, 21.427, 0.28 ) }
    dend_52 { pt3dadd( -43.0057, -47.2988, 21.503, 0.55 ) }
    dend_52 { pt3dadd( -44.2652, -48.6654, 21.5945, 0.28 ) }
    dend_52 { pt3dadd( -45.3229, -49.7421, 21.641, 0.55 ) }
    dend_52 { pt3dadd( -46.7058, -51.0495, 21.7162, 0.28 ) }
    dend_52 { pt3dadd( -47.4204, -51.6419, 21.7547, 0.55 ) }
    dend_52 { pt3dadd( -49.0469, -52.8344, 21.8231, 0.28 ) }
    dend_52 { pt3dadd( -51.3164, -54.3647, 21.9468, 0.83 ) }
    dend_52 { pt3dadd( -54.0772, -56.0708, 22.1408, 0.55 ) }
    dend_52 { pt3dadd( -55.5982, -56.9317, 22.2828, 0.55 ) }
    dend_52 { pt3dadd( -57.6565, -57.9422, 22.5106, 0.55 ) }
    dend_52 { pt3dadd( -59.8973, -58.9065, 22.7933, 0.28 ) }
    dend_52 { pt3dadd( -60.6535, -59.1916, 22.904, 0.55 ) }
    dend_52 { pt3dadd( -62.5075, -59.7884, 23.1786, 0.28 ) }
    dend_52 { pt3dadd( -63.0611, -59.9406, 23.2574, 0.83 ) }
    dend_52 { pt3dadd( -65.7461, -60.6648, 23.6879, 0.28 ) }
    dend_52 { pt3dadd( -67.5386, -61.1123, 24.0861, 0.83 ) }
    dend_52 { pt3dadd( -69.3021, -61.4583, 24.5796, 0.28 ) }
    dend_52 { pt3dadd( -70.3271, -61.6012, 24.8791, 0.83 ) }
    dend_52 { pt3dadd( -72.0788, -61.7262, 25.4264, 0.28 ) }
    dend_52 { pt3dadd( -73.4902, -61.7211, 25.8917, 0.55 ) }
    dend_52 { pt3dadd( -75.2304, -61.5315, 26.5125, 0.28 ) }
    dend_52 { pt3dadd( -75.9748, -61.3211, 26.8102, 0.83 ) }
    dend_52 { pt3dadd( -77.2985, -60.7261, 27.4549, 0.28 ) }
    dend_52 { pt3dadd( -77.7065, -60.5107, 27.6792, 0.55 ) }
    dend_52 { pt3dadd( -78.4557, -60.1286, 28.0931, 0.28 ) }
    dend_52 { pt3dadd( -79.1174, -59.8428, 28.4629, 0.55 ) }
    dend_52 { pt3dadd( -81.7179, -59.4662, 29.8644, 0.28 ) }
    dend_52 { pt3dadd( -82.227, -59.4828, 30.1345, 0.83 ) }
    dend_52 { pt3dadd( -83.0553, -59.6107, 30.5192, 0.83 ) }
    dend_52 { pt3dadd( -85.6249, -60.2345, 31.6719, 0.28 ) }
    dend_52 { pt3dadd( -87.0545, -60.7381, 32.2045, 0.83 ) }
    dend_52 { pt3dadd( -90.7851, -62.398, 33.3646, 0.28 ) }
    dend_52 { pt3dadd( -91.5956, -62.7982, 33.5752, 0.83 ) }
    dend_52 { pt3dadd( -93.3235, -63.7005, 34.0172, 0.28 ) }
    dend_52 { pt3dadd( -95.4381, -64.8707, 34.5373, 0.83 ) }
    dend_52 { pt3dadd( -98.4865, -66.7792, 35.2001, 0.28 ) }
    dend_52 { pt3dadd( -99.361, -67.3576, 35.3272, 0.83 ) }
    dend_52 { pt3dadd( -107.074, -69.9116, 39.8933, 0.83 ) }
    dend_52 { pt3dadd( -114.567, -70.9446, 45.3675, 0.83 ) }
    dend_52 { pt3dadd( -121.529, -72.8875, 51.266, 0.83 ) }
    dend_52 { pt3dadd( -129.262, -73.9517, 56.3888, 0.83 ) }
    dend_52 { pt3dadd( -136.754, -76.3205, 61.4057, 0.83 ) }
    dend_52 { pt3dadd( -143.195, -78.6063, 67.7497, 0.83 ) }
    dend_52 { pt3dadd( -150.484, -80.2806, 73.3303, 0.83 ) }
    dend_52 { pt3dadd( -157.866, -80.4026, 79.053, 0.83 ) }
    dend_52 { pt3dadd( -165.815, -80.8334, 83.9378, 0.83 ) }
    dend_52 { pt3dadd( -174.118, -80.0325, 88.1381, 0.83 ) }
    dend_52 { pt3dadd( -182.729, -79.2744, 91.6764, 0.83 ) }
    // Section: dend_50, id: dend_50, parent: dend_44 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -0.617698, -23.855, 3.47703, 0.55 ) }
    dend_50 { pt3dadd( -2.09651, -28.216, 5.16693, 0.55 ) }
    dend_50 { pt3dadd( -2.85798, -30.6374, 5.97066, 0.55 ) }
    dend_50 { pt3dadd( -3.80535, -33.7675, 6.8668, 1.11 ) }
    dend_50 { pt3dadd( -4.66762, -36.6579, 7.66431, 0.83 ) }
    dend_50 { pt3dadd( -5.60313, -39.7524, 8.4941, 1.66 ) }
    dend_50 { pt3dadd( -6.45797, -42.7084, 9.41154, 0.83 ) }
    dend_50 { pt3dadd( -6.78852, -43.9606, 9.8382, 0.55 ) }
    dend_50 { pt3dadd( -7.42395, -46.1588, 10.62, 1.11 ) }
    dend_50 { pt3dadd( -7.94403, -47.7255, 11.1612, 0.55 ) }
    dend_50 { pt3dadd( -8.74208, -49.9905, 11.9177, 1.11 ) }
    dend_50 { pt3dadd( -10.2573, -54.0725, 13.4008, 0.55 ) }
    dend_50 { pt3dadd( -11.1702, -56.2616, 14.2781, 0.55 ) }
    dend_50 { pt3dadd( -11.6416, -57.2913, 14.6847, 0.83 ) }
    dend_50 { pt3dadd( -12.9361, -59.8879, 15.5606, 0.55 ) }
    dend_50 { pt3dadd( -13.721, -61.3218, 15.9154, 0.83 ) }
    dend_50 { pt3dadd( -14.7071, -63.1235, 16.3185, 0.28 ) }
    dend_50 { pt3dadd( -15.4042, -64.4163, 16.5459, 1.11 ) }
    dend_50 { pt3dadd( -16.0204, -65.6569, 16.8071, 1.11 ) }
    dend_50 { pt3dadd( -16.9976, -67.9598, 17.32, 0.55 ) }
    dend_50 { pt3dadd( -17.5574, -69.4964, 17.6772, 0.55 ) }
    dend_50 { pt3dadd( -18.7605, -73.0422, 18.5435, 0.55 ) }
    dend_50 { pt3dadd( -19.4225, -75.2892, 19.1938, 0.55 ) }
    dend_50 { pt3dadd( -19.9587, -77.4843, 19.8856, 0.55 ) }
    dend_50 { pt3dadd( -20.2887, -79.1389, 20.4132, 0.55 ) }
    dend_50 { pt3dadd( -20.5367, -80.51, 20.8665, 0.83 ) }
    dend_50 { pt3dadd( -20.7731, -81.7731, 21.2565, 0.83 ) }
    dend_50 { pt3dadd( -21.3742, -84.2432, 21.8794, 0.28 ) }
    dend_50 { pt3dadd( -21.6019, -84.9271, 21.9924, 0.55 ) }
    dend_50 { pt3dadd( -22.454, -86.8092, 22.1082, 0.28 ) }
    dend_50 { pt3dadd( -22.9324, -87.6085, 21.9757, 0.55 ) }
    dend_50 { pt3dadd( -23.8418, -88.9438, 21.58, 0.28 ) }
    dend_50 { pt3dadd( -24.5572, -89.8555, 21.2906, 0.83 ) }
    dend_50 { pt3dadd( -27.7353, -93.6969, 20.04, 0.28 ) }
    dend_50 { pt3dadd( -28.9285, -95.1299, 19.6099, 0.83 ) }
    dend_50 { pt3dadd( -32.1451, -98.9472, 18.5748, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_50 { pt3dadd( -33.4771, -100.567, 18.2051, 1.38 ) }
    dend_50 { pt3dadd( -35.5098, -103.092, 17.7381, 0.55 ) }
    dend_50 { pt3dadd( -36.7384, -104.677, 17.5981, 0.55 ) }
    dend_50 { pt3dadd( -38.2566, -106.779, 17.8257, 0.28 ) }
    dend_50 { pt3dadd( -38.9772, -107.75, 18.0294, 0.83 ) }
    dend_50 { pt3dadd( -39.7785, -108.779, 18.4097, 0.28 ) }
    dend_50 { pt3dadd( -39.9849, -109.033, 18.4872, 0.83 ) }
    dend_50 { pt3dadd( -41.3585, -110.646, 18.8407, 0.28 ) }
    dend_50 { pt3dadd( -42.7965, -112.267, 19.1512, 0.55 ) }
    dend_50 { pt3dadd( -43.9809, -113.623, 19.2318, 0.28 ) }
    dend_50 { pt3dadd( -44.4538, -114.195, 19.1702, 0.55 ) }
    dend_50 { pt3dadd( -45.9686, -116.165, 18.7909, 0.28 ) }
    dend_50 { pt3dadd( -46.3675, -116.772, 18.657, 0.55 ) }
    dend_50 { pt3dadd( -47.2169, -118.249, 18.1063, 0.55 ) }
    dend_50 { pt3dadd( -48.2982, -120.201, 17.2921, 0.28 ) }
    dend_50 { pt3dadd( -48.951, -121.346, 16.8067, 0.55 ) }
    dend_50 { pt3dadd( -49.7531, -122.662, 16.2547, 0.28 ) }
    dend_50 { pt3dadd( -50.7219, -124.311, 15.6378, 1.11 ) }
    dend_50 { pt3dadd( -52.8681, -127.541, 14.3721, 0.55 ) }
    dend_50 { pt3dadd( -53.779, -128.817, 14.0398, 0.83 ) }
    dend_50 { pt3dadd( -55.1574, -131.002, 13.9546, 0.28 ) }
    dend_50 { pt3dadd( -55.5027, -131.575, 13.9532, 0.83 ) }
    dend_50 { pt3dadd( -56.5763, -133.519, 14.0263, 0.28 ) }
    dend_50 { pt3dadd( -57.2733, -135.152, 14.2323, 0.55 ) }
    dend_50 { pt3dadd( -58.6184, -138.848, 14.7019, 0.55 ) }
    dend_50 { pt3dadd( -59.4829, -141.219, 14.7707, 0.55 ) }
    dend_50 { pt3dadd( -60.6722, -144.832, 14.8014, 0.28 ) }
    dend_50 { pt3dadd( -60.9922, -145.96, 14.8646, 0.28 ) }
    dend_50 { pt3dadd( -61.5419, -147.89, 14.909, 0.83 ) }
    dend_50 { pt3dadd( -62.2651, -150.475, 14.7798, 0.28 ) }
    dend_50 { pt3dadd( -62.9527, -152.57, 14.5161, 0.28 ) }
    dend_50 { pt3dadd( -63.5602, -154.147, 14.3714, 0.83 ) }
    dend_50 { pt3dadd( -65.2122, -158.143, 14.3841, 0.28 ) }
    dend_50 { pt3dadd( -66.3053, -160.477, 14.7038, 0.55 ) }
    dend_50 { pt3dadd( -67.753, -163.447, 15.2347, 0.28 ) }
    dend_50 { pt3dadd( -68.6524, -165.315, 15.673, 0.83 ) }
    dend_50 { pt3dadd( -70.0724, -167.97, 16.3363, 1.38 ) }
    dend_50 { pt3dadd( -70.974, -169.367, 16.7086, 0.55 ) }
    dend_50 { pt3dadd( -73.8526, -172.941, 17.7384, 1.66 ) }
    dend_50 { pt3dadd( -80.2842, -183.005, 18.2065, 1.66 ) }
    dend_50 { pt3dadd( -86.6386, -192.956, 20.1012, 1.66 ) }
    dend_50 { pt3dadd( -93.0972, -202.668, 22.7892, 1.66 ) }
    dend_50 { pt3dadd( -100.135, -212.336, 23.2932, 1.66 ) }
    dend_50 { pt3dadd( -106.59, -222.374, 22.6182, 1.66 ) }
    dend_50 { pt3dadd( -113.71, -231.817, 24.524, 1.66 ) }
    dend_50 { pt3dadd( -121.484, -240.328, 27.9155, 1.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 46/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -0.617698, -23.855, 3.47703, 0.83 ) }
    dend_45 { pt3dadd( 0.234466, -26.0707, 2.02888, 0.83 ) }
    dend_45 { pt3dadd( 1.27621, -28.7793, 0.25857, 0.83 ) }
    dend_45 { pt3dadd( 1.76259, -30.0439, -0.567964, 0.83 ) }
    dend_45 { pt3dadd( 2.7281, -32.5543, -2.20871, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 51/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -14.5543, -15.134, -5.20209, 0.83 ) }
    dend_40 { pt3dadd( -16.0532, -17.088, -6.27603, 0.83 ) }
    dend_40 { pt3dadd( -16.5808, -18.0148, -6.56056, 0.83 ) }
    dend_40 { pt3dadd( -17.0224, -19.0136, -6.73997, 0.83 ) }
    dend_40 { pt3dadd( -17.7476, -20.6539, -7.03459, 1.94 ) }
    dend_40 { pt3dadd( -18.6168, -22.6197, -7.3877, 0.55 ) }
    dend_40 { pt3dadd( -19.6241, -24.8979, -7.7969, 0.55 ) }
    dend_40 { pt3dadd( -19.9915, -25.9116, -7.8283, 0.55 ) }
    dend_40 { pt3dadd( -20.6021, -27.8899, -7.81016, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 60/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -14.5543, -15.134, -5.20209, 0.83 ) }
    dend_33 { pt3dadd( -15.7174, -17.0165, -5.69779, 0.83 ) }
    dend_33 { pt3dadd( -17.1329, -18.7862, -5.92223, 0.55 ) }
    dend_33 { pt3dadd( -19.2986, -21.2279, -5.96305, 0.55 ) }
    dend_33 { pt3dadd( -21.6752, -23.6257, -5.86857, 0.55 ) }
    dend_33 { pt3dadd( -23.979, -25.7219, -5.62667, 0.55 ) }
    dend_33 { pt3dadd( -26.33, -27.7045, -5.30415, 0.55 ) }
    dend_33 { pt3dadd( -30.7678, -30.6838, -4.63666, 0.55 ) }
    dend_33 { pt3dadd( -32.5503, -31.6314, -4.28614, 0.28 ) }
    dend_33 { pt3dadd( -34.6842, -32.5521, -3.7229, 0.55 ) }
    dend_33 { pt3dadd( -36.6999, -33.1641, -3.07663, 0.55 ) }
    dend_33 { pt3dadd( -37.8621, -33.4105, -2.7176, 0.55 ) }
    dend_33 { pt3dadd( -39.9291, -33.6664, -2.13408, 0.55 ) }
    dend_33 { pt3dadd( -41.8769, -33.8246, -1.87468, 0.28 ) }
    dend_33 { pt3dadd( -42.5021, -33.8298, -1.82653, 0.28 ) }
    dend_33 { pt3dadd( -44.6862, -33.7779, -1.76831, 0.83 ) }
    dend_33 { pt3dadd( -47.8159, -33.756, -2.16779, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 77/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 0.997955, -13.6021, -2.31775, 1.11 ) }
    dend_20 { pt3dadd( -2.0356, -13.5715, -1.15742, 1.11 ) }
    dend_20 { pt3dadd( -3.36525, -13.5581, -0.648839, 0.83 ) }
    dend_20 { pt3dadd( -5.70221, -13.5345, 0.245043, 1.38 ) }
    dend_20 { pt3dadd( -10.2578, -13.4886, 1.9875, 0.83 ) }
    dend_20 { pt3dadd( -11.8351, -13.4727, 2.59082, 0.83 ) }
    dend_20 { pt3dadd( -14.714, -13.4436, 3.69201, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 84/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 0.997955, -13.6021, -2.31775, 1.11 ) }
    dend_15 { pt3dadd( 1.46635, -14.8374, -2.30718, 1.11 ) }
    dend_15 { pt3dadd( 2.33963, -17.0394, -2.33153, 1.11 ) }
    dend_15 { pt3dadd( 3.35598, -19.6592, -2.38163, 1.11 ) }
    dend_15 { pt3dadd( 4.44813, -22.4744, -2.43547, 1.11 ) }
    dend_15 { pt3dadd( 5.16402, -24.3197, -2.47076, 1.11 ) }
    dend_15 { pt3dadd( 5.95565, -26.3603, -2.50978, 1.11 ) }
    dend_15 { pt3dadd( 6.39812, -27.4927, -2.54216, 1.11 ) }
    dend_15 { pt3dadd( 7.37065, -29.9037, -2.64996, 1.38 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 93/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 9.80245, -6.48962, -1.17693, 0.55 ) }
    dend_9 { pt3dadd( 12.2719, -6.7611, 1.27284, 0.55 ) }
    dend_9 { pt3dadd( 15.558, -7.43459, 4.7387, 0.55 ) }
    dend_9 { pt3dadd( 18.412, -8.23741, 7.56634, 0.83 ) }
    dend_9 { pt3dadd( 20.0288, -8.74289, 9.03503, 0.83 ) }
    dend_9 { pt3dadd( 22.7082, -9.57499, 11.3527, 0.83 ) }
    dend_9 { pt3dadd( 25.5433, -10.3791, 13.8513, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_9 { pt3dadd( 27.3318, -10.8592, 15.6341, 0.55 ) }
    dend_9 { pt3dadd( 30.6443, -11.0947, 18.5208, 0.83 ) }
    dend_9 { pt3dadd( 31.589, -10.4284, 19.8549, 0.83 ) }
    dend_9 { pt3dadd( 32.3543, -9.01733, 21.457, 0.28 ) }
    dend_9 { pt3dadd( 33.1429, -7.35364, 23.0045, 0.83 ) }
    dend_9 { pt3dadd( 34.0127, -5.78698, 24.3863, 0.55 ) }
    dend_9 { pt3dadd( 34.5849, -4.9304, 25.1684, 0.55 ) }
    dend_9 { pt3dadd( 36.5096, -2.15538, 27.628, 0.55 ) }
    dend_9 { pt3dadd( 38.6172, 0.609352, 29.8694, 0.55 ) }
    dend_9 { pt3dadd( 39.7256, 1.8514, 30.7104, 0.55 ) }
    dend_9 { pt3dadd( 41.594, 3.7315, 31.9104, 0.55 ) }
    dend_9 { pt3dadd( 43.2879, 5.39944, 32.8939, 0.55 ) }
    dend_9 { pt3dadd( 45.2641, 7.23359, 33.8981, 0.55 ) }
    dend_9 { pt3dadd( 46.9085, 8.61725, 34.5768, 0.55 ) }
    dend_9 { pt3dadd( 48.7759, 10.2141, 35.31, 0.55 ) }
    dend_9 { pt3dadd( 51.942, 13.1013, 36.6267, 0.55 ) }
    dend_9 { pt3dadd( 53.7149, 14.8153, 37.3572, 0.55 ) }
    dend_9 { pt3dadd( 54.9024, 15.9792, 37.9146, 0.55 ) }
    dend_9 { pt3dadd( 56.7672, 17.5539, 39.0587, 0.55 ) }
    dend_9 { pt3dadd( 65.5762, 23.7792, 45.729, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 20/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 9.80245, -6.48962, -1.17693, 0.55 ) }
    dend_2 { pt3dadd( 10.2883, -7.53667, -1.18639, 0.55 ) }
    dend_2 { pt3dadd( 10.8247, -8.5653, -1.16415, 0.55 ) }
    dend_2 { pt3dadd( 11.4813, -9.86575, -1.06663, 0.55 ) }
    dend_2 { pt3dadd( 12.5283, -12.0301, -0.873828, 0.55 ) }
    dend_2 { pt3dadd( 13.1434, -13.2773, -0.760193, 0.55 ) }
    dend_2 { pt3dadd( 14.2598, -15.5608, -0.476609, 0.55 ) }
    dend_2 { pt3dadd( 14.8727, -16.8837, -0.244117, 0.55 ) }
    dend_2 { pt3dadd( 15.6171, -18.631, 0.165533, 0.55 ) }
    dend_2 { pt3dadd( 16.1702, -19.948, 0.50814, 0.55 ) }
    dend_2 { pt3dadd( 16.7123, -21.2728, 0.898699, 0.28 ) }
    dend_2 { pt3dadd( 17.3881, -22.9658, 1.38641, 0.83 ) }
    dend_2 { pt3dadd( 18.0153, -24.7613, 1.968, 0.83 ) }
    dend_2 { pt3dadd( 18.555, -26.4033, 2.53978, 1.11 ) }
    dend_2 { pt3dadd( 19.0986, -27.9249, 3.06952, 0.83 ) }
    dend_2 { pt3dadd( 19.9728, -30.4078, 3.97301, 0.83 ) }
    dend_2 { pt3dadd( 20.5785, -32.1967, 4.62246, 0.83 ) }
    dend_2 { pt3dadd( 21.4262, -34.5899, 5.43122, 0.55 ) }
    dend_2 { pt3dadd( 21.9117, -35.8879, 5.87888, 0.55 ) }
    dend_2 { pt3dadd( 22.6231, -37.6438, 6.52666, 0.55 ) }
    // Section: dend_63, id: dend_63, parent: dend_59 (entry count 40/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 52.8845, 11.23, 24.7377, 0.55 ) }
    dend_63 { pt3dadd( 57.5695, 13.9732, 32.5283, 0.55 ) }
    dend_63 { pt3dadd( 61.9656, 17.9097, 39.9523, 0.55 ) }
    dend_63 { pt3dadd( 66.8612, 21.0191, 47.4669, 0.55 ) }
    dend_63 { pt3dadd( 72.612, 23.7668, 54.5033, 0.55 ) }
    dend_63 { pt3dadd( 77.3221, 25.5733, 62.5525, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 46/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 52.8845, 11.23, 24.7377, 0.55 ) }
    dend_60 { pt3dadd( 57.6588, 12.8038, 33.0235, 0.55 ) }
    dend_60 { pt3dadd( 61.6962, 13.2634, 41.8273, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 49/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 55.7212, -119.502, 0.603951, 0.28 ) }
    dend_55 { pt3dadd( 56.8754, -121.455, 1.25991, 0.28 ) }
    dend_55 { pt3dadd( 57.674, -122.741, 1.63929, 0.28 ) }
    dend_55 { pt3dadd( 58.5348, -124.113, 2.06315, 0.83 ) }
    dend_55 { pt3dadd( 59.3215, -125.385, 2.45974, 0.28 ) }
    dend_55 { pt3dadd( 59.9422, -126.422, 2.76584, 0.55 ) }
    dend_55 { pt3dadd( 61.2855, -128.653, 3.39828, 0.28 ) }
    dend_55 { pt3dadd( 61.4983, -128.989, 3.48912, 0.55 ) }
    dend_55 { pt3dadd( 62.2552, -130.229, 3.57289, 0.28 ) }
    dend_55 { pt3dadd( 62.483, -130.618, 3.5308, 0.55 ) }
    dend_55 { pt3dadd( 63.4751, -132.5, 3.2267, 0.28 ) }
    dend_55 { pt3dadd( 63.7935, -133.213, 3.07117, 0.28 ) }
    dend_55 { pt3dadd( 64.0719, -133.95, 2.94545, 0.55 ) }
    dend_55 { pt3dadd( 65.3456, -137.792, 2.3806, 0.28 ) }
    dend_55 { pt3dadd( 65.7238, -139.056, 2.21061, 0.28 ) }
    dend_55 { pt3dadd( 66.2542, -141.059, 1.89385, 0.83 ) }
    dend_55 { pt3dadd( 67.0022, -144.652, 1.28079, 0.28 ) }
    dend_55 { pt3dadd( 67.4728, -147.268, 0.839349, 0.55 ) }
    dend_55 { pt3dadd( 67.6705, -148.564, 0.645938, 0.55 ) }
    dend_55 { pt3dadd( 67.7351, -149.049, 0.61078, 0.55 ) }
    dend_55 { pt3dadd( 68.0925, -151.872, 0.189303, 0.28 ) }
    dend_55 { pt3dadd( 68.1619, -152.465, 0.0162249, 0.55 ) }
    dend_55 { pt3dadd( 68.4958, -154.577, -0.921058, 0.28 ) }
    dend_55 { pt3dadd( 68.5508, -154.843, -1.08142, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 73/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 55.7212, -119.502, 0.603951, 0.28 ) }
    dend_54 { pt3dadd( 56.2933, -122.279, -5.59831, 0.28 ) }
    dend_54 { pt3dadd( 56.4116, -122.853, -6.88009, 0.28 ) }
    dend_54 { pt3dadd( 56.5523, -123.536, -8.40486, 0.55 ) }
    dend_54 { pt3dadd( 56.9923, -125.672, -13.1751, 0.28 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 78/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 2.7281, -32.5543, -2.20871, 0.83 ) }
    dend_47 { pt3dadd( 3.88308, -37.295, -2.27388, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 80/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 2.7281, -32.5543, -2.20871, 0.83 ) }
    dend_46 { pt3dadd( 4.58251, -32.6056, -3.18694, 0.83 ) }
    dend_46 { pt3dadd( 5.9623, -32.5841, -3.87283, 0.83 ) }
    dend_46 { pt3dadd( 8.3729, -32.566, -4.88858, 1.11 ) }
    dend_46 { pt3dadd( 11.6246, -32.5199, -6.61643, 0.83 ) }
    dend_46 { pt3dadd( 13.3394, -32.5556, -7.60379, 0.83 ) }
    dend_46 { pt3dadd( 15.0124, -32.5887, -8.61601, 0.83 ) }
    dend_46 { pt3dadd( 16.3515, -32.647, -9.5804, 0.55 ) }
    dend_46 { pt3dadd( 17.8214, -32.7845, -10.7209, 0.83 ) }
    dend_46 { pt3dadd( 21.2564, -33.1124, -13.3643, 0.55 ) }
    dend_46 { pt3dadd( 22.5911, -33.1489, -14.2706, 0.55 ) }
    dend_46 { pt3dadd( 24.6668, -33.1854, -15.6814, 0.55 ) }
    dend_46 { pt3dadd( 25.9261, -33.2301, -16.5509, 0.55 ) }
    dend_46 { pt3dadd( 27.3924, -33.3088, -17.5526, 0.83 ) }
    dend_46 { pt3dadd( 29.0696, -33.3654, -18.6256, 0.83 ) }
    dend_46 { pt3dadd( 30.3357, -33.4138, -19.2783, 0.55 ) }
    dend_46 { pt3dadd( 31.9454, -33.4451, -20.1152, 0.55 ) }
    dend_46 { pt3dadd( 33.5842, -33.5268, -20.9148, 0.55 ) }
    dend_46 { pt3dadd( 34.4243, -33.5608, -21.2998, 0.83 ) }
    dend_46 { pt3dadd( 35.6597, -33.6252, -21.9502, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_46 { pt3dadd( 36.6713, -33.7211, -22.6299, 0.83 ) }
    dend_46 { pt3dadd( 37.4363, -33.7946, -23.19, 0.28 ) }
    dend_46 { pt3dadd( 38.3346, -33.872, -23.8929, 0.83 ) }
    dend_46 { pt3dadd( 39.4033, -33.9631, -24.8704, 0.28 ) }
    dend_46 { pt3dadd( 40.5732, -34.0516, -26.058, 0.28 ) }
    dend_46 { pt3dadd( 42.0473, -34.1456, -27.626, 1.11 ) }
    dend_46 { pt3dadd( 43.4479, -34.2543, -29.1913, 0.28 ) }
    dend_46 { pt3dadd( 44.0558, -34.304, -29.955, 0.83 ) }
    dend_46 { pt3dadd( 46.4636, -34.4275, -32.9988, 0.28 ) }
    dend_46 { pt3dadd( 46.7725, -34.4432, -33.4093, 0.83 ) }
    dend_46 { pt3dadd( 47.7252, -34.4814, -34.5495, 0.28 ) }
    dend_46 { pt3dadd( 49.1167, -34.5899, -36.1307, 0.55 ) }
    dend_46 { pt3dadd( 51.1463, -34.8178, -38.3254, 0.83 ) }
    dend_46 { pt3dadd( 53.0993, -35.0853, -40.1877, 0.28 ) }
    dend_46 { pt3dadd( 55.3734, -35.4751, -42.2536, 0.55 ) }
    dend_46 { pt3dadd( 57.1982, -35.7906, -43.8778, 0.28 ) }
    dend_46 { pt3dadd( 58.6963, -36.0945, -45.1096, 0.83 ) }
    dend_46 { pt3dadd( 59.6609, -36.3007, -45.8667, 0.28 ) }
    dend_46 { pt3dadd( 60.571, -36.5191, -46.5231, 0.83 ) }
    dend_46 { pt3dadd( 63.3706, -37.2595, -48.3931, 0.28 ) }
    dend_46 { pt3dadd( 64.285, -37.4793, -48.9774, 0.28 ) }
    dend_46 { pt3dadd( 65.5736, -37.7711, -49.9318, 0.83 ) }
    dend_46 { pt3dadd( 68.6594, -38.3077, -52.1315, 0.28 ) }
    dend_46 { pt3dadd( 70.2901, -38.5782, -53.3577, 0.28 ) }
    dend_46 { pt3dadd( 71.8644, -38.8856, -54.5533, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 25/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -20.6021, -27.8899, -7.81016, 0.55 ) }
    dend_42 { pt3dadd( -22.6974, -27.9885, -8.81589, 0.55 ) }
    dend_42 { pt3dadd( -25.179, -27.9931, -10.0309, 0.83 ) }
    dend_42 { pt3dadd( -27.7182, -27.932, -11.2456, 0.28 ) }
    dend_42 { pt3dadd( -29.887, -27.897, -12.2427, 0.55 ) }
    dend_42 { pt3dadd( -32.0364, -27.8965, -13.2446, 0.28 ) }
    dend_42 { pt3dadd( -32.7463, -27.9007, -13.5749, 0.55 ) }
    dend_42 { pt3dadd( -33.8484, -27.9443, -14.1114, 0.55 ) }
    dend_42 { pt3dadd( -35.6287, -28.0405, -14.9204, 0.55 ) }
    dend_42 { pt3dadd( -36.7263, -28.101, -15.3418, 0.55 ) }
    dend_42 { pt3dadd( -39.287, -28.2849, -16.2774, 0.55 ) }
    dend_42 { pt3dadd( -40.3258, -28.4277, -16.6302, 0.55 ) }
    dend_42 { pt3dadd( -42.6349, -28.9129, -17.3346, 0.55 ) }
    dend_42 { pt3dadd( -46.0725, -29.8031, -18.2746, 1.11 ) }
    dend_42 { pt3dadd( -48.0314, -30.3935, -18.7416, 0.28 ) }
    dend_42 { pt3dadd( -48.7542, -30.616, -18.9024, 0.55 ) }
    dend_42 { pt3dadd( -50.1737, -31.0384, -19.1788, 0.28 ) }
    dend_42 { pt3dadd( -52.1714, -31.5665, -19.5831, 0.83 ) }
    dend_42 { pt3dadd( -54.0262, -31.9001, -19.9571, 0.55 ) }
    dend_42 { pt3dadd( -55.7535, -32.0038, -20.2999, 0.83 ) }
    dend_42 { pt3dadd( -57.7844, -31.7595, -20.8244, 0.55 ) }
    dend_42 { pt3dadd( -59.1417, -31.4786, -21.6718, 0.28 ) }
    dend_42 { pt3dadd( -59.9784, -31.2649, -22.4244, 0.55 ) }
    dend_42 { pt3dadd( -60.7693, -31.2197, -23.6356, 0.28 ) }
    dend_42 { pt3dadd( -61.1082, -31.2958, -24.3136, 0.83 ) }
    dend_42 { pt3dadd( -61.6907, -31.5198, -25.5791, 0.83 ) }
    dend_42 { pt3dadd( -64.6057, -33.0503, -31.7936, 0.28 ) }
    dend_42 { pt3dadd( -64.9884, -33.4309, -33.1372, 0.55 ) }
    dend_42 { pt3dadd( -65.4986, -31.9662, -27.877, 0.28 ) }
    dend_42 { pt3dadd( -66.1609, -31.6715, -26.5871, 0.55 ) }
    dend_42 { pt3dadd( -67.5823, -31.3423, -24.6594, 0.28 ) }
    dend_42 { pt3dadd( -68.4864, -31.1623, -23.5935, 0.55 ) }
    dend_42 { pt3dadd( -80.2365, -28.781, -10.7385, 0.55 ) }
    dend_42 { pt3dadd( -81.359, -28.5264, -9.5487, 0.28 ) }
    dend_42 { pt3dadd( -82.1842, -28.3279, -8.72275, 0.55 ) }
    dend_42 { pt3dadd( -83.4686, -28.0546, -7.49048, 0.28 ) }
    dend_42 { pt3dadd( -85.4243, -27.7097, -5.68158, 0.83 ) }
    dend_42 { pt3dadd( -87.5961, -27.3982, -4.01549, 0.28 ) }
    dend_42 { pt3dadd( -89.5438, -27.3975, -3.80597, 0.55 ) }
    dend_42 { pt3dadd( -92.5747, -27.3623, -3.41784, 0.55 ) }
    dend_42 { pt3dadd( -94.0406, -27.3005, -3.23031, 0.83 ) }
    dend_42 { pt3dadd( -95.1515, -27.2461, -3.10278, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 67/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -20.6021, -27.8899, -7.81016, 0.55 ) }
    dend_41 { pt3dadd( -20.5349, -29.803, -7.82944, 0.55 ) }
    dend_41 { pt3dadd( -20.5062, -32.3843, -7.88486, 0.83 ) }
    dend_41 { pt3dadd( -20.5826, -35.4963, -7.86091, 0.55 ) }
    dend_41 { pt3dadd( -20.8618, -39.3451, -7.71666, 0.83 ) }
    dend_41 { pt3dadd( -21.465, -44.6307, -7.34448, 0.55 ) }
    dend_41 { pt3dadd( -21.7112, -46.1941, -7.18961, 0.28 ) }
    dend_41 { pt3dadd( -22.1377, -48.0509, -6.98852, 0.28 ) }
    dend_41 { pt3dadd( -22.7616, -50.2469, -6.7101, 0.28 ) }
    dend_41 { pt3dadd( -23.74, -53.2118, -6.18936, 0.83 ) }
    dend_41 { pt3dadd( -24.5621, -55.3981, -5.68665, 0.28 ) }
    dend_41 { pt3dadd( -25.8646, -58.558, -4.75439, 2.22 ) }
    dend_41 { pt3dadd( -27.489, -62.4255, -3.69284, 0.28 ) }
    dend_41 { pt3dadd( -28.2324, -64.1708, -3.25155, 0.83 ) }
    dend_41 { pt3dadd( -29.2095, -66.432, -2.7531, 0.28 ) }
    dend_41 { pt3dadd( -29.8409, -67.8854, -2.46548, 0.28 ) }
    dend_41 { pt3dadd( -30.3399, -68.9624, -2.28642, 0.55 ) }
    dend_41 { pt3dadd( -31.4774, -71.3287, -2.03913, 0.28 ) }
    dend_41 { pt3dadd( -31.8179, -72.0197, -1.99987, 0.55 ) }
    dend_41 { pt3dadd( -33.1364, -74.6567, -1.96932, 0.28 ) }
    dend_41 { pt3dadd( -33.9482, -76.5208, -2.19375, 0.55 ) }
    dend_41 { pt3dadd( -34.8274, -78.8089, -2.60364, 0.55 ) }
    dend_41 { pt3dadd( -36.0209, -82.2611, -3.34224, 0.28 ) }
    dend_41 { pt3dadd( -36.3705, -83.3349, -3.59999, 0.28 ) }
    dend_41 { pt3dadd( -37.1832, -85.9217, -4.24735, 0.83 ) }
    dend_41 { pt3dadd( -38.9618, -91.5687, -5.50103, 0.28 ) }
    dend_41 { pt3dadd( -39.5329, -93.3867, -5.85469, 0.83 ) }
    dend_41 { pt3dadd( -40.362, -96.0896, -6.2966, 0.28 ) }
    dend_41 { pt3dadd( -40.7048, -97.128, -6.44485, 0.55 ) }
    dend_41 { pt3dadd( -42.0494, -100.954, -6.92832, 0.28 ) }
    dend_41 { pt3dadd( -42.8762, -103.635, -7.41155, 0.55 ) }
    dend_41 { pt3dadd( -44.2149, -107.257, -7.92929, 0.28 ) }
    dend_41 { pt3dadd( -44.4829, -108.084, -8.13537, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_41 { pt3dadd( -45.141, -110.447, -8.89386, 0.28 ) }
    dend_41 { pt3dadd( -45.41, -111.585, -9.27284, 0.55 ) }
    dend_41 { pt3dadd( -46.6181, -118.046, -11.6106, 0.28 ) }
    dend_41 { pt3dadd( -47.2001, -121.806, -13.1026, 0.55 ) }
    dend_41 { pt3dadd( -47.8291, -126.02, -14.6383, 0.28 ) }
    dend_41 { pt3dadd( -48.0091, -127.526, -15.1628, 0.55 ) }
    dend_41 { pt3dadd( -48.2812, -129.981, -15.7645, 0.28 ) }
    dend_41 { pt3dadd( -48.4088, -130.838, -15.8639, 0.55 ) }
    dend_41 { pt3dadd( -48.842, -132.682, -15.6982, 0.28 ) }
    dend_41 { pt3dadd( -49.0066, -133.513, -15.6181, 0.55 ) }
    dend_41 { pt3dadd( -49.7636, -136.336, -15.0207, 0.28 ) }
    dend_41 { pt3dadd( -50.5276, -138.567, -14.5009, 0.55 ) }
    dend_41 { pt3dadd( -51.4344, -140.677, -13.9802, 0.28 ) }
    dend_41 { pt3dadd( -51.9342, -141.706, -13.647, 0.55 ) }
    dend_41 { pt3dadd( -52.5309, -142.918, -13.2368, 0.28 ) }
    dend_41 { pt3dadd( -52.8434, -143.58, -13.0174, 0.55 ) }
    dend_41 { pt3dadd( -54.0765, -146.069, -12.2126, 0.28 ) }
    dend_41 { pt3dadd( -55.1828, -148.6, -11.7126, 0.55 ) }
    dend_41 { pt3dadd( -56.2597, -151.512, -11.2646, 0.28 ) }
    dend_41 { pt3dadd( -56.9449, -153.43, -11.0168, 0.55 ) }
    dend_41 { pt3dadd( -57.5692, -155.257, -10.9594, 0.55 ) }
    dend_41 { pt3dadd( -57.9977, -156.558, -10.9868, 0.55 ) }
    dend_41 { pt3dadd( -59.4932, -161.225, -11.4742, 0.28 ) }
    dend_41 { pt3dadd( -61.277, -166.261, -12.2085, 0.28 ) }
    dend_41 { pt3dadd( -62.4296, -169.125, -12.5979, 0.83 ) }
    dend_41 { pt3dadd( -65.1479, -175.194, -13.2841, 0.28 ) }
    dend_41 { pt3dadd( -65.9146, -176.76, -13.4552, 0.55 ) }
    dend_41 { pt3dadd( -67.7644, -180.271, -13.8025, 0.28 ) }
    dend_41 { pt3dadd( -69.2458, -182.76, -13.9876, 1.11 ) }
    dend_41 { pt3dadd( -71.4533, -186.167, -14.1189, 0.28 ) }
    dend_41 { pt3dadd( -71.9281, -186.863, -14.0078, 0.55 ) }
    dend_41 { pt3dadd( -73.0353, -188.349, -13.3463, 0.28 ) }
    dend_41 { pt3dadd( -73.7778, -189.377, -12.8013, 0.55 ) }
    dend_41 { pt3dadd( -75.0176, -191.109, -11.7365, 0.28 ) }
    dend_41 { pt3dadd( -75.8196, -192.287, -11.0844, 0.55 ) }
    dend_41 { pt3dadd( -78.1314, -195.76, -9.36549, 0.28 ) }
    dend_41 { pt3dadd( -78.6965, -196.737, -8.93059, 0.55 ) }
    dend_41 { pt3dadd( -79.5208, -198.415, -8.22798, 0.28 ) }
    dend_41 { pt3dadd( -80.0671, -199.825, -7.64566, 0.55 ) }
    dend_41 { pt3dadd( -81.4202, -204.21, -5.92506, 0.28 ) }
    dend_41 { pt3dadd( -81.5447, -204.961, -5.70914, 0.83 ) }
    dend_41 { pt3dadd( -81.9949, -209.584, -4.70488, 0.28 ) }
    dend_41 { pt3dadd( -82.0932, -211.192, -4.38379, 0.55 ) }
    dend_41 { pt3dadd( -82.2258, -214.278, -3.79823, 0.28 ) }
    dend_41 { pt3dadd( -82.2767, -216.212, -3.49285, 0.55 ) }
    dend_41 { pt3dadd( -82.5023, -224.415, -2.50925, 0.28 ) }
    dend_41 { pt3dadd( -82.6451, -227.2, -2.3416, 0.83 ) }
    dend_41 { pt3dadd( -82.9536, -230.978, -2.33694, 0.28 ) }
    dend_41 { pt3dadd( -83.0785, -232.071, -2.39965, 0.55 ) }
    dend_41 { pt3dadd( -83.4478, -234.831, -2.77807, 0.28 ) }
    dend_41 { pt3dadd( -83.6622, -236.199, -3.0072, 0.55 ) }
    dend_41 { pt3dadd( -84.5245, -240.531, -3.85051, 0.28 ) }
    dend_41 { pt3dadd( -84.5745, -240.9, -3.96962, 0.55 ) }
    dend_41 { pt3dadd( -84.8163, -243.202, -4.7175, 0.28 ) }
    dend_41 { pt3dadd( -84.9962, -245.284, -5.33257, 0.83 ) }
    dend_41 { pt3dadd( -85.276, -248.373, -5.96652, 0.28 ) }
    dend_41 { pt3dadd( -85.3578, -249.225, -6.03605, 0.55 ) }
    dend_41 { pt3dadd( -86.1775, -256.696, -5.92226, 0.28 ) }
    dend_41 { pt3dadd( -86.623, -260.887, -5.76684, 0.28 ) }
    dend_41 { pt3dadd( -86.7663, -262.282, -5.62493, 0.55 ) }
    dend_41 { pt3dadd( -87.2407, -265.8, -4.74227, 0.28 ) }
    dend_41 { pt3dadd( -87.4226, -266.788, -4.20462, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 62/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -47.8159, -33.756, -2.16779, 0.55 ) }
    dend_37 { pt3dadd( -48.9786, -34.0181, -3.97065, 0.55 ) }
    dend_37 { pt3dadd( -49.5873, -34.2009, -4.90804, 0.55 ) }
    dend_37 { pt3dadd( -50.7161, -34.5741, -6.48781, 0.55 ) }
    dend_37 { pt3dadd( -52.5567, -35.0783, -8.795, 0.55 ) }
    dend_37 { pt3dadd( -55.0521, -35.6169, -11.73, 0.55 ) }
    dend_37 { pt3dadd( -57.6393, -36.014, -14.6059, 0.28 ) }
    dend_37 { pt3dadd( -58.8346, -36.1395, -15.9628, 0.28 ) }
    dend_37 { pt3dadd( -60.361, -36.2172, -17.4664, 0.55 ) }
    dend_37 { pt3dadd( -62.2577, -36.1892, -18.9197, 0.28 ) }
    dend_37 { pt3dadd( -63.1048, -36.218, -19.6648, 0.55 ) }
    dend_37 { pt3dadd( -64.0485, -36.3064, -20.5979, 0.28 ) }
    dend_37 { pt3dadd( -64.9895, -36.4561, -21.676, 0.83 ) }
    dend_37 { pt3dadd( -66.7567, -36.851, -24.0885, 0.28 ) }
    dend_37 { pt3dadd( -67.5057, -37.1074, -25.2967, 0.55 ) }
    dend_37 { pt3dadd( -71.759, -39.3033, -33.1396, 0.55 ) }
    dend_37 { pt3dadd( -72.1425, -39.5539, -33.9158, 0.55 ) }
    dend_37 { pt3dadd( -72.7408, -40.0471, -35.3201, 0.55 ) }
    dend_37 { pt3dadd( -73.1638, -40.4883, -36.5825, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 81/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -47.8159, -33.756, -2.16779, 0.83 ) }
    dend_34 { pt3dadd( -48.9426, -33.0251, -2.63298, 0.83 ) }
    dend_34 { pt3dadd( -50.4119, -32.072, -3.23965, 1.11 ) }
    dend_34 { pt3dadd( -52.1658, -30.9343, -3.96379, 1.11 ) }
    dend_34 { pt3dadd( -54.3947, -29.4884, -4.88407, 0.28 ) }
    dend_34 { pt3dadd( -56.3664, -28.2094, -5.69814, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 87/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -14.714, -13.4436, 3.69201, 0.83 ) }
    dend_24 { pt3dadd( -15.5717, -11.2091, 4.31612, 0.83 ) }
    dend_24 { pt3dadd( -16.4594, -9.28431, 4.81179, 0.83 ) }
    dend_24 { pt3dadd( -18.5607, -5.72228, 5.78296, 0.83 ) }
    dend_24 { pt3dadd( -20.5389, -2.80759, 6.80241, 0.83 ) }
    dend_24 { pt3dadd( -22.5716, -0.169746, 7.8677, 0.83 ) }
    dend_24 { pt3dadd( -24.0524, 1.58238, 8.61678, 0.83 ) }
    dend_24 { pt3dadd( -25.6238, 2.97712, 9.35011, 0.83 ) }
    dend_24 { pt3dadd( -28.3345, 4.77792, 10.536, 0.83 ) }
    dend_24 { pt3dadd( -31.0024, 6.05249, 11.5856, 0.83 ) }
    dend_24 { pt3dadd( -32.3426, 6.58324, 12.0395, 0.83 ) }
    dend_24 { pt3dadd( -34.7858, 7.50214, 12.909, 0.83 ) }
    dend_24 { pt3dadd( -37.5391, 8.64195, 13.9116, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_24 { pt3dadd( -38.8692, 9.22693, 14.3681, 0.83 ) }
    dend_24 { pt3dadd( -40.9296, 10.2174, 14.9714, 0.83 ) }
    dend_24 { pt3dadd( -42.1873, 10.8548, 15.2501, 0.28 ) }
    dend_24 { pt3dadd( -44.162, 11.9903, 15.7255, 0.55 ) }
    dend_24 { pt3dadd( -45.8236, 13.045, 16.1728, 0.28 ) }
    dend_24 { pt3dadd( -47.7318, 14.7197, 16.6998, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 6/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -14.714, -13.4436, 3.69201, 0.83 ) }
    dend_21 { pt3dadd( -16.2136, -13.6567, 3.23485, 0.83 ) }
    dend_21 { pt3dadd( -18.0005, -14.0231, 2.78399, 0.83 ) }
    dend_21 { pt3dadd( -19.2758, -14.3647, 2.30556, 0.83 ) }
    dend_21 { pt3dadd( -21.8922, -15.2439, 1.13904, 0.83 ) }
    dend_21 { pt3dadd( -24.4397, -16.1597, -0.0397491, 0.83 ) }
    dend_21 { pt3dadd( -25.5312, -16.5521, -0.544808, 0.83 ) }
    dend_21 { pt3dadd( -27.3602, -17.1397, -1.46705, 0.83 ) }
    dend_21 { pt3dadd( -30.3329, -17.9995, -3.03776, 0.55 ) }
    dend_21 { pt3dadd( -31.1687, -18.3299, -3.57443, 0.55 ) }
    dend_21 { pt3dadd( -31.9991, -18.9383, -4.27247, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 17/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 7.37065, -29.9037, -2.64996, 0.83 ) }
    dend_17 { pt3dadd( 8.10484, -31.9483, -2.39811, 0.83 ) }
    dend_17 { pt3dadd( 8.86596, -34.1535, -2.11219, 1.11 ) }
    dend_17 { pt3dadd( 9.38578, -35.9232, -1.9077, 0.83 ) }
    dend_17 { pt3dadd( 9.76754, -37.1774, -1.76661, 0.55 ) }
    dend_17 { pt3dadd( 9.98345, -37.8346, -1.69419, 0.83 ) }
    dend_17 { pt3dadd( 10.7854, -40.3985, -1.43682, 0.83 ) }
    dend_17 { pt3dadd( 11.2054, -41.7926, -1.27326, 0.83 ) }
    dend_17 { pt3dadd( 11.9252, -44.3191, -0.98122, 0.83 ) }
    dend_17 { pt3dadd( 12.3303, -45.9051, -0.792415, 0.55 ) }
    dend_17 { pt3dadd( 12.8432, -48.0455, -0.568922, 0.55 ) }
    dend_17 { pt3dadd( 13.3548, -50.2658, -0.344456, 0.55 ) }
    dend_17 { pt3dadd( 13.9239, -52.989, -0.100213, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 30/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.37065, -29.9037, -2.64996, 0.83 ) }
    dend_16 { pt3dadd( 10.1448, -31.8261, -2.46281, 0.83 ) }
    dend_16 { pt3dadd( 11.919, -33.2611, -2.59115, 0.83 ) }
    dend_16 { pt3dadd( 13.7144, -34.9202, -2.82983, 0.55 ) }
    dend_16 { pt3dadd( 15.145, -36.3735, -3.08216, 0.83 ) }
    dend_16 { pt3dadd( 16.8599, -38.3884, -3.47916, 0.83 ) }
    dend_16 { pt3dadd( 18.2777, -40.2379, -3.82372, 0.83 ) }
    dend_16 { pt3dadd( 19.9625, -42.7517, -4.48808, 0.55 ) }
    dend_16 { pt3dadd( 21.0978, -44.6194, -4.92513, 0.55 ) }
    dend_16 { pt3dadd( 21.3989, -45.1652, -5.09656, 0.83 ) }
    dend_16 { pt3dadd( 22.0975, -46.8037, -5.67238, 0.55 ) }
    dend_16 { pt3dadd( 22.459, -47.8531, -6.08734, 0.55 ) }
    dend_16 { pt3dadd( 23.0936, -49.6821, -6.8562, 1.11 ) }
    dend_16 { pt3dadd( 23.7004, -51.2856, -7.5778, 1.11 ) }
    dend_16 { pt3dadd( 24.8624, -54.2436, -9.08486, 0.55 ) }
    dend_16 { pt3dadd( 25.6363, -55.93, -10.0005, 1.11 ) }
    dend_16 { pt3dadd( 26.8349, -58.26, -11.3182, 0.55 ) }
    dend_16 { pt3dadd( 26.9921, -58.5913, -11.505, 0.83 ) }
    dend_16 { pt3dadd( 28.2019, -61.3472, -12.9808, 0.28 ) }
    dend_16 { pt3dadd( 28.3609, -61.6831, -13.1571, 0.55 ) }
    dend_16 { pt3dadd( 29.2238, -63.268, -13.8266, 0.28 ) }
    dend_16 { pt3dadd( 29.7237, -64.1387, -14.1171, 0.83 ) }
    dend_16 { pt3dadd( 30.6465, -65.7735, -14.4824, 0.55 ) }
    dend_16 { pt3dadd( 31.3381, -67.1721, -14.6943, 0.83 ) }
    dend_16 { pt3dadd( 32.157, -69.0326, -14.8572, 0.28 ) }
    dend_16 { pt3dadd( 32.7987, -70.5959, -15.0051, 0.83 ) }
    dend_16 { pt3dadd( 33.8301, -73.1669, -15.1134, 0.28 ) }
    dend_16 { pt3dadd( 34.8387, -75.4081, -15.1287, 0.83 ) }
    dend_16 { pt3dadd( 35.5707, -76.8878, -15.0249, 0.28 ) }
    dend_16 { pt3dadd( 36.0767, -77.8813, -14.8874, 0.28 ) }
    dend_16 { pt3dadd( 36.8947, -79.363, -14.6464, 0.83 ) }
    dend_16 { pt3dadd( 38.4218, -81.8479, -14.2875, 0.28 ) }
    dend_16 { pt3dadd( 39.8118, -83.8271, -14.0121, 0.55 ) }
    dend_16 { pt3dadd( 41.0371, -85.4847, -13.6743, 0.28 ) }
    dend_16 { pt3dadd( 42.56, -87.4659, -13.2037, 0.28 ) }
    dend_16 { pt3dadd( 43.6144, -88.8646, -12.86, 0.55 ) }
    dend_16 { pt3dadd( 44.3542, -89.8865, -12.6181, 0.28 ) }
    dend_16 { pt3dadd( 45.0697, -90.9751, -12.4011, 0.55 ) }
    dend_16 { pt3dadd( 46.2115, -92.813, -11.9965, 0.28 ) }
    dend_16 { pt3dadd( 46.9938, -94.183, -11.7108, 1.38 ) }
    dend_16 { pt3dadd( 48.6292, -97.1796, -11.3787, 0.28 ) }
    dend_16 { pt3dadd( 49.1263, -98.1201, -11.3476, 0.55 ) }
    dend_16 { pt3dadd( 50.0412, -99.8659, -11.4064, 0.28 ) }
    dend_16 { pt3dadd( 50.8934, -101.517, -11.6221, 0.28 ) }
    dend_16 { pt3dadd( 51.9374, -103.586, -12.0253, 1.11 ) }
    dend_16 { pt3dadd( 53.964, -107.788, -12.7272, 0.28 ) }
    dend_16 { pt3dadd( 55.2406, -110.516, -13.1403, 0.28 ) }
    dend_16 { pt3dadd( 55.7254, -111.611, -13.2064, 0.83 ) }
    dend_16 { pt3dadd( 57.2048, -114.978, -13.4392, 0.28 ) }
    dend_16 { pt3dadd( 57.7984, -116.352, -13.4974, 0.55 ) }
    dend_16 { pt3dadd( 59.3211, -119.764, -13.4276, 0.28 ) }
    dend_16 { pt3dadd( 59.556, -120.313, -13.3672, 0.83 ) }
    dend_16 { pt3dadd( 61.1528, -124.125, -13.0444, 0.28 ) }
    dend_16 { pt3dadd( 62.965, -128.274, -12.7433, 0.55 ) }
    dend_16 { pt3dadd( 63.4516, -129.471, -12.5089, 0.28 ) }
    dend_16 { pt3dadd( 63.7039, -130.054, -12.3701, 0.55 ) }
    dend_16 { pt3dadd( 64.2758, -131.342, -12.014, 0.55 ) }
    dend_16 { pt3dadd( 64.9244, -132.776, -11.5293, 0.55 ) }
    dend_16 { pt3dadd( 65.8757, -134.776, -10.7013, 0.55 ) }
    dend_16 { pt3dadd( 67.6604, -138.679, -8.72874, 0.28 ) }
    dend_16 { pt3dadd( 68.6153, -140.657, -7.72804, 0.28 ) }
    dend_16 { pt3dadd( 68.8763, -141.178, -7.45744, 0.83 ) }
    dend_16 { pt3dadd( 69.9161, -143.036, -6.42945, 0.28 ) }
    dend_16 { pt3dadd( 70.4311, -143.838, -5.97472, 0.55 ) }
    dend_16 { pt3dadd( 71.8502, -145.963, -5.01397, 0.28 ) }
    dend_16 { pt3dadd( 72.0229, -146.187, -4.97499, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 65.5762, 23.7792, 45.729, 0.55 ) }
    dend_13 { pt3dadd( 74.4585, 28.9802, 52.6198, 0.55 ) }
    dend_13 { pt3dadd( 82.322, 33.969, 60.7876, 0.55 ) }
    dend_13 { pt3dadd( 90.4986, 37.5029, 69.4356, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_13 { pt3dadd( 97.5961, 39.19, 79.5081, 0.55 ) }
    dend_13 { pt3dadd( 106.574, 40.3314, 88.0495, 0.55 ) }
    dend_13 { pt3dadd( 115.564, 43.0422, 96.1919, 0.55 ) }
    dend_13 { pt3dadd( 123.436, 46.9212, 104.965, 0.55 ) }
    dend_13 { pt3dadd( 131.213, 51.5436, 113.436, 0.55 ) }
    dend_13 { pt3dadd( 140.086, 56.4776, 120.541, 0.55 ) }
    dend_13 { pt3dadd( 149.126, 62.4014, 126.562, 0.55 ) }
    dend_13 { pt3dadd( 157.135, 67.3516, 134.614, 0.55 ) }
    dend_13 { pt3dadd( 164.438, 73.587, 142.388, 0.55 ) }
    dend_13 { pt3dadd( 170.014, 80.2141, 151.175, 0.55 ) }
    dend_13 { pt3dadd( 175.601, 85.9935, 160.565, 0.55 ) }
    dend_13 { pt3dadd( 180.128, 90.9096, 170.984, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 12/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 65.5762, 23.7792, 45.729, 0.55 ) }
    dend_10 { pt3dadd( 74.0762, 27.535, 54.9339, 0.55 ) }
    dend_10 { pt3dadd( 81.107, 31.9516, 65.0275, 0.55 ) }
    dend_10 { pt3dadd( 87.798, 38.0948, 74.3738, 0.55 ) }
    dend_10 { pt3dadd( 95.4344, 45.0103, 82.3212, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 17/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 22.6231, -37.6438, 6.52666, 0.55 ) }
    dend_6 { pt3dadd( 23.3779, -38.8195, 6.23514, 0.55 ) }
    dend_6 { pt3dadd( 23.7656, -39.4361, 6.06779, 0.55 ) }
    dend_6 { pt3dadd( 24.7472, -41.0503, 5.62804, 0.55 ) }
    dend_6 { pt3dadd( 26.3589, -43.596, 4.89912, 0.55 ) }
    dend_6 { pt3dadd( 27.15, -44.8019, 4.55313, 0.55 ) }
    dend_6 { pt3dadd( 28.1887, -46.4384, 4.10685, 0.28 ) }
    dend_6 { pt3dadd( 28.7177, -47.3141, 3.88786, 0.83 ) }
    dend_6 { pt3dadd( 29.3176, -48.2662, 3.67243, 0.83 ) }
    dend_6 { pt3dadd( 30.4268, -49.9766, 3.27499, 0.55 ) }
    dend_6 { pt3dadd( 31.3854, -51.4695, 2.94214, 0.55 ) }
    dend_6 { pt3dadd( 32.3117, -52.9788, 2.66409, 0.55 ) }
    dend_6 { pt3dadd( 32.9271, -53.9822, 2.54989, 0.28 ) }
    dend_6 { pt3dadd( 33.4147, -54.7417, 2.46802, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 22.6231, -37.6438, 6.52666, 0.55 ) }
    dend_3 { pt3dadd( 22.6927, -39.5526, 6.49361, 0.55 ) }
    dend_3 { pt3dadd( 22.8192, -41.2734, 6.46756, 0.55 ) }
    dend_3 { pt3dadd( 22.9928, -43.0812, 6.93587, 0.55 ) }
    dend_3 { pt3dadd( 23.1588, -44.5424, 7.48091, 0.55 ) }
    dend_3 { pt3dadd( 23.3286, -46.1102, 8.19204, 0.28 ) }
    dend_3 { pt3dadd( 23.435, -47.236, 8.74006, 0.55 ) }
    dend_3 { pt3dadd( 23.5326, -47.9858, 9.19427, 0.55 ) }
    dend_3 { pt3dadd( 24.0895, -52.5459, 12.2714, 0.28 ) }
    dend_3 { pt3dadd( 24.1072, -52.8364, 12.4717, 0.55 ) }
    dend_3 { pt3dadd( 24.1085, -54.0076, 13.2167, 0.28 ) }
    dend_3 { pt3dadd( 24.1202, -54.6849, 13.5839, 0.55 ) }
    dend_3 { pt3dadd( 24.1061, -56.2452, 14.3783, 0.28 ) }
    dend_3 { pt3dadd( 24.041, -57.6041, 14.9173, 0.28 ) }
    dend_3 { pt3dadd( 23.9264, -59.2432, 15.118, 0.55 ) }
    dend_3 { pt3dadd( 23.7993, -60.9556, 15.2784, 0.55 ) }
    dend_3 { pt3dadd( 23.6951, -62.6743, 15.3289, 0.55 ) }
    dend_3 { pt3dadd( 24.6787, -70.8409, 18.6632, 0.55 ) }
    dend_3 { pt3dadd( 26.0821, -79.1888, 21.2977, 0.55 ) }
    dend_3 { pt3dadd( 28.4689, -87.6067, 22.6899, 0.55 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 51/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 77.3221, 25.5733, 62.5525, 0.55 ) }
    dend_65 { pt3dadd( 82.5796, 25.6117, 70.7625, 0.55 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 53/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 77.3221, 25.5733, 62.5525, 0.55 ) }
    dend_64 { pt3dadd( 83.3869, 32.975, 68.2632, 0.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 55/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 61.6962, 13.2634, 41.8273, 0.55 ) }
    dend_62 { pt3dadd( 67.3513, 13.4413, 52.1941, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 61.6962, 13.2634, 41.8273, 0.55 ) }
    dend_61 { pt3dadd( 65.9001, 14.6417, 50.1747, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 59/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 3.88308, -37.295, -2.27388, 0.83 ) }
    dend_49 { pt3dadd( 5.43778, -38.7706, -2.73203, 0.83 ) }
    dend_49 { pt3dadd( 7.34887, -40.5927, -3.20383, 0.83 ) }
    dend_49 { pt3dadd( 8.25372, -41.495, -3.45324, 0.28 ) }
    dend_49 { pt3dadd( 9.5058, -42.8944, -3.82975, 0.55 ) }
    dend_49 { pt3dadd( 10.2951, -43.8276, -4.07591, 0.83 ) }
    dend_49 { pt3dadd( 11.1989, -44.9306, -4.38255, 0.28 ) }
    dend_49 { pt3dadd( 11.6738, -45.5514, -4.52653, 0.55 ) }
    dend_49 { pt3dadd( 12.7878, -47.0448, -4.79532, 0.28 ) }
    dend_49 { pt3dadd( 13.6668, -48.3187, -5.01873, 1.11 ) }
    dend_49 { pt3dadd( 14.351, -49.4001, -5.24012, 1.11 ) }
    dend_49 { pt3dadd( 15.295, -50.9113, -5.59307, 0.28 ) }
    dend_49 { pt3dadd( 16.0652, -52.1126, -5.93602, 0.83 ) }
    dend_49 { pt3dadd( 16.869, -53.3563, -6.28238, 0.28 ) }
    dend_49 { pt3dadd( 17.1917, -53.8268, -6.40536, 0.55 ) }
    dend_49 { pt3dadd( 18.3253, -55.4477, -6.78624, 0.28 ) }
    dend_49 { pt3dadd( 18.8752, -56.2497, -6.95359, 0.55 ) }
    dend_49 { pt3dadd( 21.0722, -59.5054, -7.56637, 0.83 ) }
    dend_49 { pt3dadd( 22.5105, -61.6352, -7.94166, 0.28 ) }
    dend_49 { pt3dadd( 23.5982, -63.1964, -8.17008, 0.55 ) }
    dend_49 { pt3dadd( 24.3754, -64.2964, -8.29482, 0.28 ) }
    dend_49 { pt3dadd( 25.3661, -65.7034, -8.36652, 0.55 ) }
    dend_49 { pt3dadd( 25.7703, -66.2844, -8.3735, 0.55 ) }
    dend_49 { pt3dadd( 26.3686, -67.1306, -8.33644, 0.28 ) }
    dend_49 { pt3dadd( 26.8239, -67.7912, -8.31221, 0.55 ) }
    dend_49 { pt3dadd( 27.8811, -69.4655, -8.35334, 0.28 ) }
    dend_49 { pt3dadd( 28.8636, -71.0983, -8.49957, 0.55 ) }
    dend_49 { pt3dadd( 29.3368, -71.9762, -8.58479, 0.28 ) }
    dend_49 { pt3dadd( 29.6164, -72.5326, -8.64108, 0.83 ) }
    dend_49 { pt3dadd( 30.1357, -73.7367, -8.80247, 0.83 ) }
    dend_49 { pt3dadd( 30.6746, -75.307, -9.02626, 0.28 ) }
    dend_49 { pt3dadd( 30.7507, -75.5928, -9.06909, 0.55 ) }
    dend_49 { pt3dadd( 31.0544, -77.016, -9.32033, 0.28 ) }
    dend_49 { pt3dadd( 31.1621, -77.5532, -9.40587, 0.55 ) }
    dend_49 { pt3dadd( 31.5276, -79.2187, -9.64522, 0.28 ) }
    dend_49 { pt3dadd( 31.8661, -80.4826, -9.79927, 0.55 ) }
    dend_49 { pt3dadd( 32.176, -81.5266, -9.95198, 0.28 ) }
    dend_49 { pt3dadd( 32.7596, -83.282, -10.2399, 1.38 ) }
    dend_49 { pt3dadd( 33.4107, -85.0418, -10.4617, 0.28 ) }
    dend_49 { pt3dadd( 33.6364, -85.6211, -10.5154, 0.55 ) }
    dend_49 { pt3dadd( 34.3128, -87.3113, -10.6111, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_49 { pt3dadd( 35.4297, -90.0757, -10.7219, 0.55 ) }
    dend_49 { pt3dadd( 36.2201, -92.0347, -10.8289, 0.55 ) }
    dend_49 { pt3dadd( 37.5962, -95.4379, -11.0433, 0.28 ) }
    dend_49 { pt3dadd( 38.1212, -96.7176, -11.0769, 1.11 ) }
    dend_49 { pt3dadd( 38.6435, -97.9749, -11.065, 0.28 ) }
    dend_49 { pt3dadd( 38.9239, -98.6042, -11.0312, 0.83 ) }
    dend_49 { pt3dadd( 39.7151, -100.202, -10.8278, 0.28 ) }
    dend_49 { pt3dadd( 39.816, -100.391, -10.8073, 0.55 ) }
    dend_49 { pt3dadd( 41.3302, -102.933, -10.685, 0.28 ) }
    dend_49 { pt3dadd( 41.5767, -103.296, -10.6579, 0.83 ) }
    dend_49 { pt3dadd( 42.2706, -104.27, -10.5909, 0.28 ) }
    dend_49 { pt3dadd( 42.5124, -104.628, -10.5822, 0.83 ) }
    dend_49 { pt3dadd( 43.023, -105.397, -10.5461, 0.28 ) }
    dend_49 { pt3dadd( 44.0047, -106.895, -10.5304, 0.83 ) }
    dend_49 { pt3dadd( 46.1269, -110.106, -10.6633, 0.28 ) }
    dend_49 { pt3dadd( 47.0747, -111.54, -10.7636, 0.83 ) }
    dend_49 { pt3dadd( 48.1957, -113.223, -10.9181, 0.28 ) }
    dend_49 { pt3dadd( 49.2338, -114.695, -11.0893, 0.55 ) }
    dend_49 { pt3dadd( 49.9123, -115.593, -11.1895, 0.28 ) }
    dend_49 { pt3dadd( 51.275, -117.316, -11.3632, 1.11 ) }
    dend_49 { pt3dadd( 52.4181, -118.708, -11.5039, 0.28 ) }
    dend_49 { pt3dadd( 53.1758, -119.52, -11.5841, 0.55 ) }
    dend_49 { pt3dadd( 54.3304, -120.637, -11.7265, 0.55 ) }
    dend_49 { pt3dadd( 55.4778, -121.685, -11.9154, 0.55 ) }
    dend_49 { pt3dadd( 56.5216, -122.581, -12.0963, 0.28 ) }
    dend_49 { pt3dadd( 56.6882, -122.718, -12.1247, 0.83 ) }
    dend_49 { pt3dadd( 59.1481, -124.637, -12.5286, 0.28 ) }
    dend_49 { pt3dadd( 60.4774, -125.643, -12.8211, 0.55 ) }
    dend_49 { pt3dadd( 62.1395, -126.865, -13.2746, 0.28 ) }
    dend_49 { pt3dadd( 63.5085, -127.863, -13.7117, 0.83 ) }
    dend_49 { pt3dadd( 64.8019, -128.784, -14.1446, 0.28 ) }
    dend_49 { pt3dadd( 65.3427, -129.175, -14.3239, 0.55 ) }
    dend_49 { pt3dadd( 67.4548, -130.739, -14.9972, 0.28 ) }
    dend_49 { pt3dadd( 68.5923, -131.534, -15.3384, 1.11 ) }
    dend_49 { pt3dadd( 73.2508, -137.841, -16.9307, 1.11 ) }
    dend_49 { pt3dadd( 76.9446, -144.866, -17.6626, 1.11 ) }
    dend_49 { pt3dadd( 80.8541, -151.818, -17.6473, 1.11 ) }
    dend_49 { pt3dadd( 84.9953, -158.64, -17.7801, 1.11 ) }
    dend_49 { pt3dadd( 89.0057, -165.499, -17.0168, 1.11 ) }
    dend_49 { pt3dadd( 94.179, -171.475, -15.6568, 1.11 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 3.88308, -37.295, -2.27388, 0.28 ) }
    dend_48 { pt3dadd( 3.8128, -38.5784, -2.14131, 0.28 ) }
    dend_48 { pt3dadd( 3.78367, -39.5252, -2.05567, 0.83 ) }
    dend_48 { pt3dadd( 3.76455, -40.7444, -2.04331, 0.28 ) }
    dend_48 { pt3dadd( 3.71289, -42.3758, -2.09568, 0.83 ) }
    dend_48 { pt3dadd( 3.54398, -44.6905, -2.30561, 0.55 ) }
    dend_48 { pt3dadd( 3.4458, -45.6611, -2.41748, 0.28 ) }
    dend_48 { pt3dadd( 3.35226, -46.8763, -2.51798, 0.83 ) }
    dend_48 { pt3dadd( 3.18859, -48.9596, -2.68211, 0.28 ) }
    dend_48 { pt3dadd( 3.0248, -51.1063, -2.65271, 0.83 ) }
    dend_48 { pt3dadd( 2.78716, -53.7966, -2.37671, 0.28 ) }
    dend_48 { pt3dadd( 2.69295, -54.7422, -2.2562, 0.83 ) }
    dend_48 { pt3dadd( 2.4311, -57.704, -1.82157, 0.28 ) }
    dend_48 { pt3dadd( 2.23082, -60.175, -1.34877, 0.83 ) }
    dend_48 { pt3dadd( 1.94498, -64.342, -0.255243, 0.28 ) }
    dend_48 { pt3dadd( 1.88541, -65.8902, 0.24495, 0.83 ) }
    dend_48 { pt3dadd( 1.87025, -68.3105, 1.20773, 0.28 ) }
    dend_48 { pt3dadd( 1.85785, -69.4821, 1.67172, 0.55 ) }
    dend_48 { pt3dadd( -0.689158, -80.1878, 1.29792, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 59/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -73.1638, -40.4883, -36.5825, 0.28 ) }
    dend_39 { pt3dadd( -79.73, -38.5115, -41.3268, 0.28 ) }
    dend_39 { pt3dadd( -80.9057, -38.1575, -42.1762, 0.55 ) }
    dend_39 { pt3dadd( -84.7728, -36.9933, -44.9704, 0.28 ) }
    dend_39 { pt3dadd( -87.1933, -36.2646, -46.7193, 0.55 ) }
    dend_39 { pt3dadd( -88.63, -35.8321, -47.7573, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 65/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -73.1638, -40.4883, -36.5825, 0.28 ) }
    dend_38 { pt3dadd( -73.9171, -41.7708, -37.1361, 0.28 ) }
    dend_38 { pt3dadd( -74.5336, -42.4297, -37.1935, 0.55 ) }
    dend_38 { pt3dadd( -76.1722, -43.8858, -36.9578, 0.28 ) }
    dend_38 { pt3dadd( -76.8455, -44.5201, -36.9916, 0.55 ) }
    dend_38 { pt3dadd( -78.431, -46.0766, -37.1767, 0.28 ) }
    dend_38 { pt3dadd( -78.9783, -46.6139, -37.2406, 0.55 ) }
    dend_38 { pt3dadd( -80.4857, -47.8966, -37.2588, 0.28 ) }
    dend_38 { pt3dadd( -81.3923, -48.587, -37.1898, 0.83 ) }
    dend_38 { pt3dadd( -83.987, -50.3725, -36.7614, 0.28 ) }
    dend_38 { pt3dadd( -84.6202, -50.8895, -36.7586, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 76/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -56.3664, -28.2094, -5.69814, 0.28 ) }
    dend_36 { pt3dadd( -57.6275, -26.6032, -4.9226, 0.28 ) }
    dend_36 { pt3dadd( -58.1619, -25.9253, -4.75564, 0.55 ) }
    dend_36 { pt3dadd( -59.2968, -24.5619, -4.59639, 0.28 ) }
    dend_36 { pt3dadd( -59.9338, -23.839, -4.51124, 0.83 ) }
    dend_36 { pt3dadd( -61.5329, -22.057, -4.28531, 0.28 ) }
    dend_36 { pt3dadd( -61.8837, -21.6655, -4.236, 0.55 ) }
    dend_36 { pt3dadd( -64.0331, -19.4006, -3.92288, 0.28 ) }
    dend_36 { pt3dadd( -64.8719, -18.5342, -3.84956, 0.55 ) }
    dend_36 { pt3dadd( -65.9084, -17.4236, -3.83831, 0.28 ) }
    dend_36 { pt3dadd( -66.5933, -16.6877, -3.86602, 0.55 ) }
    dend_36 { pt3dadd( -66.9961, -16.228, -3.93263, 0.28 ) }
    dend_36 { pt3dadd( -67.7911, -15.3328, -3.97968, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 89/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -56.3664, -28.2094, -5.69814, 0.55 ) }
    dend_35 { pt3dadd( -58.987, -27.1062, -5.35973, 0.55 ) }
    dend_35 { pt3dadd( -60.0245, -26.7934, -5.23831, 0.55 ) }
    dend_35 { pt3dadd( -61.6073, -26.4805, -5.1709, 0.83 ) }
    dend_35 { pt3dadd( -64.1151, -26.169, -5.16166, 0.28 ) }
    dend_35 { pt3dadd( -64.9611, -26.1352, -5.20804, 0.55 ) }
    dend_35 { pt3dadd( -66.3201, -26.1341, -5.32333, 0.55 ) }
    dend_35 { pt3dadd( -68.0668, -26.3966, -5.45889, 0.83 ) }
    dend_35 { pt3dadd( -70.3316, -26.9105, -5.70353, 0.28 ) }
    dend_35 { pt3dadd( -71.031, -27.1174, -5.80445, 0.55 ) }
    dend_35 { pt3dadd( -72.7811, -27.7512, -6.14552, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_35 { pt3dadd( -73.1278, -27.8697, -6.21155, 0.55 ) }
    dend_35 { pt3dadd( -75.6292, -28.7746, -6.66035, 0.28 ) }
    dend_35 { pt3dadd( -77.1488, -29.218, -6.8508, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 3/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -47.7318, 14.7197, 16.6998, 0.83 ) }
    dend_26 { pt3dadd( -50.2929, 18.2955, 18.7882, 0.83 ) }
    dend_26 { pt3dadd( -51.7115, 20.1034, 19.6834, 0.55 ) }
    dend_26 { pt3dadd( -52.3094, 20.8523, 20.0347, 0.55 ) }
    dend_26 { pt3dadd( -54.1813, 23.2789, 21.1429, 0.83 ) }
    dend_26 { pt3dadd( -55.6971, 25.3796, 22.0677, 0.55 ) }
    dend_26 { pt3dadd( -56.65, 26.7741, 22.7183, 0.55 ) }
    dend_26 { pt3dadd( -58.2251, 29.5035, 23.9186, 0.55 ) }
    dend_26 { pt3dadd( -58.6726, 30.2805, 24.282, 0.83 ) }
    dend_26 { pt3dadd( -59.9115, 32.5408, 25.3184, 0.28 ) }
    dend_26 { pt3dadd( -60.64, 34.0332, 26.0096, 0.83 ) }
    dend_26 { pt3dadd( -61.4373, 35.9509, 26.9268, 0.28 ) }
    dend_26 { pt3dadd( -61.9206, 37.4918, 27.6842, 0.83 ) }
    dend_26 { pt3dadd( -66.373, 45.5937, 33.0092, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 17/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -47.7318, 14.7197, 16.6998, 0.55 ) }
    dend_25 { pt3dadd( -49.2421, 13.7874, 16.9925, 0.55 ) }
    dend_25 { pt3dadd( -52.8571, 11.5555, 17.6932, 0.55 ) }
    dend_25 { pt3dadd( -60.6205, 7.19782, 19.0851, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -31.9991, -18.9383, -4.27247, 0.83 ) }
    dend_23 { pt3dadd( -34.7256, -20.3219, -3.2754, 0.83 ) }
    dend_23 { pt3dadd( -36.7127, -21.0817, -2.43354, 0.83 ) }
    dend_23 { pt3dadd( -38.6241, -21.7689, -1.59229, 0.55 ) }
    dend_23 { pt3dadd( -40.3396, -22.3771, -0.83365, 0.55 ) }
    dend_23 { pt3dadd( -42.5016, -23.1386, 0.206648, 0.55 ) }
    dend_23 { pt3dadd( -44.4926, -23.8343, 1.1977, 0.83 ) }
    dend_23 { pt3dadd( -47.3939, -24.8143, 2.64578, 0.83 ) }
    dend_23 { pt3dadd( -48.7852, -25.2229, 3.29808, 0.55 ) }
    dend_23 { pt3dadd( -49.6764, -25.4465, 3.67768, 0.83 ) }
    dend_23 { pt3dadd( -52.7152, -26.1687, 4.89976, 0.28 ) }
    dend_23 { pt3dadd( -53.9068, -26.4304, 5.20973, 0.83 ) }
    dend_23 { pt3dadd( -54.8833, -26.6514, 5.35038, 0.83 ) }
    dend_23 { pt3dadd( -57.574, -27.2414, 5.46036, 0.28 ) }
    dend_23 { pt3dadd( -58.5517, -27.435, 5.44653, 0.83 ) }
    dend_23 { pt3dadd( -59.7942, -27.6906, 5.37301, 0.83 ) }
    dend_23 { pt3dadd( -63.6351, -28.6215, 4.98439, 0.55 ) }
    dend_23 { pt3dadd( -66.291, -29.4036, 4.75512, 0.28 ) }
    dend_23 { pt3dadd( -67.4582, -29.8398, 4.58613, 0.83 ) }
    dend_23 { pt3dadd( -69.2104, -30.7341, 4.23635, 0.28 ) }
    dend_23 { pt3dadd( -70.4739, -31.6165, 3.84311, 0.55 ) }
    dend_23 { pt3dadd( -71.4803, -32.5973, 3.3924, 0.28 ) }
    dend_23 { pt3dadd( -71.9865, -33.2618, 3.09587, 0.55 ) }
    dend_23 { pt3dadd( -74.0899, -36.5137, 1.41209, 0.28 ) }
    dend_23 { pt3dadd( -74.9768, -38.0827, 0.590701, 0.28 ) }
    dend_23 { pt3dadd( -76.0183, -40.2439, -0.498413, 0.83 ) }
    dend_23 { pt3dadd( -76.6953, -41.7907, -1.2543, 0.28 ) }
    dend_23 { pt3dadd( -76.9448, -42.3819, -1.52551, 0.83 ) }
    dend_23 { pt3dadd( -77.4238, -43.593, -1.95753, 0.28 ) }
    dend_23 { pt3dadd( -77.7827, -44.6027, -2.18755, 0.55 ) }
    dend_23 { pt3dadd( -78.2577, -45.8708, -2.46405, 0.28 ) }
    dend_23 { pt3dadd( -78.6808, -46.8813, -2.64746, 0.83 ) }
    dend_23 { pt3dadd( -79.4872, -48.5223, -2.86035, 0.28 ) }
    dend_23 { pt3dadd( -79.9888, -49.5048, -3.01488, 0.55 ) }
    dend_23 { pt3dadd( -80.7701, -50.9697, -3.26467, 0.28 ) }
    dend_23 { pt3dadd( -81.1786, -51.7075, -3.39569, 0.55 ) }
    dend_23 { pt3dadd( -82.4105, -53.8194, -3.78422, 0.28 ) }
    dend_23 { pt3dadd( -84.1953, -56.4237, -4.42684, 0.55 ) }
    dend_23 { pt3dadd( -85.6188, -58.1906, -4.94978, 0.28 ) }
    dend_23 { pt3dadd( -86.2112, -58.8006, -5.15088, 0.83 ) }
    dend_23 { pt3dadd( -87.1292, -59.5798, -5.40158, 0.28 ) }
    dend_23 { pt3dadd( -87.9985, -60.2413, -5.64575, 0.83 ) }
    dend_23 { pt3dadd( -91.1562, -62.1782, -6.5729, 0.28 ) }
    dend_23 { pt3dadd( -91.7103, -62.4405, -6.73117, 0.83 ) }
    dend_23 { pt3dadd( -93.7525, -63.1872, -7.13683, 0.28 ) }
    dend_23 { pt3dadd( -94.6532, -63.4497, -7.31247, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 67/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -31.9991, -18.9383, -4.27247, 0.55 ) }
    dend_22 { pt3dadd( -31.6075, -19.9315, -4.78438, 0.55 ) }
    dend_22 { pt3dadd( -30.9583, -21.605, -5.63452, 0.55 ) }
    dend_22 { pt3dadd( -30.6297, -22.582, -6.07007, 1.11 ) }
    dend_22 { pt3dadd( -30.3758, -23.5168, -6.61053, 0.55 ) }
    dend_22 { pt3dadd( -30.1227, -24.6208, -7.31735, 0.55 ) }
    dend_22 { pt3dadd( -29.9391, -25.5983, -7.98003, 0.55 ) }
    dend_22 { pt3dadd( -29.836, -26.3876, -8.55822, 0.28 ) }
    dend_22 { pt3dadd( -29.8063, -27.7072, -9.57133, 1.11 ) }
    dend_22 { pt3dadd( -29.8094, -29.9553, -11.3769, 0.28 ) }
    dend_22 { pt3dadd( -29.8537, -30.8276, -12.0616, 0.28 ) }
    dend_22 { pt3dadd( -29.8906, -31.2236, -12.3663, 0.55 ) }
    dend_22 { pt3dadd( -29.9771, -31.807, -12.792, 0.28 ) }
    dend_22 { pt3dadd( -30.0864, -32.5698, -13.349, 0.28 ) }
    dend_22 { pt3dadd( -30.2106, -33.3655, -13.8943, 0.55 ) }
    dend_22 { pt3dadd( -30.3782, -34.5783, -14.5771, 0.28 ) }
    dend_22 { pt3dadd( -30.5029, -35.4277, -15.0732, 0.55 ) }
    dend_22 { pt3dadd( -30.6572, -36.5552, -15.7454, 0.28 ) }
    dend_22 { pt3dadd( -30.8723, -37.8667, -16.5741, 0.28 ) }
    dend_22 { pt3dadd( -31.0496, -38.7146, -17.1133, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 87/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 13.9239, -52.989, -0.100213, 0.55 ) }
    dend_19 { pt3dadd( 12.0853, -56.0523, -0.211597, 0.55 ) }
    dend_19 { pt3dadd( 10.8496, -58.2378, -0.271276, 0.55 ) }
    dend_19 { pt3dadd( 10.178, -59.4055, -0.303754, 0.28 ) }
    dend_19 { pt3dadd( 9.12836, -61.258, -0.35387, 0.55 ) }
    dend_19 { pt3dadd( 8.4285, -62.5018, -0.384459, 0.28 ) }
    dend_19 { pt3dadd( 7.73691, -63.7468, -0.413669, 0.55 ) }
    dend_19 { pt3dadd( 6.99419, -65.1547, -0.41942, 0.55 ) }
    dend_19 { pt3dadd( 6.37637, -66.4251, -0.380296, 0.28 ) }
    dend_19 { pt3dadd( 6.19063, -66.9228, -0.34998, 0.55 ) }
    dend_19 { pt3dadd( 5.99203, -67.6323, -0.299419, 0.28 ) }
    dend_19 { pt3dadd( 5.8055, -68.5702, -0.231992, 0.55 ) }
    dend_19 { pt3dadd( 5.64223, -69.7595, -0.126255, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_19 { pt3dadd( 5.46157, -71.0436, 0.0238949, 0.55 ) }
    dend_19 { pt3dadd( 5.36765, -71.8161, 0.12952, 0.28 ) }
    dend_19 { pt3dadd( 5.27552, -72.5994, 0.222793, 0.83 ) }
    dend_19 { pt3dadd( 5.12014, -74.082, 0.375157, 0.28 ) }
    dend_19 { pt3dadd( 5.08385, -74.5997, 0.401376, 0.55 ) }
    dend_19 { pt3dadd( 5.02703, -76.0199, 0.399631, 0.28 ) }
    dend_19 { pt3dadd( 5.01934, -76.2961, 0.392898, 0.83 ) }
    dend_19 { pt3dadd( 4.98643, -77.9224, 0.329156, 0.28 ) }
    dend_19 { pt3dadd( 4.97701, -78.7583, 0.302085, 0.83 ) }
    dend_19 { pt3dadd( 5.02185, -80.9264, 0.0425359, 0.28 ) }
    dend_19 { pt3dadd( 4.96934, -82.7524, -0.228016, 0.28 ) }
    dend_19 { pt3dadd( 4.86139, -84.145, -0.457281, 0.55 ) }
    dend_19 { pt3dadd( 4.60944, -86.0851, -0.77685, 0.55 ) }
    dend_19 { pt3dadd( 4.23457, -88.0071, -1.02214, 1.11 ) }
    dend_19 { pt3dadd( 3.27494, -91.8297, -1.42499, 0.28 ) }
    dend_19 { pt3dadd( 2.39048, -94.6466, -1.64653, 0.83 ) }
    dend_19 { pt3dadd( 1.67099, -96.5553, -1.83856, 0.28 ) }
    dend_19 { pt3dadd( 1.23655, -97.589, -1.98556, 0.55 ) }
    dend_19 { pt3dadd( 0.20067, -100.007, -2.31259, 0.28 ) }
    dend_19 { pt3dadd( -0.0032489, -100.476, -2.36017, 0.28 ) }
    dend_19 { pt3dadd( -0.431166, -101.569, -2.38553, 0.55 ) }
    dend_19 { pt3dadd( -1.08709, -103.966, -2.34458, 0.28 ) }
    dend_19 { pt3dadd( -1.47657, -106.041, -2.2027, 0.83 ) }
    dend_19 { pt3dadd( -1.84027, -109.429, -1.78249, 0.28 ) }
    dend_19 { pt3dadd( -1.86988, -110.31, -1.63926, 0.83 ) }
    dend_19 { pt3dadd( -1.83027, -112.357, -1.13269, 0.83 ) }
    dend_19 { pt3dadd( -1.72439, -114.734, -0.363151, 0.28 ) }
    dend_19 { pt3dadd( -1.64023, -115.949, 0.105905, 0.83 ) }
    dend_19 { pt3dadd( -1.52704, -117.521, 0.732596, 0.28 ) }
    dend_19 { pt3dadd( -1.46536, -118.519, 1.07998, 0.55 ) }
    dend_19 { pt3dadd( -1.33183, -120.761, 1.7573, 0.28 ) }
    dend_19 { pt3dadd( -1.25545, -121.693, 1.97747, 0.55 ) }
    dend_19 { pt3dadd( -1.07357, -123.507, 2.26879, 0.83 ) }
    dend_19 { pt3dadd( -0.965546, -124.272, 2.39, 0.83 ) }
    dend_19 { pt3dadd( -0.667216, -125.891, 2.6222, 0.28 ) }
    dend_19 { pt3dadd( -0.396462, -126.934, 2.69645, 0.55 ) }
    dend_19 { pt3dadd( 0.585055, -129.7, 2.67401, 0.28 ) }
    dend_19 { pt3dadd( 0.694869, -129.94, 2.65577, 0.55 ) }
    dend_19 { pt3dadd( 1.68254, -131.749, 2.3761, 0.28 ) }
    dend_19 { pt3dadd( 1.94534, -132.188, 2.28468, 0.55 ) }
    dend_19 { pt3dadd( 3.43124, -134.35, 1.62039, 0.28 ) }
    dend_19 { pt3dadd( 3.63961, -134.624, 1.50819, 0.55 ) }
    dend_19 { pt3dadd( 4.51573, -135.566, 0.942459, 0.28 ) }
    dend_19 { pt3dadd( 4.68109, -135.747, 0.813564, 0.55 ) }
    dend_19 { pt3dadd( 5.2404, -144.951, 2.82447, 0.55 ) }
    dend_19 { pt3dadd( 4.59043, -154.126, 5.01273, 0.55 ) }
    dend_19 { pt3dadd( 4.16924, -163.559, 5.00959, 0.55 ) }
    dend_19 { pt3dadd( 2.4375, -172.727, 6.62419, 0.55 ) }
    dend_19 { pt3dadd( 2.20643, -181.977, 8.52413, 0.55 ) }
    dend_19 { pt3dadd( 2.84829, -191.009, 11.2048, 0.55 ) }
    dend_19 { pt3dadd( 1.74714, -199.648, 14.9545, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 13.9239, -52.989, -0.100213, 0.55 ) }
    dend_18 { pt3dadd( 14.7619, -55.1494, -0.00397106, 0.55 ) }
    dend_18 { pt3dadd( 15.4833, -57.0411, 0.0756519, 0.55 ) }
    dend_18 { pt3dadd( 16.265, -59.1909, 0.167307, 0.28 ) }
    dend_18 { pt3dadd( 16.5323, -59.9858, 0.202395, 0.55 ) }
    dend_18 { pt3dadd( 17.42, -63.2104, 0.361758, 0.55 ) }
    dend_18 { pt3dadd( 17.9777, -65.5196, 0.481172, 0.28 ) }
    dend_18 { pt3dadd( 18.5503, -68.0565, 0.651825, 0.28 ) }
    dend_18 { pt3dadd( 18.7192, -68.8654, 0.759893, 0.55 ) }
    dend_18 { pt3dadd( 19.1603, -71.0804, 1.16427, 0.55 ) }
    dend_18 { pt3dadd( 19.8783, -74.9293, 2.03166, 0.55 ) }
    dend_18 { pt3dadd( 20.4127, -77.7872, 2.77912, 0.55 ) }
    dend_18 { pt3dadd( 20.738, -79.1748, 3.15666, 0.55 ) }
    dend_18 { pt3dadd( 21.8691, -83.395, 4.23753, 0.28 ) }
    dend_18 { pt3dadd( 22.1905, -84.5051, 4.5128, 0.83 ) }
    dend_18 { pt3dadd( 22.9537, -86.9399, 5.10101, 0.55 ) }
    dend_18 { pt3dadd( 23.7028, -89.0473, 5.55102, 0.55 ) }
    dend_18 { pt3dadd( 24.9407, -92.518, 6.15397, 0.55 ) }
    dend_18 { pt3dadd( 25.7961, -94.9805, 6.47869, 0.83 ) }
    dend_18 { pt3dadd( 26.4328, -96.7443, 6.62499, 0.28 ) }
    dend_18 { pt3dadd( 26.6902, -97.4481, 6.69559, 0.55 ) }
    dend_18 { pt3dadd( 27.5873, -99.7665, 7.08667, 0.28 ) }
    dend_18 { pt3dadd( 27.6195, -99.8531, 7.10705, 0.55 ) }
    dend_18 { pt3dadd( 28.5614, -102.266, 8.25004, 0.28 ) }
    dend_18 { pt3dadd( 29.0758, -103.523, 9.01334, 0.83 ) }
    dend_18 { pt3dadd( 29.4428, -104.473, 9.63757, 0.83 ) }
    dend_18 { pt3dadd( 30.5534, -107.812, 11.7578, 0.28 ) }
    dend_18 { pt3dadd( 30.8224, -108.704, 12.2949, 0.55 ) }
    dend_18 { pt3dadd( 32.5055, -114.339, 15.4119, 0.28 ) }
    dend_18 { pt3dadd( 33.176, -116.498, 16.5171, 0.28 ) }
    dend_18 { pt3dadd( 33.5005, -117.517, 16.9908, 0.83 ) }
    dend_18 { pt3dadd( 34.454, -120.665, 18.2235, 0.28 ) }
    dend_18 { pt3dadd( 35.1262, -122.833, 18.8558, 0.28 ) }
    dend_18 { pt3dadd( 35.5328, -123.94, 19.0834, 0.55 ) }
    dend_18 { pt3dadd( 36.6635, -126.632, 19.2151, 0.55 ) }
    dend_18 { pt3dadd( 37.3308, -127.974, 19.2756, 0.55 ) }
    dend_18 { pt3dadd( 38.1779, -129.7, 19.3626, 0.28 ) }
    dend_18 { pt3dadd( 38.7049, -130.761, 19.5013, 0.28 ) }
    dend_18 { pt3dadd( 39.2135, -131.812, 19.6921, 0.55 ) }
    dend_18 { pt3dadd( 40.7905, -135.179, 20.3931, 0.28 ) }
    dend_18 { pt3dadd( 41.6675, -137.209, 20.847, 0.83 ) }
    dend_18 { pt3dadd( 42.5734, -139.516, 21.2286, 0.83 ) }
    dend_18 { pt3dadd( 43.503, -142.173, 21.5403, 0.55 ) }
    dend_18 { pt3dadd( 44.3357, -144.903, 21.8321, 0.28 ) }
    dend_18 { pt3dadd( 44.7517, -146.351, 21.9643, 0.28 ) }
    dend_18 { pt3dadd( 45.0432, -147.354, 22.0773, 0.55 ) }
    dend_18 { pt3dadd( 46.1602, -151.085, 22.4814, 0.28 ) }
    dend_18 { pt3dadd( 46.4871, -152.17, 22.5739, 0.55 ) }
    dend_18 { pt3dadd( 47.2207, -154.846, 22.733, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_18 { pt3dadd( 47.6898, -156.7, 22.9023, 0.83 ) }
    dend_18 { pt3dadd( 48.5701, -159.983, 23.3038, 0.28 ) }
    dend_18 { pt3dadd( 48.7711, -160.69, 23.4139, 0.55 ) }
    dend_18 { pt3dadd( 49.7918, -164.206, 24.2154, 0.28 ) }
    dend_18 { pt3dadd( 50.0923, -165.276, 24.445, 0.55 ) }
    dend_18 { pt3dadd( 50.6273, -167.049, 24.861, 0.55 ) }
    dend_18 { pt3dadd( 51.0795, -168.471, 25.295, 0.28 ) }
    dend_18 { pt3dadd( 51.3252, -169.139, 25.511, 0.55 ) }
    dend_18 { pt3dadd( 52.3179, -171.483, 26.3735, 0.28 ) }
    dend_18 { pt3dadd( 52.6106, -172.111, 26.651, 0.55 ) }
    dend_18 { pt3dadd( 54.381, -175.667, 28.3726, 0.28 ) }
    dend_18 { pt3dadd( 54.9854, -176.783, 28.9705, 0.55 ) }
    dend_18 { pt3dadd( 56.164, -178.894, 30.1757, 0.28 ) }
    dend_18 { pt3dadd( 56.6654, -179.743, 30.6622, 0.55 ) }
    dend_18 { pt3dadd( 58.5981, -193.087, 31.4391, 0.55 ) }
    dend_18 { pt3dadd( 62.0944, -206.126, 31.4314, 0.55 ) }
    dend_18 { pt3dadd( 62.7554, -219.57, 30.1503, 0.55 ) }
    dend_18 { pt3dadd( 65.0201, -232.616, 27.4082, 0.55 ) }
    dend_18 { pt3dadd( 67.8318, -245.821, 27.2391, 0.55 ) }
    dend_18 { pt3dadd( 72.2766, -258.524, 28.3262, 0.55 ) }
    dend_18 { pt3dadd( 78.3456, -270.598, 28.2598, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 21/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 95.4344, 45.0103, 82.3212, 0.55 ) }
    dend_12 { pt3dadd( 101.708, 50.3887, 89.8495, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 95.4344, 45.0103, 82.3212, 0.55 ) }
    dend_11 { pt3dadd( 102.137, 49.6247, 90.946, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 25/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 33.4147, -54.7417, 2.46802, 0.55 ) }
    dend_8 { pt3dadd( 34.6369, -55.3095, 3.9264, 0.55 ) }
    dend_8 { pt3dadd( 36.5761, -56.3682, 6.04735, 0.55 ) }
    dend_8 { pt3dadd( 37.3134, -56.8212, 6.72962, 0.55 ) }
    dend_8 { pt3dadd( 46.2274, -62.9262, 14.1188, 0.28 ) }
    dend_8 { pt3dadd( 47.1488, -63.672, 14.7826, 0.83 ) }
    dend_8 { pt3dadd( 49.6736, -66.0258, 16.4179, 0.28 ) }
    dend_8 { pt3dadd( 50.9088, -67.4693, 17.1416, 0.28 ) }
    dend_8 { pt3dadd( 52.6468, -70.3181, 17.6795, 0.28 ) }
    dend_8 { pt3dadd( 53.1125, -71.2929, 17.5659, 0.55 ) }
    dend_8 { pt3dadd( 53.9452, -73.9259, 16.4987, 0.28 ) }
    dend_8 { pt3dadd( 54.2182, -74.8083, 16.2152, 0.28 ) }
    dend_8 { pt3dadd( 54.7194, -76.246, 15.9877, 0.55 ) }
    dend_8 { pt3dadd( 55.3619, -78.0599, 15.8158, 0.55 ) }
    dend_8 { pt3dadd( 56.5538, -81.3019, 15.9981, 0.55 ) }
    dend_8 { pt3dadd( 63.4045, -89.5147, 18.3395, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 41/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 33.4147, -54.7417, 2.46802, 0.55 ) }
    dend_7 { pt3dadd( 34.6334, -57.5119, 2.69948, 0.55 ) }
    dend_7 { pt3dadd( 35.7246, -60.0588, 2.90744, 0.55 ) }
    dend_7 { pt3dadd( 36.5533, -62.0429, 3.04997, 0.55 ) }
    dend_7 { pt3dadd( 37.6094, -64.5531, 3.20709, 0.28 ) }
    dend_7 { pt3dadd( 38.4783, -66.5544, 3.29003, 0.55 ) }
    dend_7 { pt3dadd( 39.7741, -69.3799, 3.3459, 0.55 ) }
    dend_7 { pt3dadd( 40.5266, -70.8348, 3.35578, 0.28 ) }
    dend_7 { pt3dadd( 41.1601, -72.026, 3.35766, 0.28 ) }
    dend_7 { pt3dadd( 41.5152, -72.6092, 3.35486, 0.28 ) }
    dend_7 { pt3dadd( 42.5873, -74.259, 3.31132, 0.55 ) }
    dend_7 { pt3dadd( 43.6217, -75.6869, 3.17897, 0.55 ) }
    dend_7 { pt3dadd( 45.0695, -77.555, 2.89085, 0.28 ) }
    dend_7 { pt3dadd( 45.5021, -78.0855, 2.80115, 0.55 ) }
    dend_7 { pt3dadd( 47.3158, -80.2579, 2.43753, 0.28 ) }
    dend_7 { pt3dadd( 48.0455, -81.1547, 2.28963, 0.55 ) }
    dend_7 { pt3dadd( 49.8802, -83.4721, 1.89018, 0.28 ) }
    dend_7 { pt3dadd( 50.2653, -83.9995, 1.73701, 0.55 ) }
    dend_7 { pt3dadd( 56.6776, -92.8241, 2.3265, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 60/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 28.4689, -87.6067, 22.6899, 0.55 ) }
    dend_5 { pt3dadd( 29.59, -96.3056, 25.6974, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 62/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 28.4689, -87.6067, 22.6899, 0.55 ) }
    dend_4 { pt3dadd( 29.4823, -97.6048, 24.872, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_2 = new SectionList()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_71 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_56 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_70 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_69 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_67 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_31 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_29 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_28 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_53 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_52 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_50 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_33 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_9 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_63 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_46 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_42 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_41 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_37 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_16 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_13 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_10 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_3 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_49 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_23 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_19 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_18 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_8 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_7 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_30 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_57 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_43 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_32 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_1 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_44 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_68 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_51 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_45 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_40 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_47 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_20 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_58 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_15 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_2 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_21 OneSecGrp_SectionRef_47.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_17 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_34 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_66 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_59 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_6 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_22 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_36 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_35 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_60 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_25 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_61 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_62 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_38 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_5 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_4 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_39 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_26 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_65 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_64 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_54 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_12 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_11 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_55 OneSecGrp_SectionRef_38.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_43, dend_43, dend_43, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, axon_0, axon_0, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_44, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_4]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_44 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_66 all.append()
    dend_66 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_4 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_71 nseg = 9
    dend_56 nseg = 11
    dend_70 nseg = 11
    dend_69 nseg = 3
    dend_67 nseg = 3
    dend_31 nseg = 5
    dend_29 nseg = 9
    dend_28 nseg = 3
    dend_53 nseg = 5
    dend_52 nseg = 11
    dend_50 nseg = 13
    dend_33 nseg = 3
    dend_9 nseg = 5
    dend_63 nseg = 3
    dend_46 nseg = 5
    dend_42 nseg = 5
    dend_41 nseg = 13
    dend_37 nseg = 3
    dend_24 nseg = 3
    dend_16 nseg = 7
    dend_13 nseg = 9
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_49 nseg = 9
    dend_48 nseg = 3
    dend_23 nseg = 5
    dend_19 nseg = 7
    dend_18 nseg = 11
    dend_8 nseg = 3
    dend_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_LBC_c5ee2b20c2_0_0


