// Cell: cIR216_L5_NBC_d30015ad95_0_0
/*
{
  "id" : "cIR216_L5_NBC_d30015ad95_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.277629, -9.42436, 0.0, 2.9454", "-0.225418, -8.4907, 0.0, 4.92187", "-0.173208, -7.55704, 0.0, 6.69655", "-0.120997, -6.62338, 0.0, 8.28957", "-0.0687862, -5.68972, 0.0, 9.36061", "-0.0165755, -4.75606, 0.0, 10.2397", "0.0356352, -3.8224, 0.0, 11.0293", "0.087846, -2.88873, 0.0, 11.6457", "0.140057, -1.95507, 0.0, 12.2691", "0.192267, -1.02141, 0.0, 12.5588", "0.244478, -0.0877535, 0.0, 12.7806", "0.296689, 0.845907, 0.0, 13.0398", "0.3489, 1.77957, 0.0, 13.1732", "0.40111, 2.71323, 0.0, 13.0581", "0.453321, 3.64689, 0.0, 12.8607", "0.505532, 4.58055, 0.0, 12.1633", "0.557743, 5.51421, 0.0, 11.3807", "0.609953, 6.44787, 0.0, 10.3357", "0.662164, 7.38153, 0.0, 8.86929", "0.714375, 8.31519, 0.0, 6.73974", "0.766585, 9.24885, 0.0, 3.85991" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.0596826, 8.79539, 5.51, 1.4", "-0.0596826, 8.79539, 5.51, 1.4", "-0.500922, 10.6397, 5.92765, 1.47", "-0.805783, 12.0316, 6.23027, 1.47", "-1.06705, 13.4669, 6.52993, 1.55", "-1.22337, 14.5304, 6.75749, 1.55", "-1.367, 15.679, 6.99189, 1.55", "-1.43224, 16.4504, 7.1412, 1.55", "-1.47639, 17.4714, 7.33872, 1.55", "-1.49887, 18.6769, 7.57344, 1.55", "-1.53241, 20.0771, 7.88106, 1.92", "-1.61832, 21.7403, 8.28688, 2.14", "-1.76019, 23.3879, 8.73253, 1.18", "-1.9223, 24.7354, 9.13715, 1.25", "-2.1187, 26.1732, 9.59494, 1.25", "-2.41258, 27.9558, 10.1935, 1.33", "-2.72466, 29.5886, 10.7753, 1.47", "-3.0329, 30.9902, 11.3382, 1.77", "-3.39952, 32.3653, 11.9343, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-0.299673, -8.46461, 3.35, 2.29", "-0.299673, -8.46461, 3.35, 2.29", "-0.777422, -10.0762, 4.11451, 1.62", "-1.15064, -11.6828, 4.85496, 1.4", "-1.42088, -13.0708, 5.42134, 1.4", "-1.63523, -14.0983, 5.78909, 1.25", "-1.89424, -15.2159, 6.13737, 1.25", "-2.17985, -16.439, 6.45365, 1.18", "-2.35193, -17.2433, 6.61023, 1.18", "-2.70478, -19.1601, 6.91127, 1.55", "-3.00331, -20.801, 7.13, 1.62", "-3.33128, -22.4022, 7.32312, 1.47", "-3.73151, -24.1525, 7.49042, 1.47", "-4.06261, -25.5088, 7.62061, 1.47", "-4.41648, -27.0374, 7.75613, 1.47", "-4.60031, -28.0564, 7.86649, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "5.04042, 7.69539, -5.24, 2.43", "5.04042, 7.69539, -5.24, 2.43", "6.24441, 8.54769, -5.12019, 1.55", "7.41441, 9.3956, -5.02474, 1.47", "8.23776, 10.0045, -4.97481, 1.25", "9.8057, 11.1753, -4.83811, 1.11", "10.7593, 11.8874, -4.7234, 1.25", "11.9731, 12.8078, -4.50996, 1.4", "13.3664, 13.8782, -4.18187, 1.62", "14.9251, 15.0454, -3.75371, 1.03", "16.0563, 15.8194, -3.40247, 0.88", "17.1939, 16.493, -2.9941, 1.11", "18.4996, 17.1822, -2.4292, 0.88", "19.7366, 17.7719, -1.82387, 1.47", "20.4069, 18.066, -1.44598, 1.33", "21.6016, 18.5709, -0.735102, 1.03", "22.7291, 19.0822, -0.0888163, 1.03", "23.6076, 19.5242, 0.393824, 1.18", "24.6483, 20.1313, 0.945684, 1.18", "25.9981, 21.0155, 1.61732, 1.4", "26.8445, 21.6215, 1.99101, 1.03", "27.7375, 22.3029, 2.23409, 0.81", "28.5768, 22.9298, 2.32078, 0.74", "29.5057, 23.596, 2.28973, 1.11", "30.7337, 24.4268, 2.14139, 1.11", "31.6184, 24.986, 1.97222, 1.33", "33.4848, 26.1005, 1.65306, 1.33", "35.1308, 27.0645, 1.44838, 0.88", "36.4549, 27.8635, 1.37777, 1.11", "37.184, 28.3201, 1.38758, 1.33", "38.2658, 29.0511, 1.49859, 1.33", "39.644, 30.0641, 1.76162, 0.96", "40.7371, 30.9055, 2.09444, 0.96", "41.8956, 31.8551, 2.53228, 1.4", "42.6593, 32.5033, 2.8774, 1.4", "43.6197, 33.3528, 3.33451, 1.4", "44.7248, 34.3506, 3.8562, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.129629, -9.85461, -2.13, 1.84", "-0.129629, -9.85461, -2.13, 1.84", "-0.653291, -10.9962, -2.00716, 1.55", "-1.0229, -11.9247, -1.92408, 1.47", "-1.60067, -13.6938, -1.73801, 1.47", "-2.01549, -15.2656, -1.56834, 1.25", "-2.21834, -16.2812, -1.46378, 1.18", "-2.37664, -17.5182, -1.34765, 1.33", "-2.46852, -19.0617, -1.21851, 1.7", "-2.45235, -20.6939, -1.10447, 1.4", "-2.36502, -21.9719, -1.02953, 1.18", "-2.16237, -23.8344, -0.916337, 1.4", "-1.9036, -25.8961, -0.791424, 1.4", "-1.70864, -27.2883, -0.71289, 1.55", "-1.47989, -28.8219, -0.648847, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.330332, 1.47539, -10.46, 3.02", "0.330332, 1.47539, -10.46, 3.02", "-1.65966, 1.40539, -10.46, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.766585, 9.24885, 0.0, 0.672623", "1.60408, 24.2255, 0.0, 0.672623", "2.44158, 39.2021, 0.0, 0.672623" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-3.39952, 32.3653, 11.9343, 2.21", "-3.54943, 33.9053, 12.9543, 2.21" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-3.39952, 32.3653, 11.9343, 0.59", "-4.32992, 32.785, 12.695, 0.59", "-5.63758, 33.379, 13.6492, 0.59", "-6.56543, 33.7896, 14.2824, 0.44", "-7.94565, 34.3782, 15.1706, 0.29", "-8.4744, 34.5954, 15.4845, 0.29", "-9.07618, 34.843, 15.8413, 0.29", "-9.68304, 35.1208, 16.1901, 0.44", "-10.287, 35.4148, 16.5013, 0.66", "-11.1772, 35.8852, 16.9931, 0.66", "-11.8109, 36.2528, 17.4029, 0.44", "-12.5274, 36.7021, 17.9329, 0.44", "-13.1965, 37.1663, 18.5361, 0.66", "-13.5676, 37.4538, 18.9344, 0.66", "-14.2534, 38.0271, 19.7611, 0.29", "-14.7025, 38.4154, 20.3615, 0.29", "-15.5019, 39.0733, 21.4286, 0.44", "-16.2661, 39.631, 22.3673, 0.37", "-16.9107, 40.0362, 23.1025, 0.37", "-17.5804, 40.4071, 23.791, 0.66", "-18.3086, 40.7719, 24.4597, 1.18", "-19.2806, 41.2183, 25.2255, 1.47", "-20.4343, 41.7004, 26.0098, 0.37", "-21.162, 41.9793, 26.4496, 0.29", "-22.0204, 42.2859, 26.9266, 0.29", "-22.8814, 42.5858, 27.3752, 0.15", "-23.6071, 42.8497, 27.7441, 0.37", "-24.792, 43.3127, 28.3818, 0.22", "-25.5296, 43.6414, 28.7745, 0.22", "-26.5822, 44.1524, 29.3473, 0.22", "-27.1399, 44.4361, 29.6531, 0.96", "-28.1324, 44.9706, 30.1892, 1.84", "-28.8451, 45.3838, 30.5779, 1.84", "-29.8881, 46.049, 31.1374, 0.22", "-30.4625, 46.4508, 31.4407, 0.22", "-30.9561, 46.8231, 31.7102, 0.22", "-31.4477, 47.1854, 31.9729, 0.22", "-31.7831, 47.4181, 32.1412, 0.22", "-32.0026, 47.5598, 32.2451, 0.22", "-32.4561, 47.8353, 32.4854, 0.52", "-32.8262, 48.0718, 32.685, 1.03", "-33.259, 48.3754, 32.9472, 1.25", "-34.0044, 48.9329, 33.3971, 0.81", "-34.6501, 49.4585, 33.7804, 0.22", "-35.0528, 49.8081, 34.0497, 0.22", "-35.5493, 50.2806, 34.452, 0.59", "-36.3975, 51.2087, 35.2275, 0.07", "-36.6442, 51.5335, 35.4785, 0.15", "-37.1457, 52.3435, 36.0205, 0.15", "-37.8341, 53.6747, 36.793, 0.07", "-38.3984, 54.9153, 37.403, 0.07", "-38.6453, 55.5414, 37.6857, 0.07", "-38.9611, 56.4642, 38.0568, 0.07", "-39.3341, 57.6763, 38.492, 0.07", "-39.5702, 58.5198, 38.7633, 0.07", "-39.7831, 59.3103, 38.9739, 0.07", "-40.0635, 60.2413, 39.2137, 0.22", "-40.2449, 60.7525, 39.3705, 0.44", "-40.6071, 61.5832, 39.6706, 0.07", "-41.0916, 62.5257, 40.0795, 0.07", "-41.3496, 62.9718, 40.2951, 0.07", "-41.7322, 63.5599, 40.5828, 0.37", "-41.8805, 63.7642, 40.6765, 0.37", "-42.3747, 64.3936, 40.9896, 0.07", "-42.9357, 65.0646, 41.3218, 0.07", "-43.1587, 65.33, 41.4372, 0.37", "-43.8136, 66.158, 41.7552, 1.11", "-44.2069, 66.7021, 41.9443, 0.81", "-44.9201, 67.7543, 42.2606, 0.07", "-45.2887, 68.3087, 42.4, 0.07", "-45.6936, 68.901, 42.535, 0.59", "-46.4154, 69.9348, 42.7855, 0.15", "-47.2629, 71.0907, 43.0825, 0.15", "-47.872, 71.8441, 43.2943, 0.15", "-48.5687, 72.6125, 43.5479, 0.44", "-49.4351, 73.4583, 43.918, 0.15", "-49.8622, 73.8191, 44.0879, 0.15", "-50.6174, 74.3705, 44.3558, 0.74", "-51.6958, 75.0891, 44.6861, 0.07", "-52.5157, 75.6119, 44.8927, 0.07", "-53.2672, 76.0959, 45.042, 0.07", "-54.491, 76.8948, 45.1905, 0.07", "-55.361, 77.4733, 45.2073, 0.52", "-55.7978, 77.7653, 45.1677, 0.52", "-56.8256, 78.4624, 44.9721, 0.07", "-57.7279, 79.1035, 44.7275, 0.37", "-58.9292, 79.9615, 44.3531, 0.07", "-60.2349, 80.8745, 43.9341, 0.07", "-61.2153, 81.5492, 43.5668, 0.07", "-62.4763, 82.4077, 43.0509, 0.07", "-63.8876, 83.3648, 42.4145, 0.07", "-64.6222, 83.8517, 42.0537, 0.07", "-65.4294, 84.3857, 41.6413, 0.07", "-66.2452, 84.9279, 41.2552, 0.07", "-66.9988, 85.4282, 40.9222, 0.81" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-4.60031, -28.0564, 7.86649, 0.52", "-4.3386, -28.0381, 8.77279, 0.52", "-3.91806, -28.0418, 10.1738, 0.52", "-3.50178, -28.0964, 11.5379, 0.59", "-3.06673, -28.2241, 12.9843, 0.59", "-2.68577, -28.401, 14.2513, 0.59", "-2.31086, -28.6513, 15.4938, 0.59", "-1.90658, -29.0682, 16.8926, 0.59", "-1.74557, -29.3432, 17.4543, 0.59", "-1.5435, -29.8005, 18.1128, 0.59", "-1.37108, -30.2399, 18.6454, 0.52", "-1.13583, -30.8622, 19.3587, 0.52", "-0.865763, -31.5556, 20.113, 0.59", "-0.378308, -32.6222, 21.2965, 0.81", "0.189418, -33.6764, 22.5822, 0.52", "0.561919, -34.2717, 23.3656, 0.59", "1.0299, -34.8976, 24.2591, 0.81", "1.44017, -35.3672, 24.9923, 1.11", "2.35494, -36.2859, 26.4947, 0.37", "2.99621, -36.8691, 27.5186, 0.59", "3.56282, -37.3609, 28.4071, 0.66", "4.38569, -38.0096, 29.6796, 0.37", "4.97827, -38.4134, 30.6182, 0.37", "5.29636, -38.6011, 31.1959, 0.37", "5.72745, -38.8382, 32.1427, 0.37", "6.00431, -39.0096, 32.9616, 0.96", "6.28954, -39.2431, 34.1281, 0.96", "6.52228, -39.5298, 35.4356, 0.96", "6.82269, -40.0927, 37.6769, 0.66", "6.98841, -40.6151, 39.5858, 0.37", "7.05841, -41.2241, 41.5867, 0.37", "7.02227, -41.8435, 43.4967, 0.37", "6.97093, -42.1076, 44.273, 0.37", "6.8186, -42.6536, 45.819, 0.66", "6.62662, -43.3183, 47.6283, 0.66", "6.47191, -43.9302, 49.2633, 0.81", "6.30298, -44.7545, 51.4128, 0.88", "6.18926, -45.5106, 53.2998, 0.88", "6.13417, -46.394, 55.4041, 0.37", "6.15945, -47.1552, 57.1378, 0.29", "6.22406, -47.6621, 58.1362, 0.29", "6.33465, -48.2117, 59.0989, 0.29", "6.51891, -49.0318, 60.3607, 0.52", "6.75321, -50.0559, 61.8109, 0.96", "7.00974, -51.301, 63.4287, 0.96", "7.19768, -52.3279, 64.7346, 0.29", "7.3527, -53.2874, 65.9467, 0.29", "7.48897, -54.2477, 67.1831, 0.29", "7.56418, -54.9672, 68.1198, 0.88", "7.63827, -55.8377, 69.1356, 2.21" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-4.60031, -28.0564, 7.86649, 0.96", "-5.21612, -29.3483, 7.92095, 0.96", "-6.05559, -31.1265, 8.08589, 0.81", "-6.73699, -32.6816, 8.39846, 0.74", "-7.44669, -34.3557, 8.90475, 0.88", "-8.17751, -36.1243, 9.58226, 0.88", "-8.38574, -36.6736, 9.80894, 0.88", "-8.66119, -37.5446, 10.2271, 0.66", "-9.18567, -39.3606, 11.1683, 0.66", "-9.55518, -40.5496, 11.7979, 0.88", "-9.88613, -41.5118, 12.3002, 0.88", "-10.4792, -43.0119, 13.0421, 1.03", "-11.0906, -44.4698, 13.7063, 1.03", "-11.7746, -46.085, 14.332, 0.88", "-12.4536, -47.7172, 14.8692, 0.59", "-12.7782, -48.5598, 15.1479, 0.44", "-13.3457, -50.1073, 15.7099, 1.03", "-13.7165, -51.1563, 16.1306, 1.03", "-14.0271, -52.1684, 16.5302, 1.03", "-14.4651, -53.8419, 17.1726, 0.88", "-14.8778, -55.6276, 17.8201, 0.81", "-15.3263, -57.6968, 18.5575, 1.03", "-15.6796, -59.3249, 19.1165, 1.47", "-16.0763, -61.0457, 19.7093, 1.11", "-16.4756, -62.7568, 20.2866, 0.74", "-16.7593, -64.0338, 20.6988, 0.66", "-17.0235, -65.2948, 21.0925, 0.66", "-17.3463, -66.8912, 21.5824, 1.03", "-17.7667, -68.9447, 22.2026, 0.96", "-18.1253, -70.5809, 22.6762, 0.81", "-18.4728, -72.0331, 23.0632, 1.11", "-18.9666, -73.86, 23.5192, 0.74", "-19.4334, -75.3893, 23.9249, 0.37", "-19.8154, -76.5159, 24.2629, 0.37", "-20.2119, -77.6027, 24.6307, 0.96", "-20.6953, -78.877, 25.0935, 1.55", "-21.0292, -79.7538, 25.4182, 1.7", "-21.7385, -81.6555, 26.127, 0.81", "-22.2237, -83.015, 26.6529, 0.74", "-22.5881, -84.1195, 27.0737, 0.74", "-23.0143, -85.6218, 27.5991, 0.44", "-23.3966, -87.2165, 28.0872, 0.37", "-23.7063, -88.6613, 28.4512, 0.37", "-23.9187, -89.6692, 28.627, 0.37", "-24.2249, -91.0425, 28.7963, 0.74", "-24.5433, -92.4182, 28.9161, 1.03", "-24.6604, -92.9273, 28.9661, 1.03", "-24.945, -94.2721, 29.1112, 0.59", "-25.1318, -95.1909, 29.2397, 0.59", "-25.4721, -96.8091, 29.5619, 0.81", "-25.8113, -98.4099, 30.0465, 0.52", "-26.0625, -99.6508, 30.5549, 0.96", "-26.2995, -100.987, 31.1995, 1.25", "-26.532, -102.65, 32.0936, 0.66", "-26.7393, -104.326, 33.0014, 0.29", "-26.9346, -105.818, 33.8387, 0.29", "-27.1199, -106.985, 34.472, 0.29", "-27.2333, -107.571, 34.7569, 0.74", "-27.498, -108.707, 35.2396, 0.96", "-28.1019, -110.913, 35.9558, 0.22", "-28.5419, -112.264, 36.2567, 0.22", "-28.9472, -113.349, 36.419, 0.52", "-29.2702, -114.132, 36.5126, 1.03", "-29.6541, -115.007, 36.6235, 1.11", "-30.1702, -116.11, 36.7851, 0.59", "-30.7585, -117.298, 36.992, 0.22", "-31.1009, -117.969, 37.1086, 0.22", "-31.3816, -118.52, 37.2159, 0.22", "-31.7335, -119.235, 37.3583, 0.44", "-32.189, -120.211, 37.5488, 0.96", "-32.6839, -121.327, 37.7554, 0.96", "-33.0659, -122.191, 37.9137, 0.44", "-33.6817, -123.553, 38.1838, 0.22", "-34.0284, -124.325, 38.3568, 0.59", "-34.317, -124.992, 38.5147, 0.59", "-34.7685, -126.111, 38.7838, 0.15", "-35.1914, -127.25, 39.1035, 0.15", "-35.579, -128.366, 39.5039, 0.15", "-35.9352, -129.452, 39.9255, 0.52", "-36.153, -130.115, 40.2101, 1.33", "-36.5142, -131.19, 40.7032, 1.55", "-36.9703, -132.519, 41.3061, 1.18", "-37.7292, -134.622, 42.1841, 0.37", "-38.3581, -136.224, 42.7877, 0.22", "-38.9551, -137.607, 43.2541, 0.22", "-39.5713, -138.93, 43.6598, 0.37", "-40.2864, -140.373, 44.0382, 0.96", "-41.026, -141.796, 44.3418, 0.22", "-41.612, -142.882, 44.5193, 0.22", "-42.3521, -144.239, 44.7094, 0.22", "-42.8141, -145.108, 44.7993, 0.37", "-43.2871, -146.017, 44.8868, 0.88", "-43.9597, -147.409, 45.086, 0.88", "-44.7683, -149.26, 45.4262, 0.22", "-45.1366, -150.193, 45.6298, 0.44", "-45.5546, -151.319, 45.9048, 0.88", "-45.9356, -152.371, 46.1711, 0.37", "-46.6836, -154.418, 46.6815, 0.15", "-47.2286, -155.917, 47.026, 0.15", "-47.6283, -157.069, 47.3195, 0.15", "-47.8236, -157.663, 47.4789, 0.29", "-48.1696, -158.755, 47.7899, 0.96", "-48.5572, -160.035, 48.1791, 0.29", "-48.8936, -161.188, 48.5489, 0.15", "-49.2697, -162.578, 49.0622, 0.15", "-49.5446, -163.652, 49.4936, 0.15", "-49.8482, -164.897, 50.0071, 0.15", "-50.0783, -165.855, 50.3973, 0.15", "-50.3781, -167.058, 50.867, 0.29", "-50.6635, -168.065, 51.221, 0.81", "-51.1126, -169.496, 51.6471, 1.11", "-51.5648, -170.834, 51.9953, 0.29", "-52.0669, -172.278, 52.3078, 0.15", "-52.5236, -173.561, 52.5327, 0.15", "-52.9767, -174.837, 52.7045, 0.15", "-53.2752, -175.693, 52.7944, 0.15", "-53.4308, -176.159, 52.8291, 0.37", "-53.6695, -176.855, 52.9006, 0.88", "-53.8851, -177.406, 52.9674, 1.11", "-54.4013, -178.521, 53.1117, 0.29", "-54.9875, -179.537, 53.2481, 0.15", "-55.4176, -180.175, 53.3287, 0.15", "-56.3931, -181.436, 53.437, 0.15", "-57.0406, -182.187, 53.4799, 0.59", "-57.7489, -182.957, 53.5017, 0.59", "-59.459, -184.724, 53.4701, 0.15", "-60.4871, -185.774, 53.3657, 0.15", "-61.6033, -186.937, 53.1627, 0.15", "-61.9187, -187.282, 53.0707, 0.37", "-62.8264, -188.342, 52.7536, 0.96", "-63.597, -189.294, 52.4416, 0.22", "-64.2807, -190.214, 52.1269, 0.22", "-64.6249, -190.733, 51.9894, 0.22", "-64.9519, -191.3, 51.8816, 0.44", "-65.3274, -191.954, 51.7507, 0.81", "-65.9191, -192.929, 51.5431, 0.22", "-66.5125, -193.828, 51.3638, 0.29", "-67.2452, -194.875, 51.1714, 0.22", "-68.122, -196.067, 50.9342, 0.88", "-69.2641, -197.522, 50.627, 0.07", "-69.9109, -198.308, 50.4553, 0.07", "-70.7201, -199.24, 50.222, 0.15", "-71.7498, -200.358, 49.9146, 0.07", "-72.1087, -200.723, 49.8085, 0.29", "-72.8987, -201.507, 49.6333, 0.44", "-73.527, -202.148, 49.5183, 0.15", "-74.3506, -203.009, 49.3621, 0.15", "-74.8099, -203.492, 49.2652, 0.37", "-75.3572, -204.074, 49.1479, 0.44", "-76.2157, -205.036, 48.9656, 0.15", "-76.6973, -205.606, 48.8715, 0.15", "-77.112, -206.087, 48.8124, 0.37", "-77.4693, -206.511, 48.7831, 0.52", "-78.1462, -207.365, 48.7119, 0.15", "-78.3946, -207.699, 48.6824, 0.15", "-78.995, -208.553, 48.6085, 0.52", "-79.8635, -209.857, 48.5081, 0.15", "-80.3764, -210.679, 48.4401, 0.52", "-81.1619, -212.039, 48.3263, 0.15", "-81.3971, -212.494, 48.2724, 0.37", "-81.5508, -212.832, 48.2139, 0.81", "-81.7327, -213.31, 48.094, 1.03", "-82.0112, -214.18, 47.8187, 0.07", "-82.3434, -215.183, 47.447, 0.15", "-82.6959, -216.117, 47.0247, 0.29", "-83.0411, -216.964, 46.5527, 0.15", "-83.3446, -217.659, 46.0893, 0.15", "-83.5501, -218.113, 45.7373, 0.29", "-83.8322, -218.741, 45.2076, 0.37", "-84.2629, -219.679, 44.363, 0.22", "-84.6649, -220.53, 43.5921, 0.22", "-85.0948, -221.426, 42.7619, 0.22", "-85.3306, -221.91, 42.2961, 0.22", "-85.5365, -222.348, 41.8412, 0.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "44.7248, 34.3506, 3.8562, 0.59", "46.1536, 34.5459, 4.07584, 0.59", "46.9439, 34.6613, 4.22828, 0.59", "48.0742, 34.7869, 4.5034, 0.59", "48.9385, 34.8521, 4.67531, 0.59", "49.5983, 34.8848, 4.75916, 0.44", "50.7021, 34.9366, 4.79865, 0.59", "51.8194, 35.011, 4.73073, 0.59", "53.0568, 35.1326, 4.54084, 0.66", "54.3486, 35.3399, 4.21689, 0.66", "55.4479, 35.6397, 3.84671, 0.66", "56.6304, 36.1507, 3.3261, 0.52", "57.2858, 36.5408, 2.98952, 0.52", "57.8532, 36.9592, 2.70387, 0.88", "58.5568, 37.5326, 2.38242, 1.03", "59.4463, 38.2718, 2.07663, 0.74", "60.656, 39.1785, 1.82138, 0.81", "61.2887, 39.551, 1.76994, 0.59", "62.4926, 40.0741, 1.80591, 0.52", "63.5043, 40.3814, 1.95754, 0.81", "64.06, 40.4957, 2.11981, 1.03", "65.3609, 40.7068, 2.6398, 0.59", "66.5887, 40.9107, 3.20234, 0.44", "67.6211, 41.1308, 3.69271, 0.52", "68.6299, 41.4364, 4.13545, 0.52", "69.9114, 41.9652, 4.60523, 0.59", "70.9635, 42.506, 4.86972, 0.66", "71.9657, 43.1083, 4.98303, 1.11", "72.6707, 43.5688, 4.97876, 1.18", "74.0588, 44.4754, 4.82784, 0.74", "74.9847, 45.0762, 4.67423, 0.37", "75.6189, 45.4904, 4.55787, 0.37", "76.3666, 45.9757, 4.41596, 0.44", "76.8504, 46.2967, 4.33161, 0.44", "77.4177, 46.7045, 4.21549, 0.44", "78.2429, 47.3728, 4.037, 0.74", "79.0678, 48.1271, 3.7964, 0.96", "80.0516, 49.102, 3.41705, 0.88", "80.7154, 49.7688, 3.10397, 0.66", "81.396, 50.3988, 2.72427, 0.66", "82.1016, 50.9769, 2.25519, 0.37", "82.7566, 51.4317, 1.74229, 0.29", "83.3126, 51.7655, 1.2479, 0.52", "83.8462, 52.0726, 0.747696, 1.11", "84.5584, 52.5086, 0.0655945, 0.59", "85.2448, 53.0117, -0.556067, 0.37", "85.7126, 53.45, -0.953829, 0.37", "86.4583, 54.3055, -1.48234, 0.88", "86.8851, 54.864, -1.72715, 0.96", "87.6249, 55.8712, -2.05271, 0.74", "88.3627, 56.8412, -2.26242, 0.59", "89.0823, 57.6669, -2.36494, 0.44", "89.7377, 58.3215, -2.38736, 1.03", "90.1782, 58.722, -2.39152, 1.03", "90.9911, 59.4212, -2.4291, 0.81", "91.4955, 59.8658, -2.46891, 0.88", "92.2977, 60.6903, -2.55863, 0.59", "93.1331, 61.7562, -2.64521, 0.44", "93.8828, 62.9362, -2.65781, 0.44", "94.2762, 63.6513, -2.60746, 0.44", "94.7345, 64.5723, -2.44886, 0.59", "95.4144, 65.9083, -2.04682, 0.74", "95.8895, 66.7109, -1.6723, 0.44", "96.5088, 67.5405, -1.13221, 0.44", "97.1502, 68.2653, -0.546991, 0.66", "97.965, 69.0897, 0.208889, 0.88", "98.8902, 69.9383, 1.05294, 0.88", "99.9468, 70.8362, 1.98821, 0.37", "100.832, 71.5951, 2.7112, 0.29", "101.046, 71.7839, 2.86924, 0.29", "101.508, 72.2089, 3.17435, 0.29", "101.864, 72.5369, 3.36331, 0.29", "102.203, 72.8453, 3.49437, 0.29", "103.086, 73.6053, 3.73243, 0.37", "103.865, 74.1941, 3.87489, 0.74", "104.81, 74.8468, 3.95003, 0.96", "105.679, 75.4165, 3.9507, 1.18", "106.442, 75.9008, 3.91629, 1.11", "107.054, 76.2784, 3.8629, 0.88", "107.912, 76.7957, 3.77542, 0.66", "109.294, 77.6081, 3.66619, 0.44", "110.3, 78.1689, 3.65023, 0.66", "110.879, 78.4786, 3.68888, 0.44", "111.467, 78.7706, 3.78593, 0.44", "112.377, 79.1961, 4.02696, 0.74", "113.219, 79.5716, 4.33081, 1.18", "114.375, 80.0864, 4.85184, 1.11", "115.334, 80.5474, 5.30474, 0.81", "116.392, 81.0968, 5.8035, 0.44", "117.22, 81.5432, 6.18849, 0.44", "117.737, 81.8244, 6.41658, 0.44", "118.446, 82.2053, 6.70149, 0.66", "119.415, 82.706, 7.07434, 0.37", "119.915, 82.957, 7.26321, 0.29", "120.403, 83.2184, 7.46139, 0.29", "121.007, 83.5655, 7.74698, 0.29", "121.682, 83.9907, 8.09962, 0.81", "122.301, 84.4458, 8.47013, 1.03", "123.117, 85.1619, 9.04804, 0.59", "123.966, 86.0057, 9.77288, 0.52", "124.636, 86.7188, 10.392, 0.74", "125.083, 87.2046, 10.841, 0.37", "125.922, 88.0833, 11.6864, 0.29", "126.668, 88.8237, 12.4101, 0.29", "127.694, 89.77, 13.3992, 0.29", "128.086, 90.1079, 13.7578, 0.88", "128.748, 90.6605, 14.3205, 0.88", "129.546, 91.2848, 14.9346, 0.29", "130.179, 91.7501, 15.3535, 0.22", "130.858, 92.2519, 15.723, 0.29", "131.59, 92.7956, 16.0366, 0.74", "132.126, 93.1899, 16.2424, 0.29", "133.245, 93.998, 16.5957, 0.22", "134.038, 94.5679, 16.8275, 0.22", "134.725, 95.0442, 16.9937, 0.37", "135.622, 95.6321, 17.1694, 0.74", "136.263, 96.0286, 17.3024, 0.74", "136.96, 96.4565, 17.4463, 0.29", "137.817, 96.9814, 17.6325, 0.22", "138.446, 97.3412, 17.794, 0.37", "139.255, 97.7605, 18.0483, 0.22", "140.088, 98.1487, 18.3398, 0.22", "140.516, 98.3252, 18.5053, 0.37", "141.439, 98.6624, 18.8793, 0.37", "142.412, 98.9884, 19.2996, 0.37", "143.184, 99.2661, 19.6533, 0.44", "143.72, 99.4753, 19.9098, 0.81", "144.525, 99.8254, 20.3121, 1.47", "145.024, 100.066, 20.5829, 1.62", "146.119, 100.654, 21.2266, 0.59", "147.438, 101.412, 22.0622, 0.29", "148.279, 101.915, 22.616, 0.22", "148.799, 102.235, 22.9754, 0.22", "149.253, 102.524, 23.2898, 0.22", "149.7, 102.812, 23.5976, 0.22", "150.14, 103.093, 23.8876, 0.22", "150.759, 103.456, 24.2917, 0.37", "151.3, 103.752, 24.626, 0.88", "151.755, 103.99, 24.8895, 1.25", "152.467, 104.361, 25.2997, 1.25", "153.152, 104.734, 25.7191, 0.29", "153.839, 105.129, 26.1763, 0.15", "154.37, 105.448, 26.5345, 0.29", "155.072, 105.876, 26.9792, 0.15", "155.508, 106.149, 27.2552, 0.15", "155.86, 106.376, 27.4664, 0.44", "156.761, 106.949, 27.9096, 0.74", "157.501, 107.413, 28.2295, 0.22", "158.338, 107.919, 28.5494, 0.15", "158.928, 108.276, 28.7485, 0.66", "159.464, 108.625, 28.8977, 0.66", "160.793, 109.554, 29.2496, 0.22", "161.415, 110.033, 29.4108, 0.66", "161.919, 110.471, 29.5476, 1.18", "162.405, 110.946, 29.6991, 0.96", "163.5, 112.107, 30.0791, 0.15", "163.885, 112.552, 30.2323, 0.15", "164.324, 113.112, 30.4215, 0.22", "164.83, 113.722, 30.6425, 0.07", "165.538, 114.498, 31.0008, 0.07", "165.823, 114.779, 31.1696, 0.74", "166.389, 115.274, 31.5327, 1.03", "167.016, 115.786, 31.9368, 0.44", "167.997, 116.55, 32.6729, 0.15", "168.663, 117.047, 33.2538, 0.15", "169.092, 117.363, 33.6934, 0.15", "169.433, 117.613, 34.1094, 0.37", "169.896, 117.934, 34.7708, 0.59", "170.765, 118.505, 36.2627, 0.22", "171.211, 118.797, 37.1805, 0.44", "171.567, 119.023, 38.0466, 0.44", "171.77, 119.143, 38.6146, 0.44", "171.941, 119.222, 39.1725, 0.44", "172.231, 119.276, 40.162, 0.44", "172.314, 119.272, 40.4339, 0.44", "172.448, 119.259, 40.8396, 0.44", "172.712, 119.219, 41.5374, 0.44", "172.998, 119.157, 42.223, 0.44", "173.771, 118.955, 43.9578, 0.22", "174.316, 118.786, 45.0934, 0.22", "174.748, 118.635, 45.9878, 0.22", "175.139, 118.475, 46.8187, 0.74", "175.962, 118.06, 48.649, 0.22", "176.613, 117.678, 50.2137, 0.52", "177.098, 117.357, 51.4405, 0.22", "177.532, 117.061, 52.6027, 0.52", "177.924, 116.794, 53.7378, 0.52", "178.3, 116.541, 55.0615, 0.29", "178.589, 116.357, 56.4642, 0.29", "178.672, 116.323, 57.1203, 0.29", "178.733, 116.372, 58.0417, 0.29", "178.758, 116.46, 58.4961, 0.29", "178.828, 116.752, 59.3709, 0.29", "178.98, 117.194, 60.3604, 0.29", "179.112, 117.433, 60.8421, 0.29", "179.355, 117.735, 61.4946, 0.52", "179.803, 118.17, 62.5744, 0.22", "180.431, 118.686, 63.8324, 0.22", "180.926, 119.056, 64.6995, 0.22", "181.357, 119.399, 65.3899, 0.52", "182.119, 120.093, 66.579, 0.52", "182.804, 120.749, 67.6712, 0.52", "183.755, 121.755, 69.1795, 0.22", "184.392, 122.51, 70.1435, 0.22", "185.045, 123.382, 71.1284, 0.22", "185.529, 124.097, 71.8126, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "44.7248, 34.3506, 3.8562, 0.81", "45.0228, 35.677, 3.32848, 0.81", "45.3696, 36.7882, 2.71699, 0.52", "45.6902, 37.5886, 2.14786, 0.66", "46.1673, 38.6002, 1.18615, 0.44", "46.5338, 39.363, 0.278683, 0.44", "46.8747, 40.0783, -0.708823, 0.44", "47.1472, 40.5147, -1.59308, 0.44", "47.3937, 40.784, -2.42612, 0.44", "47.7214, 41.0511, -3.61744, 0.44", "47.9555, 41.2162, -4.52384, 0.44", "48.1183, 41.3329, -5.08354, 0.44", "48.4052, 41.5897, -5.94691, 0.59", "48.7749, 42.0359, -6.87214, 0.59", "48.9468, 42.2839, -7.20193, 0.59", "49.2925, 42.8289, -7.72581, 0.66", "49.5736, 43.3247, -8.10534, 0.96", "49.8147, 43.8573, -8.43854, 0.96", "50.0977, 44.66, -8.83992, 0.96", "50.466, 45.8491, -9.3244, 0.88", "50.6939, 46.6147, -9.59396, 0.52", "50.9623, 47.4292, -9.8361, 0.29", "51.2186, 48.1275, -10.0082, 0.29", "51.4883, 48.7603, -10.1317, 0.44", "51.8069, 49.4183, -10.2191, 0.88", "52.1989, 50.1792, -10.3119, 0.66", "52.7821, 51.315, -10.5056, 0.52", "53.0925, 51.9619, -10.6697, 0.59", "53.5755, 53.0777, -11.0579, 0.74", "54.027, 54.2842, -11.6165, 0.88", "54.2823, 55.0939, -12.0928, 0.52", "54.5034, 55.9402, -12.6863, 0.52", "54.7059, 56.8079, -13.3957, 0.59", "54.846, 57.261, -13.8172, 0.59", "55.0667, 57.7878, -14.361, 0.81", "55.4213, 58.433, -15.0386, 0.81", "55.8449, 59.0659, -15.596, 0.81", "56.3675, 59.7495, -16.0647, 0.52", "57.1815, 60.7665, -16.5766, 0.29", "57.5773, 61.2498, -16.7503, 0.29", "58.1137, 61.8628, -16.8958, 0.59", "58.9209, 62.7266, -17.0033, 0.81", "59.4256, 63.2504, -17.0398, 1.03", "60.0254, 63.9086, -17.0509, 0.29", "60.5523, 64.5484, -17.0587, 0.22", "61.0684, 65.2646, -17.0963, 0.22", "61.3973, 65.847, -17.1763, 0.29", "61.7846, 66.7232, -17.3515, 0.74", "62.0514, 67.4772, -17.4976, 0.88", "62.2684, 68.2182, -17.645, 0.88", "62.4723, 69.0965, -17.811, 0.52", "62.7358, 70.5126, -18.0555, 0.52", "62.8694, 71.3952, -18.201, 0.44", "63.0242, 72.6864, -18.4234, 0.44", "63.0924, 73.5806, -18.5959, 0.44", "63.1101, 74.4428, -18.771, 0.74", "63.0838, 75.0407, -18.8828, 0.88", "62.933, 76.3005, -19.0901, 0.96", "62.7551, 77.4775, -19.2313, 0.29", "62.6508, 78.3109, -19.2556, 0.22", "62.6323, 78.9794, -19.1751, 0.22", "62.747, 79.9915, -18.9005, 0.74", "62.8255, 80.3347, -18.7803, 0.74", "63.2092, 81.5268, -18.3217, 0.52", "63.6409, 82.7104, -17.924, 0.44", "64.0337, 83.7581, -17.6863, 0.44", "64.3843, 84.8159, -17.5849, 0.66", "64.6562, 85.8874, -17.6383, 0.66", "64.7888, 86.6562, -17.7206, 0.66", "64.9115, 87.8676, -17.9475, 0.29", "64.9592, 88.7139, -18.1135, 0.29", "64.9946, 89.6702, -18.2176, 0.44", "65.0079, 90.2762, -18.1999, 0.44", "65.0242, 91.3652, -17.9818, 0.74", "65.0256, 91.8648, -17.8287, 1.11", "65.0124, 93.052, -17.41, 0.44", "64.9754, 94.2956, -16.9847, 0.74", "64.937, 94.8833, -16.8305, 0.52", "64.8584, 95.5745, -16.7376, 0.29", "64.7411, 96.2598, -16.764, 0.22", "64.5078, 97.203, -16.9607, 0.59", "64.2806, 97.9328, -17.2378, 0.96", "64.001, 98.7148, -17.5904, 0.66", "63.6543, 99.6516, -17.9807, 0.44", "63.3069, 100.646, -18.3161, 0.44", "62.9514, 101.825, -18.5233, 0.22", "62.8042, 102.472, -18.5199, 0.37", "62.6618, 103.487, -18.3475, 0.59", "62.5946, 104.625, -18.0016, 0.29", "62.5962, 105.77, -17.5596, 0.29", "62.6024, 106.966, -17.0632, 0.37", "62.5675, 107.548, -16.8262, 0.29", "62.4186, 108.45, -16.5218, 0.66", "62.1862, 109.23, -16.3461, 1.11", "61.9086, 109.875, -16.2746, 1.11", "61.3101, 111.031, -16.2731, 0.37", "60.5893, 112.385, -16.3685, 0.22", "60.3023, 112.935, -16.4208, 0.59", "60.0213, 113.471, -16.483, 1.11", "59.4235, 114.669, -16.6433, 0.29", "58.8329, 116.009, -16.8507, 0.96", "58.5184, 116.931, -17.0383, 0.15", "58.3934, 117.441, -17.1652, 0.22", "58.136, 118.637, -17.5273, 0.07", "58.038, 119.127, -17.7271, 0.22", "57.9891, 119.398, -17.8728, 0.22", "57.8803, 120.184, -18.4219, 0.07", "57.8568, 120.517, -18.7029, 0.22", "57.8621, 120.857, -19.028, 0.22", "57.9501, 121.465, -19.682, 0.15", "57.9945, 121.765, -20.0224, 0.29", "58.0504, 122.338, -20.6693, 0.07", "58.0585, 122.676, -21.0338, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.47989, -28.8219, -0.648847, 0.81", "-1.00616, -29.6187, -1.8147, 0.81", "-0.374005, -30.548, -3.25629, 0.81", "0.0310108, -31.0549, -4.09435, 0.81", "0.561197, -31.5979, -5.04161, 0.88", "1.12966, -32.0537, -5.9178, 1.18", "1.56133, -32.3199, -6.50379, 1.18", "1.93228, -32.465, -6.93636, 1.18", "2.64539, -32.6701, -7.60771, 0.96", "3.5494, -32.9086, -8.34856, 0.96", "4.5974, -33.1768, -9.1342, 0.81", "5.94536, -33.5455, -10.0395, 0.81", "6.7649, -33.7906, -10.5116, 0.81", "8.06235, -34.2023, -11.1002, 0.81", "9.25411, -34.6038, -11.4672, 0.88", "10.2899, -34.9835, -11.6061, 0.88", "11.2635, -35.3821, -11.5136, 0.59", "12.2812, -35.8136, -11.1691, 0.59", "13.4882, -36.2933, -10.5179, 0.59", "14.3108, -36.5853, -9.92464, 0.74", "15.1259, -36.844, -9.2379, 0.59", "16.125, -37.1497, -8.3477, 0.59", "17.0475, -37.4388, -7.54797, 0.88", "18.1636, -37.803, -6.68649, 0.88", "19.2176, -38.1835, -6.0039, 1.03", "20.4284, -38.6815, -5.3902, 0.81", "21.2885, -39.0828, -5.07131, 0.66", "22.2306, -39.599, -4.83465, 0.66", "23.3207, -40.312, -4.59054, 0.44", "24.5739, -41.2374, -4.26167, 0.44", "25.5252, -41.978, -3.89417, 0.66", "26.0645, -42.4102, -3.59144, 1.11", "27.0605, -43.18, -2.78962, 1.25", "28.2536, -44.0563, -1.59002, 0.44", "29.2089, -44.7177, -0.525948, 0.52", "30.2667, -45.3979, 0.709236, 0.52", "31.0511, -45.8797, 1.63134, 0.52", "32.128, -46.5669, 2.91468, 0.59", "32.7504, -46.9905, 3.66803, 0.96", "33.409, -47.4822, 4.47149, 1.11", "34.1704, -48.1033, 5.4146, 0.81", "34.9654, -48.7764, 6.42537, 0.52", "35.5917, -49.2544, 7.23463, 0.52", "35.8281, -49.4203, 7.53596, 0.52", "36.1885, -49.6515, 7.99348, 0.52", "36.5436, -49.8607, 8.38135, 0.52", "37.2717, -50.2522, 8.99508, 0.96", "38.4748, -50.8715, 9.74971, 0.44", "39.1848, -51.2504, 10.1006, 0.81", "39.8805, -51.6504, 10.4122, 1.03", "41.2266, -52.514, 10.9337, 0.44", "42.0554, -53.091, 11.2432, 0.44", "42.643, -53.5243, 11.4731, 0.88", "43.2248, -53.9684, 11.7422, 1.55", "44.0416, -54.5795, 12.1961, 1.55", "44.9924, -55.2959, 12.8426, 0.52", "46.095, -56.1645, 13.7335, 0.22", "46.6178, -56.5898, 14.1959, 0.22", "47.185, -57.0604, 14.7516, 0.22", "47.6254, -57.4305, 15.2138, 0.74", "48.1316, -57.8566, 15.7407, 1.18", "48.5195, -58.1846, 16.1426, 1.18", "49.5711, -59.0971, 17.1233, 0.22", "50.0395, -59.4933, 17.504, 0.22", "50.8005, -60.1198, 18.0149, 0.88", "51.8188, -60.9492, 18.6036, 0.15", "52.2893, -61.324, 18.8367, 0.96", "52.8365, -61.7581, 19.0685, 1.25", "53.9744, -62.6616, 19.417, 0.15", "55.2654, -63.6855, 19.7041, 0.15", "55.8283, -64.1386, 19.7958, 0.15", "56.7856, -64.9353, 19.9133, 0.15", "57.2638, -65.3442, 19.9777, 0.96", "58.1218, -66.1069, 20.1181, 1.4", "58.4638, -66.4239, 20.1778, 1.33", "59.3495, -67.267, 20.4051, 0.22", "59.8468, -67.7321, 20.551, 0.29", "60.6247, -68.4501, 20.8063, 0.59", "61.3225, -69.0686, 21.0483, 0.59", "62.0065, -69.6296, 21.3078, 1.7", "62.6628, -70.1207, 21.5599, 0.81", "63.8596, -70.9285, 22.0254, 0.15", "64.3677, -71.2434, 22.233, 0.44", "65.0096, -71.6103, 22.4814, 0.74", "66.2498, -72.2794, 22.9898, 0.22", "66.9663, -72.6477, 23.2925, 0.96", "67.6933, -73.0031, 23.6012, 1.25", "68.6173, -73.4501, 24.036, 0.29", "69.8154, -74.0243, 24.6062, 0.07", "70.4038, -74.3033, 24.8837, 0.29", "71.2376, -74.7029, 25.2544, 0.74", "72.5752, -75.3595, 25.8617, 0.15", "73.4996, -75.8296, 26.3329, 0.15", "73.9324, -76.0644, 26.5948, 0.15", "74.2931, -76.2792, 26.871, 0.74", "74.5172, -76.4196, 27.0624, 0.96", "75.4908, -77.0577, 27.974, 0.15", "76.0709, -77.4513, 28.5339, 0.15", "76.7891, -77.9648, 29.227, 0.88", "77.7392, -78.6925, 30.2296, 0.15", "77.9743, -78.8847, 30.5055, 0.15", "78.3499, -79.2073, 30.9381, 0.29", "78.6215, -79.4551, 31.254, 0.29", "79.2131, -80.0009, 31.9905, 0.15", "79.8082, -80.5574, 32.8391, 0.15", "80.3082, -81.0054, 33.6319, 0.15", "80.7885, -81.4159, 34.4845, 1.03", "81.5284, -82.0013, 35.9781, 0.15", "82.0788, -82.391, 37.1721, 0.15", "82.4755, -82.627, 38.0266, 0.15", "83.0082, -82.9079, 39.1895, 0.15", "83.5377, -83.1656, 40.4153, 0.15", "84.094, -83.4094, 41.8088, 0.15", "84.5511, -83.5882, 43.0072, 0.15", "84.9864, -83.7549, 44.1492, 0.15", "85.5204, -83.9558, 45.5604, 0.15", "86.1029, -84.1808, 47.1544, 0.15", "86.431, -84.3045, 48.0456, 0.15", "87.2272, -84.6075, 50.2384, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.47989, -28.8219, -0.648847, 0.96", "-2.31999, -29.8339, -0.752049, 0.96", "-3.05316, -30.9268, -0.923145, 0.74", "-3.67782, -32.1065, -1.17108, 0.74", "-4.22176, -33.3476, -1.47291, 1.03", "-4.55027, -34.2206, -1.71061, 1.18", "-5.02154, -35.5675, -2.10336, 0.81", "-5.30766, -36.6387, -2.44275, 0.81", "-5.58327, -37.7749, -2.81038, 0.88", "-5.73322, -38.3701, -2.99838, 1.25", "-6.03134, -39.4511, -3.30816, 1.25", "-6.56393, -41.2175, -3.77257, 0.96", "-7.00928, -42.6478, -4.06697, 0.74", "-7.36983, -43.8956, -4.24015, 0.74", "-7.65762, -45.0721, -4.36134, 0.96", "-7.84942, -46.1624, -4.4439, 0.74", "-7.95727, -47.4253, -4.50468, 0.74", "-7.94057, -49.2622, -4.52389, 0.96", "-7.82631, -50.5603, -4.48711, 0.74", "-7.62612, -51.7924, -4.42018, 0.81", "-7.30628, -53.2282, -4.29131, 1.18", "-6.9031, -54.7032, -4.1121, 1.18", "-6.25115, -56.8031, -3.80848, 0.96", "-5.69073, -58.5456, -3.52287, 0.96", "-5.27885, -59.8823, -3.26202, 1.03", "-4.8594, -61.3334, -2.92106, 0.74", "-4.5289, -62.6257, -2.58945, 0.74", "-4.29839, -63.9159, -2.22141, 1.03", "-4.22399, -65.2683, -1.81369, 0.88", "-4.37007, -66.7113, -1.37038, 0.66", "-4.56064, -67.5592, -1.11149, 0.59", "-4.81263, -68.3877, -0.871316, 0.81", "-5.33227, -69.881, -0.467804, 0.59", "-5.75688, -71.0732, -0.195218, 0.81", "-6.0655, -72.017, -0.0549041, 0.81", "-6.38521, -73.1601, 0.00183413, 0.81", "-6.633, -74.1988, -0.0248728, 1.25", "-6.87994, -75.3683, -0.13429, 1.25", "-7.23023, -76.9641, -0.429174, 0.66", "-7.5185, -78.1392, -0.744699, 0.66", "-7.80423, -79.144, -1.10643, 1.03", "-8.11927, -80.1813, -1.59347, 1.33", "-8.32317, -81.0012, -2.06526, 0.88", "-8.44514, -81.9771, -2.72374, 0.59", "-8.38845, -82.6133, -3.19591, 0.59", "-8.13409, -83.2792, -3.65131, 0.59", "-7.60678, -84.1108, -4.17212, 0.59", "-6.75319, -85.2614, -4.81679, 0.22", "-6.3024, -85.8815, -5.13105, 0.74", "-5.87847, -86.5292, -5.44237, 1.11", "-5.28148, -87.6934, -6.00308, 0.52", "-4.99517, -88.5481, -6.42418, 0.66", "-4.81157, -89.5277, -6.90547, 0.96", "-4.69971, -90.7424, -7.45938, 0.81", "-4.63776, -91.7139, -7.85134, 0.59", "-4.58603, -92.7153, -8.20524, 0.59", "-4.53426, -93.8772, -8.54005, 0.44", "-4.49521, -95.1175, -8.74117, 0.74", "-4.50428, -96.5493, -8.83307, 0.74", "-4.58011, -97.6681, -8.83549, 0.81", "-4.72238, -98.6198, -8.81368, 1.03", "-5.01614, -99.7835, -8.79943, 1.03", "-5.59821, -101.432, -8.86134, 0.59", "-6.12369, -102.679, -8.97579, 0.44", "-6.63947, -103.8, -9.10481, 0.52", "-7.14049, -104.853, -9.21714, 1.03", "-7.70208, -106.062, -9.29368, 0.81", "-8.19176, -107.232, -9.27607, 0.29", "-8.60453, -108.486, -9.12908, 0.29", "-8.80689, -109.394, -8.903, 0.44", "-8.9357, -110.279, -8.57795, 0.96", "-9.05451, -111.468, -8.05893, 1.11", "-9.15751, -112.861, -7.45101, 0.59", "-9.24032, -114.042, -6.9677, 0.59", "-9.36387, -115.639, -6.4202, 0.52", "-9.42529, -116.505, -6.2183, 0.52", "-9.50773, -117.934, -6.02592, 0.81", "-9.59231, -119.395, -6.00269, 0.88", "-9.65071, -120.239, -6.07535, 0.66", "-9.73915, -121.287, -6.28674, 0.52", "-9.83018, -122.376, -6.62882, 0.81", "-9.86525, -123.078, -6.90295, 0.52", "-9.85334, -124.088, -7.35355, 0.37", "-9.79407, -124.884, -7.72568, 0.96", "-9.61971, -126.17, -8.30854, 0.74", "-9.44665, -127.073, -8.68906, 0.96", "-9.27733, -127.805, -8.92017, 0.96", "-9.00872, -128.919, -9.09602, 0.37", "-8.82542, -129.759, -9.00627, 0.29", "-8.60951, -131.017, -8.53227, 0.59", "-8.54199, -131.527, -8.21184, 0.59", "-8.43487, -132.51, -7.47541, 0.59", "-8.3379, -133.494, -6.6851, 0.96", "-8.22999, -134.646, -5.74211, 0.52", "-8.16676, -135.409, -5.13614, 0.44", "-8.11832, -136.204, -4.53825, 0.44", "-8.08807, -137.003, -3.93202, 0.88", "-8.08007, -137.831, -3.3282, 0.44", "-8.10684, -138.681, -2.74757, 0.37", "-8.20171, -139.608, -2.16483, 0.74", "-8.39468, -140.625, -1.585, 0.22", "-8.6593, -141.61, -1.05088, 0.29", "-8.99054, -142.597, -0.496492, 0.59", "-9.43859, -143.78, 0.175894, 1.18", "-9.84382, -144.836, 0.758496, 0.66", "-10.149, -145.826, 1.28523, 0.37", "-10.3133, -146.68, 1.74817, 0.29", "-10.3414, -147.317, 2.11958, 0.29", "-10.2922, -147.773, 2.41032, 0.74", "-10.1798, -148.24, 2.74191, 1.11", "-9.76584, -149.563, 3.64422, 0.44", "-9.51752, -150.392, 4.12928, 0.44", "-9.39046, -151.046, 4.40394, 0.44", "-9.2962, -151.984, 4.71581, 0.29", "-9.28908, -152.934, 4.96871, 0.29", "-9.37301, -154.166, 5.23666, 0.59", "-9.52462, -155.426, 5.45508, 1.18", "-9.731, -157.216, 5.73916, 1.4", "-9.81929, -158.149, 5.88974, 1.18", "-9.87866, -159.422, 6.05778, 0.52", "-9.88681, -160.34, 6.11771, 0.52", "-9.86997, -161.459, 6.11407, 0.96", "-9.79939, -162.753, 5.97477, 0.74", "-9.72348, -163.475, 5.8106, 0.74", "-9.56755, -164.651, 5.37743, 0.37", "-9.39329, -165.693, 4.8507, 0.44", "-9.28076, -166.312, 4.47086, 0.44", "-9.14727, -167.016, 3.99713, 0.44", "-9.00601, -167.785, 3.49172, 0.29", "-8.89406, -168.437, 3.17135, 0.29", "-8.80828, -169.057, 3.03494, 0.29", "-8.71658, -169.972, 3.11169, 0.88", "-8.64792, -170.93, 3.40993, 0.81", "-8.59655, -171.657, 3.73518, 0.22", "-8.45911, -172.932, 4.35284, 0.22", "-8.28504, -173.89, 4.78995, 0.44", "-7.95633, -175.11, 5.25809, 1.11", "-7.59525, -176.072, 5.53411, 0.52", "-6.99924, -177.249, 5.68903, 0.22", "-6.2739, -178.401, 5.60623, 0.22", "-5.34808, -179.695, 5.29141, 0.22", "-4.69666, -180.576, 4.99547, 0.37", "-4.35497, -181.066, 4.81822, 0.52", "-3.93976, -181.769, 4.60325, 0.52", "-3.48962, -182.858, 4.4026, 1.11", "-3.27545, -183.797, 4.36181, 1.11", "-3.12363, -185.245, 4.44255, 0.52", "-3.0671, -186.562, 4.59864, 0.29", "-3.05196, -187.856, 4.802, 0.52", "-3.05919, -189.059, 4.9961, 0.52", "-3.05975, -189.955, 5.09852, 0.22", "-3.0562, -190.518, 5.1128, 0.22", "-3.0534, -191.109, 5.07976, 0.59", "-3.06577, -191.903, 4.99616, 1.11", "-3.12869, -193.224, 4.81708, 1.11", "-3.26188, -194.757, 4.62409, 0.44", "-3.3895, -195.763, 4.52355, 0.44", "-3.5411, -196.812, 4.46778, 0.44", "-3.77593, -198.159, 4.46368, 0.29", "-3.94051, -198.859, 4.51692, 0.29", "-4.15542, -199.643, 4.64192, 0.88", "-4.36089, -200.374, 4.77917, 0.96", "-4.66094, -201.574, 4.98355, 0.37", "-4.86402, -202.53, 5.12767, 0.37", "-5.18198, -203.984, 5.37846, 0.37", "-5.29294, -204.408, 5.46681, 0.37", "-5.50258, -205.136, 5.63509, 1.03", "-5.65259, -205.626, 5.75235, 1.03", "-5.92606, -206.54, 5.96703, 0.52", "-6.26697, -208.074, 6.32485, 0.22", "-6.36598, -208.807, 6.50777, 0.22", "-6.46516, -209.634, 6.76842, 0.29", "-6.54762, -210.278, 7.01839, 0.59", "-6.62388, -210.817, 7.24659, 0.88", "-6.7303, -211.451, 7.51291, 0.96", "-6.89647, -212.411, 7.92029, 0.37", "-7.09981, -213.558, 8.42206, 0.22", "-7.18191, -214.124, 8.66517, 0.22", "-7.23865, -214.759, 8.92349, 0.96", "-7.28073, -215.868, 9.3379, 0.44", "-7.24619, -216.984, 9.68802, 0.22", "-7.16369, -217.698, 9.8462, 0.22", "-7.0041, -218.635, 9.99538, 0.22", "-6.94185, -218.99, 10.0463, 0.22", "-6.84153, -219.655, 10.1352, 0.74", "-6.77881, -220.451, 10.2297, 0.88", "-6.8386, -221.492, 10.3183, 0.22", "-6.98406, -222.211, 10.3654, 0.22", "-7.16477, -222.777, 10.4131, 0.22", "-7.41693, -223.408, 10.4913, 0.22", "-7.70029, -224.018, 10.5865, 0.66", "-8.05923, -224.733, 10.7345, 0.74", "-8.55497, -225.679, 10.9583, 0.44", "-9.04622, -226.618, 11.1655, 0.44", "-9.67734, -227.787, 11.3784, 0.74", "-10.3066, -228.899, 11.5425, 0.96", "-10.8879, -229.889, 11.6454, 0.59", "-11.5675, -231.007, 11.7029, 0.22", "-12.084, -231.851, 11.7669, 0.22", "-12.6219, -232.733, 11.8676, 0.22", "-12.9938, -233.342, 11.9752, 0.22", "-13.1558, -233.601, 12.0458, 0.22", "-13.584, -234.275, 12.3156, 0.88", "-14.6811, -236.065, 13.2707, 0.22", "-15.0706, -236.718, 13.6686, 0.22", "-15.3275, -237.164, 13.9499, 0.74", "-15.633, -237.736, 14.2979, 0.96", "-16.2773, -239.068, 15.0693, 0.37", "-16.7019, -240.079, 15.6043, 0.22", "-16.962, -240.813, 15.9101, 0.88", "-17.0767, -241.227, 16.0788, 0.88", "-17.2613, -242.207, 16.4769, 0.22", "-17.3082, -242.651, 16.6445, 0.22", "-17.3301, -243.092, 16.7893, 0.22", "-17.358, -243.994, 17.0406, 0.81", "-17.3574, -245.376, 17.3742, 0.29", "-17.3237, -246.523, 17.6481, 0.44", "-17.2691, -247.462, 17.8554, 0.88", "-17.1977, -248.211, 18.0281, 0.88", "-17.0606, -249.127, 18.2491, 0.29", "-16.8758, -249.914, 18.455, 0.22", "-16.6171, -250.707, 18.6783, 0.22", "-16.3586, -251.279, 18.8975, 0.22", "-16.0297, -251.903, 19.2015, 0.22", "-15.7961, -252.326, 19.4461, 0.22", "-15.4969, -252.944, 19.8293, 0.74", "-15.4152, -253.198, 19.9894, 0.74", "-15.1508, -254.577, 20.7837, 0.22", "-15.1124, -255.194, 21.1144, 0.22", "-15.15, -255.703, 21.3547, 0.22", "-15.3081, -256.477, 21.6808, 1.11", "-15.6679, -257.486, 22.0274, 0.29", "-16.0348, -258.265, 22.2229, 0.22", "-16.4793, -259.066, 22.3246, 0.22", "-16.8727, -259.799, 22.3867, 0.44", "-17.2222, -260.507, 22.4715, 0.88", "-17.7174, -261.642, 22.6925, 0.96", "-18.0991, -262.719, 23.016, 0.29", "-18.3143, -263.469, 23.3322, 0.66", "-18.5207, -264.54, 23.8743, 0.74", "-18.6514, -265.853, 24.6123, 0.29", "-18.6536, -266.922, 25.227, 0.66", "-18.5234, -268.218, 26.0017, 0.22", "-18.4468, -268.727, 26.3254, 0.22", "-18.3475, -269.352, 26.7338, 0.81", "-18.2757, -269.826, 27.0137, 0.96", "-18.1344, -270.781, 27.5037, 0.37", "-18.0133, -271.765, 27.9627, 0.22", "-17.9746, -272.489, 28.2957, 0.22", "-17.9722, -272.988, 28.5466, 0.22", "-17.9758, -273.306, 28.7361, 0.66", "-17.9844, -273.766, 29.0519, 1.11", "-18.0038, -274.521, 29.5935, 0.88", "-18.0524, -275.611, 30.2552, 0.22", "-18.1081, -276.632, 30.7613, 0.88", "-18.2065, -277.841, 31.2724, 0.22", "-18.286, -278.568, 31.5293, 0.22", "-18.3912, -279.272, 31.7471, 0.74", "-18.6496, -280.597, 32.1842, 0.15", "-18.8782, -281.471, 32.4632, 0.15", "-19.0418, -281.949, 32.6122, 0.66", "-19.3038, -282.618, 32.8012, 0.81", "-19.7537, -283.722, 33.1438, 0.22", "-20.1992, -284.8, 33.6363, 0.22", "-20.3781, -285.26, 33.9549, 0.59", "-20.6535, -285.952, 34.556, 1.03" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.65966, 1.40539, -10.46, 1.99", "-1.69213, 2.87281, -11.6911, 1.99", "-1.79036, 4.30649, -12.826, 1.77", "-1.95237, 5.36086, -13.6245, 1.84", "-2.16276, 6.34991, -14.3402, 1.4", "-2.44729, 7.37908, -15.0554, 1.25", "-2.78229, 8.33858, -15.6967, 1.4", "-3.14273, 9.13754, -16.1824, 1.4", "-3.79995, 10.3853, -16.8174, 1.03", "-4.43641, 11.5229, -17.2938, 1.03", "-5.19093, 12.7815, -17.7742, 1.11", "-6.02024, 14.1102, -18.2445, 0.96", "-6.91261, 15.5598, -18.7228, 0.96", "-7.74718, 16.9693, -19.1715, 0.88", "-8.25397, 17.8832, -19.4138, 1.18" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.65966, 1.40539, -10.46, 3.32", "-3.27965, 0.515396, -10.46, 3.32" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "2.44158, 39.2021, 0.0, 0.289528", "3.27908, 54.1787, 0.0, 0.289528", "4.11658, 69.1553, 0.0, 0.289528" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-3.54943, 33.9053, 12.9543, 1.7", "-3.77469, 34.7485, 13.3554, 1.7", "-4.06609, 35.855, 13.8792, 1.03", "-4.42361, 37.2126, 14.5219, 0.74", "-4.6806, 38.1885, 14.9839, 0.74", "-4.92979, 39.1347, 15.4318, 0.74", "-5.13134, 39.9001, 15.7941, 1.03", "-5.37388, 40.9257, 16.3555, 1.84" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-3.54943, 33.9053, 12.9543, 0.29", "-3.35036, 34.3677, 13.6401, 0.29", "-2.94554, 35.2056, 14.7728, 0.22", "-2.61851, 35.8532, 15.4917, 0.22", "-2.38391, 36.3285, 15.9863, 0.37", "-2.09216, 36.9534, 16.608, 0.37", "-1.78835, 37.6299, 17.2761, 0.37", "-1.5368, 38.2168, 17.8222, 0.37", "-1.15655, 39.1099, 18.5638, 0.22", "-0.79959, 39.8868, 19.1836, 0.22", "-0.427255, 40.6988, 19.8267, 0.22", "-0.21209, 41.1535, 20.194, 0.22", "0.0448181, 41.6925, 20.6713, 0.22", "0.207592, 42.0145, 21.0057, 0.37", "0.659551, 42.8243, 21.9412, 0.37", "1.01571, 43.397, 22.5876, 0.22", "1.52774, 44.167, 23.4808, 0.44", "1.90618, 44.737, 24.1667, 0.81", "2.27981, 45.3115, 24.8807, 0.81", "2.74017, 46.0261, 25.7937, 0.29", "3.17704, 46.7206, 26.6781, 0.22", "3.60699, 47.4046, 27.5353, 0.22", "4.00992, 48.0693, 28.2985, 0.22", "4.35491, 48.6569, 28.9305, 0.22", "4.70433, 49.2451, 29.5483, 0.22", "5.1083, 49.8861, 30.2672, 0.22", "5.30649, 50.1945, 30.6421, 0.66", "5.54333, 50.5447, 31.0613, 1.55", "6.16345, 51.4034, 32.1017, 2.06", "7.07454, 52.6055, 33.5302, 0.22", "7.59859, 53.2918, 34.3417, 0.22", "8.08134, 53.9149, 35.0982, 0.22", "8.46571, 54.4286, 35.7191, 0.44", "8.83659, 54.9613, 36.3742, 0.44", "9.24448, 55.6246, 37.1481, 0.22", "9.67661, 56.5331, 38.0675, 0.22", "10.0569, 57.5406, 38.9314, 0.44", "10.3635, 58.5309, 39.7213, 0.15", "10.5969, 59.5677, 40.5468, 0.15", "10.6806, 60.0973, 40.955, 0.15", "10.8054, 61.1636, 41.7448, 0.15", "10.9146, 62.0257, 42.3204, 0.37", "11.0367, 62.8107, 42.8281, 0.59", "11.2545, 63.7702, 43.457, 1.25", "11.5299, 64.6405, 44.0601, 2.21", "11.77, 65.2133, 44.5074, 2.21", "12.367, 66.3267, 45.4411, 0.52", "12.9606, 67.2502, 46.2507, 0.15", "13.4853, 67.9614, 46.8446, 0.15", "13.9721, 68.5394, 47.3058, 0.29", "14.3953, 68.9952, 47.6541, 0.29", "14.9397, 69.5779, 48.0555, 0.07", "15.5298, 70.2124, 48.4431, 0.07", "15.9824, 70.7104, 48.7218, 0.07", "16.3623, 71.148, 48.9483, 0.88", "16.8317, 71.7157, 49.2238, 1.62", "18.0881, 73.3034, 49.9329, 0.15", "18.7108, 74.0932, 50.2928, 0.15", "19.3292, 74.8804, 50.6553, 0.15", "19.7871, 75.4508, 50.926, 0.29", "20.3015, 76.0704, 51.2876, 0.29", "21.2792, 77.2007, 52.0928, 0.07", "22.0333, 78.0398, 52.7912, 0.07", "22.4345, 78.4861, 53.1961, 0.07", "23.0086, 79.1128, 53.8148, 0.96", "24.2748, 80.4553, 55.2604, 0.15", "24.8663, 81.0809, 55.9707, 0.15", "25.279, 81.5133, 56.5114, 0.15", "25.5838, 81.8472, 56.8939, 0.15", "25.9284, 82.2322, 57.3074, 0.37", "26.3117, 82.6835, 57.7375, 0.37", "27.0751, 83.5993, 58.4502, 0.15", "27.7089, 84.3839, 59.0187, 0.15", "28.3199, 85.1882, 59.6107, 0.15", "29.0193, 86.1563, 60.3344, 0.15", "29.4086, 86.7115, 60.7532, 0.15", "30.0561, 87.6476, 61.4552, 0.15", "30.811, 88.7527, 62.2647, 0.07", "31.6633, 90.0635, 63.1908, 0.07", "32.4691, 91.3264, 64.1384, 0.07" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-85.5365, -222.348, 41.8412, 0.74", "-85.856, -223.235, 41.5721, 0.74", "-86.232, -224.199, 41.2997, 0.29", "-86.7882, -225.469, 40.9435, 0.07", "-87.2719, -226.513, 40.6292, 0.15", "-87.5843, -227.181, 40.4246, 0.52", "-87.8638, -227.766, 40.2301, 0.74", "-88.1014, -228.222, 40.0625, 0.88", "-88.7666, -229.425, 39.6293, 0.22", "-89.1941, -230.176, 39.3709, 0.22", "-89.6176, -230.949, 39.1156, 0.22", "-90.0601, -231.815, 38.8294, 0.15", "-90.3724, -232.459, 38.6097, 0.74", "-90.811, -233.395, 38.2709, 0.88", "-91.1914, -234.254, 37.9567, 0.22", "-91.6057, -235.221, 37.574, 0.15", "-91.9051, -235.997, 37.2115, 0.15", "-92.105, -236.583, 36.8997, 0.29", "-92.3092, -237.217, 36.5073, 0.66", "-92.5901, -238.021, 35.954, 1.03", "-92.9945, -238.91, 35.2874, 0.37", "-93.5258, -239.838, 34.5429, 0.22", "-93.8613, -240.362, 34.1296, 0.44", "-94.1954, -240.854, 33.766, 0.74", "-94.739, -241.624, 33.2636, 1.03", "-95.7083, -242.923, 32.5291, 0.29", "-96.2802, -243.679, 32.1839, 0.29", "-96.7979, -244.379, 31.9266, 0.74", "-97.2284, -244.995, 31.7364, 0.74", "-98.0073, -246.179, 31.4062, 0.29", "-98.6987, -247.274, 31.137, 0.22", "-99.0835, -247.868, 30.9982, 0.22", "-99.6196, -248.542, 30.7978, 0.22", "-100.086, -248.996, 30.5921, 0.29", "-100.567, -249.364, 30.3396, 0.74", "-101.193, -249.755, 29.9666, 0.96", "-102.116, -250.305, 29.3775, 0.44", "-103.144, -250.956, 28.7052, 0.22", "-103.676, -251.329, 28.3624, 0.22", "-104.163, -251.725, 28.0616, 0.22", "-104.722, -252.251, 27.7767, 0.81", "-105.304, -252.897, 27.5351, 0.44", "-105.803, -253.537, 27.3901, 0.22", "-106.226, -254.111, 27.2793, 0.37", "-106.489, -254.448, 27.196, 0.37", "-107.333, -255.376, 26.8877, 0.22", "-107.673, -255.685, 26.7415, 0.59", "-108.442, -256.283, 26.3791, 0.88", "-109.221, -256.871, 25.9609, 0.22", "-109.819, -257.339, 25.6025, 0.22", "-110.225, -257.671, 25.3325, 0.22", "-110.702, -258.087, 24.9855, 0.22", "-111.185, -258.531, 24.6381, 0.66", "-111.974, -259.357, 24.0835, 0.15", "-112.25, -259.707, 23.8576, 0.15", "-112.526, -260.12, 23.6034, 0.15", "-112.65, -260.346, 23.4491, 0.15", "-112.776, -260.635, 23.244, 0.15", "-113.01, -261.233, 22.7832, 0.88", "-113.525, -262.478, 21.8056, 0.22", "-113.629, -262.698, 21.6296, 0.22", "-113.91, -263.228, 21.2132, 0.22", "-114.244, -263.822, 20.7736, 0.22", "-114.464, -264.201, 20.5248, 0.22", "-114.88, -264.894, 20.1524, 0.66", "-115.511, -265.851, 19.7873, 0.29", "-115.988, -266.553, 19.572, 0.29", "-116.401, -267.168, 19.4266, 0.44", "-116.875, -267.914, 19.2794, 0.74", "-117.236, -268.549, 19.1894, 0.81", "-117.918, -269.792, 19.0702, 0.22", "-118.381, -270.572, 19.0451, 0.22", "-118.598, -270.907, 19.0422, 0.22", "-118.857, -271.293, 19.0411, 0.22", "-119.237, -271.876, 19.0118, 0.22", "-119.762, -272.723, 18.8792, 0.59", "-120.306, -273.648, 18.6, 0.22", "-120.652, -274.23, 18.3545, 0.22", "-121.089, -274.908, 17.9686, 0.59", "-121.729, -275.84, 17.3263, 0.22", "-122.2, -276.543, 16.7737, 0.22", "-122.538, -277.092, 16.3178, 0.44", "-122.913, -277.759, 15.7782, 1.03", "-123.419, -278.69, 15.0702, 0.22", "-123.644, -279.149, 14.7814, 0.22", "-123.847, -279.698, 14.5698, 0.22", "-123.992, -280.339, 14.4247, 0.22", "-124.137, -281.326, 14.274, 0.22", "-124.175, -281.659, 14.2352, 0.44", "-124.254, -282.485, 14.1646, 0.88", "-124.327, -283.218, 14.0967, 0.88", "-124.515, -284.722, 13.9499, 0.22", "-124.649, -285.559, 13.8595, 0.22", "-124.872, -286.692, 13.7064, 0.22", "-124.988, -287.201, 13.6393, 0.22", "-125.108, -287.629, 13.5862, 0.59", "-125.346, -288.329, 13.5055, 0.81", "-125.515, -288.755, 13.4497, 0.59", "-125.915, -289.721, 13.282, 0.22", "-126.19, -290.349, 13.1557, 0.22", "-126.512, -290.952, 13.0274, 0.22", "-126.847, -291.467, 12.8899, 0.22", "-127.42, -292.221, 12.6463, 0.22", "-127.848, -292.736, 12.4456, 0.44", "-128.346, -293.298, 12.1855, 0.74", "-128.902, -293.96, 11.8274, 0.29", "-129.404, -294.616, 11.4242, 0.22", "-129.534, -294.794, 11.309, 0.22", "-129.811, -295.157, 11.0515, 0.22", "-130.092, -295.526, 10.7777, 0.22", "-130.406, -295.966, 10.4724, 0.29", "-130.767, -296.555, 10.1355, 0.66", "-131.097, -297.108, 9.88532, 0.88", "-131.92, -298.386, 9.37446, 0.22", "-132.271, -298.88, 9.20154, 0.22", "-132.712, -299.435, 9.03033, 0.22", "-133.355, -300.138, 8.8956, 0.22", "-133.913, -300.692, 8.87189, 0.15", "-134.295, -301.059, 8.90436, 0.15", "-134.565, -301.317, 8.96469, 0.52", "-135.029, -301.767, 9.0849, 0.81", "-136.019, -302.836, 9.33193, 0.15", "-136.394, -303.312, 9.40291, 0.15", "-136.88, -304.102, 9.45021, 0.15", "-136.981, -304.298, 9.44615, 0.37", "-137.259, -304.923, 9.38475, 0.74", "-137.692, -306.025, 9.19678, 0.15", "-137.918, -306.662, 9.03788, 0.15", "-138.129, -307.289, 8.8797, 0.37", "-138.318, -307.883, 8.71818, 0.37", "-138.529, -308.629, 8.51304, 0.37", "-138.774, -309.59, 8.23757, 0.29", "-139.022, -310.625, 7.95542, 0.81", "-139.18, -311.405, 7.74473, 0.66", "-139.304, -312.138, 7.52163, 0.59", "-139.416, -312.93, 7.24038, 0.15", "-139.512, -313.485, 7.01418, 0.15", "-139.642, -314.002, 6.77001, 0.66", "-139.719, -314.229, 6.65339, 0.66", "-140.054, -315.06, 6.22388, 0.22", "-140.283, -315.658, 5.93872, 0.22", "-140.538, -316.388, 5.60703, 0.59", "-140.8, -317.345, 5.21066, 0.15", "-140.905, -317.826, 5.02433, 0.15", "-141.039, -318.514, 4.77575, 0.81", "-141.264, -319.92, 4.31788, 0.15", "-141.342, -320.489, 4.15531, 0.52", "-141.444, -321.371, 3.92952, 0.15", "-141.508, -321.785, 3.83025, 0.15", "-141.719, -322.71, 3.58005, 0.15", "-141.814, -323.022, 3.48482, 0.15", "-142.091, -323.762, 3.24793, 0.88", "-142.373, -324.465, 3.00919, 0.22", "-142.843, -325.545, 2.6228, 0.15", "-143.302, -326.596, 2.2325, 0.15", "-143.524, -327.097, 2.0429, 0.22", "-143.811, -327.684, 1.80189, 0.81" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-85.5365, -222.348, 41.8412, 0.07", "-85.8963, -221.694, 41.1103, 0.07", "-86.222, -221.112, 40.5342, 0.07", "-86.54, -220.582, 40.0252, 0.37", "-87.1274, -219.648, 39.1782, 0.07", "-87.3502, -219.306, 38.8865, 0.07", "-87.7173, -218.772, 38.434, 0.22", "-88.4517, -217.796, 37.6573, 0.07", "-89.0338, -217.121, 37.132, 0.07", "-89.4463, -216.691, 36.7961, 0.07", "-89.828, -216.349, 36.5353, 0.22", "-90.5558, -215.761, 36.0856, 0.07", "-91.025, -215.412, 35.8032, 0.37", "-92.4413, -214.443, 35.0074, 0.07", "-92.908, -214.138, 34.7548, 0.22", "-94.0784, -213.412, 34.1124, 0.07", "-94.5696, -213.12, 33.8485, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-20.6535, -285.952, 34.556, 0.15", "-21.0229, -286.671, 35.5414, 0.15", "-21.3584, -287.44, 36.4332, 0.15", "-21.615, -288.109, 37.1308, 0.07", "-21.8269, -288.703, 37.7464, 0.07", "-21.9809, -289.153, 38.2059, 0.07", "-22.0885, -289.473, 38.5255, 0.37", "-22.2628, -290.088, 39.078, 0.66", "-22.5503, -291.114, 39.9537, 0.07", "-22.7014, -291.708, 40.4927, 0.07", "-22.8344, -292.267, 41.0464, 0.07", "-22.8947, -292.547, 41.3585, 0.52", "-22.988, -293.062, 41.9709, 0.88", "-23.1117, -294.001, 43.141, 0.15", "-23.1821, -294.818, 44.1716, 0.15", "-23.2058, -295.253, 44.704, 0.15", "-23.1973, -295.832, 45.4279, 0.15", "-23.1494, -296.388, 46.1382, 0.88", "-22.9805, -297.409, 47.4859, 0.07", "-22.9051, -297.738, 47.9288, 0.07", "-22.8202, -298.096, 48.3902, 0.37", "-22.6268, -298.961, 49.465, 0.15", "-22.5183, -299.504, 50.113, 0.37", "-22.4101, -300.266, 51.0303, 0.22", "-22.3631, -300.887, 51.7455, 0.44", "-22.3598, -301.389, 52.3007, 0.81", "-22.4132, -302.064, 53.0144, 0.29", "-22.6009, -302.874, 53.7674, 0.15", "-22.9518, -303.875, 54.5656, 0.15", "-23.3001, -304.7, 55.1041, 0.15", "-23.5364, -305.221, 55.3925, 0.81", "-23.7839, -305.784, 55.6619, 1.47", "-24.5459, -307.598, 56.3724, 0.15", "-25.0393, -308.876, 56.8879, 0.07", "-25.5257, -310.248, 57.4293, 0.07", "-25.7678, -310.969, 57.7418, 0.15", "-26.1427, -312.178, 58.2836, 0.07", "-26.3367, -312.843, 58.5846, 0.22", "-27.1342, -315.641, 59.9472, 0.07", "-27.391, -316.458, 60.369, 0.29", "-27.9703, -318.074, 61.2376, 0.07", "-28.2995, -318.887, 61.6671, 0.07", "-28.7061, -319.766, 62.1192, 0.44", "-29.486, -321.374, 62.9091, 0.15", "-30.1023, -322.593, 63.4546, 0.07", "-30.4582, -323.287, 63.7809, 0.07", "-30.8046, -323.962, 64.1102, 0.29", "-31.8255, -325.957, 65.158, 0.07", "-32.3434, -326.995, 65.7228, 0.07", "-32.7396, -327.808, 66.1595, 0.07", "-33.1269, -328.613, 66.6195, 0.07", "-33.4952, -329.367, 67.0555, 0.15" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-20.6535, -285.952, 34.556, 0.22", "-20.2277, -286.621, 35.1404, 0.22", "-19.4599, -287.661, 36.0797, 0.37", "-18.9248, -288.313, 36.7123, 0.15", "-18.4877, -288.823, 37.2137, 0.15", "-18.3321, -288.988, 37.4042, 0.37", "-17.955, -289.375, 37.9226, 0.88", "-17.1541, -290.104, 39.1209, 0.15", "-16.7743, -290.431, 39.7707, 0.52", "-16.6627, -290.53, 39.9846, 1.03", "-15.9265, -291.219, 41.5771, 0.22", "-15.4526, -291.693, 42.7223, 0.22", "-15.3203, -291.833, 43.0721, 0.37", "-14.8058, -292.495, 44.6297, 0.22", "-14.6266, -292.774, 45.2155, 0.22", "-14.4168, -293.177, 45.9655, 0.22", "-14.2845, -293.504, 46.4798, 0.22", "-14.1472, -293.877, 46.9869, 0.88", "-13.7462, -294.953, 48.2397, 0.15", "-13.5297, -295.532, 48.7969, 0.22", "-13.2492, -296.272, 49.3486, 0.07", "-12.8899, -297.216, 49.8714, 0.07", "-12.5343, -298.161, 50.1819, 1.18", "-11.9838, -299.717, 50.4105, 0.07", "-11.7693, -300.387, 50.361, 0.74", "-11.2869, -302.115, 50.0132, 0.07", "-11.1762, -302.615, 49.8461, 0.44", "-10.9151, -304.403, 49.038, 0.07", "-10.8537, -305.347, 48.5735, 1.11", "-10.873, -307.166, 47.5556, 0.07", "-10.8901, -307.581, 47.3101, 0.22", "-10.9824, -308.911, 46.5021, 0.07", "-11.022, -309.546, 46.0578, 0.07", "-11.0614, -310.482, 45.2404, 0.96", "-11.0052, -311.569, 44.1351, 0.07", "-10.9277, -311.969, 43.6967, 0.07", "-10.8687, -312.173, 43.4482, 0.29", "-10.5692, -312.984, 42.3412, 0.07", "-10.2893, -313.698, 41.3317, 0.07", "-10.1535, -314.062, 40.8012, 0.66", "-9.86794, -314.936, 39.6113, 0.07", "-9.69743, -315.585, 38.8155, 0.07", "-9.52441, -316.321, 38.05, 0.07", "-9.40398, -316.831, 37.6281, 0.96", "-9.18325, -317.792, 36.9075, 0.15", "-9.054, -318.386, 36.4855, 0.15", "-8.9009, -319.127, 36.0365, 0.74", "-8.57463, -320.572, 35.3449, 0.15", "-8.37766, -321.361, 35.0425, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-8.25397, 17.8832, -19.4138, 0.59", "-9.10971, 18.6602, -18.2314, 0.59", "-9.75201, 19.3266, -17.3429, 0.59", "-10.3935, 20.0073, -16.4948, 0.59", "-11.0631, 20.6859, -15.6872, 0.74", "-11.6239, 21.2223, -15.092, 0.74", "-12.5148, 22.0305, -14.3119, 0.44", "-12.7556, 22.2412, -14.1817, 0.44", "-13.3268, 22.7317, -14.0208, 0.44", "-13.9038, 23.1952, -13.9422, 0.66", "-14.7415, 23.7877, -13.8971, 0.81", "-15.9178, 24.5043, -13.8533, 0.59", "-16.8508, 24.997, -13.811, 0.37", "-18.0822, 25.6301, -13.72, 0.22", "-18.8335, 26.0216, -13.6411, 0.44", "-19.3439, 26.3073, -13.564, 0.74", "-20.4616, 27.0083, -13.3416, 0.37", "-21.4714, 27.722, -13.0853, 0.22", "-21.9496, 28.1241, -12.9732, 0.22", "-22.5051, 28.6693, -12.8605, 0.66", "-23.1854, 29.4298, -12.7603, 0.52", "-23.9922, 30.4005, -12.7192, 0.81", "-24.3374, 30.8353, -12.7458, 0.81", "-25.2226, 31.9332, -12.9314, 0.44", "-26.1225, 32.9484, -13.2328, 0.74", "-27.0326, 33.8172, -13.6504, 0.44", "-28.0767, 34.6242, -14.2473, 0.29", "-28.811, 35.0727, -14.7386, 0.29", "-29.5789, 35.4439, -15.3226, 0.29", "-30.3532, 35.7279, -15.9739, 0.88", "-31.31, 36.0026, -16.8062, 0.59", "-31.9372, 36.1638, -17.3424, 0.59", "-32.8278, 36.3971, -18.0543, 0.29", "-33.9019, 36.7201, -18.8338, 0.74", "-34.3627, 36.8981, -19.1401, 0.74", "-35.0639, 37.2657, -19.5735, 0.29", "-35.564, 37.6395, -19.8388, 0.22", "-35.9303, 38.0053, -20.0061, 0.22", "-36.3342, 38.5308, -20.1636, 0.22", "-36.8252, 39.2544, -20.3429, 0.74", "-37.2363, 39.8627, -20.5262, 0.74", "-37.6317, 40.4351, -20.7473, 0.29", "-37.9412, 40.8465, -20.9338, 0.29", "-38.3891, 41.403, -21.2028, 0.52", "-38.8968, 42.03, -21.5448, 0.52", "-39.6635, 42.9713, -22.1079, 0.22", "-40.116, 43.5632, -22.4879, 0.15", "-40.7613, 44.4156, -23.0503, 0.59", "-41.4119, 45.3193, -23.63, 0.22", "-41.7462, 45.8302, -23.9425, 0.22", "-41.8462, 46.0108, -24.0398, 0.22", "-42.1713, 46.7144, -24.3719, 0.22" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-8.25397, 17.8832, -19.4138, 1.03", "-7.96778, 18.5675, -19.4765, 1.03", "-7.1422, 19.906, -19.5613, 0.88", "-6.42896, 20.9287, -19.6498, 0.88", "-5.92594, 21.6333, -19.7316, 0.59", "-5.49933, 22.2635, -19.812, 0.59", "-4.79387, 23.3784, -19.9604, 0.96", "-3.98991, 24.6591, -20.1331, 0.52", "-3.35296, 25.8109, -20.2756, 0.66", "-3.12691, 26.3797, -20.3526, 0.66", "-2.92027, 27.219, -20.4762, 0.66", "-2.85239, 27.8189, -20.5517, 0.66", "-2.83886, 28.8463, -20.6661, 1.18", "-2.88157, 30.1242, -20.7989, 0.96", "-2.90531, 30.8067, -20.8775, 0.96", "-2.91637, 31.8284, -21.0379, 0.88", "-2.86481, 32.9815, -21.2991, 1.03", "-2.81716, 33.66, -21.4848, 1.18", "-2.71405, 34.6313, -21.768, 0.74", "-2.57702, 35.5564, -22.0362, 0.74", "-2.44976, 36.2576, -22.2446, 0.96", "-2.23315, 37.3358, -22.565, 1.11", "-1.93798, 38.5266, -22.9412, 0.96", "-1.40284, 40.2554, -23.4928, 0.59", "-1.0688, 41.1502, -23.7639, 0.59", "-0.546825, 42.273, -24.0994, 0.74", "-0.278061, 42.7479, -24.2447, 0.74", "0.360903, 43.6902, -24.5218, 0.59", "1.07593, 44.5782, -24.7825, 0.59", "1.71476, 45.3104, -24.9883, 0.59", "2.43345, 46.1821, -25.2111, 0.52", "2.937, 46.898, -25.3755, 0.52", "3.45209, 47.847, -25.6152, 0.74", "3.67776, 48.5466, -25.8174, 0.88", "3.80864, 49.4572, -26.1551, 0.59", "3.82578, 50.4904, -26.6382, 0.44", "3.75139, 51.5462, -27.205, 0.59", "3.6477, 52.5383, -27.78, 0.96", "3.55313, 53.7863, -28.5227, 0.52", "3.55075, 54.7716, -29.0988, 0.52", "3.62667, 55.533, -29.512, 0.52", "3.89394, 56.7327, -30.1029, 0.37", "4.12384, 57.4744, -30.4214, 0.37", "4.58032, 58.7984, -30.8939, 0.44", "4.90677, 59.8417, -31.2031, 0.59", "5.11531, 60.7929, -31.4428, 0.59", "5.18553, 61.5029, -31.5989, 0.59", "5.12305, 62.719, -31.8798, 0.59", "4.95331, 63.6506, -32.1503, 0.66", "4.62991, 64.7642, -32.5489, 0.74", "4.29343, 65.7846, -32.9802, 0.52", "4.0067, 66.6667, -33.4255, 0.29", "3.79711, 67.546, -33.997, 0.29", "3.85999, 68.1619, -34.6756, 0.44", "4.15918, 68.4354, -35.3276, 0.59", "4.71255, 68.5498, -36.2047, 0.29", "5.10365, 68.5192, -36.7402, 0.29", "5.73967, 68.3687, -37.559, 0.29", "6.23029, 68.2184, -38.158, 0.29", "6.69325, 68.0803, -38.7411, 0.44", "7.1291, 68.0034, -39.3636, 0.44", "7.43614, 68.0248, -39.9176, 0.52", "7.56175, 68.2497, -40.3896, 0.52", "7.43898, 68.6932, -40.7278, 0.52", "7.09424, 69.3548, -41.1129, 0.66", "6.5731, 70.1148, -41.4954, 0.66", "5.9647, 70.7878, -41.8014, 0.37", "5.16801, 71.4218, -42.122, 0.37", "4.43416, 71.8049, -42.3977, 0.37", "3.88023, 71.9289, -42.6196, 0.37", "3.4552, 71.9096, -42.807, 0.37", "2.7422, 71.7064, -43.166, 0.29", "1.9844, 71.2774, -43.6152, 0.22", "1.4154, 70.7385, -44.0317, 0.22", "0.814457, 69.7301, -44.6516, 0.66", "0.683335, 69.1816, -44.943, 0.37", "0.67043, 68.5495, -45.289, 0.22", "0.804428, 67.806, -45.7095, 0.22", "1.00178, 67.2421, -46.0527, 0.22", "1.35684, 66.4472, -46.5492, 0.29", "1.89933, 65.4099, -47.2186, 0.15", "2.41889, 64.4636, -47.8739, 0.15", "3.02576, 63.344, -48.7083, 0.15", "3.46617, 62.5298, -49.3921, 0.15", "3.59697, 62.2761, -49.6265, 0.15" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-3.27965, 0.515396, -10.46, 1.25", "-2.62664, -0.858625, -11.6342, 1.25", "-2.14696, -1.66487, -12.2792, 1.25", "-1.47858, -2.66178, -13.048, 1.25", "-1.06704, -3.28903, -13.4978, 1.25", "-0.551257, -4.19205, -14.0884, 1.11", "-0.225324, -4.9165, -14.526, 1.33", "0.160005, -6.12462, -15.116, 0.81", "0.267068, -7.08784, -15.4591, 0.66", "0.202971, -7.89312, -15.687, 0.66", "-0.0476059, -9.13677, -15.9812, 1.03", "-0.431949, -10.5944, -16.2707, 1.4", "-0.742295, -11.7332, -16.4703, 1.99", "-1.15467, -13.3434, -16.7058, 1.33", "-1.3904, -14.5693, -16.8648, 0.96", "-1.59777, -16.024, -17.0545, 0.81", "-1.66501, -17.1351, -17.194, 0.74", "-1.62998, -18.3184, -17.3214, 0.96", "-1.50075, -19.3757, -17.4395, 1.33", "-1.3108, -20.2635, -17.5424, 1.47" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-3.27965, 0.515396, -10.46, 1.77", "-4.57026, -0.272909, -10.6604, 1.77", "-5.86647, -1.10423, -10.8919, 1.62", "-6.97404, -1.85556, -11.1413, 1.84", "-7.72651, -2.366, -11.3107, 2.06", "-9.07738, -3.28237, -11.6148, 1.84", "-10.3442, -4.14177, -11.9, 1.84", "-11.6277, -5.07003, -12.2434, 1.84", "-12.6313, -5.80322, -12.5536, 2.36" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-5.37388, 40.9257, 16.3555, 0.52", "-4.9815, 42.0855, 15.6718, 0.52", "-4.663, 43.2287, 14.9475, 0.52", "-4.53657, 43.8431, 14.5123, 0.52", "-4.42062, 44.6272, 13.9276, 0.59", "-4.33337, 45.35, 13.365, 0.44", "-4.27407, 45.8906, 12.9365, 0.44", "-4.23726, 46.4701, 12.4672, 0.52", "-4.17436, 47.3188, 11.7825, 0.88", "-4.12674, 47.9099, 11.2837, 1.25", "-4.05946, 48.7042, 10.6124, 1.18", "-3.96128, 49.763, 9.74171, 1.18", "-3.84543, 50.7811, 8.92718, 0.52", "-3.69138, 51.8624, 8.08692, 0.44", "-3.58007, 52.5715, 7.54348, 0.44", "-3.5062, 53.0396, 7.19302, 0.44", "-3.37915, 53.8765, 6.60713, 0.52", "-3.26291, 54.6258, 6.1449, 0.59", "-3.09798, 55.6108, 5.63819, 0.66", "-2.95668, 56.408, 5.30664, 0.66", "-2.82299, 57.1821, 5.05876, 0.96", "-2.68963, 57.9869, 4.8611, 1.18", "-2.47699, 59.249, 4.66253, 0.96", "-2.32381, 60.1591, 4.58095, 0.44", "-2.22365, 60.7439, 4.54926, 0.29", "-2.08774, 61.4647, 4.51909, 0.29", "-2.00458, 61.8143, 4.49769, 0.29", "-1.79043, 62.459, 4.44709, 0.59", "-1.61913, 62.8181, 4.4136, 0.96", "-1.07497, 63.6815, 4.28545, 1.25", "-0.738383, 64.1229, 4.18235, 1.11", "0.0120753, 65.0313, 3.89828, 0.52", "0.562965, 65.7284, 3.65235, 0.52", "1.02597, 66.3627, 3.42199, 0.22", "1.5139, 67.0869, 3.15008, 0.29", "1.93853, 67.7551, 2.86837, 0.59", "2.3214, 68.3866, 2.5451, 1.11", "2.75085, 69.1169, 2.10785, 1.25", "3.25758, 69.9712, 1.50293, 0.96", "3.64615, 70.5603, 0.967201, 0.29", "3.99546, 70.9665, 0.430645, 0.22", "4.31374, 71.2128, -0.124983, 0.22", "4.57097, 71.3533, -0.658513, 0.37", "4.87898, 71.5018, -1.47392, 0.59", "5.15253, 71.6629, -2.46841, 0.74", "5.38807, 71.8669, -3.5261, 0.96", "5.57282, 72.0661, -4.40036, 1.18", "5.78317, 72.3239, -5.37845, 1.18", "6.03403, 72.649, -6.47042, 1.25", "6.35794, 73.0639, -7.60422, 1.25", "6.69462, 73.4939, -8.48275, 0.52", "6.98326, 73.8549, -9.04173, 0.29", "7.37751, 74.3311, -9.59846, 0.29", "7.66925, 74.6732, -9.88926, 0.66", "8.17246, 75.3252, -10.2489, 0.66", "8.75018, 76.2628, -10.5793, 0.52", "8.99381, 76.8745, -10.7186, 0.59", "9.15848, 77.5788, -10.8362, 0.74", "9.20827, 78.0036, -10.8849, 0.74", "9.22642, 79.0237, -11.0261, 0.29", "9.17803, 79.7502, -11.1337, 0.29", "9.05537, 80.8631, -11.2955, 0.44", "9.00529, 81.2956, -11.3588, 0.81", "8.9546, 81.8786, -11.4616, 0.81", "8.91035, 83.0326, -11.7292, 0.66", "8.95195, 84.021, -12.0269, 0.66", "9.00059, 84.423, -12.1631, 0.66", "9.13352, 85.2097, -12.4615, 0.44", "9.29967, 86.2353, -12.877, 0.59", "9.39329, 86.9482, -13.1659, 0.44", "9.46682, 87.9332, -13.5615, 0.52", "9.46597, 88.5559, -13.8269, 0.52", "9.417, 89.2014, -14.1226, 0.44", "9.32051, 89.9367, -14.4939, 0.81", "9.17806, 90.772, -14.9532, 1.03", "8.99276, 91.7796, -15.56, 0.66", "8.86352, 92.4386, -15.9883, 0.44", "8.76961, 93.0342, -16.3721, 0.29", "8.71469, 93.669, -16.721, 0.29", "8.69918, 94.0708, -16.8861, 0.29", "8.68902, 94.6551, -17.0887, 0.29", "8.68169, 95.1613, -17.2266, 0.44", "8.62933, 96.3747, -17.5326, 0.74", "8.50386, 97.918, -17.9253, 0.59", "8.35248, 99.1515, -18.2936, 0.44", "8.23369, 99.9072, -18.5829, 0.44", "8.18843, 100.159, -18.719, 0.59", "8.08699, 100.691, -19.1429, 0.59", "7.99649, 101.131, -19.6352, 0.59", "7.91599, 101.577, -20.2863, 0.59", "7.87736, 101.95, -20.9063, 0.74", "7.87169, 102.537, -21.8531, 0.96", "7.89836, 103.08, -22.6419, 1.18", "7.96048, 103.694, -23.3958, 0.59", "8.04385, 104.321, -24.0302, 0.59", "8.14595, 105.045, -24.617, 0.59", "8.19097, 105.486, -24.8961, 0.29", "8.19363, 106.227, -25.2502, 0.22", "8.13325, 106.748, -25.4755, 0.22", "7.96851, 107.422, -25.767, 0.22", "7.71746, 108.05, -26.1031, 0.22", "7.30371, 108.809, -26.6102, 0.81", "6.77969, 109.601, -27.2409, 0.22", "6.31837, 110.229, -27.8059, 0.37", "5.82897, 110.831, -28.4101, 0.88", "4.86968, 111.892, -29.6089, 0.15", "4.36681, 112.413, -30.2652, 0.15", "4.12732, 112.655, -30.6143, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-5.37388, 40.9257, 16.3555, 0.81", "-5.59032, 41.8686, 17.3569, 0.81", "-5.77772, 42.7595, 18.1883, 0.81", "-6.04624, 43.7709, 19.0018, 0.81", "-6.23493, 44.3591, 19.4093, 0.59", "-6.45537, 44.9896, 19.8098, 0.59", "-6.67224, 45.6064, 20.1656, 0.44", "-6.83771, 46.1086, 20.3614, 0.44", "-7.16258, 47.0594, 20.648, 0.44", "-7.40224, 47.7348, 20.8402, 0.74", "-7.69095, 48.5337, 21.1261, 1.11", "-7.9033, 49.1273, 21.3529, 1.11", "-8.28745, 50.2413, 21.8071, 0.52", "-8.55022, 51.1212, 22.1812, 0.66", "-8.75114, 51.9466, 22.5616, 0.96", "-8.94319, 52.8107, 22.9834, 1.33", "-9.21047, 53.9729, 23.5613, 1.77" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-143.811, -327.684, 1.80189, 0.29", "-144.012, -328.702, 2.14279, 0.29", "-144.251, -329.75, 2.38684, 0.66", "-144.607, -331.212, 2.61821, 0.15", "-144.81, -332.044, 2.70358, 0.15", "-144.965, -332.587, 2.70838, 0.59", "-145.358, -333.713, 2.61425, 0.07", "-145.716, -334.435, 2.41348, 0.07", "-145.952, -334.804, 2.24382, 0.15", "-146.203, -335.182, 1.97775, 0.37", "-146.771, -336.083, 1.22034, 0.07", "-147.154, -336.7, 0.633653, 0.07", "-147.342, -337.005, 0.322759, 0.07", "-147.572, -337.357, -0.028589, 0.81", "-148.149, -338.281, -0.912538, 0.22", "-148.486, -338.888, -1.44728, 0.44", "-148.806, -339.658, -2.02179, 0.15", "-148.951, -340.108, -2.32959, 0.15", "-149.037, -340.454, -2.54614, 0.44", "-149.176, -341.023, -2.88112, 0.66", "-149.445, -342.073, -3.41009, 0.15", "-149.588, -342.761, -3.72172, 0.15", "-149.644, -343.356, -3.96525, 0.15", "-149.655, -344.011, -4.23941, 0.37" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-143.811, -327.684, 1.80189, 0.07", "-145.343, -326.761, 1.95001, 0.07", "-146.44, -326.084, 2.00748, 0.07", "-147.46, -325.46, 2.0338, 0.07", "-147.947, -325.155, 2.0353, 0.15", "-148.817, -324.549, 2.02252, 0.07", "-149.381, -324.106, 2.00661, 0.07", "-149.854, -323.637, 1.93225, 0.22", "-150.209, -323.245, 1.91647, 0.15", "-150.422, -323.003, 1.92141, 0.15", "-151.128, -322.238, 1.94349, 0.29", "-151.745, -321.635, 1.97068, 0.07", "-152.382, -321.08, 2.00356, 0.15", "-153.816, -319.965, 2.03904, 0.07", "-154.67, -319.44, 2.04079, 0.15", "-155.374, -319.137, 2.02146, 0.15", "-156.019, -318.975, 1.98358, 0.15", "-156.679, -318.927, 1.92324, 0.15", "-157.643, -318.945, 1.79716, 0.15", "-158.508, -319.062, 1.61541, 0.07", "-159.339, -319.261, 1.48397, 0.07", "-159.852, -319.423, 1.42366, 0.66", "-160.822, -319.814, 1.29885, 0.81" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-8.37766, -321.361, 35.0425, 0.15", "-8.09982, -322.44, 34.1304, 0.15", "-8.01299, -323.038, 33.6936, 0.15", "-7.96431, -323.316, 33.511, 0.15", "-7.90485, -323.627, 33.3064, 0.52", "-7.82355, -324.064, 33.0345, 0.81", "-7.64219, -325.148, 32.3499, 0.22", "-7.51769, -325.98, 31.8664, 0.22", "-7.44698, -326.572, 31.5344, 0.15", "-7.37209, -327.073, 31.2548, 0.22", "-7.23198, -327.711, 30.8864, 0.29", "-7.02832, -328.355, 30.4945, 0.22", "-6.86765, -328.744, 30.2425, 0.22", "-6.68625, -329.18, 29.9433, 0.37", "-6.4666, -329.769, 29.522, 0.37", "-6.18368, -330.548, 28.9701, 0.22", "-6.04848, -330.861, 28.7289, 0.22", "-5.82417, -331.329, 28.3456, 0.22", "-5.719, -331.563, 28.138, 0.22", "-5.6028, -331.908, 27.8129, 0.22", "-5.49772, -332.265, 27.4832, 0.15", "-5.27284, -332.975, 26.8656, 0.44", "-5.01015, -333.821, 26.1879, 0.22", "-4.87391, -334.327, 25.8269, 0.29", "-4.61184, -335.376, 25.1326, 0.07", "-4.45259, -336.047, 24.7212, 0.66", "-4.24855, -336.985, 24.1966, 0.07", "-4.12201, -337.628, 23.8743, 0.07", "-3.94158, -338.359, 23.5105, 0.29", "-3.70558, -339.136, 23.1172, 0.07", "-3.58584, -339.504, 22.9245, 0.44", "-3.53346, -339.703, 22.8117, 0.44", "-3.37507, -340.34, 22.425, 0.74", "-3.01672, -341.317, 21.7547, 0.07", "-2.82466, -341.715, 21.4687, 0.22", "-2.51747, -342.248, 21.095, 0.07", "-2.25165, -342.717, 20.7685, 0.07", "-2.00364, -343.141, 20.4823, 0.66", "-1.23241, -344.296, 19.7622, 0.07", "-0.810662, -344.777, 19.4885, 0.07", "-0.264363, -345.24, 19.1993, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-8.37766, -321.361, 35.0425, 0.07", "-6.89012, -321.782, 35.1211, 0.07", "-6.19944, -321.948, 35.1496, 0.29", "-5.35406, -322.134, 35.1786, 0.07", "-4.6473, -322.274, 35.1992, 0.52", "-2.72352, -322.548, 35.1726, 0.07", "-1.59829, -322.649, 35.1094, 0.07", "-1.15819, -322.665, 35.0729, 0.59", "-0.555912, -322.66, 35.0029, 0.74", "0.0309021, -322.62, 34.9193, 0.37", "1.57201, -322.412, 34.6324, 0.07", "2.32997, -322.222, 34.4073, 0.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-1.3108, -20.2635, -17.5424, 0.59", "-0.958634, -20.2035, -19.2016, 0.59", "-0.699439, -20.2121, -20.4943, 0.59", "-0.369041, -20.28, -22.3632, 0.52", "-0.185136, -20.3498, -23.8387, 0.52", "-0.0935202, -20.3952, -24.9, 0.52", "-0.0693825, -20.4008, -25.4325, 0.52", "-0.109831, -20.3388, -26.3869, 0.52", "-0.1504, -20.2703, -26.8176, 0.52", "-0.251367, -19.97, -27.8088, 0.66", "-0.252297, -19.8021, -28.171, 0.66", "-0.0823804, -19.2734, -29.1873, 0.29", "0.259086, -18.7836, -30.1671, 0.88", "0.759716, -18.4755, -30.9451, 0.37", "1.38068, -18.2933, -31.6576, 0.29", "2.00315, -18.1842, -32.2365, 0.29", "2.49891, -18.1237, -32.6414, 0.29", "2.84987, -18.0966, -32.8834, 0.44", "3.59011, -17.9889, -33.3539, 0.52", "4.30265, -17.7645, -33.7683, 0.15", "4.89245, -17.4683, -34.0582, 0.15", "5.55251, -17.0427, -34.3217, 0.15", "6.02807, -16.6669, -34.4819, 0.15", "6.57281, -16.1387, -34.6861, 0.15", "7.20014, -15.4143, -34.9346, 0.15", "7.88763, -14.5895, -35.2005, 0.29", "8.29604, -14.0887, -35.3673, 0.15", "8.93058, -13.2495, -35.6407, 0.22", "9.71656, -12.1038, -36.0139, 0.07", "10.0246, -11.6197, -36.1805, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-1.3108, -20.2635, -17.5424, 0.88", "-1.05765, -21.2622, -18.2471, 0.88", "-0.850386, -22.1715, -19.0803, 0.74", "-0.667802, -22.9726, -19.8144, 0.88", "-0.399748, -24.1486, -20.892, 0.88", "-0.180033, -25.1125, -21.7753, 0.96", "0.0599993, -26.1656, -22.7403, 0.96", "0.128087, -26.7289, -23.473, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-12.6313, -5.80322, -12.5536, 0.81", "-14.0048, -6.07623, -12.4478, 0.81", "-15.018, -6.23727, -12.26, 0.44", "-15.6768, -6.27869, -12.0402, 0.44", "-16.5094, -6.22734, -11.6366, 0.66", "-17.0714, -6.13485, -11.3083, 0.74", "-17.8471, -5.9493, -10.8185, 0.44", "-18.6158, -5.67429, -10.2496, 0.59", "-19.5844, -5.24295, -9.50275, 0.59", "-20.5171, -4.75441, -8.79289, 0.59", "-21.2913, -4.31163, -8.20471, 0.59", "-22.1378, -3.84306, -7.57968, 0.81", "-22.7528, -3.55535, -7.15951, 0.66", "-23.2517, -3.39067, -6.8521, 0.88", "-24.3317, -3.16933, -6.21752, 0.37", "-24.9303, -3.09026, -5.85382, 0.44", "-25.7367, -3.00563, -5.32903, 0.59", "-26.6659, -2.8962, -4.68379, 0.44", "-27.5046, -2.74188, -4.08508, 0.44", "-28.2673, -2.51096, -3.57721, 0.44", "-29.0118, -2.18798, -3.14643, 0.66", "-29.6579, -1.83, -2.85234, 0.81", "-30.2008, -1.47636, -2.65653, 0.81", "-31.0643, -0.896486, -2.41484, 0.66", "-32.1869, -0.16539, -2.21406, 0.59", "-33.0917, 0.3603, -2.16854, 0.59", "-34.2645, 0.925125, -2.23885, 0.74", "-34.7047, 1.0917, -2.29846, 0.52", "-35.585, 1.3328, -2.45768, 0.22", "-36.4504, 1.48343, -2.65221, 0.22", "-37.3135, 1.59079, -2.89169, 0.22", "-37.8777, 1.65997, -3.06309, 0.37", "-38.5295, 1.7473, -3.26071, 0.81", "-39.1572, 1.84257, -3.4411, 0.81", "-39.9941, 2.00247, -3.66115, 0.59", "-40.9627, 2.21267, -3.86791, 0.37", "-41.7481, 2.40946, -4.01928, 0.29", "-42.5314, 2.63753, -4.19618, 0.37", "-43.0427, 2.81242, -4.35645, 0.29", "-43.866, 3.12634, -4.66572, 0.29", "-44.6347, 3.44464, -4.983, 0.81", "-45.4418, 3.78837, -5.3383, 0.52", "-46.1273, 4.09355, -5.67994, 0.52", "-47.1539, 4.57695, -6.24011, 0.37", "-47.7314, 4.87404, -6.60155, 0.66", "-48.3199, 5.19928, -7.03221, 0.66", "-49.1796, 5.69762, -7.74844, 0.44", "-50.0684, 6.2149, -8.54752, 0.81", "-50.4688, 6.44353, -8.91174, 0.81", "-51.1255, 6.80704, -9.53197, 0.37", "-51.6194, 7.04698, -10.055, 0.22", "-52.1083, 7.18369, -10.5943, 0.22", "-52.4883, 7.16947, -11.0341, 0.22", "-52.8068, 7.0763, -11.3903, 0.81", "-53.0443, 6.98248, -11.6496, 1.03", "-53.6197, 6.70525, -12.26, 0.66", "-54.425, 6.29072, -13.0878, 0.29", "-55.4769, 5.78059, -14.1793, 0.29", "-56.0675, 5.54357, -14.797, 0.22", "-56.5112, 5.4181, -15.2775, 0.22", "-56.7684, 5.38001, -15.563, 0.22", "-57.1731, 5.40483, -16.0241, 0.22", "-57.5981, 5.52811, -16.5202, 0.22", "-57.9223, 5.67246, -16.8913, 0.22", "-58.4941, 5.92656, -17.5765, 0.22", "-58.8292, 6.08639, -17.991, 0.66", "-59.4457, 6.4047, -18.7836, 0.66", "-60.0198, 6.70781, -19.5563, 0.15", "-60.5714, 6.96327, -20.2871, 0.15", "-61.3149, 7.2616, -21.2583, 0.74" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-12.6313, -5.80322, -12.5536, 1.55", "-12.5158, -7.5249, -13.1663, 1.55", "-12.5069, -8.86237, -13.6397, 1.4", "-12.5938, -10.0361, -14.0177, 1.33", "-12.7925, -11.357, -14.3665, 0.96", "-13.039, -12.4992, -14.588, 0.88", "-13.326, -13.5706, -14.7196, 1.4", "-13.6705, -14.4377, -14.7421, 1.47", "-14.422, -15.9454, -14.647, 1.03", "-15.1827, -17.2489, -14.5022, 0.96", "-16.0612, -18.6573, -14.2933, 1.03", "-16.815, -19.8974, -14.0862, 1.03", "-17.6086, -21.2826, -13.8545, 1.11", "-18.1376, -22.2885, -13.7288, 0.88", "-18.7661, -23.6379, -13.6371, 0.88", "-19.16, -24.6169, -13.6543, 1.11", "-19.6314, -26.0046, -13.7927, 1.11", "-19.9616, -27.2159, -13.9763, 0.96", "-20.2615, -28.7194, -14.2365, 1.03", "-20.4066, -29.6976, -14.4202, 1.11", "-20.6024, -31.1755, -14.6434, 0.96", "-20.7641, -32.2163, -14.7836, 0.88", "-20.857, -32.7116, -14.8415, 0.81", "-21.0617, -33.7187, -14.9469, 0.74", "-21.2849, -34.7265, -15.0472, 0.88", "-21.6518, -36.1508, -15.1978, 1.03", "-21.9174, -36.9672, -15.2685, 1.25", "-22.4914, -38.3887, -15.3708, 1.25", "-23.1324, -39.7457, -15.4499, 1.18", "-23.7757, -41.0227, -15.5343, 1.11", "-24.4127, -42.2343, -15.626, 1.03", "-25.3585, -44.0026, -15.7923, 0.96", "-26.0274, -45.1604, -15.8572, 0.96", "-26.548, -45.936, -15.8501, 1.25" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-9.21047, 53.9729, 23.5613, 0.29", "-10.1294, 55.2151, 24.5787, 0.29", "-10.7686, 56.0688, 25.2642, 0.22", "-11.2897, 56.7542, 25.8125, 0.22", "-11.5538, 57.1206, 26.11, 0.22", "-11.7671, 57.4352, 26.3776, 0.59", "-12.1012, 57.9586, 26.8493, 1.03", "-12.3893, 58.512, 27.3991, 1.33", "-12.7894, 59.383, 28.2132, 0.59", "-13.0508, 59.9866, 28.7381, 0.22", "-13.2569, 60.6126, 29.1768, 0.22", "-13.4377, 61.4462, 29.6363, 0.22", "-13.5133, 62.0471, 29.8887, 0.74", "-13.5455, 62.9205, 30.1345, 1.84", "-13.5329, 63.6514, 30.2607, 1.84", "-13.4344, 65.9436, 30.4361, 0.22", "-13.3382, 67.2883, 30.4359, 0.22", "-13.2488, 68.0267, 30.4103, 0.22", "-12.9891, 69.5047, 30.3871, 0.22", "-12.9033, 69.8734, 30.3901, 0.44", "-12.6831, 70.6357, 30.4147, 1.18", "-12.2956, 71.7689, 30.4958, 1.7", "-11.6206, 73.6968, 30.6995, 0.15", "-11.206, 74.9324, 30.8676, 0.15", "-11.0821, 75.3367, 30.9482, 0.74", "-10.8649, 76.1158, 31.1225, 1.7", "-10.8324, 76.2479, 31.1554, 1.7", "-10.5846, 77.6722, 31.4798, 0.15", "-10.546, 78.2191, 31.5689, 0.15", "-10.5398, 79.0975, 31.6565, 0.15", "-10.5794, 79.9175, 31.6987, 0.29", "-10.6221, 80.285, 31.7012, 0.29", "-10.8105, 81.522, 31.6571, 0.07", "-10.9074, 82.0858, 31.6157, 0.22", "-10.999, 82.6275, 31.5471, 0.66", "-11.2067, 83.8561, 31.3365, 0.96", "-11.3679, 84.9158, 31.1287, 0.22", "-11.5281, 86.2142, 30.845, 0.66", "-11.616, 87.2223, 30.6402, 0.44", "-11.6522, 87.902, 30.5183, 0.74", "-11.6696, 88.6252, 30.4207, 1.55", "-11.6519, 89.542, 30.3603, 1.84", "-11.5776, 91.4484, 30.4361, 0.22", "-11.5429, 92.4821, 30.627, 0.22", "-11.5356, 92.8329, 30.7446, 0.59", "-11.5476, 93.5296, 31.076, 1.25", "-11.5975, 94.2956, 31.5075, 1.62", "-11.759, 95.7967, 32.4394, 0.22", "-11.8611, 96.5525, 32.9304, 0.22", "-12.0542, 97.711, 33.6163, 1.03", "-12.3884, 99.5178, 34.5017, 0.15", "-12.6218, 100.68, 34.925, 0.15", "-12.7433, 101.261, 35.0602, 0.52", "-12.8496, 101.781, 35.1012, 1.03", "-13.0527, 102.83, 35.0458, 1.18", "-13.3481, 104.292, 34.7838, 0.22", "-13.5004, 104.992, 34.5729, 0.22", "-13.6841, 105.718, 34.3244, 0.22", "-14.0045, 106.819, 33.9151, 0.22", "-14.168, 107.312, 33.7151, 0.74", "-14.5177, 108.245, 33.3194, 1.77", "-15.0071, 109.404, 32.8012, 0.22", "-15.3394, 110.133, 32.4364, 0.22", "-15.6207, 110.697, 32.1089, 0.22", "-15.7957, 111.034, 31.8876, 0.22", "-16.18, 111.816, 31.3832, 0.07", "-16.4985, 112.589, 30.9261, 0.07", "-16.7006, 113.148, 30.6372, 0.07", "-16.9301, 113.834, 30.3332, 0.37", "-17.1896, 114.626, 30.0508, 1.03", "-17.6164, 115.937, 29.6787, 0.52", "-18.1349, 117.514, 29.375, 0.15", "-18.3919, 118.309, 29.2916, 0.29", "-18.5773, 118.888, 29.2657, 0.96", "-18.8206, 119.645, 29.2635, 1.11", "-19.1237, 120.549, 29.2916, 0.22", "-19.4993, 121.623, 29.3685, 0.22", "-19.7711, 122.321, 29.464, 0.37", "-20.0438, 122.98, 29.569, 0.96", "-20.3086, 123.55, 29.6766, 0.96", "-20.7222, 124.324, 29.8303, 0.15", "-21.2552, 125.192, 29.976, 0.22", "-21.8567, 126.063, 30.0978, 0.37", "-22.5092, 126.926, 30.2102, 0.74", "-23.3338, 127.94, 30.3277, 0.22", "-24.3913, 129.162, 30.4429, 0.66", "-25.2658, 130.123, 30.534, 0.07", "-25.6023, 130.488, 30.5729, 0.07", "-26.0188, 130.961, 30.6097, 0.15", "-26.4833, 131.522, 30.6302, 0.81", "-26.959, 132.148, 30.6299, 1.25", "-27.697, 133.189, 30.6185, 0.37", "-28.4855, 134.367, 30.585, 0.22", "-29.2238, 135.499, 30.516, 0.37", "-29.9589, 136.653, 30.4154, 0.88", "-30.3455, 137.275, 30.3468, 0.37", "-30.8628, 138.128, 30.2473, 0.15", "-31.3513, 138.942, 30.1477, 0.15", "-31.7467, 139.621, 30.0984, 0.37", "-32.1827, 140.396, 30.1305, 0.74", "-32.5628, 141.09, 30.2101, 0.29", "-33.1917, 142.271, 30.4215, 0.15", "-33.3849, 142.657, 30.5199, 0.44", "-33.8362, 143.59, 30.818, 1.03", "-34.322, 144.628, 31.1829, 0.44", "-34.7474, 145.536, 31.533, 0.15", "-35.2287, 146.56, 31.9409, 0.74", "-35.8652, 148.0, 32.4833, 0.15", "-36.1221, 148.644, 32.7161, 0.22", "-36.3468, 149.292, 32.9433, 0.81", "-36.4892, 149.814, 33.1158, 0.81", "-36.7041, 150.74, 33.4078, 0.22", "-36.9799, 152.065, 33.776, 0.15", "-37.1557, 152.978, 34.0233, 0.22", "-37.2748, 153.64, 34.1999, 0.37", "-37.4913, 154.903, 34.5353, 0.96", "-37.7628, 156.484, 34.9282, 0.15", "-37.8956, 157.211, 35.0831, 0.15", "-38.027, 157.828, 35.1876, 0.15", "-38.2072, 158.558, 35.2627, 0.66", "-38.3236, 158.989, 35.2806, 0.66", "-38.6465, 160.09, 35.2509, 0.07", "-38.9063, 160.976, 35.2217, 0.07", "-39.0196, 161.336, 35.2209, 0.44", "-39.1699, 161.787, 35.2322, 0.74", "-39.35, 162.295, 35.2679, 0.96", "-39.5478, 162.826, 35.3353, 0.96", "-40.0474, 164.112, 35.5665, 0.15", "-40.4099, 165.026, 35.765, 0.15", "-40.8432, 166.081, 35.9908, 0.15", "-41.0768, 166.633, 36.0955, 0.15", "-41.3201, 167.173, 36.1782, 0.15", "-41.5731, 167.675, 36.2278, 0.37", "-41.8582, 168.15, 36.2656, 0.81", "-42.2548, 168.702, 36.3169, 1.03", "-42.8359, 169.423, 36.415, 0.37", "-43.4978, 170.186, 36.5371, 0.15", "-44.3432, 171.101, 36.7192, 0.29", "-45.5645, 172.307, 37.0203, 0.29", "-46.4985, 173.156, 37.2758, 0.15", "-47.1262, 173.698, 37.4624, 0.29", "-47.8701, 174.309, 37.7018, 0.88", "-48.8185, 175.051, 38.0218, 0.15", "-49.7245, 175.739, 38.3384, 0.15", "-50.4949, 176.31, 38.5915, 0.15", "-51.3556, 176.952, 38.8796, 0.96" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-9.21047, 53.9729, 23.5613, 0.22", "-8.28345, 55.0606, 24.0502, 0.22", "-7.68094, 55.8183, 24.3097, 0.15", "-7.11084, 56.5763, 24.5657, 0.22", "-6.63905, 57.2343, 24.8057, 0.15", "-6.24554, 57.7959, 25.0201, 0.37", "-6.04157, 58.11, 25.1474, 0.37", "-5.49681, 59.0449, 25.5483, 0.15", "-5.01627, 59.9548, 25.9462, 0.15", "-4.73588, 60.5197, 26.2076, 0.66", "-4.33487, 61.3362, 26.5981, 1.03", "-3.778, 62.4477, 27.1622, 0.15", "-3.48602, 63.012, 27.45, 0.15", "-3.14192, 63.6585, 27.7735, 0.15", "-2.76847, 64.3497, 28.0741, 0.59", "-2.30139, 65.2212, 28.4172, 0.07", "-1.99126, 65.8226, 28.6329, 0.07", "-1.69353, 66.4129, 28.8098, 0.66", "-1.58366, 66.657, 28.8709, 0.66", "-1.3418, 67.2888, 29.0333, 0.15", "-1.14038, 67.9357, 29.1942, 0.15", "-1.04631, 68.2905, 29.2784, 0.52", "-0.882698, 68.9332, 29.4135, 1.55", "-0.750511, 69.4411, 29.5341, 1.77", "-0.42722, 70.6449, 29.8412, 0.74", "-0.153225, 71.6199, 30.1301, 0.15", "0.0167949, 72.2074, 30.3212, 0.15", "0.174841, 72.7786, 30.534, 0.22", "0.32668, 73.4498, 30.8234, 0.22", "0.453447, 74.1203, 31.1492, 0.37", "0.571571, 74.8852, 31.5562, 0.52", "0.633309, 75.3598, 31.8303, 1.47", "0.714386, 76.0015, 32.2543, 2.06", "0.893234, 77.2967, 33.167, 0.29", "0.978126, 77.8464, 33.5584, 0.29", "1.12983, 78.7475, 34.2197, 0.74", "1.28265, 79.5543, 34.7857, 0.22", "1.55292, 80.7298, 35.5717, 0.29", "1.68065, 81.2066, 35.8664, 0.52", "1.77954, 81.5455, 36.0529, 0.22", "1.98081, 82.3696, 36.396, 0.22", "2.13985, 83.1622, 36.6554, 0.22", "2.30596, 84.1424, 36.9075, 0.22", "2.36136, 84.5763, 36.9922, 0.44", "2.43418, 85.362, 37.1388, 1.25", "2.56211, 87.1686, 37.4729, 0.07", "2.61124, 88.1734, 37.6465, 0.07", "2.62065, 88.6141, 37.7219, 0.22", "2.62115, 89.2709, 37.825, 0.96", "2.60862, 89.9362, 37.9295, 0.29", "2.57395, 91.0343, 38.0937, 0.07", "2.54907, 91.6891, 38.1991, 0.07", "2.53035, 92.0631, 38.2387, 0.15", "2.49312, 92.7354, 38.2831, 1.25", "2.37016, 95.0941, 38.3638, 0.15", "2.35057, 95.4636, 38.3676, 0.44", "2.31081, 96.1848, 38.356, 0.96", "2.24502, 97.4062, 38.3429, 1.18", "2.15922, 99.0239, 38.3332, 0.07", "2.13143, 99.5776, 38.3298, 0.22", "2.10568, 100.408, 38.3363, 0.88", "2.09142, 101.077, 38.3568, 0.44", "2.0899, 101.906, 38.4031, 0.15", "2.09606, 102.635, 38.4725, 0.15", "2.09872, 103.091, 38.5129, 0.37", "2.08723, 104.251, 38.597, 1.55", "2.05354, 106.123, 38.7098, 0.07", "2.0286, 106.963, 38.7503, 0.07", "2.00524, 107.572, 38.7655, 0.37", "1.98369, 108.033, 38.7821, 0.37", "1.92246, 109.103, 38.8194, 0.07", "1.90085, 109.374, 38.8279, 0.29", "1.83246, 110.114, 38.8641, 1.18", "1.68892, 111.807, 38.9366, 0.07", "1.63004, 112.914, 38.9619, 0.07", "1.62265, 113.287, 38.9628, 0.07", "1.62403, 113.758, 38.9445, 0.37", "1.63301, 114.42, 38.8983, 0.96", "1.65018, 115.376, 38.7898, 0.07", "1.66042, 116.24, 38.6224, 0.29", "1.65598, 117.59, 38.243, 0.07", "1.645, 118.925, 37.802, 0.07", "1.64313, 119.108, 37.7283, 0.44", "1.64449, 120.001, 37.2491, 1.18", "1.67038, 121.05, 36.4966, 0.15", "1.69925, 121.612, 35.9638, 0.15", "1.72422, 121.91, 35.5812, 0.59", "1.75988, 122.2, 35.099, 0.59", "1.83021, 122.82, 33.9397, 0.22", "1.87345, 123.123, 33.2899, 0.22", "1.91977, 123.377, 32.7408, 0.22", "1.9551, 123.572, 32.3312, 0.22", "2.00984, 123.967, 31.5243, 0.37", "2.03442, 124.316, 30.8529, 1.03", "2.04555, 124.742, 30.0804, 0.74", "2.07631, 125.172, 29.2873, 0.22", "2.16886, 125.703, 28.3535, 0.22", "2.20331, 125.849, 28.1044, 0.22", "2.2889, 126.169, 27.5403, 0.22", "2.35368, 126.409, 27.0918, 0.22", "2.4353, 126.781, 26.4028, 0.22", "2.49435, 127.122, 25.7516, 0.88", "2.59095, 127.713, 24.5963, 0.15", "2.66577, 128.199, 23.6104, 0.15", "2.72933, 128.653, 22.7317, 0.15", "2.78866, 129.191, 21.7551, 0.74", "2.85072, 129.833, 20.6117, 0.44", "2.90391, 130.334, 19.7326, 0.44", "2.96859, 130.746, 19.0496, 0.44", "3.03439, 131.192, 18.3606, 0.74", "3.08163, 131.798, 17.4823, 0.22", "3.06961, 132.142, 17.0085, 0.22", "3.01977, 132.448, 16.6061, 0.44", "2.91437, 132.845, 16.0998, 0.44", "2.7391, 133.373, 15.4382, 0.22", "2.52468, 133.978, 14.7585, 0.29", "2.30208, 134.633, 14.1655, 0.22", "2.11855, 135.251, 13.7196, 0.22", "2.02842, 135.637, 13.4976, 0.66", "1.89696, 136.532, 13.1264, 0.96", "1.79964, 138.005, 12.7083, 0.22", "1.78, 138.876, 12.5587, 0.37", "1.77023, 139.495, 12.5271, 0.07", "1.76116, 140.151, 12.5771, 0.07", "1.75644, 140.816, 12.6869, 0.07", "1.75354, 141.292, 12.81, 0.29", "1.74727, 141.805, 12.9763, 0.66", "1.73485, 142.514, 13.2298, 0.88", "1.71187, 143.726, 13.6861, 0.15", "1.70635, 144.348, 13.9132, 0.15", "1.73183, 144.783, 14.0745, 0.22", "1.80086, 145.183, 14.2174, 0.22", "2.00634, 145.872, 14.4553, 0.22", "2.24191, 146.479, 14.6569, 0.22", "2.49381, 147.03, 14.8313, 0.81", "3.11965, 148.337, 15.2422, 0.22", "3.65747, 149.362, 15.5721, 0.22", "4.20501, 150.326, 15.8949, 0.22", "4.4209, 150.681, 16.0183, 0.37", "4.76552, 151.209, 16.2206, 0.96", "5.63173, 152.486, 16.7843, 0.15", "6.13457, 153.208, 17.1502, 0.15", "6.36555, 153.552, 17.348, 0.15", "6.61733, 153.937, 17.5868, 0.15", "7.03222, 154.541, 17.996, 0.15", "7.27216, 154.864, 18.2507, 0.29", "7.64818, 155.328, 18.6789, 0.66", "7.81845, 155.534, 18.8761, 0.66", "8.43276, 156.272, 19.5676, 0.15", "8.7684, 156.683, 19.9246, 0.22", "9.43915, 157.502, 20.63, 0.15", "9.85221, 157.987, 21.0323, 0.15", "10.4137, 158.625, 21.5609, 0.15", "10.7362, 158.989, 21.8478, 0.29", "11.3326, 159.66, 22.3507, 0.15", "11.672, 160.059, 22.6188, 0.15", "12.0163, 160.481, 22.8506, 0.37", "12.5746, 161.198, 23.1938, 0.15", "12.9279, 161.677, 23.4339, 0.29" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-149.655, -344.011, -4.23941, 0.07", "-149.231, -343.586, -4.14933, 0.07", "-148.586, -342.908, -4.10713, 0.29", "-148.056, -342.356, -4.13106, 0.07", "-147.495, -341.801, -4.2466, 0.07", "-146.839, -341.191, -4.47433, 0.15", "-146.36, -340.756, -4.67482, 0.15", "-146.028, -340.471, -4.86359, 0.15", "-145.572, -340.086, -5.22663, 0.29", "-145.024, -339.641, -5.75439, 0.07", "-144.651, -339.347, -6.15871, 0.29", "-144.311, -339.121, -6.50147, 0.44", "-144.154, -339.037, -6.64633, 0.44", "-143.508, -338.751, -7.24373, 0.15", "-143.031, -338.544, -7.70336, 0.15", "-142.846, -338.463, -7.87634, 0.15", "-142.13, -338.17, -8.56014, 0.15", "-141.813, -338.055, -8.8853, 0.37", "-141.006, -337.775, -9.78466, 0.22", "-140.609, -337.637, -10.2428, 0.22", "-140.387, -337.55, -10.5081, 0.22", "-139.915, -337.322, -11.0956, 0.15", "-139.389, -337.038, -11.7355, 0.15", "-138.911, -336.796, -12.2557, 0.15", "-138.585, -336.647, -12.5445, 0.37", "-138.031, -336.412, -12.8938, 0.44", "-137.471, -336.154, -13.1655, 0.22", "-136.871, -335.865, -13.3782, 0.37", "-136.499, -335.682, -13.4634, 0.37", "-135.695, -335.301, -13.5749, 0.22", "-134.603, -334.804, -13.6863, 0.22", "-133.517, -334.387, -13.7185, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-149.655, -344.011, -4.23941, 0.15", "-149.933, -344.696, -4.31388, 0.15", "-150.196, -345.482, -4.32718, 0.29", "-150.451, -346.276, -4.29675, 0.15", "-150.734, -347.021, -4.24812, 0.15", "-150.982, -347.631, -4.2022, 0.15", "-151.129, -347.979, -4.1755, 0.15", "-151.455, -348.719, -4.08767, 0.29", "-151.795, -349.536, -3.98869, 0.81", "-152.143, -350.589, -3.8734, 0.15", "-152.348, -351.42, -3.79369, 0.22", "-152.485, -352.27, -3.72217, 0.07", "-152.516, -353.166, -3.62802, 0.07", "-152.435, -354.036, -3.49368, 0.37", "-152.116, -355.294, -3.21237, 0.15", "-151.839, -356.016, -3.00078, 0.15", "-151.605, -356.527, -2.82283, 0.37", "-150.999, -357.774, -2.32076, 0.15", "-150.651, -358.53, -1.99514, 0.15", "-150.437, -359.114, -1.73647, 0.15", "-150.374, -359.415, -1.61024, 0.15", "-150.312, -360.184, -1.33194, 0.37", "-150.341, -361.117, -1.06919, 0.07", "-150.467, -361.849, -0.936605, 0.07", "-150.635, -362.486, -0.857018, 0.22", "-150.954, -363.509, -0.737639, 0.07", "-151.092, -363.915, -0.697599, 0.07", "-151.395, -364.682, -0.630096, 0.52", "-151.981, -365.976, -0.556844, 0.07", "-152.244, -366.487, -0.528511, 0.07" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "0.128087, -26.7289, -23.473, 0.44", "0.129062, -26.959, -23.8128, 0.44", "0.0989579, -27.7633, -25.1664, 0.44", "0.0799546, -28.1661, -25.954, 0.44", "0.0822208, -28.6666, -27.0403, 0.44", "0.0890755, -28.8815, -27.5415, 0.44", "0.087766, -29.0953, -28.0451, 0.44", "0.0658537, -29.2732, -28.4751, 0.44", "0.0268028, -29.4603, -28.9505, 0.44", "-0.0348617, -29.7239, -29.6298, 0.44", "-0.101071, -30.091, -30.5525, 0.44", "-0.122958, -30.413, -31.2951, 0.44", "-0.123027, -30.8777, -32.2925, 0.44", "-0.0912128, -31.4586, -33.4778, 0.44", "-0.0621183, -31.6502, -33.8621, 0.29", "0.0560145, -32.1298, -34.8698, 0.22", "0.178782, -32.4499, -35.5698, 0.22", "0.291897, -32.6723, -36.0829, 0.22", "0.361213, -32.7938, -36.36, 0.22", "0.481203, -33.0319, -36.8284, 0.29", "0.679564, -33.434, -37.5708, 0.29", "0.807398, -33.6915, -38.0203, 0.29", "0.958682, -33.9336, -38.5198, 0.29", "1.05803, -34.0316, -38.7771, 0.29", "1.2486, -34.1647, -39.1584, 0.29", "1.58151, -34.3837, -39.7158, 0.29", "2.0465, -34.6814, -40.3327, 0.22", "2.70685, -35.1308, -41.1226, 0.37", "3.0691, -35.4072, -41.5565, 0.37", "3.33897, -35.6571, -41.9416, 0.22", "3.69209, -36.0808, -42.5762, 0.22", "3.85955, -36.377, -42.9791, 0.22", "3.98098, -36.7126, -43.3807, 0.29", "4.07757, -37.1909, -43.9069, 0.29", "4.07885, -37.7391, -44.5349, 0.29", "4.00179, -38.0577, -44.9376, 0.29", "3.88883, -38.3111, -45.2933, 0.29", "3.76876, -38.5105, -45.5911, 0.22", "3.51056, -38.8615, -46.1345, 0.22", "3.11426, -39.3673, -46.8613, 0.22", "2.9697, -39.6031, -47.1832, 0.22", "2.86953, -39.9462, -47.6196, 0.22", "2.85603, -40.3061, -48.0588, 0.29", "2.87625, -40.5333, -48.3204, 0.29", "2.90094, -40.7355, -48.5268, 0.29", "2.91592, -41.2815, -49.0097, 0.29", "2.85152, -41.9296, -49.5395, 0.22", "2.74138, -42.4842, -49.9708, 0.22", "2.61041, -43.0174, -50.4005, 0.22", "2.51367, -43.4706, -50.8112, 0.22", "2.33483, -44.1787, -51.4818, 0.22", "2.25123, -44.4347, -51.73, 0.22", "2.13622, -44.7196, -52.0532, 0.22", "2.0089, -45.1492, -52.6488, 0.44", "2.12402, -45.5325, -53.5077, 0.44" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "0.128087, -26.7289, -23.473, 0.52", "0.982053, -28.1069, -23.9847, 0.52", "1.54092, -29.2667, -24.4603, 0.52", "1.90569, -30.2699, -24.8988, 0.59", "2.0766, -30.9153, -25.1737, 0.96", "2.16547, -31.4747, -25.3968, 0.96", "2.25013, -33.0136, -25.941, 0.81", "2.11136, -34.2193, -26.3066, 0.52", "1.86704, -35.4025, -26.6007, 0.52", "1.62888, -36.3736, -26.8429, 0.74", "1.33207, -37.6143, -27.175, 0.74", "1.04329, -38.9681, -27.6107, 0.66", "0.904937, -39.8178, -27.9259, 0.52", "0.855976, -40.802, -28.3381, 0.37", "0.908004, -41.7916, -28.8595, 0.66", "1.00703, -42.6862, -29.4068, 0.88", "1.11315, -43.5788, -30.0153, 0.88", "1.14934, -44.2235, -30.4908, 0.66", "1.10108, -45.1125, -31.143, 0.52", "0.965135, -46.0301, -31.7611, 0.52", "0.789859, -46.9686, -32.3075, 0.59", "0.595534, -47.8562, -32.7955, 0.59", "0.341989, -48.8906, -33.3786, 0.59", "0.128585, -49.682, -33.8676, 0.59", "-0.0626614, -50.3099, -34.2624, 0.66", "-0.371768, -51.2432, -34.813, 0.59", "-0.694257, -52.2037, -35.3454, 0.52", "-1.05919, -53.2976, -35.8714, 0.81", "-1.45045, -54.4299, -36.3072, 1.03", "-1.90406, -55.6148, -36.6346, 0.59", "-2.4042, -56.8172, -36.8166, 0.44", "-2.69663, -57.5134, -36.82, 0.59", "-3.05303, -58.4037, -36.7292, 0.59", "-3.35695, -59.2335, -36.5511, 0.52", "-3.69247, -60.2922, -36.2136, 0.52", "-3.89825, -61.1334, -35.8837, 0.66", "-4.00183, -61.6724, -35.6265, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-26.548, -45.936, -15.8501, 0.59", "-26.8572, -46.1868, -15.2703, 0.59", "-27.5801, -46.8829, -13.8766, 0.52", "-27.9685, -47.2938, -13.179, 0.52", "-28.3172, -47.6904, -12.6033, 0.52", "-28.6964, -48.1624, -11.9971, 0.52", "-29.1916, -48.7917, -11.2733, 0.66", "-29.5903, -49.367, -10.7565, 0.81", "-30.1398, -50.2426, -10.1803, 0.52", "-30.4793, -50.8507, -9.86302, 0.52", "-30.8563, -51.6305, -9.55192, 0.74", "-31.1892, -52.4406, -9.32638, 0.44", "-31.5301, -53.3815, -9.18383, 0.59", "-31.7918, -54.1752, -9.10549, 0.81", "-32.0404, -54.9725, -9.02195, 0.66", "-32.3852, -56.0328, -8.89809, 0.59", "-32.7512, -57.0416, -8.77916, 0.52", "-33.3376, -58.4385, -8.59043, 0.44", "-33.8819, -59.484, -8.41021, 0.52", "-34.4439, -60.3639, -8.22323, 0.44", "-34.8695, -60.9387, -8.08552, 0.44", "-35.3908, -61.5988, -7.91838, 0.37", "-35.9845, -62.4065, -7.70113, 0.22", "-36.3896, -63.0606, -7.53198, 0.59", "-36.6839, -63.6723, -7.40168, 0.88", "-37.0697, -64.7098, -7.20761, 0.59", "-37.3462, -65.6137, -7.02601, 0.44", "-37.6112, -66.5769, -6.7976, 0.59", "-37.7876, -67.2701, -6.59536, 0.52", "-37.9843, -68.092, -6.32799, 0.29", "-38.1675, -68.9255, -6.00566, 0.29", "-38.4263, -70.1111, -5.4334, 0.37", "-38.6747, -71.1516, -4.80673, 0.29", "-38.8616, -71.8519, -4.29572, 0.29", "-38.9761, -72.2851, -3.93207, 0.52", "-39.1083, -72.8156, -3.4442, 0.37", "-39.2904, -73.5726, -2.73424, 0.29", "-39.5506, -74.4405, -1.92087, 0.37", "-39.852, -75.1963, -1.23902, 0.66", "-40.181, -75.8731, -0.656405, 1.03", "-40.7358, -76.9174, 0.224876, 0.81", "-41.1903, -77.7431, 0.894856, 1.25", "-41.7258, -78.7579, 1.64616, 0.96", "-42.2438, -79.7739, 2.3272, 0.37", "-42.7718, -80.797, 2.93473, 0.44", "-43.2309, -81.6378, 3.38275, 0.44", "-43.6173, -82.3007, 3.68319, 0.59", "-44.2483, -83.3085, 4.05216, 0.96", "-44.7235, -83.9781, 4.19923, 0.37", "-45.3836, -84.7408, 4.24329, 0.22", "-45.8989, -85.2547, 4.21041, 0.22", "-46.3538, -85.6863, 4.15369, 0.66", "-46.9931, -86.3191, 4.059, 0.74", "-47.74, -87.1306, 3.9522, 0.37", "-48.3988, -88.0187, 3.88207, 0.44", "-48.8281, -88.7988, 3.87276, 0.37", "-49.1391, -89.5782, 3.89159, 0.22", "-49.3265, -90.3089, 3.92426, 0.22", "-49.3928, -90.7954, 3.95428, 0.59", "-49.4375, -91.4685, 4.00925, 0.88", "-49.512, -92.379, 4.10394, 0.29", "-49.5816, -92.8385, 4.16096, 0.22", "-49.7909, -93.6397, 4.29631, 0.52", "-50.1535, -94.6199, 4.50191, 0.22", "-50.3603, -95.0877, 4.61161, 0.22", "-50.761, -95.9528, 4.8199, 0.29", "-50.9632, -96.4396, 4.94446, 0.29", "-51.2412, -97.1983, 5.16732, 0.22", "-51.3563, -97.5552, 5.28268, 0.74", "-51.5077, -98.1028, 5.46081, 0.96", "-51.7396, -98.9844, 5.76246, 0.59", "-52.0034, -100.038, 6.16178, 0.15", "-52.1883, -100.702, 6.466, 0.15", "-52.3125, -101.069, 6.6542, 0.59", "-52.6954, -101.974, 7.17924, 0.96", "-53.2203, -102.958, 7.8205, 0.22", "-53.5846, -103.486, 8.21022, 0.15", "-54.2314, -104.247, 8.8212, 0.15", "-54.5003, -104.543, 9.07801, 0.66", "-54.7242, -104.78, 9.31088, 0.96", "-54.9893, -105.05, 9.59692, 1.11", "-55.5622, -105.601, 10.158, 0.52", "-56.1679, -106.18, 10.7242, 0.15", "-56.7381, -106.767, 11.2908, 0.15", "-57.0376, -107.106, 11.6291, 0.15", "-57.2998, -107.431, 11.9506, 0.59", "-57.7937, -108.087, 12.5923, 0.96", "-58.4684, -109.037, 13.483, 0.22", "-58.9373, -109.75, 14.1541, 0.22", "-59.2629, -110.284, 14.6799, 0.22", "-59.4866, -110.695, 15.1032, 0.59", "-59.7574, -111.301, 15.7888, 1.11", "-59.9057, -111.794, 16.4084, 0.44", "-60.0152, -112.467, 17.3672, 0.22", "-60.0408, -112.911, 18.0527, 0.22", "-60.0335, -113.04, 18.2565, 0.22", "-60.0087, -113.286, 18.667, 0.22", "-59.9907, -113.673, 19.3333, 0.22", "-60.0249, -113.977, 19.8907, 0.22", "-60.1004, -114.17, 20.3032, 0.44", "-60.2958, -114.487, 21.0427, 0.81", "-60.6096, -114.92, 22.0718, 0.81", "-60.9208, -115.319, 23.0025, 0.66", "-61.1897, -115.667, 23.7786, 0.66", "-61.7621, -116.388, 25.3645, 0.22", "-62.1174, -116.815, 26.3193, 0.22", "-62.3211, -117.053, 26.845, 0.66", "-62.561, -117.331, 27.3961, 0.74", "-63.127, -118.02, 28.5244, 0.22", "-63.6098, -118.642, 29.3674, 0.15", "-64.1064, -119.301, 30.1181, 0.15", "-64.643, -120.016, 30.8777, 0.15", "-65.1234, -120.645, 31.4927, 1.18", "-65.7199, -121.406, 32.1812, 0.07", "-66.3009, -122.153, 32.7157, 0.07", "-66.6925, -122.669, 32.9943, 0.07", "-66.9318, -122.96, 33.1391, 0.07", "-67.4297, -123.49, 33.4545, 0.96", "-68.4084, -124.41, 34.1311, 0.07", "-69.1978, -125.089, 34.6666, 0.07", "-69.7179, -125.516, 35.0183, 0.66", "-71.3992, -126.849, 36.1597, 0.07", "-72.2683, -127.542, 36.7836, 0.07", "-73.0952, -128.21, 37.4134, 0.07", "-73.8046, -128.776, 38.0205, 0.07", "-74.5331, -129.345, 38.759, 0.07", "-75.0119, -129.71, 39.2804, 0.07", "-75.7146, -130.212, 40.0939, 0.07", "-76.5694, -130.762, 41.1056, 0.15", "-78.0027, -131.61, 42.9019, 0.07", "-79.0663, -132.175, 44.289, 0.07", "-79.619, -132.444, 45.0257, 0.07", "-80.3547, -132.766, 46.0523, 0.07", "-80.7338, -132.897, 46.5798, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-26.548, -45.936, -15.8501, 0.66", "-27.0074, -46.8863, -16.2254, 0.66", "-27.5156, -47.9015, -16.5339, 0.66", "-27.8562, -48.6246, -16.7032, 0.66", "-28.0924, -49.1611, -16.8077, 0.66", "-28.5322, -50.2404, -16.989, 0.59", "-28.8837, -51.2332, -17.1107, 0.66", "-29.1154, -52.0576, -17.1333, 0.88", "-29.2837, -53.0724, -17.046, 0.59", "-29.3185, -54.2146, -16.8085, 0.59", "-29.2398, -54.9152, -16.5838, 0.59", "-28.9921, -55.9189, -16.1468, 0.81", "-28.7278, -56.8086, -15.6802, 0.81", "-28.4466, -57.749, -15.1409, 0.88", "-28.1458, -58.9129, -14.4256, 0.88", "-27.9617, -59.9796, -13.7693, 0.74", "-27.9343, -61.1302, -13.1291, 0.74", "-28.1312, -62.3691, -12.5805, 0.74", "-28.3465, -63.0519, -12.3357, 0.81", "-28.703, -63.8964, -12.1003, 0.81", "-29.2431, -65.0235, -11.885, 0.74", "-29.8187, -66.1971, -11.7936, 0.74", "-30.2918, -67.26, -11.8105, 0.74", "-30.6008, -68.1235, -11.8761, 0.81", "-30.8109, -68.9169, -11.947, 0.81", "-31.0334, -70.2309, -12.0711, 0.59", "-31.1598, -71.8346, -12.1952, 0.81", "-31.1613, -72.9427, -12.2597, 0.66", "-31.1092, -74.2889, -12.3101, 0.59", "-31.0667, -75.2805, -12.3521, 0.59", "-31.0367, -76.0232, -12.3668, 0.52", "-31.0129, -77.217, -12.3753, 0.88", "-31.0502, -78.3402, -12.3783, 0.88", "-31.1886, -79.6702, -12.4356, 0.81", "-31.4223, -80.9802, -12.5427, 0.81", "-31.5821, -81.6271, -12.6126, 0.88", "-31.9841, -82.9225, -12.7761, 0.81", "-32.4037, -84.0755, -12.9113, 0.81", "-32.7712, -84.9718, -12.977, 0.96", "-33.2948, -86.1434, -12.9724, 0.74", "-33.6279, -86.8241, -12.8996, 0.74", "-34.1194, -87.7374, -12.7009, 0.44", "-34.5178, -88.4408, -12.4492, 0.66", "-35.0251, -89.2681, -12.0761, 0.59", "-35.5026, -89.9239, -11.7454, 0.59", "-35.9971, -90.4602, -11.4254, 0.96", "-36.9158, -91.258, -10.8712, 0.52", "-37.7267, -91.8732, -10.4214, 0.52", "-38.2803, -92.2843, -10.1642, 0.52", "-39.0317, -92.8755, -9.85171, 0.52", "-39.781, -93.5602, -9.58518, 0.59", "-40.6198, -94.5275, -9.32141, 0.52", "-41.1748, -95.3849, -9.18206, 0.66", "-41.7136, -96.4816, -9.09222, 0.74", "-42.0614, -97.365, -9.05886, 1.03", "-42.3808, -98.3577, -9.08128, 1.03", "-42.7131, -99.5623, -9.16748, 0.96", "-42.9463, -100.572, -9.29248, 0.66", "-43.1881, -101.749, -9.45094, 0.52", "-43.4251, -103.021, -9.65642, 0.59", "-43.6238, -104.123, -9.89036, 0.44", "-43.7489, -104.832, -10.0786, 0.88", "-43.9411, -105.964, -10.4563, 0.59", "-44.0696, -106.887, -10.8214, 0.59", "-44.1707, -107.957, -11.3194, 0.66", "-44.2413, -108.581, -11.6478, 0.66", "-44.3561, -109.2, -11.9851, 0.96", "-44.5518, -109.898, -12.3582, 0.96", "-44.9453, -110.924, -12.8277, 0.44", "-45.3422, -111.769, -13.1363, 0.44", "-45.8717, -112.77, -13.3828, 0.44", "-46.2755, -113.494, -13.475, 0.88", "-46.9175, -114.612, -13.4753, 0.66", "-47.5666, -115.756, -13.3412, 0.52", "-48.0517, -116.727, -13.1394, 0.74", "-48.2992, -117.394, -12.9497, 0.74", "-48.4565, -118.129, -12.6958, 0.74", "-48.5178, -119.021, -12.3308, 0.59", "-48.4791, -119.701, -12.0256, 0.81", "-48.335, -120.988, -11.4363, 0.88", "-48.2192, -122.2, -10.8957, 0.59", "-48.189, -123.181, -10.4816, 0.66", "-48.2602, -124.374, -10.0221, 0.66", "-48.3455, -124.858, -9.8548, 0.66", "-48.661, -125.956, -9.52925, 0.52", "-49.1042, -127.156, -9.24514, 0.52", "-49.5208, -128.295, -9.06915, 0.74", "-49.7674, -129.093, -9.01633, 0.96", "-50.0478, -130.363, -9.01237, 1.18", "-50.1869, -131.469, -9.03279, 0.66", "-50.2274, -132.291, -9.06314, 0.66", "-50.2715, -133.614, -9.12406, 0.59", "-50.3725, -134.938, -9.19605, 0.81", "-50.6017, -136.318, -9.28484, 0.66", "-50.974, -137.6, -9.36748, 0.66", "-51.3731, -138.503, -9.42021, 0.66", "-52.0242, -139.59, -9.4698, 0.59", "-52.8462, -140.63, -9.49552, 0.52", "-53.7416, -141.602, -9.48948, 0.44", "-54.2623, -142.149, -9.46825, 0.44", "-54.654, -142.593, -9.43894, 0.44", "-54.9267, -142.964, -9.40798, 0.44", "-55.4027, -143.769, -9.30776, 0.44", "-55.9666, -144.911, -9.13537, 0.52", "-56.5067, -146.146, -8.9126, 0.52", "-56.9246, -147.14, -8.72409, 0.59", "-57.2941, -148.0, -8.53691, 0.44", "-57.6442, -148.771, -8.33937, 0.44", "-58.1543, -149.834, -8.00799, 0.66", "-58.5775, -150.652, -7.69851, 0.66", "-59.033, -151.524, -7.31383, 0.74", "-59.5797, -152.67, -6.73173, 0.52", "-59.8915, -153.485, -6.26649, 0.52", "-60.1016, -154.367, -5.73315, 0.66", "-60.171, -155.259, -5.20447, 0.59", "-60.1156, -156.075, -4.79131, 0.44", "-59.9559, -156.967, -4.44097, 0.44", "-59.7215, -158.03, -4.151, 0.44", "-59.5035, -159.074, -3.94073, 0.52", "-59.3092, -160.43, -3.74158, 0.88", "-59.2969, -161.458, -3.61562, 0.96", "-59.4698, -162.488, -3.47563, 0.74", "-59.8277, -163.578, -3.28011, 0.44", "-60.0926, -164.156, -3.15207, 0.74", "-60.4535, -164.847, -2.94478, 1.03", "-60.8977, -165.7, -2.61397, 0.44", "-61.2801, -166.559, -2.28191, 0.37", "-61.4362, -167.161, -2.07021, 0.37", "-61.472, -167.719, -1.91507, 0.74", "-61.4186, -168.628, -1.67237, 1.11", "-61.3062, -169.415, -1.45778, 0.74", "-61.1182, -170.481, -1.16048, 0.59", "-60.913, -171.875, -0.73641, 0.52", "-60.8528, -172.799, -0.402155, 0.29", "-60.8668, -173.642, -0.0426098, 0.29", "-60.9261, -174.205, 0.217628, 0.81", "-61.0615, -175.047, 0.582122, 1.11", "-61.317, -176.306, 1.03897, 0.52", "-61.5561, -177.493, 1.34658, 0.44", "-61.678, -178.327, 1.49558, 0.88", "-61.7476, -179.362, 1.58383, 0.88", "-61.7134, -180.673, 1.60397, 0.66", "-61.5789, -181.681, 1.57291, 0.37", "-61.3382, -182.738, 1.49893, 0.29", "-61.1559, -183.423, 1.43999, 0.29", "-61.0324, -183.899, 1.4115, 0.74", "-60.8949, -184.546, 1.41814, 1.03", "-60.8055, -185.494, 1.51317, 0.29", "-60.8654, -186.386, 1.62348, 0.22", "-60.9924, -186.957, 1.66824, 0.22", "-61.1256, -187.414, 1.68028, 0.44", "-61.356, -188.216, 1.6729, 0.66", "-61.5528, -189.026, 1.63359, 0.29", "-61.6589, -189.712, 1.56983, 0.29", "-61.6794, -190.283, 1.53102, 0.29", "-61.6303, -191.074, 1.51393, 0.66", "-61.5401, -192.002, 1.5576, 0.37", "-61.4656, -192.676, 1.62531, 0.44", "-61.4088, -193.403, 1.75267, 0.37", "-61.3893, -194.138, 1.96078, 0.37", "-61.3997, -194.853, 2.24742, 0.74", "-61.4271, -195.825, 2.73096, 1.11", "-61.4188, -196.408, 3.06965, 1.11", "-61.3275, -197.328, 3.68768, 0.66", "-61.1225, -198.336, 4.45186, 0.44", "-60.8826, -199.148, 5.09741, 0.44", "-60.611, -199.905, 5.71706, 0.29", "-60.3184, -200.673, 6.34219, 0.29", "-60.1155, -201.306, 6.82419, 0.29", "-60.0351, -201.725, 7.06389, 0.29", "-60.0858, -202.38, 7.26331, 0.59", "-60.2721, -203.03, 7.34673, 0.96", "-60.5628, -203.809, 7.40735, 0.96", "-60.8874, -204.67, 7.47358, 0.44", "-61.2762, -205.85, 7.57099, 0.29", "-61.4723, -206.638, 7.65712, 0.29", "-61.604, -207.462, 7.77944, 0.66", "-61.6748, -208.348, 7.92498, 0.44", "-61.7202, -209.191, 8.06249, 0.29", "-61.7605, -209.877, 8.15565, 0.44", "-61.8103, -210.609, 8.25319, 1.25", "-61.867, -211.348, 8.32208, 1.25", "-61.9446, -212.34, 8.39546, 1.03", "-62.0454, -213.463, 8.45549, 0.52", "-62.1615, -214.581, 8.52375, 0.29", "-62.2708, -215.571, 8.60725, 0.29", "-62.3397, -216.138, 8.67321, 0.29", "-62.4407, -216.839, 8.77892, 0.37", "-62.5542, -217.343, 8.87162, 0.29", "-62.719, -217.809, 8.94789, 0.29", "-62.9305, -218.219, 8.9776, 0.52", "-63.3202, -218.849, 8.95169, 1.18", "-63.6559, -219.379, 8.89421, 1.18", "-64.3076, -220.489, 8.69629, 0.81", "-64.6896, -221.324, 8.47533, 0.29", "-64.8642, -221.924, 8.27774, 0.29", "-64.9264, -222.384, 8.11525, 0.52", "-64.9261, -223.053, 7.8938, 0.88", "-64.8622, -223.921, 7.67276, 0.29", "-64.753, -224.857, 7.55318, 0.22", "-64.7001, -225.53, 7.59814, 0.22", "-64.6992, -226.061, 7.71658, 0.44", "-64.7457, -226.716, 7.96925, 0.59", "-64.8932, -227.679, 8.4587, 0.29", "-65.0482, -228.399, 8.87951, 0.81", "-65.2369, -229.161, 9.33628, 0.81", "-65.3613, -229.668, 9.61141, 0.81", "-65.5928, -230.693, 10.0829, 0.29", "-65.7587, -231.427, 10.3396, 0.29", "-65.8929, -231.999, 10.4974, 0.88", "-66.1109, -232.778, 10.6533, 1.18", "-66.4054, -233.689, 10.8103, 0.52", "-66.5961, -234.259, 10.9045, 0.37", "-66.858, -235.117, 11.025, 0.22", "-66.9893, -235.681, 11.1142, 0.44", "-67.1009, -236.455, 11.2453, 0.96", "-67.1578, -237.492, 11.3916, 0.22", "-67.1431, -238.118, 11.4553, 0.22", "-67.1005, -238.851, 11.4951, 0.37", "-67.0738, -239.419, 11.498, 0.37", "-67.0895, -240.307, 11.4344, 0.22", "-67.1705, -241.107, 11.3361, 0.22", "-67.3033, -241.792, 11.2365, 0.81", "-67.5232, -242.662, 11.1257, 0.88", "-67.7808, -243.609, 11.0434, 0.29", "-68.0127, -244.547, 11.0199, 0.22", "-68.1676, -245.306, 11.0443, 0.22", "-68.294, -246.157, 11.1144, 0.96", "-68.3782, -246.993, 11.1732, 0.81", "-68.4289, -247.905, 11.2308, 0.37", "-68.4667, -249.086, 11.2942, 0.22", "-68.5131, -250.048, 11.3176, 0.22", "-68.5898, -251.046, 11.2688, 0.22", "-68.6819, -251.987, 11.1548, 0.22", "-68.7176, -252.36, 11.0997, 0.59", "-68.778, -253.048, 10.9912, 1.03", "-68.8695, -254.143, 10.8233, 0.37", "-68.938, -255.065, 10.7296, 0.22", "-68.9817, -255.639, 10.7426, 0.22", "-69.0802, -256.604, 10.9515, 0.22", "-69.1655, -257.209, 11.1692, 0.22", "-69.2454, -257.672, 11.407, 0.22", "-69.3324, -258.16, 11.6971, 0.37", "-69.4573, -258.882, 12.1265, 0.22", "-69.5339, -259.392, 12.4101, 0.22", "-69.5792, -259.796, 12.6036, 0.74", "-69.5878, -260.403, 12.8907, 1.03", "-69.4984, -261.216, 13.3048, 0.66", "-69.3493, -261.942, 13.6864, 0.29", "-69.2269, -262.434, 13.9531, 0.29", "-69.1434, -262.759, 14.1223, 0.29", "-69.0114, -263.312, 14.3918, 0.29", "-68.8569, -264.039, 14.7361, 0.22", "-68.7928, -264.382, 14.8781, 0.22", "-68.6737, -265.103, 15.1341, 0.22", "-68.5672, -265.817, 15.3715, 0.22", "-68.4359, -266.792, 15.6969, 0.74", "-68.3435, -267.666, 15.9583, 0.74", "-68.2796, -268.473, 16.1815, 0.74", "-68.2279, -269.259, 16.3864, 0.37", "-68.173, -270.236, 16.6507, 0.37", "-68.146, -270.939, 16.8574, 0.37", "-68.1194, -271.727, 17.0974, 0.88", "-68.0662, -272.658, 17.3362, 0.88", "-67.9992, -273.441, 17.5468, 0.44", "-67.9063, -274.411, 17.8193, 0.22", "-67.8599, -274.908, 17.979, 0.22", "-67.8095, -275.589, 18.2382, 0.37", "-67.7677, -276.634, 18.7543, 0.74", "-67.8496, -277.589, 19.3778, 0.22", "-68.067, -278.21, 19.8791, 0.22", "-68.2957, -278.506, 20.162, 0.22", "-68.6257, -278.804, 20.4701, 0.22", "-68.9144, -279.034, 20.677, 0.22", "-69.5332, -279.563, 21.1015, 0.22", "-69.8899, -279.949, 21.3172, 0.81", "-70.2853, -280.531, 21.574, 1.18", "-70.5131, -280.984, 21.7354, 1.18", "-70.8762, -281.968, 22.0222, 0.37", "-71.2267, -283.211, 22.3073, 0.22", "-71.4402, -284.216, 22.4873, 0.22", "-71.5589, -284.843, 22.5736, 0.22", "-71.7261, -285.708, 22.6307, 0.37", "-71.9084, -286.579, 22.6417, 0.74", "-72.1281, -287.458, 22.5941, 0.59", "-72.3805, -288.233, 22.4779, 0.29", "-72.6631, -288.961, 22.3549, 0.15", "-73.0053, -289.794, 22.207, 0.15", "-73.1847, -290.252, 22.1437, 0.44", "-73.4603, -291.067, 22.095, 0.66", "-73.6375, -291.929, 22.1513, 0.22", "-73.6541, -292.828, 22.4033, 0.22", "-73.5686, -293.441, 22.7196, 0.81", "-73.4131, -294.202, 23.2492, 0.96", "-73.2795, -294.833, 23.7611, 0.96", "-73.1525, -295.418, 24.2922, 0.44", "-73.0337, -296.062, 24.9162, 0.29", "-72.9907, -296.638, 25.4342, 0.22", "-73.0371, -297.211, 25.8516, 0.22", "-73.1736, -297.81, 26.1552, 0.22", "-73.2765, -298.144, 26.2749, 0.22", "-73.3766, -298.419, 26.3441, 0.74", "-73.6415, -299.095, 26.4444, 1.03", "-74.0274, -300.093, 26.5286, 0.22", "-74.2791, -300.784, 26.5674, 0.22", "-74.4023, -301.153, 26.5847, 0.74", "-74.5405, -301.603, 26.5909, 0.96", "-74.7389, -302.31, 26.6181, 0.29", "-74.8872, -302.885, 26.6532, 0.22", "-74.9898, -303.317, 26.6863, 0.22", "-75.1327, -303.927, 26.7497, 0.37", "-75.3522, -304.665, 26.8427, 0.22", "-75.6957, -305.586, 27.0263, 0.22", "-75.8386, -305.918, 27.1311, 0.22", "-75.9925, -306.23, 27.2642, 0.44", "-76.2421, -306.7, 27.5104, 0.88", "-76.5546, -307.267, 27.8565, 0.44", "-76.9675, -308.041, 28.3633, 0.22", "-77.2585, -308.632, 28.7157, 0.22", "-77.5399, -309.242, 29.0498, 0.22", "-77.7528, -309.702, 29.2758, 0.22", "-77.9073, -310.047, 29.42, 0.22", "-78.054, -310.398, 29.5281, 0.59", "-78.3412, -311.066, 29.6765, 1.25", "-78.7556, -311.964, 29.8383, 0.44", "-79.1405, -312.763, 29.9661, 0.44", "-79.4226, -313.354, 30.0757, 0.52", "-79.8687, -314.337, 30.3353, 0.22", "-80.1901, -315.053, 30.5729, 0.15", "-80.4782, -315.698, 30.8339, 0.15", "-80.5988, -315.959, 30.9525, 0.37", "-80.9984, -316.764, 31.345, 1.03", "-81.6676, -317.995, 32.0023, 0.22", "-81.9814, -318.518, 32.3064, 0.22", "-82.1735, -318.832, 32.4882, 0.22", "-82.5137, -319.402, 32.8175, 0.22", "-82.9509, -320.109, 33.2104, 1.47" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-51.3556, 176.952, 38.8796, 0.07", "-52.2106, 178.211, 38.8796, 0.07", "-52.7685, 179.095, 38.8796, 0.66", "-53.3074, 179.997, 38.8796, 0.15", "-53.805, 180.856, 38.8796, 0.59", "-54.2502, 181.619, 38.8796, 0.15", "-54.6012, 182.219, 38.8796, 0.52", "-54.9116, 182.843, 38.8796, 0.15", "-55.2216, 183.508, 38.8796, 0.29", "-55.5058, 184.144, 38.8796, 0.07", "-55.735, 184.618, 38.8796, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-51.3556, 176.952, 38.8796, 0.22", "-51.731, 177.883, 39.2975, 0.22", "-52.3763, 179.322, 39.5987, 0.07", "-52.6992, 180.003, 39.6181, 0.07", "-53.0954, 180.851, 39.5404, 0.29", "-53.578, 181.919, 39.362, 0.07", "-54.0557, 183.019, 39.1377, 0.07", "-54.3655, 183.743, 38.8837, 0.52", "-54.8034, 184.799, 38.3889, 0.07", "-55.051, 185.442, 38.0561, 0.07", "-55.2277, 185.95, 37.7909, 0.07", "-55.3229, 186.273, 37.6383, 0.22", "-55.5147, 187.067, 37.3155, 0.44", "-55.7606, 188.33, 36.8637, 0.07", "-55.8632, 188.994, 36.6766, 0.07", "-55.9155, 189.359, 36.6005, 0.52", "-56.0298, 190.163, 36.4636, 0.74", "-56.1949, 191.322, 36.3011, 0.07", "-56.3101, 192.12, 36.2233, 0.07", "-56.4374, 192.919, 36.1956, 0.37", "-56.665, 194.193, 36.2131, 0.07", "-56.793, 194.787, 36.2434, 0.22", "-56.8974, 195.169, 36.2893, 0.37", "-57.1481, 195.905, 36.4556, 0.96", "-57.5749, 196.953, 36.8177, 0.15", "-57.7646, 197.355, 37.0093, 0.15", "-58.1583, 198.119, 37.4986, 0.59", "-58.728, 199.118, 38.2421, 0.07", "-59.1693, 199.776, 38.7657, 0.07", "-59.7037, 200.467, 39.363, 0.59", "-60.294, 201.143, 39.9427, 0.15", "-60.9143, 201.816, 40.4737, 0.15", "-61.4097, 202.316, 40.8398, 0.88", "-62.339, 203.206, 41.3733, 0.07", "-62.9117, 203.773, 41.6275, 0.07", "-63.6819, 204.597, 41.8875, 0.07", "-64.0611, 205.043, 41.9761, 0.81", "-64.4927, 205.582, 42.0652, 1.25", "-65.1824, 206.496, 42.1831, 0.22", "-65.9239, 207.526, 42.3039, 0.15", "-66.6857, 208.598, 42.4061, 0.37", "-67.7479, 210.118, 42.5624, 0.07", "-68.383, 211.038, 42.6607, 0.07", "-69.0448, 212.03, 42.7679, 0.96" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-4.00183, -61.6724, -35.6265, 0.22", "-2.99033, -62.0931, -36.2821, 0.22", "-2.52994, -62.36, -36.5922, 0.22", "-2.23002, -62.5883, -36.8298, 0.22", "-2.02779, -62.788, -37.0169, 0.22", "-1.76715, -63.1056, -37.2881, 0.29", "-1.42997, -63.6357, -37.6869, 0.29", "-1.29877, -64.1282, -37.9397, 0.29", "-1.26784, -64.7069, -38.1543, 0.29", "-1.29943, -65.2555, -38.2979, 0.29", "-1.33871, -65.5835, -38.3565, 0.52", "-1.44328, -66.1978, -38.4466, 0.88", "-1.63234, -67.1011, -38.5294, 0.29", "-1.84503, -68.0485, -38.5645, 0.29", "-2.0171, -68.8112, -38.545, 0.52", "-2.13134, -69.3175, -38.5146, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-4.00183, -61.6724, -35.6265, 0.15", "-4.69846, -62.5986, -34.7412, 0.15", "-5.07801, -63.1033, -34.2588, 0.15", "-5.44157, -63.5866, -33.7968, 0.15", "-5.73268, -63.9737, -33.4268, 0.15", "-6.07412, -64.4277, -32.9929, 0.15", "-6.50933, -65.0063, -32.4398, 0.15" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-82.9509, -320.109, 33.2104, 0.22", "-83.5057, -320.697, 34.3992, 0.22", "-83.6553, -320.952, 34.7886, 0.22", "-83.789, -321.245, 35.1656, 0.22", "-83.9595, -321.8, 35.7267, 0.22", "-84.0994, -322.389, 36.2411, 0.22", "-84.1754, -322.729, 36.5222, 0.37", "-84.2753, -323.283, 36.8906, 1.03", "-84.3362, -323.536, 37.0424, 1.03", "-84.6557, -324.542, 37.6321, 0.37", "-85.0034, -325.375, 38.0786, 0.29", "-85.2187, -325.789, 38.3066, 0.29", "-85.6597, -326.493, 38.7451, 0.59", "-86.1086, -327.133, 39.1835, 0.22", "-86.4161, -327.555, 39.5059, 0.52", "-86.9492, -328.28, 40.1138, 0.96", "-87.5406, -329.157, 40.8907, 0.22", "-87.9047, -329.767, 41.4298, 0.22", "-88.1193, -330.181, 41.8205, 0.22", "-88.2944, -330.578, 42.2055, 0.22", "-88.45, -331.003, 42.6337, 0.22", "-88.5247, -331.319, 42.9976, 0.22", "-88.5422, -332.031, 43.6877, 1.4" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-82.9509, -320.109, 33.2104, 0.22", "-81.7929, -320.387, 34.0131, 0.22", "-81.0905, -320.559, 34.4284, 0.22", "-80.683, -320.655, 34.5973, 0.22", "-80.0235, -320.811, 34.8309, 0.07", "-79.549, -320.923, 34.999, 0.07", "-79.3366, -320.973, 35.0742, 0.07", "-78.5815, -321.139, 35.274, 0.88", "-77.0666, -321.474, 35.5552, 0.15", "-76.1585, -321.679, 35.6753, 0.44" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-69.0448, 212.03, 42.7679, 0.07", "-69.5517, 213.311, 43.7773, 0.07", "-69.8602, 214.119, 44.439, 0.59", "-70.3607, 215.515, 45.6075, 0.15", "-70.7079, 216.543, 46.5146, 0.74", "-71.0042, 217.458, 47.3596, 0.07", "-71.292, 218.347, 48.1806, 0.07", "-71.4874, 218.966, 48.8204, 0.07", "-71.7022, 219.683, 49.5985, 0.74", "-71.9864, 220.819, 50.8239, 0.07", "-72.1455, 221.527, 51.5766, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-69.0448, 212.03, 42.7679, 0.07", "-69.9325, 212.321, 41.9374, 0.07", "-70.6026, 212.607, 41.1756, 0.07", "-71.224, 212.966, 40.3181, 0.07", "-71.4396, 213.132, 39.9478, 0.29", "-71.8525, 213.497, 39.1758, 0.74", "-72.276, 213.909, 38.3623, 0.29", "-72.6337, 214.339, 37.6118, 0.29", "-73.1289, 214.933, 36.674, 0.29", "-73.7613, 215.592, 35.7222, 0.29", "-74.014, 215.804, 35.4357, 0.74", "-74.5694, 216.154, 35.0231, 1.47", "-75.4977, 216.607, 34.5894, 0.52", "-76.4555, 216.988, 34.3243, 0.22", "-77.5665, 217.374, 34.1472, 0.15", "-78.3635, 217.624, 34.0655, 0.29", "-79.5674, 217.98, 33.9651, 0.07", "-80.0878, 218.125, 33.9354, 0.52", "-81.3597, 218.494, 33.8823, 0.07", "-82.2809, 218.801, 33.8802, 0.81" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-2.13134, -69.3175, -38.5146, 0.22", "-1.54841, -70.4672, -38.4781, 0.22", "-1.09208, -71.4069, -38.4978, 0.22", "-0.716004, -72.1887, -38.5346, 0.22", "-0.392608, -72.8082, -38.5989, 0.22", "0.288702, -74.0216, -38.7842, 0.22", "0.665886, -74.6462, -38.8931, 0.22", "1.03276, -75.2008, -39.0271, 0.22", "1.40601, -75.7622, -39.2017, 0.22", "1.98013, -76.6059, -39.5703, 0.37", "2.31163, -77.0907, -39.8234, 0.52", "2.56042, -77.4589, -40.026, 0.29", "2.63969, -77.5898, -40.1002, 0.29", "2.89578, -78.205, -40.4468, 0.22", "2.99172, -79.0262, -40.871, 0.22", "2.96427, -79.4165, -41.0504, 0.22", "2.89428, -79.803, -41.2265, 0.29", "2.80963, -80.1364, -41.3826, 0.29", "2.55928, -81.0142, -41.7709, 0.15", "2.41705, -81.4597, -41.9237, 0.22" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-2.13134, -69.3175, -38.5146, 0.07", "-2.71503, -69.6131, -37.6272, 0.07", "-3.61785, -70.0702, -36.2546, 0.07", "-4.38127, -70.4567, -35.0939, 0.07", "-4.75, -70.6434, -34.5334, 0.29", "-5.55669, -71.0519, -33.3069, 0.22", "-5.8826, -71.2169, -32.8114, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-88.5422, -332.031, 43.6877, 0.07", "-87.9269, -331.42, 44.1899, 0.07", "-87.4312, -330.907, 44.6009, 0.07", "-87.0438, -330.513, 44.905, 0.22", "-86.8537, -330.318, 45.0371, 0.22", "-86.4762, -329.924, 45.2773, 0.22", "-85.8717, -329.318, 45.5984, 0.15", "-85.4402, -328.903, 45.7447, 0.15", "-84.858, -328.398, 45.823, 0.15", "-84.4604, -328.111, 45.8291, 0.37", "-84.079, -327.893, 45.8037, 0.59", "-83.079, -327.489, 45.671, 0.15", "-82.1136, -327.209, 45.4645, 0.15", "-81.7168, -327.121, 45.3565, 0.15", "-81.0151, -327.02, 45.1321, 0.29", "-80.2449, -326.968, 44.8819, 0.15", "-79.5556, -326.967, 44.6516, 0.52", "-78.5013, -327.021, 44.2893, 0.15", "-77.8885, -327.065, 44.0905, 0.29", "-77.0898, -327.108, 43.8467, 0.29", "-76.3277, -327.139, 43.6107, 0.15", "-75.5482, -327.17, 43.3611, 0.44", "-74.9242, -327.186, 43.1408, 0.15", "-74.4422, -327.189, 42.9459, 0.22", "-73.3855, -327.147, 42.4677, 0.07", "-72.7952, -327.083, 42.1776, 0.59", "-71.8788, -326.903, 41.6526, 0.07", "-70.9729, -326.653, 41.0578, 0.37", "-70.2841, -326.424, 40.549, 0.15", "-70.0011, -326.313, 40.3033, 0.44", "-69.6848, -326.17, 39.9861, 0.44", "-68.9868, -325.829, 39.2775, 0.07", "-68.4884, -325.587, 38.7803, 0.07", "-67.9541, -325.359, 38.2501, 0.07", "-67.3325, -325.135, 37.657, 0.07", "-66.9755, -325.032, 37.3269, 0.07", "-66.3554, -324.902, 36.7665, 0.37", "-65.4448, -324.795, 36.0053, 0.07", "-65.0039, -324.77, 35.6644, 0.07", "-64.2181, -324.743, 35.0892, 0.52", "-63.217, -324.736, 34.395, 0.07", "-62.7135, -324.744, 34.0536, 0.07", "-61.9413, -324.788, 33.5362, 0.52", "-61.0146, -324.905, 32.978, 0.15", "-60.5067, -324.995, 32.7107, 0.15", "-60.3735, -325.024, 32.6486, 0.15", "-59.9412, -325.127, 32.4791, 0.29", "-59.6057, -325.206, 32.3624, 0.29", "-58.7094, -325.418, 32.0826, 0.07", "-57.9513, -325.56, 31.8906, 0.07", "-57.5204, -325.621, 31.7872, 0.15", "-56.7113, -325.704, 31.587, 0.07", "-56.3764, -325.73, 31.4964, 0.07", "-55.8065, -325.784, 31.3328, 0.29", "-54.5857, -325.93, 30.9375, 0.07", "-53.9282, -326.033, 30.6799, 0.07", "-53.5321, -326.099, 30.4837, 0.29", "-52.967, -326.184, 30.1486, 0.37", "-51.9596, -326.337, 29.4306, 0.07", "-51.2939, -326.469, 28.8855, 0.15", "-50.5619, -326.671, 28.2299, 0.15", "-49.8553, -326.87, 27.5893, 0.15", "-49.3623, -326.984, 27.1652, 0.29", "-48.8698, -327.082, 26.7373, 0.59", "-48.3238, -327.175, 26.2532, 0.88", "-47.6265, -327.322, 25.7095, 0.29", "-46.9498, -327.516, 25.3087, 0.29", "-46.2059, -327.795, 24.9769, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-88.5422, -332.031, 43.6877, 0.44", "-89.2657, -332.599, 43.5005, 0.44", "-90.1235, -333.358, 43.3543, 0.22", "-90.847, -334.068, 43.2785, 0.66", "-91.5109, -334.79, 43.2453, 0.15", "-92.0045, -335.364, 43.2405, 0.15", "-92.2937, -335.717, 43.262, 0.15", "-92.7316, -336.317, 43.4172, 0.15", "-92.9887, -336.699, 43.5895, 0.52", "-93.4183, -337.348, 43.9586, 0.96", "-93.9107, -338.083, 44.4203, 0.66", "-94.3882, -338.77, 44.876, 0.22", "-95.1562, -339.872, 45.5876, 0.22", "-95.4594, -340.326, 45.8562, 0.22", "-95.7593, -340.812, 46.1269, 0.22", "-95.9661, -341.178, 46.3195, 0.22", "-96.2022, -341.639, 46.5218, 0.37", "-96.5315, -342.278, 46.7445, 0.88", "-96.858, -342.869, 46.9264, 0.52", "-97.3199, -343.636, 47.1775, 0.15", "-97.6859, -344.173, 47.3716, 0.15", "-98.0931, -344.704, 47.566, 0.81", "-98.7458, -345.509, 47.83, 0.15", "-99.4864, -346.376, 48.0826, 0.15", "-99.7486, -346.684, 48.1534, 0.66", "-100.162, -347.196, 48.2225, 1.03", "-100.772, -348.067, 48.247, 0.15", "-101.18, -348.753, 48.2083, 0.15", "-101.249, -348.884, 48.1894, 0.15", "-101.461, -349.264, 48.1219, 0.59", "-101.739, -349.698, 48.0499, 0.81", "-102.267, -350.407, 47.9476, 0.22", "-102.635, -350.849, 47.8984, 0.22", "-103.291, -351.552, 47.8503, 0.44", "-103.981, -352.227, 47.7987, 0.15", "-104.439, -352.615, 47.7637, 0.15", "-104.877, -352.931, 47.7287, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-104.877, -352.931, 47.7287, 0.22", "-105.511, -353.898, 47.4926, 0.22", "-105.774, -354.271, 47.403, 0.22", "-106.221, -354.896, 47.2658, 0.29", "-106.672, -355.52, 47.1109, 0.15", "-106.971, -355.931, 46.9846, 0.15", "-107.266, -356.348, 46.8353, 0.15", "-107.558, -356.755, 46.6839, 0.52", "-107.894, -357.28, 46.4616, 0.74", "-108.369, -358.199, 46.0218, 0.29", "-108.625, -358.811, 45.6957, 0.15", "-108.797, -359.294, 45.436, 0.15", "-108.873, -359.551, 45.3055, 0.15", "-108.972, -360.031, 45.0737, 0.37", "-109.057, -360.665, 44.8113, 0.15", "-109.101, -361.27, 44.6256, 0.15", "-109.135, -361.938, 44.4632, 0.22", "-109.161, -362.45, 44.3507, 0.81", "-109.208, -363.054, 44.2089, 0.66", "-109.328, -364.013, 43.9851, 0.44", "-109.436, -364.577, 43.8502, 0.44", "-109.641, -365.491, 43.6249, 0.15", "-109.749, -365.919, 43.5097, 0.15", "-109.981, -366.717, 43.2764, 0.15", "-110.172, -367.283, 43.1034, 0.81", "-110.608, -368.487, 42.7396, 0.15", "-110.741, -368.824, 42.6404, 0.15", "-110.886, -369.182, 42.5366, 0.15", "-111.043, -369.631, 42.4113, 0.15", "-111.131, -369.986, 42.3226, 0.37", "-111.228, -370.68, 42.1367, 0.74", "-111.278, -371.501, 41.9005, 0.22", "-111.301, -372.139, 41.7053, 0.22", "-111.299, -372.721, 41.5268, 0.59", "-111.255, -373.443, 41.3178, 0.22", "-111.155, -374.402, 41.0411, 0.15", "-111.096, -374.845, 40.9172, 0.15", "-111.043, -375.274, 40.8103, 0.37", "-111.008, -375.888, 40.6735, 0.66", "-111.069, -376.557, 40.5313, 0.22", "-111.229, -377.114, 40.4341, 0.15", "-111.427, -377.542, 40.3878, 0.15", "-111.66, -377.956, 40.3551, 0.29", "-111.9, -378.331, 40.3299, 0.88", "-112.414, -379.101, 40.2924, 0.22", "-112.787, -379.642, 40.2964, 0.15", "-113.164, -380.204, 40.3221, 0.15", "-113.324, -380.458, 40.3373, 0.15", "-113.627, -380.982, 40.3711, 0.22", "-114.075, -381.807, 40.4042, 0.15", "-114.659, -382.911, 40.4263, 0.15", "-114.844, -383.239, 40.4267, 0.37", "-115.126, -383.721, 40.3988, 0.37", "-115.48, -384.328, 40.3352, 0.22", "-115.851, -385.011, 40.2345, 0.22", "-116.098, -385.543, 40.1332, 0.66", "-116.321, -386.168, 39.9847, 0.66", "-116.618, -387.21, 39.7371, 0.15", "-116.711, -387.566, 39.6462, 0.15", "-116.894, -388.343, 39.4432, 0.59", "-117.027, -388.985, 39.2733, 0.15", "-117.164, -389.762, 39.0544, 0.15", "-117.242, -390.319, 38.8777, 0.44", "-117.386, -391.322, 38.5138, 0.15", "-117.445, -391.67, 38.3669, 0.15", "-117.547, -392.08, 38.1624, 0.15", "-117.681, -392.473, 37.939, 0.37", "-117.98, -393.145, 37.5175, 0.44", "-118.335, -393.823, 37.0593, 0.22", "-118.481, -394.053, 36.9074, 0.22", "-118.802, -394.46, 36.6568, 0.15", "-119.164, -394.836, 36.4516, 0.15", "-119.335, -394.984, 36.3794, 0.15", "-119.667, -395.24, 36.2747, 0.29", "-120.205, -395.651, 36.1097, 0.37", "-120.703, -396.059, 35.9501, 0.22", "-121.249, -396.574, 35.7732, 0.15", "-121.83, -397.163, 35.5822, 0.29", "-122.346, -397.706, 35.3994, 0.15", "-122.671, -398.054, 35.2783, 0.15", "-123.094, -398.506, 35.1204, 0.52", "-123.77, -399.206, 34.8647, 0.15", "-124.235, -399.691, 34.6696, 0.15", "-124.861, -400.365, 34.324, 0.15", "-125.231, -400.762, 34.0658, 0.52", "-125.571, -401.094, 33.8065, 0.52", "-126.185, -401.656, 33.2938, 0.15", "-126.527, -401.94, 32.9819, 0.15", "-127.266, -402.542, 32.2344, 0.15", "-127.657, -402.863, 31.7815, 0.29", "-128.098, -403.255, 31.1775, 0.96" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-104.877, -352.931, 47.7287, 0.88", "-105.454, -353.532, 48.1487, 0.88", "-106.156, -354.289, 48.5974, 0.22", "-106.809, -355.046, 48.9838, 0.15", "-107.341, -355.71, 49.2864, 0.15", "-107.637, -356.11, 49.4489, 0.37", "-108.061, -356.739, 49.672, 1.03", "-108.589, -357.636, 49.9325, 0.44", "-109.015, -358.497, 50.1134, 0.15", "-109.216, -358.976, 50.1985, 0.15", "-109.444, -359.591, 50.307, 0.37", "-109.768, -360.505, 50.4792, 0.15", "-109.97, -361.034, 50.5904, 0.29", "-110.438, -362.073, 50.8286, 0.07", "-110.911, -362.908, 50.9958, 0.07", "-111.45, -363.699, 51.1568, 0.07", "-111.818, -364.141, 51.2486, 0.29", "-112.606, -364.931, 51.4071, 0.07", "-113.271, -365.504, 51.5299, 0.59", "-114.246, -366.229, 51.7123, 0.15", "-114.878, -366.664, 51.8532, 0.15", "-115.763, -367.259, 52.1319, 0.15", "-116.217, -367.582, 52.3154, 0.37", "-117.047, -368.239, 52.7422, 0.07", "-117.531, -368.679, 53.0531, 0.22", "-118.063, -369.235, 53.4309, 0.07", "-118.598, -369.833, 53.7911, 0.07", "-119.078, -370.39, 54.0928, 0.59", "-119.817, -371.239, 54.4788, 0.15", "-120.404, -371.903, 54.7176, 0.74", "-121.429, -372.998, 55.0174, 0.07", "-122.293, -373.869, 55.2211, 0.07", "-123.03, -374.569, 55.3611, 0.29", "-124.113, -375.531, 55.5382, 0.07", "-124.75, -376.064, 55.6232, 0.44", "-126.111, -377.134, 55.7799, 0.07", "-126.649, -377.538, 55.8353, 0.07", "-127.405, -378.1, 55.9217, 0.37", "-128.65, -379.046, 56.0918, 0.07", "-129.904, -380.029, 56.2834, 0.07", "-130.684, -380.678, 56.4094, 0.37", "-131.703, -381.612, 56.577, 0.15", "-132.61, -382.541, 56.7179, 0.07", "-133.251, -383.236, 56.8303, 0.22", "-133.702, -383.775, 56.9219, 0.52", "-134.129, -384.375, 57.0197, 0.88", "-134.666, -385.279, 57.1599, 0.44", "-135.062, -386.151, 57.2663, 0.22" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_35", "dend_32", "dend_25", "dend_0", "dend_46", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_26", "dend_22", "dend_1", "dend_48", "dend_47", "dend_38", "dend_37", "dend_30", "dend_27", "dend_24", "dend_23", "dend_13", "dend_2", "dend_56", "dend_49", "dend_40", "dend_39", "dend_29", "dend_28", "dend_21", "dend_14", "dend_12", "dend_3", "dend_51", "dend_50", "dend_42", "dend_41", "dend_20", "dend_15", "dend_11", "dend_4", "dend_55", "dend_52", "dend_17", "dend_16", "dend_6", "dend_5", "dend_54", "dend_53", "dend_19", "dend_18", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_35", "dend_32", "dend_25", "dend_0", "dend_46", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_26", "dend_22", "dend_1", "dend_48", "dend_47", "dend_38", "dend_37", "dend_30", "dend_27", "dend_24", "dend_23", "dend_13", "dend_2", "dend_56", "dend_49", "dend_40", "dend_39", "dend_29", "dend_28", "dend_21", "dend_14", "dend_12", "dend_3", "dend_51", "dend_50", "dend_42", "dend_41", "dend_20", "dend_15", "dend_11", "dend_4", "dend_55", "dend_52", "dend_17", "dend_16", "dend_6", "dend_5", "dend_54", "dend_53", "dend_19", "dend_18", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_35", "dend_32", "dend_25", "dend_0", "axon_0", "dend_46", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_26", "dend_22", "dend_1", "axon_1", "dend_48", "dend_47", "dend_38", "dend_37", "dend_30", "dend_27", "dend_24", "dend_23", "dend_13", "dend_2", "dend_56", "dend_49", "dend_40", "dend_39", "dend_29", "dend_28", "dend_21", "dend_14", "dend_12", "dend_3", "dend_51", "dend_50", "dend_42", "dend_41", "dend_20", "dend_15", "dend_11", "dend_4", "dend_55", "dend_52", "dend_17", "dend_16", "dend_6", "dend_5", "dend_54", "dend_53", "dend_19", "dend_18", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L5_NBC_d30015ad95_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_0
create dend_22
public dend_22
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_56, id: dend_56, parent: dend_48
create dend_56
public dend_56
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_13
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_44, dend_35, dend_32, dend_25, dend_0, axon_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, axon_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, axon_0, axon_0, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.450000292725816)
    connect dend_35(0), soma_0(0.450000292725816)
    connect dend_32(0), soma_0(0.450000292725816)
    connect dend_25(0), soma_0(0.450000292725816)
    connect dend_0(0), soma_0(0.450000292725816)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_56(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_21(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.277629, -9.42436, 0.0, 2.9454 ) }
    soma_0 { pt3dadd( -0.225418, -8.4907, 0.0, 4.92187 ) }
    soma_0 { pt3dadd( -0.173208, -7.55704, 0.0, 6.69655 ) }
    soma_0 { pt3dadd( -0.120997, -6.62338, 0.0, 8.28957 ) }
    soma_0 { pt3dadd( -0.0687862, -5.68972, 0.0, 9.36061 ) }
    soma_0 { pt3dadd( -0.0165755, -4.75606, 0.0, 10.2397 ) }
    soma_0 { pt3dadd( 0.0356352, -3.8224, 0.0, 11.0293 ) }
    soma_0 { pt3dadd( 0.087846, -2.88873, 0.0, 11.6457 ) }
    soma_0 { pt3dadd( 0.140057, -1.95507, 0.0, 12.2691 ) }
    soma_0 { pt3dadd( 0.192267, -1.02141, 0.0, 12.5588 ) }
    soma_0 { pt3dadd( 0.244478, -0.0877535, 0.0, 12.7806 ) }
    soma_0 { pt3dadd( 0.296689, 0.845907, 0.0, 13.0398 ) }
    soma_0 { pt3dadd( 0.3489, 1.77957, 0.0, 13.1732 ) }
    soma_0 { pt3dadd( 0.40111, 2.71323, 0.0, 13.0581 ) }
    soma_0 { pt3dadd( 0.453321, 3.64689, 0.0, 12.8607 ) }
    soma_0 { pt3dadd( 0.505532, 4.58055, 0.0, 12.1633 ) }
    soma_0 { pt3dadd( 0.557743, 5.51421, 0.0, 11.3807 ) }
    soma_0 { pt3dadd( 0.609953, 6.44787, 0.0, 10.3357 ) }
    soma_0 { pt3dadd( 0.662164, 7.38153, 0.0, 8.86929 ) }
    soma_0 { pt3dadd( 0.714375, 8.31519, 0.0, 6.73974 ) }
    soma_0 { pt3dadd( 0.766585, 9.24885, 0.0, 3.85991 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.0596826, 8.79539, 5.51, 1.4 ) }
    dend_44 { pt3dadd( -0.0596826, 8.79539, 5.51, 1.4 ) }
    dend_44 { pt3dadd( -0.500922, 10.6397, 5.92765, 1.47 ) }
    dend_44 { pt3dadd( -0.805783, 12.0316, 6.23027, 1.47 ) }
    dend_44 { pt3dadd( -1.06705, 13.4669, 6.52993, 1.55 ) }
    dend_44 { pt3dadd( -1.22337, 14.5304, 6.75749, 1.55 ) }
    dend_44 { pt3dadd( -1.367, 15.679, 6.99189, 1.55 ) }
    dend_44 { pt3dadd( -1.43224, 16.4504, 7.1412, 1.55 ) }
    dend_44 { pt3dadd( -1.47639, 17.4714, 7.33872, 1.55 ) }
    dend_44 { pt3dadd( -1.49887, 18.6769, 7.57344, 1.55 ) }
    dend_44 { pt3dadd( -1.53241, 20.0771, 7.88106, 1.92 ) }
    dend_44 { pt3dadd( -1.61832, 21.7403, 8.28688, 2.14 ) }
    dend_44 { pt3dadd( -1.76019, 23.3879, 8.73253, 1.18 ) }
    dend_44 { pt3dadd( -1.9223, 24.7354, 9.13715, 1.25 ) }
    dend_44 { pt3dadd( -2.1187, 26.1732, 9.59494, 1.25 ) }
    dend_44 { pt3dadd( -2.41258, 27.9558, 10.1935, 1.33 ) }
    dend_44 { pt3dadd( -2.72466, 29.5886, 10.7753, 1.47 ) }
    dend_44 { pt3dadd( -3.0329, 30.9902, 11.3382, 1.77 ) }
    dend_44 { pt3dadd( -3.39952, 32.3653, 11.9343, 2.14 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 40/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -0.299673, -8.46461, 3.35, 2.29 ) }
    dend_35 { pt3dadd( -0.299673, -8.46461, 3.35, 2.29 ) }
    dend_35 { pt3dadd( -0.777422, -10.0762, 4.11451, 1.62 ) }
    dend_35 { pt3dadd( -1.15064, -11.6828, 4.85496, 1.4 ) }
    dend_35 { pt3dadd( -1.42088, -13.0708, 5.42134, 1.4 ) }
    dend_35 { pt3dadd( -1.63523, -14.0983, 5.78909, 1.25 ) }
    dend_35 { pt3dadd( -1.89424, -15.2159, 6.13737, 1.25 ) }
    dend_35 { pt3dadd( -2.17985, -16.439, 6.45365, 1.18 ) }
    dend_35 { pt3dadd( -2.35193, -17.2433, 6.61023, 1.18 ) }
    dend_35 { pt3dadd( -2.70478, -19.1601, 6.91127, 1.55 ) }
    dend_35 { pt3dadd( -3.00331, -20.801, 7.13, 1.62 ) }
    dend_35 { pt3dadd( -3.33128, -22.4022, 7.32312, 1.47 ) }
    dend_35 { pt3dadd( -3.73151, -24.1525, 7.49042, 1.47 ) }
    dend_35 { pt3dadd( -4.06261, -25.5088, 7.62061, 1.47 ) }
    dend_35 { pt3dadd( -4.41648, -27.0374, 7.75613, 1.47 ) }
    dend_35 { pt3dadd( -4.60031, -28.0564, 7.86649, 1.47 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 56/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 5.04042, 7.69539, -5.24, 2.43 ) }
    dend_32 { pt3dadd( 5.04042, 7.69539, -5.24, 2.43 ) }
    dend_32 { pt3dadd( 6.24441, 8.54769, -5.12019, 1.55 ) }
    dend_32 { pt3dadd( 7.41441, 9.3956, -5.02474, 1.47 ) }
    dend_32 { pt3dadd( 8.23776, 10.0045, -4.97481, 1.25 ) }
    dend_32 { pt3dadd( 9.8057, 11.1753, -4.83811, 1.11 ) }
    dend_32 { pt3dadd( 10.7593, 11.8874, -4.7234, 1.25 ) }
    dend_32 { pt3dadd( 11.9731, 12.8078, -4.50996, 1.4 ) }
    dend_32 { pt3dadd( 13.3664, 13.8782, -4.18187, 1.62 ) }
    dend_32 { pt3dadd( 14.9251, 15.0454, -3.75371, 1.03 ) }
    dend_32 { pt3dadd( 16.0563, 15.8194, -3.40247, 0.88 ) }
    dend_32 { pt3dadd( 17.1939, 16.493, -2.9941, 1.11 ) }
    dend_32 { pt3dadd( 18.4996, 17.1822, -2.4292, 0.88 ) }
    dend_32 { pt3dadd( 19.7366, 17.7719, -1.82387, 1.47 ) }
    dend_32 { pt3dadd( 20.4069, 18.066, -1.44598, 1.33 ) }
    dend_32 { pt3dadd( 21.6016, 18.5709, -0.735102, 1.03 ) }
    dend_32 { pt3dadd( 22.7291, 19.0822, -0.0888163, 1.03 ) }
    dend_32 { pt3dadd( 23.6076, 19.5242, 0.393824, 1.18 ) }
    dend_32 { pt3dadd( 24.6483, 20.1313, 0.945684, 1.18 ) }
    dend_32 { pt3dadd( 25.9981, 21.0155, 1.61732, 1.4 ) }
    dend_32 { pt3dadd( 26.8445, 21.6215, 1.99101, 1.03 ) }
    dend_32 { pt3dadd( 27.7375, 22.3029, 2.23409, 0.81 ) }
    dend_32 { pt3dadd( 28.5768, 22.9298, 2.32078, 0.74 ) }
    dend_32 { pt3dadd( 29.5057, 23.596, 2.28973, 1.11 ) }
    dend_32 { pt3dadd( 30.7337, 24.4268, 2.14139, 1.11 ) }
    dend_32 { pt3dadd( 31.6184, 24.986, 1.97222, 1.33 ) }
    dend_32 { pt3dadd( 33.4848, 26.1005, 1.65306, 1.33 ) }
    dend_32 { pt3dadd( 35.1308, 27.0645, 1.44838, 0.88 ) }
    dend_32 { pt3dadd( 36.4549, 27.8635, 1.37777, 1.11 ) }
    dend_32 { pt3dadd( 37.184, 28.3201, 1.38758, 1.33 ) }
    dend_32 { pt3dadd( 38.2658, 29.0511, 1.49859, 1.33 ) }
    dend_32 { pt3dadd( 39.644, 30.0641, 1.76162, 0.96 ) }
    dend_32 { pt3dadd( 40.7371, 30.9055, 2.09444, 0.96 ) }
    dend_32 { pt3dadd( 41.8956, 31.8551, 2.53228, 1.4 ) }
    dend_32 { pt3dadd( 42.6593, 32.5033, 2.8774, 1.4 ) }
    dend_32 { pt3dadd( 43.6197, 33.3528, 3.33451, 1.4 ) }
    dend_32 { pt3dadd( 44.7248, 34.3506, 3.8562, 1.84 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 93/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.129629, -9.85461, -2.13, 1.84 ) }
    dend_25 { pt3dadd( -0.129629, -9.85461, -2.13, 1.84 ) }
    dend_25 { pt3dadd( -0.653291, -10.9962, -2.00716, 1.55 ) }
    dend_25 { pt3dadd( -1.0229, -11.9247, -1.92408, 1.47 ) }
    dend_25 { pt3dadd( -1.60067, -13.6938, -1.73801, 1.47 ) }
    dend_25 { pt3dadd( -2.01549, -15.2656, -1.56834, 1.25 ) }
    dend_25 { pt3dadd( -2.21834, -16.2812, -1.46378, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_25 { pt3dadd( -2.37664, -17.5182, -1.34765, 1.33 ) }
    dend_25 { pt3dadd( -2.46852, -19.0617, -1.21851, 1.7 ) }
    dend_25 { pt3dadd( -2.45235, -20.6939, -1.10447, 1.4 ) }
    dend_25 { pt3dadd( -2.36502, -21.9719, -1.02953, 1.18 ) }
    dend_25 { pt3dadd( -2.16237, -23.8344, -0.916337, 1.4 ) }
    dend_25 { pt3dadd( -1.9036, -25.8961, -0.791424, 1.4 ) }
    dend_25 { pt3dadd( -1.70864, -27.2883, -0.71289, 1.55 ) }
    dend_25 { pt3dadd( -1.47989, -28.8219, -0.648847, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 8/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.330332, 1.47539, -10.46, 3.02 ) }
    dend_0 { pt3dadd( 0.330332, 1.47539, -10.46, 3.02 ) }
    dend_0 { pt3dadd( -1.65966, 1.40539, -10.46, 3.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 11/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.766585, 9.24885, 0.0, 0.672623 ) }
    axon_0 { pt3dadd( 1.60408, 24.2255, 0.0, 0.672623 ) }
    axon_0 { pt3dadd( 2.44158, 39.2021, 0.0, 0.672623 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 14/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -3.39952, 32.3653, 11.9343, 2.21 ) }
    dend_46 { pt3dadd( -3.54943, 33.9053, 12.9543, 2.21 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 16/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -3.39952, 32.3653, 11.9343, 0.59 ) }
    dend_45 { pt3dadd( -4.32992, 32.785, 12.695, 0.59 ) }
    dend_45 { pt3dadd( -5.63758, 33.379, 13.6492, 0.59 ) }
    dend_45 { pt3dadd( -6.56543, 33.7896, 14.2824, 0.44 ) }
    dend_45 { pt3dadd( -7.94565, 34.3782, 15.1706, 0.29 ) }
    dend_45 { pt3dadd( -8.4744, 34.5954, 15.4845, 0.29 ) }
    dend_45 { pt3dadd( -9.07618, 34.843, 15.8413, 0.29 ) }
    dend_45 { pt3dadd( -9.68304, 35.1208, 16.1901, 0.44 ) }
    dend_45 { pt3dadd( -10.287, 35.4148, 16.5013, 0.66 ) }
    dend_45 { pt3dadd( -11.1772, 35.8852, 16.9931, 0.66 ) }
    dend_45 { pt3dadd( -11.8109, 36.2528, 17.4029, 0.44 ) }
    dend_45 { pt3dadd( -12.5274, 36.7021, 17.9329, 0.44 ) }
    dend_45 { pt3dadd( -13.1965, 37.1663, 18.5361, 0.66 ) }
    dend_45 { pt3dadd( -13.5676, 37.4538, 18.9344, 0.66 ) }
    dend_45 { pt3dadd( -14.2534, 38.0271, 19.7611, 0.29 ) }
    dend_45 { pt3dadd( -14.7025, 38.4154, 20.3615, 0.29 ) }
    dend_45 { pt3dadd( -15.5019, 39.0733, 21.4286, 0.44 ) }
    dend_45 { pt3dadd( -16.2661, 39.631, 22.3673, 0.37 ) }
    dend_45 { pt3dadd( -16.9107, 40.0362, 23.1025, 0.37 ) }
    dend_45 { pt3dadd( -17.5804, 40.4071, 23.791, 0.66 ) }
    dend_45 { pt3dadd( -18.3086, 40.7719, 24.4597, 1.18 ) }
    dend_45 { pt3dadd( -19.2806, 41.2183, 25.2255, 1.47 ) }
    dend_45 { pt3dadd( -20.4343, 41.7004, 26.0098, 0.37 ) }
    dend_45 { pt3dadd( -21.162, 41.9793, 26.4496, 0.29 ) }
    dend_45 { pt3dadd( -22.0204, 42.2859, 26.9266, 0.29 ) }
    dend_45 { pt3dadd( -22.8814, 42.5858, 27.3752, 0.15 ) }
    dend_45 { pt3dadd( -23.6071, 42.8497, 27.7441, 0.37 ) }
    dend_45 { pt3dadd( -24.792, 43.3127, 28.3818, 0.22 ) }
    dend_45 { pt3dadd( -25.5296, 43.6414, 28.7745, 0.22 ) }
    dend_45 { pt3dadd( -26.5822, 44.1524, 29.3473, 0.22 ) }
    dend_45 { pt3dadd( -27.1399, 44.4361, 29.6531, 0.96 ) }
    dend_45 { pt3dadd( -28.1324, 44.9706, 30.1892, 1.84 ) }
    dend_45 { pt3dadd( -28.8451, 45.3838, 30.5779, 1.84 ) }
    dend_45 { pt3dadd( -29.8881, 46.049, 31.1374, 0.22 ) }
    dend_45 { pt3dadd( -30.4625, 46.4508, 31.4407, 0.22 ) }
    dend_45 { pt3dadd( -30.9561, 46.8231, 31.7102, 0.22 ) }
    dend_45 { pt3dadd( -31.4477, 47.1854, 31.9729, 0.22 ) }
    dend_45 { pt3dadd( -31.7831, 47.4181, 32.1412, 0.22 ) }
    dend_45 { pt3dadd( -32.0026, 47.5598, 32.2451, 0.22 ) }
    dend_45 { pt3dadd( -32.4561, 47.8353, 32.4854, 0.52 ) }
    dend_45 { pt3dadd( -32.8262, 48.0718, 32.685, 1.03 ) }
    dend_45 { pt3dadd( -33.259, 48.3754, 32.9472, 1.25 ) }
    dend_45 { pt3dadd( -34.0044, 48.9329, 33.3971, 0.81 ) }
    dend_45 { pt3dadd( -34.6501, 49.4585, 33.7804, 0.22 ) }
    dend_45 { pt3dadd( -35.0528, 49.8081, 34.0497, 0.22 ) }
    dend_45 { pt3dadd( -35.5493, 50.2806, 34.452, 0.59 ) }
    dend_45 { pt3dadd( -36.3975, 51.2087, 35.2275, 0.07 ) }
    dend_45 { pt3dadd( -36.6442, 51.5335, 35.4785, 0.15 ) }
    dend_45 { pt3dadd( -37.1457, 52.3435, 36.0205, 0.15 ) }
    dend_45 { pt3dadd( -37.8341, 53.6747, 36.793, 0.07 ) }
    dend_45 { pt3dadd( -38.3984, 54.9153, 37.403, 0.07 ) }
    dend_45 { pt3dadd( -38.6453, 55.5414, 37.6857, 0.07 ) }
    dend_45 { pt3dadd( -38.9611, 56.4642, 38.0568, 0.07 ) }
    dend_45 { pt3dadd( -39.3341, 57.6763, 38.492, 0.07 ) }
    dend_45 { pt3dadd( -39.5702, 58.5198, 38.7633, 0.07 ) }
    dend_45 { pt3dadd( -39.7831, 59.3103, 38.9739, 0.07 ) }
    dend_45 { pt3dadd( -40.0635, 60.2413, 39.2137, 0.22 ) }
    dend_45 { pt3dadd( -40.2449, 60.7525, 39.3705, 0.44 ) }
    dend_45 { pt3dadd( -40.6071, 61.5832, 39.6706, 0.07 ) }
    dend_45 { pt3dadd( -41.0916, 62.5257, 40.0795, 0.07 ) }
    dend_45 { pt3dadd( -41.3496, 62.9718, 40.2951, 0.07 ) }
    dend_45 { pt3dadd( -41.7322, 63.5599, 40.5828, 0.37 ) }
    dend_45 { pt3dadd( -41.8805, 63.7642, 40.6765, 0.37 ) }
    dend_45 { pt3dadd( -42.3747, 64.3936, 40.9896, 0.07 ) }
    dend_45 { pt3dadd( -42.9357, 65.0646, 41.3218, 0.07 ) }
    dend_45 { pt3dadd( -43.1587, 65.33, 41.4372, 0.37 ) }
    dend_45 { pt3dadd( -43.8136, 66.158, 41.7552, 1.11 ) }
    dend_45 { pt3dadd( -44.2069, 66.7021, 41.9443, 0.81 ) }
    dend_45 { pt3dadd( -44.9201, 67.7543, 42.2606, 0.07 ) }
    dend_45 { pt3dadd( -45.2887, 68.3087, 42.4, 0.07 ) }
    dend_45 { pt3dadd( -45.6936, 68.901, 42.535, 0.59 ) }
    dend_45 { pt3dadd( -46.4154, 69.9348, 42.7855, 0.15 ) }
    dend_45 { pt3dadd( -47.2629, 71.0907, 43.0825, 0.15 ) }
    dend_45 { pt3dadd( -47.872, 71.8441, 43.2943, 0.15 ) }
    dend_45 { pt3dadd( -48.5687, 72.6125, 43.5479, 0.44 ) }
    dend_45 { pt3dadd( -49.4351, 73.4583, 43.918, 0.15 ) }
    dend_45 { pt3dadd( -49.8622, 73.8191, 44.0879, 0.15 ) }
    dend_45 { pt3dadd( -50.6174, 74.3705, 44.3558, 0.74 ) }
    dend_45 { pt3dadd( -51.6958, 75.0891, 44.6861, 0.07 ) }
    dend_45 { pt3dadd( -52.5157, 75.6119, 44.8927, 0.07 ) }
    dend_45 { pt3dadd( -53.2672, 76.0959, 45.042, 0.07 ) }
    dend_45 { pt3dadd( -54.491, 76.8948, 45.1905, 0.07 ) }
    dend_45 { pt3dadd( -55.361, 77.4733, 45.2073, 0.52 ) }
    dend_45 { pt3dadd( -55.7978, 77.7653, 45.1677, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_45 { pt3dadd( -56.8256, 78.4624, 44.9721, 0.07 ) }
    dend_45 { pt3dadd( -57.7279, 79.1035, 44.7275, 0.37 ) }
    dend_45 { pt3dadd( -58.9292, 79.9615, 44.3531, 0.07 ) }
    dend_45 { pt3dadd( -60.2349, 80.8745, 43.9341, 0.07 ) }
    dend_45 { pt3dadd( -61.2153, 81.5492, 43.5668, 0.07 ) }
    dend_45 { pt3dadd( -62.4763, 82.4077, 43.0509, 0.07 ) }
    dend_45 { pt3dadd( -63.8876, 83.3648, 42.4145, 0.07 ) }
    dend_45 { pt3dadd( -64.6222, 83.8517, 42.0537, 0.07 ) }
    dend_45 { pt3dadd( -65.4294, 84.3857, 41.6413, 0.07 ) }
    dend_45 { pt3dadd( -66.2452, 84.9279, 41.2552, 0.07 ) }
    dend_45 { pt3dadd( -66.9988, 85.4282, 40.9222, 0.81 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 11/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -4.60031, -28.0564, 7.86649, 0.52 ) }
    dend_43 { pt3dadd( -4.3386, -28.0381, 8.77279, 0.52 ) }
    dend_43 { pt3dadd( -3.91806, -28.0418, 10.1738, 0.52 ) }
    dend_43 { pt3dadd( -3.50178, -28.0964, 11.5379, 0.59 ) }
    dend_43 { pt3dadd( -3.06673, -28.2241, 12.9843, 0.59 ) }
    dend_43 { pt3dadd( -2.68577, -28.401, 14.2513, 0.59 ) }
    dend_43 { pt3dadd( -2.31086, -28.6513, 15.4938, 0.59 ) }
    dend_43 { pt3dadd( -1.90658, -29.0682, 16.8926, 0.59 ) }
    dend_43 { pt3dadd( -1.74557, -29.3432, 17.4543, 0.59 ) }
    dend_43 { pt3dadd( -1.5435, -29.8005, 18.1128, 0.59 ) }
    dend_43 { pt3dadd( -1.37108, -30.2399, 18.6454, 0.52 ) }
    dend_43 { pt3dadd( -1.13583, -30.8622, 19.3587, 0.52 ) }
    dend_43 { pt3dadd( -0.865763, -31.5556, 20.113, 0.59 ) }
    dend_43 { pt3dadd( -0.378308, -32.6222, 21.2965, 0.81 ) }
    dend_43 { pt3dadd( 0.189418, -33.6764, 22.5822, 0.52 ) }
    dend_43 { pt3dadd( 0.561919, -34.2717, 23.3656, 0.59 ) }
    dend_43 { pt3dadd( 1.0299, -34.8976, 24.2591, 0.81 ) }
    dend_43 { pt3dadd( 1.44017, -35.3672, 24.9923, 1.11 ) }
    dend_43 { pt3dadd( 2.35494, -36.2859, 26.4947, 0.37 ) }
    dend_43 { pt3dadd( 2.99621, -36.8691, 27.5186, 0.59 ) }
    dend_43 { pt3dadd( 3.56282, -37.3609, 28.4071, 0.66 ) }
    dend_43 { pt3dadd( 4.38569, -38.0096, 29.6796, 0.37 ) }
    dend_43 { pt3dadd( 4.97827, -38.4134, 30.6182, 0.37 ) }
    dend_43 { pt3dadd( 5.29636, -38.6011, 31.1959, 0.37 ) }
    dend_43 { pt3dadd( 5.72745, -38.8382, 32.1427, 0.37 ) }
    dend_43 { pt3dadd( 6.00431, -39.0096, 32.9616, 0.96 ) }
    dend_43 { pt3dadd( 6.28954, -39.2431, 34.1281, 0.96 ) }
    dend_43 { pt3dadd( 6.52228, -39.5298, 35.4356, 0.96 ) }
    dend_43 { pt3dadd( 6.82269, -40.0927, 37.6769, 0.66 ) }
    dend_43 { pt3dadd( 6.98841, -40.6151, 39.5858, 0.37 ) }
    dend_43 { pt3dadd( 7.05841, -41.2241, 41.5867, 0.37 ) }
    dend_43 { pt3dadd( 7.02227, -41.8435, 43.4967, 0.37 ) }
    dend_43 { pt3dadd( 6.97093, -42.1076, 44.273, 0.37 ) }
    dend_43 { pt3dadd( 6.8186, -42.6536, 45.819, 0.66 ) }
    dend_43 { pt3dadd( 6.62662, -43.3183, 47.6283, 0.66 ) }
    dend_43 { pt3dadd( 6.47191, -43.9302, 49.2633, 0.81 ) }
    dend_43 { pt3dadd( 6.30298, -44.7545, 51.4128, 0.88 ) }
    dend_43 { pt3dadd( 6.18926, -45.5106, 53.2998, 0.88 ) }
    dend_43 { pt3dadd( 6.13417, -46.394, 55.4041, 0.37 ) }
    dend_43 { pt3dadd( 6.15945, -47.1552, 57.1378, 0.29 ) }
    dend_43 { pt3dadd( 6.22406, -47.6621, 58.1362, 0.29 ) }
    dend_43 { pt3dadd( 6.33465, -48.2117, 59.0989, 0.29 ) }
    dend_43 { pt3dadd( 6.51891, -49.0318, 60.3607, 0.52 ) }
    dend_43 { pt3dadd( 6.75321, -50.0559, 61.8109, 0.96 ) }
    dend_43 { pt3dadd( 7.00974, -51.301, 63.4287, 0.96 ) }
    dend_43 { pt3dadd( 7.19768, -52.3279, 64.7346, 0.29 ) }
    dend_43 { pt3dadd( 7.3527, -53.2874, 65.9467, 0.29 ) }
    dend_43 { pt3dadd( 7.48897, -54.2477, 67.1831, 0.29 ) }
    dend_43 { pt3dadd( 7.56418, -54.9672, 68.1198, 0.88 ) }
    dend_43 { pt3dadd( 7.63827, -55.8377, 69.1356, 2.21 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 61/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -4.60031, -28.0564, 7.86649, 0.96 ) }
    dend_36 { pt3dadd( -5.21612, -29.3483, 7.92095, 0.96 ) }
    dend_36 { pt3dadd( -6.05559, -31.1265, 8.08589, 0.81 ) }
    dend_36 { pt3dadd( -6.73699, -32.6816, 8.39846, 0.74 ) }
    dend_36 { pt3dadd( -7.44669, -34.3557, 8.90475, 0.88 ) }
    dend_36 { pt3dadd( -8.17751, -36.1243, 9.58226, 0.88 ) }
    dend_36 { pt3dadd( -8.38574, -36.6736, 9.80894, 0.88 ) }
    dend_36 { pt3dadd( -8.66119, -37.5446, 10.2271, 0.66 ) }
    dend_36 { pt3dadd( -9.18567, -39.3606, 11.1683, 0.66 ) }
    dend_36 { pt3dadd( -9.55518, -40.5496, 11.7979, 0.88 ) }
    dend_36 { pt3dadd( -9.88613, -41.5118, 12.3002, 0.88 ) }
    dend_36 { pt3dadd( -10.4792, -43.0119, 13.0421, 1.03 ) }
    dend_36 { pt3dadd( -11.0906, -44.4698, 13.7063, 1.03 ) }
    dend_36 { pt3dadd( -11.7746, -46.085, 14.332, 0.88 ) }
    dend_36 { pt3dadd( -12.4536, -47.7172, 14.8692, 0.59 ) }
    dend_36 { pt3dadd( -12.7782, -48.5598, 15.1479, 0.44 ) }
    dend_36 { pt3dadd( -13.3457, -50.1073, 15.7099, 1.03 ) }
    dend_36 { pt3dadd( -13.7165, -51.1563, 16.1306, 1.03 ) }
    dend_36 { pt3dadd( -14.0271, -52.1684, 16.5302, 1.03 ) }
    dend_36 { pt3dadd( -14.4651, -53.8419, 17.1726, 0.88 ) }
    dend_36 { pt3dadd( -14.8778, -55.6276, 17.8201, 0.81 ) }
    dend_36 { pt3dadd( -15.3263, -57.6968, 18.5575, 1.03 ) }
    dend_36 { pt3dadd( -15.6796, -59.3249, 19.1165, 1.47 ) }
    dend_36 { pt3dadd( -16.0763, -61.0457, 19.7093, 1.11 ) }
    dend_36 { pt3dadd( -16.4756, -62.7568, 20.2866, 0.74 ) }
    dend_36 { pt3dadd( -16.7593, -64.0338, 20.6988, 0.66 ) }
    dend_36 { pt3dadd( -17.0235, -65.2948, 21.0925, 0.66 ) }
    dend_36 { pt3dadd( -17.3463, -66.8912, 21.5824, 1.03 ) }
    dend_36 { pt3dadd( -17.7667, -68.9447, 22.2026, 0.96 ) }
    dend_36 { pt3dadd( -18.1253, -70.5809, 22.6762, 0.81 ) }
    dend_36 { pt3dadd( -18.4728, -72.0331, 23.0632, 1.11 ) }
    dend_36 { pt3dadd( -18.9666, -73.86, 23.5192, 0.74 ) }
    dend_36 { pt3dadd( -19.4334, -75.3893, 23.9249, 0.37 ) }
    dend_36 { pt3dadd( -19.8154, -76.5159, 24.2629, 0.37 ) }
    dend_36 { pt3dadd( -20.2119, -77.6027, 24.6307, 0.96 ) }
    dend_36 { pt3dadd( -20.6953, -78.877, 25.0935, 1.55 ) }
    dend_36 { pt3dadd( -21.0292, -79.7538, 25.4182, 1.7 ) }
    dend_36 { pt3dadd( -21.7385, -81.6555, 26.127, 0.81 ) }
    dend_36 { pt3dadd( -22.2237, -83.015, 26.6529, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_36 { pt3dadd( -22.5881, -84.1195, 27.0737, 0.74 ) }
    dend_36 { pt3dadd( -23.0143, -85.6218, 27.5991, 0.44 ) }
    dend_36 { pt3dadd( -23.3966, -87.2165, 28.0872, 0.37 ) }
    dend_36 { pt3dadd( -23.7063, -88.6613, 28.4512, 0.37 ) }
    dend_36 { pt3dadd( -23.9187, -89.6692, 28.627, 0.37 ) }
    dend_36 { pt3dadd( -24.2249, -91.0425, 28.7963, 0.74 ) }
    dend_36 { pt3dadd( -24.5433, -92.4182, 28.9161, 1.03 ) }
    dend_36 { pt3dadd( -24.6604, -92.9273, 28.9661, 1.03 ) }
    dend_36 { pt3dadd( -24.945, -94.2721, 29.1112, 0.59 ) }
    dend_36 { pt3dadd( -25.1318, -95.1909, 29.2397, 0.59 ) }
    dend_36 { pt3dadd( -25.4721, -96.8091, 29.5619, 0.81 ) }
    dend_36 { pt3dadd( -25.8113, -98.4099, 30.0465, 0.52 ) }
    dend_36 { pt3dadd( -26.0625, -99.6508, 30.5549, 0.96 ) }
    dend_36 { pt3dadd( -26.2995, -100.987, 31.1995, 1.25 ) }
    dend_36 { pt3dadd( -26.532, -102.65, 32.0936, 0.66 ) }
    dend_36 { pt3dadd( -26.7393, -104.326, 33.0014, 0.29 ) }
    dend_36 { pt3dadd( -26.9346, -105.818, 33.8387, 0.29 ) }
    dend_36 { pt3dadd( -27.1199, -106.985, 34.472, 0.29 ) }
    dend_36 { pt3dadd( -27.2333, -107.571, 34.7569, 0.74 ) }
    dend_36 { pt3dadd( -27.498, -108.707, 35.2396, 0.96 ) }
    dend_36 { pt3dadd( -28.1019, -110.913, 35.9558, 0.22 ) }
    dend_36 { pt3dadd( -28.5419, -112.264, 36.2567, 0.22 ) }
    dend_36 { pt3dadd( -28.9472, -113.349, 36.419, 0.52 ) }
    dend_36 { pt3dadd( -29.2702, -114.132, 36.5126, 1.03 ) }
    dend_36 { pt3dadd( -29.6541, -115.007, 36.6235, 1.11 ) }
    dend_36 { pt3dadd( -30.1702, -116.11, 36.7851, 0.59 ) }
    dend_36 { pt3dadd( -30.7585, -117.298, 36.992, 0.22 ) }
    dend_36 { pt3dadd( -31.1009, -117.969, 37.1086, 0.22 ) }
    dend_36 { pt3dadd( -31.3816, -118.52, 37.2159, 0.22 ) }
    dend_36 { pt3dadd( -31.7335, -119.235, 37.3583, 0.44 ) }
    dend_36 { pt3dadd( -32.189, -120.211, 37.5488, 0.96 ) }
    dend_36 { pt3dadd( -32.6839, -121.327, 37.7554, 0.96 ) }
    dend_36 { pt3dadd( -33.0659, -122.191, 37.9137, 0.44 ) }
    dend_36 { pt3dadd( -33.6817, -123.553, 38.1838, 0.22 ) }
    dend_36 { pt3dadd( -34.0284, -124.325, 38.3568, 0.59 ) }
    dend_36 { pt3dadd( -34.317, -124.992, 38.5147, 0.59 ) }
    dend_36 { pt3dadd( -34.7685, -126.111, 38.7838, 0.15 ) }
    dend_36 { pt3dadd( -35.1914, -127.25, 39.1035, 0.15 ) }
    dend_36 { pt3dadd( -35.579, -128.366, 39.5039, 0.15 ) }
    dend_36 { pt3dadd( -35.9352, -129.452, 39.9255, 0.52 ) }
    dend_36 { pt3dadd( -36.153, -130.115, 40.2101, 1.33 ) }
    dend_36 { pt3dadd( -36.5142, -131.19, 40.7032, 1.55 ) }
    dend_36 { pt3dadd( -36.9703, -132.519, 41.3061, 1.18 ) }
    dend_36 { pt3dadd( -37.7292, -134.622, 42.1841, 0.37 ) }
    dend_36 { pt3dadd( -38.3581, -136.224, 42.7877, 0.22 ) }
    dend_36 { pt3dadd( -38.9551, -137.607, 43.2541, 0.22 ) }
    dend_36 { pt3dadd( -39.5713, -138.93, 43.6598, 0.37 ) }
    dend_36 { pt3dadd( -40.2864, -140.373, 44.0382, 0.96 ) }
    dend_36 { pt3dadd( -41.026, -141.796, 44.3418, 0.22 ) }
    dend_36 { pt3dadd( -41.612, -142.882, 44.5193, 0.22 ) }
    dend_36 { pt3dadd( -42.3521, -144.239, 44.7094, 0.22 ) }
    dend_36 { pt3dadd( -42.8141, -145.108, 44.7993, 0.37 ) }
    dend_36 { pt3dadd( -43.2871, -146.017, 44.8868, 0.88 ) }
    dend_36 { pt3dadd( -43.9597, -147.409, 45.086, 0.88 ) }
    dend_36 { pt3dadd( -44.7683, -149.26, 45.4262, 0.22 ) }
    dend_36 { pt3dadd( -45.1366, -150.193, 45.6298, 0.44 ) }
    dend_36 { pt3dadd( -45.5546, -151.319, 45.9048, 0.88 ) }
    dend_36 { pt3dadd( -45.9356, -152.371, 46.1711, 0.37 ) }
    dend_36 { pt3dadd( -46.6836, -154.418, 46.6815, 0.15 ) }
    dend_36 { pt3dadd( -47.2286, -155.917, 47.026, 0.15 ) }
    dend_36 { pt3dadd( -47.6283, -157.069, 47.3195, 0.15 ) }
    dend_36 { pt3dadd( -47.8236, -157.663, 47.4789, 0.29 ) }
    dend_36 { pt3dadd( -48.1696, -158.755, 47.7899, 0.96 ) }
    dend_36 { pt3dadd( -48.5572, -160.035, 48.1791, 0.29 ) }
    dend_36 { pt3dadd( -48.8936, -161.188, 48.5489, 0.15 ) }
    dend_36 { pt3dadd( -49.2697, -162.578, 49.0622, 0.15 ) }
    dend_36 { pt3dadd( -49.5446, -163.652, 49.4936, 0.15 ) }
    dend_36 { pt3dadd( -49.8482, -164.897, 50.0071, 0.15 ) }
    dend_36 { pt3dadd( -50.0783, -165.855, 50.3973, 0.15 ) }
    dend_36 { pt3dadd( -50.3781, -167.058, 50.867, 0.29 ) }
    dend_36 { pt3dadd( -50.6635, -168.065, 51.221, 0.81 ) }
    dend_36 { pt3dadd( -51.1126, -169.496, 51.6471, 1.11 ) }
    dend_36 { pt3dadd( -51.5648, -170.834, 51.9953, 0.29 ) }
    dend_36 { pt3dadd( -52.0669, -172.278, 52.3078, 0.15 ) }
    dend_36 { pt3dadd( -52.5236, -173.561, 52.5327, 0.15 ) }
    dend_36 { pt3dadd( -52.9767, -174.837, 52.7045, 0.15 ) }
    dend_36 { pt3dadd( -53.2752, -175.693, 52.7944, 0.15 ) }
    dend_36 { pt3dadd( -53.4308, -176.159, 52.8291, 0.37 ) }
    dend_36 { pt3dadd( -53.6695, -176.855, 52.9006, 0.88 ) }
    dend_36 { pt3dadd( -53.8851, -177.406, 52.9674, 1.11 ) }
    dend_36 { pt3dadd( -54.4013, -178.521, 53.1117, 0.29 ) }
    dend_36 { pt3dadd( -54.9875, -179.537, 53.2481, 0.15 ) }
    dend_36 { pt3dadd( -55.4176, -180.175, 53.3287, 0.15 ) }
    dend_36 { pt3dadd( -56.3931, -181.436, 53.437, 0.15 ) }
    dend_36 { pt3dadd( -57.0406, -182.187, 53.4799, 0.59 ) }
    dend_36 { pt3dadd( -57.7489, -182.957, 53.5017, 0.59 ) }
    dend_36 { pt3dadd( -59.459, -184.724, 53.4701, 0.15 ) }
    dend_36 { pt3dadd( -60.4871, -185.774, 53.3657, 0.15 ) }
    dend_36 { pt3dadd( -61.6033, -186.937, 53.1627, 0.15 ) }
    dend_36 { pt3dadd( -61.9187, -187.282, 53.0707, 0.37 ) }
    dend_36 { pt3dadd( -62.8264, -188.342, 52.7536, 0.96 ) }
    dend_36 { pt3dadd( -63.597, -189.294, 52.4416, 0.22 ) }
    dend_36 { pt3dadd( -64.2807, -190.214, 52.1269, 0.22 ) }
    dend_36 { pt3dadd( -64.6249, -190.733, 51.9894, 0.22 ) }
    dend_36 { pt3dadd( -64.9519, -191.3, 51.8816, 0.44 ) }
    dend_36 { pt3dadd( -65.3274, -191.954, 51.7507, 0.81 ) }
    dend_36 { pt3dadd( -65.9191, -192.929, 51.5431, 0.22 ) }
    dend_36 { pt3dadd( -66.5125, -193.828, 51.3638, 0.29 ) }
    dend_36 { pt3dadd( -67.2452, -194.875, 51.1714, 0.22 ) }
    dend_36 { pt3dadd( -68.122, -196.067, 50.9342, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -69.2641, -197.522, 50.627, 0.07 ) }
    dend_36 { pt3dadd( -69.9109, -198.308, 50.4553, 0.07 ) }
    dend_36 { pt3dadd( -70.7201, -199.24, 50.222, 0.15 ) }
    dend_36 { pt3dadd( -71.7498, -200.358, 49.9146, 0.07 ) }
    dend_36 { pt3dadd( -72.1087, -200.723, 49.8085, 0.29 ) }
    dend_36 { pt3dadd( -72.8987, -201.507, 49.6333, 0.44 ) }
    dend_36 { pt3dadd( -73.527, -202.148, 49.5183, 0.15 ) }
    dend_36 { pt3dadd( -74.3506, -203.009, 49.3621, 0.15 ) }
    dend_36 { pt3dadd( -74.8099, -203.492, 49.2652, 0.37 ) }
    dend_36 { pt3dadd( -75.3572, -204.074, 49.1479, 0.44 ) }
    dend_36 { pt3dadd( -76.2157, -205.036, 48.9656, 0.15 ) }
    dend_36 { pt3dadd( -76.6973, -205.606, 48.8715, 0.15 ) }
    dend_36 { pt3dadd( -77.112, -206.087, 48.8124, 0.37 ) }
    dend_36 { pt3dadd( -77.4693, -206.511, 48.7831, 0.52 ) }
    dend_36 { pt3dadd( -78.1462, -207.365, 48.7119, 0.15 ) }
    dend_36 { pt3dadd( -78.3946, -207.699, 48.6824, 0.15 ) }
    dend_36 { pt3dadd( -78.995, -208.553, 48.6085, 0.52 ) }
    dend_36 { pt3dadd( -79.8635, -209.857, 48.5081, 0.15 ) }
    dend_36 { pt3dadd( -80.3764, -210.679, 48.4401, 0.52 ) }
    dend_36 { pt3dadd( -81.1619, -212.039, 48.3263, 0.15 ) }
    dend_36 { pt3dadd( -81.3971, -212.494, 48.2724, 0.37 ) }
    dend_36 { pt3dadd( -81.5508, -212.832, 48.2139, 0.81 ) }
    dend_36 { pt3dadd( -81.7327, -213.31, 48.094, 1.03 ) }
    dend_36 { pt3dadd( -82.0112, -214.18, 47.8187, 0.07 ) }
    dend_36 { pt3dadd( -82.3434, -215.183, 47.447, 0.15 ) }
    dend_36 { pt3dadd( -82.6959, -216.117, 47.0247, 0.29 ) }
    dend_36 { pt3dadd( -83.0411, -216.964, 46.5527, 0.15 ) }
    dend_36 { pt3dadd( -83.3446, -217.659, 46.0893, 0.15 ) }
    dend_36 { pt3dadd( -83.5501, -218.113, 45.7373, 0.29 ) }
    dend_36 { pt3dadd( -83.8322, -218.741, 45.2076, 0.37 ) }
    dend_36 { pt3dadd( -84.2629, -219.679, 44.363, 0.22 ) }
    dend_36 { pt3dadd( -84.6649, -220.53, 43.5921, 0.22 ) }
    dend_36 { pt3dadd( -85.0948, -221.426, 42.7619, 0.22 ) }
    dend_36 { pt3dadd( -85.3306, -221.91, 42.2961, 0.22 ) }
    dend_36 { pt3dadd( -85.5365, -222.348, 41.8412, 0.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 35/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 44.7248, 34.3506, 3.8562, 0.59 ) }
    dend_34 { pt3dadd( 46.1536, 34.5459, 4.07584, 0.59 ) }
    dend_34 { pt3dadd( 46.9439, 34.6613, 4.22828, 0.59 ) }
    dend_34 { pt3dadd( 48.0742, 34.7869, 4.5034, 0.59 ) }
    dend_34 { pt3dadd( 48.9385, 34.8521, 4.67531, 0.59 ) }
    dend_34 { pt3dadd( 49.5983, 34.8848, 4.75916, 0.44 ) }
    dend_34 { pt3dadd( 50.7021, 34.9366, 4.79865, 0.59 ) }
    dend_34 { pt3dadd( 51.8194, 35.011, 4.73073, 0.59 ) }
    dend_34 { pt3dadd( 53.0568, 35.1326, 4.54084, 0.66 ) }
    dend_34 { pt3dadd( 54.3486, 35.3399, 4.21689, 0.66 ) }
    dend_34 { pt3dadd( 55.4479, 35.6397, 3.84671, 0.66 ) }
    dend_34 { pt3dadd( 56.6304, 36.1507, 3.3261, 0.52 ) }
    dend_34 { pt3dadd( 57.2858, 36.5408, 2.98952, 0.52 ) }
    dend_34 { pt3dadd( 57.8532, 36.9592, 2.70387, 0.88 ) }
    dend_34 { pt3dadd( 58.5568, 37.5326, 2.38242, 1.03 ) }
    dend_34 { pt3dadd( 59.4463, 38.2718, 2.07663, 0.74 ) }
    dend_34 { pt3dadd( 60.656, 39.1785, 1.82138, 0.81 ) }
    dend_34 { pt3dadd( 61.2887, 39.551, 1.76994, 0.59 ) }
    dend_34 { pt3dadd( 62.4926, 40.0741, 1.80591, 0.52 ) }
    dend_34 { pt3dadd( 63.5043, 40.3814, 1.95754, 0.81 ) }
    dend_34 { pt3dadd( 64.06, 40.4957, 2.11981, 1.03 ) }
    dend_34 { pt3dadd( 65.3609, 40.7068, 2.6398, 0.59 ) }
    dend_34 { pt3dadd( 66.5887, 40.9107, 3.20234, 0.44 ) }
    dend_34 { pt3dadd( 67.6211, 41.1308, 3.69271, 0.52 ) }
    dend_34 { pt3dadd( 68.6299, 41.4364, 4.13545, 0.52 ) }
    dend_34 { pt3dadd( 69.9114, 41.9652, 4.60523, 0.59 ) }
    dend_34 { pt3dadd( 70.9635, 42.506, 4.86972, 0.66 ) }
    dend_34 { pt3dadd( 71.9657, 43.1083, 4.98303, 1.11 ) }
    dend_34 { pt3dadd( 72.6707, 43.5688, 4.97876, 1.18 ) }
    dend_34 { pt3dadd( 74.0588, 44.4754, 4.82784, 0.74 ) }
    dend_34 { pt3dadd( 74.9847, 45.0762, 4.67423, 0.37 ) }
    dend_34 { pt3dadd( 75.6189, 45.4904, 4.55787, 0.37 ) }
    dend_34 { pt3dadd( 76.3666, 45.9757, 4.41596, 0.44 ) }
    dend_34 { pt3dadd( 76.8504, 46.2967, 4.33161, 0.44 ) }
    dend_34 { pt3dadd( 77.4177, 46.7045, 4.21549, 0.44 ) }
    dend_34 { pt3dadd( 78.2429, 47.3728, 4.037, 0.74 ) }
    dend_34 { pt3dadd( 79.0678, 48.1271, 3.7964, 0.96 ) }
    dend_34 { pt3dadd( 80.0516, 49.102, 3.41705, 0.88 ) }
    dend_34 { pt3dadd( 80.7154, 49.7688, 3.10397, 0.66 ) }
    dend_34 { pt3dadd( 81.396, 50.3988, 2.72427, 0.66 ) }
    dend_34 { pt3dadd( 82.1016, 50.9769, 2.25519, 0.37 ) }
    dend_34 { pt3dadd( 82.7566, 51.4317, 1.74229, 0.29 ) }
    dend_34 { pt3dadd( 83.3126, 51.7655, 1.2479, 0.52 ) }
    dend_34 { pt3dadd( 83.8462, 52.0726, 0.747696, 1.11 ) }
    dend_34 { pt3dadd( 84.5584, 52.5086, 0.0655945, 0.59 ) }
    dend_34 { pt3dadd( 85.2448, 53.0117, -0.556067, 0.37 ) }
    dend_34 { pt3dadd( 85.7126, 53.45, -0.953829, 0.37 ) }
    dend_34 { pt3dadd( 86.4583, 54.3055, -1.48234, 0.88 ) }
    dend_34 { pt3dadd( 86.8851, 54.864, -1.72715, 0.96 ) }
    dend_34 { pt3dadd( 87.6249, 55.8712, -2.05271, 0.74 ) }
    dend_34 { pt3dadd( 88.3627, 56.8412, -2.26242, 0.59 ) }
    dend_34 { pt3dadd( 89.0823, 57.6669, -2.36494, 0.44 ) }
    dend_34 { pt3dadd( 89.7377, 58.3215, -2.38736, 1.03 ) }
    dend_34 { pt3dadd( 90.1782, 58.722, -2.39152, 1.03 ) }
    dend_34 { pt3dadd( 90.9911, 59.4212, -2.4291, 0.81 ) }
    dend_34 { pt3dadd( 91.4955, 59.8658, -2.46891, 0.88 ) }
    dend_34 { pt3dadd( 92.2977, 60.6903, -2.55863, 0.59 ) }
    dend_34 { pt3dadd( 93.1331, 61.7562, -2.64521, 0.44 ) }
    dend_34 { pt3dadd( 93.8828, 62.9362, -2.65781, 0.44 ) }
    dend_34 { pt3dadd( 94.2762, 63.6513, -2.60746, 0.44 ) }
    dend_34 { pt3dadd( 94.7345, 64.5723, -2.44886, 0.59 ) }
    dend_34 { pt3dadd( 95.4144, 65.9083, -2.04682, 0.74 ) }
    dend_34 { pt3dadd( 95.8895, 66.7109, -1.6723, 0.44 ) }
    dend_34 { pt3dadd( 96.5088, 67.5405, -1.13221, 0.44 ) }
    dend_34 { pt3dadd( 97.1502, 68.2653, -0.546991, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_34 { pt3dadd( 97.965, 69.0897, 0.208889, 0.88 ) }
    dend_34 { pt3dadd( 98.8902, 69.9383, 1.05294, 0.88 ) }
    dend_34 { pt3dadd( 99.9468, 70.8362, 1.98821, 0.37 ) }
    dend_34 { pt3dadd( 100.832, 71.5951, 2.7112, 0.29 ) }
    dend_34 { pt3dadd( 101.046, 71.7839, 2.86924, 0.29 ) }
    dend_34 { pt3dadd( 101.508, 72.2089, 3.17435, 0.29 ) }
    dend_34 { pt3dadd( 101.864, 72.5369, 3.36331, 0.29 ) }
    dend_34 { pt3dadd( 102.203, 72.8453, 3.49437, 0.29 ) }
    dend_34 { pt3dadd( 103.086, 73.6053, 3.73243, 0.37 ) }
    dend_34 { pt3dadd( 103.865, 74.1941, 3.87489, 0.74 ) }
    dend_34 { pt3dadd( 104.81, 74.8468, 3.95003, 0.96 ) }
    dend_34 { pt3dadd( 105.679, 75.4165, 3.9507, 1.18 ) }
    dend_34 { pt3dadd( 106.442, 75.9008, 3.91629, 1.11 ) }
    dend_34 { pt3dadd( 107.054, 76.2784, 3.8629, 0.88 ) }
    dend_34 { pt3dadd( 107.912, 76.7957, 3.77542, 0.66 ) }
    dend_34 { pt3dadd( 109.294, 77.6081, 3.66619, 0.44 ) }
    dend_34 { pt3dadd( 110.3, 78.1689, 3.65023, 0.66 ) }
    dend_34 { pt3dadd( 110.879, 78.4786, 3.68888, 0.44 ) }
    dend_34 { pt3dadd( 111.467, 78.7706, 3.78593, 0.44 ) }
    dend_34 { pt3dadd( 112.377, 79.1961, 4.02696, 0.74 ) }
    dend_34 { pt3dadd( 113.219, 79.5716, 4.33081, 1.18 ) }
    dend_34 { pt3dadd( 114.375, 80.0864, 4.85184, 1.11 ) }
    dend_34 { pt3dadd( 115.334, 80.5474, 5.30474, 0.81 ) }
    dend_34 { pt3dadd( 116.392, 81.0968, 5.8035, 0.44 ) }
    dend_34 { pt3dadd( 117.22, 81.5432, 6.18849, 0.44 ) }
    dend_34 { pt3dadd( 117.737, 81.8244, 6.41658, 0.44 ) }
    dend_34 { pt3dadd( 118.446, 82.2053, 6.70149, 0.66 ) }
    dend_34 { pt3dadd( 119.415, 82.706, 7.07434, 0.37 ) }
    dend_34 { pt3dadd( 119.915, 82.957, 7.26321, 0.29 ) }
    dend_34 { pt3dadd( 120.403, 83.2184, 7.46139, 0.29 ) }
    dend_34 { pt3dadd( 121.007, 83.5655, 7.74698, 0.29 ) }
    dend_34 { pt3dadd( 121.682, 83.9907, 8.09962, 0.81 ) }
    dend_34 { pt3dadd( 122.301, 84.4458, 8.47013, 1.03 ) }
    dend_34 { pt3dadd( 123.117, 85.1619, 9.04804, 0.59 ) }
    dend_34 { pt3dadd( 123.966, 86.0057, 9.77288, 0.52 ) }
    dend_34 { pt3dadd( 124.636, 86.7188, 10.392, 0.74 ) }
    dend_34 { pt3dadd( 125.083, 87.2046, 10.841, 0.37 ) }
    dend_34 { pt3dadd( 125.922, 88.0833, 11.6864, 0.29 ) }
    dend_34 { pt3dadd( 126.668, 88.8237, 12.4101, 0.29 ) }
    dend_34 { pt3dadd( 127.694, 89.77, 13.3992, 0.29 ) }
    dend_34 { pt3dadd( 128.086, 90.1079, 13.7578, 0.88 ) }
    dend_34 { pt3dadd( 128.748, 90.6605, 14.3205, 0.88 ) }
    dend_34 { pt3dadd( 129.546, 91.2848, 14.9346, 0.29 ) }
    dend_34 { pt3dadd( 130.179, 91.7501, 15.3535, 0.22 ) }
    dend_34 { pt3dadd( 130.858, 92.2519, 15.723, 0.29 ) }
    dend_34 { pt3dadd( 131.59, 92.7956, 16.0366, 0.74 ) }
    dend_34 { pt3dadd( 132.126, 93.1899, 16.2424, 0.29 ) }
    dend_34 { pt3dadd( 133.245, 93.998, 16.5957, 0.22 ) }
    dend_34 { pt3dadd( 134.038, 94.5679, 16.8275, 0.22 ) }
    dend_34 { pt3dadd( 134.725, 95.0442, 16.9937, 0.37 ) }
    dend_34 { pt3dadd( 135.622, 95.6321, 17.1694, 0.74 ) }
    dend_34 { pt3dadd( 136.263, 96.0286, 17.3024, 0.74 ) }
    dend_34 { pt3dadd( 136.96, 96.4565, 17.4463, 0.29 ) }
    dend_34 { pt3dadd( 137.817, 96.9814, 17.6325, 0.22 ) }
    dend_34 { pt3dadd( 138.446, 97.3412, 17.794, 0.37 ) }
    dend_34 { pt3dadd( 139.255, 97.7605, 18.0483, 0.22 ) }
    dend_34 { pt3dadd( 140.088, 98.1487, 18.3398, 0.22 ) }
    dend_34 { pt3dadd( 140.516, 98.3252, 18.5053, 0.37 ) }
    dend_34 { pt3dadd( 141.439, 98.6624, 18.8793, 0.37 ) }
    dend_34 { pt3dadd( 142.412, 98.9884, 19.2996, 0.37 ) }
    dend_34 { pt3dadd( 143.184, 99.2661, 19.6533, 0.44 ) }
    dend_34 { pt3dadd( 143.72, 99.4753, 19.9098, 0.81 ) }
    dend_34 { pt3dadd( 144.525, 99.8254, 20.3121, 1.47 ) }
    dend_34 { pt3dadd( 145.024, 100.066, 20.5829, 1.62 ) }
    dend_34 { pt3dadd( 146.119, 100.654, 21.2266, 0.59 ) }
    dend_34 { pt3dadd( 147.438, 101.412, 22.0622, 0.29 ) }
    dend_34 { pt3dadd( 148.279, 101.915, 22.616, 0.22 ) }
    dend_34 { pt3dadd( 148.799, 102.235, 22.9754, 0.22 ) }
    dend_34 { pt3dadd( 149.253, 102.524, 23.2898, 0.22 ) }
    dend_34 { pt3dadd( 149.7, 102.812, 23.5976, 0.22 ) }
    dend_34 { pt3dadd( 150.14, 103.093, 23.8876, 0.22 ) }
    dend_34 { pt3dadd( 150.759, 103.456, 24.2917, 0.37 ) }
    dend_34 { pt3dadd( 151.3, 103.752, 24.626, 0.88 ) }
    dend_34 { pt3dadd( 151.755, 103.99, 24.8895, 1.25 ) }
    dend_34 { pt3dadd( 152.467, 104.361, 25.2997, 1.25 ) }
    dend_34 { pt3dadd( 153.152, 104.734, 25.7191, 0.29 ) }
    dend_34 { pt3dadd( 153.839, 105.129, 26.1763, 0.15 ) }
    dend_34 { pt3dadd( 154.37, 105.448, 26.5345, 0.29 ) }
    dend_34 { pt3dadd( 155.072, 105.876, 26.9792, 0.15 ) }
    dend_34 { pt3dadd( 155.508, 106.149, 27.2552, 0.15 ) }
    dend_34 { pt3dadd( 155.86, 106.376, 27.4664, 0.44 ) }
    dend_34 { pt3dadd( 156.761, 106.949, 27.9096, 0.74 ) }
    dend_34 { pt3dadd( 157.501, 107.413, 28.2295, 0.22 ) }
    dend_34 { pt3dadd( 158.338, 107.919, 28.5494, 0.15 ) }
    dend_34 { pt3dadd( 158.928, 108.276, 28.7485, 0.66 ) }
    dend_34 { pt3dadd( 159.464, 108.625, 28.8977, 0.66 ) }
    dend_34 { pt3dadd( 160.793, 109.554, 29.2496, 0.22 ) }
    dend_34 { pt3dadd( 161.415, 110.033, 29.4108, 0.66 ) }
    dend_34 { pt3dadd( 161.919, 110.471, 29.5476, 1.18 ) }
    dend_34 { pt3dadd( 162.405, 110.946, 29.6991, 0.96 ) }
    dend_34 { pt3dadd( 163.5, 112.107, 30.0791, 0.15 ) }
    dend_34 { pt3dadd( 163.885, 112.552, 30.2323, 0.15 ) }
    dend_34 { pt3dadd( 164.324, 113.112, 30.4215, 0.22 ) }
    dend_34 { pt3dadd( 164.83, 113.722, 30.6425, 0.07 ) }
    dend_34 { pt3dadd( 165.538, 114.498, 31.0008, 0.07 ) }
    dend_34 { pt3dadd( 165.823, 114.779, 31.1696, 0.74 ) }
    dend_34 { pt3dadd( 166.389, 115.274, 31.5327, 1.03 ) }
    dend_34 { pt3dadd( 167.016, 115.786, 31.9368, 0.44 ) }
    dend_34 { pt3dadd( 167.997, 116.55, 32.6729, 0.15 ) }
    dend_34 { pt3dadd( 168.663, 117.047, 33.2538, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_34 { pt3dadd( 169.092, 117.363, 33.6934, 0.15 ) }
    dend_34 { pt3dadd( 169.433, 117.613, 34.1094, 0.37 ) }
    dend_34 { pt3dadd( 169.896, 117.934, 34.7708, 0.59 ) }
    dend_34 { pt3dadd( 170.765, 118.505, 36.2627, 0.22 ) }
    dend_34 { pt3dadd( 171.211, 118.797, 37.1805, 0.44 ) }
    dend_34 { pt3dadd( 171.567, 119.023, 38.0466, 0.44 ) }
    dend_34 { pt3dadd( 171.77, 119.143, 38.6146, 0.44 ) }
    dend_34 { pt3dadd( 171.941, 119.222, 39.1725, 0.44 ) }
    dend_34 { pt3dadd( 172.231, 119.276, 40.162, 0.44 ) }
    dend_34 { pt3dadd( 172.314, 119.272, 40.4339, 0.44 ) }
    dend_34 { pt3dadd( 172.448, 119.259, 40.8396, 0.44 ) }
    dend_34 { pt3dadd( 172.712, 119.219, 41.5374, 0.44 ) }
    dend_34 { pt3dadd( 172.998, 119.157, 42.223, 0.44 ) }
    dend_34 { pt3dadd( 173.771, 118.955, 43.9578, 0.22 ) }
    dend_34 { pt3dadd( 174.316, 118.786, 45.0934, 0.22 ) }
    dend_34 { pt3dadd( 174.748, 118.635, 45.9878, 0.22 ) }
    dend_34 { pt3dadd( 175.139, 118.475, 46.8187, 0.74 ) }
    dend_34 { pt3dadd( 175.962, 118.06, 48.649, 0.22 ) }
    dend_34 { pt3dadd( 176.613, 117.678, 50.2137, 0.52 ) }
    dend_34 { pt3dadd( 177.098, 117.357, 51.4405, 0.22 ) }
    dend_34 { pt3dadd( 177.532, 117.061, 52.6027, 0.52 ) }
    dend_34 { pt3dadd( 177.924, 116.794, 53.7378, 0.52 ) }
    dend_34 { pt3dadd( 178.3, 116.541, 55.0615, 0.29 ) }
    dend_34 { pt3dadd( 178.589, 116.357, 56.4642, 0.29 ) }
    dend_34 { pt3dadd( 178.672, 116.323, 57.1203, 0.29 ) }
    dend_34 { pt3dadd( 178.733, 116.372, 58.0417, 0.29 ) }
    dend_34 { pt3dadd( 178.758, 116.46, 58.4961, 0.29 ) }
    dend_34 { pt3dadd( 178.828, 116.752, 59.3709, 0.29 ) }
    dend_34 { pt3dadd( 178.98, 117.194, 60.3604, 0.29 ) }
    dend_34 { pt3dadd( 179.112, 117.433, 60.8421, 0.29 ) }
    dend_34 { pt3dadd( 179.355, 117.735, 61.4946, 0.52 ) }
    dend_34 { pt3dadd( 179.803, 118.17, 62.5744, 0.22 ) }
    dend_34 { pt3dadd( 180.431, 118.686, 63.8324, 0.22 ) }
    dend_34 { pt3dadd( 180.926, 119.056, 64.6995, 0.22 ) }
    dend_34 { pt3dadd( 181.357, 119.399, 65.3899, 0.52 ) }
    dend_34 { pt3dadd( 182.119, 120.093, 66.579, 0.52 ) }
    dend_34 { pt3dadd( 182.804, 120.749, 67.6712, 0.52 ) }
    dend_34 { pt3dadd( 183.755, 121.755, 69.1795, 0.22 ) }
    dend_34 { pt3dadd( 184.392, 122.51, 70.1435, 0.22 ) }
    dend_34 { pt3dadd( 185.045, 123.382, 71.1284, 0.22 ) }
    dend_34 { pt3dadd( 185.529, 124.097, 71.8126, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 41/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 44.7248, 34.3506, 3.8562, 0.81 ) }
    dend_33 { pt3dadd( 45.0228, 35.677, 3.32848, 0.81 ) }
    dend_33 { pt3dadd( 45.3696, 36.7882, 2.71699, 0.52 ) }
    dend_33 { pt3dadd( 45.6902, 37.5886, 2.14786, 0.66 ) }
    dend_33 { pt3dadd( 46.1673, 38.6002, 1.18615, 0.44 ) }
    dend_33 { pt3dadd( 46.5338, 39.363, 0.278683, 0.44 ) }
    dend_33 { pt3dadd( 46.8747, 40.0783, -0.708823, 0.44 ) }
    dend_33 { pt3dadd( 47.1472, 40.5147, -1.59308, 0.44 ) }
    dend_33 { pt3dadd( 47.3937, 40.784, -2.42612, 0.44 ) }
    dend_33 { pt3dadd( 47.7214, 41.0511, -3.61744, 0.44 ) }
    dend_33 { pt3dadd( 47.9555, 41.2162, -4.52384, 0.44 ) }
    dend_33 { pt3dadd( 48.1183, 41.3329, -5.08354, 0.44 ) }
    dend_33 { pt3dadd( 48.4052, 41.5897, -5.94691, 0.59 ) }
    dend_33 { pt3dadd( 48.7749, 42.0359, -6.87214, 0.59 ) }
    dend_33 { pt3dadd( 48.9468, 42.2839, -7.20193, 0.59 ) }
    dend_33 { pt3dadd( 49.2925, 42.8289, -7.72581, 0.66 ) }
    dend_33 { pt3dadd( 49.5736, 43.3247, -8.10534, 0.96 ) }
    dend_33 { pt3dadd( 49.8147, 43.8573, -8.43854, 0.96 ) }
    dend_33 { pt3dadd( 50.0977, 44.66, -8.83992, 0.96 ) }
    dend_33 { pt3dadd( 50.466, 45.8491, -9.3244, 0.88 ) }
    dend_33 { pt3dadd( 50.6939, 46.6147, -9.59396, 0.52 ) }
    dend_33 { pt3dadd( 50.9623, 47.4292, -9.8361, 0.29 ) }
    dend_33 { pt3dadd( 51.2186, 48.1275, -10.0082, 0.29 ) }
    dend_33 { pt3dadd( 51.4883, 48.7603, -10.1317, 0.44 ) }
    dend_33 { pt3dadd( 51.8069, 49.4183, -10.2191, 0.88 ) }
    dend_33 { pt3dadd( 52.1989, 50.1792, -10.3119, 0.66 ) }
    dend_33 { pt3dadd( 52.7821, 51.315, -10.5056, 0.52 ) }
    dend_33 { pt3dadd( 53.0925, 51.9619, -10.6697, 0.59 ) }
    dend_33 { pt3dadd( 53.5755, 53.0777, -11.0579, 0.74 ) }
    dend_33 { pt3dadd( 54.027, 54.2842, -11.6165, 0.88 ) }
    dend_33 { pt3dadd( 54.2823, 55.0939, -12.0928, 0.52 ) }
    dend_33 { pt3dadd( 54.5034, 55.9402, -12.6863, 0.52 ) }
    dend_33 { pt3dadd( 54.7059, 56.8079, -13.3957, 0.59 ) }
    dend_33 { pt3dadd( 54.846, 57.261, -13.8172, 0.59 ) }
    dend_33 { pt3dadd( 55.0667, 57.7878, -14.361, 0.81 ) }
    dend_33 { pt3dadd( 55.4213, 58.433, -15.0386, 0.81 ) }
    dend_33 { pt3dadd( 55.8449, 59.0659, -15.596, 0.81 ) }
    dend_33 { pt3dadd( 56.3675, 59.7495, -16.0647, 0.52 ) }
    dend_33 { pt3dadd( 57.1815, 60.7665, -16.5766, 0.29 ) }
    dend_33 { pt3dadd( 57.5773, 61.2498, -16.7503, 0.29 ) }
    dend_33 { pt3dadd( 58.1137, 61.8628, -16.8958, 0.59 ) }
    dend_33 { pt3dadd( 58.9209, 62.7266, -17.0033, 0.81 ) }
    dend_33 { pt3dadd( 59.4256, 63.2504, -17.0398, 1.03 ) }
    dend_33 { pt3dadd( 60.0254, 63.9086, -17.0509, 0.29 ) }
    dend_33 { pt3dadd( 60.5523, 64.5484, -17.0587, 0.22 ) }
    dend_33 { pt3dadd( 61.0684, 65.2646, -17.0963, 0.22 ) }
    dend_33 { pt3dadd( 61.3973, 65.847, -17.1763, 0.29 ) }
    dend_33 { pt3dadd( 61.7846, 66.7232, -17.3515, 0.74 ) }
    dend_33 { pt3dadd( 62.0514, 67.4772, -17.4976, 0.88 ) }
    dend_33 { pt3dadd( 62.2684, 68.2182, -17.645, 0.88 ) }
    dend_33 { pt3dadd( 62.4723, 69.0965, -17.811, 0.52 ) }
    dend_33 { pt3dadd( 62.7358, 70.5126, -18.0555, 0.52 ) }
    dend_33 { pt3dadd( 62.8694, 71.3952, -18.201, 0.44 ) }
    dend_33 { pt3dadd( 63.0242, 72.6864, -18.4234, 0.44 ) }
    dend_33 { pt3dadd( 63.0924, 73.5806, -18.5959, 0.44 ) }
    dend_33 { pt3dadd( 63.1101, 74.4428, -18.771, 0.74 ) }
    dend_33 { pt3dadd( 63.0838, 75.0407, -18.8828, 0.88 ) }
    dend_33 { pt3dadd( 62.933, 76.3005, -19.0901, 0.96 ) }
    dend_33 { pt3dadd( 62.7551, 77.4775, -19.2313, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_33 { pt3dadd( 62.6508, 78.3109, -19.2556, 0.22 ) }
    dend_33 { pt3dadd( 62.6323, 78.9794, -19.1751, 0.22 ) }
    dend_33 { pt3dadd( 62.747, 79.9915, -18.9005, 0.74 ) }
    dend_33 { pt3dadd( 62.8255, 80.3347, -18.7803, 0.74 ) }
    dend_33 { pt3dadd( 63.2092, 81.5268, -18.3217, 0.52 ) }
    dend_33 { pt3dadd( 63.6409, 82.7104, -17.924, 0.44 ) }
    dend_33 { pt3dadd( 64.0337, 83.7581, -17.6863, 0.44 ) }
    dend_33 { pt3dadd( 64.3843, 84.8159, -17.5849, 0.66 ) }
    dend_33 { pt3dadd( 64.6562, 85.8874, -17.6383, 0.66 ) }
    dend_33 { pt3dadd( 64.7888, 86.6562, -17.7206, 0.66 ) }
    dend_33 { pt3dadd( 64.9115, 87.8676, -17.9475, 0.29 ) }
    dend_33 { pt3dadd( 64.9592, 88.7139, -18.1135, 0.29 ) }
    dend_33 { pt3dadd( 64.9946, 89.6702, -18.2176, 0.44 ) }
    dend_33 { pt3dadd( 65.0079, 90.2762, -18.1999, 0.44 ) }
    dend_33 { pt3dadd( 65.0242, 91.3652, -17.9818, 0.74 ) }
    dend_33 { pt3dadd( 65.0256, 91.8648, -17.8287, 1.11 ) }
    dend_33 { pt3dadd( 65.0124, 93.052, -17.41, 0.44 ) }
    dend_33 { pt3dadd( 64.9754, 94.2956, -16.9847, 0.74 ) }
    dend_33 { pt3dadd( 64.937, 94.8833, -16.8305, 0.52 ) }
    dend_33 { pt3dadd( 64.8584, 95.5745, -16.7376, 0.29 ) }
    dend_33 { pt3dadd( 64.7411, 96.2598, -16.764, 0.22 ) }
    dend_33 { pt3dadd( 64.5078, 97.203, -16.9607, 0.59 ) }
    dend_33 { pt3dadd( 64.2806, 97.9328, -17.2378, 0.96 ) }
    dend_33 { pt3dadd( 64.001, 98.7148, -17.5904, 0.66 ) }
    dend_33 { pt3dadd( 63.6543, 99.6516, -17.9807, 0.44 ) }
    dend_33 { pt3dadd( 63.3069, 100.646, -18.3161, 0.44 ) }
    dend_33 { pt3dadd( 62.9514, 101.825, -18.5233, 0.22 ) }
    dend_33 { pt3dadd( 62.8042, 102.472, -18.5199, 0.37 ) }
    dend_33 { pt3dadd( 62.6618, 103.487, -18.3475, 0.59 ) }
    dend_33 { pt3dadd( 62.5946, 104.625, -18.0016, 0.29 ) }
    dend_33 { pt3dadd( 62.5962, 105.77, -17.5596, 0.29 ) }
    dend_33 { pt3dadd( 62.6024, 106.966, -17.0632, 0.37 ) }
    dend_33 { pt3dadd( 62.5675, 107.548, -16.8262, 0.29 ) }
    dend_33 { pt3dadd( 62.4186, 108.45, -16.5218, 0.66 ) }
    dend_33 { pt3dadd( 62.1862, 109.23, -16.3461, 1.11 ) }
    dend_33 { pt3dadd( 61.9086, 109.875, -16.2746, 1.11 ) }
    dend_33 { pt3dadd( 61.3101, 111.031, -16.2731, 0.37 ) }
    dend_33 { pt3dadd( 60.5893, 112.385, -16.3685, 0.22 ) }
    dend_33 { pt3dadd( 60.3023, 112.935, -16.4208, 0.59 ) }
    dend_33 { pt3dadd( 60.0213, 113.471, -16.483, 1.11 ) }
    dend_33 { pt3dadd( 59.4235, 114.669, -16.6433, 0.29 ) }
    dend_33 { pt3dadd( 58.8329, 116.009, -16.8507, 0.96 ) }
    dend_33 { pt3dadd( 58.5184, 116.931, -17.0383, 0.15 ) }
    dend_33 { pt3dadd( 58.3934, 117.441, -17.1652, 0.22 ) }
    dend_33 { pt3dadd( 58.136, 118.637, -17.5273, 0.07 ) }
    dend_33 { pt3dadd( 58.038, 119.127, -17.7271, 0.22 ) }
    dend_33 { pt3dadd( 57.9891, 119.398, -17.8728, 0.22 ) }
    dend_33 { pt3dadd( 57.8803, 120.184, -18.4219, 0.07 ) }
    dend_33 { pt3dadd( 57.8568, 120.517, -18.7029, 0.22 ) }
    dend_33 { pt3dadd( 57.8621, 120.857, -19.028, 0.22 ) }
    dend_33 { pt3dadd( 57.9501, 121.465, -19.682, 0.15 ) }
    dend_33 { pt3dadd( 57.9945, 121.765, -20.0224, 0.29 ) }
    dend_33 { pt3dadd( 58.0504, 122.338, -20.6693, 0.07 ) }
    dend_33 { pt3dadd( 58.0585, 122.676, -21.0338, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 54/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.47989, -28.8219, -0.648847, 0.81 ) }
    dend_31 { pt3dadd( -1.00616, -29.6187, -1.8147, 0.81 ) }
    dend_31 { pt3dadd( -0.374005, -30.548, -3.25629, 0.81 ) }
    dend_31 { pt3dadd( 0.0310108, -31.0549, -4.09435, 0.81 ) }
    dend_31 { pt3dadd( 0.561197, -31.5979, -5.04161, 0.88 ) }
    dend_31 { pt3dadd( 1.12966, -32.0537, -5.9178, 1.18 ) }
    dend_31 { pt3dadd( 1.56133, -32.3199, -6.50379, 1.18 ) }
    dend_31 { pt3dadd( 1.93228, -32.465, -6.93636, 1.18 ) }
    dend_31 { pt3dadd( 2.64539, -32.6701, -7.60771, 0.96 ) }
    dend_31 { pt3dadd( 3.5494, -32.9086, -8.34856, 0.96 ) }
    dend_31 { pt3dadd( 4.5974, -33.1768, -9.1342, 0.81 ) }
    dend_31 { pt3dadd( 5.94536, -33.5455, -10.0395, 0.81 ) }
    dend_31 { pt3dadd( 6.7649, -33.7906, -10.5116, 0.81 ) }
    dend_31 { pt3dadd( 8.06235, -34.2023, -11.1002, 0.81 ) }
    dend_31 { pt3dadd( 9.25411, -34.6038, -11.4672, 0.88 ) }
    dend_31 { pt3dadd( 10.2899, -34.9835, -11.6061, 0.88 ) }
    dend_31 { pt3dadd( 11.2635, -35.3821, -11.5136, 0.59 ) }
    dend_31 { pt3dadd( 12.2812, -35.8136, -11.1691, 0.59 ) }
    dend_31 { pt3dadd( 13.4882, -36.2933, -10.5179, 0.59 ) }
    dend_31 { pt3dadd( 14.3108, -36.5853, -9.92464, 0.74 ) }
    dend_31 { pt3dadd( 15.1259, -36.844, -9.2379, 0.59 ) }
    dend_31 { pt3dadd( 16.125, -37.1497, -8.3477, 0.59 ) }
    dend_31 { pt3dadd( 17.0475, -37.4388, -7.54797, 0.88 ) }
    dend_31 { pt3dadd( 18.1636, -37.803, -6.68649, 0.88 ) }
    dend_31 { pt3dadd( 19.2176, -38.1835, -6.0039, 1.03 ) }
    dend_31 { pt3dadd( 20.4284, -38.6815, -5.3902, 0.81 ) }
    dend_31 { pt3dadd( 21.2885, -39.0828, -5.07131, 0.66 ) }
    dend_31 { pt3dadd( 22.2306, -39.599, -4.83465, 0.66 ) }
    dend_31 { pt3dadd( 23.3207, -40.312, -4.59054, 0.44 ) }
    dend_31 { pt3dadd( 24.5739, -41.2374, -4.26167, 0.44 ) }
    dend_31 { pt3dadd( 25.5252, -41.978, -3.89417, 0.66 ) }
    dend_31 { pt3dadd( 26.0645, -42.4102, -3.59144, 1.11 ) }
    dend_31 { pt3dadd( 27.0605, -43.18, -2.78962, 1.25 ) }
    dend_31 { pt3dadd( 28.2536, -44.0563, -1.59002, 0.44 ) }
    dend_31 { pt3dadd( 29.2089, -44.7177, -0.525948, 0.52 ) }
    dend_31 { pt3dadd( 30.2667, -45.3979, 0.709236, 0.52 ) }
    dend_31 { pt3dadd( 31.0511, -45.8797, 1.63134, 0.52 ) }
    dend_31 { pt3dadd( 32.128, -46.5669, 2.91468, 0.59 ) }
    dend_31 { pt3dadd( 32.7504, -46.9905, 3.66803, 0.96 ) }
    dend_31 { pt3dadd( 33.409, -47.4822, 4.47149, 1.11 ) }
    dend_31 { pt3dadd( 34.1704, -48.1033, 5.4146, 0.81 ) }
    dend_31 { pt3dadd( 34.9654, -48.7764, 6.42537, 0.52 ) }
    dend_31 { pt3dadd( 35.5917, -49.2544, 7.23463, 0.52 ) }
    dend_31 { pt3dadd( 35.8281, -49.4203, 7.53596, 0.52 ) }
    dend_31 { pt3dadd( 36.1885, -49.6515, 7.99348, 0.52 ) }
    dend_31 { pt3dadd( 36.5436, -49.8607, 8.38135, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_31 { pt3dadd( 37.2717, -50.2522, 8.99508, 0.96 ) }
    dend_31 { pt3dadd( 38.4748, -50.8715, 9.74971, 0.44 ) }
    dend_31 { pt3dadd( 39.1848, -51.2504, 10.1006, 0.81 ) }
    dend_31 { pt3dadd( 39.8805, -51.6504, 10.4122, 1.03 ) }
    dend_31 { pt3dadd( 41.2266, -52.514, 10.9337, 0.44 ) }
    dend_31 { pt3dadd( 42.0554, -53.091, 11.2432, 0.44 ) }
    dend_31 { pt3dadd( 42.643, -53.5243, 11.4731, 0.88 ) }
    dend_31 { pt3dadd( 43.2248, -53.9684, 11.7422, 1.55 ) }
    dend_31 { pt3dadd( 44.0416, -54.5795, 12.1961, 1.55 ) }
    dend_31 { pt3dadd( 44.9924, -55.2959, 12.8426, 0.52 ) }
    dend_31 { pt3dadd( 46.095, -56.1645, 13.7335, 0.22 ) }
    dend_31 { pt3dadd( 46.6178, -56.5898, 14.1959, 0.22 ) }
    dend_31 { pt3dadd( 47.185, -57.0604, 14.7516, 0.22 ) }
    dend_31 { pt3dadd( 47.6254, -57.4305, 15.2138, 0.74 ) }
    dend_31 { pt3dadd( 48.1316, -57.8566, 15.7407, 1.18 ) }
    dend_31 { pt3dadd( 48.5195, -58.1846, 16.1426, 1.18 ) }
    dend_31 { pt3dadd( 49.5711, -59.0971, 17.1233, 0.22 ) }
    dend_31 { pt3dadd( 50.0395, -59.4933, 17.504, 0.22 ) }
    dend_31 { pt3dadd( 50.8005, -60.1198, 18.0149, 0.88 ) }
    dend_31 { pt3dadd( 51.8188, -60.9492, 18.6036, 0.15 ) }
    dend_31 { pt3dadd( 52.2893, -61.324, 18.8367, 0.96 ) }
    dend_31 { pt3dadd( 52.8365, -61.7581, 19.0685, 1.25 ) }
    dend_31 { pt3dadd( 53.9744, -62.6616, 19.417, 0.15 ) }
    dend_31 { pt3dadd( 55.2654, -63.6855, 19.7041, 0.15 ) }
    dend_31 { pt3dadd( 55.8283, -64.1386, 19.7958, 0.15 ) }
    dend_31 { pt3dadd( 56.7856, -64.9353, 19.9133, 0.15 ) }
    dend_31 { pt3dadd( 57.2638, -65.3442, 19.9777, 0.96 ) }
    dend_31 { pt3dadd( 58.1218, -66.1069, 20.1181, 1.4 ) }
    dend_31 { pt3dadd( 58.4638, -66.4239, 20.1778, 1.33 ) }
    dend_31 { pt3dadd( 59.3495, -67.267, 20.4051, 0.22 ) }
    dend_31 { pt3dadd( 59.8468, -67.7321, 20.551, 0.29 ) }
    dend_31 { pt3dadd( 60.6247, -68.4501, 20.8063, 0.59 ) }
    dend_31 { pt3dadd( 61.3225, -69.0686, 21.0483, 0.59 ) }
    dend_31 { pt3dadd( 62.0065, -69.6296, 21.3078, 1.7 ) }
    dend_31 { pt3dadd( 62.6628, -70.1207, 21.5599, 0.81 ) }
    dend_31 { pt3dadd( 63.8596, -70.9285, 22.0254, 0.15 ) }
    dend_31 { pt3dadd( 64.3677, -71.2434, 22.233, 0.44 ) }
    dend_31 { pt3dadd( 65.0096, -71.6103, 22.4814, 0.74 ) }
    dend_31 { pt3dadd( 66.2498, -72.2794, 22.9898, 0.22 ) }
    dend_31 { pt3dadd( 66.9663, -72.6477, 23.2925, 0.96 ) }
    dend_31 { pt3dadd( 67.6933, -73.0031, 23.6012, 1.25 ) }
    dend_31 { pt3dadd( 68.6173, -73.4501, 24.036, 0.29 ) }
    dend_31 { pt3dadd( 69.8154, -74.0243, 24.6062, 0.07 ) }
    dend_31 { pt3dadd( 70.4038, -74.3033, 24.8837, 0.29 ) }
    dend_31 { pt3dadd( 71.2376, -74.7029, 25.2544, 0.74 ) }
    dend_31 { pt3dadd( 72.5752, -75.3595, 25.8617, 0.15 ) }
    dend_31 { pt3dadd( 73.4996, -75.8296, 26.3329, 0.15 ) }
    dend_31 { pt3dadd( 73.9324, -76.0644, 26.5948, 0.15 ) }
    dend_31 { pt3dadd( 74.2931, -76.2792, 26.871, 0.74 ) }
    dend_31 { pt3dadd( 74.5172, -76.4196, 27.0624, 0.96 ) }
    dend_31 { pt3dadd( 75.4908, -77.0577, 27.974, 0.15 ) }
    dend_31 { pt3dadd( 76.0709, -77.4513, 28.5339, 0.15 ) }
    dend_31 { pt3dadd( 76.7891, -77.9648, 29.227, 0.88 ) }
    dend_31 { pt3dadd( 77.7392, -78.6925, 30.2296, 0.15 ) }
    dend_31 { pt3dadd( 77.9743, -78.8847, 30.5055, 0.15 ) }
    dend_31 { pt3dadd( 78.3499, -79.2073, 30.9381, 0.29 ) }
    dend_31 { pt3dadd( 78.6215, -79.4551, 31.254, 0.29 ) }
    dend_31 { pt3dadd( 79.2131, -80.0009, 31.9905, 0.15 ) }
    dend_31 { pt3dadd( 79.8082, -80.5574, 32.8391, 0.15 ) }
    dend_31 { pt3dadd( 80.3082, -81.0054, 33.6319, 0.15 ) }
    dend_31 { pt3dadd( 80.7885, -81.4159, 34.4845, 1.03 ) }
    dend_31 { pt3dadd( 81.5284, -82.0013, 35.9781, 0.15 ) }
    dend_31 { pt3dadd( 82.0788, -82.391, 37.1721, 0.15 ) }
    dend_31 { pt3dadd( 82.4755, -82.627, 38.0266, 0.15 ) }
    dend_31 { pt3dadd( 83.0082, -82.9079, 39.1895, 0.15 ) }
    dend_31 { pt3dadd( 83.5377, -83.1656, 40.4153, 0.15 ) }
    dend_31 { pt3dadd( 84.094, -83.4094, 41.8088, 0.15 ) }
    dend_31 { pt3dadd( 84.5511, -83.5882, 43.0072, 0.15 ) }
    dend_31 { pt3dadd( 84.9864, -83.7549, 44.1492, 0.15 ) }
    dend_31 { pt3dadd( 85.5204, -83.9558, 45.5604, 0.15 ) }
    dend_31 { pt3dadd( 86.1029, -84.1808, 47.1544, 0.15 ) }
    dend_31 { pt3dadd( 86.431, -84.3045, 48.0456, 0.15 ) }
    dend_31 { pt3dadd( 87.2272, -84.6075, 50.2384, 0.15 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 73/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.47989, -28.8219, -0.648847, 0.96 ) }
    dend_26 { pt3dadd( -2.31999, -29.8339, -0.752049, 0.96 ) }
    dend_26 { pt3dadd( -3.05316, -30.9268, -0.923145, 0.74 ) }
    dend_26 { pt3dadd( -3.67782, -32.1065, -1.17108, 0.74 ) }
    dend_26 { pt3dadd( -4.22176, -33.3476, -1.47291, 1.03 ) }
    dend_26 { pt3dadd( -4.55027, -34.2206, -1.71061, 1.18 ) }
    dend_26 { pt3dadd( -5.02154, -35.5675, -2.10336, 0.81 ) }
    dend_26 { pt3dadd( -5.30766, -36.6387, -2.44275, 0.81 ) }
    dend_26 { pt3dadd( -5.58327, -37.7749, -2.81038, 0.88 ) }
    dend_26 { pt3dadd( -5.73322, -38.3701, -2.99838, 1.25 ) }
    dend_26 { pt3dadd( -6.03134, -39.4511, -3.30816, 1.25 ) }
    dend_26 { pt3dadd( -6.56393, -41.2175, -3.77257, 0.96 ) }
    dend_26 { pt3dadd( -7.00928, -42.6478, -4.06697, 0.74 ) }
    dend_26 { pt3dadd( -7.36983, -43.8956, -4.24015, 0.74 ) }
    dend_26 { pt3dadd( -7.65762, -45.0721, -4.36134, 0.96 ) }
    dend_26 { pt3dadd( -7.84942, -46.1624, -4.4439, 0.74 ) }
    dend_26 { pt3dadd( -7.95727, -47.4253, -4.50468, 0.74 ) }
    dend_26 { pt3dadd( -7.94057, -49.2622, -4.52389, 0.96 ) }
    dend_26 { pt3dadd( -7.82631, -50.5603, -4.48711, 0.74 ) }
    dend_26 { pt3dadd( -7.62612, -51.7924, -4.42018, 0.81 ) }
    dend_26 { pt3dadd( -7.30628, -53.2282, -4.29131, 1.18 ) }
    dend_26 { pt3dadd( -6.9031, -54.7032, -4.1121, 1.18 ) }
    dend_26 { pt3dadd( -6.25115, -56.8031, -3.80848, 0.96 ) }
    dend_26 { pt3dadd( -5.69073, -58.5456, -3.52287, 0.96 ) }
    dend_26 { pt3dadd( -5.27885, -59.8823, -3.26202, 1.03 ) }
    dend_26 { pt3dadd( -4.8594, -61.3334, -2.92106, 0.74 ) }
    dend_26 { pt3dadd( -4.5289, -62.6257, -2.58945, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_26 { pt3dadd( -4.29839, -63.9159, -2.22141, 1.03 ) }
    dend_26 { pt3dadd( -4.22399, -65.2683, -1.81369, 0.88 ) }
    dend_26 { pt3dadd( -4.37007, -66.7113, -1.37038, 0.66 ) }
    dend_26 { pt3dadd( -4.56064, -67.5592, -1.11149, 0.59 ) }
    dend_26 { pt3dadd( -4.81263, -68.3877, -0.871316, 0.81 ) }
    dend_26 { pt3dadd( -5.33227, -69.881, -0.467804, 0.59 ) }
    dend_26 { pt3dadd( -5.75688, -71.0732, -0.195218, 0.81 ) }
    dend_26 { pt3dadd( -6.0655, -72.017, -0.0549041, 0.81 ) }
    dend_26 { pt3dadd( -6.38521, -73.1601, 0.00183413, 0.81 ) }
    dend_26 { pt3dadd( -6.633, -74.1988, -0.0248728, 1.25 ) }
    dend_26 { pt3dadd( -6.87994, -75.3683, -0.13429, 1.25 ) }
    dend_26 { pt3dadd( -7.23023, -76.9641, -0.429174, 0.66 ) }
    dend_26 { pt3dadd( -7.5185, -78.1392, -0.744699, 0.66 ) }
    dend_26 { pt3dadd( -7.80423, -79.144, -1.10643, 1.03 ) }
    dend_26 { pt3dadd( -8.11927, -80.1813, -1.59347, 1.33 ) }
    dend_26 { pt3dadd( -8.32317, -81.0012, -2.06526, 0.88 ) }
    dend_26 { pt3dadd( -8.44514, -81.9771, -2.72374, 0.59 ) }
    dend_26 { pt3dadd( -8.38845, -82.6133, -3.19591, 0.59 ) }
    dend_26 { pt3dadd( -8.13409, -83.2792, -3.65131, 0.59 ) }
    dend_26 { pt3dadd( -7.60678, -84.1108, -4.17212, 0.59 ) }
    dend_26 { pt3dadd( -6.75319, -85.2614, -4.81679, 0.22 ) }
    dend_26 { pt3dadd( -6.3024, -85.8815, -5.13105, 0.74 ) }
    dend_26 { pt3dadd( -5.87847, -86.5292, -5.44237, 1.11 ) }
    dend_26 { pt3dadd( -5.28148, -87.6934, -6.00308, 0.52 ) }
    dend_26 { pt3dadd( -4.99517, -88.5481, -6.42418, 0.66 ) }
    dend_26 { pt3dadd( -4.81157, -89.5277, -6.90547, 0.96 ) }
    dend_26 { pt3dadd( -4.69971, -90.7424, -7.45938, 0.81 ) }
    dend_26 { pt3dadd( -4.63776, -91.7139, -7.85134, 0.59 ) }
    dend_26 { pt3dadd( -4.58603, -92.7153, -8.20524, 0.59 ) }
    dend_26 { pt3dadd( -4.53426, -93.8772, -8.54005, 0.44 ) }
    dend_26 { pt3dadd( -4.49521, -95.1175, -8.74117, 0.74 ) }
    dend_26 { pt3dadd( -4.50428, -96.5493, -8.83307, 0.74 ) }
    dend_26 { pt3dadd( -4.58011, -97.6681, -8.83549, 0.81 ) }
    dend_26 { pt3dadd( -4.72238, -98.6198, -8.81368, 1.03 ) }
    dend_26 { pt3dadd( -5.01614, -99.7835, -8.79943, 1.03 ) }
    dend_26 { pt3dadd( -5.59821, -101.432, -8.86134, 0.59 ) }
    dend_26 { pt3dadd( -6.12369, -102.679, -8.97579, 0.44 ) }
    dend_26 { pt3dadd( -6.63947, -103.8, -9.10481, 0.52 ) }
    dend_26 { pt3dadd( -7.14049, -104.853, -9.21714, 1.03 ) }
    dend_26 { pt3dadd( -7.70208, -106.062, -9.29368, 0.81 ) }
    dend_26 { pt3dadd( -8.19176, -107.232, -9.27607, 0.29 ) }
    dend_26 { pt3dadd( -8.60453, -108.486, -9.12908, 0.29 ) }
    dend_26 { pt3dadd( -8.80689, -109.394, -8.903, 0.44 ) }
    dend_26 { pt3dadd( -8.9357, -110.279, -8.57795, 0.96 ) }
    dend_26 { pt3dadd( -9.05451, -111.468, -8.05893, 1.11 ) }
    dend_26 { pt3dadd( -9.15751, -112.861, -7.45101, 0.59 ) }
    dend_26 { pt3dadd( -9.24032, -114.042, -6.9677, 0.59 ) }
    dend_26 { pt3dadd( -9.36387, -115.639, -6.4202, 0.52 ) }
    dend_26 { pt3dadd( -9.42529, -116.505, -6.2183, 0.52 ) }
    dend_26 { pt3dadd( -9.50773, -117.934, -6.02592, 0.81 ) }
    dend_26 { pt3dadd( -9.59231, -119.395, -6.00269, 0.88 ) }
    dend_26 { pt3dadd( -9.65071, -120.239, -6.07535, 0.66 ) }
    dend_26 { pt3dadd( -9.73915, -121.287, -6.28674, 0.52 ) }
    dend_26 { pt3dadd( -9.83018, -122.376, -6.62882, 0.81 ) }
    dend_26 { pt3dadd( -9.86525, -123.078, -6.90295, 0.52 ) }
    dend_26 { pt3dadd( -9.85334, -124.088, -7.35355, 0.37 ) }
    dend_26 { pt3dadd( -9.79407, -124.884, -7.72568, 0.96 ) }
    dend_26 { pt3dadd( -9.61971, -126.17, -8.30854, 0.74 ) }
    dend_26 { pt3dadd( -9.44665, -127.073, -8.68906, 0.96 ) }
    dend_26 { pt3dadd( -9.27733, -127.805, -8.92017, 0.96 ) }
    dend_26 { pt3dadd( -9.00872, -128.919, -9.09602, 0.37 ) }
    dend_26 { pt3dadd( -8.82542, -129.759, -9.00627, 0.29 ) }
    dend_26 { pt3dadd( -8.60951, -131.017, -8.53227, 0.59 ) }
    dend_26 { pt3dadd( -8.54199, -131.527, -8.21184, 0.59 ) }
    dend_26 { pt3dadd( -8.43487, -132.51, -7.47541, 0.59 ) }
    dend_26 { pt3dadd( -8.3379, -133.494, -6.6851, 0.96 ) }
    dend_26 { pt3dadd( -8.22999, -134.646, -5.74211, 0.52 ) }
    dend_26 { pt3dadd( -8.16676, -135.409, -5.13614, 0.44 ) }
    dend_26 { pt3dadd( -8.11832, -136.204, -4.53825, 0.44 ) }
    dend_26 { pt3dadd( -8.08807, -137.003, -3.93202, 0.88 ) }
    dend_26 { pt3dadd( -8.08007, -137.831, -3.3282, 0.44 ) }
    dend_26 { pt3dadd( -8.10684, -138.681, -2.74757, 0.37 ) }
    dend_26 { pt3dadd( -8.20171, -139.608, -2.16483, 0.74 ) }
    dend_26 { pt3dadd( -8.39468, -140.625, -1.585, 0.22 ) }
    dend_26 { pt3dadd( -8.6593, -141.61, -1.05088, 0.29 ) }
    dend_26 { pt3dadd( -8.99054, -142.597, -0.496492, 0.59 ) }
    dend_26 { pt3dadd( -9.43859, -143.78, 0.175894, 1.18 ) }
    dend_26 { pt3dadd( -9.84382, -144.836, 0.758496, 0.66 ) }
    dend_26 { pt3dadd( -10.149, -145.826, 1.28523, 0.37 ) }
    dend_26 { pt3dadd( -10.3133, -146.68, 1.74817, 0.29 ) }
    dend_26 { pt3dadd( -10.3414, -147.317, 2.11958, 0.29 ) }
    dend_26 { pt3dadd( -10.2922, -147.773, 2.41032, 0.74 ) }
    dend_26 { pt3dadd( -10.1798, -148.24, 2.74191, 1.11 ) }
    dend_26 { pt3dadd( -9.76584, -149.563, 3.64422, 0.44 ) }
    dend_26 { pt3dadd( -9.51752, -150.392, 4.12928, 0.44 ) }
    dend_26 { pt3dadd( -9.39046, -151.046, 4.40394, 0.44 ) }
    dend_26 { pt3dadd( -9.2962, -151.984, 4.71581, 0.29 ) }
    dend_26 { pt3dadd( -9.28908, -152.934, 4.96871, 0.29 ) }
    dend_26 { pt3dadd( -9.37301, -154.166, 5.23666, 0.59 ) }
    dend_26 { pt3dadd( -9.52462, -155.426, 5.45508, 1.18 ) }
    dend_26 { pt3dadd( -9.731, -157.216, 5.73916, 1.4 ) }
    dend_26 { pt3dadd( -9.81929, -158.149, 5.88974, 1.18 ) }
    dend_26 { pt3dadd( -9.87866, -159.422, 6.05778, 0.52 ) }
    dend_26 { pt3dadd( -9.88681, -160.34, 6.11771, 0.52 ) }
    dend_26 { pt3dadd( -9.86997, -161.459, 6.11407, 0.96 ) }
    dend_26 { pt3dadd( -9.79939, -162.753, 5.97477, 0.74 ) }
    dend_26 { pt3dadd( -9.72348, -163.475, 5.8106, 0.74 ) }
    dend_26 { pt3dadd( -9.56755, -164.651, 5.37743, 0.37 ) }
    dend_26 { pt3dadd( -9.39329, -165.693, 4.8507, 0.44 ) }
    dend_26 { pt3dadd( -9.28076, -166.312, 4.47086, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( -9.14727, -167.016, 3.99713, 0.44 ) }
    dend_26 { pt3dadd( -9.00601, -167.785, 3.49172, 0.29 ) }
    dend_26 { pt3dadd( -8.89406, -168.437, 3.17135, 0.29 ) }
    dend_26 { pt3dadd( -8.80828, -169.057, 3.03494, 0.29 ) }
    dend_26 { pt3dadd( -8.71658, -169.972, 3.11169, 0.88 ) }
    dend_26 { pt3dadd( -8.64792, -170.93, 3.40993, 0.81 ) }
    dend_26 { pt3dadd( -8.59655, -171.657, 3.73518, 0.22 ) }
    dend_26 { pt3dadd( -8.45911, -172.932, 4.35284, 0.22 ) }
    dend_26 { pt3dadd( -8.28504, -173.89, 4.78995, 0.44 ) }
    dend_26 { pt3dadd( -7.95633, -175.11, 5.25809, 1.11 ) }
    dend_26 { pt3dadd( -7.59525, -176.072, 5.53411, 0.52 ) }
    dend_26 { pt3dadd( -6.99924, -177.249, 5.68903, 0.22 ) }
    dend_26 { pt3dadd( -6.2739, -178.401, 5.60623, 0.22 ) }
    dend_26 { pt3dadd( -5.34808, -179.695, 5.29141, 0.22 ) }
    dend_26 { pt3dadd( -4.69666, -180.576, 4.99547, 0.37 ) }
    dend_26 { pt3dadd( -4.35497, -181.066, 4.81822, 0.52 ) }
    dend_26 { pt3dadd( -3.93976, -181.769, 4.60325, 0.52 ) }
    dend_26 { pt3dadd( -3.48962, -182.858, 4.4026, 1.11 ) }
    dend_26 { pt3dadd( -3.27545, -183.797, 4.36181, 1.11 ) }
    dend_26 { pt3dadd( -3.12363, -185.245, 4.44255, 0.52 ) }
    dend_26 { pt3dadd( -3.0671, -186.562, 4.59864, 0.29 ) }
    dend_26 { pt3dadd( -3.05196, -187.856, 4.802, 0.52 ) }
    dend_26 { pt3dadd( -3.05919, -189.059, 4.9961, 0.52 ) }
    dend_26 { pt3dadd( -3.05975, -189.955, 5.09852, 0.22 ) }
    dend_26 { pt3dadd( -3.0562, -190.518, 5.1128, 0.22 ) }
    dend_26 { pt3dadd( -3.0534, -191.109, 5.07976, 0.59 ) }
    dend_26 { pt3dadd( -3.06577, -191.903, 4.99616, 1.11 ) }
    dend_26 { pt3dadd( -3.12869, -193.224, 4.81708, 1.11 ) }
    dend_26 { pt3dadd( -3.26188, -194.757, 4.62409, 0.44 ) }
    dend_26 { pt3dadd( -3.3895, -195.763, 4.52355, 0.44 ) }
    dend_26 { pt3dadd( -3.5411, -196.812, 4.46778, 0.44 ) }
    dend_26 { pt3dadd( -3.77593, -198.159, 4.46368, 0.29 ) }
    dend_26 { pt3dadd( -3.94051, -198.859, 4.51692, 0.29 ) }
    dend_26 { pt3dadd( -4.15542, -199.643, 4.64192, 0.88 ) }
    dend_26 { pt3dadd( -4.36089, -200.374, 4.77917, 0.96 ) }
    dend_26 { pt3dadd( -4.66094, -201.574, 4.98355, 0.37 ) }
    dend_26 { pt3dadd( -4.86402, -202.53, 5.12767, 0.37 ) }
    dend_26 { pt3dadd( -5.18198, -203.984, 5.37846, 0.37 ) }
    dend_26 { pt3dadd( -5.29294, -204.408, 5.46681, 0.37 ) }
    dend_26 { pt3dadd( -5.50258, -205.136, 5.63509, 1.03 ) }
    dend_26 { pt3dadd( -5.65259, -205.626, 5.75235, 1.03 ) }
    dend_26 { pt3dadd( -5.92606, -206.54, 5.96703, 0.52 ) }
    dend_26 { pt3dadd( -6.26697, -208.074, 6.32485, 0.22 ) }
    dend_26 { pt3dadd( -6.36598, -208.807, 6.50777, 0.22 ) }
    dend_26 { pt3dadd( -6.46516, -209.634, 6.76842, 0.29 ) }
    dend_26 { pt3dadd( -6.54762, -210.278, 7.01839, 0.59 ) }
    dend_26 { pt3dadd( -6.62388, -210.817, 7.24659, 0.88 ) }
    dend_26 { pt3dadd( -6.7303, -211.451, 7.51291, 0.96 ) }
    dend_26 { pt3dadd( -6.89647, -212.411, 7.92029, 0.37 ) }
    dend_26 { pt3dadd( -7.09981, -213.558, 8.42206, 0.22 ) }
    dend_26 { pt3dadd( -7.18191, -214.124, 8.66517, 0.22 ) }
    dend_26 { pt3dadd( -7.23865, -214.759, 8.92349, 0.96 ) }
    dend_26 { pt3dadd( -7.28073, -215.868, 9.3379, 0.44 ) }
    dend_26 { pt3dadd( -7.24619, -216.984, 9.68802, 0.22 ) }
    dend_26 { pt3dadd( -7.16369, -217.698, 9.8462, 0.22 ) }
    dend_26 { pt3dadd( -7.0041, -218.635, 9.99538, 0.22 ) }
    dend_26 { pt3dadd( -6.94185, -218.99, 10.0463, 0.22 ) }
    dend_26 { pt3dadd( -6.84153, -219.655, 10.1352, 0.74 ) }
    dend_26 { pt3dadd( -6.77881, -220.451, 10.2297, 0.88 ) }
    dend_26 { pt3dadd( -6.8386, -221.492, 10.3183, 0.22 ) }
    dend_26 { pt3dadd( -6.98406, -222.211, 10.3654, 0.22 ) }
    dend_26 { pt3dadd( -7.16477, -222.777, 10.4131, 0.22 ) }
    dend_26 { pt3dadd( -7.41693, -223.408, 10.4913, 0.22 ) }
    dend_26 { pt3dadd( -7.70029, -224.018, 10.5865, 0.66 ) }
    dend_26 { pt3dadd( -8.05923, -224.733, 10.7345, 0.74 ) }
    dend_26 { pt3dadd( -8.55497, -225.679, 10.9583, 0.44 ) }
    dend_26 { pt3dadd( -9.04622, -226.618, 11.1655, 0.44 ) }
    dend_26 { pt3dadd( -9.67734, -227.787, 11.3784, 0.74 ) }
    dend_26 { pt3dadd( -10.3066, -228.899, 11.5425, 0.96 ) }
    dend_26 { pt3dadd( -10.8879, -229.889, 11.6454, 0.59 ) }
    dend_26 { pt3dadd( -11.5675, -231.007, 11.7029, 0.22 ) }
    dend_26 { pt3dadd( -12.084, -231.851, 11.7669, 0.22 ) }
    dend_26 { pt3dadd( -12.6219, -232.733, 11.8676, 0.22 ) }
    dend_26 { pt3dadd( -12.9938, -233.342, 11.9752, 0.22 ) }
    dend_26 { pt3dadd( -13.1558, -233.601, 12.0458, 0.22 ) }
    dend_26 { pt3dadd( -13.584, -234.275, 12.3156, 0.88 ) }
    dend_26 { pt3dadd( -14.6811, -236.065, 13.2707, 0.22 ) }
    dend_26 { pt3dadd( -15.0706, -236.718, 13.6686, 0.22 ) }
    dend_26 { pt3dadd( -15.3275, -237.164, 13.9499, 0.74 ) }
    dend_26 { pt3dadd( -15.633, -237.736, 14.2979, 0.96 ) }
    dend_26 { pt3dadd( -16.2773, -239.068, 15.0693, 0.37 ) }
    dend_26 { pt3dadd( -16.7019, -240.079, 15.6043, 0.22 ) }
    dend_26 { pt3dadd( -16.962, -240.813, 15.9101, 0.88 ) }
    dend_26 { pt3dadd( -17.0767, -241.227, 16.0788, 0.88 ) }
    dend_26 { pt3dadd( -17.2613, -242.207, 16.4769, 0.22 ) }
    dend_26 { pt3dadd( -17.3082, -242.651, 16.6445, 0.22 ) }
    dend_26 { pt3dadd( -17.3301, -243.092, 16.7893, 0.22 ) }
    dend_26 { pt3dadd( -17.358, -243.994, 17.0406, 0.81 ) }
    dend_26 { pt3dadd( -17.3574, -245.376, 17.3742, 0.29 ) }
    dend_26 { pt3dadd( -17.3237, -246.523, 17.6481, 0.44 ) }
    dend_26 { pt3dadd( -17.2691, -247.462, 17.8554, 0.88 ) }
    dend_26 { pt3dadd( -17.1977, -248.211, 18.0281, 0.88 ) }
    dend_26 { pt3dadd( -17.0606, -249.127, 18.2491, 0.29 ) }
    dend_26 { pt3dadd( -16.8758, -249.914, 18.455, 0.22 ) }
    dend_26 { pt3dadd( -16.6171, -250.707, 18.6783, 0.22 ) }
    dend_26 { pt3dadd( -16.3586, -251.279, 18.8975, 0.22 ) }
    dend_26 { pt3dadd( -16.0297, -251.903, 19.2015, 0.22 ) }
    dend_26 { pt3dadd( -15.7961, -252.326, 19.4461, 0.22 ) }
    dend_26 { pt3dadd( -15.4969, -252.944, 19.8293, 0.74 ) }
    dend_26 { pt3dadd( -15.4152, -253.198, 19.9894, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_26 { pt3dadd( -15.1508, -254.577, 20.7837, 0.22 ) }
    dend_26 { pt3dadd( -15.1124, -255.194, 21.1144, 0.22 ) }
    dend_26 { pt3dadd( -15.15, -255.703, 21.3547, 0.22 ) }
    dend_26 { pt3dadd( -15.3081, -256.477, 21.6808, 1.11 ) }
    dend_26 { pt3dadd( -15.6679, -257.486, 22.0274, 0.29 ) }
    dend_26 { pt3dadd( -16.0348, -258.265, 22.2229, 0.22 ) }
    dend_26 { pt3dadd( -16.4793, -259.066, 22.3246, 0.22 ) }
    dend_26 { pt3dadd( -16.8727, -259.799, 22.3867, 0.44 ) }
    dend_26 { pt3dadd( -17.2222, -260.507, 22.4715, 0.88 ) }
    dend_26 { pt3dadd( -17.7174, -261.642, 22.6925, 0.96 ) }
    dend_26 { pt3dadd( -18.0991, -262.719, 23.016, 0.29 ) }
    dend_26 { pt3dadd( -18.3143, -263.469, 23.3322, 0.66 ) }
    dend_26 { pt3dadd( -18.5207, -264.54, 23.8743, 0.74 ) }
    dend_26 { pt3dadd( -18.6514, -265.853, 24.6123, 0.29 ) }
    dend_26 { pt3dadd( -18.6536, -266.922, 25.227, 0.66 ) }
    dend_26 { pt3dadd( -18.5234, -268.218, 26.0017, 0.22 ) }
    dend_26 { pt3dadd( -18.4468, -268.727, 26.3254, 0.22 ) }
    dend_26 { pt3dadd( -18.3475, -269.352, 26.7338, 0.81 ) }
    dend_26 { pt3dadd( -18.2757, -269.826, 27.0137, 0.96 ) }
    dend_26 { pt3dadd( -18.1344, -270.781, 27.5037, 0.37 ) }
    dend_26 { pt3dadd( -18.0133, -271.765, 27.9627, 0.22 ) }
    dend_26 { pt3dadd( -17.9746, -272.489, 28.2957, 0.22 ) }
    dend_26 { pt3dadd( -17.9722, -272.988, 28.5466, 0.22 ) }
    dend_26 { pt3dadd( -17.9758, -273.306, 28.7361, 0.66 ) }
    dend_26 { pt3dadd( -17.9844, -273.766, 29.0519, 1.11 ) }
    dend_26 { pt3dadd( -18.0038, -274.521, 29.5935, 0.88 ) }
    dend_26 { pt3dadd( -18.0524, -275.611, 30.2552, 0.22 ) }
    dend_26 { pt3dadd( -18.1081, -276.632, 30.7613, 0.88 ) }
    dend_26 { pt3dadd( -18.2065, -277.841, 31.2724, 0.22 ) }
    dend_26 { pt3dadd( -18.286, -278.568, 31.5293, 0.22 ) }
    dend_26 { pt3dadd( -18.3912, -279.272, 31.7471, 0.74 ) }
    dend_26 { pt3dadd( -18.6496, -280.597, 32.1842, 0.15 ) }
    dend_26 { pt3dadd( -18.8782, -281.471, 32.4632, 0.15 ) }
    dend_26 { pt3dadd( -19.0418, -281.949, 32.6122, 0.66 ) }
    dend_26 { pt3dadd( -19.3038, -282.618, 32.8012, 0.81 ) }
    dend_26 { pt3dadd( -19.7537, -283.722, 33.1438, 0.22 ) }
    dend_26 { pt3dadd( -20.1992, -284.8, 33.6363, 0.22 ) }
    dend_26 { pt3dadd( -20.3781, -285.26, 33.9549, 0.59 ) }
    dend_26 { pt3dadd( -20.6535, -285.952, 34.556, 1.03 ) }
    // Section: dend_22, id: dend_22, parent: dend_0 (entry count 39/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.65966, 1.40539, -10.46, 1.99 ) }
    dend_22 { pt3dadd( -1.69213, 2.87281, -11.6911, 1.99 ) }
    dend_22 { pt3dadd( -1.79036, 4.30649, -12.826, 1.77 ) }
    dend_22 { pt3dadd( -1.95237, 5.36086, -13.6245, 1.84 ) }
    dend_22 { pt3dadd( -2.16276, 6.34991, -14.3402, 1.4 ) }
    dend_22 { pt3dadd( -2.44729, 7.37908, -15.0554, 1.25 ) }
    dend_22 { pt3dadd( -2.78229, 8.33858, -15.6967, 1.4 ) }
    dend_22 { pt3dadd( -3.14273, 9.13754, -16.1824, 1.4 ) }
    dend_22 { pt3dadd( -3.79995, 10.3853, -16.8174, 1.03 ) }
    dend_22 { pt3dadd( -4.43641, 11.5229, -17.2938, 1.03 ) }
    dend_22 { pt3dadd( -5.19093, 12.7815, -17.7742, 1.11 ) }
    dend_22 { pt3dadd( -6.02024, 14.1102, -18.2445, 0.96 ) }
    dend_22 { pt3dadd( -6.91261, 15.5598, -18.7228, 0.96 ) }
    dend_22 { pt3dadd( -7.74718, 16.9693, -19.1715, 0.88 ) }
    dend_22 { pt3dadd( -8.25397, 17.8832, -19.4138, 1.18 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 54/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.65966, 1.40539, -10.46, 3.32 ) }
    dend_1 { pt3dadd( -3.27965, 0.515396, -10.46, 3.32 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 2.44158, 39.2021, 0.0, 0.289528 ) }
    axon_1 { pt3dadd( 3.27908, 54.1787, 0.0, 0.289528 ) }
    axon_1 { pt3dadd( 4.11658, 69.1553, 0.0, 0.289528 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 59/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -3.54943, 33.9053, 12.9543, 1.7 ) }
    dend_48 { pt3dadd( -3.77469, 34.7485, 13.3554, 1.7 ) }
    dend_48 { pt3dadd( -4.06609, 35.855, 13.8792, 1.03 ) }
    dend_48 { pt3dadd( -4.42361, 37.2126, 14.5219, 0.74 ) }
    dend_48 { pt3dadd( -4.6806, 38.1885, 14.9839, 0.74 ) }
    dend_48 { pt3dadd( -4.92979, 39.1347, 15.4318, 0.74 ) }
    dend_48 { pt3dadd( -5.13134, 39.9001, 15.7941, 1.03 ) }
    dend_48 { pt3dadd( -5.37388, 40.9257, 16.3555, 1.84 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 67/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -3.54943, 33.9053, 12.9543, 0.29 ) }
    dend_47 { pt3dadd( -3.35036, 34.3677, 13.6401, 0.29 ) }
    dend_47 { pt3dadd( -2.94554, 35.2056, 14.7728, 0.22 ) }
    dend_47 { pt3dadd( -2.61851, 35.8532, 15.4917, 0.22 ) }
    dend_47 { pt3dadd( -2.38391, 36.3285, 15.9863, 0.37 ) }
    dend_47 { pt3dadd( -2.09216, 36.9534, 16.608, 0.37 ) }
    dend_47 { pt3dadd( -1.78835, 37.6299, 17.2761, 0.37 ) }
    dend_47 { pt3dadd( -1.5368, 38.2168, 17.8222, 0.37 ) }
    dend_47 { pt3dadd( -1.15655, 39.1099, 18.5638, 0.22 ) }
    dend_47 { pt3dadd( -0.79959, 39.8868, 19.1836, 0.22 ) }
    dend_47 { pt3dadd( -0.427255, 40.6988, 19.8267, 0.22 ) }
    dend_47 { pt3dadd( -0.21209, 41.1535, 20.194, 0.22 ) }
    dend_47 { pt3dadd( 0.0448181, 41.6925, 20.6713, 0.22 ) }
    dend_47 { pt3dadd( 0.207592, 42.0145, 21.0057, 0.37 ) }
    dend_47 { pt3dadd( 0.659551, 42.8243, 21.9412, 0.37 ) }
    dend_47 { pt3dadd( 1.01571, 43.397, 22.5876, 0.22 ) }
    dend_47 { pt3dadd( 1.52774, 44.167, 23.4808, 0.44 ) }
    dend_47 { pt3dadd( 1.90618, 44.737, 24.1667, 0.81 ) }
    dend_47 { pt3dadd( 2.27981, 45.3115, 24.8807, 0.81 ) }
    dend_47 { pt3dadd( 2.74017, 46.0261, 25.7937, 0.29 ) }
    dend_47 { pt3dadd( 3.17704, 46.7206, 26.6781, 0.22 ) }
    dend_47 { pt3dadd( 3.60699, 47.4046, 27.5353, 0.22 ) }
    dend_47 { pt3dadd( 4.00992, 48.0693, 28.2985, 0.22 ) }
    dend_47 { pt3dadd( 4.35491, 48.6569, 28.9305, 0.22 ) }
    dend_47 { pt3dadd( 4.70433, 49.2451, 29.5483, 0.22 ) }
    dend_47 { pt3dadd( 5.1083, 49.8861, 30.2672, 0.22 ) }
    dend_47 { pt3dadd( 5.30649, 50.1945, 30.6421, 0.66 ) }
    dend_47 { pt3dadd( 5.54333, 50.5447, 31.0613, 1.55 ) }
    dend_47 { pt3dadd( 6.16345, 51.4034, 32.1017, 2.06 ) }
    dend_47 { pt3dadd( 7.07454, 52.6055, 33.5302, 0.22 ) }
    dend_47 { pt3dadd( 7.59859, 53.2918, 34.3417, 0.22 ) }
    dend_47 { pt3dadd( 8.08134, 53.9149, 35.0982, 0.22 ) }
    dend_47 { pt3dadd( 8.46571, 54.4286, 35.7191, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_47 { pt3dadd( 8.83659, 54.9613, 36.3742, 0.44 ) }
    dend_47 { pt3dadd( 9.24448, 55.6246, 37.1481, 0.22 ) }
    dend_47 { pt3dadd( 9.67661, 56.5331, 38.0675, 0.22 ) }
    dend_47 { pt3dadd( 10.0569, 57.5406, 38.9314, 0.44 ) }
    dend_47 { pt3dadd( 10.3635, 58.5309, 39.7213, 0.15 ) }
    dend_47 { pt3dadd( 10.5969, 59.5677, 40.5468, 0.15 ) }
    dend_47 { pt3dadd( 10.6806, 60.0973, 40.955, 0.15 ) }
    dend_47 { pt3dadd( 10.8054, 61.1636, 41.7448, 0.15 ) }
    dend_47 { pt3dadd( 10.9146, 62.0257, 42.3204, 0.37 ) }
    dend_47 { pt3dadd( 11.0367, 62.8107, 42.8281, 0.59 ) }
    dend_47 { pt3dadd( 11.2545, 63.7702, 43.457, 1.25 ) }
    dend_47 { pt3dadd( 11.5299, 64.6405, 44.0601, 2.21 ) }
    dend_47 { pt3dadd( 11.77, 65.2133, 44.5074, 2.21 ) }
    dend_47 { pt3dadd( 12.367, 66.3267, 45.4411, 0.52 ) }
    dend_47 { pt3dadd( 12.9606, 67.2502, 46.2507, 0.15 ) }
    dend_47 { pt3dadd( 13.4853, 67.9614, 46.8446, 0.15 ) }
    dend_47 { pt3dadd( 13.9721, 68.5394, 47.3058, 0.29 ) }
    dend_47 { pt3dadd( 14.3953, 68.9952, 47.6541, 0.29 ) }
    dend_47 { pt3dadd( 14.9397, 69.5779, 48.0555, 0.07 ) }
    dend_47 { pt3dadd( 15.5298, 70.2124, 48.4431, 0.07 ) }
    dend_47 { pt3dadd( 15.9824, 70.7104, 48.7218, 0.07 ) }
    dend_47 { pt3dadd( 16.3623, 71.148, 48.9483, 0.88 ) }
    dend_47 { pt3dadd( 16.8317, 71.7157, 49.2238, 1.62 ) }
    dend_47 { pt3dadd( 18.0881, 73.3034, 49.9329, 0.15 ) }
    dend_47 { pt3dadd( 18.7108, 74.0932, 50.2928, 0.15 ) }
    dend_47 { pt3dadd( 19.3292, 74.8804, 50.6553, 0.15 ) }
    dend_47 { pt3dadd( 19.7871, 75.4508, 50.926, 0.29 ) }
    dend_47 { pt3dadd( 20.3015, 76.0704, 51.2876, 0.29 ) }
    dend_47 { pt3dadd( 21.2792, 77.2007, 52.0928, 0.07 ) }
    dend_47 { pt3dadd( 22.0333, 78.0398, 52.7912, 0.07 ) }
    dend_47 { pt3dadd( 22.4345, 78.4861, 53.1961, 0.07 ) }
    dend_47 { pt3dadd( 23.0086, 79.1128, 53.8148, 0.96 ) }
    dend_47 { pt3dadd( 24.2748, 80.4553, 55.2604, 0.15 ) }
    dend_47 { pt3dadd( 24.8663, 81.0809, 55.9707, 0.15 ) }
    dend_47 { pt3dadd( 25.279, 81.5133, 56.5114, 0.15 ) }
    dend_47 { pt3dadd( 25.5838, 81.8472, 56.8939, 0.15 ) }
    dend_47 { pt3dadd( 25.9284, 82.2322, 57.3074, 0.37 ) }
    dend_47 { pt3dadd( 26.3117, 82.6835, 57.7375, 0.37 ) }
    dend_47 { pt3dadd( 27.0751, 83.5993, 58.4502, 0.15 ) }
    dend_47 { pt3dadd( 27.7089, 84.3839, 59.0187, 0.15 ) }
    dend_47 { pt3dadd( 28.3199, 85.1882, 59.6107, 0.15 ) }
    dend_47 { pt3dadd( 29.0193, 86.1563, 60.3344, 0.15 ) }
    dend_47 { pt3dadd( 29.4086, 86.7115, 60.7532, 0.15 ) }
    dend_47 { pt3dadd( 30.0561, 87.6476, 61.4552, 0.15 ) }
    dend_47 { pt3dadd( 30.811, 88.7527, 62.2647, 0.07 ) }
    dend_47 { pt3dadd( 31.6633, 90.0635, 63.1908, 0.07 ) }
    dend_47 { pt3dadd( 32.4691, 91.3264, 64.1384, 0.07 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 47/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -85.5365, -222.348, 41.8412, 0.74 ) }
    dend_38 { pt3dadd( -85.856, -223.235, 41.5721, 0.74 ) }
    dend_38 { pt3dadd( -86.232, -224.199, 41.2997, 0.29 ) }
    dend_38 { pt3dadd( -86.7882, -225.469, 40.9435, 0.07 ) }
    dend_38 { pt3dadd( -87.2719, -226.513, 40.6292, 0.15 ) }
    dend_38 { pt3dadd( -87.5843, -227.181, 40.4246, 0.52 ) }
    dend_38 { pt3dadd( -87.8638, -227.766, 40.2301, 0.74 ) }
    dend_38 { pt3dadd( -88.1014, -228.222, 40.0625, 0.88 ) }
    dend_38 { pt3dadd( -88.7666, -229.425, 39.6293, 0.22 ) }
    dend_38 { pt3dadd( -89.1941, -230.176, 39.3709, 0.22 ) }
    dend_38 { pt3dadd( -89.6176, -230.949, 39.1156, 0.22 ) }
    dend_38 { pt3dadd( -90.0601, -231.815, 38.8294, 0.15 ) }
    dend_38 { pt3dadd( -90.3724, -232.459, 38.6097, 0.74 ) }
    dend_38 { pt3dadd( -90.811, -233.395, 38.2709, 0.88 ) }
    dend_38 { pt3dadd( -91.1914, -234.254, 37.9567, 0.22 ) }
    dend_38 { pt3dadd( -91.6057, -235.221, 37.574, 0.15 ) }
    dend_38 { pt3dadd( -91.9051, -235.997, 37.2115, 0.15 ) }
    dend_38 { pt3dadd( -92.105, -236.583, 36.8997, 0.29 ) }
    dend_38 { pt3dadd( -92.3092, -237.217, 36.5073, 0.66 ) }
    dend_38 { pt3dadd( -92.5901, -238.021, 35.954, 1.03 ) }
    dend_38 { pt3dadd( -92.9945, -238.91, 35.2874, 0.37 ) }
    dend_38 { pt3dadd( -93.5258, -239.838, 34.5429, 0.22 ) }
    dend_38 { pt3dadd( -93.8613, -240.362, 34.1296, 0.44 ) }
    dend_38 { pt3dadd( -94.1954, -240.854, 33.766, 0.74 ) }
    dend_38 { pt3dadd( -94.739, -241.624, 33.2636, 1.03 ) }
    dend_38 { pt3dadd( -95.7083, -242.923, 32.5291, 0.29 ) }
    dend_38 { pt3dadd( -96.2802, -243.679, 32.1839, 0.29 ) }
    dend_38 { pt3dadd( -96.7979, -244.379, 31.9266, 0.74 ) }
    dend_38 { pt3dadd( -97.2284, -244.995, 31.7364, 0.74 ) }
    dend_38 { pt3dadd( -98.0073, -246.179, 31.4062, 0.29 ) }
    dend_38 { pt3dadd( -98.6987, -247.274, 31.137, 0.22 ) }
    dend_38 { pt3dadd( -99.0835, -247.868, 30.9982, 0.22 ) }
    dend_38 { pt3dadd( -99.6196, -248.542, 30.7978, 0.22 ) }
    dend_38 { pt3dadd( -100.086, -248.996, 30.5921, 0.29 ) }
    dend_38 { pt3dadd( -100.567, -249.364, 30.3396, 0.74 ) }
    dend_38 { pt3dadd( -101.193, -249.755, 29.9666, 0.96 ) }
    dend_38 { pt3dadd( -102.116, -250.305, 29.3775, 0.44 ) }
    dend_38 { pt3dadd( -103.144, -250.956, 28.7052, 0.22 ) }
    dend_38 { pt3dadd( -103.676, -251.329, 28.3624, 0.22 ) }
    dend_38 { pt3dadd( -104.163, -251.725, 28.0616, 0.22 ) }
    dend_38 { pt3dadd( -104.722, -252.251, 27.7767, 0.81 ) }
    dend_38 { pt3dadd( -105.304, -252.897, 27.5351, 0.44 ) }
    dend_38 { pt3dadd( -105.803, -253.537, 27.3901, 0.22 ) }
    dend_38 { pt3dadd( -106.226, -254.111, 27.2793, 0.37 ) }
    dend_38 { pt3dadd( -106.489, -254.448, 27.196, 0.37 ) }
    dend_38 { pt3dadd( -107.333, -255.376, 26.8877, 0.22 ) }
    dend_38 { pt3dadd( -107.673, -255.685, 26.7415, 0.59 ) }
    dend_38 { pt3dadd( -108.442, -256.283, 26.3791, 0.88 ) }
    dend_38 { pt3dadd( -109.221, -256.871, 25.9609, 0.22 ) }
    dend_38 { pt3dadd( -109.819, -257.339, 25.6025, 0.22 ) }
    dend_38 { pt3dadd( -110.225, -257.671, 25.3325, 0.22 ) }
    dend_38 { pt3dadd( -110.702, -258.087, 24.9855, 0.22 ) }
    dend_38 { pt3dadd( -111.185, -258.531, 24.6381, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( -111.974, -259.357, 24.0835, 0.15 ) }
    dend_38 { pt3dadd( -112.25, -259.707, 23.8576, 0.15 ) }
    dend_38 { pt3dadd( -112.526, -260.12, 23.6034, 0.15 ) }
    dend_38 { pt3dadd( -112.65, -260.346, 23.4491, 0.15 ) }
    dend_38 { pt3dadd( -112.776, -260.635, 23.244, 0.15 ) }
    dend_38 { pt3dadd( -113.01, -261.233, 22.7832, 0.88 ) }
    dend_38 { pt3dadd( -113.525, -262.478, 21.8056, 0.22 ) }
    dend_38 { pt3dadd( -113.629, -262.698, 21.6296, 0.22 ) }
    dend_38 { pt3dadd( -113.91, -263.228, 21.2132, 0.22 ) }
    dend_38 { pt3dadd( -114.244, -263.822, 20.7736, 0.22 ) }
    dend_38 { pt3dadd( -114.464, -264.201, 20.5248, 0.22 ) }
    dend_38 { pt3dadd( -114.88, -264.894, 20.1524, 0.66 ) }
    dend_38 { pt3dadd( -115.511, -265.851, 19.7873, 0.29 ) }
    dend_38 { pt3dadd( -115.988, -266.553, 19.572, 0.29 ) }
    dend_38 { pt3dadd( -116.401, -267.168, 19.4266, 0.44 ) }
    dend_38 { pt3dadd( -116.875, -267.914, 19.2794, 0.74 ) }
    dend_38 { pt3dadd( -117.236, -268.549, 19.1894, 0.81 ) }
    dend_38 { pt3dadd( -117.918, -269.792, 19.0702, 0.22 ) }
    dend_38 { pt3dadd( -118.381, -270.572, 19.0451, 0.22 ) }
    dend_38 { pt3dadd( -118.598, -270.907, 19.0422, 0.22 ) }
    dend_38 { pt3dadd( -118.857, -271.293, 19.0411, 0.22 ) }
    dend_38 { pt3dadd( -119.237, -271.876, 19.0118, 0.22 ) }
    dend_38 { pt3dadd( -119.762, -272.723, 18.8792, 0.59 ) }
    dend_38 { pt3dadd( -120.306, -273.648, 18.6, 0.22 ) }
    dend_38 { pt3dadd( -120.652, -274.23, 18.3545, 0.22 ) }
    dend_38 { pt3dadd( -121.089, -274.908, 17.9686, 0.59 ) }
    dend_38 { pt3dadd( -121.729, -275.84, 17.3263, 0.22 ) }
    dend_38 { pt3dadd( -122.2, -276.543, 16.7737, 0.22 ) }
    dend_38 { pt3dadd( -122.538, -277.092, 16.3178, 0.44 ) }
    dend_38 { pt3dadd( -122.913, -277.759, 15.7782, 1.03 ) }
    dend_38 { pt3dadd( -123.419, -278.69, 15.0702, 0.22 ) }
    dend_38 { pt3dadd( -123.644, -279.149, 14.7814, 0.22 ) }
    dend_38 { pt3dadd( -123.847, -279.698, 14.5698, 0.22 ) }
    dend_38 { pt3dadd( -123.992, -280.339, 14.4247, 0.22 ) }
    dend_38 { pt3dadd( -124.137, -281.326, 14.274, 0.22 ) }
    dend_38 { pt3dadd( -124.175, -281.659, 14.2352, 0.44 ) }
    dend_38 { pt3dadd( -124.254, -282.485, 14.1646, 0.88 ) }
    dend_38 { pt3dadd( -124.327, -283.218, 14.0967, 0.88 ) }
    dend_38 { pt3dadd( -124.515, -284.722, 13.9499, 0.22 ) }
    dend_38 { pt3dadd( -124.649, -285.559, 13.8595, 0.22 ) }
    dend_38 { pt3dadd( -124.872, -286.692, 13.7064, 0.22 ) }
    dend_38 { pt3dadd( -124.988, -287.201, 13.6393, 0.22 ) }
    dend_38 { pt3dadd( -125.108, -287.629, 13.5862, 0.59 ) }
    dend_38 { pt3dadd( -125.346, -288.329, 13.5055, 0.81 ) }
    dend_38 { pt3dadd( -125.515, -288.755, 13.4497, 0.59 ) }
    dend_38 { pt3dadd( -125.915, -289.721, 13.282, 0.22 ) }
    dend_38 { pt3dadd( -126.19, -290.349, 13.1557, 0.22 ) }
    dend_38 { pt3dadd( -126.512, -290.952, 13.0274, 0.22 ) }
    dend_38 { pt3dadd( -126.847, -291.467, 12.8899, 0.22 ) }
    dend_38 { pt3dadd( -127.42, -292.221, 12.6463, 0.22 ) }
    dend_38 { pt3dadd( -127.848, -292.736, 12.4456, 0.44 ) }
    dend_38 { pt3dadd( -128.346, -293.298, 12.1855, 0.74 ) }
    dend_38 { pt3dadd( -128.902, -293.96, 11.8274, 0.29 ) }
    dend_38 { pt3dadd( -129.404, -294.616, 11.4242, 0.22 ) }
    dend_38 { pt3dadd( -129.534, -294.794, 11.309, 0.22 ) }
    dend_38 { pt3dadd( -129.811, -295.157, 11.0515, 0.22 ) }
    dend_38 { pt3dadd( -130.092, -295.526, 10.7777, 0.22 ) }
    dend_38 { pt3dadd( -130.406, -295.966, 10.4724, 0.29 ) }
    dend_38 { pt3dadd( -130.767, -296.555, 10.1355, 0.66 ) }
    dend_38 { pt3dadd( -131.097, -297.108, 9.88532, 0.88 ) }
    dend_38 { pt3dadd( -131.92, -298.386, 9.37446, 0.22 ) }
    dend_38 { pt3dadd( -132.271, -298.88, 9.20154, 0.22 ) }
    dend_38 { pt3dadd( -132.712, -299.435, 9.03033, 0.22 ) }
    dend_38 { pt3dadd( -133.355, -300.138, 8.8956, 0.22 ) }
    dend_38 { pt3dadd( -133.913, -300.692, 8.87189, 0.15 ) }
    dend_38 { pt3dadd( -134.295, -301.059, 8.90436, 0.15 ) }
    dend_38 { pt3dadd( -134.565, -301.317, 8.96469, 0.52 ) }
    dend_38 { pt3dadd( -135.029, -301.767, 9.0849, 0.81 ) }
    dend_38 { pt3dadd( -136.019, -302.836, 9.33193, 0.15 ) }
    dend_38 { pt3dadd( -136.394, -303.312, 9.40291, 0.15 ) }
    dend_38 { pt3dadd( -136.88, -304.102, 9.45021, 0.15 ) }
    dend_38 { pt3dadd( -136.981, -304.298, 9.44615, 0.37 ) }
    dend_38 { pt3dadd( -137.259, -304.923, 9.38475, 0.74 ) }
    dend_38 { pt3dadd( -137.692, -306.025, 9.19678, 0.15 ) }
    dend_38 { pt3dadd( -137.918, -306.662, 9.03788, 0.15 ) }
    dend_38 { pt3dadd( -138.129, -307.289, 8.8797, 0.37 ) }
    dend_38 { pt3dadd( -138.318, -307.883, 8.71818, 0.37 ) }
    dend_38 { pt3dadd( -138.529, -308.629, 8.51304, 0.37 ) }
    dend_38 { pt3dadd( -138.774, -309.59, 8.23757, 0.29 ) }
    dend_38 { pt3dadd( -139.022, -310.625, 7.95542, 0.81 ) }
    dend_38 { pt3dadd( -139.18, -311.405, 7.74473, 0.66 ) }
    dend_38 { pt3dadd( -139.304, -312.138, 7.52163, 0.59 ) }
    dend_38 { pt3dadd( -139.416, -312.93, 7.24038, 0.15 ) }
    dend_38 { pt3dadd( -139.512, -313.485, 7.01418, 0.15 ) }
    dend_38 { pt3dadd( -139.642, -314.002, 6.77001, 0.66 ) }
    dend_38 { pt3dadd( -139.719, -314.229, 6.65339, 0.66 ) }
    dend_38 { pt3dadd( -140.054, -315.06, 6.22388, 0.22 ) }
    dend_38 { pt3dadd( -140.283, -315.658, 5.93872, 0.22 ) }
    dend_38 { pt3dadd( -140.538, -316.388, 5.60703, 0.59 ) }
    dend_38 { pt3dadd( -140.8, -317.345, 5.21066, 0.15 ) }
    dend_38 { pt3dadd( -140.905, -317.826, 5.02433, 0.15 ) }
    dend_38 { pt3dadd( -141.039, -318.514, 4.77575, 0.81 ) }
    dend_38 { pt3dadd( -141.264, -319.92, 4.31788, 0.15 ) }
    dend_38 { pt3dadd( -141.342, -320.489, 4.15531, 0.52 ) }
    dend_38 { pt3dadd( -141.444, -321.371, 3.92952, 0.15 ) }
    dend_38 { pt3dadd( -141.508, -321.785, 3.83025, 0.15 ) }
    dend_38 { pt3dadd( -141.719, -322.71, 3.58005, 0.15 ) }
    dend_38 { pt3dadd( -141.814, -323.022, 3.48482, 0.15 ) }
    dend_38 { pt3dadd( -142.091, -323.762, 3.24793, 0.88 ) }
    dend_38 { pt3dadd( -142.373, -324.465, 3.00919, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_38 { pt3dadd( -142.843, -325.545, 2.6228, 0.15 ) }
    dend_38 { pt3dadd( -143.302, -326.596, 2.2325, 0.15 ) }
    dend_38 { pt3dadd( -143.524, -327.097, 2.0429, 0.22 ) }
    dend_38 { pt3dadd( -143.811, -327.684, 1.80189, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 4/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -85.5365, -222.348, 41.8412, 0.07 ) }
    dend_37 { pt3dadd( -85.8963, -221.694, 41.1103, 0.07 ) }
    dend_37 { pt3dadd( -86.222, -221.112, 40.5342, 0.07 ) }
    dend_37 { pt3dadd( -86.54, -220.582, 40.0252, 0.37 ) }
    dend_37 { pt3dadd( -87.1274, -219.648, 39.1782, 0.07 ) }
    dend_37 { pt3dadd( -87.3502, -219.306, 38.8865, 0.07 ) }
    dend_37 { pt3dadd( -87.7173, -218.772, 38.434, 0.22 ) }
    dend_37 { pt3dadd( -88.4517, -217.796, 37.6573, 0.07 ) }
    dend_37 { pt3dadd( -89.0338, -217.121, 37.132, 0.07 ) }
    dend_37 { pt3dadd( -89.4463, -216.691, 36.7961, 0.07 ) }
    dend_37 { pt3dadd( -89.828, -216.349, 36.5353, 0.22 ) }
    dend_37 { pt3dadd( -90.5558, -215.761, 36.0856, 0.07 ) }
    dend_37 { pt3dadd( -91.025, -215.412, 35.8032, 0.37 ) }
    dend_37 { pt3dadd( -92.4413, -214.443, 35.0074, 0.07 ) }
    dend_37 { pt3dadd( -92.908, -214.138, 34.7548, 0.22 ) }
    dend_37 { pt3dadd( -94.0784, -213.412, 34.1124, 0.07 ) }
    dend_37 { pt3dadd( -94.5696, -213.12, 33.8485, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -20.6535, -285.952, 34.556, 0.15 ) }
    dend_30 { pt3dadd( -21.0229, -286.671, 35.5414, 0.15 ) }
    dend_30 { pt3dadd( -21.3584, -287.44, 36.4332, 0.15 ) }
    dend_30 { pt3dadd( -21.615, -288.109, 37.1308, 0.07 ) }
    dend_30 { pt3dadd( -21.8269, -288.703, 37.7464, 0.07 ) }
    dend_30 { pt3dadd( -21.9809, -289.153, 38.2059, 0.07 ) }
    dend_30 { pt3dadd( -22.0885, -289.473, 38.5255, 0.37 ) }
    dend_30 { pt3dadd( -22.2628, -290.088, 39.078, 0.66 ) }
    dend_30 { pt3dadd( -22.5503, -291.114, 39.9537, 0.07 ) }
    dend_30 { pt3dadd( -22.7014, -291.708, 40.4927, 0.07 ) }
    dend_30 { pt3dadd( -22.8344, -292.267, 41.0464, 0.07 ) }
    dend_30 { pt3dadd( -22.8947, -292.547, 41.3585, 0.52 ) }
    dend_30 { pt3dadd( -22.988, -293.062, 41.9709, 0.88 ) }
    dend_30 { pt3dadd( -23.1117, -294.001, 43.141, 0.15 ) }
    dend_30 { pt3dadd( -23.1821, -294.818, 44.1716, 0.15 ) }
    dend_30 { pt3dadd( -23.2058, -295.253, 44.704, 0.15 ) }
    dend_30 { pt3dadd( -23.1973, -295.832, 45.4279, 0.15 ) }
    dend_30 { pt3dadd( -23.1494, -296.388, 46.1382, 0.88 ) }
    dend_30 { pt3dadd( -22.9805, -297.409, 47.4859, 0.07 ) }
    dend_30 { pt3dadd( -22.9051, -297.738, 47.9288, 0.07 ) }
    dend_30 { pt3dadd( -22.8202, -298.096, 48.3902, 0.37 ) }
    dend_30 { pt3dadd( -22.6268, -298.961, 49.465, 0.15 ) }
    dend_30 { pt3dadd( -22.5183, -299.504, 50.113, 0.37 ) }
    dend_30 { pt3dadd( -22.4101, -300.266, 51.0303, 0.22 ) }
    dend_30 { pt3dadd( -22.3631, -300.887, 51.7455, 0.44 ) }
    dend_30 { pt3dadd( -22.3598, -301.389, 52.3007, 0.81 ) }
    dend_30 { pt3dadd( -22.4132, -302.064, 53.0144, 0.29 ) }
    dend_30 { pt3dadd( -22.6009, -302.874, 53.7674, 0.15 ) }
    dend_30 { pt3dadd( -22.9518, -303.875, 54.5656, 0.15 ) }
    dend_30 { pt3dadd( -23.3001, -304.7, 55.1041, 0.15 ) }
    dend_30 { pt3dadd( -23.5364, -305.221, 55.3925, 0.81 ) }
    dend_30 { pt3dadd( -23.7839, -305.784, 55.6619, 1.47 ) }
    dend_30 { pt3dadd( -24.5459, -307.598, 56.3724, 0.15 ) }
    dend_30 { pt3dadd( -25.0393, -308.876, 56.8879, 0.07 ) }
    dend_30 { pt3dadd( -25.5257, -310.248, 57.4293, 0.07 ) }
    dend_30 { pt3dadd( -25.7678, -310.969, 57.7418, 0.15 ) }
    dend_30 { pt3dadd( -26.1427, -312.178, 58.2836, 0.07 ) }
    dend_30 { pt3dadd( -26.3367, -312.843, 58.5846, 0.22 ) }
    dend_30 { pt3dadd( -27.1342, -315.641, 59.9472, 0.07 ) }
    dend_30 { pt3dadd( -27.391, -316.458, 60.369, 0.29 ) }
    dend_30 { pt3dadd( -27.9703, -318.074, 61.2376, 0.07 ) }
    dend_30 { pt3dadd( -28.2995, -318.887, 61.6671, 0.07 ) }
    dend_30 { pt3dadd( -28.7061, -319.766, 62.1192, 0.44 ) }
    dend_30 { pt3dadd( -29.486, -321.374, 62.9091, 0.15 ) }
    dend_30 { pt3dadd( -30.1023, -322.593, 63.4546, 0.07 ) }
    dend_30 { pt3dadd( -30.4582, -323.287, 63.7809, 0.07 ) }
    dend_30 { pt3dadd( -30.8046, -323.962, 64.1102, 0.29 ) }
    dend_30 { pt3dadd( -31.8255, -325.957, 65.158, 0.07 ) }
    dend_30 { pt3dadd( -32.3434, -326.995, 65.7228, 0.07 ) }
    dend_30 { pt3dadd( -32.7396, -327.808, 66.1595, 0.07 ) }
    dend_30 { pt3dadd( -33.1269, -328.613, 66.6195, 0.07 ) }
    dend_30 { pt3dadd( -33.4952, -329.367, 67.0555, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 73/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -20.6535, -285.952, 34.556, 0.22 ) }
    dend_27 { pt3dadd( -20.2277, -286.621, 35.1404, 0.22 ) }
    dend_27 { pt3dadd( -19.4599, -287.661, 36.0797, 0.37 ) }
    dend_27 { pt3dadd( -18.9248, -288.313, 36.7123, 0.15 ) }
    dend_27 { pt3dadd( -18.4877, -288.823, 37.2137, 0.15 ) }
    dend_27 { pt3dadd( -18.3321, -288.988, 37.4042, 0.37 ) }
    dend_27 { pt3dadd( -17.955, -289.375, 37.9226, 0.88 ) }
    dend_27 { pt3dadd( -17.1541, -290.104, 39.1209, 0.15 ) }
    dend_27 { pt3dadd( -16.7743, -290.431, 39.7707, 0.52 ) }
    dend_27 { pt3dadd( -16.6627, -290.53, 39.9846, 1.03 ) }
    dend_27 { pt3dadd( -15.9265, -291.219, 41.5771, 0.22 ) }
    dend_27 { pt3dadd( -15.4526, -291.693, 42.7223, 0.22 ) }
    dend_27 { pt3dadd( -15.3203, -291.833, 43.0721, 0.37 ) }
    dend_27 { pt3dadd( -14.8058, -292.495, 44.6297, 0.22 ) }
    dend_27 { pt3dadd( -14.6266, -292.774, 45.2155, 0.22 ) }
    dend_27 { pt3dadd( -14.4168, -293.177, 45.9655, 0.22 ) }
    dend_27 { pt3dadd( -14.2845, -293.504, 46.4798, 0.22 ) }
    dend_27 { pt3dadd( -14.1472, -293.877, 46.9869, 0.88 ) }
    dend_27 { pt3dadd( -13.7462, -294.953, 48.2397, 0.15 ) }
    dend_27 { pt3dadd( -13.5297, -295.532, 48.7969, 0.22 ) }
    dend_27 { pt3dadd( -13.2492, -296.272, 49.3486, 0.07 ) }
    dend_27 { pt3dadd( -12.8899, -297.216, 49.8714, 0.07 ) }
    dend_27 { pt3dadd( -12.5343, -298.161, 50.1819, 1.18 ) }
    dend_27 { pt3dadd( -11.9838, -299.717, 50.4105, 0.07 ) }
    dend_27 { pt3dadd( -11.7693, -300.387, 50.361, 0.74 ) }
    dend_27 { pt3dadd( -11.2869, -302.115, 50.0132, 0.07 ) }
    dend_27 { pt3dadd( -11.1762, -302.615, 49.8461, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_27 { pt3dadd( -10.9151, -304.403, 49.038, 0.07 ) }
    dend_27 { pt3dadd( -10.8537, -305.347, 48.5735, 1.11 ) }
    dend_27 { pt3dadd( -10.873, -307.166, 47.5556, 0.07 ) }
    dend_27 { pt3dadd( -10.8901, -307.581, 47.3101, 0.22 ) }
    dend_27 { pt3dadd( -10.9824, -308.911, 46.5021, 0.07 ) }
    dend_27 { pt3dadd( -11.022, -309.546, 46.0578, 0.07 ) }
    dend_27 { pt3dadd( -11.0614, -310.482, 45.2404, 0.96 ) }
    dend_27 { pt3dadd( -11.0052, -311.569, 44.1351, 0.07 ) }
    dend_27 { pt3dadd( -10.9277, -311.969, 43.6967, 0.07 ) }
    dend_27 { pt3dadd( -10.8687, -312.173, 43.4482, 0.29 ) }
    dend_27 { pt3dadd( -10.5692, -312.984, 42.3412, 0.07 ) }
    dend_27 { pt3dadd( -10.2893, -313.698, 41.3317, 0.07 ) }
    dend_27 { pt3dadd( -10.1535, -314.062, 40.8012, 0.66 ) }
    dend_27 { pt3dadd( -9.86794, -314.936, 39.6113, 0.07 ) }
    dend_27 { pt3dadd( -9.69743, -315.585, 38.8155, 0.07 ) }
    dend_27 { pt3dadd( -9.52441, -316.321, 38.05, 0.07 ) }
    dend_27 { pt3dadd( -9.40398, -316.831, 37.6281, 0.96 ) }
    dend_27 { pt3dadd( -9.18325, -317.792, 36.9075, 0.15 ) }
    dend_27 { pt3dadd( -9.054, -318.386, 36.4855, 0.15 ) }
    dend_27 { pt3dadd( -8.9009, -319.127, 36.0365, 0.74 ) }
    dend_27 { pt3dadd( -8.57463, -320.572, 35.3449, 0.15 ) }
    dend_27 { pt3dadd( -8.37766, -321.361, 35.0425, 0.81 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 22/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -8.25397, 17.8832, -19.4138, 0.59 ) }
    dend_24 { pt3dadd( -9.10971, 18.6602, -18.2314, 0.59 ) }
    dend_24 { pt3dadd( -9.75201, 19.3266, -17.3429, 0.59 ) }
    dend_24 { pt3dadd( -10.3935, 20.0073, -16.4948, 0.59 ) }
    dend_24 { pt3dadd( -11.0631, 20.6859, -15.6872, 0.74 ) }
    dend_24 { pt3dadd( -11.6239, 21.2223, -15.092, 0.74 ) }
    dend_24 { pt3dadd( -12.5148, 22.0305, -14.3119, 0.44 ) }
    dend_24 { pt3dadd( -12.7556, 22.2412, -14.1817, 0.44 ) }
    dend_24 { pt3dadd( -13.3268, 22.7317, -14.0208, 0.44 ) }
    dend_24 { pt3dadd( -13.9038, 23.1952, -13.9422, 0.66 ) }
    dend_24 { pt3dadd( -14.7415, 23.7877, -13.8971, 0.81 ) }
    dend_24 { pt3dadd( -15.9178, 24.5043, -13.8533, 0.59 ) }
    dend_24 { pt3dadd( -16.8508, 24.997, -13.811, 0.37 ) }
    dend_24 { pt3dadd( -18.0822, 25.6301, -13.72, 0.22 ) }
    dend_24 { pt3dadd( -18.8335, 26.0216, -13.6411, 0.44 ) }
    dend_24 { pt3dadd( -19.3439, 26.3073, -13.564, 0.74 ) }
    dend_24 { pt3dadd( -20.4616, 27.0083, -13.3416, 0.37 ) }
    dend_24 { pt3dadd( -21.4714, 27.722, -13.0853, 0.22 ) }
    dend_24 { pt3dadd( -21.9496, 28.1241, -12.9732, 0.22 ) }
    dend_24 { pt3dadd( -22.5051, 28.6693, -12.8605, 0.66 ) }
    dend_24 { pt3dadd( -23.1854, 29.4298, -12.7603, 0.52 ) }
    dend_24 { pt3dadd( -23.9922, 30.4005, -12.7192, 0.81 ) }
    dend_24 { pt3dadd( -24.3374, 30.8353, -12.7458, 0.81 ) }
    dend_24 { pt3dadd( -25.2226, 31.9332, -12.9314, 0.44 ) }
    dend_24 { pt3dadd( -26.1225, 32.9484, -13.2328, 0.74 ) }
    dend_24 { pt3dadd( -27.0326, 33.8172, -13.6504, 0.44 ) }
    dend_24 { pt3dadd( -28.0767, 34.6242, -14.2473, 0.29 ) }
    dend_24 { pt3dadd( -28.811, 35.0727, -14.7386, 0.29 ) }
    dend_24 { pt3dadd( -29.5789, 35.4439, -15.3226, 0.29 ) }
    dend_24 { pt3dadd( -30.3532, 35.7279, -15.9739, 0.88 ) }
    dend_24 { pt3dadd( -31.31, 36.0026, -16.8062, 0.59 ) }
    dend_24 { pt3dadd( -31.9372, 36.1638, -17.3424, 0.59 ) }
    dend_24 { pt3dadd( -32.8278, 36.3971, -18.0543, 0.29 ) }
    dend_24 { pt3dadd( -33.9019, 36.7201, -18.8338, 0.74 ) }
    dend_24 { pt3dadd( -34.3627, 36.8981, -19.1401, 0.74 ) }
    dend_24 { pt3dadd( -35.0639, 37.2657, -19.5735, 0.29 ) }
    dend_24 { pt3dadd( -35.564, 37.6395, -19.8388, 0.22 ) }
    dend_24 { pt3dadd( -35.9303, 38.0053, -20.0061, 0.22 ) }
    dend_24 { pt3dadd( -36.3342, 38.5308, -20.1636, 0.22 ) }
    dend_24 { pt3dadd( -36.8252, 39.2544, -20.3429, 0.74 ) }
    dend_24 { pt3dadd( -37.2363, 39.8627, -20.5262, 0.74 ) }
    dend_24 { pt3dadd( -37.6317, 40.4351, -20.7473, 0.29 ) }
    dend_24 { pt3dadd( -37.9412, 40.8465, -20.9338, 0.29 ) }
    dend_24 { pt3dadd( -38.3891, 41.403, -21.2028, 0.52 ) }
    dend_24 { pt3dadd( -38.8968, 42.03, -21.5448, 0.52 ) }
    dend_24 { pt3dadd( -39.6635, 42.9713, -22.1079, 0.22 ) }
    dend_24 { pt3dadd( -40.116, 43.5632, -22.4879, 0.15 ) }
    dend_24 { pt3dadd( -40.7613, 44.4156, -23.0503, 0.59 ) }
    dend_24 { pt3dadd( -41.4119, 45.3193, -23.63, 0.22 ) }
    dend_24 { pt3dadd( -41.7462, 45.8302, -23.9425, 0.22 ) }
    dend_24 { pt3dadd( -41.8462, 46.0108, -24.0398, 0.22 ) }
    dend_24 { pt3dadd( -42.1713, 46.7144, -24.3719, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 74/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -8.25397, 17.8832, -19.4138, 1.03 ) }
    dend_23 { pt3dadd( -7.96778, 18.5675, -19.4765, 1.03 ) }
    dend_23 { pt3dadd( -7.1422, 19.906, -19.5613, 0.88 ) }
    dend_23 { pt3dadd( -6.42896, 20.9287, -19.6498, 0.88 ) }
    dend_23 { pt3dadd( -5.92594, 21.6333, -19.7316, 0.59 ) }
    dend_23 { pt3dadd( -5.49933, 22.2635, -19.812, 0.59 ) }
    dend_23 { pt3dadd( -4.79387, 23.3784, -19.9604, 0.96 ) }
    dend_23 { pt3dadd( -3.98991, 24.6591, -20.1331, 0.52 ) }
    dend_23 { pt3dadd( -3.35296, 25.8109, -20.2756, 0.66 ) }
    dend_23 { pt3dadd( -3.12691, 26.3797, -20.3526, 0.66 ) }
    dend_23 { pt3dadd( -2.92027, 27.219, -20.4762, 0.66 ) }
    dend_23 { pt3dadd( -2.85239, 27.8189, -20.5517, 0.66 ) }
    dend_23 { pt3dadd( -2.83886, 28.8463, -20.6661, 1.18 ) }
    dend_23 { pt3dadd( -2.88157, 30.1242, -20.7989, 0.96 ) }
    dend_23 { pt3dadd( -2.90531, 30.8067, -20.8775, 0.96 ) }
    dend_23 { pt3dadd( -2.91637, 31.8284, -21.0379, 0.88 ) }
    dend_23 { pt3dadd( -2.86481, 32.9815, -21.2991, 1.03 ) }
    dend_23 { pt3dadd( -2.81716, 33.66, -21.4848, 1.18 ) }
    dend_23 { pt3dadd( -2.71405, 34.6313, -21.768, 0.74 ) }
    dend_23 { pt3dadd( -2.57702, 35.5564, -22.0362, 0.74 ) }
    dend_23 { pt3dadd( -2.44976, 36.2576, -22.2446, 0.96 ) }
    dend_23 { pt3dadd( -2.23315, 37.3358, -22.565, 1.11 ) }
    dend_23 { pt3dadd( -1.93798, 38.5266, -22.9412, 0.96 ) }
    dend_23 { pt3dadd( -1.40284, 40.2554, -23.4928, 0.59 ) }
    dend_23 { pt3dadd( -1.0688, 41.1502, -23.7639, 0.59 ) }
    dend_23 { pt3dadd( -0.546825, 42.273, -24.0994, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_23 { pt3dadd( -0.278061, 42.7479, -24.2447, 0.74 ) }
    dend_23 { pt3dadd( 0.360903, 43.6902, -24.5218, 0.59 ) }
    dend_23 { pt3dadd( 1.07593, 44.5782, -24.7825, 0.59 ) }
    dend_23 { pt3dadd( 1.71476, 45.3104, -24.9883, 0.59 ) }
    dend_23 { pt3dadd( 2.43345, 46.1821, -25.2111, 0.52 ) }
    dend_23 { pt3dadd( 2.937, 46.898, -25.3755, 0.52 ) }
    dend_23 { pt3dadd( 3.45209, 47.847, -25.6152, 0.74 ) }
    dend_23 { pt3dadd( 3.67776, 48.5466, -25.8174, 0.88 ) }
    dend_23 { pt3dadd( 3.80864, 49.4572, -26.1551, 0.59 ) }
    dend_23 { pt3dadd( 3.82578, 50.4904, -26.6382, 0.44 ) }
    dend_23 { pt3dadd( 3.75139, 51.5462, -27.205, 0.59 ) }
    dend_23 { pt3dadd( 3.6477, 52.5383, -27.78, 0.96 ) }
    dend_23 { pt3dadd( 3.55313, 53.7863, -28.5227, 0.52 ) }
    dend_23 { pt3dadd( 3.55075, 54.7716, -29.0988, 0.52 ) }
    dend_23 { pt3dadd( 3.62667, 55.533, -29.512, 0.52 ) }
    dend_23 { pt3dadd( 3.89394, 56.7327, -30.1029, 0.37 ) }
    dend_23 { pt3dadd( 4.12384, 57.4744, -30.4214, 0.37 ) }
    dend_23 { pt3dadd( 4.58032, 58.7984, -30.8939, 0.44 ) }
    dend_23 { pt3dadd( 4.90677, 59.8417, -31.2031, 0.59 ) }
    dend_23 { pt3dadd( 5.11531, 60.7929, -31.4428, 0.59 ) }
    dend_23 { pt3dadd( 5.18553, 61.5029, -31.5989, 0.59 ) }
    dend_23 { pt3dadd( 5.12305, 62.719, -31.8798, 0.59 ) }
    dend_23 { pt3dadd( 4.95331, 63.6506, -32.1503, 0.66 ) }
    dend_23 { pt3dadd( 4.62991, 64.7642, -32.5489, 0.74 ) }
    dend_23 { pt3dadd( 4.29343, 65.7846, -32.9802, 0.52 ) }
    dend_23 { pt3dadd( 4.0067, 66.6667, -33.4255, 0.29 ) }
    dend_23 { pt3dadd( 3.79711, 67.546, -33.997, 0.29 ) }
    dend_23 { pt3dadd( 3.85999, 68.1619, -34.6756, 0.44 ) }
    dend_23 { pt3dadd( 4.15918, 68.4354, -35.3276, 0.59 ) }
    dend_23 { pt3dadd( 4.71255, 68.5498, -36.2047, 0.29 ) }
    dend_23 { pt3dadd( 5.10365, 68.5192, -36.7402, 0.29 ) }
    dend_23 { pt3dadd( 5.73967, 68.3687, -37.559, 0.29 ) }
    dend_23 { pt3dadd( 6.23029, 68.2184, -38.158, 0.29 ) }
    dend_23 { pt3dadd( 6.69325, 68.0803, -38.7411, 0.44 ) }
    dend_23 { pt3dadd( 7.1291, 68.0034, -39.3636, 0.44 ) }
    dend_23 { pt3dadd( 7.43614, 68.0248, -39.9176, 0.52 ) }
    dend_23 { pt3dadd( 7.56175, 68.2497, -40.3896, 0.52 ) }
    dend_23 { pt3dadd( 7.43898, 68.6932, -40.7278, 0.52 ) }
    dend_23 { pt3dadd( 7.09424, 69.3548, -41.1129, 0.66 ) }
    dend_23 { pt3dadd( 6.5731, 70.1148, -41.4954, 0.66 ) }
    dend_23 { pt3dadd( 5.9647, 70.7878, -41.8014, 0.37 ) }
    dend_23 { pt3dadd( 5.16801, 71.4218, -42.122, 0.37 ) }
    dend_23 { pt3dadd( 4.43416, 71.8049, -42.3977, 0.37 ) }
    dend_23 { pt3dadd( 3.88023, 71.9289, -42.6196, 0.37 ) }
    dend_23 { pt3dadd( 3.4552, 71.9096, -42.807, 0.37 ) }
    dend_23 { pt3dadd( 2.7422, 71.7064, -43.166, 0.29 ) }
    dend_23 { pt3dadd( 1.9844, 71.2774, -43.6152, 0.22 ) }
    dend_23 { pt3dadd( 1.4154, 70.7385, -44.0317, 0.22 ) }
    dend_23 { pt3dadd( 0.814457, 69.7301, -44.6516, 0.66 ) }
    dend_23 { pt3dadd( 0.683335, 69.1816, -44.943, 0.37 ) }
    dend_23 { pt3dadd( 0.67043, 68.5495, -45.289, 0.22 ) }
    dend_23 { pt3dadd( 0.804428, 67.806, -45.7095, 0.22 ) }
    dend_23 { pt3dadd( 1.00178, 67.2421, -46.0527, 0.22 ) }
    dend_23 { pt3dadd( 1.35684, 66.4472, -46.5492, 0.29 ) }
    dend_23 { pt3dadd( 1.89933, 65.4099, -47.2186, 0.15 ) }
    dend_23 { pt3dadd( 2.41889, 64.4636, -47.8739, 0.15 ) }
    dend_23 { pt3dadd( 3.02576, 63.344, -48.7083, 0.15 ) }
    dend_23 { pt3dadd( 3.46617, 62.5298, -49.3921, 0.15 ) }
    dend_23 { pt3dadd( 3.59697, 62.2761, -49.6265, 0.15 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -3.27965, 0.515396, -10.46, 1.25 ) }
    dend_13 { pt3dadd( -2.62664, -0.858625, -11.6342, 1.25 ) }
    dend_13 { pt3dadd( -2.14696, -1.66487, -12.2792, 1.25 ) }
    dend_13 { pt3dadd( -1.47858, -2.66178, -13.048, 1.25 ) }
    dend_13 { pt3dadd( -1.06704, -3.28903, -13.4978, 1.25 ) }
    dend_13 { pt3dadd( -0.551257, -4.19205, -14.0884, 1.11 ) }
    dend_13 { pt3dadd( -0.225324, -4.9165, -14.526, 1.33 ) }
    dend_13 { pt3dadd( 0.160005, -6.12462, -15.116, 0.81 ) }
    dend_13 { pt3dadd( 0.267068, -7.08784, -15.4591, 0.66 ) }
    dend_13 { pt3dadd( 0.202971, -7.89312, -15.687, 0.66 ) }
    dend_13 { pt3dadd( -0.0476059, -9.13677, -15.9812, 1.03 ) }
    dend_13 { pt3dadd( -0.431949, -10.5944, -16.2707, 1.4 ) }
    dend_13 { pt3dadd( -0.742295, -11.7332, -16.4703, 1.99 ) }
    dend_13 { pt3dadd( -1.15467, -13.3434, -16.7058, 1.33 ) }
    dend_13 { pt3dadd( -1.3904, -14.5693, -16.8648, 0.96 ) }
    dend_13 { pt3dadd( -1.59777, -16.024, -17.0545, 0.81 ) }
    dend_13 { pt3dadd( -1.66501, -17.1351, -17.194, 0.74 ) }
    dend_13 { pt3dadd( -1.62998, -18.3184, -17.3214, 0.96 ) }
    dend_13 { pt3dadd( -1.50075, -19.3757, -17.4395, 1.33 ) }
    dend_13 { pt3dadd( -1.3108, -20.2635, -17.5424, 1.47 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 79/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -3.27965, 0.515396, -10.46, 1.77 ) }
    dend_2 { pt3dadd( -4.57026, -0.272909, -10.6604, 1.77 ) }
    dend_2 { pt3dadd( -5.86647, -1.10423, -10.8919, 1.62 ) }
    dend_2 { pt3dadd( -6.97404, -1.85556, -11.1413, 1.84 ) }
    dend_2 { pt3dadd( -7.72651, -2.366, -11.3107, 2.06 ) }
    dend_2 { pt3dadd( -9.07738, -3.28237, -11.6148, 1.84 ) }
    dend_2 { pt3dadd( -10.3442, -4.14177, -11.9, 1.84 ) }
    dend_2 { pt3dadd( -11.6277, -5.07003, -12.2434, 1.84 ) }
    dend_2 { pt3dadd( -12.6313, -5.80322, -12.5536, 2.36 ) }
    // Section: dend_56, id: dend_56, parent: dend_48 (entry count 88/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -5.37388, 40.9257, 16.3555, 0.52 ) }
    dend_56 { pt3dadd( -4.9815, 42.0855, 15.6718, 0.52 ) }
    dend_56 { pt3dadd( -4.663, 43.2287, 14.9475, 0.52 ) }
    dend_56 { pt3dadd( -4.53657, 43.8431, 14.5123, 0.52 ) }
    dend_56 { pt3dadd( -4.42062, 44.6272, 13.9276, 0.59 ) }
    dend_56 { pt3dadd( -4.33337, 45.35, 13.365, 0.44 ) }
    dend_56 { pt3dadd( -4.27407, 45.8906, 12.9365, 0.44 ) }
    dend_56 { pt3dadd( -4.23726, 46.4701, 12.4672, 0.52 ) }
    dend_56 { pt3dadd( -4.17436, 47.3188, 11.7825, 0.88 ) }
    dend_56 { pt3dadd( -4.12674, 47.9099, 11.2837, 1.25 ) }
    dend_56 { pt3dadd( -4.05946, 48.7042, 10.6124, 1.18 ) }
    dend_56 { pt3dadd( -3.96128, 49.763, 9.74171, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_56 { pt3dadd( -3.84543, 50.7811, 8.92718, 0.52 ) }
    dend_56 { pt3dadd( -3.69138, 51.8624, 8.08692, 0.44 ) }
    dend_56 { pt3dadd( -3.58007, 52.5715, 7.54348, 0.44 ) }
    dend_56 { pt3dadd( -3.5062, 53.0396, 7.19302, 0.44 ) }
    dend_56 { pt3dadd( -3.37915, 53.8765, 6.60713, 0.52 ) }
    dend_56 { pt3dadd( -3.26291, 54.6258, 6.1449, 0.59 ) }
    dend_56 { pt3dadd( -3.09798, 55.6108, 5.63819, 0.66 ) }
    dend_56 { pt3dadd( -2.95668, 56.408, 5.30664, 0.66 ) }
    dend_56 { pt3dadd( -2.82299, 57.1821, 5.05876, 0.96 ) }
    dend_56 { pt3dadd( -2.68963, 57.9869, 4.8611, 1.18 ) }
    dend_56 { pt3dadd( -2.47699, 59.249, 4.66253, 0.96 ) }
    dend_56 { pt3dadd( -2.32381, 60.1591, 4.58095, 0.44 ) }
    dend_56 { pt3dadd( -2.22365, 60.7439, 4.54926, 0.29 ) }
    dend_56 { pt3dadd( -2.08774, 61.4647, 4.51909, 0.29 ) }
    dend_56 { pt3dadd( -2.00458, 61.8143, 4.49769, 0.29 ) }
    dend_56 { pt3dadd( -1.79043, 62.459, 4.44709, 0.59 ) }
    dend_56 { pt3dadd( -1.61913, 62.8181, 4.4136, 0.96 ) }
    dend_56 { pt3dadd( -1.07497, 63.6815, 4.28545, 1.25 ) }
    dend_56 { pt3dadd( -0.738383, 64.1229, 4.18235, 1.11 ) }
    dend_56 { pt3dadd( 0.0120753, 65.0313, 3.89828, 0.52 ) }
    dend_56 { pt3dadd( 0.562965, 65.7284, 3.65235, 0.52 ) }
    dend_56 { pt3dadd( 1.02597, 66.3627, 3.42199, 0.22 ) }
    dend_56 { pt3dadd( 1.5139, 67.0869, 3.15008, 0.29 ) }
    dend_56 { pt3dadd( 1.93853, 67.7551, 2.86837, 0.59 ) }
    dend_56 { pt3dadd( 2.3214, 68.3866, 2.5451, 1.11 ) }
    dend_56 { pt3dadd( 2.75085, 69.1169, 2.10785, 1.25 ) }
    dend_56 { pt3dadd( 3.25758, 69.9712, 1.50293, 0.96 ) }
    dend_56 { pt3dadd( 3.64615, 70.5603, 0.967201, 0.29 ) }
    dend_56 { pt3dadd( 3.99546, 70.9665, 0.430645, 0.22 ) }
    dend_56 { pt3dadd( 4.31374, 71.2128, -0.124983, 0.22 ) }
    dend_56 { pt3dadd( 4.57097, 71.3533, -0.658513, 0.37 ) }
    dend_56 { pt3dadd( 4.87898, 71.5018, -1.47392, 0.59 ) }
    dend_56 { pt3dadd( 5.15253, 71.6629, -2.46841, 0.74 ) }
    dend_56 { pt3dadd( 5.38807, 71.8669, -3.5261, 0.96 ) }
    dend_56 { pt3dadd( 5.57282, 72.0661, -4.40036, 1.18 ) }
    dend_56 { pt3dadd( 5.78317, 72.3239, -5.37845, 1.18 ) }
    dend_56 { pt3dadd( 6.03403, 72.649, -6.47042, 1.25 ) }
    dend_56 { pt3dadd( 6.35794, 73.0639, -7.60422, 1.25 ) }
    dend_56 { pt3dadd( 6.69462, 73.4939, -8.48275, 0.52 ) }
    dend_56 { pt3dadd( 6.98326, 73.8549, -9.04173, 0.29 ) }
    dend_56 { pt3dadd( 7.37751, 74.3311, -9.59846, 0.29 ) }
    dend_56 { pt3dadd( 7.66925, 74.6732, -9.88926, 0.66 ) }
    dend_56 { pt3dadd( 8.17246, 75.3252, -10.2489, 0.66 ) }
    dend_56 { pt3dadd( 8.75018, 76.2628, -10.5793, 0.52 ) }
    dend_56 { pt3dadd( 8.99381, 76.8745, -10.7186, 0.59 ) }
    dend_56 { pt3dadd( 9.15848, 77.5788, -10.8362, 0.74 ) }
    dend_56 { pt3dadd( 9.20827, 78.0036, -10.8849, 0.74 ) }
    dend_56 { pt3dadd( 9.22642, 79.0237, -11.0261, 0.29 ) }
    dend_56 { pt3dadd( 9.17803, 79.7502, -11.1337, 0.29 ) }
    dend_56 { pt3dadd( 9.05537, 80.8631, -11.2955, 0.44 ) }
    dend_56 { pt3dadd( 9.00529, 81.2956, -11.3588, 0.81 ) }
    dend_56 { pt3dadd( 8.9546, 81.8786, -11.4616, 0.81 ) }
    dend_56 { pt3dadd( 8.91035, 83.0326, -11.7292, 0.66 ) }
    dend_56 { pt3dadd( 8.95195, 84.021, -12.0269, 0.66 ) }
    dend_56 { pt3dadd( 9.00059, 84.423, -12.1631, 0.66 ) }
    dend_56 { pt3dadd( 9.13352, 85.2097, -12.4615, 0.44 ) }
    dend_56 { pt3dadd( 9.29967, 86.2353, -12.877, 0.59 ) }
    dend_56 { pt3dadd( 9.39329, 86.9482, -13.1659, 0.44 ) }
    dend_56 { pt3dadd( 9.46682, 87.9332, -13.5615, 0.52 ) }
    dend_56 { pt3dadd( 9.46597, 88.5559, -13.8269, 0.52 ) }
    dend_56 { pt3dadd( 9.417, 89.2014, -14.1226, 0.44 ) }
    dend_56 { pt3dadd( 9.32051, 89.9367, -14.4939, 0.81 ) }
    dend_56 { pt3dadd( 9.17806, 90.772, -14.9532, 1.03 ) }
    dend_56 { pt3dadd( 8.99276, 91.7796, -15.56, 0.66 ) }
    dend_56 { pt3dadd( 8.86352, 92.4386, -15.9883, 0.44 ) }
    dend_56 { pt3dadd( 8.76961, 93.0342, -16.3721, 0.29 ) }
    dend_56 { pt3dadd( 8.71469, 93.669, -16.721, 0.29 ) }
    dend_56 { pt3dadd( 8.69918, 94.0708, -16.8861, 0.29 ) }
    dend_56 { pt3dadd( 8.68902, 94.6551, -17.0887, 0.29 ) }
    dend_56 { pt3dadd( 8.68169, 95.1613, -17.2266, 0.44 ) }
    dend_56 { pt3dadd( 8.62933, 96.3747, -17.5326, 0.74 ) }
    dend_56 { pt3dadd( 8.50386, 97.918, -17.9253, 0.59 ) }
    dend_56 { pt3dadd( 8.35248, 99.1515, -18.2936, 0.44 ) }
    dend_56 { pt3dadd( 8.23369, 99.9072, -18.5829, 0.44 ) }
    dend_56 { pt3dadd( 8.18843, 100.159, -18.719, 0.59 ) }
    dend_56 { pt3dadd( 8.08699, 100.691, -19.1429, 0.59 ) }
    dend_56 { pt3dadd( 7.99649, 101.131, -19.6352, 0.59 ) }
    dend_56 { pt3dadd( 7.91599, 101.577, -20.2863, 0.59 ) }
    dend_56 { pt3dadd( 7.87736, 101.95, -20.9063, 0.74 ) }
    dend_56 { pt3dadd( 7.87169, 102.537, -21.8531, 0.96 ) }
    dend_56 { pt3dadd( 7.89836, 103.08, -22.6419, 1.18 ) }
    dend_56 { pt3dadd( 7.96048, 103.694, -23.3958, 0.59 ) }
    dend_56 { pt3dadd( 8.04385, 104.321, -24.0302, 0.59 ) }
    dend_56 { pt3dadd( 8.14595, 105.045, -24.617, 0.59 ) }
    dend_56 { pt3dadd( 8.19097, 105.486, -24.8961, 0.29 ) }
    dend_56 { pt3dadd( 8.19363, 106.227, -25.2502, 0.22 ) }
    dend_56 { pt3dadd( 8.13325, 106.748, -25.4755, 0.22 ) }
    dend_56 { pt3dadd( 7.96851, 107.422, -25.767, 0.22 ) }
    dend_56 { pt3dadd( 7.71746, 108.05, -26.1031, 0.22 ) }
    dend_56 { pt3dadd( 7.30371, 108.809, -26.6102, 0.81 ) }
    dend_56 { pt3dadd( 6.77969, 109.601, -27.2409, 0.22 ) }
    dend_56 { pt3dadd( 6.31837, 110.229, -27.8059, 0.37 ) }
    dend_56 { pt3dadd( 5.82897, 110.831, -28.4101, 0.88 ) }
    dend_56 { pt3dadd( 4.86968, 111.892, -29.6089, 0.15 ) }
    dend_56 { pt3dadd( 4.36681, 112.413, -30.2652, 0.15 ) }
    dend_56 { pt3dadd( 4.12732, 112.655, -30.6143, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 96/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -5.37388, 40.9257, 16.3555, 0.81 ) }
    dend_49 { pt3dadd( -5.59032, 41.8686, 17.3569, 0.81 ) }
    dend_49 { pt3dadd( -5.77772, 42.7595, 18.1883, 0.81 ) }
    dend_49 { pt3dadd( -6.04624, 43.7709, 19.0018, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_49 { pt3dadd( -6.23493, 44.3591, 19.4093, 0.59 ) }
    dend_49 { pt3dadd( -6.45537, 44.9896, 19.8098, 0.59 ) }
    dend_49 { pt3dadd( -6.67224, 45.6064, 20.1656, 0.44 ) }
    dend_49 { pt3dadd( -6.83771, 46.1086, 20.3614, 0.44 ) }
    dend_49 { pt3dadd( -7.16258, 47.0594, 20.648, 0.44 ) }
    dend_49 { pt3dadd( -7.40224, 47.7348, 20.8402, 0.74 ) }
    dend_49 { pt3dadd( -7.69095, 48.5337, 21.1261, 1.11 ) }
    dend_49 { pt3dadd( -7.9033, 49.1273, 21.3529, 1.11 ) }
    dend_49 { pt3dadd( -8.28745, 50.2413, 21.8071, 0.52 ) }
    dend_49 { pt3dadd( -8.55022, 51.1212, 22.1812, 0.66 ) }
    dend_49 { pt3dadd( -8.75114, 51.9466, 22.5616, 0.96 ) }
    dend_49 { pt3dadd( -8.94319, 52.8107, 22.9834, 1.33 ) }
    dend_49 { pt3dadd( -9.21047, 53.9729, 23.5613, 1.77 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -143.811, -327.684, 1.80189, 0.29 ) }
    dend_40 { pt3dadd( -144.012, -328.702, 2.14279, 0.29 ) }
    dend_40 { pt3dadd( -144.251, -329.75, 2.38684, 0.66 ) }
    dend_40 { pt3dadd( -144.607, -331.212, 2.61821, 0.15 ) }
    dend_40 { pt3dadd( -144.81, -332.044, 2.70358, 0.15 ) }
    dend_40 { pt3dadd( -144.965, -332.587, 2.70838, 0.59 ) }
    dend_40 { pt3dadd( -145.358, -333.713, 2.61425, 0.07 ) }
    dend_40 { pt3dadd( -145.716, -334.435, 2.41348, 0.07 ) }
    dend_40 { pt3dadd( -145.952, -334.804, 2.24382, 0.15 ) }
    dend_40 { pt3dadd( -146.203, -335.182, 1.97775, 0.37 ) }
    dend_40 { pt3dadd( -146.771, -336.083, 1.22034, 0.07 ) }
    dend_40 { pt3dadd( -147.154, -336.7, 0.633653, 0.07 ) }
    dend_40 { pt3dadd( -147.342, -337.005, 0.322759, 0.07 ) }
    dend_40 { pt3dadd( -147.572, -337.357, -0.028589, 0.81 ) }
    dend_40 { pt3dadd( -148.149, -338.281, -0.912538, 0.22 ) }
    dend_40 { pt3dadd( -148.486, -338.888, -1.44728, 0.44 ) }
    dend_40 { pt3dadd( -148.806, -339.658, -2.02179, 0.15 ) }
    dend_40 { pt3dadd( -148.951, -340.108, -2.32959, 0.15 ) }
    dend_40 { pt3dadd( -149.037, -340.454, -2.54614, 0.44 ) }
    dend_40 { pt3dadd( -149.176, -341.023, -2.88112, 0.66 ) }
    dend_40 { pt3dadd( -149.445, -342.073, -3.41009, 0.15 ) }
    dend_40 { pt3dadd( -149.588, -342.761, -3.72172, 0.15 ) }
    dend_40 { pt3dadd( -149.644, -343.356, -3.96525, 0.15 ) }
    dend_40 { pt3dadd( -149.655, -344.011, -4.23941, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 37/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -143.811, -327.684, 1.80189, 0.07 ) }
    dend_39 { pt3dadd( -145.343, -326.761, 1.95001, 0.07 ) }
    dend_39 { pt3dadd( -146.44, -326.084, 2.00748, 0.07 ) }
    dend_39 { pt3dadd( -147.46, -325.46, 2.0338, 0.07 ) }
    dend_39 { pt3dadd( -147.947, -325.155, 2.0353, 0.15 ) }
    dend_39 { pt3dadd( -148.817, -324.549, 2.02252, 0.07 ) }
    dend_39 { pt3dadd( -149.381, -324.106, 2.00661, 0.07 ) }
    dend_39 { pt3dadd( -149.854, -323.637, 1.93225, 0.22 ) }
    dend_39 { pt3dadd( -150.209, -323.245, 1.91647, 0.15 ) }
    dend_39 { pt3dadd( -150.422, -323.003, 1.92141, 0.15 ) }
    dend_39 { pt3dadd( -151.128, -322.238, 1.94349, 0.29 ) }
    dend_39 { pt3dadd( -151.745, -321.635, 1.97068, 0.07 ) }
    dend_39 { pt3dadd( -152.382, -321.08, 2.00356, 0.15 ) }
    dend_39 { pt3dadd( -153.816, -319.965, 2.03904, 0.07 ) }
    dend_39 { pt3dadd( -154.67, -319.44, 2.04079, 0.15 ) }
    dend_39 { pt3dadd( -155.374, -319.137, 2.02146, 0.15 ) }
    dend_39 { pt3dadd( -156.019, -318.975, 1.98358, 0.15 ) }
    dend_39 { pt3dadd( -156.679, -318.927, 1.92324, 0.15 ) }
    dend_39 { pt3dadd( -157.643, -318.945, 1.79716, 0.15 ) }
    dend_39 { pt3dadd( -158.508, -319.062, 1.61541, 0.07 ) }
    dend_39 { pt3dadd( -159.339, -319.261, 1.48397, 0.07 ) }
    dend_39 { pt3dadd( -159.852, -319.423, 1.42366, 0.66 ) }
    dend_39 { pt3dadd( -160.822, -319.814, 1.29885, 0.81 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -8.37766, -321.361, 35.0425, 0.15 ) }
    dend_29 { pt3dadd( -8.09982, -322.44, 34.1304, 0.15 ) }
    dend_29 { pt3dadd( -8.01299, -323.038, 33.6936, 0.15 ) }
    dend_29 { pt3dadd( -7.96431, -323.316, 33.511, 0.15 ) }
    dend_29 { pt3dadd( -7.90485, -323.627, 33.3064, 0.52 ) }
    dend_29 { pt3dadd( -7.82355, -324.064, 33.0345, 0.81 ) }
    dend_29 { pt3dadd( -7.64219, -325.148, 32.3499, 0.22 ) }
    dend_29 { pt3dadd( -7.51769, -325.98, 31.8664, 0.22 ) }
    dend_29 { pt3dadd( -7.44698, -326.572, 31.5344, 0.15 ) }
    dend_29 { pt3dadd( -7.37209, -327.073, 31.2548, 0.22 ) }
    dend_29 { pt3dadd( -7.23198, -327.711, 30.8864, 0.29 ) }
    dend_29 { pt3dadd( -7.02832, -328.355, 30.4945, 0.22 ) }
    dend_29 { pt3dadd( -6.86765, -328.744, 30.2425, 0.22 ) }
    dend_29 { pt3dadd( -6.68625, -329.18, 29.9433, 0.37 ) }
    dend_29 { pt3dadd( -6.4666, -329.769, 29.522, 0.37 ) }
    dend_29 { pt3dadd( -6.18368, -330.548, 28.9701, 0.22 ) }
    dend_29 { pt3dadd( -6.04848, -330.861, 28.7289, 0.22 ) }
    dend_29 { pt3dadd( -5.82417, -331.329, 28.3456, 0.22 ) }
    dend_29 { pt3dadd( -5.719, -331.563, 28.138, 0.22 ) }
    dend_29 { pt3dadd( -5.6028, -331.908, 27.8129, 0.22 ) }
    dend_29 { pt3dadd( -5.49772, -332.265, 27.4832, 0.15 ) }
    dend_29 { pt3dadd( -5.27284, -332.975, 26.8656, 0.44 ) }
    dend_29 { pt3dadd( -5.01015, -333.821, 26.1879, 0.22 ) }
    dend_29 { pt3dadd( -4.87391, -334.327, 25.8269, 0.29 ) }
    dend_29 { pt3dadd( -4.61184, -335.376, 25.1326, 0.07 ) }
    dend_29 { pt3dadd( -4.45259, -336.047, 24.7212, 0.66 ) }
    dend_29 { pt3dadd( -4.24855, -336.985, 24.1966, 0.07 ) }
    dend_29 { pt3dadd( -4.12201, -337.628, 23.8743, 0.07 ) }
    dend_29 { pt3dadd( -3.94158, -338.359, 23.5105, 0.29 ) }
    dend_29 { pt3dadd( -3.70558, -339.136, 23.1172, 0.07 ) }
    dend_29 { pt3dadd( -3.58584, -339.504, 22.9245, 0.44 ) }
    dend_29 { pt3dadd( -3.53346, -339.703, 22.8117, 0.44 ) }
    dend_29 { pt3dadd( -3.37507, -340.34, 22.425, 0.74 ) }
    dend_29 { pt3dadd( -3.01672, -341.317, 21.7547, 0.07 ) }
    dend_29 { pt3dadd( -2.82466, -341.715, 21.4687, 0.22 ) }
    dend_29 { pt3dadd( -2.51747, -342.248, 21.095, 0.07 ) }
    dend_29 { pt3dadd( -2.25165, -342.717, 20.7685, 0.07 ) }
    dend_29 { pt3dadd( -2.00364, -343.141, 20.4823, 0.66 ) }
    dend_29 { pt3dadd( -1.23241, -344.296, 19.7622, 0.07 ) }
    dend_29 { pt3dadd( -0.810662, -344.777, 19.4885, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_29 { pt3dadd( -0.264363, -345.24, 19.1993, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 1/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -8.37766, -321.361, 35.0425, 0.07 ) }
    dend_28 { pt3dadd( -6.89012, -321.782, 35.1211, 0.07 ) }
    dend_28 { pt3dadd( -6.19944, -321.948, 35.1496, 0.29 ) }
    dend_28 { pt3dadd( -5.35406, -322.134, 35.1786, 0.07 ) }
    dend_28 { pt3dadd( -4.6473, -322.274, 35.1992, 0.52 ) }
    dend_28 { pt3dadd( -2.72352, -322.548, 35.1726, 0.07 ) }
    dend_28 { pt3dadd( -1.59829, -322.649, 35.1094, 0.07 ) }
    dend_28 { pt3dadd( -1.15819, -322.665, 35.0729, 0.59 ) }
    dend_28 { pt3dadd( -0.555912, -322.66, 35.0029, 0.74 ) }
    dend_28 { pt3dadd( 0.0309021, -322.62, 34.9193, 0.37 ) }
    dend_28 { pt3dadd( 1.57201, -322.412, 34.6324, 0.07 ) }
    dend_28 { pt3dadd( 2.32997, -322.222, 34.4073, 0.44 ) }
    // Section: dend_21, id: dend_21, parent: dend_13 (entry count 13/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -1.3108, -20.2635, -17.5424, 0.59 ) }
    dend_21 { pt3dadd( -0.958634, -20.2035, -19.2016, 0.59 ) }
    dend_21 { pt3dadd( -0.699439, -20.2121, -20.4943, 0.59 ) }
    dend_21 { pt3dadd( -0.369041, -20.28, -22.3632, 0.52 ) }
    dend_21 { pt3dadd( -0.185136, -20.3498, -23.8387, 0.52 ) }
    dend_21 { pt3dadd( -0.0935202, -20.3952, -24.9, 0.52 ) }
    dend_21 { pt3dadd( -0.0693825, -20.4008, -25.4325, 0.52 ) }
    dend_21 { pt3dadd( -0.109831, -20.3388, -26.3869, 0.52 ) }
    dend_21 { pt3dadd( -0.1504, -20.2703, -26.8176, 0.52 ) }
    dend_21 { pt3dadd( -0.251367, -19.97, -27.8088, 0.66 ) }
    dend_21 { pt3dadd( -0.252297, -19.8021, -28.171, 0.66 ) }
    dend_21 { pt3dadd( -0.0823804, -19.2734, -29.1873, 0.29 ) }
    dend_21 { pt3dadd( 0.259086, -18.7836, -30.1671, 0.88 ) }
    dend_21 { pt3dadd( 0.759716, -18.4755, -30.9451, 0.37 ) }
    dend_21 { pt3dadd( 1.38068, -18.2933, -31.6576, 0.29 ) }
    dend_21 { pt3dadd( 2.00315, -18.1842, -32.2365, 0.29 ) }
    dend_21 { pt3dadd( 2.49891, -18.1237, -32.6414, 0.29 ) }
    dend_21 { pt3dadd( 2.84987, -18.0966, -32.8834, 0.44 ) }
    dend_21 { pt3dadd( 3.59011, -17.9889, -33.3539, 0.52 ) }
    dend_21 { pt3dadd( 4.30265, -17.7645, -33.7683, 0.15 ) }
    dend_21 { pt3dadd( 4.89245, -17.4683, -34.0582, 0.15 ) }
    dend_21 { pt3dadd( 5.55251, -17.0427, -34.3217, 0.15 ) }
    dend_21 { pt3dadd( 6.02807, -16.6669, -34.4819, 0.15 ) }
    dend_21 { pt3dadd( 6.57281, -16.1387, -34.6861, 0.15 ) }
    dend_21 { pt3dadd( 7.20014, -15.4143, -34.9346, 0.15 ) }
    dend_21 { pt3dadd( 7.88763, -14.5895, -35.2005, 0.29 ) }
    dend_21 { pt3dadd( 8.29604, -14.0887, -35.3673, 0.15 ) }
    dend_21 { pt3dadd( 8.93058, -13.2495, -35.6407, 0.22 ) }
    dend_21 { pt3dadd( 9.71656, -12.1038, -36.0139, 0.07 ) }
    dend_21 { pt3dadd( 10.0246, -11.6197, -36.1805, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 43/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -1.3108, -20.2635, -17.5424, 0.88 ) }
    dend_14 { pt3dadd( -1.05765, -21.2622, -18.2471, 0.88 ) }
    dend_14 { pt3dadd( -0.850386, -22.1715, -19.0803, 0.74 ) }
    dend_14 { pt3dadd( -0.667802, -22.9726, -19.8144, 0.88 ) }
    dend_14 { pt3dadd( -0.399748, -24.1486, -20.892, 0.88 ) }
    dend_14 { pt3dadd( -0.180033, -25.1125, -21.7753, 0.96 ) }
    dend_14 { pt3dadd( 0.0599993, -26.1656, -22.7403, 0.96 ) }
    dend_14 { pt3dadd( 0.128087, -26.7289, -23.473, 0.96 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 51/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -12.6313, -5.80322, -12.5536, 0.81 ) }
    dend_12 { pt3dadd( -14.0048, -6.07623, -12.4478, 0.81 ) }
    dend_12 { pt3dadd( -15.018, -6.23727, -12.26, 0.44 ) }
    dend_12 { pt3dadd( -15.6768, -6.27869, -12.0402, 0.44 ) }
    dend_12 { pt3dadd( -16.5094, -6.22734, -11.6366, 0.66 ) }
    dend_12 { pt3dadd( -17.0714, -6.13485, -11.3083, 0.74 ) }
    dend_12 { pt3dadd( -17.8471, -5.9493, -10.8185, 0.44 ) }
    dend_12 { pt3dadd( -18.6158, -5.67429, -10.2496, 0.59 ) }
    dend_12 { pt3dadd( -19.5844, -5.24295, -9.50275, 0.59 ) }
    dend_12 { pt3dadd( -20.5171, -4.75441, -8.79289, 0.59 ) }
    dend_12 { pt3dadd( -21.2913, -4.31163, -8.20471, 0.59 ) }
    dend_12 { pt3dadd( -22.1378, -3.84306, -7.57968, 0.81 ) }
    dend_12 { pt3dadd( -22.7528, -3.55535, -7.15951, 0.66 ) }
    dend_12 { pt3dadd( -23.2517, -3.39067, -6.8521, 0.88 ) }
    dend_12 { pt3dadd( -24.3317, -3.16933, -6.21752, 0.37 ) }
    dend_12 { pt3dadd( -24.9303, -3.09026, -5.85382, 0.44 ) }
    dend_12 { pt3dadd( -25.7367, -3.00563, -5.32903, 0.59 ) }
    dend_12 { pt3dadd( -26.6659, -2.8962, -4.68379, 0.44 ) }
    dend_12 { pt3dadd( -27.5046, -2.74188, -4.08508, 0.44 ) }
    dend_12 { pt3dadd( -28.2673, -2.51096, -3.57721, 0.44 ) }
    dend_12 { pt3dadd( -29.0118, -2.18798, -3.14643, 0.66 ) }
    dend_12 { pt3dadd( -29.6579, -1.83, -2.85234, 0.81 ) }
    dend_12 { pt3dadd( -30.2008, -1.47636, -2.65653, 0.81 ) }
    dend_12 { pt3dadd( -31.0643, -0.896486, -2.41484, 0.66 ) }
    dend_12 { pt3dadd( -32.1869, -0.16539, -2.21406, 0.59 ) }
    dend_12 { pt3dadd( -33.0917, 0.3603, -2.16854, 0.59 ) }
    dend_12 { pt3dadd( -34.2645, 0.925125, -2.23885, 0.74 ) }
    dend_12 { pt3dadd( -34.7047, 1.0917, -2.29846, 0.52 ) }
    dend_12 { pt3dadd( -35.585, 1.3328, -2.45768, 0.22 ) }
    dend_12 { pt3dadd( -36.4504, 1.48343, -2.65221, 0.22 ) }
    dend_12 { pt3dadd( -37.3135, 1.59079, -2.89169, 0.22 ) }
    dend_12 { pt3dadd( -37.8777, 1.65997, -3.06309, 0.37 ) }
    dend_12 { pt3dadd( -38.5295, 1.7473, -3.26071, 0.81 ) }
    dend_12 { pt3dadd( -39.1572, 1.84257, -3.4411, 0.81 ) }
    dend_12 { pt3dadd( -39.9941, 2.00247, -3.66115, 0.59 ) }
    dend_12 { pt3dadd( -40.9627, 2.21267, -3.86791, 0.37 ) }
    dend_12 { pt3dadd( -41.7481, 2.40946, -4.01928, 0.29 ) }
    dend_12 { pt3dadd( -42.5314, 2.63753, -4.19618, 0.37 ) }
    dend_12 { pt3dadd( -43.0427, 2.81242, -4.35645, 0.29 ) }
    dend_12 { pt3dadd( -43.866, 3.12634, -4.66572, 0.29 ) }
    dend_12 { pt3dadd( -44.6347, 3.44464, -4.983, 0.81 ) }
    dend_12 { pt3dadd( -45.4418, 3.78837, -5.3383, 0.52 ) }
    dend_12 { pt3dadd( -46.1273, 4.09355, -5.67994, 0.52 ) }
    dend_12 { pt3dadd( -47.1539, 4.57695, -6.24011, 0.37 ) }
    dend_12 { pt3dadd( -47.7314, 4.87404, -6.60155, 0.66 ) }
    dend_12 { pt3dadd( -48.3199, 5.19928, -7.03221, 0.66 ) }
    dend_12 { pt3dadd( -49.1796, 5.69762, -7.74844, 0.44 ) }
    dend_12 { pt3dadd( -50.0684, 6.2149, -8.54752, 0.81 ) }
    dend_12 { pt3dadd( -50.4688, 6.44353, -8.91174, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( -51.1255, 6.80704, -9.53197, 0.37 ) }
    dend_12 { pt3dadd( -51.6194, 7.04698, -10.055, 0.22 ) }
    dend_12 { pt3dadd( -52.1083, 7.18369, -10.5943, 0.22 ) }
    dend_12 { pt3dadd( -52.4883, 7.16947, -11.0341, 0.22 ) }
    dend_12 { pt3dadd( -52.8068, 7.0763, -11.3903, 0.81 ) }
    dend_12 { pt3dadd( -53.0443, 6.98248, -11.6496, 1.03 ) }
    dend_12 { pt3dadd( -53.6197, 6.70525, -12.26, 0.66 ) }
    dend_12 { pt3dadd( -54.425, 6.29072, -13.0878, 0.29 ) }
    dend_12 { pt3dadd( -55.4769, 5.78059, -14.1793, 0.29 ) }
    dend_12 { pt3dadd( -56.0675, 5.54357, -14.797, 0.22 ) }
    dend_12 { pt3dadd( -56.5112, 5.4181, -15.2775, 0.22 ) }
    dend_12 { pt3dadd( -56.7684, 5.38001, -15.563, 0.22 ) }
    dend_12 { pt3dadd( -57.1731, 5.40483, -16.0241, 0.22 ) }
    dend_12 { pt3dadd( -57.5981, 5.52811, -16.5202, 0.22 ) }
    dend_12 { pt3dadd( -57.9223, 5.67246, -16.8913, 0.22 ) }
    dend_12 { pt3dadd( -58.4941, 5.92656, -17.5765, 0.22 ) }
    dend_12 { pt3dadd( -58.8292, 6.08639, -17.991, 0.66 ) }
    dend_12 { pt3dadd( -59.4457, 6.4047, -18.7836, 0.66 ) }
    dend_12 { pt3dadd( -60.0198, 6.70781, -19.5563, 0.15 ) }
    dend_12 { pt3dadd( -60.5714, 6.96327, -20.2871, 0.15 ) }
    dend_12 { pt3dadd( -61.3149, 7.2616, -21.2583, 0.74 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 21/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -12.6313, -5.80322, -12.5536, 1.55 ) }
    dend_3 { pt3dadd( -12.5158, -7.5249, -13.1663, 1.55 ) }
    dend_3 { pt3dadd( -12.5069, -8.86237, -13.6397, 1.4 ) }
    dend_3 { pt3dadd( -12.5938, -10.0361, -14.0177, 1.33 ) }
    dend_3 { pt3dadd( -12.7925, -11.357, -14.3665, 0.96 ) }
    dend_3 { pt3dadd( -13.039, -12.4992, -14.588, 0.88 ) }
    dend_3 { pt3dadd( -13.326, -13.5706, -14.7196, 1.4 ) }
    dend_3 { pt3dadd( -13.6705, -14.4377, -14.7421, 1.47 ) }
    dend_3 { pt3dadd( -14.422, -15.9454, -14.647, 1.03 ) }
    dend_3 { pt3dadd( -15.1827, -17.2489, -14.5022, 0.96 ) }
    dend_3 { pt3dadd( -16.0612, -18.6573, -14.2933, 1.03 ) }
    dend_3 { pt3dadd( -16.815, -19.8974, -14.0862, 1.03 ) }
    dend_3 { pt3dadd( -17.6086, -21.2826, -13.8545, 1.11 ) }
    dend_3 { pt3dadd( -18.1376, -22.2885, -13.7288, 0.88 ) }
    dend_3 { pt3dadd( -18.7661, -23.6379, -13.6371, 0.88 ) }
    dend_3 { pt3dadd( -19.16, -24.6169, -13.6543, 1.11 ) }
    dend_3 { pt3dadd( -19.6314, -26.0046, -13.7927, 1.11 ) }
    dend_3 { pt3dadd( -19.9616, -27.2159, -13.9763, 0.96 ) }
    dend_3 { pt3dadd( -20.2615, -28.7194, -14.2365, 1.03 ) }
    dend_3 { pt3dadd( -20.4066, -29.6976, -14.4202, 1.11 ) }
    dend_3 { pt3dadd( -20.6024, -31.1755, -14.6434, 0.96 ) }
    dend_3 { pt3dadd( -20.7641, -32.2163, -14.7836, 0.88 ) }
    dend_3 { pt3dadd( -20.857, -32.7116, -14.8415, 0.81 ) }
    dend_3 { pt3dadd( -21.0617, -33.7187, -14.9469, 0.74 ) }
    dend_3 { pt3dadd( -21.2849, -34.7265, -15.0472, 0.88 ) }
    dend_3 { pt3dadd( -21.6518, -36.1508, -15.1978, 1.03 ) }
    dend_3 { pt3dadd( -21.9174, -36.9672, -15.2685, 1.25 ) }
    dend_3 { pt3dadd( -22.4914, -38.3887, -15.3708, 1.25 ) }
    dend_3 { pt3dadd( -23.1324, -39.7457, -15.4499, 1.18 ) }
    dend_3 { pt3dadd( -23.7757, -41.0227, -15.5343, 1.11 ) }
    dend_3 { pt3dadd( -24.4127, -42.2343, -15.626, 1.03 ) }
    dend_3 { pt3dadd( -25.3585, -44.0026, -15.7923, 0.96 ) }
    dend_3 { pt3dadd( -26.0274, -45.1604, -15.8572, 0.96 ) }
    dend_3 { pt3dadd( -26.548, -45.936, -15.8501, 1.25 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -9.21047, 53.9729, 23.5613, 0.29 ) }
    dend_51 { pt3dadd( -10.1294, 55.2151, 24.5787, 0.29 ) }
    dend_51 { pt3dadd( -10.7686, 56.0688, 25.2642, 0.22 ) }
    dend_51 { pt3dadd( -11.2897, 56.7542, 25.8125, 0.22 ) }
    dend_51 { pt3dadd( -11.5538, 57.1206, 26.11, 0.22 ) }
    dend_51 { pt3dadd( -11.7671, 57.4352, 26.3776, 0.59 ) }
    dend_51 { pt3dadd( -12.1012, 57.9586, 26.8493, 1.03 ) }
    dend_51 { pt3dadd( -12.3893, 58.512, 27.3991, 1.33 ) }
    dend_51 { pt3dadd( -12.7894, 59.383, 28.2132, 0.59 ) }
    dend_51 { pt3dadd( -13.0508, 59.9866, 28.7381, 0.22 ) }
    dend_51 { pt3dadd( -13.2569, 60.6126, 29.1768, 0.22 ) }
    dend_51 { pt3dadd( -13.4377, 61.4462, 29.6363, 0.22 ) }
    dend_51 { pt3dadd( -13.5133, 62.0471, 29.8887, 0.74 ) }
    dend_51 { pt3dadd( -13.5455, 62.9205, 30.1345, 1.84 ) }
    dend_51 { pt3dadd( -13.5329, 63.6514, 30.2607, 1.84 ) }
    dend_51 { pt3dadd( -13.4344, 65.9436, 30.4361, 0.22 ) }
    dend_51 { pt3dadd( -13.3382, 67.2883, 30.4359, 0.22 ) }
    dend_51 { pt3dadd( -13.2488, 68.0267, 30.4103, 0.22 ) }
    dend_51 { pt3dadd( -12.9891, 69.5047, 30.3871, 0.22 ) }
    dend_51 { pt3dadd( -12.9033, 69.8734, 30.3901, 0.44 ) }
    dend_51 { pt3dadd( -12.6831, 70.6357, 30.4147, 1.18 ) }
    dend_51 { pt3dadd( -12.2956, 71.7689, 30.4958, 1.7 ) }
    dend_51 { pt3dadd( -11.6206, 73.6968, 30.6995, 0.15 ) }
    dend_51 { pt3dadd( -11.206, 74.9324, 30.8676, 0.15 ) }
    dend_51 { pt3dadd( -11.0821, 75.3367, 30.9482, 0.74 ) }
    dend_51 { pt3dadd( -10.8649, 76.1158, 31.1225, 1.7 ) }
    dend_51 { pt3dadd( -10.8324, 76.2479, 31.1554, 1.7 ) }
    dend_51 { pt3dadd( -10.5846, 77.6722, 31.4798, 0.15 ) }
    dend_51 { pt3dadd( -10.546, 78.2191, 31.5689, 0.15 ) }
    dend_51 { pt3dadd( -10.5398, 79.0975, 31.6565, 0.15 ) }
    dend_51 { pt3dadd( -10.5794, 79.9175, 31.6987, 0.29 ) }
    dend_51 { pt3dadd( -10.6221, 80.285, 31.7012, 0.29 ) }
    dend_51 { pt3dadd( -10.8105, 81.522, 31.6571, 0.07 ) }
    dend_51 { pt3dadd( -10.9074, 82.0858, 31.6157, 0.22 ) }
    dend_51 { pt3dadd( -10.999, 82.6275, 31.5471, 0.66 ) }
    dend_51 { pt3dadd( -11.2067, 83.8561, 31.3365, 0.96 ) }
    dend_51 { pt3dadd( -11.3679, 84.9158, 31.1287, 0.22 ) }
    dend_51 { pt3dadd( -11.5281, 86.2142, 30.845, 0.66 ) }
    dend_51 { pt3dadd( -11.616, 87.2223, 30.6402, 0.44 ) }
    dend_51 { pt3dadd( -11.6522, 87.902, 30.5183, 0.74 ) }
    dend_51 { pt3dadd( -11.6696, 88.6252, 30.4207, 1.55 ) }
    dend_51 { pt3dadd( -11.6519, 89.542, 30.3603, 1.84 ) }
    dend_51 { pt3dadd( -11.5776, 91.4484, 30.4361, 0.22 ) }
    dend_51 { pt3dadd( -11.5429, 92.4821, 30.627, 0.22 ) }
    dend_51 { pt3dadd( -11.5356, 92.8329, 30.7446, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_51 { pt3dadd( -11.5476, 93.5296, 31.076, 1.25 ) }
    dend_51 { pt3dadd( -11.5975, 94.2956, 31.5075, 1.62 ) }
    dend_51 { pt3dadd( -11.759, 95.7967, 32.4394, 0.22 ) }
    dend_51 { pt3dadd( -11.8611, 96.5525, 32.9304, 0.22 ) }
    dend_51 { pt3dadd( -12.0542, 97.711, 33.6163, 1.03 ) }
    dend_51 { pt3dadd( -12.3884, 99.5178, 34.5017, 0.15 ) }
    dend_51 { pt3dadd( -12.6218, 100.68, 34.925, 0.15 ) }
    dend_51 { pt3dadd( -12.7433, 101.261, 35.0602, 0.52 ) }
    dend_51 { pt3dadd( -12.8496, 101.781, 35.1012, 1.03 ) }
    dend_51 { pt3dadd( -13.0527, 102.83, 35.0458, 1.18 ) }
    dend_51 { pt3dadd( -13.3481, 104.292, 34.7838, 0.22 ) }
    dend_51 { pt3dadd( -13.5004, 104.992, 34.5729, 0.22 ) }
    dend_51 { pt3dadd( -13.6841, 105.718, 34.3244, 0.22 ) }
    dend_51 { pt3dadd( -14.0045, 106.819, 33.9151, 0.22 ) }
    dend_51 { pt3dadd( -14.168, 107.312, 33.7151, 0.74 ) }
    dend_51 { pt3dadd( -14.5177, 108.245, 33.3194, 1.77 ) }
    dend_51 { pt3dadd( -15.0071, 109.404, 32.8012, 0.22 ) }
    dend_51 { pt3dadd( -15.3394, 110.133, 32.4364, 0.22 ) }
    dend_51 { pt3dadd( -15.6207, 110.697, 32.1089, 0.22 ) }
    dend_51 { pt3dadd( -15.7957, 111.034, 31.8876, 0.22 ) }
    dend_51 { pt3dadd( -16.18, 111.816, 31.3832, 0.07 ) }
    dend_51 { pt3dadd( -16.4985, 112.589, 30.9261, 0.07 ) }
    dend_51 { pt3dadd( -16.7006, 113.148, 30.6372, 0.07 ) }
    dend_51 { pt3dadd( -16.9301, 113.834, 30.3332, 0.37 ) }
    dend_51 { pt3dadd( -17.1896, 114.626, 30.0508, 1.03 ) }
    dend_51 { pt3dadd( -17.6164, 115.937, 29.6787, 0.52 ) }
    dend_51 { pt3dadd( -18.1349, 117.514, 29.375, 0.15 ) }
    dend_51 { pt3dadd( -18.3919, 118.309, 29.2916, 0.29 ) }
    dend_51 { pt3dadd( -18.5773, 118.888, 29.2657, 0.96 ) }
    dend_51 { pt3dadd( -18.8206, 119.645, 29.2635, 1.11 ) }
    dend_51 { pt3dadd( -19.1237, 120.549, 29.2916, 0.22 ) }
    dend_51 { pt3dadd( -19.4993, 121.623, 29.3685, 0.22 ) }
    dend_51 { pt3dadd( -19.7711, 122.321, 29.464, 0.37 ) }
    dend_51 { pt3dadd( -20.0438, 122.98, 29.569, 0.96 ) }
    dend_51 { pt3dadd( -20.3086, 123.55, 29.6766, 0.96 ) }
    dend_51 { pt3dadd( -20.7222, 124.324, 29.8303, 0.15 ) }
    dend_51 { pt3dadd( -21.2552, 125.192, 29.976, 0.22 ) }
    dend_51 { pt3dadd( -21.8567, 126.063, 30.0978, 0.37 ) }
    dend_51 { pt3dadd( -22.5092, 126.926, 30.2102, 0.74 ) }
    dend_51 { pt3dadd( -23.3338, 127.94, 30.3277, 0.22 ) }
    dend_51 { pt3dadd( -24.3913, 129.162, 30.4429, 0.66 ) }
    dend_51 { pt3dadd( -25.2658, 130.123, 30.534, 0.07 ) }
    dend_51 { pt3dadd( -25.6023, 130.488, 30.5729, 0.07 ) }
    dend_51 { pt3dadd( -26.0188, 130.961, 30.6097, 0.15 ) }
    dend_51 { pt3dadd( -26.4833, 131.522, 30.6302, 0.81 ) }
    dend_51 { pt3dadd( -26.959, 132.148, 30.6299, 1.25 ) }
    dend_51 { pt3dadd( -27.697, 133.189, 30.6185, 0.37 ) }
    dend_51 { pt3dadd( -28.4855, 134.367, 30.585, 0.22 ) }
    dend_51 { pt3dadd( -29.2238, 135.499, 30.516, 0.37 ) }
    dend_51 { pt3dadd( -29.9589, 136.653, 30.4154, 0.88 ) }
    dend_51 { pt3dadd( -30.3455, 137.275, 30.3468, 0.37 ) }
    dend_51 { pt3dadd( -30.8628, 138.128, 30.2473, 0.15 ) }
    dend_51 { pt3dadd( -31.3513, 138.942, 30.1477, 0.15 ) }
    dend_51 { pt3dadd( -31.7467, 139.621, 30.0984, 0.37 ) }
    dend_51 { pt3dadd( -32.1827, 140.396, 30.1305, 0.74 ) }
    dend_51 { pt3dadd( -32.5628, 141.09, 30.2101, 0.29 ) }
    dend_51 { pt3dadd( -33.1917, 142.271, 30.4215, 0.15 ) }
    dend_51 { pt3dadd( -33.3849, 142.657, 30.5199, 0.44 ) }
    dend_51 { pt3dadd( -33.8362, 143.59, 30.818, 1.03 ) }
    dend_51 { pt3dadd( -34.322, 144.628, 31.1829, 0.44 ) }
    dend_51 { pt3dadd( -34.7474, 145.536, 31.533, 0.15 ) }
    dend_51 { pt3dadd( -35.2287, 146.56, 31.9409, 0.74 ) }
    dend_51 { pt3dadd( -35.8652, 148.0, 32.4833, 0.15 ) }
    dend_51 { pt3dadd( -36.1221, 148.644, 32.7161, 0.22 ) }
    dend_51 { pt3dadd( -36.3468, 149.292, 32.9433, 0.81 ) }
    dend_51 { pt3dadd( -36.4892, 149.814, 33.1158, 0.81 ) }
    dend_51 { pt3dadd( -36.7041, 150.74, 33.4078, 0.22 ) }
    dend_51 { pt3dadd( -36.9799, 152.065, 33.776, 0.15 ) }
    dend_51 { pt3dadd( -37.1557, 152.978, 34.0233, 0.22 ) }
    dend_51 { pt3dadd( -37.2748, 153.64, 34.1999, 0.37 ) }
    dend_51 { pt3dadd( -37.4913, 154.903, 34.5353, 0.96 ) }
    dend_51 { pt3dadd( -37.7628, 156.484, 34.9282, 0.15 ) }
    dend_51 { pt3dadd( -37.8956, 157.211, 35.0831, 0.15 ) }
    dend_51 { pt3dadd( -38.027, 157.828, 35.1876, 0.15 ) }
    dend_51 { pt3dadd( -38.2072, 158.558, 35.2627, 0.66 ) }
    dend_51 { pt3dadd( -38.3236, 158.989, 35.2806, 0.66 ) }
    dend_51 { pt3dadd( -38.6465, 160.09, 35.2509, 0.07 ) }
    dend_51 { pt3dadd( -38.9063, 160.976, 35.2217, 0.07 ) }
    dend_51 { pt3dadd( -39.0196, 161.336, 35.2209, 0.44 ) }
    dend_51 { pt3dadd( -39.1699, 161.787, 35.2322, 0.74 ) }
    dend_51 { pt3dadd( -39.35, 162.295, 35.2679, 0.96 ) }
    dend_51 { pt3dadd( -39.5478, 162.826, 35.3353, 0.96 ) }
    dend_51 { pt3dadd( -40.0474, 164.112, 35.5665, 0.15 ) }
    dend_51 { pt3dadd( -40.4099, 165.026, 35.765, 0.15 ) }
    dend_51 { pt3dadd( -40.8432, 166.081, 35.9908, 0.15 ) }
    dend_51 { pt3dadd( -41.0768, 166.633, 36.0955, 0.15 ) }
    dend_51 { pt3dadd( -41.3201, 167.173, 36.1782, 0.15 ) }
    dend_51 { pt3dadd( -41.5731, 167.675, 36.2278, 0.37 ) }
    dend_51 { pt3dadd( -41.8582, 168.15, 36.2656, 0.81 ) }
    dend_51 { pt3dadd( -42.2548, 168.702, 36.3169, 1.03 ) }
    dend_51 { pt3dadd( -42.8359, 169.423, 36.415, 0.37 ) }
    dend_51 { pt3dadd( -43.4978, 170.186, 36.5371, 0.15 ) }
    dend_51 { pt3dadd( -44.3432, 171.101, 36.7192, 0.29 ) }
    dend_51 { pt3dadd( -45.5645, 172.307, 37.0203, 0.29 ) }
    dend_51 { pt3dadd( -46.4985, 173.156, 37.2758, 0.15 ) }
    dend_51 { pt3dadd( -47.1262, 173.698, 37.4624, 0.29 ) }
    dend_51 { pt3dadd( -47.8701, 174.309, 37.7018, 0.88 ) }
    dend_51 { pt3dadd( -48.8185, 175.051, 38.0218, 0.15 ) }
    dend_51 { pt3dadd( -49.7245, 175.739, 38.3384, 0.15 ) }
    dend_51 { pt3dadd( -50.4949, 176.31, 38.5915, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_51 { pt3dadd( -51.3556, 176.952, 38.8796, 0.96 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 1/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -9.21047, 53.9729, 23.5613, 0.22 ) }
    dend_50 { pt3dadd( -8.28345, 55.0606, 24.0502, 0.22 ) }
    dend_50 { pt3dadd( -7.68094, 55.8183, 24.3097, 0.15 ) }
    dend_50 { pt3dadd( -7.11084, 56.5763, 24.5657, 0.22 ) }
    dend_50 { pt3dadd( -6.63905, 57.2343, 24.8057, 0.15 ) }
    dend_50 { pt3dadd( -6.24554, 57.7959, 25.0201, 0.37 ) }
    dend_50 { pt3dadd( -6.04157, 58.11, 25.1474, 0.37 ) }
    dend_50 { pt3dadd( -5.49681, 59.0449, 25.5483, 0.15 ) }
    dend_50 { pt3dadd( -5.01627, 59.9548, 25.9462, 0.15 ) }
    dend_50 { pt3dadd( -4.73588, 60.5197, 26.2076, 0.66 ) }
    dend_50 { pt3dadd( -4.33487, 61.3362, 26.5981, 1.03 ) }
    dend_50 { pt3dadd( -3.778, 62.4477, 27.1622, 0.15 ) }
    dend_50 { pt3dadd( -3.48602, 63.012, 27.45, 0.15 ) }
    dend_50 { pt3dadd( -3.14192, 63.6585, 27.7735, 0.15 ) }
    dend_50 { pt3dadd( -2.76847, 64.3497, 28.0741, 0.59 ) }
    dend_50 { pt3dadd( -2.30139, 65.2212, 28.4172, 0.07 ) }
    dend_50 { pt3dadd( -1.99126, 65.8226, 28.6329, 0.07 ) }
    dend_50 { pt3dadd( -1.69353, 66.4129, 28.8098, 0.66 ) }
    dend_50 { pt3dadd( -1.58366, 66.657, 28.8709, 0.66 ) }
    dend_50 { pt3dadd( -1.3418, 67.2888, 29.0333, 0.15 ) }
    dend_50 { pt3dadd( -1.14038, 67.9357, 29.1942, 0.15 ) }
    dend_50 { pt3dadd( -1.04631, 68.2905, 29.2784, 0.52 ) }
    dend_50 { pt3dadd( -0.882698, 68.9332, 29.4135, 1.55 ) }
    dend_50 { pt3dadd( -0.750511, 69.4411, 29.5341, 1.77 ) }
    dend_50 { pt3dadd( -0.42722, 70.6449, 29.8412, 0.74 ) }
    dend_50 { pt3dadd( -0.153225, 71.6199, 30.1301, 0.15 ) }
    dend_50 { pt3dadd( 0.0167949, 72.2074, 30.3212, 0.15 ) }
    dend_50 { pt3dadd( 0.174841, 72.7786, 30.534, 0.22 ) }
    dend_50 { pt3dadd( 0.32668, 73.4498, 30.8234, 0.22 ) }
    dend_50 { pt3dadd( 0.453447, 74.1203, 31.1492, 0.37 ) }
    dend_50 { pt3dadd( 0.571571, 74.8852, 31.5562, 0.52 ) }
    dend_50 { pt3dadd( 0.633309, 75.3598, 31.8303, 1.47 ) }
    dend_50 { pt3dadd( 0.714386, 76.0015, 32.2543, 2.06 ) }
    dend_50 { pt3dadd( 0.893234, 77.2967, 33.167, 0.29 ) }
    dend_50 { pt3dadd( 0.978126, 77.8464, 33.5584, 0.29 ) }
    dend_50 { pt3dadd( 1.12983, 78.7475, 34.2197, 0.74 ) }
    dend_50 { pt3dadd( 1.28265, 79.5543, 34.7857, 0.22 ) }
    dend_50 { pt3dadd( 1.55292, 80.7298, 35.5717, 0.29 ) }
    dend_50 { pt3dadd( 1.68065, 81.2066, 35.8664, 0.52 ) }
    dend_50 { pt3dadd( 1.77954, 81.5455, 36.0529, 0.22 ) }
    dend_50 { pt3dadd( 1.98081, 82.3696, 36.396, 0.22 ) }
    dend_50 { pt3dadd( 2.13985, 83.1622, 36.6554, 0.22 ) }
    dend_50 { pt3dadd( 2.30596, 84.1424, 36.9075, 0.22 ) }
    dend_50 { pt3dadd( 2.36136, 84.5763, 36.9922, 0.44 ) }
    dend_50 { pt3dadd( 2.43418, 85.362, 37.1388, 1.25 ) }
    dend_50 { pt3dadd( 2.56211, 87.1686, 37.4729, 0.07 ) }
    dend_50 { pt3dadd( 2.61124, 88.1734, 37.6465, 0.07 ) }
    dend_50 { pt3dadd( 2.62065, 88.6141, 37.7219, 0.22 ) }
    dend_50 { pt3dadd( 2.62115, 89.2709, 37.825, 0.96 ) }
    dend_50 { pt3dadd( 2.60862, 89.9362, 37.9295, 0.29 ) }
    dend_50 { pt3dadd( 2.57395, 91.0343, 38.0937, 0.07 ) }
    dend_50 { pt3dadd( 2.54907, 91.6891, 38.1991, 0.07 ) }
    dend_50 { pt3dadd( 2.53035, 92.0631, 38.2387, 0.15 ) }
    dend_50 { pt3dadd( 2.49312, 92.7354, 38.2831, 1.25 ) }
    dend_50 { pt3dadd( 2.37016, 95.0941, 38.3638, 0.15 ) }
    dend_50 { pt3dadd( 2.35057, 95.4636, 38.3676, 0.44 ) }
    dend_50 { pt3dadd( 2.31081, 96.1848, 38.356, 0.96 ) }
    dend_50 { pt3dadd( 2.24502, 97.4062, 38.3429, 1.18 ) }
    dend_50 { pt3dadd( 2.15922, 99.0239, 38.3332, 0.07 ) }
    dend_50 { pt3dadd( 2.13143, 99.5776, 38.3298, 0.22 ) }
    dend_50 { pt3dadd( 2.10568, 100.408, 38.3363, 0.88 ) }
    dend_50 { pt3dadd( 2.09142, 101.077, 38.3568, 0.44 ) }
    dend_50 { pt3dadd( 2.0899, 101.906, 38.4031, 0.15 ) }
    dend_50 { pt3dadd( 2.09606, 102.635, 38.4725, 0.15 ) }
    dend_50 { pt3dadd( 2.09872, 103.091, 38.5129, 0.37 ) }
    dend_50 { pt3dadd( 2.08723, 104.251, 38.597, 1.55 ) }
    dend_50 { pt3dadd( 2.05354, 106.123, 38.7098, 0.07 ) }
    dend_50 { pt3dadd( 2.0286, 106.963, 38.7503, 0.07 ) }
    dend_50 { pt3dadd( 2.00524, 107.572, 38.7655, 0.37 ) }
    dend_50 { pt3dadd( 1.98369, 108.033, 38.7821, 0.37 ) }
    dend_50 { pt3dadd( 1.92246, 109.103, 38.8194, 0.07 ) }
    dend_50 { pt3dadd( 1.90085, 109.374, 38.8279, 0.29 ) }
    dend_50 { pt3dadd( 1.83246, 110.114, 38.8641, 1.18 ) }
    dend_50 { pt3dadd( 1.68892, 111.807, 38.9366, 0.07 ) }
    dend_50 { pt3dadd( 1.63004, 112.914, 38.9619, 0.07 ) }
    dend_50 { pt3dadd( 1.62265, 113.287, 38.9628, 0.07 ) }
    dend_50 { pt3dadd( 1.62403, 113.758, 38.9445, 0.37 ) }
    dend_50 { pt3dadd( 1.63301, 114.42, 38.8983, 0.96 ) }
    dend_50 { pt3dadd( 1.65018, 115.376, 38.7898, 0.07 ) }
    dend_50 { pt3dadd( 1.66042, 116.24, 38.6224, 0.29 ) }
    dend_50 { pt3dadd( 1.65598, 117.59, 38.243, 0.07 ) }
    dend_50 { pt3dadd( 1.645, 118.925, 37.802, 0.07 ) }
    dend_50 { pt3dadd( 1.64313, 119.108, 37.7283, 0.44 ) }
    dend_50 { pt3dadd( 1.64449, 120.001, 37.2491, 1.18 ) }
    dend_50 { pt3dadd( 1.67038, 121.05, 36.4966, 0.15 ) }
    dend_50 { pt3dadd( 1.69925, 121.612, 35.9638, 0.15 ) }
    dend_50 { pt3dadd( 1.72422, 121.91, 35.5812, 0.59 ) }
    dend_50 { pt3dadd( 1.75988, 122.2, 35.099, 0.59 ) }
    dend_50 { pt3dadd( 1.83021, 122.82, 33.9397, 0.22 ) }
    dend_50 { pt3dadd( 1.87345, 123.123, 33.2899, 0.22 ) }
    dend_50 { pt3dadd( 1.91977, 123.377, 32.7408, 0.22 ) }
    dend_50 { pt3dadd( 1.9551, 123.572, 32.3312, 0.22 ) }
    dend_50 { pt3dadd( 2.00984, 123.967, 31.5243, 0.37 ) }
    dend_50 { pt3dadd( 2.03442, 124.316, 30.8529, 1.03 ) }
    dend_50 { pt3dadd( 2.04555, 124.742, 30.0804, 0.74 ) }
    dend_50 { pt3dadd( 2.07631, 125.172, 29.2873, 0.22 ) }
    dend_50 { pt3dadd( 2.16886, 125.703, 28.3535, 0.22 ) }
    dend_50 { pt3dadd( 2.20331, 125.849, 28.1044, 0.22 ) }
    dend_50 { pt3dadd( 2.2889, 126.169, 27.5403, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_50 { pt3dadd( 2.35368, 126.409, 27.0918, 0.22 ) }
    dend_50 { pt3dadd( 2.4353, 126.781, 26.4028, 0.22 ) }
    dend_50 { pt3dadd( 2.49435, 127.122, 25.7516, 0.88 ) }
    dend_50 { pt3dadd( 2.59095, 127.713, 24.5963, 0.15 ) }
    dend_50 { pt3dadd( 2.66577, 128.199, 23.6104, 0.15 ) }
    dend_50 { pt3dadd( 2.72933, 128.653, 22.7317, 0.15 ) }
    dend_50 { pt3dadd( 2.78866, 129.191, 21.7551, 0.74 ) }
    dend_50 { pt3dadd( 2.85072, 129.833, 20.6117, 0.44 ) }
    dend_50 { pt3dadd( 2.90391, 130.334, 19.7326, 0.44 ) }
    dend_50 { pt3dadd( 2.96859, 130.746, 19.0496, 0.44 ) }
    dend_50 { pt3dadd( 3.03439, 131.192, 18.3606, 0.74 ) }
    dend_50 { pt3dadd( 3.08163, 131.798, 17.4823, 0.22 ) }
    dend_50 { pt3dadd( 3.06961, 132.142, 17.0085, 0.22 ) }
    dend_50 { pt3dadd( 3.01977, 132.448, 16.6061, 0.44 ) }
    dend_50 { pt3dadd( 2.91437, 132.845, 16.0998, 0.44 ) }
    dend_50 { pt3dadd( 2.7391, 133.373, 15.4382, 0.22 ) }
    dend_50 { pt3dadd( 2.52468, 133.978, 14.7585, 0.29 ) }
    dend_50 { pt3dadd( 2.30208, 134.633, 14.1655, 0.22 ) }
    dend_50 { pt3dadd( 2.11855, 135.251, 13.7196, 0.22 ) }
    dend_50 { pt3dadd( 2.02842, 135.637, 13.4976, 0.66 ) }
    dend_50 { pt3dadd( 1.89696, 136.532, 13.1264, 0.96 ) }
    dend_50 { pt3dadd( 1.79964, 138.005, 12.7083, 0.22 ) }
    dend_50 { pt3dadd( 1.78, 138.876, 12.5587, 0.37 ) }
    dend_50 { pt3dadd( 1.77023, 139.495, 12.5271, 0.07 ) }
    dend_50 { pt3dadd( 1.76116, 140.151, 12.5771, 0.07 ) }
    dend_50 { pt3dadd( 1.75644, 140.816, 12.6869, 0.07 ) }
    dend_50 { pt3dadd( 1.75354, 141.292, 12.81, 0.29 ) }
    dend_50 { pt3dadd( 1.74727, 141.805, 12.9763, 0.66 ) }
    dend_50 { pt3dadd( 1.73485, 142.514, 13.2298, 0.88 ) }
    dend_50 { pt3dadd( 1.71187, 143.726, 13.6861, 0.15 ) }
    dend_50 { pt3dadd( 1.70635, 144.348, 13.9132, 0.15 ) }
    dend_50 { pt3dadd( 1.73183, 144.783, 14.0745, 0.22 ) }
    dend_50 { pt3dadd( 1.80086, 145.183, 14.2174, 0.22 ) }
    dend_50 { pt3dadd( 2.00634, 145.872, 14.4553, 0.22 ) }
    dend_50 { pt3dadd( 2.24191, 146.479, 14.6569, 0.22 ) }
    dend_50 { pt3dadd( 2.49381, 147.03, 14.8313, 0.81 ) }
    dend_50 { pt3dadd( 3.11965, 148.337, 15.2422, 0.22 ) }
    dend_50 { pt3dadd( 3.65747, 149.362, 15.5721, 0.22 ) }
    dend_50 { pt3dadd( 4.20501, 150.326, 15.8949, 0.22 ) }
    dend_50 { pt3dadd( 4.4209, 150.681, 16.0183, 0.37 ) }
    dend_50 { pt3dadd( 4.76552, 151.209, 16.2206, 0.96 ) }
    dend_50 { pt3dadd( 5.63173, 152.486, 16.7843, 0.15 ) }
    dend_50 { pt3dadd( 6.13457, 153.208, 17.1502, 0.15 ) }
    dend_50 { pt3dadd( 6.36555, 153.552, 17.348, 0.15 ) }
    dend_50 { pt3dadd( 6.61733, 153.937, 17.5868, 0.15 ) }
    dend_50 { pt3dadd( 7.03222, 154.541, 17.996, 0.15 ) }
    dend_50 { pt3dadd( 7.27216, 154.864, 18.2507, 0.29 ) }
    dend_50 { pt3dadd( 7.64818, 155.328, 18.6789, 0.66 ) }
    dend_50 { pt3dadd( 7.81845, 155.534, 18.8761, 0.66 ) }
    dend_50 { pt3dadd( 8.43276, 156.272, 19.5676, 0.15 ) }
    dend_50 { pt3dadd( 8.7684, 156.683, 19.9246, 0.22 ) }
    dend_50 { pt3dadd( 9.43915, 157.502, 20.63, 0.15 ) }
    dend_50 { pt3dadd( 9.85221, 157.987, 21.0323, 0.15 ) }
    dend_50 { pt3dadd( 10.4137, 158.625, 21.5609, 0.15 ) }
    dend_50 { pt3dadd( 10.7362, 158.989, 21.8478, 0.29 ) }
    dend_50 { pt3dadd( 11.3326, 159.66, 22.3507, 0.15 ) }
    dend_50 { pt3dadd( 11.672, 160.059, 22.6188, 0.15 ) }
    dend_50 { pt3dadd( 12.0163, 160.481, 22.8506, 0.37 ) }
    dend_50 { pt3dadd( 12.5746, 161.198, 23.1938, 0.15 ) }
    dend_50 { pt3dadd( 12.9279, 161.677, 23.4339, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 60/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -149.655, -344.011, -4.23941, 0.07 ) }
    dend_42 { pt3dadd( -149.231, -343.586, -4.14933, 0.07 ) }
    dend_42 { pt3dadd( -148.586, -342.908, -4.10713, 0.29 ) }
    dend_42 { pt3dadd( -148.056, -342.356, -4.13106, 0.07 ) }
    dend_42 { pt3dadd( -147.495, -341.801, -4.2466, 0.07 ) }
    dend_42 { pt3dadd( -146.839, -341.191, -4.47433, 0.15 ) }
    dend_42 { pt3dadd( -146.36, -340.756, -4.67482, 0.15 ) }
    dend_42 { pt3dadd( -146.028, -340.471, -4.86359, 0.15 ) }
    dend_42 { pt3dadd( -145.572, -340.086, -5.22663, 0.29 ) }
    dend_42 { pt3dadd( -145.024, -339.641, -5.75439, 0.07 ) }
    dend_42 { pt3dadd( -144.651, -339.347, -6.15871, 0.29 ) }
    dend_42 { pt3dadd( -144.311, -339.121, -6.50147, 0.44 ) }
    dend_42 { pt3dadd( -144.154, -339.037, -6.64633, 0.44 ) }
    dend_42 { pt3dadd( -143.508, -338.751, -7.24373, 0.15 ) }
    dend_42 { pt3dadd( -143.031, -338.544, -7.70336, 0.15 ) }
    dend_42 { pt3dadd( -142.846, -338.463, -7.87634, 0.15 ) }
    dend_42 { pt3dadd( -142.13, -338.17, -8.56014, 0.15 ) }
    dend_42 { pt3dadd( -141.813, -338.055, -8.8853, 0.37 ) }
    dend_42 { pt3dadd( -141.006, -337.775, -9.78466, 0.22 ) }
    dend_42 { pt3dadd( -140.609, -337.637, -10.2428, 0.22 ) }
    dend_42 { pt3dadd( -140.387, -337.55, -10.5081, 0.22 ) }
    dend_42 { pt3dadd( -139.915, -337.322, -11.0956, 0.15 ) }
    dend_42 { pt3dadd( -139.389, -337.038, -11.7355, 0.15 ) }
    dend_42 { pt3dadd( -138.911, -336.796, -12.2557, 0.15 ) }
    dend_42 { pt3dadd( -138.585, -336.647, -12.5445, 0.37 ) }
    dend_42 { pt3dadd( -138.031, -336.412, -12.8938, 0.44 ) }
    dend_42 { pt3dadd( -137.471, -336.154, -13.1655, 0.22 ) }
    dend_42 { pt3dadd( -136.871, -335.865, -13.3782, 0.37 ) }
    dend_42 { pt3dadd( -136.499, -335.682, -13.4634, 0.37 ) }
    dend_42 { pt3dadd( -135.695, -335.301, -13.5749, 0.22 ) }
    dend_42 { pt3dadd( -134.603, -334.804, -13.6863, 0.22 ) }
    dend_42 { pt3dadd( -133.517, -334.387, -13.7185, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 92/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -149.655, -344.011, -4.23941, 0.15 ) }
    dend_41 { pt3dadd( -149.933, -344.696, -4.31388, 0.15 ) }
    dend_41 { pt3dadd( -150.196, -345.482, -4.32718, 0.29 ) }
    dend_41 { pt3dadd( -150.451, -346.276, -4.29675, 0.15 ) }
    dend_41 { pt3dadd( -150.734, -347.021, -4.24812, 0.15 ) }
    dend_41 { pt3dadd( -150.982, -347.631, -4.2022, 0.15 ) }
    dend_41 { pt3dadd( -151.129, -347.979, -4.1755, 0.15 ) }
    dend_41 { pt3dadd( -151.455, -348.719, -4.08767, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_41 { pt3dadd( -151.795, -349.536, -3.98869, 0.81 ) }
    dend_41 { pt3dadd( -152.143, -350.589, -3.8734, 0.15 ) }
    dend_41 { pt3dadd( -152.348, -351.42, -3.79369, 0.22 ) }
    dend_41 { pt3dadd( -152.485, -352.27, -3.72217, 0.07 ) }
    dend_41 { pt3dadd( -152.516, -353.166, -3.62802, 0.07 ) }
    dend_41 { pt3dadd( -152.435, -354.036, -3.49368, 0.37 ) }
    dend_41 { pt3dadd( -152.116, -355.294, -3.21237, 0.15 ) }
    dend_41 { pt3dadd( -151.839, -356.016, -3.00078, 0.15 ) }
    dend_41 { pt3dadd( -151.605, -356.527, -2.82283, 0.37 ) }
    dend_41 { pt3dadd( -150.999, -357.774, -2.32076, 0.15 ) }
    dend_41 { pt3dadd( -150.651, -358.53, -1.99514, 0.15 ) }
    dend_41 { pt3dadd( -150.437, -359.114, -1.73647, 0.15 ) }
    dend_41 { pt3dadd( -150.374, -359.415, -1.61024, 0.15 ) }
    dend_41 { pt3dadd( -150.312, -360.184, -1.33194, 0.37 ) }
    dend_41 { pt3dadd( -150.341, -361.117, -1.06919, 0.07 ) }
    dend_41 { pt3dadd( -150.467, -361.849, -0.936605, 0.07 ) }
    dend_41 { pt3dadd( -150.635, -362.486, -0.857018, 0.22 ) }
    dend_41 { pt3dadd( -150.954, -363.509, -0.737639, 0.07 ) }
    dend_41 { pt3dadd( -151.092, -363.915, -0.697599, 0.07 ) }
    dend_41 { pt3dadd( -151.395, -364.682, -0.630096, 0.52 ) }
    dend_41 { pt3dadd( -151.981, -365.976, -0.556844, 0.07 ) }
    dend_41 { pt3dadd( -152.244, -366.487, -0.528511, 0.07 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 22/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 0.128087, -26.7289, -23.473, 0.44 ) }
    dend_20 { pt3dadd( 0.129062, -26.959, -23.8128, 0.44 ) }
    dend_20 { pt3dadd( 0.0989579, -27.7633, -25.1664, 0.44 ) }
    dend_20 { pt3dadd( 0.0799546, -28.1661, -25.954, 0.44 ) }
    dend_20 { pt3dadd( 0.0822208, -28.6666, -27.0403, 0.44 ) }
    dend_20 { pt3dadd( 0.0890755, -28.8815, -27.5415, 0.44 ) }
    dend_20 { pt3dadd( 0.087766, -29.0953, -28.0451, 0.44 ) }
    dend_20 { pt3dadd( 0.0658537, -29.2732, -28.4751, 0.44 ) }
    dend_20 { pt3dadd( 0.0268028, -29.4603, -28.9505, 0.44 ) }
    dend_20 { pt3dadd( -0.0348617, -29.7239, -29.6298, 0.44 ) }
    dend_20 { pt3dadd( -0.101071, -30.091, -30.5525, 0.44 ) }
    dend_20 { pt3dadd( -0.122958, -30.413, -31.2951, 0.44 ) }
    dend_20 { pt3dadd( -0.123027, -30.8777, -32.2925, 0.44 ) }
    dend_20 { pt3dadd( -0.0912128, -31.4586, -33.4778, 0.44 ) }
    dend_20 { pt3dadd( -0.0621183, -31.6502, -33.8621, 0.29 ) }
    dend_20 { pt3dadd( 0.0560145, -32.1298, -34.8698, 0.22 ) }
    dend_20 { pt3dadd( 0.178782, -32.4499, -35.5698, 0.22 ) }
    dend_20 { pt3dadd( 0.291897, -32.6723, -36.0829, 0.22 ) }
    dend_20 { pt3dadd( 0.361213, -32.7938, -36.36, 0.22 ) }
    dend_20 { pt3dadd( 0.481203, -33.0319, -36.8284, 0.29 ) }
    dend_20 { pt3dadd( 0.679564, -33.434, -37.5708, 0.29 ) }
    dend_20 { pt3dadd( 0.807398, -33.6915, -38.0203, 0.29 ) }
    dend_20 { pt3dadd( 0.958682, -33.9336, -38.5198, 0.29 ) }
    dend_20 { pt3dadd( 1.05803, -34.0316, -38.7771, 0.29 ) }
    dend_20 { pt3dadd( 1.2486, -34.1647, -39.1584, 0.29 ) }
    dend_20 { pt3dadd( 1.58151, -34.3837, -39.7158, 0.29 ) }
    dend_20 { pt3dadd( 2.0465, -34.6814, -40.3327, 0.22 ) }
    dend_20 { pt3dadd( 2.70685, -35.1308, -41.1226, 0.37 ) }
    dend_20 { pt3dadd( 3.0691, -35.4072, -41.5565, 0.37 ) }
    dend_20 { pt3dadd( 3.33897, -35.6571, -41.9416, 0.22 ) }
    dend_20 { pt3dadd( 3.69209, -36.0808, -42.5762, 0.22 ) }
    dend_20 { pt3dadd( 3.85955, -36.377, -42.9791, 0.22 ) }
    dend_20 { pt3dadd( 3.98098, -36.7126, -43.3807, 0.29 ) }
    dend_20 { pt3dadd( 4.07757, -37.1909, -43.9069, 0.29 ) }
    dend_20 { pt3dadd( 4.07885, -37.7391, -44.5349, 0.29 ) }
    dend_20 { pt3dadd( 4.00179, -38.0577, -44.9376, 0.29 ) }
    dend_20 { pt3dadd( 3.88883, -38.3111, -45.2933, 0.29 ) }
    dend_20 { pt3dadd( 3.76876, -38.5105, -45.5911, 0.22 ) }
    dend_20 { pt3dadd( 3.51056, -38.8615, -46.1345, 0.22 ) }
    dend_20 { pt3dadd( 3.11426, -39.3673, -46.8613, 0.22 ) }
    dend_20 { pt3dadd( 2.9697, -39.6031, -47.1832, 0.22 ) }
    dend_20 { pt3dadd( 2.86953, -39.9462, -47.6196, 0.22 ) }
    dend_20 { pt3dadd( 2.85603, -40.3061, -48.0588, 0.29 ) }
    dend_20 { pt3dadd( 2.87625, -40.5333, -48.3204, 0.29 ) }
    dend_20 { pt3dadd( 2.90094, -40.7355, -48.5268, 0.29 ) }
    dend_20 { pt3dadd( 2.91592, -41.2815, -49.0097, 0.29 ) }
    dend_20 { pt3dadd( 2.85152, -41.9296, -49.5395, 0.22 ) }
    dend_20 { pt3dadd( 2.74138, -42.4842, -49.9708, 0.22 ) }
    dend_20 { pt3dadd( 2.61041, -43.0174, -50.4005, 0.22 ) }
    dend_20 { pt3dadd( 2.51367, -43.4706, -50.8112, 0.22 ) }
    dend_20 { pt3dadd( 2.33483, -44.1787, -51.4818, 0.22 ) }
    dend_20 { pt3dadd( 2.25123, -44.4347, -51.73, 0.22 ) }
    dend_20 { pt3dadd( 2.13622, -44.7196, -52.0532, 0.22 ) }
    dend_20 { pt3dadd( 2.0089, -45.1492, -52.6488, 0.44 ) }
    dend_20 { pt3dadd( 2.12402, -45.5325, -53.5077, 0.44 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 0.128087, -26.7289, -23.473, 0.52 ) }
    dend_15 { pt3dadd( 0.982053, -28.1069, -23.9847, 0.52 ) }
    dend_15 { pt3dadd( 1.54092, -29.2667, -24.4603, 0.52 ) }
    dend_15 { pt3dadd( 1.90569, -30.2699, -24.8988, 0.59 ) }
    dend_15 { pt3dadd( 2.0766, -30.9153, -25.1737, 0.96 ) }
    dend_15 { pt3dadd( 2.16547, -31.4747, -25.3968, 0.96 ) }
    dend_15 { pt3dadd( 2.25013, -33.0136, -25.941, 0.81 ) }
    dend_15 { pt3dadd( 2.11136, -34.2193, -26.3066, 0.52 ) }
    dend_15 { pt3dadd( 1.86704, -35.4025, -26.6007, 0.52 ) }
    dend_15 { pt3dadd( 1.62888, -36.3736, -26.8429, 0.74 ) }
    dend_15 { pt3dadd( 1.33207, -37.6143, -27.175, 0.74 ) }
    dend_15 { pt3dadd( 1.04329, -38.9681, -27.6107, 0.66 ) }
    dend_15 { pt3dadd( 0.904937, -39.8178, -27.9259, 0.52 ) }
    dend_15 { pt3dadd( 0.855976, -40.802, -28.3381, 0.37 ) }
    dend_15 { pt3dadd( 0.908004, -41.7916, -28.8595, 0.66 ) }
    dend_15 { pt3dadd( 1.00703, -42.6862, -29.4068, 0.88 ) }
    dend_15 { pt3dadd( 1.11315, -43.5788, -30.0153, 0.88 ) }
    dend_15 { pt3dadd( 1.14934, -44.2235, -30.4908, 0.66 ) }
    dend_15 { pt3dadd( 1.10108, -45.1125, -31.143, 0.52 ) }
    dend_15 { pt3dadd( 0.965135, -46.0301, -31.7611, 0.52 ) }
    dend_15 { pt3dadd( 0.789859, -46.9686, -32.3075, 0.59 ) }
    dend_15 { pt3dadd( 0.595534, -47.8562, -32.7955, 0.59 ) }
    dend_15 { pt3dadd( 0.341989, -48.8906, -33.3786, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_15 { pt3dadd( 0.128585, -49.682, -33.8676, 0.59 ) }
    dend_15 { pt3dadd( -0.0626614, -50.3099, -34.2624, 0.66 ) }
    dend_15 { pt3dadd( -0.371768, -51.2432, -34.813, 0.59 ) }
    dend_15 { pt3dadd( -0.694257, -52.2037, -35.3454, 0.52 ) }
    dend_15 { pt3dadd( -1.05919, -53.2976, -35.8714, 0.81 ) }
    dend_15 { pt3dadd( -1.45045, -54.4299, -36.3072, 1.03 ) }
    dend_15 { pt3dadd( -1.90406, -55.6148, -36.6346, 0.59 ) }
    dend_15 { pt3dadd( -2.4042, -56.8172, -36.8166, 0.44 ) }
    dend_15 { pt3dadd( -2.69663, -57.5134, -36.82, 0.59 ) }
    dend_15 { pt3dadd( -3.05303, -58.4037, -36.7292, 0.59 ) }
    dend_15 { pt3dadd( -3.35695, -59.2335, -36.5511, 0.52 ) }
    dend_15 { pt3dadd( -3.69247, -60.2922, -36.2136, 0.52 ) }
    dend_15 { pt3dadd( -3.89825, -61.1334, -35.8837, 0.66 ) }
    dend_15 { pt3dadd( -4.00183, -61.6724, -35.6265, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 14/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -26.548, -45.936, -15.8501, 0.59 ) }
    dend_11 { pt3dadd( -26.8572, -46.1868, -15.2703, 0.59 ) }
    dend_11 { pt3dadd( -27.5801, -46.8829, -13.8766, 0.52 ) }
    dend_11 { pt3dadd( -27.9685, -47.2938, -13.179, 0.52 ) }
    dend_11 { pt3dadd( -28.3172, -47.6904, -12.6033, 0.52 ) }
    dend_11 { pt3dadd( -28.6964, -48.1624, -11.9971, 0.52 ) }
    dend_11 { pt3dadd( -29.1916, -48.7917, -11.2733, 0.66 ) }
    dend_11 { pt3dadd( -29.5903, -49.367, -10.7565, 0.81 ) }
    dend_11 { pt3dadd( -30.1398, -50.2426, -10.1803, 0.52 ) }
    dend_11 { pt3dadd( -30.4793, -50.8507, -9.86302, 0.52 ) }
    dend_11 { pt3dadd( -30.8563, -51.6305, -9.55192, 0.74 ) }
    dend_11 { pt3dadd( -31.1892, -52.4406, -9.32638, 0.44 ) }
    dend_11 { pt3dadd( -31.5301, -53.3815, -9.18383, 0.59 ) }
    dend_11 { pt3dadd( -31.7918, -54.1752, -9.10549, 0.81 ) }
    dend_11 { pt3dadd( -32.0404, -54.9725, -9.02195, 0.66 ) }
    dend_11 { pt3dadd( -32.3852, -56.0328, -8.89809, 0.59 ) }
    dend_11 { pt3dadd( -32.7512, -57.0416, -8.77916, 0.52 ) }
    dend_11 { pt3dadd( -33.3376, -58.4385, -8.59043, 0.44 ) }
    dend_11 { pt3dadd( -33.8819, -59.484, -8.41021, 0.52 ) }
    dend_11 { pt3dadd( -34.4439, -60.3639, -8.22323, 0.44 ) }
    dend_11 { pt3dadd( -34.8695, -60.9387, -8.08552, 0.44 ) }
    dend_11 { pt3dadd( -35.3908, -61.5988, -7.91838, 0.37 ) }
    dend_11 { pt3dadd( -35.9845, -62.4065, -7.70113, 0.22 ) }
    dend_11 { pt3dadd( -36.3896, -63.0606, -7.53198, 0.59 ) }
    dend_11 { pt3dadd( -36.6839, -63.6723, -7.40168, 0.88 ) }
    dend_11 { pt3dadd( -37.0697, -64.7098, -7.20761, 0.59 ) }
    dend_11 { pt3dadd( -37.3462, -65.6137, -7.02601, 0.44 ) }
    dend_11 { pt3dadd( -37.6112, -66.5769, -6.7976, 0.59 ) }
    dend_11 { pt3dadd( -37.7876, -67.2701, -6.59536, 0.52 ) }
    dend_11 { pt3dadd( -37.9843, -68.092, -6.32799, 0.29 ) }
    dend_11 { pt3dadd( -38.1675, -68.9255, -6.00566, 0.29 ) }
    dend_11 { pt3dadd( -38.4263, -70.1111, -5.4334, 0.37 ) }
    dend_11 { pt3dadd( -38.6747, -71.1516, -4.80673, 0.29 ) }
    dend_11 { pt3dadd( -38.8616, -71.8519, -4.29572, 0.29 ) }
    dend_11 { pt3dadd( -38.9761, -72.2851, -3.93207, 0.52 ) }
    dend_11 { pt3dadd( -39.1083, -72.8156, -3.4442, 0.37 ) }
    dend_11 { pt3dadd( -39.2904, -73.5726, -2.73424, 0.29 ) }
    dend_11 { pt3dadd( -39.5506, -74.4405, -1.92087, 0.37 ) }
    dend_11 { pt3dadd( -39.852, -75.1963, -1.23902, 0.66 ) }
    dend_11 { pt3dadd( -40.181, -75.8731, -0.656405, 1.03 ) }
    dend_11 { pt3dadd( -40.7358, -76.9174, 0.224876, 0.81 ) }
    dend_11 { pt3dadd( -41.1903, -77.7431, 0.894856, 1.25 ) }
    dend_11 { pt3dadd( -41.7258, -78.7579, 1.64616, 0.96 ) }
    dend_11 { pt3dadd( -42.2438, -79.7739, 2.3272, 0.37 ) }
    dend_11 { pt3dadd( -42.7718, -80.797, 2.93473, 0.44 ) }
    dend_11 { pt3dadd( -43.2309, -81.6378, 3.38275, 0.44 ) }
    dend_11 { pt3dadd( -43.6173, -82.3007, 3.68319, 0.59 ) }
    dend_11 { pt3dadd( -44.2483, -83.3085, 4.05216, 0.96 ) }
    dend_11 { pt3dadd( -44.7235, -83.9781, 4.19923, 0.37 ) }
    dend_11 { pt3dadd( -45.3836, -84.7408, 4.24329, 0.22 ) }
    dend_11 { pt3dadd( -45.8989, -85.2547, 4.21041, 0.22 ) }
    dend_11 { pt3dadd( -46.3538, -85.6863, 4.15369, 0.66 ) }
    dend_11 { pt3dadd( -46.9931, -86.3191, 4.059, 0.74 ) }
    dend_11 { pt3dadd( -47.74, -87.1306, 3.9522, 0.37 ) }
    dend_11 { pt3dadd( -48.3988, -88.0187, 3.88207, 0.44 ) }
    dend_11 { pt3dadd( -48.8281, -88.7988, 3.87276, 0.37 ) }
    dend_11 { pt3dadd( -49.1391, -89.5782, 3.89159, 0.22 ) }
    dend_11 { pt3dadd( -49.3265, -90.3089, 3.92426, 0.22 ) }
    dend_11 { pt3dadd( -49.3928, -90.7954, 3.95428, 0.59 ) }
    dend_11 { pt3dadd( -49.4375, -91.4685, 4.00925, 0.88 ) }
    dend_11 { pt3dadd( -49.512, -92.379, 4.10394, 0.29 ) }
    dend_11 { pt3dadd( -49.5816, -92.8385, 4.16096, 0.22 ) }
    dend_11 { pt3dadd( -49.7909, -93.6397, 4.29631, 0.52 ) }
    dend_11 { pt3dadd( -50.1535, -94.6199, 4.50191, 0.22 ) }
    dend_11 { pt3dadd( -50.3603, -95.0877, 4.61161, 0.22 ) }
    dend_11 { pt3dadd( -50.761, -95.9528, 4.8199, 0.29 ) }
    dend_11 { pt3dadd( -50.9632, -96.4396, 4.94446, 0.29 ) }
    dend_11 { pt3dadd( -51.2412, -97.1983, 5.16732, 0.22 ) }
    dend_11 { pt3dadd( -51.3563, -97.5552, 5.28268, 0.74 ) }
    dend_11 { pt3dadd( -51.5077, -98.1028, 5.46081, 0.96 ) }
    dend_11 { pt3dadd( -51.7396, -98.9844, 5.76246, 0.59 ) }
    dend_11 { pt3dadd( -52.0034, -100.038, 6.16178, 0.15 ) }
    dend_11 { pt3dadd( -52.1883, -100.702, 6.466, 0.15 ) }
    dend_11 { pt3dadd( -52.3125, -101.069, 6.6542, 0.59 ) }
    dend_11 { pt3dadd( -52.6954, -101.974, 7.17924, 0.96 ) }
    dend_11 { pt3dadd( -53.2203, -102.958, 7.8205, 0.22 ) }
    dend_11 { pt3dadd( -53.5846, -103.486, 8.21022, 0.15 ) }
    dend_11 { pt3dadd( -54.2314, -104.247, 8.8212, 0.15 ) }
    dend_11 { pt3dadd( -54.5003, -104.543, 9.07801, 0.66 ) }
    dend_11 { pt3dadd( -54.7242, -104.78, 9.31088, 0.96 ) }
    dend_11 { pt3dadd( -54.9893, -105.05, 9.59692, 1.11 ) }
    dend_11 { pt3dadd( -55.5622, -105.601, 10.158, 0.52 ) }
    dend_11 { pt3dadd( -56.1679, -106.18, 10.7242, 0.15 ) }
    dend_11 { pt3dadd( -56.7381, -106.767, 11.2908, 0.15 ) }
    dend_11 { pt3dadd( -57.0376, -107.106, 11.6291, 0.15 ) }
    dend_11 { pt3dadd( -57.2998, -107.431, 11.9506, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_11 { pt3dadd( -57.7937, -108.087, 12.5923, 0.96 ) }
    dend_11 { pt3dadd( -58.4684, -109.037, 13.483, 0.22 ) }
    dend_11 { pt3dadd( -58.9373, -109.75, 14.1541, 0.22 ) }
    dend_11 { pt3dadd( -59.2629, -110.284, 14.6799, 0.22 ) }
    dend_11 { pt3dadd( -59.4866, -110.695, 15.1032, 0.59 ) }
    dend_11 { pt3dadd( -59.7574, -111.301, 15.7888, 1.11 ) }
    dend_11 { pt3dadd( -59.9057, -111.794, 16.4084, 0.44 ) }
    dend_11 { pt3dadd( -60.0152, -112.467, 17.3672, 0.22 ) }
    dend_11 { pt3dadd( -60.0408, -112.911, 18.0527, 0.22 ) }
    dend_11 { pt3dadd( -60.0335, -113.04, 18.2565, 0.22 ) }
    dend_11 { pt3dadd( -60.0087, -113.286, 18.667, 0.22 ) }
    dend_11 { pt3dadd( -59.9907, -113.673, 19.3333, 0.22 ) }
    dend_11 { pt3dadd( -60.0249, -113.977, 19.8907, 0.22 ) }
    dend_11 { pt3dadd( -60.1004, -114.17, 20.3032, 0.44 ) }
    dend_11 { pt3dadd( -60.2958, -114.487, 21.0427, 0.81 ) }
    dend_11 { pt3dadd( -60.6096, -114.92, 22.0718, 0.81 ) }
    dend_11 { pt3dadd( -60.9208, -115.319, 23.0025, 0.66 ) }
    dend_11 { pt3dadd( -61.1897, -115.667, 23.7786, 0.66 ) }
    dend_11 { pt3dadd( -61.7621, -116.388, 25.3645, 0.22 ) }
    dend_11 { pt3dadd( -62.1174, -116.815, 26.3193, 0.22 ) }
    dend_11 { pt3dadd( -62.3211, -117.053, 26.845, 0.66 ) }
    dend_11 { pt3dadd( -62.561, -117.331, 27.3961, 0.74 ) }
    dend_11 { pt3dadd( -63.127, -118.02, 28.5244, 0.22 ) }
    dend_11 { pt3dadd( -63.6098, -118.642, 29.3674, 0.15 ) }
    dend_11 { pt3dadd( -64.1064, -119.301, 30.1181, 0.15 ) }
    dend_11 { pt3dadd( -64.643, -120.016, 30.8777, 0.15 ) }
    dend_11 { pt3dadd( -65.1234, -120.645, 31.4927, 1.18 ) }
    dend_11 { pt3dadd( -65.7199, -121.406, 32.1812, 0.07 ) }
    dend_11 { pt3dadd( -66.3009, -122.153, 32.7157, 0.07 ) }
    dend_11 { pt3dadd( -66.6925, -122.669, 32.9943, 0.07 ) }
    dend_11 { pt3dadd( -66.9318, -122.96, 33.1391, 0.07 ) }
    dend_11 { pt3dadd( -67.4297, -123.49, 33.4545, 0.96 ) }
    dend_11 { pt3dadd( -68.4084, -124.41, 34.1311, 0.07 ) }
    dend_11 { pt3dadd( -69.1978, -125.089, 34.6666, 0.07 ) }
    dend_11 { pt3dadd( -69.7179, -125.516, 35.0183, 0.66 ) }
    dend_11 { pt3dadd( -71.3992, -126.849, 36.1597, 0.07 ) }
    dend_11 { pt3dadd( -72.2683, -127.542, 36.7836, 0.07 ) }
    dend_11 { pt3dadd( -73.0952, -128.21, 37.4134, 0.07 ) }
    dend_11 { pt3dadd( -73.8046, -128.776, 38.0205, 0.07 ) }
    dend_11 { pt3dadd( -74.5331, -129.345, 38.759, 0.07 ) }
    dend_11 { pt3dadd( -75.0119, -129.71, 39.2804, 0.07 ) }
    dend_11 { pt3dadd( -75.7146, -130.212, 40.0939, 0.07 ) }
    dend_11 { pt3dadd( -76.5694, -130.762, 41.1056, 0.15 ) }
    dend_11 { pt3dadd( -78.0027, -131.61, 42.9019, 0.07 ) }
    dend_11 { pt3dadd( -79.0663, -132.175, 44.289, 0.07 ) }
    dend_11 { pt3dadd( -79.619, -132.444, 45.0257, 0.07 ) }
    dend_11 { pt3dadd( -80.3547, -132.766, 46.0523, 0.07 ) }
    dend_11 { pt3dadd( -80.7338, -132.897, 46.5798, 0.59 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 48/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -26.548, -45.936, -15.8501, 0.66 ) }
    dend_4 { pt3dadd( -27.0074, -46.8863, -16.2254, 0.66 ) }
    dend_4 { pt3dadd( -27.5156, -47.9015, -16.5339, 0.66 ) }
    dend_4 { pt3dadd( -27.8562, -48.6246, -16.7032, 0.66 ) }
    dend_4 { pt3dadd( -28.0924, -49.1611, -16.8077, 0.66 ) }
    dend_4 { pt3dadd( -28.5322, -50.2404, -16.989, 0.59 ) }
    dend_4 { pt3dadd( -28.8837, -51.2332, -17.1107, 0.66 ) }
    dend_4 { pt3dadd( -29.1154, -52.0576, -17.1333, 0.88 ) }
    dend_4 { pt3dadd( -29.2837, -53.0724, -17.046, 0.59 ) }
    dend_4 { pt3dadd( -29.3185, -54.2146, -16.8085, 0.59 ) }
    dend_4 { pt3dadd( -29.2398, -54.9152, -16.5838, 0.59 ) }
    dend_4 { pt3dadd( -28.9921, -55.9189, -16.1468, 0.81 ) }
    dend_4 { pt3dadd( -28.7278, -56.8086, -15.6802, 0.81 ) }
    dend_4 { pt3dadd( -28.4466, -57.749, -15.1409, 0.88 ) }
    dend_4 { pt3dadd( -28.1458, -58.9129, -14.4256, 0.88 ) }
    dend_4 { pt3dadd( -27.9617, -59.9796, -13.7693, 0.74 ) }
    dend_4 { pt3dadd( -27.9343, -61.1302, -13.1291, 0.74 ) }
    dend_4 { pt3dadd( -28.1312, -62.3691, -12.5805, 0.74 ) }
    dend_4 { pt3dadd( -28.3465, -63.0519, -12.3357, 0.81 ) }
    dend_4 { pt3dadd( -28.703, -63.8964, -12.1003, 0.81 ) }
    dend_4 { pt3dadd( -29.2431, -65.0235, -11.885, 0.74 ) }
    dend_4 { pt3dadd( -29.8187, -66.1971, -11.7936, 0.74 ) }
    dend_4 { pt3dadd( -30.2918, -67.26, -11.8105, 0.74 ) }
    dend_4 { pt3dadd( -30.6008, -68.1235, -11.8761, 0.81 ) }
    dend_4 { pt3dadd( -30.8109, -68.9169, -11.947, 0.81 ) }
    dend_4 { pt3dadd( -31.0334, -70.2309, -12.0711, 0.59 ) }
    dend_4 { pt3dadd( -31.1598, -71.8346, -12.1952, 0.81 ) }
    dend_4 { pt3dadd( -31.1613, -72.9427, -12.2597, 0.66 ) }
    dend_4 { pt3dadd( -31.1092, -74.2889, -12.3101, 0.59 ) }
    dend_4 { pt3dadd( -31.0667, -75.2805, -12.3521, 0.59 ) }
    dend_4 { pt3dadd( -31.0367, -76.0232, -12.3668, 0.52 ) }
    dend_4 { pt3dadd( -31.0129, -77.217, -12.3753, 0.88 ) }
    dend_4 { pt3dadd( -31.0502, -78.3402, -12.3783, 0.88 ) }
    dend_4 { pt3dadd( -31.1886, -79.6702, -12.4356, 0.81 ) }
    dend_4 { pt3dadd( -31.4223, -80.9802, -12.5427, 0.81 ) }
    dend_4 { pt3dadd( -31.5821, -81.6271, -12.6126, 0.88 ) }
    dend_4 { pt3dadd( -31.9841, -82.9225, -12.7761, 0.81 ) }
    dend_4 { pt3dadd( -32.4037, -84.0755, -12.9113, 0.81 ) }
    dend_4 { pt3dadd( -32.7712, -84.9718, -12.977, 0.96 ) }
    dend_4 { pt3dadd( -33.2948, -86.1434, -12.9724, 0.74 ) }
    dend_4 { pt3dadd( -33.6279, -86.8241, -12.8996, 0.74 ) }
    dend_4 { pt3dadd( -34.1194, -87.7374, -12.7009, 0.44 ) }
    dend_4 { pt3dadd( -34.5178, -88.4408, -12.4492, 0.66 ) }
    dend_4 { pt3dadd( -35.0251, -89.2681, -12.0761, 0.59 ) }
    dend_4 { pt3dadd( -35.5026, -89.9239, -11.7454, 0.59 ) }
    dend_4 { pt3dadd( -35.9971, -90.4602, -11.4254, 0.96 ) }
    dend_4 { pt3dadd( -36.9158, -91.258, -10.8712, 0.52 ) }
    dend_4 { pt3dadd( -37.7267, -91.8732, -10.4214, 0.52 ) }
    dend_4 { pt3dadd( -38.2803, -92.2843, -10.1642, 0.52 ) }
    dend_4 { pt3dadd( -39.0317, -92.8755, -9.85171, 0.52 ) }
    dend_4 { pt3dadd( -39.781, -93.5602, -9.58518, 0.59 ) }
    dend_4 { pt3dadd( -40.6198, -94.5275, -9.32141, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_4 { pt3dadd( -41.1748, -95.3849, -9.18206, 0.66 ) }
    dend_4 { pt3dadd( -41.7136, -96.4816, -9.09222, 0.74 ) }
    dend_4 { pt3dadd( -42.0614, -97.365, -9.05886, 1.03 ) }
    dend_4 { pt3dadd( -42.3808, -98.3577, -9.08128, 1.03 ) }
    dend_4 { pt3dadd( -42.7131, -99.5623, -9.16748, 0.96 ) }
    dend_4 { pt3dadd( -42.9463, -100.572, -9.29248, 0.66 ) }
    dend_4 { pt3dadd( -43.1881, -101.749, -9.45094, 0.52 ) }
    dend_4 { pt3dadd( -43.4251, -103.021, -9.65642, 0.59 ) }
    dend_4 { pt3dadd( -43.6238, -104.123, -9.89036, 0.44 ) }
    dend_4 { pt3dadd( -43.7489, -104.832, -10.0786, 0.88 ) }
    dend_4 { pt3dadd( -43.9411, -105.964, -10.4563, 0.59 ) }
    dend_4 { pt3dadd( -44.0696, -106.887, -10.8214, 0.59 ) }
    dend_4 { pt3dadd( -44.1707, -107.957, -11.3194, 0.66 ) }
    dend_4 { pt3dadd( -44.2413, -108.581, -11.6478, 0.66 ) }
    dend_4 { pt3dadd( -44.3561, -109.2, -11.9851, 0.96 ) }
    dend_4 { pt3dadd( -44.5518, -109.898, -12.3582, 0.96 ) }
    dend_4 { pt3dadd( -44.9453, -110.924, -12.8277, 0.44 ) }
    dend_4 { pt3dadd( -45.3422, -111.769, -13.1363, 0.44 ) }
    dend_4 { pt3dadd( -45.8717, -112.77, -13.3828, 0.44 ) }
    dend_4 { pt3dadd( -46.2755, -113.494, -13.475, 0.88 ) }
    dend_4 { pt3dadd( -46.9175, -114.612, -13.4753, 0.66 ) }
    dend_4 { pt3dadd( -47.5666, -115.756, -13.3412, 0.52 ) }
    dend_4 { pt3dadd( -48.0517, -116.727, -13.1394, 0.74 ) }
    dend_4 { pt3dadd( -48.2992, -117.394, -12.9497, 0.74 ) }
    dend_4 { pt3dadd( -48.4565, -118.129, -12.6958, 0.74 ) }
    dend_4 { pt3dadd( -48.5178, -119.021, -12.3308, 0.59 ) }
    dend_4 { pt3dadd( -48.4791, -119.701, -12.0256, 0.81 ) }
    dend_4 { pt3dadd( -48.335, -120.988, -11.4363, 0.88 ) }
    dend_4 { pt3dadd( -48.2192, -122.2, -10.8957, 0.59 ) }
    dend_4 { pt3dadd( -48.189, -123.181, -10.4816, 0.66 ) }
    dend_4 { pt3dadd( -48.2602, -124.374, -10.0221, 0.66 ) }
    dend_4 { pt3dadd( -48.3455, -124.858, -9.8548, 0.66 ) }
    dend_4 { pt3dadd( -48.661, -125.956, -9.52925, 0.52 ) }
    dend_4 { pt3dadd( -49.1042, -127.156, -9.24514, 0.52 ) }
    dend_4 { pt3dadd( -49.5208, -128.295, -9.06915, 0.74 ) }
    dend_4 { pt3dadd( -49.7674, -129.093, -9.01633, 0.96 ) }
    dend_4 { pt3dadd( -50.0478, -130.363, -9.01237, 1.18 ) }
    dend_4 { pt3dadd( -50.1869, -131.469, -9.03279, 0.66 ) }
    dend_4 { pt3dadd( -50.2274, -132.291, -9.06314, 0.66 ) }
    dend_4 { pt3dadd( -50.2715, -133.614, -9.12406, 0.59 ) }
    dend_4 { pt3dadd( -50.3725, -134.938, -9.19605, 0.81 ) }
    dend_4 { pt3dadd( -50.6017, -136.318, -9.28484, 0.66 ) }
    dend_4 { pt3dadd( -50.974, -137.6, -9.36748, 0.66 ) }
    dend_4 { pt3dadd( -51.3731, -138.503, -9.42021, 0.66 ) }
    dend_4 { pt3dadd( -52.0242, -139.59, -9.4698, 0.59 ) }
    dend_4 { pt3dadd( -52.8462, -140.63, -9.49552, 0.52 ) }
    dend_4 { pt3dadd( -53.7416, -141.602, -9.48948, 0.44 ) }
    dend_4 { pt3dadd( -54.2623, -142.149, -9.46825, 0.44 ) }
    dend_4 { pt3dadd( -54.654, -142.593, -9.43894, 0.44 ) }
    dend_4 { pt3dadd( -54.9267, -142.964, -9.40798, 0.44 ) }
    dend_4 { pt3dadd( -55.4027, -143.769, -9.30776, 0.44 ) }
    dend_4 { pt3dadd( -55.9666, -144.911, -9.13537, 0.52 ) }
    dend_4 { pt3dadd( -56.5067, -146.146, -8.9126, 0.52 ) }
    dend_4 { pt3dadd( -56.9246, -147.14, -8.72409, 0.59 ) }
    dend_4 { pt3dadd( -57.2941, -148.0, -8.53691, 0.44 ) }
    dend_4 { pt3dadd( -57.6442, -148.771, -8.33937, 0.44 ) }
    dend_4 { pt3dadd( -58.1543, -149.834, -8.00799, 0.66 ) }
    dend_4 { pt3dadd( -58.5775, -150.652, -7.69851, 0.66 ) }
    dend_4 { pt3dadd( -59.033, -151.524, -7.31383, 0.74 ) }
    dend_4 { pt3dadd( -59.5797, -152.67, -6.73173, 0.52 ) }
    dend_4 { pt3dadd( -59.8915, -153.485, -6.26649, 0.52 ) }
    dend_4 { pt3dadd( -60.1016, -154.367, -5.73315, 0.66 ) }
    dend_4 { pt3dadd( -60.171, -155.259, -5.20447, 0.59 ) }
    dend_4 { pt3dadd( -60.1156, -156.075, -4.79131, 0.44 ) }
    dend_4 { pt3dadd( -59.9559, -156.967, -4.44097, 0.44 ) }
    dend_4 { pt3dadd( -59.7215, -158.03, -4.151, 0.44 ) }
    dend_4 { pt3dadd( -59.5035, -159.074, -3.94073, 0.52 ) }
    dend_4 { pt3dadd( -59.3092, -160.43, -3.74158, 0.88 ) }
    dend_4 { pt3dadd( -59.2969, -161.458, -3.61562, 0.96 ) }
    dend_4 { pt3dadd( -59.4698, -162.488, -3.47563, 0.74 ) }
    dend_4 { pt3dadd( -59.8277, -163.578, -3.28011, 0.44 ) }
    dend_4 { pt3dadd( -60.0926, -164.156, -3.15207, 0.74 ) }
    dend_4 { pt3dadd( -60.4535, -164.847, -2.94478, 1.03 ) }
    dend_4 { pt3dadd( -60.8977, -165.7, -2.61397, 0.44 ) }
    dend_4 { pt3dadd( -61.2801, -166.559, -2.28191, 0.37 ) }
    dend_4 { pt3dadd( -61.4362, -167.161, -2.07021, 0.37 ) }
    dend_4 { pt3dadd( -61.472, -167.719, -1.91507, 0.74 ) }
    dend_4 { pt3dadd( -61.4186, -168.628, -1.67237, 1.11 ) }
    dend_4 { pt3dadd( -61.3062, -169.415, -1.45778, 0.74 ) }
    dend_4 { pt3dadd( -61.1182, -170.481, -1.16048, 0.59 ) }
    dend_4 { pt3dadd( -60.913, -171.875, -0.73641, 0.52 ) }
    dend_4 { pt3dadd( -60.8528, -172.799, -0.402155, 0.29 ) }
    dend_4 { pt3dadd( -60.8668, -173.642, -0.0426098, 0.29 ) }
    dend_4 { pt3dadd( -60.9261, -174.205, 0.217628, 0.81 ) }
    dend_4 { pt3dadd( -61.0615, -175.047, 0.582122, 1.11 ) }
    dend_4 { pt3dadd( -61.317, -176.306, 1.03897, 0.52 ) }
    dend_4 { pt3dadd( -61.5561, -177.493, 1.34658, 0.44 ) }
    dend_4 { pt3dadd( -61.678, -178.327, 1.49558, 0.88 ) }
    dend_4 { pt3dadd( -61.7476, -179.362, 1.58383, 0.88 ) }
    dend_4 { pt3dadd( -61.7134, -180.673, 1.60397, 0.66 ) }
    dend_4 { pt3dadd( -61.5789, -181.681, 1.57291, 0.37 ) }
    dend_4 { pt3dadd( -61.3382, -182.738, 1.49893, 0.29 ) }
    dend_4 { pt3dadd( -61.1559, -183.423, 1.43999, 0.29 ) }
    dend_4 { pt3dadd( -61.0324, -183.899, 1.4115, 0.74 ) }
    dend_4 { pt3dadd( -60.8949, -184.546, 1.41814, 1.03 ) }
    dend_4 { pt3dadd( -60.8055, -185.494, 1.51317, 0.29 ) }
    dend_4 { pt3dadd( -60.8654, -186.386, 1.62348, 0.22 ) }
    dend_4 { pt3dadd( -60.9924, -186.957, 1.66824, 0.22 ) }
    dend_4 { pt3dadd( -61.1256, -187.414, 1.68028, 0.44 ) }
    dend_4 { pt3dadd( -61.356, -188.216, 1.6729, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( -61.5528, -189.026, 1.63359, 0.29 ) }
    dend_4 { pt3dadd( -61.6589, -189.712, 1.56983, 0.29 ) }
    dend_4 { pt3dadd( -61.6794, -190.283, 1.53102, 0.29 ) }
    dend_4 { pt3dadd( -61.6303, -191.074, 1.51393, 0.66 ) }
    dend_4 { pt3dadd( -61.5401, -192.002, 1.5576, 0.37 ) }
    dend_4 { pt3dadd( -61.4656, -192.676, 1.62531, 0.44 ) }
    dend_4 { pt3dadd( -61.4088, -193.403, 1.75267, 0.37 ) }
    dend_4 { pt3dadd( -61.3893, -194.138, 1.96078, 0.37 ) }
    dend_4 { pt3dadd( -61.3997, -194.853, 2.24742, 0.74 ) }
    dend_4 { pt3dadd( -61.4271, -195.825, 2.73096, 1.11 ) }
    dend_4 { pt3dadd( -61.4188, -196.408, 3.06965, 1.11 ) }
    dend_4 { pt3dadd( -61.3275, -197.328, 3.68768, 0.66 ) }
    dend_4 { pt3dadd( -61.1225, -198.336, 4.45186, 0.44 ) }
    dend_4 { pt3dadd( -60.8826, -199.148, 5.09741, 0.44 ) }
    dend_4 { pt3dadd( -60.611, -199.905, 5.71706, 0.29 ) }
    dend_4 { pt3dadd( -60.3184, -200.673, 6.34219, 0.29 ) }
    dend_4 { pt3dadd( -60.1155, -201.306, 6.82419, 0.29 ) }
    dend_4 { pt3dadd( -60.0351, -201.725, 7.06389, 0.29 ) }
    dend_4 { pt3dadd( -60.0858, -202.38, 7.26331, 0.59 ) }
    dend_4 { pt3dadd( -60.2721, -203.03, 7.34673, 0.96 ) }
    dend_4 { pt3dadd( -60.5628, -203.809, 7.40735, 0.96 ) }
    dend_4 { pt3dadd( -60.8874, -204.67, 7.47358, 0.44 ) }
    dend_4 { pt3dadd( -61.2762, -205.85, 7.57099, 0.29 ) }
    dend_4 { pt3dadd( -61.4723, -206.638, 7.65712, 0.29 ) }
    dend_4 { pt3dadd( -61.604, -207.462, 7.77944, 0.66 ) }
    dend_4 { pt3dadd( -61.6748, -208.348, 7.92498, 0.44 ) }
    dend_4 { pt3dadd( -61.7202, -209.191, 8.06249, 0.29 ) }
    dend_4 { pt3dadd( -61.7605, -209.877, 8.15565, 0.44 ) }
    dend_4 { pt3dadd( -61.8103, -210.609, 8.25319, 1.25 ) }
    dend_4 { pt3dadd( -61.867, -211.348, 8.32208, 1.25 ) }
    dend_4 { pt3dadd( -61.9446, -212.34, 8.39546, 1.03 ) }
    dend_4 { pt3dadd( -62.0454, -213.463, 8.45549, 0.52 ) }
    dend_4 { pt3dadd( -62.1615, -214.581, 8.52375, 0.29 ) }
    dend_4 { pt3dadd( -62.2708, -215.571, 8.60725, 0.29 ) }
    dend_4 { pt3dadd( -62.3397, -216.138, 8.67321, 0.29 ) }
    dend_4 { pt3dadd( -62.4407, -216.839, 8.77892, 0.37 ) }
    dend_4 { pt3dadd( -62.5542, -217.343, 8.87162, 0.29 ) }
    dend_4 { pt3dadd( -62.719, -217.809, 8.94789, 0.29 ) }
    dend_4 { pt3dadd( -62.9305, -218.219, 8.9776, 0.52 ) }
    dend_4 { pt3dadd( -63.3202, -218.849, 8.95169, 1.18 ) }
    dend_4 { pt3dadd( -63.6559, -219.379, 8.89421, 1.18 ) }
    dend_4 { pt3dadd( -64.3076, -220.489, 8.69629, 0.81 ) }
    dend_4 { pt3dadd( -64.6896, -221.324, 8.47533, 0.29 ) }
    dend_4 { pt3dadd( -64.8642, -221.924, 8.27774, 0.29 ) }
    dend_4 { pt3dadd( -64.9264, -222.384, 8.11525, 0.52 ) }
    dend_4 { pt3dadd( -64.9261, -223.053, 7.8938, 0.88 ) }
    dend_4 { pt3dadd( -64.8622, -223.921, 7.67276, 0.29 ) }
    dend_4 { pt3dadd( -64.753, -224.857, 7.55318, 0.22 ) }
    dend_4 { pt3dadd( -64.7001, -225.53, 7.59814, 0.22 ) }
    dend_4 { pt3dadd( -64.6992, -226.061, 7.71658, 0.44 ) }
    dend_4 { pt3dadd( -64.7457, -226.716, 7.96925, 0.59 ) }
    dend_4 { pt3dadd( -64.8932, -227.679, 8.4587, 0.29 ) }
    dend_4 { pt3dadd( -65.0482, -228.399, 8.87951, 0.81 ) }
    dend_4 { pt3dadd( -65.2369, -229.161, 9.33628, 0.81 ) }
    dend_4 { pt3dadd( -65.3613, -229.668, 9.61141, 0.81 ) }
    dend_4 { pt3dadd( -65.5928, -230.693, 10.0829, 0.29 ) }
    dend_4 { pt3dadd( -65.7587, -231.427, 10.3396, 0.29 ) }
    dend_4 { pt3dadd( -65.8929, -231.999, 10.4974, 0.88 ) }
    dend_4 { pt3dadd( -66.1109, -232.778, 10.6533, 1.18 ) }
    dend_4 { pt3dadd( -66.4054, -233.689, 10.8103, 0.52 ) }
    dend_4 { pt3dadd( -66.5961, -234.259, 10.9045, 0.37 ) }
    dend_4 { pt3dadd( -66.858, -235.117, 11.025, 0.22 ) }
    dend_4 { pt3dadd( -66.9893, -235.681, 11.1142, 0.44 ) }
    dend_4 { pt3dadd( -67.1009, -236.455, 11.2453, 0.96 ) }
    dend_4 { pt3dadd( -67.1578, -237.492, 11.3916, 0.22 ) }
    dend_4 { pt3dadd( -67.1431, -238.118, 11.4553, 0.22 ) }
    dend_4 { pt3dadd( -67.1005, -238.851, 11.4951, 0.37 ) }
    dend_4 { pt3dadd( -67.0738, -239.419, 11.498, 0.37 ) }
    dend_4 { pt3dadd( -67.0895, -240.307, 11.4344, 0.22 ) }
    dend_4 { pt3dadd( -67.1705, -241.107, 11.3361, 0.22 ) }
    dend_4 { pt3dadd( -67.3033, -241.792, 11.2365, 0.81 ) }
    dend_4 { pt3dadd( -67.5232, -242.662, 11.1257, 0.88 ) }
    dend_4 { pt3dadd( -67.7808, -243.609, 11.0434, 0.29 ) }
    dend_4 { pt3dadd( -68.0127, -244.547, 11.0199, 0.22 ) }
    dend_4 { pt3dadd( -68.1676, -245.306, 11.0443, 0.22 ) }
    dend_4 { pt3dadd( -68.294, -246.157, 11.1144, 0.96 ) }
    dend_4 { pt3dadd( -68.3782, -246.993, 11.1732, 0.81 ) }
    dend_4 { pt3dadd( -68.4289, -247.905, 11.2308, 0.37 ) }
    dend_4 { pt3dadd( -68.4667, -249.086, 11.2942, 0.22 ) }
    dend_4 { pt3dadd( -68.5131, -250.048, 11.3176, 0.22 ) }
    dend_4 { pt3dadd( -68.5898, -251.046, 11.2688, 0.22 ) }
    dend_4 { pt3dadd( -68.6819, -251.987, 11.1548, 0.22 ) }
    dend_4 { pt3dadd( -68.7176, -252.36, 11.0997, 0.59 ) }
    dend_4 { pt3dadd( -68.778, -253.048, 10.9912, 1.03 ) }
    dend_4 { pt3dadd( -68.8695, -254.143, 10.8233, 0.37 ) }
    dend_4 { pt3dadd( -68.938, -255.065, 10.7296, 0.22 ) }
    dend_4 { pt3dadd( -68.9817, -255.639, 10.7426, 0.22 ) }
    dend_4 { pt3dadd( -69.0802, -256.604, 10.9515, 0.22 ) }
    dend_4 { pt3dadd( -69.1655, -257.209, 11.1692, 0.22 ) }
    dend_4 { pt3dadd( -69.2454, -257.672, 11.407, 0.22 ) }
    dend_4 { pt3dadd( -69.3324, -258.16, 11.6971, 0.37 ) }
    dend_4 { pt3dadd( -69.4573, -258.882, 12.1265, 0.22 ) }
    dend_4 { pt3dadd( -69.5339, -259.392, 12.4101, 0.22 ) }
    dend_4 { pt3dadd( -69.5792, -259.796, 12.6036, 0.74 ) }
    dend_4 { pt3dadd( -69.5878, -260.403, 12.8907, 1.03 ) }
    dend_4 { pt3dadd( -69.4984, -261.216, 13.3048, 0.66 ) }
    dend_4 { pt3dadd( -69.3493, -261.942, 13.6864, 0.29 ) }
    dend_4 { pt3dadd( -69.2269, -262.434, 13.9531, 0.29 ) }
    dend_4 { pt3dadd( -69.1434, -262.759, 14.1223, 0.29 ) }
    dend_4 { pt3dadd( -69.0114, -263.312, 14.3918, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_4 { pt3dadd( -68.8569, -264.039, 14.7361, 0.22 ) }
    dend_4 { pt3dadd( -68.7928, -264.382, 14.8781, 0.22 ) }
    dend_4 { pt3dadd( -68.6737, -265.103, 15.1341, 0.22 ) }
    dend_4 { pt3dadd( -68.5672, -265.817, 15.3715, 0.22 ) }
    dend_4 { pt3dadd( -68.4359, -266.792, 15.6969, 0.74 ) }
    dend_4 { pt3dadd( -68.3435, -267.666, 15.9583, 0.74 ) }
    dend_4 { pt3dadd( -68.2796, -268.473, 16.1815, 0.74 ) }
    dend_4 { pt3dadd( -68.2279, -269.259, 16.3864, 0.37 ) }
    dend_4 { pt3dadd( -68.173, -270.236, 16.6507, 0.37 ) }
    dend_4 { pt3dadd( -68.146, -270.939, 16.8574, 0.37 ) }
    dend_4 { pt3dadd( -68.1194, -271.727, 17.0974, 0.88 ) }
    dend_4 { pt3dadd( -68.0662, -272.658, 17.3362, 0.88 ) }
    dend_4 { pt3dadd( -67.9992, -273.441, 17.5468, 0.44 ) }
    dend_4 { pt3dadd( -67.9063, -274.411, 17.8193, 0.22 ) }
    dend_4 { pt3dadd( -67.8599, -274.908, 17.979, 0.22 ) }
    dend_4 { pt3dadd( -67.8095, -275.589, 18.2382, 0.37 ) }
    dend_4 { pt3dadd( -67.7677, -276.634, 18.7543, 0.74 ) }
    dend_4 { pt3dadd( -67.8496, -277.589, 19.3778, 0.22 ) }
    dend_4 { pt3dadd( -68.067, -278.21, 19.8791, 0.22 ) }
    dend_4 { pt3dadd( -68.2957, -278.506, 20.162, 0.22 ) }
    dend_4 { pt3dadd( -68.6257, -278.804, 20.4701, 0.22 ) }
    dend_4 { pt3dadd( -68.9144, -279.034, 20.677, 0.22 ) }
    dend_4 { pt3dadd( -69.5332, -279.563, 21.1015, 0.22 ) }
    dend_4 { pt3dadd( -69.8899, -279.949, 21.3172, 0.81 ) }
    dend_4 { pt3dadd( -70.2853, -280.531, 21.574, 1.18 ) }
    dend_4 { pt3dadd( -70.5131, -280.984, 21.7354, 1.18 ) }
    dend_4 { pt3dadd( -70.8762, -281.968, 22.0222, 0.37 ) }
    dend_4 { pt3dadd( -71.2267, -283.211, 22.3073, 0.22 ) }
    dend_4 { pt3dadd( -71.4402, -284.216, 22.4873, 0.22 ) }
    dend_4 { pt3dadd( -71.5589, -284.843, 22.5736, 0.22 ) }
    dend_4 { pt3dadd( -71.7261, -285.708, 22.6307, 0.37 ) }
    dend_4 { pt3dadd( -71.9084, -286.579, 22.6417, 0.74 ) }
    dend_4 { pt3dadd( -72.1281, -287.458, 22.5941, 0.59 ) }
    dend_4 { pt3dadd( -72.3805, -288.233, 22.4779, 0.29 ) }
    dend_4 { pt3dadd( -72.6631, -288.961, 22.3549, 0.15 ) }
    dend_4 { pt3dadd( -73.0053, -289.794, 22.207, 0.15 ) }
    dend_4 { pt3dadd( -73.1847, -290.252, 22.1437, 0.44 ) }
    dend_4 { pt3dadd( -73.4603, -291.067, 22.095, 0.66 ) }
    dend_4 { pt3dadd( -73.6375, -291.929, 22.1513, 0.22 ) }
    dend_4 { pt3dadd( -73.6541, -292.828, 22.4033, 0.22 ) }
    dend_4 { pt3dadd( -73.5686, -293.441, 22.7196, 0.81 ) }
    dend_4 { pt3dadd( -73.4131, -294.202, 23.2492, 0.96 ) }
    dend_4 { pt3dadd( -73.2795, -294.833, 23.7611, 0.96 ) }
    dend_4 { pt3dadd( -73.1525, -295.418, 24.2922, 0.44 ) }
    dend_4 { pt3dadd( -73.0337, -296.062, 24.9162, 0.29 ) }
    dend_4 { pt3dadd( -72.9907, -296.638, 25.4342, 0.22 ) }
    dend_4 { pt3dadd( -73.0371, -297.211, 25.8516, 0.22 ) }
    dend_4 { pt3dadd( -73.1736, -297.81, 26.1552, 0.22 ) }
    dend_4 { pt3dadd( -73.2765, -298.144, 26.2749, 0.22 ) }
    dend_4 { pt3dadd( -73.3766, -298.419, 26.3441, 0.74 ) }
    dend_4 { pt3dadd( -73.6415, -299.095, 26.4444, 1.03 ) }
    dend_4 { pt3dadd( -74.0274, -300.093, 26.5286, 0.22 ) }
    dend_4 { pt3dadd( -74.2791, -300.784, 26.5674, 0.22 ) }
    dend_4 { pt3dadd( -74.4023, -301.153, 26.5847, 0.74 ) }
    dend_4 { pt3dadd( -74.5405, -301.603, 26.5909, 0.96 ) }
    dend_4 { pt3dadd( -74.7389, -302.31, 26.6181, 0.29 ) }
    dend_4 { pt3dadd( -74.8872, -302.885, 26.6532, 0.22 ) }
    dend_4 { pt3dadd( -74.9898, -303.317, 26.6863, 0.22 ) }
    dend_4 { pt3dadd( -75.1327, -303.927, 26.7497, 0.37 ) }
    dend_4 { pt3dadd( -75.3522, -304.665, 26.8427, 0.22 ) }
    dend_4 { pt3dadd( -75.6957, -305.586, 27.0263, 0.22 ) }
    dend_4 { pt3dadd( -75.8386, -305.918, 27.1311, 0.22 ) }
    dend_4 { pt3dadd( -75.9925, -306.23, 27.2642, 0.44 ) }
    dend_4 { pt3dadd( -76.2421, -306.7, 27.5104, 0.88 ) }
    dend_4 { pt3dadd( -76.5546, -307.267, 27.8565, 0.44 ) }
    dend_4 { pt3dadd( -76.9675, -308.041, 28.3633, 0.22 ) }
    dend_4 { pt3dadd( -77.2585, -308.632, 28.7157, 0.22 ) }
    dend_4 { pt3dadd( -77.5399, -309.242, 29.0498, 0.22 ) }
    dend_4 { pt3dadd( -77.7528, -309.702, 29.2758, 0.22 ) }
    dend_4 { pt3dadd( -77.9073, -310.047, 29.42, 0.22 ) }
    dend_4 { pt3dadd( -78.054, -310.398, 29.5281, 0.59 ) }
    dend_4 { pt3dadd( -78.3412, -311.066, 29.6765, 1.25 ) }
    dend_4 { pt3dadd( -78.7556, -311.964, 29.8383, 0.44 ) }
    dend_4 { pt3dadd( -79.1405, -312.763, 29.9661, 0.44 ) }
    dend_4 { pt3dadd( -79.4226, -313.354, 30.0757, 0.52 ) }
    dend_4 { pt3dadd( -79.8687, -314.337, 30.3353, 0.22 ) }
    dend_4 { pt3dadd( -80.1901, -315.053, 30.5729, 0.15 ) }
    dend_4 { pt3dadd( -80.4782, -315.698, 30.8339, 0.15 ) }
    dend_4 { pt3dadd( -80.5988, -315.959, 30.9525, 0.37 ) }
    dend_4 { pt3dadd( -80.9984, -316.764, 31.345, 1.03 ) }
    dend_4 { pt3dadd( -81.6676, -317.995, 32.0023, 0.22 ) }
    dend_4 { pt3dadd( -81.9814, -318.518, 32.3064, 0.22 ) }
    dend_4 { pt3dadd( -82.1735, -318.832, 32.4882, 0.22 ) }
    dend_4 { pt3dadd( -82.5137, -319.402, 32.8175, 0.22 ) }
    dend_4 { pt3dadd( -82.9509, -320.109, 33.2104, 1.47 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 85/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -51.3556, 176.952, 38.8796, 0.07 ) }
    dend_55 { pt3dadd( -52.2106, 178.211, 38.8796, 0.07 ) }
    dend_55 { pt3dadd( -52.7685, 179.095, 38.8796, 0.66 ) }
    dend_55 { pt3dadd( -53.3074, 179.997, 38.8796, 0.15 ) }
    dend_55 { pt3dadd( -53.805, 180.856, 38.8796, 0.59 ) }
    dend_55 { pt3dadd( -54.2502, 181.619, 38.8796, 0.15 ) }
    dend_55 { pt3dadd( -54.6012, 182.219, 38.8796, 0.52 ) }
    dend_55 { pt3dadd( -54.9116, 182.843, 38.8796, 0.15 ) }
    dend_55 { pt3dadd( -55.2216, 183.508, 38.8796, 0.29 ) }
    dend_55 { pt3dadd( -55.5058, 184.144, 38.8796, 0.07 ) }
    dend_55 { pt3dadd( -55.735, 184.618, 38.8796, 0.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 96/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -51.3556, 176.952, 38.8796, 0.22 ) }
    dend_52 { pt3dadd( -51.731, 177.883, 39.2975, 0.22 ) }
    dend_52 { pt3dadd( -52.3763, 179.322, 39.5987, 0.07 ) }
    dend_52 { pt3dadd( -52.6992, 180.003, 39.6181, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_52 { pt3dadd( -53.0954, 180.851, 39.5404, 0.29 ) }
    dend_52 { pt3dadd( -53.578, 181.919, 39.362, 0.07 ) }
    dend_52 { pt3dadd( -54.0557, 183.019, 39.1377, 0.07 ) }
    dend_52 { pt3dadd( -54.3655, 183.743, 38.8837, 0.52 ) }
    dend_52 { pt3dadd( -54.8034, 184.799, 38.3889, 0.07 ) }
    dend_52 { pt3dadd( -55.051, 185.442, 38.0561, 0.07 ) }
    dend_52 { pt3dadd( -55.2277, 185.95, 37.7909, 0.07 ) }
    dend_52 { pt3dadd( -55.3229, 186.273, 37.6383, 0.22 ) }
    dend_52 { pt3dadd( -55.5147, 187.067, 37.3155, 0.44 ) }
    dend_52 { pt3dadd( -55.7606, 188.33, 36.8637, 0.07 ) }
    dend_52 { pt3dadd( -55.8632, 188.994, 36.6766, 0.07 ) }
    dend_52 { pt3dadd( -55.9155, 189.359, 36.6005, 0.52 ) }
    dend_52 { pt3dadd( -56.0298, 190.163, 36.4636, 0.74 ) }
    dend_52 { pt3dadd( -56.1949, 191.322, 36.3011, 0.07 ) }
    dend_52 { pt3dadd( -56.3101, 192.12, 36.2233, 0.07 ) }
    dend_52 { pt3dadd( -56.4374, 192.919, 36.1956, 0.37 ) }
    dend_52 { pt3dadd( -56.665, 194.193, 36.2131, 0.07 ) }
    dend_52 { pt3dadd( -56.793, 194.787, 36.2434, 0.22 ) }
    dend_52 { pt3dadd( -56.8974, 195.169, 36.2893, 0.37 ) }
    dend_52 { pt3dadd( -57.1481, 195.905, 36.4556, 0.96 ) }
    dend_52 { pt3dadd( -57.5749, 196.953, 36.8177, 0.15 ) }
    dend_52 { pt3dadd( -57.7646, 197.355, 37.0093, 0.15 ) }
    dend_52 { pt3dadd( -58.1583, 198.119, 37.4986, 0.59 ) }
    dend_52 { pt3dadd( -58.728, 199.118, 38.2421, 0.07 ) }
    dend_52 { pt3dadd( -59.1693, 199.776, 38.7657, 0.07 ) }
    dend_52 { pt3dadd( -59.7037, 200.467, 39.363, 0.59 ) }
    dend_52 { pt3dadd( -60.294, 201.143, 39.9427, 0.15 ) }
    dend_52 { pt3dadd( -60.9143, 201.816, 40.4737, 0.15 ) }
    dend_52 { pt3dadd( -61.4097, 202.316, 40.8398, 0.88 ) }
    dend_52 { pt3dadd( -62.339, 203.206, 41.3733, 0.07 ) }
    dend_52 { pt3dadd( -62.9117, 203.773, 41.6275, 0.07 ) }
    dend_52 { pt3dadd( -63.6819, 204.597, 41.8875, 0.07 ) }
    dend_52 { pt3dadd( -64.0611, 205.043, 41.9761, 0.81 ) }
    dend_52 { pt3dadd( -64.4927, 205.582, 42.0652, 1.25 ) }
    dend_52 { pt3dadd( -65.1824, 206.496, 42.1831, 0.22 ) }
    dend_52 { pt3dadd( -65.9239, 207.526, 42.3039, 0.15 ) }
    dend_52 { pt3dadd( -66.6857, 208.598, 42.4061, 0.37 ) }
    dend_52 { pt3dadd( -67.7479, 210.118, 42.5624, 0.07 ) }
    dend_52 { pt3dadd( -68.383, 211.038, 42.6607, 0.07 ) }
    dend_52 { pt3dadd( -69.0448, 212.03, 42.7679, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 40/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -4.00183, -61.6724, -35.6265, 0.22 ) }
    dend_17 { pt3dadd( -2.99033, -62.0931, -36.2821, 0.22 ) }
    dend_17 { pt3dadd( -2.52994, -62.36, -36.5922, 0.22 ) }
    dend_17 { pt3dadd( -2.23002, -62.5883, -36.8298, 0.22 ) }
    dend_17 { pt3dadd( -2.02779, -62.788, -37.0169, 0.22 ) }
    dend_17 { pt3dadd( -1.76715, -63.1056, -37.2881, 0.29 ) }
    dend_17 { pt3dadd( -1.42997, -63.6357, -37.6869, 0.29 ) }
    dend_17 { pt3dadd( -1.29877, -64.1282, -37.9397, 0.29 ) }
    dend_17 { pt3dadd( -1.26784, -64.7069, -38.1543, 0.29 ) }
    dend_17 { pt3dadd( -1.29943, -65.2555, -38.2979, 0.29 ) }
    dend_17 { pt3dadd( -1.33871, -65.5835, -38.3565, 0.52 ) }
    dend_17 { pt3dadd( -1.44328, -66.1978, -38.4466, 0.88 ) }
    dend_17 { pt3dadd( -1.63234, -67.1011, -38.5294, 0.29 ) }
    dend_17 { pt3dadd( -1.84503, -68.0485, -38.5645, 0.29 ) }
    dend_17 { pt3dadd( -2.0171, -68.8112, -38.545, 0.52 ) }
    dend_17 { pt3dadd( -2.13134, -69.3175, -38.5146, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 56/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -4.00183, -61.6724, -35.6265, 0.15 ) }
    dend_16 { pt3dadd( -4.69846, -62.5986, -34.7412, 0.15 ) }
    dend_16 { pt3dadd( -5.07801, -63.1033, -34.2588, 0.15 ) }
    dend_16 { pt3dadd( -5.44157, -63.5866, -33.7968, 0.15 ) }
    dend_16 { pt3dadd( -5.73268, -63.9737, -33.4268, 0.15 ) }
    dend_16 { pt3dadd( -6.07412, -64.4277, -32.9929, 0.15 ) }
    dend_16 { pt3dadd( -6.50933, -65.0063, -32.4398, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 63/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -82.9509, -320.109, 33.2104, 0.22 ) }
    dend_6 { pt3dadd( -83.5057, -320.697, 34.3992, 0.22 ) }
    dend_6 { pt3dadd( -83.6553, -320.952, 34.7886, 0.22 ) }
    dend_6 { pt3dadd( -83.789, -321.245, 35.1656, 0.22 ) }
    dend_6 { pt3dadd( -83.9595, -321.8, 35.7267, 0.22 ) }
    dend_6 { pt3dadd( -84.0994, -322.389, 36.2411, 0.22 ) }
    dend_6 { pt3dadd( -84.1754, -322.729, 36.5222, 0.37 ) }
    dend_6 { pt3dadd( -84.2753, -323.283, 36.8906, 1.03 ) }
    dend_6 { pt3dadd( -84.3362, -323.536, 37.0424, 1.03 ) }
    dend_6 { pt3dadd( -84.6557, -324.542, 37.6321, 0.37 ) }
    dend_6 { pt3dadd( -85.0034, -325.375, 38.0786, 0.29 ) }
    dend_6 { pt3dadd( -85.2187, -325.789, 38.3066, 0.29 ) }
    dend_6 { pt3dadd( -85.6597, -326.493, 38.7451, 0.59 ) }
    dend_6 { pt3dadd( -86.1086, -327.133, 39.1835, 0.22 ) }
    dend_6 { pt3dadd( -86.4161, -327.555, 39.5059, 0.52 ) }
    dend_6 { pt3dadd( -86.9492, -328.28, 40.1138, 0.96 ) }
    dend_6 { pt3dadd( -87.5406, -329.157, 40.8907, 0.22 ) }
    dend_6 { pt3dadd( -87.9047, -329.767, 41.4298, 0.22 ) }
    dend_6 { pt3dadd( -88.1193, -330.181, 41.8205, 0.22 ) }
    dend_6 { pt3dadd( -88.2944, -330.578, 42.2055, 0.22 ) }
    dend_6 { pt3dadd( -88.45, -331.003, 42.6337, 0.22 ) }
    dend_6 { pt3dadd( -88.5247, -331.319, 42.9976, 0.22 ) }
    dend_6 { pt3dadd( -88.5422, -332.031, 43.6877, 1.4 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 86/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -82.9509, -320.109, 33.2104, 0.22 ) }
    dend_5 { pt3dadd( -81.7929, -320.387, 34.0131, 0.22 ) }
    dend_5 { pt3dadd( -81.0905, -320.559, 34.4284, 0.22 ) }
    dend_5 { pt3dadd( -80.683, -320.655, 34.5973, 0.22 ) }
    dend_5 { pt3dadd( -80.0235, -320.811, 34.8309, 0.07 ) }
    dend_5 { pt3dadd( -79.549, -320.923, 34.999, 0.07 ) }
    dend_5 { pt3dadd( -79.3366, -320.973, 35.0742, 0.07 ) }
    dend_5 { pt3dadd( -78.5815, -321.139, 35.274, 0.88 ) }
    dend_5 { pt3dadd( -77.0666, -321.474, 35.5552, 0.15 ) }
    dend_5 { pt3dadd( -76.1585, -321.679, 35.6753, 0.44 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 96/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -69.0448, 212.03, 42.7679, 0.07 ) }
    dend_54 { pt3dadd( -69.5517, 213.311, 43.7773, 0.07 ) }
    dend_54 { pt3dadd( -69.8602, 214.119, 44.439, 0.59 ) }
    dend_54 { pt3dadd( -70.3607, 215.515, 45.6075, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_54 { pt3dadd( -70.7079, 216.543, 46.5146, 0.74 ) }
    dend_54 { pt3dadd( -71.0042, 217.458, 47.3596, 0.07 ) }
    dend_54 { pt3dadd( -71.292, 218.347, 48.1806, 0.07 ) }
    dend_54 { pt3dadd( -71.4874, 218.966, 48.8204, 0.07 ) }
    dend_54 { pt3dadd( -71.7022, 219.683, 49.5985, 0.74 ) }
    dend_54 { pt3dadd( -71.9864, 220.819, 50.8239, 0.07 ) }
    dend_54 { pt3dadd( -72.1455, 221.527, 51.5766, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 7/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -69.0448, 212.03, 42.7679, 0.07 ) }
    dend_53 { pt3dadd( -69.9325, 212.321, 41.9374, 0.07 ) }
    dend_53 { pt3dadd( -70.6026, 212.607, 41.1756, 0.07 ) }
    dend_53 { pt3dadd( -71.224, 212.966, 40.3181, 0.07 ) }
    dend_53 { pt3dadd( -71.4396, 213.132, 39.9478, 0.29 ) }
    dend_53 { pt3dadd( -71.8525, 213.497, 39.1758, 0.74 ) }
    dend_53 { pt3dadd( -72.276, 213.909, 38.3623, 0.29 ) }
    dend_53 { pt3dadd( -72.6337, 214.339, 37.6118, 0.29 ) }
    dend_53 { pt3dadd( -73.1289, 214.933, 36.674, 0.29 ) }
    dend_53 { pt3dadd( -73.7613, 215.592, 35.7222, 0.29 ) }
    dend_53 { pt3dadd( -74.014, 215.804, 35.4357, 0.74 ) }
    dend_53 { pt3dadd( -74.5694, 216.154, 35.0231, 1.47 ) }
    dend_53 { pt3dadd( -75.4977, 216.607, 34.5894, 0.52 ) }
    dend_53 { pt3dadd( -76.4555, 216.988, 34.3243, 0.22 ) }
    dend_53 { pt3dadd( -77.5665, 217.374, 34.1472, 0.15 ) }
    dend_53 { pt3dadd( -78.3635, 217.624, 34.0655, 0.29 ) }
    dend_53 { pt3dadd( -79.5674, 217.98, 33.9651, 0.07 ) }
    dend_53 { pt3dadd( -80.0878, 218.125, 33.9354, 0.52 ) }
    dend_53 { pt3dadd( -81.3597, 218.494, 33.8823, 0.07 ) }
    dend_53 { pt3dadd( -82.2809, 218.801, 33.8802, 0.81 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 27/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -2.13134, -69.3175, -38.5146, 0.22 ) }
    dend_19 { pt3dadd( -1.54841, -70.4672, -38.4781, 0.22 ) }
    dend_19 { pt3dadd( -1.09208, -71.4069, -38.4978, 0.22 ) }
    dend_19 { pt3dadd( -0.716004, -72.1887, -38.5346, 0.22 ) }
    dend_19 { pt3dadd( -0.392608, -72.8082, -38.5989, 0.22 ) }
    dend_19 { pt3dadd( 0.288702, -74.0216, -38.7842, 0.22 ) }
    dend_19 { pt3dadd( 0.665886, -74.6462, -38.8931, 0.22 ) }
    dend_19 { pt3dadd( 1.03276, -75.2008, -39.0271, 0.22 ) }
    dend_19 { pt3dadd( 1.40601, -75.7622, -39.2017, 0.22 ) }
    dend_19 { pt3dadd( 1.98013, -76.6059, -39.5703, 0.37 ) }
    dend_19 { pt3dadd( 2.31163, -77.0907, -39.8234, 0.52 ) }
    dend_19 { pt3dadd( 2.56042, -77.4589, -40.026, 0.29 ) }
    dend_19 { pt3dadd( 2.63969, -77.5898, -40.1002, 0.29 ) }
    dend_19 { pt3dadd( 2.89578, -78.205, -40.4468, 0.22 ) }
    dend_19 { pt3dadd( 2.99172, -79.0262, -40.871, 0.22 ) }
    dend_19 { pt3dadd( 2.96427, -79.4165, -41.0504, 0.22 ) }
    dend_19 { pt3dadd( 2.89428, -79.803, -41.2265, 0.29 ) }
    dend_19 { pt3dadd( 2.80963, -80.1364, -41.3826, 0.29 ) }
    dend_19 { pt3dadd( 2.55928, -81.0142, -41.7709, 0.15 ) }
    dend_19 { pt3dadd( 2.41705, -81.4597, -41.9237, 0.22 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 47/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -2.13134, -69.3175, -38.5146, 0.07 ) }
    dend_18 { pt3dadd( -2.71503, -69.6131, -37.6272, 0.07 ) }
    dend_18 { pt3dadd( -3.61785, -70.0702, -36.2546, 0.07 ) }
    dend_18 { pt3dadd( -4.38127, -70.4567, -35.0939, 0.07 ) }
    dend_18 { pt3dadd( -4.75, -70.6434, -34.5334, 0.29 ) }
    dend_18 { pt3dadd( -5.55669, -71.0519, -33.3069, 0.22 ) }
    dend_18 { pt3dadd( -5.8826, -71.2169, -32.8114, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 54/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -88.5422, -332.031, 43.6877, 0.07 ) }
    dend_10 { pt3dadd( -87.9269, -331.42, 44.1899, 0.07 ) }
    dend_10 { pt3dadd( -87.4312, -330.907, 44.6009, 0.07 ) }
    dend_10 { pt3dadd( -87.0438, -330.513, 44.905, 0.22 ) }
    dend_10 { pt3dadd( -86.8537, -330.318, 45.0371, 0.22 ) }
    dend_10 { pt3dadd( -86.4762, -329.924, 45.2773, 0.22 ) }
    dend_10 { pt3dadd( -85.8717, -329.318, 45.5984, 0.15 ) }
    dend_10 { pt3dadd( -85.4402, -328.903, 45.7447, 0.15 ) }
    dend_10 { pt3dadd( -84.858, -328.398, 45.823, 0.15 ) }
    dend_10 { pt3dadd( -84.4604, -328.111, 45.8291, 0.37 ) }
    dend_10 { pt3dadd( -84.079, -327.893, 45.8037, 0.59 ) }
    dend_10 { pt3dadd( -83.079, -327.489, 45.671, 0.15 ) }
    dend_10 { pt3dadd( -82.1136, -327.209, 45.4645, 0.15 ) }
    dend_10 { pt3dadd( -81.7168, -327.121, 45.3565, 0.15 ) }
    dend_10 { pt3dadd( -81.0151, -327.02, 45.1321, 0.29 ) }
    dend_10 { pt3dadd( -80.2449, -326.968, 44.8819, 0.15 ) }
    dend_10 { pt3dadd( -79.5556, -326.967, 44.6516, 0.52 ) }
    dend_10 { pt3dadd( -78.5013, -327.021, 44.2893, 0.15 ) }
    dend_10 { pt3dadd( -77.8885, -327.065, 44.0905, 0.29 ) }
    dend_10 { pt3dadd( -77.0898, -327.108, 43.8467, 0.29 ) }
    dend_10 { pt3dadd( -76.3277, -327.139, 43.6107, 0.15 ) }
    dend_10 { pt3dadd( -75.5482, -327.17, 43.3611, 0.44 ) }
    dend_10 { pt3dadd( -74.9242, -327.186, 43.1408, 0.15 ) }
    dend_10 { pt3dadd( -74.4422, -327.189, 42.9459, 0.22 ) }
    dend_10 { pt3dadd( -73.3855, -327.147, 42.4677, 0.07 ) }
    dend_10 { pt3dadd( -72.7952, -327.083, 42.1776, 0.59 ) }
    dend_10 { pt3dadd( -71.8788, -326.903, 41.6526, 0.07 ) }
    dend_10 { pt3dadd( -70.9729, -326.653, 41.0578, 0.37 ) }
    dend_10 { pt3dadd( -70.2841, -326.424, 40.549, 0.15 ) }
    dend_10 { pt3dadd( -70.0011, -326.313, 40.3033, 0.44 ) }
    dend_10 { pt3dadd( -69.6848, -326.17, 39.9861, 0.44 ) }
    dend_10 { pt3dadd( -68.9868, -325.829, 39.2775, 0.07 ) }
    dend_10 { pt3dadd( -68.4884, -325.587, 38.7803, 0.07 ) }
    dend_10 { pt3dadd( -67.9541, -325.359, 38.2501, 0.07 ) }
    dend_10 { pt3dadd( -67.3325, -325.135, 37.657, 0.07 ) }
    dend_10 { pt3dadd( -66.9755, -325.032, 37.3269, 0.07 ) }
    dend_10 { pt3dadd( -66.3554, -324.902, 36.7665, 0.37 ) }
    dend_10 { pt3dadd( -65.4448, -324.795, 36.0053, 0.07 ) }
    dend_10 { pt3dadd( -65.0039, -324.77, 35.6644, 0.07 ) }
    dend_10 { pt3dadd( -64.2181, -324.743, 35.0892, 0.52 ) }
    dend_10 { pt3dadd( -63.217, -324.736, 34.395, 0.07 ) }
    dend_10 { pt3dadd( -62.7135, -324.744, 34.0536, 0.07 ) }
    dend_10 { pt3dadd( -61.9413, -324.788, 33.5362, 0.52 ) }
    dend_10 { pt3dadd( -61.0146, -324.905, 32.978, 0.15 ) }
    dend_10 { pt3dadd( -60.5067, -324.995, 32.7107, 0.15 ) }
    dend_10 { pt3dadd( -60.3735, -325.024, 32.6486, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_10 { pt3dadd( -59.9412, -325.127, 32.4791, 0.29 ) }
    dend_10 { pt3dadd( -59.6057, -325.206, 32.3624, 0.29 ) }
    dend_10 { pt3dadd( -58.7094, -325.418, 32.0826, 0.07 ) }
    dend_10 { pt3dadd( -57.9513, -325.56, 31.8906, 0.07 ) }
    dend_10 { pt3dadd( -57.5204, -325.621, 31.7872, 0.15 ) }
    dend_10 { pt3dadd( -56.7113, -325.704, 31.587, 0.07 ) }
    dend_10 { pt3dadd( -56.3764, -325.73, 31.4964, 0.07 ) }
    dend_10 { pt3dadd( -55.8065, -325.784, 31.3328, 0.29 ) }
    dend_10 { pt3dadd( -54.5857, -325.93, 30.9375, 0.07 ) }
    dend_10 { pt3dadd( -53.9282, -326.033, 30.6799, 0.07 ) }
    dend_10 { pt3dadd( -53.5321, -326.099, 30.4837, 0.29 ) }
    dend_10 { pt3dadd( -52.967, -326.184, 30.1486, 0.37 ) }
    dend_10 { pt3dadd( -51.9596, -326.337, 29.4306, 0.07 ) }
    dend_10 { pt3dadd( -51.2939, -326.469, 28.8855, 0.15 ) }
    dend_10 { pt3dadd( -50.5619, -326.671, 28.2299, 0.15 ) }
    dend_10 { pt3dadd( -49.8553, -326.87, 27.5893, 0.15 ) }
    dend_10 { pt3dadd( -49.3623, -326.984, 27.1652, 0.29 ) }
    dend_10 { pt3dadd( -48.8698, -327.082, 26.7373, 0.59 ) }
    dend_10 { pt3dadd( -48.3238, -327.175, 26.2532, 0.88 ) }
    dend_10 { pt3dadd( -47.6265, -327.322, 25.7095, 0.29 ) }
    dend_10 { pt3dadd( -46.9498, -327.516, 25.3087, 0.29 ) }
    dend_10 { pt3dadd( -46.2059, -327.795, 24.9769, 0.15 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 22/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -88.5422, -332.031, 43.6877, 0.44 ) }
    dend_7 { pt3dadd( -89.2657, -332.599, 43.5005, 0.44 ) }
    dend_7 { pt3dadd( -90.1235, -333.358, 43.3543, 0.22 ) }
    dend_7 { pt3dadd( -90.847, -334.068, 43.2785, 0.66 ) }
    dend_7 { pt3dadd( -91.5109, -334.79, 43.2453, 0.15 ) }
    dend_7 { pt3dadd( -92.0045, -335.364, 43.2405, 0.15 ) }
    dend_7 { pt3dadd( -92.2937, -335.717, 43.262, 0.15 ) }
    dend_7 { pt3dadd( -92.7316, -336.317, 43.4172, 0.15 ) }
    dend_7 { pt3dadd( -92.9887, -336.699, 43.5895, 0.52 ) }
    dend_7 { pt3dadd( -93.4183, -337.348, 43.9586, 0.96 ) }
    dend_7 { pt3dadd( -93.9107, -338.083, 44.4203, 0.66 ) }
    dend_7 { pt3dadd( -94.3882, -338.77, 44.876, 0.22 ) }
    dend_7 { pt3dadd( -95.1562, -339.872, 45.5876, 0.22 ) }
    dend_7 { pt3dadd( -95.4594, -340.326, 45.8562, 0.22 ) }
    dend_7 { pt3dadd( -95.7593, -340.812, 46.1269, 0.22 ) }
    dend_7 { pt3dadd( -95.9661, -341.178, 46.3195, 0.22 ) }
    dend_7 { pt3dadd( -96.2022, -341.639, 46.5218, 0.37 ) }
    dend_7 { pt3dadd( -96.5315, -342.278, 46.7445, 0.88 ) }
    dend_7 { pt3dadd( -96.858, -342.869, 46.9264, 0.52 ) }
    dend_7 { pt3dadd( -97.3199, -343.636, 47.1775, 0.15 ) }
    dend_7 { pt3dadd( -97.6859, -344.173, 47.3716, 0.15 ) }
    dend_7 { pt3dadd( -98.0931, -344.704, 47.566, 0.81 ) }
    dend_7 { pt3dadd( -98.7458, -345.509, 47.83, 0.15 ) }
    dend_7 { pt3dadd( -99.4864, -346.376, 48.0826, 0.15 ) }
    dend_7 { pt3dadd( -99.7486, -346.684, 48.1534, 0.66 ) }
    dend_7 { pt3dadd( -100.162, -347.196, 48.2225, 1.03 ) }
    dend_7 { pt3dadd( -100.772, -348.067, 48.247, 0.15 ) }
    dend_7 { pt3dadd( -101.18, -348.753, 48.2083, 0.15 ) }
    dend_7 { pt3dadd( -101.249, -348.884, 48.1894, 0.15 ) }
    dend_7 { pt3dadd( -101.461, -349.264, 48.1219, 0.59 ) }
    dend_7 { pt3dadd( -101.739, -349.698, 48.0499, 0.81 ) }
    dend_7 { pt3dadd( -102.267, -350.407, 47.9476, 0.22 ) }
    dend_7 { pt3dadd( -102.635, -350.849, 47.8984, 0.22 ) }
    dend_7 { pt3dadd( -103.291, -351.552, 47.8503, 0.44 ) }
    dend_7 { pt3dadd( -103.981, -352.227, 47.7987, 0.15 ) }
    dend_7 { pt3dadd( -104.439, -352.615, 47.7637, 0.15 ) }
    dend_7 { pt3dadd( -104.877, -352.931, 47.7287, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 59/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -104.877, -352.931, 47.7287, 0.22 ) }
    dend_9 { pt3dadd( -105.511, -353.898, 47.4926, 0.22 ) }
    dend_9 { pt3dadd( -105.774, -354.271, 47.403, 0.22 ) }
    dend_9 { pt3dadd( -106.221, -354.896, 47.2658, 0.29 ) }
    dend_9 { pt3dadd( -106.672, -355.52, 47.1109, 0.15 ) }
    dend_9 { pt3dadd( -106.971, -355.931, 46.9846, 0.15 ) }
    dend_9 { pt3dadd( -107.266, -356.348, 46.8353, 0.15 ) }
    dend_9 { pt3dadd( -107.558, -356.755, 46.6839, 0.52 ) }
    dend_9 { pt3dadd( -107.894, -357.28, 46.4616, 0.74 ) }
    dend_9 { pt3dadd( -108.369, -358.199, 46.0218, 0.29 ) }
    dend_9 { pt3dadd( -108.625, -358.811, 45.6957, 0.15 ) }
    dend_9 { pt3dadd( -108.797, -359.294, 45.436, 0.15 ) }
    dend_9 { pt3dadd( -108.873, -359.551, 45.3055, 0.15 ) }
    dend_9 { pt3dadd( -108.972, -360.031, 45.0737, 0.37 ) }
    dend_9 { pt3dadd( -109.057, -360.665, 44.8113, 0.15 ) }
    dend_9 { pt3dadd( -109.101, -361.27, 44.6256, 0.15 ) }
    dend_9 { pt3dadd( -109.135, -361.938, 44.4632, 0.22 ) }
    dend_9 { pt3dadd( -109.161, -362.45, 44.3507, 0.81 ) }
    dend_9 { pt3dadd( -109.208, -363.054, 44.2089, 0.66 ) }
    dend_9 { pt3dadd( -109.328, -364.013, 43.9851, 0.44 ) }
    dend_9 { pt3dadd( -109.436, -364.577, 43.8502, 0.44 ) }
    dend_9 { pt3dadd( -109.641, -365.491, 43.6249, 0.15 ) }
    dend_9 { pt3dadd( -109.749, -365.919, 43.5097, 0.15 ) }
    dend_9 { pt3dadd( -109.981, -366.717, 43.2764, 0.15 ) }
    dend_9 { pt3dadd( -110.172, -367.283, 43.1034, 0.81 ) }
    dend_9 { pt3dadd( -110.608, -368.487, 42.7396, 0.15 ) }
    dend_9 { pt3dadd( -110.741, -368.824, 42.6404, 0.15 ) }
    dend_9 { pt3dadd( -110.886, -369.182, 42.5366, 0.15 ) }
    dend_9 { pt3dadd( -111.043, -369.631, 42.4113, 0.15 ) }
    dend_9 { pt3dadd( -111.131, -369.986, 42.3226, 0.37 ) }
    dend_9 { pt3dadd( -111.228, -370.68, 42.1367, 0.74 ) }
    dend_9 { pt3dadd( -111.278, -371.501, 41.9005, 0.22 ) }
    dend_9 { pt3dadd( -111.301, -372.139, 41.7053, 0.22 ) }
    dend_9 { pt3dadd( -111.299, -372.721, 41.5268, 0.59 ) }
    dend_9 { pt3dadd( -111.255, -373.443, 41.3178, 0.22 ) }
    dend_9 { pt3dadd( -111.155, -374.402, 41.0411, 0.15 ) }
    dend_9 { pt3dadd( -111.096, -374.845, 40.9172, 0.15 ) }
    dend_9 { pt3dadd( -111.043, -375.274, 40.8103, 0.37 ) }
    dend_9 { pt3dadd( -111.008, -375.888, 40.6735, 0.66 ) }
    dend_9 { pt3dadd( -111.069, -376.557, 40.5313, 0.22 ) }
    dend_9 { pt3dadd( -111.229, -377.114, 40.4341, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_9 { pt3dadd( -111.427, -377.542, 40.3878, 0.15 ) }
    dend_9 { pt3dadd( -111.66, -377.956, 40.3551, 0.29 ) }
    dend_9 { pt3dadd( -111.9, -378.331, 40.3299, 0.88 ) }
    dend_9 { pt3dadd( -112.414, -379.101, 40.2924, 0.22 ) }
    dend_9 { pt3dadd( -112.787, -379.642, 40.2964, 0.15 ) }
    dend_9 { pt3dadd( -113.164, -380.204, 40.3221, 0.15 ) }
    dend_9 { pt3dadd( -113.324, -380.458, 40.3373, 0.15 ) }
    dend_9 { pt3dadd( -113.627, -380.982, 40.3711, 0.22 ) }
    dend_9 { pt3dadd( -114.075, -381.807, 40.4042, 0.15 ) }
    dend_9 { pt3dadd( -114.659, -382.911, 40.4263, 0.15 ) }
    dend_9 { pt3dadd( -114.844, -383.239, 40.4267, 0.37 ) }
    dend_9 { pt3dadd( -115.126, -383.721, 40.3988, 0.37 ) }
    dend_9 { pt3dadd( -115.48, -384.328, 40.3352, 0.22 ) }
    dend_9 { pt3dadd( -115.851, -385.011, 40.2345, 0.22 ) }
    dend_9 { pt3dadd( -116.098, -385.543, 40.1332, 0.66 ) }
    dend_9 { pt3dadd( -116.321, -386.168, 39.9847, 0.66 ) }
    dend_9 { pt3dadd( -116.618, -387.21, 39.7371, 0.15 ) }
    dend_9 { pt3dadd( -116.711, -387.566, 39.6462, 0.15 ) }
    dend_9 { pt3dadd( -116.894, -388.343, 39.4432, 0.59 ) }
    dend_9 { pt3dadd( -117.027, -388.985, 39.2733, 0.15 ) }
    dend_9 { pt3dadd( -117.164, -389.762, 39.0544, 0.15 ) }
    dend_9 { pt3dadd( -117.242, -390.319, 38.8777, 0.44 ) }
    dend_9 { pt3dadd( -117.386, -391.322, 38.5138, 0.15 ) }
    dend_9 { pt3dadd( -117.445, -391.67, 38.3669, 0.15 ) }
    dend_9 { pt3dadd( -117.547, -392.08, 38.1624, 0.15 ) }
    dend_9 { pt3dadd( -117.681, -392.473, 37.939, 0.37 ) }
    dend_9 { pt3dadd( -117.98, -393.145, 37.5175, 0.44 ) }
    dend_9 { pt3dadd( -118.335, -393.823, 37.0593, 0.22 ) }
    dend_9 { pt3dadd( -118.481, -394.053, 36.9074, 0.22 ) }
    dend_9 { pt3dadd( -118.802, -394.46, 36.6568, 0.15 ) }
    dend_9 { pt3dadd( -119.164, -394.836, 36.4516, 0.15 ) }
    dend_9 { pt3dadd( -119.335, -394.984, 36.3794, 0.15 ) }
    dend_9 { pt3dadd( -119.667, -395.24, 36.2747, 0.29 ) }
    dend_9 { pt3dadd( -120.205, -395.651, 36.1097, 0.37 ) }
    dend_9 { pt3dadd( -120.703, -396.059, 35.9501, 0.22 ) }
    dend_9 { pt3dadd( -121.249, -396.574, 35.7732, 0.15 ) }
    dend_9 { pt3dadd( -121.83, -397.163, 35.5822, 0.29 ) }
    dend_9 { pt3dadd( -122.346, -397.706, 35.3994, 0.15 ) }
    dend_9 { pt3dadd( -122.671, -398.054, 35.2783, 0.15 ) }
    dend_9 { pt3dadd( -123.094, -398.506, 35.1204, 0.52 ) }
    dend_9 { pt3dadd( -123.77, -399.206, 34.8647, 0.15 ) }
    dend_9 { pt3dadd( -124.235, -399.691, 34.6696, 0.15 ) }
    dend_9 { pt3dadd( -124.861, -400.365, 34.324, 0.15 ) }
    dend_9 { pt3dadd( -125.231, -400.762, 34.0658, 0.52 ) }
    dend_9 { pt3dadd( -125.571, -401.094, 33.8065, 0.52 ) }
    dend_9 { pt3dadd( -126.185, -401.656, 33.2938, 0.15 ) }
    dend_9 { pt3dadd( -126.527, -401.94, 32.9819, 0.15 ) }
    dend_9 { pt3dadd( -127.266, -402.542, 32.2344, 0.15 ) }
    dend_9 { pt3dadd( -127.657, -402.863, 31.7815, 0.29 ) }
    dend_9 { pt3dadd( -128.098, -403.255, 31.1775, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -104.877, -352.931, 47.7287, 0.88 ) }
    dend_8 { pt3dadd( -105.454, -353.532, 48.1487, 0.88 ) }
    dend_8 { pt3dadd( -106.156, -354.289, 48.5974, 0.22 ) }
    dend_8 { pt3dadd( -106.809, -355.046, 48.9838, 0.15 ) }
    dend_8 { pt3dadd( -107.341, -355.71, 49.2864, 0.15 ) }
    dend_8 { pt3dadd( -107.637, -356.11, 49.4489, 0.37 ) }
    dend_8 { pt3dadd( -108.061, -356.739, 49.672, 1.03 ) }
    dend_8 { pt3dadd( -108.589, -357.636, 49.9325, 0.44 ) }
    dend_8 { pt3dadd( -109.015, -358.497, 50.1134, 0.15 ) }
    dend_8 { pt3dadd( -109.216, -358.976, 50.1985, 0.15 ) }
    dend_8 { pt3dadd( -109.444, -359.591, 50.307, 0.37 ) }
    dend_8 { pt3dadd( -109.768, -360.505, 50.4792, 0.15 ) }
    dend_8 { pt3dadd( -109.97, -361.034, 50.5904, 0.29 ) }
    dend_8 { pt3dadd( -110.438, -362.073, 50.8286, 0.07 ) }
    dend_8 { pt3dadd( -110.911, -362.908, 50.9958, 0.07 ) }
    dend_8 { pt3dadd( -111.45, -363.699, 51.1568, 0.07 ) }
    dend_8 { pt3dadd( -111.818, -364.141, 51.2486, 0.29 ) }
    dend_8 { pt3dadd( -112.606, -364.931, 51.4071, 0.07 ) }
    dend_8 { pt3dadd( -113.271, -365.504, 51.5299, 0.59 ) }
    dend_8 { pt3dadd( -114.246, -366.229, 51.7123, 0.15 ) }
    dend_8 { pt3dadd( -114.878, -366.664, 51.8532, 0.15 ) }
    dend_8 { pt3dadd( -115.763, -367.259, 52.1319, 0.15 ) }
    dend_8 { pt3dadd( -116.217, -367.582, 52.3154, 0.37 ) }
    dend_8 { pt3dadd( -117.047, -368.239, 52.7422, 0.07 ) }
    dend_8 { pt3dadd( -117.531, -368.679, 53.0531, 0.22 ) }
    dend_8 { pt3dadd( -118.063, -369.235, 53.4309, 0.07 ) }
    dend_8 { pt3dadd( -118.598, -369.833, 53.7911, 0.07 ) }
    dend_8 { pt3dadd( -119.078, -370.39, 54.0928, 0.59 ) }
    dend_8 { pt3dadd( -119.817, -371.239, 54.4788, 0.15 ) }
    dend_8 { pt3dadd( -120.404, -371.903, 54.7176, 0.74 ) }
    dend_8 { pt3dadd( -121.429, -372.998, 55.0174, 0.07 ) }
    dend_8 { pt3dadd( -122.293, -373.869, 55.2211, 0.07 ) }
    dend_8 { pt3dadd( -123.03, -374.569, 55.3611, 0.29 ) }
    dend_8 { pt3dadd( -124.113, -375.531, 55.5382, 0.07 ) }
    dend_8 { pt3dadd( -124.75, -376.064, 55.6232, 0.44 ) }
    dend_8 { pt3dadd( -126.111, -377.134, 55.7799, 0.07 ) }
    dend_8 { pt3dadd( -126.649, -377.538, 55.8353, 0.07 ) }
    dend_8 { pt3dadd( -127.405, -378.1, 55.9217, 0.37 ) }
    dend_8 { pt3dadd( -128.65, -379.046, 56.0918, 0.07 ) }
    dend_8 { pt3dadd( -129.904, -380.029, 56.2834, 0.07 ) }
    dend_8 { pt3dadd( -130.684, -380.678, 56.4094, 0.37 ) }
    dend_8 { pt3dadd( -131.703, -381.612, 56.577, 0.15 ) }
    dend_8 { pt3dadd( -132.61, -382.541, 56.7179, 0.07 ) }
    dend_8 { pt3dadd( -133.251, -383.236, 56.8303, 0.22 ) }
    dend_8 { pt3dadd( -133.702, -383.775, 56.9219, 0.52 ) }
    dend_8 { pt3dadd( -134.129, -384.375, 57.0197, 0.88 ) }
    dend_8 { pt3dadd( -134.666, -385.279, 57.1599, 0.44 ) }
    dend_8 { pt3dadd( -135.062, -386.151, 57.2663, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_44, dend_35, dend_32, dend_25, dend_0, axon_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, axon_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_5 = new SectionList()
    dend_44 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_45 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_43 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_36 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_34 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_31 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_26 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_47 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_24 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_23 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_56 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_51 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_50 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_11 OneSecGrp_SectionRef_45.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_4 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_9 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_8 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_2 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_46 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_48 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_49 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_21 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_20 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_15 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_16 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_17 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_18 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_19 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_55 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_54 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_53 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_28 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_5 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_6 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_29 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_40 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_7 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_42 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_41 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, axon_0, axon_0, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_32 nseg = 3
    dend_45 nseg = 5
    dend_43 nseg = 3
    dend_36 nseg = 11
    dend_34 nseg = 11
    dend_33 nseg = 5
    dend_31 nseg = 7
    dend_26 nseg = 15
    dend_47 nseg = 5
    dend_38 nseg = 7
    dend_30 nseg = 3
    dend_27 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 5
    dend_56 nseg = 5
    dend_12 nseg = 3
    dend_3 nseg = 3
    dend_51 nseg = 7
    dend_50 nseg = 7
    dend_11 nseg = 7
    dend_4 nseg = 15
    dend_52 nseg = 3
    dend_10 nseg = 3
    dend_9 nseg = 3
    dend_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L5_NBC_d30015ad95_0_0


