// Cell: Cell_473862421
/*
{
  "id" : "Cell_473862421",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "306.886, 372.83, 27.44, 10.3944", "312.083, 372.83, 27.44, 10.3944", "317.28, 372.83, 27.44, 10.3944" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "312.083, 372.83, 27.44, 1.0", "317.924, 386.646, 27.44, 1.0", "323.766, 400.462, 27.44, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000028
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "314.75, 376.774, 26.964, 0.2796", "315.391, 377.721, 26.8498, 0.356", "315.826, 378.543, 27.6531, 0.4576", "316.95, 378.532, 27.44, 0.4576", "317.512, 378.206, 29.1007, 0.4576", "318.654, 378.206, 29.12, 0.4576", "319.79, 378.309, 29.12, 0.5848", "320.663, 378.276, 28.1529, 0.6864", "321.308, 377.61, 28.7398, 0.7372", "322.314, 377.091, 28.9512, 0.6864", "323.384, 376.719, 28.9022, 0.6102" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000028
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "312.031, 368.218, 26.1411, 0.3304", "311.78, 367.156, 25.3375, 0.4322", "311.25, 366.223, 24.3908, 0.5084", "310.904, 365.278, 23.0723, 0.483", "311.218, 364.194, 22.96, 0.4322" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000028
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "309.834, 368.977, 27.3356, 0.6864", "309.794, 367.869, 26.7624, 0.839", "309.791, 366.74, 26.3228, 0.9406", "309.764, 365.597, 26.1934, 0.966", "309.585, 364.499, 25.5623, 0.966", "309.081, 363.48, 25.3084, 0.8898", "308.499, 362.512, 25.7272, 0.7626", "308.104, 361.464, 26.2956, 0.6864", "307.655, 360.413, 26.3197, 0.6864", "307.488, 359.281, 26.32, 0.7626", "307.377, 358.142, 26.32, 0.788", "307.075, 357.039, 26.3197, 0.7118" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000028
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "310.593, 376.791, 27.4061, 0.4322", "310.527, 377.864, 27.3406, 0.5592", "310.683, 378.964, 26.7414, 0.5848", "310.637, 380.037, 25.7981, 0.5084", "310.178, 380.982, 26.6462, 0.4322", "309.791, 381.945, 27.8124, 0.3814", "309.637, 383.056, 27.412, 0.3814", "308.952, 383.926, 26.7898, 0.4576", "308.08, 384.644, 26.3326, 0.5592", "307.301, 385.481, 26.2685, 0.7372", "306.651, 386.418, 26.0495, 0.9152" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000028
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "323.766, 400.462, 27.44, 1.0", "329.607, 414.278, 27.44, 1.0", "335.448, 428.094, 27.44, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "323.384, 376.719, 28.9022, 0.6102", "324.116, 376.376, 28.849, 0.9152", "324.761, 376.029, 27.6923, 0.5592", "324.435, 375.671, 26.054, 0.4576", "325.01, 375.461, 24.0803, 0.3814", "325.492, 375.232, 25.6948, 0.4068", "326.081, 375.088, 27.1382, 0.4576", "326.531, 374.774, 25.347, 0.5084", "326.789, 374.583, 22.8903, 0.5084", "326.815, 375.122, 20.6702, 0.4576", "327.52, 375.346, 18.7687, 0.3814", "328.575, 375.232, 18.951, 0.3814", "329.395, 374.782, 19.9116, 0.4322", "329.961, 373.893, 19.88, 0.483", "330.841, 373.745, 18.6074, 0.4576", "331.646, 374.107, 18.6435, 0.4068", "332.375, 374.467, 18.6777, 0.4068", "332.568, 374.151, 19.3404, 0.483", "333.371, 374.091, 20.4873, 0.5592", "333.986, 373.41, 19.6, 0.5848", "334.342, 372.836, 21.0227, 0.483", "334.972, 372.601, 22.6467, 0.3814", "336.107, 372.601, 22.96, 0.356" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "323.384, 376.719, 28.9022, 0.6102", "324.52, 376.385, 28.6958, 0.5338", "325.341, 376.643, 28.6843, 0.4576" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "311.218, 364.194, 22.96, 0.4322", "311.251, 363.567, 23.2739, 0.6102", "311.628, 362.861, 25.2036, 0.483", "311.799, 362.435, 27.6895, 0.4068", "312.053, 362.05, 29.6856, 0.4068", "311.508, 361.182, 30.4539, 0.5084", "310.76, 360.377, 30.875, 0.6102", "310.106, 359.476, 31.3404, 0.661", "310.248, 358.784, 32.2291, 0.6864", "311.071, 358.135, 33.3287, 0.661", "311.301, 357.116, 34.0796, 0.5848", "310.885, 356.075, 34.2222, 0.5338", "310.453, 355.052, 34.853, 0.5084", "310.986, 354.13, 35.4858, 0.5592", "311.935, 353.586, 36.2782, 0.6102", "312.452, 352.583, 36.6072, 0.7118" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "311.218, 364.194, 22.96, 0.4322", "311.85, 363.655, 22.9597, 0.788", "312.77, 362.975, 22.958, 0.839", "313.605, 362.194, 22.9513, 0.8136", "314.474, 361.45, 22.9222, 0.788", "315.421, 360.813, 22.7665, 0.7372", "316.285, 360.12, 22.0604, 0.6864", "317.147, 359.374, 21.84, 0.6102", "318.015, 358.631, 21.84, 0.5338", "318.836, 357.836, 21.84, 0.5084", "319.642, 357.023, 21.84, 0.483", "320.433, 356.197, 21.84, 0.5084", "321.167, 355.322, 21.84, 0.5338", "321.84, 354.399, 21.8394, 0.6356", "322.548, 353.502, 21.8375, 0.7118", "323.26, 352.611, 21.8285, 0.7118", "324.117, 351.861, 21.7795, 0.661", "325.047, 351.229, 21.429, 0.5848", "325.817, 350.469, 20.6265, 0.5848", "326.508, 349.61, 19.9601, 0.5592", "327.329, 348.834, 19.6504, 0.5592", "328.142, 348.046, 19.936, 0.5338", "328.866, 347.197, 20.151, 0.5848", "329.535, 346.286, 19.7893, 0.6864", "330.311, 345.457, 19.5244, 0.7372", "331.124, 344.679, 19.0999, 0.7118", "331.91, 343.873, 18.6348, 0.6102", "332.595, 342.966, 18.5945, 0.5848", "333.273, 342.082, 19.14, 0.5848", "334.042, 341.264, 19.6092, 0.6102", "334.846, 340.476, 20.097, 0.6102", "335.69, 339.73, 20.5808, 0.5848", "336.619, 339.074, 20.7189, 0.5592", "337.57, 338.44, 20.7152, 0.5338", "338.479, 337.747, 20.6982, 0.5338", "339.391, 337.056, 20.6136, 0.5084", "340.415, 336.797, 19.9066, 0.4576", "340.888, 336.702, 20.7054, 0.4068", "341.736, 336.218, 20.4498, 0.356", "342.69, 335.814, 19.9534, 0.3814", "343.541, 335.65, 18.6522, 0.4576", "344.122, 334.884, 18.1961, 0.5848", "344.547, 334.019, 18.6458, 0.6356", "345.048, 333.046, 19.0036, 0.5592", "345.346, 332.127, 19.264, 0.4322", "345.891, 331.313, 19.6795, 0.3304", "346.526, 330.828, 19.49, 0.305", "346.786, 330.034, 19.9335, 0.356", "347.011, 329.201, 20.7088, 0.3814", "347.314, 328.577, 19.2556, 0.4576", "346.552, 328.328, 17.5574, 0.483", "346.536, 327.995, 15.68, 0.5592", "346.6, 327.298, 15.0192, 0.5848", "346.289, 326.45, 14.6462, 0.5592", "346.289, 326.154, 17.2052, 0.5084", "346.777, 325.382, 17.92, 0.4576", "347.204, 324.721, 18.5643, 0.4576", "347.263, 323.751, 18.1902, 0.483", "347.396, 322.858, 17.0125, 0.483", "347.744, 321.965, 18.2, 0.5338", "347.911, 320.964, 17.3768, 0.5592", "348.546, 320.114, 17.8315, 0.661", "348.806, 319.369, 18.0029, 0.7372", "349.278, 318.397, 17.5647, 0.788", "349.835, 317.719, 17.08, 0.788", "350.133, 316.854, 16.2173, 0.7372", "350.31, 315.821, 16.0096, 0.7118", "350.558, 314.734, 16.387, 0.661", "350.88, 313.782, 17.4628, 0.6102", "351.526, 313.064, 18.3985, 0.5592", "352.095, 312.226, 17.7682, 0.483", "353.005, 311.571, 17.92, 0.4576", "353.774, 310.957, 16.8146, 0.4068", "354.544, 310.472, 15.6842, 0.4576", "355.141, 310.008, 15.7872, 0.4576", "355.846, 309.399, 15.0598, 0.5084", "356.266, 308.605, 14.56, 0.5338", "356.934, 307.84, 15.12, 0.5848", "357.595, 307.053, 14.9226, 0.6356", "358.304, 306.427, 16.2442, 0.6356", "358.923, 305.824, 15.3765, 0.6102", "359.167, 304.828, 15.6624, 0.5592", "359.446, 303.846, 15.2127, 0.483", "359.662, 302.845, 14.082, 0.4576", "360.089, 302.17, 15.0889, 0.4322", "360.549, 301.589, 14.4393, 0.5084", "361.449, 301.207, 14.4878, 0.5592", "362.146, 300.719, 15.4, 0.5848", "362.759, 300.22, 17.0999, 0.5592", "363.118, 299.292, 16.681, 0.5084", "363.563, 298.433, 15.4311, 0.483", "363.647, 297.763, 17.2939, 0.4068", "363.839, 297.097, 16.7356, 0.3814", "364.311, 296.717, 16.2686, 0.3814", "364.156, 295.913, 17.3474, 0.4322", "364.25, 294.919, 16.1381, 0.4576", "364.23, 294.582, 13.8012, 0.4322", "363.872, 293.864, 14.3632, 0.4068", "364.478, 293.093, 15.4, 0.356" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "307.075, 357.039, 26.3197, 0.7118", "306.122, 356.577, 26.1514, 0.6356", "305.224, 356.245, 24.876, 0.6356", "304.212, 356.005, 24.7976, 0.5338", "303.295, 355.68, 24.3214, 0.483", "302.329, 355.658, 24.92, 0.3814", "301.207, 355.6, 25.121, 0.356", "300.249, 355.306, 24.0128, 0.4068", "299.329, 355.289, 22.96, 0.5084", "298.348, 354.996, 23.0737, 0.5592", "297.493, 354.865, 22.8934, 0.5592", "296.549, 354.526, 22.6873, 0.5592", "295.599, 354.107, 21.8565, 0.6102", "294.73, 353.377, 21.56, 0.661", "293.963, 352.598, 22.0142, 0.661", "293.018, 352.142, 21.5642, 0.661", "292.226, 351.642, 21.7003, 0.661", "291.36, 351.027, 21.3592, 0.661", "290.423, 350.525, 21.0731, 0.6356", "289.4, 350.147, 20.8603, 0.6356", "289.006, 349.333, 20.16, 0.661", "288.224, 348.576, 20.6489, 0.661", "287.549, 347.769, 20.7827, 0.5592", "286.643, 347.285, 19.8761, 0.483", "285.935, 346.615, 19.8573, 0.4322", "285.004, 346.206, 20.1401, 0.4576", "284.347, 345.866, 19.6622, 0.4068", "283.707, 345.411, 19.4219, 0.356", "283.14, 344.914, 19.4622, 0.305", "282.648, 344.182, 20.6951, 0.3304", "281.837, 343.668, 19.6288, 0.3814", "280.988, 343.263, 19.88, 0.4322", "280.051, 342.914, 19.88, 0.483", "279.302, 342.382, 19.4384, 0.5084", "278.385, 341.892, 19.8755, 0.5592", "277.487, 341.341, 19.3486, 0.5592", "276.613, 340.84, 19.32, 0.5592", "275.755, 340.099, 19.3869, 0.5338", "275.113, 339.303, 19.1041, 0.5084", "274.403, 338.476, 19.0551, 0.4322", "273.886, 337.462, 19.164, 0.3304", "273.132, 336.652, 19.32, 0.305", "272.488, 335.777, 19.32, 0.3814" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "307.075, 357.039, 26.3197, 0.7118", "307.05, 355.897, 26.3172, 0.6102", "307.051, 354.753, 26.2984, 0.5084", "307.055, 353.61, 26.1772, 0.4068" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "306.651, 386.418, 26.0495, 0.9152", "306.443, 388.061, 26.5065, 0.5084", "306.03, 389.111, 26.4446, 0.5084", "305.707, 390.188, 26.502, 0.4576", "305.514, 391.28, 27.1065, 0.483", "305.055, 392.273, 27.7141, 0.4576", "304.463, 393.208, 28.4032, 0.5338", "303.722, 393.99, 29.2457, 0.5338", "302.786, 394.603, 29.6803, 0.6102", "301.811, 395.177, 30.0818, 0.6356", "300.864, 395.777, 30.6298, 0.661", "300.052, 396.56, 30.8322, 0.6356", "299.537, 397.562, 30.9798, 0.5848", "299.058, 398.566, 31.5577, 0.5592", "298.471, 399.532, 31.9015, 0.483", "297.686, 400.35, 32.0855, 0.4576", "296.987, 401.195, 32.7701, 0.4576", "296.598, 402.241, 33.1243, 0.5592", "296.494, 403.348, 33.6806, 0.5848", "296.299, 404.457, 34.1166, 0.5338", "295.867, 405.507, 34.3272, 0.4068", "295.587, 406.486, 35.4684, 0.4068", "295.246, 407.517, 36.2978, 0.483", "294.67, 408.495, 36.4008, 0.6102", "294.211, 409.541, 36.4048, 0.6356", "293.789, 410.604, 36.4274, 0.661", "293.366, 411.666, 36.5674, 0.661", "293.04, 412.711, 37.343, 0.6864", "292.38, 413.477, 38.5918, 0.6864", "291.504, 413.662, 40.2956, 0.6864", "290.775, 414.202, 41.9924, 0.6356", "290.156, 414.953, 43.4591, 0.5848", "289.589, 415.82, 44.24, 0.5084", "288.742, 416.306, 44.24, 0.483", "287.836, 416.793, 44.1582, 0.4322", "287.217, 417.403, 44.1952, 0.3814", "286.704, 418.38, 44.2963, 0.3814", "285.789, 418.903, 44.8767, 0.4322", "285.104, 419.602, 45.36, 0.5084", "284.316, 420.219, 44.8, 0.483", "283.598, 420.803, 45.6084, 0.3814", "282.918, 421.595, 45.7148, 0.2796", "282.4, 422.379, 45.0178, 0.2288", "282.228, 423.46, 44.6365, 0.2288", "282.11, 424.509, 43.7388, 0.2542", "282.157, 425.593, 43.9438, 0.3304", "282.16, 426.249, 45.1063, 0.4322", "282.301, 427.322, 44.8, 0.5338" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "306.651, 386.418, 26.0495, 0.9152", "306.163, 386.849, 25.4593, 0.5084", "305.208, 387.452, 25.2165, 0.483", "304.171, 387.935, 25.1997, 0.483", "303.165, 388.477, 25.1983, 0.4068", "302.661, 389.479, 25.1899, 0.483", "302.053, 390.445, 25.1437, 0.5338", "301.149, 391.113, 24.7388, 0.6102", "300.291, 391.827, 24.1321, 0.5338", "299.32, 392.425, 24.0517, 0.5084", "298.283, 392.906, 23.9078, 0.5084", "297.186, 392.985, 23.1896, 0.6356", "296.059, 393.109, 22.8334, 0.6356", "295.002, 393.472, 22.2421, 0.6102", "293.937, 393.878, 22.4277, 0.483", "292.936, 394.385, 22.9662, 0.4322" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "325.341, 376.643, 28.6843, 0.4576", "325.517, 376.545, 29.1396, 0.4322", "326.567, 376.216, 29.4557, 0.5084", "327.54, 375.817, 29.12, 0.483" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "325.341, 376.643, 28.6843, 0.4576", "325.952, 376.442, 29.4493, 0.356", "327.016, 376.147, 29.4, 0.3304", "327.794, 375.727, 28.28, 0.3814" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "312.452, 352.583, 36.6072, 0.7118", "312.774, 352.012, 37.4774, 0.788", "313.463, 352.018, 39.2, 0.7118", "314.553, 352.123, 39.0611, 0.6102", "315.694, 352.123, 39.2, 0.483", "316.627, 352.232, 40.0697, 0.4322", "317.245, 351.664, 39.4985, 0.4322", "317.862, 351.55, 38.3634, 0.4068", "318.824, 351.309, 39.2, 0.3304", "319.954, 351.197, 39.256, 0.2542", "320.991, 350.827, 39.5508, 0.2542", "322.009, 350.478, 40.32, 0.305", "323.139, 350.3, 40.32, 0.356", "324.036, 349.95, 39.5024, 0.356", "325.044, 349.95, 40.32, 0.305", "326.054, 349.724, 39.48, 0.305", "326.905, 349.127, 39.1737, 0.3814", "327.893, 348.655, 38.4574, 0.5338", "328.913, 348.309, 38.2824, 0.5848", "329.942, 348.151, 39.0362, 0.5848", "330.816, 347.651, 38.8066, 0.5084", "331.668, 347.095, 38.7383, 0.483", "332.443, 346.518, 39.0572, 0.4322", "333.53, 346.272, 38.9567, 0.4322", "334.601, 345.942, 39.2, 0.483", "335.715, 345.75, 39.2, 0.5592", "336.655, 345.207, 38.92, 0.5592", "337.637, 344.72, 38.906, 0.483", "338.522, 344.108, 38.64, 0.4068", "339.349, 343.707, 39.4472, 0.3814", "340.131, 343.127, 38.703, 0.356", "341.137, 342.801, 38.8433, 0.305", "341.697, 342.034, 38.2917, 0.2542", "342.77, 341.827, 38.4994, 0.2542", "343.881, 341.827, 38.92, 0.2796", "345.0, 341.683, 38.64, 0.305", "345.977, 341.228, 39.3921, 0.2796", "346.921, 340.809, 39.48, 0.2542", "347.92, 340.351, 39.2, 0.2542", "348.715, 339.768, 39.17, 0.2796", "349.816, 339.586, 39.2465, 0.305", "350.494, 338.916, 40.054, 0.2796", "351.184, 338.05, 40.1649, 0.2796", "351.978, 337.237, 40.04, 0.2796", "352.763, 336.416, 39.7754, 0.305", "353.454, 335.783, 40.304, 0.2796", "354.006, 334.818, 40.2942, 0.2796", "354.602, 333.998, 39.5335, 0.2796", "354.869, 333.223, 40.1047, 0.305", "354.869, 332.115, 39.76, 0.2796", "354.926, 330.982, 39.76, 0.2796", "355.557, 330.116, 39.9524, 0.305", "355.687, 329.247, 41.44, 0.356", "356.087, 328.233, 41.0396, 0.4068", "356.928, 327.642, 40.6, 0.4068" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "312.452, 352.583, 36.6072, 0.7118", "311.79, 351.345, 38.0428, 0.5848", "311.218, 350.488, 39.1381, 0.6356", "310.831, 349.486, 40.0814, 0.788", "310.36, 348.529, 41.0603, 0.8644", "309.772, 347.634, 41.9689, 0.839", "309.022, 346.828, 42.6549, 0.661", "308.201, 346.07, 43.1046, 0.5338", "307.388, 345.265, 43.169, 0.4576", "306.563, 344.479, 43.379, 0.4576", "305.64, 344.001, 44.0409, 0.483", "304.947, 343.292, 44.3948, 0.5084", "304.532, 342.411, 44.1983, 0.5338", "304.283, 341.505, 44.1126, 0.5084", "303.639, 340.595, 43.68, 0.483", "302.809, 339.839, 43.68, 0.483", "301.986, 339.259, 43.0254, 0.483", "301.246, 338.426, 43.001, 0.4322", "300.555, 337.664, 43.4, 0.3814", "299.746, 336.9, 43.3958, 0.3814", "298.828, 336.243, 43.1981, 0.4576", "297.979, 335.54, 43.68, 0.483", "297.363, 334.615, 43.96, 0.483", "296.392, 334.264, 44.4906, 0.483", "295.581, 333.573, 44.3167, 0.5592", "295.022, 333.018, 43.12, 0.661", "294.265, 332.35, 43.4904, 0.7118", "293.66, 331.587, 43.5422, 0.6864", "292.999, 330.936, 43.68, 0.6102", "292.262, 330.095, 43.96, 0.5338", "291.621, 329.2, 43.4826, 0.4322", "290.825, 328.413, 43.12, 0.356", "290.125, 327.524, 43.12, 0.356", "289.544, 326.711, 42.9195, 0.4068", "288.974, 326.129, 43.0903, 0.483", "288.439, 325.206, 43.1589, 0.483", "288.437, 324.162, 42.8431, 0.5338", "288.139, 323.179, 42.7966, 0.5084", "287.556, 322.254, 42.56, 0.5084", "286.977, 321.295, 42.2531, 0.4322", "286.423, 320.458, 41.5663, 0.4322", "285.339, 320.17, 41.44, 0.4068", "284.68, 319.368, 41.1695, 0.3814", "283.956, 318.593, 40.8853, 0.356", "283.29, 317.988, 39.7424, 0.4068", "282.225, 317.612, 39.3862, 0.5338", "281.771, 316.862, 39.8717, 0.6102", "281.535, 315.859, 39.4708, 0.661", "280.917, 315.749, 38.099, 0.661", "280.306, 314.998, 38.456, 0.661", "279.464, 314.528, 38.0993, 0.5592", "278.852, 313.718, 39.058, 0.4322", "278.25, 312.898, 38.6389, 0.356", "277.566, 312.259, 37.4657, 0.4068", "276.994, 311.406, 37.1272, 0.4576", "276.386, 310.896, 38.5666, 0.5338", "275.682, 310.703, 37.5376, 0.5084", "274.609, 310.507, 36.96, 0.5338", "273.551, 310.26, 36.5106, 0.4322", "272.949, 309.582, 35.8218, 0.3814", "271.968, 309.161, 35.84, 0.305", "271.143, 308.524, 36.4, 0.3304", "270.337, 307.821, 36.7111, 0.3814", "269.461, 307.131, 36.7223, 0.4576", "268.779, 306.257, 36.7875, 0.5338", "268.055, 305.422, 36.5316, 0.6356", "267.601, 304.581, 36.0287, 0.6864", "267.241, 303.846, 35.3214, 0.7372", "266.958, 303.176, 35.2694, 0.6864", "266.751, 302.422, 35.5496, 0.6864", "266.134, 301.688, 35.5541, 0.661", "265.675, 300.872, 34.5332, 0.661" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "272.488, 335.777, 19.32, 0.3814", "272.59, 335.171, 19.5513, 0.4068", "272.384, 334.073, 19.9839, 0.483", "271.937, 333.198, 19.6078, 0.5338", "271.239, 332.482, 19.9755, 0.5338", "270.342, 331.814, 20.3748, 0.4322", "269.708, 330.899, 19.8016, 0.356", "269.318, 329.938, 19.3113, 0.2796", "268.874, 328.915, 19.32, 0.2542", "268.117, 328.084, 19.1159, 0.2542", "267.207, 327.548, 19.3166, 0.2796", "266.184, 327.097, 19.04, 0.305", "265.093, 326.879, 19.3945, 0.2796", "264.223, 326.507, 20.72, 0.2542", "263.348, 326.389, 19.3189, 0.2288", "262.399, 325.934, 18.48, 0.2288", "261.267, 325.811, 18.48, 0.2542", "260.127, 325.784, 18.48, 0.2796", "259.368, 325.168, 18.3674, 0.305", "258.715, 324.419, 17.7086, 0.2796", "257.855, 323.705, 17.92, 0.2542", "257.021, 322.995, 17.92, 0.2288", "256.315, 322.171, 17.92, 0.2288", "255.714, 321.274, 17.897, 0.2796", "255.311, 320.899, 16.849, 0.3814", "254.645, 320.009, 16.8566, 0.5338", "253.735, 319.334, 16.8582, 0.6356", "253.07, 318.582, 16.9044, 0.6864", "252.379, 317.708, 16.8224, 0.6864", "251.455, 317.428, 16.4956, 0.7118", "250.495, 317.017, 16.6286, 0.788", "249.739, 316.201, 16.52, 0.839", "249.013, 315.349, 16.2977, 0.839", "248.129, 314.656, 16.6116, 0.7372", "247.465, 314.106, 16.4615, 0.6864", "246.618, 313.518, 16.3047, 0.6356", "245.585, 313.109, 16.87, 0.6356", "244.712, 312.458, 17.4672, 0.6102", "243.778, 311.837, 17.4846, 0.661", "242.966, 311.116, 17.1632, 0.6864", "242.477, 310.47, 16.6365, 0.6864", "241.687, 309.907, 16.3302, 0.5848", "241.411, 309.452, 18.1269, 0.483", "241.421, 309.47, 16.52, 0.3814", "241.077, 308.465, 16.5217, 0.3304", "241.407, 307.633, 14.966, 0.356", "241.151, 306.784, 14.9271, 0.4322", "240.575, 306.614, 16.8932, 0.483", "240.195, 305.696, 16.6281, 0.4576", "240.262, 305.034, 18.0849, 0.3814", "240.637, 304.417, 17.92, 0.3814", "240.63, 303.92, 17.0405, 0.4068", "240.374, 303.083, 15.96, 0.5338", "239.98, 302.401, 15.3524, 0.6102", "239.359, 301.579, 15.1256, 0.661", "238.747, 300.998, 16.1073, 0.6102", "238.02, 300.408, 15.8668, 0.5338", "237.917, 300.014, 14.0358, 0.5084", "237.274, 299.32, 14.2419, 0.4576", "236.694, 299.156, 12.88, 0.4068" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "272.488, 335.777, 19.32, 0.3814", "272.264, 335.242, 19.32, 0.4068", "271.586, 334.506, 19.32, 0.483" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "307.055, 353.61, 26.1772, 0.4068", "307.517, 353.2, 23.016, 0.5848", "307.108, 353.419, 20.7553, 0.5592", "306.173, 353.776, 19.4611, 0.483", "305.3, 353.918, 17.8702, 0.3814", "304.256, 353.704, 16.879, 0.3304", "303.168, 353.664, 16.0686, 0.305", "302.286, 354.082, 15.9202, 0.305", "302.137, 355.084, 16.8627, 0.3304", "302.51, 356.111, 16.9459, 0.3814", "302.614, 357.105, 15.9138, 0.4322", "301.968, 357.898, 15.2757, 0.4322", "300.931, 358.265, 15.6022, 0.4068", "300.454, 359.0, 16.791, 0.356", "301.093, 359.587, 15.6106, 0.356", "302.016, 359.559, 14.0, 0.3814" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "307.055, 353.61, 26.1772, 0.4068", "307.083, 352.611, 25.5343, 0.6864", "307.283, 351.5, 25.1034, 0.7118", "307.481, 350.403, 24.4773, 0.7118", "307.4, 349.273, 24.096, 0.661", "307.003, 348.204, 24.0856, 0.6864", "306.54, 347.157, 24.1139, 0.7118", "306.027, 346.137, 24.2662, 0.7626", "305.424, 345.201, 24.9024, 0.7372", "304.779, 344.264, 25.1969, 0.7118", "304.151, 343.307, 25.2, 0.6864", "303.568, 342.323, 25.2, 0.6864", "303.039, 341.309, 25.1994, 0.6864", "302.475, 340.314, 25.1966, 0.661" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "292.936, 394.385, 22.9662, 0.4322", "292.646, 393.841, 22.9662, 0.5848", "292.075, 392.854, 22.9704, 0.5848", "291.288, 392.041, 23.0171, 0.5848", "290.253, 391.608, 23.2767, 0.5338", "289.152, 391.496, 23.949, 0.5338", "288.049, 391.258, 24.3723, 0.4576", "286.946, 391.122, 25.0146, 0.4576", "285.823, 391.058, 25.4668, 0.4068", "284.749, 390.784, 26.0232, 0.3814", "283.719, 390.326, 26.1685, 0.3814", "282.59, 390.178, 26.0893, 0.4322", "281.481, 389.985, 26.3085, 0.5084", "280.432, 389.53, 26.2489, 0.5084", "279.379, 389.238, 25.7748, 0.483", "278.385, 388.992, 25.1258, 0.483", "277.515, 388.394, 25.8048, 0.4576", "276.569, 388.096, 26.8097, 0.4576", "275.658, 387.621, 26.88, 0.4576", "274.775, 387.816, 26.1974, 0.5338", "273.782, 387.666, 25.9529, 0.5592", "272.771, 387.436, 26.04, 0.5592", "272.097, 387.096, 27.4336, 0.5084", "271.7, 386.75, 25.6819, 0.5084", "270.698, 386.466, 25.48, 0.5084", "269.706, 386.319, 26.3113, 0.5338", "269.115, 385.968, 25.0883, 0.5338", "268.395, 385.247, 24.8786, 0.483", "267.688, 384.641, 25.4072, 0.4576", "266.987, 384.278, 23.8, 0.4322", "266.128, 383.616, 23.9599, 0.5084", "265.295, 382.907, 24.575, 0.5848", "264.448, 382.595, 23.8286, 0.661", "263.636, 382.033, 23.5626, 0.661", "263.031, 381.147, 24.0075, 0.6102", "262.293, 380.373, 23.2772, 0.5084", "261.518, 379.562, 23.56, 0.4322", "260.734, 378.993, 24.5227, 0.4068", "259.893, 378.466, 23.4346, 0.4576", "259.196, 377.792, 22.68, 0.483", "258.453, 377.225, 22.9205, 0.483", "257.425, 377.054, 23.24, 0.4322", "256.639, 376.454, 22.6789, 0.4068", "255.819, 375.779, 22.3219, 0.356", "255.212, 375.343, 22.094, 0.3814", "254.181, 375.304, 21.887, 0.4576", "253.081, 375.4, 21.9601, 0.5592", "251.971, 375.505, 22.1746, 0.5592", "250.92, 375.854, 22.6898, 0.4576", "250.132, 375.933, 21.784, 0.356", "249.227, 375.575, 21.1434, 0.3814", "249.005, 375.575, 18.7698, 0.4576", "248.311, 376.058, 18.4478, 0.5084", "247.453, 375.846, 19.32, 0.4322", "246.407, 375.436, 19.32, 0.4068", "245.397, 375.022, 19.5734, 0.4576", "244.909, 375.358, 19.7109, 0.5592", "243.969, 375.274, 18.8563, 0.6102", "242.912, 374.983, 18.613, 0.6102", "242.173, 374.826, 20.1127, 0.6102", "241.37, 374.165, 19.4435, 0.5848", "240.261, 374.088, 19.2363, 0.5592", "239.244, 373.817, 19.8934, 0.5338", "238.638, 373.508, 19.1668, 0.5084", "237.904, 372.907, 19.3164, 0.483", "237.275, 372.092, 19.1453, 0.4322", "236.816, 371.345, 18.1594, 0.4068", "235.859, 370.835, 17.4675, 0.3304", "234.83, 370.476, 16.611, 0.2796", "233.802, 370.118, 15.7545, 0.2288", "232.985, 369.454, 15.4, 0.2288", "232.69, 368.475, 15.4, 0.2288", "232.69, 367.332, 15.4, 0.2288", "232.616, 366.191, 15.4, 0.2288", "232.368, 365.18, 15.4, 0.2542", "231.266, 364.878, 15.4, 0.2796", "230.859, 363.906, 15.4, 0.356", "230.859, 362.762, 15.4, 0.3814" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "292.936, 394.385, 22.9662, 0.4322", "292.49, 394.999, 22.9832, 0.4322", "291.901, 395.976, 23.1025, 0.4068", "291.25, 396.871, 23.7213, 0.4576", "290.563, 397.769, 24.0411, 0.483", "289.805, 398.623, 24.0806, 0.5338", "288.907, 399.323, 24.0828, 0.5592", "288.05, 400.078, 24.0904, 0.5592", "287.236, 400.882, 24.1237, 0.6102", "286.429, 401.69, 24.2673, 0.5848", "285.655, 402.486, 24.8928, 0.5848", "284.902, 403.332, 25.1149, 0.483", "284.255, 404.256, 24.7358, 0.483", "283.543, 405.128, 24.2746, 0.5338", "282.642, 405.78, 24.6834, 0.661", "281.898, 406.574, 25.4755, 0.6864", "281.219, 407.484, 25.5206, 0.661", "280.371, 408.239, 25.2538, 0.6102", "279.543, 409.026, 25.2843, 0.6356", "278.724, 409.808, 25.6662, 0.6356", "277.82, 410.464, 26.264, 0.6102", "276.914, 411.158, 26.3071, 0.5592", "275.99, 411.832, 26.2576, 0.5338", "275.086, 412.523, 25.9955, 0.5592", "274.32, 413.322, 25.3011, 0.6102", "273.704, 414.281, 25.2031, 0.6864", "273.235, 415.323, 25.2, 0.7626", "272.631, 416.295, 25.2, 0.7626", "272.064, 417.288, 25.2, 0.7372", "271.364, 418.191, 25.1997, 0.6356", "270.706, 419.128, 25.1983, 0.6102", "270.042, 420.06, 25.1919, 0.6102", "269.373, 420.987, 25.1605, 0.7118", "268.586, 421.816, 25.0281, 0.7626", "267.8, 422.594, 24.3247, 0.7626", "266.978, 423.381, 24.0618, 0.6864", "266.076, 424.084, 23.9635, 0.6102", "265.161, 424.707, 23.259, 0.5084", "264.209, 425.312, 22.7979, 0.4322", "263.39, 426.063, 22.9298, 0.4068", "262.448, 426.383, 24.1791, 0.483", "261.425, 426.879, 24.4507, 0.5084", "260.395, 427.357, 24.6235, 0.5084", "259.341, 427.749, 24.5118, 0.4576", "258.292, 428.026, 24.6938, 0.5084", "257.392, 428.543, 23.7191, 0.5848", "256.694, 428.955, 24.3012, 0.661", "255.936, 429.728, 24.64, 0.661", "255.009, 430.258, 24.6344, 0.6356", "254.183, 430.663, 23.6824, 0.6102", "253.439, 431.385, 23.7252, 0.6102", "252.528, 431.884, 24.5468, 0.5592", "251.774, 432.359, 23.6477, 0.483", "250.688, 432.556, 23.6606, 0.4322", "249.843, 432.919, 24.5949, 0.483", "249.279, 433.802, 24.9186, 0.5848", "248.729, 434.396, 23.8501, 0.6356", "248.148, 435.354, 23.8171, 0.5848", "247.668, 436.112, 22.9415, 0.483", "247.026, 436.971, 22.675, 0.3814", "246.252, 437.459, 24.2332, 0.356", "245.556, 438.047, 24.8853, 0.356", "245.134, 438.883, 24.1363, 0.4068", "244.474, 439.607, 24.2189, 0.4068", "243.786, 440.402, 23.6132, 0.4068", "243.71, 441.246, 22.68, 0.4068", "243.128, 441.8, 24.0089, 0.4322", "242.948, 442.841, 23.6141, 0.4322", "242.614, 443.812, 23.9828, 0.356", "242.13, 444.637, 23.2663, 0.2796", "241.292, 445.364, 23.4889, 0.2542", "240.425, 445.474, 22.202, 0.2796", "239.782, 446.043, 21.0, 0.305", "239.434, 446.732, 21.884, 0.305", "238.818, 447.448, 22.6209, 0.305", "237.722, 447.651, 22.398, 0.305", "236.998, 448.437, 21.6418, 0.2796", "236.306, 449.331, 21.5261, 0.2796", "235.683, 450.07, 21.7196, 0.2796", "234.891, 450.838, 21.84, 0.3304", "234.27, 451.394, 21.8378, 0.3304", "233.606, 452.29, 21.56, 0.3304", "232.743, 452.823, 21.56, 0.305", "231.835, 453.475, 21.8126, 0.356", "230.93, 454.075, 22.1673, 0.4322", "229.97, 454.603, 21.7403, 0.5084", "228.972, 454.854, 21.7193, 0.483", "227.952, 454.523, 22.12, 0.4068", "227.04, 454.737, 22.96, 0.305", "226.359, 455.457, 22.96, 0.2542", "225.564, 456.185, 22.96, 0.2288", "224.695, 456.925, 22.96, 0.2542", "223.901, 457.597, 23.2285, 0.2796", "223.54, 458.673, 23.24, 0.305", "222.879, 459.456, 22.965, 0.305", "221.84, 459.774, 23.5074, 0.3304", "220.945, 460.288, 23.6846, 0.356", "220.391, 461.246, 24.0321, 0.356", "219.762, 461.725, 25.1622, 0.305", "219.762, 462.852, 25.4906, 0.2542", "219.601, 463.94, 26.1092, 0.2288", "218.963, 464.798, 26.5496, 0.2288", "218.401, 465.654, 27.594, 0.2288", "217.71, 466.313, 28.0, 0.2288", "217.138, 467.279, 28.1078, 0.305", "217.131, 468.354, 28.0, 0.3814" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "327.794, 375.727, 28.28, 0.3814", "328.243, 375.48, 28.4889, 0.4322", "328.775, 374.669, 29.5291, 0.356", "328.671, 374.356, 31.3818, 0.3814", "329.134, 373.476, 31.92, 0.4068", "329.271, 372.451, 32.2176, 0.5338", "330.011, 371.737, 33.1324, 0.5592", "330.945, 371.118, 33.32, 0.5848", "331.403, 370.537, 33.7296, 0.483", "331.431, 369.499, 33.847, 0.483", "331.41, 368.39, 33.7924, 0.483", "330.926, 367.484, 34.44, 0.5084", "330.674, 366.403, 34.839, 0.4322", "330.717, 365.337, 35.5491, 0.3304", "330.502, 364.326, 36.2132, 0.2796", "330.066, 363.719, 35.0115, 0.2796", "329.527, 362.858, 36.0828, 0.3304", "329.101, 362.348, 38.2687, 0.3814", "328.365, 361.808, 38.3583, 0.483", "327.647, 361.14, 38.6028, 0.5338", "326.785, 360.59, 38.5532, 0.5338", "325.966, 360.26, 39.3156, 0.4322", "325.354, 359.963, 39.48, 0.3814", "324.596, 359.226, 39.48, 0.3304", "323.595, 358.789, 39.4834, 0.3304", "323.583, 358.485, 41.4355, 0.2796", "322.951, 357.762, 41.16, 0.2796", "322.654, 357.157, 42.336, 0.3304", "322.033, 356.669, 43.68, 0.4068", "321.922, 355.538, 43.6122, 0.4576", "322.379, 354.989, 44.133, 0.4068", "322.223, 354.639, 46.4366, 0.3814", "321.509, 354.178, 47.4281, 0.3304", "321.109, 353.461, 49.0557, 0.3304", "320.771, 353.267, 51.4408, 0.2796", "319.748, 353.038, 51.8, 0.2796" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "327.794, 375.727, 28.28, 0.3814", "328.54, 375.621, 28.4964, 0.483", "329.355, 375.362, 29.5546, 0.5338", "330.23, 375.553, 30.5978, 0.5592", "331.194, 375.267, 31.8942, 0.5338", "332.004, 375.003, 30.6956, 0.5848", "332.976, 374.689, 30.0754, 0.5848", "333.936, 374.611, 29.9622, 0.5592", "335.025, 374.431, 30.3635, 0.5338", "335.715, 373.842, 31.2332, 0.5848", "336.71, 373.477, 30.5354, 0.6864", "337.518, 373.223, 30.7376, 0.6356", "338.546, 372.886, 30.6348, 0.5592", "339.622, 372.855, 30.3873, 0.4322", "340.604, 372.657, 29.9838, 0.4576", "341.141, 372.478, 28.2072, 0.4576", "341.663, 372.88, 27.72, 0.4576" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "265.675, 300.872, 34.5332, 0.661", "265.403, 300.21, 34.7141, 0.5338", "265.014, 299.336, 35.2612, 0.5084", "264.542, 298.33, 35.0022, 0.5592", "264.211, 297.678, 33.3169, 0.6102", "263.971, 296.944, 32.0051, 0.661", "263.641, 296.139, 33.0145, 0.661", "263.677, 295.098, 33.6196, 0.6102", "264.025, 294.275, 34.2286, 0.483", "264.035, 293.293, 33.3214, 0.4068", "264.273, 292.307, 33.532, 0.4068", "264.237, 291.451, 32.0158, 0.5338", "264.092, 290.427, 32.3109, 0.6356", "263.463, 289.713, 32.2, 0.6356", "263.344, 288.656, 32.48, 0.5848", "263.316, 287.896, 31.4336, 0.5592", "262.868, 287.126, 29.8343, 0.6102", "262.397, 286.253, 30.2599, 0.661", "261.706, 286.081, 31.92, 0.661", "261.263, 285.224, 31.2833, 0.5848", "260.561, 284.548, 30.24, 0.5084", "260.062, 283.98, 31.3284, 0.4576", "259.405, 283.272, 31.3894, 0.5084", "258.537, 282.642, 30.7597, 0.5848", "257.919, 281.884, 30.2347, 0.661", "257.4, 281.214, 29.4294, 0.661", "256.986, 280.428, 29.5809, 0.5592", "256.233, 279.937, 28.4547, 0.4576", "255.48, 279.454, 29.4, 0.4068" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "265.675, 300.872, 34.5332, 0.661", "265.637, 300.529, 35.56, 0.483" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "302.475, 340.314, 25.1966, 0.661", "301.756, 339.701, 25.1784, 0.4322", "300.72, 339.241, 25.0488, 0.483", "299.86, 338.553, 24.4076, 0.5338", "299.247, 337.613, 24.6694, 0.5848", "298.584, 336.703, 24.2603, 0.6102", "298.101, 335.669, 24.1738, 0.6356", "297.477, 334.724, 24.5151, 0.6864", "296.807, 333.827, 25.0947, 0.7372", "295.968, 333.055, 25.1944, 0.6864", "295.15, 332.255, 25.1891, 0.5592", "294.58, 331.266, 25.1412, 0.4322", "293.85, 330.394, 24.841, 0.4322", "292.928, 329.79, 24.1032, 0.5338", "291.912, 329.265, 24.0794, 0.5848", "291.095, 328.464, 24.0778, 0.5848" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "302.475, 340.314, 25.1966, 0.661", "302.63, 339.858, 26.0229, 0.6102", "302.506, 338.797, 25.7527, 0.5848", "302.257, 337.855, 25.8852, 0.5338", "302.359, 336.774, 26.4726, 0.483", "302.165, 335.712, 26.32, 0.4576", "302.099, 334.754, 25.76, 0.4576", "301.671, 333.778, 26.2718, 0.483", "301.673, 332.732, 25.7723, 0.5084", "301.558, 331.875, 26.01, 0.5592", "301.217, 330.909, 26.7624, 0.5848", "301.317, 329.866, 25.8532, 0.6356" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "341.663, 372.88, 27.72, 0.4576", "341.224, 372.557, 28.089, 0.3304", "340.34, 372.41, 28.9332, 0.4576" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "341.663, 372.88, 27.72, 0.4576", "342.119, 373.362, 27.72, 0.5848", "342.796, 374.051, 27.47, 0.6356", "343.707, 374.231, 28.3346, 0.6356", "344.44, 374.078, 27.4652, 0.6356", "345.201, 374.057, 26.1884, 0.7118", "345.603, 374.088, 24.6884, 0.788", "345.831, 374.738, 25.1006, 0.8136", "346.625, 375.003, 25.5178, 0.7626", "347.435, 375.392, 25.951, 0.7372", "348.325, 375.119, 24.9511, 0.7118", "349.376, 375.232, 24.64, 0.661", "349.721, 375.708, 23.2184, 0.5338", "350.334, 376.249, 23.3806, 0.4576", "351.11, 376.025, 22.3401, 0.4576", "351.929, 375.68, 23.0812, 0.5338", "352.789, 375.433, 21.9601, 0.5848", "353.83, 375.444, 21.0022, 0.5848", "354.653, 375.461, 21.4315, 0.5592", "355.753, 375.692, 21.28, 0.5338", "356.403, 376.336, 20.44, 0.5592", "357.36, 376.262, 20.1211, 0.5848", "358.403, 376.541, 20.4168, 0.5848", "358.959, 376.948, 19.04, 0.6102", "359.789, 377.419, 19.6935, 0.6356", "360.637, 377.52, 20.55, 0.6864", "361.681, 377.642, 20.1704, 0.6356", "362.767, 377.704, 20.2118, 0.5338", "363.631, 378.234, 19.6834, 0.4576", "364.269, 378.664, 19.0453, 0.4322", "365.105, 379.167, 20.1905, 0.5084", "365.899, 379.538, 19.4121, 0.5592", "366.585, 380.223, 19.1332, 0.6356", "367.144, 380.798, 20.44, 0.661", "367.857, 381.404, 19.3466, 0.6864", "368.439, 381.811, 20.44, 0.6864", "369.226, 382.427, 20.7158, 0.661", "370.028, 383.142, 20.713, 0.5848", "370.655, 383.987, 20.9905, 0.4576", "371.096, 384.956, 20.0603, 0.3814", "371.624, 385.907, 19.6862, 0.3814", "372.356, 386.71, 20.0836, 0.4322", "373.135, 387.511, 19.6006, 0.4322", "373.78, 388.248, 20.2082, 0.4068", "374.443, 389.151, 19.7098, 0.4322", "375.113, 390.057, 19.3166, 0.4576", "375.909, 390.781, 19.6, 0.4576", "376.83, 391.246, 19.1556, 0.356", "377.924, 391.495, 19.32, 0.3304", "379.052, 391.676, 19.32, 0.356", "380.18, 391.782, 19.516, 0.4322", "381.208, 391.716, 19.0711, 0.4068", "382.173, 391.766, 19.4855, 0.356", "383.246, 391.991, 20.2056, 0.3304", "384.382, 392.049, 20.454, 0.3814", "385.48, 391.977, 20.9412, 0.4322", "386.434, 392.026, 20.1698, 0.4576", "387.374, 392.56, 20.72, 0.4322", "388.283, 393.046, 20.3428, 0.4322", "389.233, 393.642, 19.9416, 0.4322", "390.11, 394.325, 20.3162, 0.5084", "391.133, 394.725, 20.8312, 0.5592", "392.013, 395.406, 20.9084, 0.5848", "393.076, 395.777, 21.1176, 0.5084", "394.04, 395.922, 21.1081, 0.3814", "395.119, 396.152, 21.3027, 0.305", "396.237, 396.282, 20.8933, 0.305", "397.342, 396.167, 21.28, 0.3814", "398.335, 396.008, 20.3633, 0.4068", "399.405, 395.718, 20.417, 0.3814", "400.193, 395.146, 19.6, 0.3304", "401.337, 395.138, 19.6, 0.305", "402.413, 394.807, 19.6, 0.305", "403.339, 394.876, 20.6735, 0.305", "404.323, 394.333, 20.503, 0.356", "405.301, 393.761, 20.4666, 0.4068", "406.245, 393.368, 19.9531, 0.4322", "407.005, 393.193, 20.4142, 0.3814", "407.596, 393.153, 18.769, 0.3304", "408.543, 392.735, 18.4736, 0.305", "409.641, 392.951, 18.2, 0.3304", "410.785, 392.964, 18.177, 0.4068", "411.901, 393.075, 17.7422, 0.483", "412.92, 393.227, 18.2246, 0.483", "413.67, 393.351, 18.3546, 0.3814", "414.594, 393.307, 17.64, 0.3304", "415.732, 393.279, 17.5336, 0.3304", "416.839, 393.193, 17.801, 0.4322", "417.794, 393.422, 19.0028, 0.483", "418.665, 393.367, 17.7052, 0.5848", "419.747, 393.078, 17.9161, 0.5848", "420.828, 393.093, 17.6568, 0.5592", "421.728, 393.243, 18.4052, 0.4576", "422.709, 393.29, 17.4513, 0.4068", "423.561, 392.982, 17.9018, 0.3814", "424.638, 392.85, 17.92, 0.4068", "425.269, 392.664, 16.6939, 0.4576", "426.094, 392.164, 15.8841, 0.5338", "426.143, 391.407, 14.6555, 0.5848", "426.976, 390.853, 14.9456, 0.5848", "427.935, 390.454, 14.5032, 0.5338", "428.855, 390.065, 15.4031, 0.4322", "429.899, 389.99, 16.3702, 0.3814", "430.83, 390.218, 17.36, 0.3814" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "255.48, 279.454, 29.4, 0.4068", "255.062, 278.945, 29.9289, 0.5848" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "255.48, 279.454, 29.4, 0.4068", "255.209, 279.135, 29.9348, 0.5848", "254.654, 279.594, 30.8, 0.5338" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "291.095, 328.464, 24.0778, 0.5848", "290.403, 328.071, 22.5728, 0.356", "289.775, 328.012, 24.1357, 0.305", "288.813, 327.87, 24.6543, 0.2796", "288.288, 327.512, 23.602, 0.2796", "287.479, 327.184, 22.8407, 0.305", "286.726, 327.094, 21.0204, 0.305", "285.943, 326.606, 21.8238, 0.3304", "285.294, 326.475, 21.2932, 0.3814", "284.482, 326.057, 20.72, 0.4068", "283.52, 325.658, 21.28, 0.4068", "282.682, 324.943, 21.252, 0.356", "281.764, 324.484, 20.3174, 0.3304", "280.877, 323.802, 20.0189, 0.305", "279.904, 323.244, 20.0203, 0.305", "278.94, 322.837, 19.6031, 0.305", "278.07, 322.379, 18.7673, 0.2796", "276.952, 322.274, 18.48, 0.2542", "275.83, 322.15, 18.48, 0.2542", "274.903, 321.852, 18.48, 0.2796", "274.339, 321.02, 18.0141, 0.356", "273.343, 320.51, 17.64, 0.4322", "272.321, 320.034, 17.6308, 0.5338", "271.428, 319.42, 17.4751, 0.5592", "270.554, 318.776, 17.1772, 0.5592", "269.557, 318.368, 18.0026, 0.5338", "268.635, 318.114, 18.5111, 0.5084", "267.786, 318.374, 18.2311, 0.4576", "267.073, 317.803, 18.2185, 0.3814", "266.141, 317.665, 19.2688, 0.3304", "265.051, 317.574, 19.567, 0.2796", "263.929, 317.461, 19.32, 0.2796", "263.234, 317.122, 19.1408, 0.3304", "262.785, 316.216, 19.908, 0.4068", "262.434, 315.849, 18.5679, 0.4322", "261.651, 315.635, 17.5641, 0.4322", "260.864, 315.63, 17.08, 0.4576", "259.772, 315.635, 17.3732, 0.5338", "258.835, 315.182, 17.8254, 0.5592", "257.802, 314.92, 17.668, 0.5592", "256.833, 314.497, 17.9544, 0.6102", "255.891, 314.473, 16.6197, 0.6356", "254.98, 314.012, 17.0663, 0.661", "254.192, 313.57, 18.4369, 0.5848", "253.51, 312.897, 19.0089, 0.6102" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "291.095, 328.464, 24.0778, 0.5848", "290.394, 327.636, 24.0705, 0.661", "289.973, 326.575, 24.0218, 0.6864", "289.592, 325.508, 23.6622, 0.6102", "289.106, 324.474, 23.7756, 0.5084", "288.503, 323.505, 23.9355, 0.483", "287.985, 322.535, 23.1792, 0.5338", "287.433, 321.536, 22.9522, 0.5592", "286.892, 320.529, 22.9141, 0.5848", "286.212, 319.618, 22.7242, 0.5592", "285.334, 318.937, 22.0601, 0.5848", "284.548, 318.134, 21.6026, 0.5592", "284.064, 317.133, 20.9616, 0.6356", "283.675, 316.061, 20.7477, 0.6864", "283.253, 315.01, 20.9504, 0.7372", "282.751, 314.131, 21.5046, 0.6356", "282.099, 313.679, 20.1116, 0.5338", "281.141, 313.151, 19.8066, 0.483", "280.511, 312.986, 18.4475, 0.5592", "279.988, 312.434, 20.0788, 0.6102", "279.173, 311.873, 19.88, 0.6356", "278.209, 311.346, 19.4373, 0.6102", "277.233, 310.874, 19.6932, 0.6102", "276.258, 310.342, 19.3332, 0.5848", "275.451, 309.745, 19.7425, 0.5848", "274.909, 308.976, 18.7628, 0.6102", "274.761, 307.982, 18.7228, 0.661", "273.995, 307.496, 18.8647, 0.6864", "273.514, 306.79, 19.5331, 0.661", "272.74, 306.137, 19.32, 0.6356", "272.409, 305.38, 18.76, 0.5848", "271.516, 304.831, 18.6668, 0.5338", "270.834, 304.375, 18.5816, 0.483", "270.708, 303.544, 17.3958, 0.4322", "270.714, 302.454, 17.08, 0.4322", "270.556, 301.674, 18.9095, 0.4322", "270.217, 300.833, 19.88, 0.483", "270.966, 300.253, 19.3606, 0.5338", "271.01, 299.392, 18.7132, 0.661", "270.832, 298.434, 18.4951, 0.7372", "270.74, 297.407, 18.2034, 0.7372", "269.966, 296.743, 17.8536, 0.6102", "269.574, 295.766, 17.6047, 0.5084", "269.527, 294.842, 17.9556, 0.483", "268.708, 294.572, 17.1433, 0.5084", "268.162, 294.011, 16.5211, 0.5338", "267.25, 293.57, 16.3058, 0.5848", "266.287, 293.381, 16.2333, 0.5848", "265.771, 292.514, 16.1266, 0.5848", "265.272, 291.593, 16.7759, 0.483", "264.607, 290.805, 17.08, 0.4576" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "301.317, 329.866, 25.8532, 0.6356", "301.78, 329.24, 25.1208, 0.5338", "302.629, 328.605, 25.1552, 0.6102", "303.073, 327.857, 23.6205, 0.661", "303.306, 326.908, 23.9865, 0.7118", "303.692, 326.082, 23.6636, 0.6356", "304.071, 325.332, 23.5407, 0.5592", "304.507, 324.346, 23.8202, 0.4322", "304.855, 323.37, 22.9236, 0.3814", "304.321, 322.476, 22.5865, 0.4322", "304.068, 321.672, 22.3101, 0.6102", "304.533, 320.97, 21.7448, 0.7626", "304.915, 320.01, 22.6696, 0.7626", "304.966, 318.94, 22.0805, 0.6356", "305.387, 317.923, 21.56, 0.5338", "305.757, 316.848, 21.7216, 0.5848", "305.908, 315.833, 21.6532, 0.7118", "305.762, 314.84, 21.56, 0.7626", "305.704, 314.009, 20.1015, 0.6864", "305.723, 312.95, 19.8926, 0.6356", "306.324, 312.16, 19.6, 0.6864", "306.694, 311.136, 20.102, 0.788", "306.478, 310.048, 19.6238, 0.7626", "306.273, 309.175, 18.7606, 0.6864", "305.954, 308.591, 17.3617, 0.6102", "306.227, 307.728, 18.4929, 0.6356", "306.3, 307.157, 19.88, 0.6356", "306.22, 306.238, 19.4522, 0.661", "305.832, 305.472, 18.692, 0.6102", "306.054, 304.648, 17.0626, 0.5338", "305.913, 303.733, 16.1081, 0.3814", "306.328, 303.233, 17.9668, 0.2796", "306.503, 302.392, 17.1954, 0.2796", "306.685, 301.624, 15.4, 0.3814", "306.478, 300.54, 14.8081, 0.5338", "306.402, 299.542, 13.7206, 0.6356", "306.648, 298.471, 14.2313, 0.6864", "307.155, 297.498, 13.6046, 0.6864", "307.508, 296.428, 13.433, 0.661", "308.039, 295.703, 14.5746, 0.5848", "308.126, 294.73, 15.6968, 0.483", "308.317, 294.387, 18.051, 0.3814", "308.538, 293.827, 18.3327, 0.3304", "308.648, 293.04, 19.8005, 0.2796", "308.994, 292.178, 19.32, 0.2542" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "301.317, 329.866, 25.8532, 0.6356", "300.914, 329.161, 26.6, 0.2288", "300.935, 328.119, 25.6236, 0.2542", "300.986, 327.012, 25.0527, 0.2796", "300.976, 325.871, 24.92, 0.356", "300.752, 324.961, 26.04, 0.4068", "300.123, 324.221, 25.48, 0.483", "300.071, 323.166, 25.8308, 0.483", "300.024, 322.06, 25.9627, 0.5338", "300.19, 320.969, 26.1288, 0.5848", "300.49, 319.991, 25.2162, 0.6356", "300.745, 318.926, 24.6338, 0.5848", "301.181, 317.891, 24.36, 0.483", "301.387, 316.806, 24.08, 0.4576", "301.372, 315.877, 25.3949, 0.5084", "301.143, 314.78, 25.7961, 0.6102", "300.904, 313.69, 26.2492, 0.661", "300.532, 312.766, 27.1765, 0.661", "299.951, 311.958, 26.7476, 0.6356", "299.527, 311.237, 27.16, 0.5848", "298.728, 310.578, 26.3374, 0.5848", "297.971, 309.961, 26.717, 0.5338", "297.422, 309.069, 26.2268, 0.5338", "297.199, 308.204, 25.4047, 0.483", "296.596, 307.363, 25.2, 0.483", "296.465, 306.382, 25.5682, 0.4322", "296.007, 305.514, 26.04, 0.3814", "295.493, 304.669, 26.7464, 0.3304", "294.808, 303.978, 26.1408, 0.2796", "294.157, 303.483, 26.7235, 0.2542", "294.129, 302.641, 28.2878, 0.2542", "294.237, 301.574, 28.1999, 0.3304", "293.837, 301.165, 26.32, 0.4322", "293.015, 300.49, 26.6, 0.5084", "293.093, 299.396, 27.0323, 0.5338", "293.021, 298.343, 26.6, 0.5592", "292.9, 297.28, 26.9385, 0.6356", "292.789, 296.21, 27.4229, 0.661", "292.513, 295.206, 26.9578, 0.661", "291.962, 294.57, 27.72, 0.5592", "291.451, 293.708, 27.44, 0.5592", "291.247, 292.649, 27.9812, 0.5084", "291.235, 291.776, 26.7338, 0.5084", "291.908, 291.72, 25.48, 0.4322", "292.307, 291.236, 23.9173, 0.4576", "291.978, 290.194, 24.0724, 0.5084", "291.825, 289.5, 25.5035, 0.5592", "292.29, 288.753, 25.48, 0.5338", "292.349, 287.769, 26.1618, 0.483", "292.17, 286.847, 26.2441, 0.483", "292.406, 286.22, 26.5037, 0.483", "292.406, 285.509, 25.0272, 0.483", "292.521, 284.413, 24.64, 0.483", "292.893, 283.746, 25.8023, 0.5848", "293.001, 283.143, 27.8916, 0.661", "293.159, 282.105, 27.8317, 0.7118", "292.841, 281.546, 28.7456, 0.661", "292.676, 281.057, 30.2599, 0.6356", "293.044, 280.15, 31.0741, 0.5848", "293.538, 279.335, 30.5595, 0.5592", "294.025, 278.604, 31.1926, 0.5592", "294.927, 278.038, 31.309, 0.5848", "295.822, 277.496, 30.8216, 0.5848", "296.807, 277.002, 30.8904, 0.5338", "297.843, 276.727, 30.52, 0.4576", "298.482, 276.371, 31.08, 0.4322", "299.302, 275.765, 31.08, 0.4068", "299.803, 274.955, 31.0453, 0.4322", "300.036, 275.115, 29.0368, 0.3814", "300.505, 274.477, 27.8421, 0.3814", "300.758, 274.242, 29.6722, 0.3304", "300.793, 273.467, 30.5452, 0.3304", "300.643, 273.002, 28.6852, 0.2796", "301.068, 272.844, 26.9069, 0.2542", "301.317, 271.967, 26.1671, 0.2288", "301.558, 271.412, 26.6, 0.2542", "301.644, 270.283, 26.6596, 0.305", "301.673, 269.217, 27.4072, 0.3814", "301.834, 268.831, 29.7044, 0.4068", "302.661, 268.293, 30.42, 0.3814", "303.581, 267.72, 30.5497, 0.305", "304.499, 267.309, 29.8306, 0.2542", "305.572, 266.958, 29.6887, 0.2288", "306.563, 266.474, 29.4, 0.2542", "306.948, 265.798, 30.24, 0.2796", "307.64, 264.919, 30.24, 0.3304", "308.079, 264.034, 30.2403, 0.3814", "308.759, 263.22, 30.7994, 0.4576", "309.633, 262.741, 29.9695, 0.5338", "310.596, 262.319, 30.24, 0.5848" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "255.062, 278.945, 29.9289, 0.5848", "254.499, 278.086, 29.4, 0.4322", "254.204, 277.051, 29.0338, 0.4576", "253.943, 276.063, 29.1939, 0.4322", "253.583, 275.081, 29.6388, 0.356", "253.51, 274.095, 28.84, 0.2796", "253.51, 272.952, 28.84, 0.2542", "253.141, 271.887, 28.8534, 0.2796", "252.544, 270.935, 28.5692, 0.3304", "252.252, 269.929, 28.28, 0.356", "252.576, 268.951, 28.273, 0.3814", "252.599, 267.963, 28.7207, 0.356", "252.71, 266.986, 28.3861, 0.3304", "252.186, 266.155, 28.28, 0.305", "251.44, 265.382, 28.28, 0.305", "250.368, 265.065, 28.2072, 0.305", "249.259, 265.268, 28.0101, 0.3304", "248.342, 265.283, 27.2443, 0.4068", "247.699, 264.496, 27.4792, 0.4576", "247.02, 263.869, 26.9744, 0.4576", "246.27, 263.034, 27.2429, 0.356", "245.327, 262.55, 28.0, 0.3304", "244.592, 261.986, 27.1821, 0.356", "243.715, 261.728, 27.0357, 0.4576", "243.299, 260.948, 26.0495, 0.483", "243.214, 260.175, 26.4396, 0.483", "242.93, 259.319, 26.5426, 0.4322", "242.442, 258.506, 25.9938, 0.4068", "242.182, 257.472, 25.48, 0.356", "241.942, 256.381, 25.9484, 0.356", "241.568, 255.365, 26.2539, 0.356", "240.873, 254.482, 26.6224, 0.4068", "240.121, 253.699, 26.7128, 0.4322", "239.622, 252.8, 26.7966, 0.4576", "239.503, 251.741, 26.4695, 0.4322", "239.563, 250.607, 26.6647, 0.3814", "239.547, 249.464, 26.6, 0.305", "239.103, 248.469, 27.0866, 0.2542", "238.389, 247.629, 27.44, 0.2288", "237.751, 246.757, 27.44, 0.2542", "237.572, 245.636, 27.44, 0.305", "236.964, 244.813, 27.7875, 0.3814", "236.735, 243.892, 28.338, 0.4322", "236.236, 243.106, 28.716, 0.4576", "235.691, 242.387, 29.461, 0.4322", "234.805, 241.956, 28.6479, 0.4068", "233.766, 241.762, 28.56, 0.3814", "232.939, 241.123, 28.8002, 0.4068", "231.975, 240.568, 28.3027, 0.4068", "231.054, 239.897, 28.222, 0.3814", "230.088, 239.373, 28.2402, 0.305", "229.486, 238.597, 28.56, 0.2796", "229.063, 237.574, 28.56, 0.305", "228.356, 236.682, 28.56, 0.356", "227.874, 236.013, 27.5131, 0.356", "227.427, 235.124, 28.28, 0.305", "227.22, 234.057, 28.28, 0.2542", "226.97, 233.077, 28.28, 0.2542", "226.795, 232.019, 28.28, 0.305", "225.956, 231.66, 27.1432, 0.356", "226.057, 230.89, 27.3364, 0.356", "225.826, 229.847, 27.72, 0.305", "225.826, 228.703, 27.72, 0.2542", "225.826, 227.559, 27.72, 0.2542", "225.711, 226.433, 27.9947, 0.2796", "225.498, 225.548, 28.4824, 0.305", "225.699, 224.566, 28.285, 0.3304", "225.711, 223.423, 28.28, 0.3814" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "255.062, 278.945, 29.9289, 0.5848", "254.042, 278.573, 29.0458, 0.4322", "253.211, 278.326, 29.1578, 0.3814", "252.426, 277.652, 28.5659, 0.3304", "252.365, 276.859, 27.72, 0.305", "251.679, 276.119, 27.587, 0.305", "251.108, 275.238, 27.6749, 0.3304", "250.983, 274.136, 27.1768, 0.3304", "250.158, 273.53, 26.8562, 0.3304", "249.385, 273.16, 26.1033, 0.2796", "248.733, 273.413, 27.44, 0.2542", "247.605, 273.405, 27.1631, 0.2796", "246.878, 272.998, 28.56, 0.3304", "245.822, 272.822, 27.83, 0.3814", "244.778, 272.844, 26.88, 0.3814", "243.635, 272.875, 26.9052, 0.4068", "242.605, 273.143, 27.0446, 0.4576", "241.582, 273.151, 27.4898, 0.4576", "240.867, 272.572, 27.5058, 0.4068", "240.456, 272.156, 26.2601, 0.305", "239.444, 272.043, 25.76, 0.2796", "238.797, 271.929, 27.3535, 0.2796", "238.122, 271.268, 27.6744, 0.305", "237.354, 271.357, 26.3194, 0.305", "236.807, 270.969, 25.1166, 0.305", "236.703, 270.67, 27.0304, 0.305", "236.35, 269.929, 28.4668, 0.2796", "236.32, 268.824, 28.8728, 0.305", "235.683, 268.049, 28.2523, 0.356", "235.584, 267.206, 27.1216, 0.483", "236.122, 266.438, 27.16, 0.5592" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "253.51, 312.897, 19.0089, 0.6102", "252.618, 312.541, 16.998, 0.5592", "251.757, 312.414, 16.9548, 0.5592", "251.332, 312.71, 18.2, 0.483", "250.396, 312.346, 17.1422, 0.4068", "249.781, 311.634, 16.4004, 0.4068", "249.632, 310.929, 16.7597, 0.4576", "249.075, 310.71, 16.2016, 0.483", "248.301, 310.474, 15.9664, 0.5084", "247.669, 309.91, 16.7026, 0.483", "247.012, 309.589, 18.4528, 0.5084", "246.164, 309.391, 19.6, 0.483", "246.278, 308.899, 17.7568, 0.4576", "246.646, 308.512, 16.4433, 0.4068", "246.047, 308.043, 15.7161, 0.356", "245.846, 307.775, 17.827, 0.3304", "246.074, 307.05, 17.92, 0.305" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "253.51, 312.897, 19.0089, 0.6102", "253.053, 312.77, 18.2, 0.3304" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_31", "dend_20", "dend_5", "dend_0", "dend_39", "dend_32", "dend_22", "dend_21", "dend_17", "dend_6", "dend_4", "dend_1", "dend_38", "dend_33", "dend_30", "dend_23", "dend_19", "dend_18", "dend_16", "dend_7", "dend_3", "dend_2", "dend_37", "dend_34", "dend_25", "dend_24", "dend_11", "dend_8", "dend_36", "dend_35", "dend_27", "dend_26", "dend_13", "dend_12", "dend_10", "dend_9", "dend_29", "dend_28", "dend_15", "dend_14" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7457",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_20", "dend_20", "dend_20", "dend_20", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_32", "dend_32", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_26", "dend_26", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.94"
  }, {
    "group" : "axon",
    "value" : "1.94"
  }, {
    "group" : "dend",
    "value" : "1.94"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "138.98999"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "3.035703E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.052161474",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0033126476",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.019206276",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.2128893",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.4016011E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0011153668",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.04815267",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "5.8689405E-4",
    "erev" : "-88.233635"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "9.617982E-4",
    "erev" : "-88.233635"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "4.1690836E-7",
    "erev" : "-88.233635"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_473862421

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_39, id: dend_39, parent: dend_31
create dend_39
public dend_39
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_5
create dend_17
public dend_17
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_6
create dend_16
public dend_16
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_31, dend_20, dend_5, dend_0, dend_39, dend_32, dend_22, dend_21, dend_17, dend_6, dend_4, dend_1, dend_38, dend_33, dend_30, dend_23, dend_19, dend_18, dend_16, dend_7, dend_3, dend_2, dend_37, dend_34, dend_25, dend_24, dend_11, dend_8, dend_36, dend_35, dend_27, dend_26, dend_13, dend_12, dend_10, dend_9, dend_29, dend_28, dend_15, dend_14]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_7457, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_7457
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_32, dend_32, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_26, dend_26, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000000000000028)
    connect dend_31(0), soma_0(0.5000000000000028)
    connect dend_20(0), soma_0(0.5000000000000028)
    connect dend_5(0), soma_0(0.5000000000000028)
    connect dend_0(0), soma_0(0.5000000000000028)
    connect axon_1(0), axon_0(1.0)
    connect dend_39(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 306.886, 372.83, 27.44, 10.3944 ) }
    soma_0 { pt3dadd( 312.083, 372.83, 27.44, 10.3944 ) }
    soma_0 { pt3dadd( 317.28, 372.83, 27.44, 10.3944 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 312.083, 372.83, 27.44, 1.0 ) }
    axon_0 { pt3dadd( 317.924, 386.646, 27.44, 1.0 ) }
    axon_0 { pt3dadd( 323.766, 400.462, 27.44, 1.0 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 6/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 314.75, 376.774, 26.964, 0.2796 ) }
    dend_31 { pt3dadd( 315.391, 377.721, 26.8498, 0.356 ) }
    dend_31 { pt3dadd( 315.826, 378.543, 27.6531, 0.4576 ) }
    dend_31 { pt3dadd( 316.95, 378.532, 27.44, 0.4576 ) }
    dend_31 { pt3dadd( 317.512, 378.206, 29.1007, 0.4576 ) }
    dend_31 { pt3dadd( 318.654, 378.206, 29.12, 0.4576 ) }
    dend_31 { pt3dadd( 319.79, 378.309, 29.12, 0.5848 ) }
    dend_31 { pt3dadd( 320.663, 378.276, 28.1529, 0.6864 ) }
    dend_31 { pt3dadd( 321.308, 377.61, 28.7398, 0.7372 ) }
    dend_31 { pt3dadd( 322.314, 377.091, 28.9512, 0.6864 ) }
    dend_31 { pt3dadd( 323.384, 376.719, 28.9022, 0.6102 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 17/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 312.031, 368.218, 26.1411, 0.3304 ) }
    dend_20 { pt3dadd( 311.78, 367.156, 25.3375, 0.4322 ) }
    dend_20 { pt3dadd( 311.25, 366.223, 24.3908, 0.5084 ) }
    dend_20 { pt3dadd( 310.904, 365.278, 23.0723, 0.483 ) }
    dend_20 { pt3dadd( 311.218, 364.194, 22.96, 0.4322 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 22/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 309.834, 368.977, 27.3356, 0.6864 ) }
    dend_5 { pt3dadd( 309.794, 367.869, 26.7624, 0.839 ) }
    dend_5 { pt3dadd( 309.791, 366.74, 26.3228, 0.9406 ) }
    dend_5 { pt3dadd( 309.764, 365.597, 26.1934, 0.966 ) }
    dend_5 { pt3dadd( 309.585, 364.499, 25.5623, 0.966 ) }
    dend_5 { pt3dadd( 309.081, 363.48, 25.3084, 0.8898 ) }
    dend_5 { pt3dadd( 308.499, 362.512, 25.7272, 0.7626 ) }
    dend_5 { pt3dadd( 308.104, 361.464, 26.2956, 0.6864 ) }
    dend_5 { pt3dadd( 307.655, 360.413, 26.3197, 0.6864 ) }
    dend_5 { pt3dadd( 307.488, 359.281, 26.32, 0.7626 ) }
    dend_5 { pt3dadd( 307.377, 358.142, 26.32, 0.788 ) }
    dend_5 { pt3dadd( 307.075, 357.039, 26.3197, 0.7118 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 34/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 310.593, 376.791, 27.4061, 0.4322 ) }
    dend_0 { pt3dadd( 310.527, 377.864, 27.3406, 0.5592 ) }
    dend_0 { pt3dadd( 310.683, 378.964, 26.7414, 0.5848 ) }
    dend_0 { pt3dadd( 310.637, 380.037, 25.7981, 0.5084 ) }
    dend_0 { pt3dadd( 310.178, 380.982, 26.6462, 0.4322 ) }
    dend_0 { pt3dadd( 309.791, 381.945, 27.8124, 0.3814 ) }
    dend_0 { pt3dadd( 309.637, 383.056, 27.412, 0.3814 ) }
    dend_0 { pt3dadd( 308.952, 383.926, 26.7898, 0.4576 ) }
    dend_0 { pt3dadd( 308.08, 384.644, 26.3326, 0.5592 ) }
    dend_0 { pt3dadd( 307.301, 385.481, 26.2685, 0.7372 ) }
    dend_0 { pt3dadd( 306.651, 386.418, 26.0495, 0.9152 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 45/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 323.766, 400.462, 27.44, 1.0 ) }
    axon_1 { pt3dadd( 329.607, 414.278, 27.44, 1.0 ) }
    axon_1 { pt3dadd( 335.448, 428.094, 27.44, 1.0 ) }
    // Section: dend_39, id: dend_39, parent: dend_31 (entry count 48/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 323.384, 376.719, 28.9022, 0.6102 ) }
    dend_39 { pt3dadd( 324.116, 376.376, 28.849, 0.9152 ) }
    dend_39 { pt3dadd( 324.761, 376.029, 27.6923, 0.5592 ) }
    dend_39 { pt3dadd( 324.435, 375.671, 26.054, 0.4576 ) }
    dend_39 { pt3dadd( 325.01, 375.461, 24.0803, 0.3814 ) }
    dend_39 { pt3dadd( 325.492, 375.232, 25.6948, 0.4068 ) }
    dend_39 { pt3dadd( 326.081, 375.088, 27.1382, 0.4576 ) }
    dend_39 { pt3dadd( 326.531, 374.774, 25.347, 0.5084 ) }
    dend_39 { pt3dadd( 326.789, 374.583, 22.8903, 0.5084 ) }
    dend_39 { pt3dadd( 326.815, 375.122, 20.6702, 0.4576 ) }
    dend_39 { pt3dadd( 327.52, 375.346, 18.7687, 0.3814 ) }
    dend_39 { pt3dadd( 328.575, 375.232, 18.951, 0.3814 ) }
    dend_39 { pt3dadd( 329.395, 374.782, 19.9116, 0.4322 ) }
    dend_39 { pt3dadd( 329.961, 373.893, 19.88, 0.483 ) }
    dend_39 { pt3dadd( 330.841, 373.745, 18.6074, 0.4576 ) }
    dend_39 { pt3dadd( 331.646, 374.107, 18.6435, 0.4068 ) }
    dend_39 { pt3dadd( 332.375, 374.467, 18.6777, 0.4068 ) }
    dend_39 { pt3dadd( 332.568, 374.151, 19.3404, 0.483 ) }
    dend_39 { pt3dadd( 333.371, 374.091, 20.4873, 0.5592 ) }
    dend_39 { pt3dadd( 333.986, 373.41, 19.6, 0.5848 ) }
    dend_39 { pt3dadd( 334.342, 372.836, 21.0227, 0.483 ) }
    dend_39 { pt3dadd( 334.972, 372.601, 22.6467, 0.3814 ) }
    dend_39 { pt3dadd( 336.107, 372.601, 22.96, 0.356 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 71/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 323.384, 376.719, 28.9022, 0.6102 ) }
    dend_32 { pt3dadd( 324.52, 376.385, 28.6958, 0.5338 ) }
    dend_32 { pt3dadd( 325.341, 376.643, 28.6843, 0.4576 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 74/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 311.218, 364.194, 22.96, 0.4322 ) }
    dend_22 { pt3dadd( 311.251, 363.567, 23.2739, 0.6102 ) }
    dend_22 { pt3dadd( 311.628, 362.861, 25.2036, 0.483 ) }
    dend_22 { pt3dadd( 311.799, 362.435, 27.6895, 0.4068 ) }
    dend_22 { pt3dadd( 312.053, 362.05, 29.6856, 0.4068 ) }
    dend_22 { pt3dadd( 311.508, 361.182, 30.4539, 0.5084 ) }
    dend_22 { pt3dadd( 310.76, 360.377, 30.875, 0.6102 ) }
    dend_22 { pt3dadd( 310.106, 359.476, 31.3404, 0.661 ) }
    dend_22 { pt3dadd( 310.248, 358.784, 32.2291, 0.6864 ) }
    dend_22 { pt3dadd( 311.071, 358.135, 33.3287, 0.661 ) }
    dend_22 { pt3dadd( 311.301, 357.116, 34.0796, 0.5848 ) }
    dend_22 { pt3dadd( 310.885, 356.075, 34.2222, 0.5338 ) }
    dend_22 { pt3dadd( 310.453, 355.052, 34.853, 0.5084 ) }
    dend_22 { pt3dadd( 310.986, 354.13, 35.4858, 0.5592 ) }
    dend_22 { pt3dadd( 311.935, 353.586, 36.2782, 0.6102 ) }
    dend_22 { pt3dadd( 312.452, 352.583, 36.6072, 0.7118 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 90/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 311.218, 364.194, 22.96, 0.4322 ) }
    dend_21 { pt3dadd( 311.85, 363.655, 22.9597, 0.788 ) }
    dend_21 { pt3dadd( 312.77, 362.975, 22.958, 0.839 ) }
    dend_21 { pt3dadd( 313.605, 362.194, 22.9513, 0.8136 ) }
    dend_21 { pt3dadd( 314.474, 361.45, 22.9222, 0.788 ) }
    dend_21 { pt3dadd( 315.421, 360.813, 22.7665, 0.7372 ) }
    dend_21 { pt3dadd( 316.285, 360.12, 22.0604, 0.6864 ) }
    dend_21 { pt3dadd( 317.147, 359.374, 21.84, 0.6102 ) }
    dend_21 { pt3dadd( 318.015, 358.631, 21.84, 0.5338 ) }
    dend_21 { pt3dadd( 318.836, 357.836, 21.84, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_21 { pt3dadd( 319.642, 357.023, 21.84, 0.483 ) }
    dend_21 { pt3dadd( 320.433, 356.197, 21.84, 0.5084 ) }
    dend_21 { pt3dadd( 321.167, 355.322, 21.84, 0.5338 ) }
    dend_21 { pt3dadd( 321.84, 354.399, 21.8394, 0.6356 ) }
    dend_21 { pt3dadd( 322.548, 353.502, 21.8375, 0.7118 ) }
    dend_21 { pt3dadd( 323.26, 352.611, 21.8285, 0.7118 ) }
    dend_21 { pt3dadd( 324.117, 351.861, 21.7795, 0.661 ) }
    dend_21 { pt3dadd( 325.047, 351.229, 21.429, 0.5848 ) }
    dend_21 { pt3dadd( 325.817, 350.469, 20.6265, 0.5848 ) }
    dend_21 { pt3dadd( 326.508, 349.61, 19.9601, 0.5592 ) }
    dend_21 { pt3dadd( 327.329, 348.834, 19.6504, 0.5592 ) }
    dend_21 { pt3dadd( 328.142, 348.046, 19.936, 0.5338 ) }
    dend_21 { pt3dadd( 328.866, 347.197, 20.151, 0.5848 ) }
    dend_21 { pt3dadd( 329.535, 346.286, 19.7893, 0.6864 ) }
    dend_21 { pt3dadd( 330.311, 345.457, 19.5244, 0.7372 ) }
    dend_21 { pt3dadd( 331.124, 344.679, 19.0999, 0.7118 ) }
    dend_21 { pt3dadd( 331.91, 343.873, 18.6348, 0.6102 ) }
    dend_21 { pt3dadd( 332.595, 342.966, 18.5945, 0.5848 ) }
    dend_21 { pt3dadd( 333.273, 342.082, 19.14, 0.5848 ) }
    dend_21 { pt3dadd( 334.042, 341.264, 19.6092, 0.6102 ) }
    dend_21 { pt3dadd( 334.846, 340.476, 20.097, 0.6102 ) }
    dend_21 { pt3dadd( 335.69, 339.73, 20.5808, 0.5848 ) }
    dend_21 { pt3dadd( 336.619, 339.074, 20.7189, 0.5592 ) }
    dend_21 { pt3dadd( 337.57, 338.44, 20.7152, 0.5338 ) }
    dend_21 { pt3dadd( 338.479, 337.747, 20.6982, 0.5338 ) }
    dend_21 { pt3dadd( 339.391, 337.056, 20.6136, 0.5084 ) }
    dend_21 { pt3dadd( 340.415, 336.797, 19.9066, 0.4576 ) }
    dend_21 { pt3dadd( 340.888, 336.702, 20.7054, 0.4068 ) }
    dend_21 { pt3dadd( 341.736, 336.218, 20.4498, 0.356 ) }
    dend_21 { pt3dadd( 342.69, 335.814, 19.9534, 0.3814 ) }
    dend_21 { pt3dadd( 343.541, 335.65, 18.6522, 0.4576 ) }
    dend_21 { pt3dadd( 344.122, 334.884, 18.1961, 0.5848 ) }
    dend_21 { pt3dadd( 344.547, 334.019, 18.6458, 0.6356 ) }
    dend_21 { pt3dadd( 345.048, 333.046, 19.0036, 0.5592 ) }
    dend_21 { pt3dadd( 345.346, 332.127, 19.264, 0.4322 ) }
    dend_21 { pt3dadd( 345.891, 331.313, 19.6795, 0.3304 ) }
    dend_21 { pt3dadd( 346.526, 330.828, 19.49, 0.305 ) }
    dend_21 { pt3dadd( 346.786, 330.034, 19.9335, 0.356 ) }
    dend_21 { pt3dadd( 347.011, 329.201, 20.7088, 0.3814 ) }
    dend_21 { pt3dadd( 347.314, 328.577, 19.2556, 0.4576 ) }
    dend_21 { pt3dadd( 346.552, 328.328, 17.5574, 0.483 ) }
    dend_21 { pt3dadd( 346.536, 327.995, 15.68, 0.5592 ) }
    dend_21 { pt3dadd( 346.6, 327.298, 15.0192, 0.5848 ) }
    dend_21 { pt3dadd( 346.289, 326.45, 14.6462, 0.5592 ) }
    dend_21 { pt3dadd( 346.289, 326.154, 17.2052, 0.5084 ) }
    dend_21 { pt3dadd( 346.777, 325.382, 17.92, 0.4576 ) }
    dend_21 { pt3dadd( 347.204, 324.721, 18.5643, 0.4576 ) }
    dend_21 { pt3dadd( 347.263, 323.751, 18.1902, 0.483 ) }
    dend_21 { pt3dadd( 347.396, 322.858, 17.0125, 0.483 ) }
    dend_21 { pt3dadd( 347.744, 321.965, 18.2, 0.5338 ) }
    dend_21 { pt3dadd( 347.911, 320.964, 17.3768, 0.5592 ) }
    dend_21 { pt3dadd( 348.546, 320.114, 17.8315, 0.661 ) }
    dend_21 { pt3dadd( 348.806, 319.369, 18.0029, 0.7372 ) }
    dend_21 { pt3dadd( 349.278, 318.397, 17.5647, 0.788 ) }
    dend_21 { pt3dadd( 349.835, 317.719, 17.08, 0.788 ) }
    dend_21 { pt3dadd( 350.133, 316.854, 16.2173, 0.7372 ) }
    dend_21 { pt3dadd( 350.31, 315.821, 16.0096, 0.7118 ) }
    dend_21 { pt3dadd( 350.558, 314.734, 16.387, 0.661 ) }
    dend_21 { pt3dadd( 350.88, 313.782, 17.4628, 0.6102 ) }
    dend_21 { pt3dadd( 351.526, 313.064, 18.3985, 0.5592 ) }
    dend_21 { pt3dadd( 352.095, 312.226, 17.7682, 0.483 ) }
    dend_21 { pt3dadd( 353.005, 311.571, 17.92, 0.4576 ) }
    dend_21 { pt3dadd( 353.774, 310.957, 16.8146, 0.4068 ) }
    dend_21 { pt3dadd( 354.544, 310.472, 15.6842, 0.4576 ) }
    dend_21 { pt3dadd( 355.141, 310.008, 15.7872, 0.4576 ) }
    dend_21 { pt3dadd( 355.846, 309.399, 15.0598, 0.5084 ) }
    dend_21 { pt3dadd( 356.266, 308.605, 14.56, 0.5338 ) }
    dend_21 { pt3dadd( 356.934, 307.84, 15.12, 0.5848 ) }
    dend_21 { pt3dadd( 357.595, 307.053, 14.9226, 0.6356 ) }
    dend_21 { pt3dadd( 358.304, 306.427, 16.2442, 0.6356 ) }
    dend_21 { pt3dadd( 358.923, 305.824, 15.3765, 0.6102 ) }
    dend_21 { pt3dadd( 359.167, 304.828, 15.6624, 0.5592 ) }
    dend_21 { pt3dadd( 359.446, 303.846, 15.2127, 0.483 ) }
    dend_21 { pt3dadd( 359.662, 302.845, 14.082, 0.4576 ) }
    dend_21 { pt3dadd( 360.089, 302.17, 15.0889, 0.4322 ) }
    dend_21 { pt3dadd( 360.549, 301.589, 14.4393, 0.5084 ) }
    dend_21 { pt3dadd( 361.449, 301.207, 14.4878, 0.5592 ) }
    dend_21 { pt3dadd( 362.146, 300.719, 15.4, 0.5848 ) }
    dend_21 { pt3dadd( 362.759, 300.22, 17.0999, 0.5592 ) }
    dend_21 { pt3dadd( 363.118, 299.292, 16.681, 0.5084 ) }
    dend_21 { pt3dadd( 363.563, 298.433, 15.4311, 0.483 ) }
    dend_21 { pt3dadd( 363.647, 297.763, 17.2939, 0.4068 ) }
    dend_21 { pt3dadd( 363.839, 297.097, 16.7356, 0.3814 ) }
    dend_21 { pt3dadd( 364.311, 296.717, 16.2686, 0.3814 ) }
    dend_21 { pt3dadd( 364.156, 295.913, 17.3474, 0.4322 ) }
    dend_21 { pt3dadd( 364.25, 294.919, 16.1381, 0.4576 ) }
    dend_21 { pt3dadd( 364.23, 294.582, 13.8012, 0.4322 ) }
    dend_21 { pt3dadd( 363.872, 293.864, 14.3632, 0.4068 ) }
    dend_21 { pt3dadd( 364.478, 293.093, 15.4, 0.356 ) }
    // Section: dend_17, id: dend_17, parent: dend_5 (entry count 89/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 307.075, 357.039, 26.3197, 0.7118 ) }
    dend_17 { pt3dadd( 306.122, 356.577, 26.1514, 0.6356 ) }
    dend_17 { pt3dadd( 305.224, 356.245, 24.876, 0.6356 ) }
    dend_17 { pt3dadd( 304.212, 356.005, 24.7976, 0.5338 ) }
    dend_17 { pt3dadd( 303.295, 355.68, 24.3214, 0.483 ) }
    dend_17 { pt3dadd( 302.329, 355.658, 24.92, 0.3814 ) }
    dend_17 { pt3dadd( 301.207, 355.6, 25.121, 0.356 ) }
    dend_17 { pt3dadd( 300.249, 355.306, 24.0128, 0.4068 ) }
    dend_17 { pt3dadd( 299.329, 355.289, 22.96, 0.5084 ) }
    dend_17 { pt3dadd( 298.348, 354.996, 23.0737, 0.5592 ) }
    dend_17 { pt3dadd( 297.493, 354.865, 22.8934, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_17 { pt3dadd( 296.549, 354.526, 22.6873, 0.5592 ) }
    dend_17 { pt3dadd( 295.599, 354.107, 21.8565, 0.6102 ) }
    dend_17 { pt3dadd( 294.73, 353.377, 21.56, 0.661 ) }
    dend_17 { pt3dadd( 293.963, 352.598, 22.0142, 0.661 ) }
    dend_17 { pt3dadd( 293.018, 352.142, 21.5642, 0.661 ) }
    dend_17 { pt3dadd( 292.226, 351.642, 21.7003, 0.661 ) }
    dend_17 { pt3dadd( 291.36, 351.027, 21.3592, 0.661 ) }
    dend_17 { pt3dadd( 290.423, 350.525, 21.0731, 0.6356 ) }
    dend_17 { pt3dadd( 289.4, 350.147, 20.8603, 0.6356 ) }
    dend_17 { pt3dadd( 289.006, 349.333, 20.16, 0.661 ) }
    dend_17 { pt3dadd( 288.224, 348.576, 20.6489, 0.661 ) }
    dend_17 { pt3dadd( 287.549, 347.769, 20.7827, 0.5592 ) }
    dend_17 { pt3dadd( 286.643, 347.285, 19.8761, 0.483 ) }
    dend_17 { pt3dadd( 285.935, 346.615, 19.8573, 0.4322 ) }
    dend_17 { pt3dadd( 285.004, 346.206, 20.1401, 0.4576 ) }
    dend_17 { pt3dadd( 284.347, 345.866, 19.6622, 0.4068 ) }
    dend_17 { pt3dadd( 283.707, 345.411, 19.4219, 0.356 ) }
    dend_17 { pt3dadd( 283.14, 344.914, 19.4622, 0.305 ) }
    dend_17 { pt3dadd( 282.648, 344.182, 20.6951, 0.3304 ) }
    dend_17 { pt3dadd( 281.837, 343.668, 19.6288, 0.3814 ) }
    dend_17 { pt3dadd( 280.988, 343.263, 19.88, 0.4322 ) }
    dend_17 { pt3dadd( 280.051, 342.914, 19.88, 0.483 ) }
    dend_17 { pt3dadd( 279.302, 342.382, 19.4384, 0.5084 ) }
    dend_17 { pt3dadd( 278.385, 341.892, 19.8755, 0.5592 ) }
    dend_17 { pt3dadd( 277.487, 341.341, 19.3486, 0.5592 ) }
    dend_17 { pt3dadd( 276.613, 340.84, 19.32, 0.5592 ) }
    dend_17 { pt3dadd( 275.755, 340.099, 19.3869, 0.5338 ) }
    dend_17 { pt3dadd( 275.113, 339.303, 19.1041, 0.5084 ) }
    dend_17 { pt3dadd( 274.403, 338.476, 19.0551, 0.4322 ) }
    dend_17 { pt3dadd( 273.886, 337.462, 19.164, 0.3304 ) }
    dend_17 { pt3dadd( 273.132, 336.652, 19.32, 0.305 ) }
    dend_17 { pt3dadd( 272.488, 335.777, 19.32, 0.3814 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 32/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 307.075, 357.039, 26.3197, 0.7118 ) }
    dend_6 { pt3dadd( 307.05, 355.897, 26.3172, 0.6102 ) }
    dend_6 { pt3dadd( 307.051, 354.753, 26.2984, 0.5084 ) }
    dend_6 { pt3dadd( 307.055, 353.61, 26.1772, 0.4068 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 306.651, 386.418, 26.0495, 0.9152 ) }
    dend_4 { pt3dadd( 306.443, 388.061, 26.5065, 0.5084 ) }
    dend_4 { pt3dadd( 306.03, 389.111, 26.4446, 0.5084 ) }
    dend_4 { pt3dadd( 305.707, 390.188, 26.502, 0.4576 ) }
    dend_4 { pt3dadd( 305.514, 391.28, 27.1065, 0.483 ) }
    dend_4 { pt3dadd( 305.055, 392.273, 27.7141, 0.4576 ) }
    dend_4 { pt3dadd( 304.463, 393.208, 28.4032, 0.5338 ) }
    dend_4 { pt3dadd( 303.722, 393.99, 29.2457, 0.5338 ) }
    dend_4 { pt3dadd( 302.786, 394.603, 29.6803, 0.6102 ) }
    dend_4 { pt3dadd( 301.811, 395.177, 30.0818, 0.6356 ) }
    dend_4 { pt3dadd( 300.864, 395.777, 30.6298, 0.661 ) }
    dend_4 { pt3dadd( 300.052, 396.56, 30.8322, 0.6356 ) }
    dend_4 { pt3dadd( 299.537, 397.562, 30.9798, 0.5848 ) }
    dend_4 { pt3dadd( 299.058, 398.566, 31.5577, 0.5592 ) }
    dend_4 { pt3dadd( 298.471, 399.532, 31.9015, 0.483 ) }
    dend_4 { pt3dadd( 297.686, 400.35, 32.0855, 0.4576 ) }
    dend_4 { pt3dadd( 296.987, 401.195, 32.7701, 0.4576 ) }
    dend_4 { pt3dadd( 296.598, 402.241, 33.1243, 0.5592 ) }
    dend_4 { pt3dadd( 296.494, 403.348, 33.6806, 0.5848 ) }
    dend_4 { pt3dadd( 296.299, 404.457, 34.1166, 0.5338 ) }
    dend_4 { pt3dadd( 295.867, 405.507, 34.3272, 0.4068 ) }
    dend_4 { pt3dadd( 295.587, 406.486, 35.4684, 0.4068 ) }
    dend_4 { pt3dadd( 295.246, 407.517, 36.2978, 0.483 ) }
    dend_4 { pt3dadd( 294.67, 408.495, 36.4008, 0.6102 ) }
    dend_4 { pt3dadd( 294.211, 409.541, 36.4048, 0.6356 ) }
    dend_4 { pt3dadd( 293.789, 410.604, 36.4274, 0.661 ) }
    dend_4 { pt3dadd( 293.366, 411.666, 36.5674, 0.661 ) }
    dend_4 { pt3dadd( 293.04, 412.711, 37.343, 0.6864 ) }
    dend_4 { pt3dadd( 292.38, 413.477, 38.5918, 0.6864 ) }
    dend_4 { pt3dadd( 291.504, 413.662, 40.2956, 0.6864 ) }
    dend_4 { pt3dadd( 290.775, 414.202, 41.9924, 0.6356 ) }
    dend_4 { pt3dadd( 290.156, 414.953, 43.4591, 0.5848 ) }
    dend_4 { pt3dadd( 289.589, 415.82, 44.24, 0.5084 ) }
    dend_4 { pt3dadd( 288.742, 416.306, 44.24, 0.483 ) }
    dend_4 { pt3dadd( 287.836, 416.793, 44.1582, 0.4322 ) }
    dend_4 { pt3dadd( 287.217, 417.403, 44.1952, 0.3814 ) }
    dend_4 { pt3dadd( 286.704, 418.38, 44.2963, 0.3814 ) }
    dend_4 { pt3dadd( 285.789, 418.903, 44.8767, 0.4322 ) }
    dend_4 { pt3dadd( 285.104, 419.602, 45.36, 0.5084 ) }
    dend_4 { pt3dadd( 284.316, 420.219, 44.8, 0.483 ) }
    dend_4 { pt3dadd( 283.598, 420.803, 45.6084, 0.3814 ) }
    dend_4 { pt3dadd( 282.918, 421.595, 45.7148, 0.2796 ) }
    dend_4 { pt3dadd( 282.4, 422.379, 45.0178, 0.2288 ) }
    dend_4 { pt3dadd( 282.228, 423.46, 44.6365, 0.2288 ) }
    dend_4 { pt3dadd( 282.11, 424.509, 43.7388, 0.2542 ) }
    dend_4 { pt3dadd( 282.157, 425.593, 43.9438, 0.3304 ) }
    dend_4 { pt3dadd( 282.16, 426.249, 45.1063, 0.4322 ) }
    dend_4 { pt3dadd( 282.301, 427.322, 44.8, 0.5338 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 306.651, 386.418, 26.0495, 0.9152 ) }
    dend_1 { pt3dadd( 306.163, 386.849, 25.4593, 0.5084 ) }
    dend_1 { pt3dadd( 305.208, 387.452, 25.2165, 0.483 ) }
    dend_1 { pt3dadd( 304.171, 387.935, 25.1997, 0.483 ) }
    dend_1 { pt3dadd( 303.165, 388.477, 25.1983, 0.4068 ) }
    dend_1 { pt3dadd( 302.661, 389.479, 25.1899, 0.483 ) }
    dend_1 { pt3dadd( 302.053, 390.445, 25.1437, 0.5338 ) }
    dend_1 { pt3dadd( 301.149, 391.113, 24.7388, 0.6102 ) }
    dend_1 { pt3dadd( 300.291, 391.827, 24.1321, 0.5338 ) }
    dend_1 { pt3dadd( 299.32, 392.425, 24.0517, 0.5084 ) }
    dend_1 { pt3dadd( 298.283, 392.906, 23.9078, 0.5084 ) }
    dend_1 { pt3dadd( 297.186, 392.985, 23.1896, 0.6356 ) }
    dend_1 { pt3dadd( 296.059, 393.109, 22.8334, 0.6356 ) }
    dend_1 { pt3dadd( 295.002, 393.472, 22.2421, 0.6102 ) }
    dend_1 { pt3dadd( 293.937, 393.878, 22.4277, 0.483 ) }
    dend_1 { pt3dadd( 292.936, 394.385, 22.9662, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 0/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 325.341, 376.643, 28.6843, 0.4576 ) }
    dend_38 { pt3dadd( 325.517, 376.545, 29.1396, 0.4322 ) }
    dend_38 { pt3dadd( 326.567, 376.216, 29.4557, 0.5084 ) }
    dend_38 { pt3dadd( 327.54, 375.817, 29.12, 0.483 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 4/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 325.341, 376.643, 28.6843, 0.4576 ) }
    dend_33 { pt3dadd( 325.952, 376.442, 29.4493, 0.356 ) }
    dend_33 { pt3dadd( 327.016, 376.147, 29.4, 0.3304 ) }
    dend_33 { pt3dadd( 327.794, 375.727, 28.28, 0.3814 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 8/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 312.452, 352.583, 36.6072, 0.7118 ) }
    dend_30 { pt3dadd( 312.774, 352.012, 37.4774, 0.788 ) }
    dend_30 { pt3dadd( 313.463, 352.018, 39.2, 0.7118 ) }
    dend_30 { pt3dadd( 314.553, 352.123, 39.0611, 0.6102 ) }
    dend_30 { pt3dadd( 315.694, 352.123, 39.2, 0.483 ) }
    dend_30 { pt3dadd( 316.627, 352.232, 40.0697, 0.4322 ) }
    dend_30 { pt3dadd( 317.245, 351.664, 39.4985, 0.4322 ) }
    dend_30 { pt3dadd( 317.862, 351.55, 38.3634, 0.4068 ) }
    dend_30 { pt3dadd( 318.824, 351.309, 39.2, 0.3304 ) }
    dend_30 { pt3dadd( 319.954, 351.197, 39.256, 0.2542 ) }
    dend_30 { pt3dadd( 320.991, 350.827, 39.5508, 0.2542 ) }
    dend_30 { pt3dadd( 322.009, 350.478, 40.32, 0.305 ) }
    dend_30 { pt3dadd( 323.139, 350.3, 40.32, 0.356 ) }
    dend_30 { pt3dadd( 324.036, 349.95, 39.5024, 0.356 ) }
    dend_30 { pt3dadd( 325.044, 349.95, 40.32, 0.305 ) }
    dend_30 { pt3dadd( 326.054, 349.724, 39.48, 0.305 ) }
    dend_30 { pt3dadd( 326.905, 349.127, 39.1737, 0.3814 ) }
    dend_30 { pt3dadd( 327.893, 348.655, 38.4574, 0.5338 ) }
    dend_30 { pt3dadd( 328.913, 348.309, 38.2824, 0.5848 ) }
    dend_30 { pt3dadd( 329.942, 348.151, 39.0362, 0.5848 ) }
    dend_30 { pt3dadd( 330.816, 347.651, 38.8066, 0.5084 ) }
    dend_30 { pt3dadd( 331.668, 347.095, 38.7383, 0.483 ) }
    dend_30 { pt3dadd( 332.443, 346.518, 39.0572, 0.4322 ) }
    dend_30 { pt3dadd( 333.53, 346.272, 38.9567, 0.4322 ) }
    dend_30 { pt3dadd( 334.601, 345.942, 39.2, 0.483 ) }
    dend_30 { pt3dadd( 335.715, 345.75, 39.2, 0.5592 ) }
    dend_30 { pt3dadd( 336.655, 345.207, 38.92, 0.5592 ) }
    dend_30 { pt3dadd( 337.637, 344.72, 38.906, 0.483 ) }
    dend_30 { pt3dadd( 338.522, 344.108, 38.64, 0.4068 ) }
    dend_30 { pt3dadd( 339.349, 343.707, 39.4472, 0.3814 ) }
    dend_30 { pt3dadd( 340.131, 343.127, 38.703, 0.356 ) }
    dend_30 { pt3dadd( 341.137, 342.801, 38.8433, 0.305 ) }
    dend_30 { pt3dadd( 341.697, 342.034, 38.2917, 0.2542 ) }
    dend_30 { pt3dadd( 342.77, 341.827, 38.4994, 0.2542 ) }
    dend_30 { pt3dadd( 343.881, 341.827, 38.92, 0.2796 ) }
    dend_30 { pt3dadd( 345.0, 341.683, 38.64, 0.305 ) }
    dend_30 { pt3dadd( 345.977, 341.228, 39.3921, 0.2796 ) }
    dend_30 { pt3dadd( 346.921, 340.809, 39.48, 0.2542 ) }
    dend_30 { pt3dadd( 347.92, 340.351, 39.2, 0.2542 ) }
    dend_30 { pt3dadd( 348.715, 339.768, 39.17, 0.2796 ) }
    dend_30 { pt3dadd( 349.816, 339.586, 39.2465, 0.305 ) }
    dend_30 { pt3dadd( 350.494, 338.916, 40.054, 0.2796 ) }
    dend_30 { pt3dadd( 351.184, 338.05, 40.1649, 0.2796 ) }
    dend_30 { pt3dadd( 351.978, 337.237, 40.04, 0.2796 ) }
    dend_30 { pt3dadd( 352.763, 336.416, 39.7754, 0.305 ) }
    dend_30 { pt3dadd( 353.454, 335.783, 40.304, 0.2796 ) }
    dend_30 { pt3dadd( 354.006, 334.818, 40.2942, 0.2796 ) }
    dend_30 { pt3dadd( 354.602, 333.998, 39.5335, 0.2796 ) }
    dend_30 { pt3dadd( 354.869, 333.223, 40.1047, 0.305 ) }
    dend_30 { pt3dadd( 354.869, 332.115, 39.76, 0.2796 ) }
    dend_30 { pt3dadd( 354.926, 330.982, 39.76, 0.2796 ) }
    dend_30 { pt3dadd( 355.557, 330.116, 39.9524, 0.305 ) }
    dend_30 { pt3dadd( 355.687, 329.247, 41.44, 0.356 ) }
    dend_30 { pt3dadd( 356.087, 328.233, 41.0396, 0.4068 ) }
    dend_30 { pt3dadd( 356.928, 327.642, 40.6, 0.4068 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 63/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 312.452, 352.583, 36.6072, 0.7118 ) }
    dend_23 { pt3dadd( 311.79, 351.345, 38.0428, 0.5848 ) }
    dend_23 { pt3dadd( 311.218, 350.488, 39.1381, 0.6356 ) }
    dend_23 { pt3dadd( 310.831, 349.486, 40.0814, 0.788 ) }
    dend_23 { pt3dadd( 310.36, 348.529, 41.0603, 0.8644 ) }
    dend_23 { pt3dadd( 309.772, 347.634, 41.9689, 0.839 ) }
    dend_23 { pt3dadd( 309.022, 346.828, 42.6549, 0.661 ) }
    dend_23 { pt3dadd( 308.201, 346.07, 43.1046, 0.5338 ) }
    dend_23 { pt3dadd( 307.388, 345.265, 43.169, 0.4576 ) }
    dend_23 { pt3dadd( 306.563, 344.479, 43.379, 0.4576 ) }
    dend_23 { pt3dadd( 305.64, 344.001, 44.0409, 0.483 ) }
    dend_23 { pt3dadd( 304.947, 343.292, 44.3948, 0.5084 ) }
    dend_23 { pt3dadd( 304.532, 342.411, 44.1983, 0.5338 ) }
    dend_23 { pt3dadd( 304.283, 341.505, 44.1126, 0.5084 ) }
    dend_23 { pt3dadd( 303.639, 340.595, 43.68, 0.483 ) }
    dend_23 { pt3dadd( 302.809, 339.839, 43.68, 0.483 ) }
    dend_23 { pt3dadd( 301.986, 339.259, 43.0254, 0.483 ) }
    dend_23 { pt3dadd( 301.246, 338.426, 43.001, 0.4322 ) }
    dend_23 { pt3dadd( 300.555, 337.664, 43.4, 0.3814 ) }
    dend_23 { pt3dadd( 299.746, 336.9, 43.3958, 0.3814 ) }
    dend_23 { pt3dadd( 298.828, 336.243, 43.1981, 0.4576 ) }
    dend_23 { pt3dadd( 297.979, 335.54, 43.68, 0.483 ) }
    dend_23 { pt3dadd( 297.363, 334.615, 43.96, 0.483 ) }
    dend_23 { pt3dadd( 296.392, 334.264, 44.4906, 0.483 ) }
    dend_23 { pt3dadd( 295.581, 333.573, 44.3167, 0.5592 ) }
    dend_23 { pt3dadd( 295.022, 333.018, 43.12, 0.661 ) }
    dend_23 { pt3dadd( 294.265, 332.35, 43.4904, 0.7118 ) }
    dend_23 { pt3dadd( 293.66, 331.587, 43.5422, 0.6864 ) }
    dend_23 { pt3dadd( 292.999, 330.936, 43.68, 0.6102 ) }
    dend_23 { pt3dadd( 292.262, 330.095, 43.96, 0.5338 ) }
    dend_23 { pt3dadd( 291.621, 329.2, 43.4826, 0.4322 ) }
    dend_23 { pt3dadd( 290.825, 328.413, 43.12, 0.356 ) }
    dend_23 { pt3dadd( 290.125, 327.524, 43.12, 0.356 ) }
    dend_23 { pt3dadd( 289.544, 326.711, 42.9195, 0.4068 ) }
    dend_23 { pt3dadd( 288.974, 326.129, 43.0903, 0.483 ) }
    dend_23 { pt3dadd( 288.439, 325.206, 43.1589, 0.483 ) }
    dend_23 { pt3dadd( 288.437, 324.162, 42.8431, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_23 { pt3dadd( 288.139, 323.179, 42.7966, 0.5084 ) }
    dend_23 { pt3dadd( 287.556, 322.254, 42.56, 0.5084 ) }
    dend_23 { pt3dadd( 286.977, 321.295, 42.2531, 0.4322 ) }
    dend_23 { pt3dadd( 286.423, 320.458, 41.5663, 0.4322 ) }
    dend_23 { pt3dadd( 285.339, 320.17, 41.44, 0.4068 ) }
    dend_23 { pt3dadd( 284.68, 319.368, 41.1695, 0.3814 ) }
    dend_23 { pt3dadd( 283.956, 318.593, 40.8853, 0.356 ) }
    dend_23 { pt3dadd( 283.29, 317.988, 39.7424, 0.4068 ) }
    dend_23 { pt3dadd( 282.225, 317.612, 39.3862, 0.5338 ) }
    dend_23 { pt3dadd( 281.771, 316.862, 39.8717, 0.6102 ) }
    dend_23 { pt3dadd( 281.535, 315.859, 39.4708, 0.661 ) }
    dend_23 { pt3dadd( 280.917, 315.749, 38.099, 0.661 ) }
    dend_23 { pt3dadd( 280.306, 314.998, 38.456, 0.661 ) }
    dend_23 { pt3dadd( 279.464, 314.528, 38.0993, 0.5592 ) }
    dend_23 { pt3dadd( 278.852, 313.718, 39.058, 0.4322 ) }
    dend_23 { pt3dadd( 278.25, 312.898, 38.6389, 0.356 ) }
    dend_23 { pt3dadd( 277.566, 312.259, 37.4657, 0.4068 ) }
    dend_23 { pt3dadd( 276.994, 311.406, 37.1272, 0.4576 ) }
    dend_23 { pt3dadd( 276.386, 310.896, 38.5666, 0.5338 ) }
    dend_23 { pt3dadd( 275.682, 310.703, 37.5376, 0.5084 ) }
    dend_23 { pt3dadd( 274.609, 310.507, 36.96, 0.5338 ) }
    dend_23 { pt3dadd( 273.551, 310.26, 36.5106, 0.4322 ) }
    dend_23 { pt3dadd( 272.949, 309.582, 35.8218, 0.3814 ) }
    dend_23 { pt3dadd( 271.968, 309.161, 35.84, 0.305 ) }
    dend_23 { pt3dadd( 271.143, 308.524, 36.4, 0.3304 ) }
    dend_23 { pt3dadd( 270.337, 307.821, 36.7111, 0.3814 ) }
    dend_23 { pt3dadd( 269.461, 307.131, 36.7223, 0.4576 ) }
    dend_23 { pt3dadd( 268.779, 306.257, 36.7875, 0.5338 ) }
    dend_23 { pt3dadd( 268.055, 305.422, 36.5316, 0.6356 ) }
    dend_23 { pt3dadd( 267.601, 304.581, 36.0287, 0.6864 ) }
    dend_23 { pt3dadd( 267.241, 303.846, 35.3214, 0.7372 ) }
    dend_23 { pt3dadd( 266.958, 303.176, 35.2694, 0.6864 ) }
    dend_23 { pt3dadd( 266.751, 302.422, 35.5496, 0.6864 ) }
    dend_23 { pt3dadd( 266.134, 301.688, 35.5541, 0.661 ) }
    dend_23 { pt3dadd( 265.675, 300.872, 34.5332, 0.661 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 35/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 272.488, 335.777, 19.32, 0.3814 ) }
    dend_19 { pt3dadd( 272.59, 335.171, 19.5513, 0.4068 ) }
    dend_19 { pt3dadd( 272.384, 334.073, 19.9839, 0.483 ) }
    dend_19 { pt3dadd( 271.937, 333.198, 19.6078, 0.5338 ) }
    dend_19 { pt3dadd( 271.239, 332.482, 19.9755, 0.5338 ) }
    dend_19 { pt3dadd( 270.342, 331.814, 20.3748, 0.4322 ) }
    dend_19 { pt3dadd( 269.708, 330.899, 19.8016, 0.356 ) }
    dend_19 { pt3dadd( 269.318, 329.938, 19.3113, 0.2796 ) }
    dend_19 { pt3dadd( 268.874, 328.915, 19.32, 0.2542 ) }
    dend_19 { pt3dadd( 268.117, 328.084, 19.1159, 0.2542 ) }
    dend_19 { pt3dadd( 267.207, 327.548, 19.3166, 0.2796 ) }
    dend_19 { pt3dadd( 266.184, 327.097, 19.04, 0.305 ) }
    dend_19 { pt3dadd( 265.093, 326.879, 19.3945, 0.2796 ) }
    dend_19 { pt3dadd( 264.223, 326.507, 20.72, 0.2542 ) }
    dend_19 { pt3dadd( 263.348, 326.389, 19.3189, 0.2288 ) }
    dend_19 { pt3dadd( 262.399, 325.934, 18.48, 0.2288 ) }
    dend_19 { pt3dadd( 261.267, 325.811, 18.48, 0.2542 ) }
    dend_19 { pt3dadd( 260.127, 325.784, 18.48, 0.2796 ) }
    dend_19 { pt3dadd( 259.368, 325.168, 18.3674, 0.305 ) }
    dend_19 { pt3dadd( 258.715, 324.419, 17.7086, 0.2796 ) }
    dend_19 { pt3dadd( 257.855, 323.705, 17.92, 0.2542 ) }
    dend_19 { pt3dadd( 257.021, 322.995, 17.92, 0.2288 ) }
    dend_19 { pt3dadd( 256.315, 322.171, 17.92, 0.2288 ) }
    dend_19 { pt3dadd( 255.714, 321.274, 17.897, 0.2796 ) }
    dend_19 { pt3dadd( 255.311, 320.899, 16.849, 0.3814 ) }
    dend_19 { pt3dadd( 254.645, 320.009, 16.8566, 0.5338 ) }
    dend_19 { pt3dadd( 253.735, 319.334, 16.8582, 0.6356 ) }
    dend_19 { pt3dadd( 253.07, 318.582, 16.9044, 0.6864 ) }
    dend_19 { pt3dadd( 252.379, 317.708, 16.8224, 0.6864 ) }
    dend_19 { pt3dadd( 251.455, 317.428, 16.4956, 0.7118 ) }
    dend_19 { pt3dadd( 250.495, 317.017, 16.6286, 0.788 ) }
    dend_19 { pt3dadd( 249.739, 316.201, 16.52, 0.839 ) }
    dend_19 { pt3dadd( 249.013, 315.349, 16.2977, 0.839 ) }
    dend_19 { pt3dadd( 248.129, 314.656, 16.6116, 0.7372 ) }
    dend_19 { pt3dadd( 247.465, 314.106, 16.4615, 0.6864 ) }
    dend_19 { pt3dadd( 246.618, 313.518, 16.3047, 0.6356 ) }
    dend_19 { pt3dadd( 245.585, 313.109, 16.87, 0.6356 ) }
    dend_19 { pt3dadd( 244.712, 312.458, 17.4672, 0.6102 ) }
    dend_19 { pt3dadd( 243.778, 311.837, 17.4846, 0.661 ) }
    dend_19 { pt3dadd( 242.966, 311.116, 17.1632, 0.6864 ) }
    dend_19 { pt3dadd( 242.477, 310.47, 16.6365, 0.6864 ) }
    dend_19 { pt3dadd( 241.687, 309.907, 16.3302, 0.5848 ) }
    dend_19 { pt3dadd( 241.411, 309.452, 18.1269, 0.483 ) }
    dend_19 { pt3dadd( 241.421, 309.47, 16.52, 0.3814 ) }
    dend_19 { pt3dadd( 241.077, 308.465, 16.5217, 0.3304 ) }
    dend_19 { pt3dadd( 241.407, 307.633, 14.966, 0.356 ) }
    dend_19 { pt3dadd( 241.151, 306.784, 14.9271, 0.4322 ) }
    dend_19 { pt3dadd( 240.575, 306.614, 16.8932, 0.483 ) }
    dend_19 { pt3dadd( 240.195, 305.696, 16.6281, 0.4576 ) }
    dend_19 { pt3dadd( 240.262, 305.034, 18.0849, 0.3814 ) }
    dend_19 { pt3dadd( 240.637, 304.417, 17.92, 0.3814 ) }
    dend_19 { pt3dadd( 240.63, 303.92, 17.0405, 0.4068 ) }
    dend_19 { pt3dadd( 240.374, 303.083, 15.96, 0.5338 ) }
    dend_19 { pt3dadd( 239.98, 302.401, 15.3524, 0.6102 ) }
    dend_19 { pt3dadd( 239.359, 301.579, 15.1256, 0.661 ) }
    dend_19 { pt3dadd( 238.747, 300.998, 16.1073, 0.6102 ) }
    dend_19 { pt3dadd( 238.02, 300.408, 15.8668, 0.5338 ) }
    dend_19 { pt3dadd( 237.917, 300.014, 14.0358, 0.5084 ) }
    dend_19 { pt3dadd( 237.274, 299.32, 14.2419, 0.4576 ) }
    dend_19 { pt3dadd( 236.694, 299.156, 12.88, 0.4068 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 95/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 272.488, 335.777, 19.32, 0.3814 ) }
    dend_18 { pt3dadd( 272.264, 335.242, 19.32, 0.4068 ) }
    dend_18 { pt3dadd( 271.586, 334.506, 19.32, 0.483 ) }
    // Section: dend_16, id: dend_16, parent: dend_6 (entry count 98/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 307.055, 353.61, 26.1772, 0.4068 ) }
    dend_16 { pt3dadd( 307.517, 353.2, 23.016, 0.5848 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_16 { pt3dadd( 307.108, 353.419, 20.7553, 0.5592 ) }
    dend_16 { pt3dadd( 306.173, 353.776, 19.4611, 0.483 ) }
    dend_16 { pt3dadd( 305.3, 353.918, 17.8702, 0.3814 ) }
    dend_16 { pt3dadd( 304.256, 353.704, 16.879, 0.3304 ) }
    dend_16 { pt3dadd( 303.168, 353.664, 16.0686, 0.305 ) }
    dend_16 { pt3dadd( 302.286, 354.082, 15.9202, 0.305 ) }
    dend_16 { pt3dadd( 302.137, 355.084, 16.8627, 0.3304 ) }
    dend_16 { pt3dadd( 302.51, 356.111, 16.9459, 0.3814 ) }
    dend_16 { pt3dadd( 302.614, 357.105, 15.9138, 0.4322 ) }
    dend_16 { pt3dadd( 301.968, 357.898, 15.2757, 0.4322 ) }
    dend_16 { pt3dadd( 300.931, 358.265, 15.6022, 0.4068 ) }
    dend_16 { pt3dadd( 300.454, 359.0, 16.791, 0.356 ) }
    dend_16 { pt3dadd( 301.093, 359.587, 15.6106, 0.356 ) }
    dend_16 { pt3dadd( 302.016, 359.559, 14.0, 0.3814 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 14/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 307.055, 353.61, 26.1772, 0.4068 ) }
    dend_7 { pt3dadd( 307.083, 352.611, 25.5343, 0.6864 ) }
    dend_7 { pt3dadd( 307.283, 351.5, 25.1034, 0.7118 ) }
    dend_7 { pt3dadd( 307.481, 350.403, 24.4773, 0.7118 ) }
    dend_7 { pt3dadd( 307.4, 349.273, 24.096, 0.661 ) }
    dend_7 { pt3dadd( 307.003, 348.204, 24.0856, 0.6864 ) }
    dend_7 { pt3dadd( 306.54, 347.157, 24.1139, 0.7118 ) }
    dend_7 { pt3dadd( 306.027, 346.137, 24.2662, 0.7626 ) }
    dend_7 { pt3dadd( 305.424, 345.201, 24.9024, 0.7372 ) }
    dend_7 { pt3dadd( 304.779, 344.264, 25.1969, 0.7118 ) }
    dend_7 { pt3dadd( 304.151, 343.307, 25.2, 0.6864 ) }
    dend_7 { pt3dadd( 303.568, 342.323, 25.2, 0.6864 ) }
    dend_7 { pt3dadd( 303.039, 341.309, 25.1994, 0.6864 ) }
    dend_7 { pt3dadd( 302.475, 340.314, 25.1966, 0.661 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 28/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 292.936, 394.385, 22.9662, 0.4322 ) }
    dend_3 { pt3dadd( 292.646, 393.841, 22.9662, 0.5848 ) }
    dend_3 { pt3dadd( 292.075, 392.854, 22.9704, 0.5848 ) }
    dend_3 { pt3dadd( 291.288, 392.041, 23.0171, 0.5848 ) }
    dend_3 { pt3dadd( 290.253, 391.608, 23.2767, 0.5338 ) }
    dend_3 { pt3dadd( 289.152, 391.496, 23.949, 0.5338 ) }
    dend_3 { pt3dadd( 288.049, 391.258, 24.3723, 0.4576 ) }
    dend_3 { pt3dadd( 286.946, 391.122, 25.0146, 0.4576 ) }
    dend_3 { pt3dadd( 285.823, 391.058, 25.4668, 0.4068 ) }
    dend_3 { pt3dadd( 284.749, 390.784, 26.0232, 0.3814 ) }
    dend_3 { pt3dadd( 283.719, 390.326, 26.1685, 0.3814 ) }
    dend_3 { pt3dadd( 282.59, 390.178, 26.0893, 0.4322 ) }
    dend_3 { pt3dadd( 281.481, 389.985, 26.3085, 0.5084 ) }
    dend_3 { pt3dadd( 280.432, 389.53, 26.2489, 0.5084 ) }
    dend_3 { pt3dadd( 279.379, 389.238, 25.7748, 0.483 ) }
    dend_3 { pt3dadd( 278.385, 388.992, 25.1258, 0.483 ) }
    dend_3 { pt3dadd( 277.515, 388.394, 25.8048, 0.4576 ) }
    dend_3 { pt3dadd( 276.569, 388.096, 26.8097, 0.4576 ) }
    dend_3 { pt3dadd( 275.658, 387.621, 26.88, 0.4576 ) }
    dend_3 { pt3dadd( 274.775, 387.816, 26.1974, 0.5338 ) }
    dend_3 { pt3dadd( 273.782, 387.666, 25.9529, 0.5592 ) }
    dend_3 { pt3dadd( 272.771, 387.436, 26.04, 0.5592 ) }
    dend_3 { pt3dadd( 272.097, 387.096, 27.4336, 0.5084 ) }
    dend_3 { pt3dadd( 271.7, 386.75, 25.6819, 0.5084 ) }
    dend_3 { pt3dadd( 270.698, 386.466, 25.48, 0.5084 ) }
    dend_3 { pt3dadd( 269.706, 386.319, 26.3113, 0.5338 ) }
    dend_3 { pt3dadd( 269.115, 385.968, 25.0883, 0.5338 ) }
    dend_3 { pt3dadd( 268.395, 385.247, 24.8786, 0.483 ) }
    dend_3 { pt3dadd( 267.688, 384.641, 25.4072, 0.4576 ) }
    dend_3 { pt3dadd( 266.987, 384.278, 23.8, 0.4322 ) }
    dend_3 { pt3dadd( 266.128, 383.616, 23.9599, 0.5084 ) }
    dend_3 { pt3dadd( 265.295, 382.907, 24.575, 0.5848 ) }
    dend_3 { pt3dadd( 264.448, 382.595, 23.8286, 0.661 ) }
    dend_3 { pt3dadd( 263.636, 382.033, 23.5626, 0.661 ) }
    dend_3 { pt3dadd( 263.031, 381.147, 24.0075, 0.6102 ) }
    dend_3 { pt3dadd( 262.293, 380.373, 23.2772, 0.5084 ) }
    dend_3 { pt3dadd( 261.518, 379.562, 23.56, 0.4322 ) }
    dend_3 { pt3dadd( 260.734, 378.993, 24.5227, 0.4068 ) }
    dend_3 { pt3dadd( 259.893, 378.466, 23.4346, 0.4576 ) }
    dend_3 { pt3dadd( 259.196, 377.792, 22.68, 0.483 ) }
    dend_3 { pt3dadd( 258.453, 377.225, 22.9205, 0.483 ) }
    dend_3 { pt3dadd( 257.425, 377.054, 23.24, 0.4322 ) }
    dend_3 { pt3dadd( 256.639, 376.454, 22.6789, 0.4068 ) }
    dend_3 { pt3dadd( 255.819, 375.779, 22.3219, 0.356 ) }
    dend_3 { pt3dadd( 255.212, 375.343, 22.094, 0.3814 ) }
    dend_3 { pt3dadd( 254.181, 375.304, 21.887, 0.4576 ) }
    dend_3 { pt3dadd( 253.081, 375.4, 21.9601, 0.5592 ) }
    dend_3 { pt3dadd( 251.971, 375.505, 22.1746, 0.5592 ) }
    dend_3 { pt3dadd( 250.92, 375.854, 22.6898, 0.4576 ) }
    dend_3 { pt3dadd( 250.132, 375.933, 21.784, 0.356 ) }
    dend_3 { pt3dadd( 249.227, 375.575, 21.1434, 0.3814 ) }
    dend_3 { pt3dadd( 249.005, 375.575, 18.7698, 0.4576 ) }
    dend_3 { pt3dadd( 248.311, 376.058, 18.4478, 0.5084 ) }
    dend_3 { pt3dadd( 247.453, 375.846, 19.32, 0.4322 ) }
    dend_3 { pt3dadd( 246.407, 375.436, 19.32, 0.4068 ) }
    dend_3 { pt3dadd( 245.397, 375.022, 19.5734, 0.4576 ) }
    dend_3 { pt3dadd( 244.909, 375.358, 19.7109, 0.5592 ) }
    dend_3 { pt3dadd( 243.969, 375.274, 18.8563, 0.6102 ) }
    dend_3 { pt3dadd( 242.912, 374.983, 18.613, 0.6102 ) }
    dend_3 { pt3dadd( 242.173, 374.826, 20.1127, 0.6102 ) }
    dend_3 { pt3dadd( 241.37, 374.165, 19.4435, 0.5848 ) }
    dend_3 { pt3dadd( 240.261, 374.088, 19.2363, 0.5592 ) }
    dend_3 { pt3dadd( 239.244, 373.817, 19.8934, 0.5338 ) }
    dend_3 { pt3dadd( 238.638, 373.508, 19.1668, 0.5084 ) }
    dend_3 { pt3dadd( 237.904, 372.907, 19.3164, 0.483 ) }
    dend_3 { pt3dadd( 237.275, 372.092, 19.1453, 0.4322 ) }
    dend_3 { pt3dadd( 236.816, 371.345, 18.1594, 0.4068 ) }
    dend_3 { pt3dadd( 235.859, 370.835, 17.4675, 0.3304 ) }
    dend_3 { pt3dadd( 234.83, 370.476, 16.611, 0.2796 ) }
    dend_3 { pt3dadd( 233.802, 370.118, 15.7545, 0.2288 ) }
    dend_3 { pt3dadd( 232.985, 369.454, 15.4, 0.2288 ) }
    dend_3 { pt3dadd( 232.69, 368.475, 15.4, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_3 { pt3dadd( 232.69, 367.332, 15.4, 0.2288 ) }
    dend_3 { pt3dadd( 232.616, 366.191, 15.4, 0.2288 ) }
    dend_3 { pt3dadd( 232.368, 365.18, 15.4, 0.2542 ) }
    dend_3 { pt3dadd( 231.266, 364.878, 15.4, 0.2796 ) }
    dend_3 { pt3dadd( 230.859, 363.906, 15.4, 0.356 ) }
    dend_3 { pt3dadd( 230.859, 362.762, 15.4, 0.3814 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 6/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 292.936, 394.385, 22.9662, 0.4322 ) }
    dend_2 { pt3dadd( 292.49, 394.999, 22.9832, 0.4322 ) }
    dend_2 { pt3dadd( 291.901, 395.976, 23.1025, 0.4068 ) }
    dend_2 { pt3dadd( 291.25, 396.871, 23.7213, 0.4576 ) }
    dend_2 { pt3dadd( 290.563, 397.769, 24.0411, 0.483 ) }
    dend_2 { pt3dadd( 289.805, 398.623, 24.0806, 0.5338 ) }
    dend_2 { pt3dadd( 288.907, 399.323, 24.0828, 0.5592 ) }
    dend_2 { pt3dadd( 288.05, 400.078, 24.0904, 0.5592 ) }
    dend_2 { pt3dadd( 287.236, 400.882, 24.1237, 0.6102 ) }
    dend_2 { pt3dadd( 286.429, 401.69, 24.2673, 0.5848 ) }
    dend_2 { pt3dadd( 285.655, 402.486, 24.8928, 0.5848 ) }
    dend_2 { pt3dadd( 284.902, 403.332, 25.1149, 0.483 ) }
    dend_2 { pt3dadd( 284.255, 404.256, 24.7358, 0.483 ) }
    dend_2 { pt3dadd( 283.543, 405.128, 24.2746, 0.5338 ) }
    dend_2 { pt3dadd( 282.642, 405.78, 24.6834, 0.661 ) }
    dend_2 { pt3dadd( 281.898, 406.574, 25.4755, 0.6864 ) }
    dend_2 { pt3dadd( 281.219, 407.484, 25.5206, 0.661 ) }
    dend_2 { pt3dadd( 280.371, 408.239, 25.2538, 0.6102 ) }
    dend_2 { pt3dadd( 279.543, 409.026, 25.2843, 0.6356 ) }
    dend_2 { pt3dadd( 278.724, 409.808, 25.6662, 0.6356 ) }
    dend_2 { pt3dadd( 277.82, 410.464, 26.264, 0.6102 ) }
    dend_2 { pt3dadd( 276.914, 411.158, 26.3071, 0.5592 ) }
    dend_2 { pt3dadd( 275.99, 411.832, 26.2576, 0.5338 ) }
    dend_2 { pt3dadd( 275.086, 412.523, 25.9955, 0.5592 ) }
    dend_2 { pt3dadd( 274.32, 413.322, 25.3011, 0.6102 ) }
    dend_2 { pt3dadd( 273.704, 414.281, 25.2031, 0.6864 ) }
    dend_2 { pt3dadd( 273.235, 415.323, 25.2, 0.7626 ) }
    dend_2 { pt3dadd( 272.631, 416.295, 25.2, 0.7626 ) }
    dend_2 { pt3dadd( 272.064, 417.288, 25.2, 0.7372 ) }
    dend_2 { pt3dadd( 271.364, 418.191, 25.1997, 0.6356 ) }
    dend_2 { pt3dadd( 270.706, 419.128, 25.1983, 0.6102 ) }
    dend_2 { pt3dadd( 270.042, 420.06, 25.1919, 0.6102 ) }
    dend_2 { pt3dadd( 269.373, 420.987, 25.1605, 0.7118 ) }
    dend_2 { pt3dadd( 268.586, 421.816, 25.0281, 0.7626 ) }
    dend_2 { pt3dadd( 267.8, 422.594, 24.3247, 0.7626 ) }
    dend_2 { pt3dadd( 266.978, 423.381, 24.0618, 0.6864 ) }
    dend_2 { pt3dadd( 266.076, 424.084, 23.9635, 0.6102 ) }
    dend_2 { pt3dadd( 265.161, 424.707, 23.259, 0.5084 ) }
    dend_2 { pt3dadd( 264.209, 425.312, 22.7979, 0.4322 ) }
    dend_2 { pt3dadd( 263.39, 426.063, 22.9298, 0.4068 ) }
    dend_2 { pt3dadd( 262.448, 426.383, 24.1791, 0.483 ) }
    dend_2 { pt3dadd( 261.425, 426.879, 24.4507, 0.5084 ) }
    dend_2 { pt3dadd( 260.395, 427.357, 24.6235, 0.5084 ) }
    dend_2 { pt3dadd( 259.341, 427.749, 24.5118, 0.4576 ) }
    dend_2 { pt3dadd( 258.292, 428.026, 24.6938, 0.5084 ) }
    dend_2 { pt3dadd( 257.392, 428.543, 23.7191, 0.5848 ) }
    dend_2 { pt3dadd( 256.694, 428.955, 24.3012, 0.661 ) }
    dend_2 { pt3dadd( 255.936, 429.728, 24.64, 0.661 ) }
    dend_2 { pt3dadd( 255.009, 430.258, 24.6344, 0.6356 ) }
    dend_2 { pt3dadd( 254.183, 430.663, 23.6824, 0.6102 ) }
    dend_2 { pt3dadd( 253.439, 431.385, 23.7252, 0.6102 ) }
    dend_2 { pt3dadd( 252.528, 431.884, 24.5468, 0.5592 ) }
    dend_2 { pt3dadd( 251.774, 432.359, 23.6477, 0.483 ) }
    dend_2 { pt3dadd( 250.688, 432.556, 23.6606, 0.4322 ) }
    dend_2 { pt3dadd( 249.843, 432.919, 24.5949, 0.483 ) }
    dend_2 { pt3dadd( 249.279, 433.802, 24.9186, 0.5848 ) }
    dend_2 { pt3dadd( 248.729, 434.396, 23.8501, 0.6356 ) }
    dend_2 { pt3dadd( 248.148, 435.354, 23.8171, 0.5848 ) }
    dend_2 { pt3dadd( 247.668, 436.112, 22.9415, 0.483 ) }
    dend_2 { pt3dadd( 247.026, 436.971, 22.675, 0.3814 ) }
    dend_2 { pt3dadd( 246.252, 437.459, 24.2332, 0.356 ) }
    dend_2 { pt3dadd( 245.556, 438.047, 24.8853, 0.356 ) }
    dend_2 { pt3dadd( 245.134, 438.883, 24.1363, 0.4068 ) }
    dend_2 { pt3dadd( 244.474, 439.607, 24.2189, 0.4068 ) }
    dend_2 { pt3dadd( 243.786, 440.402, 23.6132, 0.4068 ) }
    dend_2 { pt3dadd( 243.71, 441.246, 22.68, 0.4068 ) }
    dend_2 { pt3dadd( 243.128, 441.8, 24.0089, 0.4322 ) }
    dend_2 { pt3dadd( 242.948, 442.841, 23.6141, 0.4322 ) }
    dend_2 { pt3dadd( 242.614, 443.812, 23.9828, 0.356 ) }
    dend_2 { pt3dadd( 242.13, 444.637, 23.2663, 0.2796 ) }
    dend_2 { pt3dadd( 241.292, 445.364, 23.4889, 0.2542 ) }
    dend_2 { pt3dadd( 240.425, 445.474, 22.202, 0.2796 ) }
    dend_2 { pt3dadd( 239.782, 446.043, 21.0, 0.305 ) }
    dend_2 { pt3dadd( 239.434, 446.732, 21.884, 0.305 ) }
    dend_2 { pt3dadd( 238.818, 447.448, 22.6209, 0.305 ) }
    dend_2 { pt3dadd( 237.722, 447.651, 22.398, 0.305 ) }
    dend_2 { pt3dadd( 236.998, 448.437, 21.6418, 0.2796 ) }
    dend_2 { pt3dadd( 236.306, 449.331, 21.5261, 0.2796 ) }
    dend_2 { pt3dadd( 235.683, 450.07, 21.7196, 0.2796 ) }
    dend_2 { pt3dadd( 234.891, 450.838, 21.84, 0.3304 ) }
    dend_2 { pt3dadd( 234.27, 451.394, 21.8378, 0.3304 ) }
    dend_2 { pt3dadd( 233.606, 452.29, 21.56, 0.3304 ) }
    dend_2 { pt3dadd( 232.743, 452.823, 21.56, 0.305 ) }
    dend_2 { pt3dadd( 231.835, 453.475, 21.8126, 0.356 ) }
    dend_2 { pt3dadd( 230.93, 454.075, 22.1673, 0.4322 ) }
    dend_2 { pt3dadd( 229.97, 454.603, 21.7403, 0.5084 ) }
    dend_2 { pt3dadd( 228.972, 454.854, 21.7193, 0.483 ) }
    dend_2 { pt3dadd( 227.952, 454.523, 22.12, 0.4068 ) }
    dend_2 { pt3dadd( 227.04, 454.737, 22.96, 0.305 ) }
    dend_2 { pt3dadd( 226.359, 455.457, 22.96, 0.2542 ) }
    dend_2 { pt3dadd( 225.564, 456.185, 22.96, 0.2288 ) }
    dend_2 { pt3dadd( 224.695, 456.925, 22.96, 0.2542 ) }
    dend_2 { pt3dadd( 223.901, 457.597, 23.2285, 0.2796 ) }
    dend_2 { pt3dadd( 223.54, 458.673, 23.24, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_2 { pt3dadd( 222.879, 459.456, 22.965, 0.305 ) }
    dend_2 { pt3dadd( 221.84, 459.774, 23.5074, 0.3304 ) }
    dend_2 { pt3dadd( 220.945, 460.288, 23.6846, 0.356 ) }
    dend_2 { pt3dadd( 220.391, 461.246, 24.0321, 0.356 ) }
    dend_2 { pt3dadd( 219.762, 461.725, 25.1622, 0.305 ) }
    dend_2 { pt3dadd( 219.762, 462.852, 25.4906, 0.2542 ) }
    dend_2 { pt3dadd( 219.601, 463.94, 26.1092, 0.2288 ) }
    dend_2 { pt3dadd( 218.963, 464.798, 26.5496, 0.2288 ) }
    dend_2 { pt3dadd( 218.401, 465.654, 27.594, 0.2288 ) }
    dend_2 { pt3dadd( 217.71, 466.313, 28.0, 0.2288 ) }
    dend_2 { pt3dadd( 217.138, 467.279, 28.1078, 0.305 ) }
    dend_2 { pt3dadd( 217.131, 468.354, 28.0, 0.3814 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 12/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 327.794, 375.727, 28.28, 0.3814 ) }
    dend_37 { pt3dadd( 328.243, 375.48, 28.4889, 0.4322 ) }
    dend_37 { pt3dadd( 328.775, 374.669, 29.5291, 0.356 ) }
    dend_37 { pt3dadd( 328.671, 374.356, 31.3818, 0.3814 ) }
    dend_37 { pt3dadd( 329.134, 373.476, 31.92, 0.4068 ) }
    dend_37 { pt3dadd( 329.271, 372.451, 32.2176, 0.5338 ) }
    dend_37 { pt3dadd( 330.011, 371.737, 33.1324, 0.5592 ) }
    dend_37 { pt3dadd( 330.945, 371.118, 33.32, 0.5848 ) }
    dend_37 { pt3dadd( 331.403, 370.537, 33.7296, 0.483 ) }
    dend_37 { pt3dadd( 331.431, 369.499, 33.847, 0.483 ) }
    dend_37 { pt3dadd( 331.41, 368.39, 33.7924, 0.483 ) }
    dend_37 { pt3dadd( 330.926, 367.484, 34.44, 0.5084 ) }
    dend_37 { pt3dadd( 330.674, 366.403, 34.839, 0.4322 ) }
    dend_37 { pt3dadd( 330.717, 365.337, 35.5491, 0.3304 ) }
    dend_37 { pt3dadd( 330.502, 364.326, 36.2132, 0.2796 ) }
    dend_37 { pt3dadd( 330.066, 363.719, 35.0115, 0.2796 ) }
    dend_37 { pt3dadd( 329.527, 362.858, 36.0828, 0.3304 ) }
    dend_37 { pt3dadd( 329.101, 362.348, 38.2687, 0.3814 ) }
    dend_37 { pt3dadd( 328.365, 361.808, 38.3583, 0.483 ) }
    dend_37 { pt3dadd( 327.647, 361.14, 38.6028, 0.5338 ) }
    dend_37 { pt3dadd( 326.785, 360.59, 38.5532, 0.5338 ) }
    dend_37 { pt3dadd( 325.966, 360.26, 39.3156, 0.4322 ) }
    dend_37 { pt3dadd( 325.354, 359.963, 39.48, 0.3814 ) }
    dend_37 { pt3dadd( 324.596, 359.226, 39.48, 0.3304 ) }
    dend_37 { pt3dadd( 323.595, 358.789, 39.4834, 0.3304 ) }
    dend_37 { pt3dadd( 323.583, 358.485, 41.4355, 0.2796 ) }
    dend_37 { pt3dadd( 322.951, 357.762, 41.16, 0.2796 ) }
    dend_37 { pt3dadd( 322.654, 357.157, 42.336, 0.3304 ) }
    dend_37 { pt3dadd( 322.033, 356.669, 43.68, 0.4068 ) }
    dend_37 { pt3dadd( 321.922, 355.538, 43.6122, 0.4576 ) }
    dend_37 { pt3dadd( 322.379, 354.989, 44.133, 0.4068 ) }
    dend_37 { pt3dadd( 322.223, 354.639, 46.4366, 0.3814 ) }
    dend_37 { pt3dadd( 321.509, 354.178, 47.4281, 0.3304 ) }
    dend_37 { pt3dadd( 321.109, 353.461, 49.0557, 0.3304 ) }
    dend_37 { pt3dadd( 320.771, 353.267, 51.4408, 0.2796 ) }
    dend_37 { pt3dadd( 319.748, 353.038, 51.8, 0.2796 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 48/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 327.794, 375.727, 28.28, 0.3814 ) }
    dend_34 { pt3dadd( 328.54, 375.621, 28.4964, 0.483 ) }
    dend_34 { pt3dadd( 329.355, 375.362, 29.5546, 0.5338 ) }
    dend_34 { pt3dadd( 330.23, 375.553, 30.5978, 0.5592 ) }
    dend_34 { pt3dadd( 331.194, 375.267, 31.8942, 0.5338 ) }
    dend_34 { pt3dadd( 332.004, 375.003, 30.6956, 0.5848 ) }
    dend_34 { pt3dadd( 332.976, 374.689, 30.0754, 0.5848 ) }
    dend_34 { pt3dadd( 333.936, 374.611, 29.9622, 0.5592 ) }
    dend_34 { pt3dadd( 335.025, 374.431, 30.3635, 0.5338 ) }
    dend_34 { pt3dadd( 335.715, 373.842, 31.2332, 0.5848 ) }
    dend_34 { pt3dadd( 336.71, 373.477, 30.5354, 0.6864 ) }
    dend_34 { pt3dadd( 337.518, 373.223, 30.7376, 0.6356 ) }
    dend_34 { pt3dadd( 338.546, 372.886, 30.6348, 0.5592 ) }
    dend_34 { pt3dadd( 339.622, 372.855, 30.3873, 0.4322 ) }
    dend_34 { pt3dadd( 340.604, 372.657, 29.9838, 0.4576 ) }
    dend_34 { pt3dadd( 341.141, 372.478, 28.2072, 0.4576 ) }
    dend_34 { pt3dadd( 341.663, 372.88, 27.72, 0.4576 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 65/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 265.675, 300.872, 34.5332, 0.661 ) }
    dend_25 { pt3dadd( 265.403, 300.21, 34.7141, 0.5338 ) }
    dend_25 { pt3dadd( 265.014, 299.336, 35.2612, 0.5084 ) }
    dend_25 { pt3dadd( 264.542, 298.33, 35.0022, 0.5592 ) }
    dend_25 { pt3dadd( 264.211, 297.678, 33.3169, 0.6102 ) }
    dend_25 { pt3dadd( 263.971, 296.944, 32.0051, 0.661 ) }
    dend_25 { pt3dadd( 263.641, 296.139, 33.0145, 0.661 ) }
    dend_25 { pt3dadd( 263.677, 295.098, 33.6196, 0.6102 ) }
    dend_25 { pt3dadd( 264.025, 294.275, 34.2286, 0.483 ) }
    dend_25 { pt3dadd( 264.035, 293.293, 33.3214, 0.4068 ) }
    dend_25 { pt3dadd( 264.273, 292.307, 33.532, 0.4068 ) }
    dend_25 { pt3dadd( 264.237, 291.451, 32.0158, 0.5338 ) }
    dend_25 { pt3dadd( 264.092, 290.427, 32.3109, 0.6356 ) }
    dend_25 { pt3dadd( 263.463, 289.713, 32.2, 0.6356 ) }
    dend_25 { pt3dadd( 263.344, 288.656, 32.48, 0.5848 ) }
    dend_25 { pt3dadd( 263.316, 287.896, 31.4336, 0.5592 ) }
    dend_25 { pt3dadd( 262.868, 287.126, 29.8343, 0.6102 ) }
    dend_25 { pt3dadd( 262.397, 286.253, 30.2599, 0.661 ) }
    dend_25 { pt3dadd( 261.706, 286.081, 31.92, 0.661 ) }
    dend_25 { pt3dadd( 261.263, 285.224, 31.2833, 0.5848 ) }
    dend_25 { pt3dadd( 260.561, 284.548, 30.24, 0.5084 ) }
    dend_25 { pt3dadd( 260.062, 283.98, 31.3284, 0.4576 ) }
    dend_25 { pt3dadd( 259.405, 283.272, 31.3894, 0.5084 ) }
    dend_25 { pt3dadd( 258.537, 282.642, 30.7597, 0.5848 ) }
    dend_25 { pt3dadd( 257.919, 281.884, 30.2347, 0.661 ) }
    dend_25 { pt3dadd( 257.4, 281.214, 29.4294, 0.661 ) }
    dend_25 { pt3dadd( 256.986, 280.428, 29.5809, 0.5592 ) }
    dend_25 { pt3dadd( 256.233, 279.937, 28.4547, 0.4576 ) }
    dend_25 { pt3dadd( 255.48, 279.454, 29.4, 0.4068 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 94/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 265.675, 300.872, 34.5332, 0.661 ) }
    dend_24 { pt3dadd( 265.637, 300.529, 35.56, 0.483 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 96/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 302.475, 340.314, 25.1966, 0.661 ) }
    dend_11 { pt3dadd( 301.756, 339.701, 25.1784, 0.4322 ) }
    dend_11 { pt3dadd( 300.72, 339.241, 25.0488, 0.483 ) }
    dend_11 { pt3dadd( 299.86, 338.553, 24.4076, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_11 { pt3dadd( 299.247, 337.613, 24.6694, 0.5848 ) }
    dend_11 { pt3dadd( 298.584, 336.703, 24.2603, 0.6102 ) }
    dend_11 { pt3dadd( 298.101, 335.669, 24.1738, 0.6356 ) }
    dend_11 { pt3dadd( 297.477, 334.724, 24.5151, 0.6864 ) }
    dend_11 { pt3dadd( 296.807, 333.827, 25.0947, 0.7372 ) }
    dend_11 { pt3dadd( 295.968, 333.055, 25.1944, 0.6864 ) }
    dend_11 { pt3dadd( 295.15, 332.255, 25.1891, 0.5592 ) }
    dend_11 { pt3dadd( 294.58, 331.266, 25.1412, 0.4322 ) }
    dend_11 { pt3dadd( 293.85, 330.394, 24.841, 0.4322 ) }
    dend_11 { pt3dadd( 292.928, 329.79, 24.1032, 0.5338 ) }
    dend_11 { pt3dadd( 291.912, 329.265, 24.0794, 0.5848 ) }
    dend_11 { pt3dadd( 291.095, 328.464, 24.0778, 0.5848 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 12/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 302.475, 340.314, 25.1966, 0.661 ) }
    dend_8 { pt3dadd( 302.63, 339.858, 26.0229, 0.6102 ) }
    dend_8 { pt3dadd( 302.506, 338.797, 25.7527, 0.5848 ) }
    dend_8 { pt3dadd( 302.257, 337.855, 25.8852, 0.5338 ) }
    dend_8 { pt3dadd( 302.359, 336.774, 26.4726, 0.483 ) }
    dend_8 { pt3dadd( 302.165, 335.712, 26.32, 0.4576 ) }
    dend_8 { pt3dadd( 302.099, 334.754, 25.76, 0.4576 ) }
    dend_8 { pt3dadd( 301.671, 333.778, 26.2718, 0.483 ) }
    dend_8 { pt3dadd( 301.673, 332.732, 25.7723, 0.5084 ) }
    dend_8 { pt3dadd( 301.558, 331.875, 26.01, 0.5592 ) }
    dend_8 { pt3dadd( 301.217, 330.909, 26.7624, 0.5848 ) }
    dend_8 { pt3dadd( 301.317, 329.866, 25.8532, 0.6356 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 24/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 341.663, 372.88, 27.72, 0.4576 ) }
    dend_36 { pt3dadd( 341.224, 372.557, 28.089, 0.3304 ) }
    dend_36 { pt3dadd( 340.34, 372.41, 28.9332, 0.4576 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 27/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 341.663, 372.88, 27.72, 0.4576 ) }
    dend_35 { pt3dadd( 342.119, 373.362, 27.72, 0.5848 ) }
    dend_35 { pt3dadd( 342.796, 374.051, 27.47, 0.6356 ) }
    dend_35 { pt3dadd( 343.707, 374.231, 28.3346, 0.6356 ) }
    dend_35 { pt3dadd( 344.44, 374.078, 27.4652, 0.6356 ) }
    dend_35 { pt3dadd( 345.201, 374.057, 26.1884, 0.7118 ) }
    dend_35 { pt3dadd( 345.603, 374.088, 24.6884, 0.788 ) }
    dend_35 { pt3dadd( 345.831, 374.738, 25.1006, 0.8136 ) }
    dend_35 { pt3dadd( 346.625, 375.003, 25.5178, 0.7626 ) }
    dend_35 { pt3dadd( 347.435, 375.392, 25.951, 0.7372 ) }
    dend_35 { pt3dadd( 348.325, 375.119, 24.9511, 0.7118 ) }
    dend_35 { pt3dadd( 349.376, 375.232, 24.64, 0.661 ) }
    dend_35 { pt3dadd( 349.721, 375.708, 23.2184, 0.5338 ) }
    dend_35 { pt3dadd( 350.334, 376.249, 23.3806, 0.4576 ) }
    dend_35 { pt3dadd( 351.11, 376.025, 22.3401, 0.4576 ) }
    dend_35 { pt3dadd( 351.929, 375.68, 23.0812, 0.5338 ) }
    dend_35 { pt3dadd( 352.789, 375.433, 21.9601, 0.5848 ) }
    dend_35 { pt3dadd( 353.83, 375.444, 21.0022, 0.5848 ) }
    dend_35 { pt3dadd( 354.653, 375.461, 21.4315, 0.5592 ) }
    dend_35 { pt3dadd( 355.753, 375.692, 21.28, 0.5338 ) }
    dend_35 { pt3dadd( 356.403, 376.336, 20.44, 0.5592 ) }
    dend_35 { pt3dadd( 357.36, 376.262, 20.1211, 0.5848 ) }
    dend_35 { pt3dadd( 358.403, 376.541, 20.4168, 0.5848 ) }
    dend_35 { pt3dadd( 358.959, 376.948, 19.04, 0.6102 ) }
    dend_35 { pt3dadd( 359.789, 377.419, 19.6935, 0.6356 ) }
    dend_35 { pt3dadd( 360.637, 377.52, 20.55, 0.6864 ) }
    dend_35 { pt3dadd( 361.681, 377.642, 20.1704, 0.6356 ) }
    dend_35 { pt3dadd( 362.767, 377.704, 20.2118, 0.5338 ) }
    dend_35 { pt3dadd( 363.631, 378.234, 19.6834, 0.4576 ) }
    dend_35 { pt3dadd( 364.269, 378.664, 19.0453, 0.4322 ) }
    dend_35 { pt3dadd( 365.105, 379.167, 20.1905, 0.5084 ) }
    dend_35 { pt3dadd( 365.899, 379.538, 19.4121, 0.5592 ) }
    dend_35 { pt3dadd( 366.585, 380.223, 19.1332, 0.6356 ) }
    dend_35 { pt3dadd( 367.144, 380.798, 20.44, 0.661 ) }
    dend_35 { pt3dadd( 367.857, 381.404, 19.3466, 0.6864 ) }
    dend_35 { pt3dadd( 368.439, 381.811, 20.44, 0.6864 ) }
    dend_35 { pt3dadd( 369.226, 382.427, 20.7158, 0.661 ) }
    dend_35 { pt3dadd( 370.028, 383.142, 20.713, 0.5848 ) }
    dend_35 { pt3dadd( 370.655, 383.987, 20.9905, 0.4576 ) }
    dend_35 { pt3dadd( 371.096, 384.956, 20.0603, 0.3814 ) }
    dend_35 { pt3dadd( 371.624, 385.907, 19.6862, 0.3814 ) }
    dend_35 { pt3dadd( 372.356, 386.71, 20.0836, 0.4322 ) }
    dend_35 { pt3dadd( 373.135, 387.511, 19.6006, 0.4322 ) }
    dend_35 { pt3dadd( 373.78, 388.248, 20.2082, 0.4068 ) }
    dend_35 { pt3dadd( 374.443, 389.151, 19.7098, 0.4322 ) }
    dend_35 { pt3dadd( 375.113, 390.057, 19.3166, 0.4576 ) }
    dend_35 { pt3dadd( 375.909, 390.781, 19.6, 0.4576 ) }
    dend_35 { pt3dadd( 376.83, 391.246, 19.1556, 0.356 ) }
    dend_35 { pt3dadd( 377.924, 391.495, 19.32, 0.3304 ) }
    dend_35 { pt3dadd( 379.052, 391.676, 19.32, 0.356 ) }
    dend_35 { pt3dadd( 380.18, 391.782, 19.516, 0.4322 ) }
    dend_35 { pt3dadd( 381.208, 391.716, 19.0711, 0.4068 ) }
    dend_35 { pt3dadd( 382.173, 391.766, 19.4855, 0.356 ) }
    dend_35 { pt3dadd( 383.246, 391.991, 20.2056, 0.3304 ) }
    dend_35 { pt3dadd( 384.382, 392.049, 20.454, 0.3814 ) }
    dend_35 { pt3dadd( 385.48, 391.977, 20.9412, 0.4322 ) }
    dend_35 { pt3dadd( 386.434, 392.026, 20.1698, 0.4576 ) }
    dend_35 { pt3dadd( 387.374, 392.56, 20.72, 0.4322 ) }
    dend_35 { pt3dadd( 388.283, 393.046, 20.3428, 0.4322 ) }
    dend_35 { pt3dadd( 389.233, 393.642, 19.9416, 0.4322 ) }
    dend_35 { pt3dadd( 390.11, 394.325, 20.3162, 0.5084 ) }
    dend_35 { pt3dadd( 391.133, 394.725, 20.8312, 0.5592 ) }
    dend_35 { pt3dadd( 392.013, 395.406, 20.9084, 0.5848 ) }
    dend_35 { pt3dadd( 393.076, 395.777, 21.1176, 0.5084 ) }
    dend_35 { pt3dadd( 394.04, 395.922, 21.1081, 0.3814 ) }
    dend_35 { pt3dadd( 395.119, 396.152, 21.3027, 0.305 ) }
    dend_35 { pt3dadd( 396.237, 396.282, 20.8933, 0.305 ) }
    dend_35 { pt3dadd( 397.342, 396.167, 21.28, 0.3814 ) }
    dend_35 { pt3dadd( 398.335, 396.008, 20.3633, 0.4068 ) }
    dend_35 { pt3dadd( 399.405, 395.718, 20.417, 0.3814 ) }
    dend_35 { pt3dadd( 400.193, 395.146, 19.6, 0.3304 ) }
    dend_35 { pt3dadd( 401.337, 395.138, 19.6, 0.305 ) }
    dend_35 { pt3dadd( 402.413, 394.807, 19.6, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_35 { pt3dadd( 403.339, 394.876, 20.6735, 0.305 ) }
    dend_35 { pt3dadd( 404.323, 394.333, 20.503, 0.356 ) }
    dend_35 { pt3dadd( 405.301, 393.761, 20.4666, 0.4068 ) }
    dend_35 { pt3dadd( 406.245, 393.368, 19.9531, 0.4322 ) }
    dend_35 { pt3dadd( 407.005, 393.193, 20.4142, 0.3814 ) }
    dend_35 { pt3dadd( 407.596, 393.153, 18.769, 0.3304 ) }
    dend_35 { pt3dadd( 408.543, 392.735, 18.4736, 0.305 ) }
    dend_35 { pt3dadd( 409.641, 392.951, 18.2, 0.3304 ) }
    dend_35 { pt3dadd( 410.785, 392.964, 18.177, 0.4068 ) }
    dend_35 { pt3dadd( 411.901, 393.075, 17.7422, 0.483 ) }
    dend_35 { pt3dadd( 412.92, 393.227, 18.2246, 0.483 ) }
    dend_35 { pt3dadd( 413.67, 393.351, 18.3546, 0.3814 ) }
    dend_35 { pt3dadd( 414.594, 393.307, 17.64, 0.3304 ) }
    dend_35 { pt3dadd( 415.732, 393.279, 17.5336, 0.3304 ) }
    dend_35 { pt3dadd( 416.839, 393.193, 17.801, 0.4322 ) }
    dend_35 { pt3dadd( 417.794, 393.422, 19.0028, 0.483 ) }
    dend_35 { pt3dadd( 418.665, 393.367, 17.7052, 0.5848 ) }
    dend_35 { pt3dadd( 419.747, 393.078, 17.9161, 0.5848 ) }
    dend_35 { pt3dadd( 420.828, 393.093, 17.6568, 0.5592 ) }
    dend_35 { pt3dadd( 421.728, 393.243, 18.4052, 0.4576 ) }
    dend_35 { pt3dadd( 422.709, 393.29, 17.4513, 0.4068 ) }
    dend_35 { pt3dadd( 423.561, 392.982, 17.9018, 0.3814 ) }
    dend_35 { pt3dadd( 424.638, 392.85, 17.92, 0.4068 ) }
    dend_35 { pt3dadd( 425.269, 392.664, 16.6939, 0.4576 ) }
    dend_35 { pt3dadd( 426.094, 392.164, 15.8841, 0.5338 ) }
    dend_35 { pt3dadd( 426.143, 391.407, 14.6555, 0.5848 ) }
    dend_35 { pt3dadd( 426.976, 390.853, 14.9456, 0.5848 ) }
    dend_35 { pt3dadd( 427.935, 390.454, 14.5032, 0.5338 ) }
    dend_35 { pt3dadd( 428.855, 390.065, 15.4031, 0.4322 ) }
    dend_35 { pt3dadd( 429.899, 389.99, 16.3702, 0.3814 ) }
    dend_35 { pt3dadd( 430.83, 390.218, 17.36, 0.3814 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 31/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 255.48, 279.454, 29.4, 0.4068 ) }
    dend_27 { pt3dadd( 255.062, 278.945, 29.9289, 0.5848 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 33/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 255.48, 279.454, 29.4, 0.4068 ) }
    dend_26 { pt3dadd( 255.209, 279.135, 29.9348, 0.5848 ) }
    dend_26 { pt3dadd( 254.654, 279.594, 30.8, 0.5338 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 36/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 291.095, 328.464, 24.0778, 0.5848 ) }
    dend_13 { pt3dadd( 290.403, 328.071, 22.5728, 0.356 ) }
    dend_13 { pt3dadd( 289.775, 328.012, 24.1357, 0.305 ) }
    dend_13 { pt3dadd( 288.813, 327.87, 24.6543, 0.2796 ) }
    dend_13 { pt3dadd( 288.288, 327.512, 23.602, 0.2796 ) }
    dend_13 { pt3dadd( 287.479, 327.184, 22.8407, 0.305 ) }
    dend_13 { pt3dadd( 286.726, 327.094, 21.0204, 0.305 ) }
    dend_13 { pt3dadd( 285.943, 326.606, 21.8238, 0.3304 ) }
    dend_13 { pt3dadd( 285.294, 326.475, 21.2932, 0.3814 ) }
    dend_13 { pt3dadd( 284.482, 326.057, 20.72, 0.4068 ) }
    dend_13 { pt3dadd( 283.52, 325.658, 21.28, 0.4068 ) }
    dend_13 { pt3dadd( 282.682, 324.943, 21.252, 0.356 ) }
    dend_13 { pt3dadd( 281.764, 324.484, 20.3174, 0.3304 ) }
    dend_13 { pt3dadd( 280.877, 323.802, 20.0189, 0.305 ) }
    dend_13 { pt3dadd( 279.904, 323.244, 20.0203, 0.305 ) }
    dend_13 { pt3dadd( 278.94, 322.837, 19.6031, 0.305 ) }
    dend_13 { pt3dadd( 278.07, 322.379, 18.7673, 0.2796 ) }
    dend_13 { pt3dadd( 276.952, 322.274, 18.48, 0.2542 ) }
    dend_13 { pt3dadd( 275.83, 322.15, 18.48, 0.2542 ) }
    dend_13 { pt3dadd( 274.903, 321.852, 18.48, 0.2796 ) }
    dend_13 { pt3dadd( 274.339, 321.02, 18.0141, 0.356 ) }
    dend_13 { pt3dadd( 273.343, 320.51, 17.64, 0.4322 ) }
    dend_13 { pt3dadd( 272.321, 320.034, 17.6308, 0.5338 ) }
    dend_13 { pt3dadd( 271.428, 319.42, 17.4751, 0.5592 ) }
    dend_13 { pt3dadd( 270.554, 318.776, 17.1772, 0.5592 ) }
    dend_13 { pt3dadd( 269.557, 318.368, 18.0026, 0.5338 ) }
    dend_13 { pt3dadd( 268.635, 318.114, 18.5111, 0.5084 ) }
    dend_13 { pt3dadd( 267.786, 318.374, 18.2311, 0.4576 ) }
    dend_13 { pt3dadd( 267.073, 317.803, 18.2185, 0.3814 ) }
    dend_13 { pt3dadd( 266.141, 317.665, 19.2688, 0.3304 ) }
    dend_13 { pt3dadd( 265.051, 317.574, 19.567, 0.2796 ) }
    dend_13 { pt3dadd( 263.929, 317.461, 19.32, 0.2796 ) }
    dend_13 { pt3dadd( 263.234, 317.122, 19.1408, 0.3304 ) }
    dend_13 { pt3dadd( 262.785, 316.216, 19.908, 0.4068 ) }
    dend_13 { pt3dadd( 262.434, 315.849, 18.5679, 0.4322 ) }
    dend_13 { pt3dadd( 261.651, 315.635, 17.5641, 0.4322 ) }
    dend_13 { pt3dadd( 260.864, 315.63, 17.08, 0.4576 ) }
    dend_13 { pt3dadd( 259.772, 315.635, 17.3732, 0.5338 ) }
    dend_13 { pt3dadd( 258.835, 315.182, 17.8254, 0.5592 ) }
    dend_13 { pt3dadd( 257.802, 314.92, 17.668, 0.5592 ) }
    dend_13 { pt3dadd( 256.833, 314.497, 17.9544, 0.6102 ) }
    dend_13 { pt3dadd( 255.891, 314.473, 16.6197, 0.6356 ) }
    dend_13 { pt3dadd( 254.98, 314.012, 17.0663, 0.661 ) }
    dend_13 { pt3dadd( 254.192, 313.57, 18.4369, 0.5848 ) }
    dend_13 { pt3dadd( 253.51, 312.897, 19.0089, 0.6102 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 291.095, 328.464, 24.0778, 0.5848 ) }
    dend_12 { pt3dadd( 290.394, 327.636, 24.0705, 0.661 ) }
    dend_12 { pt3dadd( 289.973, 326.575, 24.0218, 0.6864 ) }
    dend_12 { pt3dadd( 289.592, 325.508, 23.6622, 0.6102 ) }
    dend_12 { pt3dadd( 289.106, 324.474, 23.7756, 0.5084 ) }
    dend_12 { pt3dadd( 288.503, 323.505, 23.9355, 0.483 ) }
    dend_12 { pt3dadd( 287.985, 322.535, 23.1792, 0.5338 ) }
    dend_12 { pt3dadd( 287.433, 321.536, 22.9522, 0.5592 ) }
    dend_12 { pt3dadd( 286.892, 320.529, 22.9141, 0.5848 ) }
    dend_12 { pt3dadd( 286.212, 319.618, 22.7242, 0.5592 ) }
    dend_12 { pt3dadd( 285.334, 318.937, 22.0601, 0.5848 ) }
    dend_12 { pt3dadd( 284.548, 318.134, 21.6026, 0.5592 ) }
    dend_12 { pt3dadd( 284.064, 317.133, 20.9616, 0.6356 ) }
    dend_12 { pt3dadd( 283.675, 316.061, 20.7477, 0.6864 ) }
    dend_12 { pt3dadd( 283.253, 315.01, 20.9504, 0.7372 ) }
    dend_12 { pt3dadd( 282.751, 314.131, 21.5046, 0.6356 ) }
    dend_12 { pt3dadd( 282.099, 313.679, 20.1116, 0.5338 ) }
    dend_12 { pt3dadd( 281.141, 313.151, 19.8066, 0.483 ) }
    dend_12 { pt3dadd( 280.511, 312.986, 18.4475, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_12 { pt3dadd( 279.988, 312.434, 20.0788, 0.6102 ) }
    dend_12 { pt3dadd( 279.173, 311.873, 19.88, 0.6356 ) }
    dend_12 { pt3dadd( 278.209, 311.346, 19.4373, 0.6102 ) }
    dend_12 { pt3dadd( 277.233, 310.874, 19.6932, 0.6102 ) }
    dend_12 { pt3dadd( 276.258, 310.342, 19.3332, 0.5848 ) }
    dend_12 { pt3dadd( 275.451, 309.745, 19.7425, 0.5848 ) }
    dend_12 { pt3dadd( 274.909, 308.976, 18.7628, 0.6102 ) }
    dend_12 { pt3dadd( 274.761, 307.982, 18.7228, 0.661 ) }
    dend_12 { pt3dadd( 273.995, 307.496, 18.8647, 0.6864 ) }
    dend_12 { pt3dadd( 273.514, 306.79, 19.5331, 0.661 ) }
    dend_12 { pt3dadd( 272.74, 306.137, 19.32, 0.6356 ) }
    dend_12 { pt3dadd( 272.409, 305.38, 18.76, 0.5848 ) }
    dend_12 { pt3dadd( 271.516, 304.831, 18.6668, 0.5338 ) }
    dend_12 { pt3dadd( 270.834, 304.375, 18.5816, 0.483 ) }
    dend_12 { pt3dadd( 270.708, 303.544, 17.3958, 0.4322 ) }
    dend_12 { pt3dadd( 270.714, 302.454, 17.08, 0.4322 ) }
    dend_12 { pt3dadd( 270.556, 301.674, 18.9095, 0.4322 ) }
    dend_12 { pt3dadd( 270.217, 300.833, 19.88, 0.483 ) }
    dend_12 { pt3dadd( 270.966, 300.253, 19.3606, 0.5338 ) }
    dend_12 { pt3dadd( 271.01, 299.392, 18.7132, 0.661 ) }
    dend_12 { pt3dadd( 270.832, 298.434, 18.4951, 0.7372 ) }
    dend_12 { pt3dadd( 270.74, 297.407, 18.2034, 0.7372 ) }
    dend_12 { pt3dadd( 269.966, 296.743, 17.8536, 0.6102 ) }
    dend_12 { pt3dadd( 269.574, 295.766, 17.6047, 0.5084 ) }
    dend_12 { pt3dadd( 269.527, 294.842, 17.9556, 0.483 ) }
    dend_12 { pt3dadd( 268.708, 294.572, 17.1433, 0.5084 ) }
    dend_12 { pt3dadd( 268.162, 294.011, 16.5211, 0.5338 ) }
    dend_12 { pt3dadd( 267.25, 293.57, 16.3058, 0.5848 ) }
    dend_12 { pt3dadd( 266.287, 293.381, 16.2333, 0.5848 ) }
    dend_12 { pt3dadd( 265.771, 292.514, 16.1266, 0.5848 ) }
    dend_12 { pt3dadd( 265.272, 291.593, 16.7759, 0.483 ) }
    dend_12 { pt3dadd( 264.607, 290.805, 17.08, 0.4576 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 32/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 301.317, 329.866, 25.8532, 0.6356 ) }
    dend_10 { pt3dadd( 301.78, 329.24, 25.1208, 0.5338 ) }
    dend_10 { pt3dadd( 302.629, 328.605, 25.1552, 0.6102 ) }
    dend_10 { pt3dadd( 303.073, 327.857, 23.6205, 0.661 ) }
    dend_10 { pt3dadd( 303.306, 326.908, 23.9865, 0.7118 ) }
    dend_10 { pt3dadd( 303.692, 326.082, 23.6636, 0.6356 ) }
    dend_10 { pt3dadd( 304.071, 325.332, 23.5407, 0.5592 ) }
    dend_10 { pt3dadd( 304.507, 324.346, 23.8202, 0.4322 ) }
    dend_10 { pt3dadd( 304.855, 323.37, 22.9236, 0.3814 ) }
    dend_10 { pt3dadd( 304.321, 322.476, 22.5865, 0.4322 ) }
    dend_10 { pt3dadd( 304.068, 321.672, 22.3101, 0.6102 ) }
    dend_10 { pt3dadd( 304.533, 320.97, 21.7448, 0.7626 ) }
    dend_10 { pt3dadd( 304.915, 320.01, 22.6696, 0.7626 ) }
    dend_10 { pt3dadd( 304.966, 318.94, 22.0805, 0.6356 ) }
    dend_10 { pt3dadd( 305.387, 317.923, 21.56, 0.5338 ) }
    dend_10 { pt3dadd( 305.757, 316.848, 21.7216, 0.5848 ) }
    dend_10 { pt3dadd( 305.908, 315.833, 21.6532, 0.7118 ) }
    dend_10 { pt3dadd( 305.762, 314.84, 21.56, 0.7626 ) }
    dend_10 { pt3dadd( 305.704, 314.009, 20.1015, 0.6864 ) }
    dend_10 { pt3dadd( 305.723, 312.95, 19.8926, 0.6356 ) }
    dend_10 { pt3dadd( 306.324, 312.16, 19.6, 0.6864 ) }
    dend_10 { pt3dadd( 306.694, 311.136, 20.102, 0.788 ) }
    dend_10 { pt3dadd( 306.478, 310.048, 19.6238, 0.7626 ) }
    dend_10 { pt3dadd( 306.273, 309.175, 18.7606, 0.6864 ) }
    dend_10 { pt3dadd( 305.954, 308.591, 17.3617, 0.6102 ) }
    dend_10 { pt3dadd( 306.227, 307.728, 18.4929, 0.6356 ) }
    dend_10 { pt3dadd( 306.3, 307.157, 19.88, 0.6356 ) }
    dend_10 { pt3dadd( 306.22, 306.238, 19.4522, 0.661 ) }
    dend_10 { pt3dadd( 305.832, 305.472, 18.692, 0.6102 ) }
    dend_10 { pt3dadd( 306.054, 304.648, 17.0626, 0.5338 ) }
    dend_10 { pt3dadd( 305.913, 303.733, 16.1081, 0.3814 ) }
    dend_10 { pt3dadd( 306.328, 303.233, 17.9668, 0.2796 ) }
    dend_10 { pt3dadd( 306.503, 302.392, 17.1954, 0.2796 ) }
    dend_10 { pt3dadd( 306.685, 301.624, 15.4, 0.3814 ) }
    dend_10 { pt3dadd( 306.478, 300.54, 14.8081, 0.5338 ) }
    dend_10 { pt3dadd( 306.402, 299.542, 13.7206, 0.6356 ) }
    dend_10 { pt3dadd( 306.648, 298.471, 14.2313, 0.6864 ) }
    dend_10 { pt3dadd( 307.155, 297.498, 13.6046, 0.6864 ) }
    dend_10 { pt3dadd( 307.508, 296.428, 13.433, 0.661 ) }
    dend_10 { pt3dadd( 308.039, 295.703, 14.5746, 0.5848 ) }
    dend_10 { pt3dadd( 308.126, 294.73, 15.6968, 0.483 ) }
    dend_10 { pt3dadd( 308.317, 294.387, 18.051, 0.3814 ) }
    dend_10 { pt3dadd( 308.538, 293.827, 18.3327, 0.3304 ) }
    dend_10 { pt3dadd( 308.648, 293.04, 19.8005, 0.2796 ) }
    dend_10 { pt3dadd( 308.994, 292.178, 19.32, 0.2542 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 77/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 301.317, 329.866, 25.8532, 0.6356 ) }
    dend_9 { pt3dadd( 300.914, 329.161, 26.6, 0.2288 ) }
    dend_9 { pt3dadd( 300.935, 328.119, 25.6236, 0.2542 ) }
    dend_9 { pt3dadd( 300.986, 327.012, 25.0527, 0.2796 ) }
    dend_9 { pt3dadd( 300.976, 325.871, 24.92, 0.356 ) }
    dend_9 { pt3dadd( 300.752, 324.961, 26.04, 0.4068 ) }
    dend_9 { pt3dadd( 300.123, 324.221, 25.48, 0.483 ) }
    dend_9 { pt3dadd( 300.071, 323.166, 25.8308, 0.483 ) }
    dend_9 { pt3dadd( 300.024, 322.06, 25.9627, 0.5338 ) }
    dend_9 { pt3dadd( 300.19, 320.969, 26.1288, 0.5848 ) }
    dend_9 { pt3dadd( 300.49, 319.991, 25.2162, 0.6356 ) }
    dend_9 { pt3dadd( 300.745, 318.926, 24.6338, 0.5848 ) }
    dend_9 { pt3dadd( 301.181, 317.891, 24.36, 0.483 ) }
    dend_9 { pt3dadd( 301.387, 316.806, 24.08, 0.4576 ) }
    dend_9 { pt3dadd( 301.372, 315.877, 25.3949, 0.5084 ) }
    dend_9 { pt3dadd( 301.143, 314.78, 25.7961, 0.6102 ) }
    dend_9 { pt3dadd( 300.904, 313.69, 26.2492, 0.661 ) }
    dend_9 { pt3dadd( 300.532, 312.766, 27.1765, 0.661 ) }
    dend_9 { pt3dadd( 299.951, 311.958, 26.7476, 0.6356 ) }
    dend_9 { pt3dadd( 299.527, 311.237, 27.16, 0.5848 ) }
    dend_9 { pt3dadd( 298.728, 310.578, 26.3374, 0.5848 ) }
    dend_9 { pt3dadd( 297.971, 309.961, 26.717, 0.5338 ) }
    dend_9 { pt3dadd( 297.422, 309.069, 26.2268, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_9 { pt3dadd( 297.199, 308.204, 25.4047, 0.483 ) }
    dend_9 { pt3dadd( 296.596, 307.363, 25.2, 0.483 ) }
    dend_9 { pt3dadd( 296.465, 306.382, 25.5682, 0.4322 ) }
    dend_9 { pt3dadd( 296.007, 305.514, 26.04, 0.3814 ) }
    dend_9 { pt3dadd( 295.493, 304.669, 26.7464, 0.3304 ) }
    dend_9 { pt3dadd( 294.808, 303.978, 26.1408, 0.2796 ) }
    dend_9 { pt3dadd( 294.157, 303.483, 26.7235, 0.2542 ) }
    dend_9 { pt3dadd( 294.129, 302.641, 28.2878, 0.2542 ) }
    dend_9 { pt3dadd( 294.237, 301.574, 28.1999, 0.3304 ) }
    dend_9 { pt3dadd( 293.837, 301.165, 26.32, 0.4322 ) }
    dend_9 { pt3dadd( 293.015, 300.49, 26.6, 0.5084 ) }
    dend_9 { pt3dadd( 293.093, 299.396, 27.0323, 0.5338 ) }
    dend_9 { pt3dadd( 293.021, 298.343, 26.6, 0.5592 ) }
    dend_9 { pt3dadd( 292.9, 297.28, 26.9385, 0.6356 ) }
    dend_9 { pt3dadd( 292.789, 296.21, 27.4229, 0.661 ) }
    dend_9 { pt3dadd( 292.513, 295.206, 26.9578, 0.661 ) }
    dend_9 { pt3dadd( 291.962, 294.57, 27.72, 0.5592 ) }
    dend_9 { pt3dadd( 291.451, 293.708, 27.44, 0.5592 ) }
    dend_9 { pt3dadd( 291.247, 292.649, 27.9812, 0.5084 ) }
    dend_9 { pt3dadd( 291.235, 291.776, 26.7338, 0.5084 ) }
    dend_9 { pt3dadd( 291.908, 291.72, 25.48, 0.4322 ) }
    dend_9 { pt3dadd( 292.307, 291.236, 23.9173, 0.4576 ) }
    dend_9 { pt3dadd( 291.978, 290.194, 24.0724, 0.5084 ) }
    dend_9 { pt3dadd( 291.825, 289.5, 25.5035, 0.5592 ) }
    dend_9 { pt3dadd( 292.29, 288.753, 25.48, 0.5338 ) }
    dend_9 { pt3dadd( 292.349, 287.769, 26.1618, 0.483 ) }
    dend_9 { pt3dadd( 292.17, 286.847, 26.2441, 0.483 ) }
    dend_9 { pt3dadd( 292.406, 286.22, 26.5037, 0.483 ) }
    dend_9 { pt3dadd( 292.406, 285.509, 25.0272, 0.483 ) }
    dend_9 { pt3dadd( 292.521, 284.413, 24.64, 0.483 ) }
    dend_9 { pt3dadd( 292.893, 283.746, 25.8023, 0.5848 ) }
    dend_9 { pt3dadd( 293.001, 283.143, 27.8916, 0.661 ) }
    dend_9 { pt3dadd( 293.159, 282.105, 27.8317, 0.7118 ) }
    dend_9 { pt3dadd( 292.841, 281.546, 28.7456, 0.661 ) }
    dend_9 { pt3dadd( 292.676, 281.057, 30.2599, 0.6356 ) }
    dend_9 { pt3dadd( 293.044, 280.15, 31.0741, 0.5848 ) }
    dend_9 { pt3dadd( 293.538, 279.335, 30.5595, 0.5592 ) }
    dend_9 { pt3dadd( 294.025, 278.604, 31.1926, 0.5592 ) }
    dend_9 { pt3dadd( 294.927, 278.038, 31.309, 0.5848 ) }
    dend_9 { pt3dadd( 295.822, 277.496, 30.8216, 0.5848 ) }
    dend_9 { pt3dadd( 296.807, 277.002, 30.8904, 0.5338 ) }
    dend_9 { pt3dadd( 297.843, 276.727, 30.52, 0.4576 ) }
    dend_9 { pt3dadd( 298.482, 276.371, 31.08, 0.4322 ) }
    dend_9 { pt3dadd( 299.302, 275.765, 31.08, 0.4068 ) }
    dend_9 { pt3dadd( 299.803, 274.955, 31.0453, 0.4322 ) }
    dend_9 { pt3dadd( 300.036, 275.115, 29.0368, 0.3814 ) }
    dend_9 { pt3dadd( 300.505, 274.477, 27.8421, 0.3814 ) }
    dend_9 { pt3dadd( 300.758, 274.242, 29.6722, 0.3304 ) }
    dend_9 { pt3dadd( 300.793, 273.467, 30.5452, 0.3304 ) }
    dend_9 { pt3dadd( 300.643, 273.002, 28.6852, 0.2796 ) }
    dend_9 { pt3dadd( 301.068, 272.844, 26.9069, 0.2542 ) }
    dend_9 { pt3dadd( 301.317, 271.967, 26.1671, 0.2288 ) }
    dend_9 { pt3dadd( 301.558, 271.412, 26.6, 0.2542 ) }
    dend_9 { pt3dadd( 301.644, 270.283, 26.6596, 0.305 ) }
    dend_9 { pt3dadd( 301.673, 269.217, 27.4072, 0.3814 ) }
    dend_9 { pt3dadd( 301.834, 268.831, 29.7044, 0.4068 ) }
    dend_9 { pt3dadd( 302.661, 268.293, 30.42, 0.3814 ) }
    dend_9 { pt3dadd( 303.581, 267.72, 30.5497, 0.305 ) }
    dend_9 { pt3dadd( 304.499, 267.309, 29.8306, 0.2542 ) }
    dend_9 { pt3dadd( 305.572, 266.958, 29.6887, 0.2288 ) }
    dend_9 { pt3dadd( 306.563, 266.474, 29.4, 0.2542 ) }
    dend_9 { pt3dadd( 306.948, 265.798, 30.24, 0.2796 ) }
    dend_9 { pt3dadd( 307.64, 264.919, 30.24, 0.3304 ) }
    dend_9 { pt3dadd( 308.079, 264.034, 30.2403, 0.3814 ) }
    dend_9 { pt3dadd( 308.759, 263.22, 30.7994, 0.4576 ) }
    dend_9 { pt3dadd( 309.633, 262.741, 29.9695, 0.5338 ) }
    dend_9 { pt3dadd( 310.596, 262.319, 30.24, 0.5848 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 67/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 255.062, 278.945, 29.9289, 0.5848 ) }
    dend_29 { pt3dadd( 254.499, 278.086, 29.4, 0.4322 ) }
    dend_29 { pt3dadd( 254.204, 277.051, 29.0338, 0.4576 ) }
    dend_29 { pt3dadd( 253.943, 276.063, 29.1939, 0.4322 ) }
    dend_29 { pt3dadd( 253.583, 275.081, 29.6388, 0.356 ) }
    dend_29 { pt3dadd( 253.51, 274.095, 28.84, 0.2796 ) }
    dend_29 { pt3dadd( 253.51, 272.952, 28.84, 0.2542 ) }
    dend_29 { pt3dadd( 253.141, 271.887, 28.8534, 0.2796 ) }
    dend_29 { pt3dadd( 252.544, 270.935, 28.5692, 0.3304 ) }
    dend_29 { pt3dadd( 252.252, 269.929, 28.28, 0.356 ) }
    dend_29 { pt3dadd( 252.576, 268.951, 28.273, 0.3814 ) }
    dend_29 { pt3dadd( 252.599, 267.963, 28.7207, 0.356 ) }
    dend_29 { pt3dadd( 252.71, 266.986, 28.3861, 0.3304 ) }
    dend_29 { pt3dadd( 252.186, 266.155, 28.28, 0.305 ) }
    dend_29 { pt3dadd( 251.44, 265.382, 28.28, 0.305 ) }
    dend_29 { pt3dadd( 250.368, 265.065, 28.2072, 0.305 ) }
    dend_29 { pt3dadd( 249.259, 265.268, 28.0101, 0.3304 ) }
    dend_29 { pt3dadd( 248.342, 265.283, 27.2443, 0.4068 ) }
    dend_29 { pt3dadd( 247.699, 264.496, 27.4792, 0.4576 ) }
    dend_29 { pt3dadd( 247.02, 263.869, 26.9744, 0.4576 ) }
    dend_29 { pt3dadd( 246.27, 263.034, 27.2429, 0.356 ) }
    dend_29 { pt3dadd( 245.327, 262.55, 28.0, 0.3304 ) }
    dend_29 { pt3dadd( 244.592, 261.986, 27.1821, 0.356 ) }
    dend_29 { pt3dadd( 243.715, 261.728, 27.0357, 0.4576 ) }
    dend_29 { pt3dadd( 243.299, 260.948, 26.0495, 0.483 ) }
    dend_29 { pt3dadd( 243.214, 260.175, 26.4396, 0.483 ) }
    dend_29 { pt3dadd( 242.93, 259.319, 26.5426, 0.4322 ) }
    dend_29 { pt3dadd( 242.442, 258.506, 25.9938, 0.4068 ) }
    dend_29 { pt3dadd( 242.182, 257.472, 25.48, 0.356 ) }
    dend_29 { pt3dadd( 241.942, 256.381, 25.9484, 0.356 ) }
    dend_29 { pt3dadd( 241.568, 255.365, 26.2539, 0.356 ) }
    dend_29 { pt3dadd( 240.873, 254.482, 26.6224, 0.4068 ) }
    dend_29 { pt3dadd( 240.121, 253.699, 26.7128, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_29 { pt3dadd( 239.622, 252.8, 26.7966, 0.4576 ) }
    dend_29 { pt3dadd( 239.503, 251.741, 26.4695, 0.4322 ) }
    dend_29 { pt3dadd( 239.563, 250.607, 26.6647, 0.3814 ) }
    dend_29 { pt3dadd( 239.547, 249.464, 26.6, 0.305 ) }
    dend_29 { pt3dadd( 239.103, 248.469, 27.0866, 0.2542 ) }
    dend_29 { pt3dadd( 238.389, 247.629, 27.44, 0.2288 ) }
    dend_29 { pt3dadd( 237.751, 246.757, 27.44, 0.2542 ) }
    dend_29 { pt3dadd( 237.572, 245.636, 27.44, 0.305 ) }
    dend_29 { pt3dadd( 236.964, 244.813, 27.7875, 0.3814 ) }
    dend_29 { pt3dadd( 236.735, 243.892, 28.338, 0.4322 ) }
    dend_29 { pt3dadd( 236.236, 243.106, 28.716, 0.4576 ) }
    dend_29 { pt3dadd( 235.691, 242.387, 29.461, 0.4322 ) }
    dend_29 { pt3dadd( 234.805, 241.956, 28.6479, 0.4068 ) }
    dend_29 { pt3dadd( 233.766, 241.762, 28.56, 0.3814 ) }
    dend_29 { pt3dadd( 232.939, 241.123, 28.8002, 0.4068 ) }
    dend_29 { pt3dadd( 231.975, 240.568, 28.3027, 0.4068 ) }
    dend_29 { pt3dadd( 231.054, 239.897, 28.222, 0.3814 ) }
    dend_29 { pt3dadd( 230.088, 239.373, 28.2402, 0.305 ) }
    dend_29 { pt3dadd( 229.486, 238.597, 28.56, 0.2796 ) }
    dend_29 { pt3dadd( 229.063, 237.574, 28.56, 0.305 ) }
    dend_29 { pt3dadd( 228.356, 236.682, 28.56, 0.356 ) }
    dend_29 { pt3dadd( 227.874, 236.013, 27.5131, 0.356 ) }
    dend_29 { pt3dadd( 227.427, 235.124, 28.28, 0.305 ) }
    dend_29 { pt3dadd( 227.22, 234.057, 28.28, 0.2542 ) }
    dend_29 { pt3dadd( 226.97, 233.077, 28.28, 0.2542 ) }
    dend_29 { pt3dadd( 226.795, 232.019, 28.28, 0.305 ) }
    dend_29 { pt3dadd( 225.956, 231.66, 27.1432, 0.356 ) }
    dend_29 { pt3dadd( 226.057, 230.89, 27.3364, 0.356 ) }
    dend_29 { pt3dadd( 225.826, 229.847, 27.72, 0.305 ) }
    dend_29 { pt3dadd( 225.826, 228.703, 27.72, 0.2542 ) }
    dend_29 { pt3dadd( 225.826, 227.559, 27.72, 0.2542 ) }
    dend_29 { pt3dadd( 225.711, 226.433, 27.9947, 0.2796 ) }
    dend_29 { pt3dadd( 225.498, 225.548, 28.4824, 0.305 ) }
    dend_29 { pt3dadd( 225.699, 224.566, 28.285, 0.3304 ) }
    dend_29 { pt3dadd( 225.711, 223.423, 28.28, 0.3814 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 35/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 255.062, 278.945, 29.9289, 0.5848 ) }
    dend_28 { pt3dadd( 254.042, 278.573, 29.0458, 0.4322 ) }
    dend_28 { pt3dadd( 253.211, 278.326, 29.1578, 0.3814 ) }
    dend_28 { pt3dadd( 252.426, 277.652, 28.5659, 0.3304 ) }
    dend_28 { pt3dadd( 252.365, 276.859, 27.72, 0.305 ) }
    dend_28 { pt3dadd( 251.679, 276.119, 27.587, 0.305 ) }
    dend_28 { pt3dadd( 251.108, 275.238, 27.6749, 0.3304 ) }
    dend_28 { pt3dadd( 250.983, 274.136, 27.1768, 0.3304 ) }
    dend_28 { pt3dadd( 250.158, 273.53, 26.8562, 0.3304 ) }
    dend_28 { pt3dadd( 249.385, 273.16, 26.1033, 0.2796 ) }
    dend_28 { pt3dadd( 248.733, 273.413, 27.44, 0.2542 ) }
    dend_28 { pt3dadd( 247.605, 273.405, 27.1631, 0.2796 ) }
    dend_28 { pt3dadd( 246.878, 272.998, 28.56, 0.3304 ) }
    dend_28 { pt3dadd( 245.822, 272.822, 27.83, 0.3814 ) }
    dend_28 { pt3dadd( 244.778, 272.844, 26.88, 0.3814 ) }
    dend_28 { pt3dadd( 243.635, 272.875, 26.9052, 0.4068 ) }
    dend_28 { pt3dadd( 242.605, 273.143, 27.0446, 0.4576 ) }
    dend_28 { pt3dadd( 241.582, 273.151, 27.4898, 0.4576 ) }
    dend_28 { pt3dadd( 240.867, 272.572, 27.5058, 0.4068 ) }
    dend_28 { pt3dadd( 240.456, 272.156, 26.2601, 0.305 ) }
    dend_28 { pt3dadd( 239.444, 272.043, 25.76, 0.2796 ) }
    dend_28 { pt3dadd( 238.797, 271.929, 27.3535, 0.2796 ) }
    dend_28 { pt3dadd( 238.122, 271.268, 27.6744, 0.305 ) }
    dend_28 { pt3dadd( 237.354, 271.357, 26.3194, 0.305 ) }
    dend_28 { pt3dadd( 236.807, 270.969, 25.1166, 0.305 ) }
    dend_28 { pt3dadd( 236.703, 270.67, 27.0304, 0.305 ) }
    dend_28 { pt3dadd( 236.35, 269.929, 28.4668, 0.2796 ) }
    dend_28 { pt3dadd( 236.32, 268.824, 28.8728, 0.305 ) }
    dend_28 { pt3dadd( 235.683, 268.049, 28.2523, 0.356 ) }
    dend_28 { pt3dadd( 235.584, 267.206, 27.1216, 0.483 ) }
    dend_28 { pt3dadd( 236.122, 266.438, 27.16, 0.5592 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 66/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 253.51, 312.897, 19.0089, 0.6102 ) }
    dend_15 { pt3dadd( 252.618, 312.541, 16.998, 0.5592 ) }
    dend_15 { pt3dadd( 251.757, 312.414, 16.9548, 0.5592 ) }
    dend_15 { pt3dadd( 251.332, 312.71, 18.2, 0.483 ) }
    dend_15 { pt3dadd( 250.396, 312.346, 17.1422, 0.4068 ) }
    dend_15 { pt3dadd( 249.781, 311.634, 16.4004, 0.4068 ) }
    dend_15 { pt3dadd( 249.632, 310.929, 16.7597, 0.4576 ) }
    dend_15 { pt3dadd( 249.075, 310.71, 16.2016, 0.483 ) }
    dend_15 { pt3dadd( 248.301, 310.474, 15.9664, 0.5084 ) }
    dend_15 { pt3dadd( 247.669, 309.91, 16.7026, 0.483 ) }
    dend_15 { pt3dadd( 247.012, 309.589, 18.4528, 0.5084 ) }
    dend_15 { pt3dadd( 246.164, 309.391, 19.6, 0.483 ) }
    dend_15 { pt3dadd( 246.278, 308.899, 17.7568, 0.4576 ) }
    dend_15 { pt3dadd( 246.646, 308.512, 16.4433, 0.4068 ) }
    dend_15 { pt3dadd( 246.047, 308.043, 15.7161, 0.356 ) }
    dend_15 { pt3dadd( 245.846, 307.775, 17.827, 0.3304 ) }
    dend_15 { pt3dadd( 246.074, 307.05, 17.92, 0.305 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 83/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 253.51, 312.897, 19.0089, 0.6102 ) }
    dend_14 { pt3dadd( 253.053, 312.77, 18.2, 0.3304 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_31, dend_20, dend_5, dend_0, dend_39, dend_32, dend_22, dend_21, dend_17, dend_6, dend_4, dend_1, dend_38, dend_33, dend_30, dend_23, dend_19, dend_18, dend_16, dend_7, dend_3, dend_2, dend_37, dend_34, dend_25, dend_24, dend_11, dend_8, dend_36, dend_35, dend_27, dend_26, dend_13, dend_12, dend_10, dend_9, dend_29, dend_28, dend_15, dend_14]}
    dend = new SectionList()
    dend_31 dend.append()
    dend_20 dend.append()
    dend_5 dend.append()
    dend_0 dend.append()
    dend_39 dend.append()
    dend_32 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_17 dend.append()
    dend_6 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()
    dend_38 dend.append()
    dend_33 dend.append()
    dend_30 dend.append()
    dend_23 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_16 dend.append()
    dend_7 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_37 dend.append()
    dend_34 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_11 dend.append()
    dend_8 dend.append()
    dend_36 dend.append()
    dend_35 dend.append()
    dend_27 dend.append()
    dend_26 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_10 dend.append()
    dend_9 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_7457, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_7457 = new SectionList()
    soma_0 OneSecGrp_SectionRef_7457.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_32, dend_32, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_26, dend_26, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.94  // units: uF/cm2
    forsec axon cm = 1.94  // units: uF/cm2
    forsec dend cm = 1.94  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 138.98999  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 3.035703E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.052161474  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 0.0033126476  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.019206276  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 1.2128893  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 1.4016011E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.0011153668  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.04815267  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 5.8689405E-4  // units: S cm-2
        e_pas_nml2 = -88.233635  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 9.617982E-4  // units: S cm-2
        e_pas_nml2 = -88.233635  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 4.1690836E-7  // units: S cm-2
        e_pas_nml2 = -88.233635  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 0.0  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 7
    dend_17 nseg = 3
    dend_4 nseg = 3
    dend_30 nseg = 3
    dend_23 nseg = 5
    dend_19 nseg = 3
    dend_3 nseg = 5
    dend_2 nseg = 7
    dend_37 nseg = 3
    dend_35 nseg = 7
    dend_13 nseg = 3
    dend_12 nseg = 3
    dend_10 nseg = 3
    dend_9 nseg = 5
    dend_29 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_473862421


